FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Jorgensen, M
AF Jorgensen, Magne
TI The influence of selection bias on effort overruns in software
   development projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Effort estimation; Effort overrun; Selection bias; Winner's curse
ID IMPACT; MAINTENANCE
AB Context: A potentially important, but neglected, reason for effort overruns in software projects is related to selection bias. Selection bias-induced effort overruns occur when proposals are more likely to be accepted and lead to actual projects when based on effort estimates that are too low rather than on realistic estimates or estimates that are too high. The effect of this bias may be particularly important in bidding rounds, but is potentially relevant in all situations where there is effort or cost-based selection between alternatives.
   Objective: To better understand the relevance and management of selection bias effects in software development contexts.
   Method: First, we present a statistical model illustrating the relation between selection bias in bidding and other contexts and effort overruns. Then, we examine this relation in an experiment with software professionals who estimated and completed a set of development tasks and examine relevant field study evidence. Finally, we use a selection bias scenario to assess awareness of the effect of selection bias among software providers.
   Results: The results from the statistical model and the experiment demonstrated that selection bias is capable of explaining much of the effort overruns. The field evidence was also consistent with a substantial effect of selection bias on effort overruns, although there are alternative explanations for the findings. We found a low awareness of selection bias among the software providers.
   Conclusion: Selection bias is likely to be an important source of effort overruns and should be addressed to reduce problems related to over-optimistic effort estimates. (c) 2013 Elsevier B.V. All rights reserved.
C1 [Jorgensen, Magne] Univ Oslo, Simula Res Lab, N-0316 Oslo, Norway.
   [Jorgensen, Magne] Univ Oslo, Inst Informat, N-0316 Oslo, Norway.
C3 University of Oslo; University of Oslo
RP Jorgensen, M (corresponding author), Univ Oslo, Simula Res Lab, N-0316 Oslo, Norway.
EM magnej@simula.no
RI Jorgensen, Magne/H-4402-2016
CR Anda BCD, 2009, IEEE T SOFTWARE ENG, V35, P407, DOI 10.1109/TSE.2008.89
   [Anonymous], 1972, The dependability of behavioural measurements: Theory of generalizability for scores and profiles
   [Anonymous], INT S EMP SOFTW ENG
   Bapna R., 2010, 11 INT C WEB INF SYS
   BAZERMAN MH, 1983, J CONFLICT RESOLUT, V27, P618, DOI 10.1177/0022002783027004003
   Bucciol A., 2011, 129 U PAD
   Campbell DT., 1999, PRIMER REGRESSION AR
   Chen M, 2009, SPE J, V14, P216, DOI 10.2118/107710-PA
   Chong E., AUCTION VERSUS NEGOT
   Connolly T, 1997, MANAGE SCI, V43, P1029, DOI 10.1287/mnsc.43.7.1029
   Flyvbjerg B, 2004, TRANSPORT REV, V24, P3, DOI 10.1080/0144164032000080494a
   Halkjelsvik T, 2012, PSYCHOL BULL, V138, P238, DOI 10.1037/a0025996
   HARRISON JR, 1984, ADMIN SCI QUART, V29, P26, DOI 10.2307/2393078
   Hatton L, 2007, COMPUTER, V40, P64, DOI 10.1109/MC.2007.58
   Hill J., 2000, International Journal of Project Management, V18, P13, DOI 10.1016/S0263-7863(98)00062-3
   Jones C., 1991, APPL SOFTWARE MEASUR
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P953, DOI 10.1109/TSE.2004.92
   Jorgensen M, 2006, INFORM SOFTWARE TECH, V48, P297, DOI 10.1016/j.infsof.2005.07.002
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P993, DOI 10.1109/TSE.2004.103
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   Jorgensen M., 1997, NORW INF C VOSS NORW
   Jorgensen M, 2009, IEEE T SOFTWARE ENG, V35, P368, DOI 10.1109/TSE.2009.2
   Kern T., CALIFORNIA MANAGEMEN, V44
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   MEYER DJ, 1988, ECON INQ, V26, P123, DOI 10.1111/j.1465-7295.1988.tb01673.x
   Molokken-Ostvold K, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P208, DOI 10.1109/METRIC.2004.1357904
   Ohlsson M.C., 1999, INT SOFTW METR S BOC
   Ohlsson MC, 1998, INFORM SOFTWARE TECH, V40, P831, DOI 10.1016/S0950-5849(98)00097-4
   Sauer C, 2007, COMMUN ACM, V50, P79, DOI 10.1145/1297797.1297801
   THALER RH, 1988, J ECON PERSPECT, V2, P191, DOI 10.1257/jep.2.1.191
   van Genuchten M., IEEE T SOFTWARE ENG, V17
   van Oorschot KE, 2005, INT J OPER PROD MAN, V25, P720, DOI 10.1108/01443570510608574
   Wonnacott TH., 1990, INTRO STAT
   Yang D., 2008, ACM IEEE INT S EMP S
NR 34
TC 15
Z9 15
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2013
VL 55
IS 9
BP 1640
EP 1650
DI 10.1016/j.infsof.2013.03.001
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 174PU
UT WOS:000321168700009
DA 2024-07-18
ER

PT J
AU Krishnan, S
   Strasburg, C
   Lutz, RR
   Goseva-Popstojanova, K
   Dorman, KS
AF Krishnan, Sandeep
   Strasburg, Chris
   Lutz, Robyn R.
   Goseva-Popstojanova, Katerina
   Dorman, Karin S.
TI Predicting failure-proneness in an evolving software product line
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software product lines; Change metrics; Reuse; Prediction; Post-release
   defects; Failure-prone files
ID FAULTS; MODELS
AB Context: Previous work by researchers on 3 years of early data for an Eclipse product has identified some predictors of failure-prone files that work well. Eclipse has also been used previously by researchers to study characteristics of product line software.
   Objective: The work reported here investigates whether classification-based prediction of failure-prone files improves as the product line evolves.
   Method: This investigation first repeats, to the extent possible, the previous study and then extends it by including four more recent years of data, comparing the prominent predictors with the previous results. The research then looks at the data for three additional Eclipse products as they evolve over time. The analysis compares results from three different types of datasets with alternative data collection and prediction periods.
   Results: Our experiments with a variety of learners show that the difference between the performance of J48, used in this work, and the other top learners is not statistically significant. Furthermore, new results show that the effectiveness of classification significantly depends on the data collection period and prediction period. The study identifies change metrics that are prominent predictors across all four releases of all four products in the product line for the three different types of datasets. From the product line perspective, prediction of failure-prone files for the four products studied in the Eclipse product line shows statistically significant improvement in accuracy but not in recall across releases.
   Conclusion: As the product line matures, the learner performance improves significantly for two of the three datasets, but not for prediction of post-release failure-prone files using only pre-release change data. This suggests that it may be difficult to detect failure-prone files in the evolving product line. At least in part, this may be due to the continuous change, even for commonalities and high-reuse variation components, which we previously have shown to exist. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Krishnan, Sandeep; Strasburg, Chris; Lutz, Robyn R.] Iowa State Univ, Dept Comp Sci, Ames, IA 50011 USA.
   [Strasburg, Chris] Iowa State Univ, US DOE, Ames Lab, Ames, IA 50011 USA.
   [Goseva-Popstojanova, Katerina] W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
   [Dorman, Karin S.] Iowa State Univ, Dept Stat, Ames, IA 50011 USA.
C3 Iowa State University; United States Department of Energy (DOE); Ames
   National Laboratory; Iowa State University; West Virginia University;
   Iowa State University
RP Krishnan, S (corresponding author), Iowa State Univ, Dept Comp Sci, Ames, IA 50011 USA.
EM sandeepk@iastate.edu; cstras@iastate.edu; rlutz@iastate.edu;
   Katerina.Goseva@mail.wvu.edu; kdorman@iastate.edu
RI Krishnan, Sandeep/AGX-4591-2022
OI Dorman, Karin/0000-0003-3650-0018; Lutz, Robyn/0000-0001-5390-7982;
   Goseva-Popstojanova, Katerina/0000-0003-4683-672X
FU National Science Foundation [0916275, 0916284]; American Recovery and
   Reinvestment Act; Direct For Computer & Info Scie & Enginr [0916284]
   Funding Source: National Science Foundation; Direct For Computer & Info
   Scie & Enginr; Division of Computing and Communication Foundations
   [0916275] Funding Source: National Science Foundation; Division of
   Computing and Communication Foundations [0916284] Funding Source:
   National Science Foundation
FX We thank the reviewers for several helpful suggestions that improved
   this work. This work was supported by National Science Foundation grants
   0916275 and 0916284 with funds from the American Recovery and
   Reinvestment Act of 2009. Part of this work was performed while the
   third author was visiting the California Institute of Technology and the
   Open University, UK.
CR [Anonymous], 2006, ISESE '06: Proceedings of the 5th International Symposium on Empirical Software Engineering. Volume II: Short Papers and Posters, DOI DOI 10.1145/1159733.1159739.
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Batory D, 2006, COMMUN ACM, V49, P45, DOI 10.1145/1183236.1183264
   Bettenburg N., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P60, DOI 10.1109/MSR.2012.6224300
   Borretzen JA, 2006, LECT NOTES COMPUT SC, V4034, P389
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Chastek G., 2007, P 3 INT WORKSHOP OPE, P1
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   D'Ambros M, 2009, WORK CONF REVERSE EN, P135, DOI 10.1109/WCRE.2009.19
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   DEVINE TR, 2012, INT C SOFTW TEST VER
   Drummond Chris, 2003, WORKSH LEARN IMB DAT, V11, P1
   EADDY M, IEEE T SOFTW ENG, V34
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   GOMAA H, 2004, DESIGNING SOFTWARE P
   GRAY D, 2011, EASE
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   HALL T, IEEE T SOFTWARE ENG, V99
   Hamill M, 2009, IEEE T SOFTWARE ENG, V35, P484, DOI 10.1109/TSE.2009.3
   Jiang Y., 2008, DEFECTS 08 P 2008 WO, P16, DOI [DOI 10.1145/1390817.1390822, 10.1145/1390817.1390822]
   Kim M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/1985793.1985815
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Krishnan S., 2011, P 8 WORKING C MINING, P103
   KRISHNAN S, 2011, PROMISE, V7
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lutz RR, 2004, IEEE T SOFTWARE ENG, V30, P172, DOI 10.1109/TSE.2004.1271171
   MANSFIELD D, CVSPS PATCHSETS CVS
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Mohagheghi P, 2004, PROC INT CONF SOFTW, P282, DOI 10.1109/ICSE.2004.1317450
   Mohagheghi P, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363104
   Moser R, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P309
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nagappan N., 2006, P 28 INT C SOFTW ENG, P452, DOI DOI 10.1145/1134285.1134349
   Nagappan N, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P62
   Nanda M. G., 2009, SOFTWARE PRODUCT LIN
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Paulson JW, 2004, IEEE T SOFTWARE ENG, V30, P246, DOI 10.1109/TSE.2004.1274044
   PINHEIRO J, 2001, NLME LINEAR LINEAR N
   Rahmani Cobra, 2010, Journal of Software, V5, P1384, DOI 10.4304/jsw.5.12.1384-1394
   Shihab Emad., 2010, ESEM
   Shivaji S, 2009, IEEE INT CONF AUTOM, P600, DOI 10.1109/ASE.2009.76
   *SOFTW ENG I, SOFTW PROD LIN
   STEPHENSON Z, 2002, THESIS U YORK
   Wang HJ, 2011, 2011 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI), P309, DOI 10.1109/IRI.2011.6009565
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   ZHANG H, 2008, P MSR 2008 LEIPZ GER, P141
   Zimmermann T., 2007, P ICSE 2007 WORK 3 I, DOI [10.1109/PROMISE.2007.10, DOI 10.1109/PROMISE.2007.10]
   Zimmermann T., 2008, PREDICTING BUGS HIST, P69, DOI [10.1007/978-3-540-76440-3_4, DOI 10.1007/978-3-540-76440-3_4]
   Zimmermann T, 2009, P 7 JOINT M EUR SOFT
NR 56
TC 13
Z9 15
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2013
VL 55
IS 8
BP 1479
EP 1495
DI 10.1016/j.infsof.2012.11.008
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 168DF
UT WOS:000320685200009
DA 2024-07-18
ER

PT J
AU Gamez, N
   Fuentes, L
AF Gamez, Nadia
   Fuentes, Lidia
TI Architectural evolution of FamiWare using cardinality-based feature
   models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Middleware family; Software Product Lines; Feature Models; Evolution
ID PRODUCT LINE
AB Context: Ambient Intelligence systems domain is an outstanding example of modern systems that are in permanent evolution, as new devices, technologies or facilities are continuously appearing. This means it would be desirable to have a mechanism that helps with the propagation of evolution changes in deployed systems.
   Objective: We present a software product line engineering process to manage the evolution of FamiWare, a family of middleware for ambient intelligence environments. This process drives the evolution of FamiWare middleware configurations using cardinality-based feature models, which are especially well suited to express the structural variability of ambient intelligence systems.
   Method: FamiWare uses cardinality-based feature models and clonable features to model the structural variability present in ambient intelligence systems, composed of a large variety of heterogeneous devices. Since the management evolution of configurations with clonable features is manually untreatable due to the high number of features, our process automates it and propagates changes made at feature level to the architectural components of the FamiWare middleware. This is a model driven development process as the evolution management, the propagation of evolution changes and the code generation are performed using some kind of model mappings and transformations. Concretely we present a variability modelling language to map the selection of features to the corresponding FamiWare middleware architectural components.
   Results: Our process is able to manage the evolution of cardinality-based feature models with thousands of features, something which is not possible to tackle manually. Thanks to the use of the variability language and the automatic code generation it is possible to propagate and maintain a correspondence between the FamiWare architectural model and the code. The process is then able to calculate the architectural differences between the evolved configuration and the previous one. Checking these differences, our process helps to calculate the effort needed to perform the evolution changes in the customized products. To perform those tasks we have defined two operators, one to calculate the differences between two feature model configurations and another to create a new configuration from a previous one.
   Conclusion: Our process automatically propagates the evolution changes of the middleware family into the existing configurations where the middleware is already deployed and also helps us to calculate the effort in performing the changes in every configuration. Finally, we validated our approach, demonstrating the functioning of the defined operators and showing that by using our tool we can generate evolved configurations for FamiWare with thousands of cloned features, for several case studies. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Gamez, Nadia; Fuentes, Lidia] Univ Malaga, Dpto Lenguajes & Ciencias Comunicac, E-29071 Malaga, Spain.
C3 Universidad de Malaga
RP Gamez, N (corresponding author), Univ Malaga, Dpto Lenguajes & Ciencias Comunicac, E-29071 Malaga, Spain.
EM nadia@lcc.uma.es; lff@lcc.uma.es
RI Fuentes, Lidia/M-5580-2014
OI Fuentes, Lidia/0000-0002-5677-7156
FU Spanish Ministry of Science and Innovation [TIN2008-01942]; Andalusian
   Government [P09-TIC-05231 (FamWare)]
FX This work has been partially supported by the projects TIN2008-01942
   funded by Spanish Ministry of Science and Innovation and P09-TIC-05231
   (FamWare) funded by Andalusian Government.
CR Acher Mathieu, 2009, Software Language Engineering. Second International Conference, SLE 2009. Revised Selected Papers, P62
   Akyildiz IF., 2004, AD HOC NETW, V2, P351, DOI [10.1016/j.adhoc.2004.04.003, DOI 10.1016/J.ADHOC.2004.04.003]
   Apel S., 2005, LNCS, V3437
   Bakken D., 2003, MIDDLEWARE ENCY DIST
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D, 2006, LECT NOTES COMPUT SC, V4143, P399
   Benavides David, 2005, 17 INT C SOFTW ENG K
   Bencomo N., 2008, P 2 INT WORKSH DYN S
   Bishop T., 2003, P ISCA 18 INT C COMP
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   Czarnecki K., 2005, Conference on Object Oriented Programming Systems Languages and Applications, P200, DOI [10.1145/1094855.1094934, DOI 10.1145/1094855.1094934]
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   Fuentes L., 2010, P 4 INT S UB COMP AM
   Fuentes L, 2010, J UNIVERS COMPUT SCI, V16, P1592
   Gamez Nadia, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P102, DOI 10.1007/978-3-642-21347-2_9
   Gamez N., 2012, THESIS
   Gamez N, 2011, LECT NOTES COMPUT SC, V6903, P164, DOI 10.1007/978-3-642-23798-0_16
   Gámez N, 2011, PERS UBIQUIT COMPUT, V15, P329, DOI 10.1007/s00779-010-0354-0
   Hwan C, 2005, LECT NOTES COMPUT SC, V3748, P331
   Kang Kyo, 1990, CMUSEI90TR021 SOFTW
   Kuhlemann M, 2009, LECT NOTES COMPUT SC, V5791, P106
   Lee K, 2002, LECT NOTES COMPUT SC, V2319, P62
   Loughran N, 2008, LECT NOTES COMPUT SC, V4954, P36
   Pohl C., 2007, SURVEY EXISTING IMPL
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Sanchez P., 2007, D22 AMPLE PROJ
   Stephan M., 2008, 200808 U WAT
   Sundmaeker H., 2010, EUROPEAN RES CLUSTER
   THUM T, 2009, P 31 INT C SOFTW ENG
   Tsang E., 1933, FDN CONSTRAINT SATIS
   Wang MM, 2008, J COMPUT SCI TECH-CH, V23, P305, DOI 10.1007/s11390-008-9135-x
   Weiser M., 1991, SCI AM, V165
   White J, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P225, DOI 10.1109/SPLC.2008.16
   White J, 2010, J SYST SOFTWARE, V83, P1094, DOI 10.1016/j.jss.2010.02.017
   Zhang W, 2008, LECT NOTES COMPUT SC, V5030, P186, DOI 10.1007/978-3-540-68073-4_18
NR 36
TC 19
Z9 20
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2013
VL 55
IS 3
BP 563
EP 580
DI 10.1016/j.infsof.2012.06.012
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 095XV
UT WOS:000315369200006
DA 2024-07-18
ER

PT J
AU Yoon, I
   Sussman, A
   Memon, A
   Porter, A
AF Yoon, Ilchul
   Sussman, Alan
   Memon, Atif
   Porter, Adam
TI Testing component compatibility in evolving configurations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Incremental testing; Software component; Compatibility
AB Software components are increasingly assembled from other components. Each component may further depend on others, and each may have multiple active versions. The total number of configurations combinations of components and their versions-in use can be very large. Moreover, components are constantly being enhanced and new versions are being released. Component developers, therefore, spend considerable time and effort doing compatibility testing-determining whether their components can be built correctly for all deployed configurations-both for existing active component versions and new releases. In previous work we developed Rachet, a distributed, cache-aware mechanism to support large-scale compatibility testing of component-based software with a fixed set of component versions.
   In this paper, we observe that it is too expensive to perform compatibility testing from scratch each time a new version of a component is released. We thus add a new dimension to Rachet: to perform incremental and prioritized compatibility testing. We describe algorithms to compute differences in component compatibilities between current and previous component builds, a formal test adequacy criterion based on covering the differences, and cache-aware configuration sampling and testing methods that attempt to reuse effort from previous testing sessions. Because testers are often interested in focusing test effort on newly released and modified components and their versions, we have developed a prioritization mechanism that enhances compatibility testing by examining the configurations that test new or modified component versions first, while also distributing the work over a cluster of machines. We evaluate our approach using the 5-year evolution history of a scientific middleware component. Our results show that our methods can increase performance significantly over Rachet's previous retest-all approach and also tests important component compatibilities early in the overall testing process, making the process of compatibility testing practical for evolving components. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Yoon, Ilchul] State Univ New York, Dept Comp Sci, Inchon, South Korea.
   [Sussman, Alan; Memon, Atif; Porter, Adam] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
C3 University System of Maryland; University of Maryland College Park
RP Yoon, I (corresponding author), State Univ New York, Dept Comp Sci, Inchon, South Korea.
EM icyoon@sunykorea.ac.kr; als@cs.umd.edu; atif@cs.umd.edu;
   aporter@cs.umd.edu
OI Sussman, Alan/0000-0003-1672-2879
FU NSF [CCF-0811284, ATM-0120950, CNS-0855055, CNS-1205501]; DOE
   [DEFC0207ER25812]; NASA [NNG06GE75G]; Division Of Computer and Network
   Systems; Direct For Computer & Info Scie & Enginr [1205501] Funding
   Source: National Science Foundation
FX This research was supported by NSF Grants #CCF-0811284, #ATM-0120950,
   #CNS-0855055, #CNS-1205501, and #CNS0615072, DOE Grant #DEFC0207ER25812,
   and NASA Grant #NNG06GE75G.
CR [Anonymous], P 22 IEEE ACM INT C
   Armstrong R., 1999, Proceedings. The Eighth International Symposium on High Performance Distributed Computing (Cat. No.99TH8469), P115, DOI 10.1109/HPDC.1999.805289
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Boender Jaap, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P1240, DOI 10.1109/COMPSAC.2008.226
   Duarte A., 2006, 28th International Conference on Software Engineering Proceedings, P779, DOI 10.1145/1134285.1134410
   Duarte A., 2006, P 2006 WORKSHOP PARA, P61
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Emmerich W, 1997, PROC INT CONF SOFTW, P641, DOI 10.1145/253228.253845
   Erl T, 2005, SERVICE ORIENTED ARC
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   Huhns MN, 2005, IEEE INTERNET COMPUT, V9, P75, DOI 10.1109/MIC.2005.21
   Lee Jae-Yong, 2005, P 2005 JOINT WORKSH, p177b
   Mancinelli F, 2006, IEEE INT CONF AUTOM, P199
   Massol V., 2005, MAVEN DEV NOTEBOOK
   Meglio A.D., 2008, J PHYS C SERIES, V119
   Memon A, 2004, PROC INT CONF SOFTW, P459, DOI 10.1109/ICSE.2004.1317468
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   O'Sullivan Bryan., 2009, Mercurial: The Definitive Guide
   *OBJ MAN GROUP INC, 2002, COMM OBJ REQ BROK AR
   Qu X., 2008, P 2008 INT S SOFTW T, P75
   Robinson Brian, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P177, DOI 10.1109/ISSRE.2008.46
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Sussman A, 2006, ENG COMPUT-GERMANY, V22, P311, DOI 10.1007/s00366-006-0037-7
   Syrjanen T., 1999, A55 HELS U TECHN LAB, P1
   VMware Inc, 2006, VIRT LAB AUT WHIT, P1
   VMware Inc., 2006, ACC TEST MAN SELF SE, P1
   Wong W., 1997, P 8 INT S SOFTW REL, P230
   Yoon I.-C., 2008, P INT S SOFTWARE TES, P63, DOI DOI 10.1145/1390630.1390640
   Yoon IC, 2009, PROC IEEE INT CONF S, P29, DOI 10.1109/ICSM.2009.5306357
   Yoon Ilchul., 2011, Proceedings of CBSE '11, P119
NR 30
TC 4
Z9 8
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2013
VL 55
IS 2
BP 445
EP 458
DI 10.1016/j.infsof.2012.09.010
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 060EO
UT WOS:000312759500018
DA 2024-07-18
ER

PT J
AU Nikolik, B
AF Nikolik, Borislav
TI Software quality assurance economics
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Test cases; Defects; ROI; Economic release criterion; Inflation;
   Sensitivity to time passage
ID COST; RELIABILITY
AB Context: Software companies invest in quality assurance in order to lower software development and maintenance cost, and to increase revenue and profit margins. To contribute to increase of net income, a quality assurance organization has to consider cost and value of the testware involved in assuring quality of software artifacts, such as requirements, specifications, designs, and code.
   Objective: This paper proposes a set of economic metrics: testware return on investment, inflation, and cost and value sensitivity to artifact changes and time passage. The paper proposes a set of guidelines on lowering testware cost, on increasing value, on maximizing return on investment, and on when to release.
   Method: This paper presents an industrial case study data on the relation between test case cost and value, and on cost and value sensitivity to time passage and artifact changes.
   Results: The industrial case study showed return on investment on test cases of up to 200%, deflation of up to -2% per month, undesirable economic effects, such as test case cost outpacing test case value and rapid test case value depreciation based on time passage.
   Conclusion: A viable QA organization should measure and improve test case return on investment, inflation, and cost and value sensitivity to artifact changes and time passage. (c) 2012 Elsevier B.V. All rights reserved.
C1 Vidak Qual, Portland, OR 97229 USA.
RP Nikolik, B (corresponding author), Vidak Qual, 9226 NW Bartholomew Dr, Portland, OR 97229 USA.
EM boris.nikolik@gmail.com
CR Alberts D.S., 1978, TUTORIAL SOFTWARE TE
   [Anonymous], P 1 INT WORKSH AUT A
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   [Anonymous], 1994, Encyclopedia of software Engineering
   Artzner P, 1999, MATH FINANC, V9, P203, DOI 10.1111/1467-9965.00068
   Ball T, 2002, ACM SIGPLAN NOTICES, V37, P1, DOI 10.1145/565816.503274
   Boehm B, 2004, IEEE SOFTWARE, V21, P54, DOI 10.1109/MS.2004.1293073
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Boehm B., 1998, SOFTWARE ENG EC
   Briand L, 1998, PROC INT CONF SOFTW, P340, DOI 10.1109/ICSE.1998.671387
   De Millo R.A., 1978, IEEE COMPUTER    MAY
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P202, DOI 10.1109/32.221133
   Galin Daniel, 2004, Software quality assurance: from theory to implementation
   Hamlet D., ISSTA 96
   HAMLET R, 1981, ACTA INFORM, V16, P31, DOI 10.1007/BF00289588
   Hoare C. A. R., 1972, Acta Informatica, V1, P271, DOI 10.1007/BF00289507
   Holzmann GJ, 2001, ACM SIGPLAN NOTICES, P80
   Huang J. C., 1975, Computing Surveys, V7, P113, DOI 10.1145/356651.356652
   Huang L., 2005, P 7 WORKSH EC DRIV S
   Humphrey W.S., 1995, SEI SERIES SOFTWARE
   Hwang GH, 1996, TOTAL QUAL MANAGE, V7, P267, DOI 10.1080/09544129650034837
   Jalote P., 2003, P 14 INT S SOFTW REL
   Jones C., 1991, APPL SOFTWARE MEASUR
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Kaner C., 1996, SOFTWARE QA, V3, P3
   Knox S. T., 1993, Digital Technical Journal, V5, P9
   KUSUMOTO S, 1992, IEICE T INF SYST, VE75D, P674
   Laitenberger O., 2002, HDB SOFTWARE ENG KNO, P517
   Leveson N.G., 1995, Safeware: System Safety and Computers
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Littlewood B, 2000, IEEE T SOFTWARE ENG, V26, P1157, DOI 10.1109/32.888629
   Luta M., 2010, IEEE SOFTWARE, V5, P54
   Lyu M.R., 1995, HDB SOFTWARE RELIABI
   MANDEVILLE WA, 1990, IEEE J SEL AREA COMM, V8, P315, DOI 10.1109/49.46887
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   MUSA JD, 1993, OPERATIONAL PROFILES, P14
   MYERS GJ, 1978, COMMUN ACM, V21, P760, DOI 10.1145/359588.359602
   NIKOLIK B, 1995, INFORM PROCESS LETT, V55, P143, DOI 10.1016/0020-0190(95)00092-Q
   NIKOLIK B, 2005, AADEBUG, P89
   Nikolik B., 2004, IEEE METRICS 2004 SE
   Nikolik B, 2007, SOFTW TEST VERIF REL, V17, P183, DOI 10.1002/stvr.367
   Nikolik B, 2006, INFORM SOFTWARE TECH, V48, P1083, DOI 10.1016/j.infsof.2006.02.001
   Ntafos S.C., 1998, P IASTED SOFTW ENG C, P53
   PAULK MC, 1995, SEI SERIES SOFTWARE
   Poppendieck M, 2006, IMPLEMENTING LEAN SO
   Raffo D., 2000, P 2 WORKSH EC DRIV S
   Sassenburg H., 2006, P 4 WORKSH SOFTW QUA, P57
   Schwaber Ken, AGILE SOFTWARE DEV S
   Slaughter SA, 1998, COMMUN ACM, V41, P67, DOI 10.1145/280324.280335
   WAGNER S, 2006, P 5 ACM IEEE INT S E
   Weyuker E.J., 1991, TAV4, P1
NR 53
TC 4
Z9 4
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2012
VL 54
IS 11
BP 1229
EP 1238
DI 10.1016/j.infsof.2012.06.003
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 000LJ
UT WOS:000308387500006
DA 2024-07-18
ER

PT J
AU Papadakis, M
   Malevris, N
AF Papadakis, Mike
   Malevris, Nicos
TI Mutation based test case generation via a path selection strategy
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Unit testing; Mutation testing; Path testing; Adequacy
   criterion; Infeasible paths
ID DATA-FLOW; CRITERIA; COVERAGE
AB Context: Generally, mutation analysis has been identified as a powerful testing method. Researchers have shown that its use as a testing criterion exercises quite thoroughly the system under test while it achieves to reveal more faults than standard structural testing criteria. Despite its potential, mutation fails to be adopted in a widespread practical use and its popularity falls significantly short when compared with other structural methods. This can be attributed to the lack of thorough studies dealing with the practical problems introduced by mutation and the assessment of the effort needed when applying it. Such an incident, masks the real cost involved preventing the development of easy and effective to use strategies to circumvent this problem.
   Objective: In this paper, a path selection strategy for selecting test cases able to effectively kill mutants when performing weak mutation testing is presented and analysed.
   Method: The testing effort is highly correlated with the number of attempts the tester makes in order to generate adequate test cases. Therefore, a significant influence on the efficiency associated with a test case generation strategy greatly depends on the number of candidate paths selected in order to achieve a predefined coverage goal. The effort can thus be related to the number of infeasible paths encountered during the test case generation process.
   Results: An experiment, investigating well over 55 million of program paths is conducted based on a strategy that alleviates the effects of infeasible paths. Strategy details, along with a prototype implementation are reported and analysed through the experimental results obtained by its employment to a set of program units.
   Conclusion: The results obtained suggest that the strategy used can play an important role in making the mutation testing method more appealing and practical. (c) 2012 Elsevier B.V. All rights reserved.
C1 [Papadakis, Mike; Malevris, Nicos] Athens Univ Econ & Business, Dept Informat, Athens, Greece.
C3 Athens University of Economics & Business
RP Papadakis, M (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, L-1359 Luxembourg, Luxembourg.
EM michail.papadakis@uni.lu; ngm@aueb.gr
OI Papadakis, Mike/0000-0003-1852-2547
FU Research Centre of the Athens University of Economics and Business
FX This research was funded by the Research Centre of the Athens University
   of Economics and Business. The authors would like to thank Dr. D. F.
   Yates for his valuable comments.
CR [Anonymous], 2011, P 8 EUR SOFTW ENG C, DOI DOI 10.1145/2025113.2025144
   [Anonymous], J BRAZILIAN COMPUT S
   Ayari K, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1074
   Baars A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P53, DOI 10.1109/ASE.2011.6100119
   Ball T, 1996, PROCEEDINGS OF THE 29TH ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE - MICRO-29, P46, DOI 10.1109/MICRO.1996.566449
   Boyer R. S., 1975, SIGPLAN Notices, V10, P234, DOI 10.1145/390016.808445
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   CADAR C, 2011, P 33 INT C SOFTW ENG, P1066
   DeMillo R. A., 1991, Proceedings of the Fifteenth Annual International Computer Software and Applications Conference (Cat. No.91CH3023-9), P351, DOI 10.1109/CMPSAC.1991.170202
   DeMillo R. A., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P142, DOI 10.1109/WST.1988.5369
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Fraser G., 2011, IEEE T SOFTWARE ENG, P1
   Gabow H. N., 1976, IEEE Transactions on Software Engineering, VSE-2, P227, DOI 10.1109/TSE.1976.233819
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   Jia Y., 2010, INERT1989 ROC
   Jia Y., 2010, IEEE T SOFTW ENG, V99
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Kiezun A., 2009, PROC INT S SOFTWARE, P105
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Kosmatov Nikolai, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P147, DOI 10.1109/ISSRE.2008.25
   Koutsikas C., 2006, International Journal of Computers & Applications, V28, P1, DOI 10.2316/Journal.202.2006.1.202-1265
   Koutsikas C, 2001, ACS/IEEE INTERNATIONAL CONFERENCE ON COMPUTER SYSTEMS AND APPLICATIONS, PROCEEDINGS, P466, DOI 10.1109/AICCSA.2001.934045
   Lapierre S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P189, DOI 10.1109/ICSM.1999.792607
   LI N, 2009, P 4 INT WORKSH MUT A, P220, DOI DOI 10.1109/ICSTW.2009.30
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Malevris N, 2006, INFORM SOFTWARE TECH, V48, P676, DOI 10.1016/j.infsof.2005.07.006
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   NTAFOS SC, 1979, IEEE T SOFTWARE ENG, V5, P520, DOI 10.1109/TSE.1979.234213
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   OFFUTT AJ, 1994, IEEE T SOFTWARE ENG, V20, P337, DOI 10.1109/32.286422
   Offutt AJ, 1999, SOFTWARE PRACT EXPER, V29, P167, DOI 10.1002/(SICI)1097-024X(199902)29:2<167::AID-SPE225>3.0.CO;2-V
   Offutt AJ, 1996, SOFTWARE PRACT EXPER, V26, P165, DOI 10.1002/(SICI)1097-024X(199602)26:2<165::AID-SPE5>3.0.CO;2-K
   Offutt J, 2003, SOFTW TEST VERIF REL, V13, P25, DOI 10.1002/stvr.264
   Papadakis Mike, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P121, DOI 10.1109/ISSRE.2010.38
   Papadakis M., 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P435, DOI 10.1109/ICSEA.2010.74
   Papadakis Mike, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P90, DOI 10.1109/ICSTW.2010.50
   Papadakis M., 2005, THESIS U EC BUSINESS
   Papadakis M, 2011, SOFTWARE QUAL J, V19, P691, DOI 10.1007/s11219-011-9142-y
   Papadakis M, 2009, ASIA PAC SOFWR ENG, P422, DOI 10.1109/APSEC.2009.68
   Pasareanu Corina S., 2009, International Journal on Software Tools for Technology Transfer, V11, P339, DOI 10.1007/s10009-009-0118-1
   Pasareanu C.S., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, ISSTA '11, P34, DOI DOI 10.1145/2001420.2001425
   Santelices Raul, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P218, DOI 10.1109/ASE.2008.32
   Untch R. H., 1993, SIGSOFT Software Engineering Notes, V18, P139, DOI 10.1145/174146.154265
   WEYUKER EJ, 1993, IEEE T SOFTWARE ENG, V19, P912, DOI 10.1109/32.241773
   Woodward M. R., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P152, DOI 10.1109/WST.1988.5370
   Woodward MR, 2006, INFORM SOFTWARE TECH, V48, P433, DOI 10.1016/j.infsof.2005.05.003
   Yates D., 1989, P ACM SIGSOFT 89 3 S, P48
   Yates DF, 2007, INFORM SOFTWARE TECH, V49, P1045, DOI 10.1016/j.infsof.2006.10.009
   Yates D.F., 1985, 11 INT WORKSH GRAPH
NR 55
TC 51
Z9 57
U1 1
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2012
VL 54
IS 9
BP 915
EP 932
DI 10.1016/j.infsof.2012.02.004
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 977BP
UT WOS:000306631700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sulayman, M
   Urquhart, C
   Mendes, E
   Seidel, S
AF Sulayman, Muhammad
   Urquhart, Cathy
   Mendes, Emilia
   Seidel, Stefan
TI Software process improvement success factors for small and medium Web
   companies: A qualitative study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software process improvement; Success factors; Grounded theory; Small
   and medium Web companies
ID GROUNDED THEORY; MODEL; ENTERPRISES
AB Context: The context of this research is software process improvement (SPI) in small and medium Web companies. Objective: The primary objective of this paper is to identify software process improvement (SPI) success factors for small and medium Web companies.
   Method: To achieve this goal, we conducted semi-structured, open-ended interviews with 21 participants representing 11 different companies in Pakistan, and analyzed the data qualitatively using the Glaserian strand of grounded theory research procedures. The key steps of these procedures that were employed in this research included open coding, focused coding, theoretical coding, theoretical sampling, constant comparison, and scaling up.
   Results: An initial framework of key SPI success factors for small and medium Web companies was proposed, which can be of use for small and medium Web companies engaged in SPI. The paper also differentiates between small and medium Web companies and analyzes crucial SPI requirements for companies operating in the Web development domain.
   Conclusion: The results of this work, in particular the use of qualitative techniques - allowed us to obtain rich insight into SPI success factors for small and medium Web companies. Future work comprises the validation of the SPI success factors with small and medium Web companies. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Sulayman, Muhammad] Univ Auckland, Auckland 1010, New Zealand.
   [Urquhart, Cathy] Manchester Metropolitan Univ, Manchester M15 6BH, Lancs, England.
   [Mendes, Emilia] Zayed Univ, Dubai, U Arab Emirates.
   [Seidel, Stefan] Univ Liechtenstein, Vaduz, Liechtenstein.
C3 University of Auckland; Manchester Metropolitan University; Zayed
   University; University of Liechtenstein
RP Sulayman, M (corresponding author), Univ Auckland, City Campus,Level 3,Room 596,Sci Ctr Bldg 303,38, Auckland 1010, New Zealand.
EM msul028@aucklanduni.ac.nz; C.Urquhart@mmu.ac.uk; Emilia.Mendes@zu.ac.ue;
   stefan.seidel@uni.li
RI Mendes, Maria E/B-4207-2015; Seidel, Stefan/KBQ-6643-2024; Urquhart,
   Cathy/HLQ-1865-2023
OI Seidel, Stefan/0000-0003-2083-6510; Mendes, Emilia/0000-0003-0449-5322
CR Abrahamsson P., 2001, Scandinavian Journal of Information Systems, V13, P69
   Ahmad R, 2005, IEEE: 2005 International Conference on Emerging Technologies, Proceedings, P445, DOI 10.1109/ICET.2005.1558923
   Alexandre S, 2006, EUROMICRO CONF PROC, P328, DOI 10.1109/EUROMICRO.2006.48
   Allen P., 2003, P 3 INT C QUAL SOFTW
   Allen P., 2003, PRISMS APPROACH SOFT
   Altarawneh H, 2008, SERA 2008: 6TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P125, DOI 10.1109/SERA.2008.14
   [Anonymous], 1998, Software process improvement
   [Anonymous], 2010, P 2010 ACM S APPL CO
   [Anonymous], 2005, GROUNDED THEORY PERS
   [Anonymous], 1997, PRACTICAL SOFTWARE M
   [Anonymous], ESEC SIGSOFT FSE
   [Anonymous], 2008, SOFTWARE PROCESS IMP, DOI DOI 10.1002/SPIP.380
   Bolchini D, 2003, FOURTH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS ENGINEERING, PROCEEDINGS, P166
   Burdman J., 1999, COLLABORATIVE WEB DE
   Cater-Steel A., 2004, LOW RIGOUR RAPID SOF, P368
   Cater-Steel A, 2006, INFORM SOFTWARE TECH, V48, P323, DOI 10.1016/j.infsof.2005.09.012
   Charmaz K., 2006, CONSTRUCTING GROUNDE, DOI DOI 10.7748/NR.13.4.84.S4
   Christodoulou S., 2000, WWW2000 DEV VIEW PRA, P75
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Corbin J., 2015, BASICS QUALITATIVE R
   Cugola G., 1998, Software Process Improvement and Practice, V4, P101, DOI 10.1002/(SICI)1099-1670(199809)4:3<101::AID-SPIP103>3.0.CO;2-K
   Day B., 2010, CLIMBING LADDER CMMI, V13
   de Carvalho AFP, 2005, IEEE SYS MAN CYBERN, P2608
   Deshpande Y., 2001, IEEE Multimedia, V8, P82, DOI 10.1109/93.917974
   Deshpande Y., 2005, WEB ENG DEV SUCCESSF, P10
   Dybå T, 2005, IEEE T SOFTWARE ENG, V31, P410, DOI 10.1109/TSE.2005.53
   Dyba T., 2000, Empirical Software Engineering, V5, P357, DOI 10.1023/A:1009800404137
   Dyba T., 2003, Software Engineering Notes, V28, P148, DOI 10.1145/949952.940092
   El-Emam K., 2001, Empirical Software Engineering, V6, P207, DOI 10.1023/A:1011487332587
   Escalona MJ, 2008, IEEE T SOFTWARE ENG, V34, P377, DOI 10.1109/TSE.2008.27
   Fayad M., 2000, COMMUN ACM, V43, P118
   Fraternali P, 2000, ACM T INFORM SYST, V18, P323, DOI 10.1145/358108.358110
   G. ObjectManagement, 2005, UML 2 0 SUP SPEC
   Galliers R., 2006, EXPLORING INFORM SYS
   Ginige A., 2001, IEEE Multimedia, V8, P14, DOI 10.1109/93.923949
   Glaser B., 2001, The Grounded Theory Perspective: Conceptualization Contrasted with Description
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Glaser B.G., 1998, DOING GROUNDED THEOR
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Glass R., 1994, Software creativity
   Goldenson D.R., 1995, DTIC
   Gómez J, 2003, INFORMATION MODELING FOR INTERNET APPLICATIONS, P144
   Grechenig T., 2004, CREATING ORGANIC SOF
   GRIFFITHS G, 1994, SOFTWARE ENG J, V9, P159, DOI 10.1049/sej.1994.0021
   Griffiths G., 2002, P 14 INT C SOFTW ENG, P755
   Guerrero F, 2004, IEEE SOFTWARE, V21, P29, DOI 10.1109/MS.2004.3
   Habib Z., 2009, 2009056 DEP APPL INF, P056
   Habra N, 2008, INFORM SOFTWARE TECH, V50, P763, DOI 10.1016/j.infsof.2007.08.004
   Harjumaa L, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P118
   Hong N, 2010, ASIA PAC SOFWR ENG, P310, DOI 10.1109/APSEC.2010.43
   ISO, 2007, JTC1SC7 ISOIEC
   JONES A, 1989, SOFTWARE ENG J, V4, P226, DOI 10.1049/sej.1989.0029
   Khan SU, 2009, INT CONF GLOBAL SOFT, P207, DOI 10.1109/ICGSE.2009.28
   Kuilboer JP, 2000, INFORM SOFTWARE TECH, V42, P27, DOI 10.1016/S0950-5849(99)00054-3
   Lee A.S., 1997, INFORM SYSTEMS QUALI
   Lepasaar M, 2002, IEMC-2002: IEEE INTERNATIONAL ENGINEERING MANAGEMENT CONFERENCE, VOLS I AND II, PROCEEDINGS, P224, DOI 10.1109/IEMC.2002.1038421
   Lockyer M., 2003, INT C LEARN ADV TECH, P284
   LOWE D., 2002, Journal of Web Engineering, V1, P23
   Maxwell J.A., 2005, QUALITATIVE RES DEIS
   McDonald A, 2003, LECT NOTES COMPUT SC, V2722, P515
   McDonald A., 2001, TR200198 U GLASG DEP
   McDonald A., 2005, Journal of Web Engineering, V4, P283
   McFeeley B., 1996, IDEAL USERS GUIDE SO
   MENDES E, 2006, WEB ENG
   Mendes E., 2003, ISESE 03
   Montoni M, 2007, LECT NOTES COMPUT SC, V4764, P175
   Naidu R., 2003, SOFTWARE PROCESS IMP
   Nguyen HQ, 2004, WSE 2004: SIXTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION, PROCEEDINGS, P83
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   Nikitina N, 2010, COMM COM INF SC, V99, P189
   ORLIKOWSKI WJ, 1993, MIS QUART, V17, P309, DOI 10.2307/249774
   Pace S, 2004, INT J HUM-COMPUT ST, V60, P327, DOI 10.1016/j.ijhcs.2003.08.005
   Pauleen DJ, 2003, J MANAGE INFORM SYST, V20, P227, DOI 10.1080/07421222.2003.11045771
   PAULK MC, 1993, IEEE SOFTWARE, V10, P18, DOI 10.1109/52.219617
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Pino FJ, 2010, J SYST SOFTWARE, V83, P1662, DOI 10.1016/j.jss.2010.03.077
   Pino FJ, 2009, LECT NOTES COMPUT SC, V5543, P342, DOI 10.1007/978-3-642-01680-6_31
   Preciado J., 2006, 9 IEEE INT WORKSH WE, P23
   Pressman R.S., 2006, SOFTWARE ENG PRACTIT
   Quarto-vonTivadar H. Helms. J., 2002, DISCOVERING FUSEBOX
   Rainer A, 2002, J SYST SOFTWARE, V62, P71, DOI 10.1016/S0164-1212(01)00122-4
   Rising L, 2000, IEEE SOFTWARE, V17, P26, DOI 10.1109/52.854065
   Ritzer G., 2007, The Blackwell Encyclopedia of Sociology, V1479
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Santos G, 2007, QUATIC 2007: 6TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, PROCEEDINGS, P187, DOI 10.1109/QUATIC.2007.22
   Schwabe D, 1998, THEOR PRACT OBJ SYST, V4, P207, DOI 10.1002/(SICI)1096-9942(1998)4:4<207::AID-TAPO2>3.0.CO;2-2
   Scott L., 2001, P 2001 AUSTR SOFTW E
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   *SEI, 2006, IMPR PROC SMALL SETT
   Strauss A.L., 1990, BASICS QUALITATIVE R
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Strong DM, 2010, MIS QUART, V34, P731
   Sulayman M., 2011, EMP ASS SOFTW ENG EA
   Sulayman M, 2009, COMM COM INF SC, V59, P1
   Taylor MJ, 2002, INFORM SOFTWARE TECH, V44, P381, DOI 10.1016/S0950-5849(02)00024-1
   Thomson H.E., 1997, SOFTWARE PROCESS IMP, V3, P3
   Tortorella M, 1999, INT J SOFTW ENG KNOW, V9, P595, DOI 10.1142/S0218194099000322
   Union E., 2005, NEW SME DEFINITION
   Urquhart C., 2000, QUAL REP, V4, P1
   Urquhart C., 1997, EXPLORING ANAL CLIEN, P149
   Urquhart C., 2001, ENCOUNTER GROUNDED T, P104
   Urquhart C, 2010, INFORM SYST J, V20, P357, DOI 10.1111/j.1365-2575.2009.00328.x
   van Solingen R, 2004, IEEE SOFTWARE, V21, P32, DOI 10.1109/MS.2004.1293070
   Vasudevan S, 1997, INNOVATION IN TECHNOLOGY MANAGEMENT - THE KEY TO GLOBAL LEADERSHIP, P484, DOI 10.1109/PICMET.1997.653483
   Wallace D., 2003, EXTREME PROGRAMMING
   WALSHAM G, 1995, EUR J INFORM SYST, V4, P74, DOI 10.1057/ejis.1995.9
   Webb B., 2007, J ASSOC INF SYST, V8, P24
   Wilson DN, 2001, J SYST SOFTWARE, V59, P135, DOI 10.1016/S0164-1212(01)00057-7
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
NR 110
TC 52
Z9 66
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2012
VL 54
IS 5
BP 479
EP 500
DI 10.1016/j.infsof.2011.12.007
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 906CR
UT WOS:000301323000004
DA 2024-07-18
ER

PT J
AU Nguyen, V
   Boehm, B
   Danphitsanuphan, P
AF Vu Nguyen
   Boehm, Barry
   Danphitsanuphan, Phongphan
TI A controlled experiment in assessing and estimating software maintenance
   tasks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software maintenance; Software estimation; Maintenance experiment;
   COCOMO; Maintenance size
ID MODELS
AB Context: Software maintenance is an important software engineering activity that has been reported to account for the majority of the software total cost. Thus, understanding the factors that influence the cost of software maintenance tasks helps maintainers to make informed decisions about their work.
   Objective: This paper describes a controlled experiment of student programmers performing maintenance tasks on a C++ program. The objective of the study is to assess the maintenance size, effort, and effort distributions of three different maintenance types and to describe estimation models to predict the programmer's effort spent on maintenance tasks.
   Method: Twenty-three graduate students and a senior majoring in computer science participated in the experiment. Each student was asked to perform maintenance tasks required for one of the three task groups. The impact of different LOC metrics on maintenance effort was also evaluated by fitting the data collected into four estimation models.
   Results: The results indicate that corrective maintenance is much less productive than enhancive and reductive maintenance and program comprehension activities require as much as 50% of the total effort in corrective maintenance. Moreover, the best software effort model can estimate the time of 79% of the programmers with the error of or less than 30%.
   Conclusion: Our study suggests that the LOC added, modified, and deleted metrics are good predictors for estimating the cost of software maintenance. Effort estimation models for maintenance work may use the LOC added, modified, deleted metrics as the independent parameters instead of the simple sum of the three. Another implication is that reducing business rules of the software requires a sizable proportion of the software maintenance effort. Finally, the differences in effort distribution among the maintenance types suggest that assigning maintenance tasks properly is important to effectively and efficiently utilize human resources. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Vu Nguyen; Boehm, Barry] Univ So Calif, Dept Comp Sci, Los Angeles, CA 90089 USA.
   [Danphitsanuphan, Phongphan] King Mongkuts Univ Technol N Bangkok, Dept Comp Sci, Bangkok, Thailand.
C3 University of Southern California; King Mongkuts University of
   Technology North Bangkok
RP Nguyen, V (corresponding author), Univ So Calif, Dept Comp Sci, Los Angeles, CA 90089 USA.
EM nguyenvu@usc.edu; boehm@usc.edu; phongphand@kmutnb.ac.th
RI Nguyen, Vu/F-9490-2015
OI Nguyen, Vu/0000-0002-0594-4372
CR ABRAN A, 1991, PROCEEDINGS - CONFERENCE ON SOFTWARE MAINTENANCE 1991, P104, DOI 10.1109/ICSM.1991.160315
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   Basili V, 1996, PROC INT CONF SOFTW, P464, DOI 10.1109/ICSE.1996.493441
   BASILI VR, 1990, IEEE SOFTWARE, V7, P19, DOI 10.1109/52.43045
   Boehm Barry., 2000, Annals of Software Engineering
   BOEHM BW, 1988, IEEE T SOFTW ENG
   Boehm BW., 1981, Software Engineering Economics
   Burton Swanson E., 1976, Proceedings of International Conference on Software Engineering (ICSE), P492
   Chan TZ, 2008, PROC IEEE INT CONF S, P47, DOI 10.1109/ICSM.2008.4658053
   Chapin N, 2001, J SOFTW MAINT EVOL-R, V13, P3, DOI 10.1002/smr.220
   Christensen LarryB., 2000, EXPT METHODOLOGY, V8th
   De Lucia A, 2005, INFORM SOFTWARE TECH, V47, P3, DOI 10.1016/j.infsof.2004.05.002
   De Lucia A, 2003, J SYST SOFTWARE, V65, P87, DOI 10.1016/S0164-1212(02)00051-1
   De Lucia A, 2006, ENTERPRISE INFORMATION SYSTEMS VI, P55
   Dolado JJ, 2001, INFORM SOFTWARE TECH, V43, P61, DOI 10.1016/S0950-5849(00)00137-3
   Fjelstad R. K., 1983, TUTORIAL SOFTWARE MA, p[11, 27]
   Graves TL, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P267, DOI 10.1109/METRIC.1998.731253
   HARIZA M, 1992, P INT C SOFTW MAINT
   *IEEE, 1998, 12191998 IEEE
   JORGENSEN M, 1995, IEEE T SOFTWARE ENG, V21, P674, DOI 10.1109/32.403791
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kitchenham BA, 1999, J SOFTW MAINT-RES PR, V11, P365, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<365::AID-SMR200>3.0.CO;2-W
   Ko AJ, 2005, PROC INT CONF SOFTW, P126
   LITTMAN DC, 1987, J SYST SOFTWARE, V7, P341, DOI 10.1016/0164-1212(87)90033-1
   Mattsson M., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P326, DOI 10.1109/ICSM.1999.792630
   Nguyen V., 2010, IMPROVED SIZE EFFORT
   Nguyen V., 2007, SLOC COUNTING STANDA
   Nguyen V, 2008, SIAM PROC S, P213, DOI 10.1145/1414004.1414040
   Pigoski TM., 1996, Practical Software Maintenance: Best Practices for Managing Your Software Investment
   Port D, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P51
   Yang Y, 2008, PROC IEEE INT CONF S, P456, DOI 10.1109/ICSM.2008.4658103
NR 32
TC 14
Z9 17
U1 1
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2011
VL 53
IS 6
SI SI
BP 682
EP 691
DI 10.1016/j.infsof.2010.11.003
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 762FS
UT WOS:000290460900012
DA 2024-07-18
ER

PT J
AU Laanti, M
   Salo, O
   Abrahamsson, P
AF Laanti, Maarit
   Salo, Outi
   Abrahamsson, Pekka
TI Agile methods rapidly replacing traditional methods at Nokia: A survey
   of opinions on agile transformation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Agile software development; Software processes;
   Agile deployment
ID SOFTWARE-DEVELOPMENT
AB Context: Many organizations have started to deploy agile methods, but so far there exist only a few studies on organization-wide transformations. Are agile methods here to stay? Some claim that agile software development methods are in the mainstream adoption phase in the software industry, while others hope that those are a passing fad. The assumption here is that if agile would not provide real improvement, adopters would be eager at first but turn pessimistic after putting it into practice.
   Objective: Despite the growing amount of anecdotal evidence on the success of agile methods across a wide range of different real-life development settings, scientific studies remain scarce. Even less is known about the perception of the impacts of agile transformation when it is deployed in a very large software development environment, and whether agile methods are here to stay. This study aims to fill that gap by providing evidence from a large-scale agile transformation within Nokia. While we have yet to confirm these findings with solid quantitative data, we believe that the perception of the impacts already pinpoints the direction of the impacts of large-scale agile transformation.
   Method: The data were collected using a questionnaire. The population of the study contains more than 1000 respondents in seven different countries in Europe, North America, and Asia.
   Results: The results reveal that most respondents agree on all accounts with the generally claimed benefits of agile methods. These benefits include higher satisfaction, a feeling of effectiveness, increased quality and transparency, increased autonomy and happiness, and earlier detection of defects. Finally, 60% of respondents would not like to return to the old way of working.
   Conclusion: While the perception of the impact of agile methods is predominantly positive, several challenge areas were discovered. However, based on this study, agile methods are here to stay. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Laanti, Maarit; Salo, Outi] Nokia Electr Ltd, Nokia Grp, Espoo 00045, Finland.
   [Abrahamsson, Pekka] Univ Helsinki, FIN-00014 Helsinki, Finland.
C3 Nokia Corporation; University of Helsinki
RP Laanti, M (corresponding author), Nokia Electr Ltd, Nokia Grp, POB 407, Espoo 00045, Finland.
EM maarit.laanti@nokia.com; Outi.Salo@nokia.com;
   Pekka.Abrahamsson@cs.helsinki.fi
RI Abrahamsson, Pekka/A-5559-2018
OI Abrahamsson, Pekka/0000-0002-4360-2226
CR Alreck P.L., 1995, SURVEY RES HDB GUIDE, V2nd
   [Anonymous], DIFFUSION PROCESS AG
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], P 11 IEEE INT S SOFT
   [Anonymous], P EUR SOFTW PROC IMP
   [Anonymous], P 26 INT C SOFTW ENG
   [Anonymous], INFORM SOFTWARE TECH
   [Anonymous], P 9 EUR C MAINT REEN
   [Anonymous], 2003, Doing survey research: A guide to quantitative methods
   [Anonymous], IEEE SOFTWARE
   [Anonymous], 5 REASONS ORG FAIL A
   [Anonymous], TRUTH AGILE PROCESSE
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   [Anonymous], INQUIRY INSIGHTS AGI
   [Anonymous], J SYSTEMS SOFTWARE
   [Anonymous], 10 INT C PROD FOC SO
   [Anonymous], P 32 ANN IEEE INT C
   Beck K., 2000, EXTREME PROGRAMMING
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   DINGSOYR T., 2010, Agile Software Development: Current Research and Future Directions
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Field A., 2001, DISCOVERING STAT USI
   Kettunen P., 2008, SOFTWARE PROCESS IMP, V13, P183, DOI [10.1002/, DOI 10.1002/SPIP.354]
   Kitchenham B.A., 2001, Preliminary Guidelines for Empirical Research in Software Engineering
   Lycett M, 2003, COMPUTER, V36, P79, DOI 10.1109/MC.2003.1185220
   Melnik G, 2006, LECT NOTES COMPUT SC, V4044, P32
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   RAPKIN BD, 1993, AM J COMMUN PSYCHOL, V21, P247, DOI 10.1007/BF00941623
   Salo O, 2008, IET SOFTW, V2, P58, DOI 10.1049/iet-sen:20070038
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Wiersma W., 2005, RES METHODS ED
NR 33
TC 106
Z9 126
U1 6
U2 83
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2011
VL 53
IS 3
BP 276
EP 290
DI 10.1016/j.infsof.2010.11.010
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 734PT
UT WOS:000288348500008
DA 2024-07-18
ER

PT J
AU Shen, WH
   Hsueh, NL
   Lee, WM
AF Shen, Wen-Hsiang
   Hsueh, Nien-Lin
   Lee, Wei-Mann
TI Assessing PSP effect in training disciplined software development: A
   Plan-Track-Review model
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Personal software process (PSP); Software process improvement (SPI);
   Effect assessment; Plan-Track-Review
ID PROCESS IMPROVEMENT; PERFORMANCE; MANAGEMENT; MATURITY; QUALITY; TRENDS
AB Context: In training disciplined software development, the PSP is said to result in such effect as increased estimation accuracy, better software quality, earlier defect detection, and improved productivity. But a systematic mechanism that can be easily adopted to assess and interpret PSP effect is scarce within the existing literature.
   Objective: The purpose of this study is to explore the possibility of devising a feasible assessment model that ties up critical software engineering values with the pertinent PSP metrics.
   Method: A systematic review of the literature was conducted to establish such an assessment model (we called a Plan-Track-Review model). Both mean and median approaches along with a set of simplified procedures were used to assess the commonly accepted PSP training effects. A set of statistical analyses further followed to increase understanding of the relationships among the PSP metrics and to help interpret the application results.
   Results: Based on the results of this study, PSP training effect on the controllability, manageability, and reliability of a software engineer is quite positive and largely consistent with the literature. However, its effect on one's predictability on project in general (and on project size in particular) is not implied as said in the literature. As for one's overall project efficiency, our results show a moderate improvement. Our initial finding also suggests that a prior stage PSP effect could have an impact on later stage training outcomes.
   Conclusion: It is concluded that this Plan-Track-Review model with the associated framework can be used to assess PSP effect regarding a disciplined software development. The generated summary report serves to provide useful feedback for both PSP instructors and students based on internal as well as external standards. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Lee, Wei-Mann] Overseas Chinese Univ, Dept Informat Technol, Taichung 40721, Taiwan.
   [Shen, Wen-Hsiang; Hsueh, Nien-Lin] Feng Chia Univ, Dept Informat Engn & Comp Sci, Taichung 40724, Taiwan.
C3 Feng Chia University
RP Lee, WM (corresponding author), Overseas Chinese Univ, Dept Informat Technol, 100 Chiaokwong Rd, Taichung 40721, Taiwan.
EM shen@ocu.edu.tw; nlhsueh@fcu.edu.tw; dwl@ocu.edu.tw
RI Shen, Wen-Hsiang/C-8617-2012
OI Shen, Wen-Hsiang/0000-0001-8416-910X
CR Abrahamsson P, 2002, LECT NOTES COMPUT SC, V2349, P175
   Abrahamsson P., 2002, P 28 EUR C
   Anneberg L., 2000, Computers in Education Journal, V10, P6
   BOEHM WB, 1981, SOFTWARE ENG EC
   Börstler J, 2002, IEEE SOFTWARE, V19, P42, DOI 10.1109/MS.2002.1032853
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Bullers W.I., 2004, P 6 AUSTR COMP ED C, P25
   Car Z., 2003, P 21 IASTED INT MULT, P1115
   Carrington D, 2001, 14TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P81, DOI 10.1109/CSEE.2001.913824
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Etxaniz I., 2007, WSEAS Transactions on Information Science and Applications, V4, P763
   Ferguson P, 1997, COMPUTER, V30, P24, DOI 10.1109/2.589907
   Gotterbarn D, 1999, 12TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P80
   Green G.C., 2004, Journal of High Technology Management Research, V15, P123, DOI DOI 10.1016/J.HITECH.2003.10.001
   Green GC, 2000, IEEE SOFTWARE, V17, P96, DOI 10.1109/52.895175
   Green GC, 2005, INFORM SOFTWARE TECH, V47, P543, DOI 10.1016/j.infsof.2004.10.004
   Grojean C. A., 2005, MICROSOFTS IT ORG US
   Grütter G, 2002, LECT NOTES COMPUT SC, V2349, P165
   Hamilton Jr. J.A., 2004, MODELING COMMAND CON, P33
   HAYES W, 1997, CMUSEI97TR001
   Hayes W., 1998, 5 INT S SOFTW METR
   Hilburn T.B., 1997, P 28 SIGCSE S COMP S
   Hilburn T.B., 1999, 12 C SOFTW ENG ED TR
   Hilsop G.W., 1999, 29 ANN FRONT ED C DE
   Honig W.L., 2008, 21 C SOFTW ENG ED TR
   Humphrey W. S., 2007, Software Process Improvement and Practice, V12, P223, DOI 10.1002/spip.324
   Humphrey W.S., 1996, INTRO PERSONAL SOFTW
   Humphrey W.S., 2005, SEI SERIES SOFTWARE
   Humphrey Watts S., 2000, CMU/SEI Technical Report CMU/SEI-2000-TR-022
   HUMPHREY WS, 1991, IEEE SOFTWARE, V8, P11, DOI 10.1109/52.300031
   Humphrey WS, 2000, IEEE SOFTWARE, V17, P71, DOI 10.1109/MS.2000.895171
   Iversen J, 2006, INT J INFORM MANAGE, V26, P30, DOI 10.1016/j.ijinfomgt.2005.10.006
   JOHNSON P, 2003, P 25 INT C SOFTW ENG
   Johnson P. M., 1999, Empirical Software Engineering, V4, P317, DOI 10.1023/A:1009801218527
   Kamatar J, 2000, IEEE SOFTWARE, V17, P85, DOI 10.1109/52.895173
   Kemerer CF, 2009, IEEE T SOFTWARE ENG, V35, P534, DOI 10.1109/TSE.2009.27
   Krishnan MS, 1999, IEEE T SOFTWARE ENG, V25, P800, DOI 10.1109/32.824401
   Lederer AL, 2000, J SYST SOFTWARE, V50, P33, DOI 10.1016/S0164-1212(99)00074-6
   Lee T, 2008, 8TH IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY WORKSHOPS: CIT WORKSHOPS 2008, PROCEEDINGS, P631, DOI 10.1109/CIT.2008.Workshops.120
   Lisack K., 2000, P 13 C SOFTW ENG ED
   Liu JYC, 2008, INFORM SOFTWARE TECH, V50, P889, DOI 10.1016/j.infsof.2008.01.002
   Maletic J.I., 2001, 14 C SOFTWARE ENG ED
   Morisio M, 2000, IEEE SOFTWARE, V17, P90, DOI 10.1109/52.895174
   Niazi M, 2005, J SYST SOFTWARE, V78, P204, DOI 10.1016/j.jss.2004.09.001
   Paulk M.C., 2009, ASQ SOFTWARE QUALITY, V11, P28
   PAULK MC, 1995, IEEE SOFTWARE, V12, P74, DOI 10.1109/52.363163
   PAULK MC, 1993, IEEE SOFTWARE, V10, P18, DOI 10.1109/52.219617
   PAULK MC, 2005, THESIS U PITTSBURGH
   Paulk MC, 2006, FACTORS AFFECTING PE
   Phipps G, 1999, SOFTWARE PRACT EXPER, V29, P345, DOI 10.1002/(SICI)1097-024X(19990410)29:4<345::AID-SPE238>3.0.CO;2-C
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P465, DOI 10.1109/32.922716
   Procaccino JD, 2005, J SYST SOFTWARE, V78, P194, DOI 10.1016/j.jss.2004.12.011
   Rombach D, 2008, J SYST SOFTWARE, V81, P747, DOI 10.1016/j.jss.2007.06.004
   Runeson P, 2001, 14TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P98, DOI 10.1109/CSEE.2001.913826
   Stark JA, 2003, IEEE SOFTWARE, V20, P89, DOI 10.1109/MS.2003.1196328
   Subramanian GH, 2007, J SYST SOFTWARE, V80, P616, DOI 10.1016/j.jss.2006.06.014
   Venkatasubramanian K., 2001, SOFTW ENG ED TRAIN A
   Wesslen A., 2000, Empirical Software Engineering, V5, P93, DOI 10.1023/A:1009811222725
   Wohlin C, 2004, EMPIR SOFTW ENG, V9, P211, DOI 10.1023/B:EMSE.0000027780.08194.b0
   Wohlin C, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P49, DOI 10.1109/ISSRE.1998.730773
   Wohlin C., 1999, P ICSE WORKSH EMP ST
   Yuan X., 2003, PERSONAL SOFTWARE PR
   Zhong XM, 2000, IEEE SOFTWARE, V17, P76, DOI 10.1109/52.895172
NR 63
TC 6
Z9 8
U1 0
U2 9
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2011
VL 53
IS 2
BP 137
EP 148
DI 10.1016/j.infsof.2010.09.004
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 701IX
UT WOS:000285812700002
DA 2024-07-18
ER

PT J
AU Samoladas, I
   Angelis, L
   Stamelos, I
AF Samoladas, Ioannis
   Angelis, Lefteris
   Stamelos, Ioannis
TI Survival analysis on the duration of open source projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Open source software; Survival analysis; Prediction
AB Context: Open source (FLOSS) project survivability is an important piece of information for many open source stakeholders. Coordinators of open source projects would like to know the chances for the survival of the projects they coordinate. Companies are also interested in knowing how viable a project is in order to either participate or invest in it, and volunteers want to contribute to vivid projects.
   Objective: The purpose of this article is the application of survival analysis techniques for estimating the future development of a FLOSS project.
   Method: In order to apply such approach, duration data regarding FLOSS projects from the FLOSSMETRICS (This work was partially supported by the European Community's Sixth Framework Program under the Contract FP6-033982) database were collected. Such database contains metadata for thousands of FLOSS projects, derived from various forges. Subsequently, survival analysis methods were employed to predict the survivability of the projects, i.e. their probability of continuation in the future, by examining their duration, combined with other project characteristics such as their application domain and number of committers.
   Results: It was shown how probability of termination or continuation may be calculated and how a prediction model may be built to upraise project future. In addition, the benefit of adding more committers to FLOSS projects was quantified.
   Conclusion: Analysis results demonstrate the usefulness of the proposed framework for assessing the survival probability of a FLOSS project. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Samoladas, Ioannis; Angelis, Lefteris; Stamelos, Ioannis] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
C3 Aristotle University of Thessaloniki
RP Samoladas, I (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
EM ioansam@csd.auth.gr; lef@csd.auth.gr; stamelos@csd.auth.gr
RI Stamelos, Ioannis/AAK-7207-2020
FU European Commission [FP6-033982]
FX This work has been funded by the FLOSSMetrics project, funded by the
   European Commission via Project FP6-033982. We would like to thank the
   Libresoft group at Universidad Rey Juan Carlos, Madrid, Spain and our
   colleagues Eleni Konstantinou, Eleni - Maria Stea, George Kakarontzas,
   and Anastasia Deliga for their valuable help. Finally, we thank the
   editor and the reviewers for their fruitful comments which led us to
   improve the paper.
CR ANGELIS L, 2005, P 10 PANH C INF, P258
   [Anonymous], P 9 INT DIG GOV RES
   [Anonymous], J IND EC
   Beecher K, 2009, J SYST SOFTWARE, V82, P739, DOI 10.1016/j.jss.2008.10.026
   CAPILUPPI A, P IFIP 5 INT C OP SO
   Crowston K., 2006, Software Process Improvement and Practice, V11, P123, DOI 10.1002/spip.259
   CROWSTON K, P ICIS 2003 SEATTL W
   ENGLISH R, 2007, EUROPEAN J INFORM PR, V7
   EVANGELOPOULOS N, 2009, COMMUNICATIONS STAT, V37, P1647
   German Daniel, 2003, P 3 WORKSH OP SOURC
   Hann I., 2004, International Conference on Information Systems, P821
   HERRAIZ I, 29 INT C SOFTW ENG W
   Hosmer D., 1999, WILEY PS TX
   HOWISON J, 2004, P WORKSH MIN SOFTW R
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   KORU G, 2 WORKSH PRED MOD SO
   Lee E.T., 2003, Statistical Methods for Survival Data Analysis, V476
   ORTEGA F, P 2009 ICSE WORKSH E
   Parmar M.K. B., 1995, SURVIVAL ANAL PRACTI
   RAINER A, 2005, 1 INT C OP SOURC SYS
   SENTAS P, 2005, P 11 IEEE INT SOFTW
   Sentas P, 2008, EMPIR SOFTW ENG, V13, P147, DOI 10.1007/s10664-007-9051-7
   STAMELOS I, 2009, INT J OPEN SOURCE SO, V1, P72
   Subramaniam C, 2009, DECIS SUPPORT SYST, V46, P576, DOI 10.1016/j.dss.2008.10.005
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   WEISS D, P 1 INT C OP SOURC S, P93
NR 26
TC 65
Z9 70
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2010
VL 52
IS 9
BP 902
EP 922
DI 10.1016/j.infsof.2010.05.001
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 629QL
UT WOS:000280214700003
DA 2024-07-18
ER

PT J
AU García-Magariño, I
   Fuentes-Fernández, R
   Gómez-Sanz, JJ
AF Garcia-Magarino, Ivan
   Fuentes-Fernandez, Ruben
   Gomez-Sanz, Jorge J.
TI A framework for the definition of metamodels for Computer-Aided Software
   Engineering tools
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Computer-Aided Software Engineering tool; Model interchange;
   Model-Driven Development; Metamodels
ID MODEL TRANSFORMATION; SUPPORT; DESIGN
AB Computer-Aided Software Engineering (CASE) tools support modeling-related activities in development projects. Given the variety of tools and functionalities, it is quite common to work with several tools in the same project. However, data cannot usually be exchanged between these tools without loss of information. Recent approaches address this model interchange problem using metamodels to characterize the involved information and transformations to export/import it. Nevertheless, most of these solutions focus on the abstract syntax of models. They fail to consider aspects such as the presentation of models or tool-specific information, which are either disregarded or represented in ad-hoc ways that make difficult their processing. In order to overcome these limitations, this paper introduces a framework to define metamodels of CASE tools and a process to carry out the model interchange using them. The proposed metamodels have a modular organization with several internal metamodels. Each of them is aimed at describing some specific information about content, structure and presentation for both models and tools. The paper illustrates this approach with a case study used for comparison with existing works for this problem. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Garcia-Magarino, Ivan; Fuentes-Fernandez, Ruben; Gomez-Sanz, Jorge J.] Univ Complutense Madrid, Dept Software Engn & Artificial Intelligence, Fac Informat, E-28040 Madrid, Spain.
C3 Complutense University of Madrid
RP García-Magariño, I (corresponding author), Univ Complutense Madrid, Dept Software Engn & Artificial Intelligence, Fac Informat, E-28040 Madrid, Spain.
EM ivan_gmg@fdi.ucm.es; ruben@fdi.ucm.es; jjgomez@sip.ucm.es
RI SANZ, JORGE JESUS GOMEZ/L-4398-2014; Fuentes-Fernandez,
   Ruben/K-6523-2014; Garcia-Magarino, Ivan/C-9189-2011
OI Fuentes-Fernandez, Ruben/0000-0001-6876-0979; Gomez-Sanz,
   Jorge/0000-0003-4534-378X; Garcia-Magarino, Ivan/0000-0002-2726-6760
FU Spanish Council for Science and Innovation [TIN2008-06464-CO3-01];
   Complutense University of Madrid [921354]; Programa de Creacion y
   Consolidacion de Grupos de Investigacion UCM-BSCH [GR58-08];
   Santander/UCM [PR24/07-15865]
FX This work is supported by the "Agent-based Modeling and Simulation of
   Complex Social Systems (SiCoSSys)" project, funded by Spanish Council
   for Science and Innovation with Grant TIN2008-06464-CO3-01, the
   Complutense University of Madrid (research group 921354), the "Programa
   de Creacion y Consolidacion de Grupos de Investigacion UCM-BSCH"
   GR58-08, and the Santander/UCM Project PR24/07-15865.
CR *ADM TASK FORC, 2007, ARCH DRIV MOD STAND
   *ADM TASK FORC, 2007, ARCH DRIV MOD TRANSF
   Amelunxen C, 2006, LECT NOTES COMPUT SC, V4066, P361
   Amyot D, 2006, LECT NOTES COMPUT SC, V4320, P183
   [Anonymous], LNCS
   [Anonymous], 2000, Multiagent Systems: AModern Approach to DistributedArtificial Intelligence
   Becker Simon M., 2005, SOFTWARE SYSTEMS MOD, V4, P123
   Bernon C, 2005, LECT NOTES COMPUT SC, V3382, P62
   Bezivin J., 2005, P INT WORKSH SOFTW F
   Bezivin J, 2003, TR0308 U NANT
   Boronat A, 2006, LECT NOTES COMPUT SC, V3922, P262
   Budinsky F., 2003, Eclipse Modelling Framework: Developer's Guide
   Burmester S., 2004, International Journal on Software Tools for Technology Transfer, V6, P203, DOI 10.1007/s10009-004-0155-8
   CHEN K, 2005, P 5 ACM INT C EMB SO, P35
   Corradini F., 2004, International Journal on Software Tools for Technology Transfer, V6, P231, DOI 10.1007/s10009-004-0158-5
   COSSENTINO M, 2005, AGENT ORIENTED METHO, P79, DOI DOI 10.4018/978-1-59140-581-8.CH004]
   Costagliola G, 2006, IEEE T SOFTWARE ENG, V32, P156, DOI 10.1109/TSE.2006.23
   Costagliola G, 2002, J VISUAL LANG COMPUT, V13, P573, DOI 10.1006/S1045-926X(02)00025-3
   Costagliola G, 2004, ACM T SOFTW ENG METH, V13, P431, DOI 10.1145/1040291.1040293
   Del Fabro MD, 2006, LECT NOTES COMPUT SC, V4275, P863
   DESIKAN M, 2001, P WORKSH TOOL INT SY, P67
   DOMOKOS C, 2002, ELECT NOTES THEORETI, V72, P69
   DORR H, 1995, LECT NOTES COMPUTER, V922
   Fondement F, 2005, LECT NOTES COMPUT SC, V3748, P190
   García-Magariño I, 2009, LECT NOTES COMPUT SC, V5563, P52, DOI 10.1007/978-3-642-02408-5_5
   García-Magariño I, 2009, INFORM SOFTWARE TECH, V51, P1217, DOI 10.1016/j.infsof.2009.02.003
   GARCIAMAGARINO I, 2008, P 5 INT WORKSH MOD B, P14
   Gomez-Sanz J.J., 2008, Proceedings of the 7th International Joint Conference on Autonomous Agents and Multiagent Systems: demo papers, P1675, DOI DOI 10.1145/1402744.1402760
   *GRAS GRAS WEB, 2009, MTGENERATOR TOOL
   *GRAS GRAS WEB IDK, 2009, SOFTW INGENIAS DEV K
   Grundy J, 2007, PROC INT CONF SOFTW, P282
   Hahn C, 2006, LECT NOTES COMPUT SC, V4196, P123
   Herman I, 2000, IEEE T VIS COMPUT GR, V6, P24, DOI 10.1109/2945.841119
   KELLY S, 1997, THESIS
   KENT S, 1997, P OOPSLA97, P327, DOI DOI 10.1145/263698.263756
   KHARE R, 2001, P 34 HAW INT C SYST
   Königs A, 2006, ELECTRON NOTES THEOR, V148, P113, DOI 10.1016/j.entcs.2005.12.015
   KOLOVOS M, 2009, EPSILON BOOK
   LAMMEL R, 2001, LNCS, V2021, P550
   Lédeczi A, 2001, COMPUTER, V34, P44, DOI 10.1109/2.963443
   Magyari E., 2003, P 3 OOPSLA WORKSH DO
   Mellor SJ, 2003, IEEE SOFTWARE, V20, P14, DOI 10.1109/MS.2003.1231145
   Muller PA, 2006, LECT NOTES COMPUT SC, V4199, P98
   *OMG, 2006, UN MOD LANG UML DIAG
   *OMG, 2007, UN MOD LANG UML INFR
   *OMG, 2007, UN MOD LANG UML SUP
   *OMG, 2005, MET OBJ FAC MOF QUER
   OMG, 2006, MET OBJ FAC MOF COR
   Padgham L, 2005, ENG APPL ARTIF INTEL, V18, P173, DOI 10.1016/j.engappai.2004.11.018
   Pavón J, 2003, LECT NOTES ARTIF INT, V2691, P394
   Popa L., 2002, Proceedings of the Twenty-eighth International Conference on Very Large Data Bases, P598
   Rekers J, 1997, J VISUAL LANG COMPUT, V8, P27, DOI 10.1006/jvlc.1996.0027
   RICHTERS M, 1998, LNCS, V1507, P449
   Rozenberg G., 1997, HDB GRAPH GRAMMARS C
   Sánchez Cuadrado J, 2006, LECT NOTES COMPUT SC, V4066, P158
   Schmechtig S, 2006, NEW ELECTRON, V39, P31
   Shatalin A., 2006, ECL MOD S
   STEELE PM, 1994, LECT NOTES COMPUTER, V823, P315
   THANGARAJAH J, 2005, P 4 INT JOINT C AUT, P127
   Tratt L., 2005, Software and Systems Modeling, V4, P112, DOI [DOI 10.1007/S10270-004-0070-1, 10.1007/s10270-004-0070-1]
   Varró D, 2006, LECT NOTES COMPUT SC, V4199, P410
   Varró D, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P978, DOI 10.1145/1244002.1244217
   *W3C, 2007, EXT STYL LANG TRANSF
   WILCOX A, 2003, P WORKSH TOOL INT SY, P1
   WIMMER M, 2007, P 40 ANN HAW INT C S, pB285
   ZUNDORF A, 2001, THESIS U PADERBORN P
NR 66
TC 17
Z9 17
U1 1
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2010
VL 52
IS 4
BP 422
EP 435
DI 10.1016/j.infsof.2009.10.008
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 576CL
UT WOS:000276121400005
DA 2024-07-18
ER

PT J
AU Ruthruff, JR
   Elbaum, S
   Rothermel, G
AF Ruthruff, Joseph R.
   Elbaum, Sebastian
   Rothermel, Gregg
TI Experimental program analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Experimental program analysis; Program analysis; Experimentation
ID SOFTWARE
AB Program analysis techniques are used by software engineers to deduce and infer characteristics of software systems. Recent research has suggested that certain program analysis techniques can be formulated as formal experiments. This article reports the results of research exploring this suggestion. Building on principles and methodologies underlying the use of experimentation in other fields, we provide descriptive and operational definitions of experimental program analysis, illustrate them by example, and describe several differences between experimental program analysis and experimentation in other fields. We also explore the applicability of experimental program analysis to three software engineering problems: program transformation, program debugging, and program understanding. Our findings indicate that experimental program analysis techniques can provide new and potentially improved solutions to these problems, and suggest that experimental program analysis offers a promising new direction for program analysis research. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Ruthruff, Joseph R.; Elbaum, Sebastian; Rothermel, Gregg] Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
C3 University of Nebraska System; University of Nebraska Lincoln
RP Ruthruff, JR (corresponding author), Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
EM jrruthruff@gmail.com; elbaum@cse.unl.edu; grother@cse.unl.edu
FU NSF [CNS-0454203, CCF-0440452, CCR-0347518]
FX We thank Kent Eskridge and David Marx of the Statistics Department at
   the University of Nebraska-Lincoln for feedback on our definition of
   experimental program analysis. We also thank the anonymous reviewers for
   their valuable suggestions. This work has been supported by NSF under
   awards CNS-0454203, CCF-0440452, and CCR-0347518 to University of
   Nebraska-Lincoln.
CR [Anonymous], 1997, Design and Analysis of Experiments
   [Anonymous], P 14 INT S FDN SOFTW
   [Anonymous], P INT A ERSH MEM C P
   ARNOLD M, 2001, P ACM SIGPLAN 2001 C, P168, DOI DOI 10.1145/378795.378832
   Ball T, 1999, LECT NOTES COMPUT SC, V1687, P216, DOI 10.1145/318774.318944
   BOWMAN M, 2007, P 23 IEEE INT C SOFT, P124
   Box GEP, 1978, SERIES PROBABILITY M
   CHILDERS BR, 2003, NAT SCI FDN WORKSH N
   CHOI JD, 2002, P INT S SOFTW TEST A, P210
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Do H, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P60
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Dunietz IS, 1997, PROC INT CONF SOFTW, P205, DOI 10.1145/253228.253271
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P312, DOI 10.1109/TSE.2005.50
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   ERNST MD, 2003, P ICSE WORKSH DYN AN, P24
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Glover F., 1998, Tabu Search
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   HARMAN M, 2007, P 29 INT C SOFTW ENG, P20
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Kinnula VL, 2007, EUR RESPIR J, V29, P51, DOI 10.1183/09031936.00023606
   Kirk R.E., 1995, EXPT DESIGN PROCEDUR
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kuehl R.O., 2000, Design of experiments: statistical principles of research designand analysis, V2nd
   LIBLIT B, 2005, P 2005 ACM SIGPLAN C, P15, DOI DOI 10.1145/1065010.1065014
   Misherghi G., 2006, Proceedings of the 28th International Conference on Software Engineering, P142, DOI [DOI 10.1145/1134285.1134307, 10.1145/1134285.1134307]
   Nurmela K.J., 1993, CONSTRUCTING COVERIN
   Nurmela KJ, 2004, DISCRETE APPL MATH, V138, P143, DOI 10.1016/S0166-218X(03)00291-9
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Robson C., 2002, Real world research
   Ruthruff JR, 2006, IEEE T SOFTWARE ENG, V32, P213, DOI 10.1109/TSE.2006.37
   RUTHRUFF JR, 2006, P ACM SIGSOFT INT S, P49
   RUTHRUFF JR, 2006, P 28 INT C SOFTW ENG, P977
   Siegel S., 1998, NONPARAMETRIC STAT B, V2nd
   Siegmund D. O., 1985, SEQUENTIAL ANAL TEST
   Stardom J., 2001, METAHEURISTICS SEARC
   THOMPSON SK, 2002, SERIES PROBABILITY M
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Trochim W.M., 2001, Research Methods Knowledge Base, V2
   Vokolos FI, 1998, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.1998.738488
   Wald Abraham, 1947, SEQUENTIAL ANAL
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Young M., 1989, Proceedings. 11th International Conference on Software Engineering (Cat. No.89CH2718-5), P53, DOI 10.1145/74587.74593
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zeller Andreas., 2003, P ICSE WORKSHOP DYNA, P6
   Zeller Andreas., 2002, Proceedings of the 10th ACM SIGSOFT Symposium on Foundations of Software Engineering, SIGSOFT '02/FSE-10, P1, DOI DOI 10.1145/587051.587053
   2008, DAIKON INVARIANT DET
   2008, REFACTORLT AQRIS SOF
NR 51
TC 3
Z9 3
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2010
VL 52
IS 4
BP 359
EP 379
DI 10.1016/j.infsof.2009.10.002
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 576CL
UT WOS:000276121400001
DA 2024-07-18
ER

PT J
AU Zhang, ZY
   Chan, WK
   Tse, TH
   Hu, PF
   Wang, XM
AF Zhang, Zhenyu
   Chan, W. K.
   Tse, T. H.
   Hu, Peifeng
   Wang, Xinming
TI Is non-parametric hypothesis testing model robust for statistical fault
   localization?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Fault localization; Non-parametric; Hypothesis testing; Normality
AB Fault localization is one of the most difficult activities in software debugging. Many existing statistical fault-localization techniques estimate the fault positions of programs by comparing the program feature spectra between passed runs and failed runs. Some existing approaches develop estimation formulas based on mean values of the underlying program feature spectra and their distributions alike. Our previous work advocates the use of a non-parametric approach in estimation formulas to pinpoint fault-relevant positions. It is worthy of further study to resolve the two schools of thought by examining the fundamental, underlying properties of distributions related to fault localization. In particular, we ask: Can the feature spectra of program elements be safely considered as normal distributions so that parametric techniques can be soundly and powerfully applied? In this paper, we empirically investigate this question from the program predicate perspective. We conduct an experimental study based on the Siemens suite of programs. We examine the degree of normality on the distributions of evaluation biases of the predicates, and obtain three major results from the study. First, almost all examined distributions of evaluation biases are either normal or far from normal, but not in between. Second, the most fault-relevant predicates are less likely to exhibit normal distributions in terms of evaluation biases than other predicates. Our results show that normality is not common as far as evaluation bias can represent. Furthermore, the effectiveness of our non-parametric predicate-based fault-localization technique weakly correlates with the distributions of evaluation biases, making the technique robust to this type of uncertainty in the underlying program spectra. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Chan, W. K.] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
   [Zhang, Zhenyu; Tse, T. H.] Univ Hong Kong, Dept Comp Sci, Pokfulam, Hong Kong, Peoples R China.
   [Hu, Peifeng] China Merchants Bank, Hong Kong, Hong Kong, Peoples R China.
   [Wang, Xinming] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Hong Kong, Hong Kong, Peoples R China.
C3 City University of Hong Kong; University of Hong Kong; China Merchants
   Bank; Hong Kong University of Science & Technology
RP Chan, WK (corresponding author), City Univ Hong Kong, Dept Comp Sci, Tat Chee Ave, Hong Kong, Hong Kong, Peoples R China.
EM zyzhang@cs.hku.hk; wkchan@cs.cityu.edu.hk; thtse@cs.hku.hk;
   pfhu@cs.hku.hk; rubin@cse.ust.hk
RI Tse, T.H./C-6590-2008; Chan, Wah Kheong/AGA-6636-2022; Wang,
   Xinming/A-7388-2014
OI Tse, T.H./0000-0002-0460-8377; Chan, Wah Kheong/0000-0002-9105-5837;
   Wang, Xinming/0000-0002-1982-0928; Chan, Wing Kwong/0000-0001-7726-6235
FU Research Grants Council of Hong Kong [123207, 716507]; City University
   of Hong Kong [7002324, 7002464]
FX This research is supported in part by GRF grants of the Research Grants
   Council of Hong Kong (Project Nos. 123207 and 716507) and SRG grants of
   City University of Hong Kong (Project Nos. 7002324 and 7002464).
CR [Anonymous], 2006, P 28 INT C SOFTW ENG
   Baudry B., 2006, P 28 INT C SOFTW ENG, P82, DOI DOI 10.1145/1134285.1134299
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   COLLOFELLO JS, 1987, P 1987 NAT COMP C CH, P539
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   GUPTA N, 2005, P 20 IEEE ACM INT C, P263
   Harrold MJ, 2000, SOFTW TEST VERIF REL, V10, P171, DOI 10.1002/1099-1689(200009)10:3<171::AID-STVR209>3.0.CO;2-J
   HU P, 2008, P 8 INT C QUAL SOFTW, P385
   JIANG B, 2009, P 33 ANN INT COMP SO
   Jones J A., 2007, Debugging in parallel, P16
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Jones JA, 2005, P 20 IEEE ACM INT C, P273
   KOREL B, 1988, IEEE T SOFTWARE ENG, V14, P1253, DOI 10.1109/32.6169
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liblit B, 2003, ACM SIGPLAN NOTICES, V38, P141, DOI 10.1145/780822.781148
   Liu C, 2006, P 14 ACM SIGSOFT INT, P46
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Lowry R., 2006, Concepts and Applications of Inferential Statistics
   Nainar P.A., 2007, ISSTA, P5, DOI DOI 10.1145/1273463.1273467
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Wang XM, 2009, PROC INT CONF SOFTW, P45, DOI 10.1109/ICSE.2009.5070507
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Wong WE, 2007, P INT COMP SOFTW APP, P449
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   ZHANG Z, 2008, P 32 ANN INT COMP SO, P128
   Zhang Z., 2009, P 7 JOINT M EUR SOFT
   Zill D.G., 2006, Advanced engineering mathematics, V3rd
NR 29
TC 16
Z9 20
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2009
VL 51
IS 11
SI SI
BP 1573
EP 1585
DI 10.1016/j.infsof.2009.06.013
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 504LW
UT WOS:000270619300009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kapitsaki, GM
   Kateros, DA
   Prezerakos, GN
   Venieris, LS
AF Kapitsaki, Georgia M.
   Kateros, Dimitrios A.
   Prezerakos, George N.
   Venieris, Lakovos S.
TI Model-driven development of composite context-aware web applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Context; Context-awareness; Model-Driven Architecture; Web services
AB Context-awareness constitutes an essential aspect of services, especially when interaction with end-users is involved. In this paper a solution for the context-aware development of web applications consisting of web services is presented. The methodology proposes a model based approach and advocates in favour of a complete separation of the web application functionality from the context adaptation at all development phases (analysis, design, implementation). In essence, context adaptation takes place on top of and is transparent to the web application business functionality. Starting from UML diagrams of independent web services and respective UML context models, our approach can produce a functional composite context-aware application. At execution level this independence is maintained through an adaptation framework based on message interception. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Kapitsaki, Georgia M.; Kateros, Dimitrios A.; Venieris, Lakovos S.] Natl Tech Univ Athens, Sch Elect & Comp Engn, Intelligent Commun & Broadband Networks Lab, Athens 15780, Greece.
   [Prezerakos, George N.] Technol Educ Inst Piraeus, Dept Elect Comp Syst, Software & Serv Engn Lab, Athens 12244, Greece.
C3 National Technical University of Athens; University of West Attica
RP Kapitsaki, GM (corresponding author), Natl Tech Univ Athens, Sch Elect & Comp Engn, Intelligent Commun & Broadband Networks Lab, 9 Heroon Polytechneioy Str, Athens 15780, Greece.
EM gkapi@icbnet.ntua.gr; dimitris@icbnet.ntua.gr; prezerak@teipir.gr;
   venieris@cs.ntua.gr
OI Kapitsaki, Georgia/0000-0003-3742-7123
FU State Scholarships Foundation; European Union
FX G. Kapitsaki is supported by a State Scholarships Foundation grant. This
   work has been partially supported by the European Union co-funded
   project Simple Mobile Services (IST-SMS, http://www.ist-sms.org/).
CR *ANDROMDA, ANDROMDA BPM4STRUTS
   [Anonymous], OBJ CONSTR LANG OMG
   [Anonymous], 2008, IEEE INT EL DEV M IE, DOI DOI 10.1109/IEDM.2008.4796772
   [Anonymous], P 2007 INT WORKSH EN
   [Anonymous], UN MOD LANG OMG UML
   [Anonymous], 1998, P WORKSH HYP DEV PRO
   [Anonymous], 2003, Eclipse Modeling Framework
   Bartolomeo G, 2006, P ADV INT C TEL INT, P209
   Ceri S, 2000, COMPUT NETW, V33, P137, DOI 10.1016/S1389-1286(00)00040-2
   Ceri S, 2007, ACM T INTERNET TECHN, V7, DOI 10.1145/1189740.1189742
   DEY K, 1999, GITGVU9922
   *ECL, ECL MOD DEV TOOLS MD
   FENGLER, 2002, P 2 INT WORKSH INN I, V2346, P51
   Gronmo R, 2004, 2004 IEEE INTERNATIONAL CONFERNECE ON E-TECHNOLOGY, E-COMMERE AND E-SERVICE, PROCEEDINGS, P42
   KAPITSAKI G, 2007, P IST MOB WIR COMM S, P1
   KATEROS DA, P IEEE INT C SERV CO, V2, P489
   Keays R., 2003, International Workshop on Data Engineering for Wireless and Mobile Access, P9
   Keidl M., 2004, WEB SERVICES WWW, P55, DOI DOI 10.1145/1013367.1013378
   KOHLERT D, 2007, JAX WS 2 1 JAVA API
   Mellor S.J., 2004, MDA DISTILLED
   *OMG, 2007, XML MET INT XMI MOF
   Prezerakos GN, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P320
   Sheng QZ, 2005, ICMB 2005: International Conference on Mobile Business, P206, DOI 10.1109/ICMB.2005.33
   Tai H, 2004, IBM J RES DEV, V48, P797, DOI 10.1147/rd.485.0797
   Tandon G, 2004, EIGHTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P111, DOI 10.1109/EDOC.2004.1342509
NR 25
TC 25
Z9 26
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2009
VL 51
IS 8
BP 1244
EP 1260
DI 10.1016/j.infsof.2009.03.002
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 464KT
UT WOS:000267504500004
DA 2024-07-18
ER

PT J
AU Blanco, R
   Tuya, J
   Adenso-Díaz, B
AF Blanco, Raquel
   Tuya, Javier
   Adenso-Diaz, Belarmino
TI Automated test data generation using a scatter search approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Automatic rest case generation; Branch coverage;
   Scatter search; Local search; Metaheuristic search techniques
ID SOFTWARE TEST DATA; GENETIC ALGORITHMS; SYMBOLIC EXECUTION; COVERAGE
AB The techniques for the automatic generation of test cases try to efficiently find a small set of cases that allow a given adequacy criterion to be fulfilled, thus contributing to a reduction in the cost of software testing. In this paper we present and analyze two versions of an approach based on the scatter search metaheuristic technique for the automatic generation of software test cases using a branch coverage adequacy criterion. The first test case generator, called TCSS, uses a diversity property to extend the search of test cases to all branches of the program under test in order to generate test cases that cover these. The second, called TCSS-LS, is an extension of the previous test case generator which combines the diversity property with a local search method that allows the intensification of the search for test cases that cover the difficult branches. We present the results obtained by our generators and carry out a detailed comparison with many other generators, showing a good performance of our approach. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Blanco, Raquel; Tuya, Javier] Univ Oviedo, Dept Comp Sci, Asturias 33204, Spain.
   [Adenso-Diaz, Belarmino] Univ Oviedo, Dept Management Sci, Asturias 33204, Spain.
C3 University of Oviedo; University of Oviedo
RP Blanco, R (corresponding author), Univ Oviedo, Dept Comp Sci, Campus Viesques, Asturias 33204, Spain.
EM rblanco@uniovi.es; tuya@uniovi.es; adenso@uniovi.es
RI /E-9752-2016; Adenso-Diaz, Belarmino/L-1638-2017; Tuya,
   Javier/L-6850-2014
OI /0000-0003-2855-0760; Adenso-Diaz, Belarmino/0000-0002-6519-9810; Tuya,
   Javier/0000-0002-1091-934X
FU Department of Education and Science (Spain); ERDF; National Programme
   for Research, Development and Innovation; IN2TEST
   [TIN2004-06689-C03-02]; Test4SOA [TIN2007-67843-C06-01]; RePRIS
   [TIN2007-30391-E]
FX This study was funded by the Department of Education and Science (Spain)
   and ERDF funds under the National Programme for Research, Development
   and Innovation, Projects Nos. IN2TEST (TIN2004-06689-C03-02), Test4SOA
   (TIN2007-67843-C06-01), and RePRIS (TIN2007-30391-E).
CR Ahmed MA, 2008, COMPUT OPER RES, V35, P3107, DOI 10.1016/j.cor.2007.01.012
   Alba E, 2008, COMPUT OPER RES, V35, P3161, DOI 10.1016/j.cor.2007.01.016
   [Anonymous], THESIS U GLAMORGAN
   [Anonymous], 1990, Software testing techniques {
   Benavent E, 2005, COMPUT OPER RES, V32, P3111, DOI 10.1016/j.cor.2004.04.007
   BLANCO R, 2004, P 1 INT C KNOWL ENG, P387
   Botella B, 2006, SOFTW TEST VERIF REL, V16, P97, DOI 10.1002/stvr.333
   Bühler O, 2008, COMPUT OPER RES, V35, P3144, DOI 10.1016/j.cor.2007.01.015
   Bueno P. M., 2007, P 2 INT WORKSH RAND, P10
   Bueno PMS, 2002, INT J SOFTW ENG KNOW, V12, P691, DOI 10.1142/S0218194002001074
   Chan KP, 2006, INT J SOFTW ENG KNOW, V16, P553, DOI 10.1142/S0218194006002926
   Chen TY, 2007, IEEE T RELIAB, V56, P562, DOI 10.1109/TR.2007.903293
   Chen TY, 2004, INFORM SOFTWARE TECH, V46, P1001, DOI 10.1016/j.infsof.2004.07.004
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   Del Grosso C, 2008, COMPUT OPER RES, V35, P3125, DOI 10.1016/j.cor.2007.01.013
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Díaz E, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P310, DOI 10.1109/ASE.2003.1240327
   DIAZ E, 2004, THESIS U OVIEDO
   DIAZ E, 2005, P 6 MET INT C, P290
   Díaz E, 2008, COMPUT OPER RES, V35, P3052, DOI 10.1016/j.cor.2007.01.009
   Emer MCFP, 2003, SOFTWARE QUAL J, V11, P167, DOI 10.1023/A:1023772729494
   Ferguson R., 1996, ACM Transactions on Software Engineering and Methodology, V5, P63, DOI 10.1145/226155.226158
   Girgis MR, 2005, J UNIVERS COMPUT SCI, V11, P898
   Glover F, 2000, CONTROL CYBERN, V29, P653
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   Gotlieb A, 2007, INFORM SOFTWARE TECH, V49, P1030, DOI 10.1016/j.infsof.2006.10.016
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Hartman Alan, 2002, ACM SIGSOFT Software Engineering Notes, V27, P205, DOI DOI 10.1145/566172.566207
   Jones BF, 1998, COMPUT J, V41, P98, DOI 10.1093/comjnl/41.2.98
   Jones BF, 1996, SOFTWARE ENG J, V11, P299, DOI 10.1049/sej.1996.0040
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Laguna M., 2002, SCATTER SEARCH METHO
   LAGUNA M, 2000, TR112000 U VAL DEP E
   Li JJ, 2006, INFORM SOFTWARE TECH, V48, P1187, DOI 10.1016/j.infsof.2006.06.007
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Lin JC, 2001, INFORM SCIENCES, V131, P47, DOI 10.1016/S0020-0255(00)00093-1
   Mansour N, 2004, SOFTWARE QUAL J, V12, P121, DOI 10.1023/B:SQJO.0000024059.72478.4e
   Mantere T, 2005, APPL SOFT COMPUT, V5, P315, DOI 10.1016/j.asoc.2004.08.004
   Martí R, 2006, EUR J OPER RES, V169, P351, DOI 10.1016/j.ejor.2004.08.003
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McMinn P, 2006, EVOL COMPUT, V14, P41
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Meudec C, 2001, SOFTW TEST VERIF REL, V11, P81, DOI 10.1002/stvr.225
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Miller J, 2006, INFORM SOFTWARE TECH, V48, P586, DOI 10.1016/j.infsof.2005.06.006
   Myers Glenford J., 2011, The Art of Software Testing
   Ngo MN, 2008, INFORM SOFTWARE TECH, V50, P641, DOI 10.1016/j.infsof.2007.06.006
   NTAFOS S, 1998, P INT S SOFTW TEST A, P42
   OFFUT AJ, 1994, ISSETR94105
   Pacheco JA, 2008, IEEE INTELL SYST, V23, P57, DOI 10.1109/MIS.2008.8
   PARGAS RP, 1999, J SOFTWARE TESTING V, V9, P263
   Russell RA, 2006, EUR J OPER RES, V169, P606, DOI 10.1016/j.ejor.2004.08.018
   Sagarna R, 2006, EUR J OPER RES, V169, P392, DOI 10.1016/j.ejor.2004.08.006
   TONELLA P, 2004, P INT S SOFTW TEST A, P119
   Tracey N, 2000, SOFTWARE PRACT EXPER, V30, P61, DOI 10.1002/(SICI)1097-024X(200001)30:1<61::AID-SPE292>3.0.CO;2-9
   TRACEY N, 1998, P INT S SOFTW TEST A, P73
   Vergilio SR, 2006, INT J SOFTW ENG KNOW, V16, P245, DOI 10.1142/S0218194006002781
   Waeselynck H, 2007, EMPIR SOFTW ENG, V12, P35, DOI 10.1007/s10664-006-7551-5
   Watkins A, 2006, INT J SOFTW ENG KNOW, V16, P269, DOI 10.1142/S021819400600277X
   Watkins A, 2006, SOFTWARE PRACT EXPER, V36, P95, DOI 10.1002/spe.684
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Xiao M, 2007, EMPIR SOFTW ENG, V12, P183, DOI 10.1007/s10664-006-9026-0
   Yamashita DS, 2006, EUR J OPER RES, V169, P623, DOI 10.1016/j.ejor.2004.08.019
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 64
TC 21
Z9 23
U1 0
U2 10
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2009
VL 51
IS 4
BP 708
EP 720
DI 10.1016/j.infsof.2008.11.001
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 409HA
UT WOS:000263495600003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Xiao, L
   Greer, D
AF Xiao, Liang
   Greer, Des
TI Adaptive Agent Model: Software Adaptivity using an Agent-oriented
   Model-Driven Architecture
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agent; Business knowledge modelling; Model-Driven architecture; Software
   adaptivity
ID SYSTEM; INTELLIGENT; MDA
AB Model-Driven Architecture (MDA) promotes the development of software systems through successive building and generation of models, improving the reusability of models. Applying the same principles to the area of Agent-Oriented Software Engineering (AOSE) advances the ideas behind MDA even more significantly, due to the inherent adaptivity of software agents We describe an appropriate set of models originating from requirements specification and transformable to models understandable and executable by agents thus demonstrating an Agent-oriented Model-Driven Architecture (AMDA)approach. In AMDA, agents use hierarchical business knowledge models with business process rules at the top, business rules to control policy and logic in the middle and a base layer defining business concepts. Being externalised, knowledge is easily configurable by human beings and applied by software agents. A real case study is used to illustrate the process. The main advances over the object-oriented MDA are (i) the addition of component dynamics (ii) the use of agent-executable rule-based business models and (iii) a proposed higher level of abstraction with the direct representation of business requirements. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Xiao, Liang] Univ Southampton, Sch Elect & Comp Sci, Southampton SO17 1BJ, Hants, England.
   [Greer, Des] Queens Univ Belfast, Sch Elect Elect Engn & Comp Sci, Belfast BT7 1NN, Antrim, North Ireland.
C3 University of Southampton; Queens University Belfast
RP Xiao, L (corresponding author), Univ Southampton, Sch Elect & Comp Sci, Southampton SO17 1BJ, Hants, England.
EM lx@ccs.soton.ac.uk; des.greer@qub.ac.uk
RI xiao, liang/G-2968-2010
OI xiao, liang/0000-0003-0178-9384
CR Ambler W. S., 2000, UNIFIED PROCESS INCE
   [Anonymous], SOFTWARE ARCHITECTUR
   Boinot P, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P111, DOI 10.1109/ASE.2000.873656
   Bruegge B., 2009, OBJECT ORIENTED SOFT
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Demeyer S, 2005, PROC IEEE INT CONF S, P723
   EHRLER L, 2004, P 3 INT JOINT C AUT, P906
   Fayad M, 1996, COMMUN ACM, V39, P58, DOI 10.1145/236156.236170
   Fowler M, 2004, UML distilled: A brief guide to the standard object modeling language
   France RB, 2006, COMPUTER, V39, P59, DOI 10.1109/MC.2006.65
   Gamma E., 1994, DESIGN PATTERNS
   Goh WT, 2003, J MATER PROCESS TECH, V139, P103, DOI 10.1016/S0924-0136(03)00189-4
   HOGG J, 2003, P OMG WORKSH MDA IMP
   Huamonte J, 2005, PROCEEDINGS OF THE IEEE SOUTHEASTCON 2004, P594, DOI 10.1109/SECON.2005.1423311
   Jacobson I., 2000, The Road to the Unified Software Development Process
   *JADE, JADE PLATF
   Jia HZ, 2004, ROBOT CIM-INT MANUF, V20, P79, DOI 10.1016/j.rcim.2003.08.001
   Kavakli V, 1999, INFORM SYST, V24, P187, DOI 10.1016/S0306-4379(99)00015-0
   Kinny D, 1996, LNAI, V1038
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Korthaus A., 1998, UNIFIED MODELING LAN, P220, DOI [10.1007/978-3-642-48673-915, DOI 10.1007/978-3-642-48673-9_15]
   Kristensen B. B., 1996, Proceedings. 1996 Asia-Pacific Software Engineering Conference, P288, DOI 10.1109/APSEC.1996.566763
   Kwon OB, 2001, EXPERT SYST APPL, V21, P191, DOI 10.1016/S0957-4174(01)00039-2
   Letier E, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P83, DOI 10.1109/ICSE.2002.1007958
   Lovrek I, 2003, PROC IEEE INT CONF S, P440, DOI 10.1109/ICSM.2003.1235454
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   Meservy TO, 2005, COMPUTER, V38, P52, DOI 10.1109/MC.2005.316
   Morgan T., 2002, BUSINESS RULES INFOR
   MURPHY SN, 1997, AMIA ANN FALL S P, P71
   *OBJ MAN GROUP, 2002, PTC020109 OMG
   *OBJ MAN GROUP INC, 2002, CORBA 3 0 IDL SYNT S
   Oreizy P., 1998, P 20 INT C SOFTW ENG
   Pfleeger ShariLawrence., 2005, Software engineering: theory and practice ", V3rd
   RAI VK, 2004, ELECTRON COMMER R A, V3, P54
   RIEHLE D, 2002, FRAMEWORK DESIGN IMP
   Schmechtig S, 2006, NEW ELECTRON, V39, P31
   Sunyé G, 2002, INFORM SYST, V27, P445, DOI 10.1016/S0306-4379(02)00014-5
   Thomas D, 2004, IEEE SOFTWARE, V21, P15, DOI 10.1109/MS.2004.1293067
   van Lamsweerde A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P5, DOI 10.1109/ICSE.2000.870392
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Wermelinger M, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P115, DOI 10.1109/IWPSE.2003.1231217
   Wooldridge M., 1997, IEE Proceedings-Software Engineering, V144, P26, DOI 10.1049/ip-sen:19971026
   WOOLDRIDGE M, 2001, LNCS, V1957
   Woolridge M., 1999, Proceedings of the Third International Conference on Autonomous Agents, P69, DOI 10.1145/301136.301165
   Xiao L., 2006, ADV TOPICS DATABASE, V5, P148
   XIAO L, 2005, P 10 CAISE IFIP8 1 I, P605
   XIAO L, 2005, P 17 INT C SOFTW ENG, P62
   Xiao L., 2005, P 1 INT WORKSH REQ E, P28
   XIAO L, INT J MULTI IN PRESS
   XIAO L, 2006, P 18 INT C SOFTW ENG, P651
   XIAO L, 2005, P PREP2005 LANC UK, P287
   Xiao L, 2007, EUR J INFORM SYST, V16, P390, DOI 10.1057/palgrave.ejis.3000688
   Xiao L, 2006, MULTIAGENT GRID SYST, V2, P325, DOI 10.3233/MGS-2006-2403
   Yim HS, 2004, EXPERT SYST APPL, V27, P211, DOI 10.1016/j.eswa.2004.01.004
   YODER JW, 2002, P 3 IEEE IFIP C SOFT, P3
   YU E, 2002, LNCS, V2222, P206
   Yu Eric., 1998, P 4 INT WORKSHOP REQ, P15
NR 57
TC 17
Z9 20
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2009
VL 51
IS 1
SI SI
BP 109
EP 137
DI 10.1016/j.infsof.2008.02.002
PG 29
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 389FU
UT WOS:000262077500012
DA 2024-07-18
ER

PT J
AU Black, S
AF Black, Sue
TI Deriving an approximation algorithm for automatic computation of ripple
   effect measures
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software measurement; ripple effect; matrix algebra
ID STABILITY MEASURES; METRICS; COMPLEXITY
AB The ripple effect measures impact, or how likely it is that a change to a particular module may cause problems in the rest of a program. It can also be used as an indicator of the complexity of a particular module or program. Central to this paper is a reformulation in terms of matrix arithmetic of the original ripple effect algorithm produced by Yau and Collofello in 1978. The main aim of the reformulation is to clarify the component parts of the algorithm making the calculation more explicit. The reformulated algorithm has been used to implement REST (Ripple Effect and Stability Tool) which produces ripple effect measures for C programs. This paper describes the reformulation of Yau and Collofello's ripple effect algorithm focusing on the computation of matrix Z(m) which holds intramodule change propagation information. The reformulation of the ripple effect algorithm is validated using fifteen programs which have been grouped by type. Due to the approximation spurious Is are contained within matrix Z(m). It is discussed whether this has an impact on the accuracy of the reformulated algorithm. The conclusion of this research is that the approximated algorithm is valid and as such can replace Yau and Collofello's original algorithm. (C) 2007 Elsevier B.V. All rights reserved.
C1 Univ Westminster, Harrow Sch Comp Sci, Dept Informat & Software Syst, Harrow HA1 3TP, Middx, England.
C3 University of Westminster
RP Black, S (corresponding author), Univ Westminster, Harrow Sch Comp Sci, Dept Informat & Software Syst, Watford Rd,Northwick Pk, Harrow HA1 3TP, Middx, England.
EM sueblack@gmail.com
OI Black OBE, Professor Sue/0000-0002-9315-9517
CR BACHE L, 1991, QUALMS TOOL CONTROL
   BACHE R, 1990, CSSEQUGDOCOWUG10A S
   BASILI VR, 1983, IEEE T SOFTWARE ENG, V9, P664, DOI 10.1109/TSE.1983.235431
   BENNETT KH, 1990, INFORM SOFTWARE TECH, V12, P257
   BILAL HZ, 2006, QUANT APPR OBJ OR SO
   BLACK S, 1999, 9 INT WORKSH SOFTW M
   BLACK S, 2000, NEW APPROACHES SOFTW, P161
   BLACK SE, 2001, 5 WORLD C SYST CYB I
   BLACK SE, 2001, THESIS S BANK U LOND
   BLACK SE, 2006, NASA J
   BLACK SE, 2001, SOFTWARE MAINTENANCE, V13
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Bowen J. B., 1978, P ACM SOFTW QUAL ASS, P148, DOI [10.1145/800283.811115, DOI 10.1145/800283.811115]
   CHANG SC, 1984, THESIS NW U EVANSTON
   CHAPIN N, 2000, IEEE C SOFTW MAINT S
   Chaumun MA, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P130, DOI 10.1109/CSMR.1999.756690
   COLLOFELLO JS, 1987, P AFIPS JOINT COMP C, V56, P675
   CUNNINGHAMGREEN R, 1979, MINIMAX ALGEBRA, V166
   Elish MO, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P193, DOI 10.1109/CSMR.2003.1192427
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   Hall R, 1997, BT TECHNOL J, V15, P123, DOI 10.1023/A:1018694404616
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Haney F.M., 1972, P AFIPS JOINT COMPUT, P173
   HARROLD MJ, 1994, ACM T PROGR LANG SYS, V16, P175, DOI 10.1145/174662.174663
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   HOMAN D, 1999, WORKSH EMP STUD SOFT
   HSIEH CC, 1982, THESIS NW U EVANSTON
   JOINER JK, 1993, 9384 TR U MINN
   Kabaili H., 2005, IASTED INT C SOFTW E
   Kelly D, 2004, IEEE SOFTWARE, V21, P46, DOI 10.1109/MS.2004.1270761
   Lee T, 2000, SAFETY SCI, V34, P61, DOI 10.1016/S0925-7535(00)00007-2
   Li LF, 1996, PROCEEDINGS OF INTERNATIONAL WORKSHOP ON CSCW IN DESIGN, P171, DOI 10.1109/ICSM.1996.565004
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Myers GJ, 1980, MODEL PROGRAM STABIL, P137
   Parr T., 1996, Language translation using PCCTS and C++
   ROSNER PE, 2005, IASTED INT C SOFTW E
   SHEPPERD M, 1990, SOFTWARE ENG J, V5, P3, DOI 10.1049/sej.1990.0002
   SHEPPERD M, 1988, SOFTWARE ENG J, V3, P30, DOI 10.1049/sej.1988.0003
   SHEPPERD M, 1993, SOFTWARE ENG METRICS, V1
   Soong N., 1977, P ACM ANN C, P163
   STEVENS W, 1974, IBM SYST J, V13, P89
   TROY DA, 1981, J SYST SOFTWARE, V2, P113, DOI 10.1016/0164-1212(81)90031-5
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Yau S. S., 1978, Proceedings of COMPSAC 78 Computer Software and Applications Conference, P60
   Yau S. S., 1984, Proceedings COMPSAC 84. The IEEE Computer Society's Eighth International Computer Software & Applications Conference (Cat. No. 84CH2096-6), P109
   YAU SS, 1980, IEEE T SOFTWARE ENG, V6, P545, DOI 10.1109/TSE.1980.234503
   YAU SS, 1985, IEEE T SOFTWARE ENG, V11, P849, DOI 10.1109/TSE.1985.232544
   Yourdon E., 1979, STRUCTURED DESIGN
NR 48
TC 15
Z9 16
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2008
VL 50
IS 7-8
BP 723
EP 736
DI 10.1016/j.infsof.2007.07.008
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 305KT
UT WOS:000256178000008
DA 2024-07-18
ER

PT J
AU Tran, QNN
   Low, G
AF Tran, Quynh-Nhu Numi
   Low, Graham
TI MOBMAS: A methodology for ontology-based multi-agent systems development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE agent-oriented software engineering; analysis and design methodologies;
   ontology; interoperability; reusability
ID DESIGN
AB Ontologies offer significant benefits to multi-agent systems: interoperability, reusability, support for multi-agent system (MAS) development activities (such as system analysis and agent knowledge modeling) and support for MAS operation (such as agent communication and reasoning). This paper presents an ontology-based methodology, MOBMAS, for the analysis and design of multi-agent systems. MOBMAS is the first methodology that explicitly identifies and implements the various ways in which ontologies can be used in the MAS development process and integrated into the MAS model definitions. In this paper, we present comprehensive documentation and validation of MOBMAS. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Tran, Quynh-Nhu Numi; Low, Graham] Univ New S Wales, Sch Informat Syst, Sydney, NSW 2052, Australia.
C3 University of New South Wales Sydney
RP Low, G (corresponding author), Univ New S Wales, Sch Informat Syst, Sydney, NSW 2052, Australia.
EM numitran@yahoo.com; g.low@unsw.edu.au
CR AMBROSINGERSON J, 1988, 7 NATL C ART INT AAA
   [Anonymous], 2002, FIPA ACL MESS STRUCT
   [Anonymous], AGENT ORIENTED METHO
   [Anonymous], SECURITY ORIENTED AP
   Bergenti F, 2002, INT J SOFTW ENG KNOW, V12, P605, DOI 10.1142/S0218194002001086
   Bernon C., 2005, Agent-oriented methodologies, P172
   Bratman M. E., 1988, Computational Intelligence, V4, P349, DOI 10.1111/j.1467-8640.1988.tb00284.x
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   CASTRO J, 2005, AGENT ORIENTED METHO, P20
   Chelberg D, 2001, SOUTHEAST SYMP SYSTE, P377, DOI 10.1109/SSST.2001.918549
   Collinot A, 1998, APPL ARTIF INTELL, V12, P127, DOI 10.1080/088395198117794
   Cossentino M., 2005, AGENT ORIENTED METHO, P79, DOI [DOI 10.4018/978-1-59140-581-8.CH004, 10.4018/978-1-59140-581-8.ch004]
   CRANEFIELD S, 2001, ONT AG SYST WORKSH M
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   DELOACH SA, 2005, AGENT ORIENTED METHO, P236
   DEMAZEAU Y, 1996, 1 NATL S PAR DISTR A
   EHRIG M, 2004, 1 EUR SEM WEB S HER
   ELAMMARI M, 1999, 1 BICONFERENCE WORKS
   FABIO B, 2004, JADE PROGRAMMERS GUI
   Ferber J, 1998, INTERNATIONAL CONFERENCE ON MULTI-AGENT SYSTEMS, PROCEEDINGS, P128, DOI 10.1109/ICMAS.1998.699041
   Fernandez M., 1997, Methontology: From ontological art towards ontological engineering, P33
   FIKES RE, 1971, ARTIF INTELL, V2, P189, DOI 10.1016/0004-3702(71)90010-5
   *FIPA, 2003, FIPA MOD AR DEPL MOB
   FIPA, 2001, FIPA ONT SERV SPEC
   *FIPA, 2002, FIPA INT PROT SPEC
   *FIPA, 2001, FIPA AG SOFTW INT SP
   GARIJO FJ, 2005, AGENT ORIENTED METHO, P203
   GENNARI JH, 1994, INT J HUM-COMPUT ST, V41, P399, DOI 10.1006/ijhc.1994.1066
   GLASER N, 1996, CONTRIBUTION KNOWLED
   Gruninger M., 1995, Methodology for the design and evaluation of ontologies
   Guarino N., 1998, 1 INT C FORM ONT INF
   Haumer P, 1998, IEEE T SOFTWARE ENG, V24, P1036, DOI 10.1109/32.738338
   HEIJST GV, 1997, INT J HUMAN COMPUTER, V45, P183
   Henderson-Sellers B., 1998, OPEN TOOLBOX TECHNIQ
   IGLESIAS CA, 1997, 4 INT WORKSH ATAL 97
   JENNINGS NR, 1995, APPL ARTIF INTELL, V9, P357, DOI 10.1080/08839519508945480
   Kalfoglou Y, 2003, LECT NOTES COMPUT SC, V2800, P98
   KENDALL EA, 2000, 1 INT WORKSH AG OR S, P163
   KENDALL EA, 1995, 1 AUSTRA WORKSH DIST, P85
   Kinny D., 1996, Agents Breaking Away. 7th European Workshop on Modelling Autonomous Agents in a Multi-Agent World, MAAMAW '96 Proceedings, P56, DOI 10.1007/BFb0031846
   KINNY D, 1996, 3 INT WORKSH AG THEO, P1
   KINNY D, 2006, 7 EUR WORKSH MOD AUT, P56
   KLAMPANOS IA, 2003, SIGIR 2003, P401
   *KNOWL BAS SYST IN, 1994, IDEF5 KNOWL BAS SYST
   KOLP M, 2001, 1 INT WORKSH SOFTW R, P5
   Lind J., 2001, Agent-Oriented Software Engineering. First International Workshop, AOSE 2000. Revised Papers (Lecture Notes in Computer Science Vol.1957), P45
   LIND J, 1999, MASSIVE SOFTWARE ENG
   Macaulay L.A., 1996, Requirements engineering
   Madhavan J, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P80
   Mine T, 2004, LECT NOTES ARTIF INT, V3191, P31
   Mouratidis H, 2005, INFORM SYST, V30, P609, DOI 10.1016/j.is.2004.06.002
   ODELL J, 2003, 4 INT WORKSH AG OR S
   ODELL J, 2003, FIPA MODELING INTERA
   Omicini A., 1999, Autonomous Agents and Multi-Agent Systems, V2, P251, DOI 10.1023/A:1010060322135
   Omicini A, 2001, SCI COMPUT PROGRAM, V41, P277, DOI 10.1016/S0167-6423(01)00011-9
   OMICINI A, 2001, 1 INT WORKSH AOSE 20
   Padgham L, 2002, LECT NOTES COMPUT SC, V2585, P174
   Padgham Lin., 2005, AGENT ORIENTED METHO, P107, DOI DOI 10.4018/978-1-59140-581-8.CH005
   Parrott L, 2003, COMPUT ELECTRON AGR, V38, P79, DOI 10.1016/S0168-1699(02)00139-4
   Pavon J., 2005, Agent-oriented Methodologies, P236
   Russell S., 1995, Prentice Hall series in artificial intelligence, V25, P27
   Shoham Y., 1994, Foundations of knowledge representation and reasoning, P296
   SOMMERVILLE I, 1998, REQUIREMENT ENG PROC
   Stone P, 2000, AUTON ROBOT, V8, P345, DOI 10.1023/A:1008942012299
   STUMME G, 2001, WORKSH ONTS INF SHAR
   TAHARA Y, 1999, 21 INT C SOFTW ENG, P356
   Tamma V, 2005, ENG APPL ARTIF INTEL, V18, P223, DOI 10.1016/j.engappai.2004.11.011
   Tran Q.N., 2005, AGENT ORIENTEDMETHOD, P341
   Tran Q.-N. N., 2004, Agent-Oriented Information Systems II. 6th International Bi-Conference Workshop, AOIS 2004. Revised Selected Papers (Lecture Notes in Artificial Intelligence Vol. 3508), P157
   Tran QNN, 2006, COMPUT SYST SCI ENG, V21, P117
   TRAN QNN, 2006, MOBMAS METHODOLOGY O
   *UMBC, UMBC AGENTWEB
   USCHOLD M, 1995, IJCAI95S WORKSH BAS
   WEYNS D, 2004, 1 INT WORKSH ENV MUL
   WINIKOFF M, 2001, 14 AUSTR JOINT C ART, P557
   WOOD S, 1993, PLANNING DECISION MA
   Wooldridge M, 1999, MULTIAGENT SYSTEMS, P27
   Wooldridge M., 1995, Intelligent Agents. ECAI-94 Workshop on Agent Theories, Architectures, and Languages Proceedings, P1
   WOOLDRIDGE M, 2000, GAIA METHODOLOGY AGE, P285
   WOOLDRIDGE M, 2005, AGENT ORIENTED METHO, P136
   2002, B TELECOMMUNICATIONS
   EMORPHIA FIPA OS
   2004, AO SOFTWARE JACKTM I
NR 83
TC 46
Z9 53
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2008
VL 50
IS 7-8
BP 697
EP 722
DI 10.1016/j.infsof.2007.07.005
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 305KT
UT WOS:000256178000007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Jung, JY
   Park, J
   Han, SK
   Lee, K
AF Jung, Jae-Yoon
   Park, Jonghun
   Han, Seung-Kyun
   Lee, Kangchan
TI An ECA-based framework for decentralized coordination of ubiquitous web
   services
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE ECA rules; ubiquitous web services; device coordination; rule conflicts;
   conflict detection and resolution
AB Emerging ubiquitous computing network is expected to consist of a variety of heterogeneous and distributed devices. While web services technology is increasingly being considered as a promising solution to support the inter-operability between such heterogeneous devices via well-defined protocol, currently there is no effective framework reported in the literature that can address the problem of coordinating the web services-enabled devices. This paper considers a ubiquitous computing environment that is comprised of active, autonomous devices interacting with each other through web services, and presents an ECA (Event-Condition-Action)-based framework for effective coordination of those devices. Specifically, we first present an XML-based language for describing ECA rules that are embedded in web service-enabled devices. An ECA rule, when triggered by an internal or external event to the device, can result in the invocation of appropriate web services in the system. Subsequently, we consider the situation in which the rules are introduced and managed by multiple, independent users, and propose effective mechanisms that can detect and resolve potential inconsistencies among the rules. The presented ECA-based coordination approach is expected to facilitate seamless inter-operation among the web service-enabled devices in the emerging ubiquitous computing environments. (C) 2006 Elsevier B.V. All rights reserved.
C1 Seoul Natl Univ, Dept Ind Engn, Seoul 151742, South Korea.
   Eindhoven Univ Technol, Dept Technol Management, NL-5600 MB Eindhoven, Netherlands.
   Elect & Telecommun Res Inst, Taejon 305350, South Korea.
C3 Seoul National University (SNU); Eindhoven University of Technology;
   Electronics & Telecommunications Research Institute - Korea (ETRI)
RP Park, J (corresponding author), Seoul Natl Univ, Dept Ind Engn, San 56-1,Silim Dong, Seoul 151742, South Korea.
EM jonghun@snu.ac.kr
RI Jung, Jae-Yoon/B-6554-2013; Lee, Kangchan/H-6069-2017
OI Lee, Kangchan/0000-0002-7957-2591
CR Andrews Tony., 2003, Business process execution language for web services
   [Anonymous], OMA WEB SERV EN OWSE
   [Anonymous], 2005, Web Services Choreography Description Language Version 1.0
   AUBURN RJ, 2005, STATE CHART XML SCXM
   BANK D, 2006, WEB SERVICES EVENTIN
   Bassiliades N, 1997, INFORM SOFTWARE TECH, V39, P331, DOI 10.1016/S0950-5849(96)01155-X
   BEMMEL J, 2004, PARADIGM EVENT DRIVE
   Berndtsson M, 1997, INT J COOP INF SYST, V6, P315, DOI 10.1142/S021884309700015X
   Bussler C., 1994, Proceedings Fourth International Workshop on Research Issues in Data Engineering. Active Database Systems (Cat. No.94TH0618-9), P53, DOI 10.1109/RIDE.1994.282853
   Calo S., 2003, Journal of Network and Systems Management, V11, P249
   CARTER A, 2004, P 6 UBICOMP
   CHAKRAVARTHY S, 1994, INFORM SOFTWARE TECH, V36, P555, DOI 10.1016/0950-5849(94)90101-5
   Chandy K.M., 2006, EVENT DRIVEN APPL CO
   Chomicki J, 2003, IEEE T KNOWL DATA EN, V15, P244, DOI 10.1109/TKDE.2003.1161596
   Cilia M, 2002, SIGMOD RECORD, V31, P24, DOI 10.1145/507338.507344
   Clark J., 1999, XML Path Language (XPath) Version 1.0
   Dayal U., 1998, SIMOGD RECORD, V17, P51
   DIAZ O, 1997, VLDB J, V6, P82
   FACCA FM, 2005, P 14 INT C WORLD WID, P1058
   Friday A, 2004, WIREL NETW, V10, P631, DOI 10.1023/B:WINE.0000044024.54833.cb
   Gatziu S., 1992, IEEE Q B DATA ENG SP, V15, P23
   Gellersen H, 2004, IEEE PERVAS COMPUT, V3, P74, DOI 10.1109/MPRV.2004.1321032
   Gudgin M., 2006, WEB SERVICES ADDRESS
   HANSON J, SOA DESIGN EVENT DRI
   JUNG JY, P WORKSH EMP MOB WEB
   KAHN JM, 1999, P ACM IEEE INT C MOB, P17
   KANTERE V, 2004, P 3 INT JOINT C AUT, P1510
   Lobo J, 1999, SIXTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-99)/ELEVENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE (IAAI-99), P291
   LOPEZ TS, 2006, P 1 INT S WIR PERV C
   Maamar Z, 2006, INFORM SOFTWARE TECH, V48, P540, DOI 10.1016/j.infsof.2005.05.011
   Michelson B.M., 2006, EVENT DRIVEN ARCHITE
   *MICR, MICR INV COMP PROJ
   *MIT, MIT PROJ OX
   Paton NW, 1999, ACM COMPUT SURV, V31, P63, DOI 10.1145/311531.311623
   Peltz C, 2003, COMPUTER, V36, P46, DOI 10.1109/MC.2003.1236471
   Sashima A, 2004, P IEEE I C SERV COMP, P109
   Shankar CS, 2005, Proceedings of MobiQuitous 2005, P33
   *UPNP, UPNP FOR
   Vinoski S, 2003, IEEE INTERNET COMPUT, V7, P75, DOI 10.1109/MIC.2003.1250587
   Vlahavas I., 1998, PARALLEL OBJECT ORIE
   VONBULTZINGSLOE.G, 1999, ACTIVE RULES DATABAS, P147
   WEISER M, 1991, SCI AM, V265, P94, DOI 10.1038/scientificamerican0991-94
   YOKOHATA Y, 2005, P INT S APPL INT WOR, P152
NR 43
TC 17
Z9 20
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2007
VL 49
IS 11-12
BP 1141
EP 1161
DI 10.1016/j.infsof.2006.11.008
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 227RS
UT WOS:000250676100006
DA 2024-07-18
ER

PT J
AU Mendoza, LE
   Marius, A
   Pérez, M
   Grimán, AC
AF Mendoza, Luis E.
   Marius, Alejandro
   Perez, Maria
   Griman, Anna C.
TI Critical success factors for a customer relationship management strategy
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE customer relationship management; critical success factors; strategy;
   metrics; system integration
AB Most organizations have perceived the customer relationship management (CRM) concept as a technological solution for problems in individual areas, accompanied by a great deal of uncoordinated initiatives. Nevertheless, CRM must be conceived as a strategy, due to its human, technological, and processes implications, at the time an organization decides to implement it. On this basis, the main goal stated in this research is to propose, justify, and validate a model based on critical success factors (CSFs) that will constitute a guide for companies in the implementation and diagnosis of a CRM strategy. The model is conformed by a set of 13 CSFs with their 55 corresponding metrics, which will serve as a guide for organizations wishing to apply this type of strategy. These factors cover the three key aspects of every CRM strategy (human factor, processes, and technology); giving a global focus and propitiating success in the implementation of a CRM strategy. These CSFs - and their metrics - were evaluated by a group of internationally experts allowing determining guidelines for a CRM implementation as wel as the probable causes of the deficiencies in past projects. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Simon Bolivar, Dept Proc & Sistemas, Lab Invest Sistemas Informac, Caracas 1080A, Venezuela.
C3 Simon Bolivar University
RP Mendoza, LE (corresponding author), Univ Simon Bolivar, Dept Proc & Sistemas, Lab Invest Sistemas Informac, Apartado 89000, Caracas 1080A, Venezuela.
EM lmendoza@usb.ve; amarius@amr-invest.com; movalles@usb.ve; agriman@usb.ve
RI Morales, Luis E Mendoza/E-9520-2010; Morales, Luis Mendoza/AAN-9128-2020
OI Morales, Luis E Mendoza/0000-0002-5081-7559; Morales, Luis
   Mendoza/0000-0002-5081-7559; Griman Padua, Anna/0000-0002-9092-6952
CR ABUSAMAHA A, 2003, SOFT EVALUATION SYST, P136
   *ACM GROUP, 2001, CRM WORKSH 2001
   [Anonymous], 2000, European Management Journal, DOI [DOI 10.1016/S0263-2373(00)00013-X, 10.1016/S0263-2373, DOI 10.1016/S0263-2373]
   Barnes J.G., 2001, SECRETS CUSTOMER REL
   BASILI V, 2001, GOAL QUESTION METRIC, P528
   Baskerville R. L., 1999, Communications of the association for information systems, V2, P2, DOI [https://doi.org/10.17705/1CAIS.00219, DOI 10.17705/1CAIS.00219]
   Baskerville RL, 1996, J INFORM TECHNOL, V11, P235, DOI 10.1080/026839696345289
   Berkowitz E.N., 1997, MARKETING, V5th
   BRENDLER W, 2000, HUMAN DIMENSION CRM
   Bull C., 2003, Business Process Management Journal, V9, P592, DOI 10.1108/14637150310496703
   Buttle F., 2000, SCOPE CRM
   CHECKLAND P, 1997, INFORMATION SYSTEMS
   Checkland P., 1999, System Thinking, System Practice, V2e
   Chen I. J., 2003, Business Process Management Journal, V9, P672, DOI 10.1108/14637150310496758
   Ciborra C., 2000, INFRASTRUCTURE PROCE
   Dickie J., 2000, Why CRM projects fail
   Esteves J., 2001, Proc. Seventh Americas Conference on Information Systems. AMCIS 2001, Association for Information Systems, Boston, USA, P1119
   FEINBERG R, 2000, ANY TIME ANYWHERE AN
   Forsyth R., 2001, Six major impediments to change and how to overcome them in CRM
   FOX T, 2000, CRM DELIVERING BENEF
   Galbreath J., 1999, TQM Mag, V11, P161, DOI [https://doi.org/10.1108/09544789910262734, DOI 10.1108/09544789910262734]
   *GIG INF GROUP INC, 2001, COMPUTING, V16, P27
   GOLDENBERG B, 2000, P DCI CUST REL MAN C, P27
   Gulati R, 2000, HARVARD BUS REV, V78, P107
   Horovitz J., 2004, Service strategy: Management moves for customer results, V2nd
   KIRBY J, 2001, C MAK VIS REL GARTN
   Kitchenham B. A., 1996, SIGSOFT Software Engineering Notes, V21, P11, DOI 10.1145/381790.381795
   KITCHENHAM BA, 1996, SIGSOFT SOFTW ENG NO, V21, P11
   LEE D, 2001, MULTIFUNCTION CRM SO
   Light B., 2001, Proceedings of the Ninth European Conference on Information Systems, Bled Slovenia, P1232
   MARTINEZ I, 1997, HELP DESK UNA FUNCTI
   Payne A., 1999, Relationship Marketing for Competitive Advantage
   PEPPERS D, 1999, 1 1 MANAGER REAL WOR
   PEREZ M, 2001, P 10 AM C INF SYST A, P1119
   Ramaswamy R., 1996, Design and Management of Service Processes: Keeping Customers for life (sigmaepsilonlambda 362-363)
   Reichheld FrederickF Thomas Teal., 1996, LOYALTY EFFECT HIDDE
   ROCKART JF, 1979, HARVARD BUS REV, V57, P81
   Sandoe K., 2001, ENTERPRISE INTEGRATI
   STANTON W, 1995, MCGRAW HILL IRWIN SE
   SUSMAN GI, 1978, ADMIN SCI QUART, V23, P582, DOI 10.2307/2392581
   THOMPSON B, 2000, WHAT IS CRM
   THOMPSON E, 2001, C MAK VIS REAL GARTN
   TURBAN E, 2004, INTRO INFORMATION TE
   Turban E., 2006, DECISION SUPPORT BUS, V8th
   VERSLEIJENPRADH.R, 2000, PR01H IDC
   WALLACE B, 2001, MODERN CALL CTR
   Witten I. H., 2005, DATA MINING PRACTICA
NR 47
TC 109
Z9 153
U1 2
U2 38
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2007
VL 49
IS 8
BP 913
EP 945
DI 10.1016/j.infsof.2006.10.003
PG 33
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 187JR
UT WOS:000247844300007
DA 2024-07-18
ER

PT J
AU Pahl, C
AF Pahl, Claus
TI Semantic model-driven architecting of service-based software systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software architecture; model-driven development; Web Services; semantic
   modelling; ontologies
ID WEB
AB Model-driven development is a software development framework that emphasises model-based abstraction and automated code generation. Service-based software architectures benefit in particular from semantic, ontology-based modelling. We present ontology-based transformation and reasoning techniques for layered semantic service architecture modelling. Integrated ontological layers support abstract domain modelling, architectural design, and interoperability aspects. Ontologies are beneficial due to their potential to formally define models, to allow reasoning about semantic models, and to automate transformations at all layers. Ontologies are suitable in particular for the Web Services platform due to their ubiquity within the Semantic Web and their application to support semantic Web services. (c) 2006 Elsevier B.V. All rights reserved.
C1 Dublin City Univ, Sch Comp, Dublin 9, Ireland.
C3 Dublin City University
RP Pahl, C (corresponding author), Dublin City Univ, Sch Comp, Dublin 9, Ireland.
EM Claus.Pahl@dcu.ie
OI Pahl, Claus/0000-0002-9049-212X
CR Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   Alonso G., 2004, DAT SYS APP, DOI 10.1007/978-3-662-10876-5_5
   [Anonymous], MOF QVT FIN AD SPEC
   Baader F., 2003, DESCRIPTION LOGIC HD
   Baresi L, 2002, LECT NOTES COMPUT SC, V2505, P402
   Clements P., 2003, SEI S SOFTW
   Daconta M, 2003, The Semantic Web
   DESAI N, 2004, P INT C WEB SERV ICW, P124
   DJURIC D, 2004, COMPUTER SCI INFORM, V1, P91
   GASEVIC D, 2004, INT C WEB ENG ICWE 2
   Gronmo R, 2005, LECT NOTES COMPUT SC, V3748, P269
   HORROCKS I, 2002, LNCS, V2342, P279
   Kong J, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P492, DOI 10.1109/CMPSAC.2003.1245385
   Mandell DJ, 2003, LECT NOTES COMPUT SC, V2870, P227
   MANTELL K, 2005, UML BPEL MODEL DRIVE
   Medvidovic N, 1997, LECT NOTES COMPUT SC, V1301, P60, DOI 10.1145/267896.267903
   Morgan Carroll, 1994, Programming from specifications
   Newcomer E., 2005, UNDERSTANDING SOA WE
   *OBJ MAN GROUP, 2003, MOD RIV ARCH MDA GUI
   *OBJ MAN GROUP, 2003, ONT DEF MET
   Object Management Group, 2003, Tech. rep.
   Pahl C, 2005, LECT NOTES COMPUT SC, V3748, P88
   PAHL C, 2006, INT J SOFTWARE TOOLS, V7, P1
   PAOLUCCI M, 2002, LNCS, V2342, P279
   Payne T, 2004, IEEE INTELL SYST, V19, P14, DOI 10.1109/MIS.2004.29
   PELTZ C, 2003, WEB SERVICES J, V3
   Plasil F, 2002, IEEE T SOFTWARE ENG, V28, P1056, DOI 10.1109/TSE.2002.1049404
   Rao J, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P446, DOI 10.1109/ICWS.2004.1314769
   Roman D, 2005, APPL ONTOL, V1, P77
   Sangiorgi Davide, 2001, -calculus: A Theory of Mobile Processes
   Schild K., 1991, P 12 INT JOINT C ART, P466
   *SWSL COMM, 2006, SEM WEB SERV FRAM SW
   *WORLD WID WEB CON, 2006, WEB SERV ARCH DEF DO
   *WS BPEL COAL, 2004, WS BPEL BUS PROC EX
NR 34
TC 24
Z9 27
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2007
VL 49
IS 8
BP 838
EP 850
DI 10.1016/j.infsof.2006.09.007
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 187JR
UT WOS:000247844300003
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Lutters, WG
   Seaman, CB
AF Lutters, Wayne G.
   Seaman, Carolyn B.
TI Revealing actual documentation usage in software maintenance through war
   stories
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software maintenance; documentation; storytelling; war stories;
   qualitative research
AB War stories are a form of qualitative data that capture informants' specific accounts of surmounting great challenges. The rich contextual detail afforded by this approach warrants its inclusion in the methodological arsenal of empirical software engineering research. We ground this assertion in an exemplar field study that examined the use of documentation in software maintenance environments. Specific examples are unpacked to reveal a depth of insight that would not have been possible using standard interviews. This afforded a better understanding of the complex relationship between project personnel and documentation, including individuals' roles as pointers, gatekeepers, or barriers to documentation. (C) 2007 Elsevier B.V. All rights reserved.
C1 UMBC, Dept Informat Syst, Baltimore, MD 21250 USA.
C3 University System of Maryland; University of Maryland Baltimore County
RP Lutters, WG (corresponding author), UMBC, Dept Informat Syst, 1000 Hilltop Circle, Baltimore, MD 21250 USA.
EM lutters@umbc.edu; cseaman@umbc.edu
OI Lutters, Wayne/0000-0003-4193-2114
CR BASILI VR, 2002, SOFTWARE TECHNOLOGY, V5, P4
   CARVER J, 2003, EMPIR SOFTW ENG, V9, P259
   Fetterman D.M., 1998, ETHNOGRAPHY, V2nd
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   LUTTERS WG, 2003, SIG GROUP B, V23, P22
   LUTTERS WG, 2002, P ACM C COMP SUPP CO, V4, P266
   McCracken G, 1988, LONG INTERVIEW
   McDonald D.W., 1998, P 1998 ACM C COMPUTE, P315
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Orr J., 1996, TALKING MACHINES
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   RAINER A, 1999, P INT METR S
   Rodriguez OM, 2004, PROCEEDINGS OF THE FIFTH MEXICAN INTERNATIONAL CONFERENCE IN COMPUTER SCIENCE (ENC 2004), P72, DOI 10.1109/ENC.2004.1342591
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   SEAMAN CB, 2002, P INT C SOFTW MAINT
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   Singer J, 1998, PROC IEEE INT CONF S, P139, DOI 10.1109/ICSM.1998.738502
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   VANMAANEN J, 1999, TALES FIELD WRITING
NR 19
TC 29
Z9 35
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2007
VL 49
IS 6
BP 576
EP 587
DI 10.1016/j.infsof.2007.02.013
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 169NU
UT WOS:000246599700005
DA 2024-07-18
ER

PT J
AU Steen, O
AF Steen, Odd
TI Practical knowledge and its importance for software product quality
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software quality; software development; quality assessment ability;
   practical knowledge
ID PROCESS IMPROVEMENT; SYSTEMS
AB To achieve software product quality professional skill and knowledge is important. The way to reach software product quality is often structured approaches for software quality such as SPI and CMM which have been criticized for lack of a knowledge perspective. The view taken in this study is that software product quality is related to interpretations and understanding in practice, and thus on practical knowledge. Based on a qualitative study of practising software developers' understanding of the concept of quality and quality assessment, it is shown why quality resists definition and why expcrience-based, practical knowledge is important. (C) 2007 Elsevier B.V. All rights reserved.
C1 Lund Univ, Sch Econ & Management, Dept Informat, SE-22363 Lund, Sweden.
C3 Lund University
RP Steen, O (corresponding author), Lund Univ, Sch Econ & Management, Dept Informat, Ole Romers Vag 6, SE-22363 Lund, Sweden.
EM odd.steen@ics.lu.se
OI Steen, Odd/0000-0002-8822-0934
CR Aaen I, 2003, IEEE SOFTWARE, V20, P86, DOI 10.1109/MS.2003.1231159
   AAEN I, 2004, P 6 IFIP 8 6 WORK C, P1
   Alvesson M, 2003, ACAD MANAGE REV, V28, P13, DOI 10.2307/30040687
   [Anonymous], 2006, SOFTWARE ENG
   [Anonymous], QUALITATIVE DATA ANA
   [Anonymous], 1990, How Designers Think: the Design Process Demystified
   Basili1 Victor R, 1994, Encyclopedia of Software Eng., V1, P469, DOI DOI 10.1002/0471028959.SOF110
   Biberoglu E., 2002, Journal of Computing Sciences in Colleges, V18, P143
   Blackler F, 1995, ORGAN STUD, V16, P1021, DOI 10.1177/017084069501600605
   BRYMANB A, 2002, SAMHALLSVETENSKAPLIG
   Budgen David., 2003, SOFTWARE DESIGN
   Conradi R, 2000, LECT NOTES COMPUT SC, V1840, P391
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   ENERSTVEDT RT, 1989, ISSUES VALIDITY QUAL
   Fitzgerald B., 2002, Information systems development : methods in action
   Floyd C., 1992, Software Development and Reality Construction, P86, DOI DOI 10.1007/978-3-642-76817-0_10
   Garvin D.A., 1988, MANAGING QUALITY STR
   GIORGI A, 1994, VARFOR KVALITATIV FO
   Hoberg C., 1998, PRECISION IMPROVISAT
   JOHANNESSEN KS, 1990, TYST KUNSKAP TVA ART
   Johannessen KS., 1999, Praxis och tyst kunnande
   Johnson B, 2002, IND CORP CHANGE, V11, P245, DOI 10.1093/icc/11.2.245
   Jones J.C., 1981, DESIGN METHODS SEEDS, V2nd
   JOSHI KD, 2004, P 37 ANN HAW INT C S, P248
   JOSHI KD, 2005, P 38 ANN HAW INT C S, P1530
   Keil-Slawik R., 1992, SOFTWARE DEV REALITY, P15
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Kvale S., 1997, KVALITATIVA FORSKNIN
   Land LPW, 2001, 2001 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P108, DOI 10.1109/ASWEC.2001.948504
   MEGGERLE T, 2002, THESIS LUND U LUND
   Molander Bengt., 1996, Kunskap i handling
   NAUR P, 1985, MICROPROC MICROPROG, V15, P253, DOI 10.1016/0165-6074(85)90032-8
   Polanyi M., 1966, Knowledge in Organisations
   Polanyi M., 1958, The study of man
   Rittel H.W. J., 1984, Developments in Design Methodology
   Robilliard PN, 1999, COMMUN ACM, V42, P87, DOI 10.1145/291469.291476
   Rolf B., 1995, Profession, tradition och tyst kunskap
   Rosqvist T, 2003, SOFTWARE QUAL J, V11, P39, DOI 10.1023/A:1023741528816
   Rowe P., 1987, DESIGN THINKING
   Sarker S, 2005, IEEE T PROF COMMUN, V48, P201, DOI 10.1109/TPC.2005.849650
   Schn D.A., 1987, Educating the reflective practitioner: Toward a new design for teaching and learning in the professions
   Schon D., 1984, The Reflective Practitioner: How Professionals Think in Action
   SCHONSTROM M, 2005, LUND INFORM, P132
   SIMON AH, 1984, DEV DESIGN METHODOLO
   Stake R.E., 1994, Handbook of qualitative research, P236, DOI DOI 10.1258/096214400320575624
   STEEN O, 2005, LUND INFORM, P156
   STOLTERMAN E, 1991, THESIS UMEA U UMEA
   Sveiby K.-E., 1996, European Management Journal, V14, P379, DOI DOI 10.1016/0263-2373
   Trienekens J, 2001, SOFTWARE QUAL J, V9, P269, DOI 10.1023/A:1013715203889
   Wilson DN, 1998, SOFTWARE QUAL J, V7, P67, DOI 10.1023/B:SQJO.0000042060.88173.fe
   Wittgenstein L., 1958, PRELIMINARY STUDIES
   Wohlin C, 2004, EMPIR SOFTW ENG, V9, P211, DOI 10.1023/B:EMSE.0000027780.08194.b0
   Wong B, 2002, LECT NOTES COMPUT SC, V2559, P103
   Wong B., 2001, Product Focused Software Process Improvement. Third International Conference, PROFES 2001. Proceedings (Lecture Notes in Computer Science Vol.2188), P6
   Yin R.K., 2011, Qualitative research from start to finish
NR 55
TC 6
Z9 6
U1 1
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2007
VL 49
IS 6
BP 625
EP 636
DI 10.1016/j.infsof.2007.02.006
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 169NU
UT WOS:000246599700008
DA 2024-07-18
ER

PT J
AU Christl, A
   Koschke, R
   Storey, MA
AF Christl, Andreas
   Koschke, Rainer
   Storey, Margaret-Anne
TI Automated clustering to support the reflexion method
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Annual Meeting of the
   American-Association-of-Directors-of-Psychiatric-Residency-Training
CY MAR 12, 2005
CL Tucson, AZ
SP Amer Assoc Directors Psychiat Residency Training
DE reflexion methods; semi-automated mapping; HuGMe; MQAttract;
   CountAttract
AB A significant aspect in applying the Reflexion Method is the mapping of components found in the source code onto the conceptual components defined in the hypothesized architecture. To date, this mapping is established manually, which requires a lot of work for large software systems. In this paper, we present a new approach, in which clustering techniques are applied to support the user in tile mapping activity. The result is a semi-automated mapping technique that accommodates the automatic clustering of the source model with tile user's hypothesized knowledge about the system's architecture.
   This paper describes three case studies in which tile semi-automated mapping technique, called HuGMe, has been applied successfully to extend a partial map of real-world software applications. In addition, the results of another case study from an earlier publication are summarized, which lead to comparable results. We evaluated the extended versions of two automatic software clustering techniques, namely, MQAttract and CountAttract, with oracle mappings. We closely study the influence of the degree of completeness of tile existing mapping and other controlling variables of the technique to make reliable suggestions.
   Both clustering techniques were able to achieve a mapping quality where more than 90% of the automatic mapping decisions turned out to be correct. Moreover, the experiments indicate that the attraction function (CountAttract') based on local coupling and cohesion is more suitable for semi-automated mapping than the approach MQAttract' based on a global assessment of coupling and cohesion. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Victoria, Dept Comp Sci, Victoria, BC V8W 2Y2, Canada.
   Univ Bremen, D-2800 Bremen 33, Germany.
   Univ Stuttgart, D-7000 Stuttgart, Germany.
C3 University of Victoria; University of Bremen; University of Stuttgart
RP Storey, MA (corresponding author), Univ Victoria, Dept Comp Sci, Engn Comp Sci Bldg,Room 608, Victoria, BC V8W 2Y2, Canada.
EM chlistas@psmail.informatik.uni-stuttgart.de; koschke@tzi.de;
   mstorey@uvic.ca
CR ABREU F, 2000, CSMR, P13
   Andritsos P, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P334, DOI 10.1109/WCRE.2003.1287264
   Anquetil N, 1998, PROC INT CONF SOFTW, P84, DOI 10.1109/ICSE.1998.671105
   Bauer M, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P3, DOI 10.1109/CSMR.2004.1281401
   BOJIC D, 2000, USE CASE DRIVEN METH, P23
   CANFORA G, 1999, CASE STUDY APPL ELEC, P136
   CHOI SC, 1990, IEEE SOFTWARE, V7, P66, DOI 10.1109/52.43051
   Christl A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P89
   CHRISTL A, 2005, THESIS U STUTTGART C
   CIMITILE A, 1995, J SYST SOFTWARE, V28, P117, DOI 10.1016/0164-1212(94)00049-S
   de Oca CM, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P231, DOI 10.1109/WCRE.1998.723193
   EIDL J, 1998, P 22 COMP SOFTW APPL, P26
   GALL H, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P208, DOI 10.1109/WCRE.1995.514709
   Girard JF, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P58, DOI 10.1109/ICSM.1997.624231
   GIRARD JF, 1999, J AUTOMATED SOFTWARE, V6, P82
   Hofmeister C., 2000, APPL SOFTWARE ARCHIT
   HUTCHENS DH, 1985, IEEE T SOFTWARE ENG, V11, P749, DOI 10.1109/TSE.1985.232524
   KOSCHKE R, 2003, HIERARCHICAL REFLEXI, P36
   Lindig C, 1997, PROC INT CONF SOFTW, P349, DOI 10.1145/253228.253354
   LIU SS, 1990, INT C SOFTW MAINT IC, P266
   LIVADAS PE, 1994, J SOFTW MAINT-RES PR, V6, P249, DOI 10.1002/smr.4360060503
   Mahdavi K, 2003, PROC IEEE INT CONF S, P315, DOI 10.1109/ICSM.2003.1235437
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   Maqbool O, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P15, DOI 10.1109/CSMR.2004.1281402
   MITCHELL BS, 2002, THESIS DREXEL U PHIL
   MULLER HA, 1992, P 5 ACM SIGSOFT S SO, P88
   Murphy FC, 1998, ADV BIOL P, V19, P1
   Murphy G.C., 1995, Proceedings of the 3rd ACM SIGSOFT symposium on Foundations of software engineering, P18
   OGANDO RM, 1994, J SOFTW MAINT-RES PR, V6, P261, DOI 10.1002/smr.4360060504
   PATEL S, 1992, MEASURE COMPOSITE MO, P38
   RAYSIDE D, 2000, IWPC 00 LIM IR JUN, P191
   Sahraoui HA, 1997, AUTOMATED SOFTWARE ENGINEERING, 12TH IEEE INTERNATIONAL CONFERENCE, PROCEEDINGS, P210, DOI 10.1109/ASE.1997.632841
   Sartipi K, 2001, PROC IEEE INT CONF S, P408, DOI 10.1109/ICSM.2001.972754
   Sartipi K, 2001, PROG COMPREHEN, P115, DOI 10.1109/WPC.2001.921721
   SCHWANKE RW, 1994, MACH LEARN, V15, P137, DOI 10.1007/BF00993275
   Shokoufandeh A, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/WCRE.2002.1173059
   Siff M, 1999, IEEE T SOFTWARE ENG, V25, P749, DOI 10.1109/32.824377
   Tonella P, 2001, IEEE T SOFTWARE ENG, V27, P351, DOI 10.1109/32.917524
   Tzerpos V, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P76, DOI 10.1109/WCRE.1997.624578
   Valasareddi RR, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P50, DOI 10.1109/WCRE.1998.723175
   van Deursen A., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P246, DOI 10.1109/ICSE.1999.841014
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
   YEH AS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P227, DOI 10.1109/WCRE.1995.514711
   [No title captured]
   [No title captured]
NR 45
TC 31
Z9 32
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2007
VL 49
IS 3
BP 255
EP 274
DI 10.1016/j.infsof.2006.10.015
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 139AA
UT WOS:000244403200005
DA 2024-07-18
ER

PT J
AU Verner, JM
   Evanco, WM
   Cerpa, N
AF Verner, J. M.
   Evanco, W. M.
   Cerpa, N.
TI State of the practice: An exploratory analysis of schedule estimation
   and software project success prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID RISK
AB During discussions with a group of U.S. software developers we explored the effect of schedule estimation practices and their implications for software project success. Our objective is not only to explore the direct effects of cost and schedule estimation on the perceived success or failure of a software development project, but also to quantitatively examine a host of factors surrounding the estimation issue that may impinge oil project outcomes. We later asked our initial group of practitioners to respond to a questionnaire that covered some important cost and schedule estimation topics. Then, in order to determine if the results are generalizable, two other groups from the US and Australia, completed the questionnaire. Based on these convenience samples, we conducted exploratory statistical analyses to identify determinants of-project success and used logistic regression to predict project success for the entire sample, as well as for each of the groups separately. From the developer point of view, our overall results suggest that success is more likely if the project manager is involved in schedule negotiations, adequate requirements information is available when the estimates are made, initial effort estimates are good, take staff leave into account, and staff are not added late to meet an aggressive schedule. For these organizations we found that developer input to the estimates did not improve the chances of project success or improve the estimates. We then used the logistic regression results from each single group to predict project success for the other two remaining groups combined. The results show that there is a reasonable degree of generalizability among the different groups. (c) 2006 Elsevier B.V. All rights reserved.
C1 Natl ICT Australia, Sydney, NSW 1430, Australia.
   Drexel Univ, Coll Informat Sci & Technol, Philadelphia, PA 19104 USA.
   Univ Talca, Dept Syst Engn, Fac Engn, Talca, Chile.
C3 NICTA; Drexel University; Universidad de Talca
RP Verner, JM (corresponding author), Natl ICT Australia, Australian Technol Pk, Sydney, NSW 1430, Australia.
EM jverner@cse.unsw.edu.au; william.evanco@cis.drexel.edu; ncerpa@utalca.cl
RI Cerpa, Narciso/A-7823-2010
OI Cerpa, Narciso/0000-0003-4258-8626
CR [Anonymous], 1999, CHAOS REC SUCC
   Boehm B, 1999, INFORM SOFTWARE TECH, V41, P937, DOI 10.1016/S0950-5849(99)00091-9
   Briand L. C., 2001, Empirical Software Engineering, V6, P11, DOI 10.1023/A:1009815306478
   Brooks F.P., 1975, Essays on Software Engineering
   Clavadetscher C, 1998, IEEE SOFTWARE, V15, P30, DOI 10.1109/52.663781
   Collier B, 1996, IEEE SOFTWARE, V13, P65, DOI 10.1109/52.526833
   CRONBACH LJ, 1971, TEST VALIDATION, P443
   JOHNSON J, 2001, PROJECT MANAGEMENT C
   JONES C, 1995, COMPUTER, V28, P86, DOI 10.1109/2.386991
   Kansala K, 1997, IEEE SOFTWARE, V14, P61, DOI 10.1109/52.589236
   Kitchenham B, 1997, IEEE SOFTWARE, V14, P69, DOI 10.1109/52.589239
   Lam W., 1999, Proceedings 25th EUROMICRO Conference. Informatics: Theory and Practice for the New Millennium, P244, DOI 10.1109/EURMIC.1999.794787
   Lister T, 1997, IEEE SOFTWARE, V14, P20, DOI 10.1109/52.589226
   McConnell S, 1996, IEEE SOFTWARE, V13, P111, DOI 10.1109/52.536469
   Nolan AJ, 1999, IEEE SOFTWARE, V16, P97, DOI 10.1109/52.744576
   PROCACCINO JD, 2004, IN PRESS CACM MARCH
   Rainer A., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P72, DOI 10.1109/METRIC.1999.809728
   Reel JS, 1999, IEEE SOFTWARE, V16, P18, DOI 10.1109/52.765782
   Regnell B., 2000, Empirical Software Engineering, V5, P331, DOI 10.1023/A:1009848320066
   Rehesaar H, 1998, 1998 INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: EDUCATION & PRACTICE, PROCEEDINGS, P120, DOI 10.1109/SEEP.1998.707641
   ROBERT NC, 2005, IEEE SPECTRUM, P36
   *STAND GROUP, 2004, DEM PROJ RES
   The Standish Group, 2001, EXTR CHAOS
NR 23
TC 42
Z9 50
U1 0
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2007
VL 49
IS 2
BP 181
EP 193
DI 10.1016/j.infsof.2006.05.001
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 118EY
UT WOS:000242926300008
DA 2024-07-18
ER

PT J
AU Qi, Y
   Kung, D
   Wong, E
AF Qi, Yu
   Kung, David
   Wong, Eric
TI An agent-based data-flow testing approach for Web applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Web application testing; data-flow testing; agent-based framework
AB In recent years, Web applications (WAs) have grown so quickly that they have already become crucial to the success of businesses. However, since they are built on Internet and open standard technologies, WAs possess their own unique features, such as dynamic behaviors, heterogeneous representations, and novel data handling mechanisms. These features provide concrete support to the success of WAs, but they bring new challenges to researchers and developers, especially in regard to testing WAs and ensuring their quality. Testing approaches for non-WAs have to be extended to handle these features before they are used in WA testing. This paper presents an agent-based approach to perform data-flow testing of WAs. More precisely, the data-flow testing will be performed by autonomous test agents at the method level, object level, and object cluster level, from low abstraction level to high abstraction level. In the process of the recommended data-flow testing, an agent-based WA testing system (WAT) will automatically generate and coordinate test agents to decompose the task of testing an entire WA into a set of subtasks that can be accomplished by test agents. The test agents, rooted in the Belief-Desire-Intention (BDI) model, cooperate with each other to complete the testing of a WA. An example is used to show the feasibility of the proposed approach. (C) 2006 Elsevier B.V. All rights reserved.
C1 Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
   Univ Texas, Dept Comp Sci & Engn, Arlington, TX 76019 USA.
C3 University of Texas System; University of Texas Dallas; University of
   Texas System; University of Texas Arlington
RP Wong, E (corresponding author), Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
EM yxq014100@utdallas.edu; kung@cse.uta.edu; ewong@utdallas.edu
RI qi, Yu/HZL-4774-2023
CR [Anonymous], 2000, Reasoning About Rational Agents
   Di Lucca GA, 2002, PROC IEEE INT CONF S, P310, DOI 10.1109/ICSM.2002.1167787
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Georgeff MP, 1996, IEEE EXPERT, V11, P89, DOI 10.1109/MEX.1996.546590
   Hong JI, 2001, ACM T INFORM SYST, V19, P263, DOI 10.1145/502115.502118
   Huo QN, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P210
   Kallepalli C, 2001, IEEE T SOFTWARE ENG, V27, P1023, DOI 10.1109/32.965342
   KAVI K, 2003, P 2 INT WORKSH SOFTW
   Kung D, 2004, P INT COMP SOFTW APP, P174
   Kung DC, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P50, DOI 10.1109/CMPSAC.2003.1245321
   Kung DC, 2000, P INT COMP SOFTW APP, V24, P537, DOI 10.1109/CMPSAC.2000.884778
   Liu CH, 2000, FIRST ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P7, DOI 10.1109/APAQ.2000.883773
   Liu CH, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P84, DOI 10.1109/ISSRE.2000.885863
   Luck M., 2004, ARTECH H COMP SEC LI
   Murphy AL, 2001, INT CON DISTR COMP S, P524, DOI 10.1109/ICDSC.2001.918983
   Muscettola N, 1998, ARTIF INTELL, V103, P5, DOI 10.1016/S0004-3702(98)00068-X
   Padgham L., 2004, WILEY SERIES AGENT T
   PRESCOTT J, 1999, P 27 ANN ACM SIGUCCS, P176
   Qi Y, 2005, P INT COMP SOFTW APP, P45
   RAO AS, 1991, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P473
   RAO AS, 1992, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE (KR 92), P439
   Rao AS., 1995, Proceedings of the first international conference on multi-agent systems, P312
   Subraya BM, 2000, FIRST ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P17, DOI 10.1109/APAQ.2000.883774
   Tonella P, 2004, WSE 2004: SIXTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION, PROCEEDINGS, P11, DOI 10.1109/WSE.2004.10012
   Yang JT, 2002, J INF SCI ENG, V18, P59
   YANG JT, 1999, P 23 ANN INT COMP SO, P122
NR 26
TC 7
Z9 7
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2006
VL 48
IS 12
BP 1159
EP 1171
DI 10.1016/j.infsof.2006.06.005
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 115XY
UT WOS:000242768300004
DA 2024-07-18
ER

PT J
AU Arisholm, E
AF Arisholm, Erik
TI Empirical assessment of the impact of structural properties on the
   changeability of object-oriented software
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE object-oriented design metrics; changeability; change effort
ID COUPLING MEASUREMENT; METRICS; MAINTAINABILITY; VALIDATION; FRAMEWORK
AB The changeability of software can be viewed as the quality of being capable of change, which among others implies that the task of changing the software requires little effort. It is hypothesized that structural properties of the software affect changeability, in which case measures of such properties can be used as changeability indicators.
   Ways in which structural properties of the software can be measured are described and empirically validated based on data collected from an industrial Java development project. The measures are validated by using them as candidate variables in a multivariate regression model of the actual effort required to make modifications to the evolving software system.
   The results suggest that some measures that combine existing structural attribute measures with a weighting factor based on the relative proportion of change in each class can explain a large amount of the variation in change effort. This constitutes initial, empirical evidence that the proposed measures are valid changeability indicators. Consequently, they may help designers to identify and correct design problems during the development and maintenance of object-oriented software. (C) 2006 Elsevier B.V. All rights reserved.
C1 Simula Res Lab, Dept Software, N-1325 Lysaker, Norway.
RP Arisholm, E (corresponding author), Simula Res Lab, Dept Software, Martin Linges V 17,POB 134, N-1325 Lysaker, Norway.
EM erika@simula.no
CR ABREU F, 1995, P ECOOP 95 WORKSH ME
   Abreu FBE, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P90, DOI 10.1109/METRIC.1996.492446
   Arisholm E, 2000, J SYST SOFTWARE, V53, P3, DOI 10.1016/S0164-1212(00)00003-0
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Arisholm E, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P33, DOI 10.1109/METRIC.2002.1011323
   ARISHOLM E, 2001, THESIS U OLSO OLSO
   ARISHOLM E, 1998, P NORD WORKSH PROGR, P155
   ARISHOLM E, 1999, P ICSE 99 WORKSH EMP, P62
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Benlarbi S., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P334, DOI 10.1109/ICSE.1999.841024
   Binkley AB, 1998, PROC INT CONF SOFTW, P452, DOI 10.1109/ICSE.1998.671604
   Briand L, 1997, PROC INT CONF SOFTW, P412, DOI 10.1145/253228.253367
   Briand L., 1999, EMPIR SOFTW ENG, V4, P387
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Briand LC, 2002, ADV COMPUT, V56, P97, DOI 10.1016/S0065-2458(02)80005-5
   Briand LC, 2001, J SYST SOFTWARE, V59, P3, DOI 10.1016/S0164-1212(01)00045-0
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   CHAUMUN MA, 2000, P 4 EUR WORK C SOFTW, P45
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Christensen R., 1998, Analysis of variance, design and regression: applied statistical methods
   COURTNEY RE, 1993, SOFTWARE ENG J, V8, P5, DOI 10.1049/sej.1993.0002
   Daly J., 1996, Empirical Software Engineering, V1, P109, DOI 10.1007/BF00368701
   Deligiannis I. S., 2002, Empirical Software Engineering, V7, P193, DOI 10.1023/A:1016392131540
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fioravanti F., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P483, DOI 10.1109/ICSM.1999.792646
   Fioravanti F, 2000, J SYST SOFTWARE, V53, P111, DOI 10.1016/S0164-1212(00)00050-9
   FIORAVANTI F, 1998, P 1998 INT C SOFTW E
   Harrison R, 1998, IEEE T SOFTWARE ENG, V24, P491, DOI 10.1109/32.689404
   Harrison R., 1998, Empirical Software Engineering, V3, P255, DOI 10.1023/A:1009784121652
   Harrison R, 2000, J SYST SOFTWARE, V52, P173, DOI 10.1016/S0164-1212(99)00144-2
   Jeffery R, 1999, AUST COMPUT J, V31, P9
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Lindvall M, 2003, EMPIR SOFTW ENG, V8, P83, DOI 10.1023/A:1021772917036
   Nesi P, 1998, J SYST SOFTWARE, V42, P89, DOI 10.1016/S0164-1212(97)10021-8
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   SHEPPERD MJ, 1991, SOFTWARE MAINTENANCE, V3, P215
   Yacoub S. M., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P50, DOI 10.1109/METRIC.1999.809725
   Yacoub SM, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P210, DOI 10.1109/ISSRE.2000.885873
   Zuse H., 1991, SOFTWARE COMPLEXITY, DOI 10.1515/9783110866087
NR 49
TC 15
Z9 15
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2006
VL 48
IS 11
BP 1046
EP 1055
DI 10.1016/j.infsof.2006.01.002
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 101CL
UT WOS:000241716400005
DA 2024-07-18
ER

PT J
AU Min, JK
   Park, HH
   Chung, CW
AF Min, JK
   Park, HH
   Chung, CW
TI Multi-way spatial join selectivity for the ring join graph
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE spatial data; spatial join selectivity; multi-way join; databases
AB Efficient spatial query processing is very important since the applications of the spatial DBMS (e.g. GIS, CAD/CAM, LBS) handle massive amount of data and consume much time. Many spatial queries contain the multi-way spatial join due to the fact that they compute the relationships (e.g. intersect) among the spatial data. Thus, accurate estimation of the spatial join selectivity is essential to generate an efficient spatial query execution plan that takes advantages of spatial access methods efficiently. For the multi-way spatial joins, the selectivity estimation formulae only for the two kinds of query types, tree and clique, have been developed. However, the selectivity estimation for the general query graph which contains cycles has not been developed yet. To fill this gap, we devise a formula for the multi-way spatial ring join selectivity. This is an indispensable step to compute the selectivity of the general multi-way spatial join whose join graph contains cycles. Our experiment shows that the estimated sizes of query results using our formula are close to the sizes of actual query results. (c) 2005 Elsevier B.V. All rights reserved.
C1 Chung Ang Univ, Sch Elect & Elect Engn, Seoul 156756, South Korea.
   Korea Univ Technol & Educ, Sch Internet Med Engn, Cheonan 330708, Chungnam, South Korea.
   Korea Adv Inst Sci & Technol, Dept Elect Engn & Comp Sci, Taejon 305701, South Korea.
C3 Chung Ang University; Korea University of Technology & Education; Korea
   Advanced Institute of Science & Technology (KAIST)
RP Park, HH (corresponding author), Chung Ang Univ, Sch Elect & Elect Engn, Chung Ang Univ,22,Huksuk Dong, Seoul 156756, South Korea.
EM jkmin@islab.kaist.ac.kr; hohyun@cau.ac.kr; chungcw@islab.kaist.ac.kr
RI Chung, Chin-Wan/C-2029-2011
CR Acharya S, 1999, SIGMOD RECORD, VOL 28, NO 2 - JUNE 1999, P13, DOI 10.1145/304181.304184
   [Anonymous], 1994, VLDB J, DOI [10.1007/BF01231602, DOI 10.1007/BF01231602]
   BRINKHOFF T, 1990, P ACM SIGMOD C, P322
   Brinkoff T., 1993, P ACM SIGMOD, P237
   EGENHOFER MJ, 1991, LECT NOTES COMPUT SC, V525, P144
   GUTING R., 1995, VLDB J, V4, P243, DOI 10.1007/BF01237921
   HUANG YW, 1997, P SSDBMS
   JARKE M, 1984, COMPUT SURV, V16, P111, DOI 10.1145/356924.356928
   Kamel I., 1993, Proceedings of the second international conference on Information and knowledge management, P490
   Mamoulis N, 2001, ACM T DATABASE SYST, V26, P424, DOI 10.1145/503099.503101
   ORENSTEIN J, 1986, P ACM SIGMOD 86 WASH, P326
   Papadias D., 1999, Proceedings of the Eighteenth ACM SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems, P44, DOI 10.1145/303976.303981
   Papadias D, 2001, ALGORITHMICA, V30, P188, DOI 10.1007/s00453-001-0005-y
   Papadias D., 1997, GEOGRAPHICAL SYSTEMS, V4, P343
   Park HH, 2000, INFORM PROCESS LETT, V76, P121, DOI 10.1016/S0020-0190(00)00129-0
   Park HH, 1999, LECT NOTES COMPUT SC, V1651, P229
   Theodoridis Y, 1998, PROC INT CONF DATA, P476, DOI 10.1109/ICDE.1998.655810
   Theodoridis Y., 1996, Proceedings of the Fifteenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems. PODS 1996, P161, DOI 10.1145/237661.237705
NR 18
TC 2
Z9 2
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 1
PY 2005
VL 47
IS 12
BP 785
EP 795
DI 10.1016/j.infsof.2005.01.002
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 958YB
UT WOS:000231483000002
DA 2024-07-18
ER

PT J
AU Mohapatra, DP
   Mall, R
   Kumar, R
AF Mohapatra, DP
   Mall, R
   Kumar, R
TI Computing dynamic slices of concurrent object-oriented programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE program slicing; static slicing; dynamic slicing; program dependence
   graph; debugging; concurrent object-oriented programs; threads
AB We propose a novel dynamic program slicing technique for concurrent object-oriented programs. Our technique uses a Concurrent System Dependence Graph (CSDG) as the intermediate program representation. We mark and unmark the edges in the CSDG appropriately as and when the dependencies arise and cease during run-time. We mark an edge when its associated dependence exists and unmark an edge when the dependence ceases to exist. Our approach eliminates the use of trace files. Another advantage of our approach is that when a request for a slice is made, it is already available. This appreciably reduces the response time of slicing commands. C (c) 2005 Elsevier B.V. All rights reserved.
C1 Indian Inst Technol, Dept Comp Sci & Engn, Kharagpur 721302, W Bengal, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Kharagpur
RP Indian Inst Technol, Dept Comp Sci & Engn, Kharagpur 721302, W Bengal, India.
EM durga@cse.iitkgp.ernet.in; rajib@cse.iitkgp.ernet.in;
   rkumar@cse.iitkgp.ernet.in
RI Kumar, Rajeev/I-3506-2019; Mohapatra, Durga Prasad/B-2722-2017
OI Kumar, Rajeev/0000-0001-5545-6919; Mohapatra, Durga
   Prasad/0000-0002-4824-7091; Kumar, Rajeev/0000-0003-0233-6563
CR [Anonymous], P 18 INT C SOFTW ENG
   [Anonymous], P INT S FUT SOFTW TE
   Binkley D., 1996, ADV COMPUTERS, V43
   CARLIN P, 1993, COMPOSITIONAL C PLUS
   Chen ZQ, 2001, ACM SIGPLAN NOTICES, V36, P41, DOI 10.1145/375431.375420
   Chen ZQ, 2003, PROCEEDINGS OF THE 2003 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P559, DOI 10.1109/IRI.2003.1251465
   Chen ZQ, 2002, PROC IEEE INT CONF S, P377, DOI 10.1109/ICSM.2002.1167794
   Chen ZQ, 2002, ACM SIGPLAN NOTICES, V37, P45, DOI 10.1145/596992.597003
   Chen ZQ, 2001, ACM SIGPLAN NOTICES, V36, P33, DOI 10.1145/375431.375418
   Cheng JD, 1997, ADVANCES IN PARALLEL AND DISTRIBUTED COMPUTING - PROCEEDINGS, P370, DOI 10.1109/APDC.1997.574057
   Goswami D, 2002, INFORM PROCESS LETT, V81, P111, DOI 10.1016/S0020-0190(01)00202-2
   Hall R. J., 1995, Automated Software Engineering, V2, P33, DOI 10.1007/BF00873408
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Korel B, 1998, INFORM SOFTWARE TECH, V40, P647, DOI 10.1016/S0950-5849(98)00089-5
   Krinke J, 1998, ACM SIGPLAN NOTICES, V33, P35, DOI 10.1145/277633.277638
   KRINKE J, 2003, P 9 EUR SOFTW ENG C, P178
   LEVINE JR, 2002, LEX YACC
   Liang DL, 1998, PROC IEEE INT CONF S, P358, DOI 10.1109/ICSM.1998.738527
   LUCIA AD, 2003, P 7 EUR C SOFTW MAIN, P363
   Mall R., 2003, FUNDAMENTALS SOFTWAR
   Mohapatra D. P., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P60
   Mund GB, 2003, INFORM SOFTWARE TECH, V45, P499, DOI 10.1016/S0950-5849(03)00029-6
   Mund GB, 2002, INFORM SOFTWARE TECH, V44, P123, DOI 10.1016/S0950-5849(01)00224-5
   Nanda M. G., 2000, ACM INT S SOFTW TEST
   NAUGHTON P, 1998, JAVA COMPLETE REFERE
   Qi X., 2004, P INT C COMP SCI, P405
   SONG Y, 1999, DYNAMICS OBJECT ORIE
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Tonella P, 1997, PROC INT CONF SOFTW, P433, DOI 10.1145/253228.253371
   Umemori F, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P108, DOI 10.1109/SCAM.2003.1238037
   WAKINSHAW N, 2002, P IEEE INT WORKSH SO, P145
   Wang T, 2004, PROC INT CONF SOFTW, P512, DOI 10.1109/ICSE.2004.1317473
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   Xu BW, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P115, DOI 10.1109/SCAM.2002.1134111
   Xu L, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P652, DOI 10.1109/CMPSAC.2003.1245411
   ZENG J, 2004, P ACM LCTES, P175
   ZHANG X, 2004, P INT C SOFTW ENG
   Zhao J., 1998, DYNAMIC SLICING OBJE
   Zhao J., 1999, P 7 IEEE INT WORKSH
   Zhao JJ, 1996, P INT COMP SOFTW APP, V20, P312, DOI 10.1109/CMPSAC.1996.544182
NR 41
TC 15
Z9 15
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 1
PY 2005
VL 47
IS 12
BP 805
EP 817
DI 10.1016/j.infsof.2005.02.002
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 958YB
UT WOS:000231483000004
DA 2024-07-18
ER

PT J
AU Jung, HW
AF Jung, HW
TI Evaluating the ordering of the SPICE capability levels: an empirical
   study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE coefficient of reproducibility; Guttman scaling; standard pattern;
   process capability level; SPICE
AB The Standard ISO/IEC PDTR 15504 (Software Process Assessment) defines process attributes (PAs) and associated practices must be implemented according to a process capability level. This definition implies that PA practices at lower capability levels must be implemented before moving to higher capability levels. The purpose of this study is to evaluate empirically whether the ordering of set of PAs, as measures of capability, is consistent with the Standard. For this purpose, the study estimates the Coefficient of Reproducibility (CR) statistic that measures the extent to which the observed ratings are identical to the pattern inferred by the Standard. Our analyses based on ratings of 689 process instances show that generally PA order of capability levels is consistent with that inferred by the Standard. However, our results also show that the definition of PA3.2 (Process resource) could be improved. This evaluation is capable of providing a substantiated basis for using the notion of capability, as well as providing information for necessary improvements to the Standard. (C) 2004 Elsevier B.V. All rights reserved.
C1 Korea Univ, Dept Business Adm, Seoul 136701, South Korea.
C3 Korea University
RP Jung, HW (corresponding author), Korea Univ, Dept Business Adm, Anam Dong 5Ka, Seoul 136701, South Korea.
EM hwjung@korea.ac.kr
CR [Anonymous], 1979, SAGE U PAPER SERIES
   [Anonymous], 1997, Requirements engineering: a good practice guide
   Bilotta J. G., 1998, Empirical Software Engineering, V3, P159, DOI 10.1023/A:1008084231983
   BOLLINGER TB, 1991, IEEE SOFTWARE, V8, P25, DOI 10.1109/52.300034
   Brodman J.G., 1996, CROSSTALK, V9
   Card DN, 1998, IEEE SOFTWARE, V15, P56, DOI 10.1109/52.646883
   CASELLA G, 1986, CAN J STAT, V14, P113, DOI 10.2307/3314658
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   *CYT SOFTW CO, 1998, STATX WIND SOFTW EX
   El Emam K, 2000, IEEE T SOFTWARE ENG, V26, P541, DOI 10.1109/32.852742
   El Emam K., 1999, Empirical Software Engineering, V4, P113, DOI 10.1023/A:1009820201126
   El Emam K, 2000, ADV COMPUT, V53, P319
   ELEMAM K, 1995, P 2 IEEE INT SOFTW E, P84
   Fayad ME, 1997, COMMUN ACM, V40, P125, DOI 10.1145/265684.265701
   FUSARO P, 1997, EMPIR SOFTW ENG, V3, P179
   Gray EM, 1998, SOFTWARE QUAL J, V7, P21, DOI 10.1023/A:1008840808887
   Herbsleb J, 1997, COMMUN ACM, V40, P30, DOI 10.1145/255656.255692
   *ISO IEC FDIS, 2002, 15504 ISO IEC FDIS
   *ISO IEC JTC1, PROC TECHN WORK ISO
   *ISO IEC PDTR, 1996, 15504 ISO IEC PDTR
   Jung HW, 2003, COMPUT STAND INTER, V25, P477, DOI 10.1016/S0920-5489(03)00018-7
   JUNG HW, IN PRESS SOFTWARE PR
   JUNG HW, 2001, SOFTWARE PROCESS IMP, V6, P205
   McIver JP., 1981, UNIDIMENSIONAL SCALI
   Montgomery D.C., 1998, ENG STAT
   Niessink F, 2000, J SOFTW MAINT-RES PR, V12, P103, DOI 10.1002/(SICI)1096-908X(200003/04)12:2<103::AID-SMR205>3.0.CO;2-S
   PAULK M, 1993, CMUSEI93TR024 CARN M
   PAULK M, 1993, CMUSEI93TR025 CARN M
   PFLEEGER SL, 1994, COMPUTER, V27, P71, DOI 10.1109/2.312041
   Sanders M., 1998, SPIRE HDB BETTER FAS
   *SEI, 2002, CMMI SYST ENG SOFTW
   *SPICE, PHAS 2 SPIC TRIALS F
   Trochim W.M., 2001, Research Methods Knowledge Base, V2
NR 34
TC 4
Z9 5
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 1
PY 2005
VL 47
IS 3
BP 141
EP 149
DI 10.1016/j.infsof.2004.05.003
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 896QV
UT WOS:000226949500001
DA 2024-07-18
ER

PT J
AU Chen, TY
   Poon, PL
   Tang, SF
   Tse, TH
AF Chen, TY
   Poon, PL
   Tang, SF
   Tse, TH
TI On the identification of categories and choices for specification-based
   test case generation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE category-partition method; choice relation framework;
   classification-tree method; specification-based testing; test frame
AB The category-partition method and the classification-tree method help construct test cases from specifications. In both methods, an early step is to identify a set of categories (or classifications) and choices (or classes). This is often performed in an ad hoc manner due to the absence of systematic techniques. In this paper, we report and discuss three empirical studies to investigate the common mistakes made by software testers in such an ad hoc approach. The empirical studies serve three purposes: (a) to make the knowledge of common mistakes known to other testers so that they can avoid repeating the same mistakes, (b) to facilitate researchers and practitioners develop systematic identification techniques, and (c) to provide a means of measuring the effectiveness of newly developed identification techniques. Based on the results of our studies, we also formulate a checklist to help testers detect such mistakes. (C) 2004 Elsevier B.V. All rights reserved.
C1 Hong Kong Baptist Univ, Dept Finance & Decis Sci, Kowloon, Hong Kong, Peoples R China.
   Hong Kong Polytech Univ, Sch Accounting & Finance, Kowloon, Hong Kong, Peoples R China.
   Swinburne Univ Technol, Sch Informat Technol, Hawthorn, Vic 3122, Australia.
C3 Hong Kong Baptist University; Hong Kong Polytechnic University;
   Swinburne University of Technology
RP Univ Hong Kong, Dept Comp Sci & Informat Syst, Hong Kong, Hong Kong, Peoples R China.
EM afplpoon@inet.polyu.edu.hk; sftang@hkbu.edu.hk; tse@csis.hku.hk
RI Poon, Pak-Lok/ADQ-5493-2022; Tse, T.H./C-6590-2008
OI Tse, T.H./0000-0002-0460-8377; POON, Pak Lok/0000-0003-2840-2418; Chen,
   Tsong/0000-0003-3578-0994
CR BALCER MJ, 1989, ACM SIGSOFT, V14, P210, DOI 10.1145/75309.75332
   Chen TY, 2004, IEEE T EDUC, V47, P42, DOI 10.1109/TE.2003.817617
   Chen TY, 2003, IEEE T SOFTWARE ENG, V29, P577, DOI 10.1109/TSE.2003.1214323
   Chen TY, 2000, INT J SOFTW ENG KNOW, V10, P647, DOI 10.1142/S0218194000000353
   CHEN TY, 2002, P 3 ACIS INT C SOFTW, P99
   CHEN TY, 1998, IS AUDIT CONTROL J, V5, P31
   CLARKE LA, 1982, IEEE T SOFTWARE ENG, V8, P380, DOI 10.1109/TSE.1982.235572
   Grochtmann M., 1993, Software Testing, Verification and Reliability, V3, P63, DOI 10.1002/stvr.4370030203
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Singh H, 1997, FIRST IEEE INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P81, DOI 10.1109/ICFEM.1997.630406
   WANG J, 1998, DIGITAL TECHNOLOGY S, V1, P286
   WHITE LJ, 1980, IEEE T SOFTWARE ENG, V6, P247, DOI 10.1109/TSE.1980.234486
   WORDSWORTH J, 1992, SOFTWARE DEV Z PRACT
   Zeil S. J., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P216, DOI 10.1109/WST.1988.5377
NR 15
TC 21
Z9 23
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT 1
PY 2004
VL 46
IS 13
BP 887
EP 898
DI 10.1016/j.infsof.2004.03.005
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 843UJ
UT WOS:000223111800003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chiang, CC
AF Chiang, CC
TI Automated rapid prototyping of TUG specifications using Prolog
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE formality; formal specification language; rapid prototyping; software
   transformation; TUG
ID LANGUAGE; HASKELL
AB A prototype is usually built quickly and cheaply to explore poorly understood user requirements in the front-end of the software development life cycle. There are several techniques to construct a prototype such as fourth generation languages, functional and logic programming languages, and simulation techniques. Despite their benefits, these techniques do not directly support formal user requirements and specifications. In this paper, a formal specification language, called TUG, is presented to support an automatic derivation of a prototype in Prolog from a specification in the language via a set of transformation rules. The work described in this paper is distinct from existing rapid prototyping techniques. There is a close correspondence between TUG and Prolog that makes the process of transformation relatively mechanical. The process also allows specifiers not to consider low-level details at implementation such as selection of data structures and algorithms due to the features of the TUG specification language and the Prolog programming language. In addition, rederivation of a prototype in Prolog from a TUG specification is also avoided whenever the specification is modified. A Change Request Script is used to update the prototype in response to the revised specification. The prototype construction and specification acquisition are integrated to handle the construction of user requirements. The formality of the TUG specification language improves the quality of the description of user requirements. Rapid prototyping from the specification via software transformations improves the understanding of user requirements in a cost effective way. (C) 2004 Elsevier B.V. All rights reserved.
C1 Univ Arkansas, Dept Comp Sci, Little Rock, AR 72204 USA.
C3 University of Arkansas System; University of Arkansas Fayetteville;
   University of Arkansas Little Rock
RP Chiang, CC (corresponding author), Univ Arkansas, Dept Comp Sci, 2801 S Univ Ave, Little Rock, AR 72204 USA.
EM cxchiang@ualr.edu
CR ANDREWS D, 1988, INFORM SOFTWARE TECH, V30, P164, DOI 10.1016/0950-5849(88)90063-8
   [Anonymous], 1992, The Z Notation
   BAUMANN P, 1995, LECT NOTES COMPUTER, V1026, P62
   Bergstra J. A., 1989, ALGEBRAIC SPECIFICAT
   BERZINS V, 1993, IEEE T SOFTWARE ENG, V19, P436, DOI 10.1109/32.232011
   BIDOIT M, 1985, LECT NOTES COMPUT SC, V186, P246
   BJORNER D, 1987, VDM 87 VDM FORMAL ME
   Bolognesi T., 1995, LOTOSPHERE SOFTWARE
   CARRINGTON D, 1989, FORMAL DESCRIPTION T, P281
   Chetali B, 1998, IEEE T SOFTWARE ENG, V24, P46, DOI 10.1109/32.663997
   Chia-Chu Chiang, 1999, Proceedings. Twenty-Third Annual International Computer Software and Applications Conference (Cat. No.99CB37032), P104, DOI 10.1109/CMPSAC.1999.812686
   Chiang CC, 1997, P INT COMP SOFTW APP, P396, DOI 10.1109/CMPSAC.1997.625019
   Clocksin W.F., 1984, PROGRAMMING PROLOG
   DAVIS AM, 1992, IEEE SOFTWARE, V9, P70, DOI 10.1109/52.156899
   Dick A. J. J., 1990, Z User Workshop. Proceedings of the Fourth Annual Z User Meeting, P71
   Diller A., 1990, INTRO FORMAL METHODS
   EVANS A, 1994, P 8 Z US WORKSH ZUM, P269
   FUCHS NE, 1992, SOFTWARE ENG J, V7, P323, DOI 10.1049/sej.1992.0033
   GOGUEN J, 1982, ACM SIGSOFT SOFTWARE, V7, P75
   GOGUEN JA, 1984, IEEE T SOFTWARE ENG, V10, P528, DOI 10.1109/TSE.1984.5010277
   Gravell A, 1996, SOFTWARE ENG J, V11, P104, DOI 10.1049/sej.1996.0014
   Guttag JohnV., 1993, LARCH LANGUAGES TOOL
   GUTTAG JV, 1986, SCI COMPUT PROGRAM, V6, P135, DOI 10.1016/0167-6423(86)90022-5
   GUTTAG JV, 1985, IEEE SOFTWARE, V2, P24, DOI 10.1109/MS.1985.231756
   Hayes I. J., 1993, SPECIFICATION CASE S
   HAYES IJ, 1989, SOFTWARE ENG J, V4, P330, DOI 10.1049/sej.1989.0045
   HE XD, 1995, SEKE '95, PROCEEDINGS, P173
   Henderson P., 1972, BIT (Nordisk Tidskrift for Informationsbehandling), V12, P38, DOI 10.1007/BF01932672
   HOREBEEK IV, 1989, ALGEBRAIC SPECIFICAT
   JACKSON MI, 1985, SOFTWARE PRACT EXPER, V15, P305, DOI 10.1002/spe.4380150307
   Jones C. B., 1991, MURAL FORMAL DEV SUP
   KARAM GM, 1991, IEEE T SOFTWARE ENG, V17, P1109, DOI 10.1109/32.99197
   LOCASSO R, 1980, TML602100100 SDC
   LUQI MK, 1988, IEEE SOFTWARE    MAR
   Mattolini R, 2001, IEEE T SOFTWARE ENG, V27, P208, DOI 10.1109/32.910858
   Moszkowski BC, 2000, IEEE S LOG, P241
   ONEILL G, 1992, COMPUT J, V35, P623, DOI 10.1093/comjnl/35.6.623
   PEREIRA F, 1980, ARTIF INTELL, V31, P231
   SHERRELL LB, 1993, P INT COMP SOFTW APP, P320, DOI 10.1109/CMPSAC.1993.404235
   SHERRELL LB, 1994, SOFTWARE PRACT EXPER, V24, P1159, DOI 10.1002/spe.4380241205
   Sveda M, 2001, COMPUTER, V34, P138, DOI 10.1109/2.962986
   TORII K, 1987, COMPUT LANG, V12, P9, DOI 10.1016/0096-0551(87)90008-7
   TORII K, 1984, P 7 INT C SOFTW ENG, P26
   Turner K.J., 1993, Using Formal Description Techniques: An Introduction to Estelle, Lotos, V1st
   VAN HK, 1991, LECT NOTES COMPUTERS, V551, P204
   WEST MM, 1992, SOFTWARE ENG J, V7, P264, DOI 10.1049/sej.1992.0027
   ZAVE P, 1986, IEEE T SOFTWARE ENG, V12, P312, DOI 10.1109/TSE.1986.6312946
   ZAVE P, 1982, IEEE T SOFTWARE ENG, V8, P250, DOI 10.1109/TSE.1982.235254
NR 48
TC 2
Z9 2
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT 1
PY 2004
VL 46
IS 13
BP 857
EP 873
DI 10.1016/j.infsof.2004.03.001
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 843UJ
UT WOS:000223111800001
DA 2024-07-18
ER

PT J
AU Lv, T
   Gu, N
   Yan, P
AF Lv, T
   Gu, N
   Yan, P
TI Normal forms for XML documents
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE XML; normal form; partial functional dependency; transitive functional
   dependency
AB This paper studies the normalization problem of XML documents with DTDs as their schemas. XML documents may contain redundant information due to a bad designed DTD which implies the similar anomaly dependencies among elements and attributes just as in relational database schema. The concepts of partial functional dependency and transitive functional dependency for XML DTD are proposed. And three XML normal forms: 1XNF, 2XNF and 3XNF, are defined based on the concepts of partial and transitive functional dependency. The concept of lossless join decomposition for DTD is defined by the relational representation of DTD. Finally, two lossless join decomposition algorithms are given for transforming a DTD into 2XNF and 3XNF, respectively. (C) 2004 Elsevier B.V. All rights reserved.
C1 Fudan Univ, Dept Comp & Informat Technol, Shanghai 200433, Peoples R China.
   Xinjiang Univ, Coll Math & Syst Sci, Urumqi 830046, Peoples R China.
C3 Fudan University; Xinjiang University
RP Fudan Univ, Dept Comp & Informat Technol, Shanghai 200433, Peoples R China.
EM lt0410@163.com; ninggu@fudan.edu.cn; yanp2002cn@163.com
CR Abiteboul S, 1995, FDN DATABASES
   [Anonymous], 2000, EXTENSIBLE MARKUP LA
   [Anonymous], XML SCHEMA 0
   *ARB INC, 1998, W3C XML SPEC DTD
   Arenas M., 2002, Proceedings of the twenty-first ACM SIGMOD-SIGACT-SIGART symposium on Principles of database systems, PODS'02, P85, DOI [10.1145/543613, DOI 10.1145/543613]
   Buneman P, 2003, INFORM SYST, V28, P1037, DOI 10.1016/S0306-4379(03)00028-0
   Buneman P, 2001, SIGMOD RECORD, V30, P47, DOI 10.1145/373626.373697
   BUNEMAN P, 2001, KEYS XML WWW10, P201
   CHOI B, 2002, P 5 INT WORKSH WEB D, P43
   Fan Wenfei., 2001, P 20 ACM SIGACT SIGM, P114
   KWONG A, 2002, CSE200224 U CAL
   LAYMAN A, 1998, XML DATA W3C NOTE
   LEE SY, 1999, P 18 INT C CONC MOD, P131
   Mok WY, 2002, IEEE T KNOWL DATA EN, V14, P369, DOI 10.1109/69.991722
   Mok WY, 1996, ACM T DATABASE SYST, V21, P77, DOI 10.1145/227604.227612
   WU X, 2002, INT WORKSH DAT SEM W, P292
NR 16
TC 10
Z9 10
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 15
PY 2004
VL 46
IS 12
BP 839
EP 846
DI 10.1016/j.infsof.2004.02.004
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 840GZ
UT WOS:000222846600005
DA 2024-07-18
ER

PT J
AU Lin, JJ
   Lee, MC
AF Lin, JJ
   Lee, MC
TI An object-oriented analysis method for customer relationship management
   information systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE electronic commerce; customer relationship management; information
   system; object-oriented analysis; method
ID PERSONALIZATION; ARCHITECTURE
AB For the advances of Internet technologies in recent years, Electronic Commerce (EC) has gained many attentions as a major theme for enterprises to keep their competitiveness. Amongst all possibly desired endeavors for the EC, research has shown that effective management of customer relationships is a major source for keeping competitive differentiation. Therefore, it is commonly recognized as an important coal for an enterprise to promote its management of customer relationships through a prospect information system on the Internet to achieve the so-called Business-to-Customer EC. In this paper, we propose an object-oriented analysis method for the development of such a Customer Relationship Management Information System (CRMIS). The approach starts from the identification of prospect customers and their desired behaviors under preferable execution environments, and ends with the specification of system-internal objects/entities that collaborate to satisfy these behaviors and environments. The method is a use case driven approach with UML utilized and extended as its tool. To illustrate, the method is applied to an exemplified CRMTS for house agency. (C) 2003 Elsevier B.V. All rights reserved.
C1 Ming Chuan Univ, Dept Informat Management, Kweishan, Taoyuan, Taiwan.
   Chaoyang Univ Technol, Dept Informat Management, Wufeng, Taichuang, Taiwan.
C3 Ming Chuan University; Chaoyang University of Technology
RP Ming Chuan Univ, Dept Informat Management, Kweishan, Taoyuan, Taiwan.
EM jlin@mcu.edu.tw; s9014630@mail.cyut.edu.tw
CR ADOMAVICIUS A, 2001, IEEE COMPUT, P74
   [Anonymous], 1989, Modern structured analysis
   Ba SL, 1997, DECIS SUPPORT SYST, V19, P171, DOI 10.1016/S0167-9236(96)00055-3
   Booch G., 2002, UNIFIED MODELING LAN, V2nd
   CAMERON JR, 1986, IEEE T SOFTWARE ENG, V12, P222, DOI 10.1109/TSE.1986.6312938
   Cingil I, 2000, COMMUN ACM, V43, P136, DOI 10.1145/345124.345168
   Goldfarb C., 1998, The XML Handbook
   HAYES F, 1991, ACM OOPSLA C, P171
   HULL R, 1987, COMPUT SURV, V19, P201, DOI 10.1145/45072.45073
   Jackson Michael., 1983, SYSTEM DEV
   Jacobson I., 1999, The Unified Modeling Language Specification - User Guide
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Kramer J, 2000, COMMUN ACM, V43, P45
   Mobasher B, 2000, COMMUN ACM, V43, P142, DOI 10.1145/345124.345169
   Mulvenna MD, 2000, COMMUN ACM, V43, P123, DOI 10.1145/345124.345165
   O'Keefe RM, 1998, COMMUN ACM, V41, P71, DOI 10.1145/272287.272300
   PECKHAM J, 1988, COMPUT SURV, V20, P153, DOI 10.1145/62061.62062
   QUATRANI T, 2001, VISUAL MODELING RATI
   RUBAUGH J, 1991, OBJECT ORIENTED MODE
   SHALAER S, 1988, OJFECT ORIENTED SYST
NR 20
TC 11
Z9 12
U1 1
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 1
PY 2004
VL 46
IS 7
BP 433
EP 443
DI 10.1016/j.infsof.2003.09.001
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 809AM
UT WOS:000220609600001
DA 2024-07-18
ER

PT J
AU Walters, HR
AF Walters, HR
TI Structuring professional cooperation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE cooperation; professional; software development method; process analysis
   method; process structuring
AB We present an element suitable to structure professional cooperation. This structuring element is independent of any domain or area of expertise, although it is biased towards design. The element describes modes of operation of a single expert and the cooperation between multiple experts. Based on this, aggregates representing complex project situations can be rendered. We offer several examples. (C) 2003 Elsevier B.V. All rights reserved.
C1 Microsoft Corp, NL-1119 PE Schiphol Rijk, Netherlands.
C3 Microsoft
RP Walters, HR (corresponding author), Microsoft Corp, Boeing Ave 30, NL-1119 PE Schiphol Rijk, Netherlands.
EM pwalters@microsoft.com
CR [Anonymous], 1977, PATTERN LANGUAGE TOW
   Arlow Jim., 2002, UML UNIFIED PROCESS
   Boehm BW., 1981, Software Engineering Economics
   JACOBSON I, 1999, UNIFIED SOFTWARE DES
   PLIHON V, 1995, LECT NOTES COMPUTER, V932
   Royce W.W., 1970, P IEEE WESCON IEEE, P1
   SHAW M, 1996, P 2 WORKSH PATT LANG
NR 7
TC 1
Z9 1
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY 1
PY 2004
VL 46
IS 6
BP 415
EP 421
DI 10.1016/j.infsof.2003.08.004
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803OT
UT WOS:000220241100006
DA 2024-07-18
ER

PT J
AU Woo, KG
   Lee, JH
   Kim, MH
   Lee, YJ
AF Woo, KG
   Lee, JH
   Kim, MH
   Lee, YJ
TI FINDIT: a fast and intelligent subspace clustering algorithm using
   dimension voting
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE data mining; data clustering; subspace clustering; high dimension
AB The aim of this paper is to present a novel subspace clustering method named FINDIT. Clustering is the process of finding interesting patterns residing in the dataset by grouping similar data objects from dissimilar ones based on their dimensional values. Subspace clustering is a new area of clustering which achieves the clustering goal in high dimension by allowing clusters to be formed with their own correlated dimensions. In subspace clustering, selecting correct dimensions is very important because the distance between points is easily changed according to the selected dimensions. However, to select dimensions correctly is difficult, because data grouping and dimension selecting should be performed simultaneously. FINDIT determines the correlated dimensions for each cluster based on two key ideas: dimension-oriented distance measure which fully utilizes dimensional difference information, and dimension voting policy which determines important dimensions in a probabilistic way based on V nearest neighbors' information. Through various experiments on synthetic data, FINDIT is shown to be very successful in the high dimensional clustering problem. FINDIT satisfies most requirements for good clustering methods such as accuracy of results, robustness to the noise and the cluster density, and scalability to the dataset size and the dimensionality. Moreover, it is gracefully scalable to full dimension without any modification to algorithm. (C) 2003 Elsevier B.V. All rights reserved.
C1 Korea Adv Inst Sci & Technol, Dept Elect Engn & Comp Sci, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Korea Adv Inst Sci & Technol, Dept Elect Engn & Comp Sci, Kusong Dong 373-1, Taejon 305701, South Korea.
EM kgwoo@dbserver.kaist.ac.kr; leejh@dbserver.kaist.ac.kr;
   mhkim@dbserver.kaist.ac.kr; yjlee@dbserver.kaist.ac.kr
RI Kim, Myoung Ho/C-1997-2011; Lee, Yoon Joon/C-1881-2011
CR Aggarwal C., 2000, P ACM SIGMOD INT C M
   AGGARWAL CC, 1999, P 1999 ACM SIGMOD IN
   Agrawal R., 1998, P ACM SIGMOD INT C M
   [Anonymous], ACM T MATH SOFTWARE
   [Anonymous], 1999, P ACM SIGMOD INT C M
   [Anonymous], P 15 INT C DAT ENG S
   Beyer K., 1999, P 7 INT C DAT THEOR
   CHENG CH, 1999, P 1999 ACM SIGKDD IN
   CUTTING DR, 1992, 15 ANN INT ACM SIGIR
   Ester M., 1996, P ACM SIGKDD INT C K
   GOIL S, 1998, CPDCTR9906010 NW U D
   GUHA S, 2001, INFORMATION SYSTEMS, V26
   Jain A. K., 1988, Algorithms for Clustering Data, P446
   JOZEKHAJAVI KN, 1998, CS9827 U WAT DEP COM
   Karypis G, 1999, COMPUTER, V32, P68, DOI 10.1109/2.781637
   Kaufman L., 2009, FINDING GROUPS DATA
   Liu B., 2000, P 9 INT C INF KNOWL
   Ng R.T., 1994, P 20 VLDB C SANT CHI
   PALMER CR, 2000, P ACM SIGMOD INT C M
   Sheikholeslami Gholamhosein, 1998, P 24 VLDB C NEW YORK
   WANG W, 1997, P 23 VLDB C ATH GREE
   Zhang T., P INT C MAN DAT SIGM
NR 22
TC 59
Z9 84
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 15
PY 2004
VL 46
IS 4
BP 255
EP 271
DI 10.1016/j.infsof.2003.07.003
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 776CX
UT WOS:000189098400005
DA 2024-07-18
ER

PT J
AU Jorgensen, M
   Sjoberg, DIK
AF Jorgensen, M
   Sjoberg, DIK
TI An effort prediction interval approach based on the empirical
   distribution of previous estimation accuracy
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE effort estimation; estimation uncertainty; prediction intervals; human
   judgment
ID UNCERTAINTY; REGRESSION
AB When estimating software development effort, it may be useful to describe the uncertainty of the estimate through an effort prediction interval (PI). An effort PI consists of a minimum and a maximum effort value and a confidence level. We introduce and evaluate a software development effort PI approach that is based on the assumption that the estimation accuracy of earlier software projects predicts the effort PIs of new projects. First, we demonstrate the applicability and different variants of the approach on a data set of 145 software development tasks. Then, we experimentally compare the performance of one variant of the approach with human (software professionals') judgment and regression analysis-based effort PIs on a data set of 15 development tasks. Finally, based on the experiment and analytical considerations, we discuss when to base effort PIs on human judgment, regression analysis, or our approach. (C) 2002 Elsevier Science B.V. All rights reserved.
C1 Simula Res Lab, NO-1325 Lysaker, Norway.
RP Simula Res Lab, POB 134, NO-1325 Lysaker, Norway.
EM magne.jorgensen@simula.no; dag.sjoberg@simula.no
RI Jorgensen, Magne/H-4402-2016
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Alpert M., 1982, Judgment Under Uncertainty: Heuristics and Biases, P294, DOI DOI 10.1017/CBO9780511809477.022
   Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 1985, Long-range forecasting: from crystal ball to computer
   [Anonymous], 1998, Forecasting methods and applications
   Armstrong JS, 2001, INT SER OPER RES MAN, V30, P365
   Boehm BW., 1981, Software Engineering Economics
   Bongaarts John., 2000, Beyond Six Billion: Forecasting the World's Population. Panel on Population Projections
   Box GEP, 1976, TIME SERIES ANAL FOR
   Briand LC, 1998, PROC INT CONF SOFTW, P390, DOI 10.1109/ICSE.1998.671392
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Connolly T, 1997, MANAGE SCI, V43, P1029, DOI 10.1287/mnsc.43.7.1029
   EFRON B, 1983, AM STAT, V37, P36, DOI 10.2307/2685844
   Efron B., 1993, INTRO BOOTSTRAP, VVolume 914, DOI DOI 10.1007/978-1-4899-4541-9
   GARDNER ES, 1988, MANAGE SCI, V34, P541, DOI 10.1287/mnsc.34.4.541
   Gray A. R., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P216, DOI 10.1109/METRIC.1999.809743
   Green, 2001, PRINCIPLES FORECASTI, P761
   Hall E.M., 1998, Managing risk: Methods for software systems development
   HUGHES RT, 1998, A IEE P SOFTWARE, V145, P29
   Jones C., 1998, Estimating Software Cost
   Jorgensen M., 2001, Scandinavian Journal of Information Systems, V13, P99
   Jorgensen M, 2001, INFORM SOFTWARE TECH, V43, P939, DOI 10.1016/S0950-5849(01)00203-8
   JORGENSEN M, 1995, J SOFTW MAINT-RES PR, V7, P27, DOI 10.1002/smr.4360070104
   JORGENSEN M, 2002, UNPUB BETTER SURE SA
   Kahnemann D., 1982, JUDGEMENT UNCERTAINT
   Kitchenham B, 1997, IEEE SOFTWARE, V14, P69, DOI 10.1109/52.589239
   KITCHENHAM B, 2002, IN PRESS J SYSTEMS S
   Lo B. W. N., 1997, Australian Journal of Information Systems, V5, P30
   MCCONNEL S, 1998, SOFTWARE PROJECT SUR
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   MIYAZAKI Y, 1991, INFORM SOFTWARE TECH, V33, P239, DOI 10.1016/0950-5849(91)90139-3
   Moder J.J., 1995, PROJECT MANAGEMENT C, V3rd
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   *NASA, 1990, MAN HDB SOFTW DEV
   PADBERG F, 1999, 7 EUR SOFTW ENG C SP, P109
   Pascual L, 2001, INT J FORECASTING, V17, P83, DOI 10.1016/S0169-2070(00)00069-8
   Pindyck R.S., 1997, ECONOMETRIC MODELS E
   Ramsey MH, 1998, J ANAL ATOM SPECTROM, V13, P97, DOI 10.1039/a706815h
   Stamelos I, 2001, INFORM SOFTWARE TECH, V43, P759, DOI 10.1016/S0950-5849(01)00183-5
   STAMELOS I, 2001, ESCOM 2001, P17
   Symons C.R.:., 1991, Software Sizing and Estimating: Mk II FPA
   Taylor JW, 1999, INT J FORECASTING, V15, P325, DOI 10.1016/S0169-2070(99)00002-3
   TVERSKY A, 1974, SCIENCE, V185, P1124, DOI 10.1126/science.185.4157.1124
   WILLIAMS WH, 1971, J AM STAT ASSOC, V66, P752, DOI 10.2307/2284223
   Wonnacott TH., 1990, INTRO STAT
   Yaniv I, 1997, J BEHAV DECIS MAKING, V10, P21, DOI 10.1002/(SICI)1099-0771(199703)10:1<21::AID-BDM243>3.0.CO;2-G
NR 47
TC 53
Z9 55
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 1
PY 2003
VL 45
IS 3
BP 123
EP 136
AR PII S0950-5849(02)00188-X
DI 10.1016/S0950-5849(02)00188-X
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 643KW
UT WOS:000180861300002
DA 2024-07-18
ER

PT J
AU Tan, J
   Feitosa, D
   Avgeriou, P
AF Tan, Jie
   Feitosa, Daniel
   Avgeriou, Paris
TI The lifecycle of Technical Debt that manifests in both source code and
   issue trackers
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technical Debt; Source code; Issue tracker
AB Context: Although Technical Debt (TD) has increasingly gained attention in recent years, most studies exploring TD are based on a single source (e.g., source code, code comments or issue trackers). Objective: Investigating information combined from different sources may yield insight that is more than the sum of its parts. In particular, we argue that exploring how TD items are managed in both issue trackers and software repositories (including source code and commit messages) can shed some light on what happens between the commits that incur TD and those that pay it back. Method: To this end, we randomly selected 3,000 issues from the trackers of five projects, manually analyzed 300 issues that contained TD information, and identified and investigated the lifecycle of 312 TD items.Results: The results indicate that most of the TD items marked as resolved in issue trackers are also paid back in source code, although many are not discussed after being identified in the issue tracker. Test Debt items are the least likely to be paid back in source code. We also learned that although TD items may be resolved a few days after being identified, it often takes a long time to be identified (around one year). In general, time is reduced if the same developer is involved in consecutive moments (i.e., introduction, identification, repayment decision-making and remediation), but whether the developer who paid back the item is involved in discussing the TD item does not seem to affect how quickly it is resolved.Conclusions: Investigating how developers manage TD across both source code repositories and issue trackers can lead to a more comprehensive oversight of this activity and support efforts to shorten the lifecycle of undesirable debt.
C1 [Tan, Jie] Acad Mil Sci, Beijing, Peoples R China.
   [Feitosa, Daniel; Avgeriou, Paris] Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intellig, Groningen, Netherlands.
C3 University of Groningen
RP Feitosa, D (corresponding author), Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intellig, Groningen, Netherlands.
EM j.tanjie@outlook.com; d.feitosa@rug.nl; p.avgeriou@rug.nl
RI Feitosa, Daniel/M-8700-2014
OI Feitosa, Daniel/0000-0001-9371-232X; Tan, Jie/0000-0003-1868-0123;
   Avgeriou, Paris/0000-0002-7101-0754
FU ITEA3; RVO [17038]
FX This work was supported by ITEA3 and RVO under grant agreement No. 17038
   VISDOM (https://visdom-project.github.io/website/) . Also, we would like
   to thank Joao Paulo Biazotto for his invaluable support in the data
   collection.
CR Alfayez R, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P1, DOI 10.1145/3194164.3194165
   Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Amanatidis T., 2017, P XP2017 SCI WORKSHO, P1, DOI [DOI 10.1145/3120459.3120464, 10.1145/3120459.3120464]
   Ampatzoglou A, 2022, SOFTWARE PRACT EXPER, V52, P1879, DOI 10.1002/spe.3093
   Baldassarre MT, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106377
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Bellomo S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P327, DOI [10.1145/2901739.2901754, 10.1109/MSR.2016.041]
   Bland JM, 2004, BRIT MED J, V328, P1073, DOI 10.1136/bmj.328.7447.1073
   BRESLOW N, 1970, BIOMETRIKA, V57, P579, DOI 10.1093/biomet/57.3.579
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Cochran W.G., 1977, Sampling techniques, V3rd ed.
   COX DR, 1972, J R STAT SOC B, V34, P187
   Dai K., 2017, QUASOQ APSEC, P59
   Digkas G, 2022, IEEE T SOFTWARE ENG, V48, P1705, DOI 10.1109/TSE.2020.3032557
   Digkas G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P153, DOI 10.1109/SANER.2018.8330205
   Digkas G, 2017, LECT NOTES COMPUT SC, V10475, P51, DOI 10.1007/978-3-319-65831-5_4
   DUNN OJ, 1964, TECHNOMETRICS, V6, P241, DOI 10.2307/1266041
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fisher RA, 1922, J R STAT SOC, V85, P87, DOI 10.2307/2340521
   Griffith I, 2014, WINT SIMUL C PROC, P1014, DOI 10.1109/WSC.2014.7019961
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   Krippendorff K, 2011, COMPUTING KRIPPENDOR
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Li YK, 2023, IEEE T SOFTWARE ENG, V49, P2545, DOI 10.1109/TSE.2022.3224378
   Li YK, 2020, EUROMICRO CONF PROC, P495, DOI 10.1109/SEAA51224.2020.00083
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Liu JB, 2021, ENVIRON ENG RES, V26, DOI 10.4491/eer.2020.384
   Lu C., 2019, JOINT P SUMM SCH SOF, P45
   Maipradit R, 2020, IEEE INT WORK C SO, P54, DOI 10.1109/SCAM51674.2020.00011
   Maipradit R, 2020, EMPIR SOFTW ENG, V25, P3770, DOI 10.1007/s10664-020-09854-3
   Maldonado ED, 2017, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSME.2017.8
   NELDER JA, 1972, J R STAT SOC SER A-G, V135, P370, DOI 10.2307/2344614
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Ramasubbu N, 2014, IEEE T SOFTWARE ENG, V40, P758, DOI 10.1109/TSE.2014.2327027
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Saarimäki N, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P98, DOI 10.1109/TechDebt.2019.00028
   Shull F, 2008, GUIDE ADV EMPIRICAL
   Tan J., REPLICATION PACKAGE, DOI [10.5281/zenodo.7810853, DOI 10.5281/ZENODO.7810853]
   Tan J, 2021, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSME52107.2021.00029
   Tan J, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT, TECHDEBT, P11, DOI 10.1145/3387906.3388621
   Tan J, 2022, INFORM SOFTWARE TECH, V143, DOI 10.1016/j.infsof.2021.106738
   Tan J, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2319
   Tsoukalas D, 2022, IEEE T SOFTWARE ENG, V48, P4892, DOI 10.1109/TSE.2021.3129355
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Van Solingen Rini, 2002, ENCY SOFTWARE ENG, V2002, P528
   Vidoni M, 2022, J SYST SOFTWARE, V190, DOI 10.1016/j.jss.2022.111336
   Wiese M, 2022, INFORM SOFTWARE TECH, V148, DOI 10.1016/j.infsof.2022.106926
   Wohlin C, 2015, EMPIR SOFTW ENG, V20, P1427, DOI 10.1007/s10664-014-9319-7
   Xavier L, 2020, IEEE WORK CONF MIN S, P137, DOI 10.1145/3379597.3387459
   Zabardast E, 2020, EUROMICRO CONF PROC, P376, DOI 10.1109/SEAA51224.2020.00068
   Zampetti F, 2018, IEEE WORK CONF MIN S, P526, DOI 10.1145/3196398.3196423
NR 53
TC 0
Z9 0
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2023
VL 159
AR 107216
DI 10.1016/j.infsof.2023.107216
EA APR 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA F7AW3
UT WOS:000983842400001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Trieflinger, S
   Lang, DMN
   Spies, S
   Münch, J
AF Trieflinger, Stefan
   Lang, Dominic
   Spies, Selina
   Muench, Juergen
TI The discovery effort worthiness index: How much product discovery should
   you do and how can this be integrated into delivery?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Product roadmap; Product discovery; Agile development; Design thinking;
   Product management; Scrum
ID DESIGN THINKING
AB Context: In a world of high dynamics and uncertainties, it is almost impossible to have a long-term prediction of which products, services, or features will satisfy the needs of the customer. To counter this situation, the con-duction of Continuous Improvement or Design Thinking for product discovery are common approaches. A major constraint in conducting product discovery activities is the high effort to discover and validate features and requirements. In addition, companies struggle to integrate product discovery activities into their agile processes and iterations.Objective: This paper aims at suggests a supportive tool, the "Discovery Effort Worthiness (DEW) Index", for product owners and agile teams to determine a suitable amount of effort that should be spent on Design Thinking activities. To operationalize DEW, proposals for practitioners are presented that can be used to integrate product discovery into product development and delivery. Method: A case study was conducted for the development of the DEW index. In addition, we conducted an expert workshop to develop proposals for the integration of product discovery activities into the product development and delivery process.Results: First, we present the "Discovery Effort Worthiness Index" in form of a formula. Second, we identified requirements that must be fulfilled for systematic integration of product discovery activities into product development and delivery. Third, we derived from the requirements proposals for the integration of product discovery activities with a company's product development and delivery. Conclusion: The developed "Discovery Effort Worthiness Index" provides a tool for companies and their product owners to determine how much effort they should spend on Design Thinking methods to discover and validate requirements. Integrating product discovery with product development and delivery should ensure that the results of product discovery are incorporated into product development. This aims to systematically analyze product risks to increase the chance of product success.
C1 [Trieflinger, Stefan; Muench, Juergen] Reutlingen Univ, Alteburgstr 150, D-72768 Reutlingen, Germany.
   [Lang, Dominic] ETAS GmbH, Borsigstr 24, D-70469 Stuttgart, Germany.
   [Spies, Selina] Bosch Smart Home GmbH, Schockenriedstr 17, D-70565 Stuttgart, Germany.
RP Trieflinger, S (corresponding author), Reutlingen Univ, Alteburgstr 150, D-72768 Reutlingen, Germany.
EM stefan.trieflinger@reutlingen-university.de
CR Albright RE, 2003, IEMC-2003: MANAGING TECHNOLOGICALLY DRIVEN ORGANIZATIONS: THE HUMAN SIDE OF INNOVATION AND CHANGE, PROCEEDINGS, P383, DOI 10.1109/IEMC.2003.1252298
   Alhazmi Alhejab, 2020, CSSE '20: Proceedings of the 3rd International Conference on Computer Science and Software Engineering, P33, DOI 10.1145/3403746.3403902
   [Anonymous], Design Thinking
   [Anonymous], THINK INSIGHTS BANI
   Becker H., VERWENDER FOKUS BOSC
   Brain Birds GmbH, BRAINBIRDS US
   Cagan M., 2018, INSPIRED CREATE PROD, V1st
   Canedo E.D., 2020, P 53 HAWAII INT C SY, P6650
   Carlgren L, 2016, CREAT INNOV MANAG, V25, P344, DOI 10.1111/caim.12176
   Cheng LC, 2016, PROCEEDINGS OF CHIUXID 2016: BRIDGING THE GAPS IN THE HCI & UX WORLD, P1, DOI 10.1145/2898459.2898460
   Collins JC, 1996, HARVARD BUS REV, V74, P65
   Dam R., 2018, WHAT IS DESIGN THINK, P1
   DeGregorio G, 2000, EMS - 2000: PROCEEDINGS OF THE 2000 IEEE ENGINEERING MANAGEMENT SOCIETY, P184, DOI 10.1109/EMS.2000.872498
   Dunne D, 2006, ACAD MANAG LEARN EDU, V5, P512, DOI 10.5465/AMLE.2006.23473212
   Fagerholm F, 2017, J SYST SOFTWARE, V123, P292, DOI 10.1016/j.jss.2016.03.034
   Gothelf J., 2013, Lean UX Designing Great Products with Agile Teams
   Grabmeier S., BANI VERSUS VUCA NEW
   Hoffmann C.-.A., 2013, METHODIK STEUERUNG M
   Homeandsmart GmbH, HOME SMART UNS
   Kaplan RS, 1996, HARVARD BUS REV, V74, P75
   Kappel TA, 2001, J PROD INNOVAT MANAG, V18, P39, DOI 10.1016/S0737-6782(00)00066-7
   Lang D, 2021, LECT NOTES BUS INF P, V434, P37, DOI 10.1007/978-3-030-91983-2_4
   Liikkanen LA, 2014, PROCEEDINGS OF THE NORDICHI'14: THE 8TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION: FUN, FAST, FOUNDATIONAL, P1095, DOI 10.1145/2639189.2670285
   Majer P., EUROFORUM DEUTSCHLAN
   Meinel C, 2015, UNDERST INNOV, P1, DOI 10.1007/978-3-319-06823-7_1
   Münch J, 2020, EUROMICRO CONF PROC, P284, DOI 10.1109/SEAA51224.2020.00055
   Münch J, 2019, PROCEEDINGS OF THE 2ND ACM SIGSOFT INTERNATIONAL WORKSHOP ON SOFTWARE-INTENSIVE BUSINESS: START-UPS, PLATFORMS, AND ECOSYSTEMS (IWSIB '19), P19, DOI 10.1145/3340481.3342733
   Münch J, 2019, LECT NOTES BUS INF P, V370, P97, DOI 10.1007/978-3-030-33742-1_9
   Munch J., 2020, P INT C ENG TECHNOLO, P1
   Münch J, 2019, LECT NOTES COMPUT SC, V11915, P401, DOI 10.1007/978-3-030-35333-9_29
   Nudelman G., 2018, Interactions, V25, P80, DOI [DOI 10.1145/3236683, 10.1145/3236683]
   Phaal R, 2009, TECHNOL FORECAST SOC, V76, P39, DOI 10.1016/j.techfore.2008.03.018
   Plag M., 2007, VERANDERUNGSMANAGEME
   Robert Bosch GmbH, 2018, BOSCHEROFFNET IOT CA
   Sedano T, 2020, IEEE SOFTWARE, V37, P58, DOI 10.1109/MS.2020.3013274
   Temmen M., BANI VS VUCA NEW ACR
   Trieflinger S., 2020, INT C SOFTWARE BUSIN, P55
   Trieflinger S, 2021, LECT NOTES COMPUT SC, V13126, P136, DOI 10.1007/978-3-030-91452-3_9
   Yin R. K., 2017, CASE STUDY RES DESIG
   Zulkifli T., 2019, P 4 INT C INFORMATIC, P1
NR 40
TC 0
Z9 0
U1 1
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2023
VL 157
AR 107167
DI 10.1016/j.infsof.2023.107167
EA FEB 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA A2II9
UT WOS:000953416100001
DA 2024-07-18
ER

PT J
AU Yu, DJ
   Yang, QX
   Chen, X
   Chen, J
   Xu, YH
AF Yu, Dongjin
   Yang, Quanxin
   Chen, Xin
   Chen, Jie
   Xu, Yihang
TI Graph-based code semantics learning for efficient semantic code clone
   detection
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code clone detection; Code semantics learning; Graph matching network;
   Code graph representation
ID SEARCH
AB Recent studies have shown that high-quality code semantics learning can effectively improve the performance of code clone detection. However, existing approaches suffer from two major drawbacks: (a) insufficient utilization of code representations, leading to inefficient semantics learning, and (b) low efficiency of clone detection, resulting in massive detection time. Therefore, we are motivated to propose an efficient semantics learning method while speeding up the detection process. Specifically, to address the first one, we adopt either CFG (Control Flow Graph) or PDG (Program Dependency Graph) as our initial code representation because of their rich semantic information. Further, we propose a novel graph-based code semantics learning method, which can capture critical information at token, statement, edge, and graph levels. To address the second one, we design a Siamese graph-matching network based on attention mechanisms. It can uniformly generate graph embeddings for code fragments and facilitate parallel detection of semantic clones, thus significantly boosting the speed of semantic clone detection.We evaluated our approach on two Java benchmark datasets, Google Code Jam and BigCloneBench. The experimental results show that our model outperforms the SOTA (State-Of-The-Art) lightweight models and is over 20x faster in detection. In addition, our model performs on par with the large Bert-based models and is over 110x faster in detection. Our code and dataset are available online at: https://github.com/HduDBSI/ CodeGraph4CCDetector.
C1 [Yu, Dongjin; Yang, Quanxin; Chen, Xin; Chen, Jie; Xu, Yihang] Hangzhou Dianzi Univ, Coll Comp Sci & Technol, Hangzhou 310018, Zhejiang, Peoples R China.
C3 Hangzhou Dianzi University
RP Yu, DJ (corresponding author), Hangzhou Dianzi Univ, Coll Comp Sci & Technol, Hangzhou 310018, Zhejiang, Peoples R China.
EM yudj@hdu.edu.cn
RI Xu, Yihang/GPK-0410-2022
OI Xu, Yihang/0000-0002-3757-728X; Yang, Quanxin/0000-0002-8764-9878
FU National Natural Science Foundation of China; Industrial Inter-net
   Innovation and Development Project of Ministry of Industry and
   Information Technology of China; Key Research and Development Program of
   Zhejiang Province;  [61902096];  [61702144];  [TC2008033];  [2020C01165]
FX Acknowledgments This work was partially supported by National Natural
   Science Foundation of China (No. 61902096, No. 61702144) , Industrial
   Inter-net Innovation and Development Project of Ministry of Industry and
   Information Technology of China (No. TC200802G, No. TC2008033) , and Key
   Research and Development Program of Zhejiang Province (No. 2020C01165) .
CR [Anonymous], 2016, GOOGLE CODE JAM
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Balazinska M, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P98, DOI 10.1109/WCRE.2000.891457
   Büch L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P95, DOI [10.1109/saner.2019.8668039, 10.1109/SANER.2019.8668039]
   Cheers Hayden, 2020, ICSIM '20: Proceedings of the 3rd International Conference on Software Engineering and Information Management, P115, DOI 10.1145/3378936.3378960
   Chen WK, 2003, LECT NOTES COMPUT SC, V2694, P401
   Ciesielski Vic, 2008, P 10 ANN C GENETIC E, P1453, DOI [10.1145/1389095.1389380, DOI 10.1145/1389095.1389380]
   Diehl F, 2019, Arxiv, DOI arXiv:1905.10990
   Ebrahimi N, 2019, INFORM SOFTWARE TECH, V113, P98, DOI 10.1016/j.infsof.2019.05.007
   Fang C., 2020, P 29 ACM SIGSOFT INT, P516, DOI 10.1145/3395363.3397362
   Fang S, 2021, INFORM SOFTWARE TECH, V134, DOI 10.1016/j.infsof.2021.106542
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Golubev Y, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P496, DOI 10.1109/SANER50967.2021.00053
   Guo D., 2021, ICLR
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Hua W, 2021, IEEE T RELIAB, V70, P304, DOI 10.1109/TR.2020.3001918
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang Lingxiao, 2007, P THE 6 JOINT M EURO, P55, DOI DOI 10.1145/1287624.1287634
   Kingma D. P., 2014, arXiv
   Lemos OAL, 2011, INFORM SOFTWARE TECH, V53, P294, DOI 10.1016/j.infsof.2010.11.009
   Lei MG, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111141
   Li Muxin, 2021, 2021 2nd International Conference on Big Data and Informatization Education (ICBDIE), P274, DOI 10.1109/ICBDIE52740.2021.00068
   Li YC, 2020, INFORM SOFTWARE TECH, V125, DOI 10.1016/j.infsof.2020.106320
   Li YJ, 2019, Arxiv, DOI [arXiv:1904.12787, DOI 10.48550/ARXIV.1904.12787]
   Li YJ, 2017, Arxiv, DOI arXiv:1511.05493
   Li Z, 2021, J SYST SOFTWARE, V181, DOI 10.1016/j.jss.2021.111036
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Lin TY, 2020, IEEE T PATTERN ANAL, V42, P318, DOI 10.1109/TPAMI.2018.2858826
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Mehrotra N, 2022, IEEE T SOFTWARE ENG, V48, P3771, DOI 10.1109/TSE.2021.3105556
   Meng N, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P392, DOI 10.1109/ICSE.2015.58
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Mostaeen G, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110686
   Nishi MA, 2018, J SYST SOFTWARE, V137, P130, DOI 10.1016/j.jss.2017.11.039
   Patenaude JF, 1999, PROG COMPREHEN, P49, DOI 10.1109/WPC.1999.777743
   Perez Daniel, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P518, DOI 10.1109/MSR.2019.00078
   Ragkhitwetsagul C, 2018, INT WORKS SOFTW CLON, P44, DOI 10.1109/IWSC.2018.8327318
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Sui YL, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428301
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Tronicek Z, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106805
   Tsantalis N, 2017, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2017.14
   Tsantalis N, 2015, IEEE T SOFTWARE ENG, V41, P1055, DOI 10.1109/TSE.2015.2448531
   Veličkovic P, 2018, Arxiv, DOI arXiv:1710.10903
   Vinayakarao V, 2015, PROCEEDINGS OF THE 2015 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION (PEPM'15), P21, DOI 10.1145/2678015.2682537
   Walker A, 2019, APPL COMPUT REV, V19, P28, DOI [10.1145/3338840.3355654, 10.1145/3381307.3381310]
   Wang PC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/3180155.3180179
   Wang WH, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3409331
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/SANER48275.2020.9054857, 10.1109/saner48275.2020.9054857]
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Wu YM, 2020, IEEE INT CONF AUTOM, P821, DOI 10.1145/3324884.3416562
   Xue HF, 2018, MAPL'18: PROCEEDINGS OF THE 2ND ACM SIGPLAN INTERNATIONAL WORKSHOP ON MACHINE LEARNING AND PROGRAMMING LANGUAGES, P11, DOI 10.1145/3211346.3211347
   Xue HF, 2018, FEAST'18: PROCEEDINGS OF THE 2018 WORKSHOP ON FORMING AN ECOSYSTEM AROUND SOFTWARE TRANSFORMATION, P27, DOI 10.1145/3273045.3273047
   Yafang Wang, 2019, 2019 International Conference on Artificial Intelligence and Advanced Manufacturing (AIAM). Proceedings, P168, DOI 10.1109/AIAM48774.2019.00041
   Yang QX, 2021, IEEE T CIRC SYST VID, V31, P4131, DOI 10.1109/TCSVT.2020.3046240
   Yu H, 2019, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2019.00021
   Yuan Yuan, 2020, 2019 6th International Conference on Dependable Systems and Their Applications (DSA). Proceedings, P13, DOI 10.1109/DSA.2019.00012
   Zhang FY, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111011
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhao G, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/3236024.3236068
   Zhao ZH, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111108
   Zhou Y, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111257
   Zou Y, 2020, IEEE INT CONF AUTOM, P931, DOI 10.1145/3324884.3416541
NR 64
TC 4
Z9 4
U1 3
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2023
VL 156
AR 107130
DI 10.1016/j.infsof.2022.107130
EA DEC 2022
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7S7CZ
UT WOS:000910911300001
DA 2024-07-18
ER

PT J
AU Caballero-Espinosa, E
   Carver, JC
   Stowers, K
AF Caballero-Espinosa, Eduardo
   Carver, Jeffrey C.
   Stowers, Kimberly
TI Community smells-The sources of social debt: A systematic literature
   review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Community smells; Social debt; Software development teams; Systematic
   literature review; Teamwork; Team performance
ID SOFTWARE-DEVELOPMENT; TECHNICAL DEBT; SANKEY DIAGRAM; ENERGY;
   ARCHITECTURE; AGILE; FLOW
AB Context: Social debt describes the accumulation of unforeseen project costs (or potential costs) from sub-optimal software development processes. Community smells are sociotechnical anti-patterns and one source of social debt. Because community smells impact software teams, development processes, outcomes, and organizations, we to understand their impact on software engineering.Objective: To provide an overview of community smells in social debt, based on published literature, and describe future research. Method: We conducted a systematic literature review (SLR) to identify properties, understand origins and evolution, and describe the emergence of community smells. This SLR explains the impact of community smells on teamwork and team performance.Results: We include 25 studies. Social debt describes the impacts of poor socio-technical decisions on work environments, people, software products, and society. For each of the 30 community smells identified as sources of social debt, we provide a detailed description, management approaches, organizational strategies, and mitigation effectiveness. We identify five groups of management approaches: organizational strategies, frameworks, models, tools, and guidelines. We describe 11 common properties of community smells. We develop the Community Smell Stages Framework to concisely describe the origin and evolution of community smells. We then describe the causes and effects for each community smell. We identify and describe 8 types of causes and 11 types of effects related to the community smells. Finally, we provide 8 comprehensive Sankey diagrams that offer insights into threats the community smells pose to teamwork factors and team performance.Conclusion: Community smells explain the influence work conditions have on software developers. The literature is scarce and focuses on a small number of community smells. Thus, the community smells still need more research. This review helps by organizing the state of the art about community smells. Our contributions provide motivations for future research and provide educational material for software engineering professionals.
C1 [Caballero-Espinosa, Eduardo] Technol Univ Panama, Ctr Res Dev Innovat Informat & Commun Technol CIDI, Panama City, Panama.
   [Caballero-Espinosa, Eduardo] Technol Univ Panama, Comp Syst Engn Dept, Panama City, Panama.
   [Carver, Jeffrey C.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
   [Stowers, Kimberly] Tim Fletcher Co, San Jose, CA USA.
C3 Universidad Tecnologica de Panama; Universidad Tecnologica de Panama;
   University of Alabama System; University of Alabama Tuscaloosa
RP Carver, JC (corresponding author), Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
EM eduardo.caballero@utp.ac.pa; carver@cs.ua.edu; kim.stwrs@gmail.com
OI Carver, Jeffrey/0000-0002-7824-9151
CR Almarimi N, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1560, DOI 10.1145/3468264.3473121
   Almarimi N, 2020, INT CONF GLOBAL SOFT, P43, DOI 10.1145/3372787.3390439
   Almarimi N, 2020, KNOWL-BASED SYST, V204, DOI 10.1016/j.knosys.2020.106201
   Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   Bakenne A, 2016, INT J HYDROGEN ENERG, V41, P7744, DOI 10.1016/j.ijhydene.2015.12.216
   Behutiye WN, 2017, INFORM SOFTWARE TECH, V82, P139, DOI 10.1016/j.infsof.2016.10.004
   Bell ST, 2018, AM PSYCHOL, V73, P349, DOI 10.1037/amp0000305
   Bernell S, 2016, FRONT PUBLIC HEALTH, V4, DOI 10.3389/fpubh.2016.00159
   Betz S., 4 INT WORKSHOP REQUI, P1
   Brenner R, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P38, DOI 10.1109/TechDebt.2019.00013
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Canedo E.D., BREAKING ONE BARRIER, P378
   Caprarelli A., 2020, Fallacies and Pitfalls on the Road to DevOps: A Longitudinal Industrial Study, P200, DOI [DOI 10.1007/978-3-030-39306-9_15, DOI 10.1007/978]
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Catolino G, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P77, DOI 10.1109/ICSE-SEIS52602.2021.00017
   Catolino G, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P25, DOI 10.1145/3377815.3381380
   Catolino G, 2020, IEEE SOFTWARE, V37, P10, DOI 10.1109/MS.2019.2944594
   Catolino G, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P11, DOI 10.1109/ICSE-SEIS.2019.00010
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   CONWAY ME, 1968, DATAMATION, V14, P28
   Cunningham W., 1993, OOPS Messenger, V4, P29
   De Stefano M., 2020, ICSE 20 42 INT C SOF, P703, DOI DOI 10.1145/3387940.3392204
   De Stefano M, 2022, SCI COMPUT PROGRAM, V214, DOI 10.1016/j.scico.2021.102731
   Dey PK, 2007, IND MANAGE DATA SYST, V107, P284, DOI 10.1108/02635570710723859
   Di Nitto E, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P9, DOI 10.1145/2804381.2804383
   Dittrich Y, 2002, SOCIAL THINKING-SOFTWARE PRACTICE, P243
   Eken B, 2021, SOFTWARE QUAL J, V29, P159, DOI 10.1007/s11219-020-09538-7
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Etemadi V, 2022, INFORM SOFTWARE TECH, V143, DOI 10.1016/j.infsof.2021.106786
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Garcia J, 2009, EUR CON SFTWR MTNCE, P255, DOI 10.1109/CSMR.2009.59
   Garousi V, 2016, INFORM SOFTWARE TECH, V71, P108, DOI 10.1016/j.infsof.2015.11.003
   Giardino C, 2016, IEEE T SOFTWARE ENG, V42, P585, DOI 10.1109/TSE.2015.2509970
   Guo YP, 2016, EMPIR SOFTW ENG, V21, P159, DOI 10.1007/s10664-014-9351-7
   Huang ZJ, 2022, J COMPUT SCI TECH-CH, V37, P182, DOI 10.1007/s11390-021-1596-1
   Huang ZJ, 2021, INT C PROGRAM COMPRE, P230, DOI 10.1109/ICPC52881.2021.00030
   Icay K, 2018, COMPUT METH PROG BIO, V153, P129, DOI 10.1016/j.cmpb.2017.10.013
   Izurieta Clemente, 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P23, DOI 10.1109/MTD.2012.6225995
   Kitchenham B, 1997, IEEE SOFTWARE, V14, P69, DOI 10.1109/52.589239
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lavallée M, 2018, E-INFORMATICA, V12, P117, DOI 10.5277/e-Inf180105
   Li X, 2019, SSSME 2019 JOINT P S
   McConnell S., 2021, MANAGING TECHNICAL D
   MUIR DE, 1962, AM SOCIOL REV, V27, P532, DOI 10.2307/2090036
   Nord RL, 2014, LECT NOTES BUS INF P, V199, P43
   Ortu M, 2015, Proceedings of the 11th International Conference on Predictive Models and Data Analytics in Software Engineering, PROMISE'15, P1, DOI DOI 10.1145/2810146.2810147
   Ortu M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P480, DOI [10.1145/2901739.2903505, 10.1109/MSR.2016.059]
   Palomba F, 2021, IEEE T SOFTWARE ENG, V47, P108, DOI 10.1109/TSE.2018.2883603
   Palomba F, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110847
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Salas E, 2015, HUM RESOUR MANAGE-US, V54, P599, DOI 10.1002/hrm.21628
   Schmidt M, 2008, J IND ECOL, V12, P82, DOI 10.1111/j.1530-9290.2008.00004.x
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Shull F., TECHNICAL DEBT SHOWI, P179
   Soundararajan K, 2014, APPL ENERG, V136, P1035, DOI 10.1016/j.apenergy.2014.08.070
   Subramanyam V, 2015, ENERG CONVERS MANAGE, V91, P342, DOI 10.1016/j.enconman.2014.12.024
   Tamburri D., 2019, P 52 HAW INT C SYST, DOI [10.24251/HICSS.2019.843, DOI 10.24251/HICSS.2019.843]
   Tamburri D.A., 2019, OMNISCIENT DEVOPS AN, P48
   Tamburri DA, 2021, IEEE T SOFTWARE ENG, V47, P630, DOI 10.1109/TSE.2019.2901490
   Tamburri DA, 2019, EMPIR SOFTW ENG, V24, P1369, DOI 10.1007/s10664-018-9659-9
   Tamburri DA, 2019, IEEE T COMPUT SOC SY, V6, P20, DOI 10.1109/TCSS.2018.2886433
   Tamburri DA, 2016, IEEE SOFTWARE, V33, P70, DOI 10.1109/MS.2016.144
   Tamburri DA, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-015-0024-6
   Tamburri DA, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P93, DOI 10.1109/CHASE.2013.6614739
   Wurzel Goncalves P., 2022, PROC ACM HUM COMPUT, V6
   Yli-Huumo J, 2016, J SYST SOFTWARE, V120, P195, DOI 10.1016/j.jss.2016.05.018
NR 67
TC 2
Z9 2
U1 3
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2023
VL 153
AR 107078
DI 10.1016/j.infsof.2022.107078
EA OCT 2022
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5W0BW
UT WOS:000877588300002
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Bai, JJ
   Jia, JD
   Capretz, LF
AF Bai, Jiaojiao
   Jia, Jingdong
   Capretz, Luiz Fernando
TI A three-stage transfer learning framework for multi-source cross-project
   software defect prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Transfer learning; Cross-project defect prediction; Source selection;
   Multi-source utilization; 3SW-MSTL
ID SUPPORT VECTOR MACHINE; MODELS
AB Context: Transfer learning techniques have been proved to be effective in the field of Cross-project defect prediction (CPDP). However, some questions still remain. First, the conditional distribution difference between source and target projects has not been considered. Second, facing multiple source projects, most studies only rarely consider the issues of source selection and multi-source data utilization; instead, they use all available projects and merge multi-source data together to obtain one final dataset.
   Objective: To address these issues, in this paper, we propose a three-stage weighting framework for multi-source transfer learning (3SW-MSTL) in CPDP. In stage 1, a source selection strategy is needed to select a suitable number of source projects from all available projects. In stage 2, a transfer technique is applied to minimize marginal differences. In stage 3, a multi-source data utilization scheme that uses conditional distribution information is needed to help guide researchers in the use of multi-source transferred data.
   Method: First, we have designed five source selection strategies and four multi-source utilization schemes and chosen the best one to be used in stage 1 and 3 in 3SW-MSTL by comparing their influences on prediction performance. Second, to validate the performance of 3SW-MSTL, we compared it with four multi-source and six single-source CPDP methods, a baseline within-project defect prediction (WPDP) method, and two unsupervised methods on the data from 30 widely used open-source projects.
   Results: Through experiments, bellwether and weighted vote are separately chosen as a source selection strategy and a multi-source utilization scheme used in 3SW-MSTL. And, our results indicate that 3SW-MSTL outperforms four multi-source, six single-source CPDP methods and two unsupervised methods. And, 3SW-MSTL is comparable to the WPDP method.
   Conclusion: The proposed 3SW-MSTL model is more effective for considering the two issues mentioned before.
C1 [Bai, Jiaojiao; Jia, Jingdong] Beihang Univ, Sch Software, 37 Xueyuan Rd, Beijing 100191, Peoples R China.
   [Capretz, Luiz Fernando] Western Univ, Elect & Comp Engn, London, ON, Canada.
C3 Beihang University; Western University (University of Western Ontario)
RP Jia, JD (corresponding author), Beihang Univ, Sch Software, 37 Xueyuan Rd, Beijing 100191, Peoples R China.
EM jiajingdong@buaa.edu.cn
RI Capretz, Luiz Fernando/K-5944-2013
OI Capretz, Luiz Fernando/0000-0001-6966-2369
CR Amasaki S, 2020, EMPIR SOFTW ENG, V25, P1573, DOI 10.1007/s10664-019-09777-8
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Catal C, 2009, INFORM SCIENCES, V179, P1040, DOI 10.1016/j.ins.2008.12.001
   Chen JY, 2020, NEUROCOMPUTING, V416, P103, DOI 10.1016/j.neucom.2018.12.091
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   Chen Y, 2018, AIP CONF PROC, V1955, DOI 10.1063/1.5033747
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Dai Wenyuan, 2007, P 24 INT C MACHINE L, P193
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Feng S, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106432
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Gao K., 2015, SOFTWARE ENG KNOWLED, DOI 10.18293/SEKE2015-182
   Gong LN, 2020, IEEE T RELIAB, V69, P40, DOI 10.1109/TR.2019.2895462
   Gong LN, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2172
   Gray D, 2009, COMM COM INF SC, V43, P223
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Harman M, 2014, LECT NOTES COMPUT SC, V8636, P240
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold S., 2013, P 9 INT C PREDICTIVE, P1
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Hosseini S., 2019, IEEE T SOFTWARE ENG, V45, P111, DOI [10.1109/TSE.2017.2770124, DOI 10.1109/TSE.2017.2770124]
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Jiarpakdee J, 2020, EMPIR SOFTW ENG, V25, P3590, DOI 10.1007/s10664-020-09848-1
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Krishna R, 2019, IEEE T SOFTWARE ENG, V45, P1081, DOI 10.1109/TSE.2018.2821670
   Krishna R, 2016, IEEE INT CONF AUTOM, P122, DOI 10.1145/2970276.2970339
   Kubat M., 1997, ICML, P179
   Limsettho N, 2018, INFORM SOFTWARE TECH, V100, P87, DOI 10.1016/j.infsof.2018.04.001
   Liu C, 2019, INFORM SOFTWARE TECH, V107, P125, DOI 10.1016/j.infsof.2018.11.005
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Meagher M, 2007, IEEE INT CONF INF VI, P601
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Ryu D, 2015, J COMPUT SCI TECH-CH, V30, P969, DOI 10.1007/s11390-015-1575-5
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shi K, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2330
   Sun Qian, 2011, P ADV NEUR INF PROC, P505
   Sun Y, 2020, IEICE T INF SYST, VE103D, P2003, DOI 10.1587/transinf.2020EDL8034
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   Weiss Karl, 2016, Journal of Big Data, V3, DOI 10.1186/s40537-016-0043-6
   Wen WZ, 2019, 2019 IEEE 1ST INTERNATIONAL WORKSHOP ON INTELLIGENT BUG FIXING (IBF '19), P29, DOI [10.1109/ibf.2019.8665492, 10.1109/IBF.2019.8665492]
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Williams C.K.I, 2003, Journal of the American Statistical Association, V98, P489, DOI [DOI 10.1198/JASA.2003.S269, 10.1198/jasa.2003.s, 10.1198/jasa.2003]
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yao Y, 2010, PROC CVPR IEEE, P1855, DOI 10.1109/CVPR.2010.5539857
   Yu Q, 2017, J SYST SOFTWARE, V132, P366, DOI 10.1016/j.jss.2017.06.070
   Yu X, 2018, SOFT COMPUT, V22, P3461, DOI 10.1007/s00500-018-3093-1
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zhu K, 2020, CMC-COMPUT MATER CON, V63, P891, DOI 10.32604/cmc.2020.08096
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 69
TC 19
Z9 19
U1 5
U2 27
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2022
VL 150
AR 106985
DI 10.1016/j.infsof.2022.106985
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2U8GD
UT WOS:000823392100006
OA hybrid
DA 2024-07-18
ER

PT J
AU Assyne, N
   Ghanbari, H
   Pulkkinen, M
AF Assyne, Nana
   Ghanbari, Hadi
   Pulkkinen, Mirja
TI The essential competencies of software professionals: A unified
   competence framework
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Software development; Competence; Competencies;
   Kano model
ID KANO MODEL; SKILLS; DESIGN; QUALITY; PROJECT; SYSTEM
AB Context: Developing high-quality software requires skilled software professionals equipped with a set of basic and essential software engineering competencies (SEC). These competencies and the satisfaction levels derived from them change over a project's lifecycle, or as software professionals move from one project to another.
   Objective: Previous studies suggest a lack of means enabling SEC stakeholders to identify and assess competencies suitable for different projects. Additionally, previous research has mainly portrayed SEC to be static and overlooked their evolution over time and across projects. We investigate how we could effectively identify and match the competencies of software professionals necessary for different projects.
   Method: We follow a mixed-method approach to iteratively develop and evaluate a framework for identifying and managing SEC. In so doing, we use the results of an extensive literature review, focus group discussions with experts from academia and industry, and data collected through interviews with 138 individuals with a supervisory role in the software industry.
   Results: Drawing on the Kano model and Competency Framework for Software Engineers, we propose a Unified Competence Gate for Software Professionals (UComGSP), a framework for identifying and managing SEC. The UComGSP consists of 62 hard competencies, 63 soft competencies, and 25 essential SEC competencies. Additionally, we propose three stakeholders' satisfaction levels for SEC assessment: basic, performance, and delighter. Furthermore, based on empirical observation, we report 27 competencies not mentioned in the reviewed literature; 11 of them are considered essential competencies.
   Conclusion: Competence development involves different stakeholders, including software professionals, educators, and the software industry. The UComGSP framework enables SEC stakeholders to (i) identify SE competencies, (ii) identify the essential SEC, and (iii) assess the satisfaction levels that can be derived from different competencies. Future research is needed to evaluate the effectiveness of the proposed framework across software development projects.
C1 [Assyne, Nana; Pulkkinen, Mirja] Univ Jyvaskyla, Fac Informat Technol, POB 35 Agora, FI-40014 Jyvaskyla, Finland.
   [Ghanbari, Hadi] Aalto Univ, Sch Business, Ekon Ukio 1, Espoo 02510, Finland.
   [Ghanbari, Hadi] TalTech, FinEst Ctr Smart Cities, Tallinn, Estonia.
   [Assyne, Nana] GIMPA, Sch Technol, Accra, Ghana.
C3 University of Jyvaskyla; Aalto University; Tallinn University of
   Technology
RP Assyne, N (corresponding author), Univ Jyvaskyla, Fac Informat Technol, Informat Technol, FI-40014 Jyvaskyla, Finland.
EM nana.m.a.assyne@student.jyu.fi
RI Ghanbari, Hadi/AAH-3991-2021
OI Ghanbari, Hadi/0000-0002-9725-3025; Assyne, Nana/0000-0003-0469-6642;
   Pulkkinen, Mirja/0000-0002-5313-8666
CR Abrahamsson P., 2002, Agile Software Development Methods: Review and Analysis
   Acuña ST, 2006, IEEE SOFTWARE, V23, P94, DOI 10.1109/MS.2006.47
   Acuña ST, 2004, SOFTWARE PRACT EXPER, V34, P675, DOI 10.1002/spe.586
   Ahmed Faheem, 2013, International Journal of Information Processing and Management, V4, P171, DOI 10.4156/ijipm.vol4.issue3.17
   Aisha AN, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON INDUSTRIAL ENGINEERING AND ENGINEERING MANAGEMENT (IEEM), P184, DOI 10.1109/IEEM.2016.7797861
   Alavi SB, 2012, SCI IRAN, V19, P662, DOI 10.1016/j.scient.2011.08.033
   André M, 2011, INFORM SOFTWARE TECH, V53, P259, DOI 10.1016/j.infsof.2010.11.011
   [Anonymous], 2014, SOFTW ENG COMP MOD S
   [Anonymous], 2020, COMPUT CURRICULA
   Assyne N, 2022, J SYST SOFTWARE, V185, DOI 10.1016/j.jss.2021.111183
   Assyne N, 2019, LECT NOTES BUS INF P, V370, P345, DOI 10.1007/978-3-030-33742-1_27
   Assyne N, 2020, LECT NOTES BUS INF P, V371, P69, DOI 10.1007/978-3-030-35510-4_5
   Barreto A, 2008, COMPUT OPER RES, V35, P3073, DOI 10.1016/j.cor.2007.01.010
   Bohlouli M, 2017, EXPERT SYST APPL, V70, P83, DOI 10.1016/j.eswa.2016.10.046
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   C. I. S. Workshop, 2021, EUR E COMP FRAM 3 0
   Calazans A, 2017, INT REQUIR ENG CONF, P204, DOI 10.1109/RE.2017.22
   Chang JW, 2016, IEEE INT CONF ADV LE, P396, DOI 10.1109/ICALT.2016.78
   Charalambous B., 2005, INT WAT ASS SPEC C L, P1
   Chassidim H, 2018, EUR J ENG EDUC, V43, P638, DOI 10.1080/03043797.2017.1401595
   Colomo-Palacios R, 2013, COMPUT HUM BEHAV, V29, P456, DOI 10.1016/j.chb.2012.04.021
   Colomo-Palacios R, 2010, INT J HUM CAP INF TE, V1, P31, DOI 10.4018/jhcitp.2010091103
   Cornide-Reyes H, 2021, IEEE ACCESS, V9, P84724, DOI 10.1109/ACCESS.2021.3087717
   Cornide-Reyes H, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19153291
   Debois P., 2011, J INF TECHNOL MANAG, V24, P3
   Espinosa-Curiel IE., 2011, Proceedings of the 2011 International Conference on Software and Systems Process, P139, DOI DOI 10.1145/1987875.1987898
   Frezza S, 2018, ITICSE 2018 COMPANION: PROCEEDINGS COMPANION OF THE 23RD ANNUAL ACM CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P148, DOI 10.1145/3293881.3295782
   Rivera-Ibarra JG, 2010, CONF SOFTW ENG EDUC, P33, DOI 10.1109/CSEET.2010.21
   Gangurde SR, 2018, BENCHMARKING, V25, P450, DOI 10.1108/BIJ-08-2016-0131
   Gharebagh SS, 2018, LECT NOTES COMPUT SC, V10772, P411, DOI 10.1007/978-3-319-76941-7_31
   Gioia DA, 2013, ORGAN RES METHODS, V16, P15, DOI 10.1177/1094428112452151
   Goel S, 2006, J INF TECHNOL EDUC-R, V5, P27
   Gold C, 2014, IEEE GLOB ENG EDUC C, P100, DOI 10.1109/EDUCON.2014.6826075
   Harris K.S., 2008, Technology Teacher, V68, P19
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hilburn T., 2013, SOFTWARE ASSURANCE C
   Huang JC, 2018, INT J MOB COMMUN, V16, P227
   Hubwieser P., 2013, Proceedings of the 8th Workshop in Primary and Secondary Computing Education, WiPSE'13, P95
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   IEEE -CS and ACM, 2015, CURRICULUM GUIDELINE
   Kano, 2016, KANOMODEL
   Kano N., 1984, J JPN SOC QUALITY CO J JAPANESE SOC QUALI, V41, P39
   Kobata K, 2014, 2014 INTERNATIONAL CONFERENCE ON TEACHING, ASSESSMENT AND LEARNING (TALE), P480, DOI 10.1109/TALE.2014.7062552
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Lac A., 2016, Emerging trends in the social and behavioural sciences: An interdisciplinary, searchable, and linkable reference for the 21st century, P1, DOI DOI 10.1002/9781118541555.WBIEPC065
   Larkin Michael, 2011, ADV FUNCT MATER, P99, DOI [10.1002/cbdv.200900247, DOI 10.1002/ADFM.201605785, 10.1002/9781119973249.ch8]
   Le Deist FD, 2005, HUM RESOUR DEV INT, V8, P27, DOI 10.1080/1367886042000338227
   Lee YC, 2008, COMPUT IND ENG, V55, P48, DOI 10.1016/j.cie.2007.11.014
   Lehtola L., 2006, Software Process Improvement and Practice, V11, P7, DOI 10.1002/spip.249
   Linck B, 2013, IEEE GLOB ENG EDUC C, P85, DOI 10.1109/EduCon.2013.6530090
   Liu XF, 2000, IEEE POTENTIALS, V19, P14
   Manawadu C.D., 2015, INT J COMPUT APPL, V113, P27
   Mano CD, 2006, PROC FRONT EDUC CONF, P38
   Mason Jennifer, 2018, Qualitative Researching
   Matteson ML, 2016, PORTAL-LIBR ACAD, V16, P71, DOI 10.1353/pla.2016.0009
   Mead NR, 2013, CONF SOFTW ENG EDUC, P119, DOI 10.1109/CSEET.2013.6595243
   Moreno AM, 2012, J SYST SOFTWARE, V85, P1607, DOI 10.1016/j.jss.2012.01.060
   Moustroufas E., 2015, ACM INT C P SERIES, P235, DOI DOI 10.1145/2801948.2801960
   Myers M. D., 2007, Information and Organization, V17, P2, DOI 10.1016/j.infoandorg.2006.11.001
   Nelson R.R., 2007, MIS Quarterly executive, V6
   Object Management Group, 2018, ESS KERN LANG SOFTW
   Omar M., 2018, Journal of Engineering and Applied Sciences, V13, P784, DOI [DOI 10.3923/JEASCI.2018.784.789, 10.3923/jeasci.2018.784.789]
   Orsoni A, 2013, UKSIM INT CONF COMP, P507, DOI 10.1109/UKSim.2013.101
   Otero LD, 2009, COMPUT IND ENG, V56, P1333, DOI 10.1016/j.cie.2008.08.002
   Papoutsoglou M, 2018, EUROMICRO CONF PROC, P214, DOI 10.1109/SEAA.2018.00042
   Patel A, 2012, IN C IND ENG ENG MAN, P899, DOI 10.1109/IEEM.2012.6837870
   Pawlowski J.M., 2010, LECT NOTES BUSINESS
   Pawlowski J. M., 2012, P 12 EUR C KNOWL MAN, P437
   Pérez J, 2017, IEEE T EDUC, V60, P22, DOI 10.1109/TE.2016.2582736
   Piaszczyk C, 2011, SYSTEMS ENG, V14, P305, DOI 10.1002/sys.20180
   Pyster, 2009, GRADUATE SOFTWARE EN
   Radermacher A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P291, DOI 10.1145/2591062.2591159
   Richardson I., 2001, Software Process Improvement and Practice, V6, P157, DOI 10.1002/spip.144
   Robinson MA, 2005, DESIGN STUD, V26, P123, DOI 10.1016/j.destud.2004.09.004
   Robson C., 2002, Research in the Real World, V2nd
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saldaña-Ramos J, 2012, IET SOFTW, V6, P405, DOI 10.1049/iet-sen.2011.0182
   Salviano CF, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P125, DOI 10.1109/QUATIC.2012.27
   Schulte C, 2017, IEEE GLOB ENG EDUC C, P867, DOI 10.1109/EDUCON.2017.7942950
   Sedelmaier Y, 2014, PROC FRONT EDUC CONF
   Sedelmaier Y, 2014, IEEE GLOB ENG EDUC C, P395, DOI 10.1109/EDUCON.2014.6826125
   Seppänen V, 2000, LECT NOTES COMPUT SC, V1840, P376
   Studt R, 2015, IEEE GLOB ENG EDUC C, P908, DOI 10.1109/EDUCON.2015.7096081
   Thurner V, 2014, IEEE GLOB ENG EDUC C, P1069, DOI 10.1109/EDUCON.2014.6826240
   Tuffley D, 2012, IET SOFTW, V6, P176, DOI 10.1049/iet-sen.2011.0044
   TURLEY RT, 1995, J SYST SOFTWARE, V28, P19, DOI 10.1016/0164-1212(94)00078-2
   Urs D.S., 2013, SYNERGY, V2, P137
   Vaismoradi M, 2013, NURS HEALTH SCI, V15, P398, DOI 10.1111/nhs.12048
   Visser W, 2014, CURRICULUM GUIDELINE
   WERNERFELT B, 1984, STRATEGIC MANAGE J, V5, P171, DOI 10.1002/smj.4250050207
   Zendler A, 2014, J EDUC COMPUT RES, V51, P71, DOI 10.2190/EC.51.1.d
NR 91
TC 3
Z9 3
U1 3
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2022
VL 151
AR 107020
DI 10.1016/j.infsof.2022.107020
EA AUG 2022
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V5BX
UT WOS:000859493100010
OA hybrid
DA 2024-07-18
ER

PT J
AU Masood, Z
   Hoda, R
   Blincoe, K
   Damian, D
AF Masood, Zainab
   Hoda, Rashina
   Blincoe, Kelly
   Damian, Daniela
TI Like, dislike, or just do it? How developers approach software
   development tasks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software tasks; Desirability; Undesirability; Contributing factors
AB Context: Software developers work on various tasks and activities that contribute towards creating and maintaining software applications, frameworks, or other software components. These include technical (e.g., writing code and fixing bugs) and non-technical activities (e.g., communicating within or outside teams to understand, clarify, and resolve issues) as part of their day-to-day responsibilities. Interestingly, there is an aspect of desirability associated with these tasks and activities.
   Objective: However, not all of these tasks are desirable to developers, and yet they still need to be done. This study explores desirability and undesirability of developers for software development tasks.
   Method: Based on semi-structured interviews from 32 software developers and applying a grounded theory research approach, the study investigates what tasks are desirable and undesirable for developers, what makes tasks desirable and undesirable for them, what are the perceived consequences of working on these tasks, and how do they deal with such tasks.
   Results: We identified a set of underlying factors that make tasks (un)desirable for developers, categorised as personal, social, organisational, technical, and operational factors. We also found that working on desirable tasks has positive consequences while working on undesirable tasks has negative consequences. We reported different standard, assisted, and mitigation strategies that aid software practitioners manage developers' likes and dislikes.
   Conclusion: Understanding these likes and dislikes, contributing factors, and strategies can help the managers and teams ensure balanced work distribution, developers' happiness, and productivity, ultimately increasing the value developers add to software products.
C1 [Masood, Zainab; Blincoe, Kelly] Univ Auckland, Auckland, New Zealand.
   [Hoda, Rashina] Monash Univ, Melbourne, Vic, Australia.
   [Damian, Daniela] Univ Victoria, Victoria, BC, Canada.
C3 University of Auckland; Monash University; University of Victoria
RP Masood, Z (corresponding author), Univ Auckland, Auckland, New Zealand.
EM zmas690@aucklanduni.ac.nz
OI Masood, Zainab/0000-0002-3592-8250; Blincoe, Kelly/0000-0003-4092-9706
FU Natural Sciences and Engineering Research Council (NSERC), Canada;
   Google Research Faculty Award
FX We thank all participants who contributed to this study. We would also
   like to thank our anonymous reviewers for their feedback that helped to
   improve the quality of this work. This study was conducted under
   approval from the Human Participants Ethics Committee at the University
   of Auckland. This research was partially funded by the Natural Sciences
   and Engineering Research Council (NSERC), Canada and Google Research
   Faculty Award.
CR Baumeister R. F., 2001, Review of General Psychology, V5, P323, DOI [10.1037/1089-2680.5.4.323, DOI 10.1037/1089-2680.5.4.323]
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   Brackett J.W., 1990, Software requirements
   Capretz LF, 2015, COMPUT HUM BEHAV, V52, P373, DOI 10.1016/j.chb.2015.05.050
   Denzin N., 2005, HDB QUALITATIVE RES, P1, DOI DOI 10.1177/1474474013487485
   Destefanis G, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.73
   Ford D, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P115, DOI 10.1109/CHASE.2015.19
   GLASS RL, 1992, INFORM MANAGE, V23, P183, DOI 10.1016/0378-7206(92)90043-F
   Graziotin D., 2017, UNHAPPINESS SOFTWARE
   Hall T, 2008, IEEE SOFTWARE, V25, P92, DOI 10.1109/MS.2008.105
   Jones T., 1990, AM PROGRAM, V3, P14
   Konopka M, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON CONTEXT FOR SOFTWARE DEVELOPMENT, P13, DOI 10.1109/CSD.2015.10
   Lewis S, 2015, HEALTH PROMOT PRACT, V16, P473, DOI 10.1177/1524839915580941
   Licorish SA, 2018, INFORM SOFTWARE TECH, V97, P10, DOI 10.1016/j.infsof.2017.12.005
   Licorish SA, 2017, INFORM MANAGE-AMSTER, V54, P364, DOI 10.1016/j.im.2016.09.005
   Madampe K, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P37, DOI 10.1145/3377816.3381722
   Mäntylä M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P247, DOI [10.1109/MSR.2016.033, 10.1145/2901739.2901752]
   Masood Z., 2021, IEEE T SOFTWARE ENG
   Masood Z, 2020, EMPIR SOFTW ENG, V25, P4962, DOI 10.1007/s10664-020-09876-x
   Meyer AN, 2021, IEEE T SOFTWARE ENG, V47, P863, DOI 10.1109/TSE.2019.2904957
   Meyer AN, 2017, IEEE T SOFTWARE ENG, V43, P1178, DOI 10.1109/TSE.2017.2656886
   Milewski AE, 2007, EMPIR SOFTW ENG, V12, P311, DOI 10.1007/s10664-007-9036-6
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Ortu M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P303, DOI 10.1109/MSR.2015.35
   Ralph Paul, 2018, P 22 INT C EV ASS SO, P13
   Strauss A., 1990, BASICS QUALITATIVE R
   Wang ZD, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3387111
   Wrobel MR, 2013, C HUM SYST INTERACT, P518, DOI 10.1109/HSI.2013.6577875
NR 29
TC 1
Z9 1
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2022
VL 150
AR 106963
DI 10.1016/j.infsof.2022.106963
EA JUN 2022
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2U8GD
UT WOS:000823392100009
DA 2024-07-18
ER

PT J
AU Liu, J
   Zhang, RZ
   Liu, WM
   Zhang, YH
   Gu, DJ
   Tong, MK
   Wang, XK
   Xue, JX
   Wang, HR
AF Liu, Jia
   Zhang, Runzi
   Liu, Wenmao
   Zhang, Yinghua
   Gu, Dujuan
   Tong, Mingkai
   Wang, Xingkai
   Xue, Jianxin
   Wang, Huanran
TI Context2Vector: Accelerating security event triage via context
   representation learning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Context modeling; Event triage; Topic model; Representation learning
AB Context: Security teams are overwhelmed by thousands of alerts and events everyday, which are comprehensively collected for threat analysis in security operations center. Although methods based on rules, intelligence and data mining are utilized, the alert fatigue situation is still a challenging problem, slowing down the overall threat investigation process.Objective: 'Event polysemy' phenomenon broadly exists in large-scale event dataset, which means that events of the same category can reveal different purposes in different contexts. This paper aims at exploring, revealing and evaluating the latent patterns embedding in the event contexts, to gain insight on context semantics and reduce manual intervention in event triage tasks.Method: A context representation learning based method, named Context2Vector, is proposed. Contexts are extracted from multiple behavioral views. Then, both dense event representations and sparse topic representations are learnt at the same time and in the same space. A human-in-the-loop topic annotation process is involved and finally, a context deviation detection based method is integrated to generate explainable and informative labels for automated context semantic decoding.Results: Various experiments are conducted on a enterprise-scale event dataset. The topic annotation, context related feature importance and top-N event ranking evaluation results show that Context2Vector outperforms traditional methods on the high-risk event identification problems, improving the attacker recall rate by up to 2.25 times within limited events to be investigated.Conclusion: It is concluded that event contexts imply practicable and abundant information in regard to behaviors and intents of real threat actors. More precise profiling of network entities can be extracted from contexts, compared to rules, intelligence, and anomaly detectors used in practice.
C1 [Liu, Jia; Zhang, Yinghua] Univ Sci & Technol Beijing, Sch Civil & Resource Engn, Beijing 100083, Peoples R China.
   [Zhang, Runzi; Liu, Wenmao; Gu, Dujuan; Tong, Mingkai; Wang, Xingkai; Xue, Jianxin] NSFOCUS Technol Grp Co Ltd, Beijing 100089, Peoples R China.
   [Wang, Huanran] Harbin Inst Technol, Sch Comp Sci & Technol, Harbin 150006, Peoples R China.
C3 University of Science & Technology Beijing; Harbin Institute of
   Technology
RP Zhang, RZ (corresponding author), NSFOCUS Technol Grp Co Ltd, Beijing 100089, Peoples R China.
EM runzi_zhang@163.com
RI ZHAO, S/IWV-4219-2023; Zhang, Y J/HLG-1022-2023; z, y/HPC-0477-2023;
   zhang, ying/HJB-1230-2022
OI Zhang, Runzi/0000-0003-2929-2484
FU Beijing Nova Program [Z211100002121150]; Basic Scientific Research
   Operating Expenses of Central Univeies [FRF-TP-20-005A1]; China
   Postdoctoral Science Foundation [2020M670181]
FX Acknowledgments We appreciate all the valuable advice and help from the
   review-ers and editors. This work was funded by Beijing Nova Program
   (Z211100002121150) , Basic Scientific Research Operating Expenses of
   Central Univeies (FRF-TP-20-005A1) and China Postdoctoral Science
   Foundation (2020M670181) .
CR Alsaheel A, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P3005
   Aminanto ME, 2020, IEEE ACCESS, V8, P217977, DOI 10.1109/ACCESS.2020.3041837
   Aminanto ME, 2019, ANN CONF PRIV SECUR, P330, DOI 10.1109/pst47121.2019.8949029
   Bieri M., 2016, P 26 INT PHOT SCI EN, P1, DOI DOI 10.1109/THS.2016.7568907
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Breunig MM, 2000, SIGMOD REC, V29, P93, DOI 10.1145/335191.335388
   Doak JE, 2013, 2013 12TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2013), VOL 2, P34, DOI 10.1109/ICMLA.2013.102
   Gao P., 2018, ARXIV180602290
   Gao P., 2018, ARXIV180609339
   Gao P, 2021, PROC INT CONF DATA, P193, DOI 10.1109/ICDE51399.2021.00024
   Ghafir I, 2018, FUTURE GENER COMP SY, V89, P349, DOI 10.1016/j.future.2018.06.055
   Guo WB, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P364, DOI 10.1145/3243734.3243792
   Haas S, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P979, DOI 10.1145/3167132.3167239
   Han X, 2020, 1ST CONFERENCE OF THE ASIA-PACIFIC CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 10TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (AACL-IJCNLP 2020), P745
   Hassan W.U., 2020, NETWORK DISTRIBUTED
   Hossain MN, 2020, P IEEE S SECUR PRIV, P1139, DOI 10.1109/SP40000.2020.00064
   Hossain MN, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P487
   Hu E., 2021, IEEE INFOCOM 2021 IE, P1
   Khosravifar Babak, 2008, 2008 22nd International Conference on Advanced Information Networking and Applications - Workshops, P997, DOI 10.1109/AINA.2008.44
   Kwon, 2011, INTRUSION DETECT SYS, P173
   Leichtnam Laetitia, 2020, Detection of Intrusions and Malware, and Vulnerability Assessment. 17th International Conference, DIMVA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12223), P238, DOI 10.1007/978-3-030-52683-2_12
   Li Ding, 2020, NDSS
   Lin D, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P1630, DOI 10.1145/2623330.2623360
   Lin Y, 2018, CIKM'18: PROCEEDINGS OF THE 27TH ACM INTERNATIONAL CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1987, DOI 10.1145/3269206.3272013
   Liu FC, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1777, DOI 10.1145/3319535.3363224
   Lundberg SM, 2017, ADV NEUR IN, V30
   Mikolov Tomas, 2013, Preprints
   Milajerdi SM, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1795, DOI 10.1145/3319535.3363217
   Milajerdi SM, 2019, P IEEE S SECUR PRIV, P1137, DOI 10.1109/SP.2019.00026
   Moody C. E., 2016, Mixing dirichlet topic models and word embeddings to make lda2vec
   Noel S, 2016, HANDB STAT, V35, P117, DOI 10.1016/bs.host.2016.07.001
   Pei KX, 2016, ANN COMPUT SECURITY, P583, DOI 10.1145/2991079.2991122
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Salah S, 2013, COMPUT NETW, V57, P1289, DOI 10.1016/j.comnet.2012.10.022
   Satvat K., 2021, ARXIV PREPRINT ARXIV
   Shen Y, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P905
   Shen Y, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P592, DOI 10.1145/3243734.3243811
   Shu XK, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1883, DOI 10.1145/3243734.3243829
   Tuor A., 2017, P WORKSH 31 AAAI C A
   Ul Hassan W, 2020, P IEEE S SECUR PRIV, P1172, DOI 10.1109/SP40000.2020.00096
   Ul Hassan W, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23349
   Zeng J., 2021, WATSON ABSTRACTING B
   Zhao NW, 2020, IEEE INFOCOM SER, P2420, DOI [10.1109/INFOCOM41043.2020.9155219, 10.1109/infocom41043.2020.9155219]
NR 43
TC 2
Z9 2
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2022
VL 146
AR 106856
DI 10.1016/j.infsof.2022.106856
EA FEB 2022
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0J8ZG
UT WOS:000780387700013
DA 2024-07-18
ER

PT J
AU Mahdavi-Hezaveh, R
   Ajmeri, N
   Williams, L
AF Mahdavi-Hezaveh, Rezvan
   Ajmeri, Nirav
   Williams, Laurie
TI Feature toggles as code: Heuristics and metrics for structuring feature
   toggles
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Feature toggle; Continuous integration; Continuous development; Open
   source repository; Heuristic; Metric
AB Context: Using feature toggles is a technique to turn a feature either on or off in program code by checking the value of a variable in a conditional statement. This technique is increasingly used by software practitioners to support continuous integration and continuous delivery (CI/CD). However, using feature toggles may increase code complexity, create dead code, and decrease the quality of a codebase.Objective: The goal of this research is to aid software practitioners in structuring feature toggles in the codebase by proposing and evaluating a set of heuristics and corresponding complexity, comprehensibility, and maintainability metrics based upon an empirical study of open source repositories.Method: We identified 80 GitHub repositories that use feature toggles in their development cycle. We conducted a qualitative analysis using 60 of the 80 repositories to identify heuristics and metrics. Then, we conducted a survey of practitioners of 80 repositories to obtain their feedback that the proposed heuristics can be used to guide the structure of feature toggles and to reduce technical debt. We also conducted a case study of the all 80 repositories to analyze relations between heuristics and metrics.Results: From the qualitative analysis, we proposed 7 heuristics to guide structuring feature toggles and identified 12 metrics to support the principles embodied in the heuristics. Our survey result shows that practitioners agree that managing feature toggles is difficult, and using identified heuristics can reduce technical debt. Based on our case study, we find a relationship between the adoption of heuristics and the values of metrics.Conclusions: Our results support that practitioners should have self-descriptive feature toggles, use feature toggles sparingly, avoid duplicate code in using feature toggles, and ensure complete removal of a feature toggle.
C1 [Mahdavi-Hezaveh, Rezvan; Williams, Laurie] North Carolina State Univ, Raleigh, NC 27695 USA.
   [Ajmeri, Nirav] Univ Bristol, Bristol, Avon, England.
C3 North Carolina State University; University of Bristol
RP Mahdavi-Hezaveh, R (corresponding author), North Carolina State Univ, Raleigh, NC 27695 USA.
EM rmahdav@ncsu.edu
OI Mahdavi-Hezaveh, Rezvan/0000-0002-9761-4361; Ajmeri,
   Nirav/0000-0003-3627-097X
FU North Carolina State University
FX The first author is funded by North Carolina State University. The
   second author is funded by the National Security Agency (Science of
   Security Lablet) at North Carolina State University. We thank all the
   reviewers for their valuable feedback. We also thank the members of the
   RealSearch group.
CR [Anonymous], 2018, REFACTORING IMPROVIN
   [Anonymous], 2020, The Guardian
   Australian Department of Veterans' Affairs, 2019, MYS PROT
   Automattic, 2019, WP CAL
   Bird J., 2020, FEATURE TOGGLES ARE
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cohen M. B., 2006, Software Engineering Notes, V31, P1, DOI [DOI 10.1145/1218776.1218785, 10.1145/1218776.1218785]
   Dale N.B., 2003, INTRO JAVA SOFTWARE
   Danial A., 2019, CLOC COUNT LINES COD
   Education and Skills Funding Agency Team, 2019, ED SKILLS FUNDING AG
   Fowler M., 2013, Continuous Delivery
   Harmes R., 2009, FLIPPING OUT
   Heitlager I, 2007, QUATIC 2007: 6TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, PROCEEDINGS, P30, DOI 10.1109/QUATIC.2007.8
   Hodges B., 2019, PROGR EXPT FEATURE F
   Hodgson P, 2017, Feature toggles (aka Feature Flags)
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   IEEE Standards Coordinating Committee, 1990, 610121990 IEEE, P169
   James G, 2013, SPRINGER TEXTS STAT, V103, P1, DOI [10.1007/978-1-4614-7138-7, 10.1007/978-1-4614-7138-7_1]
   Kohavi R, 2009, DATA MIN KNOWL DISC, V18, P140, DOI 10.1007/s10618-008-0114-1
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Likert R., 1932, Arch. Psychol., V22, P44, DOI DOI 10.4135/9781412961288.N454
   Mahdavi-Hezaveh R, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09901-z
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Meinicke J, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P233, DOI 10.1145/3377813.3381366
   Meinicke J, 2020, IEEE WORK CONF MIN S, P169, DOI 10.1145/3379597.3387463
   Meinicke J, 2016, IEEE INT CONF AUTOM, P483, DOI 10.1145/2970276.2970322
   Meneely A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377661
   Moore G.A., 2009, CROSSING CHASM MARKE
   NAV-The Norwegian Labour and Welfare Directorate, 2020, NORW LAB WELF DIR PL
   Ould M.A., 1986, Testing in software development
   Parnin C, 2017, IEEE SOFTWARE, V34, P86, DOI 10.1109/MS.2017.86
   Pelagios Network, 2019, RECOGITO2 WORKSP FRO
   Penny G., 2003, Software Maintenance: Concepts and Practice
   Rahman M.T., 2018, EMPIR SOFTW ENG, V22, P1
   Rahman MT, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P201, DOI [10.1145/2901739.2901745, 10.1109/MSR.2016.029]
   Ramanathan M.K., 2020, P 42 ACM IEEE INT C, P1
   Roy J. R., 2007, QUEENS SCH COMPUTING, V541, P64
   Rugg G, 2005, EXPERT SYST, V22, P94, DOI 10.1111/j.1468-0394.2005.00300.x
   Saldana J., 2015, The coding manual for qualitative researchers
   Salesforce, 2019, REFOCUS
   Salesforce, 2019, REFOCUS
   Sayagh M., 2018, IEEE T SOFTW ENG TSE
   Sayagh M, 2020, EMPIR SOFTW ENG, V25, P1259, DOI 10.1007/s10664-019-09790-x
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   UK Department for Education, 2020, MULT TABL CHECK MTC
   UK Department for Education, 2019, MULT TABL CHECK MTC
   UK Department for Education, 2019, MULT TABL CHECK MTC
   UK Education and Skills Funding Agency Team, 2020, UK ED SKILLS FUND AG
   UK HM Courts & Tribunals Service, 2020, UK HM COURTS TRIB SE
   Ur Rahman AA, 2015, 2015 AGILE CONFERENCE, P1, DOI 10.1109/Agile.2015.12
   Xi HW, 1999, LECT NOTES COMPUT SC, V1551, P228
   Zhang YL, 2021, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE43902.2021.00029
NR 52
TC 3
Z9 4
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2022
VL 145
AR 106813
DI 10.1016/j.infsof.2021.106813
EA FEB 2022
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0J9PR
UT WOS:000780430800005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Canfora, G
   Di Sorbo, A
   Forootani, S
   Martinez, M
   Visaggio, CA
AF Canfora, Gerardo
   Di Sorbo, Andrea
   Forootani, Sara
   Martinez, Matias
   Visaggio, Corrado A.
TI Patchworking: Exploring the code changes induced by vulnerability fixing
   activities
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software vulnerabilities; Software maintenance; Empirical study
ID CHANGE IMPACT ANALYSIS; SOFTWARE
AB Context: Identifying and repairing vulnerable code is a critical software maintenance task. Change impact analysis plays an important role during software maintenance, as it helps software maintainers to figure out the potential effects of a change before it is applied. However, while the software engineering community has extensively studied techniques and tools for performing impact analysis of change requests, there are no approaches for estimating the impact when the change involves the resolution of a vulnerability bug. Objective: We hypothesize that similar vulnerabilities may present similar strategies for patching. More specifically, our work aims at understanding whether the class of the vulnerability to fix may determine the type of impact on the system to repair. Method: To verify our conjecture, in this paper, we examine 524 security patches applied to vulnerabilities belonging to ten different weakness categories and extracted from 98 different open-source projects written in Java. Results: We obtain empirical evidence that vulnerabilities of the same types are often resolved by applying similar code transformations, and, thus, produce almost the same impact on the codebase. Conclusion: On the one hand, our findings open the way to better management of software maintenance activities when dealing with software vulnerabilities. Indeed, vulnerability class information could be exploited to better predict how much code will be affected by the fixing, how the structural properties of the code (i.e., complexity, coupling, cohesion, size) will change, and the effort required for the fix. On the other hand, our results can be leveraged for improving automated strategies supporting developers when they have to deal with security flaws.
C1 [Canfora, Gerardo; Di Sorbo, Andrea; Forootani, Sara; Visaggio, Corrado A.] Univ Sannio, Dept Engn, Benevento, Italy.
   [Martinez, Matias] Univ Polytech Hauts de France, Valenciennes, France.
C3 University of Sannio; Universite Polytechnique Hauts-de-France
RP Forootani, S (corresponding author), Univ Sannio, Dept Engn, Benevento, Italy.
EM canfora@unisannio.it; disorbo@unisannio.it; forootani@unisannio.it;
   matias.martinez@uphf.fr; visaggio@unisannio.it
RI Martinez, Matias/ABA-8871-2021
OI Martinez, Matias/0000-0002-2945-866X; Di Sorbo,
   Andrea/0000-0002-3192-739X
CR Abdi H., 2007, Encyclopedia of measurement and statistics, P508, DOI DOI 10.4135/9781412952644.N239
   Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   [Anonymous], 1994, P INT C VERY LARGE D
   [Anonymous], 2012, P ACM SIGSOFT 20 INT, DOI DOI 10.1145/2393596.2393656
   [Anonymous], 2009, P 4 INT S INF COMP C, DOI DOI 10.1145/1533057.1533084
   Antoniol G., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P227, DOI 10.1109/CSMR.2000.827331
   Arnold Robert S., 1996, SOFTWARE CHANGE IMPA
   Ben-Asher N, 2015, COMPUT HUM BEHAV, V48, P51, DOI 10.1016/j.chb.2015.01.039
   Bohner SA, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P42, DOI 10.1109/ICSM.1996.564987
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Camilo F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P269, DOI 10.1109/MSR.2015.32
   Canfora G, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P259
   Canfora G, 2020, COMPUT SECUR, V99, DOI 10.1016/j.cose.2070.10706
   Cohen J., 1988, STAT POWER ANAL BEHA
   Darcy DP, 2005, IEEE T SOFTWARE ENG, V31, P982, DOI 10.1109/TSE.2005.130
   David F.N., 1938, Tables of the ordinates and probability integral of the dis- tribution of the correlation coeffecients in small samples
   Di Sorbo A, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2316
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Frick V, 2020, PROC INT CONF SOFTW, P226, DOI 10.1145/3377812.3381400
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Huang Z, 2016, P IEEE S SECUR PRIV, P618, DOI 10.1109/SP.2016.43
   Hunt Andy., 2003, Pragmatic Unit Testing in Java with JUnit
   Jimenez M, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P222, DOI 10.1109/QRS.2016.34
   Khan A, 2016, 2016 INTERNATIONAL CONFERENCE ON OPEN SOURCE SYSTEMS AND TECHNOLOGIES (ICOSST), P29, DOI 10.1109/ICOSST.2016.7838573
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Kuzon WM, 1996, ANN PLAS SURG, V37, P265, DOI 10.1097/00000637-199609000-00006
   Law J, 2003, PROC INT CONF SOFTW, P308, DOI 10.1109/ICSE.2003.1201210
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   Li F, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2201, DOI 10.1145/3133956.3134072
   Linares-Vásquez M, 2017, IEEE WORK CONF MIN S, P2, DOI 10.1109/MSR.2017.60
   Ma SQ, 2017, LECT NOTES COMPUT SC, V10493, P229, DOI 10.1007/978-3-319-66399-9_13
   Martinez M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P79, DOI 10.1109/ICSE-Companion.2019.00043
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Mondal M, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P93, DOI [10.1109/SANER48275.2020.9054846, 10.1109/saner48275.2020.9054846]
   Piantadosi V, 2019, IEEE INT CONF SOFTW, P68, DOI 10.1109/ICST.2019.00017
   Ponta Serena Elisa, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P383, DOI 10.1109/MSR.2019.00064
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Rajlich V, 2004, IEEE SOFTWARE, V21, P62, DOI 10.1109/MS.2004.17
   Russo ER, 2019, J SYST SOFTWARE, V156, P84, DOI 10.1016/j.jss.2019.06.001
   Ryder BG, 2001, ACM SIGPLAN NOTICES, P46
   Sabetta A, 2018, PROC IEEE INT CONF S, P579, DOI 10.1109/ICSME.2018.00058
   Schuckert F, 2017, PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES 2017), DOI 10.1145/3098954.3103173
   Shahabi M, 2019, INT J COMPUT INTEG M, V32, P695, DOI 10.1080/0951192X.2019.1599438
   Shahriar H, 2013, PROCEEDINGS OF THE 2013 10TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P627, DOI 10.1109/ITNG.2013.96
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Soto M, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P221, DOI 10.1109/SANER.2018.8330211
   Sultana KZ, 2019, SOFTWARE QUAL J, V27, P5, DOI 10.1007/s11219-017-9397-z
   Sultana KZ, 2017, IEEE HI ASS SYS ENGR, P69, DOI 10.1109/HASE.2017.18
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Tan P.N., 2016, Introduction to data mining
   Ye T, 2016, IEEE INT CONF SOFTW, P91, DOI 10.1109/ICST.2016.21
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
   Zanjani Motahareh Bahrami, 2014, P 11 WORK C MIN SOFT, P162, DOI [10.1145/2597073.2597096, DOI 10.1145/2597073.2597096]
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
   Zhou YQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P914, DOI 10.1145/3106237.3117771
NR 58
TC 3
Z9 4
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2022
VL 142
AR 106745
DI 10.1016/j.infsof.2021.106745
EA OCT 2021
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WN5QL
UT WOS:000711821900002
DA 2024-07-18
ER

PT J
AU Kuttal, SK
   Chen, XF
   Wang, ZD
   Balali, S
   Sarma, A
AF Kuttal, Sandeep Kaur
   Chen, Xiaofan
   Wang, Zhendong
   Balali, Sogol
   Sarma, Anita
TI Visual Resume: Exploring developers' online contributions for hiring
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Aggregators; Contribution profile; Online communities
ID SOFTWARE DEVELOPERS; TRUST
AB Context: Recruiters and practitioners are increasingly relying on online activities of developers to find a suitable candidate. Past empirical studies have identified technical and soft skills that managers use in online peer production sites when making hiring decisions. However, finding candidates with relevant skills is a labor-intensive task for managers, due to the sheer amount of information online peer production sites contain. Objective: We designed a profile aggregation tool-Visual Resume-that aggregates contribution information across two types of peer production sites: a code hosting site (GitHub) and a technical Q&A forum (Stack Overflow). Visual Resume displays summaries of developers' contributions and allows easy access to their contribution details. It also facilitates pairwise comparisons of candidates through a card-based design. We present the motivation for such a design and design guidelines for creating such recruitment tool. Methods: We performed a scenario-based evaluation to identify how participants use developers' online contributions in peer production sites as well as how they used Visual Resume when making hiring decisions. Results: Our analysis helped in identifying the technical and soft skill cues that were most useful to our participants when making hiring decisions in online production sites. We also identified the information features that participants used and the ways the participants accessed that information to select a candidate. Conclusions: Our results suggest that Visual Resume helps in participants evaluate cues for technical and soft skills more efficiently as it presents an aggregated view of candidate's contributions, allows drill down to details about contributions, and allows easy comparison of candidates via movable cards that could be arranged to match participants' needs.
C1 [Kuttal, Sandeep Kaur] Univ Tulsa, Tulsa, OK 74104 USA.
   [Chen, Xiaofan] Massey Univ, Palmerston North, New Zealand.
   [Wang, Zhendong] Univ Calif Irvine, Irvine, CA USA.
   [Balali, Sogol; Sarma, Anita] Oregon State Univ, Corvallis, OR 97331 USA.
C3 University of Tulsa; Massey University; University of California System;
   University of California Irvine; Oregon State University
RP Kuttal, SK (corresponding author), Univ Tulsa, Tulsa, OK 74104 USA.
EM sandeep-kuttal@utulsa.edu
OI Balali, Sogol/0000-0003-0771-5669; Kuttal, Sandeep
   Kaur/0000-0002-2610-5308; Sarma, Anita/0000-0002-1859-1692
FU Air Force Office of Scientific Research [FA9550-21-1-0108]; National
   Science Foundation
FX This material is based upon work supported by the Air Force Office of
   Scientific Research under award number FA9550-21-1-0108 and National
   Science Foundation 1815486 and 2008089. Any opinions, findings, and
   conclusion or recommendations expressed in this material are those of
   the authors and do not necessarily reflect the view of the Air Force
   Office of Scientific Research and National Science Foundation.
CR Al-Ani B, 2009, INT CONF GLOBAL SOFT, P121, DOI 10.1109/ICGSE.2009.20
   Al-Ani Ban., 2013, P ACM C COMPUTER SUP, P563, DOI [DOI 10.1145/2441776.2441840, 10.1145/2441776.2441840]
   Allen TD, 2004, HUM PERFORM, V17, P1, DOI 10.1207/S15327043HUP1701_1
   [Anonymous], 2017, CAREERS 20
   [Anonymous], 2013, P 16 C COMP SUPP COO
   [Anonymous], 2020, VISUAL RESUME
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   [Anonymous], 2011, P 19 ACM SIGSOFT S 1
   Blackman MC, 2002, INT J SELECT ASSESS, V10, P109, DOI 10.1111/1468-2389.00197
   BONACICH P, 1987, AM J SOCIOL, V92, P1170, DOI 10.1086/228631
   Cliffordson C, 2002, INT J SELECT ASSESS, V10, P198, DOI 10.1111/1468-2389.00209
   da Silva Fabio Q. B., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P87, DOI 10.1109/ICGSE.2010.18
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Damian D, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P81
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Ford D, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P51, DOI 10.1109/ICSE-SEIS.2019.00014
   Ford D, 2017, S VIS LANG HUM CEN C, P239, DOI 10.1109/VLHCC.2017.8103473
   Greene GJ, 2016, IEEE INT CONF AUTOM, P804, DOI 10.1145/2970276.2970285
   Gutwin C., 2004, Computer Supported Cooperative Work Conference Proceedings, P72, DOI 10.1145/1031607.1031621
   Hannak A., 2019, EMPIR SOFTW ENG, P1
   Huang Y, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P456, DOI 10.1145/3368089.3409681
   Jaruchotrattanasakul T, 2016, INT WORKSH EMPIR ENG, P57, DOI 10.1109/IWESEP.2016.17
   Jenne K.J., 2000, POPULAR GOVT, P25
   Kandogan E., 1999, HIERARCHICAL MULTIWI
   Lievens F, 2003, PERS PSYCHOL, V56, P75, DOI 10.1111/j.1744-6570.2003.tb00144.x
   Long J, 2009, J INF TECHNOL EDUC-R, V8, P229
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Marlow J., 2013, Proceedings of the 2013 conference on Computer supported cooperative work, DOI [DOI 10.1145/2441776.2441794, 10.1145/2441776.2441794]
   Movshovitz-Attias D, 2013, 2013 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM), P892
   Nielsen J., 2019, UTILIZE AVAILABLE SC
   Noll J., 2011, ACM INROADS, V1, P66, DOI [10.1145/1835428.1835445, DOI 10.1145/1835428.1835445]
   Oliveira Nigini, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274399
   Pahnke G., 2008, PAIRWISE COMP EFFECT
   Sabherwal R, 1999, COMMUN ACM, V42, P80, DOI 10.1145/293411.293485
   Salgado J.F., 2002, EUROPEAN J WORK ORG, V11, P299, DOI DOI 10.1080/13594320244000184
   Sarma A, 2016, INT CONF GLOBAL SOFT, P1, DOI 10.1109/ICGSE.2016.35
   Singer L., 2012, Proceedings 2012 2nd International Workshop on Games and Software Engineering: Realizing User Engagement with Game Engineering Techniques (GAS 2012), P5, DOI 10.1109/GAS.2012.6225927
   Storey Margaret-Anne, 2013, P 2013 C COMPUTER SU, P103
   Sue-Chan C, 2004, APPL PSYCHOL-INT REV, V53, P260, DOI 10.1111/j.1464-0597.2004.00171.x
   Terdiman D., 2012, Forget LinkedIn: Companies turn to GitHub to find tech talent
   Terrell J., 2016, Gender differences and bias in open source: Pull request acceptance of women versus men, DOI DOI 10.7287/PEERJ.PREPRINTS.1733V2
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tsay J, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P65, DOI 10.1109/CHASE.2013.6614733
   Upper Rio Grande, 2017, WHAT SKILLS EMPL WAN
   van Dijk E. T., 2015, CHI 15 APR 18 APR 23, P5
   Vasilescu B, 2012, PROCEEDINGS OF THE 2012 ASE INTERNATIONAL CONFERENCE ON SOCIAL INFORMATICS (SOCIALINFORMATICS 2012), P332, DOI 10.1109/SocialInformatics.2012.81
   Wachs J., 2020, ARXIV200602371
   Wang ZZ, 2017, IEEE INT CONF AUTOM, P717, DOI 10.1109/ASE.2017.8115682
   Wu CG, 2007, INFORM MANAGE-AMSTER, V44, P253, DOI 10.1016/j.im.2006.12.006
   Zhou C, 2018, 2018 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P319, DOI 10.1109/VLHCC.2018.8506577
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
NR 51
TC 6
Z9 6
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2021
VL 138
AR 106633
DI 10.1016/j.infsof.2021.106633
EA MAY 2021
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA TI1GV
UT WOS:000672531500002
OA Bronze
DA 2024-07-18
ER

PT J
AU Hasan, H
   Ladani, BT
   Zamani, B
AF Hasan, Hayyan
   Ladani, Behrouz Tork
   Zamani, Bahman
TI MEGDroid: A model-driven event generation framework for dynamic android
   malware analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Android malware; Dynamic analysis; Event generation; Model-Driven
   Engineering
AB Context: The tremendous growth of Android malware in recent years is a strong motivation for the vast endeavor in detection and analysis of malware apps. A prominent approach for this purpose is dynamic analysis in which providing complex interactions with the samples under analysis is a need. Event generation tools are almost used to provide such interactions, but they have deficiencies for effective malware analysis. For example, anti-static and anti-dynamic analysis techniques employed by the malware prevent event generators to extract sufficient information for generating appropriate events. As a result, they fail to trigger malicious payloads or obtain high code coverage in most cases. Objective: In this paper, we aim to present a new framework to improve the event generation process for dynamic analysis of Android malware. Method: We propose MEGDroid, a Model Driven Engineering (MDE) framework in which malware-related information is automatically extracted and represented as a domain-specific model. This model, then is used to generate appropriate events for malware analysis using model-to-model and model-to-code transformations. The proposed model-driven artifacts also provide required facilities to put the human in the loop for properly taking his/her knowledge into account. Results: The proposed framework has been realized as an Eclipse plugin and we performed extensive practical analysis on a set of malware samples selected from the AMD dataset. The experimental results showed that MEGDroid considerably increases the number of triggered malicious payloads as well as the execution code coverage compared with Monkey and DroidBot, as two state of the art general-purpose and malware specific event generators respectively. Conclusion: The proposed MDE approach, enhances the event generation process through both automatic event generation and analyzer user involvement who can efficiently direct the process to increase the effectiveness of the generated events considering small amount of information that is extractable from the malware code.
C1 [Hasan, Hayyan; Ladani, Behrouz Tork; Zamani, Bahman] Univ Isfahan, Fac Comp Engn, MDSE Res Grp, Esfahan, Iran.
C3 University of Isfahan
RP Ladani, BT (corresponding author), Univ Isfahan, Fac Comp Engn, MDSE Res Grp, Esfahan, Iran.
EM Ladani@eng.ui.ac.ir
RI Hasan Al-Nuaimi, Hasan Sabah/HDL-9299-2022; Ladani, Behrouz
   Tork/U-5040-2019
OI Hasan Al-Nuaimi, Hasan Sabah/0000-0001-5276-2769; Tork Ladani,
   Behrouz/0000-0003-2280-8839
CR Abraham A., 2016, 10 INT C MAL UNW SOF, P119
   Amalfitano D, 2019, INFORM SOFTWARE TECH, V105, P95, DOI 10.1016/j.infsof.2018.08.007
   Amalfitano D, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P33, DOI 10.1109/MobileSoft.2015.11
   [Anonymous], 2017, P INT C CYB SEC PROT
   [Anonymous], ANDROID APPL SANDBOX
   Bernardi ML, 2019, INT J INF SECUR, V18, P257, DOI 10.1007/s10207-018-0415-3
   Blasing Thomas, 2010, 2010 5th International Conference on Malicious and Unwanted Software (MALWARE 2010), P55, DOI 10.1109/MALWARE.2010.5665792
   Brambilla M., 2017, Model-Driven Software Engineering in Practice, Second Edition, ser. Synthesis Lectures on Software Engineering, VSecond
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Cai HP, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106291
   Carter Patrick., 2016, International Conference on Financial Cryptography and Data Security, P231
   Diao WR, 2016, PROCEEDINGS OF THE 9TH ACM CONFERENCE ON SECURITY & PRIVACY IN WIRELESS AND MOBILE NETWORKS (WISEC'16), P159, DOI 10.1145/2939918.2939926
   Enck William., 2010, Proceedings of the USENIX Symposium on Operating Systems Design and Implementation (OSDI), P393
   Feng PB, 2018, IEEE ACCESS, V6, P30996, DOI 10.1109/ACCESS.2018.2844349
   I.D.C.I. Research, 2020, ANDR DOM MOB MARK
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Khanmohammadi K, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P168, DOI 10.1109/QRS.2017.27
   Kothari S, 2014, IEEE SYS MAN CYBERN, P1971, DOI 10.1109/SMC.2014.6974210
   Li YJ, 2017, PROCEEDINGS OF THE 2017 EURO-ASIA CONFERENCE ON ENVIRONMENT AND CSR: TOURISM, SOCIETY AND EDUCATION SESSION, PT I, P192, DOI 10.1007/978-3-319-66332-6_9
   Li YC, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1070, DOI 10.1109/ASE.2019.00104
   Li YC, 2017, PROC IEEE ACM INT C, P23, DOI 10.1109/ICSE-C.2017.8
   Lindorfer M, 2014, 3 INT WORKSH BUILD A
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Mednieks Z.R., 2012, PROGRAMMING ANDROID
   Nirumand A, 2019, SOFTWARE PRACT EXPER, V49, P70, DOI 10.1002/spe.2643
   Pan MX, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110433
   Pilgun A, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2189, DOI 10.1145/3243734.3278484
   Rastogi V., 2013, P 3 ACM C DAT APPL S, P209
   Saracino Andrea, 2018, IEEE Transactions on Dependable and Secure Computing, V15, P83, DOI 10.1109/TDSC.2016.2536605
   Song W, 2017, IEEE INT CONF AUTOM, P27, DOI 10.1109/ASE.2017.8115615
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Thornsby J., 2016, ANDROID UI DESIGN PL
   Ting Z, 2017, 2017 2ND INTERNATIONAL CONFERENCE ON ROBOTICS AND AUTOMATION ENGINEERING (ICRAE), P254, DOI 10.1109/ICRAE.2017.8291390
   Wu SY, 2016, INFORM SOFTWARE TECH, V75, P17, DOI 10.1016/j.infsof.2016.03.004
   Xue YX, 2017, IEEE T INF FOREN SEC, V12, P1529, DOI 10.1109/TIFS.2017.2661723
NR 35
TC 13
Z9 15
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2021
VL 135
AR 106569
DI 10.1016/j.infsof.2021.106569
EA MAR 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RQ5WO
UT WOS:000642489200008
DA 2024-07-18
ER

PT J
AU Pourasghar, B
   Izadkhah, H
   Isazadeh, A
   Lotfi, S
AF Pourasghar, Babak
   Izadkhah, Habib
   Isazadeh, Ayaz
   Lotfi, Shahriar
TI A graph-based clustering algorithm for software systems modularization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Graph clustering; Clustering algorithms; Software modularization;
   Software maintenance; Software comprehension; Software architecture;
   Architecture recovery
AB Context: Clustering algorithms, as a modularization technique, are used to modularize a program aiming to understand large software systems as well as software refactoring. These algorithms partition the source code of the software system into smaller and easy-to-manage modules (clusters). The resulting decomposition is called the software system structure (or software architecture). Due to the NP-hardness of the modularization problem, evolutionary clustering approaches such as the genetic algorithm have been used to solve this problem. These methods do not make much use of the information and knowledge available in the artifact dependency graph which is extracted from the source code.
   Objective: To overcome the limitations of the existing modularization techniques, this paper presents a new modularization technique named GMA (Graph-based Modularization Algorithm).
   Methods: In this paper, a new graph-based clustering algorithm is presented for software modularization. To this end, the depth of relationships is used to compute the similarity between artifacts, as well as seven new criteria are proposed to evaluate the quality of a modularization. The similarity presented in this paper enables the algorithm to use graph-theoretic information.
   Results: To demonstrate the applicability of the proposed algorithm, ten folders of Mozilla Firefox with different domains and functions, along with four other applications, are selected. The experimental results demonstrate that the proposed algorithm produces modularization closer to the human expert's decomposition (i.e., directory structure) than the other existing algorithms.
   Conclusion: The proposed algorithm is expected to help a software designer in the software reverse engineering process to extract easy-to-manage and understandable modules from source code.
C1 [Pourasghar, Babak; Izadkhah, Habib; Isazadeh, Ayaz; Lotfi, Shahriar] Univ Tabriz, Fac Math Sci, Dept Comp Sci, Tabriz, Iran.
C3 University of Tabriz
RP Izadkhah, H (corresponding author), Univ Tabriz, Fac Math Sci, Dept Comp Sci, Tabriz, Iran.
EM izadkhah@tabrizu.ac.ir
RI Pourasghar, Babak/KVY-4784-2024
OI Lotfi, Shahriar/0000-0001-5460-3948
CR Amarjeet, 2018, SOFT COMPUT, V22, P6341, DOI 10.1007/s00500-017-2687-3
   Amarjeet, 2017, COMPUT LANG SYST STR, V47, P153, DOI 10.1016/j.cl.2016.09.003
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   [Anonymous], 2005, THESIS BRUNEL U
   Beck F, 2013, EMPIR SOFTW ENG, V18, P970, DOI 10.1007/s10664-012-9225-9
   Bishnoi Monika, 2016, 2016 International Conference on Computational Techniques in Information and Communication Technologies (ICCTICT). Proceedings, P659, DOI 10.1109/ICCTICT.2016.7514660
   Cormen T. H., 2017, ALGORITHMEN EINE EIN, V4th
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Garcia J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P901, DOI 10.1109/ICSE.2013.6606639
   Huang JH, 2017, SOFT COMPUT, V21, P3415, DOI 10.1007/s00500-015-2018-5
   Huang JH, 2016, INFORM SCIENCES, V342, P96, DOI 10.1016/j.ins.2016.01.030
   Hussain I, 2015, INT ARAB J INF TECHN, V12, P32
   Hwa J, 2017, INT J SOFTW ENG KNOW, V27, P1033, DOI 10.1142/S0218194017500395
   Isazadeh A., 2017, Source code modularization: theory and techniques
   Izadkhah H, 2019, P 5 INT EL C ENTR AP, P1
   Izadkhah H, 2016, CYBERN INF TECHNOL, V16, P70, DOI 10.1515/cait-2016-0035
   Jalali NS, 2019, SOFT COMPUT, V23, P11141, DOI 10.1007/s00500-018-3666-z
   Jeet Kawal, 2016, International Journal of Information Engineering and Electronic Business, V8, P43, DOI 10.5815/ijieeb.2016.04.06
   Kargar M, 2019, COMPUT ELECTR ENG, V80, DOI 10.1016/j.compeleceng.2019.106500
   Kargar M, 2017, 2017 18TH CSI INTERNATIONAL SYMPOSIUM ON COMPUTER SCIENCE AND SOFTWARE ENGINEERING CONFERENCE (CSSE), P55, DOI 10.1109/CSICSSE.2017.8320117
   Kong XL, 2018, IEEE ACCESS, V6, P52321, DOI 10.1109/ACCESS.2018.2870118
   Kumari AC, 2016, J SYST SOFTWARE, V117, P384, DOI 10.1016/j.jss.2016.04.007
   Lutellier T, 2018, IEEE T SOFTWARE ENG, V44, P159, DOI 10.1109/TSE.2017.2671865
   Lutellier T, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P69, DOI 10.1109/ICSE.2015.136
   Mamaghani Ali Safari, 2014, 2014 8th Malaysian Software Engineering Conference (MySEC), P321, DOI 10.1109/MySec.2014.6986037
   Mamaghani Ali Safari, 2009, Proceedings of the 2009 Ninth IEEE International Conference on Computer and Information Technology. CIT 2009, P20, DOI 10.1109/CIT.2009.111
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Mitchell B.S., 2002, A heuristic search approach to solving the software clustering problem
   Mitchell BS, 2008, SOFT COMPUT, V12, P77, DOI 10.1007/s00500-007-0218-3
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Mohammadi S, 2019, INFORM SOFTWARE TECH, V105, P252, DOI 10.1016/j.infsof.2018.09.001
   Monçores MC, 2018, COMPUT OPER RES, V91, P92, DOI 10.1016/j.cor.2017.10.004
   Naseem R, 2017, FRONT INFORM TECH EL, V18, P1082, DOI 10.1631/FITEE.1500373
   Naseem R, 2013, J SYST SOFTWARE, V86, P2045, DOI 10.1016/j.jss.2013.03.080
   Parsa S, 2005, J RES PRACT INF TECH, V37, P127
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Prajapati A, 2016, LECT NOTES COMPUT SC, V9734, P296, DOI 10.1007/978-3-319-40349-6_28
   Qiu DH, 2015, INT J SOFTW ENG KNOW, V25, P701, DOI 10.1142/S0218194015500072
   Ramírez A, 2018, INFORM SCIENCES, V463, P92, DOI 10.1016/j.ins.2018.06.034
   Rathee A, 2017, COMM COM INF SC, V712, P94, DOI 10.1007/978-981-10-5780-9_9
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Saeed M, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P301, DOI 10.1109/CSMR.2003.1192438
   Shahzad S, 2017, CLUSTER COMPUT, P1
   Shokoufandeh A, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/WCRE.2002.1173059
   Sözer H, 2019, LECT NOTES COMPUT SC, V11681, P71, DOI 10.1007/978-3-030-29983-5_5
   Tajgardan Mahjoubeh, 2016, Journal of Applied Computer Science Methods, V8, P99, DOI 10.1515/jacsm-2016-0007
   Wen Z, 2004, PROG COMPREHEN, P194, DOI 10.1109/WPC.2004.1311061
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
NR 48
TC 20
Z9 20
U1 1
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2021
VL 133
AR 106469
DI 10.1016/j.infsof.2020.106469
EA FEB 2021
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QL2TC
UT WOS:000620932900002
DA 2024-07-18
ER

PT J
AU Elyasaf, A
AF Elyasaf, Achiya
TI Context-Oriented Behavioral Programming
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Behavioral programming; Scenario-based programming; Programming
   paradigm; Context awareness; Context-oriented programming;
   Context-Oriented Behavioral Programming
AB Context: Modern systems require programmers to develop code that dynamically adapts to different contexts, leading to the evolution of new context-oriented programming languages. These languages introduce new software-engineering challenges, such as: how to maintain the separation of concerns of the codebase? how to model the changing behaviors? how to verify the system behavior? and more.
   Objective: This paper introduces Context-Oriented Behavioral Programming (COBP) - a novel paradigm for developing context-aware systems, centered on natural and incremental specification of context-dependent behaviors. As the name suggests, we combine behavioral-programming (BP) - a scenario-based modeling paradigm - with context idioms that explicitly specify when scenarios are relevant and what information they need. The core idea is to connect the behavioral model with a data model that represents the context, allowing an intuitive connection between the models via update and select queries. Combining behavioral-programming with context-oriented programming brings the best of the two worlds, solving issues that arise when using each of the approaches in separation.
   Methods: We begin with providing abstract semantics for COBP and two implementations for the semantics, laying the foundations for applying reasoning algorithms to context-aware behavioral programs. Next, we exemplify the semantics with formal specifications of systems, including a variant of Conway's Game of Life. Then, we provide two case studies of real-life context-aware systems (one in robotics and another in IoT) that were developed using this tool. Throughout the examples and case studies, we provide design patterns and a methodology for coping with the above challenges.
   Results: The case studies show that the proposed approach is applicable for developing real-life systems, and presents measurable advantages over the alternatives - behavioral programming alone and context-oriented programming alone.
   Conclusion: We present a paradigm allowing programmers and system engineers to capture complex context-dependent requirements and align their code with such requirements.
C1 [Elyasaf, Achiya] Ben Gurion Univ Negev, Dept Software & Informat Syst Engn, Beer Sheva, Israel.
C3 Ben Gurion University
RP Elyasaf, A (corresponding author), Ben Gurion Univ Negev, Dept Software & Informat Syst Engn, Beer Sheva, Israel.
EM achiya@bgu.ac.il
RI Elyasaf, Achiya/I-4129-2016
OI Elyasaf, Achiya/0000-0002-4009-5353
FU Institute for Innovation in Transportation, Tel-Aviv University, Israel;
   Fuel-Choices and Smart-Mobility Initiative, Israel
FX This work was partially supported by the Institute for Innovation in
   Transportation, Tel-Aviv University, Israel, and the Fuel-Choices and
   Smart-Mobility Initiative, Israel.
CR Abowd GD, 1999, LECT NOTES COMPUT SC, V1707, P304
   Aotani Tomoyuki, 2011, P 3 CONT OR PROGR WO
   Asimov I., 1942, Astounding Science Fiction, VXXIX, P94
   Bar -Sinai M., 2019, PROC 59 ISR ANN C AE, P1407
   Bar-Sinai Michael, 2020, THESIS BEN GURION U
   Cardozo N, 2015, INFORM SOFTWARE TECH, V58, P71, DOI 10.1016/j.infsof.2014.10.002
   Colledanchise M, 2017, ABS170900084 CORR
   Costanza P., 2005, P DYN LANG S DLS 05, P1
   Costanza P., 2008, P 12 INT C SOFTW PRO, P9
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   Elyasaf A, 2018, MODELS WORKSH, P485
   Elyasaf A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P243, DOI 10.1109/MODELS-C.2019.00039
   GARDNER M, 1970, SCI AM, V222, P132, DOI 10.1038/scientificamerican0670-132
   Gonzalez Sebastian, 2008, THESIS UCL
   Greenyer Joel, 2017, SCI COMPUT PROGRAMM
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Harel D, 2005, LECT NOTES COMPUT SC, V3393, P309
   Harel D, 2002, LECT NOTES COMPUT SC, V2517, P378
   Harel D., 2011, 2011 International Conference on Embedded Software (EMSOFT 2011), P279
   Harel D., 2003, COME LETS PLAY SCENA, DOI 10.1007/978-3-642-19029-2
   Harel D, 2010, P IEEE ACM INT C AUT, P359
   Harel D, 2007, LECT NOTES COMPUT SC, V4424, P485
   Harel D, 2013, 2013 PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON EMBEDDED SOFTWARE (EMSOFT)
   Harel D, 2012, COMMUN ACM, V55, P90, DOI 10.1145/2209249.2209270
   Harel D, 2010, LECT NOTES COMPUT SC, V6183, P250, DOI 10.1007/978-3-642-14107-2_12
   Harel D, 2010, LECT NOTES COMPUT SC, V5901, P477
   Kamina T., 2011, P 10 INT C ASP OR SO, P253, DOI DOI 10.1145/1960275.1960305
   Kaminka GA, 2018, AAAI CONF ARTIF INTE, P6202
   Katz G, 2019, MODELSWARD: PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, 2019, P141, DOI 10.5220/0007573801410154
   KELLER RM, 1976, COMMUN ACM, V19, P371, DOI 10.1145/360248.360251
   Lindstrom G, 2005, LECT NOTES COMPUT SC, V3707, P444
   Maoz S, 2016, ELECTRON P THEOR COM, P58, DOI 10.4204/EPTCS.202.5
   Matalonga S, 2017, J SYST SOFTWARE, V131, P1, DOI 10.1016/j.jss.2017.05.048
   McMillan Kenneth L., 1993, SYMBOLIC MODEL CHECK, P61
   Piterman N, 2006, LECT NOTES COMPUT SC, V3855, P364
   Salvaneschi G, 2012, J SYST SOFTWARE, V85, P1801, DOI 10.1016/j.jss.2012.03.024
   Schippers Hans, 2010, P 2 INT WORKSHOP CON, P1
   Shahar Maoz, 2008, P THEORY PRACT SOFTW, P301
   Shmuel Reut, 2018, 21 ACM IEEE INT C MO
   Tomoyuki Aotani, 2016, P 18 WORKSH FORM TEC, P1
NR 40
TC 10
Z9 11
U1 1
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2021
VL 133
AR 106504
DI 10.1016/j.infsof.2020.106504
EA JAN 2021
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QL2TC
UT WOS:000620932900005
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Wohlin, C
   Mendes, E
   Felizardo, KR
   Kalinowski, M
AF Wohlin, Claes
   Mendes, Emilia
   Felizardo, Katia Romero
   Kalinowski, Marcos
TI Guidelines for the search strategy to update systematic literature
   reviews in software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic literature review update; Systematic literature reviews;
   Software engineering; Snowballing; Searching for evidence
ID EMPIRICAL-EVIDENCE; COMPUTER GAMES; CROSS-COMPANY; MODELS; ECOSYSTEMS
AB Context: Systematic Literature Reviews (SLRs) have been adopted within Software Engineering (SE) for more than a decade to provide meaningful summaries of evidence on several topics. Many of these SLRs are now potentially not fully up-to-date, and there are no standard proposals on how to update SLRs in SE.
   Objective: The objective of this paper is to propose guidelines on how to best search for evidence when updating SLRs in SE, and to evaluate these guidelines using an SLR that was not employed during the formulation of the guidelines.
   Method: To propose our guidelines, we compare and discuss outcomes from applying different search strategies to identify primary studies in a published SLR, an SLR update, and two replications in the area of effort estimation. These guidelines are then evaluated using an SLR in the area of software ecosystems, its update and a replication.
   Results: The use of a single iteration forward snowballing with Google Scholar, and employing as a seed set the original SLR and its primary studies is the most cost-effective way to search for new evidence when updating SLRs. Furthermore, the importance of having more than one researcher involved in the selection of papers when applying the inclusion and exclusion criteria is highlighted through the results.
   Conclusions: Our proposed guidelines formulated based upon an effort estimation SLR, its update and two replications, were supported when using an SLR in the area of software ecosystems, its update and a replication. Therefore, we put forward that our guidelines ought to be adopted for updating SLRs in SE.
C1 [Wohlin, Claes] Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
   [Felizardo, Katia Romero] Fed Technol Univ Parana, Dept Comp, Cornelio Procopio, Brazil.
   [Mendes, Emilia] Blekinge Inst Technol, Dept Comp Sci, Karlskrona, Sweden.
   [Kalinowski, Marcos] Pontifical Catholic Univ Rio de Janeiro, Dept Informat, Rio De Janeiro, Brazil.
C3 Blekinge Institute Technology; Universidade Tecnologica Federal do
   Parana; Blekinge Institute Technology; Pontificia Universidade Catolica
   do Rio de Janeiro
RP Wohlin, C (corresponding author), Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
EM claes.wohlin@bth.se; emilia.mendes@bth.se; katiascannavino@utfpr.edu.br;
   kalinowski@inf.puc-rio.br
RI Mendes, Maria E/B-4207-2015
OI Mendes, Emilia/0000-0003-0449-5322
FU Brazilian funding agency CNPq [401033/2016-3]
FX Dr. Katia Romero Felizardo is supported by a research grant from the
   Brazilian funding agency CNPq with reference number: 401033/2016-3.
   Furthermore, we would like to thank the anonymous reviewers and the
   guest editors for providing valuable feedback that helped improve the
   paper.
CR [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2013, P 9 INT C PREDICTIVE
   [Anonymous], 2012, P PROMISE 12
   Boyle EA, 2016, COMPUT EDUC, V94, P178, DOI 10.1016/j.compedu.2015.11.003
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P313, DOI 10.1109/ICSE.1999.841022
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   Budgen D, 2018, INFORM SOFTWARE TECH, V95, P62, DOI 10.1016/j.infsof.2017.10.017
   Connolly TM, 2012, COMPUT EDUC, V59, P661, DOI 10.1016/j.compedu.2012.03.004
   da Silva A.Y.I., 2018, P 32 BRAZ S SOFTW EN, P1
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   Dantas E, 2018, INT J SOFTW ENG KNOW, V28, P1811, DOI 10.1142/S0218194018400302
   Dieste O, 2008, SERA 2008: 6TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P143, DOI 10.1109/SERA.2008.35
   Felizardo K., 2014, International Conference on Evaluation and Assessment in Software Engineering (EASE), P1
   Felizardo KR, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962630
   Ferrari F., 2008, 5th Experimental Software Engineering Latin America Workshop (ESELAW), P1
   Ferrucci F., 2012, PROC 8 INT C PREDICT, P29
   Ferrucci F., 2009, P 6 SOFTW MEAS EUR F, P77
   Jalali S., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P45, DOI 10.1109/ICGSE.2010.14
   Jalali S, 2012, J SOFTW-EVOL PROC, V24, P643, DOI 10.1002/smr.561
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Jeffery R, 2000, INFORM SOFTWARE TECH, V42, P1009, DOI 10.1016/S0950-5849(00)00153-1
   Kitchenham B., 2006, P 10 INT C EVALUATIO, P1
   Kitchenham B. A., 2004, "8th Internation Conference on Empirical Assessment in Software Engineering (EASE 2004)" Workshop - 26th International Conference on Software Engineering, P47, DOI 10.1049/ic:20040398
   Kitchenham B.A., 2004, TRSE0401 KEEL U SCH
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kocaguneli E, 2011, INT SYMP EMP SOFTWAR, P255, DOI 10.1109/ESEM.2011.34
   Kocaguneli E, 2010, EUROMICRO CONF PROC, P323, DOI 10.1109/SEAA.2010.19
   Lefley M, 2003, LECT NOTES COMPUT SC, V2724, P2477
   Lokan C., 2009, CRPIT, V91, P35
   Lokan C., 2008, P 12 INT C EV ASS SO, P136
   Lokan C, 2009, INT SYMP EMP SOFTWAR, P111, DOI 10.1109/ESEM.2009.5316019
   Lokan Chris., 2006, 2006 ACMIEEE INT S E, P75, DOI DOI 10.1145/1159733.1159747
   Manikas K, 2016, J SYST SOFTWARE, V117, P84, DOI 10.1016/j.jss.2016.02.003
   Manikas K, 2013, J SYST SOFTWARE, V86, P1294, DOI 10.1016/j.jss.2012.12.026
   Maxwell K, 1999, MANAGE SCI, V45, P787, DOI 10.1287/mnsc.45.6.787
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Mendes E., 2019, P 45 EUR C SOFTW ENG
   Mendes E., 2007, P 16 INT C WORLD WID, P963, DOI DOI 10.1145/1242572.124702
   Mendes E., 2005, P 11 IEEE S SOFTW ME, P1
   Mendes E., 2014, P INT C EVALUATION A
   Mendes E, 2008, J SYST SOFTWARE, V81, P673, DOI 10.1016/j.jss.2007.07.044
   Mendes E, 2008, EMPIR SOFTW ENG, V13, P3, DOI 10.1007/s10664-007-9045-5
   Mendes E, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110607
   Mourao E, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2020.106294
   Mourao E, 2017, INT SYMP EMP SOFTWAR, P193, DOI 10.1109/ESEM.2017.30
   Nepomuceno V, 2019, INFORM SOFTWARE TECH, V109, P40, DOI 10.1016/j.infsof.2019.01.005
   Premraj R, 2007, 1 INT S EMP SOFTW EN, DOI [10.1109/esem.2007.34, DOI 10.1109/ESEM.2007.34]
   Riaz Mehwish, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P263, DOI 10.1049/ic.2012.0034
   Riaz M, 2009, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/esem.2009.5314233
   Rodrigues L., 2017, Plano de Marketing Interno para a Guarda Nacional Republicana, P1, DOI 10. 3390/ecsoc-21-04774
   Staffs Keele, 2007, Tech. Rep.
   Top O. O., 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P302, DOI 10.1109/IWSM-MENSURA.2011.41
   Usman M., 2014, PROMISE '14: Proceedings of the 10th International Conference on Predictive Models in Software Engineering, page, P82
   Vallon R, 2018, INFORM SOFTWARE TECH, V96, P161, DOI 10.1016/j.infsof.2017.12.004
   Wieczorek I, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P237, DOI 10.1109/METRIC.2002.1011342
   Wohlin C., TECHNICAL REPORT PAP
   Wohlin C, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916006
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
NR 61
TC 36
Z9 39
U1 10
U2 51
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2020
VL 127
AR 106366
DI 10.1016/j.infsof.2020.106366
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NR0EE
UT WOS:000571236700010
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Politowski, C
   Khomh, F
   Romano, S
   Scanniello, G
   Petrillo, F
   Guéhéneuc, YG
   Maiga, A
AF Politowski, Cristiano
   Khomh, Foutse
   Romano, Simone
   Scanniello, Giuseppe
   Petrillo, Fabio
   Gueheneuc, Yann-Gael
   Maiga, Abdou
TI A large scale empirical study of the impact of Spaghetti Code and Blob
   anti-patterns on program comprehension
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Anti-patterns; Blob; Spaghetti Code; Program comprehension; Java
ID SMELLS
AB Context: Several studies investigated the impact of anti-patterns (i.e., "poor" solutions to recurring design problems) during maintenance activities and reported that anti-patterns significantly affect the developers' effort required to edit files. However, before developers edit files, they must understand the source code of the systems. This source code must be easy to understand by developers.
   Objective: In this work, we provide a complete assessment of the impact of two instances of two anti-patterns, Blob or Spaghetti Code, on program comprehension.
   Method: We analyze the impact of these two anti-patterns through three empirical studies conducted at Polytechnique Montreal (Canada) with 24 participants; at Carlton University (Canada) with 30 participants; and at University Basilicata (Italy) with 79 participants.
   Results: We collect data from 372 tasks obtained thanks to 133 different participants from the three universities. We use three metrics to assess the developers' comprehension of the source code: (1) the duration to complete each task; (2) their percentage of correct answers; and, (3) the NASA task load index for their effort.
   Conclusions: We report that, although single occurrences of Blob or Spaghetti code anti-patterns have little effect on code comprehension, two occurrences of either Blob or Spaghetti Code significantly increases the developers' time spent in their tasks, reduce their percentage of correct answers, and increase their effort. Hence, we recommend that developers act on both anti-patterns, which should be refactored out of the source code whenever possible. We also recommend further studies on combinations of anti-patterns rather than on single anti-patterns one at a time.
C1 [Politowski, Cristiano; Gueheneuc, Yann-Gael] Concordia Univ, Montreal, PQ, Canada.
   [Khomh, Foutse] Polytech Montreal, Montreal, PQ, Canada.
   [Romano, Simone] Univ Bari, Bari, Italy.
   [Scanniello, Giuseppe] Univ Basilicata, Potenza, Italy.
   [Petrillo, Fabio] Univ Que Bec Chicoutimi, Chicoutimi, PQ, Canada.
   [Maiga, Abdou] Univ Fe Lix Houphouet Boigny, Abidjan, Cote Ivoire.
C3 Concordia University - Canada; Universite de Montreal; Polytechnique
   Montreal; Universita degli Studi di Bari Aldo Moro; University of
   Basilicata; Universite Felix Houphouet-Boigny
RP Politowski, C (corresponding author), Concordia Univ, Montreal, PQ, Canada.
EM c_polito@encs.concordia.ca; foutse.khomh@polymtl.ca;
   simone.romano@uniba.it; giuseppe.scanniello@unibas.it;
   fabio@petrillo.com; yann-gael.gueheneuc@concordia.ca; ma_karim@yahoo.fr
RI Romano, Simone/ABD-6504-2020; Romano, Simone/JVZ-6529-2024
OI Romano, Simone/0000-0003-4880-3622; Scanniello,
   Giuseppe/0000-0003-0024-7508; Politowski, Cristiano/0000-0002-0206-1056;
   Petrillo, Fabio/0000-0002-8355-1494
FU NSERC; Canada Research Chairs program; FRQNT
FX The authors thank all the anonymous participants for their time and
   efforts. The authors have been partly supported by the NSERC Discovery
   Grant program and Canada Research Chairs program as well as a FRQNT team
   project grant.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], 2010, 2010 IEEE International Conference on Software Maintenance, DOI [10.1109/ICSM.2010.5609564, DOI 10.1109/ICSM.2010.5609564]
   [Anonymous], 2012, EXPT SOFTWARE ENG, DOI DOI 10.1007/978-3-642-29044-2
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Bois B.D., 2006, IASTED C SOFTW ENG, P26
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   D'Ambros Marco, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P23, DOI 10.1109/QSIC.2010.58
   Deligiannis I, 2004, J SYST SOFTWARE, V72, P129, DOI 10.1016/S0164-1212(03)00240-1
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Fowler M., 2012, Refactoring: Improving the Design of Existing Code
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   HART S G, 1988, P139
   Ignatios D., 2004, J SYST SOFTW, V72
   Jaafar F, 2016, EMPIR SOFTW ENG, V21, P896, DOI 10.1007/s10664-015-9361-0
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Mantyla M., 2003, THESIS
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Moha N., 2005, P 6 ECOOP WORKSH OBJ, P1
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Munro MatthewJames., 2005, Software Metrics, P15, DOI 10.1109/metrics.2005.38
   Oizumi W, 2016, PROC INT CONF SOFTW, P440, DOI 10.1145/2884781.2884868
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Oliveto R, 2010, EUR CON SFTWR MTNCE, P248, DOI 10.1109/CSMR.2010.47
   Palomba F, 2019, INFORM SOFTWARE TECH, V105, P43, DOI 10.1016/j.infsof.2018.08.004
   Palomba F, 2018, IEEE T SOFTWARE ENG, V44, P977, DOI 10.1109/TSE.2017.2752171
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2018, INFORM SOFTWARE TECH, V99, P1, DOI 10.1016/j.infsof.2018.02.004
   Parnas D. L., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P279, DOI 10.1109/ICSE.1994.296790
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Santos JAM, 2018, J SYST SOFTWARE, V144, P450, DOI 10.1016/j.jss.2018.07.035
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Sobrinho E.V., 2018, IEEE T SOFTWARE ENG, DOI [10.1109/tse.2018.2880977.1-1, DOI 10.1109/TSE.2018.2880977.1-1]
   Soh Z, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P393, DOI 10.1109/SANER.2016.103
   Travassos G. H., 1999, SIGPLAN Notices, V34, P47, DOI 10.1145/320385.320389
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Vegas S, 2016, IEEE T SOFTWARE ENG, V42, P120, DOI 10.1109/TSE.2015.2467378
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Wake W., 2004, ADDISON WESLEY OBJEC
   Webster BruceF., 1995, PITFALLS OBJECT ORIE
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
NR 47
TC 14
Z9 16
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2020
VL 122
AR 106278
DI 10.1016/j.infsof.2020.106278
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LC4TR
UT WOS:000525318800006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cañete, A
   Horcas, JM
   Ayala, I
   Fuentes, L
AF Canete, Angel
   Horcas, Jose-Miguel
   Ayala, Inmaculada
   Fuentes, Lidia
TI Energy efficient adaptation engines for android applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Android; Dynamic adaptation; Energy efficiency; Mobile application; User
   behavior
ID CONTEXT-AWARE; MOBILE; PROXIES
AB Context The energy consumption of mobile devices is increasing due to the improvement in their components (e.g., better processors, larger screens). Although the hardware consumes the energy, the software is responsible for managing hardware resources such as the camera software and its functionality, and therefore, affects the energy consumption. Energy consumption not only depends on the installed code, but also on the execution context (environment, devices status) and how the user interacts with the application.
   Objective In order to reduce the energy consumption based on user behavior, it is necessary to dynamically adapt the application. However, the adaptation mechanism also consumes a certain amount of energy in itself, which may lead to an important increase in the energy expenditure of the application in comparison with the benefits of the adaptation. Therefore, this footprint must be measured and compared with the benefit obtained.
   Method In this paper, we (1) determine the benefits, in terms of energy consumption, of dynamically adapting mobile applications, based on user behavior; and (2) advocate the most energy-efficient adaptation mechanism. We provide four different implementations of a proposed adaptation model and measure their energy consumption.
   Results The proposed adaptation engines do not increase the energy consumption when compared to the benefits of the adaptation, which can reduce the energy consumption by up to 20%.
   Conclusion The adaptation engines proposed in this paper can decrease the energy consumption of the mobile devices based on user behavior. The overhead introduced by the adaptation engines is negligible in comparison with the benefits obtained by the adaptation.
C1 [Canete, Angel; Horcas, Jose-Miguel; Ayala, Inmaculada; Fuentes, Lidia] Univ Malaga, Andalucia Tech, Malaga, Spain.
C3 Universidad de Malaga
RP Cañete, A (corresponding author), Univ Malaga, Andalucia Tech, Malaga, Spain.
EM angelcv@lcc.uma.es
RI Horcas Aguilera, José Miguel/R-3564-2018; Cañete, Angel/GZG-4834-2022;
   Ayala, Inmaculada/Q-8540-2018; Canete, Angel/Q-8826-2018; Fuentes,
   Lidia/M-5580-2014
OI Horcas Aguilera, José Miguel/0000-0002-7771-0575; Ayala,
   Inmaculada/0000-0002-5119-3469; Canete, Angel/0000-0001-8422-6063;
   Fuentes, Lidia/0000-0002-5677-7156
FU project Magic [P12-TIC1814]; project HADAS [TIN2015-64841-R]; FEDER
   funds; project TASOVA MCIU-AEI [TIN2017-90644-REDT]; project MEDEA
   [RTI2018-099213-B-I00]; project LEIA [UMA18-FEDERJA-157]; University of
   Malaga
FX This work is supported by the projects Magic P12-TIC1814, HADAS
   TIN2015-64841-R (co-financed by FEDER funds), TASOVA MCIU-AEI
   TIN2017-90644-REDT, MEDEA RTI2018-099213-B-I00 (co-funded by FEDER
   funds) and LEIA UMA18-FEDERJA-157 (co-funded by FEDER funds); and the
   post-doctoral plan of the University of Malaga.
CR [Anonymous], 2011, WILCOXON SIGNED RANK, DOI DOI 10.1007/978-3-642-04898-2616
   [Anonymous], 2013, P INT C ASP OR SOFTW, DOI [DOI 10.1145/2451436, DOI 10.1145/2451436.2451461, 10.1145/2451436.2451461]
   Arcaini P, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P13, DOI 10.1109/SEAMS.2015.10
   Artail H, 2012, IEEE T SERV COMPUT, V5, P99, DOI 10.1109/TSC.2010.49
   Arzt S, 2013, LECT NOTES COMPUT SC, V8174, P364, DOI 10.1007/978-3-642-40787-1_26
   Ayala I, 2019, SCI PROGRAMMING-NETH, V2019, DOI 10.1155/2019/8235458
   Banerjee A, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P139, DOI [10.1109/MobileSoft.2016.038, 10.1145/2897073.2897086]
   Bartkowiak A, 2012, FED CONF COMPUT SCI, P27
   Bohez S., 2015, P ECL TECHN EXCHANGE, P1
   Campbell D.T., 2015, EXPT QUASIEXPERIMENT
   CARLSON HE, 2011, IIWAS, P383, DOI DOI 10.1145/2095536.2095610
   Casquina JC, 2016, 2016 12TH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC 2016), P218, DOI 10.1109/EDCC.2016.25
   Chen MC, 2011, COMPUT COMMUN, V34, P169, DOI 10.1016/j.comcom.2010.03.032
   Choi Y, 2018, PERVASIVE MOB COMPUT, V50, P41, DOI 10.1016/j.pmcj.2018.07.006
   Chowdhury S, 2019, EMPIR SOFTW ENG, V24, P1649, DOI 10.1007/s10664-018-9640-7
   Chowdhury S, 2018, EMPIR SOFTW ENG, V23, P1422, DOI 10.1007/s10664-017-9545-x
   Chowdhury SA, 2019, PROC INT CONF SOFTW, P1107, DOI 10.1109/ICSE.2019.00114
   Chowdhury SA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P49, DOI [10.1145/2901739.2901763, 10.1109/MSR.2016.015]
   Chowdhury SA, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P529, DOI 10.1109/SANER.2016.77
   Costamagna Valerio, 2016, INT M PYS SOC ENG SE, P20
   Cruz L, 2019, EMPIR SOFTW ENG, V24, P2209, DOI 10.1007/s10664-019-09682-0
   Cruz L, 2018, PROC IEEE ACM INT C, P400, DOI 10.1145/3183440.3195027
   Datta SK, 2014, INT WIREL COMMUN, P761, DOI 10.1109/IWCMC.2014.6906452
   Duarte PAD, 2015, P INT COMP SOFTW APP, P159, DOI 10.1109/COMPSAC.2015.91
   ELMALAKI S, 2016, MOB COMPUT COMMUN RE, V20, P35
   Falcone Y, 2012, IEEE INT CONF AUTOM, P350, DOI 10.1145/2351676.2351744
   Floch J, 2013, SOFTWARE PRACT EXPER, V43, P359, DOI 10.1002/spe.2116
   Fourtounis G, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P209, DOI 10.1145/3213846.3213864
   Garcia-de-Prado A, 2018, J UNIVERS COMPUT SCI, V24, P846
   Gedeon Julien, 2018, Mobile Computing, Applications, and Services. 9th International Conference, MobiCASE 2018. Proceedings. Lecture Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications Engineering (LNICST 240), P165, DOI 10.1007/978-3-319-90740-6_10
   Han B, 2013, 2013 10TH INTERNATIONAL CONFERENCE ON ELECTRICAL ENGINEERING, COMPUTING SCIENCE AND AUTOMATIC CONTROL (CCE), P201, DOI 10.1109/ICEEE.2013.6676051
   Hasan S, 2016, PROC INT CONF SOFTW, P225, DOI 10.1145/2884781.2884869
   Hassoun Y, 2005, SOFTWARE PRACT EXPER, V35, P75, DOI 10.1002/spe.629
   He L, 2017, IEEE T MOBILE COMPUT, V16, P1544, DOI 10.1109/TMC.2016.2597842
   Hindle Abram, 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P12
   Hoque MA, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2840723
   Horcas JM, 2019, AD HOC NETW, V82, P15, DOI 10.1016/j.adhoc.2018.08.004
   Horcas JM, 2018, INFORM SOFTWARE TECH, V95, P147, DOI 10.1016/j.infsof.2017.10.018
   Joe H, 2017, FUTURE GENER COMP SY, V72, P49, DOI 10.1016/j.future.2016.05.012
   Kim DK, 2008, PROCEEDINGS IEEE SOUTHEASTCON 2008, VOLS 1 AND 2, P210
   Kuna M., 2011, 2011 11th International Conference on Telecommunications (ConTEL 2011), P95
   Lee E, 2018, INFORM SOFTWARE TECH, V93, P200, DOI 10.1016/j.infsof.2017.09.008
   Lee K, 2012, IEEE ACM T NETWORK, V20, P515, DOI 10.1109/TNET.2011.2172984
   Li D, 2014, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSME.2014.34
   Li L., 2017, CORR
   Linares-Vásquez M, 2017, PROC IEEE ACM INT C, P11, DOI 10.1109/ICSE-C.2017.10
   Morales R, 2018, IEEE T SOFTWARE ENG, V44, P1176, DOI 10.1109/TSE.2017.2757486
   Nacci AA, 2013, 16TH EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN (DSD 2013), P779, DOI 10.1109/DSD.2013.89
   Naqvi NZ, 2016, P ANN HICSS, P5701, DOI 10.1109/HICSS.2016.705
   Pascual GG, 2015, FUTURE GENER COMP SY, V47, P127, DOI 10.1016/j.future.2014.08.015
   Pascual GG, 2015, J SYST SOFTWARE, V103, P392, DOI 10.1016/j.jss.2014.12.041
   Rice A, 2010, PERVASIVE MOB COMPUT, V6, P593, DOI 10.1016/j.pmcj.2010.07.005
   Sahin C, 2016, J SYST SOFTWARE, V117, P307, DOI 10.1016/j.jss.2016.03.031
   Schuster C., 2011, P 3 INT WORKSH CONT, DOI 10.1145/2068736.2068741
   SHAPIRO SS, 1968, J AM STAT ASSOC, V63, P1343, DOI 10.2307/2285889
   Van Cutsem T, 2010, ACM SIGPLAN NOTICES, V45, P59, DOI 10.1145/1899661.1869638
   Zhang YF, 2018, SOFTWARE PRACT EXPER, V48, P1419, DOI 10.1002/spe.2577
NR 57
TC 10
Z9 10
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2020
VL 118
AR 106220
DI 10.1016/j.infsof.2019.106220
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JW2LV
UT WOS:000502890100006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Abrahao, S
   Insfran, E
   González-Ladrón-de-Guevara, F
   Fernández-Diego, M
   Cano-Genoves, C
   de Oliveira, RP
AF Abrahao, Silvia
   Insfran, Emilio
   Gonzalez-Ladron-de-Guevara, Fernando
   Fernandez-Diego, Marta
   Cano-Genoves, Carlos
   de Oliveira, Raphael Pereira
TI Assessing the effectiveness of goal-oriented modeling languages: A
   family of experiments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements engineering; Goal modeling; GRL; I*; Controlled experiments
ID ACCEPTANCE; SYSTEMS; UNDERSTANDABILITY; HETEROGENEITY; METAANALYSIS;
   TECHNOLOGY; DIAGRAMS; QUALITY
AB Context Several goal-oriented languages focus on modeling stakeholders' objectives, interests or wishes. However, these languages can be used for various purposes (e.g., exploring system solutions or evaluating alternatives), and there are few guidelines on how to use these models downstream to the software requirements and design artifacts. Moreover, little attention has been paid to the empirical evaluation of this kind of languages. In a previous work, we proposed value@GRL as a specialization of the Goal Requirements Language (GRL) to specify stakeholders' goals when dealing with early requirements in the context of incremental software development.
   Objective: This paper compares the value@GRL language with the i* language, with respect to the quality of goal models, the participants' modeling time and productivity when creating the models, and their perceptions regarding ease of use and usefulness.
   Method: A family of experiments was carried out with 184 students and practitioners in which the participants were asked to specify a goal model using each of the languages. The participants also filled in a questionnaire that allowed us to assess their perceptions.
   Results: The results of the individual experiments and the meta-analysis indicate that the quality of goal models obtained with value@GRL is higher than that of i*, but that the participants required less time to create the goal models when using i*. The results also show that the participants perceived value@GRL to be easier to use and more useful than i* in at least two experiments of the family.
   Conclusions: value@GRL makes it possible to obtain goal models with good quality when compared to i*, which is one of the most frequently used goal-oriented modeling languages. It can, therefore, be considered as a promising emerging approach in this area. Several insights emerged from the study and opportunities for improving both languages are outlined.
C1 [Abrahao, Silvia; Insfran, Emilio; Cano-Genoves, Carlos] Univ Politecn Valencia, Dept Comp Sci, C Camino Vera S-N, Valencia, Spain.
   [Gonzalez-Ladron-de-Guevara, Fernando; Fernandez-Diego, Marta] Univ Politecn Valencia, Dept Business Org, C Camino Vera S-N, Valencia, Spain.
   [de Oliveira, Raphael Pereira] Fed Inst Sergipe, Rua Cafe Filho 260, Estancia, Brazil.
C3 Universitat Politecnica de Valencia; Universitat Politecnica de
   Valencia; Instituto Federal de Sergipe (IFS)
RP Insfran, E (corresponding author), Univ Politecn Valencia, Dept Comp Sci, C Camino Vera S-N, Valencia, Spain.
EM sabrahao@dsic.upv.es; einsfran@dsic.upv.es; fgonzal@omp.upv.es;
   marferdi@omp.upv.es; carcage1@dsic.upv.es; raphael.oliveira@ifs.edu.br
RI Abrahão, Silvia/AAK-6976-2020; Gonzalez-Ladron-de-Guevara,
   Fernando/A-4164-2009; Insfran, Emilio/O-6934-2015
OI Abrahão, Silvia/0000-0003-3580-2014; Gonzalez-Ladron-de-Guevara,
   Fernando/0000-0002-2617-1559; Insfran, Emilio/0000-0003-0855-5564;
   Pereira de Oliveira, Raphael/0000-0003-4046-5198
FU Spanish Ministry of Science, Innovation and Universities (Adapt@Cloud
   project) [TIN2017-84550-R, PAID-01-17]; Universitat Politecnica de
   Valencia
FX This work was supported by the Spanish Ministry of Science, Innovation
   and Universities (Adapt@Cloud project, grant number TIN2017-84550-R) and
   the "Programa de Ayudas de Investigacion y Desarrollo" (PAID-01-17) from
   the Universitat Politecnica de Valencia.
CR Abrahao S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267433
   Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   Al-Subaie H. S., 2006, 4 INT WORKSH COMP EV, P8, DOI DOI 10.1109/CERE.2006.3
   [Anonymous], COMP GRL KAOS USING
   [Anonymous], 1988, Statistical power analysis for the behavioral sciences
   [Anonymous], 2005, INFORM MODELING METH
   [Anonymous], J CURR CLIN TRIALS
   [Anonymous], COMP GOAL ORIENTED A
   [Anonymous], 2016, ARXIV160507767CSSE
   [Anonymous], 2005, SEKE 2005
   [Anonymous], CEUR WORKSHOP P
   [Anonymous], APPL STAT SOFTW MANA
   [Anonymous], SEMIOTIC APPROACH QU
   [Anonymous], CEUR WORKSHOP P
   [Anonymous], 2012, EXPT SOFTWARE ENG, DOI DOI 10.1007/978-3-642-29044-2
   [Anonymous], REC Z 151 11 08 US R
   [Anonymous], INT C INF SYST DEV
   Anton AI, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P136, DOI 10.1109/ICRE.1996.491438
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Borenstein M, 2010, RES SYNTH METHODS, V1, P97, DOI 10.1002/jrsm.12
   Campbell DT., 1963, Handbook of Research on Teaching, P171
   Carver JC, 2014, EMPIR SOFTW ENG, V19, P267, DOI 10.1007/s10664-013-9290-8
   Chung L., 2000, Non-functional Requirements in Software Engineering
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   COCHRAN WG, 1954, BIOMETRICS, V10, P101, DOI 10.2307/3001666
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Frakes WB., 1992, Information retrieval: Data structures and algorithms
   Franch Xavier., 2016, DOMAIN SPECIFIC CONC, P485, DOI DOI 10.1007/978-3-319-39417-6_22
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Gonçalves E, 2018, J SYST SOFTWARE, V137, P1, DOI 10.1016/j.jss.2017.11.023
   Hardy RJ, 1998, STAT MED, V17, P841, DOI 10.1002/(SICI)1097-0258(19980430)17:8<841::AID-SIM781>3.0.CO;2-D
   Hedges LV., 2014, STAT METHODS META AN
   Hess M., 2004, Annual Meeting of the American Educational Research Association, P1
   Higgins JPT, 2003, BMJ-BRIT MED J, V327, P557, DOI 10.1136/bmj.327.7414.557
   Higgins JPT., 2008, COCHRANE HDB SYSTEMA, DOI DOI 10.1002/9780470712184
   Horkoff J., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P675
   Horkoff J, 2019, REQUIR ENG, V24, P133, DOI 10.1007/s00766-017-0280-z
   Horkoff J, 2015, INT J INF SYST MODEL, V6, P1, DOI 10.4018/IJISMD.2015040101
   Hu PJ, 1999, J MANAGE INFORM SYST, V16, P91, DOI 10.1080/07421222.1999.11518247
   Huedo-Medina TB, 2006, PSYCHOL METHODS, V11, P193, DOI 10.1037/1082-989X.11.2.193
   Jolak R, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P384, DOI 10.1109/SEAA.2017.55
   King WR, 2006, INFORM MANAGE-AMSTER, V43, P740, DOI 10.1016/j.im.2006.05.003
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Kraemer HC, 2006, BIOL PSYCHIAT, V59, P990, DOI 10.1016/j.biopsych.2005.09.014
   Labunets K, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239247
   Lapouchnian Alexei., 2006, CASCON 06, P7
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Liu L, 2004, INFORM SYST, V29, P187, DOI 10.1016/S0306-4379(03)00052-8
   Loewenthal K., 2018, INTRO PSYCHOL TESTS, DOI [10.4324/9781315782980, DOI 10.4324/9781315782980]
   Maté A, 2014, J SYST SOFTWARE, V88, P102, DOI 10.1016/j.jss.2013.10.011
   Matulevicius R, 2007, LECT NOTES COMPUT SC, V4542, P18
   Morales JM, 2016, J SYST SOFTWARE, V114, P82, DOI 10.1016/j.jss.2015.12.056
   Morales JM, 2015, J SYST SOFTWARE, V100, P1, DOI 10.1016/j.jss.2014.10.010
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Mylopoulos J., 2001, The Unified Modeling Language. Modeling Languages, Concepts, P422
   Nelson HJ, 2012, SOFTWARE QUAL J, V20, P201, DOI 10.1007/s11219-011-9136-9
   Nordio M., 2012, EMPIRICAL SOFTWARE E, P60
   PIPPENGER N, 1978, SCI AM, V238, P114, DOI 10.1038/scientificamerican0678-114
   PMI, 2014, Requirements Management a Core Competency for Project And Program Success, in-depth report
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Regev G, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P353, DOI 10.1109/RE.2005.80
   Ried Karin, 2006, Aust Fam Physician, V35, P635
   Santos A, 2020, IEEE T SOFTWARE ENG, V46, P566, DOI 10.1109/TSE.2018.2864633
   Scanniello G, 2014, J VISUAL LANG COMPUT, V25, P494, DOI 10.1016/j.jvlc.2014.03.002
   Siau K, 2011, INFORM SYST J, V21, P249, DOI 10.1111/j.1365-2575.2007.00255.x
   Souza E, 2018, INFORM SOFTWARE TECH, V104, P179, DOI 10.1016/j.infsof.2018.08.001
   Teruel MA, 2012, INFORM SOFTWARE TECH, V54, P1215, DOI 10.1016/j.infsof.2012.06.001
   Viechtbauer W, 2010, J STAT SOFTW, V36, P1, DOI 10.18637/jss.v036.i03
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
NR 72
TC 4
Z9 4
U1 1
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2019
VL 116
AR 106171
DI 10.1016/j.infsof.2019.08.003
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA JM6SN
UT WOS:000496342000004
OA Green Published
DA 2024-07-18
ER

PT J
AU Garmendia, A
   Guerra, E
   de Lara, J
   García-Domínguez, A
   Kolovos, D
AF Garmendia, Antonio
   Guerra, Esther
   de Lara, Juan
   Garcia-Dominguez, Antonio
   Kolovos, Dimitris
TI Scaling-up domain-specific modelling languages through modularity
   services
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model-driven engineering; Meta-modelling; Scalability; Domain-specific
   modelling languages
ID EXPLORATION
AB Context: Model-driven engineering (MDE) promotes the active use of models in all phases of software development. Even though models are at a high level of abstraction, large or complex systems still require building monolithic models that prove to be too big for their processing by existing tools, and too difficult to comprehend by users. While modularization techniques are well-known in programming languages, they are not the norm in MDE.
   Objective: Our goal is to ease the modularization of models to allow their efficient processing by tools and facilitate their management by users.
   Method: We propose five patterns that can be used to extend a modelling language with services related to modularization and scalability. Specifically, the patterns allow defining model fragmentation strategies, scoping and visibility rules, model indexing services, and scoped constraints. Once the patterns have been applied to the meta-model of a modelling language, we synthesize a customized modelling environment enriched with the defined services, which become applicable to both existing monolithic legacy models and new models.
   Results: Our proposal is supported by a tool called EMF-Splitter, combined with the Hawk model indexer. Our experiments show that this tool improves the validation performance of large models. Moreover, the analysis of 224 meta-models from OMG standards, and a public repository with more than 300 meta-models, demonstrates the applicability of our patterns in practice.
   Conclusions: Modularity mechanisms typically employed in programming IDEs can be successfully transferred to MDE, leading to more scalable and structured domain-specific modelling languages and environments.
C1 [Garmendia, Antonio; Guerra, Esther; de Lara, Juan] Univ Autonoma Madrid, Comp Sci Dept, C Francisco Tomas y Valiente 11, E-28049 Madrid, Spain.
   [Garcia-Dominguez, Antonio] Aston Univ, Sch Engn & Appl Sci, Birmingham B4 7ET, W Midlands, England.
   [Kolovos, Dimitris] Univ York, Dept Comp Sci, Deramore Lane, York YO10 5GH, N Yorkshire, England.
C3 Autonomous University of Madrid; Aston University; University of York -
   UK
RP Garmendia, A (corresponding author), Comp Sci Dept, C Francisco Tom y Valiente 11, Madrid 28049, Spain.
EM antonio.garmendia@uam.es
RI de Lara, Juan/B-5422-2014; Kolovos, Dimitrios/L-9830-2014; Garmendia,
   Antonio/HLW-7667-2023; Garcia Dominguez, Antonio/IAN-2064-2023; Guerra,
   Esther/B-4977-2014
OI Garcia Dominguez, Antonio/0000-0002-4744-9150; Kolovos,
   Dimitris/0000-0002-1724-6563; Guerra, Esther/0000-0002-2818-2278
FU R&D programme of the Madrid Region (project FORTE) [S2018/TCS-4314];
   Spanish Ministry of Science (project MASSIVE) [RTI2018-095255-B-I00]
FX Work partially funded by the R&D programme of the Madrid Region (project
   FORTE, S2018/TCS-4314), and the Spanish Ministry of Science (project
   MASSIVE, RTI2018-095255-B-I00). We thank the anonymous referees for
   their useful comments.
CR [Anonymous], BIGMDE STAF
   [Anonymous], ACM T SOFTW ENG METH
   [Anonymous], MODELS
   [Anonymous], RCIS
   [Anonymous], 1991, OBJECT ORIENTED PROG
   [Anonymous], ECMDA FA
   [Anonymous], 2015, P 2015 ACM SIGPLAN I
   [Anonymous], CEUR WORKSHOP P
   [Anonymous], PRESENT ULTERIOR SOF
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Atkinson C, 2015, IEEE INT ENTERP DIST, P40, DOI 10.1109/EDOC.2015.17
   Barmpis K, 2014, LECT NOTES COMPUT SC, V8569, P35
   Bergmann Gabor, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P167, DOI 10.1007/978-3-642-21732-6_12
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Bruneliere Hugo, 2019, Software & Systems Modeling, V18, P1931, DOI 10.1007/s10270-017-0622-9
   Cabot J, 2009, J SYST SOFTWARE, V82, P1459, DOI 10.1016/j.jss.2009.03.009
   Clayberg E., 2008, ECLIPSE PLUGINS
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   Debreceni C, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P984, DOI 10.1145/3106237.3122829
   Degueule Thomas., 2015, SLE 2015 P 2015 ACM, P25, DOI DOI 10.1145/2814251.2814252
   DeRemer F., 1976, IEEE Transactions on Software Engineering, VSE-2, P80, DOI 10.1109/TSE.1976.233534
   Dijkstra E.W., 1974, ROLE SCI THOUGHT
   Egyed A, 2018, COMPUTER, V51, P28, DOI 10.1109/MC.2018.1451666
   Pagán JE, 2014, INFORM SOFTWARE TECH, V56, P586, DOI 10.1016/j.infsof.2014.01.005
   Garcia-Dominguez A, 2019, SOFTW SYST MODEL, V18, P1047, DOI 10.1007/s10270-017-0606-9
   Garmendia A., 2014, XM@ MoDELS, V1239, P22
   Gómez A, 2017, LECT NOTES COMPUT SC, V10376, P300, DOI 10.1007/978-3-319-61482-3_18
   Heidenreich F, 2009, LECT NOTES COMPUT SC, V5560, P39, DOI 10.1007/978-3-642-03764-1_2
   Jiménez-Pastor A, 2017, J SYST SOFTWARE, V132, P204, DOI 10.1016/j.jss.2017.07.011
   Jurack S, 2010, LECT NOTES COMPUT SC, V6372, P187
   Kelly S., 2008, Domain-Specific Modeling
   Kolovos Dimitrios S., 2006, Eclipse Summit Europe, Eclipse Modeling Symposium, volume 20062, page, P200
   Krahn Holger, 2010, International Journal on Software Tools for Technology Transfer, V12, P353, DOI 10.1007/s10009-010-0142-1
   Lawall JL, 2005, LECT NOTES COMPUT SC, V3676, P78
   Ma Q, 2015, SOFTW SYST MODEL, V14, P921, DOI 10.1007/s10270-013-0348-2
   Mayerhofer T, 2018, IEEE T IND INFORM, V14, P2770, DOI 10.1109/TII.2017.2786780
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Newman MEJ, 2005, CONTEMP PHYS, V46, P323, DOI 10.1080/00107510500052444
   Pescador A, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P166, DOI 10.1109/MODELS.2015.7338247
   QUONG RW, 1991, ACM T PROGR LANG SYS, V13, P1, DOI 10.1145/114005.102804
   REISS SP, 1984, SIGPLAN NOTICES, V19, P144, DOI 10.1145/502949.502889
   Rose LM, 2010, LECT NOTES COMPUT SC, V6138, P245, DOI 10.1007/978-3-642-13595-8_20
   Scheidgen Markus, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P102, DOI 10.1007/978-3-642-33666-9_8
   Scheidgen M, 2017, MODELSWARD: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P329, DOI 10.5220/0006127303290336
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Strüber D, 2014, LECT NOTES COMPUT SC, V8411, P47
   Strüber D, 2013, LECT NOTES COMPUT SC, V7793, P6, DOI 10.1007/978-3-642-37057-1_2
   Sutîi AM, 2018, COMPUT LANG SYST STR, V51, P48, DOI 10.1016/j.cl.2017.07.004
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   Voelter M, 2013, DSL ENG DESIGNING IM
   Wachsmuth GH, 2014, IEEE SOFTWARE, V31, P35, DOI 10.1109/MS.2014.100
   Wimmer M, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978807
NR 53
TC 5
Z9 5
U1 1
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2019
VL 115
BP 97
EP 118
DI 10.1016/j.infsof.2019.05.010
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IX7GL
UT WOS:000485851700009
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Burgueño, L
   Mayerhofer, T
   Wimmer, M
   Vallecillo, A
AF Burgueno, Loli
   Mayerhofer, Tanja
   Wimmer, Manuel
   Vallecillo, Antonio
TI Specifying quantities in software models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model-based engineering; Modeling physical quantities; Measurement
   uncertainty; Dimensions; Units
ID UNITS; UML
AB Context: An essential requirement for the design and development of any engineering application that deals with real-world physical systems is the formal representation and processing of physical quantities, comprising both measurement uncertainty and units. Although solutions exist for several programming languages and simulation frameworks, this problem has not yet been fully solved for software models.
   Objective: This paper shows how both measurement uncertainty and units can be effectively incorporated into software models, becoming part of their basic type systems.
   Method: We introduce the main concepts and mechanisms needed for representing and handling physical quantities in software models. More precisely, we describe an extension of basic type Real, called Quantity, and a set of operations defined for the values of that type, together with a ready-to-use library of dimensions and units, which can be added to any modeling project.
   Results: We show how our approach permits modelers to safely represent and operate with physical quantities, statically ensuring type- and unit-safe assignments and operations, prior to any simulation of the system or implementation in any programming language.
   Conclusion: Our approach improves the expressiveness and type-safety of software models with respect to measurement uncertainty and units of physical quantities, and its effective use in modeling projects of physical systems.
C1 [Burgueno, Loli] Open Univ Catalonia, IN3, Ave Tibidabo 39-43, Barcelona 08035, Spain.
   [Burgueno, Loli] Univ Paris Saclay, CEA, Inst LIST, Ave Vauve, F-91120 Palaiseau, France.
   [Mayerhofer, Tanja] TU Wien, Inst Informat Syst Engn, Business Informat, Favoritenstr 9-11, A-1040 Vienna, Austria.
   [Wimmer, Manuel] Johannes Kepler Univ Linz, CDL MINT, Altenbergerstr 69, A-4040 Linz, Austria.
   [Vallecillo, Antonio] Univ Malaga, Atenea Res Grp, Bulevar Louis Pasteur 35, E-29071 Malaga, Spain.
C3 UOC Universitat Oberta de Catalunya; CEA; Universite Paris Cite;
   Universite Paris Saclay; Technische Universitat Wien; Johannes Kepler
   University Linz; Universidad de Malaga
RP Burgueño, L (corresponding author), Open Univ Catalonia, IN3, Ave Tibidabo 39-43, Barcelona 08035, Spain.
EM lburguenoc@uoc.edu
RI Vallecillo, Antonio/B-1884-2014; Burgueno, Lola/L-3817-2014
OI Vallecillo, Antonio/0000-0002-8139-9986; Burgueno,
   Lola/0000-0002-7779-8810
FU Spanish Research [TIN2014-52034-R, TIN2016-75944-R]; EU COST Action
   [IC1404, MPM4CPS]; National Foundation for Research, Technology and
   Development (CDG); Austrian Federal Ministry of-Science, Re-search, and
   Economy (BMWFW Austria)
FX We would like to sincerely thank the reviewers for their insightful
   comments and suggestions, which significantly helped improving the
   manuscript. This work is funded by the Spanish Research, Projects
   TIN2014-52034-R and TIN2016-75944-R, the EU COST Action IC1404
   (MPM4CPS), the National Foundation for Research, Technology and
   Development (CDG), and the Austrian Federal Ministry of-Science,
   Re-search, and Economy (BMWFW Austria).
CR Allen E, 2004, ACM SIGPLAN NOTICES, V39, P384, DOI 10.1145/1035292.1029008
   AMERICA P, 1987, LECT NOTES COMPUT SC, V276, P234
   [Anonymous], INT VOC METR BAS GEN
   [Anonymous], 2014, QUDT-quantities, units, dimensions and data types ontologies
   [Anonymous], 2008, JCGM, V101, P2008
   [Anonymous], 2017, 100312017 IEEE
   [Anonymous], 2011, 800002009 ISOIEC
   Aronsson Peter., 2009, P 7 INT MODELICA C, P890
   Bertoa MF, 2018, LECT NOTES COMPUT SC, V10890, P46, DOI 10.1007/978-3-319-92997-2_4
   BOUTE RT, 1990, SIGPLAN NOTICES, V25, P25, DOI 10.1145/74105.74108
   Büttner F, 2014, SCI COMPUT PROGRAM, V92, P162, DOI 10.1016/j.scico.2013.10.003
   Ciccozzi F, 2016, IEEE ACCESS, V4, P6451, DOI 10.1109/ACCESS.2016.2613642
   CLERICI S, 1988, LECT NOTES COMPUT SC, V322, P78
   Dautelle J.-M., 2016, JAVA JSR 363 UNITS M
   Davies K. L., 2012, P 9 INT MODELICA C, P801
   Dhouib Saadia, 2016, PROC IEEE 21 INT C E, P1
   Dragomir I, 2017, SOFTW SYST MODEL, V16, P587, DOI 10.1007/s10270-015-0481-1
   Espinoza H, 2009, LECT NOTES COMPUT SC, V5562, P98, DOI 10.1007/978-3-642-02674-4_8
   Flater D., 2016, 1943 NIST
   Fowler M., QUANTITY REPRESENT D
   Fowler M., 1997, ANAL PATTERS REUSABL
   Fritzson P., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P67, DOI 10.1007/BFb0054087
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   GOLDBERG D, 1991, COMPUT SURV, V23, P5, DOI 10.1145/103162.103163
   Grecco H. E., 2016, TEMPERATURE CONVERSI
   Hucka M, 2003, BIOINFORMATICS, V19, P524, DOI 10.1093/bioinformatics/btg015
   JCGM, 2012, INT VOCABULARY METRO, V3rd, P200
   Jiménez-Ramírez A, 2015, INFORM SOFTWARE TECH, V57, P571, DOI 10.1016/j.infsof.2014.06.006
   Joint Committee for Guides in Metrology, 2008, 1002008 JCGM, V100
   Keller M., 2002, EIFFEL UNITS
   Kennedy Andrew, 2010, Central European Functional Programming School. Third Summer School (CEFP 2009). Revised Selected Lectures, P268, DOI 10.1007/978-3-642-17685-2_8
   Kennedy A. J., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P442, DOI 10.1145/263699.263761
   Lebigot Eric O., 2016, Uncertainties Package
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   Mathworks, 2016, THERM UN CONV
   Mattsson S. E., 2008, P 6 INT MODELICA C, P13
   Mayerhofer T., 2016, COMPUTING QUANTITIES
   Mayerhofer T, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P118, DOI 10.1145/2997364.2997376
   Modelica, 2011, MOD SI UN
   Mosterman PJ, 2016, SOFTW SYST MODEL, V15, P17, DOI 10.1007/s10270-015-0493-x
   Nelson W. H., 1997, GIMLI GLIDER INCIDEN
   Object Management Group (OMG), 2014, OMG document formal/2014-02-03
   Olbrich K. C., 2016, RUBY UNITS
   OMG, 2016, FORMAL20160105 OMG
   OMG, 2018, FORMAL180501 OMG
   OMG, 2011, FORMAL20110602 OMG
   OMG, 2015, OMG document number formal/2015-03-01
   Oueslati W., 2011, CORR
   P. America, 1991, INHERITANCE HIERARCH, P173
   Rajkumar R, 2010, DES AUT CON, P731
   Rijgersberg H, 2011, ADV ENG INFORM, V25, P276, DOI 10.1016/j.aei.2010.07.008
   Rijgersberg H, 2013, SEMANT WEB, V4, P3, DOI 10.3233/SW-2012-0069
   Selic B, 2015, P MODELSWARD 2015 PE, pIS
   Taylor B.N., 2008, INT SYST UN SI
   Thramboulidis K, 2016, COMPUT IND, V82, P259, DOI 10.1016/j.compind.2016.05.010
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wolf M., 2009, A Modeling Language for Measurement Uncertainty Evaluation
   Wolfram, 2018, TEMP UN
   Wolfram Research Inc, 2016, MATH SUPP UN
   Zhang M, 2019, SOFTW SYST MODEL, V18, P1379, DOI 10.1007/s10270-017-0609-6
NR 60
TC 14
Z9 14
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2019
VL 113
BP 82
EP 97
DI 10.1016/j.infsof.2019.05.006
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IE1DW
UT WOS:000472127100005
OA Bronze, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Campusano, M
   Fabry, J
   Bergel, A
AF Campusano, Miguel
   Fabry, Johan
   Bergel, Alexandre
TI Live programming in practice: A controlled experiment on state machines
   for robotic behaviors
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Live programming; Controlled experiment; Robot behaviors; Live robot
   programming; Nested state machines
AB Context: Live programming environments are gaining momentum across multiple programming languages. A tenet of live programming is a development feedback cycle, resulting in faster development practices. Although practitioners of live programming consider it a positive inclusion in their workflow, no in-depth investigations have yet been conducted on its benefits in a realistic scenario, nor using complex API.
   Objective: This paper carefully studies the advantage of using live programming in defining nested state machines for robot behaviors. We analyzed two important aspects of developing robotic behaviors using these machines: program comprehension and program writing. We analyzed both development practices in terms of speed and accuracy.
   Method: We conducted two controlled experiments, one for program comprehension and another for program writing. We measured the speed and accuracy of randomized assigned participants on completing programming tasks, against a baseline.
   Results: In a robotic behavior context, we found that a live programming system for nested state machine programs does not significantly outperform a non-live language in program comprehension nor in program writing in terms of speed and accuracy. However, the feedback of test subjects indicates their preference for the live programming system.
   Conclusions: The results of this work seem to contradict the studies of live programming in other areas, even while participants still favor using live programming techniques. We learned that the complex API chosen in this work has a strong negative influence on the results. To the best of our knowledge, this is the first in-depth live programming experiment in a complex domain.
C1 [Campusano, Miguel; Bergel, Alexandre] Univ Chile, Comp Sci Dept DCC, ISC Lab, Beauchef 851, Santiago, Chile.
   [Fabry, Johan] Raincode Labs, Brussels, Belgium.
C3 Universidad de Chile
RP Campusano, M (corresponding author), Univ Chile, Comp Sci Dept DCC, ISC Lab, Beauchef 851, Santiago, Chile.
EM mcampusa@dcc.uchile.cl; jfabry@gmail.com; abergel@dcc.uchile.cl
RI Campusano, Miguel/AAX-1343-2020
OI Campusano, Miguel/0000-0002-7894-6635
FU Lam Research - CONICYT-PCHA/Doctorado [Nacional/2015-21151534]
FX We thank Lam Research for partially sponsoring the work presented in
   this paper. Miguel Campusano is also funded by CONICYT-PCHA/Doctorado
   Nacional/2015-21151534.
CR Black Andrew P, 2010, Pharo by example
   Boren J, 2010, IEEE ROBOT AUTOM MAG, V17, P18, DOI 10.1109/MRA.2010.938836
   Bragagnolo S., 2014, PHAROS ROS CLIENT PH
   Burnett M, 2001, J FUNCT PROGRAM, V11, P155, DOI 10.1017/S0956796800003828
   Campusano M, 2017, SCI COMPUT PROGRAM, V133, P1, DOI 10.1016/j.scico.2016.06.002
   Dhouib Saadia, 2012, Simulation, Modeling, and Programming for Autonomous Robots. Proceedings of the Third International Conference, SIMPAR 2012, P149, DOI 10.1007/978-3-642-34327-8_16
   Fabry J, 2014, LECT NOTES ARTIF INT, V8864, P445, DOI 10.1007/978-3-319-12027-0_36
   HANCOCK CM, 2003, THESIS
   Hundhausen CD, 2007, J VISUAL LANG COMPUT, V18, P537, DOI 10.1016/j.jvlc.2006.09.001
   Jedlitschka  A., 2005, EMP SOFTW ENG EMP SO
   Krämer JP, 2014, S VIS LANG HUM CEN C, P5, DOI 10.1109/VLHCC.2014.6883013
   Kubelka J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1090, DOI 10.1145/3180155.3180200
   Loetzsch M, 2006, 2006 IEEE/RSJ INTERNATIONAL CONFERENCE ON INTELLIGENT ROBOTS AND SYSTEMS, VOLS 1-12, P5124, DOI 10.1109/IROS.2006.282605
   Nordmann A, 2015, IEEE INT CONF ROBOT, P5032, DOI 10.1109/ICRA.2015.7139899
   Oney Stephen, 2014, P 27 ANN ACM S US IN, P263
   Quigley M, 2009, IEEE INT CONF ROBOT, P3604
   Schultz U. P., 2007, P 2007 WORKSH AUT PR, P28
   Tanimoto S. L., 1990, Journal of Visual Languages and Computing, V1, P127, DOI 10.1016/S1045-926X(05)80012-6
   Topalidou-Kyniazopoulou A., 2013, LNCS, V7500, P225, DOI DOI 10.1007/978-3-642-39250-4_21
   Voelter M, 2013, DSL ENG DESIGNING IM
   Wilcox Eric, 1997, P CHI 1997 ATL GEORG, P258, DOI DOI 10.1145/258549.258721
   Wohlin C., 2012, Experimentation in Software Engineering
NR 22
TC 4
Z9 6
U1 1
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2019
VL 108
BP 99
EP 114
DI 10.1016/j.infsof.2018.12.008
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HM3IE
UT WOS:000459366200007
DA 2024-07-18
ER

PT J
AU Chen, X
   Zhang, D
   Zhao, YQ
   Cui, ZQ
   Ni, C
AF Chen, Xiang
   Zhang, Dun
   Zhao, Yingquan
   Cui, Zhanqi
   Ni, Chao
TI Software defect number prediction: Unsupervised vs supervised methods
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software defect prediction; Software defect number prediction;
   Supervised method; Unsupervised method; Class imbalance learning;
   Differential evolutionary; Empirical study
ID OPTIMIZATION; IMBALANCE; METRICS
AB Context: Software defect number prediction (SDNP) can rank the program modules according to the prediction results and is helpful for the optimization of testing resource allocation.
   Objective: In previous studies, supervised methods vs unsupervised methods is an active issue for just-in-time defect prediction and file-level defect prediction based on effort-aware performance measures. However, this issue has not been investigated for SDNP. To the best of our knowledge, we are the first to make a thorough comparison for these two different types of methods.
   Method: In our empirical studies, we consider 7 real open-source projects with 24 versions in total, use FPA and Kendall as our effort-aware performance measures, and consider three different performance evaluation scenarios (i.e., within-version scenario, cross-version scenario, and cross-project scenario).
   Result: We first identify two unsupervised methods with best performance. These two methods simply rank modules according to the value of metric LOC and metric RFC from large to small respectively. Then we compare 9 state-of-the-art supervised methods incorporating SMOTEND, which is used for handling class imbalance problem, with the unsupervised method based on LOC metric (i.e., LOC_D method). Final results show that LOC_D method can perform significantly better than or the same as these supervised methods. Later motivated by a recent study conducted by Agrawla and Menzies, we apply differential evolutionary (DE) to optimize parameter value of SMOTEND used by these supervised methods and find that using DE can effectively improve the performance of these supervised methods for SDNP too. Finally, we continue to compare LOC_D with these optimized supervised methods using DE, and LOC_D method still has advantages in the performance, especially in the cross-version and cross-project scenarios.
   Conclusion: Based on these results, we suggest that researchers need to use the unsupervised method LOC_D as the baseline method, which is used for comparing their proposed novel methods for SDNP problem in the future.
C1 [Chen, Xiang; Zhang, Dun; Zhao, Yingquan] Nantong Univ, Sch Comp Sci & Technol, Nantong, Peoples R China.
   [Chen, Xiang] Guilin Univ Elect Technol, Guangxi Key Lab Trusted Software, Guilin, Peoples R China.
   [Chen, Xiang; Cui, Zhanqi; Ni, Chao] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Cui, Zhanqi] Beijing Informat Sci & Technol Univ, Comp Sch, Beijing, Peoples R China.
C3 Nantong University; Guilin University of Electronic Technology; Nanjing
   University; Beijing Information Science & Technology University
RP Chen, X (corresponding author), Nantong Univ, Sch Comp Sci & Technol, Nantong, Peoples R China.
EM xchencs@ntu.edu.cn; dunnzhang0@gmail.com; enockchao@gmail.com;
   czq@bistu.edu.cn; jacknichao920209@gmail.com
RI Chen, Xiang/AAG-3663-2019; Zhao, Yingquan/HGU-0447-2022
OI Chen, Xiang/0000-0002-1180-3891; Zhao, Yingquan/0000-0003-2998-1052;
   Cui, Zhanqi/0000-0002-5537-9236
FU National Natural Science Foundation of China [61702041, 61202006]; Open
   Project of State Key Laboratory for Novel Software Technology at Nanjing
   University [KFKT2016B18, KFKT2016B12]; Guangxi Key Laboratory of Trusted
   Software [kx201610]; Science and Technology Project of Beijing Municipal
   Education Commission [KM201811232016]; Jiangsu Government Scholarship
   for Overseas Studies
FX The authors would like to thank the editors and the anonymous reviewers
   for their insightful comments and suggestions, which can substantially
   improve the quality of this work. This work is supported in part by
   National Natural Science Foundation of China (Grant Nos. 61702041,
   61202006), The Open Project of State Key Laboratory for Novel Software
   Technology at Nanjing University under (Grant Nos. KFKT2016B18,
   KFKT2016B12), Guangxi Key Laboratory of Trusted Software (Grant No.
   kx201610), The Science and Technology Project of Beijing Municipal
   Education Commission (Grant No. KM201811232016), and Jiangsu Government
   Scholarship for Overseas Studies. Xiang Chen and Dun Zhang have
   contributed equally for this work and they are co-first authors.
CR Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Benni KE, 2018, IEEE T SOFTWARE ENG, V44, P534, DOI 10.1109/TSE.2017.2731766
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen L, 2018, SOFTWARE QUAL J, V26, P97, DOI 10.1007/s11219-016-9342-6
   Chen Mingming., 2015, SEKE, P397
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   Di Martino Sergio, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P247, DOI 10.1007/978-3-642-21843-9_20
   Drucker H., 1997, P 14 INT C MACH LEAR, P107, DOI DOI 10.5555/645526.657132
   Fu W., 2016, ARXIV160902613
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Gao KH, 2007, IEEE T RELIAB, V56, P223, DOI 10.1109/TR.2007.896761
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Janes A, 2006, INFORM SCIENCES, V176, P3711, DOI 10.1016/j.ins.2005.12.002
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Koru AG, 2008, EMPIR SOFTW ENG, V13, P473, DOI 10.1007/s10664-008-9080-x
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   Liu JP, 2017, INT SYMP EMP SOFTWAR, P11, DOI 10.1109/ESEM.2017.8
   Liu SL, 2014, P INT COMP SOFTW APP, P426, DOI 10.1109/COMPSAC.2014.66
   Liu WS, 2016, IEEE T RELIAB, V65, P38, DOI 10.1109/TR.2015.2461676
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Ni C, 2017, J COMPUT SCI TECH-CH, V32, P1090, DOI 10.1007/s11390-017-1785-0
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Öztürk MM, 2017, INFORM SOFTWARE TECH, V92, P17, DOI 10.1016/j.infsof.2017.07.004
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rajbahadur GK, 2017, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2017.4
   Rathore Santosh Singh, 2016, ACM SIGSOFT Software Engineering Notes, V41, P1, DOI 10.1145/2853073.2853083
   Rathore SS, 2017, SOFT COMPUT, V21, P7417, DOI 10.1007/s00500-016-2284-x
   Rathore SS, 2017, EXPERT SYST APPL, V82, P357, DOI 10.1016/j.eswa.2017.04.014
   Rathore SS, 2017, KNOWL-BASED SYST, V119, P232, DOI 10.1016/j.knosys.2016.12.017
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Torgo L, 2015, EXPERT SYST, V32, P465, DOI 10.1111/exsy.12081
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang J, 2012, INT SYMP EMP SOFTWAR, P191, DOI 10.1145/2372251.2372287
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Weyuker EJ, 2010, EMPIR SOFTW ENG, V15, P277, DOI 10.1007/s10664-009-9111-2
   Yan M, 2017, INT SYMP EMP SOFTWAR, P344, DOI 10.1109/ESEM.2017.48
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yu X, 2017, PROC INT SYMP SOFTW, P78, DOI 10.1109/ISSRE.2017.18
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
NR 58
TC 63
Z9 69
U1 1
U2 41
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2019
VL 106
BP 161
EP 181
DI 10.1016/j.infsof.2018.10.003
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HF6XJ
UT WOS:000454381300010
DA 2024-07-18
ER

PT J
AU Kaur, L
   Mishra, A
AF Kaur, Loveleen
   Mishra, Ashutosh
TI Cognitive complexity as a quantifier of version to version Java-based
   source code change: An empirical probe
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Cognitive complexity; Software change; Software metrics; Logistic
   regression analysis; Machine learning
ID OBJECT-ORIENTED METRICS; CHANGE-PRONE CLASSES; SUITE
AB Context It has been often argued that it is challenging to modify code fragments from existing software that contains files that are difficult to comprehend. Since systematic software maintenance includes an extensive human activity, cognitive complexity is one of the intrinsic factors that could potentially contribute to or impede an efficient software maintenance practice, the empirical validation of which remains vastly unaddressed.
   Objective: This study conducts an experimental analysis in which the software developer's level of difficulty in comprehending the software: the cognitive complexity, is theoretically computed and empirically evaluated for estimating its relevance to actual software change.
   Method: For multiple successive releases of two Java-based software projects, where the source code of a previous release has been substantively used in a novel release, we calculate the change results and the values of the cognitive complexity for each of the version's source code Java files. We construct eight datasets and build predictive models using statistical analysis and machine learning techniques.
   Results: The pragmatic comparative examination of the estimated cognitive complexity against prevailing metrics of software change and software complexity clearly validates the cognitive complexity metric as a noteworthy measure of version to version source code change.
C1 [Kaur, Loveleen; Mishra, Ashutosh] Thapar Inst Engn & Technol, Dept Comp Sci & Engn, Patiala, Punjab, India.
C3 Thapar Institute of Engineering & Technology
RP Kaur, L (corresponding author), Thapar Inst Engn & Technol, Dept Comp Sci & Engn, Patiala, Punjab, India.
EM loveleen.kaur@thapar.edu; ashutosh.mishra@thapar.edu
RI Mishra, Ashutosh/D-1197-2012; Mishra, Ashutosh/JAC-4443-2023
OI Kaur, Loveleen/0000-0003-2938-0871; Mishra, Ashutosh/0000-0002-9622-3879
CR Antinyan V, 2017, EMPIR SOFTW ENG, V22, P3057, DOI 10.1007/s10664-017-9508-2
   Antinyan V, 2015, 2015 SCIENCE AND INFORMATION CONFERENCE (SAI), P879, DOI 10.1109/SAI.2015.7237246
   Antunes N, 2009, IEEE 15TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P301, DOI 10.1109/PRDC.2009.54
   Auprasert Benjapol, 2009, 2009 WRI World Congress on Computer Science and Information Engineering, CSIE, P830, DOI 10.1109/CSIE.2009.713
   Belsley D. A., 2005, Regression Diagnostics: Identifying Influential Data and Sources of Collinearity
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   CANT SN, 1995, INFORM SOFTWARE TECH, V37, P351, DOI 10.1016/0950-5849(95)91491-H
   Chaumun MA, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P130, DOI 10.1109/CSMR.1999.756690
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Crasso M, 2016, COMPUT INFORM, V35, P497
   CURTIS B, 1979, IEEE T SOFTWARE ENG, V5, P96, DOI 10.1109/TSE.1979.234165
   Eierman MA, 2007, J SOFTW MAINT EVOL-R, V19, P33, DOI 10.1002/smr.343
   Elish MO, 2013, J SOFTW-EVOL PROC, V25, P407, DOI 10.1002/smr.1549
   Eski S., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P566, DOI 10.1109/ICSTW.2011.43
   Green GC, 2004, INFORM SOFTWARE TECH, V46, P165, DOI 10.1016/S0950-5849(03)00125-3
   Gruhn V, 2006, PROCEEDINGS OF THE FIFTH IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS, VOLS 1 AND 2, P236, DOI 10.1109/COGINF.2006.365702
   Hall M. A., 2000, P 17 INT C MACH LEAR, P359, DOI DOI 10.5555/645529.657793
   Harrison R., 1992, IEEE T SOFTWARE ENG, V18, P410
   Hosmer DW, 2013, WILEY SER PROBAB ST, P89
   Huang J, 2005, IEEE T KNOWL DATA EN, V17, P299, DOI 10.1109/TKDE.2005.50
   Ko AJ, 2005, PROC INT CONF SOFTW, P126
   Koenig A., 1990, P USENIX C PLUS PLUS, P149
   Koru AG, 2005, IEEE T SOFTWARE ENG, V31, P625, DOI 10.1109/TSE.2005.89
   Kuo JY, 2012, INT CONF GENET EVOL, P188, DOI 10.1109/ICGEC.2012.145
   Kushwaha D.S., 2006, ACM SPECIAL INTEREST, V31, P1, DOI DOI 10.1145/1163514.1163533
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Lindvall M, 1998, J SYST SOFTWARE, V43, P19, DOI 10.1016/S0164-1212(98)10019-5
   Lu HM, 2012, EMPIR SOFTW ENG, V17, P200, DOI 10.1007/s10664-011-9170-z
   Malhotra R, 2017, J INF PROCESS SYST, V13, P778, DOI 10.3745/JIPS.04.0013
   Malhotra R, 2013, INT J MACH LEARN CYB, V4, P273, DOI 10.1007/s13042-012-0095-7
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McCrum-Gardner E, 2008, BRIT J ORAL MAX SURG, V46, P38, DOI 10.1016/j.bjoms.2007.09.002
   Michalak K, 2006, ISDA 2006: SIXTH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS DESIGN AND APPLICATIONS, VOL 1, P741
   Misra S, 2004, PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS, P103, DOI 10.1109/COGINF.2004.1327464
   Misra S, 2012, IET SOFTW, V6, P323, DOI 10.1049/iet-sen.2011.0206
   Misra S., 2007, SIGSOFT Software Engineering Notes, V32, P1, DOI [10.1145/1234741.1234760, DOI 10.1145/1234741.1234760]
   Misra S, 2008, LECT NOTES ARTIF INT, V5178, P879, DOI 10.1007/978-3-540-85565-1_109
   Misra S, 2006, LECT NOTES COMPUT SC, V4263, P1050
   Romano D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P303, DOI 10.1109/ICSM.2011.6080797
   Shatnawi R, 2008, J SYST SOFTWARE, V81, P1868, DOI 10.1016/j.jss.2007.12.794
   Soh Z, 2013, WORK CONF REVERSE EN, P152, DOI 10.1109/WCRE.2013.6671290
   Vasa R, 2007, PROC IEEE INT CONF S, P74
   Wang YX, 2003, SECOND IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS, PROCEEDINGS, P67
   Wilkie FG, 2000, J SYST SOFTWARE, V52, P157, DOI 10.1016/S0164-1212(99)00142-9
   Witten IH, 2011, MOR KAUF D, P1
   Yingxu Wang, 2009, International Journal of Software Science and Computational Intelligence, V1, P1, DOI 10.4018/jssci.2009040101
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 47
TC 3
Z9 3
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2019
VL 106
BP 31
EP 48
DI 10.1016/j.infsof.2018.09.002
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HF6XJ
UT WOS:000454381300002
DA 2024-07-18
ER

PT J
AU Llerena, L
   Castro, JW
   Acuña, ST
AF Llerena, Lucrecia
   Castro, John W.
   Acuna, Silvia T.
TI A pilot empirical study of applying a usability technique in an open
   source software project
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Open Source Software; Usability Techniques; Visual Brainstorming
AB Context The growth in the number of non-technical open source software (OSS) application users and the escalating use of these applications have redoubled the need for, and interest in, developing usable OSS. OSS communities are unclear about which techniques to use in each development process activity.
   Objective: The aim of our research is to adapt a usability technique (visual brainstorming) to an OSS project and evaluate the feasibility of its application.
   Method: We used the case study research method to investigate technique application and participation in a project. To do this, we participated as volunteers in the HistoryCal project.
   Results: We identified adverse conditions that were an obstacle to technique application (like it was not easy to recruit OSS users to participate) and modified the technique to make it applicable.
   Conclusion: We conclude that these changes were helpful for applying the technique using web artifacts like blogs.
C1 [Llerena, Lucrecia; Castro, John W.; Acuna, Silvia T.] Univ Autonoma Madrid, Dept Ingn Informat, Madrid, Spain.
C3 Autonomous University of Madrid
RP Llerena, L (corresponding author), Univ Autonoma Madrid, Dept Ingn Informat, Madrid, Spain.
EM lucrecia.llerena@estudiante.uam.es; john.castro@alumni.uam.es;
   silvia.acunna@uam.es
RI Acuña, Silvia/A-7395-2008; Castro, John W./V-4583-2019
OI Castro, John W./0000-0002-7938-7564; Llerena,
   Lucrecia/0000-0002-4562-6723
FU SENESCYT, Quevedo State Technical University [TIN2014-52129-R,
   TIN2014-60490-P]; e-Madrid project [S2013/ICE-2715]
FX This research was funded by the SENESCYT, Quevedo State Technical
   University, TIN2014-52129-R and TIN2014-60490-P projects and the
   e-Madrid project (S2013/ICE-2715).
CR [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2012, PROC 7 NORDIC C HUM, DOI DOI 10.1145/2399016.2399120
   Aryana B, 2015, UNIVERSAL ACCESS INF, V14, P265, DOI 10.1007/s10209-013-0344-x
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   Masson A.L.L., 2017, P CHI C EXT ABSTRACT, P1135, DOI [10.1145/3027063, DOI 10.1145/3027063]
   Osinski S., 2007, OPEN SOURCE DEV ADOP, P313
   Pagano D, 2013, EMPIR SOFTW ENG, V18, P1090, DOI 10.1007/s10664-012-9211-2
   Raza A, 2012, COMPUT HUM BEHAV, V28, P1109, DOI 10.1016/j.chb.2012.01.018
   Terry M, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P999
   Wilson C., 2013, Brainstorming and Beyond: A User-Centered Design Method
NR 10
TC 1
Z9 1
U1 0
U2 14
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2019
VL 106
BP 122
EP 125
DI 10.1016/j.infsof.2018.09.007
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HF6XJ
UT WOS:000454381300007
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Zubcoff, J
   Garrigós, I
   Casteleyn, S
   Mazón, JN
   Aguilar, JA
   Gomariz-Castillo, F
AF Zubcoff, Jose
   Garrigos, Irene
   Casteleyn, Sven
   Mazon, Jose-Norberto
   Aguilar, Jose-Alfonso
   Gomariz-Castillo, Francisco
TI Evaluating different i*-based approaches for selecting functional
   requirements while balancing and optimizing non-functional requirements:
   A controlled experiment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Controlled experiment; I*; Requirements engineering; Pareto efficiency
ID MODEL
AB Context A relevant question in requirements engineering is which set of functional requirements (FR) to prioritize and implement, while keeping non-functional requirements (NFR) balanced and optimized.
   Objective: We aim to provide empirical evidence that requirement engineers may perform better at the task of selecting FRs while optimizing and balancing NFRs using an alternative (automated) i* post-processed model, compared to the original i* model.
   Method: We performed a controlled experiment, designed to compare the original i* graphical notation, with our post-processed i* visualizations based on Pareto efficiency (a tabular and a radar chart visualization). Our experiment consisted of solving different exercises of various complexity for selecting FRs while balancing NFR. We considered the efficiency (time spent to correctly answer exercises), and the effectiveness (regarding time: time spent to solve exercises, independent of correctness; and regarding correctness of the answer, independent of time).
   Results: The efficiency analysis shows it is 3.51 times more likely to solve exercises correctly with our tabular and radar chart visualizations than with i*. Actually, i* was the most time-consuming (effectiveness regarding time), had a lower number of correct answers (effectiveness regarding correctness), and was affected by complexity. Visual or textual preference of the subjects had no effect on the score. Beginners took more time to solve exercises than experts if i* is used (no distinction if our Pareto-based visualizations are used).
   Conclusion: For complex model instances, the Pareto front based tabular visualization results in more correct answers, compared to radar chart visualization. When we consider effectiveness regarding time, the i* graphical notation is the most time consuming visualization, independent of the complexity of the exercise. Finally, regarding efficiency, subjects consume less time when using radar chart visualization than tabular visualization, and even more so compared to the original i* graphical notation.
C1 [Zubcoff, Jose; Garrigos, Irene; Mazon, Jose-Norberto; Gomariz-Castillo, Francisco] Univ Alicante, Alicante, Spain.
   [Casteleyn, Sven] Univ Jaume 1, Castellon De La Plana, Spain.
   [Aguilar, Jose-Alfonso] Univ Autonoma Sinaloa, Culiacan, Mexico.
C3 Universitat d'Alacant; Universitat Jaume I; Universidad Autonoma de
   Sinaloa
RP Zubcoff, J (corresponding author), Univ Alicante, Alicante, Spain.
EM jose.zubcoff@ua.es
RI Gomariz-Castillo, Francisco/E-2846-2017; Casteleyn, Sven/L-7187-2018;
   Aguilar-Calderón, José Alfonso/Q-3311-2019; Zubcoff, Jose/F-8858-2016;
   Mazón, Jose-Norberto/AAA-9817-2019; Garrigos, Irene/HGE-8463-2022;
   Zubcoff, Jose/H-9279-2015; Garrigos, Irene/R-6595-2018
OI Gomariz-Castillo, Francisco/0000-0003-4306-6643; Aguilar-Calderón, José
   Alfonso/0000-0003-2048-9600; Mazón, Jose-Norberto/0000-0001-7924-0880;
   Casteleyn, Sven/0000-0003-0572-5716; Zubcoff, Jose/0000-0002-9469-7747;
   Garrigos, Irene/0000-0001-5869-5245
FU Ramon y Cajal Program of the Spanish Government [RYC-2014-16606,
   TIN2016-78103-C2-2-R]; Spanish Ministry of Economy and Competitiveness
FX We thank all the anonymous participants that took part in the
   experiments. Sven Casteleyn is funded under the Ramon y Cajal Program of
   the Spanish Government, grant number RYC-2014-16606. This work has been
   partially supported by the Publi@City project (TIN2016-78103-C2-2-R)
   from the Spanish Ministry of Economy and Competitiveness.
CR Abirami S., 2015, COMPUTATIONAL INTELL, V33
   Abirami S., 2015, COMPUTATIONAL INTELL, V3
   Aguilar Calderon Jose Alfonso, 2012, Web Engineering. Proceedings 12th International Conference, ICWE 2012, P452, DOI 10.1007/978-3-642-31753-8_42
   Aguilar JA, 2011, LECT NOTES COMPUT SC, V6999, P14, DOI 10.1007/978-3-642-24574-9_4
   Almeida A., 2015, P 30 ANN
   Alzyoudi R., 2015, P INT C INT INF PROC, P6
   Ameller D., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P189, DOI 10.1109/RE.2010.32
   [Anonymous], 2002, AGILE SOFTWARE DEV S
   [Anonymous], 2010, P 2010 ICSE WORKSH S, DOI DOI 10.1145/1809111.1809128
   Austin M., 2006, Systems Engineering, V9, P129, DOI 10.1002/sys.20049
   Benestad HC, 2012, INT SYMP EMP SOFTWAR, P261, DOI 10.1145/2372251.2372300
   Broster I, 2011, SIGADA 2011: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON ADA AND RELATED TECHNOLOGIES, P1
   Buarque A., 2013, P 28 ANN ACM S APPL, P1305, DOI DOI 10.1145/2480362.2480605
   BULL CR, 1992, MEAS SCI TECHNOL, V3, P789, DOI 10.1088/0957-0233/3/9/001
   Cooper John R.  Jr., 2009, Fourth International Workshop on Requirements Engineering Visualization (REV 2009), P46, DOI 10.1109/REV.2009.4
   Douglas V. L. R., 2010, THESIS
   Duan C, 2009, REQUIR ENG, V14, P73, DOI 10.1007/s00766-009-0079-7
   Ernst N., 2006, 2006 First International Workshop on Requirements Engineering Visualization REV06 RE06 Workshop, P2, DOI DOI 10.1109/REV.2006.10
   Feather M.S., 2006, REV 06, 14th RE, P10
   FELDER RM, 1988, ENG EDUC, V78, P674
   Gabrysiak Gregor, 2009, Fourth International Workshop on Requirements Engineering Visualization (REV 2009), P41, DOI 10.1109/REV.2009.3
   Gemino A, 2004, REQUIR ENG, V9, P153, DOI 10.1007/s00766-003-0182-0
   Glinz M, 2007, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2007.45
   GOTEL OCZ, 2007, P 2 INT WORKSH REQ E
   Horkoff J., 2010, 2010 Fifth International Workshop on Requirements Engineering Visualization (REV), P1, DOI 10.1109/REV.2010.5625664
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   JACCARD J, 1984, PSYCHOL BULL, V96, P589, DOI 10.1037/0033-2909.96.3.589
   Jackson H.V., 1999, A Structured Approach for Classifying and Prioritizing Product Requirements
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Lix LM, 1996, REV EDUC RES, V66, P579, DOI 10.3102/00346543066004579
   Moody DL, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P171, DOI 10.1109/RE.2009.44
   Nasir M.H. N., 2011, Scientific Research and Essays, V6, P2174, DOI [DOI 10.5897/SRE10.1171, 10.5897/SRE10.1171]
   Nordbotten JC, 1999, INFORM SYST J, V9, P139, DOI 10.1046/j.1365-2575.1999.00052.x
   Pastor O, 2001, INFORM SYST, V26, P507, DOI 10.1016/S0306-4379(01)00035-7
   Pohl K., 2013, SEMINAL CONTRIBUTION, P63, DOI [10.1007/978-3-642-36926-1_5, DOI 10.1007/978-3-642-36926-1_5]
   Rahimi M, 2014, INT REQUIR ENG CONF, P253, DOI 10.1109/RE.2014.6912267
   Salado A, 2015, SYSTEMS ENG, V18, P472, DOI 10.1002/sys.21324
   Sayyad AS, 2013, INT WORK REAL ARTIF, P21, DOI 10.1109/RAISE.2013.6615200
   Shahin A, 2009, TOTAL QUAL MANAG BUS, V20, P1003, DOI 10.1080/14783360903181867
   Szidarovszky F., 1986, TECHNIQUES MULTIOBJE, P574
   Verner J, 2005, AUSTRALAS J INF SYST, V13, P225
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   Zhang Y, 2008, LECT NOTES COMPUT SC, V5025, P88, DOI 10.1007/978-3-540-69062-7_8
   Zhang YY, 2011, INFORM SOFTWARE TECH, V53, P761, DOI 10.1016/j.infsof.2011.02.001
NR 45
TC 10
Z9 10
U1 0
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2019
VL 106
BP 68
EP 84
DI 10.1016/j.infsof.2018.09.004
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HF6XJ
UT WOS:000454381300004
OA Green Published, Green Accepted
DA 2024-07-18
ER

PT J
AU Sánchez, AB
   Delgado-Pérez, P
   Segura, S
   Medina-Bulo, I
AF Sanchez, Ana B.
   Delgado-Perez, Pedro
   Segura, Sergio
   Medina-Bulo, Inmaculada
TI Performance mutation testing: Hypothesis and open questions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Performance testing; Mutation testing; Performance bugs
AB Performance bugs are common, costly, and elusive. Performance tests aim to detect performance bugs by running the program with specific inputs and determining whether the observed behaviour is acceptable. There not exist mechanisms, however, to assess the effectiveness of performance tests. Mutation testing is a technique to evaluate and enhance functional test suites by seeding artificial faults in the program under test. In this new idea paper, we explore the applicability of mutation testing to assess and improve performance tests. This novel approach is motivated with examples and open questions.
C1 [Sanchez, Ana B.; Segura, Sergio] Univ Seville, ETS Ingn Informat, Seville, Spain.
   [Delgado-Perez, Pedro; Medina-Bulo, Inmaculada] Univ Cadiz, Escuela Super Ingn, Cadiz, Spain.
C3 University of Sevilla; Universidad de Cadiz
RP Sánchez, AB (corresponding author), Univ Seville, ETS Ingn Informat, Seville, Spain.
EM anabsanchez@us.es; pedro.delgado@uca.es
RI Medina-Bulo, Inmaculada/L-5523-2014; Delgado-Pérez, Pedro/N-4289-2018;
   Jerez, Ana Belén Sánchez/R-4279-2017; Segura, Sergio/A-9615-2011
OI Medina-Bulo, Inmaculada/0000-0002-7543-2671; Delgado-Pérez,
   Pedro/0000-0003-1568-9288; Jerez, Ana Belén Sánchez/0000-0003-1473-0955;
   Segura, Sergio/0000-0001-8816-6213
FU European Commission (FEDER); Spanish Government [BELI TIN2015-70560-R,
   DArDOS TIN2015-65845-C3-3-R]
FX This work was partially supported by the European Commission (FEDER) and
   the Spanish Government projects BELI TIN2015-70560-R and DArDOS
   TIN2015-65845-C3-3-R.
CR Delgado-Pérez P, 2015, ANN TELECOMMUN, V70, P137, DOI 10.1007/s12243-014-0445-4
   Langdon WB, 2015, IEEE T EVOLUT COMPUT, V19, P118, DOI 10.1109/TEVC.2013.2281544
   Molyneaux I., 2009, The Art of Application Performance Testing: Help for Programmers and Quality Assurance, V1st
   Nilsson R., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P306, DOI 10.1109/CMPSAC.2004.1342848
   Nistor A, 2013, IEEE WORK CONF MIN S, P237, DOI 10.1109/MSR.2013.6624035
   Olivo O, 2015, ACM SIGPLAN NOTICES, V50, P369, DOI [10.1145/2813885.2737966, 10.1145/273924.2737966]
   Papadakis M., 2017, ADV COMPUT
   Segura S, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P7, DOI 10.1109/ICSE-NIER.2017.16
   Xu GQ, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P419, DOI 10.1145/1542476.1542523
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
NR 10
TC 4
Z9 5
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2018
VL 103
BP 159
EP 161
DI 10.1016/j.infsof.2018.06.015
PG 3
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GU9ZY
UT WOS:000445717000011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Da Silva, TS
   Silveira, MS
   Maurer, F
   Silveira, FF
AF Da Silva, Tiago Silva
   Silveira, Milene Selbach
   Maurer, Frank
   Silveira, Fabio Fagundes
TI The evolution of agile UXD
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
AB Context: Agile User eXperience Design (Agile UXD) is a current theme and a trending topic for the future of software development. The integration of UX Design within Agile development is seen as one of the frontiers for Agile Methods as a balance between upfront design as advocated by UX and the you-ain't-gonna-need-it (YAGNI) principle from the agile community must be found.
   Objective: In this paper, we analyze the evolution and current state of Agile UXD to provide a brief overview of the topic and to point out still unaddressed gaps, challenges, and future trends.
   Method: We systematically analyzed the existing research literature on how this topic evolved over time. We identified three categories with distinctive sets of work and classified them as Early, Middle and Recent years.
   Results: We noticed that the Process and Practice dimension has already crossed the line that separates Agile and UXD, the People and Social dimension is crossing this line right now, and the Technology and Artifact is the dimension that took the longest to be addressed, and it did not cross the line yet. Crossing the line means that there is already a full understanding from the Agile side of UX needs and vice versa.
   Conclusion: Agile UXD is a need for today's software development teams. However, integrated teams still need to understand that UXD is not a role, but discipline and culture for the whole Agile environment.
C1 [Da Silva, Tiago Silva; Silveira, Fabio Fagundes] Univ Fed Sao Paulo, Sao Paulo, SP, Brazil.
   [Silveira, Milene Selbach] Pontificia Univ Catolica Rio Grande do Sul, Porto Alegre, RS, Brazil.
   [Maurer, Frank] Univ Calgary, Calgary, AB, Canada.
C3 Universidade Federal de Sao Paulo (UNIFESP); Pontificia Universidade
   Catolica Do Rio Grande Do Sul; University of Calgary
RP Da Silva, TS (corresponding author), Univ Fed Sao Paulo, Sao Paulo, SP, Brazil.
EM silvadasilva@unifesp.br
RI Silveira, Milene/ABA-1886-2021; da Silva, Tiago Silva/AAW-1791-2021;
   Fagundes Silveira, Fabio/H-2092-2018
OI Silveira, Milene/0000-0003-2159-551X; Fagundes Silveira,
   Fabio/0000-0002-2063-2959; Maurer, Frank/0000-0002-0240-715X
CR [Anonymous], 2011, EV AG MAN 10 ANN REU
   Barksdale J. T., 2012, INT J AGILE EXTREME, V1, P152
   Beyer H., 2010, SYNTHESIS LECT HUMAN, P80
   Brhel M, 2015, INFORM SOFTWARE TECH, V61, P163, DOI 10.1016/j.infsof.2015.01.004
   Brown D. D., 2013, AGILE USER EXPERIENC, P256
   Cockton G, 2016, HUMAN COMPU, P1, DOI 10.1007/978-3-319-32165-3_1
   Dingsoyr T., 2010, AGILE SOFTWARE DEV C, P238
   Esposito D., 2016, MODERN WEB DEV UNDER, P448
   Gothelff J., 2016, LEAN UX DESIGNING GR
   Jongerius P., 2013, GET AGILE SCRUM UX D, P144
   Kitchenham BA., 2007, EBSE2007012007 KEEL
   Klein L., 2013, UX LEAN STARTUPS FAS, P240
   Larusdottir M, 2014, PROCEEDINGS OF THE NORDICHI'14: THE 8TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION: FUN, FAST, FOUNDATIONAL, P817, DOI 10.1145/2639189.2654836
   Mostafa D., 2013, THESIS
   Ratcliff L., 2011, AGILE EXPERIENCE DES, V1, P320
   Seffah A, 2004, COMMUN ACM, V47, P71, DOI 10.1145/1035134.1035136
   Version One, 2015, STAT AG SURV 2014
NR 17
TC 21
Z9 22
U1 1
U2 20
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2018
VL 102
BP 1
EP 5
DI 10.1016/j.infsof.2018.04.008
PG 5
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO6AL
UT WOS:000440116400001
DA 2024-07-18
ER

PT J
AU Usman, M
   Britto, R
   Damm, LO
   Börstler, J
AF Usman, Muhammad
   Britto, Ricardo
   Damm, Lars-Ola
   Borstler, Jurgen
TI Effort estimation in large-scale software development: An industrial
   case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Effort estimation; Large-scale software development; Global and agile
   software development
ID PLANNING POKER; PROJECTS
AB Context: Software projects frequently incur schedule and budget overruns. Planning and estimation are particularly challenging in large and globally distributed agile projects. While software engineering researchers have been investigating effort estimation for many years to help practitioners to improve their estimation processes, there is little empirical research about effort estimation in large-scale distributed projects involving agile teams.
   Objective: The objective of this paper is three-fold: i) To identify how effort estimation is carried out in large-scale distributed agile projects; ii) to analyze the accuracy of the effort estimation processes in large-scale distributed agile projects; and iii) to identify and investigate the factors that impact the accuracy of effort estimates in large-scale distributed agile projects.
   Method: We performed an exploratory longitudinal case study. The data collection was operationalized through archival research and semi-structured interviews.
   Results: The main findings of the studied case are: 1) A two-stage estimation process, with re-estimation at the analysis stage, improves the accuracy of the effort estimates; 2) underestimation is the dominant trend; 3) less mature teams incur larger effort overruns; 4) requirements with larger size/scope incur larger effort overruns; 5) requirements developed in multi-site settings incur larger effort overruns as compared to requirements developed in a co-located setting; 6) requirements priorities impact the accuracy of the effort estimates.
   Conclusion: A two-stage effort estimation process can improve effort estimation accuracy and seems to address some of the challenges in large-scale agile software development. To improve effort estimates one needs to consider team maturity, distribution as well as requirements size and priorities.
C1 [Usman, Muhammad; Britto, Ricardo; Borstler, Jurgen] Blekinge Inst Technol, Dept Software Engn, S-37179 Karlskrona, Sweden.
   [Damm, Lars-Ola] Ericsson, Stockholm, Sweden.
C3 Blekinge Institute Technology; Ericsson
RP Usman, M (corresponding author), Blekinge Inst Technol, Dept Software Engn, S-37179 Karlskrona, Sweden.
EM muhammad.usman@bth.se; ricardo.britto@bth.se;
   lars-ola.damm@ericsson.com; jurgen.borstler@bth.se
RI Börstler, Jürgen/IWE-4001-2023
OI Börstler, Jürgen/0000-0003-0639-4234
FU Swedish Knowledge Foundation [2012/0200]; Ericsson Software Research
FX This research work is partially supported by the Swedish Knowledge
   Foundation under the grant Nr. 2012/0200 (2013-2016) and Ericsson
   Software Research.
CR Bjtimdal P., 2010, GLOB SOFTW PROJ MAN, P64
   Bondi AB, 2009, INT CONF GLOBAL SOFT, P254, DOI 10.1109/ICGSE.2009.34
   BREUSCH TS, 1979, ECONOMETRICA, V47, P1287, DOI 10.2307/1911963
   Britto R, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2016.146
   Britto R, 2015, INT CONF GLOBAL SOFT, P38, DOI 10.1109/ICGSE.2015.10
   Britto R, 2014, INT CONF GLOBAL SOFT, P135, DOI 10.1109/ICGSE.2014.11
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Conchúir EO, 2009, COMMUN ACM, V52, P127, DOI 10.1145/1536616.1536648
   COOK RD, 1977, TECHNOMETRICS, V19, P15, DOI 10.2307/1268249
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   DURBIN J, 1950, BIOMETRIKA, V37, P409, DOI 10.1093/biomet/37.3-4.409
   Espinosa JA, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P12
   Evbota F., 2016, Agile Processes in Software Engineering and Extreme Programming, V251, P28
   Grimstad S., 2006, International Symposium on Empirical Software Engineering, V58, DOI DOI 10.1145/1159733.1159745
   Grimstad S., 2005, SOFTW METR 2005 11 I
   Gumm DC, 2006, IEEE SOFTWARE, V23, P45, DOI 10.1109/MS.2006.122
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Holmstrom H, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ICGSE.2006.261210
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M., 2003, Proc. of Conference on Empirical Assessment in Software Engineering, P117
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Jorgensen Magne., 2007, 1 INT WORKSHOP SOFTW, P15
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kolmogorov A., 1933, DETERMINAZIONE EMPIR, V4
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   LEDERER AL, 1993, J INF TECHNOL-UK, V8, P22, DOI 10.1057/jit.1993.4
   Lenarduzzi V, 2015, LECT NOTES BUS INF P, V212, P105, DOI 10.1007/978-3-319-18612-2_9
   Mahnic V, 2012, J SYST SOFTWARE, V85, P2086, DOI 10.1016/j.jss.2012.04.005
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Molokken-Ostvold K, 2007, AGILE 2007, PROCEEDINGS, P72, DOI 10.1109/AGILE.2007.57
   Molokken-Ostvold K, 2008, J SYST SOFTWARE, V81, P2106, DOI 10.1016/j.jss.2008.03.058
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Ramasubbu N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P261, DOI 10.1145/1985793.1985830
   Ropponen J, 2000, IEEE T SOFTWARE ENG, V26, P98, DOI 10.1109/32.841112
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Shepperd M., 2000, Empirical Software Engineering, V5, P175, DOI 10.1023/A:1026582314146
   Tanveer B, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1862
   Tanveer B, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP), P41, DOI [10.1109/ICSSP.2016.014, 10.1145/2904354.2904373]
   Trochim W., 2015, ESSENTIAL KNOWLEDGE
   Usman M., 2014, PROMISE '14: Proceedings of the 10th International Conference on Predictive Models in Software Engineering, page, P82
   Usman M., 2015, P 19 INT C EVALUATIO, P1, DOI DOI 10.1145/2745802.2745813
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
NR 44
TC 26
Z9 30
U1 3
U2 27
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2018
VL 99
BP 21
EP 40
DI 10.1016/j.infsof.2018.02.009
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GG5XA
UT WOS:000432767900003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Laghouaouta, Y
   Anwar, A
   Nassar, M
   Coulette, B
AF Laghouaouta, Youness
   Anwar, Adil
   Nassar, Mahrnoud
   Coulette, Bernard
TI A dedicated approach for model composition traceability
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model traceability; Model composition; Aspect-oriented modeling; Graph
   transformations; NFR framework
AB Context: Software systems are often too complex to be expressed by a single model. Recognizing this, the Model Driven Engineering (MDE) proposes multi-modeling approaches to allow developers to describe a system from different perspectives. In this context, model composition has become important since the combination of those partial representations is inevitable. Nevertheless, no approach has been defined for keeping track of the composition effects, and this operation has been overshadowed by model transformations.
   Objective: This paper presents a traceability approach dedicated to the composition of models. Two aspects of quality are considered: producing relevant traces; and dealing with scalability.
   Method: The composition of softgoal trees has been selected to motivate the need for tracing the composition of models and to illustrate our approach. The base principle is to augment the specification of the composition with the behavior needed to generate the expected composed model accompanied with a trace model. This latter includes traces of the execution details. For that, traceability is considered as a crosscutting concern and encapsulated in an aspect. As part of the proposal, an Eclipse plug-in has been implemented as a tool support. Besides, a comparative experiment has been conducted to assess the traces relevance. We also used the regression method to validate the scalability of the tool support.
   Results: Our experiments show that the proposed approach allows generating relevant traces. In addition, the obtained results reveal that tracing a growing number of elements causes an acceptable increase of response time.
   Conclusion: This paper presents a traceability approach dedicated to the composition of models and its application to softgoal trees. The experiment results reveal that our proposal considers the composition specificities for producing valuable traceability information while supporting scalability. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Laghouaouta, Youness; Nassar, Mahrnoud] Mohammed V Univ Rabat, Rabat IT Ctr, ADMIR Lab, IMS Team, Rabat, Morocco.
   [Anwar, Adil] Mohammed V Univ Rabat, SIWEB Team, EMI, Rabat, Morocco.
   [Coulette, Bernard] Univ Toulouse, IRIT Lab, Toulouse, France.
C3 Mohammed V University in Rabat; Mohammed V University in Rabat;
   Universite de Toulouse; Universite Toulouse III - Paul Sabatier
RP Laghouaouta, Y (corresponding author), Mohammed V Univ Rabat, Rabat IT Ctr, ADMIR Lab, IMS Team, Rabat, Morocco.
EM y.laghouaouta@um5s.net.ma
OI Nassar, Mahmoud/0000-0001-7683-5862
CR Aizenbud-Reshef N, 2006, IBM SYST J, V45, P515, DOI 10.1147/sj.453.0515
   Amar B, 2010, ICSOFT 2010: PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 2, P73
   Amar B, 2010, IEEE INT ENTERP DIST, P143, DOI 10.1109/EDOC.2010.12
   Andries M, 1999, SCI COMPUT PROGRAM, V34, P1, DOI 10.1016/S0167-6423(98)00023-9
   [Anonymous], 2008, 4 ECMDA TRAC WORKSH
   [Anonymous], 2013, TABLOIDISATION ONLIN
   [Anonymous], 1997, Handbook of Graph Grammars and Computing by Graph Transformation
   [Anonymous], 2015, THE EPSILON BOOK
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4066, P346
   Chung L, 2012, Non-Functional Requirements in Software Engineering, V5
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   Filman R., 2004, ASPECT ORIENTED SOFT
   France R, 2004, IEE P-SOFTW, V151, P173, DOI 10.1049/ip-sen:20040920
   Galvao I, 2007, IEEE INT ENTERP DIST, P313, DOI 10.1109/EDOC.2007.42
   Gansner E., 2006, DRAWING GRAPHS DOT T
   Gansner ER, 2000, SOFTWARE PRACT EXPER, V30, P1203, DOI 10.1002/1097-024X(200009)30:11<1203::AID-SPE338>3.0.CO;2-N
   Garshol L. M., BNF EBNF WHAT ARE TH
   Gotel O., 2012, Software and Systems Traceability, P343, DOI DOI 10.1007/978
   Grammel Birgit., 2010, ECMFA TW 10 P 6 ECMF, P7
   Guerra E, 2010, LECT NOTES COMPUT SC, V6394, P376
   Heaven W., 2004, IEE Proceedings-Software, V151, P10, DOI 10.1049/ip-sen:20040297
   Hildebrandt S., 2013, ELECTR COMMUN EASST, V57
   JEANNERET C, 2008, AOM 08, P1, DOI DOI 10.1145/1404920.1404921
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Jouault F., 2005, TRAC WORKSH ECMDA TW, P29
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Klar F., 2009, P 5 ECMDA TRAC WORKS, P39
   Kolovos D.S., 2006, ECL MOD S
   Kolovos D. S., 2006, EUR C MOD DRIV ARCH
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4199, P215
   Laghouaouta Youness, 2014, Journal of Software, V9, P2813, DOI 10.4304/jsw.9.11.2813-2822
   Laghouaouta Y., 2014, IEEE 8 INT C RES CHA, P1, DOI DOI 10.1109/RCIS.2014.6861075
   Laghouaouta Y., 2015, ENTERPRISE BUSINESS, P461, DOI [10.1007/978-3-319-19237-6_29, DOI 10.1007/978-3-319-19237-6_29]
   Laleau R, 2008, TRLACL20087
   Vara JM, 2014, IEEE T SOFTWARE ENG, V40, P555, DOI 10.1109/TSE.2014.2316132
   Paige RF, 2011, SOFTW SYST MODEL, V10, P469, DOI 10.1007/s10270-010-0158-8
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Spanoudakis G, 2005, HANDBOOK OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, VOL 3: RECENT ADVANCES, P395, DOI 10.1142/9789812775245_0014
   Spinczyk O., 2002, CR PIT 02 P 40 INT C, P53
   Supakkul S, 2005, THIRD ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGMENT AND APPLICATIONS, PROCEEDINGS, P112, DOI 10.1109/SERA.2005.19
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Taentzer G., 2005, WORKSH MOD TRANSF PR
   Varró D, 2004, LECT NOTES COMPUT SC, V3273, P290
   von Knethen A, 2003, PROC IEEE INT CONF S, P246, DOI 10.1109/ICSM.2003.1235427
   Walderhaug S., 2008, DESIGNING SOFTWARE I, P133, DOI DOI 10.4018/978-1-59904-699-0.CH006
   Wei B, 2010, ASIA PAC SOFWR ENG, P23, DOI 10.1109/APSEC.2010.13
   Whittle J, 2008, LECT NOTES COMPUT SC, V5002, P16
NR 48
TC 5
Z9 5
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2017
VL 91
BP 142
EP 159
DI 10.1016/j.infsof.2017.07.002
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FG3DV
UT WOS:000410017900009
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Mahdavi-Hezavehi, S
   Durelli, VHS
   Weyns, D
   Avgeriou, P
AF Mahdavi-Hezavehi, Sara
   Durelli, Vinicius H. S.
   Weyns, Danny
   Avgeriou, Paris
TI A systematic literature review on methods that handle multiple quality
   attributes in architecture-based self-adaptive systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
AB Context: Handling multiple quality attributes (QAs) in the domain of self-adaptive systems is an understudied research area. One well-known approach to engineer adaptive software systems and fulfill QAs of the system is architecture-based self-adaptation. In order to develop models that capture the required knowledge of the QAs of interest, and to investigate how these models can be employed at runtime to handle multiple quality attributes, we need to first examine current architecture-based self-adaptive methods.
   Objective: In this paper we review the state-of-the-art of architecture-based methods for handling multiple QAs in self-adaptive systems. We also provide a descriptive analysis of the collected data from the literature.
   Method: We conducted a systematic literature review by performing an automatic search on 28 selected venues and books in the domain of self-adaptive systems. As a result, we selected 54 primary studies which we used for data extraction and analysis.
   Results: Performance and cost are the most frequently addressed set of QAs. Current self-adaptive systems dealing with multiple QAs mostly belong to the domain of robotics and web-based systems paradigm. The most widely used mechanisms/models to measure and quantify QAs sets are QA data variables. After QA data variables, utility functions and Markov chain models are the most common models which are also used for decision making process and selection of the best solution in presence of many alternatives. The most widely used tools to deal with multiple QAs are PRISM and IBM's autonomic computing toolkit. KLAPER is the only language that has been specifically developed to deal with quality properties analysis.
   Conclusions: Our results help researchers to understand the current state of research regarding architecture-based methods for handling multiple QAs in self-adaptive systems, and to identity areas for improvement in the future. To summarize, further research is required to improve existing methods performing tradeoff analysis and preemption, and in particular, new methods may be proposed to make use of models to handle multiple QAs and to enhance and facilitate the tradeoffs analysis and decision making mechanism at runtime. (C) 2017 Published by Elsevier B.V.
C1 [Mahdavi-Hezavehi, Sara; Durelli, Vinicius H. S.; Avgeriou, Paris] Univ Groningen, Fac Sci & Engn, Nijenborgh 9, NL-9747 AG Groningen, Netherlands.
   [Mahdavi-Hezavehi, Sara; Durelli, Vinicius H. S.] Univ Groningen, Room 576 Bernoulliborg, NL-9700 AK Groningen, Netherlands.
   [Durelli, Vinicius H. S.] Univ Sao Paulo, Ctr 400, Inst Ciencias Matemat & Comp, Ave Trabalhador Sancarlense, BR-13566590 Sao Carlos, SP, Brazil.
   [Weyns, Danny] Katholieke Univ Leuven, Dept Comp Sci, BE-3001 Leuven, Belgium.
   [Mahdavi-Hezavehi, Sara; Weyns, Danny] Linnaeus Univ, Dept Comp Sci, Vaxjo, Sweden.
   [Avgeriou, Paris] Room 574 Bernoulliborg, NL-9700 AK Groningen, Netherlands.
C3 University of Groningen; University of Groningen; Universidade de Sao
   Paulo; KU Leuven; Linnaeus University
RP Mahdavi-Hezavehi, S (corresponding author), Univ Groningen, Fac Sci & Engn, Nijenborgh 9, NL-9747 AG Groningen, Netherlands.; Mahdavi-Hezavehi, S (corresponding author), Univ Groningen, Room 576 Bernoulliborg, NL-9700 AK Groningen, Netherlands.; Mahdavi-Hezavehi, S (corresponding author), Linnaeus Univ, Dept Comp Sci, Vaxjo, Sweden.
EM s.mahdavi.hezavehi@rug.nl; durelli@icmc.usp.br; danny.weyns@kuleuven.be;
   paris@cs.rug.nl
RI ; Weyns, Danny/J-1267-2018
OI Avgeriou, Paris/0000-0002-7101-0754; Weyns, Danny/0000-0002-1162-0817
CR Ali MS, 2010, INFORM SOFTWARE TECH, V52, P871, DOI 10.1016/j.infsof.2010.05.003
   Andersson J, 2009, LECT NOTES COMPUT SC, V5525, P27, DOI 10.1007/978-3-642-02161-9_2
   [Anonymous], 250122008 ISOIEC
   [Anonymous], 2001, 912612001 ISOIEC
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bass L., 1997, SOFTWARE ARCHITECTUR
   Calinescu R, 2013, Assurances for Self-Adaptive Systems, V7740, P297, DOI DOI 10.1007/978-3-642-36249-1_11
   Casanova P, 2011, LECT NOTES COMPUT SC, V6903, P261, DOI 10.1007/978-3-642-23798-0_29
   Cheng B. H. C., 2014, USING MODELS RUNTIME, P101, DOI [DOI 10.1007/978-3-319-08915-7_4, 10.1007/978-3-319-08915-7_4]
   Cheng S.-W., 2006, INT WORKSH SELF AD S, P2, DOI DOI 10.1145/1137677.1137679
   Cheng SW, 2012, J SYST SOFTWARE, V85, P2860, DOI 10.1016/j.jss.2012.02.060
   Cheng SW, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P276
   Computing A., 2005, ARCHITECTURAL BLUEPR
   DannyWeyns Bradley, 2013, Revised Selected and Invited Papers, P76, DOI [10.1007/978-3-642-35813-5_4, DOI 10.1007/978-3-642-35813-5_4]
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Kitchenham B.A., GUIDELINES PERFORMIN
   Mahdavi-Hezavehi S, 2013, INFORM SOFTWARE TECH, V55, P320, DOI 10.1016/j.infsof.2012.08.010
   Mikic-rakic M., 2004, TAILORABLE ENV ASSES
   Patikirikorala T., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P33, DOI 10.1109/SEAMS.2012.6224389
   Perez-Palacin D, 2014, J SYST SOFTWARE, V87, P1, DOI 10.1016/j.jss.2013.07.053
   Raheja R., 2010, IMPROVING ARCHITECTU
   Rensink A., 2004, GROOVE SIMULATOR TOO, P479, DOI [10.1007/978-3-540-25959-6_40, DOI 10.1007/978-3-540-25959-6_40]
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Tamura G., 2013, IMPROVING CONTEXT AW, P153
   Weyns D., 2013, CLAIMS EVIDENCE ARCH
   Weyns D., 2014, ASSURANCES SELF ADAP, P13511
   Weyns D, 2012, P INT C COMP SCI SOF, P67, DOI [10.1145/2347583.2347592, DOI 10.1145/2347583.2347592]
   Zhang H., 2010, SEARCHING RELEVANT S
   Zhuoqun Yang, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P55, DOI 10.1007/978-3-319-05843-6_5
   Zouari M., 2013, AUTOMATED DEPLOYMENT
NR 31
TC 43
Z9 45
U1 1
U2 27
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2017
VL 90
BP 1
EP 26
DI 10.1016/j.infsof.2017.03.013
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EZ9JK
UT WOS:000405046400001
OA Green Published
DA 2024-07-18
ER

PT J
AU Kebir, S
   Borne, I
   Meslati, D
AF Kebir, Salim
   Borne, Isabelle
   Meslati, Djamel
TI A genetic algorithm-based approach for automated refactoring of
   component-based software
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Genetic algorithm; Refactoring; Component-based software engineering;
   Bad smells
ID EVOLUTIONARY; SUPPORT
AB Context: During its lifecycle, a software system undergoes repeated modifications to quickly fulfill new requirements, but its underlying design is not properly adjusted after each update. This leads to the emergence of bad smells. Refactoring provides a de facto behavior-preserving approach to eliminate these anomalies. However, manually determining and performing useful refactorings is a formidable challenge, as stated in the literature. Therefore, framing object-oriented automated refactoring as a search-based technique has been proposed. However, the literature shows that search-based refactoring of component based software has not yet received proper attention.
   Objective: This paper presents a genetic algorithm-based approach for the automated refactoring of component-based software. This approach consists of detecting component-relevant bad smells and eliminating these bad smells by searching for the best sequence of refactorings using a genetic algorithm. Method: Our approach consists of four steps. The first step includes studying the literature related to component-relevant bad smells and formulating bad smell detection rules. The second step involves proposing a catalog of component-relevant refactorings. The third step consists of constructing a source code model by extracting facts from the source code of a component-based software. The final step seeks to identify the best sequence of refactorings to apply to reduce the presence of bad smells in the source code model using a genetic algorithm. The latter uses bad smell detection rules as a fitness function and the catalog of refactorings as a means to explore the search space.
   Results: As a case study, we conducted experiments on an unbiased set of four real-world component based applications. The results indicate that our approach is able to efficiently reduce the total number of bad smells by more than one half, which is an acceptable value compared to the recent literature. Moreover, we determined that our approach is also accurate in refactoring only components suffering from bad smells while leaving the remaining components untouched whenever possible. Furthermore, a statistical analysis shows that our genetic algorithm outperforms random search and local search in terms of efficiency and accuracy on almost all the systems investigated in this work.
   Conclusion: This paper presents a search-based approach for the automated refactoring of component based software. To the best of our knowledge, our approach is the first to focus on component-based refactoring, whereas the state-of-the-art approaches focus only on object-oriented refactoring. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Kebir, Salim] Ecole Natl Super Informat, BP 68 M Oued Smar, Algiers, Algeria.
   [Borne, Isabelle] Univ Bretagne Sud, IRISA, Vannes, France.
   [Kebir, Salim; Meslati, Djamel] Univ Badji Mokhtar, Lab Ingn Syst Complexes LISCO, Annaba, Algeria.
C3 Ecole Nationale Superieure d'Informatique; Universite Badji Mokhtar -
   Annaba
RP Kebir, S (corresponding author), Ecole Natl Super Informat, BP 68 M Oued Smar, Algiers, Algeria.
EM s_kebir@esi.dz
RI Borne, Isabelle/IAP-8430-2023
CR [Anonymous], 220 JSR SUN MICR
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bavota G., 2014, Evolving Software Systems, P103, DOI [DOI 10.1007/978-3-642-45398-44, 10.1007/978-3-642-45398-44]
   Bavota G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559935
   Bieman J. M., 1995, SIGSOFT Software Engineering Notes, P259, DOI 10.1145/223427.211856
   Birkmeier D, 2009, LECT NOTES COMPUT SC, V5582, P1, DOI 10.1007/978-3-642-02414-6_1
   Bruneton E, 2006, SOFTWARE PRACT EXPER, V36, P1257, DOI 10.1002/spe.767
   Crnkovic I, 2011, IEEE T SOFTWARE ENG, V37, P593, DOI 10.1109/TSE.2010.83
   Derrac J, 2011, SWARM EVOL COMPUT, V1, P3, DOI 10.1016/j.swevo.2011.02.002
   Eiben AE, 2011, SWARM EVOL COMPUT, V1, P19, DOI 10.1016/j.swevo.2011.02.001
   Eiben AE, 1999, IEEE T EVOLUT COMPUT, V3, P124, DOI 10.1109/4235.771166
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Garcia J, 2009, LECT NOTES COMPUT SC, V5581, P146, DOI 10.1007/978-3-642-02351-4_10
   Ghaith Shadi, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P121, DOI 10.1007/978-3-642-33119-0_10
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   Jacobson I., 2004, OBJECT ORIENTED SOFT
   Jensen und A.C., 2010, Proceedings of the 12th Annual Conference on Genetic and Evolutionary Computation. GECCO '10, P1341
   Kataoka Y, 2001, PROC IEEE INT CONF S, P736, DOI 10.1109/ICSM.2001.972794
   Kebir S., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P181, DOI 10.1109/WICSA-ECSA.212.26
   Kebir S., 2015, BICT 2015
   Kebir S, 2016, ENASE: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL SOFTWARE APPROACHES TO SOFTWARE ENGINEERING, P210, DOI 10.5220/0005891602100215
   Kessentini M, 2011, CONF PROC INT SYMP C, P81, DOI 10.1109/ICPC.2011.22
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Lau KK, 2007, IEEE T SOFTWARE ENG, V33, P709, DOI 10.1109/TSE.2007.70726
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Liu H, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P265, DOI 10.1145/1595696.1595738
   Macia I, 2013, EUR CON SFTWR MTNCE, P177, DOI 10.1109/CSMR.2013.27
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   METZ CE, 1978, SEMIN NUCL MED, V8, P283, DOI 10.1016/S0001-2998(78)80014-2
   Mitchell M., 1999, INTRO GENETIC ALGORI, DOI DOI 10.1016/S0898-1221(96)90227-8
   Mkaouer MW, 2014, LECT NOTES COMPUT SC, V8636, P168
   Moghadam IH, 2011, LECT NOTES COMPUT SC, V6956, P70, DOI 10.1007/978-3-642-23716-4_9
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Moore I, 1996, ACM SIGPLAN NOTICES, V31, P235, DOI 10.1145/236338.236361
   Munro M.J., 2005, SOFTW METR 2005 11 I, P15
   O'Keeffe M., 2006, SOFTW MAINT REENG 20
   O'Keeffe M, 2008, J SOFTW MAINT EVOL-R, V20, P345, DOI 10.1002/smr.378
   Ouni A, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1461
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Qayum F., 2011, ECEASST, V38
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Romano D, 2014, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSME.2014.57
   Sahraoui HA, 2000, PROC IEEE INT CONF S, P154, DOI 10.1109/ICSM.2000.883034
   Sanchez A, 2015, LECT NOTES COMPUT SC, V8938, P147, DOI 10.1007/978-3-319-15201-1_10
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Seriai A, 2006, J COMPUT, V1, P40, DOI 10.4304/jcp.1.5.40-52
   SYSWERDA G, 1989, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P2
   Tsantalis N, 2015, IEEE T SOFTWARE ENG, V41, P1055, DOI 10.1109/TSE.2015.2448531
   Vale G, 2014, 2014 EIGHTH BRAZILIAN SYMPOSIUM ON SOFTWARE COMPONENTS, ARCHITECTURES AND REUSE (SBCARS), P84, DOI 10.1109/SBCARS.2014.21
   Vale T, 2016, J SYST SOFTWARE, V111, P128, DOI 10.1016/j.jss.2015.09.019
   von Detten M, 2014, SOFTW SYST MODEL, V13, P1239, DOI 10.1007/s10270-013-0341-9
   Wang Z-J., 2005, International Journal of Information Technology, V2, P229
   Wohlin C., 2000, Experimentation_in_Software_Engineering:_An_Introduction
NR 58
TC 15
Z9 21
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2017
VL 88
BP 17
EP 36
DI 10.1016/j.infsof.2017.03.009
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW2TI
UT WOS:000402348500002
DA 2024-07-18
ER

PT J
AU Lavoie, T
   Mérineau, M
   Merlo, E
   Potvin, P
AF Lavoie, Thierry
   Merineau, Mathieu
   Merlo, Ettore
   Potvin, Pascal
TI A case study of ITCN-3 test scripts clone analysis in an industrial
   telecommunication setting
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Clone detection; Telecommunications software; Test
ID SOFTWARE PRODUCT LINES; CODE; VARIANTS; ACCURATE; SYSTEM
AB Context: This paper presents a novel experiment focused on detecting and analyzing clones in test suites written in TTCN-3, a standard telecommunication test script language, for different industrial projects.
   Objective: This paper investigates frequencies, types, and similarity distributions of, TFCN-3 clones in test scripts from three industrial projects in telecommunication. We also compare the distribution of clones in TTCN-3 test scripts with the distribution of clones in C/C++ and Java projects from the telecommunication domain. We then perform a statistical analysis to validate the significance of differences between these distributions.
   Method: Similarity is computed using CLAN, which compares metrics syntactically derived from script fragments. Metrics are computed from the Abstract Syntax Trees produced by a TTCN-3 parser called Titan developed by Ericsson as an Eclipse plugin. Finally, clone classification of similar script pairs is computed using the Longest Common Subsequence algorithm on token types and token images.
   Results: This paper presents figures and diagrams reporting TTCN-3 clone frequencies, types, and similarity distributions. We show that the differences between the distribution of clones in test scripts and the distribution of clones in applications are statistically significant. We also present and discuss some lessons that can be learned about the transferability of technology from this study.
   Conclusion: About 24% of fragments in the test suites are cloned, which is a very high proportion of clones compared to what is generally found in source code. The difference in proportion of Type-1 and Type-2 clones is statistically significant and remarkably higher in TTCN-3 than in source code. Type-1 and Type-2 clones represent 82.9% and 15.3% of clone fragments for a total of 98.2%. Within the projects this study investigated, this represents more and easier potential re-factoring opportunities for test scripts than for code. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Lavoie, Thierry; Merineau, Mathieu; Merlo, Ettore] Ecole Polytech, Dept Comp & Software Engn, CP 6079,Succ Ctr Ville, Montreal, PQ H3C 3A7, Canada.
   [Potvin, Pascal] Ericsson, 8400 Decarie, Montreal, PQ H4P 2N2, Canada.
   [Lavoie, Thierry] Synopsys Canada, Software Integr Grp, 800 6th Ave SW,Suite 410, Calgary, AB T2P 3G3, Canada.
C3 Universite de Montreal; Polytechnique Montreal; AstraZeneca; Synopsys
   Inc
RP Merlo, E (corresponding author), Ecole Polytech, Dept Comp & Software Engn, CP 6079,Succ Ctr Ville, Montreal, PQ H3C 3A7, Canada.
EM thierty-m.lavoie@polymtl.ca; mathieu.merineau@polymtl.ca;
   ettore.merlo@polymtl.ca; pascal.potvin@ericsson.com
FU Ericsson
FX This research was funded by Ericsson. We wish to thank Renaud Lepage,
   Mario Bonja, and Fanny Lalonde Levesque for their contributions to this
   paper and the related discussions. We also wish to thank Kristof
   Szabados for his technical assistance and insights into the Titan
   environment. We also wish to thank the reviewers for their helpful
   comments on this paper.
CR Al-Hajjaji M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P197, DOI 10.1145/2648511.2648532
   [Anonymous], 2010, IEEE INT C SOFTWAREM
   [Anonymous], CMUSEI2001TR022
   [Anonymous], 2010, P JOINT ERCIM WORKSH
   Asaithambi S.P.A., 2012, SPLASH 12, P33
   Asaithambi S.P.R., TOWARDS TEST CASE RE, P49
   Balazinska M., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P326, DOI 10.1109/WCRE.1999.806971
   Balazinska M., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P292, DOI 10.1109/METRIC.1999.809750
   Balazinska M, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P98, DOI 10.1109/WCRE.2000.891457
   Barbour L., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P273, DOI 10.1109/ICSM.2011.6080794
   Barbour Liliane, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P76, DOI 10.1109/ICPC.2010.13
   Barbour L, 2013, J SOFTW-EVOL PROC, V25, P1139, DOI 10.1002/smr.1597
   Basit HA, 2009, IEEE T SOFTWARE ENG, V35, P497, DOI 10.1109/TSE.2009.16
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bouktif S, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1885
   Cha S.-H., 2007, Int. J. Math. Models Methods Appl. Sci., V1, P300
   Clements P., 2002, Software product lines
   Cordy JR, 2011, CONF PROC INT SYMP C, P219, DOI 10.1109/ICPC.2011.26
   Cordy JR, 2011, CONF PROC INT SYMP C, P217, DOI 10.1109/ICPC.2011.27
   Cormen T.H., INTRODUCTION TO ALGO
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Dang YN, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P369
   Dang Yingnong, 2011, P 5 INT WORKSH SOFTW, P63
   Deissenboeck F., 2008, PROCEEDINGS OF THE I
   Dubinsky Y, 2013, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2013.13
   Easterbrook Steve., 2008, Guide to Advanced Empirical Software Engineering, P285
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Falke R, 2008, EMPIR SOFTW ENG, V13, P601, DOI 10.1007/s10664-008-9073-9
   Godfrey M.W., 2011, Proceedings of the 5th International Workshop on Software Clones, P65
   Göde N, 2011, EUR CON SFTWR MTNCE, P65, DOI 10.1109/CSMR.2011.11
   Göde N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P311, DOI 10.1145/1985793.1985836
   Göde N, 2009, EUR CON SFTWR MTNCE, P219, DOI 10.1109/CSMR.2009.20
   Guo J., 2008, PROCEEDINGS OF THE W
   HACKEROTT M, 1990, IEEE T SEMICONDUCT M, V3, P247, DOI 10.1109/66.61974
   Higo Y., 2011, 2011 18th Working Conference on Reverse Engineering, P3, DOI 10.1109/WCRE.2011.11
   Jaccard P., 1908, B SOCIETE VAUDOISE S, V44, P223, DOI DOI 10.5169/SEALS-268384
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang Lingxiao, 2007, P THE 6 JOINT M EURO, P55, DOI DOI 10.1145/1287624.1287634
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kamiya T, 2013, CONF PROC INT SYMP C, P227, DOI 10.1109/ICPC.2013.6613854
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Keivanloo I., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P277
   Kim H, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P301, DOI 10.1145/1985793.1985835
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Kim Miryung., 2005, P 2005 INT WORKSHOP, P1, DOI DOI 10.1145/1082983.1083146
   Kolb R, 2006, J SOFTW MAINT EVOL-R, V18, P109, DOI 10.1002/smr.329
   Kontogiannis K. A., 1996, Automated Software Engineering, V3, P77, DOI 10.1007/BF00126960
   Koschke R., 2013, J SOFTW IN PRESS
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Koschke R, 2012, EUR CON SFTWR MTNCE, P309, DOI 10.1109/CSMR.2012.37
   Koschke R, 2009, SOFTWARE QUAL J, V17, P331, DOI 10.1007/s11219-009-9077-8
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Krinke J., 2011, P 5 INT WORKSHOP SOF, P28
   Krishnan GP, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P104, DOI 10.1109/CSMR-WCRE.2014.6747160
   Lavoie T., 2012, 2012 Proceedings of the 6th International Workshop on Software Clones (IWSC 2012), P1, DOI 10.1109/IWSC.2012.6227861
   Lee Jihyun, 2012, P 16 INT SOFTW PROD, P31
   Li JY, 2012, PROC INT CONF SOFTW, P310, DOI 10.1109/ICSE.2012.6227183
   Lozano A, 2008, PROC IEEE INT CONF S, P227, DOI 10.1109/ICSM.2008.4658071
   Machado I.C., 2012, ACM SIGSOFT SOFTWARE, V37, P1, DOI DOI 10.1145/2382756.2382783
   Machado ID, 2014, INFORM SOFTWARE TECH, V56, P1183, DOI 10.1016/j.infsof.2014.04.002
   McGregor JD, 2010, LECT NOTES COMPUT SC, V6153, P104
   McMillan C, 2012, PROC INT CONF SOFTW, P848, DOI 10.1109/ICSE.2012.6227134
   Mende T, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P163
   Merlo E, 2013, INT WORKS SOFTW CLON, P69, DOI 10.1109/IWSC.2013.6613046
   Mondal M., 2012, P ACM S APPL COMPUTI, P1227, DOI DOI 10.1145/2245276.2231969
   Mondal M, 2015, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSM.2015.7332455
   Mondal M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P484, DOI 10.1109/SANER.2015.7081861
   Mondal M, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P114, DOI 10.1109/CSMR-WCRE.2014.6747161
   Mondal M, 2014, IEEE INT WORK C SO, P11, DOI 10.1109/SCAM.2014.11
   Murakami H, 2013, CONF PROC INT SYMP C, P93, DOI 10.1109/ICPC.2013.6613837
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Roy CK, 2008, WORK CONF REVERSE EN, P81, DOI 10.1109/WCRE.2008.54
   Roy CK, 2009, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW.2009.18
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Roy ChanchalK., 2010, Proceedings of the 4th International Workshop on Software Clones, IWSC '10, P17
   Rubin J., 2013, SPLC 13, P101
   Rubin J, 2015, INT J SOFTW TOOLS TE, V17, P627, DOI 10.1007/s10009-014-0347-9
   Sajnani H., 2013, IWSC
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Steidl D, 2013, INT WORKS SOFTW CLON, P76, DOI 10.1109/IWSC.2013.6613047
   Taillard ÉD, 2008, EUR J OPER RES, V185, P1336, DOI 10.1016/j.ejor.2006.03.070
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
   Tsantalis N, 2015, IEEE T SOFTWARE ENG, V41, P1055, DOI 10.1109/TSE.2015.2448531
   Tuzun E., 2012, 2012 Proceedings of the 6th International Workshop on Software Clones (IWSC 2012), P57, DOI 10.1109/IWSC.2012.6227867
   Uddin MS, 2013, CONF PROC INT SYMP C, P236, DOI 10.1109/ICPC.2013.6613857
   Volanschi N., 2012, 2012 Proceedings of the 6th International Workshop on Software Clones (IWSC 2012), P50, DOI 10.1109/IWSC.2012.6227866
   Wang W., 2014, ECEASST
   Wang W, 2014, PROC IEEE INT CONF S, P331, DOI 10.1109/ICSME.2014.55
   Yamanaka Y., 2012, 2012 Proceedings of the 6th International Workshop on Software Clones (IWSC 2012), P67, DOI 10.1109/IWSC.2012.6227869
   Yuan Y, 2012, IEEE INT CONF AUTOM, P286, DOI 10.1145/2351676.2351725
   Zibran MF, 2013, IET SOFTW, V7, P167, DOI 10.1049/iet-sen.2012.0058
NR 94
TC 6
Z9 6
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2017
VL 87
BP 32
EP 45
DI 10.1016/j.infsof.2017.01.008
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EV2QD
UT WOS:000401599300003
DA 2024-07-18
ER

PT J
AU Pitangueira, AM
   Tonella, P
   Susi, A
   Maciel, RSP
   Barros, M
AF Pitangueira, A. M.
   Tonella, P.
   Susi, A.
   Maciel, R. S. P.
   Barros, M.
TI Minimizing the stakeholder dissatisfaction risk in requirement selection
   for next release planning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Risk-aware decision making; Next release problem; Multi-stakeholder
ID SOFTWARE; ALGORITHM
AB Context: The requirements to be delivered in the next software release are selected according to the stakeholders' perceived value, expected implementation cost, budget availability, and precedence and technical dependency constraints. Existing approaches to the requirement selection problem do not take into account the risk of stakeholders' dissatisfaction possibly resulting from divergence in the stakeholders' estimates of the requirement value.
   Objective: We present a novel risk-aware, multi-objective approach to the next release problem that aims at reducing the stakeholder dissatisfaction risk in a given cost/value region of interest provided by stakeholders.
   Method: We have devised an exact algorithm to address the risk-aware formulation of the next release problem and implemented the algorithm using two well-known SMT solvers, Yices and Z3. To allow the application of the proposed formulation to large size problems, we have also implemented an approximate algorithm based on the NSGA-II metaheuristic.
   Results: Results show that (1) the stakeholder dissatisfaction risk can be minimised with minimum impact on cost/value, and (2) our approach is scalable when NSGA-II is used. SMT solvers scale up to problems that are not overly large in terms of the number of requirements and/or are not too sparse in terms of dependencies, but the metaheuristic can quickly find good solutions even for large size problems.
   Conclusion: We recommend the users of our approach to apply an SMT solver and to resort to a meta heuristic algorithm only if the SMT solver does not terminate within reasonable time, due to the actual combination of number of requirements and dependency density. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Pitangueira, A. M.; Maciel, R. S. P.] Ave Adhemar de Barros, BR-41940320 Salvador, BA, Brazil.
   [Tonella, P.; Susi, A.] Fdn Bruno Kessler, Via Sommarive 18, Trento, Italy.
   [Barros, M.] Ave Pasteur, BR-22290240 Rio De Janeiro, Brazil.
C3 Fondazione Bruno Kessler
RP Pitangueira, AM (corresponding author), Ave Adhemar de Barros, BR-41940320 Salvador, BA, Brazil.
EM amspitangueira@gmail.com; tonella@fbk.eu; susi@fbk.eu;
   ritasuzana@dmcc.ufba.br; marcio@uniriotec.eu
RI Maciel, Rita Suzana Pitangueira/AAA-5111-2022; Barros,
   Marcio/AAD-2848-2022; Tonella, Paolo/C-1702-2015
OI Barros, Marcio/0000-0001-8136-9624; 
FU CAPES Foundation; Ministry of Education of Brazil; CAPES Foundation
   Fellowship program
FX This work was supported in part by the CAPES Foundation, Ministry of
   Education of Brazil and the first author was supported by the CAPES
   Foundation Fellowship program. We would like to thank Fitsum Meshesha
   Kifetew for his support to the implementation of the approach.
CR Amber S., 2012, Journal of Emerging Trends in Computing and Information Sciences, V3, P358
   [Anonymous], 2006, Technical Report
   [Anonymous], 2012, EXPT SOFTWARE ENG, DOI DOI 10.1007/978-3-642-29044-2
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Asnar Y, 2011, REQUIR ENG, V16, P101, DOI 10.1007/s00766-010-0112-x
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   Bannerman PL, 2008, J SYST SOFTWARE, V81, P2118, DOI 10.1016/j.jss.2008.03.059
   Brasil M.I., 2012, ENTERP INF SYST, DOI [10.1007/978-3-642-29958-2_20, DOI 10.1007/978-3-642-29958-2_20]
   Cai XY, 2013, IEEE INT CONF CON AU, P412
   Coello C.A. C., 2007, EVOLUTIONARY ALGORIT, V5, P79, DOI DOI 10.1007/978-0-387-36797-2
   Colares Felipe, 2009, Proceedings of the 2009 23rd Brazilian Symposium on Software Engineering. SBES 2009, P207, DOI 10.1109/SBES.2009.23
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   de Moura L, 2009, LECT NOTES COMPUT SC, V5902, P23, DOI 10.1007/978-3-642-10452-7_3
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Del Sagrado J., 2010, 6 WORKSH KNOWL ENG S
   Durillo JJ, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P49, DOI 10.1109/SSBSE.2009.21
   Feather M. S., 2003, Requirements Engineering, V8, P248, DOI 10.1007/s00766-002-0160-y
   Goos D.M. Peter, 2015, STAT IMP GRAPHS DESC
   Gueorguiev S., 2009, P 11 ANN C GENETIC E, P1673, DOI DOI 10.1145/1569901.1570125
   Han WM, 2007, J SYST SOFTWARE, V80, P42, DOI 10.1016/j.jss.2006.04.030
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Hoodat Hooman., 2009, World Academy of Science, Engineering and Technology, V56, P446
   Islam S., 2010, Proc. of RCIS'10, P299, DOI DOI 10.1109/RCIS.2010.5507389
   Jiang R, 2009, PROCEEDINGS OF THE 2009 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND NATURAL COMPUTING, VOL II, P296, DOI 10.1109/CINC.2009.153
   John M. D., 2001, PRACTICAL GUIDE TEST
   Karim MR, 2014, LECT NOTES COMPUT SC, V8636, P123
   Li LB, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1247, DOI 10.1145/2576768.2598334
   McNeil A., 2005, QUANTITATIVE RISK MA
   Meli R., 1998, 98 ESCOMENCRESS
   Meli R., 1999, P ESCOM SCOPE 99 27, P1
   Memik SO, 2002, PR IEEE COMP DESIGN, P395, DOI 10.1109/ICCD.2002.1106801
   Moores T., 1996, AUSTRALAS J INF SYST, V4
   Ngo-The A, 2008, SOFT COMPUT, V12, P95, DOI [10.1007/S00500-007-0219-2, 10.1007/s00500-007-0219-2]
   Ortega F, 2013, INFORM PROCESS MANAG, V49, P895, DOI 10.1016/j.ipm.2013.02.003
   Pitangueira A.M., 2016, 22 INT WORK C REQ EN, P1, DOI [10.1007/978-3-319-30282-91, DOI 10.1007/978-3-319-30282-91]
   Pitangueira AM, 2015, J SYST SOFTWARE, V103, P267, DOI 10.1016/j.jss.2014.09.038
   Regnell B., 2011, 2011 5th International Workshop on Software Product Management (IWSPM 2011), P47, DOI 10.1109/IWSPM.2011.6046203
   Ruhe G., 2003, EMPIR SOFTW ENG, P1
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Veerappa V, 2011, LECT NOTES COMPUT SC, V6606, P202, DOI 10.1007/978-3-642-19858-8_20
   Yavari A., 2013, ASSESSMENT EFFECTIVE, P58
   Yuan MX, 2010, ACM T DES AUTOMAT EL, V15, DOI 10.1145/1698759.1698763
   Zhang Y., 2008, P REFSQ 08 P 14 INT, P88
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
NR 44
TC 17
Z9 17
U1 0
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2017
VL 87
BP 104
EP 118
DI 10.1016/j.infsof.2017.03.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EV2QD
UT WOS:000401599300008
DA 2024-07-18
ER

PT J
AU Smite, D
   Moe, NB
   Sablis, A
   Wohlin, C
AF Smite, Darja
   Moe, Nils Brede
   Sablis, Aivars
   Wohlin, Claes
TI Software teams teams and their knowledge networks in large-scale
   software development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Large-scale software development; Knowledge networks; Social capital;
   Intellectual capital; Teams; Agile; Cross-functional; Feature teams;
   Empirical; Case study
ID COORDINATION
AB Context: Large software development projects involve multiple interconnected teams, often spread around the world, developing complex products for a growing number of customers and users. Succeeding with large-scale software development requires access to an enormous amount of knowledge and skills. Since neither individuals nor teams can possibly possess all the needed expertise, the resource availability in a team's knowledge network, also known as social capital, and effective knowledge coordination become paramount.
   Objective: In this paper, we explore the role of social capital in terms of knowledge networks and networking behavior in large-scale software development projects.
   Method: We conducted a multi-case study in two organizations, Ericsson and ABB, with software development teams as embedded units of analysis. We organized focus groups with ten software teams and surveyed 61 members from these teams to characterize and visualize the teams' knowledge networks. To complement the team perspective, we conducted individual interviews with representatives of supporting and coordination roles. Based on survey data, data obtained from focus groups, and individual interviews, we compared the different network characteristics and mechanisms that support knowledge networks. We used social network analysis to construct the team networks, thematic coding to identify network characteristics and context factors, and tabular summaries to identify the trends.
   Results: Our findings indicate that social capital and networking are essential for both novice and mature teams when solving complex, unfamiliar, or interdependent tasks. Network size and networking behavior depend on company experience, employee turnover, team culture, need for networking, and organizational support. A number of mechanisms can support the development of knowledge networks and social capital, for example, introduction of formal technical experts, facilitation of communities of practice and adequate communication infrastructure.
   Conclusions: Our study emphasizes the importance of social capital and knowledge networks. Therefore, we suggest that, along with investments into training programs, software companies should also cultivate a networking culture to strengthen their social capital, a known driver of better performance. (C) 2017 The Authors. Published by Elsevier B.V.
C1 [Smite, Darja; Moe, Nils Brede; Sablis, Aivars; Wohlin, Claes] Blekinge Inst Technol, Campus Grasvik, SE-37179 Karlskrona, Sweden.
   [Moe, Nils Brede] SINTEF ICT, Trondheim, Norway.
C3 Blekinge Institute Technology; SINTEF
RP Smite, D (corresponding author), Blekinge Inst Technol, Campus Grasvik, SE-37179 Karlskrona, Sweden.
EM Darja.Smite@bth.se
RI Moe, Nils Brede/AAD-8183-2021
OI Sablis, Aivars/0000-0003-2972-139X
FU Swedish Knowledge Foundation under the KK-Hog grant [2012/0200];
   Research Council of Norway [235359/030]; Smiglo project
FX We are sincerely thankful to all participants involved in our study for
   their interest and feedback. We particularly thank the reviewers of this
   article for their thorough reviews and constructive feedback that has
   helped us greatly. This research is funded by the Swedish Knowledge
   Foundation under the KK-Hog grant 2012/0200, and by the Smiglo project,
   partly funded by the Research Council of Norway under grant 235359/030.
CR [Anonymous], GLOB SOFTW ENG 2009
   [Anonymous], 2012, EMP SOFTW ENG MEAS E
   [Anonymous], GLOB SOFTW ENG ICGSE
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], COMMUNITIES PRACTISE
   [Anonymous], EVALUATING APPROACH
   [Anonymous], ENG HUMAN COMPUTER I
   [Anonymous], FRONT ED C 2008 FIE
   [Anonymous], PERILS PETASCALE IT
   [Anonymous], RES ORGAN BEHAV
   [Anonymous], J MANAGE
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Blichfeldt Bodil Stilling, 2008, International Journal of Project Management, V26, P357, DOI 10.1016/j.ijproman.2007.06.004
   BOURDIEU P., 1986, CULTURAL THEORY ANTH
   Burt R., 1992, STRUCTURAL HOLES
   Chen CJ, 2009, IEEE T ENG MANAGE, V56, P402, DOI 10.1109/TEM.2009.2023086
   Dingsayr T, 2009, IEEE SOFTWARE, V26, P100, DOI 10.1109/MS.2009.82
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fagan MH, 2004, J COMPUT INFORM SYST, V44, P73
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Flyvbjerg B, 2014, PROJ MANAG J, V45, P6, DOI 10.1002/pmj.21409
   Flyvbjerg B, 2011, HARVARD BUS REV, V89, P23, DOI 10.2139/ssrn.2229735
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Knoke D., 2008, QUANTITATIVE APPL SO, V154
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Lewis K, 2003, J APPL PSYCHOL, V88, P587, DOI 10.1037/0021-9010.88.4.587
   Licorish SA, 2014, INFORM SOFTWARE TECH, V56, P1578, DOI 10.1016/j.infsof.2014.02.004
   Lundberg N., 1999, Scandinavian Journal of Information Systems, V11, P157
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   Manteli C, 2014, INFORM SOFTWARE TECH, V56, P1309, DOI 10.1016/j.infsof.2014.04.012
   Mintzberg H., 1989, MINTZBERG MANAGEMENT, DOI DOI 10.1111/j.1468-0432.2009.00465.x
   Nahapiet J, 1998, ACAD MANAGE REV, V23, P242, DOI 10.2307/259373
   Okhuysen GA, 2009, ACAD MANAG ANN, V3, P463, DOI 10.1080/19416520903047533
   Ovaska P., 2003, Software Process Improvement and Practice, V8, P233, DOI 10.1002/spip.186
   Paasivaara M, 2014, INFORM SOFTWARE TECH, V56, P1556, DOI 10.1016/j.infsof.2014.06.008
   Rajlich VT, 2000, COMPUTER, V33, P66, DOI 10.1109/2.869374
   Robson C., 2002, Real world research
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Stewart P., 2014, Focus Groups: Theory and Practice
   Strode DE, 2012, J SYST SOFTWARE, V85, P1222, DOI 10.1016/j.jss.2012.02.017
   Wohlin C, 2015, J SYST SOFTWARE, V109, P229, DOI 10.1016/j.jss.2015.08.009
   Yang HD, 2008, EUR J INFORM SYST, V17, P47, DOI 10.1057/palgrave.ejis.3000730
   Yin R.K., 2009, CASE STUDIES DESIGN, V4th
NR 44
TC 65
Z9 74
U1 1
U2 52
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2017
VL 86
BP 71
EP 86
DI 10.1016/j.infsof.2017.01.003
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA ES9DB
UT WOS:000399855200005
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU De Sanctis, M
   Trubiani, C
   Cortellessa, V
   Di Marco, A
   Flamminj, M
AF De Sanctis, Martina
   Trubiani, Catia
   Cortellessa, Vittorio
   Di Marco, Antinisca
   Flamminj, Mirko
TI A model-driven approach to catch performance antipatterns in ADL
   specifications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Architecture description languages; Performance antipatterns;
   Model-driven engineering; AEmilia ADL; Software performance analysis
AB Context: While the performance analysis of a software architecture is a quite well-assessed task nowadays, the issue of interpreting the performance results for providing feedback to software architects is still very critical. Performance antipatterns represent effective instruments to tackle this issue, because they document common mistakes leading to performance problems as well as their solutions.
   Objective: Up today performance antipatterns have been only studied in the context of software modeling languages like UML, whereas in this manuscript our objective is to catch them in the context of ADL-based software architectures to investigate their effectiveness.
   Method: We have implemented a model-driven approach that allows the automatic detection of four performance antipatterns in AEmilia, that is a stochastic process algebraic ADL for performance-aware component-oriented modeling of software systems.
   Results: We evaluate the approach by applying it to three case studies in different application domains. Experimental results demonstrate the effectiveness of our approach to support the performance improvement of ADL-based software architectures.
   Conclusion: We can conclude that the detection of performance antipatterns, from the earliest stages of software development, represents an effective instrument to tackle the issue of identifying flaws and improving system performance. (C) 2016 Elsevier B.V. All rights reserved.
C1 [De Sanctis, Martina] Univ Trento, FBK, ViaSommarive 18, I-38123 Povo, TN, Italy.
   [Trubiani, Catia] GSSI, Viale Francesco Crispi 7, I-67100 Laquila, AQ, Italy.
   [Cortellessa, Vittorio; Di Marco, Antinisca; Flamminj, Mirko] Univ Aquila, Via Vetoio,Coppito 1, I-67100 Laquila, AQ, Italy.
C3 University of Trento; Fondazione Bruno Kessler; Gran Sasso Science
   Institute (GSSI); University of L'Aquila
RP Trubiani, C (corresponding author), GSSI, Viale Francesco Crispi 7, I-67100 Laquila, AQ, Italy.
EM msanctis@fbk.eu; catia.trubiani@gssi.infn.it;
   vittorio.cortellessa@univaq.it; antinisca.dimarco@univaq.it;
   mirko.flamminj@univaq.it
RI Trubiani, Catia/AAU-4040-2021
OI Trubiani, Catia/0000-0002-7675-6942
CR Alebrahim A, 2011, LECT NOTES COMPUT SC, V6903, P17, DOI 10.1007/978-3-642-23798-0_2
   Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   [Anonymous], 1971, DYNAMIC PROBABILISTI
   [Anonymous], 2010, EAST ADL DOM MOD SPE
   Arcelli D., 2013, ECEASST, V59
   Arcelli D, 2015, LECT NOTES COMPUT SC, V9033, P149, DOI 10.1007/978-3-662-46675-9_10
   Balsamo S, 2003, LECT NOTES COMPUT SC, V2804, P207
   Bernardo M, 2002, ACM T SOFTW ENG METH, V11, P386, DOI 10.1145/606612.606614
   Bernardo M, 2003, THEOR COMPUT SCI, V290, P117, DOI 10.1016/S0304-3975(01)00090-1
   Bernardo M., 2006, TWOTOWERS 5 1 USER M
   Bozzano M, 2011, COMPUT J, V54, P754, DOI 10.1093/comjnl/bxq024
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Carnegie mellon software engineering institute (sei), 2014, ARCH AN DES LANG AAD
   Chen TH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1001, DOI 10.1145/2568225.2568259
   Cortellessa V., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P310, DOI 10.1109/WICSA-ECSA.212.51
   Cortellessa V., 2010, P ICSE, P9
   Cortellessa V, 2014, SOFTW SYST MODEL, V13, P391, DOI 10.1007/s10270-012-0246-z
   Cortellessa V, 2011, MODEL-BASED SOFTWARE PERFORMANCE ANALYSIS, P1, DOI 10.1007/978-3-642-13621-4
   Damiani E, 2007, LECT NOTES COMPUT SC, V4529, P199
   De Sanctis M., PANDA AEMILIA OPEN S
   Dobrica L, 2002, IEEE T SOFTWARE ENG, V28, P638, DOI 10.1109/TSE.2002.1019479
   Dudney B., 2003, J2EE_AntiPatterns
   Dunsire K, 2005, 12th IEEE International Conference and Workshops on the Engineering of Computer-Based Systems, Proceedings, P62, DOI 10.1109/ECBS.2005.66
   Franks G, 2006, INT CONF QUANT EVAL, P103
   Gaudel V, 2011, SIGADA 2011: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON ADA AND RELATED TECHNOLOGIES, P61, DOI 10.1145/2070336.2070359
   Hähnle R, 2005, LOG J IGPL, V13, P415, DOI 10.1093/jigpal/jzi032
   Izquierdo J.L.C., 2008, MODSE WORKSH
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Jelliffe R., 2002, The Schematron Assertion Language 1.6"
   Kamandi A., 2007, ICSEA, P20, DOI DOI 10.1109/ICSEA.2007.78
   Kazman R., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P81, DOI 10.1109/ICSE.1994.296768
   Kazman R, 1998, IEEE INT C ENG COMP, P68, DOI 10.1109/ICECCS.1998.706657
   Kazman R, 2001, PROC INT CONF SOFTW, P297, DOI 10.1109/ICSE.2001.919103
   Kazman R, 1996, IEEE SOFTWARE, V13, P47, DOI 10.1109/52.542294
   Koziolek Anne, 2011, JOINT ACM SIGSOFT C, P33
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Laplante P A., 2005, Antipatterns: Identification, Refactoring and Management
   Lewis B.A., 2008, IEEE INT WORKSH RAP
   Malavolta I., 2010, BUS AIR BUSINESS PLA
   Mandel L, 1999, LECT NOTES COMPUT SC, V1708, P854
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Mohan P., 2012, COMPUT ENG INTELL SY, V3, P40
   Palma F, 2015, LECT NOTES COMPUT SC, V9435, P171, DOI 10.1007/978-3-662-48616-0_11
   Palma F, 2014, LECT NOTES COMPUT SC, V8831, P230, DOI 10.1007/978-3-662-45391-9_16
   Parsons T, 2008, J OBJECT TECHNOL, V7, P55, DOI 10.5381/jot.2008.7.3.a1
   Petriu D.C., 2015, WOSP 15, P41, DOI [10.1145/2693561.2693566, DOI 10.1145/2693561.2693566]
   Rozanski Nick, 2012, Software systems architecture: working with stakeholders using viewpoints and perspectives, V2nd
   Sharma VS, 2013, INT CONF CLOUD COMP, P148, DOI 10.1109/CloudCom.2013.166
   Smith C.U., 2012, INT COMP MEAS GROUP
   Smith C.U., 2000, SCALABLE COMPUT, V3
   Smith Connie U., 2003, 29 INT C COMP MEAS G, P717
   Stewart W.J., 1994, Introduction to the Numerical Solution of Markov Chains
   Tate B., 2003, MANNING
   Tekinerdogan B, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P5, DOI 10.1109/WICSA.2004.1310685
   Tekinerdogan B, 2011, LECT NOTES COMPUT SC, V6903, P26, DOI 10.1007/978-3-642-23798-0_3
   Troegner D., 2010, GI JAHRESTAGUNG, VP-176, P705
   Trubiani Catia, 2010, Models in Software Engineering. Workshops and Symposia at MODELS 2010. Reports and Revised Selected Papers, P19, DOI 10.1007/978-3-642-21210-9_3
   Trubiani C., 2011, Proceedings of the 2nd ACM/SPEC International Conference on Performance engineering, P19
   Trubiani C., 2014, ICPE 14, P75
   Trubiani C, 2014, J SYST SOFTWARE, V95, P141, DOI 10.1016/j.jss.2014.03.081
   Welch P., 1983, STAT ANAL SIMULATION, Vfirst
   Wert A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P552, DOI 10.1109/ICSE.2013.6606601
   Xu J., 2008, P 7 INT WORKSHOP SOF, P1
NR 64
TC 10
Z9 10
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2017
VL 83
BP 35
EP 54
DI 10.1016/j.infsof.2016.11.008
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ1YO
UT WOS:000393006700003
DA 2024-07-18
ER

PT J
AU Arcaini, P
   Gargantini, A
   Riccobene, E
   Vavassori, P
AF Arcaini, Paolo
   Gargantini, Angelo
   Riccobene, Elvinia
   Vavassori, Paolo
TI A novel use of equivalent mutants for static anomaly detection in
   software artifacts
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Equivalent mutant; Static anomaly; Quality measure
ID MUTATION; MODELS
AB Context: In mutation analysis, a mutant of a software artifact, either a program or a model, is said equivalent if it leaves the artifact meaning unchanged. Equivalent mutants are usually seen as an inconvenience and they reduce the applicability of mutation analysis.
   Objective: Instead, we here claim that equivalent mutants can be useful to define, detect, and remove static anomalies, i.e., deficiencies of given qualities: If an equivalent mutant has a better quality value than the original artifact, then an anomaly has been found and removed.
   Method: We present a process for detecting static anomalies based on mutation, equivalence checking, and quality measurement.
   Results: Our proposal and the originating technique are applicable to different kinds of software artifacts. We present anomalies and conduct several experiments in different contexts, at specification, design, and implementation level.
   Conclusion: We claim that in mutation analysis a new research direction should be followed, in which equivalent mutants and operators generating them are welcome. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Arcaini, Paolo] Charles Univ Prague, Fac Math & Phys, Prague, Czech Republic.
   [Gargantini, Angelo; Vavassori, Paolo] Univ Bergamo, Dept Econ & Technol Management, Informat Technol & Prod, Bergamo, Italy.
   [Riccobene, Elvinia] Univ Milan, Dipartimento Informat, I-20122 Milan, Italy.
C3 Charles University Prague; University of Bergamo; University of Milan
RP Arcaini, P (corresponding author), Charles Univ Prague, Fac Math & Phys, Prague, Czech Republic.
EM arcaini@d3s.mff.cuni.cz
RI Gargantini, Angelo/E-6060-2012; Arcaini, Paolo/J-3616-2017; Riccobene,
   Elvinia/B-7517-2013
OI Gargantini, Angelo/0000-0002-4035-0131; Arcaini,
   Paolo/0000-0002-6253-4062; 
FU Charles University research funds PRVOUK
FX The work was partially supported by Charles University research funds
   PRVOUK.
CR Aggarwal KK, 2002, P A REL MAI, P235, DOI 10.1109/RAMS.2002.981648
   Ammann Paul, 2008, Introduction to software testing, V1st
   Ammann PE, 1998, SECOND INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P46, DOI 10.1109/ICFEM.1998.730569
   [Anonymous], 2003, ALAN APT SERIES
   Arcaini P., 2015, ICST, P1
   Arcaini P., 2015, P 2015 IEEE 8 INT C, P1, DOI [10.1109/icstw.2015.7107452, DOI 10.1109/ICSTW.2015.7107452]
   Arcaini P, 2015, COMPUT J, V58, P2900, DOI 10.1093/comjnl/bxv001
   Arcaini P, 2015, SOFTW TEST VERIF REL, V25, P629, DOI 10.1002/stvr.1530
   Arcaini P, 2014, IEEE ICST WORKSHOP, P98, DOI 10.1109/ICSTW.2014.5
   Arcaini P, 2011, INNOV SYST SOFTW ENG, V7, P97, DOI 10.1007/s11334-011-0147-2
   Ball T, 2001, ACM SIGPLAN NOTICES, V36, P203, DOI 10.1145/381694.378846
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Beer I, 1997, LECT NOTES COMPUT SC, V1254, P279
   Bodik R, 1997, ACM SIGPLAN NOTICES, V32, P159, DOI 10.1145/258916.258930
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Cimatti A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P359
   Consens M., 1991, P 1991 C CTR ADV STU, P17
   de Souza SDS, 1999, SOFTWARE QUAL J, V8, P285, DOI 10.1023/A:1008978021407
   Debray SK, 2000, ACM T PROGR LANG SYS, V22, P378, DOI 10.1145/349214.349233
   Deng L, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P84, DOI 10.1109/ICST.2013.20
   Ferreira J. M., 2013, P 25 INT C SOFTWARE, P232
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Griswold W. G., 1993, ACM Transactions on Software Engineering and Methodology, V2, P228, DOI 10.1145/152388.152389
   Grün BJM, 2009, IEEE ICST WORKSHOP, P192, DOI 10.1109/ICSTW.2009.37
   Hansen MC, 1999, IEEE DES TEST COMPUT, V16, P72, DOI 10.1109/54.785838
   Harman M, 2001, KLUW INT S ADV DATA, V24, P5
   Henard C, 2014, LECT NOTES COMPUT SC, V8636, P92
   Henard C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1245, DOI 10.1109/ICSE.2013.6606689
   Henard C, 2013, IEEE ICST WORKSHOP, P188, DOI 10.1109/ICSTW.2013.30
   IEEE, 1995, 10442009 IEEE
   Kapoor K, 2007, ACM T SOFTW ENG METH, V16, pA1, DOI 10.1145/1243987.1243988
   Kupferman O., 2003, International Journal on Software Tools for Technology Transfer, V4, P224, DOI 10.1007/s100090100062
   LAVAL J., 2012, J OBJECT TECHNOLOGY, V11, P1, DOI DOI 10.5381/J0T.2012.11.1.A4
   Lee TC, 2004, LECT NOTES COMPUT SC, V3299, P354
   Liu L, 2005, IEEE INT C ENG COMP, P498
   Madeyski L, 2014, IEEE T SOFTWARE ENG, V40, P23, DOI 10.1109/TSE.2013.44
   Matnei Filho R.A., 2015, P 29 S BRAS ENG SOFT, P1
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mresa E. S., 1999, Software Testing, Verification and Reliability, V9, P205, DOI 10.1002/(SICI)1099-1689(199912)9:4<205::AID-STVR186>3.0.CO;2-X
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Petke Justyna, 2014, Genetic Programming. 17th European Conference (EuroGP 2014). Revised Selected Papers: LNCS 8599, P137, DOI 10.1007/978-3-662-44303-3_12
   Pinto Ferraz Fabbri S. C., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P220, DOI 10.1109/ISSRE.1994.341378
   Reuling D., 2015, P 19 INT SOFTWARE PR, P131
   Schuler D, 2013, SOFTW TEST VERIF REL, V23, P353, DOI 10.1002/stvr.1473
   Simons Chris, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P47, DOI 10.1007/978-3-319-22183-0_4
   Srikant Y.N., 2007, The Compiler Design Handbook: Optimizations and Machine Code Generation, Second Edition, V2nd
   Sullivan K. J., 2001, Software Engineering Notes, V26, P99, DOI 10.1145/503271.503224
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Wu F, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1375, DOI 10.1145/2739480.2754648
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
NR 53
TC 9
Z9 9
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2017
VL 81
SI SI
BP 52
EP 64
DI 10.1016/j.infsof.2016.01.019
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EB8IH
UT WOS:000387634200005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Vierhauser, M
   Rabiser, R
   Grünbacher, P
AF Vierhauser, Michael
   Rabiser, Rick
   Gruenbacher, Paul
TI Requirements monitoring frameworks: A systematic review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Requirements monitoring; Systems of systems; Systematic literature
   review
AB Context: Software systems today often interoperate with each other, thus forming a system of systems (SoS). Due to the scale, complexity, and heterogeneity of SoS, determining compliance with their requirements is challenging, despite the range of existing monitoring approaches. The fragmented research landscape and the diversity of existing approaches, however, make it hard to understand and analyze existing research regarding its suitability for SoS.
   Objective: The aims of this paper are thus to systematically identify, describe, and classify existing approaches for requirements-based monitoring of software systems at runtime. Specifically, we (i) analyze the characteristics and application areas of monitoring approaches proposed in different domains, we (ii) systematically identify frameworks supporting requirements monitoring, and finally (iii) analyze their support for requirements monitoring in SoS.
   Method: We performed a systematic literature review (SLR) to identify existing monitoring approaches and to classify their key characteristics and application areas. Based on this analysis we selected requirements monitoring frameworks, following a definition by Robinson, and analyzed them regarding their support for requirements monitoring in SoS.
   Results: We identified 330 publications, which we used to produce a comprehensive overview of the landscape of requirements monitoring approaches. We analyzed these publications regarding their support for Robinson's requirements monitoring layers, resulting in 37 identified frameworks. We investigated how well these frameworks support requirements monitoring in SoS.
   Conclusions: We conclude that most existing approaches are restricted to certain kinds of checks, particular types of events and data, and mostly also limited to one particular architectural style and technology. This lack of flexibility makes their application in an SoS context difficult. Also, systematic and automated variability management is still missing. Regarding their evaluation, many existing frameworks focus on measuring the performance overhead, while only few frameworks have been assessed in cases studies with real-world systems. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Vierhauser, Michael; Rabiser, Rick; Gruenbacher, Paul] Johannes Kepler Univ Linz, Inst Software Syst Engn, Christian Doppler Lab MEVSS, Linz, Austria.
C3 Johannes Kepler University Linz
RP Vierhauser, M (corresponding author), Johannes Kepler Univ Linz, Inst Software Syst Engn, Christian Doppler Lab MEVSS, Linz, Austria.
EM michael.vierhauser@jku.at
RI Vierhauser, Michael/AAG-5859-2021; Rabiser, Rick/B-8673-2017;
   Grunbacher, Paul/C-2970-2013
OI Vierhauser, Michael/0000-0003-2672-9230; Rabiser,
   Rick/0000-0003-3862-1112; Grunbacher, Paul/0000-0002-1951-5288
FU Christian Doppler Forschungsgesellschaft, Austria
FX This work has been supported by the Christian Doppler
   Forschungsgesellschaft, Austria. We want to thank Jurgen
   Thanhofer-Pilisch for helping us with the analysis of the approaches
   using the REVIS tool.
CR [Anonymous], THESIS
   [Anonymous], AUTOMATA LANGUAGES M
   [Anonymous], 2001, An Automata Theoretic Approach to Branching
   [Anonymous], COMPUT INF SCI
   [Anonymous], 2015, PROC 19 INT C SOFTW, DOI DOI 10.1145/2791060.2791101
   [Anonymous], P 36 EUR SOFTW ENG A
   [Anonymous], INFR MON
   [Anonymous], 2011, SYSTEM SYSTEMS ENG I
   [Anonymous], WEBSPH
   Autili M., 2006, SCESM, P21, DOI DOI 10.1145/1138953.1138959
   Axelsson J, 2015, 2015 10th System of Systems Engineering Conference (SoSE), P18, DOI 10.1109/SYSOSE.2015.7151918
   Barbon F, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P63
   Baresi L, 2011, IEEE T SOFTWARE ENG, V37, P247, DOI 10.1109/TSE.2010.37
   Bencomo N., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P199, DOI 10.1145/1810295.1810329
   Breivold HP, 2012, INFORM SOFTWARE TECH, V54, P16, DOI 10.1016/j.infsof.2011.06.002
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Chen F, 2007, ACM SIGPLAN NOTICES, V42, P569, DOI 10.1145/1297105.1297069
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Czarnecki Krzysztof., 2012, P 6 INT WORKSHOP VAR, P173, DOI DOI 10.1145/2110147.2110167
   Dahmann J. S., 2008, PROC 2 ANN IEEE SYST, P1
   Delgado N, 2004, IEEE T SOFTWARE ENG, V30, P859, DOI 10.1109/TSE.2004.91
   Doherty P, 2009, AUTON AGENT MULTI-AG, V19, P332, DOI 10.1007/s10458-009-9079-8
   Dragomir A, 2013, ASIA PAC SOFWR ENG, P396, DOI 10.1109/APSEC.2013.60
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Felizardo KR, 2011, INT SYMP EMP SOFTWAR, P77, DOI 10.1109/ESEM.2011.16
   Fickas S., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P140, DOI 10.1109/ISRE.1995.512555
   Fittkau F, 2015, 2015 IEEE 3RD WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P36, DOI 10.1109/VISSOFT.2015.7332413
   Fittkau F, 2015, LECT NOTES COMPUT SC, V9306, P80, DOI 10.1007/978-3-319-24072-5_6
   Fittkau Florian, 2013, Proc. IEEE Working Conf. on Softw. Vis, P1
   Funika N, 2004, LECT NOTES COMPUT SC, V3038, P472
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Keele S, 2007, GUIDELINES PERFORMIN
   Kertész A, 2011, EUROMICRO WORKSHOP P, P503, DOI 10.1109/PDP.2011.17
   Kiczales G., 1997, ASPECT ORIENTED PROG
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   KOWALSKI R, 1986, NEW GENERAT COMPUT, V4, P67, DOI 10.1007/BF03037383
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   Maier M. W., 1996, INCOSE INT S, V6, P565, DOI [10.1002/j.2334-5837.1996.tb02054.x, DOI 10.1002/J.2334-5837.1996.TB02054.X]
   Mansouri-Samani M., 1993, IEEE Network, V7, P20, DOI 10.1109/65.244791
   Nicolás J, 2009, INFORM SOFTWARE TECH, V51, P1291, DOI 10.1016/j.infsof.2009.04.001
   Nielsen CB, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2794381
   Robinson WN, 2010, COMPUTER, V43, P64, DOI 10.1109/MC.2009.373
   Robinson WN, 2006, REQUIR ENG, V11, P17, DOI 10.1007/s00766-005-0016-3
   Sacerdoti FD, 2003, IEEE INTERNATIONAL CONFERENCE ON CLUSTER COMPUTING, PROCEEDINGS, P289
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sepúlveda S, 2016, INFORM SOFTWARE TECH, V69, P16, DOI 10.1016/j.infsof.2015.08.007
   Shanahan M., 1999, Artificial intelligence today. Recent trends and developments, P409
   Simmonds J, 2009, IEEE T SERV COMPUT, V2, P223, DOI 10.1109/TSC.2009.16
   Van Hoorn A., 2012, P 3 ACM SPEC INT C P, P247, DOI DOI 10.1145/2188286.2188326
   Vierhauser M, 2016, J SYST SOFTWARE, V112, P123, DOI 10.1016/j.jss.2015.07.008
   Waller Jan, 2012, Multicore Software Engineering, Performance, and Tools. Proceedings International Conference (MSEPT 2012), P42, DOI 10.1007/978-3-642-31202-1_5
   Wang YQ, 2009, AUTOMAT SOFTW ENG, V16, P3, DOI 10.1007/s10515-008-0042-8
   Wassermann B, 2011, LECT NOTES COMPUT SC, V7084, P344, DOI 10.1007/978-3-642-25535-9_23
NR 57
TC 30
Z9 32
U1 3
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2016
VL 80
BP 89
EP 109
DI 10.1016/j.infsof.2016.08.005
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EA2GM
UT WOS:000386410800006
DA 2024-07-18
ER

PT J
AU Dolezel, M
   Buchalcevová, A
AF Dolezel, Michal
   Buchalcevova, Alena
TI Test Governance Framework for contracted IS development:
   Ethnographically informed action research
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Outsourcing; Control; Software engineering management;
   Culture
ID SOFTWARE-DEVELOPMENT; OUTSOURCING RELATIONSHIPS; PROJECT-MANAGEMENT;
   DESIGN SCIENCE; MODEL; PORTFOLIOS; KNOWLEDGE; PARADIGM; DYNAMICS;
   IMPACTS
AB Context: Over the past two decades, interest has increased in software development and testing outsourcing. Although the decision to outsource development or test processes is founded on various background motives, e.g., costs, capacity, time-to-market, etc., additional factors that influence the outsourcing relationships are frequently overlooked by client organizations.
   Objective: The main objectives of this paper are to investigate the role of testing in contracted software development projects and examine the interactions between both parties during the process. A Test Governance Framework (TeGoF) was developed to propose an organization-wide but project-centred mechanism for control of the test process in contracted software development projects.
   Method: The principles of design science were applied to develop the TeGoF. The principles of ethno-graphically informed action research were used to evaluate this management artefact in an industrial context and examine the impact of a particular organizational setting on the framework.
   Results: Of a total of three projects, the TeGoF was applied smoothly in only one case. However, this observation should not be interpreted as a TeGoF deficiency because its primary goal is to define a powerful detection mechanism to cope with quality-related issues in contractual relationships. In this sense, the TeGoF proved itself as a feasible tool. Additionally, an analysis is presented that describes the factors that contributed to the implementation difficulties of the TeGoF principles in the two remaining projects. Finally, the relationships among trust, control and power are indicated as well as the potential influence of national, organizational and occupational culture.
   Conclusion: The main contribution of this paper consists in the development of the TeGoF as a tool that pinpoints significant limitations in the current research related to control issues in the domain of contracted software systems testing. Additionally, the authors analysed key factors that influence the success of the TeGoF in client organizations. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Dolezel, Michal; Buchalcevova, Alena] Univ Econ, Dept Informat Technol, Prague, Czech Republic.
C3 Prague University of Economics & Business
RP Dolezel, M (corresponding author), W Churchill Sq 4, Prague 13067, Czech Republic.
EM michal.dolezel@vse.cz
RI Dolezel, Michal/AAU-3364-2021; Buchalcevova, Alena/L-2239-2016
OI Dolezel, Michal/0000-0002-5963-5145; Buchalcevova,
   Alena/0000-0002-8185-5208
FU Internal Grant Agency Project [IG406013];  [IP 400040]
FX This research was supported by the Internal Grant Agency Project No.
   IG406013 and the Internal Project IP 400040.
CR Ahonen JJ, 2004, EMPIR SOFTW ENG, V9, P275, DOI 10.1023/B:EMSE.0000039880.99096.af
   [Anonymous], 2021, GUID PROJ MAN BOD KN, V7th
   [Anonymous], 1993, COTS COMMERCIAL OFF
   [Anonymous], HDB ACTION RES
   Atkinson S, 2013, P ANN HICSS, P4842, DOI 10.1109/HICSS.2013.492
   Avison D, 2014, J INF TECHNOL-UK, V29, P327, DOI 10.1057/jit.2014.8
   Babar MA, 2007, J SYST SOFTWARE, V80, P1438, DOI [10.1016/j.jss.2006.10.038, 10.1016/j.jss.2006.12.038]
   BARLEY SR, 1992, ADMIN SCI QUART, V37, P363, DOI 10.2307/2393449
   Baskerville R, 1998, EUR J INFORM SYST, V7, P90, DOI 10.1057/palgrave.ejis.3000298
   Berry D., 1992, CMUSEI92TR34
   Black R., 2009, Managing the testing process: Practical tools and techniques for managing hardware and software testing, V3rd
   Bolino MC, 1999, ACAD MANAGE REV, V24, P82, DOI 10.2307/259038
   Cassell C, 2006, HUM RELAT, V59, P783, DOI 10.1177/0018726706067080
   Cassell J, 2003, CRIT CARE MED, V31, P1263, DOI 10.1097/01.CCM.0000059318.96393.14
   Chemuturi M., 2011, MASTERING SOFTWARE Q
   Choudhury V, 2003, INFORM SYST RES, V14, P291, DOI 10.1287/isre.14.3.291.16563
   Chua AYK, 2009, J COMPUT INFORM SYST, V49, P31
   Coghlan D., 2007, Management Research News, V30, P335, DOI DOI 10.1108/01409170710746337
   D'Mello M, 2010, INFORM ORGAN-UK, V20, P81, DOI 10.1016/j.infoandorg.2010.03.001
   Damian D, 2006, IEEE SOFTWARE, V23, P17, DOI 10.1109/MS.2006.126
   De Haes S, 2013, J INF SYST, V27, P307, DOI 10.2308/isys-50422
   Denison DR, 1996, ACAD MANAGE REV, V21, P619, DOI 10.2307/258997
   Dittrich Y, 2009, IEEE SOFTWARE, V26, P41, DOI 10.1109/MS.2009.173
   Dobosz-Bourne D, 2007, J ORGAN CHANGE MANAG, V20, P60, DOI 10.1108/09534810710715289
   Dolezel M., 2014, INFORM SYSTEM DEV IM, P135
   Drechsler A., 2013, Journal of Information Technology Theory and Application (JITTA), V14, P5, DOI DOI 10.26686/WGTN.13088591.V1
   Drechsler A., 2014, P 22 EUR C INF SYST, P1
   Dubois A, 2002, J BUS RES, V55, P553, DOI 10.1016/S0148-2963(00)00195-8
   Dybå T, 2005, IEEE T SOFTWARE ENG, V31, P410, DOI 10.1109/TSE.2005.53
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P57, DOI 10.2307/258191
   FESTINGER L, 1962, SCI AM, V207, P93, DOI 10.1038/scientificamerican1062-93
   French S, 2009, J MANAG DEV, V28, P187, DOI 10.1108/02621710910939596
   Galin Daniel, 2004, Software quality assurance: from theory to implementation
   Ghoshal S, 2005, ACAD MANAG LEARN EDU, V4, P75, DOI 10.5465/AMLE.2005.16132558
   GIGLIONI GB, 1974, ACAD MANAGE J, V17, P292, DOI 10.5465/254981
   Given L., 2012, The SAGE encyclopedia of qualitative research methods, DOI 10.4135/9781412963909
   Glaser BG, 1976, DISCOVERY GROUNDED T
   Glass RL, 2004, COMMUN ACM, V47, P89, DOI 10.1145/990680.990686
   Gopal A, 2010, INFORM SYST RES, V21, P960, DOI 10.1287/isre.1080.0205
   Guo Y., 2011, 2 WORKSH MAN TECHN D, P31, DOI [10.1145/1985362.1985370, DOI 10.1145/1985362.1985370]
   Heeks R, 2001, IEEE SOFTWARE, V18, P54, DOI 10.1109/52.914744
   Heiskanen A, 2008, J STRATEGIC INF SYST, V17, P268, DOI 10.1016/j.jsis.2008.10.001
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Iivari J, 2004, INFORM SYST J, V14, P313, DOI 10.1111/j.1365-2575.2004.00177.x
   Iivari J., 1998, Scandinavian Journal of Information Systems, V10, P135
   Iivari J., 2009, Proceedigns of European Conference on Information Systems (ECIS), P1
   Iivari J., 2003, COMMUN ASSOC INF SYS, V12, P568, DOI DOI 10.17705/1CAIS.01237
   International Software Testing Qualifications Board, 2012, STAND GLOSS TERMS US
   Jacks T., 2011, P 2011 INT C INF SCI, P1
   Jain RP, 2011, IEEE T ENG MANAGE, V58, P743, DOI 10.1109/TEM.2010.2090730
   Jorgenson M, 2009, IEEE SOFTWARE, V26, P79, DOI 10.1109/MS.2009.71
   Kaarst-Brown M. L., 1999, Information Technology & People, V12, P192, DOI 10.1108/09593849910267251
   Kataja A., 2006, P 14 EUR C INF SYST, P1
   Keil M., 2004, Data Base for Advances in Information Systems, V35, P65, DOI 10.1145/1007965.1007971
   Keil M, 2001, COMMUN ACM, V44, P87, DOI 10.1145/367211.367274
   Kirsch LJ, 1997, INFORM SYST RES, V8, P215, DOI 10.1287/isre.8.3.215
   Kirsch LJ, 1996, ORGAN SCI, V7, P1, DOI 10.1287/orsc.7.1.1
   Kishore R, 2003, COMMUN ACM, V46, P86, DOI 10.1145/953460.953464
   Kuechler William, 2008, Journal of Design Research, V7, P1, DOI 10.1504/JDR.2008.019897
   Kunda Gideon., 2009, ENG CULTURE CONTROL
   LECOMPTE MD, 1982, REV EDUC RES, V52, P31, DOI 10.2307/1170272
   Lee SM, 2006, COMMUN ACM, V49, P111, DOI 10.1145/1121949.1121974
   Leidner DE, 2006, MIS QUART, V30, P357
   Lindesmith AlfredR., 1968, Addiction and Opiates
   Liu JYC, 2008, INFORM SOFTWARE TECH, V50, P889, DOI 10.1016/j.infsof.2008.01.002
   Lu Y., 2011, 19 EUR C INF SYST
   MANNING PK, 1979, ADMIN SCI QUART, V24, P660, DOI 10.2307/2392371
   Mäntylä MV, 2012, SOFTWARE QUAL J, V20, P145, DOI 10.1007/s11219-011-9157-4
   Mathiassen L, 2013, EUR J INFORM SYST, V22, P475, DOI 10.1057/ejis.2012.35
   McBride T, 2008, J SYST SOFTWARE, V81, P2386, DOI 10.1016/j.jss.2008.06.015
   Moeller R.R., 2013, EXECUTIVES GUIDE IT
   Myers Glenford J., 2011, The Art of Software Testing
   Myers M. D., 2002, Journal of Global Information Management, V10, P24, DOI 10.4018/jgim.2002010103
   Myers M.D., 1999, Communications of the Association for Information Systems, V2, P2
   Ngwenyama O, 2010, EUR J INFORM SYST, V19, P303, DOI 10.1057/ejis.2010.18
   Niazi M, 2009, INFORM SOFTWARE TECH, V51, P1231, DOI 10.1016/j.infsof.2009.03.001
   Ostrowski L., 2011, 2011 Federated Conference on Computer Science and Information Systems (FedCSIS), P317
   Pandza K, 2010, BRIT J MANAGE, V21, P171, DOI 10.1111/j.1467-8551.2008.00623.x
   Park C, 2008, J ASSOC INF SYST, V9, P409, DOI 10.17705/1jais.00163
   Ramachandran S., 2006, SIGMIS CPR'06. Proceedings of the 2006 ACM SIGMIS CPR Conference. Forty Four Years of Computer Personnel Research: Achievements, Challenges and the Future, P198, DOI 10.1145/1125170.1125221
   Ramingwong S, 2007, COMMUN ACM, V50, P101, DOI 10.1145/1278201.1278230
   Robinson H, 2007, INFORM SOFTWARE TECH, V49, P540, DOI 10.1016/j.infsof.2007.02.007
   Royce W.W., 1970, P IEEE WESCON IEEE, P1
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sabherwal R., 2003, Information and Organization, V13, P153, DOI 10.1016/S1471-7727(02)00026-X
   Sambamurthy V, 1999, MIS QUART, V23, P261, DOI 10.2307/249754
   Sánchez-Gordón ML, 2014, PROCEDIA COMPUT SCI, V27, P281, DOI 10.1016/j.procs.2014.02.031
   Sanz A, 2009, WOSQ: 2009 ICSE WORKSHOP ON SOFTWARE QUALITY, P65, DOI 10.1109/WOSQ.2009.5071559
   Savolainen P, 2012, INT J PROJ MANAG, V30, P458, DOI 10.1016/j.ijproman.2011.07.002
   Schein E.H., 2010, ORG CULTURE LEADERSH, V2
   Shah H, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P51, DOI 10.1109/ICGSE.2013.15
   Soh C, 2011, J INF TECHNOL-UK, V26, P16, DOI 10.1057/jit.2010.13
   Sommerville Ian, 2016, Software engineering 8
   Soulsby A, 2007, HUM RELAT, V60, P1419, DOI 10.1177/0018726707083470
   Tiwana A, 2009, J MANAGE INFORM SYST, V26, P9, DOI 10.2753/MIS0742-1222260301
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   van Aken JE, 2004, J MANAGE STUD, V41, P219, DOI 10.1111/j.1467-6486.2004.00430.x
   Van Maanen J., 2011, Tales of the field: on writing ethnography, V2nd, DOI DOI 10.7208/CHICAGO/9780226849638.001.0001
   Van Maanen J, 2007, ACAD MANAGE REV, V32, P1145, DOI 10.5465/AMR.2007.26586080
   VANDERGEEST S, 1990, MAN, V25, P588, DOI 10.2307/2803655
   von Wangenheim CG, 2010, INFORM SOFTWARE TECH, V52, P749, DOI 10.1016/j.infsof.2010.03.008
   Walsham G, 2006, EUR J INFORM SYST, V15, P320, DOI 10.1057/palgrave.ejis.3000589
   Wendler R, 2012, INFORM SOFTWARE TECH, V54, P1317, DOI 10.1016/j.infsof.2012.07.007
   Wohlin C., 2014, DECISION MAKING STRU
   Znaniecki F., 1934, The method of sociology
NR 105
TC 3
Z9 4
U1 0
U2 28
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2015
VL 65
BP 69
EP 94
DI 10.1016/j.infsof.2015.03.003
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA CK3IP
UT WOS:000356110100005
DA 2024-07-18
ER

PT J
AU Blouin, A
   Moha, N
   Baudry, B
   Sahraoui, H
   Jézéquel, JM
AF Blouin, Arnaud
   Moha, Naouel
   Baudry, Benoit
   Sahraoui, Houari
   Jezequel, Jean-Marc
TI Assessing the use of slicing-based visualizing understanding of large
   metamodels
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model-Driven Engineering; Metamodel; Class diagram; Visualization;
   Human-computer interaction; Model slicing
ID UML CLASS DIAGRAMS; INFORMATION VISUALIZATION; DESIGN; MODEL;
   COMPREHENSION; SUPPORT; LAYOUT
AB Context: Metamodels are cornerstones of various metamodeling activities. Such activities consist of, for instance, transforming models into code or comparing metamodels. These activities thus require a good understanding of a metamodel and/or its parts. Current metamodel editing tools are based on standard interactive visualization features, such as physical zooms.
   Objective: However, as soon as metamodels become large, navigating through large metamodels becomes a tedious task that hinders their understanding. So, a real need to support metamodel comprehension appears.
   Method: In this work we promote the use of model slicing techniques to build interactive visualization tools for metamodels. Model slicing is a model comprehension technique inspired by program slicing. We show how the use of Kompren, a domain-specific language for defining model slicers, can ease the development of such interactive visualization features.
   Results: We specifically make four main contributions. First, the proposed interactive visualization techniques permit users to focus on metamodel elements of interest, which aims at improving the understandability. Second, these proposed techniques are developed based on model slicing, a model comprehension technique that involves extracting a subset of model elements of interest. Third, we develop a metamodel visualizer, called Explen, embedding the proposed interactive visualization techniques. Fourth, we conducted experiments, showing that Explen significantly outperforms EcoreTools, in terms of time, correctness, and navigation effort, on metamodeling tasks.
   Conclusion: The results of the experiments, in favor of Explen, show that improving metamodel understanding can be done using slicing-based interactive navigation features. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Blouin, Arnaud] INSA Rennes, Diverse Team, IRISA Inria, Rennes, France.
   [Moha, Naouel] Univ Quebec, Montreal, PQ H3C 3P8, Canada.
   [Baudry, Benoit] Inria, IRISA Inria, Diverse Team, Rennes, France.
   [Sahraoui, Houari] Univ Montreal, GEODES Grp, Montreal, PQ, Canada.
   [Jezequel, Jean-Marc] Univ Rennes 1, IRISA Inria, Diverse Team, Rennes, France.
C3 Universite de Rennes; Institut National des Sciences Appliquees de
   Rennes; Universite Paris Saclay; University of Quebec; University of
   Quebec Montreal; Inria; Universite Paris Saclay; Universite de Rennes;
   Universite de Montreal; Universite Paris Saclay; Universite de Rennes
RP Blouin, A (corresponding author), INSA Rennes, Diverse Team, IRISA Inria, Rennes, France.
EM ablouin@irisa.fr; moha.naouel@uqam.ca; bbaudry@inria.fr;
   sahraoui@irommontreal.ca; jezequel@irisa.fr
RI Jezequel, Jean-Marc/AAF-3854-2019
OI Jezequel, Jean-Marc/0000-0002-0582-9745; Blouin,
   Arnaud/0000-0002-5974-9601
FU French BGLE Project CONNEXION; NSERC (Natural Sciences and Engineering
   Research Council of Canada)
FX This work is partially supported by the French BGLE Project CONNEXION
   and by NSERC (Natural Sciences and Engineering Research Council of
   Canada) research grants.
CR Abed W.A., 2013, SOFTW LANG ENG
   Androutsopoulos K., 2011, INT C SOFTW ENG ICSE
   [Anonymous], 2001, P AUSTRALASIAN S INF
   [Anonymous], 2005, IEEE INFOVIS, DOI DOI 10.1109/INFOVIS.2005.12
   [Anonymous], ACM COMPUTING SURVEY
   [Anonymous], 2001, software focus
   Blouin A., 2014, IEEE WORK C SOFTW VI
   Blouin A, 2015, SOFTW SYST MODEL, V14, P321, DOI 10.1007/s10270-012-0300-x
   Blouin A, 2011, LECT NOTES COMPUT SC, V6981, P62, DOI 10.1007/978-3-642-24485-8_6
   Blouin A, 2010, EICS 2010: PROCEEDINGS OF THE 2010 ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS, P115
   Blouin Arnaud., 2011, Proceedings of the 3rd ACM SIGCHI symposium on Engineering interactive computing systems, EICS '11, P85, DOI DOI 10.1145/1996461.1996500
   Bull RI, 2006, INT C PROGRAM COMPRE, P100, DOI 10.1109/ICPC.2006.11
   Caserta P, 2011, IEEE T VIS COMPUT GR, V17, P913, DOI 10.1109/TVCG.2010.110
   Cockburn A, 2008, ACM COMPUT SURV, V41, DOI 10.1145/1456650.1456652
   Ducasse S, 2005, IEEE T SOFTWARE ENG, V31, P75, DOI 10.1109/TSE.2005.14
   Ducasse Stephane., 2007, Software Maintenance, P94
   Dwyer T., 2001, Proceedings of the 2001 Asia-Paci_c symposium on Information visualisation, P77
   Eades P., 2000, Journal of Graph Algorithms and Applications, V4, DOI 10.7155/jgaa.00029
   Eades P., 1997, Graph Drawing. Symposium on Graph Drawing, GD '96. Proceedings, P101
   Eades P., 1991, Preserving the mental map of a diagram
   Ehrig K., 2005, INT C AUTOMATED SOFT, P134, DOI DOI 10.1145/1101908.1101930
   Eichelberger H, 2009, INFORM SOFTWARE TECH, V51, P1686, DOI 10.1016/j.infsof.2009.04.008
   Eichelberger Holger., 2003, SOFTVIS 03 PROC 2003, P159, DOI DOI 10.1145/774833.774857
   Fondement F, 2013, LECT NOTES COMPUT SC, V8107, P138, DOI 10.1007/978-3-642-41533-3_9
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Frisch M, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P163
   Fuhrmann H, 2010, LECT NOTES COMPUT SC, V6394, P196
   Gallagher K., 2008, P FRONT SOFTW MAINT
   Ghani S, 2011, COMPUT GRAPH FORUM, V30, P861, DOI 10.1111/j.1467-8659.2011.01935.x
   Glinz M, 2002, INFORM SYST, V27, P425, DOI 10.1016/S0306-4379(02)00015-7
   Gogolla M., 1999, P UML 99, P1
   Gracanin D, 2005, INNOV SYST SOFTW ENG, V1, P221, DOI 10.1007/s11334-005-0019-8
   Grundy J, 2007, PROC INT CONF SOFTW, P282
   Grundy J, 2006, IEEE INT CONF AUTOM, P25
   Gueheneuc Y.-G., 2006, P 2006 C CTR ADV STU
   Gutwenger C., 2003, SOFTVIS 03, P179
   Herman I, 2000, IEEE T VIS COMPUT GR, V6, P24, DOI 10.1109/2945.841119
   Jeanneret C., 2011, INT C SOFTW ENG ICSE
   Jezequel J.-M., MASHUP METALANGUAGES
   Kagdi H, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P80
   Kienzle J, 2010, LECT NOTES COMPUT SC, V6210, P272
   Korel B., 2003, P IEEE INT C SOFTW M
   Kumar HP, 1997, INT J HUM-COMPUT ST, V46, P105, DOI 10.1006/ijhc.1996.0085
   Lallchandani J.T., IEEE T SOFTWARE ENG, P99
   Lange CFJ, 2007, INT C PROGRAM COMPRE, P221
   Lemon Krystle, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P156
   McIntosh P, 2008, LECT NOTES COMPUT SC, V5301, P264, DOI 10.1007/978-3-540-87875-9_19
   Meyer M., 2006, Proceedings of the 2006 ACM symposium on Software visualization, P135, DOI DOI 10.1145/1148493.1148513
   Minas M., 1995, Proceedings. 11th IEEE International Symposium on Visual Languages (Cat. No.95TB8105), P203, DOI 10.1109/VL.1995.520810
   Musial B., 2003, P AS PAC S INF VIS A, V24, P75
   Nugroho A, 2009, INFORM SOFTWARE TECH, V51, P1670, DOI 10.1016/j.infsof.2009.04.007
   OMG, 2007, UML 2 1 1 SPEC
   Plaisant C, 2002, INFOVIS 2002: IEEE SYMPOSIUM ON INFORMATION VISUALIZATION 2002, P57, DOI 10.1109/INFVIS.2002.1173148
   Porras GC, 2010, EMPIR SOFTW ENG, V15, P493, DOI 10.1007/s10664-009-9125-9
   Rayside D, 2003, INFORM SYST FRONT, V5, P161, DOI 10.1023/A:1022649506310
   Ren L, 2010, J VISUAL LANG COMPUT, V21, P209, DOI 10.1016/j.jvlc.2010.05.003
   Scharf A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P822, DOI 10.1109/ICSE.2013.6606628
   Schulz HJ, 2011, IEEE T VIS COMPUT GR, V17, P393, DOI 10.1109/TVCG.2010.79
   Seemann J., 1997, Graph Drawing. 5th International Symposium, GD '97. Proceedings, P415, DOI 10.1007/3-540-63938-1_86
   Sharif B, 2009, IEEE INT WORK VIS SO, P11, DOI 10.1109/VISSOF.2009.5336430
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Shneiderman B., 1994, IEEE SOFTWARE, P1
   Sillito J., 2006, Proc. of the ACM SIGSOFT Int'l Symp. on Foundations of Software Engineering, P23, DOI DOI 10.1145/1181775.1181779
   Sindre G., 1993, Proceedings 1993 IEEE Symposium on Visual Languages (Cat. No.93TH0562-9), P287, DOI 10.1109/VL.1993.269613
   Soh Z., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P163
   Storey MAD, 1999, J SYST SOFTWARE, V44, P171, DOI 10.1016/S0164-1212(98)10055-9
   Störrle H, 2012, S VIS LANG HUM CEN C, P49, DOI 10.1109/VLHCC.2012.6344480
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Tominski C, 2006, INFORMATION VISUALIZATION-BOOK, P17
   von Landesberger T, 2011, COMPUT GRAPH FORUM, V30, P1719, DOI 10.1111/j.1467-8659.2011.01898.x
   von Pilgrim J, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P95
   Ware C., 2002, Information Visualization, V1, P103, DOI 10.1057/palgrave.ivs.95000/3
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Wong K, 2006, SOFTWARE QUAL J, V14, P233, DOI 10.1007/s11219-006-9218-2
   Woo I, 2009, COMPUT GRAPH FORUM, V28, P943, DOI 10.1111/j.1467-8659.2009.01454.x
   Xu J. Qian, 2005, ACM SIGSOFT Software Engineering Notes, V30, P1, DOI [10.1145/1050849.1050865.36Y, DOI 10.1145/1050849.1050865]
   Yusuf S, 2007, INT C PROGRAM COMPRE, P113
NR 77
TC 10
Z9 10
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2015
VL 62
BP 124
EP 142
DI 10.1016/j.infsof.2015.02.007
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG3KL
UT WOS:000353179000007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lamprier, S
   Baskiotis, N
   Ziadi, T
   Hillah, LM
AF Lamprier, Sylvain
   Baskiotis, Nicolas
   Ziadi, Tewfik
   Hillah, Lom Messan
TI The CARE platform for the analysis of behavior model inference
   techniques
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Behavior; FSM; Inference; Benchmark; Evaluation
AB Context: Finite State Machine (FSM) inference from execution traces has received a lot of attention over the past few years. Various approaches have been explored, each holding different properties for the resulting models, but the lack of standard benchmarks limits the ability of comparing the proposed techniques. Evaluation is usually performed on a few case studies, which is useful for assessing the feasibility of the algorithm on particular cases, but fails to demonstrate effectiveness in a broad context. Consequently, understanding the strengths and weaknesses of inference techniques remains a challenging task.
   Objective: This paper proposes CARE, a general, approach-independent, platform for the intensive evaluation of FSM inference techniques.
   Method: Grounded in a program specification scheme that provides a good control on the expected program structures, it allows the production of large benchmarks with well identified properties.
   Results: The CARE platform demonstrates the following features: (1) providing a benchmarking mechanism for FSM inference techniques, (2) allowing analysis of existing techniques w.r.t. a class of programs and/or behaviors, and (3) helping users in choosing the best suited approach for their objective. Moreover, our extensive experiments on different FSM inference techniques highlight that they do not behave in the same manner on every class of program. Characterizing different classes of programs thus helps understanding the strengths and weaknesses of the studied techniques.
   Conclusion: Experiments reported in this paper show examples of use cases that demonstrate the ability of the platform to generate large and diverse sets of programs, which allows to carry out meaningful inference techniques analysis. The analysis strategies the CARE platform offers open new opportunities for program behavior learning, particularly in conjunction with model checking techniques. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Lamprier, Sylvain; Baskiotis, Nicolas; Ziadi, Tewfik] Univ Paris 06, Sorbonne Univ, LIP6, CNRS UMR 7606, F-75252 Paris 05, France.
   [Hillah, Lom Messan] Univ Paris Ouest Nanterre Def, LIP6, CNRS, UMR 7606, F-92001 Nanterre, France.
C3 Centre National de la Recherche Scientifique (CNRS); Sorbonne
   Universite; Sorbonne Universite; Universite Paris Nanterre; Centre
   National de la Recherche Scientifique (CNRS); Universite Paris Saclay
RP Hillah, LM (corresponding author), Univ Paris Ouest Nanterre Def, LIP6, CNRS, UMR 7606, 200 Ave Republ, F-92001 Nanterre, France.
CR ANGLUIN D, 1982, J ACM, V29, P741, DOI 10.1145/322326.322334
   [Anonymous], 1970, ACM SIGPLAN NOTICES, DOI DOI 10.1145/390013.808479
   [Anonymous], 2010, P 26 IEEE INT C SOFT, DOI DOI 10.1109/ICSM.2010.5609576
   Arts T, 2010, ERLANG 2010: PROCEEDINGS OF THE 2010 ACM SIGPLAN, ERLANG WORKSHOP, P1
   BESCHASTNIKH I., 2011, P 19 ACM SIGSOFT S 1, P267, DOI DOI 10.1145/2025113.2025151
   Beschastnikh I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P468, DOI 10.1145/2568225.2568246
   Beschastnikh I, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P252, DOI 10.1109/ICSE.2013.6606571
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Briand LC, 2006, IEEE T SOFTWARE ENG, V32, P642, DOI 10.1109/TSE.2006.96
   Clarke EdmundM., 2000, Proceedings of the International Conference on Computer Aided Veri cation (CAV), P154, DOI 10.1007/1072216715
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Delmon V., 2007, GENERIC EPSILON REMO
   Domínguez E, 2012, INFORM SOFTWARE TECH, V54, P1045, DOI 10.1016/j.infsof.2012.04.008
   GARCIA P, 1990, IEEE T PATTERN ANAL, V12, P920, DOI 10.1109/34.57687
   Georgeff M.P., 1984, ECAI, P219
   Harder M, 2003, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2003.1201188
   Harel D, 1997, COMPUTER, V30, P31, DOI 10.1109/2.596624
   Krka I., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P179, DOI 10.1145/1810295.1810324
   Lambeau B., 2012, EMPIRICAL SOFTWARE E, P1
   Lamprier S, 2014, IEEE INT C ENG COMP, P166, DOI 10.1109/ICECCS.2014.31
   Lamprier S, 2013, IEEE INT C ENG COMP, P252, DOI 10.1109/ICECCS.2013.44
   Lang K. J., 1998, Grammatical Inference. 4th International Colloquium, ICGI-98. Proceedings, P1, DOI 10.1007/BFb0054059
   Lo D., 2006, SIGSOFT FSE, P265
   Lo D, 2006, WORK CONF REVERSE EN, P51
   Lo D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P345, DOI 10.1145/1595696.1595761
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Mariani L, 2007, PROC INT CONF SOFTW, P85
   Nielson F., 1999, Principles of Program Analysis
   Ohmann T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P484, DOI 10.1145/2591062.2591107
   Raman A. V., 1997, P WORKSH AUT IND GRA
   Reiss SP, 2001, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2001.919096
   Rozinat A, 2008, LECT NOTES COMPUT SC, V4928, P84
   Santoro M., THESIS U STUDI MILAN, P23
   Schur M., 2013, Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering, ESEC/FSE'13, Saint Petersburg, Russian Federation, August 18-26, 2013, P422
   Sinha S, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P21, DOI 10.1109/WCRE.2007.36
   Tantini F, 2010, LECT NOTES ARTIF INT, V6339, P189, DOI 10.1007/978-3-642-15488-1_16
   Uchitel S, 2003, IEEE T SOFTWARE ENG, V29, P99, DOI 10.1109/TSE.2003.1178048
   Verwer S., 2012, P 11 INT C GRAMM INF, V21, P243
   Walkinshaw N., 2010, P 1 INT WORKSH MOD I, P1
   Whaley J., 2002, Software Engineering Notes, V27, P221, DOI 10.1145/566171.566212
   XIE T, 2003, SOFTWARE COMPONENT P
   Zhao CY, 2010, IEEE T SOFTWARE ENG, V36, P431, DOI 10.1109/TSE.2010.3
   Zhao CY, 2008, PROC INT C TOOLS ART, P395, DOI 10.1109/ICTAI.2008.68
NR 44
TC 1
Z9 1
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2015
VL 60
BP 32
EP 50
DI 10.1016/j.infsof.2014.12.004
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CB6IC
UT WOS:000349729700003
DA 2024-07-18
ER

PT J
AU Wedyan, F
   Ghosh, S
   Vijayasarathy, LR
AF Wedyan, Fadi
   Ghosh, Sudipto
   Vijayasarathy, Leo R.
TI An approach and tool for measurement of state variable based data-flow
   test coverage for aspect-oriented programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Aspect-oriented programming; Control and data flow test criteria;
   Empirical study; Higher order mutation; Mutation testing; Testing tools
ID DEF-USE ASSOCIATIONS; MUTATION ANALYSIS
AB Context: Data-flow testing approaches have been used for procedural and object-oriented programs, and shown to be effective in detecting faults. However, few such approaches have been evaluated for aspect-oriented programs. In such programs, data-flow interactions can occur between base classes and aspects, which can affect the behavior of both. Faults resulting from such interactions are hard to detect unless the interactions are specifically targeted during testing.
   Objective: This paper presents an approach and tool implementation for measuring data-flow coverage based on state variables defined in base classes or aspects in AspectJ programs. The paper also reports on an empirical study that compares the cost and effectiveness of data-flow test criteria that are based on state variables with two control-flow criteria.
   Method: Effectiveness of the criteria was evaluated for various fault types. Cost-effectiveness of test suites that cover all state variable definition-use associations (DUAs) was evaluated for three coverage levels: 100%, 90%, and 80%.
   Results: The effort needed to obtain a test case that achieves data-flow coverage is higher than the effort needed to obtain a test case that covers a block or a branch in an advised class. Covering certain data flow associations requires more effort than for other types of data flow associations. The data-flow test criteria based on state variables of a base-class are in general more effective than control-flow criteria.
   Conclusions: Overall, it is cost-effective to obtain test suites at the 90% coverage level of data-flow criteria. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Wedyan, Fadi] Hashemite Univ, Dept Software Engn, Zarka, Jordan.
   [Ghosh, Sudipto] Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
   [Vijayasarathy, Leo R.] Colorado State Univ, Dept Comp Informat Syst, Ft Collins, CO 80523 USA.
C3 Hashemite University; Colorado State University; Colorado State
   University
RP Ghosh, S (corresponding author), Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
RI Ghosh, Sudipto/ABI-4888-2020; Wedyan, Fadi/C-9053-2017
OI Wedyan, Fadi/0000-0003-4464-8688
CR Alexander R. T., 1999, Proceedings of Technology of Object-Oriented Languages and Systems - TOOLS 30 (Cat. No.PR00278), P104, DOI 10.1109/TOOLS.1999.787540
   Alexander R.T., 2004, TECH REP CS 4 105
   Alexander RT, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P15, DOI 10.1109/ISSRE.2000.885857
   Anbalagan P., 2008, ISSRE08 19TH INTERNA
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Briand Lionel C., 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P1
   Buy U., 2000, Software Engineering Notes, V25, P39, DOI 10.1145/347636.348870
   Delamare R, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P376, DOI 10.1109/ICST.2009.41
   Delamare R, 2009, IEEE ICST WORKSHOP, P200, DOI 10.1109/ICSTW.2009.41
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Fenton N., 1999, SOFTWARE METRICS A R
   Ferrari Fabiano Cutigi, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P52, DOI 10.1109/ICST.2008.37
   Ferrari Fabiano Cutigi., 2010, Proceedings of the 5th Workshop on Automation of Software Test, AST '10, P51
   Field A., 2009, Discovering statistics with SPSS, V3rd
   Harman M, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P185
   Harrold M. J., 1994, SIGSOFT Software Engineering Notes, V19, P154, DOI 10.1145/195274.195402
   HARROLD MJ, 1990, 1990 INTERNATIONAL CONFERENCE ON COMPUTER LANGUAGES, P297, DOI 10.1109/ICCL.1990.63786
   HARROLD MJ, 1989, ACM SIGSOFT, V14, P158, DOI 10.1145/75309.75327
   HARROLD MJ, 1991, IEEE SOFTWARE, V8, P58, DOI 10.1109/52.73750
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jia Y, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P249, DOI 10.1109/SCAM.2008.36
   Just R., 2014, PROCEEDINGS OF THE S
   Kerlinger FN, 1986, FOUNDATIONS OF BEHAV
   Laddad R., 2003, ACTION PRACTICAL ASP
   Lemos OAL, 2007, J SYST SOFTWARE, V80, P862, DOI 10.1016/j.jss.2006.08.022
   Lemos O.A. L., 2006, P 2 WORKSHOP TESTING, P33
   Lopes C. V., 2005, WTAOP PROCEEDINGS OF
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Martena V, 2002, IEEE INT C ENG COMP, P135, DOI 10.1109/ICECCS.2002.1181506
   Massachusetts Institute of Technology, 2010, RANDOOP 1 2 THE RAND
   Massicotte P, 2007, J OBJECT TECHNOL, V6, P67, DOI 10.5381/jot.2007.6.1.a1
   Mei-Hwa Chen, 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P73, DOI 10.1109/ISSRE.1999.809312
   Misurda J, 2005, PROC INT CONF SOFTW, P156
   Mortensen M., 2005, WTAOP PROCEEDINGS OF
   Namin AS, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P351, DOI 10.1145/1368088.1368136
   Orso A, 1998, THESIS
   Orso A., 1999, TCS99 PROCEEDINGS OF
   Ostrand TJ., 1991, P S TEST AN VER, P74
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   PANDE HD, 1994, IEEE T SOFTWARE ENG, V20, P385, DOI 10.1109/32.286418
   Pande HemantD., 1991, Proceedings of the Symposium on Testing, Analysis, and Verification, TAV4, P139, DOI DOI 10.1145/120807.120820
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Rapps S., 1982, Sixth International Conference on Software Engineering, P272
   Rinard M., 2004, Software Engineering Notes, V29, P147, DOI 10.1145/1041685.1029917
   Rountev A, 2006, LECT NOTES COMPUT SC, V3923, P2
   Souter AL, 2003, IEEE T SOFTWARE ENG, V29, P1005, DOI 10.1109/TSE.2003.1245302
   The AspectJ Team, 2008, THE ASPECTJ TEAM
   van Deursen A., 2005, TECH REP SEN R0507
   Wedyan F., 2010, Proceedings 2010 IEEE 12th International Symposium on High-Assurance Systems Engineering (HASE), P64, DOI 10.1109/HASE.2010.13
   Wedyan F., 2011, THESIS
   Wedyan F, 2012, INFORM SOFTWARE TECH, V54, P900, DOI 10.1016/j.infsof.2011.12.001
   Xie T., 2006, AOSD '06, P190
   Xu D., 2006, PROC INT C ASPECT OR, P180
   Xu DX, 2008, INT J SOFTW ENG KNOW, V18, P413, DOI 10.1142/S0218194008003672
   Xu DX, 2009, INT J SOFTW ENG KNOW, V19, P599, DOI 10.1142/S0218194009004313
   Xu G., 2008, P 7 INT C ASP OR SOF, P36
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Zhao J, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P188, DOI 10.1109/CMPSAC.2003.1245340
   Zhao JJ, 2006, INT CONF QUAL SOFTW, P38
   Zhenyi Jin, 1998, Software Testing, Verification and Reliability, V8, P133, DOI 10.1002/(SICI)1099-1689(1998090)8:3<133::AID-STVR162>3.0.CO;2-M
NR 64
TC 8
Z9 9
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2015
VL 59
BP 233
EP 254
DI 10.1016/j.infsof.2014.11.008
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CB1ZT
UT WOS:000349427200014
DA 2024-07-18
ER

PT J
AU Blake, MB
   Saleh, I
   Wei, Y
   Schlesinger, ID
   Yale-Loehr, A
   Liu, XZ
AF Blake, M. Brian
   Saleh, Iman
   Wei, Yi
   Schlesinger, Ian D.
   Yale-Loehr, Alexander
   Liu, Xuanzhe
TI Shared service recommendations from requirement specifications: A hybrid
   syntactic and semantic toolkit
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements engineering; Similarity analysis; Shared service discovery
AB Context: Software Requirement Specifications (SRSs) are central to software lifecycles. An SRS defines the functionalities and constraints of a desired software system, hence it often serves as reference for further development. Software lifecycles concerned with the conversion of traditional systems into more service-oriented infrastructures can benefit from understanding potential shared capabilities through the analysis of SRSs.
   Objective: In this paper, we propose an automated approach capable of recommending shared software services from multiple text-based SRSs created by different organizations. Our goal is to facilitate the identification of overlapping requirements in these specifications and subsequently recommend shared components, which promotes software reuse. The shared components can be implemented as services that are invoked across different systems.
   Method: Our approach leverages the syntactic similarity of the SRS text augmented with semantic information derived from the WordNet database. This work extends our earlier studies by introducing an algorithm that utilizes noun, verb, and predicate relations to enhance the discovery of equivalent requirements and the recommendation of reusable services. A prototype system is implemented to evaluate the approach and experimental results have shown effective recommendation of requirements and their realized shared services.
   Results: our automatic recommendation approach generates recommendations in few minutes compared to 9 h when services are manually inspected by developers. Our approach is also able to recommend services that are overlooked by the same developers, and to identify similarity between requirements even if these requirements are reworded.
   Conclusion: We show through experimentation that we can efficiently recommend services by leveraging both the syntactical structure and the semantic information of a requirements document and that our approach is more effective than the manual selection of services by experts. We also show that our approach is effective in detecting similar requirements for a single system and hence discovering opportunities for software reuse. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Blake, M. Brian; Saleh, Iman] Univ Miami, Coral Gables, FL 33124 USA.
   [Wei, Yi] Microsoft Corp, Seattle, WA USA.
   [Schlesinger, Ian D.] Georgetown Univ, Washington, DC USA.
   [Yale-Loehr, Alexander] US Army Corps Engn, Alexandria, VA USA.
   [Liu, Xuanzhe] Peking Univ, Beijing 100871, Peoples R China.
C3 University of Miami; Microsoft; Georgetown University; United States
   Department of Defense; United States Army; U.S. Army Corps of Engineers;
   U.S. Army Engineer Research & Development Center (ERDC); Peking
   University
RP Saleh, I (corresponding author), Univ Miami, Coral Gables, FL 33124 USA.
EM iman@miami.edu
FU NSF [0940553, 1004014, 0705130]; Direct For Computer & Info Scie &
   Enginr; Div Of Information & Intelligent Systems [0940553] Funding
   Source: National Science Foundation; Division Of Computer and Network
   Systems; Direct For Computer & Info Scie & Enginr [1004014] Funding
   Source: National Science Foundation; Div Of Information & Intelligent
   Systems; Direct For Computer & Info Scie & Enginr [0705130] Funding
   Source: National Science Foundation
FX We would like to acknowledge the prior work and discussions with Mr.
   Michael F. Nowlan with regards to the TSM-L approach. We acknowledge
   discussions with Dr. Aubrey Rembert in the development of the
   recommendation modeling. This work was supported in part by NSF Award
   Nos. 0940553, 1004014, and 0705130.
CR [Anonymous], 2011, WIDE FIELD INFRARED
   [Anonymous], 2010, THE EXPANDED VERY LA
   [Anonymous], 2011, UML TO XML DESIGN RU
   Benatallah B, 2005, DISTRIB PARALLEL DAT, V17, P5, DOI 10.1023/B:DAPD.0000045366.15607.67
   Blake MB, 2008, P IEEE I C SERV COMP, P229, DOI 10.1109/SCC.2008.68
   Blake MB, 2008, IEEE INTERNET COMPUT, V12, P62, DOI 10.1109/MIC.2008.112
   Blake MB, 2005, DECIS SUPPORT SYST, V40, P31, DOI 10.1016/j.dss.2004.04.003
   Casamayor A, 2010, INFORM SOFTWARE TECH, V52, P436, DOI 10.1016/j.infsof.2009.10.010
   Cook T.D., 1979, Quasi‐experimentation: design analysis issues for field setting
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dong X., 2004, Proceedings of the 30th International Conference on Very Large Data Bases (VLDB'04), V30, P372, DOI DOI 10.1016/B978-012088469-8.50035-8
   Faatz A., 2002, ONTOLOGY ENRICHMENT, P20
   Fuggetta A., 1996, SOFTWARE PROCESS
   Guo H, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P118
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   Hess A, 2003, LECT NOTES COMPUT SC, V2870, P258
   Hussain I, 2008, LECT NOTES COMPUT SC, V5039, P287
   I.C.S.S.E.S. Committee I. Electronics Engineers I.-S.S. Board, 1998, IEEE RECOMMENDED PRA
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P97, DOI 10.1007/s10664-007-9053-5
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   Medjahed B, 2003, VLDB J, V12, P333, DOI 10.1007/s00778-003-0101-5
   Menzies T, 2006, COMPUTER, V39, P112, DOI 10.1109/MC.2006.348
   Meth H, 2013, INFORM SOFTWARE TECH, V55, P1695, DOI 10.1016/j.infsof.2013.03.008
   Pu K., SYNTACTIC RULE BASED
   Rocco D, 2005, 2005 IEEE International Conference on Web Services, Vols 1 and 2, Proceedings, P481
   Sirin Evren., 2003, Web services: modeling, architec- ture and infrastructure workshop in ICEIS, V2003
   Spanoudakis G., 1999, Automated Software Engineering, V6, P171, DOI 10.1023/A:1008718614166
   Srihari R. K., 2000, Information Retrieval, V2, P245, DOI 10.1023/A:1009962928226
   Srivastava B., 2003, ICAPS 2003 WORKSHOP, P28
   Williams AB, 2005, IEEE T KNOWL DATA EN, V17, P969, DOI 10.1109/TKDE.2005.109
   Wohlin C., 2012, SOFTWARE ENGINEERING
   Yale-Loehr Alexander, 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P186, DOI 10.1109/SCC.2010.68
   Zachos K., 2006, Proceedings of the 2006 international workshop on Service-oriented software engineering, P60
NR 33
TC 5
Z9 5
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 392
EP 404
DI 10.1016/j.infsof.2014.05.019
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500023
DA 2024-07-18
ER

PT J
AU Matinnejad, R
   Nejati, S
   Briand, L
   Bruckmann, T
   Poull, C
AF Matinnejad, Reza
   Nejati, Shiva
   Briand, Lionel
   Bruckmann, Thomas
   Poull, Claude
TI Search-based automated testing of continuous controllers: Framework,
   tool support, and case studies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 17th International Conference on Evaluation and Assessment in software
   Engineering
CY APR 14-16, 2013
CL Porto de Galinhas, BRAZIL
DE Search-based testing; Continuous controllers; Model-in-the-loop testing;
   Automotive software systems; Simulink models
ID TEST-DATA GENERATION; COVERAGE
AB Context: Testing and verification of automotive embedded software is a major challenge. Software production in automotive domain comprises three stages: Developing automotive functions as Simulink models, generating code from the models, and deploying the resulting code on hardware devices. Automotive software artifacts are subject to three rounds of testing corresponding to the three production stages: Model-in-the-Loop (MiL), Software-in-the-Loop (SiL) and Hardware-in-the-Loop (HiL) testing.
   Objective: We study testing of continuous controllers at the Model-in-Loop (MiL) level where both the controller and the environment are represented by models and connected in a closed loop system. These controllers make up a large part of automotive functions, and monitor and control the operating conditions of physical devices.
   Method: We identify a set of requirements characterizing the behavior of continuous controllers, and develop a search-based technique based on random search, adaptive random search, hill climbing and simulated annealing algorithms to automatically identify worst-case test scenarios which are utilized to generate test cases for these requirements.
   Results: We evaluated our approach by applying it to an industrial automotive controller (with 443 Simulink blocks) and to a publicly available controller (with 21 Simulink blocks). Our experience shows that automatically generated test cases lead to MiL level simulations indicating potential violations of the system requirements. Further, not only does our approach generate significantly better test cases faster than random test case generation, but it also achieves better results than test scenarios devised by domain experts. Finally, our generated test cases uncover discrepancies between environment models and the real world when they are applied at the Hardware-in-the-Loop (HiL) level.
   Conclusion: We propose an automated approach to MiL testing of continuous controllers using search. The approach is implemented in a tool and has been successfully applied to a real case study from the automotive domain. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Matinnejad, Reza; Nejati, Shiva; Briand, Lionel] Univ Luxembourg, SnT Ctr, L-2721 Luxembourg, Luxembourg.
   [Bruckmann, Thomas; Poull, Claude] Delphi Automot Syst, L-4940 Luxembourg, Luxembourg.
C3 University of Luxembourg; Delphi
RP Matinnejad, R (corresponding author), Univ Luxembourg, SnT Ctr, 4 Rue Alphonse Weicker, L-2721 Luxembourg, Luxembourg.
EM reza.matinnejad@uni.lu; shiva.nejati@uni.lu; lionel.briand@uni.lu;
   thomas.bruckmann@delphi.com; claude.poull@delphi.com
RI Nejati, Shiva/KBT-7650-2024
OI Nejati, Shiva/0000-0002-0281-8231
FU Fonds National de la Recherche - Luxembourg [FNR/P10/03, FNR 4878364];
   Delphi Automotive Systems, Luxembourg
FX Supported by the Fonds National de la Recherche - Luxembourg (FNR/P10/03
   and FNR 4878364), and Delphi Automotive Systems, Luxembourg.
CR Alur R., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P8
   [Anonymous], 2004, Control System Engineering
   [Anonymous], 2001, SYMBOLIC ANAL LAB HO
   [Anonymous], P 12 ANN C GEN EV CO
   [Anonymous], REACT TEST
   [Anonymous], MODEL BASED TESTING
   [Anonymous], 2010, P 15 IEEE INT C EMER
   Anthony Capon J., 1991, Elementary Statistics for the Social Sciences: Study Guide
   Arcuri A., 2012, SOFTW TEST VERIF REL
   Baresel A, 2003, LECT NOTES COMPUT SC, V2724, P2428
   Cohen J., 1988, STAT POWER ANAL BEHA, VSecond, P1, DOI DOI 10.1016/B978-0-12-179060-8.50006-2
   Elberzhager F., 2013, P INT WORKSH JOIN AC, P29
   Gadkari AA, 2008, LECT NOTES COMPUT SC, V5123, P204
   Ghani K, 2009, IEEE C EVOL COMPUTAT, P2940, DOI 10.1109/CEC.2009.4983313
   Grinstein G., 2001, DATA MINING C KDD WO, P7
   Henzinger T.A., 2000, THEORY HYBRID AUTOMA
   Henzinger TA, 2006, LECT NOTES COMPUT SC, V4085, P1
   Isaksson A, 2002, IEE P-CONTR THEOR AP, V149, P1, DOI 10.1049/ip-cta:20020319
   Lee E.A., 2010, INTRO EMBEDDED SYSTE, V1st
   Luke S, 2009, Essentials of Metaheuristics
   Matinnejad Reza, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P141, DOI 10.1007/978-3-642-39742-4_12
   Mohalik S., 2013, SOFTW TEST VERIF REL
   Pretschner A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P55, DOI 10.1109/FOSE.2007.22
   Raskin JF, 2005, CONTROL ENGN SER BIR, P491
   Sahbani A, 2000, EUR SIM MULT SIM MOD, P271
   Satpathy M, 2012, SOFTW TEST VERIF REL, V22, P457, DOI 10.1002/stvr.444
   Sims S, 2007, ACM SIGPLAN NOTICES, V42, P137, DOI 10.1145/1291220.1291172
   Skruch P., 2011, MODEL BASED TESTING, P293
   Staats M, 2012, LECT NOTES COMPUT SC, V7212, P409, DOI 10.1007/978-3-642-28872-2_28
   Stauner T, 2004, FORM METHOD SYST DES, V24, P223, DOI 10.1023/B:FORM.0000026091.03793.cf
   The MathWorks Inc, 2009, DC MOT SIM MOD
   The MathWorks Inc, 2003, SIM
   The MathWorks Inc, 2011, EMB COD
   The MathWorks Inc, 2003, MATL QUAS RAND NUMB
   Vos T.E., 2013, SOFTW QUAL J, V1, P1
   Wegener J, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P81, DOI 10.1109/SSBSE.2009.15
   Wescott T, 2000, EMBED SYST PROGRAM, V13, P86
   Wikipedia, 2004, PID CONTR
   Wilmes Benjamin, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P202, DOI 10.1109/ICSTW.2010.22
   Windisch A, 2009, IEEE ICST WORKSHOP, P121, DOI 10.1109/ICSTW.2009.16
   Zander-Nowicka J., 2009, THESIS ELEKT INFORMA
   Zhan Y, 2004, LECT NOTES COMPUT SC, V3103, P1413
   Zhan Y, 2008, J SYST SOFTWARE, V81, P262, DOI 10.1016/j.jss.2007.05.039
   Zhan Y, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1941
   Zhan Y, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1061
NR 45
TC 41
Z9 41
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 705
EP 722
DI 10.1016/j.infsof.2014.05.007
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA AU9YI
UT WOS:000345947500040
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Paternoster, N
   Giardino, C
   Unterkalmsteiner, M
   Gorschek, T
   Abrahamsson, P
AF Paternoster, Nicolo
   Giardino, Carmine
   Unterkalmsteiner, Michael
   Gorschek, Tony
   Abrahamsson, Pekka
TI Software development in startup companies: A systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software development; Startups; Systematic mapping study
ID ENGINEERING RESEARCH; PROCESS IMPROVEMENT; LITERATURE-REVIEWS; GROUNDED
   THEORY; HIGH-TECH; ORGANIZATIONS; STRATEGY; SUCCESS; TIME
AB Context: Software startups are newly created companies with no operating history and fast in producing cutting-edge technologies. These companies develop software under highly uncertain conditions, tackling fast-growing markets under severe lack of resources. Therefore, software startups present a unique combination of characteristics which pose several challenges to software development activities.
   Objective: This study aims to structure and analyze the literature on software development in startup companies, determining thereby the potential for technology transfer and identifying software development work practices reported by practitioners and researchers.
   Method: We conducted a systematic mapping study, developing a classification schema, ranking the selected primary studies according their rigor and relevance, and analyzing reported software development work practices in startups.
   Results: A total of 43 primary studies were identified and mapped, synthesizing the available evidence on software development in startups. Only 16 studies are entirely dedicated to software development in startups, of which 10 result in a weak contribution (advice and implications (6); lesson learned (3); tool (1)). Nineteen studies focus on managerial and organizational factors. Moreover, only 9 studies exhibit high scientific rigor and relevance. From the reviewed primary studies, 213 software engineering work practices were extracted, categorized and analyzed.
   Conclusion: This mapping study provides the first systematic exploration of the state-of-art on software startup research. The existing body of knowledge is limited to a few high quality studies. Furthermore, the results indicate that software engineering work practices are chosen opportunistically, adapted and configured to provide value under the constrains imposed by the startup context. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Paternoster, Nicolo; Giardino, Carmine; Unterkalmsteiner, Michael; Gorschek, Tony] Blekinge Inst Technol, SE-37179 Karlskrona, Sweden.
   [Abrahamsson, Pekka] Free Univ Bolzano Bozen, I-39100 Bolzano, Italy.
C3 Blekinge Institute Technology; Free University of Bozen-Bolzano
RP Unterkalmsteiner, M (corresponding author), Blekinge Inst Technol, SE-37179 Karlskrona, Sweden.
EM mun@bth.se
RI ; Abrahamsson, Pekka/A-5559-2018
OI Unterkalmsteiner, Michael/0000-0003-4118-0952; Abrahamsson,
   Pekka/0000-0002-4360-2226
CR Adebanjo D., 2010, 2010 IEEE International Conference on Industrial Engineering & Engineering Management (IE&EM 2010), P163, DOI 10.1109/IEEM.2010.5674446
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ali N., 2010, THESIS BLEKINGE I TE
   Alves C., 2006, P 9 WORKSHOP REQUIRE
   Ambler SW, 2002, IEEE SOFTWARE, V19, P66, DOI 10.1109/52.991334
   [Anonymous], 2010, The importance of startups in job creation and job destruction
   [Anonymous], ENTREPRENEURIAL SUCC
   Bach J, 1998, COMPUTER, V31, P111, DOI 10.1109/2.652976
   Banerjee I, 2013, INFORM SOFTWARE TECH, V55, P1679, DOI 10.1016/j.infsof.2013.03.004
   Barney S, 2012, INFORM SOFTWARE TECH, V54, P651, DOI 10.1016/j.infsof.2012.01.008
   Basili VR, 2010, COMPUTER, V43, P57, DOI 10.1109/MC.2010.108
   Bean L, 2005, J CORP ACCOUNT FINAN, V16, P3, DOI 10.1002/jcaf.20128
   Blank S., 2013, 4 STEPS EPIPHANY SUC
   Blank S, 2013, HARVARD BUS REV, V91, P64
   Blank S, 2011, NATURE, V477, P133, DOI 10.1038/477133a
   Bosch J., 2013, LEAN ENTERPRISE SOFT, V167, DOI [10.1007/978-3-642-44930-7_1, DOI 10.1007/978-3-642-44930-7_1]
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Carmel E., 1994, Proceedings of the Twenty-Seventh Hawaii International Conference on System Sciences. Vol.IV: Information Systems: Collaboration Technology Organizational Systems and Technology (Cat. No.94TH0607-2), P498, DOI 10.1109/HICSS.1994.323468
   Chorev S, 2006, TECHNOVATION, V26, P162, DOI 10.1016/j.technovation.2005.06.014
   Christensen C.M., 1997, INNOVATORS DILEMMA
   Clark T, 2012, SOFTW SYST MODEL, V11, P481, DOI 10.1007/s10270-012-0260-1
   Coleman G., 2005, SYST SCI 2005 HICSS, p315c
   Coleman G, 2008, J SYST SOFTWARE, V81, P772, DOI 10.1016/j.jss.2007.07.027
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Coleman G, 2008, J ENTERP INF MANAG, V21, P633, DOI 10.1108/17410390810911221
   Crowne M, 2002, IEMC-2002: IEEE INTERNATIONAL ENGINEERING MANAGEMENT CONFERENCE, VOLS I AND II, PROCEEDINGS, P338, DOI 10.1109/IEMC.2002.1038454
   da Silva AF, 2005, LECT NOTES COMPUT SC, V3556, P10
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   Dahlstedt A., 2003, P 3 C PROM RES IT
   Deakins E., 2005, International Journal of Project Management, V23, P65, DOI 10.1016/j.ijproman.2004.05.007
   Deias R., 2002, P 3 INT C EXTR PROGR, P62
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Eisenhardt KM, 1998, HARVARD BUS REV, V76, P59
   Fayad ME, 1997, COMMUN ACM, V40, P125, DOI 10.1145/265684.265701
   Fuggetta A., 2000, P C LIM IR FUT SOFTW, P25, DOI DOI 10.1145/336512.336521
   Gamma E., 1993, ECOOP '93 - Object-Oriented Programming. 7th European Conference Proceedings, P406
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Hanna Rosine, 2010, International Journal of Services Science, V3, P21, DOI 10.1504/IJSSCI.2010.029862
   Hasel M., 2010, BUS INF SYST ENG, V52, P210
   Heitlager I, 2006, SECOND INTERNATIONAL IEEE WORKSHOP ON SOFTWARE EVOLVABILITY, PROCEEDINGS, P16, DOI 10.1109/SOFTWARE-EVOLVABILITY.2006.17
   Heitlager I, 2007, THIRD INTERNATIONAL IEEE WORKSHOP ON SOFTWARE EVOLVABILITY, PROCEEDINGS, P42
   Hilmola OP, 2003, SYST DYNAM REV, V19, P75, DOI 10.1002/sdr.255
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Ivarsson M, 2009, REQUIR ENG, V14, P155, DOI 10.1007/s00766-009-0080-1
   Janson S, 2008, IEEE SOFTWARE, V25, P42, DOI 10.1109/MS.2008.155
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kajko-Mattsson Mira, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P617, DOI 10.1109/CSSE.2008.1370
   Kakati M, 2003, TECHNOVATION, V23, P447, DOI 10.1016/S0166-4972(02)00014-7
   Karlsson Lena, 2002, P 8 INT WORKSH REQ E
   KEIL M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203356.203363
   Kim E., 2005, P 38 ANN HAW INT C S, V07, P1
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kuhn D., 1989, ANN WEST COMP S
   Kurtz CF, 2003, IBM SYST J, V42, P462, DOI 10.1147/sj.423.0462
   Kuvinka K., 2011, P TECHN COMM SUMM, P18
   Lai S.-l., 2010, WORLD ACAD SCI ENG T, V72, P405
   Laporte CY, 2008, COMM COM INF SC, V16, P129
   Li SC, 2007, PORTL INT CONF MANAG, P1126, DOI 10.1109/PICMET.2007.4349435
   Liu C, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P282, DOI 10.1109/ICST.2013.24
   MacCormack A, 2001, MIT SLOAN MANAGE REV, V42, P75
   Marmer M., 2011, Startup Genome Report 01, A new framework for understanding why startups succeed
   Martin K, 2007, IEEE SOFTWARE, V24, P46, DOI 10.1109/MS.2007.5
   Mater JL, 2000, EIGHTEENTH ANNUAL PACIFIC NORTHWEST SOFTWARE QUALITY CONFERENCE, PROCEEDINGS, P297
   May Beverly, 2012, Proceedings of the 2012 Agile Conference, P141, DOI 10.1109/Agile.2012.18
   Midler Christophe, 2008, International Journal of Project Management, V26, P479, DOI 10.1016/j.ijproman.2008.05.003
   Mirel B., 2000, ACM J COMPUTER DOCUM, V24, P185
   Natt Och Dag J., 2002, THESIS LUND I TECHNO
   Paspallis N, 2008, LECT NOTES COMPUT SC, V5331, P553
   Paternoster N., 2013, SUPPLEMENTARY MAT SO
   Perkins AnthonyB., 1999, The Internet Bubble, Inside the Overvalued World of High-Tech Stocks - And What You Need to Know to Avoid the Coming Shakeout
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Potts C., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P128, DOI 10.1109/ISRE.1995.512553
   Richardson I, 2007, IEEE SOFTWARE, V24, P18, DOI 10.1109/MS.2007.12
   Ries E, 2011, The Lean Startup
   Robson C., 2009, Real world research: A resource for social scientists and practitioner researchers
   Rosenbusch N, 2011, J BUS VENTURING, V26, P441, DOI 10.1016/j.jbusvent.2009.12.002
   Rumsey S., 2008, How to find information: a guide for researchers
   Saracevic T., 1995, SIGIR Forum, P138
   SAWYER P, 1999, P INT C PROD FOC SOF
   Sayers A., 2007, BRIT J GEN PRACT, V1, P542
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Smutny P., 2012, 2012 13th International Carpathian Control Conference (ICCC 2012), P653, DOI 10.1109/CarpathianCC.2012.6228727
   Stanfill R., 2007, P AM SOC ENG ED ANN
   Staples M, 2007, J SYST SOFTWARE, V80, P883, DOI 10.1016/j.jss.2006.09.008
   Steenhuis HJ, 2008, 2008 IEEE INTERNATIONAL CONFERENCE ON MANAGEMENT OF INNOVATION AND TECHNOLOGY, VOLS 1-3, P837, DOI 10.1109/ICMIT.2008.4654475
   Storey D.J., 1982, ENTREPRENEURSHIP NEW
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Sutton SM, 2000, IEEE SOFTWARE, V17, P33, DOI 10.1109/52.854066
   Taipale M, 2010, LECT NOTES BUS INF, V65, P111, DOI 10.1007/978-3-642-16416-3_16
   Tanabian MM, 2005, 2005 IEEE International Engineering Management Conference, Vols 1 and 2, P789
   Taticchi P, 2010, MEAS BUS EXCELL, V14, P4, DOI 10.1108/13683041011027418
   Thorpe R, 2005, INT J MANAG REV, V7, P257, DOI 10.1111/j.1468-2370.2005.00116.x
   Tingling P, 2007, LECT NOTES COMPUT SC, V4550, P242
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   Wall DAE, 2001, COMPUTER, V34, P158, DOI 10.1109/2.970592
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wood D., 2005, TRMS1287 U MAR MIND
   Yoffie D., 1999, CALIFORNIA MANAGEMEN, V4
   Yogendra S, 2002, IEMC-2002: IEEE INTERNATIONAL ENGINEERING MANAGEMENT CONFERENCE, VOLS I AND II, PROCEEDINGS, P2, DOI 10.1109/IEMC.2002.1038356
   Yoo C, 2012, J MEDIA ECON, V25, P244, DOI 10.1080/08997764.2012.729546
   Zettell J., 2001, Product Focused Software Process Improvement. Third International Conference, PROFES 2001. Proceedings (Lecture Notes in Computer Science Vol.2188), P255
   Zhang H, 2013, INFORM SOFTWARE TECH, V55, P1341, DOI 10.1016/j.infsof.2012.09.008
NR 109
TC 215
Z9 236
U1 2
U2 77
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2014
VL 56
IS 10
BP 1200
EP 1218
DI 10.1016/j.infsof.2014.04.014
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AN8JO
UT WOS:000340850700003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lokan, C
   Mendes, E
AF Lokan, Chris
   Mendes, Emilia
TI Investigating the use of duration-based moving windows to improve
   software effort prediction: A replicated study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Chronological splitting; Effort estimation; Regression-based estimation
   models; Moving window
ID COST ESTIMATION
AB Context: Most research in software effort estimation has not considered chronology when selecting projects for training and testing sets. A chronological split represents the use of a projects starting and completion dates, such that any model that estimates effort for a new project p only uses as training data projects that were completed prior to p's start. Four recent studies investigated the use of chronological splits, using moving windows wherein only the most recent projects completed prior to a projects starting date were used as training data. The first three studies (S1-S3) found some evidence in favor of using windows; they all defined window sizes as being fixed numbers of recent projects. In practice, we suggest that estimators think in terms of elapsed time rather than the size of the data set, when deciding which projects to include in a training set. In the fourth study (S4) we showed that the use of windows based on duration can also improve estimation accuracy.
   Objective: This papers contribution is to extend S4 using an additional dataset, and to also investigate the effect on accuracy when using moving windows of various durations.
   Method: Stepwise multivariate regression was used to build prediction models, using all available training data, and also using windows of various durations to select training data. Accuracy was compared based on absolute residuals and MREs; the Wilcoxon test was used to check statistical significances between results. Accuracy was also compared against estimates derived from windows containing fixed numbers of projects.
   Results: Neither fixed size nor fixed duration windows provided superior estimation accuracy in the new data set.
   Conclusions: Contrary to intuition, our results suggest that it is not always beneficial to exclude old data when estimating effort for new projects. When windows are helpful, windows based on duration are effective. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Lokan, Chris] UNSW Canberra, Sch Engn & Informat Technol, Canberra, ACT, Australia.
   [Mendes, Emilia] Blekinge Inst Technol, Software Engn Res Lab, Karlskrona, Sweden.
C3 University of New South Wales Sydney; Blekinge Institute Technology
RP Lokan, C (corresponding author), UNSW Canberra, Sch Engn & Informat Technol, Canberra, ACT, Australia.
EM c.lokan@adfa.edu.au; emilia.mendes@bth.se
RI Mendes, Maria E/B-4207-2015
OI Mendes, Emilia/0000-0003-0449-5322
CR Amasaki S., 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P188, DOI 10.1109/IWSM-MENSURA.2011.29
   Amasaki S., 2012, IWSM MENS 12
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 2002, Applied Statistics for Software Managers
   Auer M, 2006, IEEE T SOFTWARE ENG, V32, P83, DOI 10.1109/TSE.2006.1599418
   Auer M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P147
   Boehm BW., 1981, Software Engineering Economics
   COOK RD, 1977, TECHNOMETRICS, V19, P15, DOI 10.2307/1268249
   Ferrucci F, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P441, DOI 10.1109/SEAA.2008.60
   Han J., 2006, DATA MINING CONCEPTS
   Harrell F.E., 2001, Regression modeling strategies: with applications to linear models, logistic regression, and survival analysis
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Lefley M, 2003, LECT NOTES COMPUT SC, V2724, P2477
   Lokan C, 2001, IEEE SOFTWARE, V18, P26, DOI 10.1109/52.951491
   Lokan C., 2009, P 32 AUSTR COMP SCI
   Lokan C., 2008, P 12 C EV ASS SOFTW, P151
   Lokan C, 2012, ASIA PAC SOFWR ENG, P818, DOI 10.1109/APSEC.2012.74
   Lokan C, 2009, INT SYMP EMP SOFTWAR, P111, DOI 10.1109/ESEM.2009.5316019
   MacDonell S.G., 2010, P 2010 ACM IEEE INT
   Maxwell KD, 2000, IEEE SOFTWARE, V17, P80, DOI 10.1109/52.820015
   MENDES E, 2006, WEB ENG
   Mendes E., 2009, P 13 C EV ASS SOFTW
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Mohapatra S., 2011, INT J INFORM PROCESS, V2, P90
   Paiva E, 2010, INNOVATIONS IN COMPUTING SCIENCES AND SOFTWARE ENGINEERING, P99, DOI 10.1007/978-90-481-9112-3_17
   Ruhe M, 2003, PROC INT CONF SOFTW, P285, DOI 10.1109/ICSE.2003.1201208
   Sentas P, 2005, INFORM SOFTWARE TECH, V47, P17, DOI 10.1016/j.infsof.2004.05.001
   Tabachnick B.G., 2012, Using multivariate statistics, V6th
   Trendowicz A., 2009, ADV COMPUTERS, V77
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
NR 32
TC 26
Z9 26
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2014
VL 56
IS 9
BP 1063
EP 1075
DI 10.1016/j.infsof.2014.02.008
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AJ6ER
UT WOS:000337783000001
DA 2024-07-18
ER

PT J
AU Zhang, WB
   Zhou, XW
   Zhang, JH
   Zhang, ZY
   Zhong, H
AF Zhang, Wenbo
   Zhou, Xiaowei
   Zhang, Jianhua
   Zhang, Zhenyu
   Zhong, Hua
TI A class loading sensitive approach to detection of runtime type errors
   in component-based Java programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Runtime error detection; Class loading; Component-based
ID POINTS-TO ANALYSIS
AB Context: The employment of class loaders in component-based Java programs may introduce runtime type errors, which may happen at any statement related to class loading, and may be wrapped into various types of exceptions raised by JVM. Traditional static analysis approaches are inefficient to detect them.
   Objective: Our previous work proposed a semi-static detection work based on points-to analysis to detect such runtime type errors. In this paper, we extend previous work by referencing the information obtained from class loading to detect runtime type errors in component-based Java programs, without the need to running them.
   Method: Our approach extends the typical points-to analysis by gathering the behavior information of Java class loaders and figuring out the defining class loader of the allocation sites. By doing that, we obtain the runtime types of objects a reference variable may point to, and make use of such information to facilitate runtime type error detecting.
   Results: Results on four case studies show that our approach is feasible, can effectively detect runtime errors missed by traditional static checking methods, and performs acceptably in both false negative test and scalability test. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Zhang, Wenbo; Zhou, Xiaowei; Zhang, Jianhua; Zhang, Zhenyu; Zhong, Hua] Chinese Acad Sci, Inst Software, Technol Ctr Software Engn, Beijing 100190, Peoples R China.
   [Zhou, Xiaowei; Zhang, Jianhua] Chinese Acad Sci, Grad Univ, Beijing 100190, Peoples R China.
   [Zhang, Zhenyu; Zhong, Hua] State Key Lab Comp Sci, Beijing 100190, Peoples R China.
C3 Chinese Academy of Sciences; Institute of Software, CAS; Chinese Academy
   of Sciences; University of Chinese Academy of Sciences, CAS; Chinese
   Academy of Sciences
RP Zhang, WB (corresponding author), Chinese Acad Sci, Inst Software, Technol Ctr Software Engn, Beijing 100190, Peoples R China.
EM zhangwenbo@otcaix.iscas.ac.cn
RI Zhang, Jianhua/AAQ-5342-2020; zhong, hua/JRW-4786-2023; Zhang,
   Wenbo/Q-3277-2016; zhang, zhenyu/HOA-8440-2023
FU National Key Basic Research Program of China [2014CB340701]; National
   Natural Science Foundation of China [61173004, 61379045]
FX This work is supported by the National Key Basic Research Program of
   China (Grant No. 2014CB340701) and the National Natural Science
   Foundation of China (Grant No. 61173004, 61379045).
CR Andersen L. O., 1994, PROGRAM ANAL SPECIAL
   [Anonymous], THEOREM PROVING HIGH
   Cui Zhan-Qi, 2011, Chinese Journal of Computers, V34, P953, DOI 10.3724/SP.J.1016.2011.00953
   Dufour B., 2008, P 16 ACM SIGSOFT INT
   Gama K, 2010, LECT NOTES COMPUT SC, V6092, P130, DOI 10.1007/978-3-642-13238-4_8
   Gosling J., 2005, Java Language Specification, Vthird
   Jones ND, 1996, ACM COMPUT SURV, V28, P480, DOI 10.1145/243439.243447
   Lhoták O, 2006, LECT NOTES COMPUT SC, V3923, P47
   Lhotak O., 2006, Program analysis using binary decision diagrams
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   Milanova A, 2005, ACM T SOFTW ENG METH, V14, P1, DOI 10.1145/1044834.1044835
   Sawin J, 2009, AUTOMAT SOFTW ENG, V16, P357, DOI 10.1007/s10515-009-0049-9
   Sommerville Ian, 2016, Software engineering 8
   Tozawa A., 2002, Higher-Order and Symbolic Computation, V15, P7, DOI 10.1023/A:1019912130555
   Vallee-Rai Raja, 1998, Jimple: Simplifying Java bytecode for analyses and transformations
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 33
TC 0
Z9 0
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2014
VL 56
IS 9
BP 1076
EP 1085
DI 10.1016/j.infsof.2014.04.005
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AJ6ER
UT WOS:000337783000002
DA 2024-07-18
ER

PT J
AU Kosti, MV
   Feldt, R
   Angelis, L
AF Kosti, Makrina Viola
   Feldt, Robert
   Angelis, Lefteris
TI Personality, emotional intelligence and work preferences in software
   engineering: An empirical study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Personality; Empirical study; Five Factor Model;
   Self-compassion; TEIQue
ID BRIGGS TYPE INDICATOR; SELF-COMPASSION; 5-FACTOR MODEL; BIG 5;
   DEPRESSION; ROLES
AB Context: There is an increasing awareness among Software Engineering (SE) researchers and practitioners that more focus is needed on understanding the engineers developing software. Previous studies show significant associations between the personalities of software engineers and their work preferences.
   Objective: Various studies on personality in SE have found large, small or no effects and there is no consensus on the importance of psychometric measurements in SE. There is also a lack of studies employing other psychometric instruments or using larger datasets. We aim to evaluate our results in a larger sample, with software engineers in an earlier state of their career, using advanced statistics.
   Method: An operational replication study where extensive psychometric data from 279 master level students have been collected in a SE program at a Swedish University. Personality data based on the Five-Factor Model, Trait Emotional Intelligence Questionnaire and Self-compassion have been collected. Statistical analysis investigated associations between psychometrics and work preferences and the results were compared to our previous findings from 47 SE professionals.
   Results: Analysis confirms existence of two main clusters of software engineers; one with more "intense" personalities than the other. This corroborates our earlier results on SE professionals. The student data also show similar associations between personalities and work preferences. However, for other associations there are differences due to the different population of subjects. We also found connections between the emotional intelligence and work preferences, while no associations were found for self-compassion.
   Conclusion: The associations can help managers to predict and adapt projects and tasks to available staff. The results also show that the Emotional Intelligence instrument can be predictive. The research methods and analytical tools we employ can detect subtle associations and reflect differences between different groups and populations and thus can be important tools for future research as well as industrial practice. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Kosti, Makrina Viola; Angelis, Lefteris] Aristotle Univ Thessaloniki, Dept Informat, GR-54006 Thessaloniki, Greece.
   [Feldt, Robert] Chalmers Univ Technol, Dept Comp Sci & Engn, S-41296 Gothenburg, Sweden.
   [Feldt, Robert] Blekinge Inst Technol, Dept Comp, Software Engn Res Lab, Karlskrona, Sweden.
C3 Aristotle University of Thessaloniki; Chalmers University of Technology;
   Blekinge Institute Technology
RP Kosti, MV (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, GR-54006 Thessaloniki, Greece.
EM mkosti@csd.auth.gr; robert.feldt@bth.se; lef@csd.auth.gr
CR Acuña ST, 2009, INFORM SOFTWARE TECH, V51, P627, DOI 10.1016/j.infsof.2008.08.006
   Acuña ST, 2004, SOFTWARE PRACT EXPER, V34, P675, DOI 10.1002/spe.586
   AKAIKE H, 1974, IEEE T AUTOMAT CONTR, VAC19, P716, DOI 10.1109/TAC.1974.1100705
   Alvesson M., 2004, Knowledge Work and Knowledge-Intensive Firms
   [Anonymous], 2003, WELL BEING FDN HEDON
   [Anonymous], 1971, The Psychology of Computer Programming
   [Anonymous], 2010, Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering-Volume 1, ICSE'10
   [Anonymous], 2010, P 2010 ACM IEEE INT, DOI DOI 10.1145/1852786.1852816
   [Anonymous], J PARAMETR
   [Anonymous], 2004, SIGNIFICANCE TESTING, DOI DOI 10.1037/10693-000
   [Anonymous], 1985, MANUAL GUIDE DEV USE
   [Anonymous], 2008, MODERN METHODS ROBUS
   [Anonymous], PERSONALITY SOFTWARE
   Atkinson R.L., 1990, Introduction to psychology, V10th
   Bell D, 2010, SIGMIS CPR '10: PROCEEDINGS OF THE 2010 ACM SIGMIS COMPUTER PERSONNEL RESEARCH CONFERENCE, P43
   BLACK KR, 1994, AM BUS LAW J, V32, P69, DOI 10.1111/j.1744-1714.1994.tb00931.x
   BLOCK J, 1995, PSYCHOL BULL, V117, P187, DOI 10.1037/0033-2909.117.2.187
   Brach Tara., 2003, Radical Acceptance: Embracing Your Life With the Heart of a Buddha
   Breakwell G.M., 2000, RES METHODS PSYCHOL
   Capretz L. F., 2002, SIGCSE Bulletin, V34, P134, DOI 10.1145/820127.820185
   Capretz LF, 2003, INT J HUM-COMPUT ST, V58, P207, DOI 10.1016/S1071-5819(02)00137-4
   Capretz LF, 2010, IT PROF, V12, P6, DOI 10.1109/MITP.2010.33
   Cattell R.B., 1970, HDB 16PF
   Chao J., 2006, AGILE 2006
   Cooper A, 2010, J PERS ASSESS, V92, P449, DOI 10.1080/00223891.2010.497426
   Costa Jr P.T., 2008, The SAGE Handbook of Personality Theory and Assessment, V2, P179, DOI [10.4135/9781849200479.n9, DOI 10.4135/9781849200479.N9]
   Costa P. T., 1992, PSYCHOL ASSESSMENT R
   Crowder J.A., 2014, Artificial Cognition Archit., P17
   Curtis Bill, 1982, P 1982 C HUM FACT CO, P212
   Da Cunha AD, 2007, COMMUN ACM, V50, P109, DOI 10.1145/1230819.1241672
   Donnellan MB, 2006, PSYCHOL ASSESSMENT, V18, P192, DOI 10.1037/1040-3590.18.2.192
   Feldman Christina., 2005, Compassion: Listening to the Cries of the World
   Feldt R., 2008, INT WORKSHOP COOPERA, P49, DOI DOI 10.1145/1370114.1370127
   Feldt R, 2010, INFORM SOFTWARE TECH, V52, P611, DOI 10.1016/j.infsof.2010.01.001
   Field A., 2009, Discovering statistics with SPSS, V3rd
   Furnham A, 1996, PERS INDIV DIFFER, V21, P303, DOI 10.1016/0191-8869(96)00033-5
   Glass R. L., 2002, FACTS FALLACIES SOFT
   Goldberg L.R., 1999, Personality psychology in Europe, V7, P7, DOI DOI 10.1037/0022-3514.86.1.174
   Goldberg LR, 2006, J RES PERS, V40, P84, DOI 10.1016/j.jrp.2005.08.007
   Goldstein J., 2001, SEEKING HEART WISDOM
   Goleman D., 2006, Working with emotional intelligence. pp, P317
   Gorla N, 2004, COMMUN ACM, V47, P79, DOI 10.1145/990680.990684
   Hannay JE, 2010, IEEE T SOFTWARE ENG, V36, P61, DOI 10.1109/TSE.2009.41
   Howard A, 2001, COMMUN ACM, V44, P23, DOI 10.1145/374308.374322
   John OP, 2010, PSYCHOL INQ, V21, P44, DOI 10.1080/10478401003648732
   JOHN OP, 1988, EUR J PERSONALITY, V2, P171, DOI 10.1002/per.2410020302
   Jung CG., 1923, Psychological types (collected works of c. g. jung)
   KAISER HF, 1974, PSYCHOMETRIKA, V39, P31, DOI 10.1007/BF02291575
   Kam J., 2006, P ISESE 06, P232, DOI DOI 10.1145/1159733.1159769
   Keirsey D., 1998, Please Understand Me II: Temperament, Character, Intelligence
   KELLNER MI, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P144, DOI 10.1109/ICSE.1991.130632
   Kelly AC, 2009, COGNITIVE THER RES, V33, P301, DOI 10.1007/s10608-008-9202-1
   Kornfield Jack., 1993, A Path with a Heart
   Lee J.M., 1978, P 1978 ANN C, V2, P561, DOI [10.1145/800178.810092, DOI 10.1145/800178.810092]
   Lee KB, 2005, PERS INDIV DIFFER, V38, P1571, DOI 10.1016/j.paid.2004.09.016
   Lucas RE, 2009, DEV PSYCHOL, V45, P1353, DOI 10.1037/a0013914
   Martínez LG, 2010, LECT NOTES ARTIF INT, V6438, P428
   McCrae R.R., 2013, Introduction to the empirical and theoretical status of the five-factor model of personality traits
   MCCRAE RR, 1989, J PERS, V57, P17, DOI 10.1111/j.1467-6494.1989.tb00759.x
   MCCRAE RR, 1992, J PERS, V60, P175, DOI 10.1111/j.1467-6494.1992.tb00970.x
   Myers Isabel Briggs, 1998, MBTI Manual: A Guide to the Development and Use of the Myers-Briggs Type Indicator
   Neff K, 2003, SELF IDENTITY, V2, P85, DOI 10.1080/15298860390129863
   Neff KD, 2007, J RES PERS, V41, P139, DOI 10.1016/j.jrp.2006.03.004
   Neff KD, 2009, J PERS, V77, P23, DOI 10.1111/j.1467-6494.2008.00537.x
   Park HunMyoung., 2008, UNIVARIATE ANAL NORM
   Pauley G, 2010, PSYCHOL PSYCHOTHER-T, V83, P129, DOI 10.1348/147608309X471000
   Petrides KV, 2007, BRIT J PSYCHOL, V98, P273, DOI 10.1348/000712606X120618
   Petrides KV, 2009, SPRINGER SER HUM EXC, P85, DOI 10.1007/978-0-387-88370-0_5
   Rehman M., 2012, Proceedings of the 2012 International Conference on Computer & Information Science (ICCIS), P1115, DOI 10.1109/ICCISci.2012.6297193
   Sabini J., 1995, Social psychology, V2nd
   Salleh N, 2009, INT SYMP EMP SOFTWAR, P214, DOI 10.1109/ESEM.2009.5315997
   Salzberg S., 1999, Heart as Wide as the World
   Salzberg Sharon., 2005, The Force of Kindness: Change Your Life with Love Compassion
   Seligman MEP, 2000, AM PSYCHOL, V55, P5, DOI 10.1037/0003-066X.55.1.5
   Sfetsos P, 2009, EMPIR SOFTW ENG, V14, P187, DOI 10.1007/s10664-008-9093-5
   Smith D. C., 1989, Computer Personnel, V12, P12, DOI 10.1145/1036387.1036389
   Timothy Lister TomDeMarco., 1987, Peopleware: productive projects and teams, Vsecond
   Walle T, 2009, INT SYMP EMP SOFTWAR, P203, DOI 10.1109/ESEM.2009.5315996
   Westerman J., 2007, Career Development International, V12, P150, DOI [10.1108/13620430710733631, DOI 10.1108/13620430710733631]
   Zeidner M, 2004, APPL PSYCHOL-INT REV, V53, P371, DOI 10.1111/j.1464-0597.2004.00176.x
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 87
TC 40
Z9 50
U1 0
U2 47
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2014
VL 56
IS 8
BP 973
EP 990
DI 10.1016/j.infsof.2014.03.004
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AI9OL
UT WOS:000337261800009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hummer, W
   Gaubatz, P
   Strembeck, M
   Zdun, U
   Dustdar, S
AF Hummer, Waldemar
   Gaubatz, Patrick
   Strembeck, Mark
   Zdun, Uwe
   Dustdar, Schahram
TI Enforcement of entailment constraints in distributed service-based
   business processes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Identity and access management; Business process management; Entailment
   constraints; Service-Oriented Architecture (SOA); WS-BPEL
ID ACCESS-CONTROL; SECURITY; FRAMEWORK
AB Context: A distributed business process is executed in a distributed computing environment. The service-oriented architecture (SOA) paradigm is a popular option for the integration of software services and execution of distributed business processes. Entailment constraints, such as mutual exclusion and binding constraints, are important means to control process execution. Mutually exclusive tasks result from the division of powerful rights and responsibilities to prevent fraud and abuse. In contrast, binding constraints define that a subject who performed one task must also perform the corresponding bound task(s).
   Objective: We aim to provide a model-driven approach for the specification and enforcement of task-based entailment constraints in distributed service-based business processes.
   Method: Based on a generic metamodel, we define a domain-specific language (DSL) that maps the different modeling-level artifacts to the implementation-level. The DSL integrates elements from role-based access control (RBAC) with the tasks that are performed in a business process. Process definitions are annotated using the DSL, and our software platform uses automated model transformations to produce executable WS-BPEL specifications which enforce the entailment constraints. We evaluate the impact of constraint enforcement on runtime performance for five selected service-based processes from existing literature.
   Results: Our evaluation demonstrates that the approach correctly enforces task-based entailment constraints at runtime. The performance experiments illustrate that the runtime enforcement operates with an overhead that scales well up to the order of several ten thousand logged invocations. Using our DSL annotations, the user-defined process definition remains declarative and clean of security enforcement code.
   Conclusion: Our approach decouples the concerns of (non-technical) domain experts from technical details of entailment constraint enforcement. The developed framework integrates seamlessly with WS-BPEL and the Web services technology stack. Our prototype implementation shows the feasibility of the approach, and the evaluation points to future work and further performance optimizations. (C) 2013 The Authors. Published by Elsevier B.V. All rights reserved.
C1 [Hummer, Waldemar; Dustdar, Schahram] Vienna Univ Technol, Distributed Syst Grp, Vienna, Austria.
   [Gaubatz, Patrick; Zdun, Uwe] Univ Vienna, Fac Comp Sci, Software Architecture Grp, A-1010 Vienna, Austria.
   [Strembeck, Mark] Vienna Univ Econ & Business, New Media Lab, Inst Informat Syst, Vienna, Austria.
C3 Technische Universitat Wien; University of Vienna; Vienna University of
   Economics & Business
RP Hummer, W (corresponding author), Vienna Univ Technol, Distributed Syst Grp, Vienna, Austria.
EM hummer@infosys.tuwien.ac.at; patrick.gaubatz@univie.ac.at;
   mark.strembeck@wu.ac.at; uwe.zdun@univie.ac.at;
   dustdar@infosys.tuwien.ac.at
RI Zdun, Uwe/AFR-2161-2022; Dustdar, Schahram/G-9877-2015
OI Dustdar, Schahram/0000-0001-6872-8821; Hummer,
   Waldemar/0000-0002-8559-3727
FU Austrian Science Fund (FWF) [P23313-N23]; European Community [257483];
   Austrian Science Fund (FWF) [P23313] Funding Source: Austrian Science
   Fund (FWF)
FX This work is partially supported by the Austrian Science Fund (FWF):
   P23313-N23, and has received funding from the European Community's
   Seventh Framework Programme (FP7) under Grant agreement 257483
   (Indenica).
CR [Anonymous], XSL TRANSF XSLT VERS
   [Anonymous], MOD SEC WORKSH MODEL
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   BAUMGRASS A, 2011, BMP 11 WORKSH WORKFL
   Benatallah B, 2004, IEEE INTERNET COMPUT, V8, P46, DOI 10.1109/MIC.2004.1260703
   Bertino E., 1999, ACM Trans. Inf. Syst. Secur., V2, P65, DOI 10.1145/300830.300837
   Botha RA, 2001, IBM SYST J, V40, P666, DOI 10.1147/sj.403.0666
   Braga C, 2011, SOFTW SYST MODEL, V10, P395, DOI 10.1007/s10270-010-0156-x
   Cannon J.C., 2006, Queue, V4, P30, DOI [10.1145/1160434.1160449, DOI 10.1145/1160434.1160449]
   Charfi A, 2007, WORLD WIDE WEB, V10, P309, DOI 10.1007/s11280-006-0016-3
   Clark D. D., 1987, IEEE S SEC PRIV
   Crampton J., 2005, P SACMAT 05, P38
   CRAMPTON J, 2012, 19 ACM C COMP COMM S, P857
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Damianides M., 2004, Journal of Corporate Accounting Finance, V15, P35
   DIMMOCK N, 2004, 9 ACM S ACC CONTR MO
   Draheim Dirk, 2010, Journal of Computing Science and Engineering, V4, P253
   EDER J, 2002, 6 E EUR C ADV DAT IN, P326
   Fensel D., 2002, ELETRONIC COMMERCE, V1, P113, DOI DOI 10.1016/S1567-4223(02)00015-7
   Ferraiolo DF, 2007, ROLE BASED ACCESS CO
   Ferreira A, 2006, COMP MED SY, P847, DOI 10.1109/CBMS.2006.95
   Foster H, 2010, IEEE T SERV COMPUT, V3, P131, DOI 10.1109/TSC.2010.19
   GAUBATZ P, 2013, 13 INT C WEB ENG ICW
   GAUBATZ P, 2013, 28 S APPL COMP SAC A
   HOISL B, 2012, 2 INT WORKSH INF SYS
   Huhns MN, 2005, IEEE INTERNET COMPUT, V9, P75, DOI 10.1109/MIC.2005.21
   Hummer W., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P40, DOI 10.1109/ICST.2011.55
   Hummer W., 2012, 6 ACM INT C DISTR EV
   HUMMER W, 2011, ACM S APPL COMP SAC
   Hummer W., 2011, 16 ACM S ACC CONTR M, P21
   INZINGER C, 2013, 28 ACM S APPL COMP S, P485
   Jensen M, 2009, 16TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P340, DOI 10.1109/ECBS.2009.14
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kulkarni D, 2008, SACMAT'08: PROCEEDINGS OF THE 13TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES, P113
   LEITNER P, 2011, IEEE T SERV COMPUT, P1
   Lin D, 2008, SACMAT'08: PROCEEDINGS OF THE 13TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES, P103
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   MARINOVIC S, 2011, 16 ACM S ACC CONTR M
   Mazzoleni P, 2008, ACM T INFORM SYST SE, V11, DOI 10.1145/1330295.1330299
   McIlraith SA, 2001, IEEE INTELL SYST APP, V16, P46, DOI 10.1109/5254.920599
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Mishra S, 2007, COMMUN ASSOC INF SYS, V20, P712
   MOURAD A, 2010, 8 INT C PRIV SEC TRU, P189
   OASIS, 2007, Web Services Business Process Execution Language Version 2.0
   *OASIS, 2005, MET OASIS SEC ASS MA
   OASIS, 2005, SEC ASS MARK LANG
   *OASIS, 2005, EXTENSIBLE ACC CONTR
   *OBJ MAN GROUP, 2011, UML 2 4 1 SUP
   Object Management Group, 2011, MET FAC MOF 2 0 QUER
   Organization for the Advancement of Structured Information Standards (OASIS), 2009, WS SECURITYPOLICY 1
   Paci F, 2008, INT J WEB SERV RES, V5, P20, DOI 10.4018/jwsr.2008070102
   Papazoglou MP, 2007, COMPUTER, V40, P38, DOI 10.1109/MC.2007.400
   Sadiq W, 2000, LECT NOTES COMPUT SC, V1920, P267
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   SCHAFER M, 2008, ACM T WEB, V14, P36
   Scheer AW, 2005, PROCESS-AWARE INFORMATION SYSTEMS: BRIDGING PEOPLE AND SOFTWARE THROUGH PROCESS TECHNOLOGY, P119, DOI 10.1002/0471741442.ch6
   SCHEFER S, 2011, WORKSH WORKFL SEC AU
   SCHEFER S, 2011, 19 INT C COOP INF SY
   Schefer-Wenzl S, 2012, 5 INT WORKSH ENT MOD
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Skogsrud H, 2003, IEEE INTERNET COMPUT, V7, P45, DOI 10.1109/MIC.2003.1250583
   SMIRNOV S, 2011, 23 INT C ADV INF SYS, P497
   Spinellis D, 2001, J SYST SOFTWARE, V56, P91, DOI 10.1016/S0164-1212(00)00089-3
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Strembeck M., 2004, ACM Transactions on Information and Systems Security, V7, P392, DOI 10.1145/1015040.1015043
   STREMBECK M, 2005, 3 S REQ ENG INF SEC
   STREMBECK M, 2010, 18 INT C COOP INF SY
   STREMBECK M, 2009, SOFTWARE PRACTICE EX, V39
   Strembeck M, 2011, INFORM SOFTWARE TECH, V53, P456, DOI 10.1016/j.infsof.2010.11.015
   Strembeck M, 2010, IEEE SECUR PRIV, V8, P28, DOI 10.1109/MSP.2010.46
   Tan KJ, 2004, P IEEE CSFW, P155
   von Riegen M, 2010, IEEE T SERV COMPUT, V3, P60, DOI 10.1109/TSC.2009.27
   *W3C, 2011, XQUERY 3 0 XML QUER
   W3C, 2008, XML SIGN SYNT PROC
   Wainer J, 2003, INT J COOP INF SYST, V12, P455, DOI 10.1142/S0218843003000814
   Wang QH, 2010, ACM T INFORM SYST SE, V13, DOI 10.1145/1880022.1880034
   Weber B, 2005, LECT NOTES COMPUT SC, V3760, P59
   Wolter C, 2009, J SYST ARCHITECT, V55, P211, DOI 10.1016/j.sysarc.2008.10.002
   Wolter C, 2008, SACMAT'08: PROCEEDINGS OF THE 13TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES, P51
   *WORLD WID WEB CON, 2007, SOAP MESS FRAM
   ZDUN U, 2009, 14 EUR C PATT LANG P
   ZDUN U, 2006, 5 INT S SOFTW COMP
NR 85
TC 13
Z9 13
U1 0
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2013
VL 55
IS 11
BP 1884
EP 1903
DI 10.1016/j.infsof.2013.05.001
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 231BH
UT WOS:000325387500003
PM 27667903
OA Green Published, Green Accepted, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Mohabbati, B
   Asadi, M
   Gasevic, D
   Hatala, M
   Müller, HA
AF Mohabbati, Bardia
   Asadi, Mohsen
   Gasevic, Dragan
   Hatala, Marek
   Mueller, Hausi A.
TI Combining service-orientation and software product line engineering: A
   systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic mapping; Service-oriented architecture; Software product
   lines
ID VARIABILITY; BUSINESS; CUSTOMIZATION; MODELS
AB Context: Service-Orientation (SO) is a rapidly emerging paradigm for the design and development of adaptive and dynamic software systems. Software Product Line Engineering (SPLE) has also gained attention as a promising and successful software reuse development paradigm over the last decade and proven to provide effective solutions to deal with managing the growing complexity of software systems.
   Objective: This study aims at characterizing and identifying the existing research on employing and leveraging SO and SPLE.
   Method: We conducted a systematic mapping study to identify and analyze related literature. We identified 81 primary studies, dated from 2000-2011 and classified them with respect to research focus, types of research and contribution.
   Result: The mapping synthesizes the available evidence about combining the synergy points and integration of SO and SPLE. The analysis shows that the majority of studies focus on service variability modeling and adaptive systems by employing SPLE principles and approaches.
   Result: In particular, SPLE approaches, especially feature-oriented approaches for variability modeling, have been applied to the design and development of service-oriented systems. While SO is employed in software product line contexts for the realization of product lines to reconcile the flexibility, scalability and dynamism in product derivations thereby creating dynamic software product lines.
   Conclusion: Our study summarizes and characterizes the SO and SPLE topics researchers have investigated over the past decade and identifies promising research directions as due to the synergy generated by integrating methods and techniques from these two areas. Crown Copyright (C) 2013 Published by Elsevier B.V. All rights reserved.
C1 [Mohabbati, Bardia; Asadi, Mohsen; Gasevic, Dragan; Hatala, Marek] Simon Fraser Univ, Surrey, BC V3T 5X3, Canada.
   [Gasevic, Dragan] Athabasca Univ, Athabasca, AB T9S 3A3, Canada.
   [Mueller, Hausi A.] Univ Victoria, STN CSC, Victoria, BC V8W 3P6, Canada.
C3 Simon Fraser University; Athabasca University; University of Victoria
RP Mohabbati, B (corresponding author), Simon Fraser Univ, 13450 102 Ave, Surrey, BC V3T 5X3, Canada.
EM mohabbati@sfu.ca; masadi@sfu.ca; dgasevic@sfu.ca; mhatala@sfu.ca;
   hausi@cs.uvic.ca
RI asadi, mohsen/B-1939-2019; Gasevic, Dragan/AAT-3909-2020
OI Gasevic, Dragan/0000-0001-9265-1908; Hatala, Marek/0000-0001-7418-9529;
   Muller, Hausi/0000-0002-1004-5830
CR Abu-Matar M., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P110, DOI 10.1109/SPLC.2011.26
   Acher M., 2009, PROC 4 INT WORKSHOP, P10
   Acher M., 2010, LNCS, P16
   Alferez G. H., 2011, 2011 IEEE 9th European Conference on Web Services, P192, DOI 10.1109/ECOWS.2011.13
   Alferez German H., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P100, DOI 10.1109/SPLC.2011.21
   Altintas NI, 2006, LECT NOTES COMPUT SC, V3888, P15
   Andersson J, 2005, IEE P-SOFTW, V152, P15, DOI 10.1049/ip-sen:20041007
   [Anonymous], 2009, SOFTWARE PRODUCT LIN
   [Anonymous], 2010, P 18 ACM SIGSOFT INT
   Apel S., 2008, P 2 INT WORKSHOP SYS, P53, DOI DOI 10.1145/1370916.1370930
   Arsanjani A, 2008, IBM SYST J, V47, P377, DOI 10.1147/sj.473.0377
   Asadi M., 2009, P 1 INT WORKSH FEAT, P95
   Balzerani L., 2005, PROC ACM S APPL COMP, P1689, DOI DOI 10.1145/1066677.1067059
   Basu S., 2009, P 13 INT SOFTW PROD, P141
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   BAYER J, 2005, 182005 PESOA
   Boffoli N., 2009, P 3 INT WORKSH SERV
   Boskovic M., 2011, J RES PRACTICE INFOR
   Boskovic M, 2010, INT J SOFTW ENG KNOW, V20, P459, DOI 10.1142/S0218194010004827
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Bubak Oldrich, 2008, International Journal of Intelligent Information and Database Systems, V2, P383, DOI 10.1504/IJIIDS.2008.021444
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Butler J., 2006, CDBI J, P22
   Cetina C., 2009, PROC 13 INT C SPLC, V446, P61
   Cetina C., 2009, P 3 INT WORKSH DYN S, P43
   Cetina C, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P117, DOI 10.1109/SPLC.2008.13
   Cetina C, 2010, LECT NOTES COMPUT SC, V6287, P331, DOI 10.1007/978-3-642-15579-6_23
   Chang SH, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P261, DOI 10.1109/SPLINE.2007.10
   Soo C, 2007, IEEE INTERNATIONAL CONFERENCE ON SERVICE-ORIENTED COMPUTING AND APPLICATIONS, PROCEEDINGS, P191
   Chang SH, 2007, P IEEE I C SERV COMP, P204
   Chen F, 2005, 12TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P201
   Classen A., 2008, P INT WORKSH MOD COM, V1, P19
   Clotet R., 2008, P 2 INT WORKSH VAR M, P43
   Cohen S., 2010, CMUSEI2010TN007
   Cohen S, 2008, P 1 WORKSH SERV OR A
   Diaz O., 2007, P 16 INT C WORLD WID, P913, DOI DOI 10.1145/1242572.1242696
   Dieste Oscar, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P215
   Elkhodary A., 2009, P 4 INT WORKSH MOD R
   Erl T., 2005, SERVICE ORIENTED ARC
   Fantinato M, 2008, INT J COOP INF SYST, V17, P373, DOI 10.1142/S0218843008001889
   Galster M., 2010, P 4 EUR C SOFTW ARCH, P344
   Galster M, 2011, 18TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON ENGINEERING OF COMPUTER BASED SYSTEMS (ECBS 2011), P179, DOI 10.1109/ECBS.2011.19
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   GLASS RL, 1995, IEEE SOFTWARE, V12, P63, DOI 10.1109/52.391837
   Gomaa H, 2005, I C COMP SYST APPLIC
   Greenwood P, 2011, SERVICE ENGINEERING: EUROPEAN RESEARCH RESULTS, P55, DOI 10.1007/978-3-7091-0415-6_3
   Groner Gerd, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P551, DOI 10.1007/978-3-642-21640-4_41
   Gruler A, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P107, DOI 10.1109/SPLINE.2007.13
   Hadaytullah, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P687, DOI 10.1109/ICWS.2009.92
   Hallsteinsen S., 2009, P 3 INT WORKSH DYN S, P28
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Hallsteinsen S, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P141
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Harhurin A, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P255, DOI 10.1109/SPLC.2008.19
   Helferich A., 2007, P 1 INT WORKSH SERV, P21
   Higgins J. P., 2008, COCHRANE HDB SYSTEMA, V5
   Istoan Paul, 2009, Proceedings of the 2009 Ninth IEEE International Conference on Computer and Information Technology. CIT 2009, P193, DOI 10.1109/CIT.2009.54
   Jaejoon Lee, 2006, 10th International Software Product Line Conference
   Jiang JJ, 2005, THIRD EUROPEAN CONFERENCE ON WEB SERVICES, PROCEEDINGS, P83
   Jianqi Yu, 2010, Proceedings of the 2010 Asia-Pacific Services Computing Conference (APSCC 2010), P51, DOI 10.1109/APSCC.2010.77
   Jones C., 2000, Software Assessments, Benchmarks, and Best Practices
   Kang D, 2008, THIRD 2008 INTERNATIONAL CONFERENCE ON CONVERGENCE AND HYBRID INFORMATION TECHNOLOGY, VOL 2, PROCEEDINGS, P1040, DOI 10.1109/ICCIT.2008.113
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Karam M, 2008, J SYST SOFTWARE, V81, P855, DOI 10.1016/j.jss.2007.10.031
   Kattepur Ajay, 2010, 2010 IEEE International Conference on Web Services (ICWS), P99, DOI 10.1109/ICWS.2010.40
   Kaviani N., 2008, P 4 INT WORKSH SEM W
   Kazhamiakin R, 2010, LECT NOTES COMPUT SC, V6500, P117
   Kim Y, 2008, THIRD 2008 INTERNATIONAL CONFERENCE ON CONVERGENCE AND HYBRID INFORMATION TECHNOLOGY, VOL 1, PROCEEDINGS, P700, DOI 10.1109/ICCIT.2008.261
   Kitchenham B., 2007, Joint Report
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kohlborn T, 2009, IEEE T SERV COMPUT, V2, P50, DOI 10.1109/TSC.2009.6
   Kotonya G, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P211, DOI 10.1109/WICSA.2009.5290807
   Krut R.W., 2009, P 12 INT SOFTW PROD, P115
   Krut R. W, 2009, P 13 INT SOFTW PROD, P301
   La HJ, 2009, LECT NOTES COMPUT SC, V5931, P278
   Lee J, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P275, DOI 10.1109/SPLC.2008.34
   Lee J, 2010, J SYST SOFTWARE, V83, P1123, DOI 10.1016/j.jss.2010.01.048
   Lee J, 2010, IEEE SOFTWARE, V27, P35, DOI 10.1109/MS.2010.30
   Lee SJ, 2005, LECT NOTES COMPUT SC, V3547, P69
   Liwei Shen, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P52, DOI 10.1007/978-3-642-21347-2_5
   Marinho FG, 2010, LECT NOTES COMPUT SC, V6287, P346, DOI 10.1007/978-3-642-15579-6_24
   Medeiros F. M., 2010, 2010 IV Brazilian Symposium on Software Components, Architectures and Reuse (SBCARS), P70, DOI 10.1109/SBCARS.2010.17
   Medeiros F.M., 2009, P 3 INT WORKSH SERV, P151
   Mietzner R, 2008, P IEEE I C SERV COMP, P359, DOI 10.1109/SCC.2008.85
   Mietzner R, 2009, PESOS: 2009 ICSE WORKSHOP ON PRINCIPLES OF ENGINEERING SERVICE ORIENTED SYSTEMS, P18, DOI 10.1109/PESOS.2009.5068815
   Mohabbati B., 2009, P 3 INT WORKSH SERV, V2
   Mohabbati B., 2011, P 2011 ACM S APPL CO, P1606
   Murugesupillai E., 2011, P 15 INT SOFTW PROD
   Nanda M. G., 2009, SOFTWARE PRODUCT LIN
   Narendra NC, 2008, P IEEE I C SERV COMP, P257, DOI 10.1109/SCC.2008.146
   Narendra N. C., 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P562, DOI 10.1109/SCC.2010.11
   Nguyen Tuan, 2010, 2010 IEEE International Conference on Web Services (ICWS), P393, DOI 10.1109/ICWS.2010.64
   Nguyen T., 2011, P 5 WORKSH VAR MOD S, P165
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Nunes I, 2009, LECT NOTES COMPUT SC, V5791, P236
   Papazoglou M. P., 2006, International Journal of Web Engineering and Technology, V2, P412, DOI 10.1504/IJWET.2006.010423
   Papazoglou MP, 2008, INT J COOP INF SYST, V17, P223, DOI 10.1142/S0218843008001816
   Papazoglou MP, 2003, FOURTH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS ENGINEERING, PROCEEDINGS, P3
   Park J., J SYSTEMS SCI SYSTEM, V20
   Parra C, 2010, LECT NOTES COMPUT SC, V6285, P230, DOI 10.1007/978-3-642-15114-9_18
   Parra Carlos., 2009, Proceedings of the 13th International Software Product Line Conference, SPLC'09, P131
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Peter K. V., 2006, Plant breeding in post genomics era. Proceedings of Second National Plant Breeding Congress, Coimbatore, India, 1-3 March, 2006, P1
   Petersen K., 2008, EASE 08 P 12 INT C E
   Reinhartz-Berger Iris, 2009, International Journal of Business Process Integration and Management, V4, P134, DOI 10.1504/IJBPIM.2009.027781
   Schmidt Douglas C., 2009, International Journal of Business Process Integration and Management, V4, P35, DOI 10.1504/IJBPIM.2009.026984
   Schnieders A., 2006, 9 INT C BUSINESS INF, P583
   Segura S., 2007, P 1 INT WORKSH SERV
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sinnema M., 2004, Software Product Lines, P25
   Souer J, 2011, INT J WEB INF SYST, V7, P292, DOI 10.1108/17440081111165901
   Stollberg M, 2010, LECT NOTES COMPUT SC, V6275, P425
   Street J., 2008, P 41 ANN HAW INT C S, P316
   Sun CA, 2010, J SYST SOFTWARE, V83, P502, DOI 10.1016/j.jss.2009.10.011
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Nguyen T, 2011, LECT NOTES COMPUT SC, V7084, P404, DOI 10.1007/978-3-642-25535-9_27
   van Gurp J, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P85, DOI 10.1109/SPLINE.2006.1691580
   Wada H, 2007, P IEEE I C SERV COMP, P187
   Wada H, 2011, J DATABASE MANAGE, V22, P93, DOI 10.4018/jdm.2011040104
   Wang JW, 2009, LECT NOTES COMPUT SC, V4907, P295, DOI 10.1007/978-3-540-93851-4_29
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Ye E, 2007, 9TH INTERNATIONAL CONFERENCE ON ADVANCED COMMUNICATION TECHNOLOGY: TOWARD NETWORK INNOVATION BEYOND EVOLUTION, VOLS 1-3, P999, DOI 10.1109/ICACT.2007.358527
   Zaupa F, 2008, J UNIVERS COMPUT SCI, V14, P1368
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
   Zhang LJ, 2007, P IEEE I C SERV COMP, P560
NR 127
TC 25
Z9 26
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2013
VL 55
IS 11
BP 1845
EP 1859
DI 10.1016/j.infsof.2013.05.006
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 231BH
UT WOS:000325387500001
DA 2024-07-18
ER

PT J
AU Pachauri, B
   Kumar, A
   Dhar, J
AF Pachauri, Bhoopendra
   Kumar, Ajay
   Dhar, Joydip
TI Modeling optimal release policy under fuzzy paradigm in imperfect
   debugging environment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE SRGMs; Parameter estimation; Testing; Software reliability; Fuzzy set
   theory
ID SOFTWARE-RELIABILITY GROWTH; MODIFIED WEIBULL DISTRIBUTION;
   TESTING-EFFORT; COST ESTIMATION; SYSTEMS
AB Context: In this study, a software optimal release time with cost-reliability criteria has been discussed in an imperfect debugging environment.
   Objective: The motive of this study is to model uncertainty involved in estimated parameters of the software reliability growth model (SRGM).
   Method: Initially the reliability parameters of SRGM are estimated using least square estimation (LSE). Considering the uncertainty involved in the estimated parameters due to human behavior being subjective in nature and the dynamism of the testing environment, the concept of fuzzy set theory is applicable in developing SRGM. Finally, using arithmetic operations on fuzzy numbers, the reliability and total software cost are calculated.
   Results: Various reliability measures have been computed at different levels of uncertainties, and a comparison has been made with the existing results reported in the literature.
   Conclusion: It is evident from the results that a better prediction of reliability measures, namely, software reliability and total software cost can be made under the fuzzy paradigm. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Pachauri, Bhoopendra; Kumar, Ajay; Dhar, Joydip] ABV Indian Inst Informat Technol & Management Gwa, Dept Appl Sci, Gwalior 474015, India.
C3 ABV-Indian Institute of Information Technology & Management, Gwalior
RP Pachauri, B (corresponding author), ABV Indian Inst Informat Technol & Management Gwa, Dept Appl Sci, Morena Link Rd, Gwalior 474015, India.
EM bhupdma@gmail.com; ajayfma@iiitm.ac.in; jdhar@iiitm.ac.in
RI Kumar, Ajay/AAS-1455-2020; Pachauri, Bhoopendra/JNS-1909-2023; Dhar,
   Joydip/L-6769-2013
OI Kumar, Ajay/0000-0002-0358-9936; Pachauri,
   Bhoopendra/0000-0002-4389-111X; Dhar, Joydip/0000-0002-0861-730X
FU ministry of human resources and development (MHRD)
FX One of the authors, Bhoopendra Pachauri, would like to thank to ministry
   of human resources and development (MHRD) for financial support provided
   during the preparation of this study. The support is gratefully
   acknowledged.
CR Ahmad N, 2009, J MODEL MANAG, V4, P28, DOI 10.1108/17465660910943748
   Ahmad N., 2006, RAU J RES, V16, P159
   Ahmad N, 2008, INT J QUAL RELIAB MA, V25, P211, DOI 10.1108/02656710810846952
   [Anonymous], 2011, ACM SIGSOFT SOFTW EN, DOI DOI 10.1145/1921532.1921548
   [Anonymous], P 8 INT S SOFTW REL
   Azzeh M, 2011, J SYST SOFTWARE, V84, P270, DOI 10.1016/j.jss.2010.09.028
   Bakht A.J., 2010, 2010 INT C COMP INT, P1
   CAI KY, 1991, RELIAB ENG SYST SAFE, V32, P357, DOI 10.1016/0951-8320(91)90009-V
   CAI KY, 1993, MICROELECTRON RELIAB, V33, P2265, DOI 10.1016/0026-2714(93)90066-8
   Carrasco JMF, 2008, COMPUT STAT DATA AN, V53, P450, DOI 10.1016/j.csda.2008.08.023
   Chatterjee S, 2011, FUZZY INF ENG, V3, P293, DOI 10.1007/s12543-011-0084-7
   Dimov A., 2010, SOFTWARE ENG ADV APP, P39
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   Huang CY, 2002, IEEE T RELIAB, V51, P261, DOI 10.1109/TR.2002.801847
   Kapur PK, 2011, INT J SYST ASSUR ENG, V2, P48, DOI 10.1007/s13198-011-0057-6
   Kazemifard M, 2011, APPL SOFT COMPUT, V11, P2260, DOI 10.1016/j.asoc.2010.08.006
   Kiran NR, 2008, J SYST SOFTWARE, V81, P576, DOI 10.1016/j.jss.2007.05.005
   Klirr G. J., 1995, FUZZY SETS FUZZY LOG
   Knezevic J, 2001, RELIAB ENG SYST SAFE, V73, P1, DOI 10.1016/S0951-8320(01)00017-5
   Lai CD, 2003, IEEE T RELIAB, V52, P33, DOI 10.1109/TR.2002.805788
   Li X, 2011, INFORM SOFTWARE TECH, V53, P929, DOI 10.1016/j.infsof.2011.04.005
   Lin CT, 2008, J SYST SOFTWARE, V81, P1025, DOI 10.1016/j.jss.2007.10.002
   Munson JC, 1996, INFORM SOFTWARE TECH, V38, P687, DOI 10.1016/0950-5849(96)01117-2
   Musilek P., 2000, Applied Computing Review, V8, P24, DOI 10.1145/373975.373984
   OHBA M, 1984, IBM J RES DEV, V28, P428, DOI 10.1147/rd.284.0428
   Pandey A.K., 2009, International Journal of Electronics Engineering, V1, P239
   Quadri S.M.K., 2011, Global Journal of Computer Science and Technology, V11, P27
   Rafi S.M., 2010, INT J COMPUTER APPL, V6, P31
   Rafi SM., 2010, Comput Inf Sci, V3, P145
   Rajasekaran S, 2009, NEURAL NETWORKS FUZZ
   Tohma Y., 1989, P COMPSAC 89
   Tyagi K, 2012, ADV ENG SOFTW, V54, P24, DOI 10.1016/j.advengsoft.2012.08.001
   Utkin L. V., 2002, INT J RELIABILITY QU, V9, P215
   Verma A.K., 2007, Fuzzy Reliability Engineering Concepts and Applications
   Xu ZW, 2004, FUZZY SET SYST, V145, P141, DOI 10.1016/j.fss.2003.10.008
   YAMADA S, 1984, IEEE T RELIAB, V33, P289, DOI 10.1109/TR.1984.5221826
   YAMADA S, 1993, IEEE T RELIAB, V42, P100, DOI 10.1109/24.210278
   YAMADA S, 1985, IEEE T SOFTWARE ENG, V11, P1431, DOI 10.1109/TSE.1985.232179
   YAMADA S, 1986, IEEE T RELIAB, V35, P19, DOI 10.1109/TR.1986.4335332
   Zhang Yong-Qiang, 2006, Journal of Software, V17, P1681, DOI 10.1360/jos171681
NR 40
TC 19
Z9 20
U1 0
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2013
VL 55
IS 11
BP 1974
EP 1980
DI 10.1016/j.infsof.2013.06.001
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 231BH
UT WOS:000325387500007
DA 2024-07-18
ER

PT J
AU Kasoju, A
   Petersen, K
   Mäntylä, MV
AF Kasoju, Abhinaya
   Petersen, Kai
   Mantyla, Mika V.
TI Analyzing an automotive testing process with evidence-based software
   engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Evidence-based software engineering; Process assessment; Automotive
   software testing
ID EMBEDDED SOFTWARE; REQUIREMENTS; AGILE; COMPANY; DRIVEN; CROSS; STATE
AB Context: Evidence-based software engineering (EBSE) provides a process for solving practical problems based on a rigorous research approach. The primary focus so far was on mapping and aggregating evidence through systematic reviews.
   Objectives: We extend existing work on evidence-based software engineering by using the EBSE process in an industrial case to help an organization to improve its automotive testing process. With this we contribute in (1) providing experiences on using evidence based processes to analyze a real world automotive test process and (2) provide evidence of challenges and related solutions for automotive software testing processes.
   Methods: In this study we perform an in-depth investigation of an automotive test process using an extended EBSE process including case study research (gain an understanding of practical questions to define a research scope), systematic literature review (identify solutions through systematic literature), and value stream mapping (map out an improved automotive test process based on the current situation and improvement suggestions identified). These are followed by reflections on the EBSE process used.
   Results: In the first step of the EBSE process we identified 10 challenge areas with a total of 26 individual challenges. For 15 out of those 26 challenges our domain specific systematic literature review identified solutions. Based on the input from the challenges and the solutions, we created a value stream map of the current and future process.
   Conclusions: Overall, we found that the evidence-based process as presented in this study helps in technology transfer of research results to industry, but at the same time some challenges lie ahead (e.g. koping systematic reviews to focus more on concrete industry problems, and understanding strategies of conducting EBSE with respect to effort and quality of the evidence). (C) 2013 Elsevier B.V. All rights reserved.
C1 [Kasoju, Abhinaya] Systemite AB, Gothenburg, Sweden.
   [Petersen, Kai] Aalto Univ, Dept Comp Sci & Engn, Helsinki, Finland.
   [Mantyla, Mika V.] Lund Univ, Dept Comp Sci, S-22100 Lund, Sweden.
C3 Aalto University; Lund University
EM abhinaya.kasoju@systemite.se; kai.petersen@bth.se; mika.mantyla@aalto.fi
RI Mäntylä, Mika V/E-7644-2012
OI Petersen, Kai/0000-0002-1532-8223; Mantyla, Mika/0000-0002-2841-5879
FU ELLIIT, the Strategic Area for ICT research; Swedish Government
FX We would like to thank all the participants in the study who provided
   valuable input in interviews. Furthermore, we thank the anonymous
   reviewers for valuable comments that helped in improving the paper. This
   work has been supported by ELLIIT, the Strategic Area for ICT research,
   funded by the Swedish Government.
CR Awedikian R, 2010, INT J INTERACTIVE DE, V4, P1
   Barmi Z. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P476, DOI 10.1109/ICSTW.2011.58
   Beer A, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P258, DOI 10.1109/SEAA.2008.28
   Betz S, 2012, INT SYMP EMP SOFTWAR, P239, DOI 10.1145/2372251.2372295
   Boulanger Jean-Louis, 2008, 2008 IEEE International Conference on Research, Innovation and Vision for the Future in Computing and Communication Technologies (RIVF 2008), P263, DOI 10.1109/RIVF.2008.4586365
   Braun P, 2010, COMPUTER SCI RES DEV, P1
   Brillout Angelo, 2009, Proceedings of Formal Methods for Components and Objects. 8th International Symposium (FMCO 2009). Revised Selected Papers, P208, DOI 10.1007/978-3-642-17071-3_11
   Bringmann Eckard, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P485, DOI 10.1109/ICST.2008.45
   Bühler O, 2008, COMPUT OPER RES, V35, P3144, DOI 10.1016/j.cor.2007.01.015
   Bühne S, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P346
   Burnstein Ilene., 2003, Practical Software Testing: A Process-Oriented Approach
   Cai Y, 2008, WICOM 08, P1
   CHA J, 2009, ICSEA 09, P353
   Chimisliu V, 2009, INT CONF QUAL SOFTW, P173, DOI 10.1109/QSIC.2009.31
   Christie J, 2008, SEDUCTIVE DANGEROUS
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Conrad M, 2005, ELECTRON NOTES THEOR, V111, P13, DOI 10.1016/j.entcs.2004.12.005
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Eldh Sigrid, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P70, DOI 10.1109/ICST.2011.52
   Farkas T, 2007, Eighth International Symposium on Autonomous Decentralized Systems, Proceedings, P287, DOI 10.1109/ISADS.2007.66
   Feldt R., 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P225, DOI 10.1109/ICST.2010.37
   Ferdinand C, 2008, LECT NOTES COMPUT SC, V4922, P145
   Grimm K, 2003, PROC INT CONF SOFTW, P498, DOI 10.1109/ICSE.2003.1201228
   Gwangmin Park, 2009, 2009 ICROS-SICE International Joint Conference. ICCAS-SICE 2009, P2601
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Heumesser N, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P322
   Hwong B, 2006, AURE 06, P2
   Islam S, 2005, 12TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P17, DOI 10.1109/APSEC.2005.102
   Itkonen Juha, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P61
   Itkonen J, 2013, IEEE T SOFTWARE ENG, V39, P707, DOI 10.1109/TSE.2012.55
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Karlsson L, 2007, INFORM SOFTWARE TECH, V49, P588, DOI 10.1016/j.infsof.2007.02.008
   Kettunen V., 2010, P 19 INT S SOFTW TES, P231, DOI [10.1145/1831708.1831737, DOI 10.1145/1831708.1831737]
   Khurum M, 2012, J SOFTWARE IN PRESS, DOI DOI 10.1002/SMR.1560/ABSTRACT
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kruse P.M., 2009, Proceedings of the 11th Annual conference on Genetic and evolutionary computation, P1545, DOI DOI 10.1145/1569901.1570108
   Lakhotia K., 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P101, DOI 10.1109/SSBSE.2010.21
   Layman L, 2006, INFORM SOFTWARE TECH, V48, P781, DOI 10.1016/j.infsof.2006.01.004
   Lee SH, 2011, INT J AUTO TECH-KOR, V12, P75, DOI 10.1007/s12239-011-0010-3
   Lei Gao, 2011, 2011 3rd International Conference on Computer Research and Development (ICCRD 2011), P234, DOI 10.1109/ICCRD.2011.5764288
   Li J, 2010, P 2010 IEEE INT S AP, P3, DOI [DOI 10.1109/ICIECS.2010.5678245, 10.1109/ISAF.2010.5712271, DOI 10.1109/ISAF.2010.5712271, 10.1145/1852786.1852804, DOI 10.1145/1852786.1852804]
   Lindlar F.F, 2010, WORKSH P 3 INT C SOF, P163
   Lochau M, 2010, ELECTRON NOTES THEOR, V264, P37, DOI 10.1016/j.entcs.2010.12.013
   Manhart P, 2004, PROC INT CONF SOFTW, P378, DOI 10.1109/ICSE.2004.1317460
   Mäntylä MV, 2012, SOFTWARE QUAL J, V20, P145, DOI 10.1007/s11219-011-9157-4
   McManus H.L, 2005, PRODUCTION DEV VALUE
   Merz F, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P89, DOI 10.1109/QUATIC.2010.14
   Morgan J., 2020, The Toyota Product Development System: integrating People, Process, and Technology
   Mueller G, 2002, OOPSLA 2002 PRACTION, P1
   Mujtaba Shahid, 2010, Proceedings of the 21st Australian Software Engineering Conference (ASWEC 2010), P139, DOI 10.1109/ASWEC.2010.37
   Niggemann O, 2007, MODEL BASED ENG EMBE, P329
   Papadopoulos Y, 2005, J SYST SOFTWARE, V76, P77, DOI 10.1016/j.jss.2004.06.027
   Papadopoulos Y, 2001, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P77, DOI 10.1109/DSN.2001.941393
   Pendharkar PC, 2009, COMMUN ACM, V52, P141, DOI 10.1145/1435417.1435449
   Petersen K., 2008, C EVALUATION ASSESSM, P71
   Petersen K, 2011, INT SYMP EMP SOFTWAR, P351, DOI 10.1109/ESEM.2011.46
   Petersen K, 2011, INFORM SOFTWARE TECH, V53, P317, DOI 10.1016/j.infsof.2010.12.001
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Petersen K, 2009, J SYST SOFTWARE, V82, P1479, DOI 10.1016/j.jss.2009.03.036
   Pfaller C, 2006, P 2006 INT WORKSH AU, P15
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Post H, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P295, DOI 10.1109/RE.2009.43
   Pretschner A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P55, DOI 10.1109/FOSE.2007.22
   Puschnig A, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P328
   Rafi D. M., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P36, DOI 10.1109/IWAST.2012.6228988
   Regnell B, 2008, IEEE SOFTWARE, V25, P42, DOI 10.1109/MS.2008.48
   Robson C., 2002, Real World Research, V2nd
   Runeson P, 2003, J SOFTW MAINT EVOL-R, V15, P41, DOI 10.1002/smr.265
   Runeson P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.91
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sabaliauskaite G, 2010, LECT NOTES COMPUT SC, V6182, P128, DOI 10.1007/978-3-642-14192-8_14
   Saiedian H, 2000, INFORM SOFTWARE TECH, V42, P419, DOI 10.1016/S0950-5849(99)00101-9
   Salo O, 2008, IET SOFTW, V2, P58, DOI 10.1049/iet-sen:20070038
   Schätz B, 2010, LECT NOTES COMPUT SC, V6415, P3, DOI 10.1007/978-3-642-16558-0_2
   Schwarzl Christian, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P122, DOI 10.1109/QSIC.2010.22
   Seo J, 2012, J SYST SOFTWARE, V85, P28, DOI 10.1016/j.jss.2011.03.049
   Sundmark D., 2011, 2011 6th IEEE International Symposium on Industrial Embedded Systems (SIES), P166, DOI 10.1109/SIES.2011.5953659
   Uusitalo EJ, 2008, INT REQUIR ENG CONF, P265, DOI 10.1109/RE.2008.30
   Vanhanen Jari, 2009, 2009 Third International Workshop on Software Product Management (IWSPM 2009), P42, DOI 10.1109/IWSPM.2009.5
   Weber M, 2003, IEEE SOFTWARE, V20, P16, DOI 10.1109/MS.2003.1159025
   Wegener J, 2005, LECT NOTES COMPUT SC, V3777, P82
   Xiaojian Liu, 2010, 2010 2nd International Conference on Industrial and Information Systems (IIS 2010), P521, DOI 10.1109/INDUSIS.2010.5565769
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 88
TC 40
Z9 41
U1 0
U2 32
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2013
VL 55
IS 7
BP 1237
EP 1259
DI 10.1016/j.infsof.2013.01.005
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 161UD
UT WOS:000320217900007
DA 2024-07-18
ER

PT J
AU Mäntylä, MV
   Itkonen, J
AF Mantyla, Mika V.
   Itkonen, Juha
TI More testers - The effect of crowd size and time restriction in software
   testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Group performance; Division of labor; Human factors;
   Crowdsourcing; Methods for SQA and V&V
ID CAPTURE-RECAPTURE; WALKTHROUGHS; PRESSURE; QUALITY; ERRORS
AB Context: The questions of how many individuals and how much time to use for a single testing task are critical in software verification and validation. In software review and usability evaluation contexts, positive effects of using multiple individuals for a task have been found, but software testing has not been studied from this viewpoint.
   Objective: We study how adding individuals and imposing time pressure affects the effectiveness and efficiency of manual testing tasks. We applied the group productivity theory from social psychology to characterize the type of software testing tasks.
   Method: We conducted an experiment where 130 students performed manual testing under two conditions, one with a time restriction and pressure, i.e., a 2-h fixed slot, and another where the individuals could use as much time as they needed.
   Results: We found evidence that manual software testing is an additive task with a ceiling effect, like software reviews and usability inspections. Our results show that a crowd of five time-restricted testers using 10 h in total detected 71% more defects than a single non-time-restricted tester using 9.9 h. Furthermore, we use F-score measure from the information retrieval domain to analyze the optimal number of testers in terms of both effectiveness and validity of testing results. We suggest that future studies on verification and validation practices use F-score to provide a more transparent view of the results.
   Conclusions: The results seem promising for the time-pressured crowds by indicating that multiple time-pressured individuals deliver superior defect detection effectiveness in comparison to non-time-pressured individuals. However, caution is needed, as the limitations of this study need to be addressed in future works. Finally, we suggest that the size of the crowd used in software testing tasks should be determined based on the share of duplicate and invalid reports produced by the crowd and by the effectiveness of the duplicate handling mechanisms. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Mantyla, Mika V.; Itkonen, Juha] Aalto Univ, Dept Comp Sci & Engn, Helsinki, Finland.
   [Mantyla, Mika V.] Lund Univ, Dept Comp Sci, S-22100 Lund, Sweden.
C3 Aalto University; Lund University
RP Mäntylä, MV (corresponding author), Aalto Univ, Dept Comp Sci & Engn, Helsinki, Finland.
EM mika.mantyla@aalto.fi; juha.itkonen@aalto.fi
RI Mäntylä, Mika V/E-7644-2012; Itkonen, Juha/E-8360-2012
OI Mantyla, Mika/0000-0002-2841-5879; Itkonen, Juha/0000-0001-9084-495X
FU ELLIIT, the Strategic Area for ICT research; Swedish government; TEKES,
   the Finnish Funding Agency for Technology and Innovation
FX This work was supported by ELLIIT, the Strategic Area for ICT research,
   funded by the Swedish government, and by TEKES, the Finnish Funding
   Agency for Technology and Innovation.
CR Agrawal M, 2007, IEEE T SOFTWARE ENG, V33, P145, DOI 10.1109/TSE.2007.29
   Andersson C, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P174, DOI 10.1109/ISESE.2003.1237976
   [Anonymous], PAPER PRESENTED AT T
   [Anonymous], 2010, International Conference on Software Maintenance, DOI DOI 10.1109/ICSM.2010.5609691
   [Anonymous], THE ESSENTIAL GUIDE
   Austin RD, 2001, INFORM SYST RES, V12, P195, DOI 10.1287/isre.12.2.195.9699
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Balijepally V, 2009, MIS QUART, V33, P91
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Berner S, 2005, PROC INT CONF SOFTW, P571
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Biffl S, 2003, IEEE T SOFTWARE ENG, V29, P385, DOI 10.1109/TSE.2003.1199069
   Briand Lionel C., 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P1
   Briand LC, 2000, IEEE T SOFTWARE ENG, V26, P518, DOI 10.1109/32.852741
   Chabris C., 2011, THE INVISIBLE GORILL
   Cohen J., 1988, STAT POWER ANAL BEHA
   Croskerry P, 2003, ACAD MED, V78, P775, DOI 10.1097/00001888-200308000-00003
   Desikan S., 2006, Software Testing: Principles and Practice
   DOLAN RJ, 1993, J PROD INNOVAT MANAG, V10, P318, DOI 10.1111/1540-5885.1040318
   Dunsmore A, 2003, IEEE T SOFTWARE ENG, V29, P677, DOI 10.1109/TSE.2003.1223643
   Elberzhager F, 2012, INFORM SOFTWARE TECH, V54, P1092, DOI 10.1016/j.infsof.2012.04.007
   Eldh Sigrid, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P70, DOI 10.1109/ICST.2011.52
   Folstad A, 2010, INTERACT COMPUT, V22, P75, DOI 10.1016/j.intcom.2009.09.001
   Glerum K, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P103
   Graber M, 2002, ACAD MED, V77, P981, DOI 10.1097/00001888-200210000-00009
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Hartson HR, 2001, INT J HUM-COMPUT INT, V13, P373, DOI 10.1207/S15327590IJHC1304_03
   Hertzum M, 2003, INT J HUM-COMPUT INT, V15, P183, DOI 10.1207/S15327590IJHC1501_14
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Itkonen Juha, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P61
   Itkonen J, 2013, IEEE T SOFTWARE ENG, V39, P707, DOI 10.1109/TSE.2012.55
   Jacobson I., 2009, WHY WE NEED A THEORY
   Jones C, 1996, COMPUTER, V29, P94, DOI 10.1109/2.488361
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   KAMSTIES E, 1996, P 5 EUR SOFTW ENG C, P362
   Kelley K, 2005, EDUC PSYCHOL MEAS, V65, P51, DOI 10.1177/0013164404264850
   Kemerer CF, 2009, IEEE T SOFTWARE ENG, V35, P534, DOI 10.1109/TSE.2009.27
   Kronz JD, 1999, CANCER, V86, P2426, DOI 10.1002/(SICI)1097-0142(19991201)86:11<2426::AID-CNCR34>3.3.CO;2-V
   Ling C, 2009, INT J HUM-COMPUT ST, V67, P382, DOI 10.1016/j.ijhcs.2008.11.002
   Mack Arien, 1998, Inattentional Blindness
   Maldonado JC, 2006, EMPIR SOFTW ENG, V11, P119, DOI 10.1007/s10664-006-5967-6
   Mäntylä MV, 2012, INT SYMP EMP SOFTWAR, P311, DOI 10.1145/2372251.2372307
   Mäntylä MV, 2012, SOFTWARE QUAL J, V20, P145, DOI 10.1007/s11219-011-9157-4
   Martin D, 2007, PROC INT CONF SOFTW, P602
   MCDANIEL LS, 1990, J ACCOUNTING RES, V28, P267, DOI 10.2307/2491150
   Miller J, 2004, IEEE T SOFTWARE ENG, V30, P811, DOI 10.1109/TSE.2004.69
   Mouchawrab S, 2011, IEEE T SOFTWARE ENG, V37, P161, DOI 10.1109/TSE.2010.32
   MYERS GJ, 1978, COMMUN ACM, V21, P760, DOI 10.1145/359588.359602
   Nan N, 2009, IEEE T SOFTWARE ENG, V35, P624, DOI 10.1109/TSE.2009.18
   Nielsen J., 1992, Conference companion, DOI DOI 10.1145/142750.142834
   Petersson H, 2004, J SYST SOFTWARE, V72, P249, DOI 10.1016/S0164-1212(03)00090-6
   Puttick G., 2008, THE PRINCIPLES AND P
   Rafi D. M., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P36, DOI 10.1109/IWAST.2012.6228988
   Rastkar Sarah, 2010, P 32 ACM IEEE INT C, V1, P505, DOI DOI 10.1145/1806799.1806872
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   Rijsbergen C. J. V., 1979, Information Retrieval
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Sears A, 1997, INT J HUM-COMPUT INT, V9, P213, DOI 10.1207/s15327590ijhc0903_2
   Steiner I. D., 1972, Group process and productivity
   Surowiecki J., 2004, WISDOM CROWDS WHY MA
   TEASLEY BE, 1994, J APPL PSYCHOL, V79, P142, DOI 10.1037/0021-9010.79.1.142
   Thompson R. F., 1973, HABITUATION BEHAVIOR, P239
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Topi H, 2005, INT J HUM-COMPUT ST, V62, P349, DOI 10.1016/j.ijhcs.2004.10.003
   VALETT JD, 1989, J SYST SOFTWARE, V9, P137, DOI 10.1016/0164-1212(89)90016-2
   Walia GS, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P71, DOI 10.1109/ISSRE.2007.14
   Walia GS, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P331, DOI 10.1145/1368088.1368134
   WITKIN HA, 1977, REV EDUC RES, V47, P1
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wood M, 1997, LECT NOTES COMPUT SC, V1301, P262, DOI 10.1145/267896.267915
   YANG MCK, 1995, IEEE T RELIAB, V44, P315, DOI 10.1109/24.387388
   Yerkes RM, 1908, J COMP NEUROL PSYCHO, V18, P459, DOI 10.1002/cne.920180503
NR 73
TC 28
Z9 32
U1 0
U2 41
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2013
VL 55
IS 6
BP 986
EP 1003
DI 10.1016/j.infsof.2012.12.004
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 139LS
UT WOS:000318584800005
DA 2024-07-18
ER

PT J
AU Lamancha, BP
   Polo, M
   Caivano, D
   Piattini, M
   Visaggio, G
AF Perez Lamancha, Beatriz
   Polo, Macario
   Caivano, Danilo
   Piattini, Mario
   Visaggio, Giuseppe
TI Automated generation of test oracles using a model-driven approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Automated test oracle; Model-driven testing; UML state
   machine; Model to text transformation
ID SOFTWARE; PRINCIPLES
AB Context: Software development time has been reduced with new development tools and paradigms, testing must accompany these changes. In order to release software products in a timely manner as well as to minimise the impact of possible errors introduced during maintenance interventions, testing automation has become a central goal. Whilst research has produced significant results in test case generation and tools for test case (re)-execution, one of the most important open problems in testing is the automation of oracle generation. The oracle decides whether the program under test has or has not behaved correctly and then issues a pass/fail verdict. In most cases, writing the oracle is a time-consuming activity that, moreover, is manual in most cases.
   Objective: This article automates two important steps in the test oracle: obtention of expected output and its comparison with the actual output, using a model-driven approach.
   Method: The oracle automation problem is resolved using a model-driven framework, based on OMG standards: UML is used as metamodel and QVT and MOF2Text as transformation languages. The automated testing framework takes the models that describe the system as input, using UML notation and derives from them the test model and then the test code, following a model-driven approach. Test oracle procedures are obtained from a UML state machine.
   Results: A complete executable test case at functional test level is obtained, composed of a test procedure with parametrized input test data and expected result automation.
   Conclusion: The oracle automation is obtained using a model-driven approach, test cases are obtained automatically from UML models. The model-driven testing framework was applied to an industrial application and has been useful to testing automation for the main functionalities in the system. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Perez Lamancha, Beatriz] Republ Univ, Software Testing Ctr, Montevideo, Uruguay.
   [Polo, Macario; Piattini, Mario] Univ Castilla La Mancha, Alarcos Res Grp, E-13071 Ciudad Real, Spain.
   [Caivano, Danilo; Visaggio, Giuseppe] Univ Bari, Dipartimento Informat, Bari, Italy.
C3 Universidad de la Republica, Uruguay; Universidad de Castilla-La Mancha;
   Universita degli Studi di Bari Aldo Moro
RP Lamancha, BP (corresponding author), Republ Univ, Software Testing Ctr, Montevideo, Uruguay.
EM bperez@fing.edu.uy; macario.polo@uclm.es; caivano@di.uniba.it;
   mario.piattini@uclm.es; visaggio@di.uniba.it
RI Piattini, Mario/F-6271-2013; Polo Usaola, Macario/N-3104-2014
OI Piattini, Mario/0000-0002-7212-8279; Polo Usaola,
   Macario/0000-0001-6519-6196; VISAGGIO, GIUSEPPE/0000-0001-5258-5328;
   Caivano, Danilo/0000-0001-5719-7447
FU DIMITRI (Ministerio de Ciencia e Innovacin) [TRA2009_0131]; JCCM, Orden
   de; MICINN [TIN2009-13718-C02-01]; FEDER
FX This research was financed by the projects: DIMITRI (Ministerio de
   Ciencia e Innovacin, grant TRA2009_0131) and the project PEGASO/MAGO
   (TIN2009-13718-C02-01) from MICINN and FEDER. Prez has a doctoral Grant
   from JCCM, Orden de 13-11-2008.
CR Abran A., 2004, SWEBOK: Guide to the software engineering Body of Knowledge
   [Anonymous], 2003, CASE STUDY RES DESIG
   [Anonymous], 1990, IEEE STANDARD GLOSSA
   Avison D, 1999, COMMUN ACM, V42, P94, DOI 10.1145/291469.291479
   Baker P., 2007, Model Driven Testing - Using the UML Testing Profile, VFirst
   BARESI L, 2001, CISTR0102 U OR
   Beck K., 1999, KENT BECKS GUIDE BET, V14
   Beizier B., 1995, BLACK BOX TESTING TE
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   Binder R.V., 2000, AW OBJ TECHNOL S
   Briand L.C., 2005, Special Issue of the Journal of Software and Systems Modeling, V4, P399
   Chevalley P, 2001, P INT COMP SOFTW APP, P205, DOI 10.1109/CMPSAC.2001.960618
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Dai Z., 2004, MODEL DRIVEN TESTING
   Dalal S. R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P285, DOI 10.1109/ICSE.1999.841019
   Dias Neto A. C., 2007, P ACM INT WORKSH EMP, P31
   Gomaa H., 2006, 28th International Conference on Software Engineering Proceedings, P1059, DOI 10.1145/1134285.1134504
   Gotlieb A, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P34, DOI 10.1109/CMPSAC.2003.1245319
   Hong H S., 2001, Proceedings of FATES'01, Workshop on Formal Approaches to Testing of Software, volume NS-01-4 of BRICS Notes Series, P15
   Hu Jin, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P727, DOI 10.1109/CSSE.2008.774
   Javed A., 2007, INT WORKSH AUT SOFTW
   Kim SK, 2005, 2005 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P100
   Kim Y. G., 1999, IEE Proceedings-Software, V146, P187, DOI 10.1049/ip-sen:19990602
   Lamancha BP, 2010, ENASE 2010: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P112
   Last M., 2003, KDD '03 Proceedings of the ninth ACM SIGKDD international conference on Knowledge discovery and data mining, P388
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Li Liuying, 1999, Proceedings Technology of Object-Oriented Languages and Systems (Cat. No.PR00393), P273, DOI 10.1109/TOOLS.1999.796494
   Manolache LI, 2001, SOFTWARE PRACT EXPER, V31, P1211, DOI 10.1002/spe.409
   Mao Ye, 2007, Information Technology Journal, V6, P370
   Mayer J, 2006, P INT COMP SOFTW APP, P475
   MCTAGGART R, 1991, ADULT EDUC QUART, V41, P168, DOI 10.1177/0001848191041003003
   Memon A. M., 2000, Software Engineering Notes, V25, P30, DOI 10.1145/357474.355050
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mouchawrab S, 2011, IEEE T SOFTWARE ENG, V37, P161, DOI 10.1109/TSE.2010.32
   Naslavsky Leila., 2007, Proceedings of the 3rd international workshop on Advances in model-based testing - A-MOST'07, P105, DOI [DOI 10.1145/1291535.1291546, 10.1145/1291535.1291546]
   Object Management Group (OMG), 2008, MOF Model to Text Transformation Language; Version 1.0, Document Formal/2008-01-16
   Offutt J., 2003, SOFTW TEST VERIF REL, V13, P8
   Offutt J., 1999, UML99 UNIFIED MODELI, P76
   OMG, 2007, MOF QUERY VIEW TRANS
   OMG, 2007, UN MOD LANG SUP SPEC
   OMG, 2005, UML TEST PROF VERS 1
   Perez Lamancha B., 2009, INT WORKSH MOD DRIV, P1
   Perez Lamancha B., 2011, INT C EV NOV APPR SO
   Polo M, 2002, SOFTWARE PRACT EXPER, V32, P1239, DOI 10.1002/spe.481
   Prasanna M., 2005, ACAD OPEN INTERNET J, V15, P1
   Richardson D. J., 1994, SIGSOFT Software Engineering Notes, P138
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Shahamiri SR, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P140, DOI 10.1109/ICSEA.2009.29
   Shahamiri SR, 2010, INT CONF COMP SCI, P30, DOI 10.1109/ICCSIT.2010.5563989
   Vanmali M, 2002, INT J INTELL SYST, V17, P45, DOI 10.1002/int.1002
   Wadsworth Y., 1998, ACTION RES INT
   Xie Q, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189752
   Xie T, 2006, LECT NOTES COMPUT SC, V4067, P380
NR 53
TC 23
Z9 23
U1 1
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2013
VL 55
IS 2
BP 301
EP 319
DI 10.1016/j.infsof.2012.08.009
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 060EO
UT WOS:000312759500009
DA 2024-07-18
ER

PT J
AU Felizardo, KR
   Andery, GF
   Paulovich, FV
   Minghim, R
   Maldonado, JC
AF Felizardo, Katia R.
   Andery, Gabriel F.
   Paulovich, Fernando V.
   Minghim, Rosane
   Maldonado, Jose C.
TI A visual analysis approach to validate the selection review of primary
   studies in systematic reviews
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic Literature Review (SLR); Visual Text Mining (VTM);
   Information visualization; Content document map; Citation document map
AB Context: Systematic Literature Reviews (SLRs) are an important component to identify and aggregate research evidence from different empirical studies. Despite its relevance, most of the process is conducted manually, implying additional effort when the Selection Review task is performed and leading to reading all studies under analysis more than once.
   Objective: We propose an approach based on Visual Text Mining (VTM) techniques to assist the Selection
   Review task in SLR. It is implemented into a VTM tool (Revis), which is freely available for use.
   Method: We have selected and implemented appropriate visualization techniques into our approach and validated and demonstrated its usefulness in performing real SLRs.
   Results: The results have shown that employment of VTM techniques can successfully assist in the Selection Review task, speeding up the entire SLR process in comparison to I he conventional approach.
   Conclusions: VTM techniques are valuable tools to be used in the context of selecting studies in the SLR process, prone to speed up some stages of SIRS. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Felizardo, Katia R.; Andery, Gabriel F.; Paulovich, Fernando V.; Minghim, Rosane; Maldonado, Jose C.] Univ Sao Paulo, Inst Ciencias Matemat & Computacao, BR-13560970 Sao Carlos, SP, Brazil.
C3 Universidade de Sao Paulo
RP Felizardo, KR (corresponding author), Univ Sao Paulo, Inst Ciencias Matemat & Computacao, POB 668, BR-13560970 Sao Carlos, SP, Brazil.
EM katiarf@icmc.usp.br; gfandery@icmc.usp.br; paulovich@icmc.usp.br;
   rminghim@icmc.usp.br; jcmaldon@icmc.usp.br
RI Maldonado, José Carlos/E-9290-2011; Paulovich, Fernando/G-1329-2010;
   Isec, Inct/I-2409-2013; Minghim, Rosane/E-5703-2011; Minghim,
   Rosane/JBR-8763-2023
OI Paulovich, Fernando/0000-0002-2316-760X; Minghim,
   Rosane/0000-0002-4799-8774; Romero Felizardo, Katia/0000-0001-9080-4165
CR Ananiadou S, 2009, SOC SCI COMPUT REV, V27, P509, DOI 10.1177/0894439309332293
   ANDERY GF, 2009, 2 INT WORKSH WEB TEX, P1
   Andrews K., 2002, Information Visualization, V1, P166, DOI 10.1057/palgrave.ivs.9500023
   Börner K, 2003, ANNU REV INFORM SCI, V37, P179, DOI 10.1002/aris.1440370106
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Chen CM, 2010, J AM SOC INF SCI TEC, V61, P1386, DOI 10.1002/asi.21309
   Cohen KB, 2010, BMC BIOINFORMATICS, V11, DOI 10.1186/1471-2105-11-492
   CRUZES D.S., 2010, Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement 2010, P1, DOI DOI 10.1145/1852786.1852788
   da Silva F., 2010, International Conference on Software Engineering (ICSE), P1
   de Oliveira MCF, 2003, IEEE T VIS COMPUT GR, V9, P378, DOI 10.1109/TVCG.2003.1207445
   Dieste Oscar, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P215
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Eades P., 1984, C NUMERANTIUM, V42, P149
   El Emam K, 2009, J MED INTERNET RES, V11, DOI 10.2196/jmir.1120
   Ellis G, 2007, IEEE T VIS COMPUT GR, V13, P1216, DOI 10.1109/TVCG.2007.70535
   Felizardo K.R., 2011, J SOFTWARE IN PRESS
   Felizardo K.R., 2010, EASE 2010
   Garcia R.E., 2004, 10 INT C DISTR MULT, P225
   GENNARI JH, 1989, ARTIF INTELL, V40, P11, DOI 10.1016/0004-3702(89)90046-5
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Keim DA, 2002, IEEE T VIS COMPUT GR, V8, P1, DOI 10.1109/2945.981847
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham BA, 2008, IET SOFTW, V2, P37, DOI 10.1049/iet-sen:20070044
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kumar V., 2006, Introduction to Data Mining
   Lopes AA, 2007, COMPUT GRAPH-UK, V31, P316, DOI 10.1016/j.cag.2007.01.023
   MacQueen J., 1967, P 5 BERK S MATH STAT, P281
   Malheiros Viviane, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P245
   Newman MEJ, 2003, SIAM REV, V45, P167, DOI 10.1137/S003614450342480
   Pacific Northwest National Laboratory (PNL), 2008, IN SPIRE VIS DOC AN
   Paulovich FV, 2008, IEEE T VIS COMPUT GR, V14, P1229, DOI 10.1109/TVCG.2008.138
   Riaz M., 2010, 14 INT C EV ASS SOFT
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Skoglund M., 2009, 13 INT C EV ASS SOFT, P10
   Tan A.-H., 1999, P PAKDD 1999 WORKSH, V8, P65
NR 39
TC 28
Z9 33
U1 0
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2012
VL 54
IS 10
BP 1079
EP 1091
DI 10.1016/j.infsof.2012.04.003
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 983QK
UT WOS:000307133600003
DA 2024-07-18
ER

PT J
AU Alsewari, ARA
   Zamli, KZ
AF Alsewari, Abdul Rahman A.
   Zamli, Kamal Z.
TI Design and implementation of a harmony-search-based variable-strength
   <i>t</i>-way testing strategy with constraints support
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Variable-strength t-way testing; Combinatorial testing; Harmony search
   algorithm
ID OPTIMIZATION; ALGORITHMS; SYSTEM
AB Context: Although useful, Al-based variable strength t-way strategies are lacking in terms of the support for high interaction strength. Additionally, most Al-based strategies generally do not address the support for constraints. Addressing the aforementioned issues, this paper elaborates the design, implementation, and evaluation of a novel variable-strength-based on harmony search algorithm, called Harmony Search Strategy (HSS).
   Objective: The objective of this work is to investigate the adoption of harmony search algorithm for constructing variable-strength t-way strategy.
   Method: Implemented in Java, HSS integrates the harmony search algorithm as parts of its search engine.
   Result: Benchmarking results demonstrate that HSS gives competitive results against most existing Al-based (and pure computational) counterparts. However, unlike other Al-based counterparts, HSS addresses the support for high interaction strength and permits the support for constraints.
   Conclusion: Al-based t-way strategies tend to outperform the pure computational-based strategies in terms of test size. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Alsewari, Abdul Rahman A.; Zamli, Kamal Z.] Univ Sains Malaysia, Sch Elect & Elect Engn, George Town, Malaysia.
C3 Universiti Sains Malaysia
RP Zamli, KZ (corresponding author), Univ Sains Malaysia, Sch Elect & Elect Engn, George Town, Malaysia.
EM eekamal@eng.usm.my
RI Zamli, Kamal Z./F-6437-2010; Alsewari, AbdulRahman/Q-3966-2019
OI Zamli, Kamal Z./0000-0003-4626-0513; Alsewari,
   AbdulRahman/0000-0002-7802-6628
FU MOHE; USM RU; USM
FX This research is partially funded by the generous MOHE fundamental Grant
   "Investigating T-Way Test Data Reduction Strategy Using PSO Technique,"
   the USM RU Grant "Development of Variable-strength Interaction Testing
   Strategy for T-Way Test Data Generation" and the USM Short-term Grant
   "Development of Pairwise Interaction Testing Tool With Seeding and
   Constraints Support."
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ahmed Bestoun S., 2010, Proceedings Second International Conference on Computer Research and Development (ICCRD 2010), P93, DOI 10.1109/ICCRD.2010.56
   Ahmed Bestoun S., 2010, Asia Modelling Symposium. Proceedings 4th Asia International Conference on Mathematical Modelling and Computer Simulation (AMS 2010), P1, DOI 10.1109/AMS.2010.14
   Ahmed BS, 2011, J SYST SOFTWARE, V84, P2171, DOI 10.1016/j.jss.2011.06.004
   Ahmed BS., 2011, INT J INNOV COMPUT I, V7, P1
   Anagnostopoulos KP, 2010, APPL MATH COMPUT, V217, P260, DOI 10.1016/j.amc.2010.05.056
   Angeline P., 1998, Seventh Annual Conference on Evolutionary Programming, San Diego, USA, 25 -27 Mar 1998, P601, DOI DOI 10.1007/BFB0040753
   [Anonymous], IBM INTELLIGENT TEST
   [Anonymous], 2007, APPL STAT PROBABILIT
   [Anonymous], P 3 INT C QUAL SOFTW
   [Anonymous], METAHEURISTICS SEARC
   Arshem J, 2010, TVG
   Bryce RC, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1082
   Chen X, 2009, ASIA PAC SOFWR ENG, P160, DOI 10.1109/APSEC.2009.18
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen DM, 1996, IEEE SOFTWARE, V13, P83, DOI 10.1109/52.536462
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Cohen M.B., 2004, Designing test suites for software interaction testing
   Cohen MB, 2008, DISCRETE MATH, V308, P2709, DOI 10.1016/j.disc.2006.06.036
   Czerwonka J., 2006, PROC 24 PACIFIC NW S, P419
   Floudas C. A., 1999, HDB TEST PROBLEMS LO, V33
   Forbes M, 2008, J RES NATL INST STAN, V113, P287, DOI 10.6028/jres.113.022
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Geem Z.W., 2005, AM J APPL SCI, V2, P1552, DOI DOI 10.3844/AJASSP.2005.1552
   Geem ZW, 2007, LECT NOTES COMPUT SC, V4448, P593
   Geem ZW, 2005, LECT NOTES COMPUT SC, V3612, P741
   Geem ZW, 2001, SIMULATION, V76, P60, DOI 10.1177/003754970107600201
   Guo Q, 2006, INFORM SOFTWARE TECH, V48, P696, DOI 10.1016/j.infsof.2005.08.001
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M., 2009, TR0903 KINGS COLL LO
   Hartman A, 2004, DISCRETE MATH, V284, P149, DOI 10.1016/j.disc.2003.11.029
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   Kaveh A, 2009, COMPUT STRUCT, V87, P267, DOI 10.1016/j.compstruc.2009.01.003
   Keith, 2006, PICT
   Kim JH, 2001, J AM WATER RESOUR AS, V37, P1131, DOI 10.1111/j.1752-1688.2001.tb03627.x
   Lee KS, 2004, COMPUT STRUCT, V82, P781, DOI 10.1016/j.compstruc.2004.01.002
   Lei Y, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P254, DOI 10.1109/HASE.1998.731623
   Lei Y., 2007, Software Testing, Verification Reliability, V18, P125
   Mahdavi M, 2007, APPL MATH COMPUT, V188, P1567, DOI 10.1016/j.amc.2006.11.033
   MANDL R, 1985, COMMUN ACM, V28, P1054, DOI 10.1145/4372.4375
   McCaffrey James D., 2010, Proceedings of the Seventh International Conference on Information Technology: New Generations (ITNG 2010), P992, DOI 10.1109/ITNG.2010.93
   NIST, 2010, ACTS
   Omran MGH, 2008, APPL MATH COMPUT, V198, P643, DOI 10.1016/j.amc.2007.09.004
   Osman I. H., 1993, Annals of Operations Research, V41, P421, DOI 10.1007/BF02023004
   Pallas D., 2003, JENNY
   Sherwood G., 2006, TESTCOVER
   Shiba T., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P72, DOI 10.1109/CMPSAC.2004.1342808
   Sthamer Harmen-Hinrich, 1995, The Automatic Generation of Software Test Data Using Genetic Algorithms (Unpublished doctoral dissertation). University of Glamorgan
   Wang ZY, 2008, INT CONF QUAL SOFTW, P155, DOI 10.1109/QSIC.2008.52
   Williams A W., 2002, TCONFIG
   Williams AW, 2001, ACS/IEEE INTERNATIONAL CONFERENCE ON COMPUTER SYSTEMS AND APPLICATIONS, PROCEEDINGS, P304, DOI 10.1109/AICCSA.2001.934001
   Younis Mohammed I., 2009, Proceedings of the 2009 IEEE Symposium on Industrial Electronics & Applications (ISIEA 2009), P221, DOI 10.1109/ISIEA.2009.5356469
   Younis MI, 2010, ETRI J, V32, P73, DOI 10.4218/etrij.10.0109.0266
   Zamli KZ, 2011, INFORM SCIENCES, V181, P1741, DOI 10.1016/j.ins.2011.01.002
NR 54
TC 84
Z9 85
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2012
VL 54
IS 6
BP 553
EP 568
DI 10.1016/j.infsof.2012.01.002
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 922ZH
UT WOS:000302587100003
DA 2024-07-18
ER

PT J
AU Ronald, N
   Dignum, V
   Jonker, C
   Arentze, T
   Timmermans, H
AF Ronald, Nicole
   Dignum, Virginia
   Jonker, Catholijn
   Arentze, Theo
   Timmermans, Harry
TI On the engineering of agent-based simulations of social activities with
   social networks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agent-based modelling; Agent-oriented software engineering; Social
   network modelling; Activity-travel modelling
ID ACTIVITY-TRAVEL BEHAVIOR; ACTIVITY PARTICIPATION; MODEL; FRAMEWORK;
   GENERATION; DYNAMICS; MOBILITY
AB Context: Models of how people move around cities play a role in making decisions about urban and land-use planning. Previous models have been based on space and time, and have neglected the social aspect of travel. Recent work on agent-based modelling shows promise as a new approach, especially for models with both social and spatial elements.
   Objective: This paper demonstrates the design and implementation of an agent-based model of social activity generation and scheduling for experimental purposes to explore the effects of social space in addition to physical space. As a side-effect, the paper discusses the need for and requirements on structured design of agent-based models and simulations.
   Method: Model design was based on the MASQ meta-model and implemented in Python. The model was then tested against several hypotheses with several initial networks.
   Results: The model allowed us to investigate the effects of social networks. We found that the model was most sensitive to the pair attributes of the network, rather than the global or personal attributes.
   Conclusion: As demonstrated, a structured approach to model development is important in order to be able to understand and apply the results, and for the model to be extensible in the future. Agent-based modelling approaches allow for inclusion of social elements. For models incorporating social networks, testing the sensitivity to the initial network is important to ensure the model performs as expected. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Ronald, Nicole; Arentze, Theo; Timmermans, Harry] Eindhoven Univ Technol, Design & Decis Support Syst Grp, NL-5600 MB Eindhoven, Netherlands.
   [Dignum, Virginia] Delft Univ Technol, Fac Technol Policy & Management, Delft, Netherlands.
   [Jonker, Catholijn] Delft Univ Technol, Man Machine Interact Grp, Delft, Netherlands.
C3 Eindhoven University of Technology; Delft University of Technology;
   Delft University of Technology
RP Ronald, N (corresponding author), Eindhoven Univ Technol, Design & Decis Support Syst Grp, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM n.a.ronald@tue.nl
OI Dignum, Virginia/0000-0001-7409-5813
CR [Anonymous], 1994, Modelling transport
   Arentze T., 2006, TRB 2006 ANN M
   Arentze T., 2009, P WORKSH FRONT TRANS
   Arentze TA, 2004, TRANSPORT RES B-METH, V38, P613, DOI 10.1016/j.trb.2002.10.001
   Arentze T, 2008, ENVIRON PLANN B, V35, P1012, DOI 10.1068/b3319t
   Axhausen K., 2006, 343 I VERK TRANSP
   Axhausen KW, 2008, ENVIRON PLANN B, V35, P981, DOI 10.1068/b3316t
   Balmer M., 2007, THESIS ETH ZURICH
   Barabási AL, 1999, SCIENCE, V286, P509, DOI 10.1126/science.286.5439.509
   Barthélemy M, 2003, EUROPHYS LETT, V63, P915, DOI 10.1209/epl/i2003-00600-6
   Batty M, 2003, INT J GEOGR INF SCI, V17, P673, DOI 10.1080/1365881031000135474
   Bernon C, 2005, KNOWL ENG REV, V20, P99, DOI 10.1017/S0269888905000421
   Bernon C., 2005, AGENT ORIENTED METHO
   Bonabeau E, 2002, P NATL ACAD SCI USA, V99, P7280, DOI 10.1073/pnas.082080899
   Borgatti SP, 2009, SCIENCE, V323, P892, DOI 10.1126/science.1165821
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Brown D.G., 2005, J. Geogr. Syst., V7, P25, DOI DOI 10.1007/S10109-005-0148-5
   Buliung RN, 2007, TRANSPORT REV, V27, P151, DOI 10.1080/01441640600858649
   Carrasco J.A., 2009, P 12 INT C TRAV BEH
   Carrington PeterJ., 2005, MODELS METHODS SOCIA, V27
   Castle C.J., 2006, Principles and concepts of agent-based modelling for developing geospatial simulations
   COOK KS, 1977, SOCIOL QUART, V18, P62, DOI 10.1111/j.1533-8525.1977.tb02162.x
   Dignum V, 2004, KNOWL ENG REV, V19, P147, DOI 10.1017/S0269888904000244
   Dignum V, 2010, SIMUL MODEL PRACT TH, V18, P1526, DOI 10.1016/j.simpat.2010.05.011
   Drogoul A, 2003, LECT NOTES ARTIF INT, V2581, P1
   Edmonds B., 2003, CPM03127
   Epstein J.M., 2006, Generative Social Science: Studies in Agent-Based Computational Modeling, VStudent
   ERDOS P, 1960, B INT STATIST INST, V38, P343
   Eubank S, 2004, NATURE, V429, P180, DOI 10.1038/nature02541
   Fatima SS, 2006, J ARTIF INTELL RES, V27, P381, DOI 10.1613/jair.2056
   Gliebe JP, 2002, TRANSPORTATION, V29, P49, DOI 10.1023/A:1012995509777
   Hackney J., 2007, P FRONT TRANSP 2007
   Hackney J., 2009, TRB 2009 ANN M
   Hamill L, 2009, JASSS-J ARTIF SOC S, V12
   HANNEMAN R. A., 2005, Introduction to social network methods
   Heath B, 2009, JASSS-J ARTIF SOC S, V12, pA143
   Hofstede GJ, 2012, GROUP DECIS NEGOT, V21, P79, DOI 10.1007/s10726-010-9190-x
   Hübner JF, 2004, LECT NOTES ARTIF INT, V3171, P506
   Illenberger J., 2009, P 12 INT C TRAV BEH
   Juan T., 2002, Proceedings of the First International Joint Conference on Autonomous Agents and Multiagent Systems, P3
   Klugl F., 2009, P 2 MULT LOG LANG OR
   Macal CM, 2006, PROCEEDINGS OF THE 2006 WINTER SIMULATION CONFERENCE, VOLS 1-5, P73, DOI 10.1109/WSC.2006.323040
   McNally M., 2000, HDB TRANSPORT MODELI
   McPherson M, 2001, ANNU REV SOCIOL, V27, P415, DOI 10.1146/annurev.soc.27.1.415
   Miller E.J., 2005, PROGR ACTIVITY BASED, P175
   Mokhtarian PL, 2006, TRANSPORTATION, V33, P263, DOI 10.1007/s11116-005-2305-6
   NetworkX Developers, 2010, NETWORKX DEV
   Newman MEJ, 2002, COMPUT PHYS COMMUN, V147, P40, DOI 10.1016/S0010-4655(02)00201-1
   Padgham L., 2004, WILEY SERIES AGENT T
   Parker D.C., 2005, GIS, Spatial Analysis, and Modeling, P403
   Pavon J., 2003, LECT NOTES COMPUTER, V2691, P294
   RMIT Agents Group, 2010, PROM PDT
   Ronald N., 2009, P 18 WORLD IMACS C M
   Ronald N., 2010, P 12 WORLD C TRANSP
   Scott DM, 2002, TRANSPORT RES B-METH, V36, P875, DOI 10.1016/S0191-2615(01)00039-X
   Searle John., 1997, CONSTRUCTION SOCIAL
   Srinivasan S, 2006, TRANSPORTATION, V33, P497, DOI 10.1007/s11116-006-8078-8
   Stratulat T., 2009, P 8 INT C AUT AG MUL, P813
   Torrens PM, 2007, ENVIRON PLANN B, V34, P200, DOI 10.1068/b31070
   Tranier J., 2007, THESIS U MONTPELLIER
   Urry J, 2004, ENVIRON PLANN D, V22, P27, DOI 10.1068/d322t
   Wainer J, 2007, DECIS SUPPORT SYST, V44, P285, DOI 10.1016/j.dss.2007.03.015
   Watts DJ, 1998, NATURE, V393, P440, DOI 10.1038/30918
   Wen CH, 2000, TRANSPORTATION, V27, P5, DOI 10.1023/A:1005234603206
   Wilber K., 2001, THEORY EVERYTHING IN
   Wilson DavidT., 1995, J ACAD MARKET SCI, V23, P335, DOI DOI 10.1177/009207039502300414
   Wong LH, 2006, PHYSICA A, V360, P99, DOI 10.1016/j.physa.2005.04.029
   Wooldridge M, 2000, AUTON AGENT MULTI-AG, V3, P285, DOI 10.1023/A:1010071910869
   Wooldridge M., 2009, An introduction to multiagent systems
   Zhang Y, 2008, MEDIVIS 2008: FIFTH INTERNATIONAL CONFERENCE BIOMEDICAL VISUALIZATION - INFORMATION VISUALIZATION IN MEDICAL AND BIOMEDICAL INFORMATICS, PROCEEDINGS, P71, DOI 10.1109/MediVis.2008.12
NR 70
TC 19
Z9 22
U1 1
U2 25
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2012
VL 54
IS 6
BP 625
EP 638
DI 10.1016/j.infsof.2011.12.004
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 922ZH
UT WOS:000302587100008
DA 2024-07-18
ER

PT J
AU Yan, ZQ
   Dijkman, R
   Grefen, P
AF Yan, Zhiqiang
   Dijkman, Remco
   Grefen, Paul
TI Business process model repositories - Framework and survey
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Business process model; Repository; Management model; Reference
   architecture
ID LANGUAGE
AB Context: Large organizations often run hundreds or even thousands of different business processes. Managing such large collections of business process models is a challenging task. Software can assist in performing that task, by supporting common management functions such as storage, search and version management of models. It can also provide advanced functions that are specific for managing collections of process models, such as managing the consistency of public and private processes. Software that supports the management of large collections of business process models is called: business process model repository software.
   Objective: This paper contributes to the development of business process model repositories, by analyzing the state of the art.
   Method: To perform the analysis a literature survey and a comparison of existing (business process model) repository technology is performed.
   Result: The results of the state of the art analysis are twofold. First, a framework for business process model repositories is presented, which consists of a management model and a reference architecture. The management model lists the functionality that can be provided and the reference architecture presents the components that provide that functionality. Second, an analysis is presented of the extent to which existing business process model repositories implement the functionality from the framework.
   Conclusion: The results presented in the paper are valuable as a comprehensive overview of business process model repository functionality. In addition they form a basis for a future research agenda. We conclude that existing repositories focus on traditional functionality rather than exploiting the full potential of information management tools, thus we show that there is a strong basis for further research. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Yan, Zhiqiang; Dijkman, Remco; Grefen, Paul] Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
C3 Eindhoven University of Technology
RP Dijkman, R (corresponding author), Eindhoven Univ Technol, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM z.yan@tue.nl; r.m.dijkman@tue.nl; p.w.p.j.grefen@tue.nl
RI Dijkman, Remco/P-4281-2019; Grefen, Paul W.P.J./C-2174-2014; Yan,
   Zhiqiang/P-9909-2017; Dijkman, Remco M/B-2721-2014
OI Dijkman, Remco/0000-0003-4083-0036; 
CR Andrews Tony., 2003, Business process execution language for web services
   Angelov S., 2009, P JOINT WORK IEEE IF
   [Anonymous], 2007, P EMISA 2007
   [Anonymous], 2008, ORYX
   [Anonymous], 1999, SAP R 3 BUSINESS BLU
   Awad A, 2008, IEEE INT ENTERP DIST, P85, DOI 10.1109/EDOC.2008.11
   Awad A, 2008, LECT NOTES COMPUT SC, V5240, P326, DOI 10.1007/978-3-540-85758-7_24
   Awad A, 2008, LECT NOTES BUS INF P, V7, P239
   Been Catriel., 2006, VLDB 2006 P 32 INT C, P343
   BEERI C, 2007, P ACM SIGMOD INT C M, P1122
   Beeri C, 2007, P 33 INT C VER LARG, P603
   Beeri C, 2008, SIGMOD REC, V37, P21, DOI 10.1145/1374780.1374785
   Bergholtz M., 2008, P 4 BPD CONJ BPM08 M, P42
   Bernstein A., 1995, IEEE DATA ENG B, V51, P41
   Bernstein P.A., 1994, P VLDB 1994 SANT DE, P707
   Brickley D., 2004, RDF VOCABULARY DESCR
   Chengfei Liu, 1999, Proceedings Technology of Object-Oriented Languages and Systems (Cat. No.PR00393), P348, DOI 10.1109/TOOLS.1999.796505
   Choi I, 2005, COMPUT IND, V56, P85, DOI [10.1016/j.compined.2004.08.011, 10.1016/j.compind.2004.08.011]
   Choi I, 2003, COMPUT IND, V50, P85, DOI 10.1016/S0166-3615(02)00139-2
   Choi I, 2007, KNOWL PROCESS MANAG, V14, P303, DOI 10.1002/kpm.290
   De Bruijn J., 2005, Web service modeling ontology (wsmo)
   Decker G, 2008, LECT NOTES COMPUT SC, V5240, P382, DOI 10.1007/978-3-540-85758-7_29
   Dijkman R, 2008, LECT NOTES COMPUT SC, V5240, P261, DOI 10.1007/978-3-540-85758-7_20
   Dijkman R, 2011, INFORM SOFTWARE TECH, V53, P937, DOI 10.1016/j.infsof.2011.04.001
   Elhadad M., 2008, INT J INTEROPERABILI, V3
   Fiorini S. T., 2001, Advanced Information Systems Engineering. 13th International Conference, CAiSE 2001. Proceedings (Lecture Notes in Computer Science Vol.2068), P284
   Fiorini ST, 1996, PROCEEDINGS OF THE 5TH WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WET ICE '96), P226, DOI 10.1109/ENABL.1996.555226
   Gao S, 2010, LECT NOTES BUS INF P, V68, P162
   Hepp M., 2007, P WIRTSCH 2007
   Kaczmarek M., 2008, BUSINESS PROCESS LIB
   KELLER G, 1992, SEMANTISCHE PROZEMOD
   Kitchenham B., 2004, ARXIV
   La Rosa M, 2011, EXPERT SYST APPL, V38, P7029, DOI 10.1016/j.eswa.2010.12.012
   Lapouchnian A., 2007, P BPM 2007 BRISB AUS
   Lu RP, 2006, LECT NOTES COMPUT SC, V4102, P426
   Lu RP, 2009, DATA KNOWL ENG, V68, P642, DOI 10.1016/j.datak.2009.02.009
   Ma Z., 2007, P INT WORKSH SEM BUS, P92
   Malone T. W., 2003, MIT PROCESS HDB
   Malone TW, 1999, MANAGE SCI, V45, P425, DOI 10.1287/mnsc.45.3.425
   Markovic I., 2008, MULT WIRTSCH
   Markovic I, 2008, LECT NOTES COMPUT SC, V4928, P484
   Mendling J., 2004, LECT NOTES INFORM, P129
   *MIT, 2003, MIT PROC HDB PROJ
   *OBJ MAN GROUP, 2006, BUS PROC MOD NOT BPM
   Rozinat A, 2008, INFORM SYST, V33, P64, DOI 10.1016/j.is.2007.07.001
   SAGAWA JM, 1990, IBM SYST J, V29, P209, DOI 10.1147/sj.292.0209
   Schuler C, 2003, LECT NOTES COMPUT SC, V2910, P483
   Schuler C., 2004, P ICWS 2004 SAN DIEG
   Schumm D., 2010, P 19 INT C INF SYST
   Shahzad K., 2010, P 13 INT C BUS INF S
   SONG M, 2001, UGACSLSDISTR01012
   Theling T, 2005, LECT NOTES COMPUT SC, V3543, P169
   van der Aalst WMP, 2004, COMPUT IND, V53, P231, DOI 10.1016/j.compind.2003.10.001
   van der Aalst WMP, 2003, LECT NOTES COMPUT SC, V2678, P1
   Vanderhaeghen D, 2007, J INTELL MANUF, V18, P553, DOI 10.1007/s10845-007-0060-6
   Vanhatalo J., 2004, THESIS HELSINKI U TE
   Vanhatalo J., 2006, P BPM DEM SESS 4 INT, P25
   Wang HJ, 2011, INFORM TECHNOL MANAG, V12, P97, DOI 10.1007/s10799-010-0076-z
   Wasser A., 2006, LNCS, V4102, P1
   Weber B, 2011, COMPUT IND, V62, P467, DOI 10.1016/j.compind.2010.12.012
   Weber R., 2003, P VLDB 2003 BERL GER
   *WORKFL MAN COAL, 1995, TC001003 WORKFL MAN
   Yan Z., 2010, BPM WORKSH 1 INT WOR
   Yan ZQ, 2010, LECT NOTES COMPUT SC, V6426, P60
   Yang GX, 2004, DATA KNOWL ENG, V50, P35, DOI 10.1016/j.datak.2004.01.003
   Yang GX, 2003, LECT NOTES COMPUT SC, V2678, P120
   Zhao XH, 2007, LECT NOTES COMPUT SC, V4714, P198
   DOCUMENTAIR STRUCTUU
NR 68
TC 49
Z9 56
U1 1
U2 30
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2012
VL 54
IS 4
BP 380
EP 395
DI 10.1016/j.infsof.2011.11.005
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 900AN
UT WOS:000300859100004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yu, YT
   Lau, MF
AF Yu, Yuen Tak
   Lau, Man Fai
TI Fault-based test suite prioritization for specification-based testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Fault-based prioritization; Fault-based testing; Fault class hierarchy;
   Software testing; Specification-based testing; Test suite prioritization
ID ERROR-DETECTION CAPABILITY; COVERAGE; GENERATION; FAMILY
AB Context: Existing test suite prioritization techniques usually rely on code coverage information or historical execution data that serve as indicators for estimating the fault-detecting ability of test cases. Such indicators are primarily empirical in nature and not theoretically driven; hence, they do not necessarily provide sound estimates. Also, these techniques are not applicable when the source code is not available or when the software is tested for the first time.
   Objective: We propose and develop the novel notion of fault-based prioritization of test cases which directly utilizes the theoretical knowledge of their fault-detecting ability and the relationships among the test cases and the faults in the prescribed fault model, based on which the test cases are generated.
   Method: We demonstrate our approach of fault-based prioritization by applying it to the testing of the implementation of logical expressions against their specifications. We then validate our proposal by an empirical study that evaluates the effectiveness of prioritization techniques using two different metrics.
   Results: A theoretically guided fault-based prioritization technique generally outperforms other techniques under study, as assessed by two different metrics. Our empirical results also show that the technique helps to reveal all target faults by executing only about 72% of the prioritized test suite, thereby reducing the effort required in testing.
   Conclusions: The fault-based prioritization approach is not only applicable to the instance empirically validated in this paper, but should also be adaptable to other fault-based testing strategies. We also envisage new research directions to be opened up by our work. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Yu, Yuen Tak] City Univ Hong Kong, Dept Comp Sci, Kowloon Tong, Hong Kong, Peoples R China.
   [Lau, Man Fai] Swinburne Univ Technol, Fac Informat & Commun Technol, Hawthorn, Vic 3122, Australia.
C3 City University of Hong Kong; Swinburne University of Technology
RP Yu, YT (corresponding author), City Univ Hong Kong, Dept Comp Sci, Kowloon Tong, Hong Kong, Peoples R China.
EM csytyu@cityu.edu.hk; elau@swin.edu.au
FU Research Grants Council of the Hong Kong Special Administrative Region,
   China [123206, 123207]; Australian Research Council [DP0558597];
   Swinburne University of Technology, Australia; Australian Research
   Council [DP0558597] Funding Source: Australian Research Council
FX The work described in this paper is partially supported by grants from
   the Research Grants Council of the Hong Kong Special Administrative
   Region, China (Project Nos. 123206 and 123207), Australian Research
   Council (Discovery Project ID: DP0558597), and Swinburne University of
   Technology, Australia (Research Development Scheme 2006).
CR Aichernig BK, 2009, THIRD INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, PROCEEDINGS, P147, DOI 10.1109/TASE.2009.14
   Ammann P, 2001, IEEE INT C ENG COMP, P212, DOI 10.1109/ICECCS.2001.930180
   ATLEE JM, 1993, IEEE T SOFTWARE ENG, V19, P24, DOI 10.1109/32.210305
   Black PE, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P81, DOI 10.1109/ASE.2000.873653
   Chan WK, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P187
   Chen TY, 1996, IEEE T SOFTWARE ENG, V22, P109, DOI 10.1109/32.485221
   Chen TY, 1998, INFORM SOFTWARE TECH, V40, P347, DOI 10.1016/S0950-5849(98)00050-0
   Chen TY, 2001, SOFTW TEST VERIF REL, V11, P165, DOI 10.1002/stvr.221
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   DICK J, 1993, P INT S FORM METH EU, P19
   Do H, 2010, IEEE T SOFTWARE ENG, V36, P593, DOI 10.1109/TSE.2010.58
   Dupuy Arnaud, 2000, 19 DASC 19 DIG AV SY
   Elbaum S, 2004, SOFTWARE QUAL J, V12, P185, DOI 10.1023/B:SQJO.0000034708.84524.22
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Foster K. A., 1984, SIGSOFT Software Engineering Notes, V9, P120, DOI 10.1145/1010925.1010935
   FOSTER KA, 1980, IEEE T SOFTWARE ENG, V6, P258, DOI 10.1109/TSE.1980.234487
   Heimdahl MPE, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P176, DOI 10.1109/ASE.2004.1342735
   Hierons R. M., 1997, Software Testing, Verification and Reliability, V7, P19, DOI 10.1002/(SICI)1099-1689(199703)7:1<19::AID-STVR124>3.0.CO;2-N
   Huang CY, 2010, J SYST SOFTWARE, V83, P646, DOI 10.1016/j.jss.2009.11.703
   IGLEWSKI M, 2006, P CAN C EL COMP ENG, P2455
   Jeffrey D, 2008, J SYST SOFTWARE, V81, P196, DOI 10.1016/j.jss.2007.05.006
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Kaminski G, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P386, DOI 10.1109/ICST.2009.13
   Kapoor K, 2007, ACM T SOFTW ENG METH, V16, pA1, DOI 10.1145/1243987.1243988
   KIM JM, 2002, P INT C SOFTW ENG, P116
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Korel B, 2008, PROC IEEE INT CONF S, P247, DOI 10.1109/ICSM.2008.4658073
   Krishnamoorthi R, 2009, INFORM SOFTWARE TECH, V51, P799, DOI 10.1016/j.infsof.2008.08.007
   Krishnan R., 2008, 2007 Military Communications Conference (MILCOM 2007), P1, DOI [10.1109/ICCCN.2008.ECP.71, DOI 10.1109/ICCCN.2008.ECP.71]
   Kuhn DR, 1999, ACM T SOFTW ENG METH, V8, P411, DOI 10.1145/322993.322996
   Lau MF, 2005, ACM T SOFTW ENG METH, V14, P247, DOI 10.1145/1072997.1072998
   Leon D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P442, DOI 10.1109/ISSRE.2003.1251065
   LEVESON NG, 1994, IEEE T SOFTWARE ENG, V20, P684, DOI 10.1109/32.317428
   Li JJ, 2006, INFORM SOFTWARE TECH, V48, P1187, DOI 10.1016/j.infsof.2006.06.007
   Marainen Johannes., 1996, Norrbotten, P62
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   *OBJ MAN GROUP, UN MOD LANG
   Okun V, 2004, INFORM SOFTWARE TECH, V46, P525, DOI 10.1016/j.infsof.2003.10.003
   Paradkar A, 1997, ANN SOFTW ENG, V4, P133, DOI 10.1023/A:1018979130614
   Petrenko A., 2001, Modeling and verification of parallel processes, P196
   Ramamoorthy C. V., 1976, IEEE Transactions on Software Engineering, VSE-2, P293, DOI 10.1109/TSE.1976.233835
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   SAMPATH S, 2008, P 1 INT C SOFTW TEST, P141
   Tai KC, 1996, IEEE T SOFTWARE ENG, V22, P552, DOI 10.1109/32.536956
   Tsuchiya T, 2002, ACM T SOFTW ENG METH, V11, P58, DOI 10.1145/504087.504089
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P1089, DOI 10.1109/32.738341
   VONBOCHMANN G, 1991, P IFIP 4 WORKSH PROT, P17
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   WEYUKER E, 1994, IEEE T SOFTWARE ENG, V20, P353, DOI 10.1109/32.286420
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Xu DX, 2009, INT J SOFTW ENG KNOW, V19, P599, DOI 10.1142/S0218194009004313
   Yu YT, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P263, DOI 10.1109/QSIC.2003.1319110
   YU YT, 2006, J SYST SOFTWARE, V79, P577, DOI DOI 10.1016/J.JSS.2005.05.030
   YU YT, 2002, P INT C REL SOFTW TE, P245
   YU YT, 2001, P INT C APPL INF S 3, P466
   Yu YT, 2006, J SYST SOFTWARE, V79, P820, DOI 10.1016/j.jss.2005.08.016
NR 58
TC 25
Z9 26
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2012
VL 54
IS 2
BP 179
EP 202
DI 10.1016/j.infsof.2011.09.005
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 864ES
UT WOS:000298220400004
DA 2024-07-18
ER

PT J
AU Kitchenham, BA
   Budgen, D
   Brereton, OP
AF Kitchenham, Barbara A.
   Budgen, David
   Brereton, O. Pearl
TI Using mapping studies as the basis for further research - A
   participant-observer case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Case study; Systematic literature review; Mapping studies; Software
   engineering
ID SOFTWARE; CROSS
AB Context: We are strong advocates of evidence-based software engineering (EBSE) in general and systematic literature reviews (SLRs) in particular. We believe it is essential that the SLR methodology is used constructively to support software engineering research.
   Objective: This study aims to assess the value of mapping studies which are a form of SLR that aims to identify and categorise the available research on a broad software engineering topic.
   Method: We used a multi-case, participant-observer case study using five examples of studies that were based on preceding mapping studies. We also validated our results by contacting two other researchers who had undertaken studies based on preceding mapping studies and by assessing review comments related to our follow-on studies.
   Results: Our original case study identified 11 unique benefits that can accrue from basing research on a preceding mapping study of which only two were case specific. We also identified nine problems associated with using preceding mapping studies of which two were case specific. These results were consistent with the information obtained from the validation activities. We did not find an example of an independent research group making use of a mapping study produced by other researchers.
   Conclusion: Mapping studies can save time and effort for researchers and provide baselines to assist new research efforts. However, they must be of high quality in terms of completeness and rigour if they are to be a reliable basis for follow-on research. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Kitchenham, Barbara A.; Brereton, O. Pearl] Univ Keele, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
   [Budgen, David] Univ Durham, Durham DH1 3LE, England.
C3 Keele University; Durham University
RP Kitchenham, BA (corresponding author), Univ Keele, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
EM b.a.kitchenham@cs.keele.ac.uk; david.bud-gen@durham.ac.uk;
   o.p.brereton@cs.keele.ac.uk
RI Kitchenham, Barbara/AAL-4311-2020
OI Kitchenham, Barbara/0000-0002-6134-8460; Budgen,
   David/0000-0001-7143-0241
FU EPSRC [EP/E046983 (EPIC)]; EPSRC [EP/E046983/1, EP/E049184/1] Funding
   Source: UKRI
FX This work was funded through EPSRC award EP/E046983 (EPIC). We would
   like to thank all those who helped with this by providing their
   responses to our questionnaires particularly Dr. Afzal and Dr. Zhang.
CR Afzal W., 2008, 20 INT C SOFTW ENG K
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   [Anonymous], 2005, SYSTEMATIC REV SOCIA
   Bailey John, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P482
   BEECHAM S, 2009, UHCSTR492
   BRERETON OP, 2009, EPIC200701
   Budgen D, 2009, IET SOFTW, V3, P410, DOI 10.1049/iet-sen.2008.0106
   BUDGEN D, 2009, P EASE 2009
   BUDGEN D, SOFTWARE PR IN PRESS, DOI DOI 10.1002/SPE1009
   BUDGEN D, 2008, P PPIG 2008 LANC U, P195
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Cerpa N, 2010, INFORM SOFTWARE TECH, V52, P934, DOI 10.1016/j.infsof.2010.03.011
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   GOMEZ O, 2006, CCIS, V10, P165
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Hannay JE, 2008, IEEE T SOFTWARE ENG, V34, P242, DOI 10.1109/TSE.2008.13
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   JORGENSEN M, 2005, 11 IEEE INT SOFTW ME, P24
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kampenes VB, 2009, INFORM SOFTWARE TECH, V51, P71, DOI 10.1016/j.infsof.2008.04.006
   Khan K.S., 2003, SYSTEMATIC REV SUPPO
   KITCHENHAM B, 2009, P ESEM 2009
   KITCHENHAM B, 2010, P EASE 2010
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham Barbara., 2010, EASE'10 Proceedings of the 14th international conference on Evaluation and Assessment in Software Engineering, P25, DOI DOI 10.14236/EWIC/EASE2010.4
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kitchenham BA, 2010, EMPIR SOFTW ENG, V15, P618, DOI 10.1007/s10664-010-9134-8
   NETO AD, 2008, IEEE SOFTWARE, V25, P242
   PETERSEN K, 2008, P EASE 08
   Bellini CGP, 2008, INT J SOFTW ENG KNOW, V18, P37, DOI 10.1142/S021819400800357X
   PRETORIUS R, 2008, P 2 ACM IEEE INT S E, P342
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Yin R.K., 2011, Qualitative research from start to finish
   ZHANG C, WHAT DO WE KNO UNPUB
   ZHANG H, 2008, P 15 AS PAC SOFTW EN, P59
   Zhang H, 2008, LECT NOTES COMPUT SC, V5007, P345, DOI 10.1007/978-3-540-79588-9_30
   Zhang H, 2010, IEEE ANTENNAS PROP
NR 43
TC 331
Z9 350
U1 1
U2 30
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2011
VL 53
IS 6
SI SI
BP 638
EP 651
DI 10.1016/j.infsof.2010.12.011
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 762FS
UT WOS:000290460900008
DA 2024-07-18
ER

PT J
AU Conboy, K
   Morgan, L
AF Conboy, Kieran
   Morgan, Lorraine
TI Beyond the customer: Opening the agile systems development process
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Open innovation; Agile systems development; Inter-organisational;
   Intra-organisational; Networking
ID SOFTWARE-DEVELOPMENT; ABSORPTIVE-CAPACITY; OPEN INNOVATION; PERFORMANCE;
   CHALLENGES; CREATIVITY; KNOWLEDGE; BUSINESS; FIRM
AB Context: A particular strength of agile systems development approaches is that they encourage a move away from 'introverted' development, involving the customer in all areas of development, leading to more innovative and hence more valuable information system. However, a move toward open innovation requires a focus that goes beyond a single customer representative, involving a broader range of stakeholders, both inside and outside the organisation in a continuous, systematic way.
   Objective: This paper provides an in-depth discussion of the applicability and implications of open innovation in an agile environment.
   Method: We draw on two illustrative cases from industry.
   Results: We highlight some distinct problems that arose when two project teams tried to combine agile and open innovation principles. For example, openness is often compromised by a perceived competitive element and lack of transparency between business units. In addition, minimal documentation often reduce effective knowledge transfer while the use of short iterations, stand-up meetings and presence of on-site customer reduce the amount of time for sharing ideas outside the team.
   Conclusion: A clear understanding of the inter- and intra-organisational applicability and implications of open innovation in agile systems development is required to address key challenges for research and practice. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Conboy, Kieran; Morgan, Lorraine] Natl Univ Ireland Galway, Galway, Ireland.
C3 Ollscoil na Gaillimhe-University of Galway
RP Morgan, L (corresponding author), Natl Univ Ireland Galway, Galway, Ireland.
EM kieran.conboy@nuigalway.ie; lorraine.morgan@ul.ie
OI Conboy, Kieran/0000-0001-8260-4075
FU Enterprise Ireland; Science Foundation Ireland [03/CE2/1303_1]; European
   Commission [034824, 216446]
FX This work is supported in part by Enterprise Ireland and Science
   Foundation Ireland Grant 03/CE2/1303_1 to Lero - the Irish Software
   Engineering Research Centre and the European Commission through the FP6
   Project OPAALS - Open Philosophies for Associative Autopoietic Digital
   Ecosystems (Project No.: 034824) and FP7 Project NEXOF-Reference
   Architecture (Project No.: 216446).
CR ALLEMAN G., 2002, STORY MANAGING PROJE
   Amabile TM, 1998, HARVARD BUS REV, V76, P76
   [Anonymous], 2002, Agile software development
   [Anonymous], 1991, TECHNOLOGY PURSUIT E
   [Anonymous], P 40 ANN HAW INT C S
   [Anonymous], EUROPEAN J INFORM SY
   [Anonymous], 2004, XP Ser
   [Anonymous], 1995, MYTHICAL MAN MONTH
   [Anonymous], 2006, EUROPEAN J INFORM SY
   [Anonymous], KMSS P
   [Anonymous], XP UNIVERSE RALEIGH
   [Anonymous], 2006, OPEN INNOVATION RES
   [Anonymous], P 3 INT C EXTR PROGR
   [Anonymous], 2006, OpenInnovation: Researching a New Paradigm
   [Anonymous], PROMOTING PENGUIN IN
   [Anonymous], 2006, OPEN INNOVATION NEW
   [Anonymous], DRUID SUMM C 2007 AP
   Beck K., 2000, EXTREME PROGRAMMING
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   BENEDIKTSSON O, 2004, 13 INT C INF SYST DE
   Brusoni S, 2001, ADMIN SCI QUART, V46, P597, DOI 10.2307/3094825
   Carayannis E, 2005, TECHNOVATION, V25, P831, DOI 10.1016/j.technovation.2004.02.012
   Chesbrough H, 2006, R&D MANAGE, V36, P229, DOI 10.1111/j.1467-9310.2006.00428.x
   Chesbrough H., 2003, OPEN INNOVATION, DOI [10.1016/j.jengtecman.2004.05.003, DOI 10.1016/J.JENGTECMAN.2004.05.003]
   Chesbrough H., 2006, OPEN INNOVATION RES
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   COHEN WM, 1990, ADMIN SCI QUART, V35, P128, DOI 10.2307/2393553
   Conboy K., 2010, Agile Software Development: Current Research and Future Directions
   CONBOY K, 2010, EUROPEAN J INFORM SY
   Conboy K, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767753
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   COUGER JD, 1990, MANAGE DECIS ECON, V11, P281, DOI 10.1002/mde.4090110503
   CRISPIN L, 2003, TESTING EXTREME PROG
   De Wit J., 2007, Journal of Business Chemistry, V4, P11
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   ELAM JJ, 1987, INFORM MANAGE, V13, P215, DOI 10.1016/0378-7206(87)90045-0
   Elbanna A, 2008, INT FED INFO PROC, V287, P423
   Fasnacht Daniel., 2009, OPEN INNOVATION FINA, DOI DOI 10.1007/978-3-319-76394-1_4
   Foss N.J., 2002, Journal of International Management, V8, P49
   Fowler M., 2001, Software Development, V9, P28
   Gallivan MJ, 2003, INFORM MANAGE-AMSTER, V40, P443, DOI 10.1016/S0378-7206(02)00039-3
   GASSMANN O, THEORY OPEN INNOVATI
   Hansen MT, 2004, MIT SLOAN MANAGE REV, V46, P22
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Lagerström K, 2003, J WORLD BUS, V38, P84, DOI 10.1016/S1090-9516(03)00003-8
   Lane PJ, 2001, STRATEGIC MANAGE J, V22, P1139, DOI 10.1002/smj.206
   Laursen K, 2006, STRATEGIC MANAGE J, V27, P131, DOI 10.1002/smj.507
   Lindstrom L, 2004, INFORM SYST MANAGE, V21, P41, DOI 10.1201/1078/44432.21.3.20040601/82476.7
   LOBERT B, 1994, IEEE P ANN HAW INT C
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Nonaka I., 2003, The knowledge-creating company: How Japanese companies create the dynamics of innovation
   Patel P., 1994, STI REV, V14
   PRAHALAD CK, 1990, HARVARD BUS REV, V68, P79
   Prencipe A, 1997, RES POLICY, V25, P1261, DOI 10.1016/S0048-7333(96)00900-6
   RIGGS W, 1994, RES POLICY, V23, P459, DOI 10.1016/0048-7333(94)90008-6
   SAMPLER J, 1991, P 24 ANN HAW INT C S
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   SLAUGHTER S, 1993, RES POLICY, V22, P81, DOI 10.1016/0048-7333(93)90034-F
   Sternberg RJ, 1997, CALIF MANAGE REV, V40, P8, DOI 10.2307/41165919
   TAPSCOTT D, 2005, REALISING POWER INNO
   TEECE DJ, 1989, MANAGE DECIS ECON, P35
   Tidd J., 2011, Managing innovation: Integrating technological, market and organizational change, V4th
   Tsai WP, 1998, ACAD MANAGE J, V41, P464, DOI 10.5465/257085
   VANHAVERSBEKE W, 2008, OPEN INNOVATION RES
   Vidgen R, 2009, INFORM SYST RES, V20, P355, DOI 10.1287/isre.1090.0237
   von Hippel E, 2003, ORGAN SCI, V14, P209, DOI 10.1287/orsc.14.2.209.14992
   WANG X, 2009, EUR C INF SYST ECIS
   Wang X, 2007, ADV INTEL SYS RES, DOI 10.2991/iske.2007.208
   West J, 2006, R&D MANAGE, V36, P319, DOI 10.1111/j.1467-9310.2006.00436.x
NR 69
TC 49
Z9 55
U1 2
U2 51
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2011
VL 53
IS 5
SI SI
BP 535
EP 542
DI 10.1016/j.infsof.2010.10.007
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 742DI
UT WOS:000288919900010
DA 2024-07-18
ER

PT J
AU Azar, D
   Vybihal, J
AF Azar, D.
   Vybihal, J.
TI An ant colony optimization algorithm to improve software quality
   prediction models: Case of class stability
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software quality; Metric; Search-based software engineering; Ant colony
   optimization
ID PROJECT-MANAGEMENT; COST
AB Context: Assessing software quality at the early stages of the design and development process is very difficult since most of the software quality characteristics are not directly measurable. Nonetheless, they can be derived from other measurable attributes. For this purpose, software quality prediction models have been extensively used. However, building accurate prediction models is hard due to the lack of data in the domain of software engineering. As a result, the prediction models built on one data set show a significant deterioration of their accuracy when they are used to classify new, unseen data.
   Objective: The objective of this paper is to present an approach that optimizes the accuracy of software quality predictive models when used to classify new data.
   Method: This paper presents an adaptive approach that takes already built predictive models and adapts them (one at a time) to new data. We use an ant colony optimization algorithm in the adaptation process. The approach is validated on stability of classes in object-oriented software systems and can easily be used for any other software quality characteristic. It can also be easily extended to work with software quality predictive problems involving more than two classification labels.
   Results: Results show that our approach out-performs the machine learning algorithm C4.5 as well as random guessing. It also preserves the expressiveness of the models which provide not only the classification label but also guidelines to attain it.
   Conclusion: Our approach is an adaptive one that can be seen as taking predictive models that have already been built from common domain data and adapting them to context-specific data. This is suitable for the domain of software quality since the data is very scarce and hence predictive models built from one data set is hard to generalize and reuse on new data. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Azar, D.] Lebanese Amer Univ, Dept Comp Sci & Math, Byblos 1H401 2010, Lebanon.
   [Vybihal, J.] McGill Univ, Sch Comp Sci, Montreal, PQ H3A 2A7, Canada.
C3 Lebanese American University; McGill University
RP Azar, D (corresponding author), Lebanese Amer Univ, Dept Comp Sci & Math, Byblos 1H401 2010, Lebanon.
EM danielle.azar@lau.edu.lb
RI Azar, Danielle/AAI-7798-2020
OI Azar, Danielle/0000-0002-6159-3714
FU Lebanese National Council for Scientific Research (CNRS); Research
   Council at the Lebanese American University
FX This work was supported in part by a grant from the Lebanese National
   Council for Scientific Research (CNRS), and from the Research Council at
   the Lebanese American University.
CR Abreu FBE, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P90, DOI 10.1109/METRIC.1996.492446
   Agresti A., 1990, Analysis of categorical data
   Aguilar-Ruiz JS, 2001, INFORM SOFTWARE TECH, V43, P875, DOI 10.1016/S0950-5849(01)00193-8
   Alba E, 2007, INFORM SCIENCES, V177, P2380, DOI 10.1016/j.ins.2006.12.020
   [Anonymous], P 19 INT C SOFTW ENG
   [Anonymous], P 1 INT SOFTW METR S
   Antoniol G, 2004, LECT NOTES COMPUT SC, V3103, P1425
   Arisholm E, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2007.22
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   AZAR D, 2010, J COMPUTATIONAL METH
   AZAR D, 2009, INFORM SOFTWARE TECH
   BARNES GM, 1993, J OBJECT-ORIENT PROG, V6, P27
   Basili VR, 1997, PROC INT CONF SOFTW, P282, DOI 10.1145/253228.253289
   BRIAND LC, 1993, PROC INT CONF SOFTW, P55, DOI 10.1109/ICSE.1993.346056
   BRIAND LC, 2006, IESE 06
   Burgess CJ, 2001, INFORM SOFTWARE TECH, V43, P863, DOI 10.1016/S0950-5849(01)00192-6
   Chang CK, 1998, P INT COMP SOFTW APP, P534, DOI 10.1109/CMPSAC.1998.716715
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   COPPICK JC, 1992, 1992 ACM COMPUTER SCIENCE CONFERENCE, PROCEEDINGS, P317, DOI 10.1145/131214.131254
   DEALMEIDA MA, 1999, INT J SOFTWARE ENG K
   Dolado JJ, 2001, INFORM SOFTWARE TECH, V43, P61, DOI 10.1016/S0950-5849(00)00137-3
   Dorigo M., 1999, Proceedings of the 1999 Congress on Evolutionary Computation-CEC99 (Cat. No. 99TH8406), P1470, DOI 10.1109/CEC.1999.782657
   Dorigo M, 2004, ANT COLONY OPTIMIZATION, pIX
   Fawcett T, 2001, 2001 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P131, DOI 10.1109/ICDM.2001.989510
   GROSSER D, 2005, 17 INT C AUT SOFTW E, P295
   Harman M, 2004, IEEE T SOFTWARE ENG, V30, P3, DOI 10.1109/TSE.2004.1265732
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   HENDERSONSELLER.B, 2007, 1 IEEE INT C NEW TEC
   *ISO IEC, 1991, STANDARDISO9126 ISOI
   Jiang Yue, 2007, 18 IEEE INT S SOFTW
   Khoshgoftaar TM, 2002, IEEE T RELIAB, V51, P455, DOI 10.1109/TR.2002.804488
   Kirsopp Colin., 2002, GECCO 02, P1367
   Kohavi R., 1995, P 14 INT JOINT C ART, P1137
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Mao Y., 1998, IEEE AUT SOFTW ENG C
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Pedrycz W, 2005, J SYST SOFTWARE, V76, P277, DOI 10.1016/j.jss.2004.06.018
   Pressman RogerS., 1988, MAKING SOFTWARE ENG
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   RUMELHART GDE, 1986, NATURE, V323
   SELBY RW, 1988, IEEE T SOFTWARE ENG, V14, P1743, DOI 10.1109/32.9061
   Tsantalis N, 2005, IEEE T SOFTWARE ENG, V31, P601, DOI 10.1109/TSE.2005.83
   VIVANCO R, 2007, P IEEE INT C SOFTW M, P503
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
NR 46
TC 39
Z9 40
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2011
VL 53
IS 4
SI SI
BP 388
EP 393
DI 10.1016/j.infsof.2010.11.013
PG 6
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 739QK
UT WOS:000288732700007
DA 2024-07-18
ER

PT J
AU Kuzniarz, L
   Angelis, L
AF Kuzniarz, Ludwik
   Angelis, Lefteris
TI Empirical extension of a classification framework for addressing
   consistency in model based development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Consistency in model driven development; Consistency classification
   framework; Empirical evaluation and extension
AB Context: Consistency constitutes an important aspect in practical realization of modeling ideas in the process of software development and in the related research which is diverse. A classification framework has been developed, in order to aid the model based software construction by categorizing research problems related to consistency. However, the framework does not include information on the importance of classification elements.
   Objective: The aim was to extend the classification framework with information about the relative importance of the elements constituting the classification. The research question was how to express and obtain this information.
   Method: A survey was conducted on a sample of 24 stakeholders from academia and industry, with different roles, who answered a quantitative questionnaire. Specifically, the respondents prioritized perspectives and issues using an extended hierarchical voting scheme based on the hundred dollar test. The numerical data obtained were first weighted and normalized and then they were analyzed by descriptive statistics and bar charts.
   Results: The detailed analysis of the data revealed the relative importance of consistency perspectives and issues under different views, allowing for the desired extension of the classification framework with empirical information. The most highly valued issues come from the pragmatics perspective. These issues are the most important for tool builders and practitioners from industry, while for the responders from academia theory group some issues from the concepts perspective are equally important.
   Conclusion: The method of using empirical data from a hierarchical cumulative voting scheme for extending existing research classification framework is useful for including information regarding the importance of the classification elements. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Kuzniarz, Ludwik] Blekinge Inst Technol, Sch Comp, Soft Ctr, S-37225 Ronneby, Sweden.
   [Angelis, Lefteris] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
C3 Blekinge Institute Technology; Aristotle University of Thessaloniki
RP Kuzniarz, L (corresponding author), Blekinge Inst Technol, Sch Comp, Soft Ctr, S-37225 Ronneby, Sweden.
EM lku@bth.se; lef@csd.auth.gr
CR [Anonymous], 2005, SOFTWARE EVOLUTION U
   Berander P, 2006, INT J SOFTW ENG KNOW, V16, P819, DOI 10.1142/S0218194006003026
   Berenbach B, 2004, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2004.1317445
   Cruz-Lemus JA, 2009, EMPIR SOFTW ENG, V14, P685, DOI 10.1007/s10664-009-9106-z
   Elaasar M., 2004, OVERVIEW UML CONSIST
   Engels G., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P212
   ENGELS G, 2004, FORMAL METHODS COMPO, P157
   Engels G., 2001, The Unified Modeling Language; Modeling Languages, Concepts, and Tools, P272, DOI DOI 10.1007/3-540-45441-1_21
   ENGELS G, 2001, P 8 EUR SOFTW ENG C, P186
   FERNANDO LFJ, 2009, INFORM SOFTWARE TECH, V51, P1631
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   FRADET P, 1999, LNCS SERIES, P410
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Grundy J, 1998, IEEE T SOFTWARE ENG, V24, P960, DOI 10.1109/32.730545
   HNATKOWSKA B, 2002, P WORKSH CONS PROBL, P16
   Huzar Z, 2005, LECT NOTES COMPUT SC, V3297, P1
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   KUZNIARZ L, 2005, P WORKSH CONS MOD DR, P1
   Lange ChristianF.J., 2007, WORKSHOP QUALITY MOD, P50
   LEFFINGWELL D, 2000, MANAGING SOFTWARE RE
   Schätz B, 2003, ECBS 2003: 10TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P287
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Staron M., 2004, Nordic Journal of Computing, V11, P254
   Staron M, 2006, J SYST SOFTWARE, V79, P727, DOI 10.1016/j.jss.2005.09.014
   TRAPP M, 2006, FORMAL METHODS COMPO
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   MDC F FRAMEWORK DESC
   NORD WORKSH MOD DRIV
NR 28
TC 5
Z9 5
U1 1
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2011
VL 53
IS 3
BP 214
EP 229
DI 10.1016/j.infsof.2010.10.004
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 734PT
UT WOS:000288348500004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Torchiano, M
   Di Penta, M
   Ricca, F
   De Lucia, A
   Lanubile, F
AF Torchiano, Marco
   Di Penta, Massimiliano
   Ricca, Filippo
   De Lucia, Andrea
   Lanubile, Filippo
TI Migration of information systems in the Italian industry: A state of the
   practice survey
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Industrial survey; Migration projects; Migration tools
ID REGRESSION; PROJECT
AB Context: Software migration and in particular migration towards the Web and towards distributed architectures is a challenging and complex activity, and has been particularly relevant in recent years, due to the large number of migration projects the industry had to face off because of the increasing pervasiveness of the Web and of mobile devices.
   Objective: This paper reports a survey aimed at identifying the state-of-the-practice of the Italian industry for what concerns the previous experiences in software migration projects specifically concerning information systems the adopted tools and the emerging needs and problems.
   Method: The study has been carried out among 59 Italian Information Technology companies, and for each company a representative person had to answer an on-line questionnaire concerning migration experiences, pieces of technology involved in migration projects, adopted tools, and problems occurred during the project.
   Results: Indicate that migration especially towards the Web is highly relevant for Italian IT companies, and that companies tend to increasingly adopt free and open source solutions rather than commercial ones. Results also indicate that the adoption of specific tools for migration is still very limited, either because of the lack of skills and knowledge, or due to the lack of mature and adequate options.
   Conclusions: Findings from this survey suggest the need for further technology transfer between academia and industry for the purpose of favoring the adoption of software migration techniques and tools. (c) 2010 Elsevier B.V. All rights reserved.
C1 [Di Penta, Massimiliano] Univ Sannio, RCOST Dipartimento Ingn, I-82100 Benevento, Italy.
   [Torchiano, Marco] Politecn Torino, Dipartimento Automat & Informat, I-10129 Turin, Italy.
   [Ricca, Filippo] Univ Genoa, DISI, I-16146 Genoa, Italy.
   [De Lucia, Andrea] Univ Salerno, Dipartimento Matemat & Informat, I-84084 Fisciano, SA, Italy.
   [Lanubile, Filippo] Univ Bari, Dipartimento Informat, I-70126 Bari, Italy.
C3 University of Sannio; Polytechnic University of Turin; University of
   Genoa; University of Salerno; Universita degli Studi di Bari Aldo Moro
RP Di Penta, M (corresponding author), Univ Sannio, RCOST Dipartimento Ingn, Via Traiano, I-82100 Benevento, Italy.
EM marco.torchiano@polito.it; dipenta@unisannio.it;
   filippo.ricca@disi.unige.it; adelucia@unisa.it; lanubile@di.uniba.it
RI De Lucia, Andrea/AAG-6781-2020; Di Penta, Massimiliano/AAF-9656-2021;
   Lanubile, Filippo/AAF-9132-2020; Ricca, Filippo/ABB-3276-2020
OI Lanubile, Filippo/0000-0003-3373-7589; Di Penta,
   Massimiliano/0000-0002-0340-9747; De Lucia, Andrea/0000-0002-4238-1425;
   Torchiano, Marco/0000-0001-5328-368X
FU MiUR (Ministero dell'Universita e della Ricerca) [PRIN2006-2006098097]
FX This work was supported by the project METAMORPHOS (MEthods and Tools
   for migrAting software systeMs towards web and service Oriented
   aRchitectures: exPerimental evaluation, usability, and tecHnOlogy
   tranSfer), funded by MiUR (Ministero dell'Universita e della Ricerca)
   under Grant No. PRIN2006-2006098097.
CR Agresti A., 2007, INTRO CATEGORICAL DA, V2nd ed
   [Anonymous], 3 INT C OP SOURC SYS
   [Anonymous], 2008, Education at a glance 2008: OECD indicators
   [Anonymous], SIGSOFT SOFTWARE ENG
   [Anonymous], EUR C SOFTW MAINT RE
   [Anonymous], 1 INT S EMP SOFTW EN
   [Anonymous], 1 INT S EMP SOFTW EN
   [Anonymous], INT C SOFTW MAINT 20
   [Anonymous], OPEN SOURCE SOFTWARE
   Antoniol G, 2004, IEEE T SOFTWARE ENG, V30, P43, DOI 10.1109/TSE.2004.1265735
   Aversano L, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P148, DOI 10.1109/CSMR.2001.914979
   Baruch Y, 1999, HUM RELAT, V52, P421, DOI 10.1023/A:1016905407491
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   Ceccato M, 2008, WORK CONF REVERSE EN, P177, DOI 10.1109/WCRE.2008.27
   Ciolkowski M, 2003, IEEE SOFTWARE, V20, P46, DOI 10.1109/MS.2003.1241366
   Colosimo M, 2009, INFORM SOFTWARE TECH, V51, P433, DOI 10.1016/j.infsof.2008.05.012
   De Lucia A, 2008, SOFTWARE PRACT EXPER, V38, P1333, DOI 10.1002/spe.870
   Fisher RA, 1970, STAT METHODS RES WOR, P66, DOI DOI 10.1007/978-1-4612-4380-9_6
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   Harrold MJ, 2001, IEEE T SOFTWARE ENG, V27, P248, DOI 10.1109/32.910860
   *IEEE, 1998, 12191998 IEEE
   Jedlitschka Andreas, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P31
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Kitchenham B., 2002, ACM SIGSOFT Softw. Eng. Notes, V27, P17
   Kitchenham B., 2002, SOFTWARE ENG NOTES, V27, P18
   Kitchenharn B., 2003, Software Engineering Notes, V28, P24, DOI 10.1145/638750.638758
   Li JY, 2009, IEEE SOFTWARE, V26, P80, DOI 10.1109/MS.2009.33
   Linkman S, 1997, INFORM SOFTWARE TECH, V39, P777, DOI 10.1016/S0950-5849(97)00029-3
   Pfleeger S.L., 2001, SIGSOFT Softw. Eng. Notes., V26, P16, DOI [10.1145/505532.505535, DOI 10.1145/505532.505535]
   PREMERLANI WJ, 1994, COMMUN ACM, V37, P42, DOI 10.1145/175290.175293
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Robson C., 2002, Real world research
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Sneed HM, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P189, DOI 10.1109/WCRE.2001.957823
   Torchiano Marco, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops, P35, DOI 10.1109/ASEW.2008.4686319
   White L, 2008, J SOFTW MAINT EVOL-R, V20, P419, DOI 10.1002/smr.371
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 39
TC 18
Z9 18
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2011
VL 53
IS 1
BP 71
EP 86
DI 10.1016/j.infsof.2010.08.002
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 692QV
UT WOS:000285171100007
DA 2024-07-18
ER

PT J
AU Mellado, D
   Fernández-Medina, E
   Piattini, M
AF Mellado, Daniel
   Fernandez-Medina, Eduardo
   Piattini, Mario
TI Security requirements engineering framework for software product lines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Security requirements engineering; Security software engineering;
   Product lines; Requirements engineering; Security requirement; ISO 27001
AB Context: The correct analysis and understanding of security requirements are important because they assist in the discovery of any security or requirement defects or mistakes during the early stages of development. Security requirements engineering is therefore both a central task and a critical success factor in product line development owing to the complexity and extensive nature of software product lines (SPL). However, most of the current SPL practices in requirements engineering do not adequately address security requirements engineering.
   Objective: The aim of this approach is to describe a holistic security requirements engineering framework with which to facilitate the development of secure SPLs and their derived products. It will conform with the most relevant security standards with regard to the management of security requirements, such as ISO/IEC 27001 and ISO/IEC 15408.
   Results: This framework is composed of: a security requirements engineering process for SPL (SREPPLine) driven by security standards; a Security Reference Meta Model to manage the variability of those SPL artefacts related to security requirements; and a tool (SREPPLineTool) which implements the meta-model and supports the process.
   Method: A complete explanation of the framework will be provided. The process will be formally specified with SPEM 2.0 and the repository will be formally specified with an XML grammar. The application of SREPPLine and SREPPLineTool will be illustrated through a description of a simple example as a preliminary validation.
   Conclusion: Although there have been several attempts to fill the gap between requirements engineering and SPL requirements engineering, no systematic approach with which to define security quality requirements and to manage their variability and their related security artefacts in SPL models is, as yet, available. The contribution of this work is that of providing a systematic approach for the management of the security requirements and their variability from the early stages of product line development in order to facilitate the conformance of SPL products with the most relevant security standards. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Fernandez-Medina, Eduardo; Piattini, Mario] Univ Castilla La Mancha, Alarcos Res Grp, Informat Syst & Technol Inst, Informat Syst & Technol Dept,ESI, E-13071 Ciudad Real, Spain.
   [Mellado, Daniel] Spanish Tax Agcy, Large Taxpayers Dept, IT Audit Unit, Madrid 28046, Spain.
C3 Universidad de Castilla-La Mancha
RP Fernández-Medina, E (corresponding author), Univ Castilla La Mancha, Alarcos Res Grp, Informat Syst & Technol Inst, Informat Syst & Technol Dept,ESI, Paseo Univ 4, E-13071 Ciudad Real, Spain.
EM damefe@esdebian.org; Eduardo.FdezMedina@uclm.es; Mario.Piattini@uclm.es
RI Rosado, David G./L-8221-2014; Piattini, Mario/F-6271-2013;
   Fernandez-Medina, Eduardo/D-4648-2011
OI Rosado, David G./0000-0003-4613-5501; Piattini,
   Mario/0000-0002-7212-8279; Fernandez-Medina, Eduardo/0000-0003-2553-9320
FU Ministry of Science and Innovation (Spain) [PET2008-0136,
   TIN2009-13718-C02-01]; FEDER; Castilla - La Mancha Regional Government
   [PII2109-0150-3135, PAC08-0157-0668]; Ministry of Science and Innovation
   (Spain- CDTI) [IDI-20090557]
FX This research is part of the BUSINESS (PET2008-0136) Project of the
   Ministry of Science and Innovation (Spain), PEGASO/MAGO
   (TIN2009-13718-C02-01) Project of the Ministry of Science and Innovation
   (Spain) and the FEDER. Moreover, it is part of the SIST-EMAS
   (PII2109-0150-3135) and QUASIMODO (PAC08-0157-0668) Projects of the
   Castilla - La Mancha Regional Government and the FEDER as well as it is
   part of the MEDUSAS (IDI-20090557) Project of the Ministry of Science
   and Innovation (Spain- CDTI).
CR ABUNIMEH S, 2009, SEKE, P542
   Alberts ChristopherJ., 2001, OCTAVE METHOD IMPLEM
   [Anonymous], LNCS
   [Anonymous], 2002, SEI SERIES SOFTWARE
   [Anonymous], 2005, Secure Systems Development with UML
   ARCINIEGAS JL, 2006, SOFTWARE PRODUCT LIN
   Aversano L, 2002, J SYST SOFTWARE, V63, P29, DOI 10.1016/S0164-1212(01)00128-5
   Baresi L, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276936
   BAYER J, 2005, SOFTWARE PRODUCT LIN, P195
   Berander P, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P69, DOI 10.1007/3-540-28244-0_4
   Best B, 2007, PROC INT CONF SOFTW, P581
   BIRK A, 2007, INT C REQ ENG REFSQ, P300
   BOSH J, 2000, DESIGN USE SOFTWARE
   BUHNE S, 2005, SOFTWARE PRODUCT LIN, P161
   *CERT CC, 2009, CERT CC STAT 1995 20
   Choo K.K. R., 2007, RES PUBLIC POLICY SE
   Compagna L, 2009, ARTIF INTELL LAW, V17, P1, DOI 10.1007/s10506-008-9067-3
   FAEGRI TE, 2006, SOFTWARE PRODUCT LIN
   Firesmith Donald., 2003, J OBJECT TECHNOL, V2, P53
   Firesmith DG, 2007, PROC INT CONF SOFTW, P169, DOI 10.1109/ICSECOMPANION.2007.35
   Giorgini P, 2007, INTEGRATING SECURITY AND SOFTWARE ENGINEERING: ADVANCES AND FUTURE VISIONS, P160
   Grünbacher P, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P143, DOI 10.1007/3-540-28244-0_7
   Haley CB, 2008, IEEE T SOFTWARE ENG, V34, P133, DOI 10.1109/TSE.2007.70754
   *ISO IEC, 2004, 15446 ISOIEC
   *ISO IEC, 2005, 154082005 ISOIEC
   *ISO IEC, 2004, 13335 ISOIEC
   *ISO IEC, 2006, 27001 ISOIEC
   Juerjens J, 2008, LECT NOTES COMPUT SC, V4961, P292, DOI 10.1007/978-3-540-78743-3_21
   Jurjens Jan., 2002, LECT NOTES COMPUTER, V2460, P412, DOI DOI 10.1007/3-540-45800-X_
   Kang K. C., 1990, Technical Report
   KULOOR C, 2003, P 10 IEEE INT C WORK
   Lasheras J., 2008, 6 INT WORKSH SEC INF
   Linstone HA, 1975, The Delphi method
   LIU L, 2003, 11 IEEE INT REQ ENG
   MASSACCI F, 2005, COMPUTERS STANDARDS, P445
   Mead N.R., 2005, SECURITY QUALITY REQ, V30
   Mead NR, 2006, CONF SOFTW ENG EDUC, P149, DOI 10.1109/CSEET.2006.30
   MELLADO D, 2010, COMPUTERS STANDARDS
   MELLADO D, 2008, S REQ ENG INF SEC SR, P1413
   MELLADO D, 2009, 4 INT C AV REL SEC A
   Mellado D, 2008, COMPUT STAND INTER, V30, P361, DOI 10.1016/j.csi.2008.03.004
   Mellado D, 2007, COMPUT STAND INTER, V29, P244, DOI 10.1016/j.csi.2006.04.002
   Mellado D, 2006, LECT NOTES COMPUT SC, V3982, P1044, DOI 10.1007/11751595_109
   Mellado D, 2010, COMPUT STAND INTER, V32, P153, DOI 10.1016/j.csi.2010.01.006
   Niemelä E, 2007, INFORM SOFTWARE TECH, V49, P1107, DOI 10.1016/j.infsof.2006.11.003
   OECD (Organisation for Economic Cooperation and Development), 2005, DSTIICCPREG20051FINA
   *OMG, 2004, REUS ASS SPEC RAS
   *OMG, 2008, SOFTW SYST PROC ENG
   Opdahl AL, 2009, INFORM SOFTWARE TECH, V51, P916, DOI 10.1016/j.infsof.2008.05.013
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Schmid K, 2004, SCI COMPUT PROGRAM, V53, P259, DOI 10.1016/j.scico.2003.04.002
   SCHMID K, 2005, REQUIREMENTS MANAGEM
   Schneier B, 1999, DR DOBBS J, V24, P21
   *SEI, 2007, SAFE V1 2 SAF EXT CM
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   SINDRE G, 2003, P 9 INT WORKSH REQ E
   SINNEMA M, 2004, P 3 SOFTW PROD LIN C
   TOVAL A, 2002, REQUIR ENG, P205
   VONLAMSWEERDE A, 2004, 26 INT C SOFTW ENG I, P148
   Yu E, 2007, INTEGRATING SECURITY AND SOFTWARE ENGINEERING: ADVANCES AND FUTURE VISIONS, P70
NR 60
TC 24
Z9 26
U1 1
U2 24
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2010
VL 52
IS 10
BP 1094
EP 1117
DI 10.1016/j.infsof.2010.05.007
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 638LF
UT WOS:000280895700007
DA 2024-07-18
ER

PT J
AU Cerpa, N
   Bardeen, M
   Kitchenham, B
   Verner, J
AF Cerpa, Narciso
   Bardeen, Matthew
   Kitchenham, Barbara
   Verner, June
TI Evaluating logistic regression models to estimate software project
   outcomes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Project outcome; Tailored cut-off; ROC analysis; Single-company data;
   Cross-company data; Classifier evaluation
ID SUCCESS; PRACTITIONERS; PERCEPTIONS; PREDICTION; ACCEPTANCE; THINK; EASE
AB Context: Software has been developed since the 1960s but the success rate of software development projects is still low. During the development of software, the probability of success is affected by various practices or aspects. To date, it is not clear which of these aspects are more important in influencing project outcome.
   Objective: In this research, we identify aspects which could influence project success, build prediction models based on the aspects using data collected from multiple companies, and then test their performance on data from a single organization.
   Method: A survey-based empirical investigation was used to examine variables and factors that contribute to project outcome. Variables that were highly correlated to project success were selected and the set of variables was reduced to three factors by using principal components analysis. A logistic regression model was built for both the set of variables and the set of factors, using heterogeneous data collected from two different countries and a variety of organizations. We tested these models by using a homogeneous hold-out dataset from one organization. We used the receiver operating characteristic (ROC) analysis to compare the performance of the variable and factor-based models when applied to the homogeneous dataset.
   Results: We found that using raw variables or factors in the logistic regression models did not make any significant difference in predictive capability. The prediction accuracy of these models is more balanced when the cut-off is set to the ratio of success to failures in the datasets used to build the models. We found that the raw variable and factor-based models predict significantly better than random chance.
   Conclusion: We conclude that an organization wishing to estimate whether a project will succeed or fail may use a model created from heterogeneous data derived from multiple organizations. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Cerpa, Narciso; Bardeen, Matthew] Univ Talca, Fac Ingn, Curico, Chile.
   [Kitchenham, Barbara] Univ Keele, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
   [Verner, June] Univ New S Wales, Sydney, NSW, Australia.
C3 Universidad de Talca; Keele University; University of New South Wales
   Sydney
RP Cerpa, N (corresponding author), Univ Talca, Fac Ingn, Curico, Chile.
EM ncerpa@utalca.cl; mbardeen@utalca.cl; b.a.kitchenham@cs.keele.ac.uk;
   june.verner@gmail.com
RI Kitchenham, Barbara/AAL-4311-2020; Cerpa, Narciso/A-7823-2010
OI Kitchenham, Barbara/0000-0002-6134-8460; Cerpa,
   Narciso/0000-0003-4258-8626
FU FONDECYT [1030785]
FX This research was supported by the Chilean Grant FONDECYT 1030785.
CR Abe S., 2006, 28th International Conference on Software Engineering Proceedings, P600, DOI 10.1145/1134285.1134371
   [Anonymous], STAT ANAL INTERDISCI
   [Anonymous], 1975, MYTHICAL MAN MONTH E
   Baccarini David., 1999, Project Management Journal, V30, P25, DOI DOI 10.1177/875697289903000405
   Bennatan E., 2000, TIME BUDGET
   Boehm BW., 1981, Software Engineering Economics
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   Brito JC, 1999, ECOGRAPHY, V22, P251
   Cerpa N, 2009, COMMUN ACM, V52, P130, DOI 10.1145/1610252.1610286
   Charette RN, 2005, IEEE SPECTRUM, V42, P42, DOI 10.1109/MSPEC.2005.1502528
   Cheng M., 2008, P 25 INT S AUT ROB C
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   DELONG ER, 1988, BIOMETRICS, V44, P837, DOI 10.2307/2531595
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Garrity EJ, 1998, S INF TECHN MANAG, P1
   Gefen D, 1998, DATA BASE ADV INF SY, V29, P35
   Gefen D., 2000, Data Base for Advances in Information Systems, V31, P65
   Gefen D., 2000, J ASSOC INF SYST, V1, DOI [10.17705/1jais.00008, DOI 10.17705/1JAIS.00008]
   Glass R. L., 1997, SOFTWARE RUNAWAYS MO
   GLASS RL, 1999, COMMUNICATIONS ACM, V42
   Hagerty N., 2000, P SIGCPR C EV IL, P192
   Hoffman T., 1999, Computerworld, V33, P24
   Ishman M., 1998, INFORM SYSTEM SUCCES
   JONES C, 1995, COMPUTER, V28, P86, DOI 10.1109/2.386991
   Jorgensen M, 2006, INFORM SOFTWARE TECH, V48, P297, DOI 10.1016/j.infsof.2005.07.002
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Khoshgoftaar TM, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P190, DOI 10.1109/METRIC.2001.915528
   Kitchenham B. A., 1984, ICL Technical Journal, V4, P73
   Lehmann ErichL., 1998, NONPARAMETRICS STAT
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Linberg KR, 1999, J SYST SOFTWARE, V49, P177, DOI 10.1016/S0164-1212(99)00094-1
   McConnell S., 1996, Rapid Development: Taming Wild Software Schedules
   Molokken-Ostvold K, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P208, DOI 10.1109/METRIC.2004.1357904
   Paulk M., 1993, CAPABILITY MATURITY
   PEREIRA J, 2004, 1 EXP SOFTW ENG LAT
   Pereira J, 2004, WORKSH ING SOFTW AR
   Pereira J, 2008, J SYST SOFTWARE, V81, P897, DOI 10.1016/j.jss.2007.07.032
   Pinto J.K., 1988, PROJ MANAG J, V19, P67
   PINTO JK, 1990, IEEE T ENG MANAGEMEN, V34
   Pressman R, 1998, IEEE SOFTWARE, V15, P50, DOI 10.1109/52.646881
   Procaccino J.D., 2002, INT J COMPUTERS INTE, V10
   Procaccino J. D, 2001, P 12 EUR SOFTW CONTR, P107
   Procaccino JD, 2005, J SYST SOFTWARE, V78, P194, DOI 10.1016/j.jss.2004.12.011
   Procaccino JD, 2002, INFORM SOFTWARE TECH, V44, P53, DOI 10.1016/S0950-5849(01)00217-8
   Schoonhoven L, 2005, J ADV NURS, V49, P16, DOI 10.1111/j.1365-2648.2004.03259.x
   Smite D, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P103
   SONG Q, 2007, INT J BUSINESS INTEL, V2, P261
   The Standish Group, 1994, CHAOS
   TOBIAS S, 1969, MULTIVAR BEHAV RES M, V4, P375, DOI 10.1207/s15327906mbr0403_8
   Verner J., 2006, Proceedings of the 2006 ACM/IEEE International Symposium on International Symposium on Empirical Software Engineering - ISESE '06, P154, DOI DOI 10.1145/1159733.1159758
   Verner JM, 2007, INFORM SOFTWARE TECH, V49, P181, DOI 10.1016/j.infsof.2006.05.001
   Verner J. M., 2003, P ICSSEA 2003, V4, P1
   Verner JM, 2005, 2005 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P70, DOI 10.1109/ASWEC.2005.14
   Verner JM, 2005, IEEE SOFTWARE, V22, P86, DOI 10.1109/MS.2005.12
   Verner JM, 1999, INFORM SOFTWARE TECH, V41, P1021, DOI 10.1016/S0950-5849(99)00077-4
   Verner J, 2005, AUSTRALAS J INF SYST, V13, P225
   Verner J, 2007, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON RESEARCH CHALLENGES IN INFORMATION SCIENCE: RCIS 2008, P71
   WANG Y, 2007, THESIS U CALIFORNIA
   Wateridge J., 1998, INT J PROJECT MANAGE, V16
   WATERIDGE J, 1995, INT J PROJECT MANAGE, V13
   Weber R, 2003, LECT NOTES ARTIF INT, V2689, P595
   Weber R., 2004, P 17 ANN C INT FLOR, P207
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   WOHLIN C, 2005, P INT C PROD FOC SOF
   WOHLIN C, 2000, J SOFTWARE QUALI AUG
   Woodroof JB, 1998, S INF TECHN MANAG, P122
NR 67
TC 31
Z9 36
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2010
VL 52
IS 9
BP 934
EP 944
DI 10.1016/j.infsof.2010.03.011
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 629QL
UT WOS:000280214700005
DA 2024-07-18
ER

PT J
AU Her, JS
   Yuan, H
   Kim, SD
AF Her, Jin Sun
   Yuan, Hao
   Kim, Soo Dong
TI Traceability-centric model-driven object-oriented engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Traceability; Object-orientation; Model-driven; Transformation
AB Context: Object-oriented (OO) development method is a popular paradigm in developing target systems. However, the current practices of OO analysis and design (OOAD) and implementation largely rely on human developers' experience and expertise, making it possible less efficient and more error-prone. Hence, there is room for improving the development efficiency while preserving high quality of programs.
   Objective: Model-driven development (MDD) is a promising approach to developing programs by machine-assisted model transformation, saving human efforts and reducing the possibility of introducing program faults. Hence, it is appealing to apply key disciplines of MDD in developing OO programs.
   Method: In this paper, we propose a comprehensive framework for applying MOD on OO program engineering in a rigorous and formal fashion. The framework consists of: (1) a hybrid engineering model of human and machine, (2) meta-models of OOAD artifacts, (3) traceability map with trace links, and (4) transformation rules.
   Results: We identified five platform independent models and two platform specific models, and defined formal representations for them. We identified 16 traceability links and accordingly 16 transformation rules among the eight artifacts. Through the case study, we showed that our work is feasible and applicable. We assessed our work and concluded that our work is sound, complete, and extendable. Our work established the foundation toward automatic generation of OO programs based on the traceability framework.
   Conclusion: It is concluded that it is essential to identify the OOAD artifacts, traceability links, and transformation rules for automatic generation of OO programs. It is also important to understand the human involvement nature in MDD and to explicitly treat them in the model transformation. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Her, Jin Sun; Kim, Soo Dong] Soongsil Univ, Dept Comp Sci, Seoul, South Korea.
   [Yuan, Hao] China Televis Informat Technol Beijing Co LTD, Beijing, Peoples R China.
C3 Soongsil University
RP Kim, SD (corresponding author), Soongsil Univ, Dept Comp Sci, Seoul, South Korea.
EM annie8js@gmail.com; yuanh66@gmail.com; sdkim777@gmail.com
FU Korea government (MEST) [2009-0076392]
FX This work was supported by the National Research Foundation of Korea
   (NRF) grant funded by the Korea government (MEST) (No. 2009-0076392).
CR AIZENBUDRESHEF N, 2006, IBM SYSTEMS J IBM, V45, P9
   Ambler S.W., 2005, ELEMENTS UML 2 0 STY
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 2005, ADDISON WESLEY OBJEC
   [Anonymous], 2004, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development
   [Anonymous], 2001, APPL USE CASE DRIVEN
   Arlow Jim., 2005, UML 2 UNIFIED PROCES
   BALMELI L, 2006, IBM SYSTEMS J, V45
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Blaha M. R., 2004, OBJECT ORIENTED MODE
   Ceri S, 2002, IEEE INTERNET COMPUT, V6, P20, DOI 10.1109/MIC.2002.1020321
   Clements P., 2003, SEI S SOFTW
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Coleman Derek., 1994, OBJECT ORIENTED DEV
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   CZARNECKI K, 2006, IBM SYSTEMS J IBM, V45
   Distante D, 2007, LECT NOTES COMPUT SC, V4607, P457
   Efftinge S., OpenArchitectureWare 4.1: Check
   FENG Y, 2008, P 30 ANN INT COMP SO
   Fowler M., 2003, A brief guide to the standard object modeling language
   Frankel D.S., 2003, Model Driven Architecture: Applying MDA to Enterprise Computing
   HAI H, 2004, IBM J RES DEV IBM, V48
   Herold S, 2008, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P438, DOI 10.1109/ITNG.2008.207
   *IEEE AWG, 2000, P1471 IEEE AWG
   IEEE Computer Society, 1998, 8301998 IEEE COMP SO
   *IEEE EIA, 1998, 122070 IEEEEIA
   ISO/IEC, 1995, ISO/IEC 12207
   Kim SD, 2002, COMMUN ACM, V45, P83
   LETELIER P, 2002, P 1 INT WORKSH TRAC, P30
   Mäder P, 2007, LECT NOTES COMPUT SC, V4880, P53
   Marcus A., 2005, Proceedings of the 3rd International Workshop on Traceability in Emerging Forms of Software Engineering. TEFSE'05, P56, DOI [DOI 10.1145/1107656.1107669, 10.1145/1107656.1107669.1107669, DOI 10.1145/1107656.1107669.1107669]
   MUSSET J, 2008, ACCELEO USER TUTORIA
   O'docherty M., 2005, Object-Oriented Analysis Design
   OMG, 2003, MDA GUID VERS 1 0 1
   *OMG, 2007, UN MOD LANG SUP VERS
   *OMG, 2001, MOD DRIV ARCH MDA SP
   Pinheiro FAC, 1996, IEEE SOFTWARE, V13, P52, DOI 10.1109/52.506462
   Pressman Roger., 2004, SOFTWARE ENG PRACTIT
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   RAMESH B, 2002, P 4 WORKSH PROD FAM, P353
   REEKIE J, 2006, SOFTWARE ARCHITECTUR
   Rozanski N., 2005, SOFTWARE SYSTEMS ARC
   Rumbaugh James., 1990, OBJECT ORIENTED MODE, V1st
   SENGUPTA S, 2007, P 31 ANN INT COMP SO
   *STAND COORD COMM, 1990, 610121990 IEEE STAND
   TABARES MS, 2007, P 29 INT C SOFTW ENG
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   TRUJILLO S, 2007, P 29 INT C SOFTW ENG
   Vale W, 2008, INT J NEUROPSYCHOPH, V11, P16
   Windle D. R., 2002, SOFTWARE REQUIREMENT
   Zinnikus I, 2006, LECT NOTES COMPUT SC, V4196, P110
   QIQU TUTORIAL
   2008, TRACEABILITY WIKIPED
NR 53
TC 3
Z9 3
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2010
VL 52
IS 8
BP 845
EP 870
DI 10.1016/j.infsof.2010.03.012
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 614DI
UT WOS:000279035100005
DA 2024-07-18
ER

PT J
AU Kitchenham, B
   Pretorius, R
   Budgen, D
   Brereton, OP
   Turner, M
   Niazi, M
   Linkman, S
AF Kitchenham, Barbara
   Pretorius, Rialette
   Budgen, David
   Brereton, O. Pearl
   Turner, Mark
   Niazi, Mahmood
   Linkman, Stephen
TI Systematic literature reviews in software engineering - A tertiary study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic literature review; Mapping study; Software engineering;
   Tertiary study
AB Context: In a previous study, we reported on a systematic literature review (SLR), based on a manual search of 13 journals and conferences undertaken in the period 1st January 2004 to 30th June 2007.
   Objective: The aim of this on-going research is to provide an annotated catalogue of SLRs available to software engineering researchers and practitioners. This study updates our previous study using a broad automated search.
   Method: We performed a broad automated search to find SLRs published in the time period 1st January 2004 to 30th June 2008. We contrast the number, quality and source of these SLRs with SLRs found in the original study.
   Results: Our broad search found an additional 35 SLRs corresponding to 33 unique studies. Of these papers, 17 appeared relevant to the undergraduate educational curriculum and 12 appeared of possible interest to practitioners. The number of SLRs being published is increasing. The quality of papers in conferences and workshops has improved as more researchers use SLR guidelines.
   Conclusion: SLRs appear to have gone past the stage of being used solely by innovators but cannot yet be considered a main stream software engineering research methodology. They are addressing a wide range of topics but still have limitations, such as often failing to assess primary study quality. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Kitchenham, Barbara; Brereton, O. Pearl; Turner, Mark; Niazi, Mahmood; Linkman, Stephen] Keele Univ, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
   [Pretorius, Rialette; Budgen, David] Univ Durham, Sch Engn & Comp Sci, Durham DH1 3LE, England.
C3 Keele University; Durham University
RP Kitchenham, B (corresponding author), Keele Univ, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
EM b.a.kitchenham@cs.keele.ac.uk
RI Kitchenham, Barbara/AAL-4311-2020; Niazi, Mahmood/C-8873-2015
OI Kitchenham, Barbara/0000-0002-6134-8460; Budgen,
   David/0000-0001-7143-0241; Niazi, Mahmood/0000-0001-7318-7644
FU UK Engineering and Physical Sciences Research Council [EPIC/E046983/1];
   EPSRC [EP/E046983/1, EP/E049184/1] Funding Source: UKRI
FX This study was funded by the UK Engineering and Physical Sciences
   Research Council project EPIC/E046983/1.
CR [Abran A. IEEE Computer Society IEEE Computer Society], 2004, GUIDE SOFTWARE ENG B
   [Anonymous], CMUISRI06101 SOFTW E
   [Anonymous], 2008, 3 INT WORKSH SHAR RE
   [Anonymous], INT S EMP SOFTW ENG
   Bailey John, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P482
   BARCELOS RF, 2006, IB WORKSH REQ ENG SO
   Ciolkowski M, 2009, INT SYMP EMP SOFTWAR, P133, DOI 10.1109/ESEM.2009.5316026
   *CTR REV DISS, 2007, WHAT CRIT INCL REV D
   Davis A, 2007, LECT NOTES COMPUT SC, V4542, P129
   Davis A, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P179
   Dong F, 2008, LECT NOTES COMPUT SC, V5007, P63, DOI 10.1007/978-3-540-79588-9_7
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Feller J, 2006, INT FED INFO PROC, V208, P261
   Fink A., 2005, CONDUCTING RES LIT R
   Freire AP, 2007, SIGDOC'07: PROCEEDINGS OF THE 25TH ACM INTERNATIONAL CONFERENCE ON DESIGN OF COMMUNICATION, P162
   Galin D, 2006, IEEE SOFTWARE, V23, P81, DOI 10.1109/MS.2006.149
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Grimstad S, 2006, INFORM SOFTWARE TECH, V48, P302, DOI 10.1016/j.infsof.2005.04.004
   GRIMSTAD S, 2005, 11 IEEE INT SOFTW ME, P3
   Hannay JE, 2008, IEEE T SOFTWARE ENG, V34, P242, DOI 10.1109/TSE.2008.13
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Hanssen GK, 2007, LECT NOTES COMPUT SC, V4764, P7
   Harjumaa L, 2008, LECT NOTES COMPUT SC, V5089, P230, DOI 10.1007/978-3-540-69566-0_20
   Hasnain E, 2008, LECT NOTES BUS INF P, V9, P204
   Höfer A, 2007, LECT NOTES COMPUT SC, V4336, P10
   HOSBOND JH, 2005, P IFIP 8 2 ANN C
   HOST M, 2005, P 27 INT C SOFTW ENG
   *IEEE COMP SOC ASS, 2004, SOFTW ENG 2004 CURR
   Jefferies C, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P258
   Jorgensen M, 2005, IEEE T SOFTWARE ENG, V31, P942, DOI 10.1109/TSE.2005.128
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   JORGENSEN M, 2005, 11 IEEE INT SOFTW ME, P24
   Jorgensen M, 2007, INT J FORECASTING, V23, P449, DOI 10.1016/j.ijforecast.2007.05.008
   Juristo N, 2006, IEEE SOFTWARE, V23, P72, DOI 10.1109/MS.2006.166
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kamata MI, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P89, DOI 10.1109/ASPEC.2007.78
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Khalid K.S., 2003, SYSTEMATIC REV SUPPO
   Kitchenham, 2005, ENGINEERING, V12, P1, DOI [DOI 10.1145/2372233.2372235, 10.1145/2372233.2372235]
   KITCHENHAM B, EMPIRICAL SOFT UNPUB
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   KITCHENHAM B, 2009, J CEPIS COUNCIL EURO
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2009, INT SYMP EMP SOFTWAR, P337, DOI 10.1109/esem.2009.5314238
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Liebchen G. A., 2008, P 4 INT WORKSH PRED, P39, DOI [10.1145/1370788.1370799, DOI 10.1145/1370788.1370799]
   MACDONELL S, 2007, P EMP SOFTW ENG MEAS
   MAIR M, 2005, PROMISE 05 WORKSH
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Mohagheghi P, 2007, EMPIR SOFTW ENG, V12, P471, DOI 10.1007/s10664-007-9040-x
   MOLOKKENOSTVOLD KJ, 2004, P SOFTW METR S
   NETO AD, 2008, IEEE SOFTWARE, V25, P242
   Petersson H, 2004, J SYST SOFTWARE, V72, P249, DOI 10.1016/S0164-1212(03)00090-6
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Bellini CGP, 2008, INT J SOFTW ENG KNOW, V18, P37, DOI 10.1142/S021819400800357X
   Renger M, 2008, LECT NOTES BUS INF P, V10, P61
   Rogers E. M., 1995, Diffusion of Innovation Theory, P25, DOI https://doi.org/10.1007/978-3-642-79868-92
   Runeson P, 2006, IEEE SOFTWARE, V23, P82, DOI 10.1109/MS.2006.89
   SEGAL J, 2005, REBSE 05
   SHEPPERD M, 2007, FOSE 07
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Staples M, 2008, INFORM SOFTWARE TECH, V50, P605, DOI 10.1016/j.infsof.2007.07.003
   Torchiano M, 2004, IEEE SOFTWARE, V21, P88, DOI 10.1109/MS.2004.1270770
   TRIFONOVA A, 2007, P 16 INT C INF SYST
   Wicks MN, 2007, J SYST SOFTWARE, V80, P1569, DOI 10.1016/j.jss.2007.03.089
   YALAHO A, 2006, 10 INT ENT DISTR OBJ
   Zhang H, 2008, LECT NOTES COMPUT SC, V5007, P345, DOI 10.1007/978-3-540-79588-9_30
NR 70
TC 553
Z9 586
U1 10
U2 73
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2010
VL 52
IS 8
BP 792
EP 805
DI 10.1016/j.infsof.2010.03.006
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 614DI
UT WOS:000279035100002
DA 2024-07-18
ER

PT J
AU Vanoverberghe, D
   Piessens, F
AF Vanoverberghe, Dries
   Piessens, Frank
TI Security enforcement aware software development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
CT 29th International Conference on Software Engineering (ICSE 2007)
CY MAY 20-26, 2007
CL Minneapolis, MN
SP IEEE Comp Soc TCSE, ACM SIGSOFT
DE Security automata; Run-time enforcement; Inline reference monitor;
   Static verification
AB In the domain of security policy enforcement, the concerns of application developers are almost completely ignored. As a consequence, it is hard to develop useful and reliable applications that will function properly under a variety of policies. This paper addresses this issue for application security policies specified as security automata, and enforced through run-time monitoring. Our solution consists of three elements: the definition of an abstract interface to the policy that is being enforced, a sound construct to query that policy, and a static verification algorithm that guarantees absence of security policy violations in critical blocks of code. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Vanoverberghe, Dries; Piessens, Frank] Katholieke Univ Leuven, Dept Comp Sci, B-3001 Heverlee, Belgium.
C3 KU Leuven
RP Vanoverberghe, D (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Celestijnenlaan 200A, B-3001 Heverlee, Belgium.
EM Dries.Vanoverberghe@cs.kuleuven.be; Frank.Piessens@cs.kuleuven.be
RI Piessens, Frank/B-1695-2014
CR AKTUG I, 2007, ELECT NOTES THEORETI
   ASPINALL D, 2007, ELECT NOTES THEORETI
   Barnett Mike., SPEC PROGRAMMING SYS
   BAUER L, 2005, PLDI 05
   CHANDER A, 2005, ESOP
   CHEON Y, 2005, SERP 05
   DEZANICIANCAGLI.D, 2006, LNCS, V4067
   ERLINGSSON U, 2000, WNSP
   ERLINGSSON U, 2000, IEEE S SEC PRIV
   ERLINGSSON U, 2004, THESIS CORNELL U
   EVANS D, 1999, IEEE S SEC PRIV
   Gong L., JAVA 2 PLATFORM SECU
   HAMLEN KW, 2006, PLAS 06
   KOVED L, 2002, OOPSLA 02
   NECULA GC, 1998, P 1998 ACM SIGPLAN C
   Necula George C., 1997, Proof-carrying Code (POPL '97)
   *S3MS, 2007, SEC SOFTW SERV MOB S
   Schneider H P, 2000, Climacteric, V3, P50, DOI 10.3109/13697130009167599
   Sekar R., 2003, SOSP '03
   WALKER D., 2000, POPL 00
NR 20
TC 4
Z9 5
U1 1
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2009
VL 51
IS 7
BP 1172
EP 1185
DI 10.1016/j.infsof.2008.01.009
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 456JD
UT WOS:000266840500008
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Perini, A
   Ricca, F
   Susi, A
AF Perini, Anna
   Ricca, Filippo
   Susi, Angelo
TI Tool-supported requirements prioritization: Comparing the <i>AHP</i> and
   <i>CBRank</i> methods
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Controlled experiment; Requirements prioritization; AHP; Case-based
   ranking
AB Requirements prioritization aims at identifying the most important requirements for a software system, a crucial step when planning for system releases and deciding which requirements to implement it) each release. Several prioritization methods and supporting tools have been proposed so far. How to evaluate their properties, with the aim of supporting the selection of the most appropriate method for a specific project, is considered a relevant question.
   In this paper, we present an empirical study aiming at evaluating two state-of-the art tool-supported requirements prioritization methods, AHP and CBRank. We focus on three measures: the ease of use, the time-consumption and the accuracy. The experiment has been conducted with 23 experienced subjects on a set of 20 requirements from a real project. Results indicate that for the first two characteristics CBRank overcomes AHP while for the accuracy AHP performs better than CBRank, even if the resulting ranks from the two methods are very similar. The majority of the users found CBRank the "overall best" method. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Perini, Anna; Susi, Angelo] Fdn Bruno Kessier IRST, I-38100 Trento, Italy.
   [Ricca, Filippo] Spa CINI, ELSAG, DISI Lab Iniziativa Software FINMECCANICA, Unita CINI, I-16146 Genoa, Italy.
C3 Fondazione Bruno Kessler; FBK-ICT - Center for Information &
   Communication Technology; Leonardo
RP Perini, A (corresponding author), Fdn Bruno Kessier IRST, Via Sommarive 18, I-38100 Trento, Italy.
EM perini@fbk.eu; filippo.ricca@disi.unige.it; susi@fbk.eu
RI Ricca, Filippo/ABB-3276-2020
FU STAMPS
FX We would like to thank the students and researchers that participated to
   the experiment, and Cinzia Bazzanella for her support. Thanks also to
   the anonymous reviewers for their valuable suggestions. This work has
   been partially funded by the STAMPS project.
CR AHL V, 2005, THESIS SCH ENG SWEDE
   Aho A. V., 1983, DATA STRUCTURES ALGO
   [Anonymous], 2006, SOFTWARE ENG
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], THESIS HUT
   [Anonymous], 2003, Software requirements
   Avesani P, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P297, DOI 10.1109/RE.2005.30
   Avesani P., 2004, P 16 INT C SOFTW ENG, P306
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Berander P., 2005, Engineering and Managing Software Requirements
   BERANDER P, 2006, P 6 C SOFTW ENG RES
   BRACKETT JW, 1990, SEICM1912 CARN MELL
   Cohen J., 1988, STAT POWER ANAL BEHA
   FERRARI S, 2002, THESIS POLITECNICO T
   Freund Y., 1999, Journal of Japanese Society for Artificial Intelligence, V14, P771
   HARKER PT, 1987, MATH MODELLING, V9, P837, DOI 10.1016/0270-0255(87)90503-3
   Juristo N., 2013, BASICS SOFTWARE ENG
   Karlsson J., 1997, Requirements Engineering, V2, P51, DOI 10.1007/BF02802897
   Karlsson J, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P110, DOI 10.1109/ICRE.1996.491435
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   KARLSSON J, 1995, THESIS LINKOPING U S
   Karlsson L, 2007, EMPIR SOFTW ENG, V12, P3, DOI 10.1007/s10664-006-7240-4
   KHAN KA, 2006, THESIS BLEKINGE I TE
   KONTIO J, 1996, P ICSE, V18, P201
   LEFFINGWELL D, 2000, MANAGING SOFTWARE RE
   Likert R., 1932, Arch. Psychol., V22, P44, DOI DOI 10.4135/9781412961288.N454
   MAIDEN NAM, 2002, P 8 INT WORKSH REQ E
   MOISIADIS F, 2003, THESIS MACQUARIE U A
   Morera D, 2002, LECT NOTES COMPUT SC, V2559, P485
   Perini Anna, 2007, 5th International Workshop on Comparative Evaluation in Requirements Engineering (CERE 2007), P23, DOI 10.1109/CERE.2007.1
   Ruhe G., 2002, Proceedings of the 14th International Conference on Software Engineering and Knowledge Engineering (SEKE'02), P159
   Saaty T.L., 1999, FUNDAMENTALS ANAL NE, P12, DOI DOI 10.1007/S11518-006-0158-Y
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 34
TC 54
Z9 65
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2009
VL 51
IS 6
BP 1021
EP 1032
DI 10.1016/j.infsof.2008.12.001
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 435BX
UT WOS:000265319400005
DA 2024-07-18
ER

PT J
AU Jadhav, AS
   Sonar, RM
AF Jadhav, Anil S.
   Sonar, Rajendra M.
TI Evaluating and selecting software packages: A review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software evaluation; Software selection; Evaluation criteria; Software
   selection tools
ID SIMULATION SOFTWARE; EXPERT-SYSTEM; CRITERIA; QUALITY; FRAMEWORK; MODEL
AB Evaluating and selecting software packages that meet an organization's requirements is a difficult software engineering process. Selection of a wrong software package can turn out to be costly and adversely affect business processes. The aim of this paper is to provide a basis to improve the process of evaluation and selection of the software packages. This paper reports a systematic review of papers published in journals and conference proceedings. The review investigates methodologies for selecting software packages, software evaluation techniques, software evaluation criteria, and systems that support decision makers in evaluating software packages. The key findings of the review are: (1)analytic hierarchy process has been widely used for evaluation of the software packages, (2) there is lack of a common list of generic software evaluation criteria and its meaning, and (3) there is need to develop a framework comprising of software selection methodology, evaluation technique, evaluation criteria, and system to assist decision makers in software selection. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Jadhav, Anil S.] Sinhgad Inst Management, Dept Comp, Pune 411041, Maharashtra, India.
   [Sonar, Rajendra M.] Indian Inst Technol, Shailesh J Mehta Sch Management, Bombay 400076, Maharashtra, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Bombay
RP Jadhav, AS (corresponding author), Sinhgad Inst Management, Dept Comp, Pune 411041, Maharashtra, India.
EM rm_sonar@iitb.ac.in
RI Jadhav, Anil/D-6706-2018
OI Jadhav, Anil/0000-0002-2684-1137
CR Adhikari A., 2004, Journal of International Accounting, Auditing and Taxation, V13, P53, DOI [10.1016/j.intaccaudtax.2004.02.001, DOI 10.1016/J.INTACCAUDTAX.2004.02.001]
   Anderson EE, 1997, DECIS SUPPORT SYST, V19, P75, DOI 10.1016/S0167-9236(96)00042-5
   [Anonymous], SEKE 02 ACM
   [Anonymous], 2000, APPL OPTIMIZAT
   Arditi D., 1991, PROJECT MANAGEMENT, V9, P39
   Bhuta J, 2005, LECT NOTES COMPUT SC, V3412, P132
   BLANC LA, 1992, STRUCTURED APPROACH
   Bozdag C., 2003, COMPUT IND, V51, P3
   CHAU PYK, 1995, INFORM MANAGE, V29, P71, DOI 10.1016/0378-7206(95)00016-P
   Cochran JK, 2005, COMPUT OPER RES, V32, P153, DOI 10.1016/S0305-0548(03)00209-0
   Collier K., 1999, P 32 HAW INT C SYST, P1
   Colombo E, 2004, REQUIR ENG, V9, P186, DOI 10.1007/s00766-003-0184-y
   COMELLADORDA S, 2002, LNCS, V2255, P86
   Davis L., 1994, Integrated Manufacturing Systems, V5, P23, DOI 10.1108/09576069410050314
   DEWIT J, 1990, EUR J OPER RES, V49, P102, DOI 10.1016/0377-2217(90)90124-T
   Franch X, 2003, IEEE SOFTWARE, V20, P34, DOI 10.1109/MS.2003.1159027
   Franch X, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P104, DOI 10.1109/ICRE.2002.1048512
   GRAU G, 2004, P 30 EUROMICRO C IEE
   Hecht B, 1997, DATAMATION, V43, P56
   Hlupic V, 1996, COMPUT INTEGR MANUF, V9, P49, DOI 10.1016/0951-5240(95)00037-2
   Hlupic V, 1995, 1995 WINTER SIMULATION CONFERENCE PROCEEDINGS, P720
   JARKE M, 1985, COMPUT SURV, V17, P313, DOI 10.1145/5505.5506
   Jinwoo Kim, 1997, International Journal of Intelligent Systems in Accounting, Finance and Management, V6, P141, DOI 10.1002/(SICI)1099-1174(199706)6:2<141::AID-ISAF122>3.0.CO;2-2
   Kathuria R, 1999, OMEGA-INT J MANAGE S, V27, P605, DOI 10.1016/S0305-0483(99)00029-8
   KIM CS, 1992, INFORM MANAGE, V23, P249, DOI 10.1016/0378-7206(92)90056-L
   Kiper JD, 1997, J VISUAL LANG COMPUT, V8, P175, DOI 10.1006/jvlc.1996.0034
   Kitchenham B, 1997, COMPUT CONTROL ENG J, V8, P120, DOI 10.1049/cce:19970304
   KITCHENHAM BA, 1996, EVALUATING SOFTWARE
   KIZZORT B, 2001, SELECTION COMPONENTS
   Kontio J, 1996, PROC INT CONF SOFTW, P201, DOI 10.1109/ICSE.1996.493416
   KONTLO J, 1996, CASCON 96 C TOR CAN
   Kunda D, 2003, LECT NOTES COMPUT SC, V2693, P64
   Lai VS, 1999, INFORM MANAGE-AMSTER, V36, P221, DOI 10.1016/S0378-7206(99)00021-X
   LAWLIS PK, 1997, IEEE P SOFTWARE, V144, P149
   LEBLANC LA, 1989, INFORM MANAGE, V17, P49, DOI 10.1016/0378-7206(89)90054-2
   Lee HS, 2004, IEEE INT CONF FUZZY, P1709
   Leung KRPH, 2002, INFORM SOFTWARE TECH, V44, P703, DOI 10.1016/S0950-5849(02)00118-0
   LILA XB, 2000, P 10 INT WORKSH SOFT
   Lin H.-Y., 2006, EXPERT SYSTEMS APPL
   MISRA SK, 1990, INFORM SOFTWARE TECH, V32, P415, DOI 10.1016/0950-5849(90)90128-E
   Mohamed A, 2004, LECT NOTES COMPUT SC, V3096, P43
   Mohanty R. P., 1993, International Journal of Operations & Production Management, V13, P45, DOI 10.1108/01443579310039560
   Mollaghasemi M., 1997, TECHNICAL BRIEFING M
   Morera D, 2002, LECT NOTES COMPUT SC, V2559, P485
   MORISIO M, 1997, IEEE P SOFTWARE ENG, V144
   Ngai E.W.T., 2005, EXPERT SYSTEM APPL, P1
   Nikoukaran J., 1999, Simulation Practice and Theory, V7, P219, DOI 10.1016/S0928-4869(98)00028-7
   Nikoukaran J., 1999, Simulation Practice and Theory, V7, P1, DOI 10.1016/S0928-4869(98)00022-6
   NIKOUKARAN J, 1998, P 1998 WINT SIM C
   Oh KS, 2003, LECT NOTES COMPUT SC, V2713, P626
   Ossadnik W, 1999, EUR J OPER RES, V118, P578, DOI 10.1016/S0377-2217(98)00321-X
   PATEL N, P 24 INT C IT INT 20
   Pérez M, 2000, INFORM SOFTWARE TECH, V42, P489, DOI 10.1016/S0950-5849(00)00093-8
   Phillips-Wren GE, 2004, OMEGA-INT J MANAGE S, V32, P323, DOI 10.1016/j.omega.2004.01.003
   PLESSIS AL, 1993, INFORM MANAGE, V25, P93
   REED CN, 1982, COMPUT ENVIRON URBAN, V7, P329, DOI 10.1016/0198-9715(82)90020-5
   REIMANN BC, 1985, COMMUNICATIONS ACM, V28
   Rincon G, 2005, INFORM MANAGE-AMSTER, V42, P1051, DOI 10.1016/j.im.2004.04.007
   Saaty T.L, 1980, Advanced Optimization and Decision-Making Techniques in Textile Manufacturing, DOI DOI 10.1201/9780429504419-2
   SANDERS GL, 1983, COMPUT IND ENG, V7, P309, DOI 10.1016/0360-8352(83)90014-1
   SANTIAGO CD, 2002, LNCS, V2255, P86
   Sarkis J, 2004, EUR J OPER RES, V159, P318, DOI 10.1016/j.ejor.2003.08.018
   SHTUB A, 1998, COMPUTER INTEGRATED, V1
   Stamelos I, 2003, EUR J OPER RES, V145, P273, DOI 10.1016/S0377-2217(02)00534-9
   Stamelos I, 2000, INFORM SOFTWARE TECH, V42, P333, DOI 10.1016/S0950-5849(99)00093-2
   STYLIANOU AC, 1999, COMMUNICATIONS ACM, V55
   Teltumbde A, 2000, INT J PROD RES, V38, P4507, DOI 10.1080/00207540050205262
   Tewoldeberhan TW, 2002, PROCEEDINGS OF THE 2002 WINTER SIMULATION CONFERENCE, VOLS 1 AND 2, P67, DOI 10.1109/WSC.2002.1172870
   TOSHTZAR M, 1988, MATH COMPUT MODEL, V11, P276, DOI 10.1016/0895-7177(88)90498-0
   Verville J., 2002, Management Decision, V40, P206, DOI 10.1108/00251740210420156
   Vlahavas I, 1999, KNOWL-BASED SYST, V12, P183, DOI 10.1016/S0950-7051(99)00031-3
   Wei CC, 2005, INT J PROD ECON, V96, P47, DOI 10.1016/j.ijpe.2004.03.004
   WELZEL D, 1993, MICROPROC MICROPROG, V39, P273, DOI 10.1016/0165-6074(93)90104-S
   WRIGHT P, 1990, COMPUT EDUC, V14, P217, DOI 10.1016/0360-1315(90)90004-Q
   Yoon K., 1995, Multiple Attribute Decision Making-An 1069 Introduction, DOI [10.1007/978-3-642-48318-9, DOI 10.4135/9781412985161]
   ZAHEDI F, 1985, DECISION SCI, V16, P91, DOI 10.1111/j.1540-5915.1985.tb01477.x
   ZAHEDI F, 1990, EUR J OPER RES, V48, P136, DOI 10.1016/0377-2217(90)90070-R
NR 77
TC 124
Z9 150
U1 0
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2009
VL 51
IS 3
BP 555
EP 563
DI 10.1016/j.infsof.2008.09.003
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 400TM
UT WOS:000262891500001
DA 2024-07-18
ER

PT J
AU Cai, KY
   Hu, DB
   Bai, CG
   Hu, H
   Jing, T
AF Cai, Kai-Yuan
   Hu, De-Bin
   Bai, Cheng-Gang
   Hu, Hai
   Jing, Tao
TI Does software reliability growth behavior follow a non-homogeneous
   Poisson process
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software reliability modeling; Controlled software experiment;
   Non-homogeneous Poisson process; Goel-Okumoto model; Software testing
ID OF-FIT TESTS; MODELS
AB It is widely believed in software reliability community that software reliability growth behavior follows a non-homogeneous Poisson process (NHPP) based on analyzing the behavior of the mean of the cumulative number of observed software failures. In this paper we present two controlled software experiments to examine this belief. The behavior of the mean of the cumulative number of observed software failures and that of the corresponding variance are examined simultaneously. Both empirical observations and statistical hypothesis testing suggest that software reliability behavior does not follow a non-homogeneous Poisson process in general, and does not fit the Goel-Okumoto NHPP model in particular. Although this new finding should be further tested on other software experiments, it is reasonable to cast doubt on the validity of the NHPP framework for software reliability modeling. The importance of the work presented in this paper is not only for the new finding which is distinctly different from existing popular belief of software reliability modeling, but also for the adopted research approach which is to examine the behavior of the mean and that of the corresponding variance simultaneously on basis of controlled software experiments. (c) 2008 Elsevier B.V. All rights reserved.
C1 [Cai, Kai-Yuan; Hu, De-Bin; Bai, Cheng-Gang; Hu, Hai; Jing, Tao] Beijing Univ Aeronaut & Astronaut, Dept Automat Control, Beijing 100083, Peoples R China.
C3 Beihang University
RP Cai, KY (corresponding author), Beijing Univ Aeronaut & Astronaut, Dept Automat Control, Beijing 100083, Peoples R China.
EM kycai@buaa.edu.cn
FU National Science Foundation of China; Microsoft Research Asia [60633010]
FX Supported by the National Science Foundation of China and Microsoft
   Research Asia (Grant No. 60633010). Cai is also with the State Key
   Laboratory of Virtual Reality Technology and Systems, Beijing, China.
CR [Anonymous], P INT S FAULT TOL CO
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   Cai KY, 2007, J SYST SOFTWARE, V80, P1328, DOI 10.1016/j.jss.2006.11.008
   Cai Kai-Yuan., 1998, KLUW INT SER SOFTW E
   Cai KY, 2002, J SYST SOFTWARE, V63, P173, DOI 10.1016/S0164-1212(02)00013-4
   CAI KY, 1991, RELIAB ENG SYST SAFE, V32, P357, DOI 10.1016/0951-8320(91)90009-V
   Cai KY, 2000, INFORM SCIENCES, V126, P137, DOI 10.1016/S0020-0255(00)00018-9
   CAMPBELL D B, 1979, Biometrical Journal, V21, P17, DOI 10.1002/bimj.4710210104
   Chen YP, 1997, ADV APPL PROBAB, V29, P337, DOI 10.2307/1428006
   Gaudoin O, 1999, STAT IND TECHNOL, P27
   GOEL AL, 1982, RADCTR82263
   GOEL AL, 1978, P 3 US JAP COMP C, P35
   GROSS KC, 2000, P 11 INT S SOFTW REL
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Henze N, 1996, CAN J STAT, V24, P81, DOI 10.2307/3315691
   Hudson GR, 1967, Report SP-3011
   Jelinski Z., 1972, Statistical Computer Performance Evaluation, P465, DOI DOI 10.1016/B978-0-12-266950-7.50028-1
   Keller T, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING - CASE STUDIES, PROCEEDINGS, P71, DOI 10.1109/CSSRE.1997.637849
   LITTLEWOOD B, 1973, ROY STAT SOC C-APP, V22, P332
   Musa J. D., 1975, IEEE Transactions on Software Engineering, VSE-1, P312, DOI 10.1109/TSE.1975.6312856
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   Nara T, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P250, DOI 10.1109/ISSRE.1995.497664
   NELSON EC, 1973, STAT BASIS SOFTWARE
   Okamura H, 2007, I C DEPEND SYS NETWO, P698, DOI 10.1109/DSN.2007.101
   Pham H, 2003, EUR J OPER RES, V149, P475, DOI 10.1016/S0377-2217(02)00498-8
   Pham H., 2000, SOFTWARE RELIABILITY
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Schneidewind N. F., 1975, SIGPLAN Notices, V10, P337, DOI 10.1145/390016.808456
   Spinelli JJ, 1997, CAN J STAT, V25, P257, DOI 10.2307/3315735
   Vokolos FI, 1998, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.1998.738488
   Wood A, 1996, COMPUTER, V29, P69, DOI 10.1109/2.544240
   Xie M., 1992, Proceedings. Third International Symposium on Software Reliability Engineering (Cat. No.92TH0486-1), P184, DOI 10.1109/ISSRE.1992.285846
   Xie M., 1991, SOFTWARE RELIABILITY
NR 33
TC 23
Z9 26
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2008
VL 50
IS 12
BP 1232
EP 1247
DI 10.1016/j.infsof.2007.12.001
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 358CS
UT WOS:000259894800004
DA 2024-07-18
ER

PT J
AU Mortensen, M
   Ghosh, S
   Bieman, JM
AF Mortensen, Michael
   Ghosh, Sudipto
   Bieman, James M.
TI A test driven approach for aspectualizing legacy software using mock
   systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE mock systems; aspect-oriented programming; legacy systems; refactoring;
   testing
ID CLONE DETECTION; INTERFACES; CODE
AB Aspect-based refactoring, called aspectualization, involves moving program code that implements cross-cutting concerns into aspects. Such refactoring can improve the maintainability of legacy systems. Long compilation and weave times, and the lack of an appropriate testing methodology are two challenges to the aspectualization of large legacy systems. We propose an iterative test driven approach for creating and introducing aspects. The approach uses mock systems that enable aspect developers to quickly experiment with different pointcuts and advice, and reduce the compile and weave times. The approach also uses weave analysis, regression testing, and code coverage analysis to test the aspects. We developed several tools for unit and integration testing. We demonstrate the test driven approach in the context of large industrial C++ systems, and we provide guidelines for mock system creation. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Mortensen, Michael] Hewlett Packard Corp, Ft Collins, CO 80528 USA.
   [Ghosh, Sudipto; Bieman, James M.] Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
C3 Hewlett-Packard; Colorado State University
RP Mortensen, M (corresponding author), Hewlett Packard Corp, 3404 E Harmony Rd MS 88, Ft Collins, CO 80528 USA.
EM mike.mortensen@hp.com; ghosh@cs.colostate.edu; bieman@cs.colostate.edu
RI Ghosh, Sudipto/ABI-4888-2020
CR Alexandrescu A., 2001, Modern C++ Design: Generic Programming and Design Patterns Applied
   [Anonymous], 2005 WORKSH TEST ASP
   [Anonymous], P OBJ OR PROGR SYST
   [Anonymous], ASPECTJ PROJECT
   Astels Dave, 2003, Test-Driven Development: A Practical Guide
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bruntink M, 2005, IEEE T SOFTWARE ENG, V31, P804, DOI 10.1109/TSE.2005.114
   CLIFTON C, 2003, AOSD 2003 WORKSH SOF
   Coady Y., 2003, P 2 INT C ASPECT ORI, P50
   Douence R., 2004, C SPED ORIENTED SOFT, P141
   DURR P, 2005, 2 EUR INT WORKSH ASP
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   GAL A, 2001, WORKSH ADV SEP OBJ O
   Ghosh S, 2005, SOFTWARE PRACT EXPER, V35, P1131, DOI 10.1002/spe.666
   Griswold WG, 2006, IEEE SOFTWARE, V23, P51, DOI 10.1109/MS.2006.24
   HANNEMANN J, 2001, WORKSH ADV SEP SOFTW
   HANNEMANN J, 2005, P 4 INT C ASP OR SOF, P135
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Laddad R., 2003, ASPECTJ ACTION PRACT
   Laddad Ramnivas., 2003, ASPECT ORIENTED REFA
   LEMOS OAL, 2005, 2005 WORKSH TEST ASP
   LEMOS OAL, 2006, WTAOP 06, P33
   LESIECKI N, 2005, UNIT TEST YOUR ASPEC
   Lohmann D, 2004, LECT NOTES COMPUT SC, V3286, P55
   LOHMANN D, 2005, ACP4IS ASPECTS COMPO
   LOPES CV, 2005, 2005 WORKSH TEST ASP
   Marini P, 2005, BMC CANCER, V5, DOI 10.1186/1471-2407-5-5
   MORTENSEN M, 2006, 17 INT S SOFTW REL E
   MORTENSEN M, 2006, P 5 AOSD WORKSH ASP, P1
   MORTENSEN M, 2006, AOSD 06, P9
   *OL SPINCZ PUR SYS, 2005, ASPECTC COMP MAN
   ROGER T, 2004, CS4105 COL STAT U DE
   Tonella P, 2005, IEEE T SOFTWARE ENG, V31, P819, DOI 10.1109/TSE.2005.115
   TOURWE R, 2003, AOSD 2003 WORKSH SOF
   XU DX, 2006, P 5 INT C ASP OR SOF
   Zhao J, 2003, SE1416 IPSJ
   ZHOU YW, 2004, TECOS 2004
NR 38
TC 2
Z9 5
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2008
VL 50
IS 7-8
BP 621
EP 640
DI 10.1016/j.infsof.2007.06.002
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 305KT
UT WOS:000256178000002
DA 2024-07-18
ER

PT J
AU Liu, H
   Tan, HBK
AF Liu, Hui
   Tan, Hee Beng Kuan
TI An approach for the maintenance of input validation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software maintenance; input validation; empirical properties; program
   slicing; feature recovery
AB Input validation is the enforcement of constraints that an input must satisfy before it is accepted in a program. It is an essential and important feature in a large class of systems and usually forms a major part of a data-intensive system. Currently, the design and implementation of input validation are carried out by application developers. The recovery and maintenance of input validation implemented in a system is a challenging issue. In this paper, we introduce a variant of control flow graph, called validation flow graph as a model to analyze input validation implemented in a program. We have also discovered some empirical properties that characterizing the implementation of input validation. Based on the model and the properties discovered, we then propose a method that recovers the input validation model from source and use program slicing techniques to aid the understanding and maintenance of input validation. We have also evaluated the proposed method through case studies. The results show that the method can be very useful and effective for both experienced and inexperienced developers. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Liu, Hui; Tan, Hee Beng Kuan] Nanyang Technol Univ, Sch Elect & Elect Engn, Singapore 639798, Singapore.
C3 Nanyang Technological University
RP Liu, H (corresponding author), Nanyang Technol Univ, Sch Elect & Elect Engn, Block S2,Nanyang Ave, Singapore 639798, Singapore.
EM liuh0007@ntu.edu.sg; ibktan@ntu.edu.sg
RI Tan, Hee Beng Kuan/A-5147-2011
CR [Anonymous], 1995, P 3 ACM SIGSOFT S FD
   Binkley D., 1996, Advances in Computers, V43, P1
   Cimitile A, 1996, J SOFTW MAINT-RES PR, V8, P145, DOI 10.1002/(SICI)1096-908X(199605)8:3<145::AID-SMR127>3.0.CO;2-9
   De Lucia A, 2001, FIRST IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P142, DOI 10.1109/SCAM.2001.972675
   DEVANBU P, 1995, IEEE T SOFTWARE ENG, V21, P1009, DOI 10.1109/32.489076
   *ECL, OP SOURC JAV DEV TOO
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Gallagher K, 2003, J SOFTW MAINT EVOL-R, V15, P393, DOI 10.1002/smr.289
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   Hayes J. H., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P199, DOI 10.1109/ISSRE.1999.809325
   HUFFMAN HJ, 2006, EMPIR SOFTW ENG, V11, P493
   *JABA, JAV ARCH BYT AN
   JOSEPH RR, 2006, P 2006 INT S SOFTW T
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   KONTOGIANNIS K, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P96, DOI 10.1109/WCRE.1995.514698
   Kontogiannis K. A., 1996, Automated Software Engineering, V3, P77, DOI 10.1007/BF00126960
   Krinke J, 2002, PROC IEEE INT CONF S, P22, DOI 10.1109/ICSM.2002.1167744
   Lanubile F, 1997, IEEE T SOFTWARE ENG, V23, P246, DOI 10.1109/32.588543
   Larsen L, 1996, PROC INT CONF SOFTW, P495, DOI 10.1109/ICSE.1996.493444
   Liu H., 2006, P INT WORKSH AUT SOF, P29, DOI [10.1145/1138929, DOI 10.1145/1138929]
   LIU H, 2006, P 22 IEEE INT C SOFT
   LIU H, IN PRESS J SYSTEMS S
   Montgomery DC, 2009, Engineering statistics
   *MSDN, DES GUID SEC WEB APP
   Offutt J, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P187, DOI 10.1109/ISSRE.2004.13
   Sartipi K, 2003, PROC IEEE INT CONF S, P224, DOI 10.1109/ICSM.2003.1235425
   Sinha S, 2001, ACM T SOFTW ENG METH, V10, P209, DOI 10.1145/367008.367022
   *SOURC, OP SOURC WEBS
   Tai KC, 1996, IEEE T SOFTWARE ENG, V22, P552, DOI 10.1109/32.536956
   Tan HBK, 2004, IEEE T KNOWL DATA EN, V16, P1217, DOI 10.1109/TKDE.2004.62
   Tan HBK, 2001, J SOFTW MAINT EVOL-R, V13, P53, DOI 10.1002/smr.222
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   XIAOFANG Z, 2004, REFINING CODE DESIGN, P231
NR 34
TC 6
Z9 6
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2008
VL 50
IS 5
BP 449
EP 461
DI 10.1016/j.infsof.2007.05.004
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 290WJ
UT WOS:000255153200007
DA 2024-07-18
ER

PT J
AU Land, R
   Crnkovic, I
AF Land, Rikard
   Crnkovic, Ivica
TI Software systems in-house integration: Architecture, process practices,
   and strategy selection
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software integration; software merge; strategic decisions; architectural
   compatibility
ID MAINTENANCE
AB As organizations merge or collaborate closely, an important question is how their existing software assets should be handled. If these previously separate organizations are in the same business domain - they might even have been competitors - it is likely that they have developed similar software systems. To rationalize, these existing software assets should be integrated, in the sense that similar features should be implemented only once. The integration can be achieved in different ways. Success of it involves properly managing challenges such as making as well founded decisions as early as possible, maintaining commitment within the organization, managing the complexities of distributed teams, and synchronizing the integration efforts with concurrent evolution of the existing systems.
   This paper presents a multiple case study involving nine cases of such in-house integration processes. Based both on positive and negative experiences of the cases, we pinpoint crucial issues to consider early in the process, and suggest a number of process practices. (c) 2006 Elsevier B.V. All rights reserved.
C1 Malardalen Univ, Dept Comp Sci & Elect, SE-72123 Vasteras, Sweden.
C3 Malardalen University
RP Land, R (corresponding author), Malardalen Univ, Dept Comp Sci & Elect, Box 883, SE-72123 Vasteras, Sweden.
EM rikard.land@mdh.se; ivica.crnkovic@mdh.se
OI Ivica, Crnkovic/0000-0002-5278-755X
CR ABOWD G, 1993, P 1 ACM SIGSOFT S FD
   ABRAHAMSSON P, 2005, THESIS U OULU
   Allen R.J., 1997, (CMU Tech- nical Report CMU-CS-97-144). (technical report).
   [Anonymous], 1990, IEEE STANDARD GLOSSA
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], MAKING METHODS WORK
   [Anonymous], REQUIREMENT ENG PROC
   [Anonymous], 2004, CULTURE ORG SOFTWARE
   April A, 2005, J SOFTW MAINT EVOL-R, V17, P197, DOI 10.1002/smr.3
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Berzins V., 1994, ACM Transactions on Programming Languages and Systems, V16, P1875, DOI 10.1145/197320.197403
   Boehm B, 2003, COMPUTER, V36, P57, DOI 10.1109/MC.2003.1204376
   Boehm B., 2000, SPIRAL DEV EXPERIENC
   Brodie M., 1995, MIGRATING LEGACY SYS
   Brooks Frederick P., 1995, The mythical man-month
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   CARMEL E, 1999, GLOBAL SOFTW TEAMS C
   Clements P., 2001, EVALUATING SOFTWARE
   Clements P., 2002, DOCUMENTING SOFTWARE
   *CMMI PROD TEAM, 2002, CAP MAT MOD INT VERS
   Courtney H., 2001, 20 20 FORESIGHT CRAF
   CRNKOVIC I, 2001, SOFTWARE FOCUS
   Crnkovic I., 2002, BUILDING RELIABLE CO
   Cummins F.A., 2002, ENTERPRISE INTEGRATI
   Davies JH, 2005, GEOCHEM GEOPHY GEOSY, V6, DOI 10.1029/2005GC001042
   Davis L, 2003, LECT NOTES COMPUT SC, V2580, P62
   DeMarco T, 1999, PEOPLEWARE PRODUCTIV
   Ferneley EH, 1999, J SOFTW MAINT-RES PR, V11, P55, DOI 10.1002/(SICI)1096-908X(199901/02)11:1<55::AID-SMR184>3.0.CO;2-O
   FOWLER M, 1998, REFACTORING IMPROVIN
   GAMMAA E, 1995, DESIGN PATTERNS ELEM
   GARLAN D, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.469757
   Garlan D., 1993, INTRO SOFTWARE ARCHI, VI
   Guarino N, 1998, FR ART INT, V46, P3
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Hofmeister C., 2000, APPL SOFTWARE ARCHIT
   Hohpe Gregor, 2004, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions
   JAKOBSSON J, 2002, BUILDING RELIABLE CO
   JOHYNSON P, 2002, THESIS ROYAL I TECHN
   KARLSSON EA, 1995, SOFTWARE REUSE HOLIS
   KAROLAK DW, 1998, GLOBAL SOFTWARE DEVE
   Kazman R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P54, DOI 10.1109/ICSE.1999.840995
   KMRUCHTEN P, 2000, RATIONAL UNIFIED PRO
   Komi-Sirvio S, 2005, KNOWL PROCESS MANAG, V12, P108, DOI 10.1002/kpm.225
   KORHONEN M, 2003, P INT C SOFTWARE ENG
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   LAND R, 2005, P 5 IEEE IFIP WORK C
   LAND R, 2002, P SOFTWARE ENG RES P
   LAND R, 2006, P INT ERCIM WORKSH S
   LAND R, 2005, P 31 EUR C SOFTW ENG
   LAND R, 2003, P INT C SOFTW MAINT
   LAND R, 2006, P 32 EUR C SOFTW ENG
   LAND R, 2005, P 1 INT C QUAL SOFTW
   LAND R, 2003, P EUR C
   LAND R, 2004, P SOFTW ENG RES PRAC
   LAND R, 2006, P SUBM QUAL SOFTW AR
   LAND R, 2006, QUANTITATIVE SURVEY
   LAND R, 2005, COMMUNICATION
   LAND R, 2005, P 27 INT C INF TECHN
   LARSSON S, 2005, P 6 INT C PROD FOC S
   Lehman MM, 2001, ANN SOFTW ENG, V11, P15, DOI 10.1023/A:1012535017876
   LINTHICUM DS, 1999, INFORMATION TECHNOLO
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   McConnell S., 1996, Rapid Development: Taming Wild Software Schedules
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Messerschmitt DG, 2003, SOFTWARE ECOSYSTEM: UNDERSTANDING AN INDISPENSABLE TECHNOLOGY AND INDUSTRY, P1
   MEYERS C, 2001, MANAGING SOFTWARE AC
   MEYERS C, 1997, OPEN SYSTEMS PROMISE
   OMAN P, 1991, 9108TR SETL
   Omelayenko B., 2000, ACM SIGecom Exchanges, V2, issue, P19
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Perry DE, 2002, PROC IEEE INT CONF S, P70
   PORTER ME, 1998, COMPETITORS STRATEGY
   Poulin J.S., 1997, MEASURING SOFTWARE R
   Robson C., 2002, Real world research
   Ruh WilliamA., 2000, ENTERPRISE APPL INTE
   Schmidt D C., 2000, Wiley series in software design patterns
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   SEWELL MT, 2002, SOFTWARE ARCHITECTS
   Stapleton J., 1997, DSDM DYNAMIC SYSTEMS
   Stonebraker M, 2001, SIGMOD REC, V30, P552, DOI 10.1145/376284.375739
   Struass A.C., 1998, Basics of Qualitative Research: Grounded Theory Procedures and Techniques
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   Thompson A.A., 1998, STRATEG MANAG, V10th
   van Gurp J, 2002, J SYST SOFTWARE, V61, P105, DOI 10.1016/S0164-1212(01)00152-2
   VANDERWESTHUIZE.C, 2002, P WORK IFIP C SOFTW, P95
   Wallnau K., 2001, BUILDING SYSTEMS COM
   WEGNER P, 1996, INTEROPERABILITY ACM, V28
   Wileden J.C., 1999, Proceedings of the 21st International Conference on Software Engineering, P675, DOI DOI 10.1145/302405.302952
   Yin R.K., 2003, CASE STUDY RES DESIG
NR 92
TC 13
Z9 13
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2007
VL 49
IS 5
BP 419
EP 444
DI 10.1016/j.infsof.2006.07.002
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 161VS
UT WOS:000246045200001
DA 2024-07-18
ER

PT J
AU Andreopoulos, B
   An, AJ
   Tzerpos, V
   Wang, XG
AF Andreopoulos, Bill
   An, Aijun
   Tzerpos, Vassillos
   Wang, Xiaogang
TI Clustering large software systems at multiple layers
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Annual Meeting of the
   American-Association-of-Directors-of-Psychiatric-Residency-Training
CY MAR 12, 2005
CL Tucson, AZ
SP Amer Assoc Directors Psychiat Residency Training
DE software clustering; multiple layer; categorical; MULIC; graph
AB Software clustering algorithms presented in the literature rarely incorporate in the clustering process dynamic information, such as the number of function invocations during runtime. Moreover, the structure of a software system is often multi-layered, while existing clustering algorithms often create flat system decompositions.
   This paper presents a software clustering algorithm called MULICsoft that incorporates in the clustering process both static and dynamic information. MULICsoft produces layered clusters with the core elements of each cluster assigned to the top layer. We present experimental results of applying MULICsoft to a large open-source system. Comparison with existing software clustering algorithms indicates that MULICsoft is able to produce decompositions that are close to those created by system experts. (c) 2006 Elsevier B.V. All rights reserved.
C1 York Univ, Dept Comp Sci & Engn, N York, ON M3J 1P3, Canada.
   York Univ, Dept Math & Stat, N York, ON M3J 1P3, Canada.
C3 York University - Canada; York University - Canada
RP Andreopoulos, B (corresponding author), York Univ, Dept Comp Sci & Engn, N York, ON M3J 1P3, Canada.
EM billa@cse.yorku.ca; aan@cs.yorku.ca; bil@csc.yorku.ca;
   stevenw@mathstat.yorku.ca
CR ALADY LA, 1981, J SYST SOFTWARE, V2, P23
   ANDREOPOULOS B, 2004, CS200407 DEP COMP SC
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   ANDRITSOS P, 2004, P 9 INT C EXT DAT TE
   CHOI SC, 1990, IEEE SOFTWARE, V7, P66, DOI 10.1109/52.43051
   GODRREY W, 2000, P 2 INT S CONSTR SOF
   Huang ZX, 1998, DATA MIN KNOWL DISC, V2, P283, DOI 10.1023/A:1009769707641
   HUTCHENS DH, 1985, IEEE T SOFTWARE ENG, V11, P749, DOI 10.1109/TSE.1985.232524
   Koschke R, 2000, PROG COMPREHEN, P201, DOI 10.1109/WPC.2000.852494
   Lindig C, 1997, PROC INT CONF SOFTW, P349, DOI 10.1145/253228.253354
   MANCORIDIS S, 1999, P INT C SOFTW ENG IC
   Mitchell BS, 2001, PROC IEEE INT CONF S, P744, DOI 10.1109/ICSM.2001.972795
   Muller H. A., 1993, Journal of Software Maintenance: Research and Practice, V5, P181, DOI 10.1002/smr.4360050402
   SCHWANKE RW, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P83, DOI 10.1109/ICSE.1991.130626
   Tzerpos V, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P76, DOI 10.1109/WCRE.1997.624578
   Tzerpos V, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P258
   Tzerpos V., 1999, MOJO DISTANCE METRIC, P187
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
   XIND C, 2005, P 9 EUR C SOFTW MAIN, P124
NR 19
TC 20
Z9 25
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2007
VL 49
IS 3
BP 244
EP 254
DI 10.1016/j.infsof.2006.10.010
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 139AA
UT WOS:000244403200004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kraft, NA
   Malloy, BA
   Power, JF
AF Kraft, Nicholas A.
   Malloy, Brian A.
   Power, James F.
TI An infrastructure to support interoperability in reverse engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Annual Meeting of the
   American-Association-of-Directors-of-Psychiatric-Residency-Training
CY MAR 12, 2005
CL Tucson, AZ
SP Amer Assoc Directors Psychiat Residency Training
DE reverse engineering; data interoperability; graph-based tools; tool
   interoperability; GXL
ID SCHEMA
AB The reverse engineering community has recognized the importance of interoperability, the cooperation of two or more systems to enable the exchange and utilization of data, and has noted that the current lack of interoperability is a contributing factor to the lack of adoption of available infrastructures. To address the problems of interoperability and reproducing previous results, we present an infrastructure that supports interoperability among reverse engineering tools and applications. We present the design of our infrastructure, including the hierarchy of schemas that captures the interactions among graph structures. We also develop and utilize our implementation, which is designed using a GXL-based pipe-filter architecture, to perform a case study that demonstrates the feasibility of our infrastructure. (c) 2007 Published by Elsevier B.V.
C1 Clemson Univ, Dept Comp Sci, Clemson, SC 29634 USA.
   Natl Univ Ireland, Dept Comp Sci, Maynooth, Kildare, Ireland.
C3 Clemson University; Maynooth University
RP Malloy, BA (corresponding author), Clemson Univ, Dept Comp Sci, Clemson, SC 29634 USA.
EM nkraft@cs.clemson.edu; malloy@cs.clemson.edu; jpower@cs.nuim.ie
OI Power, James/0000-0002-6770-3910
CR AKZMAN R, 1999, J AUTOMATED SOFTWARE, V6, P107
   ALEKRAM R, 2005, P 9 EUR C SOFTW MAIN
   [Anonymous], 1990, IEEE STAND COMP DICT
   ANTONIOL G, 2003, P 3 INT WORKSH SOURC
   *BELL CAN INC, 2000, DATRIX ABSTR SEM GRA
   Buy U., 2000, P INT S SOFTW TEST A
   DAS M, 2000, P ACM SIGPLAN C PROG, P35
   DEAN TR, 2001, WORK C REV ENG OCT
   EBERT J, 2001, SEM 01041 INT REENG
   Eichberg M, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P182, DOI 10.1109/WCRE.2004.45
   Ferenc R, 2002, PROC IEEE INT CONF S, P172, DOI 10.1109/ICSM.2002.1167764
   Finnigan PJ, 1997, IBM SYST J, V36, P564, DOI 10.1147/sj.364.0564
   *FLUXB, FLUXB PROJ VERS 0 9
   Fowler M., 2004, UML DISTILLED, VThird
   GAMMA E, 1995, DESIGN PATTERNS
   GUO X, 2003, SCAM, P151
   HARROLD MJ, 1993, P INT S SOFTW TEST A, P139
   Hennessy M, 2003, PROG COMPREHEN, P298
   HOIPKEMIER BN, 2006, P 18 INT C SOFTW ENG
   HOLT R, SWAG SOFTWARE ARCHIT
   HOLT R, GXL GRAPH EXCHANGE L
   Holt RC, 2006, SCI COMPUT PROGRAM, V60, P149, DOI 10.1016/j.scico.2005.10.003
   Holt RC, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P162, DOI 10.1109/WCRE.2000.891463
   *IBM, IBM JIK PROJ VERS 1
   JAMIESON AC, 2005, P FUT PLAY 2005 OCT
   Jin D, 2005, PROC IEEE INT CONF S, P613
   Jin D, 2002, PROG COMPREHEN, P65, DOI 10.1109/WPC.2002.1021320
   *KEYST, KEYST VER 0 2 3
   KRAFT NA, G4RE REVERSE ENG INF
   KRAFT NA, 2005, SEM 05161 TRANSF TEC
   KRAFT NA, 2005, P 12 WORK C REV ENG
   Kraft NA, 2006, J SYST SOFTWARE, V79, P1092, DOI 10.1016/j.jss.2005.10.019
   KULLBACH B, 1998, WORK C REV ENG OCT
   LETHBRIDGE TC, 2004, P 1 INT WORKSH MET M, P7
   LETHBRIDGE TC, 2002, DAGSTUHL MIDDLE MODE
   *LICQ, LICQ VERS 0 2 3
   Lin Y, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P196
   Malloy BA, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P353, DOI 10.1109/ISSRE.2003.1251057
   Malloy BA, 2003, SOFTWARE PRACT EXPER, V33, P19, DOI 10.1002/spe.493
   MERRILL J, 2003, GCC DEV SUMMIT, P171
   MULLER HA, 2000, C FUT SOFTW ENG LIM, P47
   Murphy G. C., 1996, ACM Transactions on Software Engineering and Methodology, V5, P262, DOI 10.1145/234426.234441
   Murphy G. C., 1998, ACM Transactions on Software Engineering and Methodology, V7, P158, DOI 10.1145/279310.279314
   *NAT I STAND TECHN, 1993, ECMA REF MOD FRAM SO
   Nierstrasz O., 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [DOI 10.1145/1095430, 10.1145/1095430.1081707, DOI 10.1145/1095430.1081707]
   Salah M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P238, DOI 10.1109/WCRE.2003.1287254
   *SCINTILLA, SCINTILLA VERS 1 66
   *SCRIBUS, SCRIBUS VERS 1 2 3
   Sim SE, 2002, PROG COMPREHEN, P114, DOI 10.1109/WPC.2002.1021331
   Sim SE, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P278, DOI 10.1109/WCRE.2000.891479
   SIM SE, 2001, ACM SIGSOFT SOFTWARE, V26, P44
   SINHA S, 1999, P 21 INT C SOFTW ENG
   SKOGLUND M, 2005, P INT S EMP SOFTW EN
   VANDERZIJP J, FOX TOOLKIT LIBR VER
   VANHEESCH D, DOXYGEN VERSION 1 4
   Vinciguerra L, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P14, DOI 10.1109/WCRE.2003.1287233
   Wu J, 2004, PROG COMPREHEN, P241, DOI 10.1109/WPC.2004.1311067
   *XML, EXP XML PARS VERS 1
NR 58
TC 6
Z9 8
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2007
VL 49
IS 3
BP 292
EP 307
DI 10.1016/j.infsof.2006.10.014
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 139AA
UT WOS:000244403200007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Awan, I
   Singh, S
AF Awan, Irfan
   Singh, Suhani
TI Performance evaluation of e-commerce requests in wireless cellular
   networks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT International Workshop on Web and Mobile Information Systems
CY MAR, 2005
CL Taipei, TAIWAN
DE c-commerce; performance evaluation; wireless handover mechanism
ID ENTROPY MAXIMIZATION; ASSIGNMENT; SYSTEMS; SCHEME
AB Recent technological advances in mobile devices and wireless networks enable mobile users to order goods in an anywhere and anytime fashion. Quality of Service (QoS) provision is one of the most challenging issues in the heterogeneous wireless network-based e-commerce systems. Such e-commerce systems enable users to roam between different wireless networks operators and geographical areas while providing interactive broadband services and seamless connectivity. Due to movement of users during e-commerce requests, one of the most important QoS factors for successful completion of users' requests is related to handover of request from one cell to another. A handover could fail due to unavailability of sufficient bandwidth in the destination cell. Such failure of ongoing e-commerce requests is highly undesirable and can cause serious problems to the e-commerce users and the service providers. This paper proposes an enhanced priority queuing based handover scheme in order to ensure a seamless connectivity of e-commerce requests. It focuses on the performance anaylsis of the proposed scheme. Experimental study demonstrates that the proposed scheme provides QoS with low connection failure and mean response time for handover of e-commerce requests. (C) 2006 Elsevier B.V. All rights reserved.
C1 Univ Bradford, Dept Comp, Bradford BD7 1DP, W Yorkshire, England.
C3 University of Bradford
RP Awan, I (corresponding author), Univ Bradford, Dept Comp, Horton Bldg,Great Horton Rd, Bradford BD7 1DP, W Yorkshire, England.
EM i.u.awan@bradford.ac.uk; ssingh7@gmail.com
CR Abuelyaman E., 2004, International Journal of Mobile Communications, V2, P405, DOI 10.1504/IJMC.2004.005863
   AHMED AN, 1991, IEEE T RELIAB, V40, P290, DOI 10.1109/24.85443
   ANVEKAR DK, 1996, IEEE INT C PERS WIR
   CHANG CJ, 1994, IEEE ACM T NETWORK, V2, P166
   CHLEBUS E, 1995, 4 IEEE INT C UN PERS, P348
   EBERSMAN HG, 1995, WIRELESS MERGING INF, V2, P824
   Fantacci R, 2000, IEEE T VEH TECHNOL, V49, P485, DOI 10.1109/25.832980
   Gibson J.D., 1996, MOBILE COMMUNICATION, V1st
   GUERIN R, 1988, IEEE T COMMUN, V36, P153, DOI 10.1109/26.2745
   HONG D, 1986, IEEE T VEH TECHNOL, V35, P77, DOI 10.1109/T-VT.1986.24076
   Kouvatsos D, 2003, PERFORM EVALUATION, V51, P191, DOI 10.1016/S0166-5316(02)00092-5
   Kouvatsos DD, 1994, ANN OPER RES, V48, P63, DOI 10.1007/BF02023095
   LI NBJ, 1999, IEEE ACM T NETWORK, V7, P38
   Lin YB, 1996, IEEE T VEH TECHNOL, V45, P122, DOI 10.1109/25.481829
   Marichamy P., 1999, Gateway to 21st Century Communications Village. VTC 1999-Fall. IEEE VTS 50th Vehicular Technology Conference (Cat. No.99CH36324), P1486, DOI 10.1109/VETECF.1999.801509
   MOHAPATRA M, 1994, IEEE INT C PERS WIR, P64
   POSNER EC, 1985, ITC11
   Raad RS, 2000, IEEE SYMP COMP COMMU, P600, DOI 10.1109/ISCC.2000.860702
   Ramjee R, 1996, IEEE INFOCOM SER, P43, DOI 10.1109/INFCOM.1996.497876
   Rappaport SS, 1996, IEEE T VEH TECHNOL, V45, P443, DOI 10.1109/25.533760
   Schulte H. J., 1960, IRE T VEH COMMUN, V9, P49
   Tarasewich P., 2002, COMMUN ASSOC INF SYS, V8, P41
   TEKINAY S, 1992, IEEE J SEL AREA COMM, V10, P1343, DOI 10.1109/49.166761
   TEKINAY S, 1992, P 1 INT C UN PERS CO
   Veran M., 1985, Modelling Techniques and Tools for Performance Analysis. Proceedings of the International Conference, P25
   Wu MY, 2003, IEEE IPCCC, P531, DOI 10.1109/PCCC.2003.1203739
   Xhafa AE, 2004, IEEE J SEL AREA COMM, V22, P904, DOI 10.1109/JSAC.2004.826927
   Zhuang W, 2000, IEEE T VEH TECHNOL, V49, P494, DOI 10.1109/25.832981
NR 28
TC 3
Z9 3
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2006
VL 48
IS 6
BP 393
EP 401
DI 10.1016/j.infsof.2005.12.017
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 049QP
UT WOS:000238031800005
DA 2024-07-18
ER

PT J
AU Shakshuki, E
   Prabhu, O
   Tomek, I
AF Shakshuki, Elhadi
   Prabhu, Omkamath
   Tomek, Ivan
TI FCVW agent framework
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT International Workshop on Web and Mobile Information Systems
CY MAR, 2005
CL Taipei, TAIWAN
DE agents; agent framework; virtual environments; agent reusability
AB The rising cost and growing complexity of software development is a triggering force for the development of frameworks. Frameworks provide reusability of components and they have been developed for many domains. However, very few attempts have been made to develop agent frameworks for Collaborative Virtual Environments (CVEs). This paper presents processes used in developing an agent framework for Federated Collaborative Virtual Workspace (FCVW) based on Agent Oriented Software Engineering (AOSE) techniques. FCVW is an extension of MITRE's Collaborative Virtual Workspace (CVW). The main objective of this framework is to allow FCVW users to create software agents more easily. (C) 2006 Elsevier B.V. All rights reserved.
C1 Acadia Univ, Jodrey Sch Comp Sci, Wolfville, NS B4P 2R6, Canada.
C3 Acadia University
RP Shakshuki, E (corresponding author), Acadia Univ, Jodrey Sch Comp Sci, Wolfville, NS B4P 2R6, Canada.
EM elhadi.shakshuki@acadiau.ca
OI Shakshuki, Elhadi/0000-0002-0226-075X
CR Aridor Y., 1998, Proceedings of the Second International Conference on Autonomous Agents, P108, DOI 10.1145/280765.280784
   Bigus J.P., 2001, CONSTRUCTING INTELLI, V2nd
   Erol K., 2000, Proceedings of the Fourth International Conference on Autonomous Agents, P76, DOI 10.1145/336595.337046
   Fayad M., 1999, IMPLEMENTING APPL FR
   Fayad Mohamed E., 1999, Building Application Frameworks: Object-oriented Foundations of Framework Design
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Girardi R., 2002, 1 INT WORKSH SOFTW E
   KENDALL E, 1997, PATT LANG PROGR C PL
   MOURATIDIS H, 2003, P 8 EUR C PATT LANG, P25
   NWANA HS, 1996, KNOWL ENG REV, V11, P1
   PREE W, 2000, ACM COMPUTING SU MAR
   Schelfthout K., 2002, WORKSH AG OR METH, P119
   SHAKSHUKI E, 2005, INT C INF TECHN COD
   Shakshuki E., 2002, INT J INF TECH DECIS, V2, P105
   Sycara K, 2003, LECT NOTES COMPUT SC, V2603, P232
   Tveit A., 2001, P 1 NTNU COMP SCI GR
   WOOD M, 2000, 1 INT WORKSH AG OR S
   2000, CYW ARCHITECTURE OVE
NR 18
TC 5
Z9 5
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2006
VL 48
IS 6
BP 385
EP 392
DI 10.1016/j.infsof.2005.12.013
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 049QP
UT WOS:000238031800004
DA 2024-07-18
ER

PT J
AU Jiau, HC
   Kao, CH
   Ssu, KF
AF Jiau, HC
   Kao, CH
   Ssu, KF
TI Dreamer: A resource management architecture for Jini federation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Jini; leasing; resource management
AB In the paper, we developed a resource management architecture for Jini federation. Jini introduces in a leasing concept that handles partial failure of distributed applications, and also supports service resource allocation. However, current leasing model does not lay a stress on fairness and priority issues on the resource allocation. On the other hand, current lookup service lacks the capability to handle sophisticated service assignment, such as load balance issue, non-functional requirement matching, urgent service request and so on. In this paper, we aim to solve the deficiency described above by providing an architecture, which uses the information contained in resource leases to achieve better resource management. (c) 2005 Elsevier B.V. All rights reserved.
C1 Natl Cheng Kung Univ, Dept Elect Engn, Tainan 70101, Taiwan.
C3 National Cheng Kung University
RP Natl Cheng Kung Univ, Dept Elect Engn, Tainan 70101, Taiwan.
EM basara@nature.ee.ncku.edu.tw
OI Kao, Chia Hung/0000-0002-1178-5662
CR Arnold K., 1999, Proceedings 1999 Design Automation Conference (Cat. No. 99CH36361), P157, DOI 10.1109/DAC.1999.781302
   Bai J, 1999, IEEE ENG MED BIOL, V18, P63, DOI 10.1109/51.775490
   Braude EricJ., 2001, SOFTWARE ENG OBJECT
   Chavez A., 1997, Proceedings of the First International Conference on Autonomous Agents, P323, DOI 10.1145/267658.267736
   Cheung LS, 2001, INT CONF PARA PROC, P361, DOI 10.1109/ICPPW.2001.951973
   Cheung LS, 2001, P INT COMP SOFTW APP, P257, DOI 10.1109/CMPSAC.2001.960625
   Cotroneo D, 2002, 10TH EUROMICRO WORKSHOP ON PARALLEL, DISTRIBUTED AND NETWORK-BASED PROCESSING, PROCEEDINGS, P109, DOI 10.1109/EMPDP.2002.994244
   EDWARDS WK, 1999, CORE JINI
   Fahrmair M, 2000, LECT NOTES COMPUT SC, V1826, P209
   Georgiev V, 2002, 10TH EUROMICRO WORKSHOP ON PARALLEL, DISTRIBUTED AND NETWORK-BASED PROCESSING, PROCEEDINGS, P129, DOI 10.1109/EMPDP.2002.994249
   Gray CaryG., 1989, P 12 ACM S OPERATING, P202
   Gupta R, 2002, COMPUTER, V35, P34, DOI 10.1109/MC.2002.1023786
   HASSELMEYER P, 2001, P SOC PHOTO-OPT INS, P34
   JUHASZ Z, 2002, P 2 IEEE ACM INT S C, P365
   Ku TY, 2002, IEEE T CONSUM ELECTR, V48, P496, DOI 10.1109/TCE.2002.1037034
   McDowell CE, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES - TOOLS 33, PROCEEDINGS, P45, DOI 10.1109/TOOLS.2000.848750
   Moller MB, 2001, TOOLS, V38, P19, DOI 10.1109/TOOLS.2001.911752
   Saito T, 2000, IEEE T CONSUM ELECTR, V46, P1161, DOI 10.1109/30.920474
   Smith L, 2002, 2002 IEEE 4TH INTERNATIONAL WORKSHOP ON NETWORKED APPLIANCES, PROCEEDINGS, P135, DOI 10.1109/IWNA.2001.980828
   Stang M., 2001, IT Professional, V3, P33, DOI 10.1109/6294.899931
   Waldo J, 1999, COMMUN ACM, V42, P76, DOI 10.1145/306549.306582
   Williams G, 1998, IEEE Trans Inf Technol Biomed, V2, P1, DOI 10.1109/4233.678527
   Winters JM, 2003, IEEE ENG MED BIOL, V22, P56, DOI 10.1109/MEMB.2003.1213627
NR 23
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2006
VL 48
IS 3
BP 170
EP 186
DI 10.1016/j.infsof.2005.04.002
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 027SZ
UT WOS:000236437200004
DA 2024-07-18
ER

PT J
AU Pahl, C
AF Pahl, C
TI Adaptive development and maintenance of user-centric software systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE adaptive development and maintenance; requirements and software change;
   participative design; software architecture; evolutionary design
ID SCENARIOS; DESIGN
AB A software system cannot be developed without considering the various facets of its environment. Stakeholders-including the users that play a central role-have their needs, expectations, and perceptions of a system. Organisational and technical aspects of the environment are constantly changing. The ability to adapt a software system and its requirements to its environment throughout its full lifecycle is of paramount importance in a constantly changing environment. The continuous involvement of users is as important as the constant evaluation of the system and the observation of evolving environments. We present a methodology for adaptive software systems development and maintenance. We draw upon a diverse range of accepted methods including participatory design, software architecture, and evolutionary design. Our focus is on user-centred software systems. (C) 2004 Elsevier B.V. All rights reserved.
C1 Dublin City Univ, Sch Comp, Dublin 9, Ireland.
C3 Dublin City University
RP Dublin City Univ, Sch Comp, Dublin 9, Ireland.
EM claus.pahl@dcu.ie
OI Pahl, Claus/0000-0002-9049-212X
CR ALSPAUGH TA, 2001, P IEEE INT S REQ ENG, P142
   Beynon-Davies P, 2002, INFORM SOFTWARE TECH, V44, P579, DOI 10.1016/S0950-5849(02)00078-2
   Bodker S, 2000, INTERACT COMPUT, V13, P61, DOI 10.1016/S0953-5438(00)00024-2
   Borgholm T, 1999, COMMUN ACM, V42, P91, DOI 10.1145/301353.301438
   BREITMAN K, 2000, P 4 INT C REQ ENG IC
   Crnkovic I., 2002, BUILDING RELIABLE CO
   Dix A, 2004, HUM-COMPUT INTERACT
   Egyed A., 2000, IEE Proceedings-Software, V147, P225, DOI 10.1049/ip-sen:20000915
   Gr_???nbaek K., 1997, COMPUTERS DESIGN CON, P201
   *IEEE COMP SOC, 2001, IEEE LEARN TECHN STA
   Kazman R, 2000, ANN SOFTW ENG, V9, P5, DOI 10.1023/A:1018964405965
   Kosters G., 2001, Requirements Engineering, V6, P3, DOI 10.1007/PL00010354
   Kotonya G., 1998, Requirements engineering: processes and techniques
   Lee J, 2002, INFORM SOFTWARE TECH, V44, P361, DOI 10.1016/S0950-5849(02)00021-6
   Lung C.-H, 1997, P CASCON, P144
   Medvidovic N., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P44, DOI 10.1109/ICSE.1999.840994
   MOISIADIS F, 2000, P 4 INT C REQ ENG IC
   NUSEIBEH B, 1994, IEEE T SOFTWARE ENG, V20, P760, DOI 10.1109/32.328995
   Pahl C, 2003, COMPUT EDUC, V40, P99, DOI 10.1016/S0360-1315(02)00100-8
   RUSSO A, 1998, P INT C REQ ENG ICRE
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   SMEATON AF, 1991, COMPUT EDUC, V17, P173, DOI 10.1016/0360-1315(91)90010-O
   Smeaton AF, 1999, COMPUT EDUC, V32, P83, DOI 10.1016/S0360-1315(98)00052-9
   Sommerville I, 2001, Software Engineering
   Sutcliffe AG, 1998, IEEE T SOFTWARE ENG, V24, P1072, DOI 10.1109/32.738340
NR 25
TC 10
Z9 13
U1 0
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV 1
PY 2004
VL 46
IS 14
BP 973
EP 986
DI 10.1016/j.infsof.2004.04.004
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 851NQ
UT WOS:000223692200004
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Krishnan, P
AF Krishnan, P
TI Independent examination of software: an experiment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE model checking; verification and validation; firewall
AB This paper summarises our experience in using model-checking technology to understand the behaviour of a system. A simple model of the system under test is created from the informal documentation. This model is used to create a test environment for the system. The behaviour of system combined with the test environment is then verified using the tool Verisoft. This requires a few changes to the original source code. The aim to minimize the number of changes to the original source code so that its original behaviour is not affected. The use of Verisoft to create a model, which can subsequently be used for testing is also studied. The main conclusion is that it is possible to use bounded model checking on source code with a view towards verifying key behavioural properties. (C) 2004 Elsevier B.V. All rights reserved.
C1 Bond Univ, Sch Informat Technol, Gold Coast, Qld 4229, Australia.
C3 Bond University
RP Krishnan, P (corresponding author), Bond Univ, Sch Informat Technol, Gold Coast, Qld 4229, Australia.
EM pkrishna@bond.edu.au
CR Bowen JP, 2002, P INT COMP SOFTW APP, P91, DOI 10.1109/CMPSAC.2002.1044538
   Buwalda H., 2003, STQE MAGAZINE    MAR, P42
   BUWALDA H, 1999, SOFTWARE TESTING QUA, P39
   Chen J, 2002, SOFTWARE QUAL J, V10, P205, DOI 10.1023/A:1021634422504
   Clarke EM, 1999, MODEL CHECKING, P1
   COLBY C, 1998, SIGPLAN C PROGR LANG, P345
   Dunsmore A, 2000, J SYST SOFTWARE, V52, P121, DOI 10.1016/S0164-1212(99)00138-7
   FECKO MA, 1997, P IEEE MIL COMM C MI
   FOWLER M, 1997, APPLYING STANDARD OB
   Gargantini A, 1999, LECT NOTES COMPUT SC, V1687, P146, DOI 10.1145/318774.318939
   GODEFROID P, 1998, P ACM SIGSOFT ISSTA, P124
   Heitmeyer C, 1998, LECT NOTES COMPUT SC, V1486, P18, DOI 10.1007/BFb0055332
   Hierons R. M., 1997, Software Testing, Verification and Reliability, V7, P19, DOI 10.1002/(SICI)1099-1689(199703)7:1<19::AID-STVR124>3.0.CO;2-N
   Krishnan P, 2002, EUROMICRO CONF PROC, P284, DOI 10.1109/EURMIC.2002.1046175
   Larsen P., 1993, LNCS, V670, P268
   PAUL S, 1994, INT J SOFTW ENG KNOW, V4, P325, DOI 10.1142/S0218194094000167
   PRETSCHNER A, 2001, P FORM APPR TEST SOF, P47
   WIDMAIER J, 1999, P ISSRE IND PRACT FA, P253
   Wimmel G, 2000, SOFTW TEST VERIF REL, V10, P229, DOI 10.1002/1099-1689(200012)10:4<229::AID-STVR213>3.0.CO;2-O
NR 19
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 15
PY 2004
VL 46
IS 12
BP 847
EP 856
DI 10.1016/j.infsof.2004.02.005
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 840GZ
UT WOS:000222846600006
DA 2024-07-18
ER

PT J
AU Andrade, J
   Ares, J
   García, R
   Pazos, J
   Rodríguez, S
   Silva, A
AF Andrade, J
   Ares, J
   García, R
   Pazos, J
   Rodríguez, S
   Silva, A
TI A methodological framework for generic conceptualisation::
   problem-sensitivity in software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE conceptual model; conceptualisation; methodological framework; problem
   orientation; software engineering
ID SPECIFICATIONS
AB The first step towards developing quality software is to conceptually model the problem raised in its own context. Software engineering, however, has traditionally focused on implementation concepts, and has paid little or no attention to the problem domain. This paper presents a generic methodological framework to guide conceptual modelling, focusing on the problem within its domain. This framework is defined considering aspects related to a generic conceptualisation, and its application to software engineering-illustrated using the IFIP Case-achieves the called-for problem-sensitivity. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ A Coruna, La Coruna 15071, Spain.
   Tech Univ Madrid, Madrid, Spain.
C3 Universidade da Coruna; Universidad Politecnica de Madrid
RP Univ A Coruna, Campus Elvina S-N, La Coruna 15071, Spain.
EM jag@udc.es; juanar@udc.es; rafael@udc.es; jpazos@fi.upm.es;
   santi@udc.es; asilva@fi.upm.es
RI Andrade-Garda, Javier/U-8124-2018; Ares Casal, Juan/G-2140-2016; Garcia
   Vazquez, Rafael/G-2099-2016; Silva, Andres/D-4373-2012; Rodriguez-Yanez,
   Santiago/E-3038-2014
OI Andrade-Garda, Javier/0000-0002-9630-2534; Ares Casal,
   Juan/0000-0002-4497-2114; Garcia Vazquez, Rafael/0000-0003-2775-2010;
   Silva, Andres/0000-0002-7273-0526; Rodriguez-Yanez,
   Santiago/0000-0002-6781-7838
CR ANDRADE J, 2002, THESIS U A CORUNA
   [Anonymous], LNCS
   [Anonymous], 2000, FUTURE SOFTWARE ENG
   [Anonymous], 1997, FABRIC REALITY
   [Anonymous], PROGRAMMING NEW ERA
   [Anonymous], 1973, How to solve it
   [Anonymous], 1993, Software Requirements-objects, Functions and States
   Ares J, 1998, KNOWL-BASED SYST, V11, P87, DOI 10.1016/S0950-7051(98)00048-3
   BOMAN M, 1997, PRENTICEHALL SERIES
   Bransford J., 1993, The IDEAL Problem Solver-A Guide for Improving Thinking, Learning, and Creativity, V2
   Buzan T., 1996, MIND MAP BOOK USE RA
   Cook WalterAnthony., 1989, Case Grammar Theory
   Descartes Ren#233;., 1969, OEUVRES DESCARTES
   Diez J., 1997, Fundamentos de filosofia de la ciencia
   Einstein Albert, 1949, AUTOBIOGRAPHICAL NOT
   GENESERETH M, 1986, LOGICAL FDN ARTIFICI
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Gómez A, 2000, DATA KNOWL ENG, V33, P169, DOI 10.1016/S0169-023X(99)00050-6
   Gomez A., 1997, INGENIERIA CONOCIMIE
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   HOPPENBROUWERS J, 1997, DATA KHOWL ENG, V1, P79
   Jackson D, 1996, SOFTWARE ENG J, V11, P19, DOI 10.1049/sej.1996.0003
   JACKSON D, 2000, FUTURE SOFTWARE ENG
   Jackson M., 1995, SOFTWARE REQUIREMENT
   Jackson M., 2001, PROBLEM FRAMES ANAL
   JACKSON RB, 1995, INFORM SYST, V20, P273, DOI 10.1016/0306-4379(95)00014-U
   MARINOFF L, 1999, NOT PROZAC APPL PHIL
   OLLE TW, 1982, INFORMATION SYSTEMS
   PAZOS J, 1987, INTELIGENCIA ARTIFIC
   VERHEIJEN GMA, 1982, INFORMATION SYSTEMS
   1997, PLATO MEMON CRATILO
NR 31
TC 8
Z9 9
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG 1
PY 2004
VL 46
IS 10
BP 635
EP 649
DI 10.1016/j.infsof.2003.11.003
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 823DF
UT WOS:000221589200001
DA 2024-07-18
ER

PT J
AU Khaddaj, S
   Adamu, A
   Morad, M
AF Khaddaj, S
   Adamu, A
   Morad, M
TI Object versioning and information management
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE object oriented modelling; object versioning; information systems
AB It is already widely accepted that the use of data abstraction in object oriented modelling enables real world objects to be well represented in information systems. However, the issue of how to deal with the continuity problem during gradual or sudden changes of objects continues to pose conceptual and technical challenges. This paper investigates the use of object versioning techniques to examine the continuity and pattern of changes of objects over time. In adopting this the authors assess not only attributes changes to homogenous objects, but also behaviour changes that lead to transforming or destroying existing objects and creating new ones. (C) 2003 Elsevier B.V. All fights reserved.
C1 Kingston Univ, Sch Comp & Informat Syst, Kingston upon Thames KT1 2EE, Surrey, England.
   Kingston Univ, Sch Earth Sci & Geog, Kingston upon Thames KT1 2EE, Surrey, England.
C3 Kingston University; Kingston University
RP Khaddaj, S (corresponding author), Kingston Univ, Sch Comp & Informat Syst, Kingston upon Thames KT1 2EE, Surrey, England.
EM s.khaddaj@kingston.ac.uk
CR ADAMU A, 2001, FRAMEWORK TRACKING E, P304
   ALLEN JF, 1984, ARTIF INTELL, V23, P123, DOI 10.1016/0004-3702(84)90008-0
   [Anonymous], 1999, RES MON GIS SERIES
   [Anonymous], 1999, ADV SPAT SCI
   Barth S., 2000, Knowledge Management, V3, P36
   Bertrand M., 1997, Object-oriented Software Construction, V2Nd
   BIELAWSKI L, 1998, ELECT DOCUMENT MANAG
   CATTELL RGG, 1991, OBJECT ORIENTED EXTE
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Dadam P., 1984, 10 INT C VER LARG DA, P509
   Davenport TH, 1998, SLOAN MANAGE REV, V39, P43
   GRANDI F, 2002, TR68
   Hornsby K, 2000, INT J GEOGR INF SCI, V14, P207, DOI 10.1080/136588100240813
   JENNINGS CG, 2000, SELECTED TOPICS OBJE, V70
   Loomis M E.S., 1995, Object Databases: The Essentials
   Martin J., 1995, OBJECT ORIENTED METH
   *OUTS INC, 2001, INF INF BRIEF, V4, P1
   OWEN PK, 1993, EUR C GEOGR INF SYST, V2, P129
   PEUQUET DL, 1996, SPATIOTEMPORAL 1 SPA
   SUI DZ, 1998, INT J GEOGR INF SYST, V8, P7
   WACHOWICZ M, 1994, TEMPORALITY GIS INNO, V1, P105
   Won KimandFrederick H Lochovsky., 1989, Object-oriented concepts, databases, and applications
   WORBOYS M, 1994, INT J GEOGR INF SYST, V6, P353
   Yourdon E., 1994, OBJECT ORIENTED SYST
   YUAN M, 1997, INTELLIGENT GIS SUPP
   2000, OBJECTIVITY DB COMPL
NR 26
TC 2
Z9 2
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 1
PY 2004
VL 46
IS 7
BP 491
EP 498
DI 10.1016/j.infsof.2003.10.002
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 809AM
UT WOS:000220609600006
DA 2024-07-18
ER

PT J
AU Fenicle, B
   Wahls, T
AF Fenicle, B
   Wahls, T
TI A secure methodology for interchangeable services
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 18th ACM Symposium on Applied Computing
CY MAR 09-12, 2003
CL MELBOURNE, FLORIDA
SP ACM
DE E-commerce environments; common object request broker architecture;
   interoperability; secure electronic transaction; software licensing
   models
AB Computing today requires the use of many software packages, but only a few packages are used on a daily basis. This infrequent usage pattern often does not justify purchasing full licenses and therefore motivates a need for a more flexible way to use and pay for the usage of software. This paper describes a design philosophy in which similar services provide the same interface to clients. Services based on this design are interchangeable, allow payment per use, handle payment conveniently and securely, are platform independent, and frequently do not require local installation. Clients can therefore easily utilize resources based on application needs and services available at the time that the application is executing. An example implementation using this methodology is also discussed. (C) 2003 Elsevier B.V. All rights reserved.
C1 Penn State Harrisburg, Dept Math & Comp Sci, Middletown, PA 17057 USA.
   Dickinson Coll, Dept Math & Comp Sci, Carlisle, PA 17013 USA.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE);
   Pennsylvania State University; Dickinson College
RP Fenicle, B (corresponding author), Penn State Harrisburg, Dept Math & Comp Sci, Middletown, PA 17057 USA.
EM fenicle_papers@yahoo.com; wahlst@dickinson.edu
CR KEITH EW, 1997, CORE JINI
   Orfali R., 1997, Instant CORBA
   SIMMEL S, 1997, METERING LICENSING R
   VOGAL A, 1998, JAVA PROGRAMMING COR
NR 4
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 15
PY 2004
VL 46
IS 5
BP 343
EP 349
DI 10.1016/j.infsof.2003.09.010
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Conference Proceedings Citation Index - Science (CPCI-S); Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 778FU
UT WOS:000189229500011
DA 2024-07-18
ER

PT J
AU Greer, D
   Ruhe, G
AF Greer, D
   Ruhe, G
TI Software release planning: an evolutionary and iterative approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE incremental software development; release planning; requirements
   prioritization; software engineering decision support; genetic algorithm
AB To achieve higher flexibility and to better satisfy actual customer requirements, there is an increasing tendency to develop and deliver software in an incremental fashion. In adopting this process, requirements are delivered in releases and so a decision has to be made on which requirements should be delivered in which release. Three main considerations that need to be taken account of are the technical precedences inherent in the requirements, the typically conflicting priorities as determined by the representative stakeholders, as well as the balance between required and available effort. The technical precedence constraints relate to situations where one requirement cannot be implemented until another is completed or where one requirement is implemented in the same increment as another one. Stakeholder preferences may be based on the perceived value or urgency of delivered requirements to the different stakeholders involved. The technical priorities and individual stakeholder priorities may be in conflict and difficult to reconcile. This paper provides (i) a method for optimally allocating requirements to increments; (ii) a means of assessing and optimizing the degree to which the ordering conflicts with stakeholder priorities within technical precedence constraints; (iii) a means of balancing required and available resources for all increments; and (iv) an overall method called EVOLVE aimed at the continuous planning of incremental software development. The optimization method used is iterative and essentially based on a genetic algorithm. A set of the most promising candidate solutions is generated to support the final decision. The paper evaluates the proposed approach using a sample project. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Calgary, Calgary, AB T2N 1N4, Canada.
C3 University of Calgary
RP Univ Calgary, 2500 Univ Dr NW, Calgary, AB T2N 1N4, Canada.
EM des.greer@qub.ac.uk; ruhe@ucalgary.ca
OI Greer, Des/0000-0001-6367-9274
CR [Anonymous], 1988, Principles of software engineering management
   Beck K., 2001, Extreme programming explained
   BRIAND LC, 2002, EXPT GENETIC ALGORIT
   Bubenko J. A.  Jr., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P160, DOI 10.1109/ISRE.1995.512557
   Carnahan J, 2001, IEEE POTENTIALS, V20, P21, DOI 10.1109/45.954644
   Cockburn A., 2002, AGILE SOFTWARE DEV
   Davis L., 1991, Handbook of Genetic Algorithms
   De Jong KA, 1975, ANAL BEHAV CLASS GEN
   GOLDBERG DE, 1989, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P70
   Greer D, 1999, NEC RES DEV, V40, P378
   Greer D, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P180, DOI 10.1109/ISRE.1999.777998
   Hamacher H. W., 1994, Annals of Operations Research, V52, P209, DOI 10.1007/BF02032304
   Haupt RL, 2000, IEEE ANTENNAS AND PROPAGATION SOCIETY INTERNATIONAL SYMPOSIUM, VOLS 1-4, P1034, DOI 10.1109/APS.2000.875398
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   Karlsson J, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P110, DOI 10.1109/ICRE.1996.491435
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   *PAL CORP, 2001, GUID RISKOPTIMIZER S
   Reeves C.R., 1995, Modern Heuristic Techniques for Combinatorial Problems
   Ruhe Gunther., 2003, Innovations in Decision Support Systems, V3, P143
   SATY TL, 1980, ANALYTIC HIERARCHY P
   Wang Q, 2001, SECOND ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P295, DOI 10.1109/APAQS.2001.990034
NR 21
TC 235
Z9 250
U1 18
U2 34
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 15
PY 2004
VL 46
IS 4
BP 243
EP 253
DI 10.1016/j.infsof.2003.07.002
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 776CX
UT WOS:000189098400004
DA 2024-07-18
ER

PT J
AU Atif, Y
AF Atif, Y
TI A distributed and interoperable object-oriented support for safe
   e-commerce transactions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE electronic-commerce; trust; distributed computing; search; CORBA; JAVA
ID TRUST
AB Business via Internet is becoming popular. A number of organizations doing business in the traditional way are extending themselves to do business over the Web. Most business-to-business dealings are done through Value Added Networks but for general consumer-to-business dealings, the Internet provides a powerful base. However, customer confidence in Internet commerce needs to be further strengthened before large scale Internet purchasing and selling becomes a reality. While security standards have been established through efficient cryptographic techniques to ensure that network communications are not intercepted, the lack of trust between the endpoint parties involved in an e-commerce transaction remains an obstacle for a smooth completion of the transaction. This is because transacting parties need to trust each other before making any commitment. In this paper, we show how trust can be provided automatically through a network of Trust Service Providers (TSP). The solution we propose allows both customers and merchants to deal with each other confidently through trusted intermediaries which role is to guarantee the goods delivery to the customer and the payment to the merchant for issuing those goods. The transactions are conducted atomically and transparently. That is, a transaction process does not experience any off-line transition delay at the intermediaries and the transacting parties deal virtually directly with each other. This solution requires building a trust web based on a network of TSPs, which we implemented in the form of distributed CORBA objects. (C) 2003 Elsevier B.V. All rights reserved.
C1 United Arab Emirates Univ, Coll Informat Technol, Al Ain, U Arab Emirates.
C3 United Arab Emirates University
RP Atif, Y (corresponding author), United Arab Emirates Univ, Coll Informat Technol, POB 15551, Al Ain, U Arab Emirates.
EM yacine.atif@uaeu.ac.ae
RI Atif, Yacine/B-1311-2013
OI Atif, Yacine/0000-0002-7312-9089
CR ALZON P, ABS BROKER BUSINESS
   [Anonymous], 1994, P EUR S RES SESC ESO
   Bailey J. P., 1997, International Journal of Electronic Commerce, V1, P7
   BICHLER M, 1998, P IFIP C TREND EL CO
   BICHLER M, 1998, INT J ELECT MARKETS, V98, P8
   Borcherding B, 1998, COMPUT SECUR, V17, P447, DOI 10.1016/S0167-4048(98)00001-7
   CHAVEZ A, 1996, KASBAH AGENT MARKETP
   *CYBERCASH INC, 1997, ENS SEC PAYM INT COM
   *DIGICASH, DIGICASH BROCH
   DOGAC A, SURVEY CURRENT STATE
   DWORMAN G, 1996, P AAAI GEN PROGR C S
   FREIER AO, SSL PROTOCOL V 3
   Guttman R., 1998, Agent-mediated Electronic Commerce
   HALSEY SM, 1997, INFORMED TRAVELLER O
   KETCHPEL S, 1996, P 16 INT C DISTR COM
   KETCHPEL S, 1997, SHOPPING MODELS FLEX
   KETCHPEL SP, 1997, SOUND COMPLETE ALGOR
   Kini A, 1998, P ANN HICSS, P51, DOI 10.1109/HICSS.1998.655251
   Kumar Mohan., 2018, Negotiation Dynamics of the WTO
   MCAFEE RP, 1987, J ECON LIT, V25, P699
   MINSKY N, 1998, P 18 ICDS, P332
   *SET IMPL, 1997, SET SEC EL T 1 0 TEC
   STEIN L, 1994, GREEN COMMERCE MODEL
   SU J, 1997, 17 INT C DISTR COMP, P322
   Su JW, 1996, PROCEEDINGS OF THE SIXTH ANNUAL USENIX SECURITY SYMPOSIUM: FOCUSING ON APPLICATIONS OF CRYPTOGRAPHY, P97
   YAHALOM R, 1993, J COMPUTING SYSTEMS
   YAHALOM R, 1993, P IEEE S RES SEC PRI
   [No title captured]
   1998, COMMERCENET CATALOG
NR 29
TC 5
Z9 5
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 1
PY 2004
VL 46
IS 3
BP 149
EP 164
DI 10.1016/S0950-5849(03)00116-2
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 764WQ
UT WOS:000188229300001
DA 2024-07-18
ER

PT J
AU Smith, H
AF Smith, H
TI Business process management - the third wave: business process modelling
   language (bpml) and its pi-calculus foundations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE business process modelling language; third wave; business process
   management; Pi-calculus
AB This paper introduces the ideas behind BPML, the business process modelling language published by BPMI. BPML provides a process-centric (as opposed to a datacentric) metalanguage and execution model for business systems. It is underpinned by a strong mathematical foundation. the pi-calculus. The current paper is derived from supplementary appendices to a book which describes a 'third wave' approach to business process management [Business Process Management: The Third Wave, 2003]. The aim is to model business processes directly in an executable form. so that the mobility and mutability inherent in business behaviour is reflected and supported in the corresponding IT systems, erasing the present IT-business divide. (C) 2003 Published by Elsevier B.V.
C1 CTO Comp Sci Corp EMEA, Addershot, England.
   Business Proc Management Initiat BPMI Org, Addershot, England.
RP Smith, H (corresponding author), CTO Comp Sci Corp EMEA, Royal Pavill,Wellesley Rd, Addershot, England.
CR [Anonymous], 1999, Communicating and Mobile Systems: The Calculus
   DEROSNAY J, 1975, MACROSCOPE NEW WORLD
NR 2
TC 31
Z9 40
U1 0
U2 16
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC 1
PY 2003
VL 45
IS 15
BP 1065
EP 1069
DI 10.1016/S0950-5849(03)00135-6
PG 5
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 737GZ
UT WOS:000186223200008
DA 2024-07-18
ER

PT J
AU Snowdon, B
   Kawalek, P
AF Snowdon, B
   Kawalek, P
TI Active meta-process models: a conceptual exposition
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE meta-processes; systemic process support; viability; cybernetics
AB The difficult and complex interactions between an organisation and its Information and Communications Technology (ICT) systems have presented process modelling research with a very fundamental challenge. From these concerns has emerged the concept of the active meta-process model. This sets out a conceptual basis for understanding the organisation/ICT relationship, and has the potential to influence ICT developments. The central concern of this paper is to develop the theoretical grounding of the idea of the active meta-process model. This concept has its lineage in process modelling research. Fundamentally, it is concerned with the relationship between organisations and ICT systems and, in particular, the notion that ICT systems should be viewed as providing an active canvas supporting the organisation. A conceptual exposition is developed by reference to cybernetic theory through the Viable System Model. The paper advocates an holistic and systemic approach to the comprehension and realisation of the ICT/organisational relationship which necessarily requires (a) an understanding of all of the behaviours of an organisation (including specifically the meta behaviours) and (b) a systemic and architectural view of how ICT systems should be formed in order to address the needs of organisations as systems. The outcome of this is a superior conceptual grounding for the notion of active meta-process models, and insights into how the concept might influence practice. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Manchester, Dept Comp Sci, Informat Proc Grp, Manchester M13 9PL, Lancs, England.
   Manchester Business Sch, Manchester M15 6PB, Lancs, England.
C3 University of Manchester; University of Manchester
RP Univ Manchester, Dept Comp Sci, Informat Proc Grp, Oxford Rd, Manchester M13 9PL, Lancs, England.
EM rsnowdon@cs.man.ac.uk; pkawalek@man.mbs.ac.uk
CR ADHBY WR, 1954, DESIGN BRAIN
   [Anonymous], 1957, INTRO CYBERNETICS
   ARKIN A., 2002, BUSINESS PROCESS MOD
   BEER S, 1974, DISREGARDED TOOLS MO
   Beer S., 1981, The Brain of the Firm
   Beer S., 1979, The heart of the Enterprise
   Beer S., 1978, PLATFORM CHANGE
   BOOCH G, 1999, UNIFIED MODELLING LA
   Brown W.B. D., 1965, Glacier project papers
   Checkland P., 1991, SOFT SYSTEMS METHODO
   CLEMSON B, 1985, CYBERNETICS NEW MANG
   CONANT RC, 1970, INT J SYST SCI, V1, P205
   Dent E.B., 1999, J APPL BEHAV SCI, V35, DOI [DOI 10.1177/0021886399351003, 10.1177/0021886399351003]
   DOWSON M, 1994, P 3 EUR WORKSH SOFTW
   DUTTON WH, 1999, SOC LINE INFORMATION
   *EUR RTD PROJ, ARCH ARCH EV SOFTW
   Fountain J. E., 2001, BUILDING VIRTUAL STA
   Gane Chris., 1979, STRUCTURED SYSTEMS A
   HAECKEL SH, 2000, ADAPTIVE ENTERPRISE
   LORENZO O, 2003, THESIS U WARWICK
   MILNER R, 1993, COMMUN ACM, V36, P78, DOI 10.1145/151233.151240
   SNOWDON RA, 1996, SOFTWARE PROCESS TEC
   STEMPLE D, 2000, ESPRIT BAS RES SER, P158
   WARBOYS B, 1999, BUSINESS INFORMATION
   WARBOYS BC, 1995, ICL TECHNICAL J, V10, P1
   YEOMANS BS, 1997, THESIS U MANCHESTER
   ZIRINTSIS E, 2000, P 9 INT WORKSH PERS
NR 27
TC 10
Z9 12
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC 1
PY 2003
VL 45
IS 15
BP 1021
EP 1029
DI 10.1016/S0950-5849(03)00130-7
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 737GZ
UT WOS:000186223200003
DA 2024-07-18
ER

PT J
AU Xu, BM
   Lian, WM
   Gao, Q
AF Xu, BM
   Lian, WM
   Gao, Q
TI Migration of active objects in proactive
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE distributed application; object-oriented; migration; active object
AB ProActive, which supports active objects as the basic units of activity and distribution used for building applications using ProActive, is a Java library for parallel, distributed and concurrent computing. In this paper, we discuss an important distribution function-migration of objects-that is not readily available in many systems designed for implementing distributed applications. The migration is done in a scalable and secure way based-on ProActive. It has the ability to easily migrate computation, especially in heterogeneous environments. Moreover, it can be used for dynamic load balancing and dynamic deployment purposes to gain improved performance and flexibility of distributed applications. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Tech Univ Denmark, Ctr Teleinformat, Lyngby, Denmark.
   Aston Univ, Birmingham B4 7ET, W Midlands, England.
   Henan Business Coll, Zhengzhou 450052, Peoples R China.
C3 Technical University of Denmark; Aston University
RP Xu, BM (corresponding author), Tech Univ Denmark, Ctr Teleinformat, Lyngby, Denmark.
CR ARABE J, 1996, P 10 INT PAR PROC S, P218
   BUTTNER L, 1998, TUMI9806
   CHANG DT, PROGRAMMING MOBILE A
   EAGER DL, 1986, IEEE T SOFTWARE ENG, V12, P662, DOI 10.1109/TSE.1986.6312961
   HUTCHINSON NC, 1987, 871007 U WASH DEP CO
   JUL E, 1987, P 11 ACM S OP SYST P, P105
   Kiniry J., 1997, IEEE Internet Computing, V1, P21, DOI 10.1109/4236.612210
   Kremien O., 1993, Proceeding of the Twenty-Sixth Hawaii International Conference on System Sciences (Cat. No.93TH0501-7), P632, DOI 10.1109/HICSS.1993.284062
   LANGE DB, 1996, IBM AGLETS WORKBENCH
   NUTTALL M, 1994, 9410 IMP COLL
   *OBJ SPAC INC, 1997, OBJ SPAC VOY COR PAC
   *OBJ SPAC INC, 1999, OBJ SPAC VOY
   PAZANDAK P, 1998, AGENT SYSTEMS COMP
   Richmond M., 1997, Operating Systems Review, V31, P31, DOI 10.1145/254784.254790
   SIMON SH, 1994, JOVE DYNAMIC LOAD BA
NR 15
TC 3
Z9 4
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 15
PY 2003
VL 45
IS 9
BP 611
EP 618
DI 10.1016/S0950-5849(03)00048-X
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 699RL
UT WOS:000184069700006
DA 2024-07-18
ER

PT J
AU Aedo, I
   Díaz, P
   Montero, S
AF Aedo, I
   Díaz, P
   Montero, S
TI A methodological approach for hypermedia security modeling
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE hypermedia; security modeling; web engineering
ID HYPERTEXT
AB In hypermedia systems security is becoming a key requirement to preserve both confidentiality and integrity. Although some authorization models for hypermedia have been proposed, what is needed is to integrate security modeling into the whole development process, so that designers count on methods to specify all the features of their hypermedia systems, including navigation capabilities, interactivity, multimedia features as well as security. In this paper, we describe how security modeling is approached in a methodology for hypermedia systems, called Ariadne, that offers a number of conceptual and platform-independent tools to specify the features of any hyperdocument in an integrated and progressive way. (C) 2002 Elsevier Science B.V. All rights reserved.
C1 Univ Carlos III Madrid, Dept Informat, Lab DEI, Leganes 28911, Spain.
C3 Universidad Carlos III de Madrid
RP Aedo, I (corresponding author), Univ Carlos III Madrid, Dept Informat, Lab DEI, Avda Univ 30, Leganes 28911, Spain.
EM aedo@ia.uc3m.es; pdp@inf.uc3m.es; smontero@inf.uc3m.es
RI Diaz, Paloma/E-8606-2016; Aedo, Ignacio/F-3222-2014
OI Aedo, Ignacio/0000-0001-5819-0511; DIAZ PEREZ, MARIA
   PALOMA/0000-0002-9493-7739
CR [Anonymous], 2003, ROLE BASED ACCESS CO
   Bertino E, 1999, ACM T INFORM SYST, V17, P101, DOI 10.1145/306686.306687
   Brinkley D.L., 1995, IEEE Computer Society Press, chapter Concepts and Terminology for Computer Security (Essay 2), P40
   CAMPBELL B, 1988, COMMUN ACM, V31, P856, DOI 10.1145/48511.48515
   Ceri S, 2000, COMPUT NETW, V33, P137, DOI 10.1016/S1389-1286(00)00040-2
   Clark D. D., 1987, Proceedings of the 1987 IEEE Symposium on Security and Privacy (Cat. No.87CH2416-6), P184
   *COMM COMP SEC CTR, 1989, SEC FUNC MAN
   De Troyer OMF, 1998, COMPUT NETWORKS ISDN, V30, P85, DOI 10.1016/S0169-7552(98)00042-7
   Diaz P, 1997, INFORM SYST, V22, P447, DOI 10.1016/S0306-4379(97)00028-8
   Díaz P, 2001, IEEE T SOFTWARE ENG, V27, P550, DOI 10.1109/32.926176
   DIAZ P, 1998, P 14 INF SEC C SEC98, P251
   DIAZ P, 2001, LECT NOTES COMPUT SC, V2113, P764
   DIAZ P, 2001, LECT NOTES COMPUT SC, V2016, P90
   FERNANDEZ EB, 1996, HIGH LEVEL SECURITY, V2, P13
   Ferraiolo DavidF., 1999, ACM T INFORM SYST SE, V2, P34, DOI DOI 10.1145/300830.300834
   Fraternali P, 2000, ACM T INFORM SYST, V18, P323, DOI 10.1145/358108.358110
   GARZOTTO F, 1993, ACM T INFORM SYST, V11, P1, DOI 10.1145/151480.151483
   ISAKOWITZ T, 1995, COMMUN ACM, V38, P34, DOI 10.1145/208344.208346
   ISAKOWITZ T, 1998, CRIS WORKING PAPER S
   Lange D. B., 1990, Proceedings of the Hypertext Standardization Workshop (NIST SP 500-178), P145
   Lowe David., 1999, Hypermedia and the Web: an engineering approach
   MURUGESAN S, 2001, LECT NOTES COMPUT SC, V2016, P3
   Samarati P, 1996, IEEE T KNOWL DATA EN, V8, P555, DOI 10.1109/69.536249
   Sandhu R., 1991, Computers & Security, V10, P413, DOI 10.1016/0167-4048(91)90068-O
   Sandhu R. S., 1994, Proceedings. 10th Annual Computer Security Applications Conference (Cat. No.94TH8032), P54, DOI 10.1109/CSAC.1994.367293
   SANDHU RS, 1993, IEEE COMPUTER    NOV, P9
   SCHWABE D, 1998, WORKSH HYP DEV PROC
   STOTTS PD, 1989, ACM T INFORM SYST, V7, P3, DOI 10.1145/64789.64791
   THURAISINGHAM B, 1995, INFORM MANAGE, V28, P49, DOI 10.1016/0378-7206(94)00028-H
   Wang W., 1999, Hypertext '99. Returning to our Diverse Roots. The 10th ACM Conference on Hypertext and Hypermedia, P37, DOI 10.1145/294469.294480
NR 30
TC 6
Z9 6
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 1
PY 2003
VL 45
IS 5
BP 229
EP 239
AR PII S0950-5849(02)00159-3
DI 10.1016/S0950-5849(02)00159-3
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 668KQ
UT WOS:000182290200001
DA 2024-07-18
ER

PT J
AU Kefalas, P
   Eleftherakis, G
   Kehris, E
AF Kefalas, P
   Eleftherakis, G
   Kehris, E
TI Communicating X-machines: a practical approach for formal and modular
   specification of large systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE X-machines; communicating X-machines; formal methods
AB An X-machine is a general computational machine that can model: (a) non-trivial data structures as a typed memory tuple and (b) the dynamic part of a system by employing transitions, which are not labelled with simple inputs but with functions that operate on inputs and memory values. The X-machine formal method is valuable to software engineers since it is rather intuitive, while at the same time formal descriptions of data types and functions can be written in any known mathematical notation. These differences allow the X-machines to be more expressive and flexible than a Finite State Machine. In addition, a set of X-machines can be viewed as components, which communicate with each other in order to specify larger systems. This paper describes a methodology as well as an appropriate notation, namely X-machine Description Language (XMDL), for building communicating X-machines from existing stand-alone X-machine models. The proposed methodology is accompanied by an example model of a traffic light junction, which demonstrates the use of communicating X-machines towards the incremental modelling of large-scale systems. It is suggested that through XMDL, the practical development of such complex systems can be split into two separate activities: (a) the modelling of stand-alone X-machine components and (b) the description of the communication between these components. The approach is disciplined, practical, modular and general in the sense that it subsumes the existing methods for communicating X-machines. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Univ Sheffield, Affiliated Coll, Dept Comp Sci, Thessaloniki 54624, Greece.
   Technol Educ Inst Serres, Dept Business Adm, Terma Magnisias 62124, Serres, Greece.
RP Kefalas, P (corresponding author), Univ Sheffield, Affiliated Coll, Dept Comp Sci, 13 Tsimiski Str, Thessaloniki 54624, Greece.
EM kefalas@city.academic.gr; eleftherakis@city.academic.gr;
   kehris@teiser.gr
RI Kehris, Evangelos/AAM-4712-2021; Eleftherakis, George/AAL-8848-2021
OI Eleftherakis, George/0000-0003-4857-4006; KEFALAS,
   PETROS/0000-0002-6846-7374
CR [Anonymous], 1985, EATCS Monographs on Theoretical Computer Science
   BALANESCU T, 1999, J UNIVERS COMPUT SCI, V5, P494
   Barnard J, 1998, INFORM SOFTWARE TECH, V40, P271, DOI 10.1016/S0950-5849(98)00053-6
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   Cowling A. J., 2000, Formal Aspects of Computing, V12, P485, DOI 10.1007/s001650070007
   EILENBERG S, 1974, AUTOMATA MACHINES LA, VA
   Eleftherakis G, 2001, Advances in signal processing and computer technologies, P321
   ELEFTHERAKIS G, 2002, AN U BUCUREST, V50, P79
   FUTATSUGI K, 1985, P 12 ACM S PRINC PRO, P52
   Gheorghe M, 2001, BIOSYSTEMS, V61, P133, DOI 10.1016/S0303-2647(01)00164-2
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   HOLCOMBE M, 1988, SOFTWARE ENG J, V3, P69, DOI 10.1049/sej.1988.0009
   HOLCOMBE M, 1998, CORRECT SYSTEMS BUIL
   Ipate F., 1998, Software Testing, Verification and Reliability, V8, P61, DOI 10.1002/(SICI)1099-1689(199806)8:2<61::AID-STVR154>3.0.CO;2-W
   IPATE F, IN PRESS ROMANIAN J
   Jones CB., 1990, SYSTEMATIC SOFTWARE
   Kapeti P, 2000, ADVANCES IN INFORMATICS, P134
   Kefalas P, 2002, LECT NOTES ARTIF INT, V2308, P461
   KEFALAS P, 2001, CYPRUS, P20
   KEFALAS P, 2000, TRCS0600 CITY LIB ST
   KEFALAS P, IN PRESS BIOSYSTEMS
   KEFALAS P, 2000, TRCS0700 CITY LIB ST
   KEFALAS P, 2000, TRCS0100 CITY LIB ST
   KEHRIS E, 2000, SYSTEMS CONTROL THEO, P163
   Spivey M., 1989, Z NOTATION REFERENCE
   WULF WA, 1981, FUNDAMENTAL STRUCTUR
   YOUNG WD, 1991, P 4 TEST AN VER S, P188
NR 28
TC 16
Z9 17
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 1
PY 2003
VL 45
IS 5
BP 269
EP 280
DI 10.1016/S0950-5849(03)00018-1
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 668KQ
UT WOS:000182290200004
DA 2024-07-18
ER

PT J
AU Postma, A
AF Postma, A
TI A method for module architecture verification and its application on a
   large component-based system
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software architecture; software maintenance; testing, analysis, and
   verification; module architecture verificatiom; relational algebra
ID ALGEBRA
AB A method for module architecture verification is described, which yields support for checking on an architectural level whether the implicit module architecture of the implementation of a system is consistent with its specified module architecture, and which facilitates achieving architecture conformance by relating architectural-level violations to the code-level entities that cause them, hence making it easier to resolve them. Module architecture conformance is needed to enable implementing and maintaining the system and reasoning about it. We describe our experience having applied the proposed method to check a representative part of the module architecture of a large industrial component-based software system. (C) 2002 Elsevier Science B.V. All rights reserved.
C1 Philips Res Labs, NL-5656 AA Eindhoven, Netherlands.
C3 Philips; Philips Research
RP Postma, A (corresponding author), Philips Res Labs, Prof Holstlaan 4 WDC-2-014, NL-5656 AA Eindhoven, Netherlands.
EM andre.postma@philips.com
CR ARECES C, 1998, P IWSSD, V9, P150
   Bass Len, 2012, SEI S SOFTW
   Carmichael I, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P134, DOI 10.1109/ICSM.1995.526535
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   EBERT J, 1998, KOBLENZ SCHRIFTEN IN
   EMERY DE, 1996, LNCS, V1088
   Feijs L, 1998, SOFTWARE PRACT EXPER, V28, P371, DOI 10.1002/(SICI)1097-024X(19980410)28:4<371::AID-SPE154>3.0.CO;2-1
   Feijs L, 1998, INT J COMPUT MATH, V70, P57, DOI 10.1080/00207169808804736
   Feijs LMG, 1999, SCI COMPUT PROGRAM, V33, P163, DOI 10.1016/S0167-6423(98)00007-0
   FEIJS LMG, 1998, COMMUN ACM, V41, P43
   FRADET P, 1999, LNCS, V1687
   GANSNER ER, 1999, SOFTWARE PRACTICE EX, P1
   GLAS A, 1998, MODULE ARCHITECTURE
   HARRIS DR, 1995, P ICSE 95
   HOLT RC, 1996, 345 CSRI U TOR
   HOLT RC, 1998, P WCRE 98 HON HAW
   KAMP M, 1996, 896 U KOBL
   Krikhaar RL, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P4, DOI 10.1109/ICSM.1997.624225
   KRIKHAAR RL, 1999, THESIS U AMSTERDAM
   Kruchten Phillip., 1995, IEEE Software, V12
   Kullbach B, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P42, DOI 10.1109/CSMR.1999.756681
   Murphy G.C., 1995, Proceedings of the 3rd ACM SIGSOFT symposium on Foundations of software engineering, P18
   PRONK BJ, 2000, P SPLC 1 DENV AUG
   ROGERSON D, 1997, COM MICROSOFTS COMPO
   ROOSEN M, 1994, RWB508RE94040 PHIL R
   SONI D, 1995, P ICSE 95
   STOREY MA, 1997, P ICSE 97, P600
   VANOMMERING RC, 1993, 12NC432227301761 PHI
NR 28
TC 23
Z9 25
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 15
PY 2003
VL 45
IS 4
BP 171
EP 194
AR PII S0950-5849(02)00193-3
DI 10.1016/S0950-5849(02)00193-3
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 653FW
UT WOS:000181425400001
DA 2024-07-18
ER

PT J
AU Zhang, CY
   Yu, TX
   Liu, B
   Xin, Y
AF Zhang, Chunyong
   Yu, Tianxiang
   Liu, Bin
   Xin, Yang
TI Vulnerability detection based on federated learning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Vulnerability detection; Code property graph; Graph neural network;
   Horizontal federated learning; Data security
AB Context: Detecting potential vulnerabilities is a key step in defending against network attacks. However, manual detection is time-consuming and requires expertise. Therefore, vulnerability detection must require automated techniques. Objective: Vulnerability detection methods based on deep learning need to rely on sufficient vulnerable code samples. However, the problem of code islands has not been extensively researched. For example, in the case of multi-party vulnerability data, how to securely combine multi-party data to improve vulnerability detection performance. From the perspectives of data augmentation and data security, we propose a vulnerability detection framework based on federated learning (VDBFL). VDBFL is a new model for vulnerability code detection that combines multi-party data. Method: Firstly, VDBFL utilizes the code property graph as a code representation. The code property graph contains various semantic dependencies of the code. Secondly, VDBFL utilizes graph neural networks and convolutional neural networks as the code feature extractor. VDBFL utilizes the jump-structured graph attention network to aggregate node information of important neighbors. Finally, VDBFL utilizes horizontal federated learning to train a local vulnerability detection model for the client. Result: In the real world, VDBFL improves F1-Score by 37.4% compared to the vulnerability detection method Reveal. Among the 5401 vulnerability samples, VDBFL detected 11.8 times more vulnerabilities than Reveal. Conclusion: Under different datasets, VDBFL has shown better performance than advanced vulnerability detection methods in multiple metrics. In addition, the federated learning stage of VDBFL can be expanded on top of the feature extraction stage of any vulnerable detection method.
C1 [Zhang, Chunyong; Liu, Bin; Xin, Yang] Beijing Univ Posts & Telecommun, Beijing, Peoples R China.
   [Yu, Tianxiang; Liu, Bin; Xin, Yang] Natl Engn Lab fo DBR, Beijing, Peoples R China.
   [Liu, Bin] Anhui Sci & Technol Univ, Coll Informat & Network Engn, Bengbu, Peoples R China.
C3 Beijing University of Posts & Telecommunications; Anhui Science &
   Technology University
RP Xin, Y (corresponding author), Beijing Univ Posts & Telecommun, Beijing, Peoples R China.; Xin, Y (corresponding author), Natl Engn Lab fo DBR, Beijing, Peoples R China.
EM yangxin@bupt.edu.cn
RI XIN, WANG/KGK-5385-2024; Zhang, xiaohui/KEE-5747-2024; liu,
   feng/KCL-0778-2024; Liu, Zhiyuan/KDP-2606-2024
FU National Natural Science Foundation of China [62233003]; Anhui
   Provincial Department of Education's 2021 University Scientific Research
   Key Project [KJ2021A0897]
FX This paper was funded by the National Natural Science Foundation of
   China 62233003 and the Anhui Provincial Department of Education's 2021
   University Scientific Research Key Project KJ2021A0897.
CR AbdulRahman S, 2021, IEEE INTERNET THINGS, V8, P5476, DOI 10.1109/JIOT.2020.3030072
   Aloraini B, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110427
   An WY, 2020, IEEE INT SYMP PARAL, P337, DOI 10.1109/ISPA-BDCloud-SocialCom-SustainCom51426.2020.00068
   Barua S, 2014, IEEE T KNOWL DATA EN, V26, P405, DOI 10.1109/TKDE.2012.232
   Ben-Nun T., 2018, Adv. Neural Inf. Process. Syst., V31, P3588
   bugs.chromium, About us
   Cao SC, 2021, INFORM SOFTWARE TECH, V136, DOI 10.1016/j.infsof.2021.106576
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Cheng X, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P519, DOI 10.1145/3533767.3534371
   Cheng X, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3436877
   Cheng Xiao, 2022, IEEE Trans. Dependable Secure Comput, P1
   Chess B., 2013, Rough auditing tool for security
   docs.dgl, About us
   Duan X, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4665
   Fast Forward Moving Pictures Experts Group (FFMPEG), about us
   Gan ST, 2018, P IEEE S SECUR PRIV, P679, DOI 10.1109/SP.2018.00040
   Ghaffarian SM, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092566
   Arivazhagan MG, 2019, Arxiv, DOI arXiv:1912.00818
   github, about us
   Hanzely F, 2021, Arxiv, DOI arXiv:2002.05516
   Hin D., 2022, arXiv
   Humphries A., 2019, arXiv
   Jang-Jaccard J, 2014, J COMPUT SYST SCI, V80, P973, DOI 10.1016/j.jcss.2014.02.005
   Jiang YH, 2023, Arxiv, DOI arXiv:1909.12488
   Le THM, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3529757
   Li M, 2021, LECT NOTES COMPUT SC, V12918, P243, DOI 10.1007/978-3-030-86890-1_14
   Li Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P292, DOI 10.1145/3468264.3468597
   Li YJ, 2017, Arxiv, DOI arXiv:1511.05493
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, Arxiv, DOI arXiv:1801.01681
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Lin GJ, 2018, IEEE T IND INFORM, V14, P3289, DOI 10.1109/TII.2018.2821768
   Liu BC, 2012, INT C MULTIMED INFO, P152, DOI 10.1109/MINES.2012.202
   Mao CZ, 2019, ADV NEUR IN, V32
   McMahan H. B., 2016, arXiv preprint arXiv:1602.05629
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Mitra S, 1997, INT TEST CONF P, P714, DOI 10.1109/TEST.1997.639684
   Moghadasi MN, 2020, IEEE INT CONF BIG DA, P4672, DOI 10.1109/BigData50022.2020.9378337
   Pennington J, GLOVE GLOBAL VECTORS
   Qemu, About us
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Ramos DA, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P49
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Scikit-learn, US
   security-tracker.debian, About us
   Sutton M., 2007, Fuzzing: brute force vulnerability discovery
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Van Hove Patrick L., 1986, Technical Report
   Nguyen VA, 2022, PROC IEEE ACM INT C, P178, DOI [10.1145/3510454.3516865, 10.1109/ICSE-Companion55297.2022.9793807]
   Veličkovic P, 2018, Arxiv, DOI arXiv:1710.10903
   Wang HT, 2021, IEEE T INF FOREN SEC, V16, P1943, DOI 10.1109/TIFS.2020.3044773
   Wu YM, 2022, PROC INT CONF SOFTW, P2365, DOI 10.1145/3510003.3510229
   Xie T, 2009, I C DEPEND SYS NETWO, P359, DOI 10.1109/DSN.2009.5270315
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Yang Q, 2019, ACM T INTEL SYST TEC, V10, DOI 10.1145/3298981
   Ye GX, 2020, INT CONFER PARA, P111, DOI 10.1145/3410463.3414670
   Zeng M, 2016, 2016 IEEE INTERNATIONAL CONFERENCE OF ONLINE ANALYSIS AND COMPUTING SCIENCE (ICOACS), P225, DOI 10.1109/ICOACS.2016.7563084
   Zhang C, 2021, KNOWL-BASED SYST, V216, DOI 10.1016/j.knosys.2021.106775
   Zheng WN, 2021, Arxiv, DOI arXiv:2109.02527
   Zheng YH, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P111, DOI 10.1109/ICSE-SEIP52600.2021.00020
   Zhou YQ, 2019, ADV NEUR IN, V32
   Zou D., 2022, IEEE T DEPENDABLE SE
   Zou DQ, 2021, IEEE T DEPEND SECURE, V18, P2224, DOI 10.1109/TDSC.2019.2942930
NR 64
TC 0
Z9 0
U1 12
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2024
VL 167
AR 107371
DI 10.1016/j.infsof.2023.107371
EA NOV 2023
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CM4J9
UT WOS:001125652000001
DA 2024-07-18
ER

PT J
AU Chembakottu, B
   Li, H
   Khomh, F
AF Chembakottu, Bhagya
   Li, Heng
   Khomh, Foutse
TI A large-scale exploratory study of android sports apps in the google
   play store
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mobile apps; Sports apps; User review; Topic modeling; Sentimental
   analysis
AB Context: Prior studies on mobile app analysis often analyze apps across different categories or focus on a small set of apps within a category. These studies either provide general insights for an entire app store which consists of millions of apps, or provide specific insights for a small set of apps. However, a single app category can often contain tens of thousands to hundreds of thousands of apps. For example, according to AppBrain, there are 46,625 apps in the "Sports" category of Google Play apps. Analyzing such a targeted category of apps can provide more specific insights than analyzing apps across categories while still benefiting many app developers interested in the category.Objective: This work aims to study a large number of apps from a single category (i.e., the sports category). Our work can provide two folds contributions: 1) identifying insights that are specific to tens of thousands of sports apps, and 2) providing empirical evidence on the benefits of analyzing apps in a specific category.Method: We perform an empirical study on over two thousand sports apps in the Google Play Store. We study the characteristics of these apps (e.g., their targeted sports types and main functionalities) through manual analysis, the topics in the user review through topic modeling, as well as the aspects that contribute to the negative opinions of users through analysis of user ratings and sentiment. Results: We identified sports apps that cover 16 sports types (e.g., Football, Cricket, Baseball) and 15 main functionalities (e.g., Betting, Betting Tips, Training, Tracking). We also extracted 14 topics from the user reviews, among which three are specific to sports apps (accuracy of prediction, up-to-dateness, and precision of tools). Finally, we observed that users are mainly complaining about the advertisements and quality (e.g., bugs, content quality, streaming quality) of sports apps.Conclusion: It is concluded that analyzing a targeted category of apps (e.g., sports apps) can provide more specific insights than analyzing apps across different categories while still being relevant for a large number (e.g., tens of thousands) of apps. Besides, as a rapid-growing and competitive market, sports apps provide rich opportunities for future research, for example, to study the integration of data science or machine learning techniques in software applications or to study the factors that influence the competitiveness of the apps.
C1 [Chembakottu, Bhagya; Li, Heng; Khomh, Foutse] Polytech Montreal, Dept Comp & Software Engn, Montreal, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Chembakottu, B (corresponding author), Polytech Montreal, Dept Comp & Software Engn, Montreal, PQ, Canada.
EM bhagya.c@polymtl.ca
OI Li, Heng/0000-0001-5441-6763
CR Akef I., Univ. Ark. Little Rock Law J., DOI DOI 10.13140/RG2(19179)(2016)39205
   Akoglu H, 2018, TURK J EMERG MED, V18, P91, DOI 10.1016/j.tjem.2018.08.001
   Al-Subaihin AA, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962600
   Albalawi R, 2020, FRONT ARTIF INTELL, V3, DOI 10.3389/frai.2020.00042
   Annie A, 2021, State of mobile 2021
   Appbrain, Google play ranking: the top free sports apps in the United States
   Appbrain, Google Play category statistics table
   Borg A, 2020, EXPERT SYST APPL, V162, DOI 10.1016/j.eswa.2020.113746
   Brown HM, 2020, HEALTH PROMOT J AUST, V31, P340, DOI 10.1002/hpja.270
   Campos R, 2020, INFORM SCIENCES, V509, P257, DOI 10.1016/j.ins.2019.09.013
   Campos R, 2018, LECT NOTES COMPUT SC, V10772, P806, DOI 10.1007/978-3-319-76941-7_80
   Cen L., 2014, PIR SIGIR
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chen QY, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3434280
   Clarke R, 2018, COMPUT LAW SECUR REV, V34, P467, DOI 10.1016/j.clsr.2017.11.002
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Dallinga J, 2018, JMIR MHEALTH UHEALTH, V6, DOI 10.2196/mhealth.9459
   data, 2021, The state of mobile
   Di Sorbo A, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2316
   Di Sorbo A, 2017, PROC IEEE ACM INT C, P55, DOI 10.1109/ICSE-C.2017.5
   Elbagir Shihab, 2019, International MultiConference of Engineers and Computer Scientists 2019 (IMECS 2019). Proceedings. Lecture Notes in Engineering and Computer Science, P12
   Frie K, 2017, JMIR MHEALTH UHEALTH, V5, DOI 10.2196/mhealth.8791
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Gao CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P48, DOI 10.1145/3180155.3180218
   Genesys, 2021, Genesys executive summary
   google, Google my business help-set up google my business
   google, Categorize your app to improve discoverability
   Grand view research, 2021, sports technology market size, share trends analysis report by technology (devices, smart stadium), by sports (basketball, soccer, tennis, golf), by region (APAC, Europe), and segment forecasts
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Hadi MA, 2020, PROC IEEE INT CONF S, P593, DOI 10.1109/ICSME46990.2020.00062
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hassan S., 2022, arXiv
   Hassan S, 2020, IEEE T SOFTWARE ENG, V46, P773, DOI 10.1109/TSE.2018.2869395
   Honnibal Matthew, 2017, spaCy: Industrialstrength natural language processing in Python
   Hoon L., 2012, AUSTR COMP HUM INT C, P245
   Hutto C., 2014, P INT AAAI C WEB SOC, V8, P216, DOI [DOI 10.1609/ICWSM.V8I1.14550, 10.1609/icwsm.v8i1.14550]
   Kalaichelavan K, 2020, PROCEDIA COMPUT SCI, V170, P547, DOI 10.1016/j.procs.2020.03.124
   Karagkiozidou M., 2018, STRATEGIC INNOVATIVE, P479
   Malaga AI Foundation, Fake google play reviews and review bombing
   Malavolta I, 2015, IEEE INT CONF MO, P25, DOI [10.1109/MobServ.2015.14, 10.1109/MS.2015.14]
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   McCallum A.K., 2002, MALLET MACHINE LEARN
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1067, DOI 10.1007/s10664-015-9375-7
   Vu PM, 2015, Arxiv, DOI arXiv:1505.04657
   Modave F, 2015, JMIR MHEALTH UHEALTH, V3, DOI 10.2196/mhealth.4669
   Morgulev E, 2018, INT J DATA SCI ANAL, V5, P213, DOI 10.1007/s41060-017-0093-7
   Muntaner-Mas A, 2019, SPORTS MED, V49, P587, DOI 10.1007/s40279-019-01084-y
   Noei E, 2021, IEEE T SOFTWARE ENG, V47, P367, DOI 10.1109/TSE.2019.2893171
   O'Callaghan D, 2015, EXPERT SYST APPL, V42, P5645, DOI 10.1016/j.eswa.2015.02.055
   Paganini S, 2021, JMIR MHEALTH UHEALTH, V9, DOI 10.2196/22587
   Platzer Elisabeth, 2011, 22nd Central European Conference on Information and Intelligent Systems. Proceedings, P309
   Rehurek R., Gensim documentation
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Schobel Johannes, 2013, WEBIST 2013. 9th International Conference on Web Information Systems and Technologies. Proceedings, P509
   Shen P., 2020, Acad. J. Bus. Manag., V2
   statista, Sports recreation-statistics facts
   Syed S, 2017, PR INT CONF DATA SC, P165, DOI 10.1109/DSAA.2017.61
   Tymann K., 2019, LWDA, P178
   Vasa R., 2012, AUSTR COMP HUM INT C, P241, DOI DOI 10.1145/2414536.2414577
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Weitzel L, 2016, STUD COMPUT INTELL, V639, P49, DOI 10.1007/978-3-319-30319-2_3
   Xing W, 2006, SIXTH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P178
   Zecevic M, 2021, J MED INTERNET RES, V23, DOI 10.2196/25160
NR 65
TC 0
Z9 0
U1 2
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107321
DI 10.1016/j.infsof.2023.107321
EA SEP 2023
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA T2KC8
UT WOS:001076312600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pizard, S
   Acerenza, F
   Vallespir, D
   Kitchenham, B
AF Pizard, Sebastian
   Acerenza, Fernando
   Vallespir, Diego
   Kitchenham, Barbara
TI Assessing attitudes towards evidence-based software engineering in a
   government agency
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Evidence-based software engineering; Evidence-based practice; Field
   investigation; Government agency; Focus group; Follow-up study
ID REPORTING QUALITATIVE RESEARCH; SYSTEMATIC REVIEWS; SOCIAL-WORKERS;
   KNOWLEDGE; BARRIERS; IMPACT
AB Context: Evidence-based practice (EBP) has allowed several disciplines to become more mature by emphasizing the use of evidence from well-designed and well-conducted research in decision-making. Its application in SE, Evidence-based software engineering (EBSE) can help to bridge the gap between academia and industry by bringing together academic rigor and research of practical relevance. To achieve this, it seems necessary to improve its adoption.Objective: We sought both to study the attitudes towards EBSE of stakeholders working in a government agency (GA) and to assess whether knowledge of EBSE would impact their working practices. Method: We conducted a multi-stage field investigation in an Uruguayan national GA that is responsible for digital policies. First, we organized an EBSE awareness lecture and we collected and analyzed participants' perceptions of the value and limitations of EBSE. Sixteen months later, in a second stage, we contacted the agency and asked participants whether they had made use of the information about EBSE we presented to them.Results: Initially, participants reported that EBSE seemed useful for tackling challenging problems and, in particular, considered its use appropriate given the agency's responsibilities. Perceived barriers to EBSE adoption were the need for institutional support, the lack of government practice reports, inadequate skills or motivation, the cost of conducting systematic reviews, and the lack of evidence about emerging issues. In the follow-up survey, although the participants were not undertaking systematic reviews themselves, many reported improvements in how they searched for and evaluated information to support their work.Conclusion: Our study presents some insights to better understand EBSE adoption. With the exception of GA-specific issues, perceived value and barriers to adoption were consistent with those reported in software engineering and other disciplines. Our follow-up study confirms the potential value of evidence in the context of IT regulatory and government bodies.
C1 [Pizard, Sebastian; Acerenza, Fernando; Vallespir, Diego] Univ Republica, Sch Engn, Montevideo, Uruguay.
   [Kitchenham, Barbara] Keele Univ, Sch Comp & Math, Keele, England.
C3 Universidad de la Republica, Uruguay; Keele University
RP Pizard, S (corresponding author), Univ Republica, Sch Engn, Montevideo, Uruguay.
EM spizard@fing.edu.uy
RI Pizard, Sebastián/HTP-0759-2023
OI Pizard, Sebastián/0000-0002-5535-8646; Kitchenham,
   Barbara/0000-0002-6134-8460
CR Adams J, 2016, SYST REV-LONDON, V5, DOI 10.1186/s13643-016-0337-y
   AGESIC, 2021, NOT CREAT HIST EV AG
   AGESIC, 2014, WEB QUAL ACC ASS SPA
   AGESIC, 2015, DIG GOV STRAT 2020
   Aglen B, 2016, NURS EDUC TODAY, V36, P255, DOI 10.1016/j.nedt.2015.08.025
   [Anonymous], 2005, Technical report CMU/SEI-2005-HB- 004
   [Anonymous], 2020, Evidence-based practice center systematic review protocol project title: Malnutrition in hospitalized adults
   Birt L, 2016, QUAL HEALTH RES, V26, P1802, DOI 10.1177/1049732316654870
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brereton P, 2011, IEEE T EDUC, V54, P558, DOI 10.1109/TE.2010.2090662
   Budgen D, 2020, E-INFORMATICA, V14, P7, DOI 10.37190/e-Inf200101
   Budgen D, 2018, INFORM SOFTWARE TECH, V94, P234, DOI 10.1016/j.infsof.2017.10.012
   Bunn F, 2015, HEALTH TECHNOL ASSES, V19, P1, DOI 10.3310/hta19280
   Bunn F, 2011, EVID POLICY, V7, P403, DOI 10.1332/17442641IX603434
   Cartaxo B., 2016, INT S EMP SOFTW ENG, p57:1
   Cartaxo B., 2020, Rapid Reviews in Software Engineering, P357
   Cartaxo Bruno, 2018, 22 INT C EV ASS SOFT, P24, DOI DOI 10.1145/3210459.3210462
   Ferlie E., 2005, Knowledge to action: Evidence-based health care in context, P182, DOI DOI 10.1093/ACPROF:OSO/9780199259014.003.0009
   Francea B, 2017, INT J SCI EDUC PART, V7, P146, DOI 10.1080/21548455.2015.1106025
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916008
   Hannes K., 2005, BMC Family Practice, V6, P37, DOI DOI 10.1186/1471-2296-6-37]
   Hannes K, 2008, J DENT EDUC, V72, P736
   Hannes K, 2010, COMMUNITY MENT HLT J, V46, P423, DOI 10.1007/s10597-009-9260-1
   Instituto Nacional de Evaluacion Educativa (INEEd),, 2020, TOT PUBL SPEND CONST
   Kamei Fernando, 2022, Zenodo, DOI 10.5281/ZENODO.6780520
   Kamei F, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106609
   Kasoju A, 2013, INFORM SOFTWARE TECH, V55, P1237, DOI 10.1016/j.infsof.2013.01.005
   Kim M, 2019, J SOC WORK, V19, P769, DOI 10.1177/1468017318784077
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2023, IEEE T SOFTWARE ENG, V49, P872, DOI 10.1109/TSE.2022.3165938
   Kitchenham B, 2023, IEEE T SOFTWARE ENG, V49, P1273, DOI 10.1109/TSE.2022.3174092
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kontio J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P271
   Kontio J., 2008, Guide to Advanced Empirical Software Engineering, P93, DOI [DOI 10.1007/978-1-84800-044-5_4, 10.1007/978-1-84800-044-54, DOI 10.1007/978-1-84800-044-54]
   Le Goues C, 2018, IEEE SOFTWARE, V35, P50, DOI 10.1109/MS.2018.3571235
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Lewowski T., 2022, Develop. Informat. Knowl. Manage. Bus. Appl, V3, P285
   Lomas J, 2007, BRIT MED J, V334, P129, DOI 10.1136/bmj.39038.593380.AE
   Maynard RA, 2018, ANN AM ACAD POLIT SS, V678, P134, DOI 10.1177/0002716218768742
   Milano G, 2020, COMMUN ACM, V63, P53, DOI 10.1145/3422826
   Morgan DL, 1996, ANNU REV SOCIOL, V22, P129, DOI 10.1146/annurev.soc.22.1.129
   O'Brien BC, 2014, ACAD MED, V89, P1245, DOI 10.1097/ACM.0000000000000388
   Pizard S., 2022, SUPPLEMENTARY MAT PA, DOI [10.5281/zenodo.6391579, DOI 10.5281/ZENODO.6391579]
   Pizard S, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET 2022), P1, DOI 10.1109/ICSE-SEET55299.2022.9794238
   Pizard S, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09953-9
   Rainer A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2197
   Rainer A, 2017, INFORM SOFTWARE TECH, V87, P62, DOI 10.1016/j.infsof.2017.01.011
   Rogers E.M., 2003, DIFFUSION INNOVATION
   Sabatino Carlos., 2017, URUGUAYS DIGITAL DEV
   Sadeghi-Bazargani H, 2014, J EVAL CLIN PRACT, V20, P793, DOI 10.1111/jep.12222
   Scurlock-Evans L, 2015, J EVID-INFORM SOC WO, V12, P369, DOI 10.1080/15433714.2013.853014
   Scurlock-Evans L, 2014, PHYSIOTHERAPY, V100, P208, DOI 10.1016/j.physio.2014.03.001
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Silverman David., 2001, Interpreting Qualitative Data: Methods for Analyzing Talk, Text, and Interaction, V2nd
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Tacia L., 2015, Clinical Nursing Studies, V3, P90, DOI DOI 10.5430/CNS.V3N2P90
   The World Bank, 2021, EXP CURR LCU UR
   Tong A, 2007, INT J QUAL HEALTH C, V19, P349, DOI 10.1093/intqhc/mzm042
   Torchiano M, 2017, IEEE-ACM INT WKSP CO, P33, DOI 10.1109/CESI.2017.5
   Unterkalmsteiner M, 2018, IEEE SOFTWARE, V35, P53, DOI 10.1109/MS.2018.227110005
   Upton D, 2014, BRIT J OCCUP THER, V77, P24, DOI 10.4276/030802214X13887685335544
   Williams Ashley, 2022, EASE 2022: The International Conference on Evaluation and Assessment in Software Engineering 2022, P1, DOI 10.1145/3530019.3530020
   Wohlin C, 2021, INFORM SOFTWARE TECH, V134, DOI 10.1016/j.infsof.2021.106555
   Zambrano E., 2019, REV IBER SIST TECNOL, VE17, P985
NR 65
TC 1
Z9 1
U1 1
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2023
VL 154
AR 107101
DI 10.1016/j.infsof.2022.107101
EA NOV 2022
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7D9DL
UT WOS:000900782600001
DA 2024-07-18
ER

PT J
AU Qamar, KA
   Sülün, E
   Tüzün, E
AF Qamar, Khushbakht Ali
   Sulun, Emre
   Tuzun, Eray
TI Taxonomy of bug tracking process smells: Perceptions of practitioners
   and an empirical analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE The bug tracking system; Process mining; Conformance checking;
   Anti-patterns; Bug tracking smells; Process smell
ID NATURAL-LANGUAGE; PREDICTION; SEVERITY
AB Context: While there is no consensus on a formally specified bug tracking process, some certain rules and best practices for an optimal bug tracking process are accepted by many companies and open-source software (OSS) projects. Despite slight variations between different platforms, the primary aim of all these rules and practices is to perform a more efficient bug tracking process. Practitioners' non-compliance with the best practices not only impedes the benefits of the bug tracking process but also negatively affects the other phases of software development life cycle.
   Objective: The goal of this study is to gain a better knowledge of the bad practices that occur during the bug tracking process (bug tracking process smells) and to perform quantitative analysis to show that these process smells exist in bug tracking systems. Moreover, we want to know the perception of software practitioners related to these process smells and also observe the impact of process smells on the bug tracking process.
   Methods: Based on the results of a multivocal literature review, we analyzed 60 sources in academic and gray literature and propose a taxonomy of 12 bad practices in the bug tracking process. To quantitatively analyze these process smells, we inspected bug reports collected from eight projects which use Jira, Bugzilla, and GitHub Issues. To get an idea about the perception of practitioners about the taxonomy of bug tracking process smells, we conducted a targeted survey with 30 software practitioners. Moreover, we statistically analyzed the impact of bug tracking process smells on the resolution time and reopening count of bugs.
   Results: We observed from our empirical results that a considerable amount of bug tracking process smells exist in all projects and some of the process smell categories have statistically significant impacts on quality and speed. Survey results shows that the majority of software practitioners agree with the proposed taxonomy of BT process smells.
   Conclusion: The statistical analysis reveals that bug tracking process smells have an impact on OSS projects. The proposed taxonomy may serve as a foundation for best practices and tool support for detecting and avoiding bug tracking process smells.
C1 [Qamar, Khushbakht Ali; Sulun, Emre; Tuzun, Eray] Bilkent Univ, Dept Comp Engn, Ankara, Turkey.
C3 Ihsan Dogramaci Bilkent University
RP Tüzün, E (corresponding author), Bilkent Univ, Dept Comp Engn, Ankara, Turkey.
EM ali.qamar@bilkent.edu.tr; emre.sulun@bilkent.edu.tr;
   eraytuzun@cs.bilkent.edu.tr
RI Sülün, Emre/ABC-4258-2020; Tuzun, Eray/AAD-7282-2021
OI Sülün, Emre/0000-0001-9513-1967; Tuzun, Eray/0000-0002-5550-7816
FU Scientific and Technological Research Council of Turkey (TUBITAK) [1505,
   5200078]
FX This study was supported by The Scientific and Technological Research
   Council of Turkey (TUBITAK) 1505 program. Project Number: 5200078.
CR 360Logica, 2012, WRITE GOOD BUG REPOR
   Admin S., 2014, 10 TIPS WRITING EFFE
   Aggarwal K, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1821
   Ahsan SN, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P216, DOI 10.1109/ICSEA.2009.92
   Akila V, 2015, PROCEDIA COMPUT SCI, V48, P114, DOI 10.1016/j.procs.2015.04.159
   Aljarah I., 2011, P 7 INT C PREDICTIVE, P1, DOI DOI 10.1145/2020390.2020402
   AnalyseIT247, 2016, REOP ISS THEY HAV BE
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2015, DIABETES CARE, V38, pS1, DOI 10.2337/dc15-S001
   [Anonymous], 2002, ACM SIGSOFT SOFTW EN, DOI DOI 10.1145/571681.571686
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   [Anonymous], 2007, 4 INT WORKSHOP MININ
   [Anonymous], 2020, Instagram
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Apache, OPENWHISK
   Arokiam J, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P17, DOI 10.1145/3377816.3381738
   Axosoft, 2020, BUG TRACK BEST PRACT
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bissyandé TF, 2013, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2013.19
   Bridges J., 2019, 8 STEPS BETTER ISSUE
   Canfora G., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1767, DOI 10.1145/1141277.1141693
   Christensen M., 2017, TECH REP
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   D'Ambros M, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P113, DOI 10.1109/VISSOF.2007.4290709
   Di Penta M, 2017, PROC IEEE ACM INT C, P499, DOI 10.1109/ICSE-C.2017.163
   Dit B., 2008, Proceedings of the 2008 International Workshop on Recommendation Systems for Software Engineering - RSSE'08, (New York, New York, USA), P47
   Dmytriiev E., 2016, BEST PRACTICES EFFEC
   Dogan E, 2022, INFORM SOFTWARE TECH, V142, DOI 10.1016/j.infsof.2021.106737
   Dueñas S, 2018, PROC IEEE ACM INT C, P1, DOI 10.1145/3183440.3183475
   Elena K., 2016, WRITE BUG REPORT
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   Floridi L, 2016, PHILOS T R SOC A, V374, DOI 10.1098/rsta.2016.0112
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Glass R.L., 2006, ONLINE ACCESS EBSCO
   Gupta M, 2014, MSR, P122
   Gupta M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P658, DOI 10.1145/2591062.2591080
   Gupta M, 2014, PROCEEDINGS OF THE 7TH INDIA SOFTWARE ENGINEERING CONFERENCE 2014, ISEC '14, DOI 10.1145/2590748.2590749
   Halverson C.A., 2006, Proceedings of the Conference on Computer Supported Cooperative Work, CSCW '06, P39
   Hill S., 2015, How to write a good bug report?
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Jindal R, 2017, INT J SYST ASSUR ENG, V8, P334, DOI 10.1007/s13198-016-0438-y
   Jonsson L., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P437, DOI 10.1109/ICST.2012.56
   Jonsson L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1361, DOI 10.1109/ICSE.2013.6606717
   Kanwal J, 2012, J COMPUT SCI TECH-CH, V27, P397, DOI 10.1007/s11390-012-1230-3
   Kaushik N, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P70, DOI 10.1109/ICST.2013.40
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kim S, 2007, P 6 JOINT M EUR SOFT, P45, DOI DOI 10.1145/1287624.1287633
   Kim S., 2007, 4 INT WORKSHOP MININ, P27, DOI DOI 10.1109/MSR.2007.26
   Kitchenham B., 2007, Joint Report
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Knab P, 2010, LECT NOTES COMPUT SC, V6195, P222, DOI 10.1007/978-3-642-14347-2_20
   Ko AJ, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P127
   Kremenek T., 2003, LECT NOTES COMPUTER, V2694, P295, DOI [10.1007/3-540-44898-5_16, DOI 10.1007/3-540-44898-5_16]
   Kualitee, 2019, GOOD BAD UGLY BUG BU
   Kucuk B, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2446
   L.v. Belle, WRITE BUG REPORT WIL
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lamkanfi A, 2011, EUR CON SFTWR MTNCE, P249, DOI 10.1109/CSMR.2011.31
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Lee D., 2020, S CHINA MORNING POST
   Liu C, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P282, DOI 10.1109/ICST.2013.24
   Lotufo R, 2015, EMPIR SOFTW ENG, V20, P516, DOI 10.1007/s10664-014-9311-2
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   LuminosLabs, 2020, WRITING GOOD BUG REP
   Mani S., 2012, P ACM SIGSOFT 20 INT, P1, DOI DOI 10.1145/2393596.2393607
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Mitrev M., 2020, ANATOMY GOOD BUG REP
   Musescore, 2015, WRIT GOOD BUG REP ST
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Qamar KA, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P138, DOI 10.1109/SEAA53835.2021.00026
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Rastkar Sarah, 2010, P 32 ACM IEEE INT C, V1, P505, DOI DOI 10.1145/1806799.1806872
   Reis C., 2002, Proceedings of the Open Source Software Development Workshop, V1, P1
   Ricklin M., 2009, DEFECT TRACKING BEST
   Rocha H, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P43, DOI 10.1145/2973839.2973844
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Sajedi-Badashian A, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2250
   Sedano T, 2017, PROC INT CONF SOFTW, P130, DOI 10.1109/ICSE.2017.20
   Shihab E., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P249, DOI 10.1109/WCRE.2010.36
   Somasundaram K., 2012, Proceedings of the 5th India Software Engineering Conference, ISEC '12, P125, DOI DOI 10.1145/2134254.2134276
   Tamrawi A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P884, DOI 10.1145/1985793.1985934
   Thought Coders, 2020, BEST PRACT DEF REP T
   Valdivia-Garcia H, 2018, J SYST SOFTWARE, V143, P44, DOI 10.1016/j.jss.2018.03.053
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Xia X, 2015, AUTOMAT SOFTW ENG, V22, P75, DOI 10.1007/s10515-014-0162-2
   Xia X, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P174, DOI 10.1109/CSMR-WCRE.2014.6747167
   Zhang T, 2016, J SYST SOFTWARE, V117, P166, DOI 10.1016/j.jss.2016.02.034
   Zhang T, 2016, COMPUT J, V59, P741, DOI 10.1093/comjnl/bxv114
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
   Zimmermann T, 2009, PROC INT CONF SOFTW, P247, DOI 10.1109/ICSE-COMPANION.2009.5070993
NR 96
TC 0
Z9 0
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2022
VL 150
AR 106972
DI 10.1016/j.infsof.2022.106972
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2U8GD
UT WOS:000823392100005
DA 2024-07-18
ER

PT J
AU Stray, V
   Hoda, R
   Paasivaara, M
   Lenarduzzi, V
   Mendez, D
AF Stray, Viktoria
   Hoda, Rashina
   Paasivaara, Maria
   Lenarduzzi, Valentina
   Mendez, Daniel
TI Theories in Agile Software Development: Past, Present, and Future
   Introduction to the XP 2020 Special Section
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE agile software development; theories; grounded theory; review
ID PRODUCT OWNER; TRANSFORMATION; COORDINATION; CHALLENGES
AB Over the last two decades, agile software development has gained popularity among software engineering re-searchers and practitioners. However, the development and use of theories in agile research remain relatively low. While analyzing publications on agile software development in the Scopus database from the last decade, we found that only 7% of the papers used or developed a theory. This trend seems stable. However, it is promising that most theory-centric studies use or propose theories to address cognitive and behavioral aspects of people working in agile development. We argue that these aspects build fundamental pillars in agile software devel-opment. In this special section, we introduce extended versions of four papers selected from the XP2020 Con-ference. These papers make valuable contributions to aspects of learning and behavior in agile software development. We encourage researchers to be more theory-centric in their future empirical studies of agile methods and practices by familiarizing themselves with existing theories and applying and developing theories. This way, they can contribute to a reliable, evidence-based body of knowledge in our community.
C1 [Stray, Viktoria] Univ Oslo, Gaustadalleen 23 B, N-0373 Oslo, Norway.
   [Stray, Viktoria] SINTEF Digital, Strindvegen 4, N-7034 Trondheim, Norway.
   [Hoda, Rashina] Monash Univ, Wellington Rd, Melbourne, Vic 3800, Australia.
   [Paasivaara, Maria] LUT Univ, Mukkulankatu, Finland.
   [Lenarduzzi, Valentina] Univ Oulu, Pentti Kaiteran katu 1, Oulu 90014, Finland.
   [Mendez, Daniel] Blekinge Inst Technol & Fortiss GmbH, Valhallavagen 1, S-37179 Karlskrona, Sweden.
C3 University of Oslo; SINTEF; Monash University; University of Oulu
RP Stray, V (corresponding author), Univ Oslo, Gaustadalleen 23 B, N-0373 Oslo, Norway.; Stray, V (corresponding author), SINTEF Digital, Strindvegen 4, N-7034 Trondheim, Norway.
RI Mendez, Daniel/ABA-4579-2021; Stray, Viktoria/E-9563-2016
OI Mendez, Daniel/0000-0003-0619-6027; Stray, Viktoria/0000-0002-6032-2074
CR [Anonymous], 1991, PSYCHOL PERSONAL CON
   ARGYRIS C, 1977, HARVARD BUS REV, V55, P115
   Bass JM, 2018, PROC IEEE ACM INT C, P123, DOI 10.1145/3183440.3195066
   Bauer T.N., 2011, ORG SOCIALIZATION EF
   Berntzen M, 2019, LECT NOTES BUS INF P, V355, P121, DOI 10.1007/978-3-030-19034-7_8
   Bick S, 2018, IEEE T SOFTWARE ENG, V44, P932, DOI 10.1109/TSE.2017.2730870
   Bider I, 2016, INF SYST E-BUS MANAG, V14, P693, DOI 10.1007/s10257-014-0256-1
   CANNONBOWERS JA, 1993, INDIVIDUAL AND GROUP DECISION MAKING, P221
   Cao L, 2013, EUR J INFORM SYST, V22, P191, DOI 10.1057/ejis.2012.9
   DESANCTIS G, 1994, ORGAN SCI, V5, P121, DOI 10.1287/orsc.5.2.121
   Dorairaj Siva, 2012, Proceedings of the 2012 Agile Conference, P64, DOI 10.1109/Agile.2012.17
   Drury-Grogan ML, 2021, PROJ MANAG J, V52, P127, DOI 10.1177/8756972820960301
   Easterby-Smith M., 2011, Handbook of Organizational Learning and Knowledge Management
   Erdogmus H, 2018, IEEE SOFTWARE, V35, P20, DOI 10.1109/MS.2018.3571240
   Fernández DM, 2019, J SYST SOFTWARE, V148, P170, DOI 10.1016/j.jss.2018.11.019
   Fiore S.M., 2004, Why We Need Team Cognition
   Gittell J.H., 2006, RELATIONAL PERSPECTI, P74, DOI DOI 10.4337/9781781950548.00011
   Goodwin Brian., 2001, LEOPARD CHANGED ITS
   Gregory P, 2022, INFORM SOFTWARE TECH, V143, P1, DOI 10.1016/j.infsof.2021.106792
   Hasnain E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P117, DOI 10.1109/CHASE.2013.6614745
   Hoda R, 2022, IEEE T SOFTWARE ENG, V48, P3808, DOI 10.1109/TSE.2021.3106280
   Hoda R, 2016, J SYST SOFTWARE, V117, P245, DOI 10.1016/j.jss.2016.02.049
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Masood Z, 2022, IEEE T SOFTWARE ENG, V48, P1579, DOI 10.1109/TSE.2020.3025317
   Melegati J, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106807
   Moe NB, 2013, LECT NOTES BUS INF P, V149, P76
   NONAKA I, 1994, ORGAN SCI, V5, P14, DOI 10.1287/orsc.5.1.14
   Paterek P, 2017, PROC EUR CONF KNOWL, P1170
   Ralph P, 2020, Arxiv, DOI arXiv:2005.01127
   Rasmusen Eric, 1989, Games and information, V13
   Shastri Y, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09899-4
   Shastri Y, 2021, J SYST SOFTWARE, V173, DOI 10.1016/j.jss.2020.110871
   Smite D, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106612
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Stol KJ, 2015, SCI COMPUT PROGRAM, V101, P79, DOI 10.1016/j.scico.2014.11.010
   Stray V., 2020, 21 INT C AGILE SOFTW
   Stray V, 2016, J SYST SOFTWARE, V114, P101, DOI 10.1016/j.jss.2016.01.004
   Strode DE, 2012, J SYST SOFTWARE, V85, P1222, DOI 10.1016/j.jss.2012.02.017
   STRUTZEL E, 1968, NURS RES, V17, P364
   Sweetman R, 2014, LECT NOTES BUS INF P, V199, P93
   Yu XD, 2014, INFORM SOFTWARE TECH, V56, P911, DOI 10.1016/j.infsof.2014.02.010
   Zorzetti M, 2022, INFORM SOFTWARE TECH, V141, DOI 10.1016/j.infsof.2021.106718
NR 42
TC 1
Z9 1
U1 2
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2022
VL 152
AR 107058
DI 10.1016/j.infsof.2022.107058
EA SEP 2022
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4U5SW
UT WOS:000858854400002
DA 2024-07-18
ER

PT J
AU Persson, JS
   Bruun, A
   Lárusdóttir, MK
   Nielsen, PA
AF Persson, John Stouby
   Bruun, Anders
   Larusdottir, Marta Kristin
   Nielsen, Peter Axel
TI Agile software development and UX design: A case study of integration by
   mutual adjustment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID USABILITY
AB Context: Agility is an overarching ideal for empirically-driven software development processes that embrace change in order to improve quality, economy, and simplicity. While the pursuit of Agility has held prominence in software practice and research for over two decades, user experience (UX) designers struggle to integrate their work processes with agile software development. Objective: As empirical processes are constantly evolving, so is this integration struggle for UX designers. We, therefore, present an industrial case study of how a Danish software company integrates UX design and agile software development. Method: We conducted a case study involving (a) one iteration of individual interviews with 10 employees (four UX designers, three software developers, two project managers, and one solution architect) and (b) a follow-up iteration consisting of a workshop with 6 employees (three UX designers, two solution architects, and one project manager) two years later. We analyzed how the company's approach to integration with 'upfront design' and 'work in parallel' involve mutual adjustments as opposed to assimilation or separation of UX design and software development. Results: Our analysis shows how integration through mutual adjustments made distinct contributions to UX designers' and software developers' pursuit of Agility. They experienced notably different work processes that still dealt effectively with change and contributed to quality, economy, or simplicity. Nevertheless, as shown from a follow-up workshop two years after our first interviews, these processes were still susceptible to integration struggles over time. Conclusion: We conclude that integration based on mutual adjustment potentially makes Agility for UX designers and software developers different and mutually complementary. This integration contrasts with assimilation, which potentially makes their Agility mutually indistinguishably, and with separation, which makes their Agility different and mutually competing.
C1 [Persson, John Stouby; Bruun, Anders; Nielsen, Peter Axel] Aalborg Univ, Dept Comp Sci, Aalborg, Denmark.
   [Larusdottir, Marta Kristin] Reykjavik Univ, Dept Comp Sci, Reykjavik, Iceland.
C3 Aalborg University; Reykjavik University
RP Bruun, A (corresponding author), Aalborg Univ, Dept Comp Sci, Aalborg, Denmark.
EM bruun@cs.aau.dk
RI Persson, John S/B-7684-2011
OI Nielsen, Peter Axel/0000-0002-0282-7445; Persson,
   John/0000-0003-0422-1380
CR Ananjeva A, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110785
   [Anonymous], 2016, P INT C HUMAN COMPUT
   [Anonymous], 2004, Agile and Iterative Development
   Argumanis D, 2020, COMM COM INF SC, V1334, P52, DOI 10.1007/978-3-030-66919-5_6
   Balaban S., 2021, European Project Management Journal, V11, P12, DOI DOI 10.18485/EPMJ.2021.11.1.2
   Beck K., 2000, EXTREME PROGRAMMING
   Borup NB, 2021, LECT NOTES BUS INF P, V434, P50, DOI 10.1007/978-3-030-91983-2_5
   Braa K., 1999, ACCOUNTING MANAGEMEN, V9, P25, DOI [DOI 10.1016/S0959-8022(98)00018-6, 10.1016/S0959-8022(98)00018-6]
   Brhel M, 2015, INFORM SOFTWARE TECH, V61, P163, DOI 10.1016/j.infsof.2015.01.004
   Bruun A, 2018, NORDICHI'18: PROCEEDINGS OF THE 10TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION, P352, DOI 10.1145/3240167.3240213
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Curcio K, 2019, COMPUT STAND INTER, V64, P61, DOI 10.1016/j.csi.2018.12.003
   Da Silva TS, 2018, INFORM SOFTWARE TECH, V102, P1, DOI 10.1016/j.infsof.2018.04.008
   Detweiler M., 2007, Interactions, V14, P40, DOI 10.1145/1242421.1242447
   Digitalai, 2021, 15 ANN STAT AG REP
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Fowler M., 2001, Software Development, V9, P28
   Hsieh HF, 2005, QUAL HEALTH RES, V15, P1277, DOI 10.1177/1049732305276687
   Kuusinen Kati, 2012, Human-Centered Software Engineering. Proceedings of the 4th International Conference, HCSE 2012, P94, DOI 10.1007/978-3-642-34347-6_6
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   Larusdottir M, 2017, J SYST SOFTWARE, V123, P214, DOI 10.1016/j.jss.2016.01.024
   Law ELC, 2015, INT J HUM-COMPUT INT, V31, P584, DOI 10.1080/10447318.2015.1065693
   Lazar J., 2017, RES METHODS HUMAN CO, DOI DOI 10.1016/B978-0-12-805390-4.00014-5
   Madsen DO, 2020, SOC SCI-BASEL, V9, DOI 10.3390/socsci9050069
   Mintzberg H., 1989, MINTZBERG MANAGEMENT, DOI DOI 10.1111/j.1468-0432.2009.00465.x
   Morgner C, 2020, PALGR STUD RELAT SOC, P1, DOI 10.1007/978-3-030-26380-5_1
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Persson J.S., 2016, P 24 EUR C INF SYST, P1
   Pilz J, 2021, PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS AND TECHNOLOGIES (WEBIST), P467, DOI 10.5220/0010713800003058
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Salah D., 2014, P 18 INT C EV ASS SO, P1, DOI 10.1145/2601248.2601276
   Schmitz K, 2019, IEEE SOFTWARE, V36, P32, DOI 10.1109/MS.2018.290100623
   Schon D. A., 1983, The reflective practitioner: How professionals think in action
   Schwaber K., 1997, BUSINESS OBJECT DESI, DOI [10.1007/978-1-4471-0947-1_11, DOI 10.1007/978-1-4471-0947-1_11]
   Schwaber K., 2020, The Scrum Guide. The Definitive Guide to Scrum: The Rules of the Game
   Signoretti I, 2019, INT SYMP EMP SOFTWAR, P213
   Silva da Silva T., 2011, Proceedings of the 2011 Agile Conference, P77, DOI 10.1109/AGILE.2011.24
   Sy D, 2007, J USABILITY STUD, V2, P112
   Teka D, 2018, 2018 IEEE/ACM SYMPOSIUM ON SOFTWARE ENGINEERING IN AFRICA (SEIA), P35, DOI 10.1145/3195528.3195530
   Wale-Kolade A., 2013, Building Sustainable Information Systems, P569, DOI DOI 10.1007/978-1-4614-7540-8_44
   Yin R., 2018, Case study research and applications: Design and methods, V5
   Zorzetti M, 2022, INFORM SOFTWARE TECH, V141, DOI 10.1016/j.infsof.2021.106718
NR 42
TC 5
Z9 5
U1 3
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2022
VL 152
AR 107059
DI 10.1016/j.infsof.2022.107059
EA SEP 2022
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5A3AF
UT WOS:000862761900002
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Valverde, C
   Marotta, A
   Panach, JI
   Vallespir, D
AF Valverde, Carolina
   Marotta, Adriana
   Ignacio Panach, Jose
   Vallespir, Diego
TI Towards a model and methodology for evaluating data quality in software
   engineering experiments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Data quality; Data quality model; Data quality methodology; Software
   engineering experiments
ID ERRORS
AB Context: Data collected during software engineering experiments might contain quality problems, leading to wrong experimental conclusions.
   Objective: We present a data quality (DQ) model and a methodology specific to software engineering experiments, which provides a systematic approach in order to analyze and improve data quality in this domain.
   Method: Our proposal considers a multifaceted view of data quality suitable for this context, which enables the discovery of DQ problems that are not generally addressed. We successfully applied the model (DQMoS) and methodology (DQMeS) in four controlled experiments, detecting different quality problems that could impact the experimental results. We present, through a running example, how we applied the DQMoS and DQMeS to one of the four experimental data.
   Results: We found that between 55% and 75% of the DQ metrics applied showed the presence of a DQ problem in all four experiments. In all cases, the experimental results had already been obtained before the DQMeS application. This means that the DQ problems we found, were not discovered by the experimenters during or before making their experiment's analysis. Results yield data quality problems that experimenters did not detect on their own analysis, and that affect the experimental response variables. Our proposal shows a formalized framework that measures and improves the quality of software engineering experimental data. The results of a survey distributed to the experiments' responsibles show that they value the improvements introduced by the model and methodology, and that they intend to apply them again in future experiences.
   Conclusions: DQMoS and DQMeS are useful to increase the confidence in the quality of data used in software engineering experiments, and improve the trust in experimental results.
C1 [Valverde, Carolina; Marotta, Adriana; Vallespir, Diego] Univ Republica, Montevideo, Uruguay.
   [Ignacio Panach, Jose] Univ Valencia, Dept Informat, Escola Tecn Super dEngn, Valencia, Spain.
C3 Universidad de la Republica, Uruguay; University of Valencia
RP Valverde, C (corresponding author), Univ Republica, Montevideo, Uruguay.
EM mvalverde@fing.edu.uy
OI Panach Navarrete, Jose Ignacio/0000-0002-7043-6227; Marotta,
   Adriana/0000-0001-6547-466X; Vallespir, Diego/0000-0003-1701-353X
FU PEDECIBA, Uruguay; Generalitat Valenciana [GV/2021/072]; Spanish
   Ministry of Science and Innovation - FEDER through SREC
   [PID2021-123824OB-I00]
FX This research was partially funded by PEDECIBA, Uruguay, and has the
   support of the Generalitat Valenciana through project GV/2021/072 and
   the Spanish Ministry of Science and Innovation co-financed by FEDER
   through SREC (PID2021-123824OB-I00).
CR Abedjan Z, 2016, PROC VLDB ENDOW, V9, P993
   [Anonymous], 2008, Guide to Advanced Empirical Software Engineering
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Bachmann Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P62, DOI 10.1109/MSR.2010.5463286
   Bachmann A., 2010, WHY SHOULD WE CARE D
   Bachmann A, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P119
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Batini C, 2016, DATA CENTRIC SYST AP, P1, DOI 10.1007/978-3-319-24106-7
   Batini Carlo, 2007, P 12 INT C INF QUAL, P333
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bosu M.F., 2015, DATA QUALITY EMPIRIC
   Bosu MF, 2019, ACM J DATA INF QUAL, V11, DOI 10.1145/3328746
   Bosu MF, 2013, IEEE AUS SOFT ENGR, P97, DOI 10.1109/ASWEC.2013.21
   Bosu MichaelFranklin., 2013, P 17 INT C EVALUATIO, P171
   Brown NJL, 2017, SOC PSYCHOL PERS SCI, V8, P363, DOI 10.1177/1948550616673876
   Caballero I., 2007, ICIQ, P393
   Carol A, 2006, LECT NOTES COMPUT SC, V4255, P363
   Valverde MC, 2014, LECT NOTES COMPUT SC, V8823, P168, DOI 10.1007/978-3-319-12256-4_18
   Cartwright MH, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P154, DOI 10.1109/METRIC.2003.1232464
   Crosby PhilipB., 1984, Quality Without Tears: The Art of Hassle-Free Management
   Disney A. M., 1998, Software Engineering Notes, V23, P143, DOI 10.1145/291252.288292
   Du J, 2012, DECIS SUPPORT SYST, V54, P76, DOI 10.1016/j.dss.2012.04.016
   Embley DW, 2011, HANDBOOK OF CONCEPTUAL MODELING: THEORY, PRACTICE AND RESEARCH CHALLENGES, P3
   Etcheverry Lorena, 2010, 2010 21st International Conference on Database and Expert Systems Applications, P105, DOI 10.1109/DEXA.2010.40
   Fagúndez S, 2015, J INTELL SYST, V24, P361, DOI 10.1515/jisys-2014-0166
   Juran J.M., 1988, Juran's Quality Control Handbook, V4th
   Juristo N, 2003, LECT NOTES COMPUT SC, V2765, P208
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kasunic M., 2008, Can You Trust Your Data? Establishing the Need for a Measurement and Analysis Infrastructure Diagnostic (Technical Note CMU/SEI-2008-TN-028) (1)
   Khoshgoftaar TM, 2007, J COMPUT SCI TECHNOL, V22, P387, DOI 10.1007/s11390-007-9054-2
   Liebchen Gemot, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P99
   Liebchen G., 2006, 10th International Conference on Evaluation and Assessment in Software Engineering (EASE), V10, P1
   Liebchen G. A., 2008, P 4 INT WORKSH PRED, P39, DOI [10.1145/1370788.1370799, DOI 10.1145/1370788.1370799]
   Liebchen G.A., 2016, P THE 12 INT C PREDI, DOI [10.1145/2972958.2972967,7:1-7:4, DOI 10.1145/2972958.2972967,7:1-7:4]
   Liebchen G.A., 11 IEEE INT SOFTW ME, DOI [10.1109/METRICS.2005.43, DOI 10.1109/METRICS.2005.43]
   Liebchen G.A., 2005, P 11 IEEE INT SOFTWA, P46
   Liebchen GernotArmin., 2010, Data cleaning techniques for software engineering data sets
   Menzies T., 2011, SOFTW QUAL PROF SQP, V13, P42
   Moges HT, 2013, INFORM MANAGE-AMSTER, V50, P43, DOI 10.1016/j.im.2012.10.001
   Moody D.L., 2003, ECIS 2003 P, P79
   Moody DL, 2002, LECT NOTES COMPUT SC, V2503, P380
   Otto B., 2009, P 14 INT C INFORM QU
   Panach JI, 2015, INFORM SOFTWARE TECH, V62, P164, DOI 10.1016/j.infsof.2015.02.012
   Pastor O., 2007, MODEL DRIVEN ARCHITE
   Pipino LL., 2002, Communications of the ACM, V45, P211, DOI [DOI 10.1145/505248.506010, 10.1145/505248.506010]
   Redman TC, 1996, Data Quality for the Information Age
   Rodriguez D., 2012, 2012 Proceedings of the First International Workshop on Realizing Artificial Intelligence Synergies in Software Engineering (RAISE 2012), P52, DOI 10.1109/RAISE.2012.6227971
   Rosli M.M., 2018, FRAMEWORK UNDERSTAND
   Rosli M.M., 2016, P AUSTRALASIAN COMPU, DOI [10.1145/2843043.2843059,28:1-28:10, DOI 10.1145/2843043.2843059,28:1-28:10]
   Rosli MM, 2018, ADV SCI LETT, V24, P7232, DOI 10.1166/asl.2018.12920
   Rosli MM, 2013, ASIA PAC SOFWR ENG, P116, DOI 10.1109/APSEC.2013.26
   Scannapieco M., 2002, Archivi Computer, V2, P1
   Schumm WR., 2019, PSYCHOL RES APPL, V1, P112, DOI DOI 10.22606/PRA.2019.14004
   Seo Yeong-Seok., 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, P25
   Shepperd M., 2011, Proceedings of the 2nd International Workshop on Emerging Trends in Software Metrics, P1, DOI DOI 10.1145/1985374.1985376
   Shirai Y., 2014, Proceedings of the 2014 International Conference on Software and System Process, P25
   Strong DM, 1997, COMMUN ACM, V40, P103, DOI 10.1145/253769.253804
   Vallespir Diego, 2009, Proceedings of the Tenth Mexican International Conference on Computer Science (ENC 2009), P264, DOI 10.1109/ENC.2009.11
   Vallespir D., 2009, P 28 INT C CHILEAN C
   Wand Y, 1996, COMMUN ACM, V39, P86, DOI 10.1145/240455.240479
   Wang R. Y., 1996, Journal of Management Information Systems, V12, P5
   Wicherts J, 2021, COMPARING PREVALENCE
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yoon V. Y., 2000, Information Resources Management Journal, V13, P5, DOI 10.4018/irmj.2000070101
NR 66
TC 3
Z9 3
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2022
VL 151
AR 107029
DI 10.1016/j.infsof.2022.107029
EA AUG 2022
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V5BX
UT WOS:000859493100015
DA 2024-07-18
ER

PT J
AU Souza, J
   Lima, R
   Fonseca, B
   Cartaxo, B
   Pinto, G
   Gheyi, R
   Garcia, A
AF Souza, Jairo
   Lima, Rodrigo
   Fonseca, Baldoino
   Cartaxo, Bruno
   Pinto, Gustavo
   Gheyi, Rohit
   Garcia, Alessandro
TI Developers' viewpoints to avoid bug-introducing changes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bugs-introducing changes; Developers' viewpoints; Q-Methodology
ID LARGE-SCALE; DEFECTS
AB Context: During software development, developers can make assumptions that guide their development practices to avoid bug-introducing changes. For instance, developers may consider that code with low test coverage is more likely to introduce bugs; and thus, focus their attention on that code to avoid bugs, neglecting other factors during the software development process. However, there is no knowledge about the relevance of these assumptions for developers. Objective: This study investigates the developers' viewpoints on the relevance of certain assumptions to avoid bug-introducing changes. In particular, we analyze which assumptions developers can make during software development; how relevant these assumptions are for developers; the common viewpoints among developers regarding these assumptions; and the main reasons for developers to put more/less relevance for some assumptions. Method: We applied the Q-methodology, a mixed-method from the psychometric spectrum, to investigate the relevance of assumptions and extract the developers' viewpoints systematically. We involved 41 developers analyzing 41 assumptions extracted from literature and personal interviews. Results: We identified five viewpoints among developers regarding their assumptions around bug-introducing changes. Despite the differences among the viewpoints, there is also consensus, for example, regarding the importance of being aware of changes invoking high number of features. Moreover, developers rely on personal and technical reasons to put relevance on some assumptions. Conclusion: These findings are valuable knowledge for practitioners and researchers towards future research directions and development practices improvements.
C1 [Souza, Jairo; Lima, Rodrigo; Fonseca, Baldoino; Pinto, Gustavo] Fed Univ Alagoas UFAL, Maceio, Alagoas, Brazil.
   [Cartaxo, Bruno] Fed Inst Pernambuco IFPE, Recife, PE, Brazil.
   [Pinto, Gustavo] Fed Univ Para UFPA, Belem, Para, Brazil.
   [Gheyi, Rohit] Fed Univ Campina Grande UFCG, Campina Grande, Paraiba, Brazil.
   [Garcia, Alessandro] Pontifical Catholic Univ Rio De Janeiro PUC Rio, Rio De Janeiro, Brazil.
C3 Universidade Federal de Alagoas; Instituto Federal de Pernambuco (IFPE);
   Universidade Federal do Para; Universidade Federal de Campina Grande;
   Pontificia Universidade Catolica do Rio de Janeiro
RP Souza, J (corresponding author), Univ Fed Alagoas, Inst Comp, Maceio, Alagoas, Brazil.
EM jrmcs@ic.ufal.br
RI Fonseca, Baldoino/JUV-2819-2023; Ribeiro, Marcio/C-8356-2017
OI Fonseca, Baldoino/0000-0002-0730-0319; Ribeiro,
   Marcio/0000-0002-4293-4261; Lima, Rodrigo/0000-0002-8103-7723; Souza,
   Jairo/0000-0001-9361-0665
FU CNPq [434969/20184, 427787/2018-1, 409536/2017-2, 312149/2016-6,
   421306/2018-1, 309844/2018-5, 309032/2019-9, 426005/2018-0,
   311442/20196]; CAPES [175956, 117875]; FAPERJ [200773/2019,
   010002285/2019]; FAPEAL [60030.0000000462/2020]
FX This work was partially funded by CNPq (grants 434969/20184,
   427787/2018-1, 409536/2017-2, 312149/2016-6, 421306/20181,
   309844/2018-5, 309032/2019-9, 426005/2018-0, 311442/20196), CAPES
   (grants 175956, 117875), FAPERJ (grants 200773/2019, 010002285/2019),
   and FAPEAL (grant 60030.0000000462/2020).
CR [Anonymous], 2001, INTRO MATH STAT ITS
   [Anonymous], 2012, P ACM SIGSOFT 20 INT, DOI DOI 10.1145/2393596.2393656
   [Anonymous], 2012, How Google Tests Software
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Borle NC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1062, DOI 10.1145/3180155.3182535
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   Brown S., 1980, POLITICAL SUBJECTIVI
   Brown S.R., 1993, OPERANT SUBJECTIVITY, V16, P91
   Cartaxo B., 2020, Rapid Reviews in Software Engineering, P357
   Cleland-Huang J, 2005, PROC INT CONF SOFTW, P362
   Couto C, 2014, J SYST SOFTWARE, V93, P24, DOI 10.1016/j.jss.2014.01.033
   Cross RM, 2005, HEALTH EDUC RES, V20, P206, DOI 10.1093/her/cyg121
   Dao T, 2017, INT C PROGRAM COMPRE, P241, DOI 10.1109/ICPC.2017.29
   Demuth A, 2016, PROC IEEE INT CONF S, P529, DOI 10.1109/ICSME.2016.50
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Ebert F, 2013, PROC IEEE INT CONF S, P448, DOI 10.1109/ICSM.2013.69
   Fontana FA, 2016, PROCEEDINGS OF THE XP2016 SCIENTIFIC WORKSHOPS, DOI 10.1145/2962695.2962716
   Fritz T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2512207
   Guttman L., 1954, PSYCHOMETRIKA, V19, P149, DOI [10.1007/BF02289162, DOI 10.1007/BF02289162]
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Hoda R, 2017, PROC INT CONF SOFTW, P141, DOI 10.1109/ICSE.2017.21
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kochhar PS, 2017, IEEE T RELIAB, V66, P1213, DOI 10.1109/TR.2017.2727062
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Larsen R, 2010, BEHAV RES METHODS, V42, P871, DOI 10.3758/BRM.42.3.871
   Lee JM, 2017, SUSTAINABILITY-BASEL, V9, DOI 10.3390/su9111968
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   MacLeod L, 2018, IEEE SOFTWARE, V35, P34, DOI 10.1109/MS.2017.265100500
   Matthies C, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET), P158, DOI 10.1109/ICSE-SEET.2019.00025
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Meqdadi O, 2013, PROC IEEE INT CONF S, P416, DOI 10.1109/ICSM.2013.61
   Meyer AN, 2017, INT SYMP EMP SOFTWAR, P105, DOI 10.1109/ESEM.2017.17
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Ming Huo, 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P520, DOI 10.1109/CMPSAC.2004.1342889
   Misirli AT, 2016, EMPIR SOFTW ENG, V21, P605, DOI 10.1007/s10664-015-9370-z
   Mockus A, 2010, Proc. of the 18th Symposium on the Foundations of Software Engineering (FSE), P117
   Mondal M, 2017, INT C PROGRAM COMPRE, P99, DOI 10.1109/ICPC.2017.31
   Oliva G. A., 2015, ART SCI ANAL SOFTWAR, P285
   Oliveira J, 2018, J SYST SOFTWARE, V136, P1, DOI 10.1016/j.jss.2017.10.032
   Paige JB, 2016, WESTERN J NURS RES, V38, P96, DOI 10.1177/0193945914545177
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Pearson K., 1895, P R SOC LOND, V58, P240, DOI 10.1098/rspl.1895.0041
   Pereira MA, 2016, AGR SYST, V144, P1, DOI 10.1016/j.agsy.2016.01.004
   Prechelt L, 2016, PROC INT CONF SOFTW, P1017, DOI 10.1145/2884781.2884789
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Ramlo S., 2016, Mid-Western Educational Researcher, V28, DOI DOI 10.1177/1558689815610998
   Ray B, 2017, COMMUN ACM, V60, P91, DOI 10.1145/3126905
   Sae-Lim N, 2017, PROC IEEE INT CONF S, P484, DOI 10.1109/ICSME.2017.66
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Smith EK, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P15, DOI [10.1145/2897586.2897596, 10.1109/CHASE.2016.011]
   Sousa L, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P921, DOI 10.1145/3180155.3180239
   Souza J, 2020, COMPLEMENTARY MAT
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Stephenson W, 1935, CHARACT PERSON, V4, P17
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1797
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Watts S, 2012, Doing Q methodological research: theory, method & interpretation
   Yang Y, 2016, INT J ADULT VOCAL ED, V7, P42, DOI 10.4018/IJAVET.2016040104
   Zabala A, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0148087
   Zabala A, 2014, R J, V6, P163
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zimmermann T., 2008, PREDICTING BUGS HIST, P69, DOI [10.1007/978-3-540-76440-3_4, DOI 10.1007/978-3-540-76440-3_4]
NR 66
TC 0
Z9 1
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2022
VL 143
AR 106766
DI 10.1016/j.infsof.2021.106766
EA NOV 2021
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA XK9HO
UT WOS:000727767300004
DA 2024-07-18
ER

PT J
AU Wei, CQ
   Yao, XJ
   Gong, DW
   Liu, H
AF Wei, Changqing
   Yao, Xiangjuan
   Gong, Dunwei
   Liu, Huai
TI Spectral clustering based mutant reduction for mutation testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mutation testing; Spectral clustering; Mutant reduction
AB Context: Mutation testing techniques, which attempt to construct a set of so-called mutants by seeding various faults into the software under test, have been widely used to generate test cases as well as to evaluate the effectiveness of a test suite. Its popularity in practice is significantly hindered by its high cost, majorly caused by the large number of mutants generated by the technique.
   Objective: It is always a challenging task to reduce the number of mutants while preserving the effectiveness of mutation testing. In this paper, we make use of an intelligent technique, namely spectral clustering, to improve the efficacy of mutant reduction. Method: First of all, we give a family of definitions and the method to calculate the distance between mutants according to the weak mutation testing criteria. Then we propose a mutant reduction method based on spectral clustering (SCMT), including the determination method of the number of clusters, spectral clustering of mutants, and selection of representative mutants.
   Results: The experimental studies based on 12 object programs show that the new approach can significantly reduce the number of mutants without jeopardizing the performance of mutation testing. As compared with other benchmark techniques, the new approach based on weak mutation testing criteria cannot only consistently deliver high effectiveness of mutation testing, but also help significantly reduce the time-cost of mutation testing.
   Conclusion: It is clearly demonstrated that the use of spectral clustering can help enhance the costeffectiveness of mutation testing. The research reveals some potential research directions for not only mutation testing but also the broad area of software testing.
C1 [Wei, Changqing; Yao, Xiangjuan] China Univ Min & Technol, Sch Math, Xuzhou 221116, Jiangsu, Peoples R China.
   [Gong, Dunwei] China Univ Min & Technol, Sch Informat & Control Engn, Xuzhou 221116, Jiangsu, Peoples R China.
   [Liu, Huai] Swinburne Univ Technol, Dept Comp Sci & Software Engn, Melbourne, Vic, Australia.
C3 China University of Mining & Technology; China University of Mining &
   Technology; Swinburne University of Technology
RP Yao, XJ (corresponding author), China Univ Min & Technol, Sch Math, Xuzhou 221116, Jiangsu, Peoples R China.
EM yaoxj@cumt.edu.cn
RI Liu, Huai/M-4871-2019
OI Liu, Huai/0000-0003-3125-4399; wei, changqing/0000-0002-2343-6734
FU Fundamental Research Funds for the Central Universities, China
   [2020ZDPYMS40]
FX This work is supported by the Fundamental Research Funds for the Central
   Universities, China (No. 2020ZDPYMS40).
CR Acree Jr A.T., 1980, MUTATION
   Aichernig B.K., 2014, ISOFTW TEST VERIF RE, V8, P371
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 1999, P 7 IEEE INT C COMP
   [Anonymous], 2002, NIPS
   Budd Timothy Alan, 1980, Mutation Analysis of Program Test Data
   Chen Jin-Fu, 2009, Journal of Software, V20, P1425, DOI 10.3724/SP.J.1001.2009.03526
   [陈翔 Chen Xiang], 2012, [计算机科学与探索, Journal of Frontiers of Computer Science & Technology], V6, P1057
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   FIEDLER M, 1973, CZECH MATH J, V23, P298
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Fung G, 2001, IEEE T INF THEORY, V27, P49
   Gong DW, 2017, INFORM SOFTWARE TECH, V81, P82, DOI 10.1016/j.infsof.2016.05.001
   [郭潇 Guo Xiao], 2010, [微生物学杂志, Journal of Mirobiology], V30, P82
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Hao D, 2009, J COMPUT SCI TECH-CH, V24, P284, DOI 10.1007/s11390-009-9224-5
   HUSSAIN S, 2008, THESIS KINGS COLL LO
   Jain AK, 1999, ACM COMPUT SURV, V31, P264, DOI 10.1145/331499.331504
   Ji C., 2009, SOFTWARE ENG KNOWLED
   Jia Y., 2008, 2008 8 IEEE INT WORK
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Just R., 2014, ARE MUTANTS VALID SU
   KANAWATI GA, 1995, IEEE T COMPUT, V44, P248, DOI 10.1109/12.364536
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Liu X., 2018, THESIS LANZHOU U TEC
   López J, 2018, INFORM SOFTWARE TECH, V103, P138, DOI 10.1016/j.infsof.2018.06.013
   Lu Peng-li, 2018, Journal of Lanzhou University of Technology, V44, P90
   Lu X., 2016, J PLA U SCI TECHNOL, P101
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Ma YS, 2016, J SYST SOFTWARE, V115, P18, DOI 10.1016/j.jss.2016.01.007
   Malik J, 2001, INT J COMPUT VISION, V43, P7, DOI 10.1023/A:1011174803800
   Mathur A. P., 2010, Softw. Testing Verification Rel., V4, P9
   Namin A. Siami, 2008, P 30 INT C SOFTW ENG
   Offutt A.J., 1991, P S TEST AN VER ASS
   Offutt A.J., 1993
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   OFFUTT AJ, 1994, IEEE T SOFTWARE ENG, V20, P337, DOI 10.1109/32.286422
   Omar E, 2017, INFORM SOFTWARE TECH, V81, P3, DOI 10.1016/j.infsof.2016.01.016
   Pacheco C., COMP ACM SIGPL C OBJ
   Pacheo C., 2004, ECOOP OBJ OR PROGR E
   Papadakis M., 2016, INT S SOFTW TEST AN
   Papadakis M, 2012, INFORM SOFTWARE TECH, V54, P915, DOI 10.1016/j.infsof.2012.02.004
   Papadakis M, 2011, SOFTWARE QUAL J, V19, P691, DOI 10.1007/s11219-011-9142-y
   Patrick M, 2015, J SYST SOFTWARE, V103, P328, DOI 10.1016/j.jss.2014.11.033
   Polo M, 2009, SOFTW TEST VERIF REL, V19, P111, DOI 10.1002/stvr.392
   Rubab I, 2014, INT CONF QUAL SOFTW, P1, DOI 10.1109/QSIC.2014.47
   Shi JB, 2000, IEEE T PATTERN ANAL, V22, P888, DOI 10.1109/34.868688
   Smith BH, 2009, EMPIR SOFTW ENG, V14, P341, DOI 10.1007/s10664-008-9083-7
   Strug Joanna, 2013, Applied Mechanics and Materials, V378, P546, DOI 10.4028/www.scientific.net/AMM.378.546
   Sun C., 2010, J HANGZHOU DIANZI U, V30, P53
   Sun CA, 2017, INFORM SOFTWARE TECH, V81, P65, DOI 10.1016/j.infsof.2016.02.006
   Chekam TT, 2020, EMPIR SOFTW ENG, V25, P434, DOI 10.1007/s10664-019-09778-7
   Untch R. H., 1993, SIGSOFT Software Engineering Notes, V18, P139, DOI 10.1145/174146.154265
   Vemna D., 2002, COMP SPECTRAL CLUSTE, P1
   Vincenzi AMR, 2001, SOFTW TEST VERIF REL, V11, P249, DOI 10.1002/stvr.242
   von Luxburg U, 2007, STAT COMPUT, V17, P395, DOI 10.1007/s11222-007-9033-z
   Wang Qing, 2008, Journal of Software, V19, P1565, DOI 10.3724/SP.J.1001.2008.01565
   WONG WE, 1995, J SYST SOFTWARE, V31, P185, DOI 10.1016/0164-1212(94)00098-0
   Wu F., 2018, INFORM SOFTWARE TECH, V45, P898
   WU Z, 1993, IEEE T PATTERN ANAL, V15, P1101, DOI 10.1109/34.244673
   [姚香娟 Yao Xiangjuan], 2012, [电子学报, Acta Electronica Sinica], V40, P103
   Zeng Fan-ping, 2011, Journal of Computer Applications, V31, P1314, DOI 10.3724/SP.J.1087.2011.01314
   Zha C., 2013, INT C INT HUM MACH S
   Zhang C., 2011, THESIS NANJING U
   Zhang L., 2010, P 32 ACM IEEE INT C, V1
   Zhang XC, 2011, PATTERN RECOGN LETT, V32, P352, DOI 10.1016/j.patrec.2010.09.014
NR 68
TC 7
Z9 7
U1 1
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2021
VL 132
AR 106502
DI 10.1016/j.infsof.2020.106502
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LA
UT WOS:000614249900013
DA 2024-07-18
ER

PT J
AU Polaczek, J
   Sosnowski, J
AF Polaczek, Jakub
   Sosnowski, Janusz
TI Exploring the software repositories of embedded systems: An industrial
   experience
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software development monitoring; Mining software repositories; Project
   management; Defect handling; Embedded systems
ID DEFECT PREDICTION; CLASSIFICATION; RECOMMENDATION; INFORMATION;
   RETRIEVAL
AB Context: Tracing reports for software repositories have attracted many researchers. Most of them have focused on defect analysis and development processes in relation to open source programs. There exists a gap between open source and industrial software projects, which, in particular, relates to different schemes for creating software repositories and development schemes. This is especially true for embedded systems that gain large markets and become more complex.
   Objective: The aim is to explore the software repositories of industrial embedded systems and derive characteristic features in order to evaluate quality and identify problems to do with development processes.
   Method: In this paper we have proposed a novel approach to software repository analysis based on the fine grained exploration of issue tracking and code control repositories. In particular, we distinguish the various activities of project actors (e.g. creating new functions, correcting defects, improving performance, modifying tests) and analyse them in a context, not only of a single project, but also a set of correlated projects that have been developed in the company. These issues have been neglected in the literature. These analyses needed new holistic schemes for repository exploration, including various statistical metrics, text mining, and machine learning techniques.
   Results: In exploring selected industrial projects we have identified that only 40-75% of issues relate to defects; the issue reports and commit descriptions included here comprise a lot of data that has been disregarded in the literature. These data allow us to trace diverse types of code changes and identify imperfections in software repositories.
   Conclusion: We show that fine grained repository analysis gives a broader and more complete view of project development, which may lead to its improvement.
C1 [Polaczek, Jakub; Sosnowski, Janusz] Warsaw Univ Technol, Inst Comp Sci, Nowowiejska 15-19, PL-00665 Warsaw, Poland.
C3 Warsaw University of Technology
RP Sosnowski, J (corresponding author), Warsaw Univ Technol, Inst Comp Sci, Nowowiejska 15-19, PL-00665 Warsaw, Poland.
EM j.sosnowski@ii.pw.edu.pl
CR Amasaki S, 2005, IEICE T INF SYST, VE88D, P1134, DOI 10.1093/ietisy/e88-d.6.1134
   [Anonymous], 2010, Text Mining: Applications and Theory
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Banerjee S, 2017, INFORM SOFTWARE TECH, V89, P1, DOI 10.1016/j.infsof.2016.09.006
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bowes D, 2018, SOFTWARE QUAL J, V26, P525, DOI 10.1007/s11219-016-9353-3
   Chen X., 2018, INF SOFTW TECHNOL, V106, P161
   Cichosz P., 2019, DATA MINING ALGORITH
   Ebrahimi N, 2019, INFORM SOFTWARE TECH, V113, P98, DOI 10.1016/j.infsof.2019.05.007
   Elkholy M, 2018, IT PROF, V20, P28, DOI 10.1109/MITP.2018.043141666
   Gomes LAF, 2019, INFORM SOFTWARE TECH, V115, P58, DOI 10.1016/j.infsof.2019.07.009
   Hattori L.P., ASE 08 P 23 IEEE ACM
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Ni C, 2017, J COMPUT SCI TECH-CH, V32, P1090, DOI 10.1007/s11390-017-1785-0
   Ochodek M, 2019, INFORM SOFTWARE TECH, V115, P131, DOI 10.1016/j.infsof.2019.06.003
   Petersen K, 2012, LECT NOTES BUS INF P, V111, P108
   Poncin W, 2011, EUR CON SFTWR MTNCE, P5, DOI 10.1109/CSMR.2011.5
   Qu Y. B., 2018, INT J PERFORM ENG, V14, P1291
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rakha MS, 2018, EMPIR SOFTW ENG, V23, P2597, DOI 10.1007/s10664-017-9590-5
   Rakha MS, 2016, EMPIR SOFTW ENG, V21, P1960, DOI 10.1007/s10664-015-9404-6
   Rana R., 2015, P INT C SOFTW MEAS M
   Rana R, 2014, J SYST SOFTWARE, V98, P59, DOI 10.1016/j.jss.2014.08.033
   Rath M, 2018, IEEE WORK CONF MIN S, P442, DOI 10.1145/3196398.3196415
   Rempel P., 2013, P 21 INT REQ ENG C I, P1
   Rempel P., 2015, P 23 IEEE INT REQ EN, P1
   Sabetta A, 2018, PROC IEEE INT CONF S, P579, DOI 10.1109/ICSME.2018.00058
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Singh VB, 2017, LECT NOTES COMPUT SC, V10408, P519, DOI 10.1007/978-3-319-62404-4_39
   Sokol FZ, 2013, IEEE INT WORK C SO, P142, DOI 10.1109/SCAM.2013.6648195
   Sosnowski J, 2017, INFORM SOFTWARE TECH, V91, P56, DOI 10.1016/j.infsof.2017.06.006
   Ståhl D, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P61, DOI 10.1109/SEAA.2017.19
   Sun XB, 2017, J SYST SOFTWARE, V134, P355, DOI 10.1016/j.jss.2017.09.021
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Xu Z, 2016, PROC INT SYMP SOFTW, P309, DOI 10.1109/ISSRE.2016.13
   Yadav A, 2019, INFORM SOFTWARE TECH, V112, P1, DOI 10.1016/j.infsof.2019.03.014
   Yamane K., 2014, P IEEE INT C SOFTW M, V14-17, P1
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Zhai C., 2016, Text Data Management and Analysis: A Practical Introduction to Information Retrieval and Text Mining
   Zhang JZ, 2019, INFORM SOFTWARE TECH, V108, P30, DOI 10.1016/j.infsof.2018.12.002
   Zhang T, 2016, J SYST SOFTWARE, V117, P166, DOI 10.1016/j.jss.2016.02.034
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zhou YQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P914, DOI 10.1145/3106237.3117771
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 48
TC 7
Z9 7
U1 1
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2021
VL 131
AR 106489
DI 10.1016/j.infsof.2020.106489
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LB
UT WOS:000614250000011
DA 2024-07-18
ER

PT J
AU Auer, F
   Ros, R
   Kaltenbrunner, L
   Runeson, P
   Felderer, M
AF Auer, Florian
   Ros, Rasmus
   Kaltenbrunner, Lukas
   Runeson, Per
   Felderer, Michael
TI Controlled experimentation in continuous experimentation: Knowledge and
   challenges
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Continuous experimentation; Online controlled experiments; A; B testing;
   Systematic literature review
ID CURRENT STATE; DEPLOYMENT; OPTIMIZATION; PRODUCT; MODEL
AB Context: Continuous experimentation and A/B testing is an established industry practice that has been researched for more than 10 years. Our aim is to synthesize the conducted research. Objective: We wanted to find the core constituents of a framework for continuous experimentation and the solutions that are applied within the field. Finally, we were interested in the challenges and benefits reported of continuous experimentation.
   Methods: We applied forward snowballing on a known set of papers and identified a total of 128 relevant papers. Based on this set of papers we performed two qualitative narrative syntheses and a thematic synthesis to answer the research questions.
   Results: The framework constituents for continuous experimentation include experimentation processes as well as supportive technical and organizational infrastructure. The solutions found in the literature were synthesized to nine themes, e.g. experiment design, automated experiments, or metric specification. Concerning the challenges of continuous experimentation, the analysis identified cultural, organizational, business, technical, statistical, ethical, and domain-specific challenges. Further, the study concludes that the benefits of experimentation are mostly implicit in the studies.
   Conclusion: The research on continuous experimentation has yielded a large body of knowledge on experimentation. The synthesis of published research presented within include recommended infrastructure and experimentation process models, guidelines to mitigate the identified challenges, and what problems the various published solutions solve.
C1 [Auer, Florian; Kaltenbrunner, Lukas; Felderer, Michael] Univ Innsbruck, Innsbruck, Austria.
   [Ros, Rasmus; Runeson, Per] Lund Univ, Lund, Sweden.
   [Felderer, Michael] Blekinge Inst Technol, Blekinge, Sweden.
C3 University of Innsbruck; Lund University; Blekinge Institute Technology
RP Auer, F (corresponding author), Univ Innsbruck, Innsbruck, Austria.; Ros, R (corresponding author), Lund Univ, Lund, Sweden.
EM florian.auer@uibk.ac.at; rasmus.ros@cs.lth.se;
   lukas.kaltenbrunner@uibk.ac.at; per.runeson@cs.lth.se;
   michael.felderer@uibk.ac.at
RI Runeson, Per/H-5113-2019
OI Runeson, Per/0000-0003-2795-4851
FU Wallenberg Artificial Intelligence, Autonomous Systems and Software
   Program (WASP) - Knut and Alice Wallenberg Foundation; Austrian Science
   Fund (FWF) [I 4701-N]
FX This work was partially supported by the Wallenberg Artificial
   Intelligence, Autonomous Systems and Software Program (WASP) funded by
   Knut and Alice Wallenberg Foundation and the Austrian Science Fund
   (FWF): I 4701-N.
CR Abhishek V, 2017, WWW'17 COMPANION: PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P610, DOI 10.1145/3041021.3054196
   Amatriain X, 2013, PROCEEDINGS OF THE 22ND ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM'13), P2201, DOI 10.1145/2505515.2514701
   [Anonymous], 2018, P 13 INT C SOFTW ENG, DOI DOI 10.1145/3194133.3194152
   [Anonymous], 2018 44 EUR C SOFTW
   [Anonymous], 2014, 2014 INT C DAT SOFTW, DOI DOI 10.1109/ICODSE.2014.7062683
   Appiktala N, 2017, IEEE INT CONF BIG DA, P1620, DOI 10.1109/BigData.2017.8258096
   Auer F., 2021, DATASET CONTROLLED E, DOI DOI 10.6084/M9.FIGSHARE.13712329
   Auer F, 2018, EUROMICRO CONF PROC, P335, DOI 10.1109/SEAA.2018.00062
   Azevedo FG, 2018, 2018 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE (WI 2018), P540, DOI 10.1109/WI.2018.00-40
   Backstrom Lars, 2011, P 20 INT C WORLD WID, P615, DOI [DOI 10.1145/1963405.1963492, 10.1145/1963405.1963492]
   Bakshy E, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1303
   Bakshy E, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P283, DOI 10.1145/2566486.2567967
   Basili, 1985, P 1 PAN PAC COMP C, V1, P379
   Bjork J., 2013, From Start-Ups to SaaS Conglomerate: Life Cycles of Software Products Workshop (IWLCSP 2013), P19
   Borodovsky Slava, 2011, 2011 IEEE 11 INT C D, P733, DOI DOI 10.1109/ICDMW.2011.19
   Bosch Jan, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P19, DOI 10.1007/978-3-642-34026-0_3
   Bosch J., 2012, 2012 JOINT WORK IEEE, P244
   Bosch J, 2016, PROCEEDINGS OF 2016 IEEE/ACM 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P28, DOI [10.1109/SEAMS.2016.011, 10.1145/2897053.2897066]
   Bosch J, 2016, IEEE SOFTWARE, V33, P82, DOI 10.1109/MS.2016.14
   Bosch J, 2012, LECT NOTES BUS INF P, V114, P27
   Bosch-Sijtsema P, 2015, J PROD INNOVAT MANAG, V32, P793, DOI 10.1111/jpim.12233
   Broy M, 1999, INFORM SOFTWARE TECH, V41, P947, DOI 10.1016/S0950-5849(99)00068-3
   Buchert T, 2015, FUTURE GENER COMP SY, V45, P1, DOI 10.1016/j.future.2014.10.007
   Budylin R, 2018, WSDM'18: PROCEEDINGS OF THE ELEVENTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P55, DOI 10.1145/3159652.3159699
   Cámara J, 2009, LECT NOTES COMPUT SC, V5648, P370, DOI 10.1007/978-3-642-02818-2_30
   Chen NY, 2019, PROCEEDINGS OF THE TWELFTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING (WSDM'19), P501, DOI 10.1145/3289600.3291000
   Chen R, 2017, IEEE INT CONF BIG DA, P1635, DOI 10.1109/BigData.2017.8258098
   Choi D, 2017, J AM STAT ASSOC, V112, P1147, DOI 10.1080/01621459.2016.1194845
   Claeys E, 2017, LECT NOTES COMPUT SC, V10584, P52, DOI 10.1007/978-3-319-68765-0_5
   Coey D, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16), P1103, DOI 10.1145/2872427.2882984
   Conti M, 2018, IEEE CONF WIREL MOB
   Cruzes DS, 2015, EMPIR SOFTW ENG, V20, P1634, DOI 10.1007/s10664-014-9326-8
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Deming W.E, 1986, OUT CRISIS
   Deng A, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P349, DOI 10.1145/2684822.2685307
   Deng A, 2017, WSDM'17: PROCEEDINGS OF THE TENTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P641, DOI 10.1145/3018661.3018677
   Deng A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P77, DOI 10.1145/2939672.2939700
   Deng A, 2016, PROCEEDINGS OF 3RD IEEE/ACM INTERNATIONAL CONFERENCE ON DATA SCIENCE AND ADVANCED ANALYTICS, (DSAA 2016), P243, DOI 10.1109/DSAA.2016.33
   Deng A, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P609, DOI 10.1145/2566486.2568028
   Deng A, 2015, WWW'15 COMPANION: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P923, DOI 10.1145/2740908.2742563
   Deng Alex, 2013, P 6 ACM INT C WEB SE, P123, DOI [DOI 10.1145/2433396.2433413, 10.1145/2433396.2433413]
   Dmitriev P, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1427, DOI 10.1145/3097983.3098024
   Dmitriev P, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON BIG DATA (BIG DATA), P1367, DOI 10.1109/BigData.2016.7840744
   Dmitriev P, 2016, CIKM'16: PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P429, DOI 10.1145/2983323.2983356
   Drutsa A, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P1301, DOI 10.1145/3038912.3052664
   Drutsa A, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P256, DOI 10.1145/2736277.2741116
   Drutsa A, 2015, SIGIR 2015: PROCEEDINGS OF THE 38TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P779, DOI 10.1145/2766462.2767814
   Drutsa Alexey, P 24 ACM INT C INFOR, P763, DOI [10.1145/2806416.2806496, DOI 10.1145/2806416.2806496]
   Duivesteijn W, 2017, LECT NOTES ARTIF INT, V10536, P114, DOI 10.1007/978-3-319-71273-4_10
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ebert C, 2016, IEEE SOFTWARE, V33, P94, DOI 10.1109/MS.2016.68
   Eckles D, 2017, J CAUSAL INFERENCE, V5, DOI 10.1515/jci-2015-0021
   Engström E, 2020, EMPIR SOFTW ENG, V25, P2630, DOI 10.1007/s10664-020-09818-7
   Fabijan A, 2020, IEEE SOFTWARE, V37, P60, DOI 10.1109/MS.2018.2875842
   Fabijan A, 2018, EUROMICRO CONF PROC, P68, DOI 10.1109/SEAA.2018.00021
   Fabijan A, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P18, DOI 10.1109/SEAA.2017.47
   Fabijan A, 2017, PROC INT CONF SOFTW, P770, DOI 10.1109/ICSE.2017.76
   Fabijan A, 2015, LECT NOTES BUS INF P, V210, P139, DOI 10.1007/978-3-319-19593-3_12
   Fagerholm F, 2017, J SYST SOFTWARE, V123, P292, DOI 10.1016/j.jss.2016.03.034
   Farahbod, 2013, P 28 ANN ACM S APPL, P1043, DOI [10.1145/2480362.2480561, DOI 10.1145/2480362.2480561]
   Feitelson DG, 2013, IEEE INTERNET COMPUT, V17, P8, DOI 10.1109/MIC.2013.25
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Firmenich S, 2019, SOFTWARE QUAL J, V27, P203, DOI 10.1007/s11219-018-9413-y
   Fisher R. A., 1937, The design of experiments.
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Flick C., 2015, RES ETHICS, V12, P14, DOI DOI 10.1177/1747016115599568
   Gerostathopoulos I, 2018, 2018 IEEE 3RD INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W), P100, DOI 10.1109/FAS-W.2018.00032
   Gerostathopoulos I, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2018), P72, DOI 10.1109/ICSA-C.2018.00027
   Gerostathopoulos I, 2016, LECT NOTES COMPUT SC, V9839, P113, DOI 10.1007/978-3-319-48992-6_8
   Giaimo F, 2016, PROCEEDINGS OF THE XP2016 SCIENTIFIC WORKSHOPS, DOI 10.1145/2962695.2962709
   Giaimo F, 2017, LECT NOTES COMPUT SC, V10475, P84, DOI 10.1007/978-3-319-65831-5_6
   Gomez-Uribe CA, 2016, ACM TRANS MANAG INF, V6, DOI 10.1145/2843948
   Goswami A, 2015, PROCEEDINGS 2015 IEEE INTERNATIONAL CONFERENCE ON BIG DATA, P1094, DOI 10.1109/BigData.2015.7363863
   Gray CM, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174108
   Gui H, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P399, DOI 10.1145/2736277.2741081
   Gupchup J, 2018, CIKM'18: PROCEEDINGS OF THE 27TH ACM INTERNATIONAL CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P387, DOI 10.1145/3269206.3271747
   Gupta S, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P1, DOI 10.1109/ICSA.2018.00009
   Gutbrod M, 2017, LECT NOTES COMPUT SC, V10611, P297, DOI 10.1007/978-3-319-69926-4_21
   Hill DN, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1813, DOI 10.1145/3097983.3098184
   Hill DN, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1839, DOI 10.1145/2783258.2788622
   Hohnhold H, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1849, DOI 10.1145/2783258.2788583
   Huang X, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1207, DOI 10.1145/3180155.3180235
   Iitsuka S, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P447, DOI 10.1145/2783258.2783351
   Jayasinghe Deepal, 2013, 2013 IEEE 14th International Conference on Information Reuse & Integration (IRI), P357, DOI 10.1109/IRI.2013.6642493
   Jiang S, 2019, FAT*'19: PROCEEDINGS OF THE 2019 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P201, DOI 10.1145/3287560.3287565
   Johari R, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1517, DOI 10.1145/3097983.3097992
   Ju NQ, 2019, PROCEEDINGS OF THE TWELFTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING (WSDM'19), P492, DOI 10.1145/3289600.3291025
   Jurca G, 2014, 2014 AGILE CONFERENCE (AGILE), P24, DOI 10.1109/AGILE.2014.17
   Katzir Liran, 2012, P 21 INT C WORLD WID, P1029, DOI [DOI 10.1145/2187836.2187974, 10.1145/2187836.2187974]
   Kevic K, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P123, DOI 10.1109/ICSE-SEIP.2017.19
   Kharitonov E, 2017, WSDM'17: PROCEEDINGS OF THE TENTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P651, DOI 10.1145/3018661.3018708
   Kharitonov E, 2015, SIGIR 2015: PROCEEDINGS OF THE 38TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P473, DOI 10.1145/2766462.2767729
   Kharitonov E, 2015, SIGIR 2015: PROCEEDINGS OF THE 38TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P453, DOI 10.1145/2766462.2767706
   Kohavi R., 2009, DATA MIN CASE STUD, V11
   Kohavi R, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P1857, DOI 10.1145/2623330.2623341
   Kohavi R, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1168
   Kohavi R, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P959
   Kohavi R, 2009, DATA MIN KNOWL DISC, V18, P140, DOI 10.1007/s10618-008-0114-1
   Kohavi Ron, P 18 ACM SIGKDD INT, P786, DOI 10.1145/2339530.2339653
   Kohavi Ron, 2011, ACM SIGKDD Explorations Newsletter, V12, P31, DOI 10.1145/1964897.1964905
   Koukouvis K, 2016, LECT NOTES COMPUT SC, V9823, P133, DOI 10.1007/978-3-319-45892-2_10
   Lee MR, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P491, DOI 10.1145/3219819.3219905
   Letham B, 2019, BAYESIAN ANAL, V14, P495, DOI 10.1214/18-BA1110
   Lettner F, 2013, LECT NOTES COMPUT SC, V8112, P458, DOI 10.1007/978-3-642-53862-9_58
   Lindgren E, 2016, INFORM SOFTWARE TECH, V77, P80, DOI 10.1016/j.infsof.2016.04.008
   Liu DP, 2017, 2017 18TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNDP 2017), P187, DOI 10.1109/SNPD.2017.8022721
   Liu L, 2014, 2014 11TH IAPR INTERNATIONAL WORKSHOP ON DOCUMENT ANALYSIS SYSTEMS (DAS 2014), P1, DOI 10.1109/DAS.2014.53
   Machmouchi W, 2016, SIGIR'16: PROCEEDINGS OF THE 39TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P589, DOI 10.1145/2911451.2926731
   Machmouchi W, 2017, CIKM'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P757, DOI 10.1145/3132847.3132850
   Mattos DI, 2018, LECT NOTES COMPUT SC, V11271, P182, DOI 10.1007/978-3-030-03673-7_14
   Mattos DI, 2018, LECT NOTES BUS INF P, V314, P277, DOI 10.1007/978-3-319-91602-6_20
   Mattos DI, 2018, LECT NOTES COMPUT SC, V11036, P293, DOI 10.1007/978-3-319-99241-9_16
   Mattos DI, 2017, LECT NOTES COMPUT SC, V10611, P146, DOI 10.1007/978-3-319-69926-4_12
   Mattos DI, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P256, DOI 10.1109/SEAA.2017.15
   McKinley D, 2012, DESIGN CONTINUOUS EX
   Medina AM, 2018, CIKM'18: PROCEEDINGS OF THE 27TH ACM INTERNATIONAL CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P317, DOI 10.1145/3269206.3271718
   Miildulainen R, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1193, DOI 10.1145/3071178.3071312
   Nolting M, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16 COMPANION), P277, DOI 10.1145/2872518.2889306
   Olsson H.H., 2013, IASTED, P798, DOI DOI 10.2316/P.2013.796-008
   Olsson HH, 2017, LECT NOTES BUS INF P, V304, P179, DOI 10.1007/978-3-319-69191-6_12
   Olsson HH, 2014, EUROMICRO CONF PROC, P9, DOI 10.1109/SEAA.2014.75
   Olsson HH, 2012, EUROMICRO CONF PROC, P392, DOI 10.1109/SEAA.2012.54
   Peysakhovich A, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P699, DOI 10.1145/3178876.3186151
   Phothilimthana P.M., 2015, P 24 INT C WORLD WID, P1321, DOI [10.1145/2740908.2741699, DOI 10.1145/2740908.2741699]
   Poyarkov A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P235, DOI 10.1145/2939672.2939688
   Rahman MT, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P201, DOI [10.1145/2901739.2901745, 10.1109/MSR.2016.029]
   Ranganath, 2013, UEO 13, P17, DOI [10.1145/2512875.2512879., DOI 10.1145/2512875.2512879]
   Ranjit K.R., 2001, DESIGN EXPT USING TA
   Ries E, 2011, The Lean Startup
   Rissanen O, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P12, DOI 10.1109/RCoSE.2015.10
   Ronchieri E, 2018, J INTEGR DES PROCESS, V22, P5, DOI 10.3233/jid-2018-0008
   Ros R, 2017, LECT NOTES COMPUT SC, V10452, P190, DOI 10.1007/978-3-319-66299-2_18
   Ros R, 2018, EUROMICRO CONF PROC, P353, DOI 10.1109/SEAA.2018.00064
   Ros R, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P35, DOI 10.1145/3194760.3194766
   Salah D., 2014, P 18 INT C EV ASS SO, P1, DOI 10.1145/2601248.2601276
   Sauvola T, 2018, THIRTEENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2018), P52
   Saveski M, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1027, DOI 10.1145/3097983.3098192
   Schermann G, 2018, PROC IEEE INT CONF S, P485, DOI 10.1109/ICSME.2018.00059
   Schermann G, 2016, MIDDLEWARE '16: PROCEEDINGS OF THE 17TH INTERNATIONAL MIDDLEWARE CONFERENCE, DOI 10.1145/2988336.2988348
   Schermann G, 2018, INFORM SOFTWARE TECH, V99, P41, DOI 10.1016/j.infsof.2018.02.010
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Speicher M, 2014, LECT NOTES COMPUT SC, V8541, P93, DOI 10.1007/978-3-319-08245-5_6
   Tamburrelli G, 2014, LECT NOTES COMPUT SC, V8636, P184, DOI 10.1007/978-3-319-09940-8_13
   Tang D., 2010, P 16 ACM SIGKDD INT, P17, DOI [DOI 10.1145/1835804.1835810, 10.1145/1835804.1835810]
   Van Nostrand R.C., 2002, DESIGN EXPT USING TA
   Wahono R. S., 2015, Journal of Software Engineering, V1, P1
   Wang J, 2018, INT CONF DAT MIN WOR, P1447, DOI 10.1109/ICDMW.2018.00206
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C., 2012, Experimentation in Software Engineering
   Wohlin C, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916006
   Xie HZ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P645, DOI 10.1145/293672.2939733
   Xie YX, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P876, DOI 10.1145/3219819.3219860
   Xu Y, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P895, DOI 10.1145/3219819.3219875
   Xu Y, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2227, DOI 10.1145/2783258.2788602
   Xu Y, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P313, DOI [10.1145/2939672.2939703, 10.1007/978-3-319-32025-0_20]
   Yaman S, 2018, EUROMICRO CONF PROC, P345, DOI 10.1109/SEAA.2018.00063
   Yaman S, 2017, INT SYMP EMP SOFTWAR, P199, DOI 10.1109/ESEM.2017.31
   Yaman SG, 2017, J SYST SOFTWARE, V133, P195, DOI 10.1016/j.jss.2017.07.009
   Yaman SG, 2016, LECT NOTES COMPUT SC, V9619, P249, DOI 10.1007/978-3-319-30282-9_18
   Zhao ZY, 2016, PROCEEDINGS OF 3RD IEEE/ACM INTERNATIONAL CONFERENCE ON DATA SCIENCE AND ADVANCED ANALYTICS, (DSAA 2016), P498, DOI 10.1109/DSAA.2016.61
NR 160
TC 14
Z9 16
U1 2
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2021
VL 134
AR 106551
DI 10.1016/j.infsof.2021.106551
EA FEB 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RF4GK
UT WOS:000634797600004
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Echeverría, J
   Pérez, F
   Panach, JI
   Cetina, C
AF Echeverria, Jorge
   Perez, Francisca
   Ignacio Panach, Jose
   Cetina, Carlos
TI An empirical study of performance using Clone & Own and Software Product
   Lines in an industrial context
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Clone and Own; Software Product Line; Experiment; Empirical evaluation
ID FAMILY
AB Context: Clone and Own (CaO) is a widespread approach to generate new software products from existing software products by adding small changes. The Software Product Line (SPL) approach addresses the development of families of products with similar features, moving away from the production of isolated products. Despite the popularity of both approaches, no experiment has yet compared them directly.
   Objective: The goal of this paper is to know the different performances of software engineers in the software products development process using two different approaches (SPL and CaO).
   Method: We conducted an experiment in the induction hobs software environment with software engineers. This experiment is a single factor experiment where the factor is the approach that is used to develop software products, with two treatments: (SPL or CaO). We compared the results obtained by the software engineers when they develop software products related to effectiveness, efficiency, and satisfaction.
   Results: The findings show that: (1) the SPL approach is more efficient even though the number of checking actions required by this approach is greater than the number required by the CaO approach; (2) the SPL approach offers more possibilities than software engineers need to perform their daily tasks; and (3) software engineers require better search capabilities in the CaO approach. The possible explanations for these results are presented in the paper.
   Conclusions: The results show that there are significant differences in effectiveness, efficiency, and satisfaction, with the SPL approach yielding the best results.
C1 [Echeverria, Jorge; Perez, Francisca; Cetina, Carlos] Univ San Jorge, SVIT Res Grp, Zaragoza, Spain.
   [Ignacio Panach, Jose] Univ Valencia, Ave Univ S-N, Valencia 46100, Spain.
C3 Universidad San Jorge; University of Valencia
RP Echeverría, J (corresponding author), Univ San Jorge, SVIT Res Grp, Zaragoza, Spain.
EM jecheverria@usj.es; mfperez@usj.es; joigpana@uv.es; ccetina@usj.es
RI Cetina, Carlos/P-8682-2017; Echeverria, Jorge/AAB-8222-2022; Panach,
   Jose Ignacio/ABF-2099-2020; Pérez, Francisca/KPH-0503-2024
OI Cetina, Carlos/0000-0001-8542-5515; Echeverria,
   Jorge/0000-0001-7272-7047; Panach, Jose Ignacio/0000-0002-7043-6227;
   Perez, Francisca/0000-0001-6371-915X
FU Ministry of Economy and Competitiveness (MINECO) through the Spanish
   National R+D+i Plan; ERDF funds under the Project ALPS
   [RTI2018-096411-B-I00]
FX This work has been partially supported by the Ministry of Economy and
   Competitiveness (MINECO) through the Spanish National R+D+i Plan and
   ERDF funds under the Project ALPS (RTI2018-096411-B-I00).
CR Adam Sebastian, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P362, DOI 10.1007/978-3-642-37422-7_26
   [Anonymous], 2001, SOFTWARE PRODUCT LIN
   ANSI/NCITS, 2001, ANSINCITS354 NIST IN
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P2972, DOI 10.1007/s10664-017-9499-z
   Bagheri E, 2011, SOFTWARE QUAL J, V19, P579, DOI 10.1007/s11219-010-9127-2
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Brooke J, 2013, J USABILITY STUD, V8, P29
   Christensen R., 2002, PLANE ANSWERS COMPLE
   Constantino K, 2016, ENASE: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL SOFTWARE APPROACHES TO SOFTWARE ENGINEERING, P164, DOI 10.5220/0005829801640171
   Dermeval D, 2015, EXPERT SYST APPL, V42, P4950, DOI 10.1016/j.eswa.2015.02.020
   Dubinsky Y, 2013, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2013.13
   Duran A, 2017, SOFTW SYST MODEL, V16, P1049, DOI 10.1007/s10270-015-0503-z
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   FAUZI SSM, 2012, SOFTWARE PROCESS IMP
   Fenske W, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P316, DOI 10.1109/SANER.2017.7884632
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   Fischer S, 2014, PROC IEEE INT CONF S, P391, DOI 10.1109/ICSME.2014.61
   Font Jaime., 2015, P 19 INT C SOFTWARE, P411, DOI [DOI 10.1145/2791060.2793678, 10.1145/2791060.2793678]
   Ghabach E., 2018, P 2018 12 INT C RES, P1
   Gonzalez-Huerta J, 2015, INFORM SOFTWARE TECH, V57, P405, DOI 10.1016/j.infsof.2014.05.018
   Guana V, 2013, INFORM SOFTWARE TECH, V55, P541, DOI 10.1016/j.infsof.2012.09.007
   Heradio R, 2016, INFORM SOFTWARE TECH, V72, P1, DOI 10.1016/j.infsof.2015.11.004
   International Organization for Standardization, 2014, ISO/ IEC 25000: 2014: Systems and software engineering-Systems and software Quality Requirements and Evaluation (SQuaRE)-Guide to SQuaRE
   Juristo N., 2006, 28th International Conference on Software Engineering Proceedings, P1079, DOI 10.1145/1134285.1134515
   Kang K. C., 1990, Technical Report
   Kieras D., 2001, USING KEYSTROKE LEVE
   Kontos M, 2015, MIGR DIASP CITIZEN, P1
   Koziolek H, 2016, EMPIR SOFTW ENG, V21, P411, DOI 10.1007/s10664-014-9358-0
   Krishnan S., 2011, P 8 WORKING C MINING, P103
   Krüger J, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P65, DOI 10.1145/3109729.3109736
   Lapena Raul, 2016, P 20 INT SYST SOFTW, P194, DOI [10.1145/2934466.2934485, DOI 10.1145/2934466.2934485]
   Marcolino A, 2013, P BRAZ SYMP SOFTW, P69, DOI 10.1109/SBCARS.2013.18
   Michalik B, 2011, INT SYMP EMP SOFTWAR, P187, DOI 10.1109/ESEM.2011.27
   Panach JI, 2015, INFORM SOFTWARE TECH, V62, P164, DOI 10.1016/j.infsof.2015.02.012
   Pérez F, 2018, IEEE ACCESS, V6, P56815, DOI 10.1109/ACCESS.2018.2873509
   Pierce CA, 2004, EDUC PSYCHOL MEAS, V64, P916, DOI 10.1177/0013164404264848
   Reinhartz-Berger I, 2014, EMPIR SOFTW ENG, V19, P678, DOI 10.1007/s10664-012-9234-8
   Santos J., 2016, 28 INT C SOFTW ENG K, P583, DOI [10.18293/SEKE2016-232, DOI 10.18293/SEKE2016-232]
   Schlie A., 2017, SPLC
   Tizzei LP, 2011, INFORM SOFTWARE TECH, V53, P121, DOI 10.1016/j.infsof.2010.08.007
   Tullis T.S., 2004, Usability professional association conference, V1, DOI 10.1.1.396.3677
   Vale G., 2015, PROC INT SOFTWARE PR, P176
   Villela K, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P147, DOI 10.1145/2648511.2648527
   Wohlin C., 2012, Experimentation in Software Engineering
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 45
TC 5
Z9 5
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2021
VL 130
AR 106444
DI 10.1016/j.infsof.2020.106444
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PI2JM
UT WOS:000600922900015
DA 2024-07-18
ER

PT J
AU Wang, S
   Bansal, C
   Nagappan, N
AF Wang, Song
   Bansal, Chetan
   Nagappan, Nachiappan
TI Large-scale intent analysis for identifying large-review-effort code
   changes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Change intent analysis; Review effort; Machine learning
ID CLASSIFYING SOFTWARE CHANGES; PREDICTING FAULTS; CLASSIFICATION
AB Context: Code changes to software occur due to various reasons such as bug fixing, new feature addition, and code refactoring. Change intents have been studied for years to help developers understand the rationale behind code commits. However, in most existing studies, the intent of the change is rarely leveraged to provide more specific, context aware analysis.
   Objective: In this paper, we present the first study to leverage change intent to characterize and identify Large-Review-Effort (LRE) changes-changes with large review effort.
   Method: Specifically, we first propose a feedback-driven and heuristics-based approach to identify change intents of code changes. We then characterize the changes regarding review effort by using various features extracted from change metadata and the change intents. We further explore the feasibility of automatically classifying LRE changes. We conduct our study on four large-scale projects, one from Microsoft and three are open source projects, i.e., Qt, Android, and OpenStack.
   Results: Our results show that, (i) code changes with some intents (i.e., Feature and Refactor) are more likely to be LRE changes, (ii) machine learning based prediction models are applicable for identifying LRE changes, and (iii) prediction models built for code changes with some intents achieve better performance than prediction models without considering the change intent, the improvement in AUC can be up to 19 percentage points and is 7.4 percentage points on average.
   Conclusion: The change intent analysis and its application on LRE identification proposed in this study has already been used in Microsoft to provide the review effort and intent information of changes for reviewers to accelerate the review process. To show how to deploy our approaches in real-world practice, we report a case study of developing and deploying the intent analysis system in Microsoft. Moreover, we also evaluate the usefulness of our approaches by using a questionnaire survey. The feedback from developers demonstrate its practical value.
C1 [Wang, Song] York Univ, Elect Engn & Comp Sci, N York, ON, Canada.
   [Bansal, Chetan; Nagappan, Nachiappan] Microsoft Res, Redmond, WA 98052 USA.
C3 York University - Canada; Microsoft
RP Bansal, C (corresponding author), Microsoft Res, Redmond, WA 98052 USA.
EM wangsong@eecs.yorku.ca; chetanb@microsoft.com; nachin@microsoft.com
CR Alali A, 2008, INT C PROGRAM COMPRE, P182, DOI 10.1109/ICPC.2008.24
   [Anonymous], 2007, P 4 INT WORKSH MIN S
   [Anonymous], 2012, P ACM SIGSOFT 20 INT, DOI DOI 10.1145/2393596.2393656
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Asthana S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P937, DOI 10.1145/3338906.3340449
   Azure, 2019, AZ DEV SERV
   Azure, 2019, PULL REQ LAB
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Barnett M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P134, DOI 10.1109/ICSE.2015.35
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Bengio Y, 2001, ADV NEUR IN, V13, P932
   Buckley J, 2005, J SOFTW MAINT EVOL-R, V17, P309, DOI 10.1002/smr.319
   Cui Qiang, 2017, PROC 29 INT C SOFTW, V17, P1
   Fagan M., 2002, Software Pioneers, P575
   Friedman J., 2001, ELEMENTS STAT LEARNI, V1, DOI DOI 10.1007/978-0-387-84858-7
   Fu Y, 2015, INFORM SOFTWARE TECH, V57, P369, DOI 10.1016/j.infsof.2014.05.017
   Giger E., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P217, DOI 10.1109/MSR.2012.6224284
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Guo B, 2017, P INT COMP SOFTW APP, P118, DOI 10.1109/COMPSAC.2017.153
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hamasaki K, 2013, IEEE WORK CONF MIN S, P49, DOI 10.1109/MSR.2013.6624003
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hassan AE, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P837
   Hellendoorn VJ, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P157, DOI 10.1109/MSR.2015.22
   Herzig K, 2013, PROC INT SYMP SOFTW, P118, DOI 10.1109/ISSRE.2013.6698911
   Hindle A, 2009, INT C PROGRAM COMPRE, P30, DOI 10.1109/ICPC.2009.5090025
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Kim JH, 2009, COMPUT STAT DATA AN, V53, P3735, DOI 10.1016/j.csda.2009.04.009
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kreutzer P, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P61, DOI [10.1145/2901739.2901749, 10.1109/MSR.2016.016]
   Kumar R, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P48, DOI 10.1109/BotSE.2019.00020
   Laitenberger O., 2002, HDB SOFTWARE ENG KNO, P517
   Lee T., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, P311
   Lehnert S., 2011, PROC 12 INT WORKSHOP, P41, DOI DOI 10.1145/2024445.2024454
   Lehnert S, 2012, 2012 IEEE 19TH INTERNATIONAL CONFERENCE AND WORKSHOPS ON ENGINEERING OF COMPUTER BASED SYSTEMS (ECBS), P98, DOI 10.1109/ECBS.2012.9
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   MacLeod L., 2017, IEEE SOFTW
   Maddila C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P874, DOI 10.1145/3338906.3340457
   MASHAYEKHI V, 1993, IEEE SOFTWARE, V10, P66, DOI 10.1109/52.232404
   Mehta S, 2020, PROCEEDINGS OF THE 17TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION, P435
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   NET, 2019, NET MULTITIER APPL U
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Paskevicius P, 2012, COMM COM INF SC, V319, P108
   PORTER A.A., 1996, ADV COMPUT, V42, P39
   Pruessner JC, 2003, PSYCHONEUROENDOCRINO, V28, P916, DOI 10.1016/S0306-4530(02)00108-7
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rashid, 2003, P INT WORKSH UN SOFT
   Rigby P., 2012, OPEN SOURCE PEER REV
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Ruangwan S., 2018, EMPIR SOFTW ENG, P1
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Spadini D, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P677, DOI 10.1145/3180155.3180192
   Stein M, 1997, PROC INT CONF SOFTW, P107, DOI 10.1145/253228.253250
   Sun XB, 2013, INT J SOFTW ENG KNOW, V23, P259, DOI 10.1142/S0218194013500071
   Sutherland A, 2009, PROC INT CONF SOFTW, P259, DOI 10.1109/ICSE-COMPANION.2009.5070996
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   Tan, 2017, TSE 17
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tao Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P180, DOI 10.1109/MSR.2015.24
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Thongtanunam Patanamon, 2014, P 7 INT WORKSHOP COO, P119
   Votta L. G.  Jr., 1993, SIGSOFT Software Engineering Notes, V18, P107, DOI 10.1145/167049.167070
   Wang JJ, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239523
   Wang JJ, 2019, INFORM SOFTWARE TECH, V110, P139, DOI 10.1016/j.infsof.2019.03.003
   Wang JJ, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P83, DOI 10.1109/ICSE-SEIP.2017.8
   WANG S, 2018, IEEE T SOFTW ENG
   Wang S, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P46, DOI 10.1145/3345629.3345635
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Well A. D., 2003, RES DESIGN STAT ANAL
   Wessel M, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P38, DOI 10.1109/BotSE.2019.00018
   Wilkerson JW, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P625, DOI 10.1109/ICSM.2012.6405338
   Wyrich M, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P24, DOI 10.1109/BotSE.2019.00015
   Xiaobing Sun, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P373, DOI 10.1109/COMPSAC.2010.45
   Xinye Tang, 2015, 2015 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM). Proceedings, P1, DOI 10.1109/ESEM.2015.7321218
   Yan M, 2016, J SYST SOFTWARE, V113, P296, DOI 10.1016/j.jss.2015.12.019
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
NR 95
TC 7
Z9 8
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2021
VL 130
AR 106408
DI 10.1016/j.infsof.2020.106408
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PI2JM
UT WOS:000600922900014
DA 2024-07-18
ER

PT J
AU Wu, XX
   Zheng, W
   Chen, X
   Zhao, Y
   Yu, TT
   Mu, DJ
AF Wu, Xiaoxue
   Zheng, Wei
   Chen, Xiang
   Zhao, Yu
   Yu, Tingting
   Mu, Dejun
TI Improving high-impact bug report prediction with combination of
   interactive machine learning and active learning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE High-impact bug report; Interactive machine learning; Active learning;
   Uncertainty-sampling; Security bug report prediction
ID DEFECT; IDENTIFICATION; SEVERITY
AB Context: Bug reports record issues found during software development and maintenance. A high-impact bug report (HBR) describes an issue that can cause severe damage once occurred after deployment. Identifying HBRs from the bug repository as early as possible is crucial for guaranteeing software quality.
   Objective: In recent years, many machine learning-based approaches have been proposed for HBR prediction, and most of them are based on supervised machine learning. However, the assumption of supervised machine learning is that it needs a large number of labeled data, which is often difficult to gather in practice.
   Method: In this paper, we propose hbrPredictor, which combines interactive machine learning and active learning to HBR prediction. On the one hand, it can dramatically reduce the number of bug reports required for prediction model training; on the other hand, it improves the diversity and generalization ability of training samples via uncertainty sampling.
   Result: We take security bug report (SBR) prediction as an example of HBR prediction and perform a large-scale experimental evaluation on datasets from different open-source projects. The results show: (1) hbrPredictor substantially outperforms the two baselines and obtains the maximum values of F1-score (0.7939) and AUC (0.8789); (2) with the dynamic stop criteria, hbrPredictor could reach its best performance with only 45% and 13% of the total bug reports for small-sized datasets and large-sized datasets, respectively.
   Conclusion: By reducing the number of required training samples, hbrPredictor could substantially save the data labeling effort without decreasing the effectiveness of the model.
C1 [Wu, Xiaoxue; Mu, Dejun] Northwestern Polytech Univ, Sch Cyberspace Secur, Xian, Peoples R China.
   [Zheng, Wei] Northwestern Polytech Univ, Sch Software, Xian, Peoples R China.
   [Chen, Xiang] Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
   [Zhao, Yu; Yu, Tingting] Univ Kentucky, Sch Comp Sci, Lexington, KY 40506 USA.
C3 Northwestern Polytechnical University; Northwestern Polytechnical
   University; Nantong University; University of Kentucky
RP Zheng, W (corresponding author), Northwestern Polytech Univ, Sch Software, Xian, Peoples R China.
EM wzheng@nwpu.edu.cn
RI Chen, Xiang/AAG-3663-2019; yu, tingting/HGA-4783-2022
OI Chen, Xiang/0000-0002-1180-3891; Zheng, Wei/0000-0001-7969-1630
FU Innovation Foundation for Doctor Dissertation of Northwestern
   Polytechnical University, China [CX202067]; Key Laboratory of Advanced
   Perception and Intelligent Control of High-end Equipment, Ministry of
   Education, China [GDSC202006]
FX This research was partially supported by the Innovation Foundation for
   Doctor Dissertation of Northwestern Polytechnical University, China
   (CX202067) and the Key Laboratory of Advanced Perception and Intelligent
   Control of High-end Equipment, Ministry of Education, China
   (GDSC202006).
CR Akhtar N, 2018, IEEE ACCESS, V6, P14410, DOI 10.1109/ACCESS.2018.2807385
   Amershi S, 2014, AI MAG, V35, P105, DOI 10.1609/aimag.v35i4.2513
   [Anonymous], 2004, Hackers and Painters, Big Ideas from the Computer Age
   Bernard J, 2018, IEEE T VIS COMPUT GR, V24, P298, DOI 10.1109/TVCG.2017.2744818
   Beyer C., 2015, P 15 INT C KNOWL TEC, P1, DOI 10.1145/2809563.2809594
   Bi Tingting, 2020, ARXIV200803656
   Chaparro O, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P86, DOI 10.1145/3338906.3338947
   Chaparro O, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/3106237.3106285
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen Jie, 2020, SOFTWARE QUAL J, P1
   Chen NC, 2018, IUI 2018: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON INTELLIGENT USER INTERFACES, P269, DOI 10.1145/3172944.3172950
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   Chen Xiang, 2020, INFORM SOFTWARE TECH
   Dudley JJ, 2018, ACM T INTERACT INTEL, V8, DOI 10.1145/3185517
   Fails J. A., 2003, IUI 03. 2003 International Conference on Intelligent User Interfaces, P39, DOI 10.1145/604045.604056
   Fan Y, 2019, INT J NEUROSCI, V129, P30, DOI 10.1080/00207454.2018.1492575
   Feather Martin, 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, P79
   Gegick Michael, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P11, DOI 10.1109/MSR.2010.5463340
   Goseva-Popstojanova K, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P344, DOI 10.1109/QRS.2018.00047
   Gunawi Haryadi S., 2014, P ACM S CLOUD COMP, P1
   Han X, 2018, IEEE INT CONF AUTOM, P17, DOI 10.1145/3238147.3238204
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Huang LG, 2015, AUTOMAT SOFTW ENG, V22, P3, DOI 10.1007/s10515-014-0155-1
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Huang Sheng-Jun, 2019, ARXIV PREPRINT ARXIV
   Jiang L, 2019, J VISUAL-JAPAN, V22, P401, DOI 10.1007/s12650-018-0531-1
   Kamongi P, 2013, INT CONF SOFTW SECUR, P218, DOI 10.1109/SERE.2013.31
   Liu C, 2019, INFORM SOFTWARE TECH, V107, P125, DOI 10.1016/j.infsof.2018.11.005
   Liu MC, 2016, IEEE T VIS COMPUT GR, V22, P250, DOI 10.1109/TVCG.2015.2467554
   Liu WJ, 2018, INT J SOFTW ENG KNOW, V28, P537, DOI 10.1142/S0218194018500158
   Liu ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P176, DOI 10.1109/ASE.2019.00026
   Malbasa V, 2017, IEEE T SMART GRID, V8, P3117, DOI 10.1109/TSG.2017.2693394
   Menzies T, 2019, ARXIV190506872
   Ni C., 2020, IEEE Transactions on Software Engineering
   Ohira M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P518, DOI 10.1109/MSR.2015.78
   Olsson F., 2009, SWEDISH I COMPUT SCI, P1
   Peters Fayola, 2017, IEEE T SOFTWARE ENG
   Quarta D, 2017, P IEEE S SECUR PRIV, P268, DOI 10.1109/SP.2017.20
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Romano J., 2006, ANN M FLORIDA ASS IN
   Sacha D, 2017, IEEE T VIS COMPUT GR, V23, P241, DOI 10.1109/TVCG.2016.2598495
   Settles Burr., 2010, Active learning literature survey, V15, P201
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Singh A, 2017, J NETW COMPUT APPL, V79, P88, DOI 10.1016/j.jnca.2016.11.027
   Tian Y, 2016, EMPIR SOFTW ENG, V21, P2298, DOI 10.1007/s10664-015-9409-1
   Trivedi G., 2017, J AM MED INFORM ASS, V25
   Valdivia-Garcia H, 2018, J SYST SOFTWARE, V143, P44, DOI 10.1016/j.jss.2018.03.053
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/SANER48275.2020.9054857, 10.1109/saner48275.2020.9054857]
   Wen W, 2016, PROC INT SYMP SOFTW, P150, DOI 10.1109/ISSRE.2016.29
   Wijayasekara D, 2014, IEEE IND ELEC, P3612, DOI 10.1109/IECON.2014.7049035
   Wu XX, 2020, J SYST SOFTWARE, V160, DOI 10.1016/j.jss.2019.110456
   Xia X, 2015, AUTOMAT SOFTW ENG, V22, P75, DOI 10.1007/s10515-014-0162-2
   Yang XL, 2017, J COMPUT SCI TECH-CH, V32, P181, DOI 10.1007/s11390-017-1713-3
   Yin LL, 2018, KNOWL-BASED SYST, V153, P40, DOI 10.1016/j.knosys.2018.04.020
   Yu TT, 2019, IEEE T SOFTWARE ENG, V45, P558, DOI 10.1109/TSE.2018.2791521
   Zhang J, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-014-5241-2
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
NR 58
TC 77
Z9 78
U1 1
U2 33
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2021
VL 133
AR 106530
DI 10.1016/j.infsof.2021.106530
EA JAN 2021
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QL2TC
UT WOS:000620932900004
DA 2024-07-18
ER

PT J
AU Watanabe, WM
   Felizardo, KR
   Candido , A
   de Souza, ÉF
   Neto, JED
   Vijaykumar, NL
AF Watanabe, Willian Massami
   Felizardo, Katia Romero
   Candido Jr, Arnaldo
   de Souza, Erica Ferreira
   de Campos Neto, Jose Ede
   Vijaykumar, Nandamudi Lankalapalli
TI Reducing efforts of software engineering systematic literature reviews
   updates using text classification
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic literature review; SLR; Automatic selection; Review update;
   Text classification; Document classification; Text categorization
ID STRATEGY
AB Context: Systematic Literature Reviews (SLRs) are frequently used to synthesize evidence in Software Engineering (SE), however replicating and keeping SLRs up-to-date is a major challenge. The activity of studies selection in SLR is labor intensive due to the large number of studies that must be analyzed. Different approaches have been investigated to support SLR processes, such as: Visual Text Mining or Text Classification. But acquiring the initial dataset is time-consuming and labor intensive.
   Objective: In this work, we proposed and evaluated the use of Text Classification to support the studies selection activity of new evidences to update SLRs in SE.
   Method: We applied Text Classification techniques to investigate how effective and how much effort could be spared during the studies selection phase of an SLR update. Considering the SLRs update scenario, the studies analyzed in the primary SLR could be used as a classified dataset to train Supervised Machine Learning algorithms. We conducted an experiment with 8 Software Engineering SLRs. In the experiments, we investigated the use of multiple preprocessing and feature extraction tasks such as tokenization, stop words removal, word lemmatization, TF-IDF (Term-Frequency/Inverse-Document-Frequency) with Decision Tree and Support Vector Machines as classification algorithms. Furthermore, we configured the classifier activation threshold for maximizing Recall, hence reducing the number of Missed selected studies.
   Results: The techniques accuracies were measured and the results achieved on average a F-Score of 0.92 and 62% of exclusion rate when varying the activation threshold of the classifiers, with a 4% average number of Missed selected studies. Both the Exclusion rate and number of Missed selected studies were significantly different when compared to classifier which did not use the configuration of the activation threshold.
   Conclusion: The results showed the potential of the techniques in reducing the effort required of SLRs updates.
C1 [Watanabe, Willian Massami; Felizardo, Katia Romero; de Souza, Erica Ferreira; de Campos Neto, Jose Ede] Fed Technol Univ Parana, Cornelio Procopio, PR, Brazil.
   [Candido Jr, Arnaldo] Fed Technol Univ Parana, Medianeira, PR, Brazil.
   [Vijaykumar, Nandamudi Lankalapalli] Natl Inst Space Res, Sao Jose Dos Campos, SP, Brazil.
   [Vijaykumar, Nandamudi Lankalapalli] Univ Fed Sao Paulo, Sao Jose Dos Campos, SP, Brazil.
C3 Universidade Tecnologica Federal do Parana; Universidade Tecnologica
   Federal do Parana; Instituto Nacional de Pesquisas Espaciais (INPE);
   Universidade Federal de Sao Paulo (UNIFESP)
RP Watanabe, WM (corresponding author), Fed Technol Univ Parana, Cornelio Procopio, PR, Brazil.
EM wwatanabe@utfpr.edu.br; katiascannavino@utfpr.edu.br;
   arnaldoc@utfpr.edu.br; ericasouza@utfpr.edu.br; vijay.nl@inpe.br;
   vijaykumar@unifesp.br
RI Souza, Erica/IVV-7492-2023; Watanabe, Willian/B-8908-2016
OI Watanabe, Willian/0000-0001-6910-5730
FU CNPq; CAPES; UTFPR
FX The authors thank UTFPR, CNPq and CAPES for supporting this research.
CR Alabool H, 2018, J SYST SOFTWARE, V139, P161, DOI 10.1016/j.jss.2018.01.038
   Allahyari M, 2017, INT J ADV COMPUT SC, V8, P397, DOI 10.14569/IJACSA.2017.081052
   [Anonymous], 1963, DISTRIBUTION FREE MU
   [Anonymous], 2010, Proceedings of the NAACL HLT 2010 Fifth Workshop on Innovative Use of NLP for Building Educational Applications
   Badampudi D, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P306, DOI 10.1145/3319008.3319358
   Bansal T, 2016, PROCEEDINGS OF THE 10TH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS'16), P107, DOI 10.1145/2959100.2959180
   Barnaghi P, 2016, PROCEEDINGS 2016 IEEE SECOND INTERNATIONAL CONFERENCE ON BIG DATA COMPUTING SERVICE AND APPLICATIONS (BIGDATASERVICE 2016), P52, DOI 10.1109/BigDataService.2016.36
   Bekhuis T, 2014, PLOS ONE, V9, DOI 10.1371/journal.pone.0086277
   Bekhuis T, 2012, ARTIF INTELL MED, V55, P197, DOI 10.1016/j.artmed.2012.05.002
   Brito M., 2010, 22 IFIP INT C TESTIN, P79
   Budgen D, 2018, INFORM SOFTWARE TECH, V95, P62, DOI 10.1016/j.infsof.2017.10.017
   Budgen D, 2018, INFORM SOFTWARE TECH, V94, P234, DOI 10.1016/j.infsof.2017.10.012
   Cartaxo Bruno, 2018, 22 INT C EV ASS SOFT, P24, DOI DOI 10.1145/3210459.3210462
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   Dieste O, 2008, SERA 2008: 6TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P143, DOI 10.1109/SERA.2008.35
   Felizardo K.R., 2014, INFORM SOFTWARE TECH, V10, P1079
   Felizardo K.R., 2017, EUROMI CRO SEAA 2017, P1
   Felizardo K.R., 2014, P 18 INT C EVALUATIO, P1
   Felizardo KR, 2011, INT SYMP EMP SOFTWAR, P77, DOI 10.1109/ESEM.2011.16
   Felizardo KatiaRomero., 2016, Proceedings of the 10th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, P53
   Feng LY, 2017, ASIA PAC SOFWR ENG, P41, DOI 10.1109/APSEC.2017.10
   Ferrari F., 2008, 5th Experimental Software Engineering Latin America Workshop (ESELAW), P1
   Friedman M, 1939, J AM STAT ASSOC, V34, P109, DOI 10.2307/2279169
   Garces L., 2017, 29 INT C SOFTW ENG K, P91
   Adeva JJG, 2014, EXPERT SYST APPL, V41, P1498, DOI 10.1016/j.eswa.2013.08.047
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Holten D, 2006, IEEE T VIS COMPUT GR, V12, P741, DOI 10.1109/TVCG.2006.147
   Imtiaz Salma, 2013, P 17 INT C EV ASS SO, P177
   Jin CX, 2015, IETE J RES, V61, P351, DOI 10.1080/03772063.2015.1021385
   Joachims T, 1999, MACHINE LEARNING, PROCEEDINGS, P200
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kumar A., 2016, MASTERING TEXT MININ
   Kumar V., 2006, Introduction to Data Mining
   Liu Y, 2017, INFORM SCIENCES, V394, P38, DOI 10.1016/j.ins.2017.02.016
   LUHN HP, 1958, IBM J RES DEV, V2, P159, DOI 10.1147/rd.22.0159
   Malheiros Viviane, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P245
   Miwa M, 2014, J BIOMED INFORM, V51, P242, DOI 10.1016/j.jbi.2014.06.005
   Molina Giovanni, 2019, ARXIV190913016
   Nepomuceno V, 2019, INFORM SOFTWARE TECH, V109, P40, DOI 10.1016/j.infsof.2019.01.005
   Octaviano FR, 2015, EMPIR SOFTW ENG, V20, P1898, DOI 10.1007/s10664-014-9342-8
   Onan A, 2018, J INF SCI, V44, P28, DOI 10.1177/0165551516677911
   Paulovich FV, 2008, IEEE T VIS COMPUT GR, V14, P1229, DOI 10.1109/TVCG.2008.138
   Paulovich FV, 2008, IEEE T VIS COMPUT GR, V14, P564, DOI 10.1109/TVCG.2007.70443
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Rokach L., DECISION TREES, P165
   Salinca A, 2016, INT SYMP SYMB NUMERI, P247, DOI 10.1109/SYNASC.2015.46
   Singh P., 2017, 21 INT C EVALUATION, P236, DOI DOI 10.1145/3084226.3084275
   Stol KJ, 2015, IEEE-ACM INT WKSP CO, P47, DOI 10.1109/CESI.2015.15
   Timsina P, 2016, P ANN HICSS, P1195, DOI 10.1109/HICSS.2016.151
   Tomassetti Federico, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P31, DOI 10.1049/ic.2011.0004
   Tripathy A, 2016, EXPERT SYST APPL, V57, P117, DOI 10.1016/j.eswa.2016.03.028
   Wang P, 2016, NEUROCOMPUTING, V174, P806, DOI 10.1016/j.neucom.2015.09.096
   Wohlin C., 2014, EASE, P321
   Wohlin C, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916006
   Xiong ZH, 2018, FRONT PHYSIOL, V9, DOI 10.3389/fphys.2018.00835
   Yao CG, 2018, CHAOS, V28, DOI 10.1063/1.5018707
   Yin S, 2016, INFORM SCIENCES, V370, P92, DOI 10.1016/j.ins.2016.07.047
   Yu Z, 2019, EXPERT SYST APPL, V120, P57, DOI 10.1016/j.eswa.2018.11.021
   Zhang L, 2018, J COMPUT SCI TECH-CH, V33, P876, DOI 10.1007/s11390-018-1864-x
NR 61
TC 9
Z9 11
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2020
VL 128
AR 106395
DI 10.1016/j.infsof.2020.106395
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NZ0FW
UT WOS:000576767100008
DA 2024-07-18
ER

PT J
AU Soucha, M
   Bogdanov, K
AF Soucha, Michal
   Bogdanov, Kirill
TI State identification sequences from the splitting tree
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Splitting tree; Separating sequence; Harmonized state identifiers;
   Adaptive distinguishing sequence; Finite-state machine; Software
   testing; Regular inference
AB Context: Software testing based on finite-state machines.
   Objective: Improving the performance of existing testing methods by construction of more efficient separating sequences, so that states entered by a system under test can be identified in a much shorter span of time.
   Method: This paper proposes an efficient way to construct separating sequences for subsets of states for any deterministic finite-state machine. It extends an existing algorithm that builds an adaptive distinguishing sequence (ADS) from a splitting tree to machines that do not possess an ADS. Our extension to this construction algorithm allows one not only to construct a separating sequence for any subset of states but also form sets of separating sequences, such as harmonized state identifiers (HSI) and incomplete adaptive distinguishing sequences, that are used by efficient testing and learning algorithms.
   Results: The experiments confirm that the length and number of test sequences produced by testing methods that use HSIs constructed by our extension is significantly improved.
   Conclusion: By constructing more efficient separating sequences the performance of existing test methods significantly improves.
C1 [Soucha, Michal; Bogdanov, Kirill] Univ Sheffield, Dept Comp Sci, Sheffield, S Yorkshire, England.
C3 University of Sheffield
RP Soucha, M (corresponding author), Univ Sheffield, Dept Comp Sci, Sheffield, S Yorkshire, England.
EM michal.soucha@gmail.com; k.bogdanov@sheffield.ac.uk
RI Bogdanov, Kirill/JXW-7081-2024
OI Bogdanov, Kirill/0000-0003-3156-0695; Soucha, Michal/0000-0002-5793-7852
CR CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Dorofeeva R, 2005, LECT NOTES COMPUT SC, V3731, P204
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   Gill A., 1962, Introduction to the Theory of Finite-State Machines
   Hierons RM, 2015, COMPUT J, V58, P3089, DOI 10.1093/comjnl/bxv041
   LEE D, 1994, IEEE T COMPUT, V43, P306, DOI 10.1109/12.272431
   Luo G., 1995, Protocol Test Systems. 7th Workshop. 7th IFIP WG 6.1 International Workshop on Protocol Test Systems, P95
   PETRENKO A, 1991, P 4 INT WORKSH PROT, P83
   Simao A, 2012, SOFTW TEST VERIF REL, V22, P435, DOI 10.1002/stvr.452
   Smetsers R, 2016, LECT NOTES COMPUT SC, V9618, P181, DOI 10.1007/978-3-319-30000-9_14
   Soucha M., 2019, THESIS
   Soucha M, 2015, THESIS
   Soucha M., 2014, THESIS
   Soucha M, 2018, IEEE ICST WORKSHOP, P194, DOI 10.1109/ICSTW.2018.00050
   Vasilevskii M.P., 1973, CYBERNETICS, V4, P653
NR 15
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2020
VL 123
AR 106297
DI 10.1016/j.infsof.2020.106297
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK1XD
UT WOS:000530651200014
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Eghan, EE
   Moslehi, P
   Rilling, J
   Adams, B
AF Eghan, Ellis E.
   Moslehi, Parisa
   Rilling, Juergen
   Adams, Bram
TI The missing link - A semantic web based approach for integrating
   screencasts with security advisories
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Crowd-based documentation; Mining video content; Software security
   vulnerabilities; Software dependencies; Software traceability; Semantic
   knowledge modeling; Semantic web
AB Context Collaborative tools and repositories have been introduced to facilitate open source software development, allowing projects, developers, and users to share their knowledge and expertise through formal and informal channels such as repositories, Q&A websites, blogs and screencasts. While significant progress has been made in mining and cross-linking traditional software repositories, limited work exists in making multimedia content in the form of screencasts or audio recordings an integrated part of software engineering processes.
   Objective: The objective of this research is to provide a standardized ontological representation that allows for a seamless knowledge integration of screencasts with other software artifacts across knowledge resource boundaries.
   Method: In this paper, we propose a modeling approach that takes advantage of the Semantic Web and its inference services to capture and establish traceability links between knowledge extracted from different resources such as vulnerability information in NVD, project dependency information from Maven Central, and YouTube screencasts.
   Results: We performed a case study on 48 videos that illustrate attacks on vulnerable systems and show that our approach can successfully link relevant vulnerabilities and screencasts with an average precision of 98% and an average recall of 54% when vulnerability identifiers (CVE ID) are explicitly mentioned in the metadata (title and description) of videos. When no CVE ID is present, our initial results show that for a reduced search space (for one vulnerability), using only the textual content of the image frames, our approach is still able to link video-vulnerability pairs and rank the correct result within the top two positions of the result set.
   Conclusion: Our approach not only establishes bi-directional, direct, and indirect traceability links from screencasts to these other software artifacts; these links can also be used to guide practitioners in comprehending the potential security impact of vulnerable components in their projects.
C1 [Eghan, Ellis E.; Moslehi, Parisa; Rilling, Juergen] Concordia Univ, Montreal, PQ, Canada.
   [Adams, Bram] Polytech Montreal, Montreal, PQ, Canada.
C3 Concordia University - Canada; Universite de Montreal; Polytechnique
   Montreal
RP Eghan, EE (corresponding author), Concordia Univ, Montreal, PQ, Canada.
EM e_eghan@encs.concordia.ca; p_mosleh@encs.concordia.ca;
   juergen.rilling@concordia.ca; bram.adams@polymtl.ca
RI dbs, hunzla/HZL-0324-2023
OI Eghan, Ellis E./0000-0003-0186-9173; Adams, Bram/0000-0001-7213-4006
CR Alqahtani SS, 2017, IEEE INT CONF SOFTW, P80, DOI 10.1109/ICST.2017.15
   Alqahtani SS, 2016, PROC INT SYMP SOFTW, P219, DOI 10.1109/ISSRE.2016.12
   Alqahtani SS, 2016, SCI COMPUT PROGRAM, V121, P153, DOI 10.1016/j.scico.2016.01.005
   [Anonymous], INT C SOFTW ENG KNOW
   [Anonymous], 2015 IEEE 23 INT C P
   [Anonymous], 2004, W3C RECOMMENDATION
   [Anonymous], 2008, MAVEN DEFINITIVE GUI
   [Anonymous], P 18 INT C SOFTW ENG
   [Anonymous], 2013, FINDING SOURCE CODE
   [Anonymous], SOFTW QUAL J
   [Anonymous], P 15 IEEE WORK C MIN
   [Anonymous], LEARNING SPAROL
   [Anonymous], P 13 WORK C MIN SOFT
   [Anonymous], 2009, INTRO INFORM RETRIEV
   [Anonymous], 2000, P C FUTURE SOFTWARE, DOI DOI 10.1145/336512.336559
   [Anonymous], 2015, OWASP DEPENDENCY CHE
   [Anonymous], 2007, 4 INT WORKSH MIN SOF
   [Anonymous], P EUR SEM WEB C 8 PH
   [Anonymous], 2013, SOURCE CODE SIMILARI
   [Anonymous], 2006, META MODELLING ONTOL
   [Anonymous], 2012, ACM SIGSOFT SOFTWARE
   Bao LF, 2017, EMPIR SOFTW ENG, V22, P134, DOI 10.1007/s10664-015-9417-1
   Bao LF, 2015, IEEE INT CONF AUTOM, P277, DOI 10.1109/ASE.2015.43
   Bertoa M., 2006, Ontologies for Software Engineering and Software Technology, P175, DOI DOI 10.1007/3-540-34518-3_6
   Cadariu M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P516, DOI 10.1109/SANER.2015.7081868
   Cheriet M, 2007, CHARACTER RECOGNITION SYSTEMS: A GUIDE FOR STUDENTS AND PRACTIONERS, P1, DOI 10.1002/9780470176535
   Choi J.-D., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P232, DOI 10.1145/158511.158639
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dietrich J, 2005, 2005 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P243, DOI 10.1109/ASWEC.2005.6
   Duncan I, 2013, NURS EDUC TODAY, V33, P1576, DOI 10.1016/j.nedt.2012.12.013
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Henderson-Sellers B, 2011, J SYST SOFTWARE, V84, P301, DOI 10.1016/j.jss.2010.10.025
   Hirzel M, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1216374.1216379
   Hyland-Wood D, 2006, SECOND INTERNATIONAL IEEE WORKSHOP ON SOFTWARE EVOLVABILITY, PROCEEDINGS, P23, DOI 10.1109/SOFTWARE-EVOLVABILITY.2006.16
   Kimmig A., 2012, P NIPS WORKSH PROB P, P1
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Lian Yu, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P92, DOI 10.1109/COMPSAC.2008.73
   MacLeod L, 2017, EMPIR SOFTW ENG, V22, P1478, DOI 10.1007/s10664-017-9501-9
   Manadhata PK, 2011, IEEE T SOFTWARE ENG, V37, P371, DOI 10.1109/TSE.2010.60
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Mann C. J. H., 2003, Kybernetes, V32, DOI [10.1108/k.2003.06732iae.006, DOI 10.1108/K.2003.06732IAE.006]
   Nguyen VietHung., 2013, P 8 ACM SIGSAC S INF, P493
   Pashchenko I, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268920
   Plate H, 2015, PROC IEEE INT CONF S, P411, DOI 10.1109/ICSM.2015.7332492
   Ponta SE, 2018, PROC IEEE INT CONF S, P449, DOI 10.1109/ICSME.2018.00054
   Ponzanelli L, 2016, PROC INT CONF SOFTW, P261, DOI 10.1145/2884781.2884824
   Ponzanelli Luca, 2017, IEEE T SOFTWARE ENG
   Rutar N, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P245, DOI 10.1109/ISSRE.2004.1
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Tappolet J, 2010, J WEB SEMANT, V8, P225, DOI 10.1016/j.websem.2010.04.009
   Williams J., 2012, The unfortunate reality of insecure libraries, P1
   Witte R, 2007, LECT NOTES COMPUT SC, V4519, P37
   Würsch M, 2012, COMPUTING, V94, P857, DOI 10.1007/s00607-012-0204-1
   Yadid S, 2016, ONWARD!'16: PROCEEDINGS OF THE 2016 ACM INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE, P98, DOI 10.1145/2986012.2986021
NR 55
TC 2
Z9 3
U1 1
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2020
VL 117
AR 106197
DI 10.1016/j.infsof.2019.106197
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JN4MX
UT WOS:000496874400002
DA 2024-07-18
ER

PT J
AU Sora, I
   Chirila, CB
AF Sora, Ioana
   Chirila, Ciprian-Bogdan
TI Finding key classes in object-oriented software systems by techniques
   based on static analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Key classes; Program comprehension; Static analysis
ID UML DIAGRAMS; FAMILY; CODE
AB Context Software maintenance is burdened by program comprehension activities which consume a big part of project resources. Program comprehension is difficult because the code to be analyzed is very large and the documentation may not be well structured to help navigating through the code.
   Objective: Tools should support the early stages of program comprehension. Our goal is to build tools that analyze the code and filter this large amount of information such that only the most important information is presented to the software maintenance team. In the case of object-oriented systems, finding the important information means finding the most important classes, also called the key classes of the system.
   Method: In this work, we formulate and explore several hypotheses regarding which are the class attributes that characterize important classes. By class attributes, we understand here different metrics that quantify properties of the class such as its connections and relationships with other classes. All the necessary input data for computing class attributes are extracted from code by static analysis. We experimentally investigate which attributes are best suited to rank classes according to their importance, doing an extensive empirical study on fifteen software systems.
   Result: Attributes from the categories of direct connections and network centrality are the best for finding key classes. We identified three class attributes which are best as class ranking criteria: PR-U2-W and CONN-TOTAL-W when the target set of key classes is small and CONN-TOTAL when the target set has a large and variable size. We show that the method of ranking classes based on these attributes outperforms known related work approaches of finding key classes.
   Conclusions: Our method allows us to build easy-to-use fully automatic tools which find almost instantly the key classes of a software system starting from its code.
C1 [Sora, Ioana; Chirila, Ciprian-Bogdan] Politehn Univ Timisoara, Dept Comp & Informat Technol, Timisoara, Romania.
C3 Universitatea Politehnica Timisoara
RP Sora, I (corresponding author), Politehn Univ Timisoara, Dept Comp & Informat Technol, Timisoara, Romania.
EM ioana.sora@cs.upt.ro
RI Sora, Ioana/E-8885-2013; Chirila, Ciprian-Bogdan/D-1347-2011
OI Sora, Ioana/0000-0002-9994-7274; Chirila,
   Ciprian-Bogdan/0000-0002-7819-5237
FU grant of the Romanian National Authority for Scientific Research and
   Innovation, CNCS/CCCDI UEFISCDI within PNCDI III
   [PN-III-P2-2.1-PED-2016-0999]
FX This work was supported by a grant of the Romanian National Authority
   for Scientific Research and Innovation, CNCS/CCCDI UEFISCDI, project
   number PN-III-P2-2.1-PED-2016-0999, within PNCDI III.
CR Amarjeet, 2017, INFORM SOFTWARE TECH, V82, P96, DOI 10.1016/j.infsof.2016.09.011
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   [Anonymous], 2016, EVALUATION NOVEL APP
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Brito e Abreu F., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P13, DOI 10.1109/CSMR.2000.827300
   Ding Y, 2016, MATH PROBL ENG, V2016, DOI 10.1155/2016/3858637
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Fernández-Sáez AM, 2016, EMPIR SOFTW ENG, V21, P212, DOI 10.1007/s10664-014-9354-4
   Fernández-Sáez AM, 2015, INFORM SOFTWARE TECH, V57, P644, DOI 10.1016/j.infsof.2014.05.014
   FREEMAN LC, 1977, SOCIOMETRY, V40, P35, DOI 10.2307/3033543
   Hammad M, 2010, CAIRO INT BIOM ENG, P142, DOI 10.1109/CIBEC.2010.5716065
   Inoue K, 2005, IEEE T SOFTWARE ENG, V31, P213, DOI 10.1109/TSE.2005.38
   Kamran M., 2013, LECT NOTES ELECT ENG, V211, P3
   Kamran M., 2016, J APPL COMPUT SCI MA, V10, P21
   Kamran M, 2017, PROCEEDINGS OF 2017 INTERNATIONAL CONFERENCE ON COMMUNICATION, COMPUTING AND DIGITAL SYSTEMS (C-CODE), P233, DOI 10.1109/C-CODE.2017.7918934
   Kleinberg JM, 1999, ACM COMPUT SURV, V31
   Kpodjedo S., 2008, P 2008 INT WORKSH RE, P6, DOI DOI 10.1145/1454247.1454250
   Meyer P, 2014, ADV COMPLEX SYST, V17, DOI 10.1142/S0219525915500046
   Neate B, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P369
   Noda K, 2018, IEICE T INF SYST, VE101D, P1751, DOI 10.1587/transinf.2017KBP0018
   Osman H, 2013, PROC IEEE INT CONF S, P140, DOI 10.1109/ICSM.2013.25
   Osman Mohd Hafeez, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P159, DOI 10.1109/APSEC.2014.34
   Osman MH, 2014, 2014 4TH WORLD CONGRESS ON INFORMATION AND COMMUNICATION TECHNOLOGIES (WICT), P158, DOI 10.1109/WICT.2014.7077321
   Page L., 1999, PAGERANK CITATION RA, DOI DOI 10.1109/IISWC.2012.6402911
   Pan WF, 2018, FUTURE GENER COMP SY, V81, P188, DOI 10.1016/j.future.2017.10.006
   Perin F., 2010, PROC 4 WORKSHOP FAMI, P1
   Savic M, 2017, COMPUTING, V99, P1055, DOI 10.1007/s00607-017-0549-6
   Savic M, 2014, INFORM SOFTWARE TECH, V56, P1268, DOI 10.1016/j.infsof.2014.04.011
   Sora CI, 2018, 2018 IEEE 12 INT S, P1
   Sora Ioana, 2010, IEEE International Joint Conference on Computational Cybernetics and Technical Informatics (ICCC-CONTI 2010). IEEE 8th International Conference on Computational Cybernetics and 9th International Conference on Technical Informatics, P259, DOI 10.1109/ICCCYB.2010.5491289
   Sora I., 2019, DATA FINDING KEY CLA, DOI [10.17632/7h57xwtrcb.1, DOI 10.17632/7H57XWTRCB.1]
   Sora I, 2013, COMM COM INF SC, V410, P95
   Sora I, 2015, ENASE 2015 - PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P129
   Sora I, 2015, 2015 IEEE 10TH JUBILEE INTERNATIONAL SYMPOSIUM ON APPLIED COMPUTATIONAL INTELLIGENCE AND INFORMATICS (SACI), P495, DOI 10.1109/SACI.2015.7208254
   Steidl D., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P93, DOI 10.1109/WCRE.2012.19
   Tahir A, 2015, COMM COM INF SC, V551, P63, DOI 10.1007/978-3-319-27218-4_5
   Tahvildari L, 2004, J SOFTW MAINT EVOL-R, V16, P331, DOI 10.1002/smr.299
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Thung F., 2014, P 22 INT C PROGR COM, P110, DOI 10.1145/2597008.2597157
   Vale LD, 2015, PROC IEEE INT CONF S, P566, DOI 10.1109/ICSM.2015.7332515
   Yang XL, 2016, P INT COMP SOFTW APP, P22, DOI 10.1109/COMPSAC.2016.83
   Zaidman A, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P134, DOI 10.1109/CSMR.2005.12
   Zaidman A, 2006, INT C PROGRAM COMPRE, P74, DOI 10.1109/ICPC.2006.26
   Zaidman A, 2008, J SOFTW MAINT EVOL-R, V20, P387, DOI 10.1002/smr.370
NR 45
TC 18
Z9 19
U1 2
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2019
VL 116
AR 106176
DI 10.1016/j.infsof.2019.106176
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JM6SN
UT WOS:000496342000006
DA 2024-07-18
ER

PT J
AU Teixeira, EN
   Aleixo, FA
   Amâncio, FDD
   Oliveira, E
   Kulesza, U
   Werner, C
AF Teixeira, Eldanae Nogueira
   Aleixo, Fellipe Araujo
   de Sousa Amancio, Francisco Dione
   Oliveira Jr, Edson
   Kulesza, Uira
   Werner, Claudia
TI Software process line as an approach to support software process reuse:
   A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic review; Software process; Process reuse; Software process
   line; Process variability management
ID PROCESS VARIABILITY
AB Context:Software Process Line (SPrL) aims at providing a systematic reuse technique to support reuse experiences and knowledge in the definition of software processes for new projects thus contributing to reduce effort and costs and to achieve improvements in quality. Although the research body in SPrL is expanding, it is still an immature area with results offering an overall view scattered with no consensus.
   Objective: The goal of this work is to identify existing approaches for developing, using, managing and visualizing the evolution of SPrLs and to characterize their support, especially during the development of reusable process family artefacts, including an overview of existing SPrL supporting tools in their multiple stages; to analyse variability management and component-based aspects in SPrL; and, finally, to list practical examples and conducted evaluations. This research aims at reaching a broader and more consistent view of the research area and to provide perspectives and gaps for future research.
   Method: We performed a systematic literature review according to well-established guidelines set. We used tools to partially support the process, which relies on a six-member research team.
   Results: We report on 49 primary studies that deal mostly with conceptual or theoretical proposals and the domain engineering stage. Years 2014, 2015, and 2018 yielded the largest number of articles. This can indicate SPrL as a recent research theme and one that attracts ever-increasing interest.
   Conclusion: Although this research area is growing, there is still a lack of practical experiences and approaches for actual applications or project-specific process derivations and decision-making support. The concept of an integrated reuse infrastructure is less discussed and explored; and the development of integrated tools to support all reuse stages is not fully addressed. Other topics for future research are discussed throughout the paper with gaps pointed as opportunities for improvements in the area.
C1 [Teixeira, Eldanae Nogueira; Werner, Claudia] Univ Fed Rio de Janeiro, Rio De Janeiro, RJ, Brazil.
   [Aleixo, Fellipe Araujo] Fed Inst Rio Grande do Norte, Natal, RN, Brazil.
   [de Sousa Amancio, Francisco Dione] Univ Fortaleza, Fortaleza, Ceara, Brazil.
   [Oliveira Jr, Edson] State Univ Maringa UEM, Maringa, Parana, Brazil.
   [Kulesza, Uira] Univ Fed Rio Grande do Norte, Natal, RN, Brazil.
C3 Universidade Federal do Rio de Janeiro; Instituto Federal do Rio Grande
   do Norte; Universidade Fortaleza; Universidade Estadual de Maringa;
   Universidade Federal do Rio Grande do Norte
RP Teixeira, EN (corresponding author), Univ Fed Rio de Janeiro, Rio De Janeiro, RJ, Brazil.
EM danny@cos.ufrj.br
RI Werner, Claudia/JZE-5245-2024; de Oliveira, Edson Cesar
   Cunha/AAN-2581-2020
OI de Oliveira, Edson Cesar Cunha/0000-0001-9168-4388; Araujo Aleixo,
   Fellipe/0000-0002-1107-7973; OliveiraJr, Edson/0000-0002-4760-1626; Lima
   Werner, Claudia Maria/0000-0002-4231-9621
FU CNPq [465614/2014-0, 304282/2018-9]; CAPES; FACEPE; INES 2.0 - FACEPE
   grant [APQ-0399-1.03/17]
FX This research was partially funded by CNPq, CAPES and FACEPE. CAPES and
   INES 2.0 - FACEPE grant APQ-0399-1.03/17, CNPq grant 465614/2014-0 and
   CNPq grant 304282/2018-9.
CR Alegria Hurtado., 2011, Proc. of the 2011 International Conference on Software and Systems Process, P43
   [Anonymous], 1997, Software engineering with reusable components
   [Anonymous], 2018, Open Science by Design: Realizing a Vision for 21st Century Research, DOI DOI 10.17226/25116
   [Anonymous], 2001, SOFTWARE PRODUCT LIN
   Armbrust Ove, 2009, Software Process: Improvement and Practice, V14, P181, DOI 10.1002/spip.412
   Armbrust O, 2008, LECT NOTES COMPUT SC, V5007, P160, DOI 10.1007/978-3-540-79588-9_15
   Barreto AS, 2011, J UNIVERS COMPUT SCI, V17, P1765
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Ceri S, 2012, COMPUTER AND INFORMATION SCIENCES II, P1, DOI [10.1007/978-1-4471-2155-8_1, 10.1007/978-3-642-34002-4_1]
   CHRISSIS MB, 2003, SEI SERIES SOFTWARE
   Costa D.M., 2018, LAT AM COMP C, P1
   Dias de Carvalho D., 2014, 14 SOFTW PROC IMPR C, P118, DOI 10.1007/978-3-319-13036-1_11
   Dias JW, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P133, DOI 10.1145/2973839.2973850
   Dias JW, 2016, PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 1 (ICEIS), P283, DOI 10.5220/0005771502830293
   FOSTER, 2019, FOSTER OPEN SCI
   Gary K. A., 1999, Proceedings. Twenty-Third Annual International Computer Software and Applications Conference (Cat. No.99CB37032), P218, DOI 10.1109/CMPSAC.1999.812704
   Ginsberg M., 1995, TECHNICAL REPORT
   Hernandes Elis, 2012, CLEIej, V15, P3
   Hollenbach C, 1996, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE, PROCEEDINGS, P22, DOI 10.1109/ICSR.1996.496110
   Kellner M.I., 1996, 10 INT SOFTW PROC WO, P8, DOI [10.1109/ISPW.1996.654356, DOI 10.1109/ISPW.1996.654356]
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V3, P1
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Martínez-Ruiz T, 2011, IET SOFTW, V5, P172, DOI 10.1049/iet-sen.2010.0020
   Martinez-Ruiz T., 2013, P INT C SOFTW SYST P, P46, DOI [10.1145/2486046.2486056, DOI 10.1145/2486046.2486056]
   Martínez-Ruiz T, 2012, SOFTWARE QUAL J, V20, P229, DOI 10.1007/s11219-011-9147-6
   Mnch J., 2012, SOFTWARE PROCESS DEF
   Northrop LM, 2002, IEEE SOFTWARE, V19, P32, DOI 10.1109/MS.2002.1020285
   Oliveira EA, 2013, LECT NOTES COMPUT SC, V7983, P169, DOI 10.1007/978-3-642-39259-7_15
   Pai M, 2004, NATL MED J INDIA, V17, P86
   Pazin MG, 2018, IET SOFTW, V12, P536, DOI 10.1049/iet-sen.2017.0061
   Piattini M., 2007, ACM SIGSOFT SOFTWARE, V32, P1
   Rocha RD, 2013, INFORM SOFTWARE TECH, V55, P1355, DOI 10.1016/j.infsof.2013.02.007
   Rombach D, 2005, LECT NOTES COMPUT SC, V3840, P83
   Simmonds J, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON PRODUCT LINE APPROACHES IN SOFTWARE ENGINEERING (PLEASE), P33, DOI 10.1109/PLEASE.2013.6608661
   Softex, 2016, BRAZ SOFTW PROC IMPR
   Teixeira E., 2014, 18 INT SOFTW PROD LI, P1
   Washizaki H, 2006, LECT NOTES COMPUT SC, V4034, P415
NR 37
TC 8
Z9 8
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2019
VL 116
AR 106175
DI 10.1016/j.infsof.2019.08.007
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JM6SN
UT WOS:000496342000002
DA 2024-07-18
ER

PT J
AU Mohan, M
   Greer, D
AF Mohan, M.
   Greer, D.
TI Using a many-objective approach to investigate automated refactoring
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Search-based software engineering; Maintenance; Automated refactoring;
   Refactoring tools; Software quality; Many-objective optimisation;
   Genetic algorithms
ID EVOLUTIONARY ALGORITHM; DEFECTS DETECTION; SOFTWARE; CODE
AB Context: Software maintenance is expensive and so anything that can be done to reduce its cost is potentially of huge benefit. However, it is recognised that some maintenance, especially refactoring, can be automated. Given the number of possible refactorings and combinations of refactorings, a search-based approach may provide the means to optimise refactorings.
   Objective: This paper describes the investigation of a many-objective genetic algorithm used to automate software refactoring, implemented as a Java tool, MultiRefactor.
   Method: The approach and tool is evaluated using a set of open source Java programs. The tool contains four separate measures of software looking at the software quality as well as measures of code priority, refactoring coverage and element recentness. The many-objective algorithm combines the four objectives to improve the software in a holistic manner. An experiment has been constructed to compare the many-objective approach against a mono-objective approach that only uses a single objective to measure software quality. Different permutations of the objectives are also tested and compared to see how well the different objectives can work together in a multi-objective refactoring approach. The eight approaches are tested on six different open source Java programs.
   Results: The many-objective approach is found to give better objective scores on average than the mono-objective approach and in less time. However, the priority and element recentness objectives are both found to be less successful in multi/many-objective setups when they are used together.
   Conclusion: A many-objective approach is suitable and effective for optimising automated refactoring to improve quality. Including other objectives does not unduly degrade the quality improvements, but is less effective for those objectives than if they were used in a mono-objective approach.
C1 [Mohan, M.; Greer, D.] Queens Univ Belfast, Sch Elect Elect Engn & Comp Sci, Belfast BT7 1NN, Antrim, North Ireland.
C3 Queens University Belfast
RP Greer, D (corresponding author), Queens Univ Belfast, Sch Elect Elect Engn & Comp Sci, Belfast BT7 1NN, Antrim, North Ireland.
EM des.greer@qub.ac.uk
OI Greer, Des/0000-0001-6367-9274
FU EPSRC [EP/M506400/1]
FX The research for this paper contributes to a project funded by the EPSRC
   grant EP/M506400/1.
CR Amal B., 2016, 6 INT S SEARCH BAS S, P31
   [Anonymous], 2008, 2008 GENETIC EVOLUTI
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   BELL D., 2000, SOFTWARE ENG PROGRAM, V3rd
   Belle T.V., 2002, GECCO 02, P1383
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cinneide MO, 2001, THESIS
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   Colanzi TE, 2013, J SYST SOFTWARE, V86, P970, DOI 10.1016/j.jss.2012.07.041
   Das I, 1998, SIAM J OPTIMIZ, V8, P631, DOI 10.1137/S1052623496307510
   de Souza J. T., 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P143, DOI 10.1109/SSBSE.2010.25
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2006, IEEE C EV COMP
   Deb Kalyanmoy, 2013, IEEEXPLORE IEEE ORG, V18, P1
   Di Penta M, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P280, DOI 10.1109/CSMR.2005.29
   di Perro F, 2007, IEEE T EVOLUT COMPUT, V11, P17, DOI 10.1109/TEVC.2006.876362
   Dig D, 2009, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE.2009.5070539
   Dudziak T., 2002, THESIS
   Fatiregun D, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P65
   Ferrucci F., 2014, SOFTWARE PROJECT MAN
   Fowler M., 2019, CATALOG REFACTORINGS
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Griffith I., 2011, P 24 INT C COMP APPL, P1
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Hierons RM, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2897760
   Jensen und A.C., 2010, Proceedings of the 12th Annual Conference on Genetic and Evolutionary Computation. GECCO '10, P1341
   Jiangyi J. Geng, 2018, IEEE ACCESS, V6, P60547
   Kessentini M, 2013, SOFTWARE QUAL J, V21, P551, DOI 10.1007/s11219-012-9187-6
   Kessentini M, 2011, CONF PROC INT SYMP C, P81, DOI 10.1109/ICPC.2011.22
   Khatchadourian R, 2017, AUTOMAT SOFTW ENG, V24, P757, DOI 10.1007/s10515-016-0208-8
   Koc E, 2012, COMPUTER AND INFORMATION SCIENCES II, P59, DOI 10.1007/978-1-4471-2155-8_7
   Lange R, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P2082
   Li HQ, 2010, IEEE INT WORK C SO, P157, DOI 10.1109/SCAM.2010.17
   McMinn P., 2004, SOFTW TEST VERIF REL, V14, P1
   Min Liu, 2010, 2010 IEEE International Conference on Intelligent Computing and Intelligent Systems (ICIS 2010), P546, DOI 10.1109/ICICISYS.2010.5658387
   Mkaouer MW, 2017, EMPIR SOFTW ENG, V22, P894, DOI 10.1007/s10664-016-9426-8
   Mkaouer MW, 2016, EMPIR SOFTW ENG, V21, P2503, DOI 10.1007/s10664-015-9414-4
   Mkaouer W., 2014, GEN EV COMP C GECCO
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Moghadam Iman Hemati., 2011, Proceeding of the 4th workshop on Refactoring tools - WRT'11, page, P41
   Mohan M., 2017, LNCS
   Mohan M., 2018, J SOFTW ENG RES DEV, V6, DOI [10.1186/s40411-018-0046-4, DOI 10.1186/S40411-018-0046-4]
   Mohan M, 2016, J SYST SOFTWARE, V120, P183, DOI 10.1016/j.jss.2016.05.019
   O'Keeffe M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1114
   O'Keeffe M, 2008, J SOFTW MAINT EVOL-R, V20, P345, DOI 10.1002/smr.378
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Ouni A, 2015, J SYST SOFTWARE, V105, P18, DOI 10.1016/j.jss.2015.03.040
   Ouni A, 2015, SOFTWARE QUAL J, V23, P323, DOI 10.1007/s11219-014-9233-7
   Ouni A, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1461
   Ouni A, 2013, EUR CON SFTWR MTNCE, P221, DOI 10.1109/CSMR.2013.31
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Pitangueira Antonio Mauricio, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P188, DOI 10.1007/978-3-642-39742-4_15
   Räihä O, 2010, COMPUT SCI REV, V4, P203, DOI 10.1016/j.cosrev.2010.06.001
   Sayyad AS, 2013, INT WORK REAL ARTIF, P21, DOI 10.1109/RAISE.2013.6615200
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Singh HK, 2011, IEEE T EVOLUT COMPUT, V15, P539, DOI 10.1109/TEVC.2010.2093579
   Thiele L, 2009, EVOL COMPUT, V17, P411, DOI 10.1162/evco.2009.17.3.411
   Trifu A, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P174, DOI 10.1109/CSMR.2004.1281418
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   Vivanco R, 2004, LECT NOTES COMPUT SC, V3103, P1388
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
NR 67
TC 13
Z9 17
U1 0
U2 9
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2019
VL 112
BP 83
EP 101
DI 10.1016/j.infsof.2019.04.009
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IA9TG
UT WOS:000469899100007
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Rodrigues, GS
   Guimaraes, FP
   Rodrigues, GN
   Knauss, A
   de Araújo, JPC
   Andrade, H
   Ali, R
AF Rodrigues, Gabriel S.
   Guimaraes, Felipe P.
   Rodrigues, Genaina N.
   Knauss, Alessia
   de Araujo, Joao Paulo C.
   Andrade, Hugo
   Ali, Raian
TI GoalD: A Goal-Driven deployment framework for dynamic and heterogeneous
   computing environments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Autonomous deployment; Contextual goal modelling; Heterogeneous
   computational resources; Deployment planning
ID SOFTWARE; SYSTEMS; MODELS
AB Context Emerging paradigms like Internet of Things and Smart Cities utilize advanced sensing and communication infrastructures, where heterogeneity is an inherited feature. Applications targeting such environments require adaptability and context-sensitivity to uncertain availability and failures in resources and their ad-hoc networks. Such heterogeneity is often hard to predict, making the deployment process a challenging task.
   Objective: This paper proposes GoalD as a goal-driven framework to support autonomous deployment of heterogeneous computational resources to fulfill requirements, seen as goals, and their correlated components on one hand, and the variability space of the hosting computing and sensing environment on the other hand.
   Method: GoalD comprises an offline and an online stage to fulfill autonomous deployment by leveraging the use of goals. Deployment configuration strategies arise from the variability structure of the Contextual Goal Model as an underlying structure to guide autonomous planning by selecting available as well as suitable resources at runtime.
   Results: We evaluate GoalD on an existing exemplar from the self-adaptive systems community the Tele Assistance Service provided by Weyns and Calinescu [1]. Furthermore, we evaluate the scalability of GoalD on a repository consisting of 430,500 artifacts. The evaluation results demonstrate the usefulness and scalability of GoalD in planning the deployment of a system with thousands of components in a few milliseconds.
   Conclusion: GoalD is a framework to systematically tackle autonomous deployment in highly heterogeneous computing environments, partially unknown at design-time following a goal-oriented approach to achieve the user goals in a target environment. GoalD has demonstrated itself able to scale for deployment planning dealing with thousands of components in a few milliseconds.
C1 [Rodrigues, Gabriel S.; Rodrigues, Genaina N.; de Araujo, Joao Paulo C.] Univ Brasilia, Brasilia, DF, Brazil.
   [Guimaraes, Felipe P.] Brazilian Space Agcy, Brasilia, DF, Brazil.
   [Knauss, Alessia; Andrade, Hugo] Chalmers Univ Gothenburg, Gothenburg, Sweden.
   [Ali, Raian] Bournemouth Univ, Bournemouth, Dorset, England.
C3 Universidade de Brasilia; Chalmers University of Technology; Bournemouth
   University
RP Rodrigues, GN (corresponding author), Univ Brasilia, Brasilia, DF, Brazil.
EM gabrielsr@aluno.unb.br; felipe.guimaraes@aeb.gov.br; genaina@unb.br;
   alessia.knauss@chalmers.se; sica@chalmers.se; rali@bournemouth.ac.uk
RI Ali, Raian/HZI-8249-2023; Ali, Raian/AAM-9992-2021
OI Ali, Raian/0000-0002-5285-7829; Andrade, Hugo/0000-0002-8389-7217;
   Guimaraes, Felipe/0000-0002-7102-9113; Costa de Araujo, Joao
   Paulo/0000-0002-1360-9160; Nunes Rodrigues, Genaina/0000-0003-1661-8131
FU CAPES/CNPq [1438159]; CNPq [306017/2018-0]
FX Gabriel Rodrigues was partially funded by CAPES/CNPq grant number
   1438159 (2014-2015) while affiliated with University of Brasilia.
   Genalna thanks CNPq for partial support under grant number
   306017/2018-0.
CR Ali R, 2014, SOFTW SYST MODEL, V13, P433, DOI 10.1007/s10270-012-0255-y
   Ali R, 2010, REQUIR ENG, V15, P439, DOI 10.1007/s00766-010-0110-z
   Andersson J, 2000, PROC IEEE INT CONF S, P262, DOI 10.1109/ICSM.2000.883058
   Andersson Jesper, 2013, Software Engineering Processes Systems, P51, DOI DOI 10.1007/978-3-642-35813-53
   Angelopoulos K, 2015, LECT NOTES COMPUT SC, V9381, P384, DOI 10.1007/978-3-319-25264-3_28
   [Anonymous], OSGI SERV PLATF COR
   Atzori L, 2010, COMPUT NETW, V54, P2787, DOI 10.1016/j.comnet.2010.05.010
   Baresi L, 2007, IET SOFTW, V1, P219, DOI 10.1049/iet-sen:20070027
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Bell G, 2007, PERS UBIQUIT COMPUT, V11, P373, DOI 10.1007/S00779-006-0073-8
   BENCOMO N, 2008, SPLC, P23
   Bencomo N., 2014, MODELS RUNTIME FDN A, V8378
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Braberman Victor, 2017, Software Engineering for Self-Adaptive Systems III. Assurances. International Seminar. Revised Selected and Invited Papers: LNCS 9640, P377, DOI 10.1007/978-3-319-74183-3_13
   Braberman Victor A., 2015, P 1 INT WORKSH CONTR, P9, DOI [10.1145/2804337.2804339, DOI 10.1145/2804337.2804339]
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Carzaniga A., 1998, TECHNICAL REPORT
   Casquina JC, 2016, 2016 12TH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC 2016), P218, DOI 10.1109/EDCC.2016.25
   Chang C, 2017, ACM COMPUT SURV, V49, DOI 10.1145/3012000
   Crnkovic I., 2001, MIPRO, P523
   Dar K, 2015, PERVASIVE MOB COMPUT, V20, P145, DOI 10.1016/j.pmcj.2014.11.005
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Eleuterio J.D.A.S., 2017, COMP STUDY DYNAMIC S
   Filieri A, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P71, DOI 10.1109/SEAMS.2015.12
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Garlan D., 2009, Autonomic Computing and Networking, P31, DOI [DOI 10.1007/978-0-387-89828-5, DOI 10.1007/978-0-387-89828-52]
   Guimaraes F. Pontes, 2015, PRAGMATIC REQUIREMEN, P50
   GUNALP O, 2015, INT C SERV COMP, P720, DOI DOI 10.1109/SCC.2015.102
   Kleinberger T, 2007, LECT NOTES COMPUT SC, V4555, P103
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Leite AF, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P726, DOI 10.1109/CLOUD.2015.101
   Magee J., 1996, Software Engineering Notes, V21, P3, DOI 10.1145/250707.239104
   Mendonça DF, 2016, INFORM SOFTWARE TECH, V80, P245, DOI 10.1016/j.infsof.2016.09.005
   Miorandi D, 2012, AD HOC NETW, V10, P1497, DOI 10.1016/j.adhoc.2012.02.016
   Mizouni R, 2014, EXPERT SYST APPL, V41, P7549, DOI 10.1016/j.eswa.2014.05.049
   Morandini M., 2008, P 2008 INT WORKSH SO, P9, DOI [10.1145/1370018.1370021, DOI 10.1145/1370018.1370021]
   Morandini M, 2009, LECT NOTES ARTIF INT, V5881, P33, DOI 10.1007/978-3-642-10203-5_4
   Penserini L., 2007, P 6 INT JOINT C AUT, DOI 10.1145/1329125.1329307
   Perez-Palacin D, 2014, J SYST SOFTWARE, V87, P1, DOI 10.1016/j.jss.2013.07.053
   Pimentel J, 2012, REQUIR ENG, V17, P259, DOI 10.1007/s00766-011-0126-z
   Pradhan S, 2016, J SYST SOFTWARE, V122, P344, DOI 10.1016/j.jss.2016.05.038
   Raibulet C., 2017, 11 EUROPEAN C SOFTWA, P23
   Rouvoy R, 2009, MUSIC MIDDLEWARE SUP, P164
   Smaldone S. D., 2011, THESIS
   Spinellis D, 2012, IEEE SOFTWARE, V29, P86, DOI 10.1109/MS.2012.85
   van Lamsweerde A, 2003, LECT NOTES COMPUT SC, V2804, P25
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   Weyns D, 2017, Handbook of Software Engineering
   White SR, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P2, DOI 10.1109/ICAC.2004.1301340
   Yousfi A, 2016, INFORM SOFTWARE TECH, V74, P55, DOI 10.1016/j.infsof.2016.02.002
   Yu ESK., 1996, GAXNN02887 UMI U TOR
   YU Y, 2008, FDN INTELLIGENT SYST
   2017, DATA KNOWL ENG, V109, P25, DOI DOI 10.1016/J.DATAK.2017.03.003
   2015, 2015 IEEEACM 10 INT, P88, DOI DOI 10.1109/SEAMS.2015.27
NR 54
TC 6
Z9 6
U1 0
U2 8
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2019
VL 111
BP 159
EP 176
DI 10.1016/j.infsof.2019.04.003
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HW6ST
UT WOS:000466821600012
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Haoues, M
   Sellami, A
   Ben-Abdallah, H
AF Haoues, Mariem
   Sellami, Asma
   Ben-Abdallah, Hanene
TI Towards functional change decision support based on COSMIC FSM method
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Use cases; COSMIC; Functional size measurement; Requirements management;
   Change status; Empirical requirements engineering; COCOMO II
ID SIZE
AB Context: Managing requirements change is a central issue in the software development industry. In fact, inappropriate decisions about a change request may jeopardize the project development progress by going over budget/time or delivering a software with functional requirements that do not fully meet the user's needs. Hence, a change decision support is required for the success of the software development.
   Objective: This paper has a three-fold objective: (i) explore the applicability of the ISO standard COSMIC FSM method to evaluate a change request; (ii) investigate the use of estimation models to predict the effort required to handle a functional change and its impact on the initially estimated software development effort; and (iii) propose a decision support method that offers the appropriate information for the change advisory board members to decide whether to accept, deny or defer a functional change request.
   Method:To guide the decision on a change request, the method proposed in this paper accounts for the most important factors when evaluating a change request, namely the functional change status, the preference of the change requester, and the effort required to handle the change. The functional change status is identified based on the sensitivity of the changed functionality and the functional size of the functional change. The functional change effort can be estimated using several ways including the COCOMO II model, the Simple Linear Regression Model and expert judgment. Furthermore, this paper proposes a prototype to determine automatically the functional change status and offers pertinent information that the change advisory board can use to determine how to handle a change request. The use of the decision support method and tool is illustrated through three case studies.
   Results: A decision support method to help decision-makers respond to a functional change request is provided. This method takes into account the functional change status, the preference of the change requester and the functional change effort. The empirical evaluation of the proposed method is illustrated through three case studies. The role of experiments here is primarily to provide a proof-of-concept rather than an exhaustive evaluation.
   Conclusion: Using COSMIC FSM method, it is possible to identify functional changes leading to a potential impact on the software development progress. Based on the evaluation of the functional change, the change advisory board members can make judicious decisions about whether to accept, defer or deny a functional change request.
C1 [Haoues, Mariem; Sellami, Asma] Univ Sfax, Mir Cl Lab, ISIMS, BP, Sfax 2423021, Tunisia.
   [Ben-Abdallah, Hanene] Higher Coll Technol, Dubai, U Arab Emirates.
C3 Universite de Sfax; Higher Colleges of Technology - United Arab Emirates
RP Haoues, M (corresponding author), Univ Sfax, Mir Cl Lab, ISIMS, BP, Sfax 2423021, Tunisia.
EM mariem.haoues@isims.usf.tn; asma.sellami@isims.usf.tn;
   hbenabdallah@hct.ac.ae
RI Haoues, Mariem/GZK-9841-2022; Sellami, Asma/ITU-5279-2023; Ben-Abdallah,
   Hanene/L-1239-2014
OI haoues, mariem/0000-0001-9786-3811; Ben-Abdallah,
   Hanene/0000-0001-9215-4661
CR Abdullah NAS, 2013, IEEE CONF OPEN SYST, P139, DOI 10.1109/ICOS.2013.6735063
   Abran A., 2010, Software metrics and software metrology
   Abran A., 2016, P INT TRAIN S BRIST, P259
   Abran A., 2015, SOFTW PROJ EST FUND
   Albrech A., 1979, PROC JOINT SHAREGUID, P83
   Arnold Robert S., 1996, SOFTWARE CHANGE IMPA
   Bhatti A. T., 2015, INT J INNOVAT SCI EN, V2, P801
   Briand LC, 2006, J SYST SOFTWARE, V79, P339, DOI 10.1016/j.jss.2005.05.001
   Center for Software Engineering, 2000, COCOMO 2 MOD DEF MAN
   Chen CY, 2007, IN C IND ENG ENG MAN, P577, DOI 10.1109/IEEM.2007.4419255
   Creasey T., 2014, Best practices in change management
   Dekkers T., 2004, 1 SOFTW MEAS EUR FOR, P63
   Ebert C, 2014, IEEE SOFTWARE, V31, P24, DOI 10.1109/MS.2014.138
   Fairley R.E. D., 2009, Managing and leading software projects
   Ghosh S, 2013, ASIA PAC SOFWR ENG, P148, DOI 10.1109/APSEC.2013.30
   Gomaa H, 2011, SOFTWARE MODELING AND DESIGN: UML, USE CASES, PATTERNS, AND SOFTWARE ARCHITECTURES, P1, DOI 10.1017/CBO9780511779183
   Haoues M., 2016, 13 INT C COMP SYST A, P1
   Haoues M., 2014, P 5 INT WORKSH EM TR, P48
   Haoues M, 2017, SCI COMPUT PROGRAM, V135, P88, DOI 10.1016/j.scico.2016.09.005
   Haoues M, 2015, LECT NOTES BUS INF P, V230, P78, DOI 10.1007/978-3-319-24285-9_6
   Hill P., 2010, Practical Software Project Estimation
   Hira A., 2016, 10 ACM IEEE INT S EM
   Huijgens H, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP), P56, DOI [10.1109/ICSSP.2016.016, 10.1145/2904354.2904360]
   Kama N., 2013, 13 INT C APPL COMP S
   Karner G., 1993, THESIS
   Kchaou D, 2015, 27 INT C SOFTW ENG K, P670
   Kchaou D, 2015, 2015 10TH INTERNATIONAL JOINT CONFERENCE ON SOFTWARE TECHNOLOGIES (ICSOFT), VOL 1, P301
   Koppenberg T., 2004, SOFTW MEAS C IWSM ME
   Kranich E., 2015, 25 INT WORKSH SOFTW
   Lind K., 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P86, DOI 10.1109/IWSM-MENSURA.2011.49
   MELI R, 2001, MEASURING CHANGE REQ
   NESMA, 2018, 245702018 NESMA ISOI
   Ore S.B., 2016, ADV INTELLIGENT SYST, V537, P133, DOI [10.1007/978-3-319-48523-2_13, DOI 10.1007/978-3-319-48523-2_13]
   Rollo A. L., 2006, 5 SOFTW MEAS EUR FOR
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sellami A., 2018, P 13 INT C SOFTWARE, P516
   Sellami A., 2018, 28 INT WORKSH SOFTW, P78
   Sellami A., 2016, CASE STUDY SIZING NA
   Sellami A, 2013, COMM COM INF SC, V417, P48
   Sellami A, 2013, ENASE: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P36, DOI 10.5220/0004418500360044
   Sellami A, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P282, DOI 10.1109/ICSEA.2009.96
   Software Engineering Research, 2008, 19761 ISOIEC SOFTW E
   Software Engineering Research, 2015, 19761 ISOIEC SOFTW E
   Symons C., 2011, COMPARISON KEY DIFFE
   The Common Software Measurement International Consortium, 2015, COSMIC FUNCT SIZ MEA
   Tran-Cao D, 2002, PROC IEEE INT CONF S, P370, DOI 10.1109/ICSM.2002.1167793
   Vogelezang  F., 2015, GUIDELINE EARLY RAPI
   Vogelezang F. W., 2017, 27 INT WORKSH SOFTW, P77
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 49
TC 5
Z9 5
U1 0
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2019
VL 110
BP 78
EP 91
DI 10.1016/j.infsof.2019.02.004
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HU1RI
UT WOS:000465049100006
DA 2024-07-18
ER

PT J
AU Kalaee, A
   Rafe, V
AF Kalaee, Akram
   Rafe, Vahid
TI Model-based test suite generation for graph transformation system using
   model simulation and search-based techniques
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model-based testing; Search-based testing; Graph transformation
   specification; Data-flow coverage
ID VERIFICATION; CHECKING; CHECKERS
AB Context: Test generation by model checking is a useful technique in model-based testing that allows automatic generation of test cases from models by utilizing the counter-examples/witnesses produced through a model checker. However, generating redundant test cases and state space explosion problem are two major obstacles to transfer this technique into industrial practice.
   Objective: An idea to cope with these challenges consists in an intelligent model checking for exploring only a portion of the state space according to the test objectives. Motivated by this idea, we propose an approach that exploits meta-heuristic algorithms to adapt a model checker when used for integration testing of systems formally specified by graph transformations.
   Method: This method is not based on model checking algorithms, but rather uses the modeling and simulation features of the underlying model checker. In the proposed approach, a population of test suites that each of which is a set of paths on the state space, is evolved towards satisfying the all def-use test objectives. Consequently, a test suite with high coverage is generated.
   Results: To assess the efficiency of our approach, it is implemented in GROOVE, an open source toolset for designing and model checking graph transformation systems. Empirical results based on some case studies, confirm a significant improvement in terms of coverage, speed and memory usage, in comparison with the state of the art techniques.
   Conclusion: Our analysis reveals that intelligent model checking can appropriately address the challenges of traditional model-checking-assisted testing. We further conclude that graph transformation specification is an efficient modeling solution to behavioral testing and graph transformation tools have a great potential for developing a model-based testing tool.
C1 [Kalaee, Akram; Rafe, Vahid] Arak Univ, Fac Engn, Dept Comp Engn, Arak 3815688349, Iran.
C3 Arak University
RP Rafe, V (corresponding author), Arak Univ, Fac Engn, Dept Comp Engn, Arak 3815688349, Iran.
EM a-kalaee@arshad.araku.ac.ir; v-rafe@araku.ac.ir
OI kalaee, Akram/0000-0002-8730-2911
CR Ali  S., 2011, P INT C QUAL SOFTW M
   [Anonymous], P 3 INT WORKSH ADV M
   [Anonymous], 2004, Wiley InterScience electronic collection.
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   BEIZER B, 1990, SOFTWARE TESTING TEC, V2
   Brown Judith M, 2011, CAMBRIDGE COMPANION, P1
   Bruijn  V., 2013, THESIS
   de Lara  J., 2002, 5 INT C FUND APPR SO
   Ehrig H, 2004, 2 INT C GRAPH TRANSF
   Ehrig H., 1996, Handbook of Graph Grammars and Computing by Graph Transformation, V1, P247
   Engels G, 2006, INT C MOD SOFTW ENG
   Enoiu EP, 2016, INT J SOFTW TOOLS TE, V18, P335, DOI 10.1007/s10009-014-0355-9
   Farooq U., 2011, Model Based Test Suite Minimization Using Metaheuristics (Unpublished doctoral dissertation). Edith Cowan University
   Fraser G, 2008, SOFTWARE QUAL J, V16, P161, DOI 10.1007/s11219-007-9031-6
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser G, 2009, J SYST SOFTWARE, V82, P1403, DOI 10.1016/j.jss.2009.05.016
   Giildali  B., 2009, 35 EUR SOFTW ENG ADV
   Godnczy  L., 2007, 7 INT C TEST SOFTW C
   Hamon G, 2004, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P261, DOI 10.1109/SEFM.2004.1347530
   Hansel  J., 2011, 4 IEEE INT C SOFTW T
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Hausmann J, 2002, P 24 INT C SOFTW ENG
   Heckel R., 2007, International Journal on Software Tools for Technology Transfer, V9, P193, DOI 10.1007/s10009-006-0020-z
   Heckel R, 2011, P 10 INT WORKSH GRAP
   Heckel  R., 2009, P INT JOINT C U PAD
   Heckel  R., 2005, 8 INT C THEOR PRACT
   Heckel  R., 1997, J APPL CATEGORICAL S, V9, P83
   Hong HS, 2005, LECT NOTES COMPUT SC, V3502, P23
   Hong HS, 2003, PROC INT CONF SOFTW, P232
   Kalaee A, 2016, QUAL RELIAB ENG INT, V32, P2263, DOI 10.1002/qre.1934
   Kastenberg  H., 2006, 13 INT SPIN WORKSH M
   Kennedy J., 1995, P ICNN 95 INT C NEUR
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Mohalik S, 2014, SOFTW TEST VERIF REL, V24, P155, DOI 10.1002/stvr.1489
   Nilsson R, 2006, ELECTRON NOTES THEOR, V164, P97, DOI 10.1016/j.entcs.2006.10.010
   Pira E, 2017, J SYST SOFTWARE, V131, P181, DOI 10.1016/j.jss.2017.05.128
   Pira E, 2016, APPL SOFT COMPUT, V49, P1185, DOI 10.1016/j.asoc.2016.06.039
   Rafe V., 2013, INT RES J APPL BASIC, V4, P1379
   Rafe V, 2013, J VISUAL LANG COMPUT, V24, P136, DOI 10.1016/j.jvlc.2012.12.002
   Rashedi E, 2009, INFORM SCIENCES, V179, P2232, DOI 10.1016/j.ins.2009.03.004
   Runge  O., 2013, P 12 INT WORKSH GRAP
   Singh A., 2014, International Journal of Innovations in Engineering and Technology (IJIET), V3, P208
   Spillner Andreas., 2014, SOFTWARE TESTING FDN
   Su T, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P654, DOI 10.1109/ICSE.2015.81
   Taentzer  G., 2004, 2 INT WORKSH APPL GR
   Ting  S., 2017, ACM COMPUT SURV, V50, P1
   Utting M, 2016, ADV COMPUT, V101, P53, DOI 10.1016/bs.adcom.2015.11.004
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Wenzel  I., 2008, INT S LEV APPL FORM
   Yang XS, 2010, STUD COMPUT INTELL, V284, P65, DOI 10.1007/978-3-642-12538-6_6
   Zhan Y, 2008, J SYST SOFTWARE, V81, P262, DOI 10.1016/j.jss.2007.05.039
NR 52
TC 11
Z9 12
U1 1
U2 13
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2019
VL 108
BP 1
EP 29
DI 10.1016/j.infsof.2018.12.001
PG 29
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HM3IE
UT WOS:000459366200001
DA 2024-07-18
ER

PT J
AU Alahyari, H
   Gorschek, T
   Svensson, RB
AF Alahyari, Hiva
   Gorschek, Tony
   Svensson, Richard Berntsson
TI An exploratory study of waste in software development organizations
   using agile or lean approaches: A multiple case study at 14
   organizations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Waste; Non-value adding activities; Lean software development; Agile
   software development
ID MANAGEMENT
AB Context: The principal focus of lean is the identification and elimination of waste from the process with respect to maximizing customer value. Similarly, the purpose of agile is to maximize customer value and minimize unnecessary work and time delays. In both cases the concept of waste is important. Through an empirical study, we explore how waste is approached in agile software development organizations.
   Objective: This paper explores the concept of waste in agile/lean software development organizations and how it is defined, used, prioritized, reduced, or eliminated in practice
   Method: The data were collected using semi-structured open-interviews. 23 practitioners from 14 embedded software development organizations were interviewed representing two core roles in each organization.
   Results: Various wastes, categorized in 10 different categories, were identified by the respondents. From the mentioned wastes, not all were necessarily waste per se but could be symptoms caused by wastes. From the seven wastes of lean, Task-switching was ranked as the most important, and Extra-features, as the least important wastes according to the respondents' opinion. However, most companies do not have their own or use an established definition of waste, more importantly, very few actively identify or try to eliminate waste in their organizations beyond local initiatives on project level.
   Conclusion: In order to identify, recognize and eliminate waste, a common understanding, and a joint and holistic view of the concept is needed. It is also important to optimize the whole organization and the whole product, as waste on one level can be important on another, thus sub-optimization should be avoided. Furthermore, to achieve a sustainable and effective waste handling, both the short-term and the long-term perspectives need to be considered.
C1 [Alahyari, Hiva] Chalmers Gothenburg Univ Technol, Dept Comp Sci & Engn, Gothenburg, Sweden.
   [Gorschek, Tony; Svensson, Richard Berntsson] Blekinge Inst Technol, Dept Software Engn, Blekinge, Sweden.
C3 Blekinge Institute Technology
RP Alahyari, H (corresponding author), Chalmers Gothenburg Univ Technol, Dept Comp Sci & Engn, Gothenburg, Sweden.
EM hiva@chalmers.se; tony.gorschek@bth.se;
   richard.berntsson.svensson@bth.se
CR Alahyari H, 2017, J SYST SOFTWARE, V125, P271, DOI 10.1016/j.jss.2016.12.007
   Ambler SW, 2009, 2009 ICSE WORKSHOP ON SOFTWARE DEVELOPMENT GOVERNANCE, P1, DOI 10.1109/SDG.2009.5071328
   Anderson D.J., 2010, Kanban: successful Evolutionary Change for Your Technology Business
   [Anonymous], 2009, GLOBAL PERSPECTIVE C
   [Anonymous], 2005, Product Development Value Stream Mapping (PDVSM) Manual (Issue September)
   [Anonymous], 2008, Software Process: Improvement and Practice, DOI DOI 10.1002/SPIP.378
   [Anonymous], 2020, SUBW MAP AG PRACT
   [Anonymous], P 2010 2 INT S SEARC
   [Anonymous], REGULATORY COMPLIANC
   [Anonymous], PICMET 2010 TECHNOLO
   [Anonymous], 2014, AGILE GOOD HYPE UGLY, DOI DOI 10.1007/978-3-319-05155-0_11
   [Anonymous], REQ ENG C 2009 RE 09
   [Anonymous], INF SOFTW TECHNOL
   [Anonymous], AGILE GLOSSARY
   [Anonymous], P INT RES WORKSH IT
   Boehm B, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.129
   Braglia M, 2009, INT J LOGIST-RES APP, V12, P435, DOI 10.1080/13675560802601559
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cohn Mike, 2009, Succeeding with Agile: Software Development Using Scrum, V1st
   Conboy K, 2011, INFORM SOFTWARE TECH, V53, P535, DOI 10.1016/j.infsof.2010.10.007
   Cooke-Davies T., 2002, International Journal of Project Management, V20, P185
   Coram M, 2005, 12TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P363, DOI 10.1109/ECBS.2005.68
   Damm L.-O., 2006, Software Process Improvement and Practice, V11, P47, DOI 10.1002/spip.253
   Dingsoyr T., 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P27, DOI 10.1109/CHASE.2012.6223016
   Ebert C, 2009, COMPUTER, V42, P42, DOI 10.1109/MC.2009.118
   Fenton N., 2000, INT C SOFTWARE ENG, P357, DOI DOI 10.1145/336512.336588
   Flagg I., 1979, ACCOUNT ORG SOC, V4, P135, DOI DOI 10.1016/0361-3682(79)90013-8
   Flick, 2014, INTRO QUALITATIVE RE
   Gandomani Taghi Javdanm, 2013, Journal of Computer Science, V9, P620, DOI 10.3844/jcssp.2013.620.625
   Gorschek T, 2008, INFORM SOFTWARE TECH, V50, P67, DOI 10.1016/j.infsof.2007.10.003
   Hartmann D, 2006, AGILE 2006, Proceedings, P126, DOI 10.1109/AGILE.2006.17
   Hoda R, 2012, EMPIR SOFTW ENG, V17, P609, DOI 10.1007/s10664-011-9161-0
   Iivari J, 2011, INFORM SOFTWARE TECH, V53, P509, DOI 10.1016/j.infsof.2010.10.008
   Ikonen M, 2010, EUROMICRO CONF PROC, P376, DOI 10.1109/SEAA.2010.40
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Khurum M, 2014, J SOFTW-EVOL PROC, V26, P1074, DOI 10.1002/smr.1647
   Khurum M, 2013, J SOFTW-EVOL PROC, V25, P711, DOI 10.1002/smr.1560
   Korkala M, 2007, EUROMICRO CONF PROC, P203
   Kupiainen E, 2015, INFORM SOFTWARE TECH, V62, P143, DOI 10.1016/j.infsof.2015.02.005
   Lamersdorf A., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P267, DOI 10.1109/ICGSE.2010.38
   Liker J., 2005, The Toyota Way Field book
   Lindvall M, 2004, COMPUTER, V37, P26, DOI 10.1109/MC.2004.231
   Mandic V, 2010, LECT NOTES BUS INF P, V65, P72, DOI 10.1007/978-3-642-16416-3_12
   Mishra D, 2011, J SOFTW MAINT EVOL-R, V23, P549, DOI 10.1002/smr.528
   Morgan J., 2020, The Toyota Product Development System: integrating People, Process, and Technology
   Mujtaba Shahid, 2010, Proceedings of the 21st Australian Software Engineering Conference (ASWEC 2010), P139, DOI 10.1109/ASWEC.2010.37
   Müller R, 2009, INT J MANAG PROJ BUS, V2, P70, DOI 10.1108/17538370910930527
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Pernstål J, 2013, J SYST SOFTWARE, V86, P2797, DOI 10.1016/j.jss.2013.06.035
   Petersen K, 2011, SOFTWARE PRACT EXPER, V41, P975, DOI 10.1002/spe.975
   Petersen K, 2012, LECT NOTES BUS INF P, V111, P108
   Petersen K, 2010, J SYST SOFTWARE, V83, P1275, DOI 10.1016/j.jss.2010.02.005
   Petersen K, 2009, J SYST SOFTWARE, V82, P1479, DOI 10.1016/j.jss.2009.03.036
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Poppendieck M., 2007, IMPLEMENTING LEAN SO
   Power Ken., 2014, Agile Processes in Software Engineering and Extreme Programming, P203, DOI DOI 10.1007/978-3-319-06862-6_14
   Racheva Z, 2009, LECT NOTES BUS INF P, V32, P141
   Reinertsen D.G., 2009, PRINCIPLES PRODUCT D, V62
   Robson C., 2002, Real world research
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   Sedano T, 2017, PROC INT CONF SOFTW, P130, DOI 10.1109/ICSE.2017.20
   Shalloway A., 2009, Lean-agile software development: achieving enterprise agility
   Shmueli O, 2017, INT J PROJ MANAG, V35, P13, DOI 10.1016/j.ijproman.2016.10.002
   Turner R., 2002, Extreme Programming and Agile Methods - XP/Agile Universe 2002 Second XP Universe and First Agile Universe Conference. Proceedings (Lecture Notes in Computer Science Vol.2418), P153
   Vilela J, 2017, J SYST SOFTWARE, V125, P68, DOI 10.1016/j.jss.2016.11.031
   Wang XF, 2012, J SYST SOFTWARE, V85, P1287, DOI 10.1016/j.jss.2012.01.061
   Ward A.C., 2007, LEAN PRODUCT PROCESS
   Womack J., 2003, Lean Thinking: Banish Waste and Create Wealth in Your Corporation
   Yin D.R. K., 2017, Case Study Research and Applications: Design and Methods
NR 70
TC 29
Z9 34
U1 2
U2 40
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2019
VL 105
BP 78
EP 94
DI 10.1016/j.infsof.2018.08.006
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HD5RF
UT WOS:000452586900006
DA 2024-07-18
ER

PT J
AU Al-Hroob, A
   Imam, AT
   Al-Heisa, R
AF Al-Hroob, Aysh
   Imam, Ayad Tareq
   Al-Heisa, Rawan
TI The use of artificial neural networks for extracting actions and actors
   from requirements document
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE NLP; ANN; I-CASE; Software requirements; GATE; MATLAB
AB Context The automatic extraction of actors and actions (i.e., use cases) of a system from natural language-based requirement descriptions, is considered a common problem in requirements analysis. Numerous techniques have been used to resolve this problem. Examples include rule-based (e.g., inference), keywords, query (e.g., bigrams), library maintenance, semantic business vocabularies, and rules. The question remains: can combination of natural language processing (NLP) and artificial neural networks (ANNs) perform this job successfully and effectively?
   Objective: This paper proposes a new approach to automatically identify actors and actions in a natural language-based requirements' description of a system. Included are descriptions of how NIP plays an important role in extracting actors and actions, and how ANNs can be used to provide definitive identification.
   Method: We used an NLP parser with a general architecture for text engineering, producing lexicons, syntaxes, and semantic analyses. An ANN was developed using five different use cases, producing different results due to their complexity and linguistic formation.
   Results: Binomial classification accuracy techniques were used to evaluate the effectiveness of this approach. Based on the five use cases, the results were 17-63% for precision, 5-6100% for recall, and 29-71% for F measure.
   Conclusion: We successfully used a combination of NLP and ANN artificial intelligence techniques to reveal specific domain semantics found in a software requirements specification. An Intelligent Technique for Requirements Engineering (IT4RE) was developed to provide a semi-automated approach, classified as Intelligent Computer Aided Software Engineering (I-CASE).
C1 [Al-Hroob, Aysh; Imam, Ayad Tareq; Al-Heisa, Rawan] Isra Univ, Fac Informat Technol, Dept Software Engn, Amman 11622, Jordan.
C3 Isra University
RP Imam, AT (corresponding author), Isra Univ, Fac Informat Technol, Dept Software Engn, Amman 11622, Jordan.
EM aysh@iu.edu.jo; alzobaydi_ayad@iu.edu.jo; rawanmhesa@yahoo.com
RI Imam, Ayad Tareq/AAB-3970-2019; Alhroob, Aysh/GWQ-3621-2022
OI Imam, Ayad Tareq/0000-0002-9942-4772; Alhroob, Aysh/0000-0002-4653-7386
CR A. S. Pressman B. Maxim, 2014, SOFTWARE ENG PRACTIT
   Aarts B., 2013, English syntax and argumentation
   [Anonymous], 2008, PRACTICAL COURSE ENG
   [Anonymous], 2013, SOFTWARE REQUIREMENT
   [Anonymous], 2016, NEUR NETW TOOLB DOC
   Bajwa I.S., 2011, SBVR Business Rules Generation from Natural Language Specification, P2
   Bajwa I. S., 2011, SPECIFYING REQUIREME, P217
   Bajwa IS, 2012, LECT NOTES BUS INF P, V102, P224
   Bruegge Bernd., 2010, Object-Oriented Software Engineering: Using UML, Patterns and Java, VThird
   Georgiades M. G., 2012, OPEN SOFTWARE ENG J, V6
   Guo J. K., 2015, EXTRACTING MEANINGFU, P72
   I. C. S. I. i. Berkeley, 2016, AUT SEM ROL LAB ASRL
   Imam A., 2014, INT REV COMPUT SOFTW, V9, P1256
   Imam A. T., 2015, J INF ENG APPL, V5, P47
   Imam A. T., 2011, RELATIVE FUZZY NOVEL
   Indurkhya N, 2010, CH CRC MACH LEARN PA, pXXI
   Kaiya H., 2005, Ontology-based requirements analysis: Lightweight semantic processing approach, P223, DOI [10.1109/QSIC.2005.46, DOI 10.1109/QSIC.2005.46]
   Kamalrudin M., 2010, TOOL SUPPORT ESSENTI, P255
   Luger G.F., 2008, Artificial Intelligence, V6th
   Marneffe M.-C. d., 2016, STANFORD NATURAL LAN
   Mel'cuk I, 2009, STUD LANG C, V111, pXIII
   Nguyen T. H., 2015, RULE BASED EXTRACTIO
   Nielsen M. A., 2015, NEURAL NETWORKS DEEP, DOI DOI 10.1145/2939672.2945397
   O. M. Group OMG Unified Modeling Language (OMG UML), 2007, OMG UN MOD LANG OMG
   Olson D.L., 2008, ADV DATA MINING TECH, DOI https://doi.org/10.1007/978-3-540-76917-0
   Rauf R, 2011, INT REQUIR ENG CONF, P101, DOI 10.1109/RE.2011.6051638
   Saad H., 2010, INT REV COMPUT SOFTW, V5, P363
   Seresht SM, 2008, P 11 WORKSHOP REQUIR, V16, P128
   Sheffield T. U. o., 2016, GATE GEN ARCH TEXT E
   Sibarani EM, 2014, P INT C IM PROC COMP, P139
   Sommerville I., 2010, SOFTWARE ENG
   Umber A., 2012, IJWA, V4, P12
   Umber A, 2011, COMM COM INF SC, V191, P30
   Vinay S., 2009, APPROACH AUTOMATION
   Wang W, 2009, NEURAL COMPUT APPL, V18, P875, DOI 10.1007/s00521-008-0193-3
NR 35
TC 22
Z9 24
U1 1
U2 40
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2018
VL 101
BP 1
EP 15
DI 10.1016/j.infsof.2018.04.010
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GK3OE
UT WOS:000436054200001
DA 2024-07-18
ER

PT J
AU Arrieta, A
   Segura, S
   Markiegi, U
   Sagardui, G
   Etxeberria, L
AF Arrieta, Aitor
   Segura, Sergio
   Markiegi, Urtzi
   Sagardui, Goiuria
   Etxeberria, Leire
TI Spectrum-based fault localization in software product lines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software product lines; Spectrum-based fault localization; Feature
   models; Debugging
ID GENERATION; SLICES; MODELS
AB Context Software Product Line (SPL) testing is challenging mainly due to the potentially huge number of products under test. Most of the research on this field focuses on making testing affordable by selecting a representative subset of products to be tested. However, once the tests are executed and some failures revealed, debugging is a cumbersome and time consuming task due to difficulty to localize and isolate the faulty features in the SPL.
   Objective: This paper presents a debugging approach for the localization of bugs in SPLs.
   Method: The proposed approach works in two steps. First, the features of the SPL are ranked according to their suspiciousness (i.e., likelihood of being faulty) using spectrum-based localization techniques. Then, a novel fault isolation approach is used to generate valid products of minimum size containing the most suspicious features, helping to isolate the cause of failures.
   Results: For the evaluation of our approach, we compared ten suspiciousness techniques on nine SPLs of different sizes. The results reveal that three of the techniques (Tarantula, Kulcynski2 and Ample2) stand out over the rest, showing a stable performance with different types of faults and product suite sizes. By using these metrics, faults were localized by examining between 0.1% and 14.4% of the feature sets.
   Conclusion: Our results show that the proposed approach is effective at locating bugs in SPLs, serving as a helpful complement for the numerous approaches for testing SPLs.
C1 [Arrieta, Aitor; Markiegi, Urtzi; Sagardui, Goiuria; Etxeberria, Leire] Mondragon Unibertsitatea, Arrasate Mondragon, Spain.
   [Segura, Sergio] Univ Seville, ETS Ingn Informat, Seville, Spain.
C3 Mondragon Unibertsitatea; University of Sevilla
RP Arrieta, A (corresponding author), Mondragon Unibertsitatea, Arrasate Mondragon, Spain.
EM aarrieta@mondragon.edu; sergiosegura@us.es; umarkiegi@mondragon.edu;
   gsagardui@mondragon.edu; letxeberria@mondragon.edu
RI Sagardui, Goiuria/ABH-5263-2020; Etxeberria, Leire/R-6402-2017; Segura,
   Sergio/A-9615-2011
OI Etxeberria, Leire/0000-0002-4846-2007; Segura,
   Sergio/0000-0001-8816-6213; Markiegi, Urtzi/0000-0003-0897-6190;
   Sagardui, Goiuria/0000-0003-1002-456X
FU Department of Education, Universities and Research of the Basque
   Government; European Commission (FEDER); Spanish Government under CICYT
   project BELL [TIN2015-70560-R]; Andalusian Government project COPAS
   [P12-TIC-1867]
FX Aitor Arrieta, Urtzi Markiegi, Goiuria Sagardui and Leire Etxeberria are
   part of the embedded systems group of Mondragon Goi Eskola Politeknikoa,
   supported by the Department of Education, Universities and Research of
   the Basque Government. Sergio Segura is jointly supported by the
   European Commission (FEDER) and Spanish Government under CICYT project
   BELL (TIN2015-70560-R), and the Andalusian Government project COPAS
   (P12-TIC-1867).
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Al-Hajjaji Mustafa, 2019, Software & Systems Modeling, V18, P499, DOI 10.1007/s10270-016-0569-2
   Al-Hajjaji M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P197, DOI 10.1145/2648511.2648532
   [Anonymous], SOFTW Q J
   [Anonymous], FAMA TOOL SUIT
   [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], 2001, SOFTWARE PRODUCT LIN
   [Anonymous], P 8 INT WORKSH VAR M
   [Anonymous], 2000, J ED BEHAV STAT
   [Anonymous], INT C SOFTW ENG
   [Anonymous], ISSRE 2017 IND TRACK
   [Anonymous], SOFTWARE PRODUCT LIN
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arrieta A., 2016, P 20 INT SYST SOFTW, P297, DOI 10.1145/2934466.2946046
   Arrieta A, 2017, SOFTWARE QUAL J, V25, P1041, DOI 10.1007/s11219-016-9341-7
   Arrieta A, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1053, DOI 10.1145/2908812.2908871
   Artzi S, 2010, IEEE T SOFTWARE ENG, V36, P474, DOI 10.1109/TSE.2010.31
   Bagheri Ebrahim, 2012, P 2012 C CTR ADV STU, P87
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Clarke D, 2011, ACM SIGPLAN NOTICES, V46, P13, DOI 10.1145/1942788.1868298
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Devroey X., 2014, P 8 INT WORKSH VAR M
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Ensan Faezeh, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P613, DOI 10.1007/978-3-642-31095-9_40
   Harrold MJ, 2000, SOFTW TEST VERIF REL, V10, P171, DOI 10.1002/1099-1689(200009)10:3<171::AID-STVR209>3.0.CO;2-J
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Ju XL, 2014, J SYST SOFTWARE, V90, P3, DOI 10.1016/j.jss.2013.11.1109
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kuhn R, 2009, COMPUTER, V42, P94, DOI 10.1109/MC.2009.253
   Lachmann R., 2015, P 19 INT C SOFTW PRO, P81
   Le Tien-Duy B., 2013, 2013 IEEE International Conference on Software Maintenance (ICSM), P380, DOI 10.1109/ICSM.2013.52
   Hanh LTM, 2016, J SYST SOFTWARE, V120, P17, DOI 10.1016/j.jss.2016.07.001
   Le TDB, 2015, EMPIR SOFTW ENG, V20, P1237, DOI 10.1007/s10664-014-9349-1
   Li XL, 2018, EMPIR SOFTW ENG, V23, P1, DOI 10.1007/s10664-016-9494-9
   Lopez-Herrejon R. E., 2015, 8 IEEE INT C SOFTW T, P1, DOI DOI 10.1109/ICSTW.2015.7107435
   Lopez-Herrejon RE, 2015, INFORM SOFTWARE TECH, V61, P33, DOI 10.1016/j.infsof.2015.01.008
   Lopez-Herrejon RE, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1255, DOI 10.1145/2576768.2598305
   Machado ID, 2014, INFORM SOFTWARE TECH, V56, P1183, DOI 10.1016/j.infsof.2014.04.002
   Marijan Dusica., 2013, Proceedings of the 17th International Software Product Line Conference. SPLC'13, P227, DOI DOI 10.1145/2491627.2491646
   Markiegi U, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P123, DOI 10.1145/3106195.3106210
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Misherghi G., 2006, 28th International Conference on Software Engineering Proceedings, P142, DOI 10.1145/1134285.1134307
   Parejo JA, 2016, J SYST SOFTWARE, V122, P287, DOI 10.1016/j.jss.2016.09.045
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Perrouin G., 2010, C SOFTW TEST VER VAL
   Regehr J, 2012, ACM SIGPLAN NOTICES, V47, P335, DOI 10.1145/2345156.2254104
   Reps T, 1997, LECT NOTES COMPUT SC, V1301, P432, DOI 10.1145/267896.267925
   Sanchez A. B., 2015, SOFTW SYST MODEL, P1
   Sánchez AB, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P41, DOI 10.1109/ICST.2014.15
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Vargha A, 1998, J EDUC BEHAV STAT, V23, P170, DOI 10.3102/10769986023002170
   Wang S, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P32, DOI 10.1145/2648511.2648515
   Wang SA, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1493
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xie XY, 2013, INFORM SOFTWARE TECH, V55, P866, DOI 10.1016/j.infsof.2012.08.008
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Yilmaz C., 2004, Software Engineering Notes, V29, P45, DOI 10.1145/1013886.1007519
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
NR 67
TC 28
Z9 28
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2018
VL 100
BP 18
EP 31
DI 10.1016/j.infsof.2018.03.008
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GJ1VN
UT WOS:000435056100002
OA Green Published
DA 2024-07-18
ER

PT J
AU Solari, M
   Vegas, S
   Juristo, N
AF Solari, Martin
   Vegas, Sira
   Juristo, Natalia
TI Content and structure of laboratory packages for software engineering
   experiments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Experiment replication; Laboratory package;
   Knowledge transfer
ID TESTING TECHNIQUES; KNOWLEDGE; REPLICATIONS
AB Context Experiment replications play a central role in the scientific method. Although software engineering experimentation has matured a great deal, the number of experiment replications is still relatively small. Software engineering experiments are composed of complex concepts, procedures and artefacts. Laboratory packages are a means of transferring knowledge among researchers to facilitate experiment replications.
   Objective: This paper investigates the experiment replication process to find out what information is needed to successfully replicate an experiment. Our objective is to propose the content and structure of laboratory packages for software engineering experiments.
   Method: We evaluated seven replications of three different families of experiments. Each replication had a different experimenter who was, at the time, unfamiliar with the experiment. During the first iterations of the study, we identified experimental incidents and then proposed a laboratory package structure that addressed these incidents, including document usability improvements. We used the later iterations to validate and generalize the laboratory package structure for use in all software engineering experiments. We aimed to solve a specific problem, while at the same time looking at how to contribute to the body of knowledge on laboratory packages.
   Results: We generated a laboratory package for three different experiments. These packages eased the replication of the respective experiments. The evaluation that we conducted shows that the laboratory package proposal is acceptable and reduces the effort currently required to replicate experiments in software engineering.
   Conclusion: We think that the content and structure that we propose for laboratory packages can be useful for other software engineering experiments.
C1 [Solari, Martin] Univ ORT Uruguay, Cuareim 1451, Montevideo 11100, Uruguay.
   [Vegas, Sira; Juristo, Natalia] Univ Politecn Madrid, Campus Montegancedo S-N, E-28660 Madrid, Spain.
C3 University ORT Uruguay; Universidad Politecnica de Madrid
RP Solari, M (corresponding author), Univ ORT Uruguay, Cuareim 1451, Montevideo 11100, Uruguay.
EM martin.solari@ort.edu.uy; svegas@fi.upm.es; natalia@fi.upm.es
RI Vegas, Sira/R-6742-2018
OI Solari, Martin/0000-0001-5532-3227
CR Acuña ST, 2008, EMPIR SOFTW ENG, V13, P401, DOI 10.1007/s10664-008-9074-8
   Acuña ST, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P291
   Acuña ST, 2009, INFORM SOFTWARE TECH, V51, P627, DOI 10.1016/j.infsof.2008.08.006
   [Anonymous], 1992, CHANGING ORDER REPLI
   Apa C., 2011, 14 IB C SOFTW ENG CI
   Apa C, 2014, EMPIR SOFTW ENG, V19, P378, DOI 10.1007/s10664-013-9267-7
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Basili V.R., 1996, PACKAGING RES EXPERI
   Basili V.R., 1985, COMP EFFECTIVENESS S
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Brooks A., 1996, Replication of experimental results in software engineering
   Carver J.C., 2010, 1 INT WORK REPL EMP
   Carver JC, 2014, EMPIR SOFTW ENG, V19, P267, DOI 10.1007/s10664-013-9290-8
   Chalmers I, 1999, LANCET, V353, P490, DOI 10.1016/S0140-6736(98)07618-1
   Chan AW, 2013, ANN INTERN MED, V158, P200, DOI 10.7326/0003-4819-158-3-201302050-00583
   Chan AW, 2008, PLOS MED, V5, P1533, DOI 10.1371/journal.pmed.0050230
   ClinicalTrials.gov, 2015, UND CLIN TRIALS
   da Silva FQB, 2014, EMPIR SOFTW ENG, V19, P501, DOI 10.1007/s10664-012-9227-7
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Du BoisB., 2006, IASTED C SOFTWARE EN, P346
   Dunsmore A., 2002, LAB PACKAGE REPLICAT
   Fiona G., 2001, BMC NEWS VIEWS, V2, P4, DOI DOI 10.1186/1471-8219-2-4
   Genero M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P300
   Giles J, 2006, NATURE, V442, P344, DOI 10.1038/442344a
   Gomez O.S., 2016, SOFTW ENG ED TRAIN T
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   IBM, 1983, PROD QUAL TECHN INF
   Jedlitschka A., 2008, GUID ADV EMPIR SOFTW
   Juristo N, 2003, LECT NOTES COMPUT SC, V2765, P208
   Juristo N., 2013, BASICS SOFTWARE ENG
   Juristo N., 2012, INT C SOFTW TEST VER
   Juristo N, 2013, INFORM SOFTWARE TECH, V55, P215, DOI 10.1016/j.infsof.2012.07.016
   Kamsties E., 1995, EUR SOFTW ENG C
   Kvale S., 1996, INTERVIEW VIEWS INTR
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Marlow A.J., 2005, QUALITY CONTROL TECH
   Mian P.G., 2005, EXP SOFTW ENG LAT AM
   Miller J, 2008, EMPIR SOFTW ENG, V13, P223, DOI 10.1007/s10664-008-9063-y
   Moonesinghe R, 2007, PLOS MED, V4, P218, DOI 10.1371/journal.pmed.0040028
   Roper M, 1997, INFORM SOFTWARE TECH, V39, P763, DOI 10.1016/S0950-5849(97)00028-1
   Rosenberg B.J., 2005, TECHNICAL WRITING EN
   Runeson P, 2014, EMPIR SOFTW ENG, V19, P1781, DOI 10.1007/s10664-013-9262-z
   Schmidt S., 2009, REV GEN PSYCHOL, P13
   Schulz KF, 2010, ANN INTERN MED, V152, P726, DOI 10.7326/0003-4819-152-11-201006010-00232
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
   SHULL F, 2002, INT S EMP SOFTW ENG
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Solari Martin, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P213, DOI 10.1109/ESEM.2013.26
   Solari M., 2014, INT C SOFTW ENG KNOW
   Solari M., 2012, PROPUESTA PAQUETE LA
   Solari M., 2006, WORK EMP SOFTW ENG 7
   Tetzlaff JM, 2012, SYST REV-LONDON, V1, DOI 10.1186/2046-4053-1-43
   Thelin T, 2003, IEEE T SOFTWARE ENG, V29, P687, DOI 10.1109/TSE.2003.1223644
   Vallespir D., 2009, 28 INT C CHIL COMP S
   Vallespir D., 2009, RES COMPUT SCI
   Vegas S., 2006, International Symposium on Empirical Software Engineering, P28, DOI DOI 10.1145/1159733.1159741
   Wohlin C., 2012, Experimentation in Software Engineering
NR 60
TC 9
Z9 9
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2018
VL 97
BP 64
EP 79
DI 10.1016/j.infsof.2017.12.016
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GA0MR
UT WOS:000428008600005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Saber, T
   Brevet, D
   Botterweck, G
   Ventresque, A
AF Saber, Takfarinas
   Brevet, David
   Botterweck, Goetz
   Ventresque, Anthony
TI Is seeding a good strategy in multi-objective feature selection when
   feature models evolve?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software product lines; Multi-objective; Genetic algorithm; Evolution
ID PRODUCT LINE EVOLUTION; OPTIMIZATION; ALGORITHMS
AB Context: When software architects or engineers are given a list of all the features and their interactions (i.e., a Feature Model or FM) together with stakeholders' preferences - their task is to find a set of potential products to suggest the decision makers. Software Product Lines Engineering (SPLE) consists in optimising those large and highly constrained search spaces according to multiple objectives reflecting the preference of the different stakeholders. SPLE is known to be extremely skill- and labour-intensive and it has been a popular topic of research in the past years.
   Objective: This paper presents the first thorough description and evaluation of the related problem of evolving software product lines. While change and evolution of software systems is the common case in the industry, to the best of our knowledge this element has been overlooked in the literature. In particular, we evaluate whether seeding previous solutions to genetic algorithms (that work well on the general problem) would help them to find better/faster solutions.
   Method: We describe in this paper a benchmark of large scale evolving FMs, consisting of 5 popular FMs and their evolutions - synthetically generated following an experimental study of FM evolution. We then study the performance of a state-of-the-art algorithm for multi-objective FM selection (SATIBEA) when seeded with former solutions.
   Results: Our experiments show that we can improve both the execution time and the quality of SATIBEA by feeding it with previous configurations. In particular, SATIBEA with seeds proves to converge an order of magnitude faster than SATIBEA alone.
   Conclusion: We show in this paper that evolution of FMs is not a trivial task and that seeding previous solutions can be used as a first step in the optimisation - unless the difference between former and current FMs is high, where seeding has a limited impact. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Saber, Takfarinas; Ventresque, Anthony] Univ Coll Dublin, Sch Comp Sci, Lero UCD, Dublin 4, Ireland.
   [Brevet, David] Inst Super Informat Modelisat & Leurs Applicat, Clermont Ferrand, France.
   [Botterweck, Goetz] Univ Limerick, Lero UL, Limerick, Ireland.
C3 University College Dublin; University of Limerick
RP Saber, T; Ventresque, A (corresponding author), Univ Coll Dublin, Sch Comp Sci, Lero UCD, Dublin 4, Ireland.
EM takfarinas.saber@ucdconnect.ie; david.brevet@isima.fr;
   goetz.botterweck@lero.ie; anthony.ventresque@ucd.ie
RI Saber, Takfarinas/AAN-4848-2020
OI Saber, Takfarinas/0000-0003-2958-7979; Botterweck,
   Goetz/0000-0002-5556-1660; Ventresque, Anthony/0000-0003-2064-1238
FU Science Foundation Ireland [13/RC/2094]; European Regional Development
   Fund through the Southern & Eastern Regional Operational Programme
FX This work was supported with the financial support of the Science
   Foundation Ireland grant 13/RC/2094 and co-funded under the European
   Regional Development Fund through the Southern & Eastern Regional
   Operational Programme to Lero - the Irish Software Research Centre
   (www.lero.ie).
CR Abbas A., 2016, IJST
   Alshahwan N., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P3, DOI 10.1109/ASE.2011.6100082
   [Anonymous], 2013, P 17 INT SOFTW PROD, DOI [DOI 10.1145/2491627.2491635, 10.1145/2491627.2491635]
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D., 2007, PROCEEDING 1 INT WOR, P129
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T., 2010, P INT C AUT SOFTW EN, P73, DOI DOI 10.1145/1858996.1859010
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Botterweck G., 2010, Proceedings of the 2010 ICSE Workshop on Product Line Approaches in Software Engineering, P24
   Botterweck Goetz., 2014, EVOLVING SOFTWARE SY, P265, DOI DOI 10.1007/978-3-642-45398-4_9
   Brevet D, 2016, LECT NOTES COMPUT SC, V9962, P274, DOI 10.1007/978-3-319-47106-8_23
   Brockhoff D, 2008, LECT NOTES COMPUT SC, V5199, P651, DOI 10.1007/978-3-540-87700-4_65
   Colanzi Thelma Elita, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P259, DOI 10.1007/978-3-642-33119-0_19
   Colanzi TE, 2016, J SYST SOFTWARE, V121, P126, DOI 10.1016/j.jss.2016.02.026
   Colanzi TE, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P28, DOI 10.1109/CMSBSE.2013.6604433
   Colanzi TE, 2012, PROC INT CONF SOFTW, P1507, DOI 10.1109/ICSE.2012.6227050
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Deb K, 2003, LECT NOTES COMPUT SC, V2632, P222
   Dhungana D, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P319, DOI 10.1109/SPLC.2008.26
   Dhungana D, 2010, J SYST SOFTWARE, V83, P1108, DOI 10.1016/j.jss.2010.02.018
   Neto PDD, 2016, APPL SOFT COMPUT, V49, P1243, DOI 10.1016/j.asoc.2016.08.024
   FONSECA C, 2005, 3 INT C EV MULT OPT, V216
   Fraser G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P121, DOI 10.1109/ICST.2012.92
   Guizzo G, 2014, LECT NOTES COMPUT SC, V8636, P77
   Guo J., 2014, P 29 ACMIEEE INT C A, P409, DOI 10.1145/2642937.2642971
   Guo JM, 2012, EXPERT SYST APPL, V39, P4987, DOI 10.1016/j.eswa.2011.10.014
   Guo JM, 2011, J SYST SOFTWARE, V84, P2208, DOI 10.1016/j.jss.2011.06.026
   Harman M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P5, DOI 10.1145/2648511.2648513
   Hawkins Thomas., 2001, LEBESGUES THEORY INT, V282
   Henard C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P517, DOI 10.1109/ICSE.2015.69
   Ishibuchi H, 2015, LECT NOTES COMPUT SC, V9019, P110, DOI 10.1007/978-3-319-15892-1_8
   Karimpour R., 2015, P COMP PUBL 2015 ANN, P1415
   Laguna MA, 2013, SCI COMPUT PROGRAM, V78, P1010, DOI 10.1016/j.scico.2012.05.003
   Loesch F, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P151, DOI 10.1109/SPLINE.2007.31
   Lopez-Herrejon RE, 2015, INFORM SOFTWARE TECH, V61, P33, DOI 10.1016/j.infsof.2015.01.008
   Lopez-Herrejon RE, 2014, 2014 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P387, DOI 10.1109/CEC.2014.6900473
   Lopez-Herrejon RE, 2013, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSM.2013.58
   Metzger A., Proc. Futur. Softw. Eng. - FOSE 2014, ACM Press, New York, New York, USA, P70, DOI DOI 10.1145/2593882.2593888
   Olaechea R, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P92, DOI 10.1145/2648511.2648521
   Passos L, 2013, P 7 INT WORKSH VAR M, P17, DOI [10.1145/2430502.2430526, DOI 10.1145/2430502.2430526]
   Pleuss A, 2012, J SYST SOFTWARE, V85, P2261, DOI 10.1016/j.jss.2011.08.008
   Sayyad Abdel Salam, 2013, Proceedings of the 2013 3rd International Workshop on Replication in Empirical Software Engineering Research (RESER 2013), P84, DOI 10.1109/RESER.2013.6
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Sayyad AS, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P22, DOI 10.1109/CMSBSE.2013.6604432
   Schmid K, 2002, IEEE SOFTWARE, V19, P50, DOI 10.1109/MS.2002.1020287
   She S., 2013, FEATURE MODEL SYNTHE
   She S., 2013, LVAT LINUX VARIABILI
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Siegmund N, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P284, DOI 10.1145/2786805.2786845
   Siegmund N, 2013, INFORM SOFTWARE TECH, V55, P491, DOI 10.1016/j.infsof.2012.07.020
   Siegmund N, 2012, SOFTWARE QUAL J, V20, P487, DOI 10.1007/s11219-011-9152-9
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Valov P, 2015, P 19 INT C SOFTW PRO, P186, DOI [10.1145/2791060.2791069, DOI 10.1145/2791060.2791069]
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang S, 2016, PROC INT CONF SOFTW, P631, DOI 10.1145/2884781.2884880
   Wang SA, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1493
   White J, 2014, J SYST SOFTWARE, V87, P119, DOI 10.1016/j.jss.2013.10.010
   White J, 2009, J SYST SOFTWARE, V82, P1268, DOI 10.1016/j.jss.2009.02.011
   Zhang Y., 2016, SOC PETROLEUM ENG, P2, DOI [DOI 10.2118/182285-MS, 10.1145/2934466.2934469, DOI 10.1145/2934466.2934469]
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
   Zitzler E, 1998, LECT NOTES COMPUT SC, V1498, P292, DOI 10.1007/BFb0056872
NR 68
TC 11
Z9 11
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 266
EP 280
DI 10.1016/j.infsof.2017.08.010
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FX4EZ
UT WOS:000426026800019
DA 2024-07-18
ER

PT J
AU Velásquez, I
   Caro, A
   Rodríguez, A
AF Velasquez, Ignacio
   Caro, Angelica
   Rodriguez, Alfonso
TI Authentication schemes and methods: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Security; Authentication scheme; Multi-factor authentication method;
   Systematic literature review
AB Context There is a great variety of techniques for performing authentication, like the use of text passwords or smart cards. Some techniques combine others into one, which is known as multi-factor authentication. There is an interest in knowing existing authentication techniques, including those aimed at multi-factor authentication, and the frameworks that can be found in literature that are used to compare and select these techniques according to different criteria.
   Objective: This article aims to gather the existing knowledge on authentication techniques and ways to discern the most effective ones for different contexts.
   Method: A systematic literature review is performed in order to gather existing authentication techniques proposed in literature and ways to compare and select them in different contexts. A total of 515 single-factor and 442 multi-factor authentication techniques have been found. Furthermore, 17 articles regarding comparison and selection criteria for authentication techniques and 8 frameworks that help in such a task are discussed.
   Results: A great variety of single-factor techniques has been found and smart card-based authentication was shown to be the most researched technique. Similarly, multi-factor techniques combine the different single factor techniques found and the combination of text-passwords and smart cards is the most researched technique. Usability, security and costs are the most used criteria for comparing and selecting authentication schemes, whereas the context is given an important remark as well. No framework among the ones found analyzed in detail both single-factor and multi-factor authentication techniques for the decision-making process.
   Conclusion: The review shows that a vast research has been done for authentication techniques, although its use in some contexts has not been researched as much. The lack of works regarding the comparison and selection of authentication techniques is observed.
C1 [Velasquez, Ignacio; Caro, Angelica; Rodriguez, Alfonso] Univ Bio Bio, Comp Sci & Informat Technol Deparunen4, Chillan, Chile.
C3 Universidad del Bio-Bio
RP Caro, A (corresponding author), Univ Bio Bio, Comp Sci & Informat Technol Deparunen4, Chillan, Chile.
EM ivelasqu@altunnos.ubiobio.cl; mcaro@ubiobio.cl; alfonso@ubiobio.d
RI Rodriguez, Alfonso/N-5691-2015
FU project : DIUBB [144319 2/R]; project : BuPERG [DIUBB 152419G/EF]
FX This research is part of the following projects: DIUBB 144319 2/R and
   BuPERG (DIUBB 152419G/EF).
CR Cheng ZY, 2012, INT J INNOV COMPUT I, V8, P5499
   Das AK, 2012, J NETW COMPUT APPL, V35, P1646, DOI 10.1016/j.jnca.2012.03.011
   Islam SKH, 2013, MATH COMPUT MODEL, V57, P2703, DOI 10.1016/j.mcm.2011.07.001
   Jansen W., 2003, P CAN INF TECHN SEC, P1
   Kwang Cheul Shin, 2013, International Journal of Information Processing and Management, V4, P10, DOI 10.4156/ijipm.vol4.issue2.2
   Li Z, 2005, LECT NOTES COMPUT SC, V3645, P751
   Madhusudhan R, 2012, J NETW COMPUT APPL, V35, P1235, DOI 10.1016/j.jnca.2012.01.007
   Mihajlov M, 2011, INTERACT COMPUT, V23, P582, DOI 10.1016/j.intcom.2011.09.001
   O'Gorman L, 2003, P IEEE, V91, P2021, DOI 10.1109/JPROC.2003.819611
   Rathgeb C, 2010, LECT NOTES COMPUT SC, V6112, P296, DOI 10.1007/978-3-642-13775-4_30
   Umar M.S., 2012, 2012 IEEE INT C SIGN
   Wang SQ, 2013, IERI PROC, V4, P2, DOI 10.1016/j.ieri.2013.11.002
NR 12
TC 53
Z9 58
U1 5
U2 48
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2018
VL 94
BP 30
EP 37
DI 10.1016/j.infsof.2017.09.012
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FO6WE
UT WOS:000417009000003
DA 2024-07-18
ER

PT J
AU Chen, X
   Zhao, YQ
   Wang, QP
   Yuan, ZD
AF Chen, Xiang
   Zhao, Yingquan
   Wang, Qiuping
   Yuan, Zhidan
TI MULTI: Multi-objective effort-aware just-in-time software defect
   prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Just-in-time defect prediction; Multi-objective optimization; Empirical
   studies; Search based software engineering
ID FRAMEWORK; FAULTS
AB Context: Just-in-time software defect prediction (JIT-SDP) aims to conduct defect prediction on code changes, which have finer granularity. A recent study by Yang et al. has shown that there exist some unsupervised methods, which are comparative to supervised methods in effort-aware JIT-SDP.
   Objective: However, we still believe that supervised methods should have better prediction performance since they effectively utilize the gathered defect prediction datasets. Therefore we want to design a new supervised method for JIT-SDP with better performance.
   Method: In this article, we propose a multi-objective optimization based supervised method MULTI to build JIT-SDP models. In particular, we formalize JIT-SDP as a multi-objective optimization problem. One objective is designed to maximize the number of identified buggy changes and another object is designed to minimize the efforts in software quality assurance activities. There exists an obvious conflict between these two objectives. MULTI uses logistic regression to build the models and uses NSGA-II to generate a set of non-dominated solutions, which each solution denotes the coefficient vector for the logistic regression.
   Results: We design and conduct a large-scale empirical studies to compare MULTI with 43 state-of-the-art supervised and unsupervised methods under the three commonly used performance evaluation scenarios: cross-validation, cross-project-validation, and timewise-cross-validation. Based on six open-source projects with 227,417 changes in total, our experimental results show that MULTI can perform significantly better than all of the state-of-the-art methods when considering ACC and P-OPT performance metrics.
   Conclusion: By using multi-objective optimization, MULTI can perform significantly better than the state-of-the-art supervised and unsupervised methods in the three performance evaluation scenarios. The results confirm that supervised methods are still promising in effort-aware JIT-SDP. (c) 2017 Elsevier B.V. All rights reserved.
C1 [Chen, Xiang; Zhao, Yingquan; Wang, Qiuping; Yuan, Zhidan] Nantong Univ, Sch Comp Sci & Technol, Nantong, Peoples R China.
   [Chen, Xiang] Guilin Univ Elect Technol, Guangxi Key Lab Trusted Software, Guilin, Peoples R China.
   [Chen, Xiang] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
C3 Nantong University; Guilin University of Electronic Technology; Nanjing
   University
RP Chen, X (corresponding author), Nantong Univ, Sch Comp Sci & Technol, Nantong, Peoples R China.
EM xchencs@ntu.edu.cn; enockchao@163.com; 724350252@qq.com;
   3022868066@qq.com
RI Zhao, Yingquan/HGU-0447-2022; Chen, Xiang/AAG-3663-2019
OI Zhao, Yingquan/0000-0003-2998-1052; Chen, Xiang/0000-0002-1180-3891
FU National Natural Science Foundation of China [61202006, 61602267];
   Guangxi Key Laboratory of Trusted Software [kx201610]; State Key
   Laboratory for Novel Software Technology at Nanjing University
   [KEKT20161318]
FX The authors would like to thank the editors and the anonymous reviewers
   for their insightful comments and suggestions, which can substantially
   improve the quality of this work. This work is supported in part by
   National Natural Science Foundation of China (Grant nos. 61202006 and
   61602267), Guangxi Key Laboratory of Trusted Software (Grant no.
   kx201610), and Open Project of State Key Laboratory for Novel Software
   Technology at Nanjing University (Grant no. KEKT20161318).
CR [Anonymous], MEDIATORS INFLAMMATI
   [Anonymous], 2010, P 6 INT C PRED MOD S
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Canfora G, 2015, SOFTW TEST VERIF REL, V25, P426, DOI 10.1002/stvr.1570
   Coello C. A. C., 2007, EVOLUTIONARY ALGORIT, DOI DOI 10.1007/978-0-387-36797-2
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Fu W., 2017, P JOINT M EUR SOFTW
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Jelihovschi E.G., 2014, TEMA (São Carlos), V15, P3
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Matsumoto S, 2010, P 6 INT C PREDICTIVE, P1, DOI DOI 10.1145/1868328.1868356
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Wang S, 2016, PROC INT CONF SOFTW, P631, DOI 10.1145/2884781.2884880
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
NR 40
TC 89
Z9 98
U1 2
U2 37
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2018
VL 93
BP 1
EP 13
DI 10.1016/j.infsof.2017.08.004
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FM3BC
UT WOS:000414878200001
DA 2024-07-18
ER

PT J
AU Dönmez, D
   Grote, G
AF Donmez, Denniz
   Grote, Gudela
TI Two sides of the same coin - how agile software development teams
   approach uncertainty as threats and opportunities
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Uncertainty; Risk; Threat; Opportunity; New product development; Agile
   software development; Multi-case study
ID RISK-MANAGEMENT; PROJECT PERFORMANCE; REQUIREMENTS-UNCERTAINTY;
   DECISION-MAKING; INNOVATION; AMBIGUITY
AB Context: Uncertainty affects software development projects in many ways. Capabilities to manage uncertainty can determine the success or failure of entire projects and even companies. Against failure rates of software development projects, uncertainty is often viewed in a negative light. Its relevance as enabler of learning and innovation tends to be disregarded by scholars and practitioners.
   Objective: This study extends research that empirically investigates approaches to dealing with different types of uncertainties. Acknowledging both the possibility for negative and positive consequences of uncertainty, we aim to expand existing knowledge and contribute to improving the practices to handle uncertainty in software development.
   Method: A multiple-case study including field observations and in-depth interviews with 42 professional software developers was performed with a sample of 11 agile software development teams from different Swiss companies.
   Results: We detail practices employed to mitigate threats while simultaneously allowing teams to remain open to opportunities. We establish a taxonomical classification of uncertainty in software development, which extends beyond often-addressed requirements uncertainty and additionally includes uncertainty related to resource availability and task specifications. Against the background of different uncertainty types, we discuss distinct practices and four overarching principles to approach uncertainty using strategies for threat avoidance versus opportunity realization. Specifically, we find that employed practices are guided by 1) uncertainty anticipation, 2) information accrual, 3) solution inspection, and 4) role-based coordination.
   Conclusion: We argue that approaches to dealing efficiently and effectively with uncertainty can be improved when teams distinguish between different types of uncertainty and treat them explicitly as threats versus opportunities. Whereas potential to seize opportunities is under-used, agile methods could evolve into better frameworks supporting the systematic search for innovation. We discuss the implications of our findings for agile development teams in particular and product developing organizations in general. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Donmez, Denniz; Grote, Gudela] ETH, Chair Work & Org Psychol, Dept Management Technol & Econ, Weinbergstr 56-58, CH-8092 Zurich, Switzerland.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich
RP Dönmez, D (corresponding author), MTEC, Weinbergstr 56-58, CH-8092 Zurich, Switzerland.
EM denniz@ethz.ch; ggrote@ethz.ch
RI Grote, Gudela/ABB-3515-2021
OI Grote, Gudela/0000-0002-5581-0452
CR [Anonymous], 2015, MANAGING AGILE
   [Anonymous], QUALITATIVE RES
   [Anonymous], 2014, P 40 LAT AM COMP C C
   [Anonymous], INT C ENG DES ICED11
   [Anonymous], PROJECT MANAGEMENT M
   [Anonymous], ORGAN SCI
   [Anonymous], EUR J INF SYST
   [Anonymous], HARV BUS REV
   [Anonymous], 16 INT C AG SOFTW DE
   [Anonymous], ORGAN DYN
   [Anonymous], 2013, REINVENTING PROJECT
   [Anonymous], P 10 AG PROC SOFTW E
   [Anonymous], MANAGING IT PROJECTS
   [Anonymous], ORG BEHAY HUM DECIS
   [Anonymous], J SYST SOFTW
   [Anonymous], 2005, WISDOM CROWDS
   [Anonymous], 2000, RADICAL INNOVATION
   [Anonymous], PROJ MANAGE J
   [Anonymous], J SYST SOFTW
   [Anonymous], 15 EUR C INF SYST
   [Anonymous], 2010, INF SOFTW TECHNOL
   [Anonymous], INT J PROJ MANAGE
   [Anonymous], MANAGEMENT UNCERTAIN
   [Anonymous], J SYST SOFTW
   [Anonymous], COMP PROCESS KNOWLED
   ARGOTE L, 1982, ADMIN SCI QUART, V27, P420, DOI 10.2307/2392320
   Atkinson R., 1999, International Journal of Project Management, V17, P337, DOI [DOI 10.1016/S0263-7863(98)00069-6, 10.1016/S0263-7863(98)00069-6]
   Austin RD, 2012, ORGAN SCI, V23, P1505, DOI 10.1287/orsc.1110.0681
   Austin RD, 2009, INFORM SYST RES, V20, P462, DOI 10.1287/isre.1090.0242
   Aven T, 2009, J RISK RES, V12, P1, DOI 10.1080/13669870802488883
   Barclay C, 2008, INFORM SYST FRONT, V10, P331, DOI 10.1007/s10796-008-9083-6
   Beck K., 2000, EXTREME PROGRAMMING
   Bradley R, 2014, ERKENNTNIS, V79, P1225, DOI 10.1007/s10670-013-9518-4
   Carson SJ, 2012, J PROD INNOVAT MANAG, V29, P1061, DOI 10.1111/j.1540-5885.2012.00950.x
   Coyle Sharon, 2009, A case study of risk management in agile systems development
   de Bakker K, 2010, INT J PROJ MANAG, V28, P493, DOI 10.1016/j.ijproman.2009.07.002
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Drury M, 2012, J SYST SOFTWARE, V85, P1239, DOI 10.1016/j.jss.2012.01.058
   Eisenhardt KM, 2007, ACAD MANAGE J, V50, P25, DOI 10.5465/AMJ.2007.24160888
   Faraj S, 2009, J APPL PSYCHOL, V94, P604, DOI 10.1037/a0014367
   Fitzgerald B, 2006, EUR J INFORM SYST, V15, P200, DOI 10.1057/palgrave.ejis.3000605
   FLANAGAN JC, 1954, PSYCHOL BULL, V51, P327, DOI 10.1037/h0061470
   Fontana RM, 2015, J SYST SOFTWARE, V102, P88, DOI 10.1016/j.jss.2014.12.032
   Galbraith J.R., 1973, Designing complex organizations
   Golfarelli M, 2013, J SYST SOFTWARE, V86, P2357, DOI 10.1016/j.jss.2013.04.028
   Grote G, 2015, SAFETY SCI, V71, P71, DOI 10.1016/j.ssci.2014.02.010
   Hillson D., 2002, INT J PROJ MANAG, V20, P235, DOI [10.1016/S0263-7863(01)00074-6, DOI 10.1016/S0263-7863(01)00074-6]
   Hillson D., 2009, Capturing Upside Risk: Finding and Managing Opportunities in Projects
   Hillson David., 2003, Effective opportunity management for projects: Exploiting positive risk
   Hoda R, 2011, INFORM SOFTWARE TECH, V53, P521, DOI 10.1016/j.infsof.2010.10.009
   Hofmann HF, 2001, IEEE SOFTWARE, V18, P58, DOI 10.1109/MS.2001.936219
   Holt R, 2004, ORGANIZATION, V11, P251, DOI 10.1177/1350508404041615
   Huberman A.M., 2013, Qualitative data analysis: A methods sourcebook, V3rd
   Ibrahim Hamdy, 2009, 2009 Canadian Conference on Electrical and Computer Engineering (CCECE 2009), P7, DOI 10.1109/CCECE.2009.5090081
   Islam S, 2014, INFORM SOFTWARE TECH, V56, P117, DOI 10.1016/j.infsof.2013.06.003
   Jalonen H., 2012, J MANAG RES, V4, P1, DOI [DOI 10.5296/JMR.V4I1.1039, 10.5296/jmr.v4i1.1039]
   Jeschke S, 2011, ENABLING INNOVATION: INNOVATIVE CAPABILITY - GERMAN AND INTERNATIONAL VIEWS, P1, DOI 10.1007/978-3-642-24503-9
   Jiang R, 2014, J INF SCI ENG, V30, P1279
   Knight F. H., 1921, RISK UNCERTAINTY PRO, V31
   Kolltveit BJ, 2004, J MANAGE ENG, V20, P134, DOI 10.1061/(ASCE)0742-597X(2004)20:4(134)
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   Liu J, 2011, INT J PROJ MANAG, V29, P923, DOI 10.1016/j.ijproman.2010.11.002
   MacCormack A, 2001, MANAGE SCI, V47, P133, DOI 10.1287/mnsc.47.1.133.10663
   Magdaleno AM, 2012, J SYST SOFTWARE, V85, P351, DOI 10.1016/j.jss.2011.08.028
   Marchenko A, 2008, AGILE 2008, PROCEEDINGS, P15, DOI 10.1109/Agile.2008.77
   Maruping LM, 2009, INFORM SYST RES, V20, P377, DOI 10.1287/isre.1090.0238
   McBride T, 2008, J SYST SOFTWARE, V81, P2386, DOI 10.1016/j.jss.2008.06.015
   Miller R., 2001, INT J PROJ MANAG, V19, P437, DOI [DOI 10.1016/S0263-7863(01)00045-X, 10.1016/s0263-7863(01)00045-x, DOI 10.1016/S0263-7863(01)00045]
   Moe NB, 2012, INFORM SOFTWARE TECH, V54, P853, DOI 10.1016/j.infsof.2011.11.006
   Moran A, 2014, SPRINGERBRIEF COMPUT, P1, DOI 10.1007/978-3-319-05008-9
   Moynihan T, 2000, J SYST SOFTWARE, V53, P99, DOI 10.1016/S0164-1212(00)00049-2
   Na KS, 2007, J SYST SOFTWARE, V80, P596, DOI 10.1016/j.jss.2006.06.018
   Nidumolu S. R., 1996, Journal of Management Information Systems, V13, P77
   Nidumolu SR, 1996, INFORM MANAGE, V31, P135, DOI 10.1016/S0378-7206(96)01073-7
   Olsson R, 2008, INT J QUAL RELIAB MA, V25, P60, DOI 10.1108/02656710810843586
   Paixao M, 2015, J SYST SOFTWARE, V103, P281, DOI 10.1016/j.jss.2014.09.039
   Paté-Cornell E, 2012, RISK ANAL, V32, P1823, DOI 10.1111/j.1539-6924.2011.01787.x
   Penrose E., 2009, THEORY GROWTH FIRM
   Perminova Olga, 2008, International Journal of Project Management, V26, P73, DOI 10.1016/j.ijproman.2007.08.005
   Ropponen J, 2000, IEEE T SOFTWARE ENG, V26, P98, DOI 10.1109/32.841112
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schatz B, 2005, IEEE SOFTWARE, V22, P36, DOI 10.1109/MS.2005.74
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Sgourev SV, 2013, ORGAN SCI, V24, P1601, DOI 10.1287/orsc.1120.0819
   Shrivastava SV, 2015, INFORM SOFTWARE TECH, V58, P373, DOI 10.1016/j.infsof.2014.07.007
   Singh RP, 2001, ACAD MANAGE REV, V26, P10, DOI 10.5465/AMR.2001.27879266
   Smith PrestonG., 2007, FLEXIBLE PRODUCT DEV
   Song M, 2001, ACAD MANAGE J, V44, P61, DOI 10.5465/3069337
   SOUDER WE, 1992, J MANAGE STUD, V29, P485, DOI 10.1111/j.1467-6486.1992.tb00675.x
   Stamelos I, 2001, INFORM SOFTWARE TECH, V43, P759, DOI 10.1016/S0950-5849(01)00183-5
   Tatikonda MV, 2001, MANAGE SCI, V47, P151, DOI 10.1287/mnsc.47.1.151.10669
   Valentine MA, 2015, ORGAN SCI, V26, P405, DOI 10.1287/orsc.2014.0947
   van Valkenhoef G, 2011, INFORM SOFTWARE TECH, V53, P1227, DOI 10.1016/j.infsof.2011.05.007
   Vidgen R, 2009, INFORM SYST RES, V20, P355, DOI 10.1287/isre.1090.0237
   Yin D.R. K., 2017, Case Study Research and Applications: Design and Methods
NR 95
TC 18
Z9 27
U1 2
U2 65
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2018
VL 93
BP 94
EP 111
DI 10.1016/j.infsof.2017.08.015
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FM3BC
UT WOS:000414878200007
DA 2024-07-18
ER

PT J
AU Tanhaei, M
   Habibi, J
   Mirian-Hosseinabadi, SH
AF Tanhaei, Mohammad
   Habibi, Jafar
   Mirian-Hosseinabadi, Seyed-Hassan
TI Automating feature model refactoring: A Model transformation approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Feature model refactoring; Model transformation & refactoring
ID FRAMEWORK; ALLOY
AB Context: Feature model is an appropriate and indispensable tool for modeling similarities and differences among products of the Software Product Line (SPL). It not only exposes the validity of the products' configurations in an SPL but also changes in the course of time to support new requirements of the SPL. Modifications made on the feature model in the course of time raise a number of issues. Useless enlargements of the feature model, the existence of dead features, and violated constraints in the feature model are some of the key problems that make its maintenance difficult.
   Objective: The initial approach to dealing with the above-mentioned problems and improving maintain-ability of the feature model is refactoring. Refactoring modifies software artifacts in a way that their externally visible behavior does not change.
   Method: We introduce a method for defining refactoring rules and executing them on the feature model. We use the ATL model transformation language to define the refactoring rules. Moreover, we provide an Alloy model to check the feature model and the safety of the refactorings that are performed on it.
   Results: In this research, we propose a safe framework for refactoring a feature model. This framework enables users to perform automatic and semi-automatic refactoring on the feature model.
   Conclusions: Automated tool support for refactoring is a key issue for adopting approaches such as utilizing feature models and integrating them into the software development process of companies. In this work, we define some of the important refactoring rules on the feature model and provide tools that enable users to add new rules using the ATL M2M language. Our framework assesses the correctness of the refactorings using the Alloy language. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Tanhaei, Mohammad; Habibi, Jafar; Mirian-Hosseinabadi, Seyed-Hassan] Sharif Univ Technol, Dept Comp Engn, Tehran, Iran.
C3 Sharif University of Technology
RP Habibi, J (corresponding author), Sharif Univ Technol, Dept Comp Engn, Tehran, Iran.
EM tanhaei@ce.sharif.edu; jhabibi@sharif.edu; hmirian@sharif.edu
RI Mirian-Hosseinabadi, Seyed-Hassan/AAE-9963-2021
OI Tanhaei, Mohammad/0000-0001-5089-3917
CR Alves V., 2006, Proceedings of the 5th international conference on Generative Programming and Component Engineering, P201, DOI [10.1145/1173706, DOI 10.1145/1173706]
   [Anonymous], 2008, Metamodelling for software engineering
   [Anonymous], 2000, ACM SIGSOFT S FDN SO, DOI DOI 10.1145/357474.355063
   [Anonymous], TECHNICAL REPORT
   [Anonymous], THESIS
   [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], TECHNICAL REPORT
   [Anonymous], ECLIPSE IT 2011
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   Antkiewicz M., 2004, Proc. of the Wksp on Eclipse Technology eXchange, P67, DOI DOI 10.1145/1066129.1066143
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Batory D, 2006, LECT NOTES COMPUT SC, V4143, P3
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bragança A, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P3, DOI 10.1109/SPLINE.2007.17
   Czarnecki K, 2002, LECT NOTES COMPUT SC, V2319, P351
   Czarnecki Krzysztof., 2012, P 6 INT WORKSHOP VAR, P173, DOI DOI 10.1145/2110147.2110167
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Estler HC, 2008, ELECTRON NOTES THEOR, V214, P331, DOI 10.1016/j.entcs.2008.06.015
   Fowler M., 2009, Refactoring: improving the design of existing code
   Gheyi R, 2011, J UNIVERS COMPUT SCI, V17, P684
   Gheyi R, 2008, J UNIVERS COMPUT SCI, V14, P3573
   Gheyi Rohit., 2006, 1st Alloy workshop, P71
   Greenfield J., 2003, OOPSLA 03 COMPANION, P16, DOI DOI 10.1145/949344.949348
   Heidenreich F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P943
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kent S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P286
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Musset J., 2006, ACCELEO USER GUIDE
   Object Management Group (OMG), 2008, MOF Model to Text Transformation Language; Version 1.0, Document Formal/2008-01-16
   Saraiva D, 2010, LECT NOTES COMPUT SC, V6285, P166, DOI 10.1007/978-3-642-15114-9_14
   Schobbens PY, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P139
   Segura S., 2012, Proceedings of the Sixth International Workshop on Variability Modeling of Software-Intensive Systems, P63, DOI DOI 10.1145/2110147.2110155
   Seidl C., 2012, P 16 INT SOFTW PROD, V1, P76, DOI DOI 10.1145/2362536.2362550
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Stuikys V, 2009, INF TECHNOL CONTROL, V38, P179
   Sun J, 2005, IEEE INT C ENG COMP, P303
   Tanhaei M, 2016, J COMPUT SCI TECH-CH, V31, P951, DOI 10.1007/s11390-016-1674-y
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Trujillo S, 2007, PROC INT CONF SOFTW, P44
   Wagelaar D, 2011, LECT NOTES COMPUT SC, V6981, P623, DOI 10.1007/978-3-642-24485-8_46
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
NR 46
TC 9
Z9 10
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2016
VL 80
BP 138
EP 157
DI 10.1016/j.infsof.2016.08.011
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EA2GM
UT WOS:000386410800009
DA 2024-07-18
ER

PT J
AU Silva, B
   Sant'Anna, C
   Rocha, N
   Chavez, C
AF Silva, Bruno
   Sant'Anna, Claudio
   Rocha, Neylor
   Chavez, Christina
TI The effect of automatic concern mapping strategies on conceptual
   cohesion measurement
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Module cohesion; Cohesion metrics; Concern mapping; Comparative
   empirical study
ID INFORMATION-RETRIEVAL; TOPIC MODELS; IDENTIFICATION
AB Context: Cohesion has been recognized as an important quality attribute of software design across decades. It can be defined as the degree to which a module is focused on a single concern of software. A concern is any concept, feature, requirement or property of the problem or solution domain. Conceptual cohesion is an alternative way of cohesion measurement based on what concerns each module addresses. Therefore, adopting a strategy to map concerns to source code elements is challenging but necessary.
   Objective: We aim at providing empirical evidence about whether automatic concern mapping strategies are already ready to be used effectively for conceptual cohesion measurement.
   Method: We carried out an empirical study to assess the ability of conceptual cohesion measurement using different automatic concern mapping strategies in selecting the least cohesive modules.
   Results: Conceptual cohesion measurements over the two analyzed mapping strategies performed weakly in the ability of selecting the least cohesive modules. We then provide a discussion to explain the reasons.
   Conclusion: Concern mapping strategies should be carefully chosen for conceptual cohesion measurement, specially if automatic mapping is under consideration. Manual mapping is still the most reliable way for computing conceptual cohesion. We pointed out limitations in automatic mapping strategies that go beyond conceptual cohesion measurement purposes and which should be considered in future research or applications in industry. (C) 2016 Published by Elsevier B.V.
C1 [Silva, Bruno] Univ Salvador UNIFACS Salvador, Salvador, BA, Brazil.
   [Sant'Anna, Claudio; Rocha, Neylor; Chavez, Christina] Fed Univ Bahia Salvador, Dept Comp Sci, Salvador, BA, Brazil.
C3 Universidade Salvador (UNIFACS); Universidade Federal da Bahia
RP Silva, B (corresponding author), Univ Salvador UNIFACS Salvador, Salvador, BA, Brazil.
EM bruno.carreiro@pro.unifacs.br; santanna@dcc.ufba.br;
   neylorbr@dcc.ufba.br; flach@dcc.ufba.br
RI von Flach, Christina/ABA-8720-2021; von Flach G. Chavez,
   Christina/G-2567-2012; Carreiro da Silva, Bruno/H-6055-2016
OI von Flach, Christina/0000-0001-5172-9641; Carreiro da Silva,
   Bruno/0000-0002-6467-9943
CR Adams B., 2010, P 32 ACMIEEE INT C S, P305
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], 1988, STAT POWER ANAL BEHA
   Antoniol G, 2006, IEEE T SOFTWARE ENG, V32, P627, DOI 10.1109/TSE.2006.88
   Baldi PF, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P543, DOI 10.1145/1449955.1449807
   BIGGERSTAFF TJ, 1994, COMMUN ACM, V37, P72, DOI 10.1145/175290.175300
   Binkley D., 2014, 22nd International Conference on Program Comprehension (Hyderabad, India, 2014), P26, DOI [DOI 10.1145/2597008.2597150, 10.1145/2597008.2597150]
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bohnet J, 2008, INT C PROGRAM COMPRE, P266, DOI 10.1109/ICPC.2008.21
   Breu S, 2006, IEEE INT CONF AUTOM, P221
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Ceccato M, 2005, PROG COMPREHEN, P13, DOI 10.1109/WPC.2005.2
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Couto MV, 2011, EUR CON SFTWR MTNCE, P191, DOI 10.1109/CSMR.2011.25
   da Silva B. C., 2011, P 2 INT WORKSH EM TR, P52
   da Silva Bruno C., 2014, P 13 INT C MODULATIR, P121
   De Lucia A., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P193
   Dit B, 2013, EMPIR SOFTW ENG, V18, P277, DOI 10.1007/s10664-011-9194-4
   Dit B, 2011, CONF PROC INT SYMP C, P11, DOI 10.1109/ICPC.2011.47
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Eisenberg AD, 2005, PROC IEEE INT CONF S, P337
   Etzkorn L, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS - TOOLS 34, PROCEEDINGS, P71, DOI 10.1109/TOOLS.2000.868960
   Falleri JR, 2011, LECT NOTES COMPUT SC, V6705, P260, DOI 10.1007/978-3-642-21952-8_19
   Figueiredo E., 2011, P 10 INT C ASP OR SO, P81
   Figueiredo E, 2012, J SYST SOFTWARE, V85, P227, DOI 10.1016/j.jss.2011.09.060
   Grant S, 2012, EUR CON SFTWR MTNCE, P403, DOI 10.1109/CSMR.2012.51
   Hashimoto M, 2012, EUR CON SFTWR MTNCE, P75, DOI 10.1109/CSMR.2012.18
   Henderson-Sellers B., 1996, Software Metrics
   Hill E., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P184, DOI 10.1109/SCAM.2012.29
   KELLENS A, 2007, T ASPECT ORIENTED SO, V4, P143
   Linstead E., 2007, P 22 IEEE ACM INT C, P461, DOI [10.1145/1321631.1321709, DOI 10.1145/1321631.1321709]
   Liu YX, 2009, PROC IEEE INT CONF S, P233, DOI 10.1109/ICSM.2009.5306318
   Marcus A, 2005, PROC IEEE INT CONF S, P133
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Maskeri Girish, 2008, 1st India Software Engineering Conference. ISEC 2008, P113
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Robillard MP, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189751
   Sartipi K, 2010, INT J SOFTW ENG KNOW, V20, P761, DOI 10.1142/S021819401000492X
   Savage T, 2010, Proceedings of the 2010 IEEE International Conference on Software Maintenance, ICSM '10, P1, DOI [10.1109/ICSM.2010.5609654, DOI 10.1109/ICSM.2010.5609654]
   Silva B., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P103
   Silva B., 2015, EFFECT AUTOMATIC MAP
   Terra R., 2013, SIGSOFT Softw. Eng. Not., V38, P1, DOI [10.1145/2507288.2507314, DOI 10.1145/2507288.2507314]
   Thomas SW, 2010, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2010.13
   Trifu M, 2009, EUR CON SFTWR MTNCE, P109, DOI 10.1109/CSMR.2009.34
   Nguyen TT, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P361, DOI 10.1145/1985793.1985843
   Van Rysselberghe Filip., 2007, MSR 07, P16
NR 48
TC 1
Z9 2
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2016
VL 75
BP 56
EP 70
DI 10.1016/j.infsof.2016.03.006
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DN1QI
UT WOS:000376840100005
OA Green Published
DA 2024-07-18
ER

PT J
AU Luo, YP
   van den Brand, M
AF Luo, Yaping
   van den Brand, Mark
TI Metrics design for safety assessment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Safety assessment; ISO 26262; Metrics; Functional safety; Practical
   Software and Systems; Measurement
ID SOFTWARE
AB Context :In the safety domain, safety assessment is used to show that safety-critical systems meet the required safety objectives. This process is also referred to as safety assurance and certification. During this procedure, safety standards are used as development guidelines to keep the risk at an acceptable level. Safety-critical systems can be assessed according to those safety standards.
   Objective:Due to the manual work, safety assessment processes are costly, time consuming, and hard to be estimated. The goal of this paper is to design metrics for safety assessment. These metrics can, for instance, identify costly processes in the safety assessment process. In this paper we propose a methodology to design metrics for safety assessment from different perspectives. For the demonstration and validation of our method, we focus on safety assessment in the automotive domain (ISO 26262).
   Method:Metrics can be identified by answering three questions. Three different sources of information have been identified for obtaining metrics: industrial interests, safety standards, and available data. For each of these sources appropriate methods have been proposed and used for obtaining the relevant metrics. These methods include GQM-based surveys, PSM-based procedure, and brainstorming. For the validation, the ISO 26262 standard has been studied for obtaining safety standard related metrics.
   Results:A case study in the context of the European project OPENCOSS is carried out to demonstrate the method. Finally, there are 76 metrics obtained and a validation of these metrics has been done by means of a survey amongst 24 experts from 13 project partners.
   Conclusion:It can be concluded that metrics for safety assessment can be derived from three sources. Different methods for designing metrics have to be used for each source. The validation shows that most of the relevant metrics are useful for industry. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Luo, Yaping; van den Brand, Mark] Eindhoven Univ Technol, Dolech 2, NL-5612 AZ Eindhoven, Netherlands.
C3 Eindhoven University of Technology
RP van den Brand, M (corresponding author), Eindhoven Univ Technol, Dolech 2, NL-5612 AZ Eindhoven, Netherlands.
EM y.luo2@tue.nl; m.g.j.v.d.brand@tue.nl
RI Luo, Yaping/CAG-9974-2022
OI van den Brand, Mark/0000-0003-3529-6182
FU FP7 programme [289011]
FX The research leading to these results has received funding from the FP7
   programme under grant agreement no. 289011 (OPENCOSS). We also would
   like to thank all the industrial partners and Alexander Aroyo who were
   involved in the metric design for OPENCOSS project. We also thank Jaap
   Stelma who contributed to the design of safety standard metrics.
   Finally, we thank Alexander Serebrenik, Luc Engelen and Ion Barosan for
   proof reading this paper.
CR [Anonymous], 1996, ARP4754 SAE
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], UML 2 0 SUP SPEC
   [Anonymous], 2010, BBC News
   [Anonymous], 2012, INFORM CATEGORY MEAS
   [Anonymous], 2003, SURVEY HDB
   [Anonymous], 1998, 10611998 IEEE
   [Anonymous], 2009, 61508 IEC
   [Anonymous], 1997, Spice: The Theory and Practice of Software Process Improvement and Capability Determination
   Armengaud E., 2012, 26262 ISO
   Basili Victor, 2014, ARXIV14020292
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   CENELEC, 2011, EN50126 CENELEC
   *CENELEC, 2000, EN50129 CENELEC
   CENELEC, 2011, EN50128 CENELEC
   Dodd I, 2012, RELIAB ENG SYST SAFE, V98, P7, DOI 10.1016/j.ress.2011.09.007
   Drabble S, 2009, SAFETY-CRITICAL SYSTEMS: PROBLEMS, PROCESS AND PRACTICE, P195, DOI 10.1007/978-1-84882-349-5_13
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Fink A., 2012, How to Conduct Surveys: A Step-by-Step Guide: A Step-by-Step Guide
   Forsberg K., 1991, INCOSE INT S, V1, P57, DOI [10.1002/j-2334-5837.1991.tb01484.x,o.1, DOI 10.1002/J-2334-5837.1991.TB01484.X,O.1, 10.1002/j.2334-5837.1991.tb01484.x, DOI 10.1002/J.2334-5837.1991.TB01484.X]
   Fowler F. J., 2013, Survey research methods
   Freimut B., 2002, VISEK007E FRAUNH I E
   Glendon AI, 2000, SAFETY SCI, V34, P193, DOI 10.1016/S0925-7535(00)00013-8
   Groves Robert M., 2011, Survey methodology, V561
   ISO, 2008, 262622011 ISO
   ISO/IEC, 2007, 159392008 ISOIEC
   Janicak C.A., 2009, SAFETY METRICS TOOLS
   Kelley K, 2003, INT J QUAL HEALTH C, V15, P261, DOI 10.1093/intqhc/mzg031
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Luo YP, 2015, 2015 FIRST INTERNATIONAL WORKSHOP ON AUTOMOTIVE SOFTWARE ARCHITECTURE (WASA), P11, DOI 10.1145/2752489.2752492
   MCGARY J, 2002, PRACTICAL SOFTWARE M
   Monperrus M, 2011, SOFTW SYST MODEL, V10, P537, DOI 10.1007/s10270-010-0165-9
   Murdoch J., 2006, SAFETY MEASUREMENT
   Murdoch John, 2003, P 8 AUSTR WORKSH SAF, V33, P47
   OMG, 2015, MET FAC MOF SPEC V2
   OMG, 2013, MOF 2 XMI MAPP SPEC
   OPENCOSS, 2014, DEL D7 5 IMPL PROC S
   OPENCOSS, 2014, DEL D4 4 COMM CERT L
   OPENCOSS, 2013, DEL D7 4 SPEC TRANSP
   RTCA, 2011, DO-178c
   Saberi AK, 2015, ANN IEEE SYST CONF, P277, DOI 10.1109/SYSCON.2015.7116764
   Warszawska K, 2016, J LOSS PREVENT PROC, V42, P27, DOI 10.1016/j.jlp.2015.09.005
NR 42
TC 12
Z9 12
U1 0
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2016
VL 73
BP 151
EP 163
DI 10.1016/j.infsof.2015.12.012
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI5KJ
UT WOS:000373537400012
DA 2024-07-18
ER

PT J
AU Rahmani, H
   Sami, A
   Khalili, A
AF Rahmani, Hosein
   Sami, Ashkan
   Khalili, Abdullah
TI CIP-UQIM: A unified model for quality improvement in software SME's
   based on CMMI level 2 and 3
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software Process Improvement; Multi-Model Harmonization; Small and
   Medium sized Enterprise; CMMI-DEV 1.3; ISO 9001:2008; PMBOK 5
ID HARMONIZATION; FRAMEWORK
AB Context: Software Process Improvement (SPI) is among the most effective ways to improve the quality of software products and services. Despite many research and industrial reports, SPI planning and implementation in Multi-Model Environments (MMEs) still face various issues and difficulties which increase the risk of failure especially for Small and Medium size Enterprises (SMEs). As a popular approach, harmonization techniques are used to meet the MME's specific issues through recognizing the common or similar areas among the implemented models and developing an integrated solution for quality improvement throughout the organization.
   Objective: This paper has two main objectives: (1) recognizing the set of most popular models used in worldwide harmonization projects and implemented or requested by Iranian software SMEs. (2) Comparing and integrating these models in Process Activity level to develop a unified quality improvement model.
   Method: A combination of literature review and questionnaire methods was used to identify the set of the most popular models. Then, based on harmonization techniques the common or similar areas among these models are recognized and then an initial version of the Unified Quality Improvement Model (UQIM) is developed, named CIP-UQIM. Next, this initial model was presented in a two-day workshop for SPI experts and it was refined and finalized by incorporating their feedbacks.
   Results: Investigations showed that the set {CMMI-DEV, ISO 9001, and PMBOK} was the most popular. Thus in CIP-UQIM, for the first time, the last version of these models was unified at the activity level details. Finally, the experience of using CIP-UQIM in an Iranian SME has been reported which demonstrate its applicability and advantages.
   Conclusion: Considering the high similarity among the three models and CIP-UQIM level of details, it can be concluded that CIP-UQIM can be beneficial to resolve or reduce SPI issues in MME's, especially in case of software SMEs. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Rahmani, Hosein; Sami, Ashkan; Khalili, Abdullah] Shiraz Univ, Fac Elect & Comp Engn, CSE & IT Dept, Shiraz, Iran.
C3 Shiraz University
RP Sami, A (corresponding author), Shiraz Univ, Fac Elect & Comp Engn, CSE & IT Dept, Shiraz, Iran.
EM hrahmani@cse.shirazu.ac.ir; sami@shirazu.ac.ir; akhalili@shirazu.ac.ir
OI Sami, Ashkan/0000-0002-0023-9543; Rahmani, Hossein/0000-0003-3418-4912
CR Adina-Petruta P, 2014, PROCD SOC BEHV, V143, P643, DOI 10.1016/j.sbspro.2014.07.456
   [Anonymous], 2008, GUIDE PROJECT MANAGE, V4th
   [Anonymous], 1996, IDEAL USERS GUIDE SO
   Bahsani S., 2015, INT J COMPUTER SCI I, V12, P118
   Baldassarre MT, 2012, SOFTWARE QUAL J, V20, P309, DOI 10.1007/s11219-011-9154-7
   BAMFORD RC, 1993, COMPUTER, V26, P68, DOI 10.1109/2.237455
   Biffl S., 2006, Software Process Improvement and Practice, V11, P229, DOI 10.1002/spip.266
   British Standards Institution, 2008, 90012008 BS EN ISO B
   CMMI, 2010, CMUSEI2010TR033 CMMI
   De Gusmao C.M.G., 2003, INT J APPL MANAG TEC, V1
   Dehbozorgi F., 2013, 21 IR C EL ENG FERD
   Douglass Jay, 2010, IND RESULTS
   Ehsan N., 2010, 2010 IEEE International Conference on Management of Innovation & Technology (ICMIT 2010), P113, DOI 10.1109/ICMIT.2010.5492827
   Eito-Brun R, 2014, INNOV SYST SOFTW ENG, V10, P283, DOI 10.1007/s11334-014-0236-0
   Ferreira A, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P512, DOI 10.1109/ICSEA.2009.80
   Gibson D.L., 2006, Performance results of CMMI-based process improvement
   Gibson Diane L., 2006, PERFORMANCE RESULTS
   GOLDENSON D., 2003, DEMONSTRATING IMPACT
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   Ibrahim L., 2000, P 10 ANN INT S INT C, P16
   IT Governance Institute, 2006, COBIT MAPP MAPP PMBO
   Kelemen Z.D., 2009, 4 IEEE INT C GLOB SO
   Khoshgoftar M, 2009, 2009 2ND IEEE INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND INFORMATION TECHNOLOGY, VOL 5, P297, DOI 10.1109/ICCSIT.2009.5234402
   Kirwan P., 2008, IMPROVEMENT TECHNOLO
   Kulpa M.K Johnson., 2008, INTERPRETING CMMI PR
   Lin LC, 2009, QUAL RELIAB ENG INT, V25, P551, DOI 10.1002/qre.988
   Minnich I., 2002, Systems Engineering, V5, P62, DOI 10.1002/sys.10013
   Mutafelija B., 2003, SYSTEMATIC PROCESS I
   Ostolaza E, 1999, VTT SYMP, V195, P437
   Pardo C., 2011, METODO INTEGRACION S
   Pardo C., 2010, ACM INT C PROCEEDING, P51, DOI DOI 10.1145/1961258.1961271
   Pardo C, 2013, J SYST SOFTWARE, V86, P125, DOI 10.1016/j.jss.2012.07.072
   Pardo C, 2011, COMM COM INF SC, V230, P61
   Pardo C, 2012, COMPUT STAND INTER, V34, P48, DOI 10.1016/j.csi.2011.05.005
   Pardo C, 2009, ICSOFT 2009: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 1, P151
   PAULK MC, 1993, SOFTWARE QUAL J, V2, P245, DOI 10.1007/BF00403767
   Peldzius Stasys, 2011, Applications of Mathematics and Computer Engineering. American Conference on Applied Mathematics (AMERICAN-MATH'11). 5th WSEAS International Conference on Computer Engineering and Applications (CEA'11), P117
   Pino FJ, 2016, SOFTWARE QUAL J, V24, P489, DOI 10.1007/s11219-015-9278-2
   Pino FJ, 2010, J SOFTW MAINT EVOL-R, V22, P279, DOI 10.1002/spip.437
   Rahmani H., 2013, 5 C INF KNOWL TECHN
   Rahmani H., 2013, 21 IR C EL ENG FERD
   Rdiouat Y., 2012, INT J COMPUTER SCI I
   Rout Terence P., 2007, Software Process Improvement and Practice, V12, P361, DOI 10.1002/spip.329
   Silva FS, 2015, INFORM SOFTWARE TECH, V58, P20, DOI 10.1016/j.infsof.2014.09.012
   Siviy J., 2008, VALUE HARMONIZING MU
   von Wangenheim CG, 2010, INFORM SOFTWARE TECH, V52, P749, DOI 10.1016/j.infsof.2010.03.008
   Yoo C., 2004, INTEGRATED MODEL ISO, P150
   Yoo C, 2006, J SYST SOFTWARE, V79, P954, DOI 10.1016/j.jss.2005.06.042
   Zhao Xiaosong, 2008, 2008 6th IEEE International Conference on Industrial Informatics (INDIN), P1650, DOI 10.1109/INDIN.2008.4618368
NR 49
TC 16
Z9 18
U1 0
U2 19
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2016
VL 71
BP 27
EP 57
DI 10.1016/j.infsof.2015.10.009
PG 31
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DB0RW
UT WOS:000368216200002
DA 2024-07-18
ER

PT J
AU Wang, J
   Shih, PC
   Wu, Y
   Carroll, JM
AF Wang, Jing
   Shih, Patrick C.
   Wu, Yu
   Carroll, John M.
TI Comparative case studies of open source software peer review practices
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Open source software; Virtual community; Software peer review; Design
ID COMMUNITIES; INNOVATION; PROJECT; USER
AB Context: The power of open source software peer review lies in the involvement of virtual communities, especially users who typically do not have a formal role in the development process. As communities grow to a certain extent, how to organize and support the peer review process becomes increasingly challenging. A universal solution is likely to fail for communities with varying characteristics.
   Objective: This paper investigates differences of peer review practices across different open source software communities, especially the ones engage distinct types of users, in order to offer contextualized guidance for developing open source software projects.
   Method: Comparative case studies were conducted in two well-established large open source communities, Mozilla and Python, which engage extremely different types of users. Bug reports from their bug tracking systems were examined primarily, complemented by secondary sources such as meeting notes, blog posts, messages from mailing lists, and online documentations.
   Results: The two communities differ in the key activities of peer review processes, including different characteristics with respect to bug reporting, design decision making, to patch development and review. Their variances also involve the designs of supporting technology. The results highlight the emerging role of triagers, who bridge the core and peripheral contributors and facilitate the peer review process. The two communities demonstrate alternative designs of open source software peer review and their trade-offs were discussed.
   Conclusion: It is concluded that contextualized designs of social and technological solutions to open source software peer review practices are important. The two cases can serve as learning resources for open source software projects, or other types of large software projects in general, to cope with challenges of leveraging enormous contributions and coordinating core developers. It is also important to improve support for triagers, who have not received much research effort yet. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Wang, Jing; Wu, Yu; Carroll, John M.] Penn State Univ, Coll Informat Sci & Technol, University Pk, PA 16802 USA.
   [Shih, Patrick C.] Indiana Univ, Dept Informat & Lib Sci, Bloomington, IN USA.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE);
   Pennsylvania State University; Pennsylvania State University -
   University Park; Indiana University System; Indiana University
   Bloomington
RP Wang, J (corresponding author), 316C 1ST Bldg, University Pk, PA 16802 USA.
EM jzw143@ist.psu.edu; patshih@indiana.edu; yuw132@ist.psu.edu;
   jcarroll@ist.psu.edu
RI Shih, Patrick C./AAG-9674-2019; Carroll, John Millar/A-8718-2009
OI Shih, Patrick C./0000-0003-2460-0468; Carroll, John
   Millar/0000-0001-5189-337X
FU US NSF [0943023]; Office of Advanced Cyberinfrastructure (OAC); Direct
   For Computer & Info Scie & Enginr [0943023] Funding Source: National
   Science Foundation
FX This work is supported by the US NSF (0943023). We thank our partners,
   the Mozilla and Python organizations for sharing their practices, and
   also all the reviewers of this article for their suggestions that helped
   improve it.
CR [Anonymous], 1999, 10281997 IEEE
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Bach PM, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P985
   Barcellini F, 2008, INT J HUM-COMPUT ST, V66, P558, DOI 10.1016/j.ijhcs.2007.10.008
   Barham A., 2012, P 2012 IFIP INT C OP, P262, DOI DOI 10.1007/978-3-642-33442-9
   Bertram D, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P291
   Breu S, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P301
   Capiluppi A, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P317, DOI 10.1109/CSMR.2003.1192440
   Crowston K., 2002, IEE Proceedings-Software, V149, P3, DOI 10.1049/ip-sen:20020197
   CROWSTON K., 2005, SYSTEM SCI, p197a
   Crowston K, 2008, J DATABASE MANAGE, V19, P1, DOI 10.4018/jdm.2008040101
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Dahlander L, 2012, ORGAN SCI, V23, P988, DOI 10.1287/orsc.1110.0673
   de Laat PB, 2007, J MANAG GOV, V11, P165, DOI 10.1007/s10997-007-9022-9
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Finley Klint., 2011, GITHUB HAS SURPASSED
   Francalanci C, 2008, INT FED INFO PROC, V275, P187
   Gamalielsson J, 2014, J SYST SOFTWARE, V89, P128, DOI 10.1016/j.jss.2013.11.1077
   Ghosh R.A., 2002, Free / Libre and Open Source Software: Survey and Study Deliverable D18 : FINAL REPORT Part IV: Survey of Developers
   HALLORAN T, 2002, P 2 WORKSH OP SOURC
   Hamasaki K, 2013, IEEE WORK CONF MIN S, P49, DOI 10.1109/MSR.2013.6624003
   Heckman R, 2007, INT FED INFO PROC, V234, P71
   Jialiang Xie, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P247, DOI 10.1109/ESEM.2013.62
   Jing Wang, 2011, Proceedings 2011 International Conference on Collaboration Technologies and Systems (CTS 2011), P117, DOI 10.1109/CTS.2011.5928673
   Just S, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P82, DOI 10.1109/VLHCC.2008.4639063
   Ko AJ, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1665
   Koch S, 2002, INFORM SYST J, V12, P27, DOI 10.1046/j.1365-2575.2002.00110.x
   Lattemann C., 2005, Proceedings of the 38th Hawaii International Conference on System Sciences, P1, DOI DOI 10.1109/HICSS.2005.278
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Moon J.Y., 2000, 1 MONDAY, V5
   Mukadam M, 2013, IEEE WORK CONF MIN S, P45, DOI 10.1109/MSR.2013.6624002
   Raymond Eric Steven, 2001, The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary
   REIS C.R., 2002, P OPEN SOURCE SOFTWA, P155
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Robbins J.E., 2002, P ICSE 2 WORKSH OP S
   Rullani F, 2013, RES POLICY, V42, P941, DOI 10.1016/j.respol.2012.10.008
   Sandusky R.J., 2005, P 2005 INT ACM SIGGR, P187
   Scacchi W., 2006, Software Evolution and Feedback: Theory and Practice, P181
   Schweik C.M., 2013, TECHNOL INNOV MANAGE, V3
   Shaikh M., 2003, P TAK STOCK BAZ 3 WO
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Terry M, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P999
   Twidale M.B., 2005, P 38 ANN HAWAII INT, p198c
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   Wang J, 2015, INT J HUM-COMPUT ST, V77, P52, DOI 10.1016/j.ijhcs.2015.01.005
   Warsaw B., 2007, PEP 10 VOTING GUIDEL
   Wiegers K.E., 2001, Peer Reviews in Software: A Practical Guide
   Yamauchi Y., 2000, CSCW 2000. ACM 2000 Conference on Computer Supported Cooperative Work, P329, DOI 10.1145/358916.359004
   Yang X, 2012, ASIA PAC SOFWR ENG, P709, DOI 10.1109/APSEC.2012.63
   Ye YW, 2005, FREE/OPEN SOURCE SOFTWARE DEVELOPMENT, P59
   Yin R.K., 2003, CASE STUDY RES DESIG
NR 53
TC 24
Z9 26
U1 1
U2 26
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2015
VL 67
BP 1
EP 12
DI 10.1016/j.infsof.2015.06.002
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA CT2AO
UT WOS:000362604600001
DA 2024-07-18
ER

PT J
AU Giuffrida, R
   Dittrich, Y
AF Giuffrida, Rosalba
   Dittrich, Yvonne
TI A conceptual framework to study the role of communication through social
   software for coordination in globally-distributed software teams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Global software development; Communicative genres; Coordination
   mechanisms; Social software; Human aspects
ID DISTANCE
AB Background: In Global Software Development (GSD) the lack of face-to-face communication is a major challenge and effective computer-mediated practices are necessary to mitigate the effect of physical distance. Communication through Social Software (So So) supports team coordination, helping to deal with geographical distance; however, in Software Engineering literature, there is a lack of suitable theoretical concepts to analyze and describe everyday practices of globally-distributed software development teams and to study the role of communication through SoSo.
   Objective: The paper proposes a theoretical framework for analyzing how communicative and coordinative practices are constituted and maintained in globally-distributed teams.
   Method: The framework is based on the concepts of communicative genres and coordination mechanisms; it is motivated and explicated through examples from two qualitative empirical cases.
   Results: Coordination mechanisms and communicative genres mutually support each other. In particular, communication through SoSo supports team members in establishing, developing and maintaining social protocols within the distributed team. Software Engineering tools and methods provide templates for coordination mechanism that need to be adapted and adopted in order to support the project at hand. SoSo serves as a medium for the necessary metawork. The theoretical framework proposed is used to describe both the practices in an established industrial project and the establishing of practices in three student teams. The framework allows explaining the heterogeneity of practices observed.
   Conclusions: This paper presents a conceptual framework to study the role of communication through SoSo for coordination in GSD. The usefulness of the framework is supported by empirical findings on the role of SoSo. The theoretical framework can be beneficial for future research that aims to analyze and describe not only the role of SoSo, but also how communicative and coordinative practices can be established and maintained in GSD teams. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Giuffrida, Rosalba; Dittrich, Yvonne] Univ Copenhagen, IT, Software & Syst Sect, Copenhagen, Denmark.
C3 University of Copenhagen
RP Giuffrida, R (corresponding author), Univ Copenhagen, IT, Software & Syst Sect, Copenhagen, Denmark.
EM rogi@itu.dk; ydi@itu.dk
OI Dittrich, Yvonne/0000-0003-4757-3394
CR [Anonymous], 1992, COMPUT SUPP COOP W J, DOI DOI 10.1007/BF00752449
   [Anonymous], 2002, REAL WORLD RES RESOU
   Avram G, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P91
   BARLEY SR, 1990, ADMIN SCI QUART, V35, P61, DOI 10.2307/2393551
   Boden A, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P235
   Boden A, 2009, INT CONF GLOBAL SOFT, P18, DOI 10.1109/ICGSE.2009.10
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   Cataldo M, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P71
   Chandler Daniel., 1997, The Media and Communications Studies Site
   Cho HK, 2005, J COMPUT-MEDIAT COMM, V10
   Conchúir EO, 2009, COMMUN ACM, V52, P127, DOI 10.1145/1536616.1536648
   Crowston K., 2004, P 2004 ACM WORKSH IN, P18, DOI DOI 10.1145/1029997.1030003
   Damian D, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P81
   Dittrich Y, 2002, SOCIAL THINKING-SOFTWARE PRACTICE, P243
   Dittrich Y., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P103, DOI 10.1109/ICGSE.2011.21
   Dittrich Y, 2009, COMPUT SUPP COOP W J, V18, P393, DOI 10.1007/s10606-009-9106-y
   Gerson EM, 2008, COMPUT SUPP COOP WOR, P193, DOI 10.1007/978-1-84628-901-9_8
   Giuffrida R., 2014, COOP HUM ASP SOFTW E
   Giuffrida R., 2013, INFORM SOFTWARE TECH
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Holmström H, 2006, INFORM SYST MANAGE, V23, P7, DOI 10.1201/1078.10580530/46108.23.3.20060601/93703.2
   Hyun-Gyung Im, 2005, Information Technology & People, V18, P89, DOI 10.1108/09593840510601496
   Jordan B, 1995, J LEARN SCI, V4, P39, DOI 10.1207/s15327809jls0401_2
   Kaplan AM, 2010, BUS HORIZONS, V53, P59, DOI 10.1016/j.bushor.2009.09.003
   Kautz K., 2003, 11 EUR C INF SYST EC, P919
   Lanubile F., 2009, SOFTWARE ENG
   LaToza T. D., 2006, ICSE 06
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   McChesney IR, 2004, INFORM SOFTWARE TECH, V46, P473, DOI 10.1016/j.infsof.2003.10.001
   MILLER CR, 1984, Q J SPEECH, V70, P151, DOI 10.1080/00335638409383686
   Nicolini D., 2003, KNOWING ORG
   Nielsen P.A., 2001, SCANDINAVIAN J INFOR, V13, P5
   Niinimäki T, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P55, DOI 10.1109/ICGSE.2008.27
   Okhuysen GA, 2009, ACAD MANAG ANN, V3, P463, DOI 10.1080/19416520903047533
   ORLIKOWSKI WJ, 1994, ADMIN SCI QUART, V39, P541, DOI 10.2307/2393771
   Pries-Heje L, 2010, CONFENIS 2010
   Raman M, 2006, INFORM SYST MANAGE, V23, P59, DOI 10.1201/1078.10580530/46352.23.4.20060901/95114.8
   Ronkko K., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P433, DOI 10.1007/s10606-005-9004-x
   Scacchi W., 2007, Advances in Computers, V69, P243, DOI [DOI 10.1016/S0065-2458(06)69005-0, 10.1016/S0065-2458(06)69005-0]
   Schmidt K., 1996, Computer Supported Cooperative Work (CSCW), V5, P155, DOI 10.1007/BF00133655
   Sigfridsson A, 2011, INFORM SOFTWARE TECH, V53, P981, DOI 10.1016/j.infsof.2011.01.012
   Singer J., 1997, EXAMINATION SOFTWARE
   Smite D, 2014, EMPIR SOFTW ENG, V19, P105, DOI 10.1007/s10664-012-9217-9
   Storey MA, 2009, IEEE T SOFTWARE ENG, V35, P470, DOI 10.1109/TSE.2009.15
   STRAUSS A, 1988, SOCIOL QUART, V29, P163, DOI 10.1111/j.1533-8525.1988.tb01249.x
   Strode DE, 2012, J SYST SOFTWARE, V85, P1222, DOI 10.1016/j.jss.2012.02.017
   Suchman L. A., 1987, Plans and situated actions: The problem of human-machine communication
   Treude C, 2009, PROC INT CONF SOFTW, P12, DOI 10.1109/ICSE.2009.5070504
   Wang Y., 2007, 2 IEEE INT C GLOB SO
   Whitehead J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P214, DOI 10.1109/FOSE.2007.4
   Wilson E.O., 1975, P1
   YASUOKA M, 2009, THESIS
   YATES J, 1992, ACAD MANAGE REV, V17, P299, DOI 10.2307/258774
   Zhang J., 2010, CHI 10
NR 55
TC 19
Z9 19
U1 2
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2015
VL 63
BP 11
EP 30
DI 10.1016/j.infsof.2015.02.013
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH6LV
UT WOS:000354149000002
DA 2024-07-18
ER

PT J
AU Torrecilla-Salinas, CJ
   Sedeño, J
   Escalona, MJ
   Mejías, M
AF Torrecilla-Salinas, C. J.
   Sedeno, J.
   Escalona, M. J.
   Mejias, M.
TI Estimating, planning and managing Agile Web development projects under a
   value-based perspective
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Management; Methodologies; Agile; Scrum; Web Engineering; e-Government
AB Context: The processes of estimating, planning and managing are crucial for software development projects, since the results must be related to several business strategies. The broad expansion of the Internet and the global and interconnected economy make Web development projects be often characterized by expressions like delivering as soon as possible, reducing time to market and adapting to undefined requirements. In this kind of environment, traditional methodologies based on predictive techniques sometimes do not offer very satisfactory results. The rise of Agile methodologies and practices has provided some useful tools that, combined with Web Engineering techniques, can help to establish a framework to estimate, manage and plan Web development projects.
   Objective: This paper presents a proposal for estimating, planning and managing Web projects, by combining some existing Agile techniques with Web Engineering principles, presenting them as an unified framework which uses the business value to guide the delivery of features.
   Method: The proposal is analyzed by means of a case study, including a real-life project, in order to obtain relevant conclusions.
   Results: The results achieved after using the framework in a development project are presented, including interesting results on project planning and estimation, as well as on team productivity throughout the project.
   Conclusion: It is concluded that the framework can be useful in order to better manage Web-based projects, through a continuous value-based estimation and management process. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Torrecilla-Salinas, C. J.; Sedeno, J.; Escalona, M. J.; Mejias, M.] Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
   [Sedeno, J.] Agenda Andaluza Inst Cultur, Junta De Andalucia, Spain.
C3 University of Sevilla
RP Torrecilla-Salinas, CJ (corresponding author), Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
EM carlos.torrecilla@iwt2.org; jorge.sede-no@iwt2.org; mjescalona@us.es;
   risoto@us.es
RI Escalona, María José/G-3900-2010; Mejias-Risoto, Manuel/N-8708-2014;
   Salinas, Carlos Torrecilla/G-3981-2015; Sedeno, Jorge/J-4277-2013
OI Escalona, María José/0000-0002-6435-1497; Mejias-Risoto,
   Manuel/0000-0002-0353-6391; Salinas, Carlos
   Torrecilla/0000-0001-7867-2075; Sedeno, Jorge/0000-0002-5368-5547
FU MeGUS Project of the Ministry of Economy and Competitiveness, Spain
   [TIN2013-46928-C3-3-R]
FX This research has been supported by the MeGUS Project
   (TIN2013-46928-C3-3-R) of the Ministry of Economy and Competitiveness,
   Spain. We would like to thank the Regional Ministry of Culture and
   Sports of Junta de Andalucia for allowing us to issue this data
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Ambler SW, 2002, IEEE SOFTWARE, V19, P66, DOI 10.1109/52.991334
   [Anonymous], EXTR CHAOS
   [Anonymous], PROJ MAN BOOK KNOWL
   [Anonymous], HICSS 2007
   [Anonymous], P METR 01 LOND
   [Anonymous], IIWAS 12
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], CAISE 13
   [Anonymous], 2004, XP Ser
   [Anonymous], IEEE ACIS ICIS 2010
   [Anonymous], UML BASED WEB ENG AP
   [Anonymous], AGILE 2006
   [Anonymous], CONTROLLED CHAOS LIV
   [Anonymous], HICSS 2012
   [Anonymous], P 18 IEEE INT REQ EN
   [Anonymous], AGILE 2008
   [Anonymous], PRACTICAL GUIDELINES
   [Anonymous], P 2 ICSE WORKSH WEB
   [Anonymous], WEB COST ESTIMATION
   [Anonymous], CHAOS MAN 2012
   [Anonymous], ICWE 2012
   [Anonymous], WHAT TANGLED WEB WE
   [Anonymous], 2011, SCRUM GUIDE DEFINITI
   [Anonymous], WORKSH HYP DEV PROC
   [Anonymous], AGILE 2006
   [Anonymous], WORKFL AND PUBL ADM
   [Anonymous], MANAGEMENT 3 0 LEADI
   [Anonymous], IMPACT AGILE PRACTIC
   [Anonymous], 2009, SUCCEEDING AGILE USI
   [Anonymous], IEEE SOFTWARE
   [Anonymous], OOPSLA 95
   [Anonymous], 2002, 3 INT C EXTR PROGR A
   [Anonymous], AGILE 2003
   [Anonymous], GESTION AGIL PROYECT
   [Anonymous], 2009, AGILE PROJECT MANAGE
   [Anonymous], ESEM 07
   [Anonymous], PERFORMANCE BASED EA
   [Anonymous], BALANCING LIGHTNESS
   [Anonymous], EFFORT ESTIMATION US
   [Anonymous], WICOM 08
   [Anonymous], 2008, CMUSEI2008TN003
   [Anonymous], ECBS 2008
   [Anonymous], PICMET11
   [Anonymous], GEN SPECIALISTS IMPR
   [Anonymous], IFML INT FLOW MOD LA
   Armario J., 2012, Proceedings of the ICSOFT 2012. 7th International Conference on Software Paradigm Trends, P120
   Beck K., 2011, MANIFESTO AGILE SOFT
   Beck Kent L., 2003, Test Driven Development By Example
   Boehm BW., 1981, Software Engineering Economics
   Ceri S, 2000, COMPUT NETW, V33, P137, DOI 10.1016/S1389-1286(00)00040-2
   Cockburn A., 2004, Crystal clear: A human-powered methodology for small teams: A human-powered methodology for small teams
   Cohn M., 2005, Agile Estimating and Planning
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Creswell J. W., 2013, RES DESIGN QUALITATI
   Derby Esther., 2006, AGILE RETROSPECTIVES
   Deshpande Y., 2002, J WEB ENG, V1, P3, DOI DOI 10.4018/978-1-59904-492-7.CH001
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Escalona MJ, 2007, ADV ENG SOFTW, V38, P267, DOI 10.1016/j.advengsoft.2006.07.006
   Escalona MJ, 2008, IEEE T SOFTWARE ENG, V34, P377, DOI 10.1109/TSE.2008.27
   Gray D., 2010, Gamestorming: A Playbook for Innovators, Rulebreakers, and Changemakers
   Karner G., 1993, Resource Estimation for Objectory Projects
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   Palmer S.R., 2002, PRACTICAL GUIDE FEAT
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Shore J., 2008, The art of Agile development
   Smith G., 2009, Becoming agile in an imperfect world
   TAKEUCHI H, 1986, HARVARD BUS REV, V64, P137
NR 70
TC 37
Z9 45
U1 9
U2 74
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2015
VL 61
BP 124
EP 144
DI 10.1016/j.infsof.2015.01.006
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF7PI
UT WOS:000352748400008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Janczarek, P
   Sosnowski, J
AF Janczarek, Pawel
   Sosnowski, Janusz
TI Investigating software testing and maintenance reports: Case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Software development monitoring; Software
   measurements; Reliability
ID PREDICTION; MAINTAINABILITY; RELIABILITY; INDICATORS
AB Context: Although many papers have been published on software development and defect prediction techniques, problem reports in real projects quite often differ from those described in the literature. Hence, there is still a need for deeper exploration of case studies from industry.
   Objective: The aim of this study is to present the impact of fine-grained problem reports on improving evaluation of testing and maintenance processes. It is targeted at projects involving several releases and complex schemes of problem handling. This is based on our experience gained while monitoring several commercial projects.
   Method: Extracting certain features from detailed problem reports, we derive various measures and present analysis models which characterize and visualize the effectiveness of testing and problem resolution processes. The considered reports describe types of problems (e.g. defects), their locations in project versions and software modules, ways of their resolution, etc. The performed analysis is related to eleven projects developed in the same company. This study is an exploratory research with some explanatory features. Moreover, having identified some drawbacks, we present extensions of problem reports and their analysis which have been verified in another industrial case study project.
   Results: Fine-grained (accurate) problem handling reports provide a wider scope of possible measures to assess the relevant development processes. This is helpful in controlling single projects (local perspective) as well as in managing these processes in the whole company (global perspective).
   Conclusion: Detailed problem handling reports extend the space and quality of statistical analysis, they provide significant enhancement in evaluation and refinement of software development processes as well as in reliability prediction. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Janczarek, Pawel; Sosnowski, Janusz] Warsaw Univ Technol, Fac Elect & Informat Technol, Inst Comp Sci, PL-00665 Warsaw, Poland.
C3 Warsaw University of Technology
RP Sosnowski, J (corresponding author), Warsaw Univ Technol, Fac Elect & Informat Technol, Inst Comp Sci, Nowowiejska 15-19, PL-00665 Warsaw, Poland.
EM pawel.janczarek@gmail.com; jss@ii.pw.edu.pl
CR Ahmed MA, 2013, INFORM SOFTWARE TECH, V55, P241, DOI 10.1016/j.infsof.2012.08.001
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   Bardsiri VK, 2012, IET SOFTW, V6, P461, DOI 10.1049/iet-sen.2011.0210
   Bluvband Z., 2011, P IEEE ANN S REL MAI
   Cavalcanti YC, 2013, SOFTWARE QUAL J, V21, P39, DOI 10.1007/s11219-011-9164-5
   Chen Yan, 2009, Proceedings of the 2009 Fifth International Conference on Natural Computation (ICNC 2009), P257, DOI 10.1109/ICNC.2009.262
   Damian D, 2006, IEEE T SOFTWARE ENG, V32, P433, DOI 10.1109/TSE.2006.61
   Damm L.-O., 2006, Software Process Improvement and Practice, V11, P47, DOI 10.1002/spip.253
   Espinosa-Curiel IE, 2013, J SOFTW-EVOL PROC, V25, P393, DOI 10.1002/smr.569
   Ferrer J, 2013, INFORM SOFTWARE TECH, V55, P2125, DOI 10.1016/j.infsof.2013.07.007
   Ferrucci F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P462, DOI 10.1109/ICSE.2013.6606592
   Fujii T., 2011, P 33 INT C SOFTW ENG, P123
   Gil J., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P227, DOI 10.1109/MSR.2012.6224285
   Huang CY, 2011, IEEE T RELIAB, V60, P498, DOI 10.1109/TR.2011.2134350
   Ikemoto S., 2011, P S APPL COMP SAC AC, P1171
   Kan S. H., 2003, METRICS MODELS SOFTW
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Komuro M., 2006, 28th International Conference on Software Engineering Proceedings, P577, DOI 10.1145/1134285.1134367
   Kozlov D, 2008, J SOFTW MAINT EVOL-R, V20, P31, DOI 10.1002/smr.361
   Krini O., 2012, P IEEE INT S TEL
   Krishnan S, 2013, INFORM SOFTWARE TECH, V55, P1479, DOI 10.1016/j.infsof.2012.11.008
   Krol Marcin, 2009, 2009 Symposia and Workshops on Ubiquitous, Autonomic and Trusted Computing in conjunction with the UIC 2009 and ATC 2009 Conferences, P68, DOI 10.1109/UIC-ATC.2009.60
   Leszak M., 2000, P 22 INT C SOFTW ENG, P427
   Macke D, 2008, LECT NOTES COMPUT SC, V5007, P395, DOI 10.1007/978-3-540-79588-9_34
   Martie L., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P120, DOI 10.1109/MSR.2012.6224268
   Middleton P, 2005, LECT NOTES COMPUT SC, V3556, P1
   Middleton P, 2001, SOFTWARE QUAL J, V9, P241, DOI 10.1023/A:1013754402981
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Nielse P.A., 2001, SCAND J INFORM SYST, V13, P21
   Petersen K, 2009, SOFTWARE PRACT EXPER, P1
   Petersen K, 2012, LECT NOTES BUS INF P, V111, P108
   Pham H., 2000, SOFTWARE RELIABILITY
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Reussner RH, 2003, J SYST SOFTWARE, V66, P241, DOI 10.1016/S0164-1212(02)00080-8
   Rodriguez D, 2013, INFORM SOFTWARE TECH, V55, P1810, DOI 10.1016/j.infsof.2013.05.002
   Runeson P, 2003, J SOFTW MAINT EVOL-R, V15, P41, DOI 10.1002/smr.265
   Salfner F, 2010, ACM COMPUT SURV, V42, DOI 10.1145/1670679.1670680
   Seo YS, 2013, INFORM SOFTWARE TECH, V55, P1710, DOI 10.1016/j.infsof.2013.03.007
   Sommerville I., 2011, Software engineering
   Sosnowski J, 2001, EUROMICRO CONF PROC, P166, DOI 10.1109/EURMIC.2001.952451
   Sosnowski J, 2012, ADV INTEL SOFT COMPU, V170, P257
   Weiss S.M., 2007, PREDICTIVE METHODS A
   Wohlin C., 2012, Experimentation in Software Engineering
   Wu H., 2010, P 2 IEEE INT C INF M, P190
   Yamashita A, 2013, J SYST SOFTWARE, V86, P2639, DOI 10.1016/j.jss.2013.05.007
   Zeng JT, 2010, 2010 THIRD INTERNATIONAL SYMPOSIUM ON INTELLIGENT INFORMATION TECHNOLOGY AND SECURITY INFORMATICS (IITSI 2010), P558, DOI 10.1109/IITSI.2010.90
   [No title captured]
NR 47
TC 11
Z9 17
U1 2
U2 27
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 272
EP 288
DI 10.1016/j.infsof.2014.06.015
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800016
DA 2024-07-18
ER

PT J
AU Menolli, A
   Cunha, MA
   Reinehr, S
   Malucelli, A
AF Menolli, Andre
   Cunha, Maria Alexandra
   Reinehr, Sheila
   Malucelli, Andreia
TI "Old" theories, "New" technologies: Understanding knowledge sharing and
   learning in Brazilian software development companies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Social tools; SECI; Communities of practice theory; Single- and
   double-loop learning; Software-development company; Survey
ID MANAGEMENT; INFORMATION; SYSTEMS; WEB
AB Context: New technologies such as social networks, wikis, blogs and other social software enable collaborative work and are important facilitators of the learning process. They provide a simple mechanism for people to communicate and collaborate and thus support the creation of knowledge. In software-development companies they are used to creating an environment in which communication and collaboration between workers take place more effectively.
   Objective: This paper identifies the main tools and technologies used by software-development companies in Brazil to manage knowledge and attempts to determine how these tools and technologies relate to important knowledge-sharing and learning theories and how they support the concepts described by these theories.
   Method: A survey was conducted in a group of Brazilian software development companies with high levels of process software maturity to see how they implement the Brazilian Software Processes Improvement model (MPS.Br) and use new tools and technologies. The survey used a qualitative analysis to identify which tools are used most and how frequently employees use them. The results of the analysis were compared with data from the literature on three knowledge-sharing and learning theories to understand how the use of these tools relates to the concepts proposed in these theories.
   Results: The results show that some of the tools used by the companies do not apply the concepts described in the theories as they do not help promote organizational learning. Furthermore, although the companies have adopted the tools, these are not often used, mainly because they are felt not to organize information efficiently.
   Conclusion: The use of certain tools can help promote several concepts described in the theories considered. Moreover, the use of these tools can help reduce the impact of, some common organizational problems. However, companies need to improve existing organizational policies that encourage employees to use these tools more regularly. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Menolli, Andre; Reinehr, Sheila; Malucelli, Andreia] Pontificia Univ Catolica Parana PUCPR, Polytech Sch, Postgrad Program Informat PPGIa, Curitiba, Parana, Brazil.
   [Menolli, Andre] UENP, Dept Comp Sci, Bandeirantes, Brazil.
   [Cunha, Maria Alexandra] Getulio Vargas Fdn EAESP FGV, Sch Business, Grad Program Business Adm, Sao Paulo, Brazil.
C3 Pontificia Universidade Catolica do Parana; Universidade Estadual do
   Norte do Parana (UENP); Getulio Vargas Foundation
RP Menolli, A (corresponding author), UENP, Dept Comp Sci, Bandeirantes, Brazil.
EM and.menolli@gmail.com; alexandra.cunha@pucpr.br;
   sheila.reinehr@pucpr.br; malu@ppgia.pucpr.br
RI Reinehr, Sheila/J-6613-2013
OI Reinehr, Sheila/0000-0001-9430-7713
FU Fundacao Araucaria (Foundation for the Support of Scientific and
   Technological Development in the State of Parana, Brazil)
FX This work was developed with the financial support of Fundacao Araucaria
   (Foundation for the Support of Scientific and Technological Development
   in the State of Parana, Brazil).
CR Alavi M, 2001, MIS QUART, V25, P107, DOI 10.2307/3250961
   Ali I.M., 2002, ED TECHNOL SOC, V5
   Andrade J, 2013, INFORM SOFTWARE TECH, V55, P18, DOI 10.1016/j.infsof.2012.03.003
   [Anonymous], 2010, CMMI DEV VERS 1 3
   [Anonymous], FRAUNHOFER IESE EXPE
   [Anonymous], P 13 APSEC
   [Anonymous], 2006, 2006 TECHNOLOGY MANA
   [Anonymous], 2009, P 9 INT C COMPUTER S
   Argyris C., 1996, Organizational Learning II Theory, Method, and Practice
   Bardin L., 1977, L Analyse de contenu
   Basili V., 2001, P SOFTW ENG WORKSH
   Basili1 Victor R, 1994, Encyclopedia of Software Eng., V1, P469, DOI DOI 10.1002/0471028959.SOF110
   Bjornson FO, 2008, INFORM SOFTWARE TECH, V50, P1055, DOI 10.1016/j.infsof.2008.03.006
   Corti E., 2000, Enterprise and Innovation Management Studies, V1, P245, DOI DOI 10.1080/14632440010023190
   Davenport T. H., 1998, Working Knowledge: How Organizations Manage What They Know
   Dingsoyr T, 2005, INFORM SOFTWARE TECH, V47, P293, DOI 10.1016/j.infsof.2004.08.008
   Easterby-Smith MLyles., 2003, The blackboard handbook of organizational learning and knowledge management
   Fægri TE, 2010, INFORM SOFTWARE TECH, V52, P1118, DOI 10.1016/j.infsof.2010.06.002
   Feldmann R. L., 1998, Proceedings. SEKE '98. Tenth International Conference on Software Engineering and Knowledge Engineering, P236
   Grimm JamesW., 1990, Basic Social Statistics and Quantitative Research Methods
   Hayes J.R., 1980, COGNITIVE PROCESS, P3
   Iandoli L., 2008, INF SCI PUBL
   Iivari J, 2011, INFORM SOFTWARE TECH, V53, P509, DOI 10.1016/j.infsof.2010.10.008
   Jones R, 1999, OCCUP MED-OXFORD, V49, P556, DOI 10.1093/occmed/49.8.556
   Kolb David A, 2014, EXPERIENTIAL LEARNIN, DOI [10.1002/job.4030080408, DOI 10.1016/B978-0-7506-7223-8.50017-4]
   Kolbitsch J, 2006, J UNIVERS COMPUT SCI, V12, P187
   LEVITT B, 1988, ANNU REV SOCIOL, V14, P319, DOI 10.1146/annurev.so.14.080188.001535
   Carreras MAM, 2011, COMPUT INFORM, V30, P7
   Menolli A, 2013, INT J SOFTW ENG KNOW, V23, P1153, DOI 10.1142/S0218194013500356
   Minton S., 2012, WORLDWIDE BLACK BOOK
   Mishra D, 2012, INFORM SOFTWARE TECH, V54, P1067, DOI 10.1016/j.infsof.2012.04.002
   Moe NB, 2012, INFORM SOFTWARE TECH, V54, P853, DOI 10.1016/j.infsof.2011.11.006
   Moraes Roque, 2006, Ciênc. educ. (Bauru), V12, P117
   NEVIS EC, 1995, SLOAN MANAGE REV, V36, P73
   Nonaka I, 1998, CALIF MANAGE REV, V40, P40, DOI 10.2307/41165942
   Nonaka I., 1995, The Knowledge-Creating Company How Japanese Companies Create the Dynamics of Information, DOI DOI 10.1016/0024-6301(96)81509-3
   Notari M., 2006, Proceedings of WikiSym'062006 International Symposium on Wikis 2006, P131
   Pecheux Michel., 1995, Michel Pecheux: Automatic Discourse Analysis, P235
   Polanyi M., 1966, Knowledge in Organisations
   Ras E., 2005, P 3 C PROF KNOWL MAN
   Rech J., 2008, P WORKSH LEARN SOFTW
   Reifer DJ, 2003, IEEE SOFTWARE, V20, P94, DOI 10.1109/MS.2003.1231161
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   Sambamurthy V, 2003, MIS QUART, V27, P237
   Senge P.M., 1994, The fifth discipline fieldbook: Strategies and tools for building a better learning organization
   SOFTEX, 2012, MELH PROC SOFTW BRAS
   Tautz C., 2001, COSTUMIZING SOFTWARE
   Tiwana A., 2002, The knowledge management toolkit, V2nd
   Tynjala P., 2001, Writing as a Learning Tool: Integrating Theory and Practice, P7, DOI DOI 10.1007/978-94-010-0740-5_2
   Wenger E., 1998, COMMUNITIES PRACTISE
NR 50
TC 12
Z9 17
U1 1
U2 57
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 289
EP 303
DI 10.1016/j.infsof.2014.07.008
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AX6HE
UT WOS:000347022800017
DA 2024-07-18
ER

PT J
AU Yusifoglu, VG
   Amannejad, Y
   Can, AB
AF Yusifoglu, Vahid Garousi
   Amannejad, Yasaman
   Can, Aysu Betin
TI Software test-code engineering: A systematic mapping
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic mapping; Survey; Study repository; Software test-code
   engineering; Development of test code; Quality assessment of test code
ID GENERATION; QUALITY; MAINTENANCE
AB Context: As a result of automated software testing, large amounts of software test code (script) are usually developed by software teams. Automated test scripts provide many benefits, such as repeatable, predictable, and efficient test executions. However, just like any software development activity, development of test scripts is tedious and error prone. We refer, in this study, to all activities that should be conducted during the entire lifecycle of test-code as Software Test-Code Engineering (STCE).
   Objective: As the STCE research area has matured and the number of related studies has increased, it is important to systematically categorize the current state-of-the-art and to provide an overview of the trends in this field. Such summarized and categorized results provide many benefits to the broader community. For example, they are valuable resources for new researchers (e.g., PhD students) aiming to conduct additional secondary studies.
   Method: In this work, we systematically classify the body of knowledge related to STCE through a systematic mapping (SM) study. As part of this study, we pose a set of research questions, define selection and exclusion criteria, and systematically develop and refine a systematic map.
   Results: Our study pool includes a set of 60 studies published in the area of STCE between 1999 and 2012. Our mapping data is available through an online publicly-accessible repository. We derive the trends for various aspects of STCE. Among our results are the following: (1) There is an acceptable mix of papers with respect to different contribution facets in the field of STCE and the top two leading facets are tool (68%) and method (65%). The studies that presented new processes, however, had a low rate (3%), which denotes the need for more process-related studies in this area. (2) Results of investigation about research facet of studies and comparing our result to other SM studies shows that, similar to other fields in software engineering, STCE is moving towards more rigorous validation approaches. (3) A good mixture of STCE activities has been presented in the primary studies. Among them, the two leading activities are quality assessment and co-maintenance of test-code with production code. The highest growth rate for co-maintenance activities in recent years shows the importance and challenges involved in this activity. (4) There are two main categories of quality assessment activity: detection of test smells and oracle assertion adequacy. (5) JUnit is the leading test framework which has been used in about 50% of the studies. (6) There is a good mixture of SUT types used in the studies: academic experimental systems (or simple code examples), real open-source and commercial systems. (7) Among 41 tools that are proposed for STCE, less than half of the tools (45%) were available for download. It is good to have this percentile of tools to be available, although not perfect, since the availability of tools can lead to higher impact on research community and industry.
   Conclusion: We discuss the emerging trends in STCE, and discuss the implications for researchers and practitioners in this area. The results of our systematic mapping can help researchers to obtain an overview of existing STCE approaches and spot areas in the field that require more attention from the research community. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Yusifoglu, Vahid Garousi] Atilim Univ, Dept Software Engn, Syst & Software Qual Engn Res Grp SySoQual, Ankara, Turkey.
   [Yusifoglu, Vahid Garousi; Amannejad, Yasaman] Univ Calgary, Dept Elect & Comp Engn, Software Qual Engn Res Grp SoftQual, Calgary, AB, Canada.
   [Yusifoglu, Vahid Garousi] Maral Software Consulting Corp AS, Ankara, Turkey.
   [Can, Aysu Betin] Middle E Tech Univ, Inst Informat, Software Technol Res Grp, TR-06531 Ankara, Turkey.
C3 Atilim University; University of Calgary; Middle East Technical
   University
RP Yusifoglu, VG (corresponding author), Atilim Univ, Dept Software Engn, Syst & Software Qual Engn Res Grp SySoQual, Ankara, Turkey.
EM vahid.garousi@atilim.edu.tr; yasaman.amannejad@ucalgary.ca;
   betincan@metu.edu.tr
RI Betin Can, Aysu/HTN-8580-2023
OI Betin Can, Aysu/0000-0002-4828-0190; Garousi, Vahid/0000-0001-6590-7576
FU Atilim University; Scientific and Technological Research Council of
   Turkey (TUBITAK) [2221]; Natural Sciences and Engineering Research
   Council of Canada (NSERC) [341511-07, EGP 444884-12, EGP 437020-12]
FX Vahid Garousi was supported by Atilim University and the Visiting
   Scientist Fellowship Program (#2221) of the Scientific and Technological
   Research Council of Turkey (TUBITAK). The Canadian authors were
   additionally supported by the Natural Sciences and Engineering Research
   Council of Canada (NSERC) through the following three Grants: Discovery
   Grant No. 341511-07, ENGAGE Grant #EGP 444884-12 and ENGAGE Grant #EGP
   437020-12.
CR Afzal Wasif, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P488
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Alalfi M.H., 2009, P ACM S APPL COMP
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Ammann Paul, 2008, Introduction to software testing, V1st
   Android Team, ANDR GIT REP
   [Anonymous], 2010, P 19 INT S SOFTW TES
   [Anonymous], 2008, PROC 12 INT C EVAL A
   Baker P, 2006, TAIC PART - TESTING: ACADEMIC & INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P90, DOI 10.1109/TAIC-PART.2006.35
   Banerjee I, 2013, INFORM SOFTWARE TECH, V55, P1679, DOI 10.1016/j.infsof.2013.03.004
   Barmi Z. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P476, DOI 10.1109/ICSTW.2011.58
   Basili V. R., 1992, Technical Report
   Bavota G., 2012, P INT C SOFTW MAINT
   Bencomo N, 2012, COMPUTER, V45, P36, DOI 10.1109/MC.2012.292
   Bhat T., 2006, Proceedings of the 2006 ACM/IEEE International Symposium on Empirical Software Engineering (ISESE '06), P356, DOI [DOI 10.1145/1159733.1159787, 10.1145/1159733.1159787]
   Binder R.V., 2000, AW OBJ TECHNOL S
   Binder R.V., 1996, P TOOLS 23 TECHN OBJ, P374
   Bozkurt M., 2010, Testing Web Services: A Survey
   Breugelmans M., 2008, P INT WORKSH AC SOFT
   Brown C.T., 2007, INTRO TESTING WEB AP
   Canfora G., 2008, Software Engineering, International Summer Schools, ISSSE 2006-2008, Salerno, Italy, Revised Tutorial Lectures, V5413, P78
   Counsell S., 2007, 4 INT WORKSH SOFTW Q, P31
   Neto PADS, 2011, IEEE SOFTWARE, V28, P16, DOI 10.1109/MS.2011.90
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Daniel B, 2009, IEEE INT CONF AUTOM, P433, DOI 10.1109/ASE.2009.17
   Dao TB, 2010, LECT NOTES COMPUT SC, V6503, P111, DOI 10.1007/978-3-642-17714-9_9
   Din G, 2008, LECT NOTES COMPUT SC, V5287, P417, DOI 10.1007/978-3-540-87785-1_37
   Dogan S, 2014, J SYST SOFTWARE, V91, P174, DOI 10.1016/j.jss.2014.01.010
   Dustin E., 2009, IMPLEMENTING AUTOMAT
   Dyutiman Choudhary Dyutiman Choudhary, 2011, Pro-poor value chain development for high value products in mountain regions: Indian Bay Leaf
   Elberzhager F, 2012, INFORM SOFTWARE TECH, V54, P1, DOI 10.1016/j.infsof.2011.06.003
   Endo A.T., 2010, BRAZ WORKSH SYST AUT, P89
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Fewster M., 1999, Software test automation: effective use of test execution tools
   Garousi V., ONLINE PAPER REPOSIT
   Garousi V., 2011, J SOFTW SYST MODEL S
   GAROUSI V, 2010, P 5 INT AC IND C TES, V6303, P189
   Garousi V, 2013, INFORM SOFTWARE TECH, V55, P1374, DOI 10.1016/j.infsof.2013.02.006
   Garousi V, 2013, ADV COMPUT, V89, P163, DOI 10.1016/B978-0-12-408094-2.00005-9
   Garousi V, 2010, J SYST SOFTWARE, V83, P2251, DOI 10.1016/j.jss.2010.07.012
   Graham D., 2012, EXPERIENCES TEST AUT
   Grechanik M., 2012, INT WORKSH END TO EN
   Grechanik M., 2011, 1 WORKSH INT WORKSH
   Grechanik M, 2009, PROC IEEE INT CONF S, P9, DOI 10.1109/ICSM.2009.5306345
   Grechanik M, 2009, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2009.5070540
   Greiler M, 2012, LECT NOTES COMPUT SC, V7304, P91, DOI 10.1007/978-3-642-30561-0_8
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   Guerra EM., 2007, P INT C SOFTW ENG AD, P44, DOI [DOI 10.1109/ICSEA.2007.57, 10.1109/ICSEA.2007.57]
   Guodong Li, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P609, DOI 10.1007/978-3-642-22110-1_49
   Guowei Yang, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P455, DOI 10.1007/978-3-642-32759-9_37
   Gupta Prateek, 2011, 2011 INT C COMM IND, P1
   Harder M., 2001, SPECIFICATION COVERA
   Hellmann T.D., 2010, AGILE SOFTWARE DEV C
   Hendrickson E., 1998, INT C SOFTW TEST AN
   Jill J., 2011, DOING YOUR LIT REV T
   Jin Chen, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P467, DOI 10.1109/ICST.2012.59
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Kaner Cem., 2002, LESSONS LEARNED SOFT
   Kitchenham B., 2007, EVIDENCE BASED SOFTW
   Kitchenham B., 2010, P ACM IEEE INT C SOF, P589, DOI DOI 10.1145/1806799.1806887
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Knauth T, 2009, IEEE ICST WORKSHOP, P182, DOI 10.1109/ICSTW.2009.40
   Koochakzadeh N., 2010, J ADV SOFTW ENG, V2010
   Koochakzadeh N, 2010, LECT NOTES COMPUT SC, V6303, P129, DOI 10.1007/978-3-642-15585-7_12
   Koochakzadeh N, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P220, DOI 10.1109/ICST.2009.8
   Koster K., 2007, P 6 JOINT M EUR SOFT, P541, DOI 10.1145/1287624.1287705
   Lanubile F, 2007, LECT NOTES COMPUT SC, V4536, P115
   Lubsen Z., 2009, P IEEE INT WORK C MI
   Makedonski P, 2009, 2009 FIRST INTERNATIONAL CONFERENCE ON ADVANCES IN SYSTEM TESTING AND VALIDATION LIFECYCLE, P117, DOI 10.1109/VALID.2009.13
   MATHUR AP, 2008, FDN SOFTWARE TESTING
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Memon AM, 2010, ADV COMPUT, V80, P121, DOI 10.1016/S0065-2458(10)80003-8
   Mirzaaghaei M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P231, DOI 10.1109/ICST.2012.103
   Mirzaaghaei M., 2010, Proceedings of the 2010 IEEE International Conference on Software Maintenance ICSM 2010, P1
   Mirzaaghaei M., 2011, P WORKSH IT ECL COMM
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Nagappan N, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P85, DOI 10.1109/ISSRE.2005.35
   Neto C.R.L., 2012, P INT C SOFTW ENG KN
   Neukirchen Helmut, 2008, International Journal on Software Tools for Technology Transfer, V10, P309, DOI 10.1007/s10009-008-0075-0
   Neukirchen H, 2008, SOFTW TEST VERIF REL, V18, P71, DOI 10.1002/stvr.379
   Neukirchen H, 2007, LECT NOTES COMPUT SC, V4581, P228
   Nivas T., 2011, P 1 INT WORKSH END T, P30
   Osherove R., 2009, ART UNIT TESTING
   Page A., 2008, WE TEST SOFTWARE MIC
   Palacios M, 2011, INFORM SOFTWARE TECH, V53, P171, DOI 10.1016/j.infsof.2010.11.014
   Pasareanu Corina S., 2009, International Journal on Software Tools for Technology Transfer, V11, P339, DOI 10.1007/s10009-009-0118-1
   Pinto L. S., 2012, P ACM SIGSOFT INT S
   Qusef Abdallah, 2010, 2010 IEEE International Conference on Software Maintenance. pp, P1
   Reichhart S, 2007, J OBJECT TECHNOL, V6, P231, DOI 10.5381/jot.2007.6.9.a12
   Runeson P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.91
   Rutherford MJ, 2003, LECT NOTES COMPUT SC, V2830, P377
   Schuler D., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P90, DOI 10.1109/ICST.2011.32
   Shewchuk Y, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P489
   Singh I., 2012, MAPPING STUDY AUTOMA
   Skoglund M, 2004, PROC IEEE INT CONF S, P438, DOI 10.1109/ICSM.2004.1357831
   Song Yoonki., 2007, Proc. ETX at OOPSLA, P26
   Tahchiev P., 2010, JUNIT IN ACTION
   Thummalapenta S., 2012, P INT WORKSH END TO
   Thummalapenta S, 2011, LECT NOTES COMPUT SC, V6603, P294, DOI 10.1007/978-3-642-19811-3_21
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Van Rompaey Bart, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops, P11, DOI 10.1109/ASEW.2008.4686316
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   Van Rompaey B, 2008, WORK CONF REVERSE EN, P269, DOI 10.1109/WCRE.2008.29
   Van Rompaey B, 2009, EUR CON SFTWR MTNCE, P209, DOI 10.1109/CSMR.2009.39
   Vanoverberghe D, 2012, LECT NOTES COMPUT SC, V7147, P542
   Vega Diana, 2008, 2008 The Third International Conference on Software Engineering Advances (ICSEA), P237, DOI 10.1109/ICSEA.2008.44
   Wang S., 2009, 5 WORKSH MUT AN, P2
   Wiederseiner C, 2011, IEEE INT CONF TRUST, P1109, DOI 10.1109/TrustCom.2011.151
   Wiederseiner C, 2010, LECT NOTES COMPUT SC, V6303, P118, DOI 10.1007/978-3-642-15585-7_11
   Woei-Kae Chen, 2012, Proceedings of the 2012 13th ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel & Distributed Computing (SNPD 2012), P289, DOI 10.1109/SNPD.2012.10
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Xie Q, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189752
   Xie T, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P196
   XIE T, 2006, P 20 EUR C OBJ OR PR, V4067, P380
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Zaidman Andy, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P220, DOI 10.1109/ICST.2008.47
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
   Zakaria Z, 2009, ASIA PAC SOFWR ENG, P316, DOI 10.1109/APSEC.2009.72
NR 120
TC 37
Z9 37
U1 0
U2 25
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 123
EP 147
DI 10.1016/j.infsof.2014.06.009
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800008
DA 2024-07-18
ER

PT J
AU Sturm, A
   Kramer, O
AF Sturm, Arnon
   Kramer, Oded
TI Evaluating the productivity of a reference-based programming approach: A
   controlled experiment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Productivity; Programming; Software reusability; Software quality;
   Domain engineering
ID SOFTWARE-DEVELOPMENT; PERFORMANCE; QUALITY
AB Context: Domain engineering aims at facilitating software development in an efficient and economical way. One way to measure that is through productivity indicators, which refer to the ability of creating a quality software product in a limited period and with limited resources. Many approaches have been devised to increase productivity; however, these approaches seem to suffer from a tension between expressiveness on the one hand, and applicability (or the lack of it) in providing guidance for developers.
   Objective: This paper evaluates the applicability and efficiency of adopting a domain engineering approach, called Application-based DOmain Modeling (ADOM), in the context of the programming task with Java, and thus termed ADOM-Java, for improving productivity in terms of code quality and development time.
   Method: To achieve that objective we have qualitatively evaluate the approach using questionnaires and following a text analysis procedure. We also set a controlled experiment in which 50 undergraduate students performed a Java-based programming task using either ADOM-Java or Java alone.
   Results: The qualitative evaluation reveal that the approach is easy to uses and provides valuable guidance. Nevertheless, it requires training. The outcomes of the experiment indicate that the approach is applicable and that the students that used ADOM-Java achieved better code quality, as well as better functionality and within less time than the students who used only Java.
   Conclusion: The results of the experiments imply that by providing a code base equipped with reuse guidelines for programmers can increase programming productivity in terms of quality and development time. These guidelines may also enforce coding standards and architectural design. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Sturm, Arnon; Kramer, Oded] Ben Gurion Univ Negev, Dept Informat Syst Engn, IL-84105 Beer Sheva, Israel.
C3 Ben Gurion University
RP Sturm, A (corresponding author), Ben Gurion Univ Negev, Dept Informat Syst Engn, IL-84105 Beer Sheva, Israel.
EM sturm@bgu.ac.il
RI STURM, ARNON/F-1510-2012
OI STURM, ARNON/0000-0002-4021-7752
CR Ali Z, 2011, PROC FRONT EDUC CONF
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Batory D, 2003, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2003.1201199
   Boh WF, 2007, MANAGE SCI, V53, P1315, DOI 10.1287/mnsc.1060.0687
   Cataldo M., 2010, CMUISR10104
   Cazzola W., 2013, JAVA JAVA ANNOTATION
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   CZARNECKI K, 2004, P EUR COMM US NAT SC
   Exton C., 2004, P 12 INT WORKSH SOFT, P40
   Fayad E.M., 1999, IMPLEMENTING APPL FR
   FAYAD EM, 2000, DOMAIN SPECIFIC APPL
   Fontoura M.F., 1999, ACHIEVING BOTTOM LIN
   Freeman S., 2006, Companion to the 21st ACM SIGPLAN Symposium on Object-oriented Programming Systems, Languages, and Applications, OOPSLA '06, P855, DOI DOI 10.1145/1176617.1176735
   Froehlich Garry., 1998, CRC HDB OBJECT TECHN
   Gregor D, 2005, INT J PARALLEL PROG, V33, P145, DOI 10.1007/s10766-005-3580-8
   Hall T, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1525880.1525883
   HARSU M, 2002, 31 TAMP U TECHN I SO
   Harter DE, 2000, MANAGE SCI, V46, P451, DOI 10.1287/mnsc.46.4.451.12056
   Heijstek W., 2009, 35 EUR C SOFTW ENG A
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   Jaring M., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P15
   Jones C., 2007, Estimating Software Costs: Bringing Realism To Estimating
   Kabanov Jevgeni., 2008, PPPJ'08: Proceedings of the 6th international symposium on Principles and practice of programming in Java, P189
   Kang Kyo C, 1990, Technical Report
   Kelly S., 2008, Domain-Specific Modeling
   Kieburtz RB, 1996, PROC INT CONF SOFTW, P542, DOI 10.1109/ICSE.1996.493448
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kramer O., 2009, REL DOM SPEC GEN PUR
   Kramer O., 2010, BRIDG PROGR PROD EXP
   Krishnan MS, 2000, MANAGE SCI, V46, P745, DOI 10.1287/mnsc.46.6.745.11941
   LEE AH, 1995, IEEE T SOFTWARE ENG, V21, P883, DOI 10.1109/32.473217
   Lowell A.J., 1983, GUIDE MANAGERS ANAL
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   PHILIPPOW I, 2003, 4 AOSD MOD UML WORKS
   Polancic G, 2011, COMPUT HUM BEHAV, V27, P730, DOI 10.1016/j.chb.2010.10.006
   Polancic G, 2010, J SYST SOFTWARE, V83, P574, DOI 10.1016/j.jss.2009.10.036
   Ramasubbu N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P261, DOI 10.1145/1985793.1985830
   Rasch R.H., 1995, J INFORMATION TECHNO, V6, P1
   RASCH RH, 1992, MIS QUART, V16, P395, DOI 10.2307/249535
   Reinhartz-Berger I., 2013, EMPIR SOFTW ENG
   Reinhartz-Berger I., 2010, INT J BUSINESS PROCE, V4, P134
   Reinhartz-Berger I, 2008, J DATABASE MANAGE, V19, P74, DOI 10.4018/jdm.2008010104
   Reinhartz-Berger I, 2010, IEEE T SYST MAN CY A, V40, P1045, DOI 10.1109/TSMCA.2010.2044408
   Reinhartz-Berger I, 2010, DATA KNOWL ENG, V69, P491, DOI 10.1016/j.datak.2010.01.002
   Reinhartz-Berger I, 2009, INFORM SOFTWARE TECH, V51, P1275, DOI 10.1016/j.infsof.2009.03.005
   Salleh N, 2011, IEEE T SOFTWARE ENG, V37, P509, DOI 10.1109/TSE.2010.59
   Sawyer S, 2004, COMMUN ACM, V47, P95, DOI 10.1145/1035134.1035140
   SEI, 2012, SOFTWARE PRODUCT LIN
   Sidker R., 2002, SOFTWARE PRODUCTIVIT
   Sturm A., DOMAIN ENG 2013, P113
   Sturm A, 2008, INT J SOFTW ENG KNOW, V18, P1115, DOI 10.1142/S0218194008004045
   Tarr P., 2001, MULTI DIMENSIONAL SE
   van Gurp J, 2001, SOFTWARE PRACT EXPER, V31, P277, DOI 10.1002/spe.366
   Vlissides J., 1994, Design Patterns: Elements of Reusable Object-Oriented Software
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   Weller E, 2008, IEEE SOFTWARE, V25, P48, DOI 10.1109/MS.2008.68
   Yang HL, 2004, INFORM MANAGE-AMSTER, V41, P335, DOI 10.1016/S0378-7206(03)00078-8
NR 57
TC 1
Z9 1
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2014
VL 56
IS 10
BP 1390
EP 1402
DI 10.1016/j.infsof.2014.05.003
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AN8JO
UT WOS:000340850700014
DA 2024-07-18
ER

PT J
AU Di Ruscio, D
   Pelliccione, P
AF Di Ruscio, Davide
   Pelliccione, Patrizio
TI Simulating upgrades of complex systems: The case of Free and Open Source
   Software
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Evolution of FOSS systems; Simulation; Model-driven engineering; Linux
   distributions
ID MODELS
AB Context: The upgrade of complex systems is intrinsically difficult and requires techniques, algorithms, and methods which are both expressive and computationally feasible in order to be used in practice. In the case of FOSS (Free and Open Source Software) systems, many upgrade errors cannot be discovered by current upgrade managers and then a system upgrade can potentially lead the system to an inconsistent and incoherent state.
   Objective: The objective of this paper is to propose an approach to simulate the upgrade of complex systems in order to predict errors before they affect the real system.
   Method: The approach promotes the use of model-driven engineering techniques to simulate the upgrade of complex systems. The basic idea is to have a model-based description of the system to be upgraded and to make use of model transformations to perform the upgrade on a source model so to obtain a target model representing the state of the upgraded system.
   Results: We provide an implementation of the simulator, which is tailored to FOSS systems. The architecture of the simulator is distribution independent so that it can be easily instantiated to specific distributions. The simulator takes into account also pre and post-installation scripts that equip each distribution package. This feature is extremely important since maintainer scripts are full-fledged programs that are run with system administration rights.
   Conclusions: The paper shows the kind of errors the simulator is able to predict before upgrading the real system, and how the approach improves the state of the art of package managers while integrated in real Linux distribution installations. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Di Ruscio, Davide; Pelliccione, Patrizio] Univ Aquila, DISIM, I-67100 Laquila, Italy.
C3 University of L'Aquila
RP Pelliccione, P (corresponding author), Univ Aquila, DISIM, I-67100 Laquila, Italy.
EM davide.diruscio@univaq.it; patrizio.pelliccione@univaq.it
RI Di Ruscio, Davide/AAG-4674-2020; Pelliccione, Patrizio/A-4105-2008;
   Pelliccione, Patrizio/Q-5118-2019
OI Di Ruscio, Davide/0000-0002-5077-6793; Pelliccione,
   Patrizio/0000-0002-5438-2281; Pelliccione, Patrizio/0000-0002-5438-2281
FU European Community's 7th Framework Programme [214898]
FX This work is partly supported by they European Community's 7th Framework
   Programme (FP7/2007-2013), http://www.mancoosi.org MANCOOSI project,
   grant agreement n. 214898.
CR Anderson Paul., 2000, P 4 ANN LINUX SHOWCA, V4, P42
   [Anonymous], 2001, CATHEDRAL BAZAAR
   [Anonymous], 2003, Eclipse Modeling Framework
   Autili M., 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, P488, DOI [DOI 10.1145/2025113, 10.1145/2025113.2025199, DOI 10.1145/2025113.2025199]
   Bailey E., 1997, MAXIMUM RPM TAKING R
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Izquierdo JLC, 2009, LECT NOTES COMPUT SC, V5562, P82, DOI 10.1007/978-3-642-02674-4_7
   Childs S., 2008, LISA, P175
   Cousot P, 1996, ACM COMPUT SURV, V28, P324, DOI 10.1145/234528.234740
   Crameri Olivier, 2007, Operating Systems Review, V41, P221, DOI 10.1145/1323293.1294283
   Delaet T, 2007, USENIX ASSOCIATION PROCEEDING OF THE 21ST LARGE INSTALLATION SYSTEMS ADMINISTRATION CONFERENCE, P261
   Desai N, 2006, LISA 06: USENIX ASSOCIATION PROCEEDINGS OF THE 20TH LARGE INSTALLATION SYSTEM ADMINISTRATION CONFERENCE, P215
   Di Cosmo R, 2011, SCI COMPUT PROGRAM, V76, P1144, DOI 10.1016/j.scico.2010.11.001
   Di Cosmo Roberto., 2008, P 1 INT WORKSH HOT T, P1, DOI [10.1145/1490283.1490292, DOI 10.1145/1490283.1490292]
   Di Ruscio D, 2009, IWOCE 2009: INTERNATIONAL WORKSHOP ON OPEN COMPONENT ECOSYSTEM, P11
   Dolstra E, 2010, J FUNCT PROGRAM, V20, P577, DOI 10.1017/S0956796810000195
   Efftinge S., 2006, OPENARCHITECTUREWARE
   Fishwick P. A., 1995, Simulation model design and execution: Building digital worlds
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Goldsby HJ, 2008, LECT NOTES COMPUT SC, V5301, P568, DOI 10.1007/978-3-540-87875-9_40
   Johnson M.K., 2005, P LIN S
   Jouault F., 2006, 5 INT C GEN PROGR CO, P249, DOI DOI 10.1145/1173706.1173744
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kanies L, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE SEVENTEENTH LARGE INSTALLATION SYSTEMS ADMINISTRATION CONFERENCE, P115
   Kanies Luke., 2006, USENIX ASS NEWSLETTE, V31, P19
   Mancinelli F, 2006, IEEE INT CONF AUTOM, P199
   McQueen R., 2005, THESIS U CAMBRIDGE
   Polack FAC, 2010, IEEE INT C ENG COMP, P276, DOI [10.1109/ICECCS.2010.48, 10.1109/ICECCS.2010.42]
   Rivera J. E., 2009, Proc. MtATL, V9, P34
   Sargent RG, 2013, J SIMUL, V7, P12, DOI [10.1109/WSC.1998.744907, 10.1057/jos.2012.20]
   Sargent R. G., 1986, 1986 Winter Simulation Conference Proceedings, P237, DOI 10.1145/318242.318312
   Smith R., 2003, ENCY COMPUTER SCI, P1578
   Wimmer M, 2006, LECT NOTES COMPUT SC, V3844, P159
   Xie YC, 2006, USENIX Association Proceedings of the 15th USENIX Security Symposium, P179
NR 34
TC 6
Z9 6
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2014
VL 56
IS 4
BP 438
EP 462
DI 10.1016/j.infsof.2014.01.006
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AD0DG
UT WOS:000332904000004
DA 2024-07-18
ER

PT J
AU Ortin, F
   Labrador, MA
   Redondo, JM
AF Ortin, Francisco
   Labrador, Miguel A.
   Redondo, Jose M.
TI A hybrid class- and prototype-based object model to support
   language-neutral structural intercession
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Structural intercession; Duck typing; Prototype-based object model;
   Reflection; Virtual machine; Dynamic languages
ID VIRTUAL MACHINE; JAVA
AB Context: Dynamic languages have turned out to be suitable for developing specific applications where runtime adaptability is an important issue. Although NET and Java platforms have gradually incorporated features to improve their support of dynamic languages, they do not provide intercession for every object or class. This limitation is mainly caused by the rigid class-based object model these platforms implement, in contrast to the flexible prototype-based model used by most dynamic languages.
   Objective: Our approach is to provide intercession for any object or class by defining a hybrid class- and prototype-based object model that efficiently incorporates structural intercession into the object model implemented by the widespread.NET and Java platforms.
   Method: In a previous work, we developed and evaluated an extension of a shared-source implementation of the NET platform. In this work, we define the formal semantics of the proposed reflective model, and modify the existing implementation to include the hybrid model. Finally, we assess its runtime performance and memory consumption, comparing it to existing approaches.
   Results: Our platform shows a competitive runtime performance compared to 9 widespread systems. On average, it performs 73% and 61% better than the second fastest system for short- and long-running applications, respectively. Besides, it is the JIT-compiler approach that consumes less average memory. The proposed approach of including a hybrid object-model into the virtual machine involves a 444% performance improvement (and 65% less memory consumption) compared to the existing alternative of creating an extra software layer (the DLR). When none of the new features are used, our platform requires 12% more execution time and 13% more memory than the original NET implementation.
   Conclusion: Our proposed hybrid class- and prototype-based object model supports structural intercession for any object or class. It can be included in existing JIT-compiler class-based platforms to support common dynamic languages, providing competitive runtime performance and low memory consumption. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Ortin, Francisco; Redondo, Jose M.] Univ Oviedo, Dept Comp Sci, Oviedo 33007, Spain.
   [Labrador, Miguel A.] Univ S Florida, Dept Comp Sci & Engn, Tampa, FL 33620 USA.
C3 University of Oviedo; State University System of Florida; University of
   South Florida
RP Ortin, F (corresponding author), Univ Oviedo, Dept Comp Sci, Calvo Sotelo S-N, Oviedo 33007, Spain.
EM ortin@lsi.uniovi.es; labrador@cse.usf.edu; redondojose@uniovi.es
RI Ortin, Francisco/K-9272-2014; López, José Manuel Redondo/K-9605-2014
OI Ortin, Francisco/0000-0003-1199-8649; López, José Manuel
   Redondo/0000-0002-0939-0186
FU Microsoft Research; Department of Science and Innovation (Spain)
   [TIN2011-25978]
FX This work was partially funded by Microsoft Research to develop the
   project entitled Extending Dynamic Features of the SSCLI, awarded in the
   Phoenix and SSCLI, Compilation and Managed Execution Request for
   Proposals. This work was also funded by the Department of Science and
   Innovation (Spain) under the National Program for Research, Development
   and Innovation: project TIN2011-25978, entitled Obtaining Adaptable,
   Robust and Efficient Software by Including Structural Reflection in
   Statically Typed Programming Languages.
CR Abadi M., 1998, A Theory of Objects
   Anderson C., 2003, Electronic Notes in Theoretical Computer Science, V82, P53, DOI [10.1016/S1571-0661(04)80802-8, DOI 10.1016/S1571-0661(04)80802-8]
   [Anonymous], 1984, P ACM SIGPLAN SIGACT, DOI DOI 10.1145/800017.800542
   Bierman G, 2010, LECT NOTES COMPUT SC, V6183, P76, DOI 10.1007/978-3-642-14107-2_5
   Bolz Carl Friedrich, 2009, P 4 WORKSH IMPL COMP, P18, DOI [10.1145/1565824.1565827, DOI 10.1145/1565824.1565827]
   BRUCKSCHLEGEL T, 2005, MICROBENCHMARKING C
   Bull JM, 2000, CONCURRENCY-PRACT EX, V12, P375, DOI 10.1002/1096-9128(200005)12:6<375::AID-CPE480>3.0.CO;2-M
   Chiba S, 2000, LECT NOTES COMPUT SC, V1850, P313
   Crane D., 2005, AJAX ACTION
   Dahm M., 1999, JIT'99. Java-Information-Tag 1999, P267
   Ducasse S, 2006, ACM T PROGR LANG SYS, V28, P331, DOI 10.1145/1119479.1119483
   *ECMA, 2005, ECMA357
   FELLEISEN M, 1992, THEOR COMPUT SCI, V103, P235, DOI 10.1016/0304-3975(92)90014-7
   Felleisen M., 2009, Semantics Engineering with PLT Redex
   Perez-Schofield JBG, 2008, J VISUAL LANG COMPUT, V19, P380, DOI 10.1016/j.jvlc.2007.11.002
   Georges A, 2007, ACM SIGPLAN NOTICES, V42, P57, DOI 10.1145/1297105.1297033
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   Hunt Andrew, 1999, The Pragmatic Programmer: From Journeyman to Master, V1
   Igarashi A, 2001, ACM T PROGR LANG SYS, V23, P396, DOI 10.1145/503502.503505
   Kiczales G., 1991, The Art of the Metaobject Protocol
   Klein G, 2006, ACM T PROGR LANG SYS, V28, P619, DOI 10.1145/1146809.1146811
   Kleinoder J, 1996, PROCEEDINGS OF THE FIFTH INTERNATIONAL WORKSHOP ON OBJECT-ORIENTATION IN OPERATING SYSTEMS, P54, DOI 10.1109/IWOOOS.1996.557866
   LIEBERMAN H, 1986, SIGPLAN NOTICES, V21, P214, DOI 10.1145/960112.28718
   Lilja D. J, 2000, MEASURING COMPUTER P
   Redondo JM, 2013, J SYST SOFTWARE, V86, P278, DOI 10.1016/j.jss.2012.08.016
   Ortin F, 2004, J SYST SOFTWARE, V71, P229, DOI 10.1016/S0164-1212(02)00157-7
   Ortin F, 2010, IET SOFTW, V4, P268, DOI 10.1049/iet-sen.2009.0070
   Ortin F, 2011, INT J SOFTW ENG KNOW, V21, P891, DOI 10.1142/S0218194011005554
   Ortin F, 2011, COMPUT J, V54, P1901, DOI 10.1093/comjnl/bxr067
   Ortin F, 2011, INFORM PROCESS LETT, V111, P278, DOI 10.1016/j.ipl.2010.12.006
   Ortin F, 2009, SCI COMPUT PROGRAM, V74, P836, DOI 10.1016/j.scico.2009.04.001
   Rémy D, 1998, LECT NOTES COMPUT SC, V1381, P200, DOI 10.1007/BFb0053572
   RODDICK JF, 1995, INFORM SOFTWARE TECH, V37, P383, DOI 10.1016/0950-5849(95)91494-K
   Siek J, 2007, LECT NOTES COMPUT SC, V4609, P2
   Thomas D., 2005, AGILE WEB DEV RAILS
   Thomas Dave., 2004, PROGRAMMING RUBY, Vfirst
   Ungar D., 1991, LISP and Symbolic Computation, V4, P223, DOI 10.1007/BF01806107
   Van Rossum G, 2003, Python Language Reference Manual
   Vanderperren W, 2004, DYN ASP WORKSH, P120
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 80
TC 15
Z9 15
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2014
VL 56
IS 2
BP 199
EP 219
DI 10.1016/j.infsof.2013.09.002
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 285TN
UT WOS:000329418000006
DA 2024-07-18
ER

PT J
AU Haydar, M
   Petrenko, A
   Boroday, S
   Sahraoui, H
AF Haydar, May
   Petrenko, Alexandre
   Boroday, Sergiy
   Sahraoui, Houari
TI A formal approach for run-time verification of web applications using
   scope-extended LTL
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Web applications; Web engineering; Model checking; Communicating
   automata model; Linear Temporal Logic; Dynamic analysis
AB Context: In the past decade, the World Wide Web has been subject to rapid changes. Web sites have evolved from static information pages to dynamic and service-oriented applications that are used for a broad range of activities on a daily basis. For this reason, thorough analysis and verification of Web Applications help assure the deployment of high quality applications.
   Objectives: In this paper, an approach is presented to the formal verification and validation of existing web applications. The approach consists of using execution traces of a web application to automatically generate a communicating automata model. The obtained model is used to model checking the application against predefined properties, to perform regression testing, and for documentation.
   Methods: Traces used in the proposed approach are collected by monitoring a web application while it is explored by a user or a program. An automata-based model is derived from the collected traces by mapping the pages of the application under test into states and the links and forms used to browse the application into transitions between the states. Properties, meanwhile, express correctness and quality requirements on web applications and might concern all states of the model; in many cases, these properties concern only a proper subset of the states, in which case the model is refined to designate the subset of the global states of interest. A related problem of property specification in Linear Temporal Logic (LTL) over only a subset of states of a system is solved by means of specialized operators that facilitate specifying properties over propositional scopes in a concise and intuitive way. Each scope constitutes a subset of states that satisfy a propositional logic formula.
   Results: An implementation of the verification approach that uses the model checker Spin is presented where an integrated toolset is developed and empirical results are shown. Also, Linear Temporal Logic is extended with propositional scopes.
   Conclusion: a formal approach is developed to build a finite automata model tuned to features of web applications that have to be validated, while delegating the task of property verification to an existing model checker. Also, the problem of property specification in LTL over a subset of the states of a given system is addressed, and a generic and practical solution is proposed which does not require any changes in the system model by defining specialized operators in LTL using scopes. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Haydar, May] Fahad Bin Sultan Univ, Dept Comp Sci, Tabuk 71454, Saudi Arabia.
   [Haydar, May; Sahraoui, Houari] Univ Montreal, Dept Informat & Rech Operat, Montreal, PQ H3C 3J7, Canada.
   [Petrenko, Alexandre; Boroday, Sergiy] Ctr Rech Informat Montreal, Montreal, PQ H3N 1M3, Canada.
C3 Fahad Bin Sultan University; Universite de Montreal
RP Haydar, M (corresponding author), Fahad Bin Sultan Univ, Dept Comp Sci, POB 15700, Tabuk 71454, Saudi Arabia.
EM Haidarma@crim.ca; Alexandre.Petrenko@crim.ca; Sergiy.Boroday@crim.ca;
   Sahraouh@crim.ca
OI Petrenko, Alexandre/0000-0002-2938-1666
CR Afzal W., 2009, LICENTIATE DISSERTAT, V2009:06
   Andrews A, 2005, SOFTWARE SYSTEMS MOD, V4, P326, DOI DOI 10.1007/S10270-004-0077-7
   [Anonymous], 2005, CMUPDL05109
   [Anonymous], 1998, Web proxy servers
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Artho C., 2004, 16 INT C COMP AID VE
   Barringer Howard, 2003, TECHNICAL REPORT
   BECKER SA, 1991, TENTH ANNUAL INTERNATIONAL PHOENIX CONFERENCE ON COMPUTERS AND COMMUNICATIONS, P332, DOI 10.1109/PCCC.1991.113830
   Beer I, 2001, LECT NOTES COMPUT SC, V2102, P363
   Benedikt M., 2002, 11 INT WORLD WID WEB
   Berard B., 2001, Systems and Software Verification
   Boroday S., 2005, 3 INT WORKSH DYN AN
   Chaki S., 2004, LNCS, V2999, P1542
   Clarke Edmund M., 2001, Model Checking
   CLARKE EM, 1994, ACM T PROGR LANG SYS, V16, P1512, DOI 10.1145/186025.186051
   Clarke J.M., 1998, PAC NW SOFTW QUAL C
   Conallen J, 1999, COMMUN ACM, V42, P63, DOI 10.1145/317665.317677
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P439, DOI 10.1109/ICSE.2000.870434
   De Alfaro L., 2001, 13 INT C COMP AID VE
   Di Sciascio E., 2005, LNCS, V3579
   Dillon L. K., 1994, ACM Transactions on Software Engineering and Methodology, V3, P131, DOI 10.1145/192218.192226
   DWYER MB, 1999, 21 INT C SOFTW ENG L
   Hallal HH, 2006, FORM ASP COMPUT, V18, P63, DOI 10.1007/s00165-005-0082-8
   Haydar M, 2004, LECT NOTES COMPUT SC, V3235, P115
   Haydar M., 2005, 5 INT C NOUV TECHN R
   Haydar M., 2008, 8 INT C WEB ENG ICWE
   Haydar M., 2008, THESIS U MONTREAL, P187
   Huth MichaelR. A., 2000, LOGIC COMPUTER SCI M
   KOSTER M, 1995, CONNEXIONS, V9
   Kroening D, 2004, LECT NOTES COMPUT SC, V3308, P224
   LATVALA T, 2002, HUTTCSA76
   Licata DR, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P164, DOI 10.1109/ASE.2004.1342734
   MANNA Z, 1984, ACM T PROGR LANG SYS, V6, P68, DOI 10.1145/357233.357237
   Pereira A., 2002, 4 INT C FORM ENG MET
   Petrenko A, 2004, IEEE T SOFTWARE ENG, V30, P29, DOI 10.1109/TSE.2004.1265734
   Petrenko A., 2001, LNCS, V2067
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Ricca F, 2001, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2001.919078
   Smith M., 2001, 5 INT S REQ ENG AUG
   Smith RL, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P11, DOI 10.1109/ICSE.2002.1007952
   Stotts P., 2002, 11 WORLD WID WEB C H
   Stotts PD, 1998, ACM T INFORM SYST, V16, P1, DOI 10.1145/267954.267955
   Tonella P, 2002, FOURTH INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION, PROCEEDINGS, P43, DOI 10.1109/WSE.2002.1134088
   Wei Zhang, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P4, DOI 10.1007/978-3-642-21347-2_2
   Weinreich H, 2008, ACM T WEB, V2, DOI 10.1145/1326561.1326566
NR 45
TC 7
Z9 7
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2013
VL 55
IS 12
BP 2191
EP 2208
DI 10.1016/j.infsof.2013.07.013
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 242QW
UT WOS:000326258100008
DA 2024-07-18
ER

PT J
AU Garousi, V
   Mesbah, A
   Betin-Can, A
   Mirshokraie, S
AF Garousi, Vahid
   Mesbah, Ali
   Betin-Can, Aysu
   Mirshokraie, Shabnam
TI A systematic mapping study of web application testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic mapping; Web application; Testing; Paper repository;
   Bibliometrics
ID SOFTWARE ENGINEERING SCHOLARS; USER-SESSION DATA; INPUT-VALIDATION;
   INSTITUTIONS; FRAMEWORK; AUTOMATE
AB Context: The Web has had a significant impact on all aspects of our society. As our society relies more and more on the Web, the dependability of web applications has become increasingly important. To make these applications more dependable, for the past decade researchers have proposed various techniques for testing web-based software applications. Our literature search for related studies retrieved 147 papers in the area of web application testing, which have appeared between 2000 and 2011.
   Objective: As this research area matures and the number of related papers increases, it is important to systematically identify, analyze, and classify the publications and provide an overview of the trends in this specialized field.
   Method: We review and structure the body of knowledge related to web application testing through a systematic mapping (SM) study. As part of this study, we pose two sets of research questions, define selection and exclusion criteria, and systematically develop and refine a classification schema. In addition, we conduct a bibliometrics analysis of the papers included in our study.
   Results: Our study includes a set of 79 papers (from the 147 retrieved papers) published in the area of web application testing between 2000 and 2011. We present the results of our systematic mapping study. Our mapping data is available through a publicly-accessible repository. We derive the observed trends, for instance, in terms of types of papers, sources of information to derive test cases, and types of evaluations used in papers. We also report the demographics and bibliometrics trends in this domain, including top-cited papers, active countries and researchers, and top venues in this research area.
   Conclusion: We discuss the emerging trends in web application testing, and discuss the implications for researchers and practitioners in this area. The results of our systematic mapping can help researchers to obtain an overview of existing web application testing approaches and indentify areas in the field that require more attention from the research community. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Garousi, Vahid] Univ Calgary, Calgary, AB, Canada.
   [Mesbah, Ali; Mirshokraie, Shabnam] Univ British Columbia, Vancouver, BC V5Z 1M9, Canada.
   [Garousi, Vahid; Betin-Can, Aysu] Middle E Tech Univ, Inst Informat, TR-06531 Ankara, Turkey.
C3 University of Calgary; University of British Columbia; Middle East
   Technical University
RP Garousi, V (corresponding author), Univ Calgary, Calgary, AB, Canada.
EM vgarousi@ucalgary.ca; amesbah@ece.ubc.ca; betincan@metu.edu.tr;
   shabnamm@ece.ubc.ca
RI Mesbah, Ali/C-3675-2013; Betin Can, Aysu/HTN-8580-2023
OI Betin Can, Aysu/0000-0002-4828-0190; Mesbah, Ali/0000-0002-8783-7967;
   Garousi, Vahid/0000-0001-6590-7576
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
   [341511-07]; Scientific and Technological Research Council of Turkey
   (TUBITAK) [2221]; NSERC
FX Vahid Garousi was supported by the Discovery Grant #341511-07 from the
   Natural Sciences and Engineering Research Council of Canada (NSERC), and
   also by the Visiting Scientist Fellowship Program (#2221) of the
   Scientific and Technological Research Council of Turkey (TUBITAK). Ali
   Mesbah was supported by NSERC through its Discovery and Strategic
   Project Grants programmes.
CR Afzal W., 2008, 20 INT C SOFTW ENG K
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Alalfi MH, 2010, EUR CON SFTWR MTNCE, P51, DOI 10.1109/CSMR.2010.21
   Alalfi MH, 2009, SOFTW TEST VERIF REL, V19, P265, DOI 10.1002/stvr.401
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Alshahwan N., 2009, Proceedings of the 2009 11th IEEE International Symposium on Web Systems Evolution (WSE 2009), P49, DOI 10.1109/WSE.2009.5630393
   Alshahwan Nadia, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P298, DOI 10.1109/ICST.2008.56
   Amalfitano Domenico, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P274, DOI 10.1109/ICSTW.2010.34
   Amalfitano D, 2010, IEEE INT S WEB SYST, P63, DOI 10.1109/WSE.2010.5623569
   Ammann Paul, 2008, Introduction to software testing, V1st
   Amyot D, 2005, LECT NOTES COMPUT SC, V3530, P247
   Andrews A, 2005, SOFTWARE SYSTEMS MOD, V4, P326, DOI DOI 10.1007/S10270-004-0077-7
   Andrews AA, 2010, INFORM SOFTWARE TECH, V52, P52, DOI 10.1016/j.infsof.2009.06.002
   [Anonymous], 2005, International Conference on World Wide Web, DOI [10.1145/1060745.1060809, DOI 10.1145/1060745.1060809]
   Archambault E., 30 YEARS SCI SECULAR
   Artzi S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P571, DOI 10.1145/1985793.1985871
   Artzi Shay., 2010, P 32 ACMIEEE INT C S, P265
   Artzi Shay., 2008, P 2008 INT S SOFTWAR, P261, DOI [10.1145/1390630.1390662, DOI 10.1145/1390630.1390662]
   Bajwa H, 2005, LECT NOTES COMPUT SC, V3579, P603
   Banerjee I., GRAPHICAL USER INTER
   Barmi Z. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P476, DOI 10.1109/ICSTW.2011.58
   BELLETTINI C., 2005, P S APPL COMPUTING, P1694
   Benedikt M., 2002, P 11 INT WORLD WID W
   Binder R.V., 1997, P TOOLS 23 TECHN OBJ, P374
   Bordbar B, 2006, LECT NOTES COMPUT SC, V3888, P44
   Bozkurt M., 2010, Testing Web Services: A Survey
   de Matos ECB, 2010, INNOV SYST SOFTW ENG, V6, P163, DOI 10.1007/s11334-009-0112-5
   Brown C.T., 2007, INTRO TESTING WEB AP
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Canfora G., 2008, Software Engineering, International Summer Schools, ISSSE 2006-2008, Salerno, Italy, Revised Tutorial Lectures, V5413, P78
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Neto PADS, 2011, IEEE SOFTWARE, V28, P16, DOI 10.1109/MS.2011.90
   da Mota Silveira Netoa P.A., 2011, INFORM SOFTWARE TECH, V53
   Lucca GA, 2006, IEEE INTL SYMPOS WEB, P7
   Di Lucca GA, 2002, PROC IEEE INT CONF S, P310, DOI 10.1109/ICSM.2002.1167787
   Di Lucca GA, 2006, INFORM SOFTWARE TECH, V48, P1172, DOI 10.1016/j.infsof.2006.06.006
   Di Sciascio E, 2005, LECT NOTES COMPUT SC, V3579, P69
   Dobolyi Kinga, 2011, International Journal on Software Tools for Technology Transfer, V13, P111, DOI 10.1007/s10009-010-0170-x
   Dobolyi Kinga., 2010, Proceedings of the 19th international symposium on Software testing and analysis, ISSTA '10, P97
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P187, DOI 10.1109/TSE.2005.36
   Elberzhager F, 2012, INFORM SOFTWARE TECH, V54, P1, DOI 10.1016/j.infsof.2011.06.003
   Endo A., 2010, BRAZ WORKSH SYST AUT
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Ernits J, 2009, LECT NOTES COMPUT SC, V5826, P211
   Garousi V., SYSTEMATIC MAPPING W
   Garousi V., 2010, Computer and Information Science, V3, P19, DOI DOI 10.1142/S0218194013500423
   Garrett JJ, 2005, AJAX NEW APPROACH WE
   Gerlits Y., 2010, P 4 SPRING SUMM YOUN, P50
   Glass RL, 2005, J SYST SOFTWARE, V76, P91, DOI 10.1016/j.jss.2004.08.018
   Glass RL, 2003, J SYST SOFTWARE, V68, P77, DOI 10.1016/S0164-1212(03)00232-2
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   Halfond W., 2008, P ACM SIGSOFT S FDN, P181
   Halfond WGJ, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P285
   Halfond WilliamG. J., 2007, P THE 6 JOINT M EURO, P145
   Halle S., 2010, Proceedings of the 25th IEEE/ACM Int. Conf. Automated Software Engineering (ASE 2010), P235
   HAO J., 2006, P INT C WEB ENG, P17
   Hellmann T.D., 2010, AGILE INTERACTION DE, V9
   Jensen S.H., 2011, P 19 ACM SIGSOFT S 1, P59
   Jia Y., MUTATION TESTING REP
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Kallepalli C, 2001, IEEE T SOFTWARE ENG, V27, P1023, DOI 10.1109/32.965342
   Kitchenham B., 2007, Joint Report
   Kitchenham B., 2010, P EV ASS SOFTW ENG
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Koopman P, 2008, LECT NOTES COMPUT SC, V4902, P299
   Li N, 2010, J SYST SOFTWARE, V83, P2263, DOI 10.1016/j.jss.2010.07.007
   Licata DR, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P164, DOI 10.1109/ASE.2004.1342734
   Liu CH, 2006, INFORM SOFTWARE TECH, V48, P1137, DOI 10.1016/j.infsof.2006.06.003
   Liu H, 2008, J SYST SOFTWARE, V81, P222, DOI 10.1016/j.jss.2007.05.007
   Luo XM, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P336, DOI 10.1109/ICST.2009.51
   Mansour N, 2006, INFORM SOFTWARE TECH, V48, P31, DOI 10.1016/j.infsof.2005.02.007
   Marchetto Alessandro, 2011, International Journal on Software Tools for Technology Transfer, V13, P131, DOI 10.1007/s10009-010-0177-3
   Marchetto Alessandro, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P121, DOI 10.1109/ICST.2008.22
   Marchetto Alessandro, 2008, International Journal on Software Tools for Technology Transfer, V10, P477, DOI 10.1007/s10009-008-0086-x
   Marchetto A, 2008, SERA 2008: 6TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P161, DOI 10.1109/SERA.2008.18
   Marchetto A, 2007, WSE 2007: NINTH IEEE INTERNATIONAL SYMPOSIUM ON WEB SITE EVOLUTION, PROCEEDINGS, P31
   Marchetto A, 2011, EMPIR SOFTW ENG, V16, P103, DOI 10.1007/s10664-010-9149-1
   Marin B., 2011, P 5 INT C RES CHALL, P1
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McMinn P., 2004, SOFTWARE TESTING VER, V14
   Memon AM, 2010, ADV COMPUT, V80, P121, DOI 10.1016/S0065-2458(10)80003-8
   Mesbah A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P561, DOI 10.1145/1985793.1985870
   Mesbah A, 2009, PROC INT CONF SOFTW, P210, DOI 10.1109/ICSE.2009.5070522
   Neto C.R.L., 2012, P INT C SOFTW ENG KN
   Offutt J, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P187, DOI 10.1109/ISSRE.2004.13
   Offutt J, 2010, SOFTW SYST MODEL, V9, P257, DOI 10.1007/s10270-009-0125-4
   Özkinaci ME, 2011, ICSOFT 2011: PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATABASE TECHNOLOGIES, VOL 2, P172
   Palacios M, 2011, INFORM SOFTWARE TECH, V53, P171, DOI 10.1016/j.infsof.2010.11.014
   Pasareanu Corina S., 2009, International Journal on Software Tools for Technology Transfer, V11, P339, DOI 10.1007/s10009-009-0118-1
   Pattabiraman K., 2010, P THEL INT S SOFTW R
   Petersen K., 2008, C EVALUATION ASSESSM, P71
   Praphamontripong Upsorn, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P132, DOI 10.1109/ICSTW.2010.38
   Qi Y, 2006, INFORM SOFTWARE TECH, V48, P1159, DOI 10.1016/j.infsof.2006.06.005
   Raffelt Harald., 2008, Proceedings of the 2008 Workshop on Testing, Analysis, and Verification of Web Services and Applications (TAVWEB08), P1
   Ran LH, 2009, INFORM SOFTWARE TECH, V51, P460, DOI 10.1016/j.infsof.2008.05.016
   Ren J, 2007, COMMUN ACM, V50, P81, DOI 10.1145/1247001.1247010
   Ricca F, 2002, ANN SOFTW ENG, V14, P93, DOI 10.1023/A:1020549507418
   Ricca F, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P123, DOI 10.1109/SCAM.2002.1134112
   Ricca F, 2001, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2001.919078
   Roest D., 2010, P 3 INT C SOFTW TEST, P128
   Sampath S, 2004, PROC IEEE INT CONF S, P104, DOI 10.1109/ICSM.2004.1357795
   Sampath S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P132, DOI 10.1109/ASE.2004.1342731
   Sampath S., 2008, INT C SOFTW TEST VER, P141
   Sampath S, 2007, IEEE T SOFTWARE ENG, V33, P643, DOI 10.1109/TSE.2007.70723
   Sampath S, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P266
   Sampath Sreedevi., 2006, P 2006 WORKSHOP TEST, P23
   Saxena P, 2010, P IEEE S SECUR PRIV, P513, DOI 10.1109/SP.2010.38
   Sprenkle S, 2005, PROC IEEE INT CONF S, P587
   Sprenkle S., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P230, DOI 10.1109/ICST.2011.34
   Sprenkle S, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P117, DOI 10.1109/ISSRE.2007.26
   Sprenkle S, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC-PART.2008.19
   Stepien Bernard, 2008, International Journal on Software Tools for Technology Transfer, V10, P371, DOI 10.1007/s10009-008-0082-1
   Tappenden AF, 2009, ACM T WEB, V3, DOI 10.1145/1541822.1541824
   Tian J, 2006, ADV COMPUT, V67, P177, DOI 10.1016/S0065-2458(05)67004-0
   Tonella P, 2004, WSE 2004: SIXTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION, PROCEEDINGS, P11, DOI 10.1109/WSE.2004.10012
   Tonella P, 2004, J SOFTW MAINT EVOL-R, V16, P103, DOI 10.1002/smr.284
   Tonella P., 2005, Automated Software Engineering, V12, P259, DOI 10.1007/s10515-005-6208-8
   van Deursen A, 2010, LECT NOTES COMPUT SC, V5901, P16
   Wassermann G., 2008, P 2008 INT S SOFTW T, P249, DOI DOI 10.1145/1390630.1390661
   Whittaker J. A., 2009, Exploratory software testing: tips, tricks, tours, and techniques to guide test design
   Xiong WL, 2005, LECT NOTES COMPUT SC, V3579, P87
   Yang JT, 2002, J INF SCI ENG, V18, P59
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Zakaria Z., 2009, P AS PAC SOFTW ENG C
   Zhang Y., 2012, REPOSITORY PUBLICATI
   Zheng Y., 2011, Proceedings of the 20th International Conference on World Wide Web, P805
NR 128
TC 62
Z9 63
U1 0
U2 29
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2013
VL 55
IS 8
BP 1374
EP 1396
DI 10.1016/j.infsof.2013.02.006
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 168DF
UT WOS:000320685200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Moros, B
   Toval, A
   Rosique, F
   Sánchez, P
AF Moros, Begona
   Toval, Ambrosio
   Rosique, Francisca
   Sanchez, Pedro
TI Transforming and tracing reused requirements models to home automation
   models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements metamodel; Requirements reuse; Requirements traceability;
   Models transformation; Model driven software development; Home
   automation models
ID TRACEABILITY
AB Context: Model-Driven Software Development (MDSD) has emerged as a very promising approach to cope with the inherent complexity of modern software-based systems. Furthermore, it is well known that the Requirements Engineering (RE) stage is critical for a project's success. Despite the importance of RE, MDSD approaches commonly leave textual requirements specifications to one side.
   Objective: Our aim is to integrate textual requirements specifications into the MDSD approach by using the MDSD techniques themselves, including metamodelling and model transformations. The proposal is based on the assumption that a reuse-based Model-Driven Requirements Engineering (MDRE) approach will improve the requirements engineering stage, the quality of the development models generated from requirements models, and will enable the traces from requirements to other development concepts (such as analysis or design) to be maintained.
   Method: The approach revolves around the Requirements Engineering Metamodel, denominated as REMM, which supports the definition of the boilerplate based textual requirements specification languages needed for the definition of model transformation from application requirements models to platform-specific application models and code.
   Results: The approach has been evaluated through its application to Home Automation (HA) systems. The HA Requirement Specification Language denominated as HAREL is used to define application requirements models which will be automatically transformed and traced to the application model conforming to the HA Domain Specific Language.
   Conclusions: An anonymous online survey has been conducted to evaluate the degree of acceptance by both HA application developers and MDSD practitioners. The main conclusion is that 66.7% of the HA experts polled strongly agree that the automatic transformation of the requirements models to HA models improves the quality of the HA models. Moreover, 58.3% of the HA participants strongly agree with the usefulness of the traceability matrix which links requirements to HA functional units in order to discover which devices are related to a specific requirement. We can conclude that the experts we have consulted agree with the proposal we are presenting here, since the average mark given is 4 out of 5. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Moros, Begona; Toval, Ambrosio] Univ Murcia, Software Engn Res Grp, Dept Informat & Sistemas, E-30071 Murcia, Spain.
   [Rosique, Francisca; Sanchez, Pedro] Univ Politecn Cartagena, Syst & Elect Engn Div DSIE, Cartagena 30202, Spain.
C3 University of Murcia; Universidad Politecnica de Cartagena
RP Moros, B (corresponding author), Univ Murcia, Software Engn Res Grp, Dept Informat & Sistemas, Campus Espinardo, E-30071 Murcia, Spain.
EM bmoros@um.es; atoval@um.es; paqui.rosique@upct.es; pedro.sanchez@upct.es
RI Moros, Begoña/B-8927-2015; Toval, Ambrosio/P-1180-2014; CONTRERAS, MARIA
   FRANCISCA ROSIQUE/L-2926-2015; Sanchez, Pedro/B-7710-2009
OI Moros, Begoña/0000-0002-3092-7654; Toval, Ambrosio/0000-0002-8273-5937;
   CONTRERAS, MARIA FRANCISCA ROSIQUE/0000-0002-3311-8414; Sanchez,
   Pedro/0000-0002-1903-1291
FU Spanish Ministry of Science and Technology [TIN2009-13718-C02-02,
   TIN2009-08572]; Government of the Region of Murcia [15374/PI/10]
FX This work has been partially supported by the following projects: PANGEA
   (TIN2009-13718-C02-02), EXPLORE (TIN2009-08572) both from the Spanish
   Ministry of Science and Technology and MISSION-SICUVA (Ref. 15374/PI/10)
   from the Government of the Region of Murcia.
CR Albinet A., 2008, THE MEMVATEX METHODO
   Almeida JPA, 2007, INFORM SYST FRONT, V9, P327, DOI 10.1007/s10796-007-9038-3
   [Anonymous], REQUIREMENTS SPECIFI
   [Anonymous], 1994, CHAOS REPORT
   [Anonymous], OMG SYSTEMS MODELING
   [Anonymous], 2008, META OBJECT FACILITY
   [Anonymous], 2003, Software requirements
   Baudry B., 2007, 11TH IEEE INTERNATIO
   Bragança A, 2007, FOURTH INTERNATIONAL WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, PROCEEDINGS, P91, DOI 10.1109/MOMPES.2007.2
   Brambilla M., 2008, 4TH INTERNATIONAL WO
   Brattier E., 2007, 11TH IEEE INTERNATIO
   Bryant B. R., 2010, PROCEEDINGS OF THE F
   Cerón R, 2005, LECT NOTES COMPUT SC, V3547, P173
   Champeau J., 2003, SIVOES MDA WORKSHOP
   Cheng B. H. C., 2007, INTERNATIONAL CONFER
   Chernak Y., REQUIREMENTS REUSE T
   Clements P., 2002, Software product lines
   Cybulski JL, 2000, LECT NOTES COMPUT SC, V1844, P190
   Damian D, 2006, IEEE T SOFTWARE ENG, V32, P433, DOI 10.1109/TSE.2006.61
   Davis A. M., 1995, 201 PRINCIPLES OF SO
   Debnath N., 2008, FIFTH INTERNATIONAL
   Domges R, 1998, COMMUN ACM, V41, P54, DOI 10.1145/290133.290149
   dos Santos Soares Michel, 2008, Journal of Software, V3, P57
   Doyle D., 2006, 3RD INTERNATIONAL WO
   Fernandez-Medina E., 2009, EDITORIAL INFORMATIO, V51
   Ferreira D. d. Almeida, 2009, FOURTH INTERNATIONAL
   Goknil A, 2008, LECT NOTES COMPUT SC, V5095, P310, DOI 10.1007/978-3-540-69100-6_21
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Herzog E., 2005, 15TH INCOSE INTERNAT
   Hull E., 2005, REQUIR ENG, V2nd
   IEEE, 1999, IEEE STD 830
   Jiménez M, 2009, IEEE SOFTWARE, V26, P30, DOI 10.1109/MS.2009.93
   Kaindl H., 2008, THE THIRD INTERNATIO
   Kalnins A, 2010, LECT NOTES COMPUT SC, V5968, P161
   Karban R., 2009, 12TH INTERNATIONAL C
   Kasunic M., 2005, CMU SEI 2005 HB 004
   Kelly S., 2008, Domain-Specific Modeling
   Kherraf S., 2008, 19TH AUSTRALIAN CONF
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Kitchenham B.A., 2002, ACM SIGSOFT Software Engineering Notes, V27, P18, DOI [DOI 10.1145/566493.566495, 10.1145/566493.566495]
   Kleppe A., 2003, MDA EXPLAINED THE MO
   Le Dang H, 2008, INNOV SYST SOFTW ENG, V4, P189, DOI 10.1007/s11334-008-0053-4
   Leffingwell D., 2002, THE ROLE OF REQUIREM
   Letelier P., 2002, 1ST INTERNATIONAL WO
   Likert R., 1932, Arch. Psychol., V22, P44, DOI DOI 10.4135/9781412961288.N454
   Limon A. E., 2005, ECMDA TRACEABILITY W
   Martin A., 2008, 1ST INTERNATIONAL WO
   Melby S. J., 2007, THESIS
   Mellegard N., 2009, THE FIRST INTERNATIO
   Mitschke A., 2010, COST EFFICIENT METHO
   Mohagheghi P., 2009, 3RD WORKSHOP ON QUAL
   Molina F, 2010, INT J INTELL SYST, V25, P757, DOI 10.1002/int.20430
   Moros B., 2008, METAMODELING VARIABI
   Moros B, 2007, ICSOFT 2007: PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL SE, P296
   Moros B, 2008, LECT NOTES COMPUT SC, V5231, P530, DOI 10.1007/978-3-540-87877-3_46
   Oldevik J., 2006, 2ND ECMDA EUROPEAN C
   OMG, MDA GUIDE VERSION 1
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Pinheiro F. A. C., 2003, KLUWER INTERNATION S, V753
   Pires PF, 2011, REQUIR ENG, V16, P133, DOI 10.1007/s00766-011-0116-1
   Poernomo I., 2008, 1ST INTERNATIONAL WO
   Probasco L., 1999, RATIONAL WHITE PAPER
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Robert F. J. F., 2009, SURVEY METHODOLOGY
   Sánchez Cuadrado J, 2006, LECT NOTES COMPUT SC, V4066, P158
   Sánchez P, 2011, J SYST SOFTWARE, V84, P1008, DOI 10.1016/j.jss.2011.01.052
   Santos J., 2008, FIRST INTERNATIONAL
   Schatz B., 2005, INFORMATIK 2005
   Schmidt D. C., 2006, IEEE COMPUT, P39
   SEI-CMU, CMMI FOR DEVELOPMENT
   Shehata M. S., 2002, 15TH INTERNATIONAL C
   Silva A., 2006, 2 INT C INN VIEWS NE
   Sommerville I, 2005, ACM T SOFTW ENG METH, V14, P85, DOI 10.1145/1044834.1044837
   Standish Group, 2009, CHAOS SUMMARY 2009
   Toval A, 2008, COMPUT SYST SCI ENG, V23, P373
   Van Der Straeten R, 2009, LECT NOTES COMPUT SC, V5421, P35, DOI 10.1007/978-3-642-01648-6_4
   Vicente-Chicote C., 2007, JOURNAL OF OBJECT TE, V6
   Vicente-Chicote C., 2007, INTERNATIONAL JOURNA, V16, P394
   Walderhaug S., 2006, 5TH ECMDA TRACEABILI
   Yue T, 2011, REQUIR ENG, V16, P75, DOI 10.1007/s00766-010-0111-y
NR 80
TC 10
Z9 11
U1 0
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2013
VL 55
IS 6
BP 941
EP 965
DI 10.1016/j.infsof.2012.12.003
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 139LS
UT WOS:000318584800003
DA 2024-07-18
ER

PT J
AU Ghezzi, C
   Sharifloo, AM
AF Ghezzi, Carlo
   Sharifloo, Amir Molzam
TI Model-based verification of quantitative non-functional properties for
   software product lines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Quality analysis; Software product lines; Non-functional requirements;
   Probabilistic model checking; Parametric verification
ID RELIABILITY; PREDICTION; CHECKING
AB Evaluating quality attributes of a design model in the early stages of development can significantly reduce the cost and risks of developing a low quality product. To make this possible, software designers should be able to predict quality attributes by reasoning on a model of the system under development. Although there exists a variety of quality-driven analysis techniques for software systems, only a few work address software product lines. This paper describes how probabilistic model checking techniques and tools can be used to verify non-functional properties of different configurations of a software product line. We propose a model-based approach that enables software engineers to assess their design solutions for software product lines in the early stages of development. Furthermore, we discuss how the analysis time can be surprisingly reduced by applying parametric model checking instead of classic model checking. The results show that the parametric approach is able to substantially alleviate the verification time and effort required to analyze non-functional properties of software product lines. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Ghezzi, Carlo; Sharifloo, Amir Molzam] Politecn Milan, Dipartimento Elettron & Informaz, DeepSE Grp, I-20133 Milan, Italy.
C3 Polytechnic University of Milan
RP Sharifloo, AM (corresponding author), Politecn Milan, Dipartimento Elettron & Informaz, DeepSE Grp, I-20133 Milan, Italy.
EM ghezzi@elet.polimi.it; molzam@elet.polimi.it
FU European Commission, Programme IDEAS-ERC [227977-SMScom]
FX This research has been partially funded by the European Commission,
   Programme IDEAS-ERC, Project 227977-SMScom.
CR Alur R, 1999, LECT NOTES COMPUT SC, V1664, P114
   Baier C., 2008, REPRESENTATION MIND
   BARTHOLDT J, 2009, ICSEA, P365
   Cengarle MV, 2006, ELECTRON NOTES THEOR, V160, P141, DOI 10.1016/j.entcs.2006.05.020
   CLASSEN A, 2011, ICSE, P321
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Daws C, 2005, LECT NOTES COMPUT SC, V3407, P280
   ETXEBERRIA L, 2008, ECBS, P255, DOI DOI 10.1109/ECBS.2008.14
   Etxeberria L., 2008, J Braz Comp Soc, V14, P57, DOI [10.1007/BF03192552, DOI 10.1007/BF03192552]
   Etxeberria L, 2008, LECT NOTES COMPUT SC, V5030, P178, DOI 10.1007/978-3-540-68073-4_16
   Filieri A., 2012, FORMSERA WORKSH COLL
   FILIERI A, 2011, ICSE, P341, DOI DOI 10.1145/1985793.1985840
   GHEZZI C, 2011, 6 INT C DEP COMP SYS, V97, P47
   Gobel S., 2004, AOSD 04, P74
   Gomaa H., 2004, Designing Software Product Lines with UML: From Use Cases to PatternBased Software Architectures
   Goseva-Popstojanova K, 2001, PERFORM EVALUATION, V45, P179, DOI 10.1016/S0166-5316(01)00034-7
   Hahn EM, 2010, LECT NOTES COMPUT SC, V6174, P660, DOI 10.1007/978-3-642-14295-6_56
   Immonen A, 2008, SOFTW SYST MODEL, V7, P49, DOI 10.1007/s10270-006-0040-x
   Jarzabek S, 2006, IEE P-SOFTW, V153, P61, DOI 10.1049/ip-sen:20050008
   Kwiatkowska Marta, 2009, Performance Evaluation Review, V36, P40, DOI 10.1145/1530873.1530882
   Kwiatkowska M., 2010, 48 ALL C COMM CONTR
   Lauenroth K, 2009, IEEE INT CONF AUTOM, P269, DOI 10.1109/ASE.2009.16
   Lincke R., 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P82, DOI 10.1109/QSIC.2010.9
   Montagud S., 2009, Proceedings of the International Software Product Line Conference, P91
   Niemelä E, 2007, INFORM SOFTWARE TECH, V49, P1107, DOI 10.1016/j.infsof.2006.11.003
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Ovaska E, 2010, INFORM SOFTWARE TECH, V52, P577, DOI 10.1016/j.infsof.2009.11.008
   Rodrigues G, 2005, LECT NOTES COMPUT SC, V3442, P111, DOI 10.1007/978-3-540-31984-9_9
   Siegmund N., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P160, DOI 10.1109/SPLC.2011.20
   SIEGMUND N, 2008, 15 INT AS PAC SOFTW, P187, DOI DOI 10.1109/APSEC.2008.45
   Sincero J., 2009, 42 HAW INT C SYST SC, P1
   Sincero J, 2010, ASIA PAC SOFWR ENG, P147, DOI 10.1109/APSEC.2010.26
   Steger M., 2004, SOFTWARE PRODUCT LIN, P173
   Tawhid R, 2008, LECT NOTES COMPUT SC, V5301, P490, DOI 10.1007/978-3-540-87875-9_35
   Zhang HY, 2003, LECT NOTES COMPUT SC, V2681, P681
   Ziadi T, 2004, LECT NOTES COMPUT SC, V3014, P129
NR 36
TC 37
Z9 38
U1 0
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2013
VL 55
IS 3
BP 508
EP 524
DI 10.1016/j.infsof.2012.07.017
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 095XV
UT WOS:000315369200003
DA 2024-07-18
ER

PT J
AU Mooij, AJ
AF Mooij, Arjan J.
TI System integration by developing adapters using a database abstraction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model-driven development; Distributed systems; Adapter generation;
   Incremental view maintenance
AB Context: Large software systems are usually developed by integrating several smaller systems, which may have been developed independently. The integration of such systems often requires the development of a custom adapter (sometimes called mediator or glue logic) for bridging any technical incompatibilities between the systems.
   Adapter development often focuses on how to respond to events from the external interfaces, e.g., by applying data conversions and performing events on (other) external interfaces. Such an operational focus is closely related to an implementation of the adapter, but it makes it complicated to reason about complex adapters. For example, it requires a lot of effort to understand the relation that the adapter establishes between the systems to be integrated, and to avoid any internal inconsistencies.
   Objective: This article investigates a way to develop adapters in terms of a more abstract, model-based specification. Experts from the application domain should be able to reason about the specification, and the specification should contain enough details to generate an implementation.
   Method: Based on a few industrial adapters from the domain of Maritime Safety and Security, we study ways to specify them conveniently, and ways to generate them efficiently. On this basis, we identify an approach for developing adapters. In turn, this approach is validated using an additional set of adapters.
   Results: After abstracting from the details of the interface technologies, the studied adapters could be generated using techniques for incremental view maintenance. This requires an adapter specification in terms of database views to relate the main semantic concepts in the application domain.
   Conclusion: For developing adapters, it can be useful to model all interface technologies as database operations. Thus adapters can be specified using database views, which improve the conceptual understanding of the adapters. Publish/subscribe-style adapters can then be generated using incremental view maintenance. (C) 2012 Elsevier B.V. All rights reserved.
C1 Embedded Syst Inst, NL-5600 MB Eindhoven, Netherlands.
RP Mooij, AJ (corresponding author), Embedded Syst Inst, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM Arjan.Mooij@esi.nl
FU Dutch Ministry of Economic Affairs under the BSIK program
FX This research has been carried out as a part of the Poseidon project at
   Thales under the responsibilities of the Embedded Systems Institute
   (ESI). This project is partially supported by the Dutch Ministry of
   Economic Affairs under the BSIK program.
CR Benatallah B, 2005, LECT NOTES COMPUT SC, V3520, P415
   BONSANGUE M, 1998, S APPL COMP SAC 98 A, P159
   Bracciali A, 2005, J SYST SOFTWARE, V74, P45, DOI 10.1016/j.jss.2003.05.007
   Brogi A., 2004, Electronic Notes in Theoretical Computer Science, V105, P73, DOI DOI 10.1016/J.ENTCS.2004.05.007
   Dechering P., 1999, HICSS 99
   Dumas M, 2006, LECT NOTES COMPUT SC, V4102, P65
   Fagin R, 2009, LECT NOTES COMPUT SC, V5600, P198, DOI 10.1007/978-3-642-02463-4_12
   Fidler E, 2005, FEATURE INTERACTIONS IN TELECOMMUNICATIONS AND SOFTWARE SYSTEMS VIII, P12
   Gierds C, 2012, IEEE T SERV COMPUT, V5, P72, DOI 10.1109/TSC.2010.57
   González A, 2008, 2008 23RD IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS, PROCEEDINGS, P41, DOI 10.1109/ASEW.2008.4686292
   Green TJ, 2012, PROC INT CONF DATA, P330, DOI 10.1109/ICDE.2012.107
   Griffin T., 1995, SIGMOD Record, V24, P328, DOI 10.1145/568271.223849
   HARRISON JV, 1995, INFORM SOFTWARE TECH, V37, P479, DOI 10.1016/0950-5849(95)97292-G
   Hooman J, 2005, THEOR COMPUT SCI, V331, P291, DOI 10.1016/j.tcs.2004.09.020
   Huyn N., 1999, TECHNICAL REPORT
   International Telecommunication Union, 2001, M13711 ITUR
   Jörg T, 2010, LECT NOTES BUS INF, V41, P100
   La HJ, 2011, INFORM SOFTWARE TECH, V53, P1275, DOI 10.1016/j.infsof.2011.06.001
   Madhavan J, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P80
   Melliti T, 2008, LECT NOTES COMPUT SC, V4961, P146, DOI 10.1007/978-3-540-78743-3_12
   Mohania M., 1997, Database and Expert Systems Applications. 8th International Conference, DEXA '97. Proceedings, P551, DOI 10.1007/BFb0022063
   Noy NF, 2004, SIGMOD REC, V33, P65, DOI 10.1145/1041410.1041421
   Object Management Group, 2007, DAT DISTR SERV REAL
   Rahm E, 2001, VLDB J, V10, P334, DOI 10.1007/s007780100057
   RENNER S., 1996, DATA INTEROPERABILIT
   Thomsen C, 2005, LECT NOTES COMPUT SC, V3589, P74, DOI 10.1007/11546849_8
   van Hee KM, 2009, FUND INFORM, V93, P171, DOI 10.3233/FI-2009-95
   Yue ZG, 1997, PROC INT CONF DATA, P289, DOI 10.1109/ICDE.1997.581810
   Zhuge Y, 1998, DISTRIB PARALLEL DAT, V6, P7, DOI 10.1023/A:1008698814840
NR 29
TC 0
Z9 0
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2013
VL 55
IS 2
BP 357
EP 364
DI 10.1016/j.infsof.2012.08.015
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 060EO
UT WOS:000312759500012
DA 2024-07-18
ER

PT J
AU Omerovic, A
   Solhaug, B
   Stolen, K
AF Omerovic, Aida
   Solhaug, Bjornar
   Stolen, Ketil
TI Assessing practical usefulness and performance of the PREDIQT method: An
   industrial case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Quality prediction; System architectural design; Change impact analysis;
   Modeling
ID BAYESIAN NETWORKS; PREDICTION
AB Context: When adapting a system to new usage patterns, processes or technologies, it is necessary to foresee the implications of the architectural design changes on system quality. Examination of quality outcomes through implementation of the different architectural design alternatives is often unfeasible. We have developed a method called PREDIQT with the aim to facilitate model-based prediction of impacts of architectural design changes on system quality. A recent case study indicated feasibility of the PREDIQT method when applied on a real-life industrial system. The promising results encouraged further and more structured evaluation of PREDIQT.
   Objective: This paper reports on the experiences from applying the PREDIQT method in a second and more recent case study - on a real-life industrial system from another domain and with different system characteristics, as compared to the previous case study. The objective was to evaluate the method in a fully realistic setting and with respect to carefully defined criteria.
   Method: The case study conducted the first two phases of PREDIQT in their entirety, while the last (third) phase was partially covered. In addition, the method was assessed through a thought experiment-based evaluation of predictions and a postmortem review. All prediction models were developed during the analysis and the entire target system was analyzed in a fully realistic setting.
   Results: The evaluation argues that the prediction models are sufficiently expressive and comprehensible. It is furthermore argued that PREDIQT: facilitates predictions such that informed decisions can be made; is cost-effective; and facilitates knowledge management.
   Conclusion: The experiences and results obtained indicate that the PREDIQT method can be carried out with limited resources, on a real-life system, and result in useful predictions. Furthermore, the observations indicate that the method, particularly its process, facilitates understanding of the system architecture and its quality characteristics, and contributes to structured knowledge management. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Omerovic, Aida; Solhaug, Bjornar; Stolen, Ketil] SINTEF ICT, N-0314 Oslo, Norway.
   [Stolen, Ketil] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
C3 SINTEF; University of Oslo
RP Omerovic, A (corresponding author), SINTEF ICT, POB 124, N-0314 Oslo, Norway.
EM aida.omerovic@sintef.no
FU Research Council of Norway [180052/S10]; European Commission
FX This work has been conducted as a part of the DIGIT (180052/S10) project
   funded by the Research Council of Norway, as well as a part of the
   SecureChange project and the NESSoS network of excellence both funded by
   the European Commission within the 7th Framework Programme.
CR Basili V.R., 1992, TR9296 U MARYLAND
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Byrnes C., 2007, 070094 MITRE CORP
   Campbell D.T., 2001, Experimental and quasiexperimental designs for generalized causal inference
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Dobrica L, 2002, IEEE T SOFTWARE ENG, V28, P638, DOI 10.1109/TSE.2002.1019479
   Ebert C., 2004, BEST PRACTICES SOFTW
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   HECKERMAN D, 1995, COMMUN ACM, V38, P24, DOI 10.1145/203330.203334
   International Organisation for Standardisation, 2004, 9126 ISOIEC
   Kazman R., 1998, 4 IEEE INT C ENG COM
   Kazman R., 1999, INT C SOFTW ENG, P54
   Mattsson M, 2006, 2 INT C QUAL SOFTW A
   Neil M, 2000, KNOWL ENG REV, V15, P257, DOI 10.1017/S0269888900003039
   Omerovic A., 2010, A13339 SINTEF
   Omerovic A., 2011, A17562 SINTEF
   Omerovic A., 2011, INT J ADV SYSTEMS ME, V4, P55
   Omerovic A., 2011, INT C ADV SYST SIM, P71
   Omerovic A., 2011, IEEE INT C SEC SOFTW, P137
   Omerovic A., 2010, INTERVAL BASED UNCER
   Omerovic A., 2012, THESIS U OSLO
   Omerovic A, 2010, LECT NOTES COMPUT SC, V5965, P231, DOI 10.1007/978-3-642-11747-3_18
   Omerovic A, 2009, 2009 THIRD IEEE INTERNATIONAL CONFERENCE ON SECURE SOFTWARE INTEGRATION AND RELIABILITY IMPROVEMENT, PROCEEDINGS, P447, DOI 10.1109/SSIRI.2009.36
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Yin Robert K., 2002, APPL SOCIAL RES METH, V5
NR 27
TC 3
Z9 3
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2012
VL 54
IS 12
BP 1377
EP 1395
DI 10.1016/j.infsof.2012.07.006
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 015HE
UT WOS:000309436200007
DA 2024-07-18
ER

PT J
AU Wendler, R
AF Wendler, Roy
TI The maturity of maturity model research: A systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Maturity models; Software management; Design-oriented research;
   Systematic mapping study
ID MANAGEMENT; CAPABILITY; SCIENCE; DESIGN
AB Context: Maturity models offer organizations a simple but effective possibility to measure the quality of their processes. Emerged out of software engineering, the application fields have widened and maturity model research is becoming more important. During the last two decades the publication amount steadily rose as well. Until today, no studies have been available summarizing the activities and results of the field of maturity model research.
   Objective: The objective of this paper is to structure and analyze the available literature of the field of maturity model research to identify the state-of-the-art research as well as research gaps.
   Method: A systematic mapping study was conducted. It included relevant publications of journals and IS conferences. Mapping studies are a suitable method for structuring a broad research field concerning research questions about contents, methods, and trends in the available publications.
   Results: The mapping of 237 articles showed that current maturity model research is applicable to more than 20 domains, heavily dominated by software development and software engineering. The study revealed that most publications deal with the development of maturity models and empirical studies. Theoretical reflective publications are scarce. Furthermore, the relation between conceptual and design-oriented maturity model development was analyzed, indicating that there is still a gap in evaluating and validating developed maturity models. Finally, a comprehensive research framework was derived from the study results and implications for further research are given.
   Conclusion: The mapping study delivers the first systematic summary of maturity model research. The categorization of available publications helps researchers gain an overview of the state-of-the-art research and current research gaps. The proposed research framework supports researchers categorizing their own projects. In addition, practitioners planning to use a maturity model may use the study as starting point to identify which maturity models are suitable for their domain and where limitations exist. (C) 2012 Elsevier B.V. All rights reserved.
C1 Tech Univ Dresden, Fac Business Management & Econ, D-01062 Dresden, Germany.
C3 Technische Universitat Dresden
RP Wendler, R (corresponding author), Tech Univ Dresden, Fac Business Management & Econ, Helmholtzstr 10, D-01062 Dresden, Germany.
EM Roy.Wendler@tu-dresden.de
CR Ahlemann F., 2005, 01 ISPRI FORSCH INF
   Alavi M., 1992, Journal of Management Information Systems, V8, P45
   [Anonymous], SUFFERING, DOI DOI 10.1093/OED/3962471040
   [Anonymous], 2010, CMMI DEV VERS 1 3
   [Anonymous], 1931, EC CONTROL QUALITY M
   [Anonymous], 2008, 12 INT C EV ASS SOFT
   Becker J, 2009, BUS INFORM SYST ENG+, V1, P213, DOI 10.1007/s12599-009-0044-5
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Christiansen S., 2010, Z WIRTSCHAFTLICH FAB, V105, P344
   Cooke-Davies T., 2007, WILEY GUIDE PROJECT, P290
   Crosby P.B., 1979, QUALITY IS FREE ART
   Davis G. B., 2005, BLACKWELL ENCY MANAG, V7
   Fettke P, 2006, WIRTSCHAFTSINF, V48, P257, DOI 10.1007/s11576-006-0057-3
   Gottschalk P, 2009, IND MANAGE DATA SYST, V109, P1264, DOI 10.1108/02635570911002315
   Graning A., 2010, AMCIS 2010 P
   Hansen B, 2004, INT J INFORM MANAGE, V24, P457, DOI 10.1016/j.ijinfomgt.2004.08.007
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Jokela T, 2006, BEHAV INFORM TECHNOL, V25, P263, DOI 10.1080/01449290500168079
   Khatibian Neda, 2010, Business Strategy Series, V11, P54, DOI 10.1108/17515631011013113
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Klimko Gabor., 2001, P 2 EUROPEAN C KNOWL
   Kneuper R., 2007, 37 JAHR GES INF EV I, P24
   Kohoutek HJ, 1996, QUAL RELIAB ENG INT, V12, P147, DOI 10.1002/(SICI)1099-1638(199605)12:3<147::AID-QRE14>3.0.CO;2-R
   Lyytinen K., 1991, Scandinavian Journal of Information Systems, V3, P87
   MARCH ST, 1995, DECIS SUPPORT SYST, V15, P251, DOI 10.1016/0167-9236(94)00041-2
   Marciniak JJ, 2002, ENCY SOFTWARE ENG
   McBride T, 2010, J SOFTW MAINT EVOL-R, V22, P243, DOI 10.1002/spip.440
   NOLAN RL, 1979, HARVARD BUS REV, V57, P115
   Palvia P., 2004, COMMUNICATIONS AIS, V14, P526, DOI DOI 10.17705/1CAIS.01424
   Paulk M., 1993, TECHNICAL REPORT
   Pullen W., 2007, Perform Improv, V46, P9, DOI [DOI 10.1002/PFI.119, 10.1002/pfi.119, DOI 10.1002/PFI.119..ORG/9488/BB900B4AD4FA07D70A6EA89637777DD85AC4.PD]
   Saleh Y, 2005, J ENTERP INF MANAG, V18, P47, DOI 10.1108/17410390510571484
   SALIPANTE P, 1982, RES ORGAN BEHAV, V4, P321
   Staples M, 2008, INFORM SOFTWARE TECH, V50, P605, DOI 10.1016/j.infsof.2007.07.003
   Webster J, 2002, MIS QUART, V26, pXIII
NR 37
TC 318
Z9 356
U1 16
U2 144
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2012
VL 54
IS 12
BP 1317
EP 1339
DI 10.1016/j.infsof.2012.07.007
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 015HE
UT WOS:000309436200003
DA 2024-07-18
ER

PT J
AU Strasunskas, D
   Hakkarainen, SE
AF Strasunskas, Darijus
   Hakkarainen, Sari E.
TI Domain model-driven software engineering: A method for discovery of
   dependency links
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Information systems development; Domain model-based information system
   design; Dependency management; Software engineering; Randomized
   experiment
ID REQUIREMENTS TRACEABILITY; ONTOLOGY; COORDINATION; RECOVERY
AB Context: Dependency management often suffers from labor intensity and complexity in creating and maintaining the dependency relations in practice. This is even more critical in a distributed development, in which developers are geographically distributed and a wide variety of tools is used. In those settings, different interpretations of software requirements or usage of different terminologies make it challenging to predict the change impact.
   Objective: is (a) to describe a method facilitating change management in geographically distributed software engineering by effective discovery and establishment of dependency links using domain models; (b) to evaluate the effectiveness of the proposed method.
   Method: A domain model, providing a common reference point, is used to manage development objects and to automatically support dependency discovery. We propose to associate (annotate) development objects with the concepts from the model. These associations are used to compute dependency among development objects, and are stepwise refined to direct dependency links (i.e. enabling product traceability). To evaluate the method, we conducted a laboratory-based randomized experiment on two real cases. Six participants were using an implemented prototype and two comparable tools to perform simulated tasks.
   Results: In the paper we elaborate on the proposed method discussing its functional steps. Results from the experiment show that the method can be effectively used to assist in discovery of dependency links. Users have discovered on average fourteen percent more dependency links than by using the comparable tools.
   Conclusions: The proposed method advocates the use of domain models throughout the whole development life-cycle and is apt to facilitate multi-site software engineering. The experimental study and results suggest that the method is effective in the discovery of dependencies among development objects. (c) 2012 Elsevier B.V. All rights reserved.
C1 [Strasunskas, Darijus] Norwegian Univ Sci & Technol, Dept Ind Econ & Technol Management, Trondheim, Norway.
C3 Norwegian University of Science & Technology (NTNU)
RP Strasunskas, D (corresponding author), Norwegian Univ Sci & Technol, Dept Ind Econ & Technol Management, Trondheim, Norway.
EM darijuss@gmail.com
CR [Anonymous], LNCS
   [Anonymous], P 7 INT WORKSH REQ E
   [Anonymous], LNCS
   [Anonymous], P 4 KKIO C TARN PODG
   [Anonymous], P EUR MED MIDDL E C
   [Anonymous], P 14 ANN IEEE INT C
   [Anonymous], DOMAIN ONTOLOGY CENT
   [Anonymous], P 3 INT WORKSH SEM W
   [Anonymous], 2008, ECMDA TRACEABILITY W
   [Anonymous], P IIWAS2008
   [Anonymous], LECT NOTES INFORM P
   [Anonymous], ONTOLOGIES SOFTWARE
   [Anonymous], 1999, LECT NOTES COMPUTER
   [Anonymous], PERSPECTIVES SOFTWAR
   [Anonymous], INFORM SYSTEMS ENG I
   [Anonymous], P 1 INT WORKSH TRAC
   [Anonymous], LNCS
   [Anonymous], P 17 INT C SOFTW ENG
   Antoniol G, 2001, SCI COMPUT PROGRAM, V40, P213, DOI 10.1016/S0167-6423(01)00016-8
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Briand LC, 2009, INFORM SOFTWARE TECH, V51, P512, DOI 10.1016/j.infsof.2008.06.002
   Brockmans S, 2004, LECT NOTES COMPUT SC, V3298, P198
   Campbell, 2002, EXPT QUASIEXPERIMENT
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Cerbah F, 2001, DATA KNOWL ENG, V38, P31, DOI 10.1016/S0169-023X(01)00015-5
   Cleland-Huang J, 2007, COMPUTER, V40, P27, DOI 10.1109/MC.2007.195
   Damian D. E., 2003, Requirements Engineering, V8, P149, DOI 10.1007/s00766-003-0173-1
   de Souza CRB, 2007, LECT NOTES COMPUT SC, V4716, P182
   Dijkstra EW., 1959, NUMER MATH, V1, P269, DOI [10.1007/BF01386390, DOI 10.1007/BF01386390]
   Domges R, 1998, COMMUN ACM, V41, P54, DOI 10.1145/290133.290149
   Egyed A, 2005, INT J SOFTW ENG KNOW, V15, P783, DOI 10.1142/S0218194005002464
   Egyed A, 2006, VALUE-BASED SOFTWARE ENGINEERING, P287, DOI 10.1007/3-540-29263-2_14
   Espinosa JA, 2007, J MANAGE INFORM SYST, V24, P135, DOI 10.2753/MIS0742-1222240104
   Fellbaum C., 1998, WORDNET ELECT LEXICA, DOI DOI 10.7551/MITPRESS/7287.001.0001
   Formica A, 2008, KNOWL-BASED SYST, V21, P80, DOI 10.1016/j.knosys.2007.02.001
   Guarino N, 1998, FR ART INT, V46, P3
   Halpin T., 2001, INFORM MODELING RELA
   Happel HJ, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P109, DOI 10.1007/978-3-642-10294-3_6
   Her JS, 2010, INFORM SOFTWARE TECH, V52, P845, DOI 10.1016/j.infsof.2010.03.012
   IEEE, 1990, IEEE STD 610 12 1990
   Jirapanthong W., 2005, Proceedings. 12th Asia-Pacific Software Engineering Conference
   Jureta IJ, 2009, APPL ONTOL, V4, P169, DOI 10.3233/AO-2009-0069
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Olivé A, 2005, LECT NOTES COMPUT SC, V3520, P1
   Pigoski TM., 1996, Practical Software Maintenance: Best Practices for Managing Your Software Investment
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Reinhartz-Berger I, 2005, LECT NOTES COMPUT SC, V3770, P461, DOI 10.1007/11568346_50
   Schwarz H, 2010, SOFTW SYST MODEL, V9, P473, DOI 10.1007/s10270-009-0141-4
   Spanoudakis G, 2004, J SYST SOFTWARE, V72, P105, DOI 10.1016/S0164-1212(03)00242-5
   Strasunskas D, 2006, LECT NOTES COMPUT SC, V4275, P625
   Su XM, 2006, DATA KNOWL ENG, V58, P47, DOI 10.1016/j.datak.2005.05.012
   Taxén L, 2006, INFORM SOFTWARE TECH, V48, P767, DOI 10.1016/j.infsof.2006.01.007
   von Knethen A, 2002, PROC IEEE INT CONF S, P482, DOI 10.1109/ICSM.2002.1167808
   Wongthongtham P, 2006, J SYST ARCHITECT, V52, P640, DOI 10.1016/j.sysarc.2006.06.008
   Wongthongtham P, 2009, IEEE T KNOWL DATA EN, V21, P1205, DOI 10.1109/TKDE.2008.209
   Zhang Y, 2008, IET SOFTW, V2, P185, DOI 10.1049/iet-sen:20070062
   Zhao YJ, 2009, IEEE T SERV COMPUT, V2, P303, DOI 10.1109/TSC.2009.20
NR 57
TC 6
Z9 6
U1 1
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2012
VL 54
IS 11
BP 1239
EP 1249
DI 10.1016/j.infsof.2012.06.004
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 000LJ
UT WOS:000308387500007
DA 2024-07-18
ER

PT J
AU Angelov, S
   Grefen, P
   Greefhorst, D
AF Angelov, Samuil
   Grefen, Paul
   Greefhorst, Danny
TI A framework for analysis and design of software reference architectures
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software reference architecture; Software domain architecture; Software
   architecture design; Software product line architecture
ID MANAGEMENT-SYSTEMS; INDUSTRY
AB Context: A software reference architecture is a generic architecture for a class of systems that is used as a foundation for the design of concrete architectures from this class. The generic nature of reference architectures leads to a less defined architecture design and application contexts, which makes the architecture goal definition and architecture design non-trivial steps, rooted in uncertainty.
   Objective: The paper presents a structured and comprehensive study on the congruence between context, goals, and design of software reference architectures. It proposes a tool for the design of congruent reference architectures and for the analysis of the level of congruence of existing reference architectures.
   Method: We define a framework for congruent reference architectures. The framework is based on state of the art results from literature and practice. We validate our framework and its quality as analytical tool by applying it for the analysis of 24 reference architectures. The conclusions from our analysis are compared to the opinions of experts on these reference architectures documented in literature and dedicated communication.
   Results: Our framework consists of a multi-dimensional classification space and of five types of reference architectures that are formed by combining specific values from the multi-dimensional classification space. Reference architectures that can be classified in one of these types have better chances to become a success. The validation of our framework confirms its quality as a tool for the analysis of the congruence of software reference architectures.
   Conclusion: This paper facilitates software architects and scientists in the inception, design, and application of congruent software reference architectures. The application of the tool improves the chance for success of a reference architecture. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Angelov, Samuil] Eindhoven Univ Technol, Informat Syst Grp, Sch Ind Engn, NL-5600 MB Eindhoven, Netherlands.
   [Greefhorst, Danny] ArchiXL, NL-3812 PM Amersfoort, Netherlands.
C3 Eindhoven University of Technology
RP Angelov, S (corresponding author), Eindhoven Univ Technol, Informat Syst Grp, Sch Ind Engn, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM s.angelov@tue.nl; p.w.p.j.grefen@tue.nl; dgreefhorst@archixl.nl
RI Grefen, Paul W.P.J./C-2174-2014
OI Greefhorst, Danny/0000-0002-0967-2917
CR Ahmed F, 2008, INFORM SOFTWARE TECH, V50, P1098, DOI 10.1016/j.infsof.2007.10.013
   ANASTASOPOULOS M, 2000, 03800E IESE
   Angelov S., 2009, SOFTW ARCH 2009 EUR, P141
   Angelov S, 2008, J SYST SOFTWARE, V81, P1816, DOI 10.1016/j.jss.2008.02.023
   Angelov S, 2008, LECT NOTES COMPUT SC, V5292, P225, DOI 10.1007/978-3-540-88030-1_17
   [Anonymous], 1996, PATTERN ORIENTED SOF
   [Anonymous], 2000, SOFTWARE ARCHITECTUR
   [Anonymous], 1999, Creating Computer Simulation Systems: an Introduction to the High Level Architecture
   [Anonymous], 2000, RATIONAL UNIFIED PRO
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   AUTOSAR, 2006, LAY SOFTW ARCH VERS
   Avgeriou P., 2005, 10th European conference on pattern languages of programs (EuroPlop 2005), P1
   BARBACCI M, 2003, CMUSEI2003TN012
   Barroca L., 2000, SOFTWARE ARCHITECTUR, P1
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bayer J., 2003, IESEWP26
   BRATTHALL L, 1999, P 2 NORD SOFTW ARCH
   Brown E, 2005, EDUC TECHNOL SOC, V8, P77
   CLEMENTS P., 2002, EVALUATING SOFTWARE
   Dahmann J., 1998, SIMULATION C P, P797
   Elzinga T., 2009, CORA MODEL
   Fattah A., 2009, ENT REF ARCH ADDR KE
   Fessler J., 2011, 271 GMSEC GODD SPAC
   Fischer L., 2004, The Workflow Handbook 2004
   Gallagher B.P., 2000, CMUSEI2000TN007
   Gorton I., 2006, ESSENTIAL SOFTWARE A
   Greefhorst D., 1999, SOFTWARE RELEASE MAG, V2
   Greefhorst D., 2009, INFORMATIE, P8
   GREEFHORST D, 2006, ACHMEA STREAMLINES A
   Greefhorst D., 2008, LAND ARCH C 2008 NIE
   Greefhorst D, 2006, INFORM SYST FRONT, V8, P103, DOI 10.1007/s10796-006-7975-x
   Grefen P, 1998, DATA KNOWL ENG, V27, P31, DOI 10.1016/S0169-023X(97)00057-8
   Grefen P., 2010, INTRO CORPORATE INFO
   Grosskurth A, 2005, PROC IEEE INT CONF S, P661
   Hassan AE, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P150, DOI 10.1109/WCRE.2000.891462
   Hayes-Roth F., 1994, ARCHITECTURE BASED A
   Henning M., 2006, RISE FALL CORBA QUEU, V4
   Hollingsworth D., 2008, TC001003 WORKFL MAN
   Hura G.S., 2001, Data and computer communications: Networking and internetworking
   ICTU Kenniscentrum and Architecture department, 2007, NORA EXPL BRIEF EXPL
   Janota M., 2008, LEROTRSPL200802 U LI
   KIM T, 2008, P 8 IEEE INT C COMP, P790
   Klein GO, 2007, STUD HEALTH TECHNOL, V129, P478
   Maly K, 2000, LECT NOTES COMPUT SC, V1923, P168
   McGovern James., 2003, A Practical Guide to Enterprise Architecture
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Meier J.D., 2008, Application Architecture Guide 2nd Edition (Patterns Practices)
   Metcalfe Mike., 2006, READING CRITICALLY U
   METTALA E, 1992, CMUSEI92SR009
   Microsoft, 2002, APPL ARCH NET DES AP
   Modeling and Simulation Coordination Office, 2003, DOD INT IEEE 1516 20
   Muller G., 2008, A Reference Architecture Primer, P0
   Norta A., 2007, THESIS EINDHOVEN U T
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   *OATH, 2007, OATH REF ARCH REL 2
   OBJECT MANAGEMENT GROUP, 2004, COMM OBJ REQ BROK AR
   Olumofin FG, 2007, INFORM SOFTWARE TECH, V49, P309, DOI 10.1016/j.infsof.2006.05.003
   Paulsen B., 2004, PANDOORA APPL ACCELE
   Paulsen B., 2003, PANDOORA PRACTITIONE
   Pinzger M, 2004, LECT NOTES COMPUT SC, V3014, P332
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Reed Paul., 2002, Reference Architecture: The best of best practices
   Sauve N., 2008, THESIS EINDHOVEN U T
   SOWA JF, 1992, IBM SYST J, V31, P590, DOI 10.1147/sj.313.0590
   SPARC-DBMS Study Group, 1975, B ACM SIGMOD, V7, P1
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   TRACZ W, 1995, ACM SIGSOFT SOFTWARE, V20, P49
   Tracz W., 1994, ACM SIGSOFT SOFTWARE, V19, P52
   TSICHRITZIS D, 1978, INFORM SYST, V3, P173, DOI 10.1016/0306-4379(78)90001-7
   Urdaneta G, 2007, COMPUT IND, V58, P35, DOI 10.1016/j.compind.2006.04.020
   Wikipedia, 2010, ANSI SPARC ARCH
   WU H, 2002, THESIS EINDHOVEN U T
   ZHU L, 2007, LIXI VALUATION REFER
   Zhu LZ, 2008, 2008 INTERNATIONAL WORKSHOP ON INFORMATION TECHNOLOGY AND SECURITY, P24, DOI 10.1109/EDOC.2008.14
   ZIMMERMANN H, 1980, IEEE T COMMUN, V28, P425, DOI 10.1109/TCOM.1980.1094702
   [No title captured]
NR 76
TC 84
Z9 90
U1 2
U2 23
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2012
VL 54
IS 4
BP 417
EP 431
DI 10.1016/j.infsof.2011.11.009
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 900AN
UT WOS:000300859100006
DA 2024-07-18
ER

PT J
AU García, J
   Amescua, A
   Sánchez, MI
   Bermón, L
AF Garcia, Javier
   Amescua, Antonio
   Sanchez, Maria-Isabel
   Bermon, Leonardo
TI Design guidelines for software processes knowledge repository
   development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Software process technology; Knowledge management;
   Agile development; Web 2.0; Wiki
ID MANAGEMENT; INTENTION
AB Context: Staff turnover in organizations is an important issue that should be taken into account mainly for two reasons:
   Context:
   1. Employees carry an organization's knowledge in their heads and take it with them wherever they go
   2. Knowledge accessibility is limited to the amount of knowledge employees want to share
   Objective: The aim of this work is to provide a set of guidelines to develop knowledge-based Process Asset Libraries (PAL) to store software engineering best practices, implemented as a wiki. Method: Fieldwork was carried out in a 2-year training course in agile development. This was validated in two phases (with and without PAL), which were subdivided into two stages: Training and Project.
   Results: The study demonstrates that, on the one hand, the learning process can be facilitated using PAL to transfer software process knowledge, and on the other hand, products were developed by junior software engineers with a greater degree of independence.
   Conclusion: PAL, as a knowledge repository, helps software engineers to learn about development processes and improves the use of agile processes. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Bermon, Leonardo] Univ Nacl Colombia, Dept Comp Sci, Manizales, Colombia.
   [Garcia, Javier; Amescua, Antonio; Sanchez, Maria-Isabel] Univ Carlos III Madrid, Dept Comp Sci, Software Engn Lab, Leganes 28911, Spain.
C3 Universidad Nacional de Colombia; Universidad Carlos III de Madrid
RP Bermón, L (corresponding author), Univ Nacl Colombia, Dept Comp Sci, Campus Nubia, Manizales, Colombia.
EM jgarciag@inf.uc3m.es; amescua@inf.uc3m.es; misanche@inf.uc3m.es;
   lbermona@unal.edu.co
OI Amescua, Antonio/0000-0003-4355-6896; SANCHEZ-SEGURA,
   MARIA-ISABEL/0000-0002-2339-7851; GARCIA GUZMAN,
   JAVIER/0000-0001-6039-795X
FU Spanish Ministry of Science and Technology [TIN2009-10700]; Spanish
   Ministry of Industry [PFT-430000-2008-54, PPT-430000-2009-0012,
   PFT-430000-2009-0013]
FX This work has been partially funded by the Spanish Ministry of Science
   and Technology through the TIN2009-10700 Project and the Spanish
   Ministry of Industry through Projects PFT-430000-2008-54,
   PPT-430000-2009-0012 and PFT-430000-2009-0013.
CR ADLER R, 2008, KNOWLEDGE MANAGEMENT, P143
   AGUIAR A, 2005, P 2005 INT S WIK SAN, P67
   Alshayeb M, 2006, INFORM SOFTWARE TECH, V48, P1068, DOI 10.1016/j.infsof.2006.01.005
   [Anonymous], P 5 INT C PROC SOFTW
   [Anonymous], 2007, Knowledge Management Systems: Information and Communication Technologies for Knowledge Management
   Aurum A, 2008, INFORM SOFTWARE TECH, V50, P511, DOI 10.1016/j.infsof.2007.05.005
   Baskerville R., 2006, Knowledge Management Research & Practice, V4, P83, DOI 10.1057/palgrave.kmrp.8500090
   Bjornson FO, 2008, INFORM SOFTWARE TECH, V50, P1055, DOI 10.1016/j.infsof.2008.03.006
   BOEHM B, 2003, P XP AG UN 2003 NEW, P1
   Burstein F., 2003, HDB KNOWLEDGE MANAGE, P207
   Calvo-Manzano JA, 2008, COMM COM INF SC, V16, P25
   Chau Thomas., 2005, Proceedings of the 3rd international conference on Knowledge capture, P185, DOI [DOI 10.1145/1088622.1088660, 10.1145/2460296.2460332]
   Davies J, 2005, BT TECHNOL J, V23, P175, DOI 10.1007/s10550-005-0040-3
   DERNIAME JC, 2004, SPT SOFTWARE PROCESS, V5, P15
   Edwards J. S., 2005, Journal of Knowledge Management, V9, P113, DOI 10.1108/13673270510583009
   FOGLE S, 2001, IEEE SOFTWARE    SEP
   FUGGETTA A, 2005, SOFTWARE ENG, V2, P313
   GROARKE B, 2006, RUNNING SEPG SSC SAN
   Grudin J., 2006, P 39 ANN HAW INT C S, P57
   HASAN H, 2007, INT C MOB UB COMP SY, P35, DOI DOI 10.1109/UBICOMM.2007.36
   Humphrey W., 2005, TSP LEADING DEV TEAM
   HYUNGJUN A, 2005, DECIS SUPPORT SYST, V39, P563
   Jalote PM., 2002, SOFTWARE PROJECT MAN
   Jones C., 2009, Software Engineering Best Practices, V1
   Kelecic G, 2005, ConTEL 2005: Proceedings of the 8th International Conference on Telecommunications, Vols 1 and 2, P479, DOI 10.1109/CONTEL.2005.185934
   KLAMMA R, 2000, 8 EUR C INF SYST ECI, P364
   KORTHAUS A, 2008, INT J HIGH PERFORM C, V6, P66
   Kurniawati F, 2006, INFORM SOFTWARE TECH, V48, P566, DOI 10.1016/j.infsof.2005.06.002
   Layman L, 2006, INFORM SOFTWARE TECH, V48, P781, DOI 10.1016/j.infsof.2006.01.004
   Louridas P, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.62
   Sussy BL, 2008, STUD COMPUT INTELL, V131, P147
   Majchrzak A., 2006, CORPORATE WIKI USERS, P99
   Melnik G, 2005, PROC INT CONF SOFTW, P481
   Mentzas G., 2001, Journal of Knowledge Management, V5, P94, DOI 10.1108/13673270110384446
   Mohan V. V., 2008, WEBOLOGY, V5
   Mullick N, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P203, DOI 10.1109/ICGSE.2006.261234
   Murugesan San, 2007, IT Professional, V9, P34, DOI 10.1109/MITP.2007.78
   NEJMEH BA, 2006, ADV COMPUTERS
   Park SY, 2009, EDUC TECHNOL SOC, V12, P150
   Parker K., 2007, Interdisciplinary Journal of Knowledge and Learning Objects
   Radziwill NM, 2004, P SOC PHOTO-OPT INS, V5496, P609, DOI 10.1117/12.551897
   Raffo D. M., 2008, CMUSEI2008TR002
   RAS E, 2009, SOFTWARE ORG PLATFOR, P56
   RIECHERT T, 2009, LEVERAGING SEMANTIC, P7
   Roca JC, 2006, INT J HUM-COMPUT ST, V64, P683, DOI 10.1016/j.ijhcs.2006.01.003
   RUIZGONZALEZ F, 2004, EUROPEAN J INFORM PR, P3
   SCHAFFERT S, 2006, 1 WORKSH SEMWIKI2006
   SCHERP A, 2009, 5 C PROF KNOWL MAN S, P25
   SCORTA I, 2009, WSEAS T COMPUTERS, V8, P459
   Sharp H, 2009, INFORM SOFTWARE TECH, V51, P219, DOI 10.1016/j.infsof.2008.05.009
   SILVEIRA C, 2005, WIKI BASED REQUIREME, P42
   *SOFTW ENG I, 2006, CMUSEI2006TR008
   SOLES C, 2009, SPATIAL HYPERTEXT WI
   SOLIS C, 2009, SPATIAL HYPERTEXT WI, P36
   *SWEBOK, 2004, IEEE COMP SOC PROF P
   Turner R., 2007, J DEFENSE SOFTWARE E, P11
   WARD J, 2004, P AUSTR SOFTW ENG C
   Wongboonsin J, 2008, 2008 INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER THEORY AND ENGINEERING, P467, DOI 10.1109/ICACTE.2008.155
   Xu RZ, 2005, Fifth International Conference on Computer and Information Technology - Proceedings, P911, DOI 10.1109/CIT.2005.164
   Zack MH, 1999, SLOAN MANAGE REV, V40, P45
NR 60
TC 39
Z9 45
U1 0
U2 29
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2011
VL 53
IS 8
SI SI
BP 834
EP 850
DI 10.1016/j.infsof.2011.03.002
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 784RQ
UT WOS:000292176300003
DA 2024-07-18
ER

PT J
AU Grolinger, K
   Capretz, MAM
AF Grolinger, Katarina
   Capretz, Miriam A. M.
TI A unit test approach for database schema evolution
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Database schema evolution; Database testing; Unit testing; Mock objects
AB Context: The constant changes in today's business requirements demand continuous database revisions. Hence, database structures, not unlike software applications, deteriorate during their lifespan and thus require refactoring in order to achieve a longer life span. Although unit tests support changes to application programs and refactoring, there is currently a lack of testing strategies for database schema evolution.
   Objective: This work examines the challenges for database schema evolution and explores the possibility of using various testing strategies to assist with schema evolution. Specifically, the work proposes a novel unit test approach for the application code that accesses databases with the objective of proactively evaluating the code against the altered database.
   Method: The approach was validated through the implementation of a testing framework in conjunction with a sample application and a relatively simple database schema. Although the database schema in this study was simple, it was nevertheless able to demonstrate the advantages of the proposed approach. Results: After changes in the database schema, the proposed approach found all SELECT statements as well as the majority of other statements requiring modifications in the application code. Due to its efficiency with SELECT statements, the proposed approach is expected to be more successful with database warehouse applications where SELECT statements are dominant.
   Conclusion: The unit test approach that accesses databases has proven to be successful in evaluating the application code against the evolved database. In particular, the approach is simple and straightforward to implement, which makes it easily adoptable in practice. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Grolinger, Katarina; Capretz, Miriam A. M.] Univ Western Ontario, Dept Elect & Comp Engn, Fac Engn, London, ON N6A 5B9, Canada.
C3 Western University (University of Western Ontario)
RP Capretz, MAM (corresponding author), Univ Western Ontario, Dept Elect & Comp Engn, Fac Engn, London, ON N6A 5B9, Canada.
EM kgrolinger@uwo.ca; mcapretz@uwo.ca
RI Grolinger, Katarina/ABB-3261-2021; Capretz, Miriam/G-2362-2014
OI Grolinger, Katarina/0000-0003-0062-8212; 
CR Ambler SW, 2006, ADD-WES SIGNAT SER, P1
   [Anonymous], UTPLSQL
   [Anonymous], TSQLUNIT
   Bhat T., 2006, Proceedings of the 2006 ACM/IEEE International Symposium on Empirical Software Engineering (ISESE '06), P356, DOI [DOI 10.1145/1159733.1159787, 10.1145/1159733.1159787]
   Chays D., 2000, Software Engineering Notes, V25, P147, DOI 10.1145/347636.348954
   Chays D., 2008, DBTEST, P6
   CHRISTENSEN CA, 2006, UNIT TEST FRAMEWORK
   Christensen CA, 2006, INT DATABASE ENG APP, P11
   Curino CA, 2008, PROC VLDB ENDOW, V1, P761, DOI 10.14778/1453856.1453939
   Curino CA, 2009, PROC INT CONF DATA, P1523, DOI 10.1109/ICDE.2009.46
   D82, DB2 CHANGE MANAGEMEN
   DataFactory, DATAFACTORY
   de Vries D, 2007, INFORM SOFTWARE TECH, V49, P1061, DOI 10.1016/j.infsof.2006.11.001
   Deng YT, 2005, PROC INT CONF SOFTW, P78, DOI 10.1145/1062455.1062486
   Draheim D, 2004, 16TH INTERNATIONAL CONFERENCE ON SCIENTIFIC AND STATISTICAL DATABASE MANAGEMENT, PROCEEDINGS, P341
   Embarcadero, EMB CHANG MAN
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Hamill Paul, 2004, Unit Test Frameworks: Tools for High-quality Software Development
   Karahasanovic A, 2001, IEEE SYMPOSIA ON HUMAN-CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P358, DOI 10.1109/HCC.2001.995292
   Lippert M., 2006, Refactoring in large software projects: performing complex restructurings successfully
   Mackinnon Tim., 2001, ENDO TESTING UNIT TE, P287
   Maule A, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P451, DOI 10.1145/1368088.1368150
   Maximilien EM, 2003, PROC INT CONF SOFTW, P564, DOI 10.1109/ICSE.2003.1201238
   MySQL, MYSQL WORKB SCHEM CH
   Oracle, OR CHANG MAN PACK
   Papastefanatos G, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P326
   Williams Laurie, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P81, DOI 10.1109/ISSRE.2009.32
   WILLMOR D, 2006, P 28 INT C SOFTW ENG, P102
NR 28
TC 1
Z9 1
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2011
VL 53
IS 2
BP 159
EP 170
DI 10.1016/j.infsof.2010.10.002
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 701IX
UT WOS:000285812700004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rainer, A
AF Rainer, Austen
TI Representing the behaviour of software projects using multi-dimensional
   timelines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Case study; Software project; Multi-dimensional timeline; Time series;
   Qualitative data; Quantitative data
ID ORGANIZATION; SCIENCE
AB Context: There are few empirical studies in the empirical software engineering research community that describe software projects, at the level of the project, as they progress over time.
   Objective: To investigate how to coherently represent a large volume of qualitative and quantitative data on a range of project-level attributes as those attributes change over time.
   Method: Develop a modelling technique, multi-dimensional timelines (MDTs) and undertake a preliminary appraisal of the technique using examples from a longitudinal case study of a project at IBM Hursley Park.
   Results: MDTs can represent project-level attributes as they change over time, provided these attributes, and the empirical data about them, can be located in time (an analytical requirement) and can be represented in terms of the simple geometrical structures of points, lines and planes (a graphical requirement). Changes in attributes are documented at the point in time at which the change occurs. There are a number of ways in which an attribute can be represented on the MDT: as a quantitative time series, as an event, as an event with label containing complex qualitative information, or as a schedule. The MDT technique is currently not capable of representing relationships between different attributes e.g. a causal relationship.
   Conclusion: The initial appraisal of MDTs is encouraging, but further work is needed on the development of the MDT technique and on its evaluation. (C) 2010 Elsevier B.V. All rights reserved.
C1 Univ Hertfordshire, Sch Comp Sci, Hatfield AL10 9AB, Herts, England.
C3 University of Hertfordshire
RP Rainer, A (corresponding author), Univ Hertfordshire, Sch Comp Sci, Coll Lane Campus, Hatfield AL10 9AB, Herts, England.
EM a.w.rainer@herts.ac.uk
OI Rainer, Austen/0000-0001-8868-263X
CR ABDELHAMID TK, 1989, COMMUN ACM, V32, P1426, DOI 10.1145/76380.76383
   [Anonymous], 1994, CHAOS REP
   [Anonymous], 1999, CHAOS REC SUCC
   BALDONADO MQW, 2000, WORK C ADV VIS INT A
   BRADAC MG, 1994, IEEE T SOFTWARE ENG, V20, P774, DOI 10.1109/32.328994
   BRADAC MG, 1993, 15 INT C SOFTW ENG
   Brooks F. P, 1995, MYTHICAL MAN MONTH A
   CARMEL E, 1995, J PROD INNOVAT MANAG, V12, P110, DOI 10.1111/j.1540-5885.1995.jpim122_0110.xml.x
   Chung WY, 2005, INT J HUM-COMPUT ST, V62, P127, DOI 10.1016/j.ijhcs.2004.08.005
   COOK E, 1996, CUCS81996 DEP COMP S
   Cook JE, 1998, IEEE T SOFTWARE ENG, V24, P650, DOI 10.1109/32.707700
   COOK JE, 1996, THESIS U COLORADO BO
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   CURTIS B, 1989, 11 INT C SOFTW ENG P
   DAVIES SP, 1991, BEHAV INFORM TECHNOL, V10, P173, DOI 10.1080/01449299108924281
   FENTON N, 1994, IEEE SOFTWARE, V11, P86, DOI 10.1109/52.300094
   Frese M., 1993, SIGSOFT Software Engineering Notes, V18, pA65
   Glass Robert L., 2009, IEEE Software, V26, P95, DOI 10.1109/MS.2009.40
   GLASS RL, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.329400
   GUINDON R, 1990, INT J MAN MACH STUD, V33, P279, DOI 10.1016/S0020-7373(05)80120-8
   Guindon R., 1990, Human-Computer Interaction, V5, P305, DOI 10.1207/s15327051hci0502&3_6
   HEIJSTEK W, 1934, 34 EUR C SOFTW ENG A
   HESSE W, 1992, ANN R AUT P, V16, P179, DOI 10.1016/0066-4138(92)90027-M
   HESSE W, 1996, 5 EUR WORKSH SOFTW P
   JONES C, 1998, CROSSTALK        JUL, P13
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 1999, J SOFTW MAINT-RES PR, V11, P365, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<365::AID-SMR200>3.0.CO;2-W
   Linberg KR, 1999, J SYST SOFTWARE, V49, P177, DOI 10.1016/S0164-1212(99)00094-1
   McGregor JD, 2002, IEEE SOFTWARE, V19, P24, DOI 10.1109/MS.2002.1020282
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Olson G. M., 1992, Human-Computer Interaction, V7, P347, DOI 10.1207/s15327051hci0704_1
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Procaccino JD, 2005, J SYST SOFTWARE, V78, P194, DOI 10.1016/j.jss.2004.12.011
   Procaccino JD, 2002, INFORM SOFTWARE TECH, V44, P53, DOI 10.1016/S0950-5849(01)00217-8
   Rainer A, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P184, DOI 10.1109/METRIC.2004.1357902
   RAINER A, 1998, EASE 98 EMP ASS EV S
   RAINER A, 1999, THESIS BOURNEMOUTH U
   RAINER A, 1999, 6 INT SOFTW METR S M
   Reel JS, 1999, IEEE SOFTWARE, V16, P18, DOI 10.1109/52.765782
   RODDEN T, 1994, 3 EUR WORKSH SOFTW P
   Rosemann M, 2008, MIS QUART, V32, P1
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Seaman CB, 1998, IEEE T SOFTWARE ENG, V24, P559, DOI 10.1109/32.708569
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   SINGER J, 1997, CTR ADV STUD C CASCO
   SINGER J, 1998, INT WORKSH PROGR COM
   SOMMERVILLE I, 1992, 2 EUR WORKSH SOFTW P
   SOMMERVILLE I, 1995, CSEG21995 LANC U
   SOMMERVILLE I, 1994, 3 EUR WORKSH SOFTW P
   *STAND GROUP, 2003, LAT STAND GROUP CHAO
   *STAND GROUP, 2004, 2004 3 QUART RES REP
   TAFF LM, 1991, IEEE T SOFTWARE ENG, V17, P839, DOI 10.1109/32.83918
   The Standish Group, 2001, EXTR CHAOS
   TICHY WF, 1995, J SYST SOFTWARE, V28, P9, DOI 10.1016/0164-1212(94)00111-Y
   Turner J. R., 2003, International Journal of Project Management, V21, P1, DOI 10.1016/S0263-7863(02)00020-0
   Turner J.Rodney, 2009, The handbook of project-based management', V3rd
   van Solingen R, 1998, IEEE SOFTWARE, V15, P97, DOI 10.1109/52.714843
   VANGENUCHTEN M, 1991, IEEE T SOFTWARE ENG, V17, P582, DOI 10.1109/32.87283
   VISSER W, 1994, INTERACT COMPUT, V6, P235, DOI 10.1016/0953-5438(94)90014-0
   WALZ DB, 1993, COMMUN ACM, V36, P63, DOI 10.1145/163430.163447
   Waterson P. E., 1997, International Journal of Human-Computer Studies, V46, P79, DOI 10.1006/ijhc.1996.0084
   WNUK K, 2008, REQUIREMENTS ENG VIS
   Yin R.K., 2003, CASE STUDY RES DESIG
   Zelkowitz MV, 1997, INFORM SOFTWARE TECH, V39, P735, DOI 10.1016/S0950-5849(97)00025-6
NR 68
TC 2
Z9 2
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2010
VL 52
IS 11
SI SI
BP 1217
EP 1228
DI 10.1016/j.infsof.2010.06.004
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 663RL
UT WOS:000282905700006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Juric, MB
AF Juric, Matjaz B.
TI WSDL and BPEL extensions for Event Driven Architecture
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Event; EDA (Event Driven Architecture); SOA (Service Oriented
   Architecture); WSPA (Web Services Platform Architecture); BPEL (Business
   Process Execution Language); WSDL (Web Service Description Language)
ID WEB SERVICE COMPOSITION
AB Context: Service Oriented Architecture (SOA) and Event Driven Architecture (EDA) are two acknowledged architectures for the development of business applications and information systems, which have evolved separately over the years.
   Objective: This paper proposes a solution for extending the SOA/Web Services Platform Architecture (WSPA) with support for business events and EDA concepts. Our solution enables services to act as event producers and event consumers. It also enables event-driven service orchestrations in business processes.
   Method: Based on a comparison of SOA and EDA, we have identified and designed the required extensions to enable support for events and event-driven process orchestration in WSPA.
   Results: We propose specific extensions to WSDL and BPEL, and a flexible XML representation of the event payload data. We introduce event sinks, sources, and triggers to WSDL. We extend BPEL with new activities to trigger and catch events, and extend fault and event handlers, variables, and correlation properties to accommodate events.
   Conclusion: As a proof-of-concept, we have developed a prototype implementation and assessed the extensions on three pilot projects. We have shown that our proposed extensions work on real projects and that combining event-driven and service-oriented semantics makes sense in many business applications and can considerably reduce the development effort. (C) 2010 Elsevier B.V. All rights reserved.
C1 Univ Maribor, FERI, Lab Commun Technol, SI-2000 Maribor, Slovenia.
C3 University of Maribor
RP Juric, MB (corresponding author), Univ Maribor, FERI, Lab Commun Technol, Smetanova 17, SI-2000 Maribor, Slovenia.
EM matjaz.juric@uni-mb.si
CR Adams C., 2002, P 2002 ACM WORKSHOP, P30, DOI DOI 10.1145/764792.764798
   Agrawal A., 2007, WS BPEL EXTENSION PE
   [Anonymous], 2004, Enterprise service bus
   [Anonymous], WEB SERV DESCR LANG
   [Anonymous], 2007, Web Services Description Language (WSDL) Version 2.0
   [Anonymous], 2005, Web Services Platform Architecture: SOAP, WSDL, WS-Policy, WS-Addressing, WS-BPEL, WS-Reliable Messaging, and More
   [Anonymous], 2008, BUSINESS PROCESS DRI
   [Anonymous], 2006, Business Process Execution Language for Web Services BPEL and BPEL4WS
   [Anonymous], 2009, P 12 INT C BUS INF S
   [Anonymous], 2007, Web services business process execution language version 2.0
   *AP ODE GROUP, 2009, BPEL EXT
   *AP SOFTW FDN, 2010, AP ODE
   *AP SOFTW FDN, 2008, AP AXIS2 VERS 1 3
   BARROS A, 2005, P 3 INT C BUS PROC M, P302
   Barros A, 2007, LECT NOTES COMPUT SC, V4439, P29
   BIRRELL AD, 1984, ACM T COMPUT SYST, V2, P39, DOI 10.1145/2080.357392
   Box D., 2006, WEB SERVICES EVENTIN
   CATANIA N, 2003, WEB SERVICES EVENTS
   Chandy K.M., 2006, EVENT DRIVEN APPL CO
   CHAPPELL D, 2006, WEB SERVICES BROKERE
   Charfi A, 2004, LECT NOTES COMPUT SC, V3250, P168
   CLINE K, 2006, CONVERGING WEB SERVI
   D'Ambrogio A, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P789
   DAMBROGIO A, 2007, P 6 INT WORKSH SOFTW, P78
   Decker G, 2007, IEEE INT ENTERP DIST, P27, DOI 10.1109/EDOC.2007.41
   Decker G, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P296
   Delaune S, 2008, INFORM COMPUT, V206, P312, DOI 10.1016/j.ic.2007.07.005
   Erl T., 2007, SOA Principles of Service Design
   Erl T, 2005, SERVICE ORIENTED ARC
   ERRADI A, 2005, P MIDDL WEB SERV MWS
   Eugster P. T., 2003, ACM COMPUTING SURVEY, V35
   Farrell Joel., 2007, Semantic Annotations for WSDL and XML Schema: W3C Recommendation
   Ghedira C, 2006, ELECTRON NOTES THEOR, V146, P117, DOI 10.1016/j.entcs.2005.11.011
   GRAHAM SW, 2006, MONOCOTS COMP BIOL E, V1, P3
   Hapner M., 2002, JAVA MESSAGE SERVICE
   Hohpe G., 2012, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions, V15
   HUANG Y, 2006, P 2006 INT C PAR PRO
   Juric MB, 2009, J SYST SOFTWARE, V82, P1326, DOI 10.1016/j.jss.2009.03.001
   Juric MB, 2009, INFORM SOFTWARE TECH, V51, P1261, DOI 10.1016/j.infsof.2009.03.003
   KLOPPMANN M, 2005, JOINT WHITE PAPER IB
   Laliwala Zakir, 2008, 2008 International Conference on Service Systems and Service Management (ICSSSM 2008), P1, DOI 10.1109/ICSSSM.2008.4598452
   LEYMANN F, 2005, P 3 INT C SERV OR CO, P382
   Little M., 2007, DOES WSDL 2 0 MATTER
   Marechaux J.-L., 2006, COMBINING SERVICE OR
   Medvidovic N, 2003, J SYST SOFTWARE, V68, P199, DOI 10.1016/S0164-1212(03)00063-3
   Michelson B.M., 2006, EVENT DRIVEN ARCHITE
   Morisio M, 2002, J SYST SOFTWARE, V61, P189, DOI 10.1016/S0164-1212(01)00147-9
   Muhl G, 2006, Distributed Event-Based Systems
   NATIS YV, 2006, ADV SOA ADV ENTERPRI
   NATIS YV, 2004, BUSINESS COMPONENT A
   NELSON BJ, 1981, CMUCS81119
   Niblett P, 2005, IBM SYST J, V44, P869, DOI 10.1147/sj.444.0869
   NITSCHE J, 2008, ICIW, P168
   *OBJ MAN GROUP, 2009, CAT OMG CORBA IIOP S
   OGLE D, 2003, CANONICAL SITUATION
   OMG, 2004, CORBA NOT SERV SPEC
   *OMG, 2004, CORBA EV SERV SPEC V
   OmgBpmn Business Process Modeling Notation (BPMN), 2009, BUS PROC MOD NOT BPM
   *OP GROUP, 2009, DCE PORT
   *OR, 2007, COMPL EV PROC REAL W
   OVERDICK H, 2003, 2 ECOWS WORKSH EM WE, P114
   PALLICKARA S, 2005, INT C INF TECHN COD
   Pautasso C, 2008, LECT NOTES COMPUT SC, V5240, P278, DOI 10.1007/978-3-540-85758-7_21
   Pautasso C, 2009, DATA KNOWL ENG, V68, P851, DOI 10.1016/j.datak.2009.02.016
   RECKER J, 2006, CAISE 2006 WORKSH P, P521
   Ruhe G, 2005, IEEE SOFTWARE, V22, P47, DOI 10.1109/MS.2005.164
   Salz R., 2004, WSDL 2 JUST SAY NO O
   SHOLLER D, 2009, KEY ISSUES SOA EDA W
   TANENBAUM AS, 1988, P EUR TEL C EUTOCO 8, P775
   Taylor Hugh., 2009, EVENT DRIVEN ARCHITE, V1st
   *TM FOR, 2010, BUS PROC FRAM ETOM
   *TM FOR, 2010, SOL FRAM NGOSS
   *TM FOR, 2010, APPL FRAM TAM
   TM-Forum, 2010, INF FRAM SID
   Tsai WT, 2002, 7TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P171, DOI 10.1109/HASE.2002.1173119
   Tuecke Steven., 2003, OPEN GRID SERVICES I
   Vambenepe W., 2006, WEB SERVICES TOPICS
   van der Aalst WMP, 1999, INFORM SOFTWARE TECH, V41, P639, DOI 10.1016/S0950-5849(99)00016-6
   Van Hoof J., 2006, EDA EXTENDS SOA WHY
   VINOSKI S, 2004, IEEE INTERNET COMPUT, V8
   Volter M., 2002, SERVER COMPONENT PAT
   Wohlin C, 2000, INFORM SOFTWARE TECH, V42, P983, DOI 10.1016/S0950-5849(00)00150-6
   WOHLIN C, 2001, ENCY PHYS SCI TECHNO, V15
   Woods D.Mattern., 2006, Enterprise SOA: Designing IT for Business Innovation
   *WSDM TECHN COMM, 2006, OASIS WEB SERV DISTR
NR 85
TC 27
Z9 30
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2010
VL 52
IS 10
BP 1023
EP 1043
DI 10.1016/j.infsof.2010.04.005
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 638LF
UT WOS:000280895700002
DA 2024-07-18
ER

PT J
AU Shim, JT
   Sheu, TS
   Chen, HG
   Jiang, JJ
   Klein, G
AF Shim, J. T.
   Sheu, Tsong Shin
   Chen, Houn-Gee
   Jiang, James J.
   Klein, Gary
TI Coproduction in successful software development projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Coproduction; Project management; Software development; Expertise
   application
ID STRUCTURAL EQUATION MODELS; KNOWLEDGE; TEAM; SATISFACTION; PERFORMANCE;
   MANAGEMENT; EXPERTISE; FRAMEWORK; CUSTOMER; PLS
AB Context: Coproduction of new products has been deemed successful in organizational partnerships by adding to the quality and scope of the product. Techniques that involve users during the development of software tend to mimic this environment, but differ in the type of product and internal client roles. The question is thus, whether coproduction improves the outcomes of a software development project as it has in other disciplines.
   Objective: This paper evaluates how the coproduction relationship between software developers and users improves the outcomes of a development project. Coproduction is believed to improve outcomes when available knowledge is accessible and applicable to the objective of the development project. Should the relationships hold, coproduction approaches to development can be approached with confidence and improvements made by attention to the development and deployment of expertise.
   Method: A quantitative questionnaire related to the coproduction environment was developed for four variables to include coproduction, applying expertise, locating expertise, and project success. 128 users from development teams responded to the survey and represent a variety of industries, individual characteristics, and project sizes.
   Results: Expertise is crucial to the success of a software development project and coproduction improves the ability to access and apply the needed expertise. In addition, coproduction directly improves outcomes.
   Conclusion: Coproduction can be an effective approach to the development of systems in terms of meeting project goals. Additionally, the assembly of expertise on the team is an important contributor to successful outcomes that may be enhanced through effective selection of team members. The ability to locate the available expertise is crucial, indicating the value of team building functions to promote awareness of expertise location. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Sheu, Tsong Shin] Nan Kai Univ Technol, Dept Ind Engn & Management, Tsao Tun 542, Nan Tou County, Taiwan.
   [Shim, J. T.] Univ Cent Florida, Dept Management Informat Syst, Orlando, FL 32816 USA.
   [Chen, Houn-Gee] Natl Taiwan Univ, Dept Business Adm, Taipei 10764, Taiwan.
   [Jiang, James J.] Australian Natl Univ, Res Sch Business, Sch Accounting & Business Informat Syst, Coll Business & Econ, Canberra, ACT 0200, Australia.
   [Klein, Gary] Univ Colorado, Coll Business Adm, Colorado Springs, CO 80918 USA.
C3 Nan Kai University Technology; State University System of Florida;
   University of Central Florida; National Taiwan University; Australian
   National University; University of Colorado System; University of
   Colorado at Colorado Springs
RP Sheu, TS (corresponding author), Nan Kai Univ Technol, Dept Ind Engn & Management, 568 Chung Cheng Rd, Tsao Tun 542, Nan Tou County, Taiwan.
EM jshim@bus.ucf.edu; tsheu@nkut.edu.tw; hgchen@ntu.edu.tw;
   james.j.jiang@anu.edu.au; gklein@uccs.edu
RI 江, 俊毅/N-6899-2018; Jiang, James/JPK-7730-2023
FU National Science Council at Taiwan [NSC-98-2410-H-002-072-MY2]
FX This research is partly funded by National Science Council at Taiwan
   under the project NSC-98-2410-H-002-072-MY2.
CR [Anonymous], SHARED COGNITION ORG
   [Anonymous], 2004, J ASSOC INF SYST, DOI DOI 10.17705/1JAIS.00057
   [Anonymous], 1998, MIS Quarterly
   Auh S, 2007, J RETAILING, V83, P359, DOI 10.1016/j.jretai.2007.03.001
   BACHORE Z, 2009, P 15 AM C INF SYST S, P1
   Barki H, 2001, MIS QUART, V25, P195, DOI 10.2307/3250929
   Bettencourt LA, 1997, J RETAILING, V73, P39, DOI 10.1016/S0022-4359(97)90014-2
   Bettencourt LA, 2002, CALIF MANAGE REV, V44, P100, DOI 10.2307/41166145
   Bovaird T, 2006, PUBLIC ADMIN, V84, P81, DOI 10.1111/j.0033-3298.2006.00494.x
   BRUDNEY JL, 1983, PUBLIC ADMIN REV, V43, P59, DOI 10.2307/975300
   Butler T., 2001, Journal of End User Computing, V13, P12, DOI 10.4018/joeuc.2001010102
   Celly KS, 1996, J MARKETING RES, V33, P200, DOI 10.2307/3152147
   CHIN WW, 1994, PLS GRAPH MANUAL VER
   Collins CJ, 2006, ACAD MANAGE J, V49, P544, DOI 10.5465/AMJ.2006.21794671
   Cronbach L.J., 1971, ED MEASUREMENT, DOI DOI 10.1037/14353-009
   Dittrich Y, 2004, INFORM SOFTWARE TECH, V46, P603, DOI 10.1016/j.infsof.2003.11.002
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   FORNELL C, 1982, J MARKETING RES, V19, P440, DOI 10.2307/3151718
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   Gallivan MJ, 2003, INFORM SYST J, V13, P37, DOI 10.1046/j.1365-2575.2003.00138.x
   GARN HA, 1973, URBAN AFF QUART, V19, P465
   Grandey AA, 2004, J ORGAN BEHAV, V25, P397, DOI 10.1002/job.252
   Groth M, 2005, J MANAGE, V31, P7, DOI 10.1177/0149206304271375
   He J, 2008, J MANAGE INFORM SYST, V25, P301, DOI 10.2753/MIS0742-1222250111
   HEIDE JB, 1994, J MARKETING, V58, P71, DOI 10.2307/1252252
   HENDERSON JC, 1992, MANAGE SCI, V38, P757, DOI 10.1287/mnsc.38.6.757
   Howcroft D., 2003, Information and Organization, V13, P1, DOI 10.1016/S1471-7727(02)00023-4
   Hulland J, 1999, STRATEGIC MANAGE J, V20, P195, DOI 10.1002/(SICI)1097-0266(199902)20:2<195::AID-SMJ13>3.3.CO;2-Z
   Jiang J. J., 2002, International Journal of Project Management, V20, P507, DOI 10.1016/S0263-7863(01)00049-7
   Jiang JJ, 2006, J ASSOC INF SYST, V7, P68, DOI 10.17705/1jais.00082
   Jiang JJ, 2002, EUR J INFORM SYST, V11, P86, DOI 10.1057/palgrave/ejis/3000420
   Jones MC, 1996, INFORM MANAGE-AMSTER, V31, P57, DOI 10.1016/S0378-7206(96)01068-3
   JUTTNER U, 1994, INT J SERV IND MANAG, V5, P54, DOI 10.1108/09564239410074394
   Juttner U., 1994, Journal of Business Industrial Marketing, V9, P42, DOI DOI 10.1108/08858629410073199
   Keil M, 1998, COMMUN ACM, V41, P76, DOI 10.1145/287831.287843
   Klein G, 2001, J SYST SOFTWARE, V56, P195, DOI 10.1016/S0164-1212(00)00097-2
   Lohmoeller J.B., 1989, LATENT VARIABLE PATH
   LOVELOCK CH, 1979, HARVARD BUS REV, V57, P168
   Marks MA, 2001, ACAD MANAGE REV, V26, P356, DOI 10.5465/AMR.2001.4845785
   Maruping LM, 2009, INFORM SYST RES, V20, P377, DOI 10.1287/isre.1090.0238
   MOHR LA, 1995, J BUS RES, V32, P239, DOI 10.1016/0148-2963(94)00049-K
   Nonaka I, 1996, INT J TECHNOL MANAGE, V11, P833
   Okhuysen GA, 2002, ORGAN SCI, V13, P370, DOI 10.1287/orsc.13.4.370.2947
   Pestoff V, 2006, PUBLIC MANAG REV, V8, P503, DOI 10.1080/14719030601022882
   Podsakoff PM, 2003, J APPL PSYCHOL, V88, P879, DOI 10.1037/0021-9010.88.5.879
   Schwalbe K., 2010, Information technology: Project management 6e
   Straub D., 2004, Communications of the Association for Information Systems, V13, DOI DOI 10.17705/1CAIS.01324
   STRAUB DW, 1989, MIS QUART, V13, P147, DOI 10.2307/248922
   Tiwana A, 2005, J MANAGE INFORM SYST, V22, P13, DOI 10.1080/07421222.2003.11045836
   Turk D, 2005, J DATABASE MANAGE, V16, P62, DOI 10.4018/jdm.2005100104
   WEICK KE, 1993, ADMIN SCI QUART, V38, P357, DOI 10.2307/2393372
   Williams L, 2003, COMPUTER, V36, P39, DOI 10.1109/MC.2003.1204373
   WOLSTENHOLME EF, 1988, EUR J OPER RES, V34, P10, DOI 10.1016/0377-2217(88)90450-X
   Zalesny M.D., 1995, Research in Personnel and Human Resources Management, V13, P81
NR 54
TC 25
Z9 26
U1 1
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2010
VL 52
IS 10
BP 1062
EP 1068
DI 10.1016/j.infsof.2010.05.006
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 638LF
UT WOS:000280895700004
DA 2024-07-18
ER

PT J
AU Prikladnicki, R
   Audy, JLN
AF Prikladnicki, Rafael
   Nicolas Audy, Jorge Luis
TI Process models in the practice of distributed software development: A
   systematic review of the literature
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Distributed software development; Global software engineering;
   Offshoring; Process models; Process improvement
AB Context: Distributed Software Development (DSD) has recently become an active research area. Although considerable research effort has been made in this area, as yet, no agreement has been reached as to an appropriate process model for DSD.
   Purpose: This paper is intended to identify and synthesize papers that describe process models for distributed software development in the context of overseas outsourcing, i.e. "offshoring".
   Method: We used a systematic review methodology to search seven digital libraries and one topic-specific conference.
   Results: We found 27 primary studies describing stage-related DSD process models. Only five of such studies looked into outsourcing to a subsidiary company (i.e. "internal offshoring"). Nineteen primary studies addressed the need for DSD process models. Eight primary studies and three literature surveys described stage-based DSD process models, but only three of such models were empirically evaluated.
   Conclusion: We need more research aimed at internal offshoring. Furthermore, proposed models need to be empirically validated. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Prikladnicki, Rafael; Nicolas Audy, Jorge Luis] Pontificia Univ Catolica Rio Grande do Sul, Sch Comp Sci, BR-90619900 Porto Alegre, RS, Brazil.
C3 Pontificia Universidade Catolica Do Rio Grande Do Sul
RP Prikladnicki, R (corresponding author), Pontificia Univ Catolica Rio Grande do Sul, Sch Comp Sci, 6681 Ipiranga Ave,Bldg 32, BR-90619900 Porto Alegre, RS, Brazil.
EM rafaelp@pucrs.br; audy@pucrs.br
FU Dell Computers of Brazil Ltd. [8248/91]; CAPES (Brazilian Ministry of
   Education) [426006-6]
FX This study was developed in collaboration between the MuND-DoS research
   group in Distributed Software Development, at PUC-RS, Brazil, and the
   SEGAL Lab, at UVIC, Canada. The study was also partially supported by
   the Research Group on Distributed Software Development of the PDTI
   program, financed by Dell Computers of Brazil Ltd. (Law 8248/91), and
   partially supported by CAPES (Brazilian Ministry of Education), financed
   by the CAPES Ph.D. Internship Program, process number 426006-6.
CR ADELAKUN O, 2004, EUR C INF SYST, V2
   [Anonymous], 67905 TRES COPPEUFRJ
   Aoyama Mikio., 1998, Agile Software Process and Its Experience
   Arora A, 2001, RES POLICY, V30, P1267, DOI 10.1016/S0048-7333(00)00148-7
   Aspray W., 2006, GLOBALIZATION OFFSHO
   BALAJI S, 2006, INT C INF SYST, P543
   BALAJI S, 2005, STRATEGIC IS SOURCIN
   Boehm B.A., 2006, Proceedings of ICSE'06 Conference, P12, DOI DOI 10.1145/1134285.1134288
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Carmel E., 2002, MIS Quarterly Executive, V1, P65
   Carmel E., 2005, Offshoring Information Technology: Sourcing and Outsourcing to a Global Workforce
   Carmel E., 2005, OFFSHORING STAGE MOD
   Carmel E., 1999, GLOBAL SOFTWARE TEAM
   Casey V., 2006, IEEE INT C GLOBAL SO, P66
   CHRISSIS MB, 2006, SEI SERIES SOFTWARE
   CHUA AL, 2006, INT C INF SYST
   Cruzes Daniela, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P491
   Damian D, 2006, IEEE SOFTWARE, V23, P17, DOI 10.1109/MS.2006.126
   Damian DE, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P319, DOI 10.1109/ICRE.2002.1048545
   DIAS AC, 2007, 71307 TRES COPPEUFRJ
   Dibbern J., 2004, Data Base for Advances in Information Systems, V35, P6, DOI 10.1145/1035233.1035236
   Dieste Oscar, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P215
   DYBA T, 2007, 1 INT S EMP SOFTW EN, P225, DOI DOI 10.1109/ESEM.2007.59
   DYBA T, 2005, INFORM SOFTWARE TECH, P1
   Ebert C, 2007, Second IEEE International Conference on Global Software Engineering, Proceedings, P177
   Ethiraj SK, 2005, STRATEGIC MANAGE J, V26, P25, DOI 10.1002/smj.433
   Evaristo JR, 2004, J ENG TECHNOL MANAGE, V21, P175, DOI [10.1016/j.jengtecman.2003.05.001, 10.1016/j.jengtecman.2003.15.01]
   GANNON B, 2007, EUR C INF SYST, P950
   Gonzalez R, 2006, INFORM MANAGE-AMSTER, V43, P821, DOI 10.1016/j.im.2006.07.002
   Hanisch Jo, 2004, EUR C INF SYST
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Hofner G, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P162
   Hyder E. B., 2006, SCM SP V2 01 ESOURCI
   Karolak D.W., 1998, Global Software Development: Managing Virtual Teams and Environments
   KHAN N, 2003, AM C INF SYST, P996
   Kitchenham B., 2004, SE0401 KEEL U DEP CO
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   KUMAR K, 1996, EUR C INF SYST LISB, P1309
   Lasser S, 2005, 2005 IEEE INTERNATIONAL PROFESSIONAL COMMUNICATION CONFERENCE (IPCC), P718
   MATLOFF N, 2005, IT PROFESSIONAL  JUL, P39
   MCNAB AL, 2006, AM C INF SYST
   Meyer B, 2006, COMPUTER, V39, P124, DOI 10.1109/MC.2006.37
   MIRANI R, 2006, INFORM RESOURCES MAN, V19, P71
   Mirani R, 2007, INFORM MANAGE-AMSTER, V44, P216, DOI 10.1016/j.im.2006.12.001
   NOLAN RL, 1973, COMMUN ACM, V16, P399, DOI 10.1145/362280.362284
   Oates B. J., 2006, Researching information systems and computing
   PRIKLADNICKI R, 2008, P EV ASS SOFTW ENG E, P1
   Prikladnicki R, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P262
   RAMAMANI M, 2006, C MIDW US ASS IS, P75
   Ramasubbu N, 2005, IEEE SOFTWARE, V22, P80, DOI 10.1109/MS.2005.69
   RAMASUBBU N, 2007, ACM SIGSOFT S FDN SO, P125
   Ranganathan C., 2007, MIS Q EXEC, V6, P147
   RANGANATHAN C, 2006, INT C INF SYST
   Robinson M., 2004, Offshore Outsourcing: Business Models, ROI and Best Practices
   Sakthivel S, 2007, COMMUN ACM, V50, P69, DOI 10.1145/1232743.1232750
   SANGWAN R, 2007, GLOBAL SOFTWARE DEV
   SAYEED L, 2006, AM C INF SYST
   Sengupta B., 2006, 28th International Conference on Software Engineering Proceedings, P731, DOI 10.1145/1134285.1134402
   Siakas K. V., 2006, Software Process Improvement and Practice, V11, P319, DOI 10.1002/spip.275
   Smite D., 2009, EMPIRICAL SOFTWARE E
   Stewart K. J., 2006, Software Process Improvement and Practice, V11, P177, DOI 10.1002/spip.258
   Szymanski CH, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P40
   TUCKMAN BW, 1965, PSYCHOL BULL, V63, P384, DOI 10.1037/h0022100
NR 64
TC 32
Z9 34
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2010
VL 52
IS 8
BP 779
EP 791
DI 10.1016/j.infsof.2010.03.009
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 614DI
UT WOS:000279035100001
DA 2024-07-18
ER

PT J
AU Dong, J
   Peng, T
   Zhao, YJ
AF Dong, Jing
   Peng, Tu
   Zhao, Yajing
TI Automated verification of security pattern compositions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Design pattern; Security; Logics; Process algebra; Model checking
AB Software security becomes a critically important issue for software development when more and more malicious attacks explore the security holes in software systems. To avoid security problems, a large software system design may reuse good security solutions by applying security patterns. Security patterns document expert solutions to common security problems and capture best practices on secure software design and development. Although each security pattern describes a good design guideline, the compositions of these security patterns may be inconsistent and encounter problems and flaws. Therefore, the compositions of security patterns may be even insecure. In this paper, we present an approach to automated verification of the compositions of security patterns by model checking. We formally define the behavioral aspect of security patterns in CCS through their sequence diagrams. We also prove the faithfulness of the transformation from a sequence diagram to its CCS representation. In this way, the properties of the security patterns can be checked by a model checker when they are composed. Composition errors and problems can be discovered early in the design stage. We also use two case studies to illustrate our approach and show its capability to detect composition errors. (c) 2009 Elsevier B.V. All rights reserved.
C1 [Dong, Jing; Peng, Tu; Zhao, Yajing] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
C3 University of Texas System; University of Texas Dallas
RP Dong, J (corresponding author), Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
EM jdong@utdallas.edu; txp051000@utdallas.edu; yxz045100@utdallas.edu
CR Alencar P., 1999, Proceedings. Twenty-Third Annual International Computer Software and Applications Conference (Cat. No.99CB37032), P160, DOI 10.1109/CMPSAC.1999.812694
   [Anonymous], 1814, DTSCH BLATTER, V3, P576
   BARRETT G, 1995, IEEE T SOFTWARE ENG, V21, P69, DOI 10.1109/32.345823
   BROWN FL, 1999, P PATT LANG PROGR PL
   BROWNE MC, 1986, IEEE T COMPUT, V35, P1035, DOI 10.1109/TC.1986.1676711
   Chinnasamy S., 1999, P 7 INT C ADV COMPUT, P300
   CLARKE EM, 2000, ACM T SOFTWARE ENG M, V9
   DAI GL, 2007, P IEEE INT C E BUS E
   Dong J, 2006, SOFTWARE PRACT EXPER, V36, P27, DOI 10.1002/spe.681
   DONG J, 2004, INT J SOFTWARE SYSTE, V3, P262
   DONG J, 2000, P 7 ANN IEEE INT C W, P279, DOI DOI 10.1109/ECBS.2000.839887]
   Dong J, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P80
   Dwyer M. B., 1999, P 21 INT C SOFTW ENG
   EDEN AH, 2001, P 11 CASCON TOR CAN
   EMERSON EA, 1986, J ACM, V33, P151, DOI 10.1145/4904.4999
   EMERSON EA, 1982, SCI COMPUT PROGRAM, V2, P241, DOI 10.1016/0167-6423(83)90017-5
   FERNANDEZ EB, 2007, P INT MULT COMP GLOB
   FOSTER H, 2003, P 18 IEEE INT C AUT
   Fu X., 2004, P 13 INT C WORLD WID, P621
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Jurjens Jan., 2004, SECURE SYSTEMS DEV U
   Kienzle DarrellM., 2002, SECURITY PATTERNS RE
   MCMILLAN ML, 1992, CMUCS92131
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Mikkonen T, 1998, PROC INT CONF SOFTW, P115, DOI 10.1109/ICSE.1998.671108
   Milner R., 1989, Communication and concurrency
   Pnueli A., 1988, APPL TEMPORAL LOGIC
   Ramakrishna YS, 1997, LECT NOTES COMPUT SC, V1254, P143
   ROSADO DG, 2006, P 1 INT C AV REL SEC
   Saeki M, 2000, SEVENTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P408, DOI 10.1109/APSEC.2000.896727
   Schumacher M., 2005, Security Patterns: Integrating Security and Systems Engineering, V1st
   Soundarajan N, 2004, PROC INT CONF SOFTW, P666, DOI 10.1109/ICSE.2004.1317488
   Steel C., 2005, CORE SECURITY PATTER
   Taibi T, 2003, INFORM SOFTWARE TECH, V45, P157, DOI 10.1016/S0950-5849(02)000195-7
   Viega J., 2001, BUILDING SECURE SOFT
   Wing JM, 1997, SCI COMPUT PROGRAM, V28, P273, DOI 10.1016/S0167-6423(96)00020-2
   YOSHIOKA N, 2004, P 8 IEEE INT ENT DIS
   Zhou JH, 2007, IEEE CONF WIREL MOB
NR 39
TC 25
Z9 29
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2010
VL 52
IS 3
BP 274
EP 295
DI 10.1016/j.infsof.2009.10.001
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 571PF
UT WOS:000275765900003
DA 2024-07-18
ER

PT J
AU Jia, Y
   Harman, M
AF Jia, Yue
   Harman, Mark
TI Higher Order Mutation Testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 8th IEEE International Working Conference on Source Code Analysis and
   Manipulation
CY SEP 28-29, 2008
CL Beijing, PEOPLES R CHINA
SP IEEE Comp Soc, Semant Designs, SAP, Reengn Forum, Ctr Res Evolut Search & Testing
DE Mutation Testing; Higher order mutant; Search techniques
AB This paper introduces a new paradigm for Mutation Testing, which we call Higher Order Mutation Testing (HOM Testing). Traditional Mutation Testing considers only first order mutants, created by the injection of a single fault. Often these first order mutants denote trivial faults that are easily killed. Higher order mutants are created by the insertion of two or more faults. The paper introduces the concept of a subsuming HOM; one that is harder to kill than the first order mutants from which it is constructed. By definition, subsuming HOMs denote subtle fault combinations. The paper reports the results of an empirical study of HOM Testing using 10 programs, including several non-trivial real-world subjects for which test suites are available. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Jia, Yue; Harman, Mark] Kings Coll London, CREST Ctr Strand, London WC2R 2LS, England.
C3 University of London; King's College London
RP Jia, Y (corresponding author), Kings Coll London, CREST Ctr Strand, London WC2R 2LS, England.
EM yue.jia@kcl.ac.uk
OI Harman, Mark/0000-0002-5864-4488
CR Acree A. T., 1980, On Mutation
   Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   Agrawal H., 1989, Technical Report. Technical Report SERCTR- 41- P
   Alexander RT, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P341, DOI 10.1109/ISSRE.2002.1173285
   [Anonymous], SOFTWARE
   [Anonymous], 1980, THESIS YALE U NEW HA
   [Anonymous], 3 TEST AC IND C PRAC
   Ayari K, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1074
   Baldwin Douglas., 1979, HEURISTICS DETERMINI
   Bradbury JS, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P210, DOI 10.1109/TAIC.PART.2007.37
   CHOI BJ, 1993, J SYST SOFTWARE, V20, P135, DOI 10.1016/0164-1212(93)90005-I
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Delamaro M.E., 1996, P C PERFORMABILITY C, P79
   DeMillo R. A., 1991, Proceedings of the Fifteenth Annual International Computer Software and Applications Conference (Cat. No.91CH3023-9), P351, DOI 10.1109/CMPSAC.1991.170202
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Hierons R., 1999, Software Testing, Verification and Reliability, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:4<233::AID-STVR191>3.0.CO;2-3
   HORGAN JR, 1990, SERCTR83P PURD U
   HOU SS, 2007, P 23 IEEE INT C SOFT
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   LIPTON RJ, 1978, WORKSH SOFTW TEST TE, P355
   May P, 2003, LECT NOTES COMPUT SC, V2787, P81
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Mitchell M., 1998, INTRO GENETIC ALGORI
   Morell L.J., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis, Banff, Canada, P45, DOI DOI 10.1109/WST.1988.5353
   Offutt A. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P5, DOI 10.1145/125489.125473
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt A. J., 1996, SIGSOFT Software Engineering Notes, V21, P195, DOI [10.1145/229000.226317, 10.1145/226295.226317]
   Offutt A. J., 1994, Software Testing, Verification and Reliability, V4, P131, DOI 10.1002/stvr.4370040303
   OFFUTT AJ, 1989, ACM SIGSOFT, V14, P131, DOI 10.1145/75309.75324
   Offutt AJ, 1996, COMPASS '96 - PROCEEDINGS OF THE ELEVENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P224, DOI 10.1109/CMPASS.1996.507890
   OFFUTT AJ, 1994, IEEE T SOFTWARE ENG, V20, P337, DOI 10.1109/32.286422
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   OMNRF, 2020, P IFIP C APPROVING S
   POLO M, 2008, SOFTW TEST VERIF REL, V234, P234
   Stamelos I, 2003, J SYST SOFTWARE, V66, P57, DOI 10.1016/S0164-1212(02)00063-8
   UNTCH R, 1993, P 1993 INT S SOFTW T, P139, DOI DOI 10.1145/154183.154265
   Wah KSHT, 2000, SOFTW TEST VERIF REL, V10, P3, DOI 10.1002/(SICI)1099-1689(200003)10:1<3::AID-STVR196>3.0.CO;2-P
   Wah KSHT, 2003, SCI COMPUT PROGRAM, V48, P119, DOI 10.1016/S0167-6423(03)00022-4
   Wong W.E., 1994, P 8 BRAZ S SOFTW ENG, P439
   WONG WE, 1993, THESIS PURDUE U W LA
   Woodward M. R., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P152, DOI 10.1109/WST.1988.5370
   Zhan Y, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1061
NR 45
TC 181
Z9 200
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2009
VL 51
IS 10
BP 1379
EP 1393
DI 10.1016/j.infsof.2009.04.016
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 481VN
UT WOS:000268840400002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Benharref, A
   Dssouli, R
   Serhani, MA
   Glitho, R
AF Benharref, Abdelghani
   Dssouli, Rachida
   Serhani, Mohamed Adel
   Glitho, Roch
TI Efficient traces' collection mechanisms for passive testing of Web
   Services
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Web Services; Web Services management; Traces' collection; Passive
   testing of Web Services; Web Services quality monitoring
AB Web Services are a novel approach for business-to-business interactions. Their management, especially fault and performance management, is becoming necessary for their success and emergence. Nowadays, this management is platform-dependent and does not allow third parties to be involved. In this paper, we consider management of Web Services by passive testing where the tester itself is a Web Service. We propose different architectures for observation of simple and composite Web Services. We also study a set of online traces collection mechanisms and discuss their performances in terms of required CPU/RAM resources and introduced network overhead. These performances are then maximized by selecting best locations of observers. Observation considers both functional and non-functional (QoS) properties of Web Services. The paper presents also our experiments using different observation architectures and traces collection mechanisms while observing a simple and a composite Web Service. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Benharref, Abdelghani; Dssouli, Rachida; Glitho, Roch] Concordia Univ, Montreal, PQ H3G 1M8, Canada.
   [Serhani, Mohamed Adel] United Arab Emirates Univ, Al Ain, U Arab Emirates.
C3 Concordia University - Canada; United Arab Emirates University
RP Benharref, A (corresponding author), Concordia Univ, 1455 Maisonneuve W Blvd, Montreal, PQ H3G 1M8, Canada.
EM abdel@ece.concordia.ca; dssouli@ciise.concor-dia.ca;
   serhanim@uaeu.ac.ae; glitho@ciise.concordia.ca
OI Glitho, Roch H/0000-0002-7699-0296
CR *BEA, 2004, WEBL PLAT
   Benharref A, 2005, LECT NOTES COMPUT SC, V3744, P182
   Benharref A, 2006, LECT NOTES COMPUT SC, V3964, P118
   DASILVA KHJ, 2004, P INT C SERV DEL NET, P245
   Dssouli R, 1999, COMPUT NETW, V31, P1835, DOI 10.1016/S1389-1286(99)00063-8
   Fuggetta A, 1998, IEEE T SOFTWARE ENG, V24, P342, DOI 10.1109/32.685258
   Glass G., 2000, WEB SERVICES REVOLUT
   *HP, 2007, OPENVIEW
   Jade, 2007, JAV AG DEVELOPMENT F
   Lee D, 1997, 1997 INTERNATIONAL CONFERENCE ON NETWORK PROTOCOLS - PROCEEDINGS, P113, DOI 10.1109/ICNP.1997.643699
   Milanovic N, 2004, IEEE INTERNET COMPUT, V8, P51, DOI 10.1109/MIC.2004.58
   Miller RE, 1997, IEEE IPCCC, P111
   MILLER RE, 2000, FAULT LOCATION NETWO, P281
   *OASIS, 2004, WEB SERV DISTR MAN M
   *PARL, 2004, PARL 4 1 SPEC
   Serhani MA, 2006, INT J INTELL INF TEC, V2, P37, DOI 10.4018/jiit.2006100103
   Serhani MA, 2005, QOS BROKER BASED ARC, P113
   Stallings W., 1999, SNMP, SNMPv2, SNMPv3, and RMON 1 and 2
   THANG NX, 2005, ENABLING AGENT BASED, P407
   TOSIC V, 2004, WEB SERVICE OFFERING, P817
   *W3C, 2006, WORLD WID CONS
   *W3C, 2006, WEB SERV ARCH
   WALTER T, 2000, TESTING DISTRIBUTED, P1015
NR 23
TC 11
Z9 11
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 362
EP 374
DI 10.1016/j.infsof.2008.04.007
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 386YX
UT WOS:000261919900010
DA 2024-07-18
ER

PT J
AU Liu, H
   Tan, HBK
AF Liu, Hui
   Tan, Hee Beng Kuan
TI Covering code behavior on input validation in functional testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Black-box testing; White-box testing; Input
   validation; Test coverage
AB Input validation is the enforcement built in software systems to ensure that only valid input is accepted to raise external effects. It is essential and very important to a large class of systems and usually forms a major part of a data-intensive system. Most existing methods for input validation testing are specification-based. However, to test input validation more accurately, a code-based method is also required. In this paper, we propose an approach to extract path partition and input conditions from code for testing input validation. The path partition can be used to design white-box test cases for testing input validation. It can also be used to measure the coverage of input validation testing. The valid and invalid input conditions recovered can be used to check against the specifications and aid the test suite design in black-box testing. We have also evaluated the proposed method through experimental study. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Liu, Hui; Tan, Hee Beng Kuan] Nanyang Technol Univ, Sch Elect & Elect Engn, Singapore 639798, Singapore.
C3 Nanyang Technological University
RP Liu, H (corresponding author), Nanyang Technol Univ, Sch Elect & Elect Engn, Block S2,Nanyang Ave, Singapore 639798, Singapore.
EM liuh0007@ntu.edu.sg; ibktan@ntu.edu.sg
RI Tan, Hee Beng Kuan/A-5147-2011
CR [Anonymous], 1990, Software testing techniques {
   [Anonymous], P 6 ACM SIGSOFT INT
   BAZZICHI F, 1982, IEEE T SOFTWARE ENG, V8, P343, DOI 10.1109/TSE.1982.235428
   BENTLY WG, 1993, SOFTWARE QUAL J, V2, P29, DOI 10.1007/BF00417425
   Bueno PMS, 2002, INT J SOFTW ENG KNOW, V12, P691, DOI 10.1142/S0218194002001074
   CADAR C, 2006, EXE AUTOMATICALLY GE, P322
   Chan E. Y. K., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P318
   Ferguson R., 1996, ACM Transactions on Software Engineering and Methodology, V5, P63, DOI 10.1145/226155.226158
   GOODENOUGH JB, 1975, THEORY TEST DATA SEL, P493
   Hayes J. H., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P199, DOI 10.1109/ISSRE.1999.809325
   Hayes JH, 2006, EMPIR SOFTW ENG, V11, P493, DOI 10.1007/s10664-006-9025-1
   *JABA, 2006, JAVA ARCH BYT AN
   Jorgensen P., 2002, SOFTWARE TESTING CRA, P359
   *JSLICE, 2006, DYN SLIC TOOL JAV PR
   *KAFF, 2008, JAV VIRT MACH
   LIU H, 2007, J SYSTEMS S IN PRESS
   Liu H., 2006, P INT WORKSH AUT SOF, P29, DOI [10.1145/1138929, DOI 10.1145/1138929]
   MARICK B, 1995, CRAFT SOFTWARE TESTI, P553
   Memon A, 2003, PROC IEEE INT CONF S, P410, DOI 10.1109/ICSM.2003.1235451
   Memon AM, 2005, IEEE T SOFTWARE ENG, V31, P884, DOI 10.1109/TSE.2005.117
   *MSDN, 2008, MSDN DES GUID SEC WE
   MYERS GJ, 2004, SOFTWARE TESTING, P234
   Offutt J, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P187, DOI 10.1109/ISSRE.2004.13
   Sinha S, 2001, ACM T SOFTW ENG METH, V10, P209, DOI 10.1145/367008.367022
   *SOURC, OP SOURC
   WATSON AH, 1996, NISTSP500235
NR 26
TC 23
Z9 25
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 546
EP 553
DI 10.1016/j.infsof.2008.07.001
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 386YX
UT WOS:000261919900022
DA 2024-07-18
ER

PT J
AU Masri, W
   Podgurski, A
AF Masri, Wes
   Podgurski, Andy
TI Algorithms and tool support for dynamic information flow analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Dynamic information flow analysis; Insecure flows; Dynamic slicing;
   Direct dynamic control dependence; Forward computation; Program
   debugging
ID PROGRAM; MODEL
AB A new approach to dynamic information flow analysis (DIFA) is presented, and its applications to intrusion detection, software testing and program debugging are discussed. The approach is based on a new forward-computing algorithm that enables online analysis when fast response is not critical. A new forward-computing algorithm for dynamic slicing is also presented, which is more precise than previous forward-computing algorithms and is not restricted to programs with structured control flow. The DIFA and slicing algorithms both rely on a new, precise direct dynamic control dependence algorithm, which requires only constant time per program action. The correctness of this algorithm depends on special, graph-theoretic properties of control dependence, which are established here. A tool called DynFlow is described that implements the proposed approach in order to support analysis of Java byte code programs, and two case studies are presented to illustrate how DynFlow can be used to detect and debug insecure flows. Finally. since dynamic analysis alone is inherently unable to detect implicit information flows, an extension to our approach is described that enables it to detect most implicit information flows at runtime. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Masri, Wes] Amer Univ Beirut, Dept Comp Sci, Beirut, Lebanon.
   [Podgurski, Andy] Case Western Reserve Univ, Dept Elect Engn & Comp Sci, Cleveland, OH 44106 USA.
C3 American University of Beirut; University System of Ohio; Case Western
   Reserve University
RP Masri, W (corresponding author), Amer Univ Beirut, Dept Comp Sci, POB 11-0236, Beirut, Lebanon.
EM podgurski@case.edu; wm13@aub.edu.lb
RI Masri, Wes/A-1786-2013
FU Direct For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [0820217] Funding Source: National Science
   Foundation
CR AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   AGRAWAL H, 1993, P IEEE C SOFTW MAINT
   [Anonymous], 2005, NDSS
   [Anonymous], SOOT JAVA OPTIMIZATI
   Beszédes A, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P105, DOI 10.1109/CSMR.2001.914974
   Bishop M., 2002, Computer Security: Art and Science
   Cheng W., 2006, P 11 IEEE S COMP COM
   Christian H., 2006, Proceedings of the 2006 ACM SIGPLAN Symposium on Partial Evaluation and Semantics-based Program Manipulation, P58
   Clause James, 2007, INT S SOFTW TEST AN
   CRANDALL JR, 2004, MICRO 37
   Denning D.E.R., 1982, CRYPTOGRAPHY DATA SE, V112, DOI [10.5555/539308, DOI 10.5555/539308]
   DENNING DE, 1976, COMMUN ACM, V19, P236, DOI 10.1145/360051.360056
   DENNING DE, 1977, COMMUN ACM, V20, P504, DOI 10.1145/359636.359712
   DENNING DE, 1975, THESIS COMPUTER SCI
   Farago C., 2002, Acta Cybernetica, V15, P489
   FENG Q, 2006, MICRO 39
   FENTON JS, 1974, COMPUT J, V17, P143, DOI 10.1093/comjnl/17.2.143
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Gyimóthy T, 1999, LECT NOTES COMPUT SC, V1687, P303, DOI 10.1145/318774.319248
   Haldar V., 2005, 0502 U CAL DEP INF C
   HIND M, 2000, INT S SOFTW TEST AN
   JACKSON D, 1994, S FDN SOFTW ENG NEW
   JONES A, 1978, J COMPUTER SYSTEMS S
   Keck DO, 1998, IEEE T SOFTWARE ENG, V24, P779, DOI 10.1109/32.729680
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Korel B, 1997, IEEE T SOFTWARE ENG, V23, P17, DOI 10.1109/32.581327
   KOREL B, 1994, ISSTA, P66
   KOREL B, 1991, P 24 ANN HAW INT C S, V2, P246
   LAMPSON BW, 1973, COMMUN ACM, V16, P613, DOI 10.1145/362375.362389
   LEON D, 2005, INT C SOFTW ENG ST L
   Lindholm Tim., 2013, The Java Virtual Machine Specification, Java SE, V7
   MASH W, 2005, THESIS CASE W RESERV
   MASRI W, 2005, 2005 WORKSH SOFTW EN
   MASRI W, TSE 2007
   MASRI W, 2006, 4 INT WORKSH DYN AN
   MASRI W, 2006, 17 IEEE INT S SOFTW
   MASRI W, 2004, IEEE INT S SOFTW REL
   MCCAMANT S, 2007, ACM SIGPLAN WORKSH P
   MCCAMANT S, 2006, MITCSAILTR2006076
   McClure S., 2003, Web Hacking: Attacks and Defense
   NAIR S, 2007, IRCS024 VRIJ U
   PODGURSKI A, 1990, IEEE T SOFTWARE ENG, V16, P965, DOI 10.1109/32.58784
   Podgurski A., 1989, THESIS U MASS
   POMAKIS K, 1996, INT S SOFTW TEST AN, P216
   Sabelfeld Andrei., 2003, IEEE J SELECTED AREA, V21
   SINHA S, 2000, ACM T SOFTWARE ENG M
   STEVEN S, 2000, 2000 INT S SOFTW TES, P158
   SUH G, 2004, 11 INT C ARCH SUPP P
   The Byte Code Engineering Library (BCEL), 2003, AP JAK PROJ
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Vachharajani N., 2004, P 37 INT S MICR MICR
   WANG T, 2004, INT C SOFTW ENG ED U
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Wolfe M.J., 1996, High Performance Compilers For Parallel Computing
   Xin Bin, 2007, INT S SOFTW TEST AN
   XU W, 2005, SECLAB0505 STON BROO
   Zhang X., 2004, INT C SOFTW ENG ED U
   ZHANG X, 2005, AADEBUG
   ZHANG X, PLDI 2006
   ZHANG X, 2006, INT C SOFTW ENG
   Zhang ZG, 2003, PROC INT CONF SOFTW, P319
   Zimmermann J., 2003, 19 COMP SEC APPL C L
   ZIMMERMANN J, 2003, LECT NOTES COMPUTER, V2808
NR 63
TC 22
Z9 30
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 385
EP 404
DI 10.1016/j.infsof.2008.05.008
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 386YX
UT WOS:000261919900012
DA 2024-07-18
ER

PT J
AU Vavpotic, D
   Bajec, M
AF Vavpotic, Damjan
   Bajec, Marko
TI An approach for concurrent evaluation of technical and social aspects of
   software development methodologies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software development methodology; Method engineering; Software process
   improvement; Methodology evaluation
ID SYSTEMS-DEVELOPMENT METHODOLOGIES; PROCESS IMPROVEMENT; PERCEPTIONS;
   ACCEPTANCE; ATTITUDES; ADOPTION; QUALITY; TOOLS; MODEL
AB The paper presents an approach for evaluation of software development methodologies (SDM) that considers the aspects of a SDM's social adoption and technical efficiency. It builds on existing evaluation models used in the field of SDM. Case study approach was used to validate the model in four software development organisations. In all four cases the management confirmed that the model provided valuable new insights into adoption and efficiency of the companies' SDM. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Vavpotic, Damjan; Bajec, Marko] Univ Ljubljana, Fac Comp & Informat Sci, Ljubljana 1000, Slovenia.
C3 University of Ljubljana
RP Vavpotic, D (corresponding author), Univ Ljubljana, Fac Comp & Informat Sci, Trzaska 25, Ljubljana 1000, Slovenia.
EM damjan.vavpotic@fri.uni-lj.si
RI Vavpotic, Damjan/G-3527-2010
OI Vavpotic, Damjan/0000-0002-8039-7110
CR Aaen I, 2003, IEEE SOFTWARE, V20, P86, DOI 10.1109/MS.2003.1231159
   Agarwal R, 1997, IEEE T ENG MANAGE, V44, P347, DOI 10.1109/17.649864
   AJZEN I, 1991, ORGAN BEHAV HUM DEC, V50, P179, DOI 10.1016/0749-5978(91)90020-T
   Ambler Scott, 2002, Agile modeling: effective practices for extreme programming and the unified process
   Avison D., 2006, Information Systems Development-Methodologies, Techniques & Tools
   Bajec M, 2007, INFORM SOFTWARE TECH, V49, P345, DOI 10.1016/j.infsof.2006.05.007
   Bevan N, 1999, J SYST SOFTWARE, V49, P89, DOI 10.1016/S0164-1212(99)00070-9
   Brinkkemper S, 1999, INFORM SYST, V24, P209, DOI 10.1016/S0306-4379(99)00016-2
   Cockburn A., 2002, AGILE SOFTWARE DEV
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   DAVIS R, 2001, BUSINESS PROCESS MOD
   DOWNS GW, 1976, ADMIN SCI QUART, V21, P700, DOI 10.2307/2391725
   FERNANDES JM, 2004, P 5 INT C
   Fetscherin M, 2008, J ELECTRON COMMER RE, V9, P231
   Fitzgerald B, 2003, COMMUN ACM, V46, P64, DOI 10.1145/641205.641206
   Fitzgerald B, 1996, INFORM SYST J, V6, P3
   Fitzgerald B, 1998, INFORM MANAGE-AMSTER, V34, P317, DOI 10.1016/S0378-7206(98)00072-X
   Gallivan M. J., 2001, Data Base for Advances in Information Systems, V32, P51
   Gallivan MJ, 2003, INFORM MANAGE-AMSTER, V40, P443, DOI 10.1016/S0378-7206(02)00039-3
   Green G., 1999, Perceived control of software developers and its impact on the successful diffusion of information technology
   Green G.C., 2004, Journal of High Technology Management Research, V15, P123, DOI DOI 10.1016/J.HITECH.2003.10.001
   Green GC, 2005, INFORM SOFTWARE TECH, V47, P543, DOI 10.1016/j.infsof.2004.10.004
   HARMSEN F, 1994, IFIP TRANS A, V55, P169
   Henderson-Sellers B, 2003, COMMUN ACM, V46, P73, DOI 10.1145/944217.944242
   Huisman M, 2006, INFORM MANAGE-AMSTER, V43, P29, DOI 10.1016/j.im.2005.01.005
   Huisman M, 2003, 7TH WORLD MULTICONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS, VOL VI, PROCEEDINGS, P57
   Huisman M., 2002, Advanced Information Systems Engineering. 14th International Conference, CAiSE 2002. Proceedings (Lecture Notes in Computer Science Vol.2348), P134
   *IBM CORP, 2006, RAT UN PROC V 7 0 1
   Iivari J, 1996, COMMUN ACM, V39, P94, DOI 10.1145/236156.236183
   Karlsson F, 2004, INFORM SOFTWARE TECH, V46, P619, DOI 10.1016/j.infsof.2003.12.004
   Khalifa M, 2000, IEEE T ENG MANAGE, V47, P360, DOI 10.1109/17.865904
   Klein KJ, 1996, ACAD MANAGE REV, V21, P1055, DOI 10.2307/259164
   KRUCHTEN P., 1999, Rational Unified Process-An Introduction
   LEONARDBARTON D, 1987, INTERFACES, V17, P6, DOI 10.1287/inte.17.3.6
   Low G, 1997, J INFORM TECHNOL, V12, P187, DOI 10.1080/026839697345053
   McChesney IR, 1993, EUR J INFORM SYST, V2, P201, DOI 10.1057/ejis.1993.30
   McConnell S., 1996, Rapid Development: Taming Wild Software Schedules
   MIRBEL I, 2004, SITUATIONAL METHOD E
   Moore GC, 1991, INFORM SYST RES, V2, P192, DOI 10.1287/isre.2.3.192
   Niazi M, 2005, J SYST SOFTWARE, V74, P155, DOI 10.1016/j.jss.2003.10.017
   NUNALLY JC, 1978, PSYHOMETRIC THEORY
   RAI A, 1994, OMEGA-INT J MANAGE S, V22, P133, DOI 10.1016/0305-0483(94)90074-4
   RALYTE J, 2003, P 15 INT C ADV INF S
   Rawstorne P., 2000, ICIS 2000 P BRISB AU, P35
   Riemenschneider CK, 2002, IEEE T SOFTWARE ENG, V28, P1135, DOI 10.1109/TSE.2002.1158287
   Rogers EM, 2003, DIFFUSION INNOVATION
   Sharma S, 2003, INFORM MANAGE-AMSTER, V40, P391, DOI 10.1016/S0378-7206(02)00049-6
   Ter Hofstede AHM, 1997, INFORM SYST, V22, P401, DOI 10.1016/S0306-4379(97)00024-0
   TESCH DB, 1995, J SYST SOFTWARE, V28, P39, DOI 10.1016/0164-1212(94)00079-3
   VAVPOTIC D, 2004, P 13 INT C INF SYST
   Venkatesh V, 2000, MANAGE SCI, V46, P186, DOI 10.1287/mnsc.46.2.186.11926
   WYNEKOOP JL, 1995, J INFORM TECHNOL, V10, P65, DOI 10.1057/jit.1995.9
   Yin R.K., 2003, CASE STUDY RES DESIG
   1998, ISOIEC15504
   2002, CMUSEI2002TR029
   1998, ISOIECFCD91261 1
NR 56
TC 31
Z9 35
U1 1
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 528
EP 545
DI 10.1016/j.infsof.2008.06.001
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 386YX
UT WOS:000261919900021
DA 2024-07-18
ER

PT J
AU Bibi, S
   Stamelos, I
   Angelis, L
AF Bibi, S.
   Stamelos, I.
   Angelis, L.
TI Combining probabilistic models for explanatory productivity estimation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software cost estimation; machine learning; association rules;
   classification and regression trees
ID DEVELOPMENT EFFORT PREDICTION; COST ESTIMATION; SOFTWARE
AB In this paper Association Rules (AR) and Classification and Regression Trees (CART) are combined in order to deliver an effective conceptual estimation framework. AR descriptive nature is exploited by identifying logical associations between project attributes and the required effort for the development of the project. CART method on the other hand has the benefit of acquiring general knowledge from specific examples of projects and is able to provide estimates for all possible projects. The particular methods have the ability of teaming and modelling associations in data and hence they can be used to describe complex relationships in software cost data sets that are not immediately apparent. Potential benefits of combining these probabilistic methods involve the ability of the final model to reveal the way in which particular attributes can increase or decrease productivity and the fact that such assumptions vary among different ranges of productivity values. Experimental results on two data. sets indicate efficient overall performance of the suggested integrated method. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Bibi, S.; Stamelos, I.; Angelis, L.] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
C3 Aristotle University of Thessaloniki
RP Bibi, S (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
EM sbibi@csd.auth.gr; stamelos@csd.auth.gr; lef@csd.auth.gr
RI Stamelos, Ioannis/AAK-7207-2020
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Angelis L, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P4
   [Anonymous], 2001, ADAP COMP MACH LEARN
   [Anonymous], 2002, Applied Statistics for Software Managers
   [Anonymous], 1989, Stochastic Complexity in Statistical Inquiry
   BIBI S, 2004, P EUR SOFTW PROC IMP
   BIBI S, 2004, 1 SOFTW MEAS EUR FOR
   BOEHM B, 1995, ANN SOFTW ENG, V1, P45
   Boehm BW., 1981, Software Engineering Economics
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   Briand LC, 1998, PROC INT CONF SOFTW, P390, DOI 10.1109/ICSE.1998.671392
   Clemen RT, 1999, RISK ANAL, V19, P187, DOI 10.1023/A:1006917509560
   Frank E., 1999, Data Mining: Practical Machine Learning Tools and Techniques with Java Implementations
   HELMERHEIDELBER.O, 1966, SOCIAL TECHNOLOGY
   HOGARTH RM, 1978, ORGAN BEHAV HUM PERF, V21, P40, DOI 10.1016/0030-5073(78)90037-5
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Jeffery R, 2000, INFORM SOFTWARE TECH, V42, P1009, DOI 10.1016/S0950-5849(00)00153-1
   JEFFERY R, 2000, P ESCOM SCOPE 2000 M, P239
   Jorgensen M, 2005, IEEE SOFTWARE, V22, P57, DOI 10.1109/MS.2005.73
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P79, DOI 10.1016/S0164-1212(02)00160-7
   Jorgensen M, 2003, INFORM SOFTWARE TECH, V45, P123, DOI 10.1016/S0950-5849(02)00188-X
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   JORGENSEN M, 2002, 14 IEEE C SOFTW ENG
   Kitchenham B, 1997, IEEE SOFTWARE, V14, P69, DOI 10.1109/52.589239
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kitchenham B, 1998, IEEE T SOFTWARE ENG, V24, P278, DOI 10.1109/32.677185
   Lee A, 1998, INFORM MANAGE-AMSTER, V34, P1, DOI 10.1016/S0378-7206(98)00041-X
   Lokan CJ, 2000, INFORM SOFTWARE TECH, V42, P649, DOI 10.1016/S0950-5849(00)00108-7
   MacDonell SG, 2003, J SYST SOFTWARE, V66, P91, DOI 10.1016/S0164-1212(02)00067-5
   Mair C, 2000, J SYST SOFTWARE, V53, P23, DOI 10.1016/S0164-1212(00)00005-4
   MAIR C, 1999, ICSE 99 LOS ANG MAY
   Passing U, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P120, DOI 10.1109/ISESE.2003.1237971
   Pickard L., 2001, IEE Proceedings-Software, V148, P165, DOI 10.1049/ip-sen:20010621
   Sentas P, 2005, INFORM SOFTWARE TECH, V47, P17, DOI 10.1016/j.infsof.2004.05.001
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shepperd M, 1996, PROC INT CONF SOFTW, P170, DOI 10.1109/ICSE.1996.493413
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Stamelos I, 2003, INFORM SOFTWARE TECH, V45, P51, DOI 10.1016/S0950-5849(02)00163-5
   Stamelos L, 2003, INFORM MANAGE-AMSTER, V40, P729, DOI 10.1016/S0378-7206(02)00099-X
   Sturges HA, 1926, J AM STAT ASSOC, V21, P65, DOI 10.1080/01621459.1926.10502161
   Torgo L., 1997, Intelligent Data Analysis, V1, DOI 10.1016/S1088-467X(97)00013-9
NR 41
TC 18
Z9 20
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2008
VL 50
IS 7-8
BP 656
EP 669
DI 10.1016/j.infsof.2007.06.004
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 305KT
UT WOS:000256178000004
DA 2024-07-18
ER

PT J
AU Cupla, G
   Di Nitto, E
AF Cupla, Gianpaolo
   Di Nitto, Ellsabetta
TI On adopting content-based routing in service-oriented architectures
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE service-oriented architectures; content-based routing;
   publish-subscribe; query-advertise
AB Two requirements of SOAs are the need for a global discovery agency, which assists requesters in finding their required services, and the need for new interaction paradigms, which overcome the limitations of the usual request/reply style. Content-Based Routing (CBR) holds the promise of addressing both these aspects with a single technology and a single routing infrastructure. To provide arguments for our hypothesis, we review the on going efforts for service retrieval and asynchronous communication in SOAs, identify their limitations and the advantages, and discuss how incorporating CBR into SOAs allows to solve most limitations, but also poses some interesting challenges. (c) 2007 Elsevier B.V. All rights reserved.
C1 [Cupla, Gianpaolo; Di Nitto, Ellsabetta] Politecn Milan, Dip Elettron & Informaz, I-20133 Milan, Italy.
C3 Polytechnic University of Milan
RP Di Nitto, E (corresponding author), Politecn Milan, Dip Elettron & Informaz, Via Golgi 40, I-20133 Milan, Italy.
EM cugola@elet.polimi.it; dinitto@elet.polimi.it
OI Di Nitto, Elisabetta/0000-0003-3422-5171
CR AIKEN D, 2005, D10 1V0 1 FOCUSED CR
   ALMASRI E, 2007, P IEEE CONS COMM NET
   Alves A., 2006, Web Services Business Process Execution Language - version 2.0
   [Anonymous], 2004, Enterprise service bus
   [Anonymous], UDDI VERSION 3 0 2
   [Anonymous], P 12 ACM C COMP COMM
   Bachlechner D., 2006, WEB SERVICE DISCOVER
   BACHLECHNER D, 2006, P 5 WORKSH SEMWIKI20
   BALDONI R, 2005, P 25 INT C DISTR COM
   BARESI L, 2006, P 4 INT C SERV OR CO
   Baresi L, 2006, COMPUTER, V39, P36, DOI 10.1109/MC.2006.362
   Beatty J., 2005, Web Services Dynamic Discovery
   Bergman O, 2003, J HIGH ENERGY PHYS
   BOAG S, 2007, XQUERY 1 0 XML LANGU
   Booth D., 2004, WEB SERVICES ARCHITE
   BOX D, 2006, W3C WEB SERV EV
   Carzaniga A, 2001, ACM T COMPUT SYST, V19, P332, DOI 10.1145/380749.380767
   CHAND R, 2004, P 23 IEEE INT S REL
   CHAPPELL D, 2006, WEB SERVICES BROKERE
   CHINNICI R, 2007, W3C WSDL
   CHINNICI R., 2004, WEB SERVICES DESCRIP
   COSTA P, 2004, P 24 INT C DISTR COM
   Cugola G, 2001, IEEE T SOFTWARE ENG, V27, P827, DOI 10.1109/32.950318
   CUGOLA G, 2004, P 19 ACM S APPL COMP
   CUGOLA G, 2006, WORKSH SOFTW ENG MID
   Cugola G., 2006, HDB MOBILE MIDDLEWAR, P257
   CUGOLA G, 2007, P IN INT C DISTR EV
   CUGOLA G, 2002, LECT NOTES COMPUTER, V2596
   DIAO Y, 2004, P 30 INT C VER LARG
   DOURDAS N, 2006, P 18 C ADV INF SYST
   EUGSTER P, MANY FACES PUBLISH S, V2
   Farrell Joel., 2007, Semantic Annotations for WSDL and XML Schema: W3C Recommendation
   Fiege L., 2004, P 3 INT WORKSH DISTR
   FOSTER I, 2005, LECT NOTES COMPUTER, V3779
   Fox G, 2005, P IEEE, V93, P564, DOI 10.1109/JPROC.2004.842759
   Graham S., 2006, WEB SERVICES RESOURC
   Graham S., 2004, PUBLISH SUBSCRIBE NO
   Graham S., 2006, WEB SERVICES BASE NO
   Gudgin M., 2007, SOAP VERSION 1 2 1
   GUPTA A, 2004, P 5 ACM IFIP USENIX, V3231
   HEIMBIGNER D, 2001, P 2001 ACM S APPL CO
   HUANG Y, 2006, P 6 IEEE INT S CUST
   HUMPHREY M, 2005, INT J WEB SERV RES, V2, P83
   KELLER A, 2003, J NETWORK SYSTEMS MA, V1
   KHURANA H, 2005, P 20 ACM S APPL COMP
   Kozlenkov A, 2007, INT J WEB SERV RES, V4, P82, DOI 10.4018/jwsr.2007040104
   Lynch D., 2006, P 2 WORKSH INN WEB I
   Mahambre SP, 2007, IEEE INTERNET COMPUT, V11, P35, DOI 10.1109/MIC.2007.77
   MARTIN D, 2004, OWLS SEMANTIC MARKUP
   Muhl G, 2006, Distributed Event-Based Systems
   MUHL G, 2005, LECT NOTES COMPUTER, V3648
   Nadalin Anthony., 2006, Web Services Security: SOAP Message Security 1.1 (WS-Security 2004)
   NANYAN J, 2006, P IEEE INT C PERV SE
   OPYRCHAL L, 2006, P INT C PERV SERV IC
   OPYRCHAL L, 2001, P 10 USENIX SEC S US
   PALLICKARA S, 2003, P 4 ACM IFIP USENIX
   PALLICKARA S, 2005, P 6 IEEE ACM INT WOR
   PEREIRA J, 2001, P 27 INT C VER LAR D
   Pesonen Lauri I. W., 2007, Journal of Networks, V2, P57, DOI 10.4304/jnw.2.2.57-67
   PIETZUCH PR, 2003, P 2 INT WORKSH DISTR
   QUIROZ A, 2006, P 7 IEEE ACM INT C G
   Raiciu C., 2006, P 2 INT C SEC PRIV C
   ROMPOTHONG P, 2003, P 1 INT S INF COMM T
   Sapkota B., 2006, P INT C INT WEB APPL
   SHEN Z, 2004, P 3 INT WORKSH DISTR
   SNOEREN AC, 2001, P 18 ACM S OP SYST P
   SPANOUDAKIS G, 2007, P IEEE 2007 INT C WE
   TERPSTRA W, 2003, P 2 INT WORKSH DISTR
   TIAN F, 2004, P 23 ACM SIGMOD INT
   TRIANTAFILLOU P, 2004, P 3 INT WORKSH DISTR
   Vambenepe W., 2006, WEB SERVICES TOPICS
   Verma K., 2005, Information Technology & Management, V6, P17, DOI 10.1007/s10799-004-7773-4
   WALKERDINE J, 2007, P 2 INT C INT WEB AP
   WANG C, 2002, P 35 ANN HAW INT C S
   XU Z, 2005, P 7 INT WORKSH DISTR, V3741
NR 75
TC 8
Z9 10
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2008
VL 50
IS 1-2
BP 22
EP 35
DI 10.1016/j.infsof.2007.10.004
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 248ZT
UT WOS:000252196700005
DA 2024-07-18
ER

PT J
AU Grau, G
   Franch, X
   Maiden, NAM
AF Grau, Gernma
   Franch, Xavier
   Maiden, Neil A. M.
TI PR<i>i</i>M:: An <i>i</i>*-based process reengineering method for
   information systems specification
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT IEEE International Requirements Engineering Conference/12th
   International Workshop on Requirements Engineering - Foundation for
   Software Quality
CY 2006
CL Luxembourg, LUXEMBOURG
SP IEEE
DE goal modelling.; i* modelling method; process reengineering;
   requirements elicitation; use case; generation and evaluation of
   alternatives; system analysis; system design
ID REQUIREMENTS; MODELS
AB Information system development can often be addressed as a business process reengineering practice, either because it automates some human-based processes or because it replaces an existing legacy system. Therefore, observing and analysing current processes can enable analysts to converge on the specification of the new system, generating and evaluating new system alternatives throughout. In this paper, we propose a method to support this reengineering process that analyses the strengths and weaknesses of the current process; considers the strategic needs of the organization; provides guidelines for the prescriptive construction of i* models; and drives the systematic generation and evaluation of alternative technological and organizational solutions for the new system. (c) 2007 Elsevier B.V. All rights reserved.
C1 [Grau, Gernma; Franch, Xavier] Univ Politecn Cataluna, E-08034 Barcelona, Spain.
   [Maiden, Neil A. M.] City Univ London, Ctr HCI Design, London EC1V 0HB, England.
C3 Universitat Politecnica de Catalunya; City University London
RP Grau, G (corresponding author), Univ Politecn Cataluna, C Jordi Girona 1-3, E-08034 Barcelona, Spain.
EM ggrau@lsi.upc.edu
RI Franch, Xavier/A-8588-2008; Fritola, Renato/AAU-4721-2021
OI Franch, Xavier/0000-0001-9733-8830
CR [Anonymous], 2005, SEKE 2005
   Anton Annie I., 1994, LECT NOTES COMPUTER, V811, P94, DOI [10.1007/3-540-58113-8_164, DOI 10.1007/3-540-58113-8_164]
   Ayala CP, 2005, LECT NOTES COMPUT SC, V3412, P90
   Bengtsson P, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P308, DOI 10.1109/ICSR.1998.685756
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Brinkkemper S, 1998, LECT NOTES COMPUT SC, V1413, P381, DOI 10.1007/BFb0054236
   Bryl V, 2006, LECT NOTES COMPUT SC, V4275, P533
   Chung L., 2000, Non-functional Requirements in Software Engineering
   CYSNEIROS G, 2004, 19 ANN ACM C OBJ OR
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Estrada H, 2003, LECT NOTES COMPUT SC, V2813, P277
   Franch X, 2005, LECT NOTES COMPUT SC, V3520, P551
   Franch X, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P348
   Franch X, 2003, IEEE SOFTWARE, V20, P34, DOI 10.1109/MS.2003.1159027
   Franch X, 2003, LECT NOTES COMPUT SC, V2580, P81
   Franch X, 2006, LECT NOTES COMPUT SC, V4001, P495, DOI 10.1007/11767138_33
   Giorgini P, 2003, LECT NOTES COMPUT SC, V2800, P1
   Goetz R, 2003, SECOND IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS, PROCEEDINGS, P75, DOI 10.1109/COGINF.2003.1225956
   Grau G, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P455, DOI 10.1109/RE.2005.55
   GRAU G, 2005, P 11 INT WORKSH REQ, P71
   GRAU G, LSI0637R U POL CAT
   GRAU G, 2007, P 19 INT C ADV INF S
   Grau G., 2005, 17th International Conference on Software Engineering and Knowledge Engineering SEKE05, P259
   GRAU G, 2006, P 18 INT C SOFTW ENG, P657
   Grau G, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P359
   *ISO IEC, 2001, 9126 ISO IEC
   JONES S, 2004, BOOK CHAPTER REQUIRE
   JONES S, 2004, P WORKSH BRIDG GAPS
   Kaiya H, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/ICRE.2002.1048501
   Katzenstein G, 2000, ACM T INFORM SYST, V18, P383, DOI 10.1145/358108.358111
   Kolp M, 2003, LECT NOTES COMPUT SC, V2681, P617
   Maiden N, 2004, IEEE SOFTWARE, V21, P68, DOI 10.1109/MS.2004.1331305
   Maiden N., 2004, SYSTEMATIC SCENARIO, P166
   Maiden NAM, 2004, BIOMED SCI INSTRUM, V3084, P368
   NETO GC, 2004, P 7 WORKSH ENG REQ, P39
   POTTS C, 1994, IEEE SOFTWARE, V11, P21, DOI 10.1109/52.268952
   RALYTE J, 2001, LNCS, V2224, P471
   Regev G, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P353, DOI 10.1109/RE.2005.80
   Rolland C., 1998, Requirements Engineering, V3, P23, DOI 10.1007/BF02802919
   SAI V, 2004, P 3 INT C COTS BAS S, P63
   Santander VFA, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P32, DOI 10.1109/ICRE.2002.1048503
   SCHMITZ D, 2004, LNCS, V3294, P520
   VANLAMSWEERDE A, 1992, M SCHED SYST PROB ST
   Wohlin C., 1999, EXPT SOFTWARE ENG IN
   WOOLDRIDGE M, 2000, GAIA METHOLOGY AGENT, V3
   Yu E., 1995, MODELING STRATEGIC R
NR 46
TC 30
Z9 36
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2008
VL 50
IS 1-2
BP 76
EP 100
DI 10.1016/j.infsof.2007.10.006
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 248ZT
UT WOS:000252196700010
DA 2024-07-18
ER

PT J
AU Wohlin, C
AF Wohlin, Claes
TI An analysis of the most cited articles in software engineering journals
   - 2001
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE citations; bibliometric research; software engineering
AB Citations and related work are crucial in any research to position the work and to build on the work of others. A high citation count is an indication of the influence of specific articles. The importance of citations means that it is interesting to analyze which articles are cited the most. Such an analysis has been conducted using the ISI Web of Science to identify the most cited software engineering journal articles published in 2001. The objective of the analysis is to identify and list the articles that have influenced others the most as measured by citation count. An understanding of which research is viewed by the research community as most valuable to build upon may provide valuable insights into what research to focus on now and in the future. Based on the analysis, a list of the 20 most cited articles is presented here. The intention of the analysis is twofold. First, to identify the most cited articles, and second, to invite the authors of the most cited articles in 2001 to contribute to a special section of Information and Software Technology. Three authors have accepted the invitation and their articles appear in this special section. Moreover, an analysis has been conducted regarding which authors are most productive in terms of software engineering journal publications. The latter analysis focuses on the publications in the last 20 years, which is intended as a complement to last year's analysis focusing on the most cited articles in the last 20 years [C. Wohlin, An Analysis of the Most Cited Articles in Software Engineering Journals - 2007, Information and Software Technology 49 (1) 2-11]. The most productive author in the last 20 years is Professor Victor Basili. (c) 2007 Elsevier B.V. All rights reserved.
C1 Blekinge Inst Technol, Sch Engn, Dept Syst & Software Engn, S-37225 Ronneby, Sweden.
C3 Blekinge Institute Technology
RP Wohlin, C (corresponding author), Blekinge Inst Technol, Sch Engn, Dept Syst & Software Engn, POB 520, S-37225 Ronneby, Sweden.
EM Claes.Wohlin@bth.se
OI Wohlin, Claes/0000-0003-0460-5253
CR Glanzel W, 2002, SCIENTOMETRICS, V53, P171, DOI 10.1023/A:1014848323806
   Jones AW, 2005, INT J LEGAL MED, V119, P59, DOI 10.1007/s00414-004-0512-x
   McBurney MK, 2002, IPCC 2002, REFLECTIONS ON COMMUNICATION, PROCEEDINGS, P108, DOI 10.1109/IPCC.2002.1049094
   Tse TH, 2006, J SYST SOFTWARE, V79, P816, DOI 10.1016/j.jss.2005.08.018
   Wohlin C, 2005, INFORM SOFTWARE TECH, V47, P957, DOI 10.1016/j.infsof.2005.09.002
   Wohlin C, 2007, INFORM SOFTWARE TECH, V49, P2, DOI 10.1016/j.infsof.2006.08.004
   Zitt M, 2005, SCIENTOMETRICS, V63, P373, DOI 10.1007/s11192-005-0218-y
NR 7
TC 21
Z9 21
U1 1
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2008
VL 50
IS 1-2
BP 3
EP 9
DI 10.1016/j.infsof.2007.10.002
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 248ZT
UT WOS:000252196700003
DA 2024-07-18
ER

PT J
AU de Vries, D
   Roddick, JF
AF de Vries, Denise
   Roddick, John F.
TI The case for mesodata: An empirical investigation of an evolving
   database system
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE database evolution; domain evolution; mesodata
AB Database evolution can be considered a combination of schema evolution, in which the structure evolves with the addition and deletion of attributes and relations, together with domain evolution in which an attribute's specification, semantics and/or range of allowable values changes. We present the results of an empirical investigation of the evolution of a commercial database system that measures and delineates between changes to the database that are (a) structural and (b) attribute domain related. We also estimate the impact that modelling using the mesodata approach would have on the evolving system. (c) 2006 Elsevier B.V. All rights reserved.
C1 Flinders Univ S Australia, Sch Informat & Engn, Adelaide, SA 5001, Australia.
C3 Flinders University South Australia
RP de Vries, D (corresponding author), Flinders Univ S Australia, Sch Informat & Engn, POB 2100, Adelaide, SA 5001, Australia.
EM Denise.deVries@flinders.edu.au; roddick@infoeng.flinders.edu.au
RI Roddick, John/B-1010-2016
OI Roddick, John/0000-0001-7024-0796; de Vries, Denise/0000-0001-9061-6471
CR Ahmed-Nacer M, 2000, COMPUT ARTIF INTELL, V19, P183
   ALBERT J, 2000, 9 INT C INF KNOWL MA, P461
   ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   [Anonymous], 1983, The theory of relational databases
   BEENVENTANO D, 2004, IFIP WORLD COMP C TO
   CHAWATHE S, 1994, 16 M INF PROC SOC JA, P7
   COMYNWATTIAU I, 2003, 2 INT WORKSH UN SOFT
   Davidson S, 1998, LECT NOTES COMPUT SC, V1358, P55, DOI 10.1007/BFb0035005
   DEVRIES D, 2004, 3 INT WORKSJ EV CHAN, P429
   DEVRIES D, 2004, 15 INT C DAT EXP SYS
   Elmasri R., 2004, FUNDAMENTALS DATABAS, V3rd
   Fellbaum C., 1998, WORDNET ELECT LEXICA, DOI DOI 10.7551/MITPRESS/7287.001.0001
   Garcia-Molina H., 1997, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V8, P117, DOI 10.1023/A:1008683107812
   Haas L., 1999, IEEE DATA ENG B, V22, P31
   HULL R, 1986, SIAM J COMPUT, V15, P856, DOI 10.1137/0215061
   HULL R, 1997, ACM S PRINC DAT SYST, P51
   KAINZ W, 1993, INT J GEOGR INF SYST, V7, P215, DOI 10.1080/02693799308901953
   Kedad Z, 1999, LECT NOTES COMPUT SC, V1728, P325
   Lerner BS, 2000, ACM T DATABASE SYST, V25, P83, DOI 10.1145/352958.352983
   LI C, 1998, 1998 ACM SIGMOD INT, P564
   McBrien P, 1998, INFORM SYST, V23, P307, DOI 10.1016/S0306-4379(98)00014-3
   MCBRIEN P, 2002, 14 INT C ADV INF SYS, P484
   MCBRIEN P, 1997, INT C CONC MOD ENT R, P408
   Miller R. J., 1993, 19th International Conference on Very Large Data Bases Proceedings, P120
   Miller RJ, 2001, SIGMOD RECORD, V30, P78, DOI 10.1145/373626.373713
   MILLER RJ, 1994, INFORM SYST, V19, P3, DOI 10.1016/0306-4379(94)90024-8
   MILLER RJ, 1994, SCHEMA INTENSION GRA
   Motro A, 2004, SIGMOD REC, V33, P51, DOI 10.1145/1041410.1041419
   PARENT C, 2000, AAAI 2000 WORKSH SPA, P83
   Poulovassilis A, 1998, DATA KNOWL ENG, V28, P47, DOI 10.1016/S0169-023X(98)00013-5
   QIAN X, 1996, ADV DATABASE TECHNO, V1057, P114
   Rahm E, 2001, VLDB J, V10, P334, DOI 10.1007/s007780100057
   RAHM E, 2001, MSRTR200117 U LEIPZ
   Ram S, 2004, IEEE T KNOWL DATA EN, V16, P189, DOI 10.1109/TKDE.2004.1269597
   Ram S., 1999, MANAGEMENT HETEROGEN, P119
   Richardson R., 1994, USING WORDNET KNOWLE
   RODDICK J, 1993, 12 INT C ENT REL APP, P143
   RODDICK JF, 2006, 4 INT WORKSH EV CHAN, V4231
   RODDICK JF, 2003, 26 AUSTR COMP SCI C, V16, P111
   SJOBERG D, 1993, INFORM SOFTWARE TECH, V35, P35, DOI 10.1016/0950-5849(93)90027-Z
   SONTNYKOVA A, 2000, 17 INT CODATA C
   SPACCAPIETRA S, 2005, INT WORKSH UB DAT MA
   XU L, 1997, BRIT NAT C DAT, P215
NR 43
TC 9
Z9 10
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2007
VL 49
IS 9-10
BP 1061
EP 1072
DI 10.1016/j.infsof.2006.11.001
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 199PQ
UT WOS:000248708100008
DA 2024-07-18
ER

PT J
AU Atkinson, DC
   Weeks, DC
   Noll, J
AF Atkinson, Darren C.
   Weeks, Daniel C.
   Noll, John
TI Tool support for iterative software process modeling
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE process modeling; model verification; static analysis; PML
ID DEPENDENCE GRAPH
AB To formalize a process, its important aspects must be extracted and described in a model. This model is often written in a formal language so that the process itself can be automated. Since models are often developed iteratively, this language should support this iterative development cycle. However, many existing languages do not. In this paper, we use an existing high-level process modeling language and present a tool that we have developed for supporting iterative development. We have used our tool to develop and refine a process model of distributed software development for NetBeans. (c) 2006 Elsevier B.V. All rights reserved.
C1 Santa Clara Univ, Dept Comp Engn, Santa Clara, CA 95053 USA.
C3 Santa Clara University
RP Atkinson, DC (corresponding author), Santa Clara Univ, Dept Comp Engn, 500 El Camino Real, Santa Clara, CA 95053 USA.
EM atkinson@engr.scu.edu
OI Noll, John/0000-0002-4022-9374
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   Atkinson DC, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P73, DOI 10.1109/APSEC.2004.98
   ATKINSON DC, 2003, P 7 IASTED INT C SOF, P587
   Cass A. G., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P754, DOI 10.1109/ICSE.2000.870488
   CHOW FC, 1990, ACM T PROGR LANG SYS, V12, P501, DOI 10.1145/88616.88621
   Cobleigh JM, 2002, IBM SYST J, V41, P140, DOI 10.1147/sj.411.0140
   COBLEIGH JM, 2000, P INT S SOFTW TEST A, P96
   Cook JE, 1999, ACM T SOFTW ENG METH, V8, P147, DOI 10.1145/304399.304401
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   DWYER MB, 1994, P 2 ACM SIGSOFT S FD, P62
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   GRUHN V, P 1991 EUR S SOFTW D, P271
   HRISTOVA M, 2003, P 34 SIGCSE TECHN S, P153
   JACKSON D, 1991, P 13 INT C SOFTW ENG, P13
   JENSEN C, 2004, 1 LOOK NETBEANS REQI
   JOERIS G, 1999, P 11 INT C ADV INF S, P88
   Johnson E. W., 1998, ACM Transactions on Design Automation of Electronic Systems, V3, P1, DOI 10.1145/270580.270581
   JOHNSON SC, 1977, 65 COMPUTER SCI
   KAISER GE, 1993, PROC INT CONF SOFTW, P132, DOI 10.1109/ICSE.1993.346050
   KLINGLER CD, 1994, F1962888D0031
   Lengauer T., 1979, ACM T PROGR LANG SYS, V1, P121, DOI 10.1145/357062.357071
   MCADAM BJ, 1998, P 3 ACM INT C FUNCT, P338
   Mi P., 1990, IEEE Transactions on Knowledge and Data Engineering, V2, P283, DOI 10.1109/69.60792
   Noll J, 2001, J NETW COMPUT APPL, V24, P39, DOI 10.1006/jnca.2000.0122
   *PALL ATH PROC MAN, 2003, PROT PROC MOD EXAMPL
   Scacchi W., 2000, Software Process Improvement and Practice, V5, P183, DOI 10.1002/1099-1670(200006/09)5:2/3<183::AID-SPIP115>3.0.CO;2-D
   Scacchi W., 1997, International Journal of Intelligent Systems in Accounting, Finance and Management, V6, P83, DOI 10.1002/(SICI)1099-1174(199706)6:2<83::AID-ISAF126>3.0.CO;2-1
   STALLMAN RM, 1991, GCC REF MAN
   Sutton S. M.  Jr., 1995, ACM Transactions on Software Engineering and Methodology, V4, P221, DOI 10.1145/214013.214017
   TIP F, 1995, J PROGRAM LANG, V3, P121
   van der Aalst: W.M.P., 1999, Systems Analysis Modeling Simulation, Volume, V35, Pages, P345
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   WISE A, 1998, 1 0 LANGUAGE REP
NR 33
TC 8
Z9 9
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2007
VL 49
IS 5
BP 493
EP 514
DI 10.1016/j.infsof.2006.07.006
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 161VS
UT WOS:000246045200006
DA 2024-07-18
ER

PT J
AU Andreou, AS
   Tziakouris, M
AF Andreou, Andreas S.
   Tziakouris, Marios
TI A quality framework for developing and evaluating original software
   components
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software components; quality assessment; reuse; development
AB Component-based software development is being identified as the emerging method of developing complex applications consisting of heterogeneous systems. Although more research attention has been given to Commercial Off The Shelf (COTS) components, original software components are also widely used in the software industry. Original components are smaller in size, they have a narrower functional scope and they usually find more uses when it comes to specific and dedicated functions. Therefore, their need for interoperability is equal or greater, than that of COTS components. A quality framework for developing and evaluating original components is proposed in this paper, along with an application methodology that facilitates their evaluation. The framework is based on the ISO9126 quality model which is modified and refined so as to reflect better the notion of original components. The quality model introduced can be tailored according to the organization-reuser and the domain needs of the targeted component. The proposed framework is demonstrated and validated through real case examples, while its applicability is assessed and discussed. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Cyprus, Dept Comp Sci, CY-1678 Nicosia, Cyprus.
C3 University of Cyprus
RP Andreou, AS (corresponding author), Univ Cyprus, Dept Comp Sci, 75 Kallipoleos Str, CY-1678 Nicosia, Cyprus.
EM aandreou@ucy.ac.cy; Marios.Tziakouris@CSE.com.cy
OI ANDREOU, ANDREAS/0000-0001-7104-2097
CR [Anonymous], 1997, Software engineering with reusable components
   [Anonymous], 1991, 9126 ISOIEC
   BASS L, 2001, CMUSEI2001TN007, V1
   Baum L, 2000, 37TH INTERNATIONAL CONFERENCE ON TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS, PROCEEDINGS, P266, DOI 10.1109/TOOLS.2000.891375
   *BBN CORP, 2001, QUAL OBJ PROJ
   BELCHIOR AD, 1997, FUZZY MODEL SOFTWARE
   Bertrand M.L. Flottes, 2002, P 6 ECOOP WORKSH QUA, P24
   Boehm B.W., 1978, Characteristics of Software Quality
   Brahnmath Girish, 2002, P SE SOFTW ENG C HUN, P513
   Dehlin M., 2000, WORKSH CONT COLL SUC
   GAO J, 2000, P 3 ICSE WORKSH COMP
   GARVIN DA, 1984, SLOAN MANAGE REV, V26, P25
   GOULAO MA, 2002, 28 EUROMICRO C DORTM
   GOULAO MA, 2002, COMPSAC2002 OXF ENGL, P313
   HANSEN WJ, 2001, ORIGINAL PROCESS TER
   KALLIO P, 2001, P 4 ICSE WORKSH COMP, P111
   Kitchenham B., 1996, TR9609 U KEEL
   KOREL B, 1999, P 7 INT WORKSH PROGR, P226
   Mc Call J. A., 1977, FACTORS SOFTWARE QUA, VI
   MUELLER C, 2001, P 2 INT WORKSH AUT P
   Pfleeger S.L., 2001, SOFTWARE ENG THEORY, V2nd
   Preiss O, 2001, EUROMICRO CONF PROC, P114, DOI 10.1109/EURMIC.2001.952445
   RAJE RR, 2001, P 2001 MONT WORKSH E, P109
   ROSENBLUM D, 1997, 9734 U CAL DEP INF C
   Seppänen V, 2001, EUROMICRO CONF PROC, P138, DOI 10.1109/EURMIC.2001.952448
   SIMAO RPS, 2002, QUALITY CHARACTERIST
   SZYPERSKI C, 1998, COMPONENT OBJECT ORI
   VILLELA RMB, 2000, THESIS
NR 28
TC 29
Z9 33
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2007
VL 49
IS 2
BP 122
EP 141
DI 10.1016/j.infsof.2006.03.007
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 118EY
UT WOS:000242926300004
DA 2024-07-18
ER

PT J
AU von Wangenheim, CG
   Weber, S
   Hauck, JCR
   Trentin, G
AF von Wangenheim, Christiane Gresse
   Weber, Sergio
   Hauck, Jean Carlo Rossa
   Trentin, Gisele
TI Experiences on establishing software processes in small companies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software process; process guide; software process modelling; software
   process improvement; small organisation
AB in order to guide the tailoring of existing approaches for the establishment of software processes in small companies, we report our experiences on defining and implementing software processes in two small software companies. The paper describes the principal steps performed and presents information on costs and duration. We analyse, if and how process guides are used, their impacts and how they are improved. Our findings indicate that also in this specific kind of organisation, software processes can be established successfully at low cost considering typical business models, goals and characteristics of small organisations. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Vale Itajai, UNIVALI, BR-88122000 Sao Jose, SC, Brazil.
   Univ Fed Santa Catarina, Grad Program Comp Sci, BR-88040900 Florianopolis, SC, Brazil.
   VOID CAZ Sistemas Ltda, BR-88036002 Florianopolis, SC, Brazil.
   ILOG Tecnol Ltda, BR-88036000 Florianopolis, SC, Brazil.
C3 Universidade do Vale do Itajai; Universidade Federal de Santa Catarina
   (UFSC)
RP von Wangenheim, CG (corresponding author), Univ Vale Itajai, UNIVALI, Rod SC 407,Km 04, BR-88122000 Sao Jose, SC, Brazil.
EM gresse@univali.br; weber@inf.ufsc.br; jean@voidcaz.com.br;
   gisele@ilog.com.br
RI von Wangenheim, Aldo/AAL-7158-2020; von Wangenheim, Christiane
   Gresse/H-3685-2013; Hauck, Jean/AAL-6790-2020
OI von Wangenheim, Aldo/0000-0003-4532-1417; von Wangenheim, Christiane
   Gresse/0000-0002-6566-1606; Hauck, Jean/0000-0001-6550-9092
CR ACUNA X, 2000, SOFTWARE PROCESS MOD
   AHONEN JJ, 2002, SOFTWARE PROCESS IMP, P7
   [Anonymous], 2005, 15504 ISOIEC
   BANDINELLI S, 1995, IEEE T SOFTWARE ENG, V21, P440, DOI 10.1109/32.387473
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   BECKERKORNSTAED.U, 1997, 04597E IESE
   BECKERKORNSTAED.U, 2001, P 3 INT C PROD FOC S
   CHRISTIE M, 1997, CMUSEI97TR008
   *CMMI, 2005, FRAM
   CONRADI R, 2001, P EUR SOFTW ENG C AU
   Curtis B., 1992, COMMUNICATIONS ACM, V35
   JOHNSON DL, 1999, ELEMENTS SOFTWARE PR
   Johnson G., 1989, Exploring strategic management
   KELLNER MI, 1998, P 5 INT C SOFTW PROC
   KURNIAWATI F, 2004, P AUSTR SOFTW ENG C
   MADHAVJI N, 1994, P 3 INT C SOFTW PROC
   MOE NB, 2002, P EUROSPI C GERM
   Scott L, 2002, INFORM SOFTWARE TECH, V44, P601, DOI 10.1016/S0950-5849(02)00080-0
   SCOTT L, 2000, P C QUAL ENG SOFTW T
   SCOTT L, 2001, P 4 ICSE WORKSH SOFT
   SUTTON SM, 2000, IEEE SOFTWARE    JUL
   VANDERWANGENHEI.CG, 2006, IEEE SOFTWARE    JAN
NR 22
TC 36
Z9 38
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2006
VL 48
IS 9
BP 890
EP 900
DI 10.1016/j.infsof.2005.12.010
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 073OC
UT WOS:000239751500011
DA 2024-07-18
ER

PT J
AU Xu, LJ
   Xie, KL
AF Xu, Lijun
   Xie, Kanglin
TI Incremental mining of generator representation using border sets
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE frequent itemset; frequent generator; border set; incremental mining
AB Incremental frequent itemset mining refers to the maintenance and utilization of the knowledge discovered in the previous mining operations for later frequent itemset mining. This paper describes an incremental algorithm for maintaining the generator representation in dynamic datasets. The generator representation is a kind of lossless, concise representation of the set of frequent itemsets. It may be orders of magnitude smaller than the set of frequent itemsets. Furthermore, the algorithm utilizes a novel optimization based on generator borders for the first time in the literature. Generator borders are the borderline between frequent generators and other itemsets. New frequent generators can be generated through monitoring them. Extensive Experiments show that this algorithm is more efficient than previous solutions. (c) 2006 Elsevier B.V. All rights reserved.
C1 Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Shanghai 200030, Peoples R China.
C3 Shanghai Jiao Tong University
RP Xu, LJ (corresponding author), Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, 282 1954 HuaShan Rd, Shanghai 200030, Peoples R China.
EM lijunxu@sjtu.edu.cn; xie-kl@cs.sjtu.edu.cn
CR AGRAWAL R, 1993, P ACM INT C MAN DAT, P402
   Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   [Anonymous], 2000, ACM SIGKDD Explor. Newsl., DOI DOI 10.1145/380995.381017
   Aumann Y, 1999, J INTELL INF SYST, V12, P61, DOI 10.1023/A:1026482903537
   Ayan N.F., 1999, P 5 ACM SIGKDD INT C, P287
   Borgelt C., 2003, P 1 IEEE ICDM WORKSH
   Bykowski A., 2001, PODS 01 P 20 ACM SIG, P267, DOI DOI 10.1145/375551.375604
   Cheung D. W., 1997, P 5 INT C DAT SYST A, P1
   Cheung DW, 1996, PROC INT CONF DATA, P106, DOI 10.1109/ICDE.1996.492094
   Feldman R., 1997, P ACM SIGMOD WORKSH, P59
   Kryszkiewicz M., 2002, Pattern Detection and Discovery. ESF Exploratory Workshop Proceedings (Lecture Notes in Artificial Intelligence Vol. 2447), P92
   Kryszkiewicz M, 2001, 2001 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P305, DOI 10.1109/ICDM.2001.989533
   LEE S, 1997, P SIGMOD WORKSH RES
   LIN DI, 1998, P 6 EUR C EXT DAT TE
   PASQUIER N, 1999, P 7 INT C DAT THEOR, P398
   Pudi V, 2000, INFORM SYST, V25, P323, DOI 10.1016/S0306-4379(00)00021-1
   Thomas S., 1997, Proceedings of the Third International Conference on Knowledge Discovery and Data Mining, P263
   Toivonen H, 1996, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P134
   VELOSO A, 2002, P 2 SIAM INT C DAT M
NR 19
TC 0
Z9 0
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2006
VL 48
IS 8
BP 756
EP 764
DI 10.1016/j.infsof.2005.10.001
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 056GS
UT WOS:000238510700011
DA 2024-07-18
ER

PT J
AU Ardimento, P
   Baldassarre, MT
   Caivano, D
   Visaggio, G
AF Ardimento, Pasquale
   Baldassarre, Maria Teresa
   Caivano, Danilo
   Visaggio, Giuseppe
TI Assessing multiview framework (MF) comprehensibility and efficiency: A
   replicated experiment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE empirical studies; replications; software process improvement; goal
   question metrics
AB Goal oriented quality models have become an important means for assessing and improving software quality. In previous papers, the authors have proposed an approach called multiview framework, for guiding quality managers in designing and managing a goal oriented quality model. This approach has been validated through a controlled experiment carried out with university students.
   In this paper, the authors discuss a replication of the controlled experiment, carried out with 28 university graduates attending a master degree course in an Italian university. Although research hypotheses are the same, context differs. In the replication, experimental subjects were more representative of practitioners, because their master degree course required project work with industrial partners.
   Using a cross-over experimental design we found that subjects using the multiview framework made significantly fiewer errors (p < 0.05, effect size = 1.08) and took significantly less time (p < 0.51, effect size = 1.82) to review the status of a project than when they used a standard GQM approach. This result was consistent with the results of our original experiment. (c) 2006 Elsevier B.V. All fights reserved.
C1 Univ Bari, Dipartimento Informat, I-70126 Bari, Italy.
C3 Universita degli Studi di Bari Aldo Moro
RP Visaggio, G (corresponding author), Univ Bari, Dipartimento Informat, Via Orabona 4, I-70126 Bari, Italy.
EM ardimento@di.uniba.it; baldassarre@di.uniba.it; caivano@di.uniba.it;
   visaggio@di.uniba.it
RI Ardimento, Pasquale/V-1406-2019
OI Ardimento, Pasquale/0000-0001-6134-2993; Caivano,
   Danilo/0000-0001-5719-7447; baldassarre, maria
   teresa/0000-0001-8589-2850; VISAGGIO, GIUSEPPE/0000-0001-5258-5328
CR [Anonymous], 1992, PRACTICAL SOFTWARE M
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 1965, An Analysis of Variance Test for Normality (Complete Samples)
   BALDASSARRE MT, 2004, 2 WORKSH SOFTW QUAL
   BALDASSARRE MT, 2003, INT S EMP SOFTW ENG
   BALDASSARRE MT, 2004, 5 INT C PROD FOC SOF
   BARNARD J, 1994, IEEE SOFTWARE, V11, P59, DOI 10.1109/52.268958
   BASILI V, 1994, IEEE SOFTWARE, V11, P58, DOI 10.1109/52.300090
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BASILI VR, 1994, IEEE SOFTWARE, V11, P70, DOI 10.1109/52.268959
   Briand L., 1996, Softw. Process, Improve-ment Pract., V2, P253
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P1106, DOI 10.1109/TSE.2002.1158285
   Brockers A, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P31, DOI 10.1109/METRIC.1996.492441
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cook T.D., 1979, Quasi‐experimentation: design analysis issues for field setting
   DASKALANTONAKIS MK, 1992, IEEE T SOFTWARE ENG, V18, P998, DOI 10.1109/32.177369
   Fuggetta A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P411, DOI 10.1145/292182.292197
   Gopal A, 2002, IEEE T SOFTWARE ENG, V28, P863, DOI 10.1109/TSE.2002.1033226
   Kilpi T, 2001, IEEE SOFTWARE, V18, P72, DOI 10.1109/52.965808
   KITCHENHAM B, 2004, P 11 INT WORKSH SOFT
   Kramer S., 1999, STAT STRATEGIES SMAL
   Loconsole A., 2001, Proceedings of the 12th European Software Control and Metrics Conference (ESCOM'01), P67
   Mendonça MG, 2000, IEEE T SOFTWARE ENG, V26, P484, DOI 10.1109/32.852739
   Miller J, 2005, INFORM SOFTWARE TECH, V47, P233, DOI 10.1016/j.infsof.2004.08.005
   MILLER J, 1999, P METRICS
   OFFEN RJ, IEEE SOFTWARE, V3, P45
   POOCH UW, 1974, ACM COMPUT SURV, V6, P125, DOI DOI 10.1145/356628.356630
   PULFORD K, 1995, QUANTITATIVE APPROAC
   SENN JS, 2002, CROSS TRIALS CLIN RE
   SOLINGEN RV, 2001, P METRICS APR 4 6 LO, P246
   SOLINGEN RV, 1995, P EUR SOFTW CONTR ME
   SOLINGEN RV, 1997, P ESEPG AMST NETH JU
   WOHLIN C, 2002, EXPT SOFTWARE ENG IN
   ZELCOWITZ MV, 1998, IEEE COMPUTER    MAY, P23
NR 35
TC 4
Z9 4
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2006
VL 48
IS 5
BP 313
EP 322
DI 10.1016/j.infsof.2005.09.010
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 158EH
UT WOS:000245773500002
DA 2024-07-18
ER

PT J
AU Coronato, A
   d'Acierno, A
   De Pietro, G
AF Coronato, A
   d'Acierno, A
   De Pietro, G
TI Automatic implementation of constraints in component based applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE component engineering; automatic constraints implementation; component
   modeling; development process
AB Component-based software architectures have become one of the predominant solutions in the software technologies scenario. As well, constraints have been assuming an ever more relevant role in modeling distributed systems as long as business rules implementation, design-by-contract practice, and fault-tolerance requirements are concerned. Nevertheless, component developers are not sufficiently supported by existing tools to implement these features.
   We address such a deficiency and we propose some implementation patterns to translate constraint models into source code and two automatic tools: the Component Constraint Modeler (CoCoMod) and the Component Constraint Generator (CoCoGen). CoCoMod enables designers to specify both component interfaces and constraints as visual UML models and automatically generates textual models for interfaces and constraints. CoCoGen executes the implementation patters to translate constraint models into source code. A simple case study is presented in order to show an application of the proposed approach. (c) 2004 Elsevier B.V. All rights reserved.
C1 CNR, ISA, I-83100 Avellino, Italy.
   CNR, DRR, I-80131 Naples, Italy.
   CNR, ICAR, I-80131 Naples, Italy.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Scienze dell'
   Alimentazione (ISA-CNR); Consiglio Nazionale delle Ricerche (CNR);
   Consiglio Nazionale delle Ricerche (CNR); Istituto di Calcolo e Reti ad
   Alte Prestazioni (ICAR-CNR)
RP CNR, ISA, Via Roma 52, I-83100 Avellino, Italy.
EM coronato.a@inwind.it; dacierno.a@cnr.it; depietro.g@icar.cnr.it
RI d'acierno, Antonio/AAW-5467-2020; Coronato, Antonio/R-6386-2016; de
   pietro, giuseppe/K-3074-2012; Coronato, Antonio/B-5235-2015; Coronato,
   Antonio/D-3445-2012; d'Acierno, Antonio/A-4228-2009; de pietro,
   giuseppe/L-6139-2019; De Pietro, Giuseppe/AAZ-1151-2020
OI Coronato, Antonio/0000-0001-8177-032X; Coronato,
   Antonio/0000-0001-8177-032X; de pietro, giuseppe/0000-0002-4675-5957;
   d'Acierno, Antonio/0000-0003-0516-0794
CR ABERCROMBIE P, 2002, P 2 WORKSH RUNT VER, P26
   [Anonymous], 1998, ADV OBJECT ORIENTED
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], COMM OBJ REQ BROK AR
   BRIAND LC, 2002, P INT S SOFTW TEST A, V27, P4
   CARIU E, 2002, P 6 INT ENT DISTR OB
   CHEESMAN J, 2003, UML COMPONENTS SIMPL
   CORONATO A, 2002, LNCS, V2519
   D'Souza DesmondF., 1999, OBJECTS COMPONENTS F
   Heineman GeorgeT., 2001, COMPONENT BASED SOFT
   *IONA, ORBIX 2000
   *ISO IEC, 14750 ISO IEC
   KRAMER R, 1998, P INT C OBJ OR LANG
   MEDIDOVIC N, 2002, ACM T SOFTW ENG METH, V1, P2
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Oellermann W.L., 2001, ARCHITECTING WEB SER
   *OMG, UN MOD LANG SPEC, pCH6
   *OMG, 2000, REL SERV SPEC VERS 1
   *OMG, 2003, TRANS SERV SPEC VERS
   *OMG, UML PROF ENT DISTR O
   *OMG, 2003, RESP UML 2 0 OCL RFP
   ROSS RG, 1998, BUSINESS RULE CONCEP
   *SUN MICR, CORBA TECHN JAVA2 PL
   *SUN MICR, JAV TUT
   Warmer J., 1999, AW OBJ TECHNOL S
NR 25
TC 1
Z9 1
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY 15
PY 2005
VL 47
IS 7
BP 497
EP 509
DI 10.1016/j.infsof.2004.09.015
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 923AC
UT WOS:000228880000004
DA 2024-07-18
ER

PT J
AU De Lucia, A
   Pompella, E
   Stefanucci, S
AF De Lucia, A
   Pompella, E
   Stefanucci, S
TI Assessing effort estimation models for corrective maintenance through
   empirical studies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE management; measurement; experimentation; corrective software
   maintenance; cost estimation models
ID SOFTWARE; MANAGEMENT; COMPLEXITY; ACCURACY
AB We present an empirical assessment and improvement of the effort estimation model for corrective maintenance adopted in a major international software enterprise. Our study was composed of two phases. In the first phase we used multiple linear regression analysis to construct effort estimation models validated against real data collected from five corrective maintenance projects. The model previously adopted by the subject company used as predictors the size of the system being maintained and the number of maintenance tasks. While this model was not linear, we show that a linear model including the same variables achieved better performances. Also we show that greater improvements in the model performances can be achieved if the types of the different maintenance tasks is taken into account. In the second phase we performed a replicated assessment of the effort prediction models built in the previous phase on a new corrective maintenance project conducted by the subject company on a software system of the same type as the systems of the previous maintenance projects. The data available for the new project were finer grained, according to the indications devised in the first study. This allowed to improve the confidence in our previous empirical analysis by confirming most of the hypotheses made. The new data also provided other useful indications to better understand the maintenance process of the company in a quantitative way. (C) 2004 Elsevier B.V. All rights reserved.
C1 Univ Salerno, Dipartimento Matemat & Informat, I-84084 Fisciano, SA, Italy.
   EDS Italia Software SpA, I-81100 Caserta, Italy.
   Univ Sannio, Dept Engn, I-82100 Benevento, Italy.
C3 University of Salerno; University of Sannio
RP Univ Salerno, Dipartimento Matemat & Informat, Via Ponte Melillo, I-84084 Fisciano, SA, Italy.
EM adelucia@unisa.it; eugenic.pompella@eds.com; stefanucci@unisannio.it
RI De Lucia, Andrea/AAG-6781-2020
OI De Lucia, Andrea/0000-0002-4238-1425
CR [Anonymous], 1986, Software Engineering Metrics and Models
   Aversano L, 2002, J SOFTW MAINT EVOL-R, V14, P229, DOI 10.1002/smr.253
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   Basili V, 1996, PROC INT CONF SOFTW, P464, DOI 10.1109/ICSE.1996.493441
   BELADY LA, 1972, STAT COMPUTER PERFOR, P503
   Boehm B., 1995, Annals of Software Engineering, V1, P57, DOI 10.1007/BF02249046
   Boehm BW., 1981, Software Engineering Economics
   Bradley E., 1983, AM STAT, V37, P836
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   BRIAND LC, 1992, IEEE T SOFTWARE ENG, V18, P931, DOI 10.1109/32.177363
   Caivano D, 2001, PROC IEEE INT CONF S, P209, DOI 10.1109/ICSM.2001.972734
   De Lucia A, 2003, J SYST SOFTWARE, V65, P87, DOI 10.1016/S0164-1212(02)00051-1
   De Lucia A, 2001, PROC IEEE INT CONF S, P642, DOI 10.1109/ICSM.2001.972781
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fioravanti F, 2001, IEEE T SOFTWARE ENG, V27, P1062, DOI 10.1109/32.988708
   FLORAC WA, 1999, SEI S SOFTW, P1
   Gray A, 1997, INFORM SOFTWARE TECH, V39, P425, DOI 10.1016/S0950-5849(96)00006-7
   Hassan AE, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P123, DOI 10.1109/WCRE.2003.1287243
   Hastings TE, 2001, IEEE T SOFTWARE ENG, V27, P337, DOI 10.1109/32.917523
   *IEEE, 1998, 12191998 IEEE
   Jeffery R, 2000, INFORM SOFTWARE TECH, V42, P1009, DOI 10.1016/S0950-5849(00)00153-1
   JORGENSEN M, 1995, IEEE T SOFTWARE ENG, V21, P674, DOI 10.1109/32.403791
   Kemerer CF, 1999, IEEE T SOFTWARE ENG, V25, P493, DOI 10.1109/32.799945
   KHOSHGOFTAAR TM, 1992, IEEE T SOFTWARE ENG, V18, P979, DOI 10.1109/32.177367
   LANNING DL, 1994, COMPUTER, V27, P35, DOI 10.1109/2.312036
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Lindvall M., 1998, Software Process Improvement and Practice, V4, P3, DOI 10.1002/(SICI)1099-1670(199803)4:1<3::AID-SPIP90>3.0.CO;2-R
   Little RJ, 1987, STAT ANAL MISSING DA
   MEYERS RH, 1986, CLASSICAL MODERN REG
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   Nesi P, 1998, IEEE SOFTWARE, V15, P50, DOI 10.1109/52.687945
   Niessink F, 1998, PROC IEEE INT CONF S, P76, DOI 10.1109/ICSM.1998.738495
   Niessink F, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P32, DOI 10.1109/ICSM.1997.624228
   Ramaswamy R, 2000, IEEE SOFTWARE, V17, P90, DOI 10.1109/52.896255
   Ramil JF, 2000, PROC IEEE INT CONF S, P163, DOI 10.1109/ICSM.2000.883036
   Rousseeuw P.J., 1987, ROBUST REGRESSION OU
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shepperd M, 1996, PROC INT CONF SOFTW, P170, DOI 10.1109/ICSE.1996.493413
   Smith RK, 2001, IEEE T SOFTWARE ENG, V27, P264, DOI 10.1109/32.910861
   Strike K, 2001, IEEE T SOFTWARE ENG, V27, P890, DOI 10.1109/32.962560
   Stuart A., 1991, KENDALLS ADV THEORY, V2
   Vicinanza SS, 1991, INFORM SYST RES, V2, P243, DOI 10.1287/isre.2.4.243
   Walkerden F., 1997, ADV COMPUT, V44, P59, DOI DOI 10.1016/S0065-2458(08)60337-X
   WELLMAN F, 1992, SOFTWARE COSTING
   WHEELER DJ, 1991, UNDERSTANDING STAT P
   [No title captured]
NR 47
TC 46
Z9 51
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN 1
PY 2005
VL 47
IS 1
BP 3
EP 15
DI 10.1016/j.infsof.2004.05.002
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 875MG
UT WOS:000225423900002
DA 2024-07-18
ER

PT J
AU Santos, R
   Constantinou, E
   Antonino, P
   Bosch, J
AF Santos, Rodrigo
   Constantinou, Eleni
   Antonino, Pablo
   Bosch, Jan
TI Software Engineering for Systems-of-Systems and Software Ecosystems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software engineering; systems-of-systems; software ecosystems; complex
   systems; software-intensive systems
AB Software Engineering has faced several challenges in the last decade, especially those related to aspects beyond the technical side. As such, technological, organizational and social aspects should be considered altogether in research and practice in the field so that complexity could be handled in order to provide solution to the existing problems from the software industry demands. In this context, systems-of-systems (SoS) and software ecosystems (SECO) emerged as topics that joined researchers and practitioners interested in understanding how to manage and engineer software-intensive systems within modern, complex, distributed, dynamic, and open environments. An SoS comprises independent constituent systems which work together to fulfill missions driven by architectural concerns. In turn, a SECO consists of a set of actors and artifacts, as well as their relationships, to produce value over a common technology platform driven by external contributions. Both classes of systems have a distributed nature, focus on optimizing the cost-benefit trade-off, and aim to reach global markets. In this special section, we introduce extended versions of two papers selected from the 10th IEEE/ACM International Workshop on Software Engineering for Systems-of-Systems and Software Ecosystems (SESoS 2022). These articles provide researchers and practitioners with advances on the development and evolution of complex software-intensive systems.
C1 [Santos, Rodrigo] Univ Fed Estado Rio de Janeiro, Rio de Janeiro, RJ, Brazil.
   [Constantinou, Eleni] Univ Cyprus, Nicosia, Cyprus.
   [Antonino, Pablo] Fraunhofer IESE, Kaiserslautern, Germany.
   [Bosch, Jan] Chalmers Univ Technol, Gothenburg, Sweden.
C3 Universidade Federal do Estado do Rio de Janeiro; University of Cyprus;
   Chalmers University of Technology
RP Santos, R (corresponding author), Univ Fed Estado Rio de Janeiro, Rio de Janeiro, RJ, Brazil.
RI Santos, Rodrigo Pereira dos/AAA-5620-2021
OI Santos, Rodrigo Pereira dos/0000-0003-4749-2551
CR Ambrósio L, 2021, J GRID COMPUT, V19, DOI 10.1007/s10723-021-09583-x
   [Anonymous], 2007, P 2014 EUR C SOFTW A, DOI DOI 10.1145/2642803.2642825
   Boardman J, 2006, PROCEEDINGS OF THE 2006 IEEE/SMC INTERNATIONAL CONFERENCE ON SYSTEM OF SYSTEMS ENGINEERING, P118
   Bosch J, 2010, J SYST SOFTWARE, V83, P67, DOI 10.1016/j.jss.2009.06.051
   Cordeiro F, 2020, 2020 IEEE 21ST INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION FOR DATA SCIENCE (IRI 2020), P295, DOI 10.1109/IRI49571.2020.00049
   Costa LA, 2022, IEEE T ENG MANAGE, V69, P3589, DOI 10.1109/TEM.2021.3116531
   Fernandes J., 2023, The Evolution of Pervasive Information Systems, P157
   Fernandes J, 2019, 2019 IEEE 20TH INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION FOR DATA SCIENCE (IRI 2019), P364, DOI 10.1109/IRI.2019.00063
   Ferreira FHC, 2023, INFORM SOFTWARE TECH, V158, DOI 10.1016/j.infsof.2023.107186
   Gomes J, 2022, 10TH IEEE/ACM INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS AND SOFTWARE ECOSYSTEMS (SESOS 2022), P1, DOI 10.1145/3528229.3529386
   Graciano Neto V.V., 2020, Software Ecosystems, Sustainability and Human Values in the Social Web, P1, DOI [10.1007/978-3, DOI 10.1007/978-3]
   Hrusto A, 2022, 10TH IEEE/ACM INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS AND SOFTWARE ECOSYSTEMS (SESOS 2022), P13, DOI 10.1145/3528229.3529382
   Jansen S, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P1, DOI 10.4337/9781781955635
   Maier M., 1998, SYST ENG, V1, P267, DOI [DOI 10.1002/(SICI)1520-6858(1998)1:43.0.CO;2-D, 10.1002/(SICI)1520-6858(1998)1:4lt;267::AID-SYS3gt;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4LT;267::AID-SYS3GT;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4<267::AID-SYS3>3.0.CO;2-D]
   Manikas K, 2016, J SYST SOFTWARE, V117, P84, DOI 10.1016/j.jss.2016.02.003
   Mens T., 2023, Software Ecosystems: Tooling and Analytics
   Olivero MA, 2022, INFORM SOFTWARE TECH, V146, DOI 10.1016/j.infsof.2022.106874
   Saleh M., 2015, IC3K 2015, DOI [10.5220/0005596101930200, DOI 10.5220/0005596101930200]
   Santos C. M. L., 2011, 3RDINTWORKSHOPSOFTWE, V746, P40
   Santos Rodrigo, 2023, ACM SIGSOFT Software Engineering Notes, P24, DOI 10.1145/3587062.3587070
   Steglich C, 2023, J SYST SOFTWARE, V205, DOI 10.1016/j.jss.2023.111808
   Wouters J, 2019, LECT NOTES BUS INF P, V370, P31, DOI 10.1007/978-3-030-33742-1_4
NR 22
TC 1
Z9 1
U1 2
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2024
VL 165
AR 107335
DI 10.1016/j.infsof.2023.107335
EA OCT 2023
PG 3
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA W1FG2
UT WOS:001089148100001
DA 2024-07-18
ER

PT J
AU Castillo-Barrera, FE
   Duran-Limon, HA
AF Castillo-Barrera, Francisco-Edgar
   Duran-Limon, Hector A.
TI Verifying contracts among software components: An ontology-based
   approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Component-based development; Contract verification; Software components;
   ADL; Ontology; SPARQL
ID FORMAL SPECIFICATION; MODEL; WEB; VERIFICATION
AB Context: The goal of Component-Based Software Engineering (CBSE) is the development of software systems in terms of an assembly of pre-fabricated software components. One of the main aims of CBSE is to increase software reuse whereby a software component becomes part of different software systems. Verification is an important task that ensures contract conformance among components. However, current techniques for verification of component matching are poorly used in industry due to the fact that the use of these techniques is complex since they require specialized expertise. Also, the use of such techniques can be time-consuming. Objective: In this paper, we present Moctezuma, a framework for verifying the matching of software components that does not require the user possessing highly specialized skills and is able to check contract conformance of functional semantics aspects.Method: Our approach relies on a core ontology of software components, which captures the concepts, properties, relationships, requirements, and software component functionality. We make use of architecture description languages (ADLs) to specify configurations of component interconnections. Interface contracts are specified with a customized version of CORBA-IDL. We employ ontology reasoning engines to check conformance among interface contracts.Results: The accuracy evaluation results have shown that our verifier has a high accuracy for detecting semantics errors. The scalability evaluation shows that our framework exhibits almost a linear behavior. Conclusions: It is concluded that our framework is suitable for verifying the conformance of interface contracts, involving semantics aspects, along a configuration of component interconnections.
C1 [Castillo-Barrera, Francisco-Edgar] Autonomous Univ San Luis Potosi, Sch Engn, San Luis Potosi, Mexico.
   [Duran-Limon, Hector A.] Univ Guadalajara, CUCEA, Zapopan, Jalisco, Mexico.
C3 Universidad Autonoma de San Luis Potosi; Universidad de Guadalajara
RP Duran-Limon, HA (corresponding author), Univ Guadalajara, CUCEA, Zapopan, Jalisco, Mexico.
EM ecastillo@uaslp.mx; hduran@cucea.udg.mx
FU CONAHCYT, Mexico
FX We want to thank CONAHCYT, Mexico for the scholarship provided to
   Francisco-Edgar Castillo-Barrera.
CR Aagedal J., 2001, THESIS U OSLO
   Accord, 2021, US
   Aho AlfredV., 2007, Compilers: principles, techniques, tools, V1009
   Akkiraju R., 2006, CEC EEE 06, P70
   Andreou AS, 2015, ENASE 2015 - PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P118
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], 2005, W3C MEMB SUBMISS
   [Anonymous], 2008, P 10 INT C INFORM IN
   [Anonymous], 1992, The Z Notation
   [Anonymous], 2001, LNCS, DOI [DOI 10.1007/3-540-45449-7_11, DOI 10.1007/3-540-45449-711]
   [Anonymous], 2014, ADV WEB SERVICES
   Araújo C, 2019, IEEE ACCESS, V7, P171752, DOI 10.1109/ACCESS.2019.2953858
   BAADER F, 2007, DESCRIPTION LOGIC HD
   Barnett M., 2002, J SYST SOFTW
   Bechhofer S., 2001, SWWS, P151
   Beugnard A, 1999, COMPUTER, V32, P38, DOI 10.1109/2.774917
   Bhargavan K, 2016, PROCEEDINGS OF THE 2016 ACM WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY (PLAS'16), P91, DOI 10.1145/2993600.2993611
   Bhatt D, 2016, LECT NOTES COMPUT SC, V9690, P34, DOI 10.1007/978-3-319-40648-0_3
   Blech J.O., 2017, P AUSTRALASIAN COMPU, DOI [10.1145/3014812.3014842, DOI 10.1145/3014812.3014842]
   Bouguettaya A., 2014, ADV WEB SERVICES
   Castillo-Barrera E., 2021, MOCTEZUMA FRAMEWORK
   Castillo-Barrera F.-E, 2012, P 8 LATIN AM WORKSHO, P149
   Chargui W, 2017, 2017 IEEE 26TH INTERNATIONAL CONFERENCE ON ENABLING TECHNOLOGIES - INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WETICE), P239, DOI 10.1109/WETICE.2017.65
   Chen XH, 2020, 2020 INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE 2020), P217, DOI 10.1109/TASE49443.2020.00037
   Chouali S, 2018, COMM COM INF SC, V929, P217, DOI 10.1007/978-3-030-02852-7_19
   Cimatti A, 2012, EUROMICRO CONF PROC, P21, DOI 10.1109/SEAA.2012.68
   CLARKE EM, 1994, ACM T PROGR LANG SYS, V16, P1512, DOI 10.1145/186025.186051
   Crnkovic I., 2002, BUILDING RELIABLE CO
   Davulcu H., 2004, P 13 INT WORLD WIDE, P144
   de Alfaro L., 2001, Software Engineering Notes, V26, P109, DOI 10.1145/503271.503226
   Decker S, 2000, IEEE INTERNET COMPUT, V4, P63, DOI 10.1109/4236.877487
   del Rio A., 2001, ACTAS S IBEROAMERICA, P29
   Doerr M, 2003, AI MAG, V24, P75
   Duran-Limon HA, 2004, J SYST SOFTWARE, V72, P1, DOI 10.1016/S0164-1212(03)00016-5
   Duran-Limon HA, 2015, IEEE T SOFTWARE ENG, V41, P1153, DOI 10.1109/TSE.2015.2449854
   Findler R. B., 2001, Software Engineering Notes, V26, P229, DOI 10.1145/503271.503240
   Flynn S, 2006, ELECTRON NOTES THEOR, V161, P91, DOI 10.1016/j.entcs.2006.04.027
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P783, DOI 10.1007/s10664-013-9299-z
   Garlan D, 2000, FDN COMPONENT BASED, P47
   Ghitri M.S., 2019, 2019 INT C THEORETIC, V1, P1
   Giedrimas V., 2020, 2020 IEEE 14 INT C A, P1
   Gligoric M., 2013, P 2013 INT S SOFTW T, P302, DOI DOI 10.1145/2483760.2483769
   Gomez J.L., 2020, THESIS U CARLOS 3 MA
   Griffo C, 2021, INFORM SYST, V101, DOI 10.1016/j.is.2019.101454
   Guarino N., 2009, HDB ONTOLOGIES, P1, DOI [DOI 10.1007/978-3-540-92673-30, 10.1007/978-3-540-92673-3_0, DOI 10.1007/978-3-540-92673-3_0]
   Guarro S, 2016, LECT NOTES COMPUT SC, V9690, P227, DOI 10.1007/978-3-319-40648-0_18
   Haddad I, 2015, 2015 11TH INTERNATIONAL CONFERENCE ON SEMANTICS, KNOWLEDGE AND GRIDS (SKG), P65, DOI 10.1109/SKG.2015.38
   Harrison MD, 2019, SCI COMPUT PROGRAM, V175, P17, DOI 10.1016/j.scico.2019.02.003
   Horridge M., 2009, A Practical Guide To Building OWL Ontologies Using Protege 4 and CO-ODE Tools
   Illarramendi M., 2019, IOP Conference Series: Materials Science and Engineering, V575, DOI 10.1088/1757-899X/575/1/012006
   Iribarne L, 2004, REV COLOMBIANA COMPU, V5, P1
   ISO/IEC, 1996, 14977 ISOIEC
   Ji JX, 2010, LECT NOTES COMPUT SC, V6377, P181
   Jones C.B, 1990, SYSTEMATIC SOFTWARE, V3
   Khorasgani RR, 2011, IEEE INT S WEB SYST, P114
   Kirani S., 1994, SPECIFICATION VERIFI
   Knüppel A, 2021, FME WORKS FORM, P42, DOI 10.1109/FormaliSE52586.2021.00011
   Kocatas AT, 2023, APPL SCI-BASEL, V13, DOI 10.3390/app13010643
   Kose Mehmet Alp, 2020, 2020 15th Conference on Computer Science and Information Systems (FedCSIS), P639, DOI 10.15439/2020F199
   Kugele S, 2016, 2016 ACM/IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR SYSTEM DESIGN (MEMOCODE), P133, DOI 10.1109/MEMCOD.2016.7797758
   Kumar R., 2007, THESIS CARNEGIE MELL
   Lapets A., 2010, ONTOLOGY SUPPORT LIG
   Lathouwers S, 2022, FME WORKS FORM, P69, DOI 10.1145/3524482.3527652
   Lau K., 2006, PREPRINT
   Lee EA, 2004, FORM ASP COMPUT, V16, P210, DOI 10.1007/s00165-004-0043-8
   Liu A, 2023, IEEE T SOFTWARE ENG, V49, P304, DOI 10.1109/TSE.2022.3150333
   Mariani L, 2005, ELECTRON NOTES THEOR, V116, P17, DOI 10.1016/j.entcs.2004.02.089
   Mei H, 2002, LECT NOTES COMPUT SC, V2495, P38
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Mkaouar H, 2020, INT J SOFTW TOOLS TE, V22, P219, DOI 10.1007/s10009-019-00513-7
   Murthy PVR, 2018, 2018 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P482, DOI 10.1109/ICACCI.2018.8554801
   Nuzzo Pierluigi, 2014, 2014 Twelfth ACM/IEEE Conference on Formal Methods and Models for Codesign (MEMOCODE), P104, DOI 10.1109/MEMCOD.2014.6961848
   O. Alliance,, 2011, OSGI SERVICE PLATFOR
   Offutt J, 2011, INFORM SOFTWARE TECH, V53, P1098, DOI 10.1016/j.infsof.2011.03.007
   Oh SC, 2007, 9TH IEEE INTERNATIONAL CONFERENCE ON E-COMMERCE TECHNOLOGY/4TH IEEE INTERNATIONAL CONFERENCE ON ENTERPRISE COMPUTING, E-COMMERCE AND E-SERVICES, P533, DOI 10.1109/CEC-EEE.2007.86
   Ozkaya M, 2018, COMPUT LANG SYST STR, V54, P71, DOI 10.1016/j.cl.2018.04.005
   Ozkaya M, 2017, J COMPUT SCI TECH-CH, V32, P1025, DOI 10.1007/s11390-017-1779-y
   Pahl G., 2007, International Journal on Software Tools for Technology Transfer, V9, P169, DOI 10.1007/s10009-006-0015-9
   Pandey R.K., 2010, ACM SIGSOFT Software Engineering Notes, V35, P1, DOI DOI 10.1145/1764810.1764828
   Papadakis Mike, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P121, DOI 10.1109/ISSRE.2010.38
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Parnas DL, 2010, COMPUTER, V43, P28, DOI 10.1109/MC.2010.22
   Paul P., 2009, FORMAL METHODS STATE, P291
   Pérez J, 2009, ACM T DATABASE SYST, V34, DOI 10.1145/1567274.1567278
   POUNTAIN D, 1995, BYTE, V20, P159
   Purohit L, 2016, INTERNATIONAL CONFERENCE ON ADVANCES IN INFORMATION COMMUNICATION TECHNOLOGY & COMPUTING, 2016, DOI 10.1145/2979779.2979795
   Quinton S, 2008, SEFM 2008: SIXTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P377, DOI 10.1109/SEFM.2008.28
   RDF data shapes working group shapes constraint language (SHACL), 2017, W3C RECOMMENDATION
   Reed G, 2000, P MODELLING SOFTWARE
   Rodriguez-Mier P, 2016, IEEE T SERV COMPUT, V9, P537, DOI 10.1109/TSC.2015.2402679
   Roman D, 2005, APPL ONTOL, V1, P77
   Rouland Q, 2020, FUTURE GENER COMP SY, V108, P178, DOI 10.1016/j.future.2020.02.033
   Sajjanhar A, 2004, LECT NOTES COMPUT SC, V3007, P665
   Selic B, 2006, Ninth IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing, Proceedings, P313, DOI 10.1109/ISORC.2006.54
   ShEx community group, 2019, SHAP EXPR SHEX
   Siegel J, 1998, COMMUN ACM, V41, P37, DOI 10.1145/286238.286246
   Sirin E, 2007, J WEB SEMANT, V5, P51, DOI 10.1016/j.websem.2007.03.004
   Söderberg A, 2013, 2013 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P365, DOI 10.1109/ISSREW.2013.6688922
   Spivey J.M, 1988, UNDERSTANDING Z SPEC, V3
   Studer R, 1998, DATA KNOWL ENG, V25, P161, DOI 10.1016/S0169-023X(97)00056-6
   SWRL,, SWRLA SEM WEB RUL LA
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   Taoufik SR, 2016, 2016 IEEE 25TH INTERNATIONAL CONFERENCE ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WETICE), P192, DOI 10.1109/WETICE.2016.50
   Tripakis S, 2011, ACM T PROGR LANG SYS, V33, DOI 10.1145/1985342.1985345
   Tsai J., 2000, P 2000 MONTEREY WORK, P13
   Tsai J.J.P., 2000, P MODELLING SOFTWARE
   Tung PM, 2019, P AMER CONTR CONF, P1704
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   Vandenbogaerde B, 2022, IEEE INT WORK C SO, P186, DOI 10.1109/SCAM55253.2022.00028
   W3c, 2021, TURTL
   W3C SPARQL working group, 2013, SPARQL 1 1 QUERY LAN
   Wang H.H., 2006, P 9 INT PROT C
   Wang Nanbor., 2001, COMPONENT BASED SOFT, P557
   Wang YQ, 2003, FOURTH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS ENGINEERING, PROCEEDINGS, P147
   Wenger M., 2015, 2015 IEEE 20 C EMERG, P1
   Wiki P, 2009, WIKIHOMEPAGE
   Xu Nianfang, 2010, Proceedings of the 2010 Second International Conference on Computer Modeling and Simulation (ICCMS 2010), P423, DOI 10.1109/ICCMS.2010.130
NR 117
TC 0
Z9 0
U1 1
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2023
VL 163
AR 107282
DI 10.1016/j.infsof.2023.107282
EA JUN 2023
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA N2LI8
UT WOS:001035386100001
DA 2024-07-18
ER

PT J
AU Aljedaani, B
   Ahmad, A
   Zahedi, M
   Babar, MA
AF Aljedaani, Bakheet
   Ahmad, Aakash
   Zahedi, Mansooreh
   Babar, Muhammad Ali
TI An empirical study on secure usage of mobile health apps: The attack
   simulation approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mobile computing; Software engineering; Mobile healthcare (mHealth);
   Empirical study
ID SENSITIVE QUESTIONS; PRIVACY; MHEALTH
AB Context: Mobile applications (apps) have proven their usefulness in enhancing service provisioning across a multitude of domains that range from smart healthcare, to mobile commerce, and areas of context-sensitive computing. In smart healthcare context, mobile health (mHealth) apps -representing a specific genre of mo-bile apps that manage health information -face some critical challenges relating to security and privacy of device and user data. In recent years, a number of empirically grounded, survey-based studies have been conducted to investigate secure usage of mHealth apps. However, such studies rely on self-reported behaviors documented via interviews or survey questions that lack practical approaches that can simulate attack scenario for monitoring users' actions and behaviors while using mHealth apps. Objective: Our objective was to conduct an empirical study -engaging participants with attack simulation sce-narios and analyze their actions -for investigating the security awareness of mHealth app users.Method: We simulated some common security attack scenarios in mHealth context and engaged a total of 105 app users to monitor their actions and analyze their behavior. We analyzed users' data with statistical analysis including correlations test, descriptive analysis, and qualitative data analysis (i.e., thematic analysis method). \Results: Our results indicate that whilst the minority of our participants perceived access permissions positively, the majority had negative views. Users provide their consent, granting permissions, without a careful review of privacy policies that leads to undesired or malicious access to health data. Findings also indicated that 73.3% of our participants had denied at least one access permission, and 36% of our participants preferred no authenti-cation method.Conclusion: The study complements existing research on secure usage of mHealth apps, simulates security threats to monitor users' actions, and provides empirically grounded guidelines for secure development and usage of mobile health systems.
C1 [Aljedaani, Bakheet] Umm Alqura Univ, Aljumum Univ Coll, Comp Sci Dept, Mecca, Saudi Arabia.
   [Ahmad, Aakash] Lancaster Univ Leipzig, Sch Comp & Commun, Leipzig, Germany.
   [Zahedi, Mansooreh] Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Australia.
   [Babar, Muhammad Ali] Univ Adelaide, CREST Ctr Res Engn Software Technol, Adelaide, Australia.
   [Babar, Muhammad Ali] Cyber Secur Cooperat Res Ctr CSCRC, Joondalup, Australia.
C3 Umm Al Qura University; University of Melbourne; University of Adelaide
RP Aljedaani, B (corresponding author), Umm Alqura Univ, Aljumum Univ Coll, Comp Sci Dept, Mecca, Saudi Arabia.
EM abhjedaani@uqu.edu.sa
OI Zahedi, Mansooreh/0000-0001-6276-9956
CR A.M. Research, 2021, DIGITAL HLTH MARKET
   Adhikari R., 2014, SECURITY PRIVACY ISS
   Aljeaid D, 2020, INFORMATION, V11, DOI 10.3390/info11120547
   Aljedaani B., 2021, MEASURING SECURITY A
   Aljedaani B., 2020, MOBIQUITOUS P 17 EAI
   Aljedaani B, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111519
   Aljedaani B, 2020, ASIA PAC SOFWR ENG, P208, DOI 10.1109/APSEC51365.2020.00029
   Alotaibi F, 2016, INT CONF INTERNET, P154, DOI 10.1109/ICITST.2016.7856687
   [Anonymous], 2023, SPEARMANS CORRELATIO
   Atienza AA, 2015, J HEALTH COMMUN, V20, P673, DOI 10.1080/10810730.2015.1018560
   Barth S, 2019, TELEMAT INFORM, V41, P55, DOI 10.1016/j.tele.2019.03.003
   Berg R.G.V.D., 2020, SPSS MANN WHITNEY TE
   Bertrand Y, 2020, FRONT BIG DATA, V8, DOI 10.3389/fdata.2020.568257
   Bitton R, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376385
   Bitton R, 2018, COMPUT SECUR, V73, P266, DOI 10.1016/j.cose.2017.10.015
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Cifuentes Y., 2015, P 7 INT C MOB COMP N
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Daengsi T, 2022, EDUC INF TECHNOL, V27, P4729, DOI 10.1007/s10639-021-10806-7
   Egelman S, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P5257, DOI 10.1145/2858036.2858265
   Felt AP, 2012, P 8 S USABLE PRIVACY, P1, DOI DOI 10.1145/2335356.2335360
   Flaten Hania K, 2018, Dermatol Online J, V24
   Furnell SM, 2006, COMPUT SECUR, V25, P27, DOI 10.1016/j.cose.2005.12.004
   Furnell S, 2018, COMPUT SECUR, V75, P1, DOI 10.1016/j.cose.2018.01.016
   Germain T., 2019, PROTECT YOURSELF CAM
   Gkioulos V, 2017, INFORMATION, V8, DOI 10.3390/info8020042
   Glen S., 2021, KRUSKAL WALLIS H TES
   Hainzinger B., 2020, AVOID MOBILE PHONE A
   Hussain M, 2018, TELEMAT INFORM, V35, P1335, DOI 10.1016/j.tele.2018.03.005
   I. Technologies, 2021, HACKERS INCREASINGLY
   Iwaya LH, 2020, IEEE ACCESS, V8, P150081, DOI 10.1109/ACCESS.2020.3015962
   Knorr K, 2015, IEEE ICST WORKSHOP
   Koyuncu M, 2019, MOB INF SYST, V2019, DOI 10.1155/2019/2786913
   Lakin C, 2017, 2017 5TH INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD WORKSHOPS (FICLOUDW) 2017, P221, DOI 10.1109/FiCloudW.2017.96
   Mabo Tolulope, 2018, Trends and Advances in Information Systems and Technologies. Advances in Intelligent Systems and Computing (AISC 745), P587, DOI 10.1007/978-3-319-77703-0_58
   Martínez-Pérez B, 2015, J MED SYST, V39, DOI 10.1007/s10916-014-0181-3
   Miles M. B., 1994, QUALITATIVE DATA ANA, DOI DOI 10.1080/0950069042000276686
   Molleri J. S., 2016, ACM IEEE INT S EMP S, P1, DOI [DOI 10.1145/2961111.2962619, 10.1145/2961111.2962619]
   Molyneaux H., 2020, P INT C HUM COMP INT, P189
   Morgan S., 2020, CYBERCRIME COST WORL
   Mylonas A, 2013, COMPUT SECUR, V34, P47, DOI 10.1016/j.cose.2012.11.004
   Papageorgiou A, 2018, IEEE ACCESS, V6, P9390, DOI 10.1109/ACCESS.2018.2799522
   Parker L, 2019, INT J LAW PSYCHIAT, V64, P198, DOI 10.1016/j.ijlp.2019.04.002
   Parsons K, 2017, COMPUT SECUR, V66, P40, DOI 10.1016/j.cose.2017.01.004
   Peng W, 2016, BMC PUBLIC HEALTH, V16, DOI 10.1186/s12889-016-3808-0
   Morera EP, 2016, J MED SYST, V40, DOI 10.1007/s10916-016-0513-6
   Plachkinova M, 2015, P ANN HICSS, P3187, DOI 10.1109/HICSS.2015.385
   Rajivan P, 2018, FRONT PSYCHOL, V9, DOI 10.3389/fpsyg.2018.00135
   Ramey L, 2019, PHYS MED REH CLIN N, V30, P485, DOI 10.1016/j.pmr.2018.12.001
   Razaghpanah A, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23353
   Redmiles E.M., 2017, A summary of survey methodology best practices for security and privacy researchers
   ROSENBLATT M, 1956, P NATL ACAD SCI USA, V42, P43, DOI 10.1073/pnas.42.1.43
   Statistics L., 2018, MANN WHITNEY TEST US
   Statistics L., 2018, KRUSKAL WALLIS H TES
   statistics L., 2018, SPEARMANS RANK ORDER
   Statistics L., 2018, CHI SQUARE TEST ASS
   Struse Eric, 2012, Ambient Intelligence. Third International Joint Conference (AML 2012). Proceedings, P65, DOI 10.1007/978-3-642-34898-3_5
   T.L. Team, 2017, MOBILE APP PRIVACY P
   To S.H., 2023, POSTHOC DEFINITION T
   Tourangeau R, 1996, PUBLIC OPIN QUART, V60, P275, DOI 10.1086/297751
   Tourangeau R, 2007, PSYCHOL BULL, V133, P859, DOI 10.1037/0033-2909.133.5.859
   Wash R, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P2228, DOI 10.1145/3025453.3025911
   Watson B, 2017, PROCEEDINGS OF THE SOUTHEAST CONFERENCE ACM SE'17, P120, DOI 10.1145/3077286.3077563
   Wijesekera P, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P499
   Zahra F., 2018, Journal of Telecommunication, Electronic and Computer Engineering, V10, P77
   Zeybek M., 2019, P 1 INT INF SOFTW EN, P1
   Zhou LM, 2019, JMIR MHEALTH UHEALTH, V7, DOI 10.2196/11223
   Zubaydi F., 2015, 2015 IEEE 15 INT C B, DOI [10.1109/BIBE.2015.7367689, DOI 10.1109/BIBE.2015.7367689]
NR 68
TC 1
Z9 1
U1 2
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2023
VL 163
AR 107285
DI 10.1016/j.infsof.2023.107285
EA JUN 2023
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L6VV5
UT WOS:001024627300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kim, J
   An, G
   Feldt, R
   Yoo, S
AF Kim, Jinhan
   An, Gabin
   Feldt, Robert
   Yoo, Shin
TI Learning test-mutant relationship for accurate fault localisation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mutation testing; Fault localisation
AB Context: Automated fault localisation aims to assist developers in the task of identifying the root cause of the fault by narrowing down the space of likely fault locations. Simulating variants of the faulty program called mutants, several Mutation Based Fault Localisation (MBFL) techniques have been proposed to automatically locate faults. Despite their success, existing MBFL techniques suffer from the cost of performing mutation analysis after the fault is observed. Method: To overcome this shortcoming, we propose a new MBFL technique named SIMFL (Statistical Inference for Mutation-based Fault Localisation). SIMFL localises faults based on the past results of mutation analysis that has been done on the earlier version in the project history, allowing developers to make predictions on the location of incoming faults in a just-in-time manner. Using several statistical inference methods, SIMFL models the relationship between test results of the mutants and their locations, and subsequently infers the location of the current faults. Results: The empirical study on Defects4J dataset shows that SIMFL can localise 113 faults on the first rank out of 224 faults, outperforming other MBFL techniques. Even when SIMFL is trained on the predicted kill matrix, SIMFL can still localise 95 faults on the first rank out of 194 faults. Moreover, removing redundant mutants significantly improves the localisation accuracy of SIMFL by the number of faults localised at the first rank up to 51. Conclusion: This paper proposes a new MBFL technique called SIMFL, which exploits ahead-of-time mutation analysis to localise current faults. SIMFL is not only cost-effective, as it does not need a mutation analysis after the fault is observed, but also capable of localising faults accurately.
C1 [Kim, Jinhan; An, Gabin; Yoo, Shin] Korea Adv Inst Sci & Technol, Sch Comp, Daejeon, South Korea.
   [Feldt, Robert] Chalmers Univ Technol, Dept Comp Sci & Engn, Gothenburg, Sweden.
C3 Korea Advanced Institute of Science & Technology (KAIST); Chalmers
   University of Technology
RP Yoo, S (corresponding author), Korea Adv Inst Sci & Technol, Sch Comp, Daejeon, South Korea.
EM shin.yoo@kaist.ac.kr
RI Yoo, Shin/E-3247-2015
OI Yoo, Shin/0000-0002-0836-6993; Kim, Jinhan/0000-0002-0140-7908
FU National Research Foundation of Korea (NRF) Grant
   [NRF-2020R1A2C1013629]; Institute for Information amp; communications
   Technology Promotion grant - Korean government (MSIT) [2021-0-01001];
   Samsung Electronics [IO201210-07969-01]; Swedish Scientific Council
   [2015-04913, 2020-05272]; Swedish Research Council [2015-04913,
   2020-05272] Funding Source: Swedish Research Council
FX This work is supported by National Research Foundation of Korea (NRF)
   Grant (NRF-2020R1A2C1013629) , Institute for Information & amp;
   communications Technology Promotion grant funded by the Korean
   government (MSIT) (No. 2021-0-01001) , and Samsung Electronics (Grant
   No. IO201210-07969-01) . Robert Feldt has been supported by the Swedish
   Scientific Council (No. 2015-04913,'Basing Software Testing on
   Information Theory' and No. 2020-05272, Automated boundary testing for
   QUality of AI/ML modelS') .
CR Abreu R, 2011, J SYST SOFTWARE, V84, P573, DOI 10.1016/j.jss.2010.11.915
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Ammann P, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P21, DOI 10.1109/ICST.2014.13
   [Anonymous], 2013, P 2013 INT S SOFTW T
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483767
   Chen YQT, 2020, IEEE INT CONF AUTOM, P237, DOI 10.1145/3324884.3416667
   Hinton Geoffrey E., 1990, Machine Learning, P555
   Hong S, 2017, INFORM SOFTWARE TECH, V82, P80, DOI 10.1016/j.infsof.2016.10.002
   Jang JI, 2022, SOFTW TEST VERIF REL, V32, DOI 10.1002/stvr.1802
   Jia Yue, 2016, P 25 INT S SOFTWARE, P354
   Just R., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P720, DOI 10.1109/ICST.2012.162
   Just R., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P612, DOI 10.1109/ASE.2011.6100138
   Just R., 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kim J., 2021, ACM T SOFTW ENG METH
   Kim J, 2021, PROC INT SYMP SOFTW, P253, DOI 10.1109/ISSRE52982.2021.00036
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Kurtz B, 2014, IEEE ICST WORKSHOP, P176, DOI 10.1109/ICSTW.2014.20
   Laghari G, 2018, PROC IEEE ACM INT C, P280, DOI 10.1145/3183440.3194970
   Li X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P169, DOI 10.1145/3293882.3330574
   Li X, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133916
   Li Y, 2021, PROC INT CONF SOFTW, P661, DOI 10.1109/ICSE43902.2021.00067
   Liang JJ, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P688, DOI 10.1145/3180155.3180213
   Mao DY, 2019, IEEE INT CONF SOFTW, P160, DOI 10.1109/ICST.2019.00025
   Meyer M, 2014, IEEE SOFTWARE, V31, P14, DOI 10.1109/MS.2014.58
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Offutt A. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P5, DOI 10.1145/125489.125473
   Papadakis M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P691, DOI 10.1109/ICST.2012.159
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Petrovic G, 2021, PROC INT CONF SOFTW, P910, DOI 10.1109/ICSE43902.2021.00087
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Shin Yoo, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P244, DOI 10.1007/978-3-642-33119-0_18
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Wong WE, 2007, P INT COMP SOFTW APP, P449
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Yoo S, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3078840
   Yu HF, 2011, MACH LEARN, V85, P41, DOI 10.1007/s10994-010-5221-8
   Zhang J, 2019, IEEE T SOFTWARE ENG, V45, P898, DOI 10.1109/TSE.2018.2809496
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 43
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2023
VL 162
AR 107272
DI 10.1016/j.infsof.2023.107272
EA JUN 2023
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA N2XA9
UT WOS:001035692600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Di Ruscio, D
   Di Salle, A
   Iovino, L
   Pierantonio, A
AF Di Ruscio, Davide
   Di Salle, Amleto
   Iovino, Ludovico
   Pierantonio, Alfonso
TI A modeling assistant to manage technical debt in coupled evolution
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE MDE; Metamodeling; Technical debt; Deprecation
ID COEVOLUTION; METAMODELS
AB Context: Model-Driven Engineering helps formalize problem domains by using metamodels. Modeling ecosys-tems consisting of purposely designed editors, transformations, and code generators are defined on top of the metamodels. Similar to other software artifacts, metamodels can evolve by possibly compromising the validity of existing artifacts. Coupled evolution provides techniques for restoring artifacts' validity in response to metamodel evolution. Objective: In this paper, we propose the adoption of deprecation in metamodeling to mitigate the difficulties in performing manual model adaptations in response to metamodel evolutions. Moreover, we aim to measure and resolve the technical debt during the co-evolution, which can be seen as the outcome of procrastinating artifact migrations.Methods: We propose a novel approach and supporting tool to manage the concepts of deprecation and technical debt in metamodeling.Results: We conducted a judgment study using the focus group methodology to assess the proposed approach's usefulness in migrating models affected by breaking non-resolvable changes completely.Conclusions: The proposed approach can identify the technical debt in metamodel evolution. Furthermore, it deals with the coupled evolution problem by assisting the modeler through interactive visualization tools, which highlight and quantify the technical dept of the artifacts under analysis that need to be evolved.
C1 [Di Ruscio, Davide; Pierantonio, Alfonso] Univ Aquila, Dept Informat Engn Comp Sci & Math, Via Vetoio Snc, I-67100 Laquila, Italy.
   [Di Salle, Amleto] European Univ Rome, Dept Human Sci, Via Aldobrandeschi 190, I-00163 Rome, Italy.
   [Iovino, Ludovico] Gran Sasso Sci Inst, Comp Sci Sci Area, Viale F Crispi 7, I-67100 Laquila, Italy.
C3 University of L'Aquila; European University of Rome; Gran Sasso Science
   Institute (GSSI)
RP Iovino, L (corresponding author), Gran Sasso Sci Inst, Comp Sci Sci Area, Viale F Crispi 7, I-67100 Laquila, Italy.
EM davide.diruscio@univaq.it; amleto.disalle@univaq.it;
   ludovico.iovino@gssi.it; alfonso.pierantonio@univaq.it
RI Di Ruscio, Davide/AAG-4674-2020
OI Di Ruscio, Davide/0000-0002-5077-6793; DI SALLE,
   AMLETO/0000-0002-0163-9784; Iovino, Ludovico/0000-0001-6552-2609
CR Alwidian S, 2019, LECT NOTES COMPUT SC, V11753, P200, DOI 10.1007/978-3-030-30690-8_12
   Avgeriou P., 2016, DAGSTUHL REP, DOI 10.4230/DagRep.6.4.110
   Bettini L., 2017, MODELS SATELLITE EVE, P71
   Bettini L, 2019, IEEE ACCESS, V7, P16364, DOI 10.1109/ACCESS.2019.2891357
   Bodhuin T., 2004, CAISE WORKSHOPS, P146
   Cassell C., 2004, Essential Guide to Qualitative Methods in Organizational Research, DOI DOI 10.4135/9781446280119.N21
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Di Ruscio Davide, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P114, DOI 10.1109/SEAA.2013.22
   Di Ruscio D, 2011, LECT NOTES COMPUT SC, V6563, P143, DOI 10.1007/978-3-642-19440-5_9
   Garcia J., 2012, INT C SOFTW LANG ENG, P144
   García-Munoz J, 2016, ADV INTELL SYST, V474, P463, DOI 10.1007/978-3-319-40162-1_50
   Giraldo FD, 2015, LECT NOTES BUS INF P, V204, P199, DOI 10.1007/978-3-319-19270-3_13
   Hebig R, 2017, IEEE T SOFTWARE ENG, V43, P396, DOI 10.1109/TSE.2016.2610424
   Herrmannsdoerfer M, 2009, LECT NOTES COMPUT SC, V5653, P52, DOI 10.1007/978-3-642-03013-0_4
   Herrmannsdoerfer M, 2011, LECT NOTES COMPUT SC, V6563, P163, DOI 10.1007/978-3-642-19440-5_10
   Iovino L., 2020, P 23 ACMIEEE INT C M, P1
   Iovino L, 2019, EUROMICRO CONF PROC, P458, DOI 10.1109/SEAA.2019.00074
   Iovino L, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.3.a3
   Izurieta C, 2015, QOSA'15 PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES, P31, DOI 10.1145/2737182.2737193
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Kessentini W., 2020, P 23 ACM IEEE INT C, P68, DOI [10.1145/3239372.3239375, DOI 10.1145/3239372.3239375]
   Kessentini W, 2019, INFORM SOFTWARE TECH, V106, P49, DOI 10.1016/j.infsof.2018.09.003
   Kolahdouz-Rahimi S, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110684
   Kolahdouz-Rahimi S, 2020, J COMPUT LANG, V59, DOI 10.1016/j.cola.2020.100971
   Kolovos D., 2020, P 23 INT C MOD DRIV, P12, DOI [10.1145/3365438.3410943, DOI 10.1145/3365438.3410943]
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5562, P146, DOI 10.1007/978-3-642-02674-4_11
   Kontio J., 2008, Guide to Advanced Empirical Software Engineering, P93, DOI [DOI 10.1007/978-1-84800-044-5_4, 10.1007/978-1-84800-044-54, DOI 10.1007/978-1-84800-044-54]
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lano K, 2018, LECT NOTES COMPUT SC, V10888, P127, DOI 10.1007/978-3-319-93317-7_6
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lonetti F, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2427
   Mantz F., 2010, NORD WORKSH PROGR TH
   Merton RK, 1946, AM J SOCIOL, V51, P541, DOI 10.1086/219886
   Mussbacher G, 2020, SOFTW SYST MODEL, V19, P1045, DOI 10.1007/s10270-020-00814-5
   Rojas Gonzalo., 2017, P 20 IBEROAMERICAN C, P99
   Rose L., 2010, INT WORKSH MOD EV
   Rose LM, 2010, LECT NOTES COMPUT SC, V6142, P184, DOI 10.1007/978-3-642-13688-7_13
   Rutle A, 2018, LECT NOTES COMPUT SC, V10890, P80, DOI 10.1007/978-3-319-92997-2_6
   Salay Rick., 2016, ME@MODELS, P50
   Saraiva JD, 2008, J DATABASE MANAGE, V19, P21, DOI 10.4018/jdm.2008100102
   Scanniello Giuseppe, 2016, P 31 ANN ACM S APPL, P1422
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Torchiano M, 2004, PROG COMPREHEN, P226, DOI 10.1109/WPC.2004.1311064
   Verdecchia R, 2022, SUSTAIN COMPUT-INFOR, V35, DOI 10.1016/j.suscom.2022.100767
   Von Kurnatowski L, 2022, EUR CON SFTWR MTNCE, P1266, DOI 10.1109/SANER53432.2022.00151
   Wagelaar Dennis, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P192, DOI 10.1007/978-3-642-30476-7_13
   Wilkinson S., 1998, International Journal of Social Research Methodology Theory and Practice, V1, P181, DOI DOI 10.1080/13645579.1998.10846874
   Williams J.R., 2012, 6th International Workshop on Models and Evolution, Proceedings of the ACM/IEEE 15th International Conference on Model Driven Engineering Languages and Systems, Innsbruck Austria, 15 October 2012, P39
   Wimmer M., 2010, P 2 INT WORKSH MOD T, V711, P65
NR 50
TC 3
Z9 3
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2023
VL 156
AR 107146
DI 10.1016/j.infsof.2022.107146
EA JAN 2023
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8K9IG
UT WOS:000923406000001
DA 2024-07-18
ER

PT J
AU Lermen, FH
   de Moura, PK
   Bertoni, VB
   Graciano, P
   Tortorella, GL
AF Lermen, Fernando Henrique
   de Moura, Paula Kvitko
   Bertoni, Vanessa Becker
   Graciano, Paola
   Tortorella, Guilherme Luz
TI Does maturity level influence the use of Agile UX methods by digital
   startups? Evaluating design thinking, lean startup, and lean user
   experience
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile UX; Technology management; Innovation; Digital startups; Maturity
   level; Design thinking Lean startup; Lean user experience
ID STAGE-GATE; FRAMEWORK; PRODUCT; INNOVATION; MODEL
AB Context: Agile UX methods such as Design Thinking, Lean Startup, and Lean User Experience have been employed to deliver customer value and improve organizational performance. However, there is a lack of studies that assess how these tools are used at different stages of maturity of digital startups.Objective: The present study aims to compare the knowledge of graduated, incubated, and pre-incubated digital startups at university incubators concerning the use of Agile UX methods so that weaknesses and opportunities can be identified to provide co founders and scholars with new strategic insights.Method: Six reduced focus groups were conducted with 14 members of the six selected startups via multiple case studies. Answers were registered by researchers and then analyzed using an inductive process and codification.Results: The results indicated that digital startups had contact with consumers through market research, viability analysis, and product discontinuity. However, except for one startup, deficiencies in co-founders' participation throughout developing products and services projects were identified. As far as the multiple case studies are concerned, Design Thinking and Lean Startup were employed by four of the startups, while two of them used the Lean User Experience method due to its higher maturity level.Conclusion: Although all Agile UX methods were employed, all six digital startups reported having made adap-tations to the methods or to have used them only partially. Finally, it was concluded that the maturity level influences the Agile UX methods of each digital startup according to its nature and its stage of development in the market.
C1 [Lermen, Fernando Henrique] State Univ Parana, Dept Ind Engn, R Comendador Correia Jr 117, BR-83203560 Paranagua, Brazil.
   [Lermen, Fernando Henrique] Univ Tecnol Peru, Ind Engn Dept, Ave Arequipa 265, Lima 15046, Arequipa, Peru.
   [de Moura, Paula Kvitko] Univ Fed Rio Grande do Sul, Grad Program Civil Engn, Ave Osvaldo Aranha, 99, third floor, BR-90035190 Porto Alegre, Brazil.
   [Bertoni, Vanessa Becker] Univ Kentucky, Management Dept, 550 S Limestone, Lexington, KY 40506 USA.
   [Graciano, Paola] Univ Fed Rio Grande do Sul, Grad Program Business, Rua Washington Luiz 855, BR-90010460 Porto Alegre, Brazil.
   [Tortorella, Guilherme Luz] Univ Melbourne, Dept Mech Engn, Grattan St, Melbourne 3052, Australia.
   [Tortorella, Guilherme Luz] Univ Austral, IAE Business Sch, Buenos Aires, Argentina.
   [Tortorella, Guilherme Luz] Univ Fed Santa Catarina, Dept Prod & Syst Engn, Florianopolis, Brazil.
C3 Universidad Tecnologica del Peru; Universidade Federal do Rio Grande do
   Sul; University of Kentucky; Universidade Federal do Rio Grande do Sul;
   University of Melbourne; Austral University; Universidade Federal de
   Santa Catarina (UFSC)
RP Lermen, FH (corresponding author), State Univ Parana, Dept Ind Engn, R Comendador Correia Jr 117, BR-83203560 Paranagua, Brazil.; Lermen, FH (corresponding author), Univ Tecnol Peru, Ind Engn Dept, Ave Arequipa 265, Lima 15046, Arequipa, Peru.
EM fernando-lermen@hotmail.com
RI Kvitko de Moura, Paula/KEH-2097-2024; Kvitko de Moura,
   Paula/I-5860-2018; Lermen, Fernando Henrique/U-2800-2017
OI Kvitko de Moura, Paula/0000-0001-8804-5382; Tortorella,
   Guilherme/0000-0003-2396-4665; Graciano, Paola/0000-0002-4811-6788;
   Lermen, Fernando Henrique/0000-0002-4790-7676
CR Aaker D.A., 2012, MARK RES, V11th, P768
   Agyabeng-Mensah Y, 2020, J MANUF TECHNOL MANA, V31, P1351, DOI 10.1108/JMTM-12-2019-0443
   [Anonymous], 2013, Lean UX: Applying Lean Principles to Improve User Experience
   Bajwa SS, 2017, EMPIR SOFTW ENG, V22, P2373, DOI 10.1007/s10664-016-9458-0
   Beckman SL, 2007, CALIF MANAGE REV, V50, P25, DOI 10.2307/41166415
   Beckman SL, 2020, CALIF MANAGE REV, V62, P144, DOI 10.1177/0008125620906620
   Bertoni VB, 2021, SAFETY SCI, V136, DOI 10.1016/j.ssci.2020.105148
   Bianchi M., 2017, EUR J INNOV MANAG
   Bjorklund T.A., 2018, SERVDES2018 SERVICE, V12
   Blank S., 2020, STARTUP OWNERS MANUA
   Bosch J., 2013, LEAN ENTERPRISE SOFT, V167, DOI [10.1007/978-3-642-44930-7_1, DOI 10.1007/978-3-642-44930-7_1]
   Brown T., 2010, Development Outreach., V12, P29, DOI DOI 10.1596/1020-797X_12_1_29
   Brown T, 2008, HARVARD BUS REV, V86, P84
   Buchanan R., 1992, Design Issues, V8, P5, DOI [10.2307/1511637, DOI 10.2307/1511637]
   Bustinza OF, 2019, R&D MANAGE, V49, P33, DOI 10.1111/radm.12269
   Caporale D, 2020, ENERG POLICY, V140, DOI 10.1016/j.enpol.2020.111387
   Carlgren L, 2016, CREAT INNOV MANAG, V25, P38, DOI 10.1111/caim.12153
   Carvalho L., 2020, INT J INNOVATION REG, V9, P137
   Chamberlain S, 2006, LECT NOTES COMPUT SC, V4044, P143
   Cocchi N, 2021, RES TECHNOL MANAGE, V64, P18, DOI 10.1080/08956308.2021.1942645
   COOPER RG, 1990, BUS HORIZONS, V33, P44, DOI 10.1016/0007-6813(90)90040-I
   Cooper RG, 2016, J PROD INNOVAT MANAG, V33, P513, DOI 10.1111/jpim.12314
   Cooper RG, 2014, RES TECHNOL MANAGE, V57, P20, DOI 10.5437/08956308X5606963
   Peralta CBD, 2020, J CLEAN PROD, V270, DOI 10.1016/j.jclepro.2020.122384
   da Silva T., 2012, Journal of Software Engineering and Applications, V05, P743, DOI DOI 10.4236/JSEA.2012.510087
   Da Silva TS, 2018, INFORM SOFTWARE TECH, V102, P1, DOI 10.1016/j.infsof.2018.04.008
   de Moura PK, 2019, SUSTAIN PROD CONSUMP, V18, P130, DOI 10.1016/j.spc.2018.11.003
   de Paula DFO, 2016, COMM COM INF SC, V617, P30, DOI 10.1007/978-3-319-40548-3_5
   Dobrigkeit F, 2019, DESIGN THINKING RES, P199, DOI DOI 10.1007/978-3-319-97082-0_11
   Donaldson J.P., 2017, Learning, Design, and Technology: An International Compendium of Theory, Research, Practice, and Policy, P1, DOI DOI 10.1007/978-3-319-17727-4_73-1
   Drobyazko S., 2019, J. Enterpren. Educ., V22, P1
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Edison H, 2018, J SYST SOFTWARE, V135, P69, DOI 10.1016/j.jss.2017.09.034
   Eisenhardt KM, 2007, ACAD MANAGE J, V50, P25, DOI 10.5465/AMJ.2007.24160888
   Eisenmann T., 2012, HARVARD BUSINESS SCH, P812
   Elo S, 2008, J ADV NURS, V62, P107, DOI 10.1111/j.1365-2648.2007.04569.x
   Elsbach KD, 2018, J MANAGE, V44, P2274, DOI 10.1177/0149206317744252
   Fitsilis P, 2008, ADVANCES IN COMPUTER AND INFORMATIOM SCIENCES AND ENGINEERING, P378, DOI 10.1007/978-1-4020-8741-7_68
   Flikkema M, 2019, RES POLICY, V48, P1340, DOI 10.1016/j.respol.2019.01.018
   Garrette B., 2018, CRACKED IT SOLVE BIG, P169
   Gottlieb M, 2017, AEM EDUC TRAIN, V1, P21, DOI 10.1002/aet2.10003
   Greenwood M, 2017, APPL NURS RES, V35, P90, DOI 10.1016/j.apnr.2017.02.024
   Gutbrod M, 2017, LECT NOTES COMPUT SC, V10611, P297, DOI 10.1007/978-3-319-69926-4_21
   Harms R, 2020, J SMALL BUS MANAGE, V58, P200, DOI 10.1080/00472778.2019.1659677
   Hart MA, 2012, J PROD INNOVAT MANAG, V29, P508
   Holifield J., 2012, P INFORM SYSTEMS EDU, V2167, P1435
   Isomursu Minna, 2012, Proceedings of the 2012 Agile Conference, P1, DOI 10.1109/Agile.2012.10
   Jouhtimaki K., 2015, LEAN USER EXPERIENCE
   Klaasa P., 2018, Incubation framework for a new startup: A case study in Thailand
   Klein L., 2013, UX LEAN STARTUPS FAS
   Kuusinen Kati, 2012, Human-Centered Software Engineering. Proceedings of the 4th International Conference, HCSE 2012, P94, DOI 10.1007/978-3-642-34347-6_6
   Lenarduzzi V, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P112, DOI 10.1109/SEAA.2016.56
   Lermen FH, 2018, J CLEAN PROD, V191, P261, DOI 10.1016/j.jclepro.2018.04.185
   Liedtka Jeanne, 2014, Strategy & Leadership, V42, P40, DOI 10.1108/SL-01-2014-0004
   Liedtka J., 2018, Darden Working Paper Series
   Liikkanen LA, 2014, PROCEEDINGS OF THE NORDICHI'14: THE 8TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION: FUN, FAST, FOUNDATIONAL, P1095, DOI 10.1145/2639189.2670285
   Lindgren E, 2016, INFORM SOFTWARE TECH, V77, P80, DOI 10.1016/j.infsof.2016.04.008
   Mansoori Y, 2020, SMALL BUS ECON, V54, P791, DOI 10.1007/s11187-019-00153-w
   Martins HF, 2019, INFORMATION, V10, DOI 10.3390/info10120371
   Maurya Ash., 2012, RUNNING LEAN ITERATE
   Müller JM, 2021, EUR MANAG J, V39, P333, DOI 10.1016/j.emj.2020.01.002
   Munch J., 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P226, DOI 10.1109/ICSSP.2012.6225973
   Nakano N., 2018, INFORM LEARN SCI
   Nguyen-Duc A., 2016, Agile processes, in software engineering, and extreme programming, P118, DOI [10.1007/978-3-319-33515-510, DOI 10.1007/978-3-319-33515-510, DOI 10.1007/978-3-319-33515-5_10]
   Nirwan MD, 2015, PROCD SOC BEHV, V169, P23, DOI 10.1016/j.sbspro.2015.01.282
   Oliva FL, 2019, J KNOWL MANAG, V23, P1838, DOI 10.1108/JKM-06-2018-0361
   Oppong S.H., 2013, Asian Journal of Management Sciences and Education, V2, P202, DOI DOI 10.7748/NR2004.07.12.1.7.C5927
   Osterwalder A., 2010, BUSINESS MODEL GENER, DOI DOI 10.1111/J.1540-5885.2012.00977_2.X
   Paipa-Galeano L, 2020, J IND ENG MANAG-JIEM, V13, P195, DOI 10.3926/jiem.2973
   Peralta CBD, 2020, J MANUF TECHNOL MANA, V31, P725, DOI 10.1108/JMTM-06-2019-0209
   Peres A, 2014, 2014 AGILE CONFERENCE (AGILE), P61, DOI 10.1109/AGILE.2014.15
   Plattner H, 2011, UNDERST INNOV, P1, DOI 10.1007/978-3-642-13757-0
   Psomas E, 2021, INT J LEAN SIX SIG, V12, P1146, DOI 10.1108/IJLSS-06-2020-0082
   Raharjo Teguh, 2020, ICSIM '20: Proceedings of the 3rd International Conference on Software Engineering and Information Management, P123, DOI 10.1145/3378936.3378949
   Rezvani M, 2020, J STRATEG MARK, V28, P136, DOI 10.1080/0965254X.2018.1488762
   Roberts JP, 2016, HEALTHCARE-J DEL SCI, V4, P11, DOI 10.1016/j.hjdsi.2015.12.002
   Scott J., 2006, Social theory: Central issues in sociology
   Silva DS, 2021, INT J ENTREP BEHAV R, V27, P944, DOI 10.1108/IJEBR-01-2020-0030
   Taipale M, 2010, LECT NOTES BUS INF, V65, P111, DOI 10.1007/978-3-642-16416-3_16
   Thoring K., 2011, P 13 INT C ENG PROD, P493
   Tian YG, 2017, STAT PROBABIL LETT, V128, P52, DOI 10.1016/j.spl.2017.04.007
   Tortorella GL, 2019, INT J OPER PROD MAN, V39, P860, DOI 10.1108/IJOPM-01-2019-0005
   Tritoasmoro II, 2024, J SCI TECHNOL POLICY, V15, P178, DOI 10.1108/JSTPM-12-2021-0187
   Tushar W, 2020, ENERGY, V197, DOI 10.1016/j.energy.2020.117141
   Vieira L.M.E.D.R., 2016, THESIS BRASIL
   Watz M, 2020, J CLEAN PROD, V247, DOI 10.1016/j.jclepro.2019.119155
   Winke P, 2017, SYSTEM, V71, P73, DOI 10.1016/j.system.2017.09.018
   Ximenes BH, 2015, LECT NOTES COMPUT SC, V9186, P356, DOI 10.1007/978-3-319-20886-2_34
   Xu Wang, 2020, Data Processing Techniques and Applications for Cyber-Physical Systems (DPTA 2019). Advances in Intelligent Systems and Computing (AISC 1088), P1037, DOI 10.1007/978-981-15-1468-5_121
   Yang KL, 2020, COMM COM INF SC, V1189, P185, DOI 10.1007/978-981-15-3118-7_12
   Zheng P, 2019, J INTELL MANUF, V30, P3, DOI 10.1007/s10845-016-1224-z
   Zorzetti M., 2020, INT C ENTERPRISE INF, P517
   Zorzetti M, 2022, INFORM SOFTWARE TECH, V141, DOI 10.1016/j.infsof.2021.106718
NR 93
TC 3
Z9 3
U1 13
U2 54
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2023
VL 154
AR 107107
DI 10.1016/j.infsof.2022.107107
EA NOV 2022
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7D9DL
UT WOS:000900782600005
DA 2024-07-18
ER

PT J
AU Dashuber, V
   Philippsen, M
AF Dashuber, Veronika
   Philippsen, Michael
TI Trace visualization within the Software City metaphor: Controlled
   experiments on program comprehension
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Trace visualization; Software city; Program comprehension; Aggregation;
   Heatmap; Root cause analysis
AB Context: Especially with the rise of microservice architectures, software is hard to understand when just the static dependencies are known. The actual call paths and the dynamic behavior of the application are hidden behind network communication. To comprehend what is going on in the software the vast amount of runtime data (traces) needs to be reduced and visualized.
   Objective: This work explores more effective visualizations to support program comprehension based on runtime data. The pure DYNACITY visualization supports understanding normal behavior, while DYNACITY(RC) supports the comprehension of faulty behavior.
   Method: DYNACITY uses the city metaphor for visualization. Its novel trace visualization displays dynamic dependencies as arcs atop the city. To reduce the number of traces, DYNACITY aggregates all requests between the same two components into one arc whose brightness reflects both the number and the total duration of the requests. DYNACITY also encodes dynamic trace data in a heatmap that it uses to light up the building: the brighter a building is, the more active it is, i.e., the more and the longer the requests are that it receives and/or spawns. An additional color scheme reflects any error/status codes among the aggregated traces. In a controlled experiment, we compare our approach with a traditional trace visualization built into the same Software City but showing all dependencies (without aggregation) as individual arcs and also disabling the heatmap. We also report on a second study that evaluates if an error-based coloring of only the arcs is sufficient or if the buildings should also be colored. We call this extension DYNACITY(RC) as it is meant to support root cause analyses. The source code and the raw data of the quantitative evaluations are available from https://github.com/qaware/dynacity.
   Results: We show quantitatively that a group of professional software developers who participated in a controlled experiment solve typical software comprehension tasks more correctly (11.7%) and also saved 5.83% of the total allotted time with the help of DYNACITY and that they prefer it over the more traditional dynamic trace visualization. The color scheme based on HTTP error codes in DYNACITY(RC) supports developers when performing root cause analyses, as the median of them stated that the visualization helped them much in solving the tasks. The evaluation also shows that subjects using DYNACITY(RC) with colored arcs and buildings find the responsible component 26.2% and the underlying root cause 33.3% more correctly than the group with just colored arcs. They also ranked it 40% more helpful to color both.
   Conclusion: The DYNACITY visualization helps professional software engineers to understand the dynamic behavior of a software system better and faster. The color encoding of error codes in DYNACITY(RC) also helps them with root cause analyses.
C1 [Dashuber, Veronika] QAware GmbH, Aschauer Str 32, D-81549 Munich, Germany.
   [Philippsen, Michael] Friedrich Alexander Univ Erlangen Nurnberg FAU, Programming Syst Grp, Martensstr 3, D-91058 Erlangen, Germany.
C3 University of Erlangen Nuremberg
RP Dashuber, V (corresponding author), QAware GmbH, Aschauer Str 32, D-81549 Munich, Germany.
EM veronika.dashuber@qaware.de; michael.philippsen@fau.de
OI Dashuber, Veronika/0000-0001-8577-5646
CR Alam S, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P269, DOI 10.1109/WCRE.2007.26
   Benomar Omar., 2013, 2013 1 IEEE WORKING, DOI [DOI 10.1109/VISSOFT.2013.6650524, 10.1109/VISSOFT.2013.6650524]
   Caserta P., 2011, P 6 INT WORKSH VIS S, P1
   Caserta P, 2011, IEEE T VIS COMPUT GR, V17, P913, DOI 10.1109/TVCG.2010.110
   Cornelissen B, 2007, INT C PROGRAM COMPRE, P49
   Cornelissen B, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P213
   Cornelissen B, 2011, IEEE T SOFTWARE ENG, V37, P341, DOI 10.1109/TSE.2010.47
   Cornelissen B, 2008, PROC IEEE INT CONF S, P107, DOI 10.1109/ICSM.2008.4658059
   Dashuber V, 2021, 2021 WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2021), P55, DOI 10.1109/VISSOFT52517.2021.00015
   Dashuber V, 2021, IVAPP: PROCEEDINGS OF THE 16TH INTERNATIONAL JOINT CONFERENCE ON COMPUTER VISION, IMAGING AND COMPUTER GRAPHICS THEORY AND APPLICATIONS - VOL. 3: IVAPP, P15, DOI 10.5220/0010180200150026
   De Pauw W, 1998, PROCEEDINGS OF THE FOURTH USENIX CONFERENCE ON OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS, P219
   Dugerdil P, 2008, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P38
   Fittkau Florian, 2013, Proc. IEEE Working Conf. on Softw. Vis, P1
   Gunawi HS, 2016, PROCEEDINGS OF THE SEVENTH ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC 2016), P1, DOI 10.1145/2987550.2987583
   Guo XF, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1387, DOI 10.1145/3368089.3417066
   Hamou-Lhadj A, 2006, INT C PROGRAM COMPRE, P181, DOI 10.1109/ICPC.2006.45
   HART S G, 1988, P139
   Holten D, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P47, DOI 10.1109/VISSOF.2007.4290699
   Jin MX, 2020, IEEE ACCESS, V8, P226397, DOI 10.1109/ACCESS.2020.3044610
   Knüpfer A, 2005, 13TH EUROMICRO CONFERENCE ON PARALLEL, DISTRIBUTED AND NETWORK-BASED PROCESSING, PROCEEDINGS, P258, DOI 10.1109/EMPDP.2005.24
   Kobayashi K, 2013, CONF PROC INT SYMP C, P43, DOI 10.1109/ICPC.2013.6613832
   Krause A, 2021, 2021 WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2021), P125, DOI 10.1109/VISSOFT52517.2021.00024
   Lal H, 2017, PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, DATA SCIENCE AND ENGINEERING (CONFLUENCE 2017), P105, DOI 10.1109/CONFLUENCE.2017.7943132
   Li XL, 2010, PROCEEDINGS OF 2010 INTERNATIONAL CONFERENCE ON INDUSTRY ENGINEERING AND MANAGEMENT, P75
   Maoz S, 2007, VL/HCC 2007: IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P153, DOI 10.1109/VLHCC.2007.27
   Pacione MJ, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2004.7
   Rohatgi A, 2008, INT C PROGRAM COMPRE, P234, DOI 10.1109/ICPC.2008.35
   Sedlar U, 2012, IEEE NETWORK, V26, P40, DOI 10.1109/MNET.2012.6375892
   Song M, 2013, EXPERT SYST APPL, V40, P3722, DOI 10.1016/j.eswa.2012.12.078
   Sridharan C., 2018, Distributed Systems Observability
   Szvetits M., 2013, PROC 8 INT WORKSHOP
   Takada T, 2002, SIXTH INTERNATIONAL CONFERENCE ON INFORMATION VISUALISATION, PROCEEDINGS, P570, DOI 10.1109/IV.2002.1028831
   Tricaud Sebastien., 2008, WASL'08: Proceedings of the First USENIX conference on Analysis of system logs, P3
   Trümper J, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P133
   van den Elzen S, 2014, IEEE T VIS COMPUT GR, V20, P1087, DOI 10.1109/TVCG.2013.263
   Vincur J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P509, DOI 10.1109/QRS-C.2017.88
   Waller J, 2013, 2013 1 IEEE WORK C S, P1
   Wettel R, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P92, DOI 10.1109/VISSOF.2007.4290706
   Wu L, 2020, IEEE IFIP NETW OPER, DOI 10.1109/noms47738.2020.9110353
   Zaidman A, 2008, J SOFTW MAINT EVOL-R, V20, P387, DOI 10.1002/smr.370
NR 40
TC 3
Z9 3
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2022
VL 150
AR 106989
DI 10.1016/j.infsof.2022.106989
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4P3BJ
UT WOS:000855271700003
OA hybrid
DA 2024-07-18
ER

PT J
AU Kadenic, MD
   Koumaditis, K
   Junker-Jensen, L
AF Kadenic, Maja Due
   Koumaditis, Konstantinos
   Junker-Jensen, Louis
TI Mastering scrum with a focus on team maturity and key components of
   scrum
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile software development; Scrum teams; team performance; maturity;
   success
ID AGILE SOFTWARE-DEVELOPMENT; SUCCESS FACTORS; CHALLENGES; IMPROVEMENT;
   MANAGEMENT; LEADERSHIP; FRAMEWORK; ADOPTION; QUALITY; MODEL
AB Context: Several studies contribute with valuable insights into agile teamwork performance. Currently, Scrum is dominating the industrial agile software development practices. Yet, there is a lack of studies that directly ex-plores the role of team maturity and key components of the Scrum framework on being successful at Scrum. Objective: We investigate the impact of team maturity and four categories of the Scrum framework (team composition, Scrum values, Scrum roles, and Scrum events) on the perception of being successful at Scrum. Hence, we uncover and provide deeper insights into the characteristics and practices of what makes a team successful at Scrum.Method: We carry out a large-scale and cross-sectional survey. We conduct Pearson's chi-square test of inde-pendence and logistic regression analysis for team maturity and the remaining variables on being successful.Results: After surveying 182 Scrum team members, the results show that being successful at Scrum depends on the team maturity level. Team composition variables (fully allocated, low turnover rates, required skills and expertise, and self-management) and directing work in accordance with Scrum values (openness and courage) have an impact. All three Scrum roles are important. Particularly impactful are the developers' ability to adapt their plans, the product owners' mandate to prioritize, and the Scrum masters' ability to ensure that all events take place. Following all Scrum events has an effect on the perception of being successful at Scrum.Conclusion: This work constitutes a valuable contribution to agile practitioners and organizations who are already involved in agile development or plan to pursue agility. Organizations can influence Scrum teams' journey to-wards becoming successful at Scrum by ensuring the stability required to allow team maturation and decision -making relevant to team composition variables. This work also provides reflections that are useful for Scrum teams' practices and internal dynamics related to values, roles, and events.
C1 [Kadenic, Maja Due; Koumaditis, Konstantinos; Junker-Jensen, Louis] Aarhus Univ, Dept Business Dev & Technol, Aarhus, Denmark.
C3 Aarhus University
RP Kadenic, MD (corresponding author), Aarhus Univ, Dept Business Dev & Technol, Aarhus, Denmark.
EM Maja@btech.au.dk
OI Kadenic, Maja Due/0000-0002-5197-1179; Koumaditis,
   Konstantinos/0000-0003-3963-2358; Junker-Jensen,
   Louis/0000-0002-7672-0931
CR Abrahamsson P, 2003, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2003.1201204
   Abrahamsson P, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P31, DOI 10.1007/978-3-642-12575-1_3
   [Anonymous], 2009, International Journal of Software EngineeringIJSE
   [Anonymous], 2020, The 14th annual State of Agile report
   [Anonymous], 2021, 15 ANN STATE AGILE R
   [Anonymous], 2014, INT C SOFTWARE PROCE, DOI DOI 10.1007/978-3-319-13036-1_16
   Ayunda P. L., 2020, P 2020 3 INT C COMPU, DOI [10.1109/ic2ie50715.2020.9274625, DOI 10.1109/IC2IE50715.2020.9274625]
   Barbosa Da Silva Karla Michele, 2015, 2015 6th Brazilian Workshop on Agile Methods (WBMA). Proceedings, P48, DOI 10.1109/WBMA.2015.19
   Baskerville R, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P87, DOI 10.1007/978-3-642-12575-1_5
   Bianchi M, 2020, J BUS RES, V110, P538, DOI 10.1016/j.jbusres.2018.05.003
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Cervone H. Frank, 2011, OCLC Systems & Services, V27, P18, DOI 10.1108/10650751111106528
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Cohen D, 2004, ADV COMPUT, V62, P1, DOI 10.1016/S0065-2458(03)62001-2
   Conboy Kieran., 2004, P 2004 ACM WORKSHOP, P37
   Conforto EC, 2016, J ENG TECHNOL MANAGE, V40, P1, DOI 10.1016/j.jengtecman.2016.02.003
   Coram M, 2005, 12TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P363, DOI 10.1109/ECBS.2005.68
   Diebold P, 2015, LECT NOTES BUS INF P, V212, P40, DOI 10.1007/978-3-319-18612-2_4
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   DINGSOYR T., 2010, Agile Software Development: Current Research and Future Directions
   Dingsoyr T, 2013, LECT NOTES BUS INF P, V149, P46
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Eloranta VP, 2016, INFORM SOFTWARE TECH, V74, P194, DOI 10.1016/j.infsof.2015.12.003
   Fontana RM, 2015, J SYST SOFTWARE, V102, P88, DOI 10.1016/j.jss.2014.12.032
   Fontana RM, 2014, J SYST SOFTWARE, V97, P140, DOI 10.1016/j.jss.2014.07.030
   Fowler M., 2001, Software Development, V9, P28
   Freedrikson Arifin Nala, 2020, 2020 International Conference on Informatics, Multimedia, Cyber and Information System (ICIMCIS), P178, DOI 10.1109/ICIMCIS51567.2020.9354311
   Freire A, 2018, INFORM SOFTWARE TECH, V100, P119, DOI 10.1016/j.infsof.2018.04.004
   Garcia LA, 2022, INFORM SOFTWARE TECH, V146, DOI 10.1016/j.infsof.2021.106814
   Ghayyur SAK, 2018, INT J ADV COMPUT SC, V9, P278
   Gregory P, 2016, INFORM SOFTWARE TECH, V77, P92, DOI 10.1016/j.infsof.2016.04.006
   Gren L, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2244
   Gren L, 2017, J SYST SOFTWARE, V124, P104, DOI 10.1016/j.jss.2016.11.024
   Gren L, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P1, DOI 10.1109/SEAA.2015.31
   Henriques Vaughan, 2017, Interdisciplinary Journal of Information, Knowledge, and Management, V12, P53
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Hoda R., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P285, DOI [10.1145/1806799.1806843, DOI 10.1145/1806799.1806843]
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Hofstede G., 2011, DIMENSIONALIZING CUL, DOI DOI 10.9707/2307-0919.1014
   Holtzhausen N, 2018, LEADERSHIP ORG DEV J, V39, P873, DOI 10.1108/LODJ-05-2018-0193
   Hossain E, 2009, INT CONF GLOBAL SOFT, P175, DOI 10.1109/ICGSE.2009.25
   Laanti M., 2013, Communications in Computer and Information Science, V364, P247, DOI DOI 10.1007/978-3-642-39179-8_22
   Lee G, 2010, MIS QUART, V34, P87
   Lee R.C., 2012, Journal of Software Engineering and Applications, V5, P367, DOI DOI 10.4236/JSEA.2012.56043
   Leppanen M., 2013, Information systems development: Reflections, challenges and new directions, P329, DOI DOI 10.1007/978-1-4614-1951-5_27
   Lindsjorn Y, 2016, J SYST SOFTWARE, V122, P274, DOI 10.1016/j.jss.2016.09.028
   McHugh ML, 2013, BIOCHEM MEDICA, V23, P143, DOI 10.11613/BM.2013.018
   Misra SC, 2009, J SYST SOFTWARE, V82, P1869, DOI 10.1016/j.jss.2009.05.052
   Moe NB, 2008, LECT NOTES BUS INF P, V9, P11
   Moe NB, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P76, DOI 10.1109/ASWEC.2008.28
   Moe NB, 2013, LECT NOTES BUS INF P, V149, P76
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Moe NB, 2009, LECT NOTES BUS INF P, V31, P114
   Packlick J, 2007, AGILE 2007, Proceedings, P266, DOI 10.1109/AGILE.2007.55
   Patrucco AS, 2022, IEEE T ENG MANAGE, V69, P3503, DOI 10.1109/TEM.2022.3146717
   Qumer A, 2008, J SYST SOFTWARE, V81, P1899, DOI 10.1016/j.jss.2007.12.806
   Ringstad MA, 2011, COMM COM INF SC, V172, P167
   Schwaber K., 2020, Scrum Guide
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Schweigert T, 2012, COMM COM INF SC, V290, P289
   Serrador P, 2015, INT J PROJ MANAG, V33, P1040, DOI 10.1016/j.ijproman.2015.01.006
   Setiyawan J., 2020, J PHYS C SER, V1566, DOI [10.1088/1742-6596/1566/1/012050, DOI 10.1088/1742-6596/1566/1/012050]
   Sharp H, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P61, DOI 10.1007/978-3-642-12575-1_4
   Sidky A, 2007, INNOV SYST SOFTW ENG, V3, P203, DOI 10.1007/s11334-007-0026-z
   Sithambaram J, 2021, INT J PROJ MANAG, V39, P474, DOI 10.1016/j.ijproman.2021.03.002
   Sommer AF, 2015, RES TECHNOL MANAGE, V58, P36, DOI 10.5437/08956308X5801236
   Spiegler S.V., 2020, INT C AG SOFTW DEV, P162
   Spiegler SV, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09949-5
   Spiegler SV, 2019, LECT NOTES BUS INF P, V355, P37, DOI 10.1007/978-3-030-19034-7_3
   Srivastava A, 2020, INT J SYST ASSUR ENG, V11, P247, DOI 10.1007/s13198-020-00966-z
   Srivastava A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON COMPUTING, COMMUNICATION AND AUTOMATION (ICCCA), P864, DOI 10.1109/CCAA.2017.8229928
   Stray V, 2016, LECT NOTES COMPUT SC, V10027, P458, DOI 10.1007/978-3-319-49094-6_31
   Stray VG, 2011, LECT NOTES BUS INF P, V77, P146
   Tam C, 2020, INT J PROJ MANAG, V38, P165, DOI 10.1016/j.ijproman.2020.02.001
   Verwijs C., 2021, THEORY SCRUM TEAM EF
   Wheelan SA, 2003, SMALL GR RES, V34, P223, DOI 10.1177/1046496403251608
   Yin A., 2011, P ICSEA, P20
   Zasa FP, 2020, RES TECHNOL MANAGE, V64, P54, DOI 10.1080/08956308.2021.1843331
NR 79
TC 7
Z9 8
U1 32
U2 95
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2023
VL 153
AR 107079
DI 10.1016/j.infsof.2022.107079
EA SEP 2022
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5M1OI
UT WOS:000870873400004
OA hybrid
DA 2024-07-18
ER

PT J
AU Moreno-Lumbreras, D
   Minelli, R
   Villaverde, A
   Gonzalez-Barahona, JM
   Lanza, MCL
AF Moreno-Lumbreras, David
   Minelli, Roberto
   Villaverde, Andrea
   Gonzalez-Barahona, Jesus M.
   Lanza, Michele
TI CodeCity: A comparison of on-screen and virtual reality
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE CodeCity; City metaphor; Software visualization; Software evolution;
   Reverse engineering; Virtual reality; Web; 3D
ID SOFTWARE; COMPREHENSION; VISUALIZATION
AB Context: Over the past decades, researchers proposed numerous approaches to visualize source code. A popular one is CodeCity, an interactive 3D software visualization representing software system as cities: buildings represent classes (or files) and districts represent packages (or folders). Building dimensions represent values of software metrics, such as number of methods or lines of code. There are many implementations of CodeCity, the vast majority of them running on-screen. Recently, some implementations using virtual reality (VR) have appeared, but the usefulness of CodeCity in VR is still to be proven.Aim: Our comparative study aims to answer the question "Is VR well suited for CodeCity, compared to the traditional on-screen implementation?''Methods: We performed two experiments with our web-based implementation of CodeCity, which can be used on-screen or in immersive VR. First, we conducted a controlled experiment involving 24 participants from academia and industry. Taking advantage of the obtained feedback, we improved our approach and conducted a second controlled experiment with 26 new participants.Results: Our results show that people using the VR version performed the assigned tasks in much less time, while maintaining a comparable level of correctness.Conclusion: VR is at least equally well-suited as on-screen for visualizing CodeCity, and likely better.
C1 [Moreno-Lumbreras, David] Univ Rey Juan Carlos & Bitergia, Escuela Int Doctorado, Leganes, Spain.
   [Minelli, Roberto; Lanza, Michele] REVEAL Software Inst, USI, Lugano, Switzerland.
   [Villaverde, Andrea; Gonzalez-Barahona, Jesus M.] Univ Rey Juan Carlos, ETSIT, Fuenlabrada, Spain.
C3 Universidad Rey Juan Carlos
RP Moreno-Lumbreras, D (corresponding author), Univ Rey Juan Carlos & Bitergia, Escuela Int Doctorado, Leganes, Spain.
EM d.morenolu@alumnos.urjc.es
RI Lanza, Michele/JNQ-9470-2023; Gonzalez-Barahona, Jesus M./L-5646-2017;
   Minelli, Roberto/AAB-9614-2020
OI Lanza, Michele/0000-0003-4391-0197; Gonzalez-Barahona, Jesus
   M./0000-0001-9682-460X; Minelli, Roberto/0000-0002-1549-6489;
   Moreno-Lumbreras, David/0000-0002-5454-7808
FU Community of Madrid, Spain [IND2018/TIC-9669]; Spanish Government
   [RTI-2018-101963-B-I00]; Swiss National Science foundation (SNSF),
   Switzerland [190113]
FX We acknowledge the financial support of the Community of Madrid, Spain
   for the project IND2018/TIC-9669, the Spanish Government for the project
   RTI-2018-101963-B-I00 and the Swiss National Science foundation (SNSF),
   Switzerland for the project "INSTINCT" (SNF Project No. 190113) . We
   also thank all the participants of our experi-ments
CR Alexander C., 1977, PATTERN LANGUAGE TOW
   [Anonymous], 2004, P 2004 AUSTR S INF V
   Averbukh VL, 2001, PROGRAM COMPUT SOFT+, V27, P227, DOI 10.1023/A:1012333025189
   Balogh Gergo, 2016, 2016 IEEE 23rd International Conference on Software Analysis, Evolution and Reengineering (SANER), P17, DOI 10.1109/SANER.2016.48
   Balzer M., 2004, SOFTWARE LANDSCAPES, V01, P261
   Baum D, 2017, 2017 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2017), P114, DOI 10.1109/VISSOFT.2017.12
   Brito R, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P649, DOI [10.1109/SANER.2019.8668008, 10.1109/saner.2019.8668008]
   Capece N, 2017, LECT NOTES COMPUT SC, V10325, P319, DOI 10.1007/978-3-319-60928-7_28
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cosentino V, 2018, IEEE INT WORK C SO, P123, DOI 10.1109/SCAM.2018.00021
   Dueñas S, 2021, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.601
   Dueñas S, 2018, PROC IEEE ACM INT C, P1, DOI 10.1145/3183440.3183475
   Erra U., 2012, P 27 ANN ACM S APPL, P981
   Fittkau F, 2015, 2015 IEEE 3RD WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P130, DOI 10.1109/VISSOFT.2015.7332423
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   HARRISON W, 1982, COMPUTER, V15, P65, DOI 10.1109/MC.1982.1654138
   Jackson D, 2020, WebGL 2.0 specification
   Jones Brandon, 2020, W3C WORKING DRAFT
   Knight C, 1999, PROG COMPREHEN, P4, DOI 10.1109/WPC.1999.777733
   Lakoff G., 2003, METAPHORS WE LIVE
   Langelier G., 2005, Proc. IEEE/ACM Automated Software Engineering, P214
   Maletic JI, 2001, PROG COMPREHEN, P26, DOI 10.1109/WPC.2001.921711
   Marcus Andrian, 2003, ACM S SOFTWARE VISUA, P27
   Maruyama Katsuhisa, 2014, P 22 INT C PROGRAM C, P207
   Merino L, 2017, PROC IEEE INT CONF S, P633, DOI 10.1109/ICSME.2017.70
   Merino L, 2017, 2017 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2017), P11, DOI 10.1109/VISSOFT.2017.17
   Misiak M, 2018, 2018 SIXTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P112, DOI 10.1109/VISSOFT.2018.00020
   Moreno-Lumbreras D, 2021, 2021 WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2021), P12, DOI 10.1109/VISSOFT52517.2021.00011
   Nachar N, 2008, TUTOR QUANT METHODS, V4, P13, DOI 10.20982/tqmp.04.1.p013
   Panas T, 2003, IEEE INFOR VIS, P314, DOI 10.1109/IV.2003.1217996
   Panas T., 2005, P 2005 ACM S SOFTW V, P173
   Panas T, 2007, IEEE INT C ENG COMP, P217, DOI 10.1109/ICECCS.2007.20
   Pfahler F, 2020, EIGHTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2020), P22, DOI 10.1109/VISSOFT51673.2020.00007
   Ralph P., 2021, ACM SIGSOFT Software Engineering Notes, V46, P19, DOI DOI 10.1145/3437479.3437483
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Romano S, 2019, INFORM SOFTWARE TECH, V114, P92, DOI 10.1016/j.infsof.2019.06.007
   Rüdel MO, 2018, 2018 SIXTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P21, DOI 10.1109/VISSOFT.2018.00011
   Scarsbrook JD, 2018, INT C PROGRAM COMPRE, P389, DOI 10.1145/3196321.3196368
   Schreiber A, 2017, 2017 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2017), P119, DOI 10.1109/VISSOFT.2017.20
   Sillito J., 2006, Proc. of the ACM SIGSOFT Int'l Symp. on Foundations of Software Engineering, P23, DOI DOI 10.1145/1181775.1181779
   Steinbrückner F, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P193
   Vincur J, 2017, VRST'17: PROCEEDINGS OF THE 23RD ACM SYMPOSIUM ON VIRTUAL REALITY SOFTWARE AND TECHNOLOGY, DOI 10.1145/3139131.3141209
   Vincur J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P509, DOI 10.1109/QRS-C.2017.88
   Wettel R, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P92, DOI 10.1109/VISSOF.2007.4290706
   Wettel R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P551, DOI 10.1145/1985793.1985868
   Wettel R, 2008, WORK CONF REVERSE EN, P219, DOI 10.1109/WCRE.2008.55
   Wettel R, 2007, INT C PROGRAM COMPRE, P231
   Wettel R, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P155
   Young P, 1998, PROG COMPREHEN, P19, DOI 10.1109/WPC.1998.693276
NR 49
TC 10
Z9 10
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2023
VL 153
AR 107064
DI 10.1016/j.infsof.2022.107064
EA SEP 2022
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4X6CZ
UT WOS:000860929000004
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Zhao, YY
   Wang, YW
   Zhang, YW
   Zhang, DL
   Gong, YZ
   Jin, DH
AF Zhao, Yanyang
   Wang, Yawen
   Zhang, Yuwei
   Zhang, Dalin
   Gong, Yunzhan
   Jin, Dahai
TI ST-TLF: Cross-version defect prediction framework based transfer
   learning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Defect prediction; Concept drift; Transfer learning;
   Clustering analysis
ID REGRESSION; RIDGE; VALIDATION; SIMULATION; SELECTION; MODELS
AB Context: Cross-version defect prediction (CVDP) is a practical scenario in which defect prediction models are derived from defect data of historical versions to predict potential defects in the current version. Prior research employed defect data of the latest historical version as the training set using the empirical recommended method, ignoring the concept drift between versions, which undermines the accuracy of CVDP.Objective: We customized a Selected Training set and Transfer Learning Framework (ST-TLF) with two objectives: a) to obtain the best training set for the version at hand, proposing an approach to select the training set from the historical data; b) to eliminate the concept drift, designing a transfer strategy for CVDP.Method: To evaluate the performance of ST-TLF, we investigated three research problems, covering the generalization of ST-TLF for multiple classifiers, the accuracy of our training set matching methods, and the performance of ST-TLF in CVDP compared against state-of-the-art approaches.Results: The results reflect that (a) the eight classifiers we examined are all boosted under our ST-TLF, where SVM improves 49.74% considering MCC, as is similar to others; (b) when performing the best training set matching, the accuracy of the method proposed by us is 82.4%, while the experience recommended method is only 41.2%; (c) comparing the 12 control methods, our ST-TLF (with BayesNet), against the best contrast method P15-NB, improves the average MCC by 18.84%.Conclusions: Our framework ST-TLF with various classifiers can work well in CVDP. The training set selection method we proposed can effectively match the best training set for the current version, breaking through the limitation of relying on experience recommendation, which has been ignored in other studies. Also, ST-TLF can efficiently elevate the CVDP performance compared with random forest and 12 control methods.
C1 [Zhao, Yanyang; Wang, Yawen; Gong, Yunzhan; Jin, Dahai] Beijing Univ Posts & Telecommun, State Key Lab Networking & Switching Technol, Beijing, Peoples R China.
   [Zhao, Yanyang; Wang, Yawen] Guangxi Key Lab Cryptog & Informat Secur, Guilin, Guangxi, Peoples R China.
   [Zhang, Yuwei] Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing, Peoples R China.
   [Zhang, Dalin] Beijing Jiaotong Univ, Sch Software Engn, Beijing, Peoples R China.
C3 Beijing University of Posts & Telecommunications; Peking University;
   Beijing Jiaotong University
RP Wang, YW (corresponding author), Beijing Univ Posts & Telecommun, State Key Lab Networking & Switching Technol, Beijing, Peoples R China.; Wang, YW (corresponding author), Guangxi Key Lab Cryptog & Informat Secur, Guilin, Guangxi, Peoples R China.
EM wangyawen@bupt.edu.cn
RI Zhang, Yuwei/HWI-7198-2023
OI Zhang, Yuwei/0009-0008-1016-7361; Zhang, Yuwei/0000-0002-4616-1067;
   zhao, YanYang/0000-0002-1663-8901; Zhang, Dalin/0000-0003-0346-7020
FU National Natural Science Founda-tion of China [U1736110]; Guangxi Key
   Labora-tory of Cryptography and Information Security, China [GCIS202103]
FX Acknowledgments This work was supported by the National Natural Science
   Founda-tion of China (No. U1736110) and supported by Guangxi Key
   Labora-tory of Cryptography and Information Security, China (No.
   GCIS202103) .
CR Abramova V, 2016, ADV INTELL SYST, V444, P331, DOI 10.1007/978-3-319-31232-3_31
   Aggarwal C.C., 2014, Data classification: algorithms and applications, P657
   Al Dallal J, 2018, IEEE T SOFTWARE ENG, V44, P44, DOI 10.1109/TSE.2017.2658573
   Amasaki S., 2017, P 13 INT C PREDICTIV, P93, DOI [10.1145/3127005.3127015, DOI 10.1145/3127005.3127015]
   Amasaki S, 2020, EMPIR SOFTW ENG, V25, P1573, DOI 10.1007/s10664-019-09777-8
   Amasaki S, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P32, DOI 10.1145/3273934.3273938
   [Anonymous], 2016, DATA MINING PRACTICA, DOI DOI 10.1016/C2009-0-19715-5
   [Anonymous], 2003, P 20 INT C MACH LEAR
   Austin PC, 2017, STAT METHODS MED RES, V26, P796, DOI 10.1177/0962280214558972
   Benesty J, 2009, SPRINGER TOP SIGN PR, V2, P37, DOI 10.1007/978-3-642-00296-0_5
   Bennin KE, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P699, DOI 10.1145/3180155.3182520
   Bennin KE, 2019, EMPIR SOFTW ENG, V24, P602, DOI 10.1007/s10664-018-9633-6
   Bennin KE, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P214, DOI 10.1109/QRS.2016.33
   Blischak JD, 2016, PLOS COMPUT BIOL, V12, DOI 10.1371/journal.pcbi.1004668
   Breiman L., 2001, Mach. Learn., V45, P5
   Chen HW, 2021, IEEE T SOFTWARE ENG, V47, P2803, DOI 10.1109/TSE.2020.2968520
   Chen JY, 2020, NEUROCOMPUTING, V416, P103, DOI 10.1016/j.neucom.2018.12.091
   Chen Q, 2019, IEEE C EVOL COMPUTAT, P3006, DOI [10.1109/cec.2019.8790217, 10.1109/CEC.2019.8790217]
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Cover T. M., 2012, ELEMENTS INFORM THEO
   Sobrinho EVD, 2021, IEEE T SOFTWARE ENG, V47, P17, DOI 10.1109/TSE.2018.2880977
   Dezfuli H., 2011, NASA RISK MANAGEMENT
   Dong F., 2017, 2017 12 INT C INT, P1
   Edmonds M, 2020, AAAI CONF ARTIF INTE, V34, P1283
   Felix EA, 2019, IET SOFTW, V13, P479, DOI 10.1049/iet-sen.2018.5193
   Ferenc R, 2020, SOFTWARE QUAL J, V28, P1447, DOI 10.1007/s11219-020-09515-0
   GOLUB GH, 1979, TECHNOMETRICS, V21, P215, DOI 10.1080/00401706.1979.10489751
   Guyon I., 2003, Journal of Machine Learning Research, V3, P1157, DOI 10.1162/153244303322753616
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   He P., 2014, ARXIV14050773
   Herbold S., 2013, P 9 INT C PREDICTIVE, P1
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Herbold S, 2017, EMPIR SOFTW ENG, V22, P1866, DOI 10.1007/s10664-016-9468-y
   Dam HK, 2021, IEEE T SOFTWARE ENG, V47, P67, DOI 10.1109/TSE.2018.2881961
   HOERL AE, 1975, COMMUN STAT, V4, P105, DOI 10.1080/03610927508827232
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Jayatilleke S, 2018, INFORM SOFTWARE TECH, V93, P163, DOI 10.1016/j.infsof.2017.09.004
   Jiarpakdee J, 2021, IEEE T SOFTWARE ENG, V47, P320, DOI 10.1109/TSE.2019.2891758
   Jingxiu Yao, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P120, DOI 10.1145/3383219.3383232
   Jureczko M., 2010, P 6 INT C PREDICTIVE
   Kabir MA, 2020, P INT COMP SOFTW APP, P882, DOI 10.1109/COMPSAC48688.2020.0-154
   Kawata K, 2015, 3RD INTERNATIONAL CONFERENCE ON APPLIED COMPUTING AND INFORMATION TECHNOLOGY (ACIT 2015) 2ND INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND INTELLIGENCE (CSI 2015), P2, DOI 10.1109/ACIT-CSI.2015.104
   Kononenko I., 1994, Machine Learning: ECML-94. European Conference on Machine Learning. Proceedings, P171
   LAWLESS JF, 1976, COMMUN STAT A-THEOR, VA  5, P307, DOI 10.1080/03610927608827353
   Li N, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106287
   Li YT, 2018, PROCEEDINGS OF THE 2018 2ND INTERNATIONAL CONFERENCE ON MANAGEMENT ENGINEERING, SOFTWARE ENGINEERING AND SERVICE SCIENCES (ICMSS 2018), P122, DOI 10.1145/3180374.3181331
   Li ZQ, 2018, IET SOFTW, V12, P161, DOI 10.1049/iet-sen.2017.0148
   Liu C, 2019, INFORM SOFTWARE TECH, V107, P125, DOI 10.1016/j.infsof.2018.11.005
   Liu H, 1995, PROC INT C TOOLS ART, P388, DOI 10.1109/TAI.1995.479783
   Lu HH, 2014, PROC INT SYMP SOFTW, P312, DOI 10.1109/ISSRE.2014.35
   Lu J, 2019, IEEE T KNOWL DATA EN, V31, P2346, DOI 10.1109/TKDE.2018.2876857
   Luque A, 2019, PATTERN RECOGN, V91, P216, DOI 10.1016/j.patcog.2019.02.023
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Mahmood Z., 2015, P 11 INT C PREDICTIV
   Mathworks T, 1997, MATLAB
   Mende T., 2010, P 6 INT C PREDICTIVE, DOI [10.1145/1868328, DOI 10.1145/1868328]
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Nagendra K.D.J., 2012, INT J COMPUT INTELL, V8, P71
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Pan WK, 2019, ACM T INFORM SYST, V37, DOI 10.1145/3243652
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Peduzzi P, 1996, J CLIN EPIDEMIOL, V49, P1373, DOI 10.1016/S0895-4356(96)00236-3
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Quinlan J.R., 1993, C4.5 : programs for machine learning
   Rodríguez M, 2019, IEEE SOFTWARE, V36, P13, DOI 10.1109/MS.2018.2883354
   Russell D., 2006, 2006 INT C SOFTWARE, P5
   Shukla S, 2018, SOFT COMPUT, V22, P1959, DOI 10.1007/s00500-016-2456-8
   Su J., 2019, 31 INT C SOFTWARE EN, P437
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Thabtah F, 2020, INFORM SCIENCES, V513, P429, DOI 10.1016/j.ins.2019.11.004
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang JD, 2020, ACM T INTEL SYST TEC, V11, DOI [10.1145/3360309, 10.1177/1687814018825375]
   Wang YQ, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3386252
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   Weyuker EJ, 2010, EMPIR SOFTW ENG, V15, P277, DOI 10.1007/s10664-009-9111-2
   Wu F, 2018, IEEE T RELIAB, V67, P581, DOI 10.1109/TR.2018.2804922
   Xu Z, 2018, INT C PROGRAM COMPRE, P132, DOI 10.1145/3196321.3196331
   Xu Z, 2019, J COMPUT SCI TECH-CH, V34, P1039, DOI 10.1007/s11390-019-1959-z
   Xu Z, 2019, J SYST SOFTWARE, V154, P59, DOI 10.1016/j.jss.2019.03.027
   Xu Z, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P209, DOI 10.1109/SANER.2018.8330210
   Yang Q, 2020, TRANSFER LEARNING, P3
   Yang XX, 2018, IEEE T RELIAB, V67, P885, DOI 10.1109/TR.2018.2847353
   Yang XX, 2015, IEEE T RELIAB, V64, P234, DOI 10.1109/TR.2014.2370891
   Yao JX, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106664
   Ying W., 2018, INT C MACHINE LEARNI, P5085
   Yue Jiang, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P99, DOI 10.1109/ISSRE.2009.13
   Zhang YW, 2020, J SYST SOFTWARE, V166, DOI 10.1016/j.jss.2020.110585
   Zhao YY, 2022, EXPERT SYST, V39, DOI 10.1111/exsy.12977
NR 99
TC 7
Z9 8
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2022
VL 149
AR 106939
DI 10.1016/j.infsof.2022.106939
EA MAY 2022
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1Y6WH
UT WOS:000808282000007
DA 2024-07-18
ER

PT J
AU Rong, SY
   Wang, WS
   Mannan, UA
   de Almeida, ES
   Zhou, SR
   Ahmed, I
AF Rong, Shiyue
   Wang, Weisheng
   Mannan, Umme Ayda
   de Almeida, Eduardo Santana
   Zhou, Shurui
   Ahmed, Iftekhar
TI An empirical study of emoji use in software development communication
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Emoji; Software engineering; Sentiment analysis; Empirical analysis
ID SENTIMENT ANALYSIS
AB Context: Similar to social media platforms, people use emojis in software development related communication to enrich the context and convey additional emotion. With the increasing emoji use in software development related communication, it has become important to understand why software developers are using emojis and their impact. Objective: Gaining a deeper understanding is essential because the intention of emoji usage might be affected by the demographics and experience of developers; also, frequency and the distribution of emoji usage might change depending on the activity, stage of the development, and nature of the conversation, etc. Methods: We present a large-scale empirical study on the intention of emoji usage conducted on 2,712 Open Source Software (OSS) projects. We build a machine learning model to automate classifying the intentions behind emoji usage in 39,980 posts. We also surveyed 60 open-source software developers from 17 countries to understand developers' perceptions of why and when emojis are used. Results: Our results show that we can classify the intention of emoji usage with high accuracy (AUC of 0.97). In addition, the results indicate that developers use emoji for varying intentions, and emoji usage intention changes throughout a conversation. Conclusion: Our study opens a new avenue in Software Engineering research related to automatically identifying the intention of the emoji use that can help improve the communication efficiency and help project maintainers monitor and ensure the quality of communication. Another thread of future research could look into what intentions of emoji usage or what kind of emojis are more likely to attract users and how that is associated with emoji usage diffusion in different levels (threads, projects, etc.)
C1 [Rong, Shiyue; Wang, Weisheng; Ahmed, Iftekhar] Univ Calif Irvine, Irvine, CA USA.
   [Mannan, Umme Ayda] Oregon State Univ, Corvallis, OR USA.
   [de Almeida, Eduardo Santana] Univ Fed Bahia, Salvador, Brazil.
   [Zhou, Shurui] Univ Toronto, Toronto, ON, Canada.
C3 University of California System; University of California Irvine; Oregon
   State University; Universidade Federal da Bahia; University of Toronto
RP Ahmed, I (corresponding author), Univ Calif Irvine, Irvine, CA USA.
EM shiyuer@uci.edu; weishew@uci.edu; mannanu@oregonstate.edu;
   esa@rise.com.br; shuruiz@ece.utoronto.ca; iftekha@uci.edu
RI de Almeida, Eduardo/JJC-2493-2023; Wang, Shuai/JAZ-0277-2023
OI Wang, Weisheng/0000-0002-9087-8815; Rong, Shiyue/0000-0001-5288-925X
FU INES 2.0; FACEPE [APQ-0399-1.03/17]; CNPq, Brazil [465614/2014-0]
FX We thank the anonymous reviews for their thoughtful comments and
   suggestions. Professor Eduardo Almeida was partially funded by INES 2.0,
   FACEPE grant APQ-0399-1.03/17, and CNPq, Brazil grant 465614/2014-0.
CR agorapulse, 2021, SOC MED EM WHY YOU S
   Ahmed I, 2015, INT SYMP EMP SOFTWAR, P31, DOI 10.1109/ESEM.2015.7321186
   Ahmed T, 2017, IEEE INT CONF AUTOM, P106, DOI 10.1109/ASE.2017.8115623
   Ailawadi K.L., 2003, RES PAPER SERIES
   Al Rashdi F., 2015, Forms and functions of emojis in WhatsApp interaction among Omanis
   Alshenqeeti H., 2016, ADV LANG LIT STUD, V7
   [Anonymous], 2020, EM
   [Anonymous], 2020, ACTIVITY
   [Anonymous], 2020, TEXTBL
   [Anonymous], 2020, TEAM DISC
   [Anonymous], 2021, FLEISS KAPP
   Blaz CCA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P235, DOI [10.1109/MSR.2016.032, 10.1145/2901739.2901781]
   Benjamini Y, 2001, ANN STAT, V29, P1165
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bernstein A., 2007, 9 INT WORKSHOP PRINC, P11
   Bird S., 2009, NATURAL LANGUAGE PRO
   Bougie Gargi, 2011, P 2 INT WORKSHOP WEB, P31, DOI [10.1145/1984701.1984707, DOI 10.1145/1984701.1984707]
   Brants W, 2019, COMPANION OF THE WORLD WIDE WEB CONFERENCE (WWW 2019 ), P419, DOI 10.1145/3308560.3316550
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen ZP, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3424308
   Chen ZP, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P841, DOI 10.1145/3338906.3338977
   Chen ZP, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P763, DOI 10.1145/3178876.3186157
   Cheng C, 2017, J COMPUT SCI TECH-CH, V32, P396, DOI 10.1007/s11390-017-1728-9
   Claes M, 2018, P 12 ACM IEEE INT S, P1
   Clarke N., 2010, INT J MANAG PROJ BUS
   Coppersmith D, 1999, DATA MIN KNOWL DISC, V3, P197, DOI 10.1023/A:1009869804967
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Emojipedia, 2020, About us
   emojipedia, 2020, EM STAT
   facebook, 2021, 20 MESS POSTS
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Forman George., 2008, PROCEEDING 17 ACM C, P263, DOI DOI 10.1145/1458082.1458119
   Gachechiladze D, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P11, DOI 10.1109/ICSE-NIER.2017.18
   Giger E, 2011, P 8 WORK C MIN SOFTW, P83, DOI [10.1145/1985441.1985456, DOI 10.1145/1985441.1985456]
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   gist.github, 2021, GIT COMM MESS EM
   github, 2021, DANN COMM MESS EM EV
   github, 2021, GITHUB EM EM INT CLA
   github, 2020, SENTIMOJI SENTIM DAT
   gitmoji.dev, 2021, EM GUID YOUR COMM ME
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Guzman E, 2013, P 2013 9 JOINT M FDN, P671, DOI 10.1145/2491411.2494578
   Hu T., 2017, ARXIV PREPRINT ARXIV
   Islam MR, 2018, J SYST SOFTWARE, V145, P125, DOI 10.1016/j.jss.2018.08.030
   Islam MR, 2017, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2017.9
   James G, 2013, SPRINGER TEXTS STAT, V103, P15, DOI 10.1007/978-1-4614-7138-7_2
   Jongeling R, 2015, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSM.2015.7332508
   Kuhn M., 2018, APPL PREDICTIVE MODE
   Lamba H, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P505, DOI 10.1145/3368089.3409705
   lexico, 2020, EM DEF EM OXF DICT L
   Lin B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P94, DOI 10.1145/3180155.3180195
   LIU DC, 1989, MATH PROGRAM, V45, P503, DOI 10.1007/BF01589116
   Lu X., 2018, ARXIV PREPRINT ARXIV
   Lu X, 2016, UBICOMP'16: PROCEEDINGS OF THE 2016 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P770, DOI 10.1145/2971648.2971724
   Mäntylä M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P247, DOI [10.1109/MSR.2016.033, 10.1145/2901739.2901752]
   MASSEY FJ, 1951, J AM STAT ASSOC, V46, P68, DOI 10.2307/2280095
   Menze BH, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-213
   Menzies T, 2017, EMPIR SOFTW ENG, V22, P1903, DOI 10.1007/s10664-016-9469-x
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Naz S, 2018, 2018 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE (WI 2018), P676, DOI 10.1109/WI.2018.00-13
   Novak PK, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0144296
   Novielli N, 2018, IEEE WORK CONF MIN S, P364, DOI 10.1145/3196398.3196403
   npmjs, 2020, NOD EM NPM
   Ortu M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P303, DOI 10.1109/MSR.2015.35
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Prabhat A., 2017, 2017 INT C COMPUTER, P1
   pypi, EM
   rdocumentation, 2022, COH FUNCT RDOC
   Schaeffer N.C., 2004, MEAS ERRORS SURV, P365
   Scikit Learn, 2019, Support Vector Machines
   scikit-learn, 2019, LOGISTIC REGRESSION
   scikit-learn, 2019, DEC TREES
   Scikit-learn, 2019, About us
   scikit-learn, 2019, RAND
   scrapy, 2020, SCRAP FAST POW SCRAP
   Sfard A., 2001, Mind, Culture, and Activity, V8, P42
   Souza R, 2017, IEEE WORK CONF MIN S, P459, DOI 10.1109/MSR.2017.27
   Sridharan K, 2020, SOFT COMPUT, V24, P7451, DOI 10.1007/s00500-019-04370-z
   statisticshowto, 2020, COH D DEF EX FORM
   unicode, 2021, FULL EM LIST V13 1
   Wrobel MR, 2016, ACSIS-ANN COMPUT SCI, V8, P1545, DOI 10.15439/2016F212
   Wrobel MR, 2013, C HUM SYST INTERACT, P518, DOI 10.1109/HSI.2013.6577875
   Zhang F., 2014, P 11 WORK C MIN SOFT, P182, DOI [10.1145/2597073.2597078, DOI 10.1145/2597073.2597078]
   Zharmagambetov A.S., 2015, 2015 Twelve International Conference on Electronics Computer and Computation (ICECCO), P1
NR 87
TC 2
Z9 2
U1 4
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2022
VL 148
AR 106912
DI 10.1016/j.infsof.2022.106912
EA APR 2022
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1P7WT
UT WOS:000802216300003
OA Green Published
DA 2024-07-18
ER

PT J
AU Liu, YY
   Noei, E
   Lyons, K
AF Liu, Yuyang
   Noei, Ehsan
   Lyons, Kelly
TI How README files are structured in open source Java projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical study; README files; Software popularity; Clustering
AB Context: Recent studies on open source platforms, such as GitHub, provide insights into how developers engage with software artifacts such as README files. Since README files are usually the first item users interact with in a repository, it is important that README files provide users with the information needed to engage with the corresponding repository.Objective: We investigate and compare README files of open source Java projects on GitHub in order to (i) determine the degree to which README files are aligned with the official guidelines, (ii) identify the common patterns in the structure of README files, and (iii) characterize the relationship between README file structure and popularity of associated repositories.Method: We apply statistical analyzes and clustering methods on 14,901 Java repositories to identify structural patterns of README files and the relationship of README file structure to repository stars. Results: While the majority of README files do not align with the GitHub guidelines, repositories whose README files follow the GitHub guidelines tend to receive more stars. We identify 32 clusters of common README file structures and the features associated with each structure. We show that projects with README files that contain project name, usage information, installation instructions, license information, code snippets, or links to images tend to get more stars. Conclusion: README file structure shares a statistically significant relationship with popularity as measured by number of stars; however, the most frequent README file structures are associated with less popular repositories on GitHub. Our findings can be used to understand the importance of README file structures and their relationship with popularity.
C1 [Liu, Yuyang; Noei, Ehsan; Lyons, Kelly] Univ Toronto, Toronto, ON, Canada.
C3 University of Toronto
RP Noei, E (corresponding author), Univ Toronto, Toronto, ON, Canada.
EM yuyang@cs.toronto.edu; e.noei@utoronto.ca; kelly.lyons@utoronto.ca
OI Noei, Ehsan/0000-0001-7192-4604
CR Aggarwal K., 2014, P 11 WORKING C MININ, P360, DOI [10.1145/2597073.2597120, DOI 10.1145/2597073.2597120]
   [Anonymous], 2014, WORKSH GLOB SOFTW DE
   Birant D, 2007, DATA KNOWL ENG, V60, P208, DOI 10.1016/j.datak.2006.01.013
   Blincoe K, 2016, INFORM SOFTWARE TECH, V70, P30, DOI 10.1016/j.infsof.2015.10.002
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Businge J, 2013, EUR CON SFTWR MTNCE, P37, DOI 10.1109/CSMR.2013.14
   Cantor AB, 1996, PSYCHOL METHODS, V1, P150, DOI 10.1037/1082-989X.1.2.150
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cosentino V, 2017, IEEE ACCESS, V5, P7173, DOI 10.1109/ACCESS.2017.2682323
   DUNN OJ, 1964, TECHNOMETRICS, V6, P241, DOI 10.2307/1266041
   Elazhary O, 2019, PROC IEEE INT CONF S, P286, DOI 10.1109/ICSME.2019.00043
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   GitHub, 2020, GITHUB API
   GitHub, 2016, DOC YOUR PROJ GITHUB
   GitHub, 2020, GITHUB FLAV MARKD SP
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Hackuarium GitHub, 2021, SAV REP STARS
   Han JX, 2019, P INT COMP SOFTW APP, P21, DOI 10.1109/COMPSAC.2019.00013
   Hassan F, 2017, PROC IEEE ACM INT C, P277, DOI 10.1109/ICSE-C.2017.114
   Hata H, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P15, DOI 10.1109/CHASE.2015.9
   Hess M. R., 2004, ANN M AM ED RES ASS, P1
   Honnibal M., 2017, Convolutional Neural Networks and Incremental Parsing, DOI DOI 10.1145/2566486.2568003
   Ikeda S, 2019, IEICE T INF SYST, VE102D, P280, DOI 10.1587/transinf.2018EDP7071
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Koskela M, 2018, LECT NOTES COMPUT SC, V11057, P279, DOI 10.1007/978-3-030-00066-0_24
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mao WX, 2019, IEEE ACCESS, V7, P33380, DOI 10.1109/ACCESS.2019.2904333
   Noei E, 2019, EMPIR SOFTW ENG, V24, P1964, DOI 10.1007/s10664-019-09684-y
   Noei E, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P283, DOI 10.1145/3236024.3236044
   Park Y, 2009, IEEE INT WORK VIS SO, P3, DOI 10.1109/VISSOF.2009.5336433
   Prana GAA, 2019, EMPIR SOFTW ENG, V24, P1296, DOI 10.1007/s10664-018-9660-3
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Sheoran Jyoti, 2014, P 11 WORK C MIN SOFT, P336, DOI DOI 10.1145/2597073.2597114
   Steinmacher I., 2014, Proceedings of the 7th international workshop on cooperative and human aspects of software engineering, P72, DOI DOI 10.1145/2593702.2593704.ACM
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Trockman A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P511, DOI 10.1145/3180155.3180209
   Yang N, 2020, IEEE WORK CONF MIN S, P362, DOI 10.1145/3379597.3387452
   Zerouali A, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P589, DOI [10.1109/saner.2019.8667997, 10.1109/SANER.2019.8667997]
   Zhang Y, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P13, DOI 10.1109/SANER.2017.7884605
NR 41
TC 3
Z9 3
U1 2
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2022
VL 148
AR 106924
DI 10.1016/j.infsof.2022.106924
EA APR 2022
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1P7WT
UT WOS:000802216300002
DA 2024-07-18
ER

PT J
AU Overeem, M
   Mathijssen, M
   Jansen, S
AF Overeem, Michiel
   Mathijssen, Max
   Jansen, Slinger
TI API-m-FAMM: A focus area maturity model for API Management
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE API Management; Maturity model; Focus area maturity models
ID INFORMATION-SYSTEMS
AB Context: Organizations are increasingly connecting software applications using Application Programming Interfaces (APIs) to share data, services, functionality, and even complete business processes. However, the creation and management of APIs is non-trivial. Aspects such as traffic management, community engagement, documentation, and version management are often rushed afterthoughts.
   Objective: In this research, we present and evaluate a focus area maturity model for API Management (API-m-FAMM). A focus area maturity model can be used to establish the maturity level of an organization in a specific functional domain described through a number of areas. The API-m-FAMM addresses the areas Lifecycle Management, Security, Performance, Observability, Community, and Commercial.
   Method: The model is constructed using established methods for the design of a focus area maturity model. It is grounded in literature and practice, and was developed and evaluated through a systematic literature Review, eleven expert interviews, and five case studies at software producing organizations.
   Result: The model is described in detail, and its application is illustrated by six case studies.
   Conclusions: The evaluations are reported on, and show that the API-m-FAMM is an efficient tool for aiding organizations in gaining a better understanding of their current implementation of API management practices, and provides them with guidance towards higher levels of maturity. The detailed description of the construction of the API-m-FAMM gives researchers an example to further support the available methodologies, specifically how to combine design science research with these methodologies. Additionally, this study's unique case study design shows that maturity models can be successfully deployed in practice with minimal involvement of researchers. The focus area maturity model for API Management is maintained on www.maturitymodels.org, allowing practitioners to benefit from its useful insights.
C1 [Overeem, Michiel; Mathijssen, Max] AFAS Software, Inspiratielaan 1, Leusden, Netherlands.
   [Overeem, Michiel; Jansen, Slinger] Univ Utrecht, Princetonpl 5, Utrecht, Netherlands.
   [Jansen, Slinger] LUT Univ, Sch Engn Sci, Lappeenranta, Finland.
C3 Utrecht University; Lappeenranta-Lahti University of Technology LUT
RP Overeem, M (corresponding author), AFAS Software, Inspiratielaan 1, Leusden, Netherlands.
EM michiel.overeem@afas.nl; max.mathijssen@afas.nl; slinger.jansen@uu.nl
RI Roijackers, Slinger/Y-4244-2019
OI Roijackers, Slinger/0000-0003-3752-2868
FU NWO AMUSE project [628.006.001]
FX This research was supported by the NWO AMUSE project (628.006.001) : a
   collaboration between Vrije Universiteit Amsterdam, Utrecht University,
   and AFAS Software in, the Netherlands.
CR Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   [Anonymous], 2011, P EUROPEAN C INFORM
   Arsanjani A, 2006, P IEEE I C SERV COMP, P515, DOI 10.1109/SCC.2006.104
   Basole R.C., 2019, HDB SERVICE SCI, VII, P479, DOI DOI 10.1007/978-3-319-98512
   Becker J, 2009, BUS INFORM SYST ENG+, V1, P213, DOI 10.1007/s12599-009-0044-5
   CA. Technologies, 2019, API MAN PLAYB UND SO
   Carmel E., 2006, INFORM SYSTEMS OUTSO, P631
   Coleman Parkes Research, 2017, AP BUILD CONN BUS AP
   CRAWFORD J.K., 2007, PROJECT MANAGEMENT M
   De B., 2017, API MANAGEMENT, P15, DOI DOI 10.1007/978-1-4842-1305-6_2
   de Bruin T., 2005, ACIS 2005 P 16 AUSTR
   Devoteam, 2016, API MAN LIB GLOB INC
   Diaz A. Gamez, 2015, 11 J CIENC ING SERV
   Endjin, 2017, API MAT MATR
   Etikan I., 2016, AM J THEORETICAL APP, V5, P1, DOI [DOI 10.11648/J.AJTAS.20160501.11, 10.11648/j.atas.20160501.1]
   Gartner, 2019, GUID FRAM DEV IMPL V
   Haddad C., 2015, COMP EVALUATION MATR
   Huner KaiM., 2009, Proceedings of the 2009 ACM symposium on Applied Computing, P231, DOI [10.1145/1529282.1529334, DOI 10.1145/1529282.1529334]
   Iversen J, 1999, DATA BASE ADV INF SY, V30, P66, DOI 10.1145/383371.383376
   Jansen S, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P1, DOI 10.4337/9781781955635
   Jansen S, 2020, INFORM SOFTWARE TECH, V118, DOI 10.1016/j.infsof.2019.106219
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Lees C., 2019, APIS DIGITAL GLUE BA
   Mathijssen M, 2020, Arxiv, DOI arXiv:2006.10481
   Mathijssen M, 2021, Arxiv, DOI arXiv:2007.10611
   Medjaoui Mehdi, 2018, CONTINUOUS API MANAG
   Mettler T, 2010, MANAGEMENT OF THE INTERCONNECTED WORLD, P333, DOI 10.1007/978-3-7908-2404-9_39
   Nielsen Jakob., 1995, Card Sorting to Discover the Users' Model of the Information Space
   Nilsson F., 2018, Master's Thesis
   Okoli C, 2015, COMMUN ASSOC INF SYS, V37, P879
   PAULK MC, 1993, IEEE SOFTWARE, V10, P18, DOI 10.1109/52.219617
   Poell T, 2019, INTERNET POLICY REV, V8, DOI 10.14763/2019.4.1425
   Prat N, 2015, J MANAGE INFORM SYST, V32, P229, DOI 10.1080/07421222.2015.1099390
   Proença D, 2016, PROCEDIA COMPUT SCI, V100, P1042, DOI 10.1016/j.procs.2016.09.279
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Santos W., 2019, APIs show Faster Growth Rate in 2019 than Previous Years, ProgrammableWeb
   Spruit M., 2014, ISFAM: The information security focus area maturity model OPERAM View project SMESEC View project
   Tung T., 2014, ACCENTURE API MANAGE
   van Steenbergen M., 2013, SCAND J INF SYST, V25
   van Steenbergen M, 2010, LECT NOTES COMPUT SC, V6105, P317, DOI 10.1007/978-3-642-13335-0_22
   Weir L., 2019, ENTERPRISE API MANAG
   WSO2, 2015, API MAN PLATF TECHN
NR 42
TC 2
Z9 2
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2022
VL 147
AR 106890
DI 10.1016/j.infsof.2022.106890
EA MAR 2022
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L8PL
UT WOS:000852891700006
OA Green Published
DA 2024-07-18
ER

PT J
AU Kumar, K
   Sumit
   Kumar, S
   Singh, LK
   Mishra, A
AF Kumar, Kuldeep
   Sumit
   Kumar, Sandeep
   Singh, Lalit Kumar
   Mishra, Alok
TI Predicting reliability of software in industrial systems using a Petri
   net based approach: A case study on a safety system used in nuclear
   power plant
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software reliability; Safety-critical systems; Petri net; Reliability
   model
AB Context: Software reliability prediction in the early stages of development can be propitious in many ways. The combinatorial models used to predict reliability using architectures such as fault trees, binary decision diagrams, etc. have limitations in modeling complex system behavior. On the other hand, state-based models such as Markov chains suffer from the state-space explosion problem, and they need transition probability among different system states to measure reliability. These probabilities are usually assumed or are obtained from the operational profile for which the system should be used in the field. Objective: The objective of this paper is to present a method for predicting the reliability of software in industrial systems using a generalized stochastic Petri nets based approach. The key idea is to violate the assumption of state transition probabilities in the Markov chain. The state transition probabilities are calculated using Petri net transitions' throughput by performing stationary analysis under the consideration to identify and handle dead markings in the Petri net. Method: Initially, a generalized stochastic Petri net of the system under consideration is generated from the standard system's specification. Thereafter, dead markings are identified in the Petri net which are further removed to perform steady-state analysis. At last, a Markov model is generated based on the reachability graph of the Petri net, which is further used to predict the system reliability. Results: The presented method has been applied to a safety-critical system, Shut Down System-1, of a nuclear power plant, which is operational in the Canada Deuterium Uranium reactor. The predicted reliability of the system using this method is 99.99966% which has been validated using the specified system requirements. To further validate and generalize the results, sensitivity analysis is performed by varying different system parameters. Conclusions: The method discussed in this paper presents a step of performing structural analysis on the Petri net of the system under consideration to identify and handle dead markings on the Petri net. It further handles the issue of assuming transition probabilities among the system states by calculating them using Petri net transitions' throughput.
C1 [Kumar, Kuldeep] Dr BR Ambedkar Natl Inst Technol, Dept Comp Sci & Engn, Jalandhar, Punjab, India.
   [Sumit; Kumar, Sandeep] Indian Inst Technol Roorkee, Dept Comp Sci & Engn, Roorkee, Uttar Pradesh, India.
   [Singh, Lalit Kumar] Banaras Hindu Univ, Dept Comp Sci & Engn, Indian Inst Technol, Varanasi, Uttar Pradesh, India.
   [Mishra, Alok] Molde Univ Coll Specialized Univ Logist, Informat & Digitalizat, Molde, Norway.
   [Mishra, Alok] Atilim Univ, Dept Software Engn, Ankara, Turkey.
C3 National Institute of Technology (NIT System); Dr B R Ambedkar National
   Institute of Technology Jalandhar; Indian Institute of Technology System
   (IIT System); Indian Institute of Technology (IIT) - Roorkee; Banaras
   Hindu University (BHU); Indian Institute of Technology System (IIT
   System); Indian Institute of Technology BHU Varanasi (IIT BHU Varanasi);
   Molde University College; Atilim University
RP Kumar, S (corresponding author), Indian Inst Technol Roorkee, Dept Comp Sci & Engn, Roorkee, Uttar Pradesh, India.
EM sandeep.garg@cs.iitr.ac.in
RI Kumar, Dr Sandeep/AAW-6313-2020; Sumit, Sumit/IUP-1103-2023; Kumar,
   Sandeep/AAW-6570-2020; Kumar, Kuldeep/Y-4439-2019; Mishra,
   Alok/AAE-2673-2019; singh, lalit/JHT-4573-2023
OI Kumar, Dr Sandeep/0000-0003-0747-6776; Kumar,
   Sandeep/0000-0002-3250-4866; Kumar, Kuldeep/0000-0003-1160-9092; Mishra,
   Alok/0000-0003-1275-2050; Kumar, Sandeep/0000-0001-9633-407X
CR Balbo G, 2007, LECT NOTES COMPUT SC, V4486, P83
   Bereznai G., 2005, Nuclear Power Plant Systems and Operation
   BIS, 2014, 250002014 BIS ISO IE, V2, P1
   BIS, 2011, 250102011 BIS ISOIEC, V1, P1
   ChauPattnaik S, 2021, INT J SYST ASSUR ENG, V12, P391, DOI 10.1007/s13198-021-01079-x
   Cheung L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P111, DOI 10.1145/1368088.1368104
   Cho SW, 2008, RELIAB ENG SYST SAFE, V93, P1, DOI 10.1016/j.ress.2006.10.007
   Chryssaphinou O, 2011, IEEE T RELIAB, V60, P80, DOI 10.1109/TR.2010.2104210
   Febrero F, 2016, INFORM SOFTWARE TECH, V70, P18, DOI 10.1016/j.infsof.2015.09.006
   Ferreira FH, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P54, DOI 10.1109/SEAA53835.2021.00016
   Heiner M., 2012, LNCS, P398, DOI [10.1007/978-3-642-31131-4_22, DOI 10.1007/978-3-642-31131-4_22, DOI 10.1007/978-3-642-31131-4]
   Kelling C, 1996, IEEE INTERNATIONAL COMPUTER PERFORMANCE AND DEPENDABILITY SYMPOSIUM - IPDS'96, PROCEEDINGS, P62, DOI 10.1109/IPDS.1996.540206
   Kim Y, 2013, IEEE SOFTWARE, V30, P35, DOI 10.1109/MS.2013.24
   Kleyner A, 2010, RELIAB ENG SYST SAFE, V95, P606, DOI 10.1016/j.ress.2010.01.008
   Kumar K, 2019, IEEE CONSUM ELECTR M, V8, P56, DOI 10.1109/MCE.2019.2941353
   Kumar P., 2021, P 2021 2 INT C RANGE, P1, DOI [10.1109/ICORT52730.2021.9581624, DOI 10.1109/ICORT52730.2021.9581624]
   Kumar P, 2020, QUAL RELIAB ENG INT, V36, P340, DOI 10.1002/qre.2577
   Laplante PA, 2017, IEEE T RELIAB, V66, P825, DOI 10.1109/TR.2017.2731953
   Lee SH, 2015, RELIAB ENG SYST SAFE, V144, P285, DOI 10.1016/j.ress.2015.07.029
   Malefaki S, 2014, RELIAB ENG SYST SAFE, V131, P282, DOI 10.1016/j.ress.2014.05.003
   MARSAN MA, 1984, ACM T COMPUT SYST, V2, P93, DOI 10.1145/190.191
   Maurya A, 2020, QUAL RELIAB ENG INT, V36, P2547, DOI 10.1002/qre.2715
   Meng-Lai Yin, 2000, Annual Reliability and Maintainability Symposium. 2000 Proceedings. International Symposium on Product Quality and Integrity (Cat. No.00CH37055), P100, DOI 10.1109/RAMS.2000.816291
   Molloy M., 1981, INTEGRATION DELAY TH
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   MUSA JD, 1990, IEEE SOFTWARE, V7, P36, DOI 10.1109/52.60588
   Nakagawa EY, 2021, INFORM SOFTWARE TECH, V135, DOI 10.1016/j.infsof.2021.106562
   Nor AKM, 2021, AIN SHAMS ENG J, V12, P3009, DOI 10.1016/j.asej.2021.02.015
   Pandey A.K., 2013, EARLY SOFTWARE RELIA, DOI [10.1007/978-81-322-1176-1, DOI 10.1007/978-81-322-1176-1]
   Ratzer AV, 2003, LECT NOTES COMPUT SC, V2679, P450
   Remenyte-Prescott R, 2010, RELIAB ENG SYST SAFE, V95, P226, DOI 10.1016/j.ress.2009.10.002
   Reussner RH, 2003, J SYST SOFTWARE, V66, P241, DOI 10.1016/S0164-1212(02)00080-8
   Robidoux R, 2010, IEEE T SYST MAN CY A, V40, P337, DOI 10.1109/TSMCA.2009.2034837
   Singh L, 2016, QUAL RELIAB ENG INT, V32, P1253, DOI 10.1002/qre.1793
   Singh LK, 2014, IEEE T NUCL SCI, V61, P921, DOI 10.1109/TNS.2014.2305656
   Singh P, 2019, QUAL RELIAB ENG INT, V35, P2051, DOI 10.1002/qre.2476
   Tripathi AM, 2020, ANN NUCL ENERGY, V140, DOI 10.1016/j.anucene.2019.107139
   Verlinden S, 2012, RELIAB ENG SYST SAFE, V101, P35, DOI 10.1016/j.ress.2012.01.004
   Wohlin C., 2003, Encyc. of Phys. Sci. and Tech., P25
   Yang XS, 2014, QUAL RELIAB ENG INT, V30, P1263, DOI 10.1002/qre.1546
   Yin R. K., 2009, CASE STUDY RES DESIG, V4th ed.
   Zhang C, 2017, 2017 FOURTH INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND THEIR APPLICATIONS (DSA 2017), P51, DOI 10.1109/DSA.2017.17
NR 42
TC 7
Z9 7
U1 5
U2 21
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2022
VL 146
AR 106895
DI 10.1016/j.infsof.2022.106895
EA FEB 2022
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0J8ZG
UT WOS:000780387700005
DA 2024-07-18
ER

PT J
AU Yang, KY
   Wang, JF
   Fang, ZY
   Wu, P
   Song, ZH
AF Yang, Kaiyuan
   Wang, Junfeng
   Fang, Zhiyang
   Wu, Peng
   Song, Zihua
TI Enhancing software modularization via semantic outliers filtration and
   label propagation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software modularization; Software clustering; Software maintenance;
   Semantic outliers
ID LEXICAL INFORMATION
AB Context: Software systems' modular structure often drifts from the intended design throughout evolution. To improve the modular structure of a software system, the software clustering technology aiming to partition a software system into meaningful modules is demanding. Many clustering approaches rely on semantic information, which cluster software entities that use similar vocabulary. However, the existence of semantic outliers obstructing the clustering process is hardly considered.Objective: To overcome the existence of semantic outliers, this paper proposes a two-stage software clustering approach named EVOL (Enhancing Via Outliers filtration and Label propagation).Methods: A feature density-based outliers detecting algorithm is used to compute the local outlier factor of each feature. Accordingly, we filter out the semantic outliers and cluster remaining high-quality features to construct a partition skeleton; After that, assign each outlier into a suitable cluster by label propagation.Results: To assess the effectiveness of the proposed approach, this paper conducts experiments on six folders from Mozilla Firefox and other four software systems, referring to the original design concepts and modular structure provided by the developers. The average of the evaluation metric MoJoFM shows significant improvement from 6% to 35% over the other six state-of-art clustering techniques. The results demonstrate that the filtration of the outliers facilitates the clustering results, and label propagation could place the outliers into a suitable cluster.Conclusion: In this paper, we propose EVOL, a new software clustering approach that considers semantic outliers filtration and label propagation. The experiment results show that the proposed approach EVOL can be very useful to enhance the quality of the software modularization.
C1 [Yang, Kaiyuan; Wang, Junfeng] Sichuan Univ, Coll Comp Sci, Chengdu 610065, Peoples R China.
   [Fang, Zhiyang; Song, Zihua] Sichuan Univ, Sch Cyber Sci & Engn, Chengdu 610207, Peoples R China.
   [Wu, Peng] Sichuan Tourism Univ, Sch Informat & Engn, Chengdu 610100, Peoples R China.
C3 Sichuan University; Sichuan University; Sichuan Tourism University
RP Wang, JF (corresponding author), Sichuan Univ, Coll Comp Sci, Chengdu 610065, Peoples R China.
EM wangjf@scu.edu.cn
RI Yang, kaiyuan/HPH-7334-2023
FU National Natural Science Foundation of China [U2133208, U20A20161];
   Basic Research Program of China [2019-JCJQ-ZD-021]
FX Acknowledgments This work was supported in part by the National Natural
   Science Foundation of China under Grant U2133208 and Grant U20A20161;
   and in part by the Basic Research Program of China under Grant
   2019-JCJQ-ZD-021.
CR Aghdasifam M, 2020, COMPLEXITY, V2020, DOI 10.1155/2020/1794947
   Amarjeet, 2017, INFORM SOFTWARE TECH, V82, P96, DOI 10.1016/j.infsof.2016.09.011
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   [Anonymous], 2001, 7 IEEE INT SOFTWARE, DOI [10.1109/metric.2001.915530, DOI 10.1109/METRIC.2001.915530]
   Barros MD, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1205, DOI 10.1145/2330163.2330330
   Bavota G., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P195, DOI 10.1109/WCRE.2010.29
   Bavota G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559935
   Behnamghader P, 2017, EMPIR SOFTW ENG, V22, P1146, DOI 10.1007/s10664-016-9466-0
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Breunig MM, 2000, SIGMOD REC, V29, P93, DOI 10.1145/335191.335388
   Candela I, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2928268
   Constantinou E, 2015, J SYST SOFTWARE, V107, P142, DOI 10.1016/j.jss.2015.05.065
   Corazza A, 2016, EMPIR SOFTW ENG, V21, P72, DOI 10.1007/s10664-014-9347-3
   Corazza A, 2011, EUR CON SFTWR MTNCE, P35, DOI 10.1109/CSMR.2011.8
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Garcia J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P552, DOI 10.1109/ASE.2011.6100123
   Garcia J, 2013, IEEE INT CONF AUTOM, P486, DOI 10.1109/ASE.2013.6693106
   Huang JH, 2016, INFORM SCIENCES, V342, P96, DOI 10.1016/j.ins.2016.01.030
   Jalali NS, 2019, SOFT COMPUT, V23, P11141, DOI 10.1007/s00500-018-3666-z
   Jierui Xie, 2011, 2011 IEEE International Conference on Data Mining Workshops, P344, DOI 10.1109/ICDMW.2011.154
   KAILATH T, 1967, IEEE T COMMUN TECHN, VCO15, P52, DOI 10.1109/TCOM.1967.1089532
   Kargar M, 2019, COMPUT ELECTR ENG, V80, DOI 10.1016/j.compeleceng.2019.106500
   Kargar M, 2017, 2017 18TH CSI INTERNATIONAL SYMPOSIUM ON COMPUTER SCIENCE AND SOFTWARE ENGINEERING CONFERENCE (CSSE), P55, DOI 10.1109/CSICSSE.2017.8320117
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Luo J, 2005, PROC IEEE INT CONF S, P647
   Lutellier T, 2018, IEEE T SOFTWARE ENG, V44, P159, DOI 10.1109/TSE.2017.2671865
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Mazlami G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P524, DOI 10.1109/ICWS.2017.61
   Mehta N. R., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P178, DOI 10.1109/ICSE.2000.870409
   Misra J., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P113, DOI 10.1109/WCRE.2012.21
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Mohammadi S, 2019, INFORM SOFTWARE TECH, V105, P252, DOI 10.1016/j.infsof.2018.09.001
   Papachristou M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1184, DOI 10.1145/3338906.3342483
   Pourasghar B, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2020.106469
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Risi M, 2012, FORM ASP COMPUT, V24, P307, DOI 10.1007/s00165-011-0199-y
   Sarhan QI, 2022, IEEE T SOFTWARE ENG, V48, P1905, DOI 10.1109/TSE.2020.3042553
   Sartipi K, 2003, J SOFTW MAINT EVOL-R, V15, P265, DOI 10.1002/smr.277
   Scanniello Giuseppe, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P180, DOI 10.1109/ICPC.2010.17
   Teymourian N, 2022, IEEE T SOFTWARE ENG, V48, P1451, DOI 10.1109/TSE.2020.3022212
   Tian FC, 2022, INFORM SOFTWARE TECH, V141, DOI 10.1016/j.infsof.2021.106705
   Tzerpos V, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P258
   Wen Z, 2004, PROG COMPREHEN, P194, DOI 10.1109/WPC.2004.1311061
   Yano K, 2020, PROC IEEE INT CONF S, P662, DOI 10.1109/ICSME46990.2020.00068
NR 45
TC 3
Z9 3
U1 1
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2022
VL 145
AR 106818
DI 10.1016/j.infsof.2021.106818
EA JAN 2022
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0J9PR
UT WOS:000780430800009
DA 2024-07-18
ER

PT J
AU Hamdaqa, M
   Met, LAP
   Qasse, I
AF Hamdaqa, Mohammad
   Met, Lucas Alberto Pineda
   Qasse, Ilham
TI iContractML 2.0: A domain-specific language for modeling and deploying
   smart contracts onto multiple blockchain platforms
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Smart contracts; Blockchain; Model -driven engineering; Ethereum;
   Hyperledger fabric; DAML; Azure
AB Context: Smart contracts play a vital role in many fields. Despite being called smart, the development of smart contracts is a tedious task beyond defining a set of contractual rules. In addition to business knowledge, coding a smart contract requires strong technical knowledge in a multiplex of new and rapidly changing domain-specific languages and blockchain platforms. Objectives: The goal of this paper is to assist developers in building smart contracts independently from the language or the target blockchain platform. In which, we present our second-generation smart contract language iContractML 2.0. Methods: We follow a feature-oriented approach to analyze three different blockchain platforms and propose an enhanced reference model and a modeling framework for smart contracts (iContractML 2.0). Then, we evaluate the coverage and extensibility of iContractML 2.0, first through mapping the concepts of the reference models to the constructs within each of the platforms used in devising the reference model, and second through mapping its concepts to a new smart contract language not previously considered. Finally, we demonstrate the capabilities of iContractML 2.0 using five case studies from different business domains. Results: iContractML 2.0 extends our first generation language to support DAML, which is another standardized language for smart contracts. This makes iContractML 2.0 supports the platforms that DAML support by extension. Moreover, iContractML 2.0 supports generating the structural and deployment artifacts in addition to the smart contract behavior by implementing templates for some of the common functions. The results of evaluating the generality of the iContractML 2.0 reference model show that it is 91.7% lucid and 72.2% laconic. Moreover, the reference model is able to capture all the elements of the new language with 83.3% of the components which have a direct one-to-one mapping. Conclusion: iContractML 2.0 is an extensible framework that empowers developers to model and generate functional smart contract code that can be deployed onto multiple blockchain platforms.
C1 [Hamdaqa, Mohammad] Polytech Montreal, Dept Comp & Software Engn, Montreal, PQ, Canada.
   [Hamdaqa, Mohammad; Met, Lucas Alberto Pineda; Qasse, Ilham] Reykjavik Univ, Dept Comp Sci, Reykjavik, Iceland.
C3 Universite de Montreal; Polytechnique Montreal; Reykjavik University
RP Hamdaqa, M (corresponding author), Polytech Montreal, Dept Comp & Software Engn, Montreal, PQ, Canada.
EM mhamdaqa@polymtl.ca
RI Hamdaqa, Mohammad/AAE-5007-2020
OI Hamdaqa, Mohammad/0000-0003-4927-2755
FU Icelandic Centre for Research (Rannis) [218202-051]
FX We acknowledge the support of the Icelandic Centre for Research
   (Rannis), [funding reference number 218202-051].
CR Agrawal G, 2018, DSLS ETHEREUM CONTRA
   Alharby M., 2017, COMPUTER SCI INFORM, DOI DOI 10.5121/CSIT.2017.71011
   Allison I., 2015, INTERNAT BUS TIME JU, V16
   [Anonymous], 2019, DAML SDK DOCUMENTATI
   [Anonymous], 2016, INT BUS TIMES
   [Anonymous], 2016, AZURE BLOCKCHAIN
   [Anonymous], 2018, LINUX FOUND, P1
   Biryukov Alex, 2017, Financial Cryptography and Data Security. FC 2017 International Workshops WAHC, BITCOIN, VOTING, WTSC, and TA. Revised Selected Papers: LNCS 10323, P453, DOI 10.1007/978-3-319-70278-0_28
   Brown R., 2015, THOUGHT FUTURE FINAN, P1
   Buterin V., 2015, ETHEREUM BLOG
   Buterin V., 2015, On public and private blockchains
   Cachin C., 2017, Leibniz Int. Proc. Inf, DOI [10.4230/LIPIcs.DISC.2017.1, DOI 10.4230/LIPICS.DISC.2017.1]
   Choudhury O, 2018, IEEE 2018 INTERNATIONAL CONGRESS ON CYBERMATICS / 2018 IEEE CONFERENCES ON INTERNET OF THINGS, GREEN COMPUTING AND COMMUNICATIONS, CYBER, PHYSICAL AND SOCIAL COMPUTING, SMART DATA, BLOCKCHAIN, COMPUTER AND INFORMATION TECHNOLOGY, P963, DOI 10.1109/Cybermatics_2018.2018.00183
   Clack CD, 2016, ARXIV PREPRINT ARXIV
   Crosby M, 2016, APPL INNOV REV, V2, P6, DOI DOI 10.21626/innova/2016.1/01
   Frantz CK, 2016, 2016 IEEE 1ST INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W), P210, DOI 10.1109/FAS-W.2016.53
   Franz F, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN AND CRYPTOCURRENCY (IEEE ICBC)
   Garamvölgyi P, 2018, I C DEPENDABLE SYST, P134, DOI 10.1109/DSN-W.2018.00052
   Grinberg Reuben, 2012, HASTINGS SCI TECH L, V4, P159
   Guizzardi G, 2005, LECT NOTES COMPUT SC, V3713, P691, DOI 10.1007/11557432_51
   Guizzardi G., 2013, DOMAIN ENG, P317
   Hamdaqa Mohammad, 2020, SAM '20: Proceedings of the 12th System Analysis and Modelling Conference, P34, DOI 10.1145/3419804.3421454
   He X, 2018, P INT COMP SOFTW APP, P132, DOI 10.1109/COMPSAC.2018.00025
   Hewa T, 2021, J NETW COMPUT APPL, V177, DOI 10.1016/j.jnca.2020.102857
   Hsain YA, 2021, PROCEDIA COMPUT SCI, V184, P785, DOI 10.1016/j.procs.2021.03.097
   IOHK, 2018, MARL FIN CONTR BLOCK
   Jones SP, 2000, ACM SIGPLAN NOTICES, V35, P280, DOI 10.1145/357766.351267
   Kiayias A, 2017, LECT NOTES COMPUT SC, V10401, P357, DOI 10.1007/978-3-319-63688-7_12
   Mao DH, 2019, IEEE ACCESS, V7, P73131, DOI 10.1109/ACCESS.2019.2920776
   Mavridou A, 2019, LECT NOTES COMPUT SC, V11598, P446, DOI 10.1007/978-3-030-32101-7_27
   Mavridou A, 2018, LECT NOTES COMPUT SC, V10957, P523, DOI 10.1007/978-3-662-58387-6_28
   Mavridou A, 2018, LECT NOTES COMPUT SC, V10804, P270, DOI 10.1007/978-3-319-89722-6_11
   Moody D, 2009, LECT NOTES COMPUT SC, V5452, P16, DOI 10.1007/978-3-642-00434-6_3
   Pilkington M, 2016, RESEARCH HANDBOOK ON DIGITAL TRANSFORMATIONS, P225
   Sánchez-Gómez N, 2020, IEEE ACCESS, V8, P164556, DOI 10.1109/ACCESS.2020.3021502
   Sharifi S, 2020, INT REQUIR ENG CONF, P364, DOI 10.1109/RE48521.2020.00049
   Shi ZS, 2019, INT SYMP PARA DISTR, P50, DOI 10.1109/ISPDC.2019.00010
   Skotnica Marek, 2019, LECT NOTES BUSINESS, V374, P149, DOI DOI 10.1007/978-3-030-37933-9_10
   Swan Melanie, 2015, BLOCKCHAIN BLUEPRINT
   Syahputra H., 2019, P 1 ESA C, V9, P229, DOI DOI 10.1007/978-3-030-13693-219
   Szabo N., 1997, First Monday, V2
   Tan S, 2020, SIGMOD'20: PROCEEDINGS OF THE 2020 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P2713, DOI 10.1145/3318464.3384687
   Wang S, 2019, IEEE T SYST MAN CY-S, V49, P2266, DOI 10.1109/TSMC.2019.2895123
   Wöhrer M, 2020, IEEE SOFTWARE, V37, P37, DOI 10.1109/MS.2020.2993470
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   Zheng ZB, 2020, FUTURE GENER COMP SY, V105, P475, DOI 10.1016/j.future.2019.12.019
   Zou WQ, 2021, IEEE T SOFTWARE ENG, V47, P2084, DOI 10.1109/TSE.2019.2942301
NR 47
TC 18
Z9 19
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2022
VL 144
AR 106762
DI 10.1016/j.infsof.2021.106762
EA DEC 2021
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YK3DU
UT WOS:000745098800005
DA 2024-07-18
ER

PT J
AU Smiari, P
   Bibi, S
   Ampatzoglou, A
   Arvanitou, EM
AF Smiari, Paraskevi
   Bibi, Stamatia
   Ampatzoglou, Apostolos
   Arvanitou, Elvira-Maria
TI Refactoring embedded software: A study in healthcare domain
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Embedded software; OO refactorings; Maintenance; Software evaluation;
   Reuse; Software tools; Performance
ID INDUSTRIAL; EXPERIENCE
AB Context: In embedded software industry, stakeholders usually promote run-time properties (e.g., performance, energy efficiency, etc.) as quality drivers, which in many cases leads to a compromise at the levels of design-time qualities (e.g., maintainability, reusability, etc.). Such a compromise does not come without a cost; since embedded systems need heavy maintenance cycles. To assure effective bug-fixing, shorten the time required for releasing updates, a refactoring of the software codebase needs to take place regularly. Objective: This study aims to investigate how refactorings are applied in ES industry; and propose a systematic approach that can guide refactoring through a 3-step process for refactoring: (a) planning; (b) design; and (c) evaluation. Method: The aforementioned goals were achieved by conducting a single case study in a company that develops medical applications for bio-impedance devices; and follows a rather systematic refactoring process in periodic timestamps. Three data collection approaches have been used: surveys, interviews (10 practitioners), and artifact analysis (51 refactoring activities). Results: The results of the study suggest that: (a) maintainability and reusability are the design-time quality attributes that motivate the refactoring of Embedded Software (ES), with 30% of the participants considering them as of "Very High" importance; (b) the refactorings that are most frequently performed are "Extract Method", "Replace Magic Number with Constant" and "Remove Parameter". We note that the "Extract Method" refactoring has an applicability of more than over 80%; and (c) to evaluate the refactoring process engineers use tools producing structural metrics, internal standards, and reviews. Conclusions: The outcomes of this study can be useful to both researchers and practitioners, in the sense that the former can focus their efforts on aspects that are meaningful to industry, whereas the latter are provided with a systematic refactoring process.
C1 [Smiari, Paraskevi; Bibi, Stamatia] Univ Western Macedonia, Dept Elect & Comp Engn, Kozani, Greece.
   [Ampatzoglou, Apostolos; Arvanitou, Elvira-Maria] Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
C3 University of Western Macedonia; University of Macedonia
RP Bibi, S (corresponding author), Univ Western Macedonia, Dept Elect & Comp Engn, Kozani, Greece.
EM psmiari@uowm.gr; sbibi@uowm.gr; a.ampatzoglou@uom.edu.gr;
   e.arvanitou@uom.edu.gr
FU action "Strengthening Human Resources Research Potential via Doctorate
   Research" of the Operational Program "Human Resources Development
   Program, Education and Lifelong Learning, 2014-2020" from State
   Scholarship Foundation (IKY); European Social Fund; Greek public
   (National Strategic Reference Framework (NSRF 2014-2020)
FX The authors gratefully acknowledge the assistance of ImpediMed Ltd. for
   giving us insight in their refactoring processes required to make this
   study possible. The valuable contribution of the volunteer practitioners
   is gratefully acknowledged. The work of Dr. Arvanitou was financially
   supported by the action "Strengthening Human Resources Research
   Potential via Doctorate Research" of the Operational Program "Human
   Resources Development Program, Education and Lifelong Learning,
   2014-2020'', implemented from State Scholarship Foundation (IKY) and
   co-financed by the European Social Fund and the Greek public (National
   Strategic Reference Framework (NSRF) 2014-2020).
CR Abebe Mesfin., 2014, INT J SOFTWARE ENG I, V8, P299, DOI [10.14257/ijseia.2014.8.6.24, DOI 10.14257/IJSEIA.2014.8.6.24]
   Agarwal A, 2006, CAN CON EL COMP EN, P1129
   Al Dallal J, 2015, INFORM SOFTWARE TECH, V58, P231, DOI 10.1016/j.infsof.2014.08.002
   Andrade H, 2020, P INT COMP SOFTW APP, P1534, DOI 10.1109/COMPSAC48688.2020.00-37
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2013, ICSEA
   [Anonymous], 2014, STAKEHOLDER GOAL ANA, DOI DOI 10.1007/978-3-662-43839-8
   [Anonymous], 1998, REFACTORING SOFTWARE
   Arcelli D, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P81, DOI 10.1109/ICSA.2019.00017
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Choi E., 2011, PROC 5 INT WORKSHOP, P7
   Elo S, 2008, J ADV NURS, V62, P107, DOI 10.1111/j.1365-2648.2007.04569.x
   Farkas Tibor, 2009, 2009 33rd Annual IEEE International Computer Software and Applications Conference (COMPSAC 2009), P516, DOI 10.1109/COMPSAC.2009.185
   Feitosa D, 2015, QOSA'15 PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES, P113, DOI 10.1145/2737182.2737190
   Fernandes J. M., 2000, Proceedings of the Eighth International Workshop on Hardware/Software Codesign. CODES 2000 (IEEE Cat. No.00TH8518), P18, DOI 10.1109/HSC.2000.843700
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gu ZH, 2003, 9TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P78, DOI 10.1109/REAL.2003.1253256
   Haendler T., 2018, P INT C SOFTW DAT TE, P397
   Hamza H, 2008, REC ADV COMPUT ENG, P102
   Jenko M, 2001, MICROPROCESS MICROSY, V25, P287, DOI 10.1016/S0141-9331(01)00120-X
   Keeling M., 2017, DESIGN IT PROGRAMMER
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Lacerda G, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110610
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mooij AJ, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P617, DOI [10.1109/saner48275.2020.9054823, 10.1109/SANER48275.2020.9054823]
   Moser R, 2008, LECT NOTES COMPUT SC, V5082, P252
   Moser R, 2006, LECT NOTES COMPUT SC, V4039, P287
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Polaczek J, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106489
   RAUSCHER TG, 1995, J PROD INNOVAT MANAG, V12, P186, DOI 10.1111/1540-5885.1230186
   Ribeiro TV, 2015, IEEE-ACM INT WKSP CO, P26, DOI 10.1109/CESI.2015.12
   Schrom H, 2017, 2017 INTERNATIONAL SMART CITIES CONFERENCE (ISC2)
   Schuts M, 2016, LECT NOTES COMPUT SC, V9681, P311, DOI 10.1007/978-3-319-33693-0_20
   Sharma T, 2015, IEEE SOFTWARE, V32, P44, DOI 10.1109/MS.2015.105
   Simons Chris, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P47, DOI 10.1007/978-3-319-22183-0_4
   Szoke G, 2017, J SYST SOFTWARE, V129, P107, DOI 10.1016/j.jss.2016.08.071
   Trudeau J, 2013, SOFTWARE ENGINEERING FOR EMBEDDED SYSTEMS: METHODS, PRACTICAL TECHNIQUES, AND APPLICATIONS, P261, DOI 10.1016/B978-0-12-415917-4.00009-8
   Vallius T., 2007, MECHATRONICS SAFETY, P265
   Van Vliet H., 2008, SOFTWARE ENG PRINCIP, V13
   Wohlin C., 2012, Experimentation in Software Engineering
NR 41
TC 3
Z9 3
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2022
VL 143
AR 106760
DI 10.1016/j.infsof.2021.106760
EA NOV 2021
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XA3SJ
UT WOS:000720570800005
DA 2024-07-18
ER

PT J
AU Lavalle, A
   Maté, A
   Trujillo, J
   Teruel, MA
   Rizzi, S
AF Lavalle, Ana
   Mate, Alejandro
   Trujillo, Juan
   Teruel, Miguel A.
   Rizzi, Stefano
TI A methodology to automatically translate user requirements into
   visualizations: Experimental validation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Data visualization; Big data analytics; Model-driven development;
   Requirements engineering; Experimental validation
ID BUSINESS INTELLIGENCE; GOAL
AB Context: Information visualization is paramount for the analysis of Big Data. The volume of data requiring interpretation is continuously growing. However, users are usually not experts in information visualization. Thus, defining the visualization that best suits a determined context is a very challenging task for them.
   Moreover, it is often the case that users do not have a clear idea of what objectives they are building the visualizations for. Consequently, it is possible that graphics are misinterpreted, making wrong decisions that lead to missed opportunities. One of the underlying problems in this process is the lack of methodologies and tools that non-expert users in visualizations can use to define their objectives and visualizations.
   Objective: The main objectives of this paper are to (i) enable non-expert users in data visualization to communicate their analytical needs with little effort, (ii) generate the visualizations that best fit their requirements, and (iii) evaluate the impact of our proposal with reference to a case study, describing an experiment with 97 non-expert users in data visualization.
   Methods: We propose a methodology that collects user requirements and semi-automatically creates suitable visualizations. Our proposal covers the whole process, from the definition of requirements to the implementation of visualizations. The methodology has been tested with several groups to measure its effectiveness and perceived usefulness.
   Results: The experiments increase our confidence about the utility of our methodology. It significantly improves over the case when users face the same problem manually. Specifically: (i) users are allowed to cover more analytical questions, (ii) the visualizations produced are more effective, and (iii) the overall satisfaction of the users is larger.
   Conclusion: By following our proposal, non-expert users will be able to more effectively express their analytical needs and obtain the set of visualizations that best suits their goals.
C1 [Lavalle, Ana; Mate, Alejandro; Trujillo, Juan; Teruel, Miguel A.] Univ Alicante, Dept Software & Comp Syst, Lucentia Res, Carretera San Vicente Raspeig S-N, Alicante 03690, Spain.
   [Lavalle, Ana; Mate, Alejandro; Trujillo, Juan; Teruel, Miguel A.] Lucentia Lab, C Pintor Perez Gil,N-16, Alicante 03540, Spain.
   [Rizzi, Stefano] Univ Bologna, DISI, Vle Risorgimento 2, I-40136 Bologna, Italy.
C3 Universitat d'Alacant; University of Bologna
RP Lavalle, A (corresponding author), Univ Alicante, Dept Software & Comp Syst, Lucentia Res, Carretera San Vicente Raspeig S-N, Alicante 03690, Spain.
EM alavalle@dlsi.ua.es
RI Teruel, Miguel A/H-6093-2017; Lavalle, Ana/GYD-3175-2022; Maté,
   Alejandro/H-5963-2015; Trujillo, Juan/L-7079-2014; Rizzi,
   Stefano/IUO-7212-2023
OI Maté, Alejandro/0000-0001-7770-3693; Trujillo, Juan/0000-0003-0139-6724;
   Rizzi, Stefano/0000-0002-4617-217X; Lavalle, Ana/0000-0002-8399-4666
FU ECLIPSE-UA - Spanish Ministry of Science, Innovation
   [RTI2018-094283-B-C32]; University of Alicante, Spain [I-PI 03-18];
   Lucentia Lab Spin-off Company [I-PI 03-18]
FX This work has been co-funded by the ECLIPSE-UA (RTI2018-094283-B-C32)
   project funded by Spanish Ministry of Science, Innovation. Ana Lavalle
   holds an Industrial PhD Grant (I-PI 03-18) co-funded by the University
   of Alicante, Spain and the Lucentia Lab Spin-off Company.
CR Alshakhouri M, 2018, INFORM SOFTWARE TECH, V98, P131, DOI 10.1016/j.infsof.2018.01.008
   [Anonymous], 2020, SAN FRANCISCO OPEN D
   [Anonymous], 2008, ADV PRESENTATIONS DE
   [Anonymous], 2009, Applied Security Visualization
   [Anonymous], 1962, STAT PRINCIPLES EXPT
   Arterburn R., 2020, DATA VISUALIZATION M
   Asadi M, 2016, SOFTW SYST MODEL, V15, P257, DOI 10.1007/s10270-014-0402-8
   Aufaure MA, 2013, LECT NOTES COMPUT SC, V8217, P9, DOI 10.1007/978-3-642-41924-9_2
   Borner K, 2015, ATLAS OF KNOWLEDGE: ANYONE CAN MAP, P1
   Borner K., 2014, ATLAS KNOWLEDGE
   Bostock M., 2019, DATA DRIVEN DOCUMENT
   Bresciani S, 2015, SAGE OPEN, V5, DOI 10.1177/2158244015611451
   Caldarola EG, 2016, IEEE INT CONGR BIG, P34, DOI 10.1109/BigDataCongress.2016.14
   Cares Carlos, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P337, DOI 10.1007/978-3-642-21640-4_26
   Dalpiaz F., 2016, ARXIV PREPRINT, DOI DOI 10.48550/ARXIV.1605.07767
   Fernandez A, 2018, INFORM SOFTWARE TECH, V98, P118, DOI 10.1016/j.infsof.2018.01.005
   Golfarelli M, 2020, INFORM VISUAL, V19, P24, DOI 10.1177/1473871619858933
   GOODMAN NR, 1963, ANN MATH STAT, V34, P152, DOI 10.1214/aoms/1177704250
   Horkoff J, 2016, REQUIR ENG, V21, P29, DOI 10.1007/s00766-014-0209-8
   Johnson CR, 2003, IEEE COMPUT GRAPH, V23, P6, DOI 10.1109/MCG.2003.1231171
   Kintz M, 2017, MODELSWARD: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P353, DOI 10.5220/0006135203530361
   Lavalle A, 2019, INT REQUIR ENG CONF, P109, DOI 10.1109/RE.2019.00022
   Lavalle A, 2019, LECT NOTES COMPUT SC, V11788, P78, DOI 10.1007/978-3-030-33223-5_8
   Marquez Carpintero L., 2020, GRAFIK HERRAMIENTA G
   Maté A, 2014, J SYST SOFTWARE, V88, P102, DOI 10.1016/j.jss.2013.10.011
   Object Management Group (OMG), 2016, MOF 2 0 QUER VIEW TR
   Pang AT, 1997, VISUAL COMPUT, V13, P370, DOI 10.1007/s003710050111
   Peña O, 2016, PROGRAM-ELECTRON LIB, V50, P270, DOI 10.1108/PROG-12-2015-0079
   Perkins D., 2017, J LEARN ANAL
   Plotly, 2019, DASH
   Quartel D, 2009, IEEE INT ENTERP DIST, P3, DOI 10.1109/EDOC.2009.22
   Santos H, 2017, LECT NOTES COMPUT SC, V10250, P94, DOI 10.1007/978-3-319-58451-5_7
   Shi-Nash A., 2017, INTERNET THINGS DATA, P329, DOI DOI 10.1002/9781119173601.CH19
   Staron M, 2018, INFORM SOFTWARE TECH, V98, P117, DOI 10.1016/j.infsof.2018.03.001
   Sudhan S. Madhu, 2013, INT J SCI ENG RES, V4
   Teruel MA, 2019, BUS INFORM SYST ENG+, V61, P615, DOI 10.1007/s12599-019-00578-3
   Trujillo J., 2021, EXPT MAT, DOI 10.5281/zenodo.4637123
   Tun TT, 2020, INT REQUIR ENG CONF, P113, DOI 10.1109/RE48521.2020.00023
   Vázquez-Ingelmo A, 2018, LECT NOTES COMPUT SC, V10925, P518, DOI 10.1007/978-3-319-91152-6_40
   Wohlin C. C., EXPT SOFTWARE ENG
NR 40
TC 3
Z9 3
U1 2
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2021
VL 136
AR 106592
DI 10.1016/j.infsof.2021.106592
EA APR 2021
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SJ2MZ
UT WOS:000655363900009
OA hybrid, Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Politowski, C
   Petrillo, F
   Ullmann, GC
   Guéhéneuc, YG
AF Politowski, Cristiano
   Petrillo, Fabio
   Ullmann, Gabriel C.
   Gueheneuc, Yann-Gael
TI Game industry problems: An extensive analysis of the gray literature
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Game industry problems; Gray literature; Postmortem analysis; Software
   engineering
AB Context: Given its competitiveness, the video-game industry has a closed-source culture. Hence, little is known about the problems faced by game developers. However, game developers do share information about their game projects through postmortems, which describe informally what happened during the projects.
   Objective: The software-engineering research community and game developers would benefit from a state of the problems of the video game industry, in particular the problems faced by game developers, their evolution in time, and their root causes. This state of the practice would allow researchers and practitioners to work towards solving these problems.
   Method: We analyzed 200 postmortems from 1997 to 2019, resulting in 927 problems divided into 20 types. Through our analysis, we described the overall landscape of game industry problems in the past 23 years and how these problems evolved over the years. We also give details on the most common problems, their root causes, and possible solutions. We finally discuss suggestions for future projects. Results: We observe that (1) the game industry suffers from management and production problems in the same proportion; (2) management problems decreased over the years, giving space to business problems, while production problems remained constant; (3a) technical and game design problems are decreasing over the years, the latter only after the last decade; (3b) problems related to the team increase over the last decade; (3c) marketing problems are the ones that had the biggest increase over the 23 years compared to other problem types; (4) finally, the majority of the main root causes are related to people, not technologies.
   Conclusions: In this paper, we provide a state of the practice for researchers to understand and study video-game development problems. We also offer suggestions to help practitioners to avoid the most common problems in future projects.
C1 [Politowski, Cristiano; Gueheneuc, Yann-Gael] Concordia Univ, Montreal, PQ, Canada.
   [Petrillo, Fabio] Univ Quebec Chicoutimi, Chicoutimi, PQ, Canada.
   [Ullmann, Gabriel C.] Univ Reg Noroeste Estado Rio Grande do Sul, Santa Rosa, RS, Brazil.
C3 Concordia University - Canada; University of Quebec; University of
   Quebec Chicoutimi
RP Politowski, C (corresponding author), Concordia Univ, Montreal, PQ, Canada.
EM c_polito@encs.concordia.ca; fabio@petrillo.com;
   gabriel.cavalheiro@sou.unijui.edu.br; yann-gael.gueheneuc@concordia.ca
OI ULLMANN, GABRIEL/0000-0002-3274-0789; Petrillo,
   Fabio/0000-0002-8355-1494; Politowski, Cristiano/0000-0002-0206-1056;
   Gueheneuc, Yann-Gael/0000-0002-4361-2563
FU NSERC; Canada Research Chairs programs
FX The authors were partly supported by the NSERC Discovery Grant and
   Canada Research Chairs programs.
CR Alami A, 2019, PROC INT CONF SOFTW, P1073, DOI 10.1109/ICSE.2019.00111
   Blow J., 2004, QUEUE, V1, P28, DOI DOI 10.1145/971564.971590
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Brooks FrederickP., 1978, The Mythical Man-Month: Essays on Softw, V1st
   Callele D, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P240, DOI 10.1109/RE.2005.58
   Edholm H, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P43, DOI 10.1109/ICSE-SEIP.2017.18
   Hofstadter DR., 1999, Godel escher Bach: an eternal golden braid
   Kanode CM, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P260, DOI 10.1109/ITNG.2009.74
   Koster Raph, 2013, Theory of fun for game design
   Kude T, 2019, INFORM SYST RES, V30, P1145, DOI 10.1287/isre.2019.0856
   Lewis C.L., 2011, PUBLIC OPINION CLASS, P1
   Lin D, 2017, EMPIR SOFTW ENG, V22, P2095, DOI 10.1007/s10664-016-9480-2
   Nassif AB, 2016, NEURAL COMPUT APPL, V27, P2369, DOI 10.1007/s00521-015-2127-1
   Paez Arsenio, 2017, J Evid Based Med, DOI [10.1111/jebm.12266, 10.1111/jebm.12265]
   Petrillo F., 2009, Computers in Entertainment CIE, V7, P13, DOI DOI 10.1145/1486508.1486521
   Politowski C, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110846
   Politowski C, 2020, IEEE WORK CONF MIN S, P553, DOI 10.1145/3379597.3387486
   Politowski C, 2018, INFORM SOFTWARE TECH, V100, P103, DOI 10.1016/j.infsof.2018.04.003
   Politowski C, 2016, 2016 IEEE/ACM 5TH INTERNATIONAL WORKSHOP ON GAMES AND SOFTWARE ENGINEERING (GAS), P22, DOI [10.1145/2896958.2896960, 10.1109/GAS.2016.012]
   Sadowski C., 2019, Rethinking productivity in software engineering, P39, DOI DOI 10.1007/978-1-4842-4221-6
   Schreier J., 2017, BLOOD SWEAT PIXELS T
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Tschang FT, 2005, INT J INNOV MANAG, V9, P103, DOI 10.1142/S1363919605001198
   Washburn M, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P280, DOI 10.1145/2889160.2889253
   Zheng Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P784, DOI 10.1109/ASE.2019.00077
NR 25
TC 11
Z9 11
U1 3
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2021
VL 134
AR 106538
DI 10.1016/j.infsof.2021.106538
EA FEB 2021
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RF4GK
UT WOS:000634797600002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Feng, S
   Keung, J
   Yu, X
   Xiao, Y
   Bennin, KE
   Kabir, MA
   Zhang, M
AF Feng, Shuo
   Keung, Jacky
   Yu, Xiao
   Xiao, Yan
   Bennin, Kwabena Ebo
   Kabir, Md Alamgir
   Zhang, Miao
TI COSTE: Complexity-based OverSampling TEchnique to alleviate the class
   imbalance problem in software defect prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software defect prediction; Class imbalance; Oversampling; SMOTE;
   MAHAKIL; Effort-aware defect prediction
ID STATIC CODE ATTRIBUTES; DIFFERENTIAL EVOLUTION; OPTIMIZATION; FAULTS
AB Context: Generally, there are more non-defective instances than defective instances in the datasets used for software defect prediction (SDP), which is referred to as the class imbalance problem. Oversampling techniques are frequently adopted to alleviate the problem by generating new synthetic defective instances. Existing techniques generate either near-duplicated instances which result in overgeneralization (high probability of false alarm,pf) or overly diverse instances which hurt the prediction model's ability to find defects (resulting in low probability of detection,pd). Furthermore, when existing oversampling techniques are applied in SDP, the effort needed to inspect the instances with different complexity is not taken into consideration.
   Objective: In this study, we introduce Complexity-based OverSampling TEchnique (COSTE), a novel oversampling technique that can achieve low pf and high pd simultaneously. Meanwhile, COSTE also performs better in terms of N-orm(p(opt)) and ACC, two effort-aware measures that consider the testing effort.
   Method: COSTE combines pairs of defective instances with similar complexity to generate synthetic instances, which improves the diversity within the data, maintains the ability of prediction models to find defects, and takes the different testing effort needed for different instances into consideration. We conduct experiments to compare COSTE with Synthetic Minority Oversampling TEchnique, Borderline-SMOTE, Majority Weighted Minority Oversampling TEchnique and MAHAKIL.
   Results: The experimental results on 23 releases of 10 projects show that COSTE greatly improves the diversity of the synthetic instances without compromising the ability of prediction models to find defects. In addition, COSTE outperforms the other oversampling techniques under the same testing effort. The statistical analysis indicates that COSTE's ability to outperform the other oversampling techniques is significant under the statistical Wilcoxon rank sum test and Cliff's effect size.
   Conclusion: COSTE is recommended as an efficient alternative to address the class imbalance problem in SDP.
C1 [Feng, Shuo; Keung, Jacky; Yu, Xiao; Kabir, Md Alamgir; Zhang, Miao] City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
   [Xiao, Yan] Natl Univ Singapore, Sch Comp, Singapore 117417, Singapore.
   [Bennin, Kwabena Ebo] Wageningen Univ & Res, Informat Technol Grp, Wageningen, Netherlands.
C3 City University of Hong Kong; National University of Singapore;
   Wageningen University & Research
RP Feng, S; Keung, J (corresponding author), City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
EM shuofeng5-c@my.cityu.edu.hk; jacky.keung@cityu.edu.hk;
   xyu224-c@my.cityu.edu.hk; xiaoyan.hhu@gmail.com; kwabena.bennin@wur.nl;
   makabir4-c@my.cityu.edu.hk; miazhang9-c@my.cityu.edu.hk
RI Kabir, Md Alamgir/GRO-6484-2022; Alamgir, Kabir M/ABA-2963-2020
OI Alamgir, Kabir M/0000-0002-7136-6339; ZHANG, Miao/0000-0001-9659-9393;
   feng, shuo/0000-0002-1575-9891; Bennin, Kwabena/0000-0001-9140-9271;
   Keung, Jacky/0000-0002-3803-9600
FU General Research Fund of the Research Grants Council of Hong Kong
   [11208017]; City University of Hong Kong [7005028, 7005217]; Intel,
   China [9220097, 9678149, 9440227, 9440180, 9220103]
FX This work is supported in part by the General Research Fund of the
   Research Grants Council of Hong Kong (No. 11208017) and the research
   funds of City University of Hong Kong (7005028, 7005217), and the
   Research Support Fund by Intel, China (9220097), and funding supports
   from other industry partners (9678149, 9440227, 9440180 and 9220103).
CR Abu Shanab A, 2012, 2012 IEEE 13TH INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI), P415, DOI 10.1109/IRI.2012.6303039
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Ali MM, 2017, CLUSTER COMPUT, V20, P2267, DOI 10.1007/s10586-017-0892-6
   [Anonymous], 2001, EFFECT CLASS DISTRIB
   Barua S, 2014, IEEE T KNOWL DATA EN, V26, P405, DOI 10.1109/TKDE.2012.232
   Benni KE, 2018, IEEE T SOFTWARE ENG, V44, P534, DOI 10.1109/TSE.2017.2731766
   Bennin KE, 2019, EMPIR SOFTW ENG, V24, P602, DOI 10.1007/s10664-018-9633-6
   Bennin KE, 2017, ASIA PAC SOFWR ENG, P630, DOI 10.1109/APSEC.2017.76
   Bennin KE, 2017, INT SYMP EMP SOFTWAR, P364, DOI 10.1109/ESEM.2017.50
   Biswas PP, 2018, ENG APPL ARTIF INTEL, V68, P81, DOI 10.1016/j.engappai.2017.10.019
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   BUCKLEY FJ, 1984, IEEE T SOFTWARE ENG, V10, P36, DOI 10.1109/TSE.1984.5010196
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen L, 2018, SOFTWARE QUAL J, V26, P97, DOI 10.1007/s11219-016-9342-6
   COVER TM, 1967, IEEE T INFORM THEORY, V13, P21, DOI 10.1109/TIT.1967.1053964
   De Maesschalck R, 2000, CHEMOMETR INTELL LAB, V50, P1, DOI 10.1016/S0169-7439(99)00047-7
   Drummond C., 2003, WORKSH LEARN IMB DAT, V11, P1
   Fan G., 2019, SCI PROGRAM, V2019
   Guo XJ, 2008, ICNC 2008: FOURTH INTERNATIONAL CONFERENCE ON NATURAL COMPUTATION, VOL 4, PROCEEDINGS, P192, DOI 10.1109/ICNC.2008.871
   Han H, 2005, LECT NOTES COMPUT SC, V3644, P878, DOI 10.1007/11538059_91
   He HB, 2008, IEEE IJCNN, P1322, DOI 10.1109/IJCNN.2008.4633969
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   Huanjing Wang, 2010, 2010 Ninth International Conference on Machine Learning and Applications (ICMLA 2010), P135, DOI 10.1109/ICMLA.2010.27
   Huda S, 2018, IEEE ACCESS, V6, P24184, DOI 10.1109/ACCESS.2018.2817572
   Huda S, 2017, INFORM SCIENCES, V379, P211, DOI 10.1016/j.ins.2016.09.041
   Japkowicz N., 2002, Intelligent Data Analysis, V6, P429
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Jing XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P414, DOI 10.1145/2568225.2568320
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Krawczyk B, 2016, PROG ARTIF INTELL, V5, P221, DOI 10.1007/s13748-016-0094-0
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Li N, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106287
   Li ZQ, 2019, AUTOMAT SOFTW ENG, V26, P599, DOI 10.1007/s10515-019-00259-1
   Li ZQ, 2018, AUTOMAT SOFTW ENG, V25, P201, DOI 10.1007/s10515-017-0220-7
   Limsettho N, 2018, INFORM SOFTWARE TECH, V100, P87, DOI 10.1016/j.infsof.2018.04.001
   Lin CT, 2018, IEEE T KNOWL DATA EN, V30, P950, DOI 10.1109/TKDE.2017.2779849
   Lina Gong, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P698, DOI 10.1109/ASE.2019.00071
   Liu MX, 2014, IEEE T RELIAB, V63, P676, DOI 10.1109/TR.2014.2316951
   Ma Y., 2007, Advances in Machine Learning Applications in Software Engineering, P237
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Maciejewski T., 2011, Proceedings 2011 IEEE Symposium on Computational Intelligence and Data Mining (CIDM 2011), P104, DOI 10.1109/CIDM.2011.5949434
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Onan A, 2016, EXPERT SYST APPL, V62, P1, DOI 10.1016/j.eswa.2016.06.005
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Öztürk MM, 2017, INFORM SOFTWARE TECH, V92, P17, DOI 10.1016/j.infsof.2017.07.004
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Provost F., 2000, P AAAI 2000 WORKSH I, V68, P1, DOI DOI 10.1109/SOCPAR.2011
   Sacar MD, 2013, 2013 8 INT S HLTH IN, P1
   Sharmeen S, 2020, APPL SOFT COMPUT, V89, DOI 10.1016/j.asoc.2020.106089
   Shirabad J. S., 2005, PROMISE REPOSITORY S, V24
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Sun ZB, 2012, IEEE T SYST MAN CY C, V42, P1806, DOI 10.1109/TSMCC.2012.2226152
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tax David Martinus Johannes, 2002, ONE CLASS CLASSIFICA
   Tomar Divya, 2016, Applied Computational Intelligence and Soft Computing, V2016, DOI 10.1155/2016/7658207
   Tomaszewski P, 2006, PROC IEEE INT CONF S, P487
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wan Z., 2018, IEEE T SOFTW ENG
   Wong GY, 2013, IEEE IND ELEC, P2354, DOI 10.1109/IECON.2013.6699499
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xia X, 2015, INFORM SOFTWARE TECH, V61, P93, DOI 10.1016/j.infsof.2014.12.006
   Xing F, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P213
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yoon K, 2007, NEURAL COMPUT APPL, V16, P295, DOI 10.1007/s00521-007-0089-7
   Yu X, 2018, SOFT COMPUT, V22, P3461, DOI 10.1007/s00500-018-3093-1
   Zhang F, 2016, ENERG BUILDINGS, V126, P94, DOI 10.1016/j.enbuild.2016.05.028
   Zhang F, 2017, IEEE T SOFTWARE ENG, V43, P476, DOI 10.1109/TSE.2016.2599161
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang XY, 2015, APPL INTELL, V42, P544, DOI 10.1007/s10489-014-0610-5
   Zhang Y, 2005, BIOORG MED CHEM LETT, V15, P1629, DOI 10.1016/j.bmcl.2005.01.061
   Zhou LG, 2013, KNOWL-BASED SYST, V41, P16, DOI 10.1016/j.knosys.2012.12.007
   Zhou TC, 2019, INFORM SOFTWARE TECH, V114, P204, DOI 10.1016/j.infsof.2019.07.003
NR 79
TC 69
Z9 71
U1 1
U2 29
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2021
VL 129
AR 106432
DI 10.1016/j.infsof.2020.106432
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI7BA
UT WOS:000583428200010
DA 2024-07-18
ER

PT J
AU Torre, E
   Durillo, JJ
   de Maio, V
   Agrawal, P
   Benedict, S
   Saurabh, N
   Prodan, R
AF Torre, Ennio
   Durillo, Juan J.
   de Maio, Vincenzo
   Agrawal, Prateek
   Benedict, Shajulin
   Saurabh, Nishant
   Prodan, Radu
TI A dynamic evolutionary multi-objective virtual machine placement
   heuristic for cloud data centers
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE VM placement; Multi-objective optimisation; Resource overcommitment;
   Resource wastage; Live migration; Energy consumption; Pareto optimal
   set; Genetic algorithm; Data center simulation
ID LIVE MIGRATION; CONSOLIDATION; ALGORITHM
AB Minimizing the resource wastage reduces the energy cost of operating a data center, but may also lead to a considerably high resource overcommitment affecting the Quality of Service (QoS) of the running applications. The effective tradeoff between resource wastage and overcommitment is a challenging task in virtualized Clouds and depends on the allocation of virtual machines (VMs) to physical resources. We propose in this paper a multi-objective method for dynamic VM placement, which exploits live migration mechanisms to simultaneously optimize the resource wastage, overcommitment ratio and migration energy. Our optimization algorithm uses a novel evolutionary meta-heuristic based on an island population model to approximate the Pareto optimal set of VM placements with good accuracy and diversity. Simulation results using traces collected from a real Google cluster demonstrate that our method outperforms related approaches by reducing the migration energy by up to 57% with a QoS increase below 6%.
C1 [Torre, Ennio; Durillo, Juan J.] Leibniz Supercomp Ctr, Munich, Germany.
   [de Maio, Vincenzo] Vienna Univ Technol, Vienna, Austria.
   [Agrawal, Prateek] Lovely Profess Univ, Phagwara, Punjab, India.
   [Benedict, Shajulin] Indian Inst Informat Technol, Kottayam, Kerala, India.
   [Agrawal, Prateek; Saurabh, Nishant; Prodan, Radu] Univ Klagenfurt, Klagenfurt, Austria.
C3 Technische Universitat Wien; Lovely Professional University; University
   of Klagenfurt
RP Prodan, R (corresponding author), Univ Klagenfurt, Klagenfurt, Austria.
EM radu@itec.aau.at
RI Benedict, Shajulin/X-9875-2019; Agrawal, Prateek/AAE-1912-2021; Prodan,
   Radu/S-4253-2017; Saurabh, Nishant/ABF-6391-2020; Durillo, Juan J.
   J./L-3071-2014
OI Benedict, Shajulin/0000-0002-2543-2710; Agrawal,
   Prateek/0000-0001-6861-0698; Saurabh, Nishant/0000-0002-1926-4693; De
   Maio, Vincenzo/0000-0002-7352-3895
FU European Union [825134]; Austrian Science Fund (FWF) [Y 904]; Runtime
   Control in Multi Clouds (RUCON); Austrian Agency for International
   Cooperation in Education and Research (OeAD-GmbH); Indian Department of
   Science and Technology (DST) [IN 20/2018]
FX This work received funding from: European Union's Horizon 2020 research
   and innovation programme, grant agreement 825134, "Smart Social Media
   Ecosytstem in a Blockchain Federated Environment (ARTICONF)"; Austrian
   Science Fund (FWF), grant agreement Y 904 START-Programm 2015, "Runtime
   Control in Multi Clouds (RUCON)"; Austrian Agency for International
   Cooperation in Education and Research (OeAD-GmbH) and Indian Department
   of Science and Technology (DST), project number, IN 20/2018, "Energy
   Aware Workflow Compiler for Future Heterogeneous Systems".
CR Aikema David., 2011, Proceedings of World of Wireless, Mobile and Multimedia Networks (WoWMoM), 2011 IEEE International Symposium on a, P1
   Akiyama S, 2014, INT CONF CLOUD COMP, P759, DOI 10.1109/CloudCom.2014.42
   Akoush Sherif, 2010, Proceedings 18th IEEE/ACM International Symposium on Modelling, Analysis & Simulation of Computer and Telecommunication Systems (MASCOTS 2010), P37, DOI 10.1109/MASCOTS.2010.13
   Bajaj CL, 1998, IEEE SYMPOSIUM ON VOLUME VISUALIZATION, P95, DOI 10.1109/SVV.1998.729590
   Barham P., 2003, Operating Systems Review, V37, P164, DOI 10.1145/1165389.945462
   Baset S.A., 2012, Proceedings of the 2Nd USENIX Conference on Hot Topics in Management of Internet, Cloud, and Enterprise Networks and Services, P7
   Beloglazov A, 2012, FUTURE GENER COMP SY, V28, P755, DOI 10.1016/j.future.2011.04.017
   Calcavecchia N. M., 2012, 2012 IEEE 5th International Conference on Cloud Computing (CLOUD), P852, DOI 10.1109/CLOUD.2012.113
   Calheiros R. N., 2011, 2011 International Conference on Parallel Processing, P295, DOI 10.1109/ICPP.2011.17
   Dabbagh M, 2015, IEEE NETWORK, V29, P56, DOI 10.1109/MNET.2015.7064904
   De Maio V, 2015, IEEE INT C CL COMP, P274, DOI 10.1109/CLUSTER.2015.47
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Durillo JJ, 2008, IEEE C EVOL COMPUTAT, P1893, DOI 10.1109/CEC.2008.4631047
   Fahringer T., 2007, Work ows for e-Science, P450
   Ferdaus MH, 2014, LECT NOTES COMPUT SC, V8632, P306, DOI 10.1007/978-3-319-09873-9_26
   Haibo Mi, 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P514, DOI 10.1109/SCC.2010.69
   Hien Nguyen Van, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P329, DOI 10.1109/CLOUD.2010.25
   Johnson D.S., ENCY ALGORITHMS, P1, DOI [10.1007/978-3-642- 27848-8_495-1., DOI 10.1007/978-3-642-27848-8_495-1]
   Lama P., 2011, 2011 International Conference on Parallel Processing, P345, DOI 10.1109/ICPP.2011.30
   Li JQ, 2011, 2011 INTERNATIONAL CONFERENCE ON ELECTRONICS, COMMUNICATIONS AND CONTROL (ICECC), P1122, DOI 10.1109/ICECC.2011.6066311
   Liu HK, 2013, CLUSTER COMPUT, V16, P249, DOI 10.1007/s10586-011-0194-3
   Malladi KT, 2012, CONF PROC INT SYMP C, P37, DOI 10.1109/ISCA.2012.6237004
   Mastroianni C, 2011, LECT NOTES COMPUT SC, V6852, P407, DOI 10.1007/978-3-642-23400-2_38
   Minas L., 2009, Energy Efficiency for Information Technology: How to Reduce Power Consumption in Servers and Data Centers
   Mishra M., 2011, 2011 IEEE 4 INT C CL, P275, DOI [10.1109/CLOUD.2011.38, DOI 10.1109/CLOUD.2011.38]
   Murtazaev A, 2011, IETE TECH REV, V28, P212, DOI 10.4103/0256-4602.81230
   Nae V, 2011, IEEE T PARALL DISTR, V22, P380, DOI 10.1109/TPDS.2010.82
   Nieh J, 2001, USENIX ASSOCIATION PROCEEDINGS OF THE 2001 USENIX ANNUAL TECHNICAL CONFERENCE, P245
   Ostermann S, 2011, SCI PROGRAMMING-NETH, V19, P161, DOI [10.1155/2011/267153, 10.3233/SPR-2011-0321]
   Rahman QS, 2012, SER COSMET LASER TH, V8, P161
   Reiss Charles, 2012, P ACM S CLOUD COMP, DOI [10.1145/2391229.2391236, DOI 10.1145/2391229.2391236]
   Sallam A, 2014, COMPUT J, V57, P195, DOI 10.1093/comjnl/bxt018
   Strunk A, 2013, INT CON ADV INFO NET, P514, DOI 10.1109/AINA.2013.137
   Verma A, 2008, LECT NOTES COMPUT SC, V5346, P243, DOI 10.1007/978-3-540-89856-6_13
   Wilkes J., CLUSTERDATA2011
   Xu M, 2009, 2009 IEEE INTERNATIONAL SYMPOSIUM ON PARALLEL AND DISTRIBUTED PROCESSING WITH APPLICATIONS, PROCEEDINGS, P629, DOI 10.1109/ISPA.2009.95
NR 36
TC 14
Z9 14
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2020
VL 128
AR 106390
DI 10.1016/j.infsof.2020.106390
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NZ0FW
UT WOS:000576767100007
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Leitao, PS Jr
   Freitas, DM
   Vergilio, SR
   Camilo, CG Jr
   Harrison, R
AF Leitao-Junior, Plinio S.
   Freitas, Diogo M.
   Vergilio, Silvia R.
   Camilo-Junior, Celso G.
   Harrison, Rachel
TI Search-based fault localisation: A systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Meta-heuristic algorithms; Search-based fault localisation; Systematic
   mapping
AB Context: Software Fault Localisation (FL) refers to finding faulty software elements related to failures produced as a result of test case execution. This is a laborious and time consuming task. To allow FL automation search-based algorithms have been successfully applied in the field of Search-Based Fault Localisation (SBFL). However, there is no study mapping the SBFL field to the best of our knowledge and we believe that such a map is important to promote new advances in this field.
   Objective: To present the results of a mapping study on SBFL, by characterising the proposed methods, identifying sources of used information, adopted evaluation functions, applied algorithms and elements regarding reported experiments.
   Method: Our mapping followed a defined process and a search protocol. The conducted analysis considers different dimensions and categories related to the main characteristics of SBFL methods.
   Results: All methods are grounded on the coverage spectra category. Overall the methods search for solutions related to suspiciousness formulae to identify possible faulty code elements. Most studies use evolutionary algorithms, mainly Genetic Programming, by using a single-objective function. There is little investigation of real-and-multiple-fault scenarios, and the subjects are mostly written in C and Java. No consensus was observed on how to apply the evaluation metrics.
   Conclusions: Search-based fault localisation has seen a rise in interest in the past few years and the number of studies has been growing. We identified some research opportunities such as exploring new sources of fault data, exploring multi-objective algorithms, analysing benchmarks according to some classes of faults, as well as, the use of a unique definition for evaluation measures.
C1 [Leitao-Junior, Plinio S.; Freitas, Diogo M.; Camilo-Junior, Celso G.] Univ Fed Goias, Inst Informat, Alameda Palmeiras,Quadra D,Campus Samambaia, BR-74690900 Goiania, Go, Brazil.
   [Leitao-Junior, Plinio S.; Harrison, Rachel] Oxford Brookes Univ, Sch Engn Comp & Maths, Wheatley Campus, Oxford 0X33 1HX, England.
   [Vergilio, Silvia R.] Univ Fed Parana, Dept Informat, Rua Cel Francisco Heraclito Santos 100, BR-81531980 Curitiba, Parana, Brazil.
C3 Universidade Federal de Goias; Oxford Brookes University; Universidade
   Federal do Parana
RP Leitao, PS Jr (corresponding author), Univ Fed Goias, Inst Informat, Alameda Palmeiras,Quadra D,Campus Samambaia, BR-74690900 Goiania, Go, Brazil.
EM plinio@inf.ufg.br; diogom42@gmail.com; silvia@inf.ufpr.br;
   celso@inf.ufg.br; rachel.harrison@brookes.ac.uk
OI Camilo-Junior, Celso/0000-0003-2553-8790
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   [Anonymous], 2010, 1152009 IEEE, P1, DOI [DOI 10.1109/IEEESTD.2010.5439063, 10.1109/IEEESTD.2010.5439063]
   [Anonymous], P EUR S ART NEUR NET
   [Anonymous], REV CANADIENNE GNIE
   [Anonymous], 2012, P 5 IND SOFTW ENG C
   [Anonymous], 2014, GUIDE SOFTWARE ENG B
   [Anonymous], IEEE T SOFTW ENG
   [Anonymous], P 8 BRAZ WORKSH SEAR
   [Anonymous], 2014, ACM SIGSOFT Software Engineering Notes, DOI [DOI 10.1145/2659118.2659125, 10.1145/2659118.2659125]
   [Anonymous], 150261 ISOIEC
   Arcega L, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P90, DOI 10.1145/3239372.3239392
   Azarian A, 2011, ENG APPL ARTIF INTEL, V24, P733, DOI 10.1016/j.engappai.2011.03.008
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Biaz S, 2005, I S WORLD WIREL MOBI, P388, DOI 10.1109/WOWMOM.2005.80
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Choi K, 2018, LECT NOTES COMPUT SC, V11036, P349, DOI 10.1007/978-3-319-99241-9_20
   Creswell J. W., 2013, RES DESIGN QUALITATI
   de-Freitas DM, 2018, IEEE C EVOL COMPUTAT, P2291, DOI 10.1109/CEC.2018.8477719
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Harrold MJ, 1998, ACM SIGPLAN NOTICES, V33, P83, DOI 10.1145/277633.277647
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   ISO-Standards, 2013, ISO 29022, V1, P1, DOI [DOI 10.1109/IEEESTD.2013.6588537, 10.1109/IEEESTD.2013.6588537]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kang D, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1295, DOI 10.1145/3071178.3071263
   Kim J, 2018, LECT NOTES COMPUT SC, V11036, P246, DOI 10.1007/978-3-319-99241-9_13
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Li XL, 2018, EMPIR SOFTW ENG, V23, P1, DOI 10.1007/s10664-016-9494-9
   Liu B, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P359, DOI 10.1109/SANER.2017.7884636
   Naish L, 2015, 2015 24TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC 2015), P11, DOI 10.1109/ASWEC.2015.12
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Neelofar N, 2018, SOFTWARE PRACT EXPER, V48, P641, DOI 10.1002/spe.2527
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Reps T, 1997, LECT NOTES COMPUT SC, V1301, P432, DOI 10.1145/267896.267925
   Shaowei Wang, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P556, DOI 10.1109/ASE.2011.6100124
   Shin Yoo, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P244, DOI 10.1007/978-3-642-33119-0_18
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Staffs Keele, 2007, Tech. Rep.
   Steimann F., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P121, DOI 10.1109/ISSRE.2012.28
   Tan SH, 2017, PROC IEEE ACM INT C, P180, DOI 10.1109/ICSE-C.2017.76
   Tang YB, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON CONSUMER ELECTRONICS-TAIWAN (ICCE-TW), P101
   VESSEY I, 1986, IEEE T SYST MAN CYB, V16, P621, DOI 10.1109/TSMC.1986.289308
   Vokolos FI, 1998, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.1998.738488
   Wang Wei, 2016, Journal of Central South University (Science and Technology), V47, P2254, DOI 10.11817/j.issn.1672-7207.2016.07.011
   White DR, 2013, GENET PROGRAM EVOL M, V14, P3, DOI 10.1007/s10710-012-9177-2
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C, 2013, J SYST SOFTWARE, V86, P2594, DOI 10.1016/j.jss.2013.04.076
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Yoo S, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3078840
   Zakari A, 2019, IET SOFTW, V13, P60, DOI 10.1049/iet-sen.2018.5137
   Zheng Y, 2018, J SYST SOFTWARE, V139, P107, DOI 10.1016/j.jss.2018.02.001
NR 61
TC 5
Z9 5
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2020
VL 123
AR 106295
DI 10.1016/j.infsof.2020.106295
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK1XD
UT WOS:000530651200013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ramakrishnan, R
   Kaur, A
AF Ramakrishnan, Raghu
   Kaur, Arvinder
TI An empirical comparison of predictive models for web page performance
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Machine learning; Web page; Load time; Prediction models; Performance;
   Early stage
AB Context: The quality of user experience is the cornerstone of any organization's successful digital transformation journey. Web pages are the main touchpoint for users to access services in a digital mode. Web page performance is a key determinant of the quality of user experience. The negative impact of poor web page performance on the productivity, profits, and brand value of an organization is well-recognized. The use of realistic prediction models for predicting page load time at the early stages of development can help minimize the effort and cost arising out of fixing performance defects late in the lifecycle.
   Objective: We present a comprehensive evaluation of models based on 18 widely used machine learning techniques on their capability to predict page load times. The models use only those metrics which relate to the form and structure of a page because such metrics are easy to ascertain during the early stages with minimal effort.
   Method: The machine learning techniques are trained on more than 8,700 pages from HTTP Archive data, a database of web performance information widely used to conduct web performance research. The trained models are then validated using the 10-fold cross-validation method and accuracy measures like the Pearson correlation coefficient (r), Root Mean Square Error (RMSE), and Normalized Root Mean Square Error (NRMSE) are reported.
   Results: Radial Basis Function regression and Random Forest outperform all other techniques. The value of r ranges from 0.69-0.92, indicating a high correlation between the observed and predicted values. The NRMSE varies between 0.11-0.16, implying that RMSE is less than 16% of the range of actual value. The RMSE improves by 41%-54% compared to the best baseline prediction model.
   Conclusion: It is possible to build realistic prediction models using machine learning techniques that can be used by practitioners during the early stages of development with minimal effort.
C1 [Ramakrishnan, Raghu] Tata Consultancy Serv, Noida 201305, India.
   [Ramakrishnan, Raghu; Kaur, Arvinder] Guru Gobind Singh Indraprastha Univ, USICT, Delhi 110076, India.
C3 Tata Sons; Tata Consultancy Services Limited (TCS); GGS Indraprastha
   University
RP Ramakrishnan, R (corresponding author), Tata Consultancy Serv, Noida 201305, India.; Ramakrishnan, R (corresponding author), Guru Gobind Singh Indraprastha Univ, USICT, Delhi 110076, India.
EM raghuramakrishnan71@gmail.com
RI KAUR, ARVINDER/ABH-7358-2020
CR Aggarwal K.K., 2005, SOFTWARE ENG, V2nd
   AHA DW, 1991, MACH LEARN, V6, P37, DOI 10.1023/A:1022689900470
   [Anonymous], 1996, AI REV
   [Anonymous], 2010, WHY WEB PERFORMANCE
   [Anonymous], 1998, CORRELATION BASED FE
   [Anonymous], 2006, RETAIL WEB SITE PERF
   [Anonymous], 1997, PROC 9 EUR C MACH LE
   [Anonymous], 2005, MORGAN KAUFMANN SERI
   [Anonymous], 2015, HERES WHY MORE BANDW
   [Anonymous], 2017, PAINT TIMING
   [Anonymous], 2016, WHY MARKETERS SHOULD
   [Anonymous], 2012, NAVIGATION TIMING
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Bixby J., 2011, REVISITING PERFORMAN
   Bondi AB, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P327, DOI 10.1145/2851553.2858668
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   Breiman L., 2001, Mach. Learn., V45, P5
   Butkiewicz M., 2011, P 2011 ACM SIGCOMM C, P313, DOI 10.1145/2068816.2068846
   Calvano P., 2012, CORRELATING PERFORMA
   Chiew T.K., 2009, THESIS
   Cutler B., 2010, FIREFOX PAGE LOAD SP
   Denaro G., 2004, Software Engineering Notes, V29, P94, DOI 10.1145/974043.974059
   Dixon P., 2009, VELOCITY WEB PERFORM
   Dutton S., UNDERSTANDING LOW BA
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Forouzan B.A., 2007, McGraw-Hill Forouzan Networking Series
   Forrest B., 2009, Bing and Google Agree: Slow Pages Lose Users
   Frank E., 2003, Proceedings of the Conference on Uncertainty in Artificial Intelligence, P249
   Friedman M, 1940, ANN MATH STAT, V11, P86, DOI 10.1214/aoms/1177731944
   Grigorik I., ANAL CRITICAL RENDER
   Grigorik I., 2013, HIGH PERFORMANCE BRO, V1
   Haykin S., 1998, NEURAL NETWORKS COMP
   Hogan L., 2014, Designing for Performance
   HOLMES G, 1999, 12 AUSTR JOINT C ART, V1747, P1
   Iba W., 1992, MACHINE LEARNING P 9, P233
   Jing Z., 2001, CMG J COMPUT RESOURC, V102, P40
   Kaur A, 2013, INT J SOFTW ENG KNOW, V23, P743, DOI 10.1142/S0218194013500198
   Kitchenham B., 1999, ASSESSING PREDICTION
   Kohavi R, 1995, LECT NOTES ARTIF INT, V912, P174
   LI D, 2013, NSDI, P473, DOI DOI 10.1007/978-3-642-33012-4_47
   Li Z., 2010, NSDI 10, P10
   Loosley C., 2000, P 26 INT CMG C
   Malhotra R., 2014, P 8 INT C BIOINSP IN, P320
   Mansell R, 2010, INTERNATIONAL HANDBOOK OF INTERNET RESEARCH, P341, DOI [10.1007/978-1-4020-9789-8_21, 10.1109/COMPSACW.2010.66]
   Menasce D. A., 2001, Capacity Planning for Web Services: Metrics, Models, and Methods
   Menasce D.A., 2004, Performance by design: computer capacity planning by example, DOI DOI 10.5555/995032
   Nagarajan S.N., 2011, ABS12046304 CORR
   Olshefski D, 2004, ACM T COMPUT SYST, V22, P49, DOI 10.1145/966785.966787
   Quinlan J. R., 1992, Proceedings of the 5th Australian Joint Conference on Artificial Intelligence. AI '92, P343
   Ramakrishnan R., 2019, INT J COMPUTER SCI E, V7, P90
   ROUSSEEUW PJ, 1984, J AM STAT ASSOC, V79, P871, DOI 10.2307/2288718
   Salanti G., 2003, THESIS
   Sevcik P., 2006, BUS COMMUN REV
   Smith C.U., 2000, SYSTEM PERFORMANCE E, P383
   Smith ConnieU., 2001, PERFORMANCE SOLUTION
   Souders Steve., 2007, High Performance Web Sites
   Vapnik VN, 1999, IEEE T NEURAL NETWOR, V10, P988, DOI 10.1109/72.788640
   Viscomi R., 2015, USING WEBPAGETEST WE
   Wang Y, 2000, THESIS
   Wang Yong., 2002, ICML 02, P650
   Wei JB, 2011, IEEE T PARALL DISTR, V22, P773, DOI 10.1109/TPDS.2010.131
   Zatwarnicki K., 2012, ESTIMATION WEB PAGE
   Zhou J, 2015, ASIA-PAC J CHEM ENG, V10, P15, DOI 10.1002/apj.1851
   Zhou YM, 2007, J SYST SOFTWARE, V80, P1349, DOI 10.1016/j.jss.2006.10.049
NR 64
TC 3
Z9 3
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2020
VL 123
AR 106307
DI 10.1016/j.infsof.2020.106307
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK1XD
UT WOS:000530651200002
DA 2024-07-18
ER

PT J
AU Banijamali, A
   Pakanen, OP
   Kuvaja, P
   Oivo, M
AF Banijamali, Ahmad
   Pakanen, Olli-Pekka
   Kuvaja, Pasi
   Oivo, Markku
TI Software architectures of the convergence of cloud computing and the
   Internet of Things: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software architecture; Complex systems; Internet of Things (IoT); Cloud
   computing; Fog computing; Edge computing
ID SERVICE MODEL; IOT; DESIGN; FRAMEWORK; IMPLEMENTATION; INTEGRATION;
   PRINCIPLES
AB Context: Over the last few years, there has been an increasing interest in the convergence of cloud computing and the Internet of Things (IoT). Although software systems in this domain have attracted researchers to develop a large body of knowledge on software architecture designs, there is no systematic analysis of this knowledge.
   Objective: This study aims to identify and synthesise state-of-the-art architectural elements including the design patterns, styles, views, quality attributes, and evaluation methodologies in the convergence of cloud computing and IoT.
   Method: We used systematic literature review (SLR) methodology for a detailed analysis of 82 primary studies of a total of 1618 studies.
   Results: We extracted six architectural design patterns in this domain; among them, edge connectivity patterns stand out as the most popular choice. The service-oriented architecture is the most frequently applied style in this context. Among all applicable quality attributes, scalability, timeliness, and security were the most investigated quality attributes. In addition, we included nine cross analyses to address the relationship between architectural patterns, styles, views, and evaluation methodologies with respect to different quality attributes and application areas.
   Conclusions: Our findings indicate that research on software architectures in this domain is increasing. Although few studies were found in which industrial evaluations were presented, industry requires more scientific and empirically validated design frameworks to guide software engineering in this domain. This work provides an overview of the field while identifying areas for future research.
C1 [Banijamali, Ahmad; Pakanen, Olli-Pekka; Kuvaja, Pasi; Oivo, Markku] Univ Oulu, Fac Informat Technol & Elect Engn ITEE, Empir Software Engn Software Syst & Serv M3S, Oulu, Finland.
C3 University of Oulu
RP Banijamali, A (corresponding author), Univ Oulu, Fac Informat Technol & Elect Engn ITEE, Empir Software Engn Software Syst & Serv M3S, Oulu, Finland.
EM ahmad.banijamali@oulu.fi
FU Business Finland
FX This research was supported by the ITEA3-APPSTACLE research project and
   funded by Business Finland.
CR Aazam Mohammad, 2016, IEEE Potentials, V35, P40, DOI 10.1109/MPOT.2015.2456213
   Addo ID, 2014, IEEE INT CONF MO, P108, DOI 10.1109/MobServ.2014.24
   Afzal B, 2019, FUTURE GENER COMP SY, V92, P718, DOI 10.1016/j.future.2017.12.002
   Akbar A, 2015, 2015 IEEE 2ND WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P663, DOI 10.1109/WF-IoT.2015.7389133
   Akpinar K, 2017, 2017 IEEE THIRD INTERNATIONAL CONFERENCE ON MULTIMEDIA BIG DATA (BIGMM 2017), P354, DOI 10.1109/BigMM.2017.71
   Al-Jaroodi J, 2017, IEEE INT CON DIS, P214, DOI 10.1109/ICDCSW.2017.55
   Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Alhakbani Noura, 2014, Internet and Distributed Computing Systems. 7th International Conference, IDCS 2014, Calabria, Italy, September 22-24, 2014. Proceedings: LNCS 8729, P136, DOI 10.1007/978-3-319-11692-1_12
   Alshehri A, 2016, 2016 IEEE 2ND INTERNATIONAL CONFERENCE ON COLLABORATION AND INTERNET COMPUTING (IEEE CIC), P530, DOI [10.1109/CIC.2016.79, 10.1109/CIC.2016.081]
   Anon F, 2014, 2014 IEEE International Conference (iThings) - 2014 IEEE International Conference on Green Computing and Communications (GreenCom) - 2014 IEEE International Conference on Cyber-Physical-Social Computing (CPS), P132, DOI 10.1109/iThings.2014.28
   [Anonymous], 2011, ISO/IEC 25010:2011
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2012, AMCIS 2012 P
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2011, NIST SPECIAL PUBLICA
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], P IEEE 13 INT C BIBE
   [Anonymous], 2011, Genetic and Evolutionary Computing (ICGEC), 2011 Fifth International Conference on
   Arias TBC, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P1, DOI 10.1109/WICSA.2009.5290784
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Atzori L, 2012, COMPUT NETW, V56, P3594, DOI 10.1016/j.comnet.2012.07.010
   Atzori L, 2010, COMPUT NETW, V54, P2787, DOI 10.1016/j.comnet.2010.05.010
   Aziz A, 2015, I SYMPOS LOW POWER E, P1, DOI 10.1109/ISLPED.2015.7273481
   Badampudi D., 2015, P 19 INT C EV ASS SO, P1, DOI [10.1145/2745802.2745818, DOI 10.1145/2745802.2745818]
   Bai TDP, 2015, 2015 3RD INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD (FICLOUD) AND INTERNATIONAL CONFERENCE ON OPEN AND BIG (OBD), P817, DOI 10.1109/FiCloud.2015.23
   Balampanis S, 2016, IEEE CLOUD COMPUT, V3, P28, DOI 10.1109/MCC.2016.128
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Bazeley P., 2013, Qualitative data analysis with NVivo, V2nd, P1
   Belli L, 2015, LECT NOTES COMPUT SC, V9001, P73, DOI 10.1007/978-3-319-16546-2_7
   Bjelica MZ, 2014, 2014 37TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P1061, DOI 10.1109/MIPRO.2014.6859726
   Bonomi F., 2014, Fog Computing: A Platform for Internet of Things and Analytics, P169
   Botta A, 2016, FUTURE GENER COMP SY, V56, P684, DOI 10.1016/j.future.2015.09.021
   Brhel M, 2015, INFORM SOFTWARE TECH, V61, P163, DOI 10.1016/j.infsof.2015.01.004
   Carrega A, 2017, IEEE CLOUD COMPUT, V4, P26, DOI 10.1109/MCC.2017.3791021
   Cavalcante E, 2016, COMPUT COMMUN, V89-90, P17, DOI 10.1016/j.comcom.2016.03.012
   Cecchinel C, 2014, IEEE WORLD CONGR SER, P442, DOI 10.1109/SERVICES.2014.83
   Celesti A, 2016, IEEE 30TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS (WAINA 2016), P93, DOI 10.1109/WAINA.2016.152
   Cervantes H., 2016, Designing software architectures: a practical approach
   Chen SL, 2014, SENSORS-BASEL, V14, P6144, DOI 10.3390/s140406144
   Chen Y, 2017, DEVELOPING SOLID ORAL DOSAGE FORMS: PHARMACEUTICAL THEORY AND PRACTICE, 2ND EDITION, P637, DOI 10.1016/B978-0-12-802447-8.00023-6
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   de Brito MS, 2017, 2017 SECOND INTERNATIONAL CONFERENCE ON FOG AND MOBILE EDGE COMPUTING (FMEC), P127, DOI 10.1109/FMEC.2017.7946419
   Deb D, 2012, 2012 THIRD INTERNATIONAL CONFERENCE ON SERVICES IN EMERGING MARKETS (ICSEM), P115, DOI 10.1109/ICSEM.2012.23
   Dehury CK, 2016, J SYST SOFTWARE, V119, P149, DOI 10.1016/j.jss.2016.06.059
   Di Orio G, 2015, IFIP ADV INF COMM TE, V450, P82, DOI 10.1007/978-3-319-16766-4_9
   Dinh HT, 2013, WIREL COMMUN MOB COM, V13, P1587, DOI 10.1002/wcm.1203
   Distefano S., 2012, 2012 Sixth International Conference on Innovative Mobile and Internet Services in Ubiquitous Computing (IMIS 2012), P858, DOI 10.1109/IMIS.2012.61
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Erl T, 2005, SERVICE ORIENTED ARC
   Essameldin A, 2017, SMARTOBJECTS'17: PROCEEDINGS OF THE 3RD WORKSHOP ON EXPERIENCES WITH THE DESIGN AND IMPLEMENTATION OF SMART OBJECTS, P13, DOI 10.1145/3127502.3127508
   Fazio M, 2015, 2015 IEEE SYMPOSIUM ON COMPUTERS AND COMMUNICATION (ISCC), P264, DOI 10.1109/ISCC.2015.7405526
   Fiosina Jelena., 2013, J TEKNOL, V63
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Formisano C, 2015, 2015 3RD INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD (FICLOUD) AND INTERNATIONAL CONFERENCE ON OPEN AND BIG (OBD), P325, DOI 10.1109/FiCloud.2015.85
   Fortino G, 2014, INT C COMP SUPP COOP, P493, DOI 10.1109/CSCWD.2014.6846894
   Fox G. C., 2012, 2012 International Conference on Collaboration Technologies and Systems (CTS), P6, DOI 10.1109/CTS.2012.6261020
   Gökalp MO, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P459, DOI 10.1109/SEAA.2015.61
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Guinard D, 2010, IEEE T SERV COMPUT, V3, P223, DOI 10.1109/TSC.2010.3
   Haghighatkhah A, 2017, IEEE SOFTWARE, V34, P82, DOI 10.1109/MS.2017.3571571
   Haghighatkhah A, 2017, J SYST SOFTWARE, V128, P25, DOI 10.1016/j.jss.2017.03.005
   Haijun Gu, 2011, 2011 International Conference on Electronic & Mechanical Engineering and Information Technology (EMEIT 2011), P3919, DOI 10.1109/EMEIT.2011.6023915
   He W, 2014, IEEE T IND INFORM, V10, P1587, DOI 10.1109/TII.2014.2299233
   Jalali R, 2015, INT CONF INTELL NEXT, P108, DOI 10.1109/ICIN.2015.7073815
   Jamshidi P, 2013, IEEE T CLOUD COMPUT, V1, P142, DOI 10.1109/TCC.2013.10
   Janggwan Im, 2013, 2013 IEEE International Conference on Services Computing (SCC), P462, DOI 10.1109/SCC.2013.68
   Jiang LH, 2014, IEEE T IND INFORM, V10, P1443, DOI 10.1109/TII.2014.2306384
   Kelaidonis D, 2016, 2016 EUROPEAN CONFERENCE ON NETWORKS AND COMMUNICATIONS (EUCNC), P230
   Khan AM, 2017, INT CONF CLOUD COMP, P223, DOI 10.1109/CloudCom.2017.50
   Khodadadi Farzad, 2015, 2015 IEEE Tenth International Conference on Intelligent Sensors, Sensor Networks and Information Processing (ISSNIP), P1, DOI 10.1109/ISSNIP.2015.7106952
   Kitchenham Barbara, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P46, DOI 10.1049/ic.2011.0006
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kopetz, 2011, REAL-TIME SYST, DOI [10.1007/978-1-4419-8237-7_13, DOI 10.1007/978-1-4419-8237-7, DOI 10.1007/978-1-4419-8237-7_13]
   Kor AL, 2016, PROCEEDINGS OF 2016 FUTURE TECHNOLOGIES CONFERENCE (FTC), P739, DOI 10.1109/FTC.2016.7821687
   Kortuem G, 2010, IEEE INTERNET COMPUT, V14, P44, DOI 10.1109/MIC.2009.143
   Kranz Matthias., 2010, What can the Internet of Things do for the Citizen (CIoT) Workshop at The Eighth International Conference on Pervasive Computing (Pervasive 2010), P1
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Krylovskiy A, 2015, 2015 3RD INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD (FICLOUD) AND INTERNATIONAL CONFERENCE ON OPEN AND BIG (OBD), P25, DOI 10.1109/FiCloud.2015.55
   Kyriazopoulou C, 2015, SMARTGREENS 2015 PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON SMART CITIES AND GREEN ICT SYSTEMS, P5
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Li F, 2013, IEEE INT CONF CLOUD, P740, DOI 10.1109/CLOUD.2013.64
   Liu L, 2012, COMM COM INF SC, V312, P559
   Madakam Somayya., 2015, Journal of Computer and Communications, V3, P164
   Majumdar S, 2016, 2016 IEEE FIRST INTERNATIONAL CONFERENCE ON CONTROL, MEASUREMENT AND INSTRUMENTATION (CMI), P162, DOI 10.1109/CMI.2016.7413731
   Manate B, 2014, UKSIM-AMSS EIGHTH EUROPEAN MODELLING SYMPOSIUM ON COMPUTER MODELLING AND SIMULATION (EMS 2014), P372, DOI 10.1109/EMS.2014.36
   Medvidovic N., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P471, DOI 10.1145/1810295.1810435
   Mell P, 2010, COMMUN ACM, V53, P50
   Merlino G, 2015, IEEE 12TH INT CONF UBIQUITOUS INTELLIGENCE & COMP/IEEE 12TH INT CONF ADV & TRUSTED COMP/IEEE 15TH INT CONF SCALABLE COMP & COMMUN/IEEE INT CONF CLOUD & BIG DATA COMP/IEEE INT CONF INTERNET PEOPLE AND ASSOCIATED SYMPOSIA/WORKSHOPS, P909, DOI 10.1109/UIC-ATC-ScalCom-CBDCom-IoP.2015.174
   Miorandi D, 2012, AD HOC NETW, V10, P1497, DOI 10.1016/j.adhoc.2012.02.016
   Misura K, 2014, 2014 37TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P1052, DOI 10.1109/MIPRO.2014.6859724
   Mohammed J, 2014, 2014 IEEE International Conference (iThings) - 2014 IEEE International Conference on Green Computing and Communications (GreenCom) - 2014 IEEE International Conference on Cyber-Physical-Social Computing (CPS), P256, DOI 10.1109/iThings.2014.45
   Nastic S, 2015, IEEE INT CONF MOB CL, P24, DOI 10.1109/MobileCloud.2015.38
   Nastic S, 2014, 2014 INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD (FICLOUD), P288, DOI 10.1109/FiCloud.2014.52
   Nastic S, 2013, IEEE INT CONF SERV, P53, DOI 10.1109/SOCA.2013.48
   Oprea Simona, 2017, Informatica Economica, V21, P59, DOI 10.12948/issn14531305/21.4.2017.05
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Perera C, 2014, P ANN HICSS, P1053, DOI 10.1109/HICSS.2014.137
   Perera C, 2014, T EMERG TELECOMMUN T, V25, P81, DOI 10.1002/ett.2704
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petrolo Riccardo., 2014, P 2014 ACM INT WORKS, P61, DOI [10.1145/2633661.2633667, DOI 10.1145/2633661.2633667]
   Pizzolli D, 2016, INT CONF CLOUD COMP, P476, DOI [10.1109/CloudCom.2016.80, 10.1109/CloudCom.2016.0082]
   Preventis A, 2016, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, VOL 2 (CLOSER), P146, DOI 10.5220/0005912001460153
   Rao BBP, 2012, I CONF SENS TECHNOL, P374, DOI 10.1109/ICSensT.2012.6461705
   Ray Partha Pratim, 2016, Future Computing and Informatics Journal, V1, P35, DOI 10.1016/j.fcij.2017.02.001
   Rimal Bhaskar Prasad, 2009, Proceedings of the 2009 Fifth International Joint Conference on INC, IMS and IDC, P44, DOI 10.1109/NCM.2009.218
   Rozanski Nick, 2012, Software systems architecture: working with stakeholders using viewpoints and perspectives, V2nd
   Selonen P, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P250, DOI 10.1109/SEAA.2016.10
   Seo D, 2015, CLUSTER COMPUT, V18, P599, DOI 10.1007/s10586-014-0415-7
   Serrano D, 2016, 2016 IEEE 3RD WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P661, DOI 10.1109/WF-IoT.2016.7845419
   Sharma A, 2015, 2015 IEEE 2ND WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P274, DOI 10.1109/WF-IoT.2015.7389065
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Sheng X, 2013, IEEE SENS J, V13, P3733, DOI 10.1109/JSEN.2013.2262677
   Simmon E, 2015, IT PROF, V17, P40, DOI 10.1109/MITP.2015.51
   Soldatos J, 2015, LECT NOTES COMPUT SC, V9001, P13, DOI 10.1007/978-3-319-16546-2_3
   Staron M., 2017, Automotive Software Architectures
   Suciu G, 2015, J MED SYST, V39, DOI 10.1007/s10916-015-0327-y
   Syed MH, 2016, PROCEEDINGS OF THE 10TH TRAVELLING CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (VIKINGPLOP'16), DOI 10.1145/3022636.3022649
   Tao F, 2019, INT J PROD RES, V57, P3935, DOI 10.1080/00207543.2018.1443229
   Tao F, 2018, INT J ADV MANUF TECH, V94, P3563, DOI 10.1007/s00170-017-0233-1
   Thames L, 2016, PROC CIRP, V52, P12, DOI 10.1016/j.procir.2016.07.041
   Tighe M, 2013, INT CONF NETW SER, P166, DOI 10.1109/CNSM.2013.6727830
   Truong HL, 2015, IEEE CLOUD COMPUT, V2, P68, DOI 10.1109/MCC.2015.23
   Uckelmann D, 2011, ARCHITECTING THE INTERNET OF THINGS, P1
   van Latum F, 1998, IEEE SOFTWARE, V15, P78, DOI 10.1109/52.646887
   van Solingen D.R., 1999, GOAL QUESTION METRIC
   Wang Jue, 2011, Sarcoma, V2011, P1, DOI 10.1155/2011/450743
   Wei N, 2015, INT CONF MEAS, P585, DOI 10.1109/ICMTMA.2015.147
   Whitmore A, 2015, INFORM SYST FRONT, V17, P261, DOI 10.1007/s10796-014-9489-2
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C., 2012, Experimentation in Software Engineering
   Wohlin C, 2015, EMPIR SOFTW ENG, V20, P1427, DOI 10.1007/s10664-014-9319-7
   Wohlin C, 2013, J SYST SOFTWARE, V86, P2594, DOI 10.1016/j.jss.2013.04.076
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Xiaojing Ye, 2011, Proceedings of the 2011 International Conference on Computer Science and Network Technology (ICCSNT), P894, DOI 10.1109/ICCSNT.2011.6182105
   Xu LD, 2014, IEEE T IND INFORM, V10, P2233, DOI 10.1109/TII.2014.2300753
   Yang MK, 2017, CHINA COMMUN, V14, P180, DOI 10.1109/CC.2017.8107642
   Yigitoglu E, 2017, 2017 IEEE 2ND INTERNATIONAL CONGRESS ON INTERNET OF THINGS (IEEE ICIOT), P58, DOI 10.1109/IEEE.ICIOT.2017.16
   Yuan D, 2015, INT C COMP SUPP COOP, P349, DOI 10.1109/CSCWD.2015.7230984
   Zamawe FC, 2015, MALAWI MED J, V27, P13, DOI 10.4314/mmj.v27i1.4
   Zanella A, 2014, IEEE INTERNET THINGS, V1, P22, DOI 10.1109/JIOT.2014.2306328
   Zhang H, 2013, INFORM SOFTWARE TECH, V55, P1341, DOI 10.1016/j.infsof.2012.09.008
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zorzi M, 2010, IEEE WIREL COMMUN, V17, P44, DOI 10.1109/MWC.2010.5675777
NR 154
TC 18
Z9 19
U1 3
U2 77
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2020
VL 122
AR 106271
DI 10.1016/j.infsof.2020.106271
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LC4TR
UT WOS:000525318800001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Yaman, S
   Fagerholm, F
   Munezero, M
   Männistö, T
   Mikkonen, T
AF Yaman, Sezin
   Fagerholm, Fabian
   Munezero, Myriam
   Mannisto, Tomi
   Mikkonen, Tommi
TI Patterns of user involvement in experiment-driven software development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID STRATEGIES; USABILITY
AB Background: Experiments are often used as a means to continuously validate user needs and to aid in making software development decisions. Involving users in the development of software products benefits both the users and companies. How software companies efficiently involve users in both general development and in experiments remains unclear; however, it is especially important to determine the perceptions and attitudes held by practitioners in different roles in these companies.
   Objective: We seek to: 1) explore how software companies involve users in software development and experimentation; 2) understand how developer, manager and UX designer roles perceive and involve users in experimentation; and 3) uncover systematic patterns in practitioners' views on user involvement in experimentation. The study aims to reveal behaviors and perceptions that could support or undermine experiment-driven development, point out what skills could enhance experiment-driven development, and raise awareness of such issues for companies that wish to adopt experiment-driven development.
   Methods: We conducted a survey within four Nordic software companies, inviting practitioners in three major roles: developers, managers, and UX designers. We asked the respondents to indicate how they involve users in their job function, as well as their perspectives regarding software experiments and ethics.
   Results and Conclusion: We identified six patterns describing experimentation and user involvement. For instance, managers were associated with a cautious user notification policy, that is, to always let users know of an experiment they are subject to, and they also believe that users have to be convinced before taking part in experiments. We discovered that, due to lack of clear processes for involving users and the lack of a common understanding of ethics in experimentation, practitioners tend to rationalize their perceptions based on their own experiences. Our patterns were based on empirical evidence and they can be evaluated in different populations and contexts.
C1 [Yaman, Sezin] KPMG Finland, Toolonlandenkatu 3B, Helsinki 00101, Finland.
   [Fagerholm, Fabian; Munezero, Myriam; Mannisto, Tomi; Mikkonen, Tommi] Univ Helsinki, Dept Comp Sci, Helsinki, Finland.
C3 University of Helsinki
RP Yaman, S (corresponding author), KPMG Finland, Toolonlandenkatu 3B, Helsinki 00101, Finland.
EM sezin.yaman@helsinki.fi; fabian.fagerholm@helsinki.fi;
   myriam.munezero@helsinki.fi; tomi.mannisto@helsinki.fi;
   tommi.mikkonen@helsinki.fi
RI Fagerholm, Fabian/B-1952-2015; Männistö, Tomi/ABC-7781-2021
OI Fagerholm, Fabian/0000-0002-7298-3021; Männistö,
   Tomi/0000-0001-7470-5183; Mikkonen, Tommi/0000-0002-8540-9918
FU Extreme Continuous Experimentation in Software Engineering (xCESE)
   Project (Academy of Finland) [317657]; Academy of Finland (AKA) [317657]
   Funding Source: Academy of Finland (AKA)
FX We thank Dr. Anton Antonov for his suggestions on ARL analysis.; The
   research leading to this publication has received funding from the
   Extreme Continuous Experimentation in Software Engineering (xCESE)
   Project (Academy of Finland, project number 317657).
CR Abelein U, 2015, EMPIR SOFTW ENG, V20, P28, DOI 10.1007/s10664-013-9278-4
   Agrawal R., P 20 INT C VERY LARG
   [Anonymous], 2014, RCOSE 2014 P
   [Anonymous], 2017, PEARSON CORRELATION
   [Anonymous], [No title captured]
   [Anonymous], 2008, Guide to Advanced Empirical Software Engineering, DOI 10.1007/978-1-84800-044-5_9
   Basili VR, 1996, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.1996.493439
   Bjork J., 2013, From Start-Ups to SaaS Conglomerate: Life Cycles of Software Products Workshop (IWLCSP 2013), P19
   Bosch J, 2012, LECT NOTES BUS INF P, V114, P27
   Bradburn N., 2004, ASKING QUESTIONS DEF
   Braun V, 2021, QUAL RES PSYCHOL, V18, P328, DOI 10.1080/14780887.2020.1769238
   CALLAN VJ, 1993, WORK STRESS, V7, P63, DOI 10.1080/02678379308257050
   Creswell W., 2009, Research design: Qualitative, quantitative, and mixed methods approaches, V3rd, DOI DOI 10.1063/1.1150549
   Fabijan A, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P18, DOI 10.1109/SEAA.2017.47
   Fabijan A, 2015, LECT NOTES BUS INF P, V210, P139, DOI 10.1007/978-3-319-19593-3_12
   Fagerholm F, 2017, J SYST SOFTWARE, V123, P292, DOI 10.1016/j.jss.2016.03.034
   Gliem J.A., 2003, P MIDWEST RES TO PRA
   GOULD JD, 1985, COMMUN ACM, V28, P300, DOI 10.1145/3166.3170
   GRUDIN J, 1992, INTERACT COMPUT, V4, P209, DOI 10.1016/0953-5438(92)90005-Z
   Gutbrod M, 2017, LECT NOTES COMPUT SC, V10611, P297, DOI 10.1007/978-3-319-69926-4_21
   Hastie T., 2009, ELEMENTS STAT LEARNI
   Järvinen J, 2014, LECT NOTES BUS INF P, V182, P58
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kohavi R, 2009, DATA MIN KNOWL DISC, V18, P140, DOI 10.1007/s10618-008-0114-1
   Kujala S, 2003, BEHAV INFORM TECHNOL, V22, P1, DOI 10.1080/0144929021000055530
   Lindgren E, 2015, LECT NOTES BUS INF P, V212, P117, DOI 10.1007/978-3-319-18612-2_10
   Mattos DI, 2018, LECT NOTES BUS INF P, V314, P277, DOI 10.1007/978-3-319-91602-6_20
   Muller M.J., 1997, Handbook of human-computer interaction
   Olsson HH, 2012, EUROMICRO CONF PROC, P392, DOI 10.1109/SEAA.2012.54
   Olsson Helena Holmstrom, 2015, P 3 INT WORKSHOP LAR, P3
   Ries E, 2011, The Lean Startup
   Rissanen O, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P12, DOI 10.1109/RCoSE.2015.10
   Ros R, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P35, DOI 10.1145/3194760.3194766
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Tang D., 2010, P 16 ACM SIGKDD INT, P17, DOI [DOI 10.1145/1835804.1835810, 10.1145/1835804.1835810]
   TSALIKIS J, 1989, J BUS ETHICS, V8, P695, DOI 10.1007/BF00384207
   Wei PF, 2015, RELIAB ENG SYST SAFE, V142, P399, DOI 10.1016/j.ress.2015.05.018
   Yaman S, 2017, INT SYMP EMP SOFTWAR, P199, DOI 10.1109/ESEM.2017.31
   Yaman SG, 2017, J SYST SOFTWARE, V133, P195, DOI 10.1016/j.jss.2017.07.009
   Yaman SG, 2016, LECT NOTES COMPUT SC, V10027, P344, DOI 10.1007/978-3-319-49094-6_22
   Yaman SG, 2016, LECT NOTES COMPUT SC, V9619, P249, DOI 10.1007/978-3-319-30282-9_18
   YU J, 1983, J MARKETING RES, V20, P36, DOI 10.2307/3151410
NR 42
TC 3
Z9 3
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2020
VL 120
AR 106244
DI 10.1016/j.infsof.2019.106244
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA KM6FK
UT WOS:000514233800003
OA hybrid
DA 2024-07-18
ER

PT J
AU Hu, DY
   Zhang, Y
   Chang, JS
   Yin, G
   Yu, Y
   Wang, T
AF Hu, Dongyang
   Zhang, Yang
   Chang, Junsheng
   Yin, Gang
   Yu, Yue
   Wang, Tao
TI Multi-reviewing pull-requests: An exploratory study on GitHub OSS
   projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Multi-reviewing; Pull-requests; GitHub
AB Context: GitHub has enabled developers to easily contribute their review comments on multiple pull-requests and switch their review focus between different pull-requests, Le., multi-reviewing. Reviewing multiple pull-requests simultaneously may enhance work efficiency. However, multi-reviewing also relies on developers' rationally allocating their focus, which may bring a different influence to the resolution of pull-requests.
   Objective: In this paper, we present an ongoing study of the impact of multi-reviewing on pull-request resolution in GitHub open source projects.
   Method: We collected and analyzed 1,836,280 pull-requests from 760 GitHub projects to explore how multi-reviewing affects the resolution of a pull-request.
   Results: We find that multi-reviewing is a common behavior in GitHub. However, more multi-reviewing behaviors tend to bring longer pull-request resolution latency.
   Conclusion: Multi-reviewing is a complex behavior of developers, and has an important impact on the efficiency of pull-request resolution. Our study motivates the need for more research on multi-reviewing.
C1 [Hu, Dongyang; Zhang, Yang; Chang, Junsheng; Yin, Gang; Yu, Yue; Wang, Tao] Natl Univ Def Technol, Sci & Technol Parallel & Distributed Proc Lab, Changsha, Hunan, Peoples R China.
C3 National University of Defense Technology - China
RP Hu, DY (corresponding author), Natl Univ Def Technol, Sci & Technol Parallel & Distributed Proc Lab, Changsha, Hunan, Peoples R China.
EM hudongyang17@163.com; yangzhang15@nudt.edu.cn
RI Yu, Yue/AAN-1852-2021
OI Wang, Tao/0000-0002-8406-8672
FU Laboratory of Software Engineering for Complex Systems; National Grand
   RD Plan [2018YFB1004202]; National Natural Science Foundation of China
   [61702534]
FX This work was supported by Laboratory of Software Engineering for
   Complex Systems as well as the National Grand R&D Plan (Grant no.
   2018YFB1004202), and the National Natural Science Foundation of China
   (Grant no. 61702534).
CR Adler RF, 2012, INT J HUM-COMPUT ST, V70, P156, DOI 10.1016/j.ijhcs.2011.10.003
   Aggarwal K., 2014, P 11 WORKING C MININ, P360, DOI [10.1145/2597073.2597120, DOI 10.1145/2597073.2597120]
   [Anonymous], PROC INT CONF SOFTW
   Arcuri A, 2008, IEEE C EVOL COMPUTAT, P162, DOI 10.1109/CEC.2008.4630793
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Silvius AJG, 2015, PROCEDIA COMPUT SCI, V64, P334, DOI 10.1016/j.procs.2015.08.497
   York R, 2012, SOC SCI RES, V41, P1379, DOI 10.1016/j.ssresearch.2012.05.014
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
NR 10
TC 5
Z9 5
U1 3
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2019
VL 115
BP 1
EP 4
DI 10.1016/j.infsof.2019.07.004
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IX7GL
UT WOS:000485851700001
DA 2024-07-18
ER

PT J
AU Blincoe, K
   Harrison, F
   Kaur, N
   Damian, D
AF Blincoe, Kelly
   Harrison, Francis
   Kaur, Navpreet
   Damian, Daniela
TI Reference Coupling: An exploration of inter-project technical
   dependencies and their characteristics within large software ecosystems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software ecosystems; Reference coupling; Software dependencies;
   Technical dependencies; Inter-project dependencies; Cross references;
   Socio-technical
ID COMMUNITY; EVOLUTION
AB Context: Software projects often depend on other projects or are developed in tandem with other projects. Within such software ecosystems, knowledge of cross-project technical dependencies is important for (1) practitioners understanding of the impact of their code change and coordination needs within the ecosystem and (2) researchers in exploring properties of software ecosystems based on these technical dependencies. However, identifying technical dependencies at the ecosystem level can be challenging.
   Objective: In this paper, we describe Reference Coupling, a new method that uses solely the information in developers online interactions to detect technical dependencies between projects. The method establishes dependencies through user-specified cross-references between projects. We then use the output of this method to explore the properties of large software ecosystems.
   Method: We validate our method on two datasets - one from open-source projects hosted on GitHub and one commercial dataset of IBM projects. We manually analyze the identified dependencies, categorize them, and compare them to dependencies specified by the development team. We examine the types of projects involved in the identified ecosystems, the structure of the identified ecosystems, and how the ecosystems structure compares with the social behavior of project contributors and owners.
   Results: We find that our Reference Coupling method often identifies technical dependencies between projects that are untracked by developers. We describe empirical insights about the characteristics of large software ecosystems. We find that most ecosystems are centered around one project and are interconnected with other ecosystems. By exploring the socio-technical alignment within the GitHub ecosystems, we also found that the project owners social behavior aligns well with the technical dependencies within the ecosystem, but the project contributors social behavior does not align with these dependencies.
   Conclusions: We conclude with a discussion on future research that is enabled by our Reference Coupling method.
C1 [Blincoe, Kelly] Univ Auckland, Auckland, New Zealand.
   [Harrison, Francis; Kaur, Navpreet; Damian, Daniela] Univ Victoria, Victoria, BC, Canada.
C3 University of Auckland; University of Victoria
RP Blincoe, K (corresponding author), Univ Auckland, Auckland, New Zealand.
EM kblincoe@acm.org; francish@uvic.ca; nkaur@uvic.ca; danielad@uvic.ca
RI Blincoe, Kelly/AAI-6285-2020
OI Blincoe, Kelly/0000-0003-4092-9706
FU NSERC Canada [2016-05257]
FX This work was partly funded by NSERC Canada (grant no. #2016-05257).
   Thanks to Sunny Wang and Diksha Sharma for their assistance in the
   manual content analysis.
CR [Anonymous], 2011, IWSECO@ ICSOB
   [Anonymous], 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering (ASE'10)
   [Anonymous], 2009, Reverse engineering software ecosystems
   Bastian M., 2009, P INT AAAI C WEBL SO, V3, P361
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1275, DOI 10.1007/s10664-014-9325-9
   Blincoe K., 2013, Proc. 9th Joint Meeting on Foundations of Software Engineering (ESEC/FSE 13), P213, DOI DOI 10.1145/2491411.2491440
   Blincoe K, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P202, DOI 10.1109/MSR.2015.26
   Blincoe K, 2015, IFIP ADV INF COMM TE, V451, P35, DOI 10.1007/978-3-319-17837-0_4
   Blondel VD, 2008, J STAT MECH-THEORY E, DOI 10.1088/1742-5468/2008/10/P10008
   Bosch Jan, 2009, 2009 13 INT SOFTW PR, V9, P111, DOI DOI 10.1145/1753235.1753251
   Businge J, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P368, DOI 10.1109/ICSM.2012.6405295
   CONWAY ME, 1968, DATAMATION, V14, P28
   Corbin J., 2015, BASICS QUALITATIVE R
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   Dhungana I., 2010, 4 EUR C SOFTW ARCHIT, P96
   Franco-Bedoya O, 2017, INFORM SOFTWARE TECH, V91, P160, DOI 10.1016/j.infsof.2017.07.007
   Freelon D, 2013, INT J INTERNET SCI, V8, P10
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   German DM, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P140, DOI 10.1109/WCRE.2007.5
   Goeminne M., 2010, IWPSE-EVOL '10, P42, DOI DOI 10.1145/1862372.1862384
   Gonzalez-Barahona JM, 2009, EMPIR SOFTW ENG, V14, P262, DOI 10.1007/s10664-008-9100-x
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Jansen S, 2014, INFORM SOFTWARE TECH, V56, P1508, DOI 10.1016/j.infsof.2014.04.006
   Jansen S, 2009, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE-COMPANION.2009.5070978
   Kabbedijk J, 2011, LECT NOTES BUS INF P, V80, P44
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kleinberg JM, 1999, J ACM, V46, P604, DOI 10.1145/324133.324140
   Lungu M, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P103, DOI 10.1109/MSR.2009.5069487
   Lungu M, 2008, PROC IEEE INT CONF S, P428, DOI 10.1109/ICSM.2008.4658096
   Manikas K, 2016, LECT NOTES BUS INF P, V240, P63, DOI 10.1007/978-3-319-40515-5_5
   Manikas K, 2013, J SYST SOFTWARE, V86, P1294, DOI 10.1016/j.jss.2012.12.026
   Mens T., 2017, 16 BELG NETH SOFTW E, P7
   Mockus A, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P11, DOI 10.1109/MSR.2009.5069476
   Molloy M., 1999, ELECTRON J COMB, V6, P2
   Neuendorf K., 2002, The content analysis guidebook
   Newman MEJ, 2006, P NATL ACAD SCI USA, V103, P8577, DOI 10.1073/pnas.0601602103
   Oracle, JAV PLATF STAND ED 7
   Ossher Joel, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P130, DOI 10.1109/MSR.2010.5463346
   Paulson JW, 2004, IEEE T SOFTWARE ENG, V30, P246, DOI 10.1109/TSE.2004.1274044
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Santana F. W., 2013, P 5 IWSECO, V987, P7
   Syed S., 2013, P 5 INT WORKSHOP SOF, V987, P19
   Syeed M., 2014, P INT S OP COLL, P2
   Thung F, 2013, EUR CON SFTWR MTNCE, P323, DOI 10.1109/CSMR.2013.41
   Yu Y., 2014, P 1 INT WORKSH CROWD, P31
   Zhang Y, 2018, SOFTWAREMINING '18: PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON SOFTWARE MINING, P12, DOI 10.1145/3242887.3242891
NR 47
TC 10
Z9 10
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2019
VL 110
BP 174
EP 189
DI 10.1016/j.infsof.2019.03.005
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HU1RI
UT WOS:000465049100013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Azeem, MI
   Palomba, F
   Shi, L
   Wang, Q
AF Azeem, Muhammad Ilyas
   Palomba, Fabio
   Shi, Lin
   Wang, Qing
TI Machine learning techniques for code smell detection: A systematic
   literature review and meta-analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Code smells; Machine learning; Systematic literature review
ID SOFTWARE; PREDICTION; METRICS; IMPACT; MODELS; BAD
AB Background: Code smells indicate suboptimal design or implementation choices in the source code that often lead it to be more change- and fault-prone. Researchers defined dozens of code smell detectors, which exploit different sources of information to support developers when diagnosing design flaws. Despite their good accuracy, previous work pointed out three important limitations that might preclude the use of code smell detectors in practice: (i) subjectiveness of developers with respect to code smells detected by such tools, (ii) scarce agreement between different detectors, and (iii) difficulties in finding good thresholds to be used for detection. To overcome these limitations, the use of machine learning techniques represents an ever increasing research area.
   Objective: While the research community carefully studied the methodologies applied by researchers when defining heuristic-based code smell detectors, there is still a noticeable lack of knowledge on how machine learning approaches have been adopted for code smell detection and whether there are points of improvement to allow a better detection of code smells. Our goal is to provide an overview and discuss the usage of machine learning approaches in the field of code smells.
   Method: This paper presents a Systematic Literature Review (SLR) on Machine Learning Techniques for Code Smell Detection. Our work considers papers published between 2000 and 2017. Starting from an initial set of 2456 papers, we found that 15 of them actually adopted machine learning approaches. We studied them under four different perspectives: (i) code smells considered, (ii) setup of machine learning approaches, (iii) design of the evaluation strategies, and (iv) a meta-analysis on the performance achieved by the models proposed so far.
   Results: The analyses performed show that God Class, Long Method, Functional Decomposition, and Spaghetti Code have been heavily considered in the literature. DECISION TREES and SUPPORT VECTOR MACHINES are the most commonly used machine learning algorithms for code smell detection. Models based on a large set of independent variables have performed well. JRIP and RANDOM FOREST are the most effective classifiers in terms of performance. The analyses also reveal the existence of several open issues and challenges that the research community should focus on in the future.
   Conclusion: Based on our findings, we argue that there is still room for the improvement of machine learning techniques in the context of code smell detection. The open issues emerged in this study can represent the input for researchers interested in developing more powerful techniques.
C1 [Azeem, Muhammad Ilyas; Shi, Lin; Wang, Qing] Chinese Acad Sci, Inst Software, Lab Internet Software Technol, Beijing 100190, Peoples R China.
   [Azeem, Muhammad Ilyas; Shi, Lin; Wang, Qing] Univ Chinese Acad Sci, Beijing 100049, Peoples R China.
   [Wang, Qing] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing 100190, Peoples R China.
   [Palomba, Fabio] Univ Zurich, Zurich, Switzerland.
C3 Chinese Academy of Sciences; Institute of Software, CAS; Chinese Academy
   of Sciences; University of Chinese Academy of Sciences, CAS; Chinese
   Academy of Sciences; Institute of Software, CAS; University of Zurich
RP Azeem, MI (corresponding author), Lab Internet Software Technol, St 4,Zhongguancun Beijing, Beijing 100190, Peoples R China.
EM azeem@itechs.iscas.ac.cn; palomba@ifi.uzh.ch; shilin@itechs.iscas.ac.cn;
   wq@itechs.iscas.ac.cn
RI wang, qi/ITT-9652-2023
OI Shi, Lin/0000-0003-1476-7213; Palomba, Fabio/0000-0001-9337-5116; Azeem,
   Muhammad Ilyas/0000-0002-0639-0359
FU National Natural Science Foundation of China [61432001, 61802374];
   CAS-TWAS; Swiss National Science Foundation through the SNF
   [PP00P2_170529]
FX This work is supported by National Natural Science Foundation of China
   under Grant No. 61432001 and 61802374. The first author of this paper is
   sponsored by the CAS-TWAS President's Fellowship for International Ph.D.
   students. Palomba gratefully acknowledges the support of the Swiss
   National Science Foundation through the SNF Project No. PP00P2_170529.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Alpaydin E, 2014, ADAPT COMPUT MACH LE, P1
   [Anonymous], 2018, EMPIR SOFTW ENG
   [Anonymous], 2016, 2016 IEEE 24th International Conference on Program Comprehension (ICPC)
   Antoine J.Y., 2014, P 14 C EUR CHAPT ASS, P550, DOI DOI 10.3115/V1/E14-1058
   Arcoverde R., 2011, WORKSH REF TOOLS, P33
   Avgeriou P., 2016, DAGSTUHL SEMINAR 161, V6
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bland JM, 2000, BRIT MED J, V320, P1468, DOI 10.1136/bmj.320.7247.1468
   Borenstein M, 2010, RES SYNTH METHODS, V1, P97, DOI 10.1002/jrsm.12
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Candela I, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2928268
   Catolino G., 2018, J SYST SOFTW
   Catolino G, 2018, 2018 IEEE WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE), P25, DOI 10.1109/MALTESQUE.2018.8368455
   Catolino G, 2017, INT C PROGRAM COMPRE, P186, DOI 10.1109/ICPC.2017.19
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cooper H., 2009, The handbook of research synthesis and meta-analysis, V2nd
   Corazza A, 2013, EMPIR SOFTW ENG, V18, P506, DOI 10.1007/s10664-011-9187-3
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Cunningham W., 1993, OOPS MESSENGER, V4, P29, DOI DOI 10.1145/157710.157715
   Devijver P. A., 1982, PATTERN RECOGNITION, V265
   Di Nucci D, 2018, INT WORK REAL ARTIF, P48, DOI 10.1145/3194104.3194112
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Di Nucci D, 2017, IEEE TETCI, V1, P202, DOI 10.1109/TETCI.2017.2699224
   DiNucci D., 2017, IEEE T SOFTW ENG
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Field AP, 2001, PSYCHOL METHODS, V6, P161, DOI 10.1037//1082-989X.6.2.161
   Figueiredo E., 2011, P 10 INT C ASP OR SO, P81
   Figueiredo E, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P183
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P609, DOI 10.1109/SANER.2016.84
   Fontana FA, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P16, DOI 10.1109/MTD.2015.7332620
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Gasparic M, 2016, J SYST SOFTWARE, V113, P101, DOI 10.1016/j.jss.2015.11.036
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   GREENLAND S, 1992, AM J EPIDEMIOL, V135, P1301, DOI 10.1093/oxfordjournals.aje.a116237
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hall T, 2011, IEEE SOFTWARE, V28, P96, DOI 10.1109/MS.2011.138
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   Hosseini S., 2018, IEEE T SOFTWARE ENG, DOI [10.1109/TSE.2017.27701241-1, DOI 10.1109/TSE.2017.27701241-1]
   Hsu C.-W., 2003, TECH REP, DOI [DOI 10.1177/02632760022050997, 10 . 1177 / 02632760022050997]
   Khan SU, 2014, IET SOFTW, V8, P161, DOI 10.1049/iet-sen.2013.0012
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B.A., 2015, EVIDENCE BASED SOFTW, V4
   Kovalenko V, 2018, IEEE INT CONF AUTOM, P202, DOI 10.1145/3238147.3238169
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Lipsey M. W., 2001, PRACTICAL METAANALYS, DOI DOI 10.1016/J.AUTNEU.2007.06.087
   Lozano Angelo., 2007, Ninth International Workshop on Principles of software evolution, P31
   Mäntylä MV, 2006, EMPIR SOFTW ENG, V11, P395, DOI 10.1007/s10664-006-9002-8
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Moha N., IEEE T SOFTW ENG, V36
   Morales R, 2017, J SYST SOFTWARE, V128, P236, DOI 10.1016/j.jss.2016.05.042
   Munro MJ, 2005, 2005 11th International Symposium on Software Metrics (METRICS), P124
   Nunez-Varela AS, 2017, J SYST SOFTWARE, V128, P164, DOI 10.1016/j.jss.2017.03.044
   Padilha J, 2014, LECT NOTES COMPUT SC, V8484, P656, DOI 10.1007/978-3-319-07881-6_44
   Palomba F., 2019, IEEE T SOFTW ENG
   Palomba F, 2016, P 25 INT S SOFTW TES, P130, DOI [10.1145/2931037.2931057, DOI 10.1145/2931037.2931057]
   Palomba F., 2019, J EMPIRICAL SOFTWARE
   Palomba F, 2019, IEEE T SOFTWARE ENG, V45, P194, DOI 10.1109/TSE.2017.2770122
   Palomba F, 2019, INFORM SOFTWARE TECH, V105, P43, DOI 10.1016/j.infsof.2018.08.004
   Palomba F, 2018, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSME.2018.00040
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2018, INFORM SOFTWARE TECH, V99, P1, DOI 10.1016/j.infsof.2018.02.004
   Palomba F, 2017, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2017.12
   Palomba F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P482, DOI 10.1109/MSR.2015.69
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Pascarella L., 2019, J SYST SOFTW
   Pascarella L, 2018, IEEE WORK CONF MIN S, P392, DOI [10.1145/3196398.3196423, 10.1145/3196398.3196418]
   Pascarella L, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P144, DOI 10.1145/3197231.3197251
   Perez A, 2016, J SOFTW-EVOL PROC, V28, P840, DOI 10.1002/smr.1799
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Pressman R. S., 2010, Software Engineering: A Practitioner's Approach
   Rafique Y, 2013, IEEE T SOFTWARE ENG, V39, P835, DOI 10.1109/TSE.2012.28
   Rasool G, 2015, J SOFTW-EVOL PROC, V27, P867, DOI 10.1002/smr.1737
   SAFAVIAN SR, 1991, IEEE T SYST MAN CYB, V21, P660, DOI 10.1109/21.97458
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   Simons Chris, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P47, DOI 10.1007/978-3-319-22183-0_4
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Slavin R.E., 1986, Educational Researcher, V15, P5, DOI [10.3102/0013189X015009005, DOI 10.3102/0013189X015009005, 10.3102/0013189x015009005]
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Tacconelli E., 2010, Lancet Infect. Dis, V10, P226, DOI [DOI 10.1016/S1473-3099(10)70065-7, 10.1016/S1473-3099(10)70065-7]
   Taibi D, 2017, INFORM SOFTWARE TECH, V92, P223, DOI 10.1016/j.infsof.2017.08.008
   Tantithamthavorn C., 2018, IEEE T SOFTWARE ENG, DOI [10.1109/TSE.2018.2794977.1-1, DOI 10.1109/TSE.2018.2794977.1-1]
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tarhan A., 2017, P 21 INT C EVALUATIO, VF1286, P2, DOI 10.1145/3084226.3084261
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Thomas SW, 2013, IEEE T SOFTWARE ENG, V39, P1427, DOI 10.1109/TSE.2013.27
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Turhan B., EMPIR SOFTW ENG, V14
   Vale G, 2014, 2014 EIGHTH BRAZILIAN SYMPOSIUM ON SOFTWARE COMPONENTS, ARCHITECTURES AND REUSE (SBCARS), P84, DOI 10.1109/SBCARS.2014.21
   Vassallo C, 2018, IEEE INT CONF AUTOM, P790, DOI 10.1145/3238147.3240729
   Vassallo C, 2018, PROC IEEE INT CONF S, P564, DOI 10.1109/ICSME.2018.00068
   Vassallo C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P38, DOI 10.1109/SANER.2018.8330195
   Vilela J, 2017, J SYST SOFTWARE, V125, P68, DOI 10.1016/j.jss.2016.11.031
   Wangberg R. D., 2010, THESIS
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 117
TC 120
Z9 125
U1 0
U2 42
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2019
VL 108
BP 115
EP 138
DI 10.1016/j.infsof.2018.12.009
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HM3IE
UT WOS:000459366200008
DA 2024-07-18
ER

PT J
AU Cachero, C
   Meliá, S
   Hermida, JM
AF Cachero, Cristina
   Melia, Santiago
   Hermida, Jesus M.
TI Impact of model notations on the productivity of domain modelling: An
   empirical study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE MDE; Empirical research; Notations; Quasi-experiment
ID COGNITIVE DIMENSIONS; LANGUAGES; MAINTAINABILITY; DIAGRAM
AB Context: The intensive use of models is a cornerstone of the Model-Driven Engineering (MDE) paradigm and its claimed gains in productivity. However, in order to maximize these productivity gains, it is important to adequately select the modeling formalism to be used. Unfortunately, the MDE community still lacks empirical data to support such choice.
   Objective: This paper aims at contributing to filling this gap by reporting an empirical study in which two types of domain model notations, graphical vs. textual, are compared regarding their efficiency and effectiveness during the creation of domain models.
   Method: A quasi-experiment was designed in which 127 participants were randomly classified in four groups. Then, each group was randomly assigned to a different combination of notation and application. All the participants were students enrolled in the 6th semester of the Computer Engineering degree at the University of Alicante. The statistical procedure applied was a two-factor multivariate analysis of variance (two-way MANOVA).
   Results: The data shows a statistically significant effect of notation type on the efficiency and effectiveness of domain modelling activities, independently from the application being modelled.
   Conclusion: The joint examination of our results and those of previous studies suggests that, in MDE, different tasks call for different types of notations. Therefore, MDE environments should offer both textual and graphical notations, and assist developers in selecting the most suitable one depending on the task being carried out. In particular, our data suggest that domain model creation tasks are better supported by graphical notations. To augment the validity of the conclusions of this paper, the experiment should be replicated with different subject profiles, notations, domain model sizes, tasks and application types.
C1 [Cachero, Cristina; Melia, Santiago; Hermida, Jesus M.] Univ Alicante, Dept Lenguajes & Sistemas Informat, Alicante, Spain.
   [Hermida, Jesus M.] JRC, European Commiss, Ispra, Italy.
C3 Universitat d'Alacant; European Commission Joint Research Centre; EC JRC
   ISPRA Site
RP Meliá, S (corresponding author), Univ Alicante, Dept Lenguajes & Sistemas Informat, Alicante, Spain.
EM ccachero@dlsi.ua.es; santi@dlsi.ua.es; jhermida@dlsi.ua.es
RI Meliá, Santiago/AAT-3532-2021; Castro, Cristina Cachero/AAC-2213-2019
OI Meliá, Santiago/0000-0003-3782-6626; Castro, Cristina
   Cachero/0000-0001-6281-8287
FU Spanish Ministry of Economy, Industry and Competitiveness
   [TIN2016-78103-C2-2-R]
FX This study was partially funded by the Spanish Ministry of Economy,
   Industry and Competitiveness under the project TIN2016-78103-C2-2-R
   "Plataforma para la publicacian y consumo de datos abiertos para una
   ciudad inteligente". Special thanks to the subjects of the experiment,
   who kindly agreed to participate in our study. Also, many thanks to the
   reviewers who, with their suggestions, greatly contributed to improving
   the quality of this paper.
CR Barisic A., Proceedings of the 3rd ACM SIGPLAN workshop on Evaluation and usability of programming languages and tools (PLATEAU) at SPLASH. PLATEAU '11 (2011), P65, DOI DOI 10.1145/2089155.2089170
   Barisic A, 2018, COMPUT LANG SYST STR, V51, P118, DOI 10.1016/j.cl.2017.06.005
   Birkmeier D., 2010, ECIS, V2
   Blackwell A. F., 2000, COGNITIVE DIMENSIONS, P137
   Blackwell AF, 2001, LECT NOTES ARTIF INT, V2117, P325
   Blackwell AF, 1996, IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P240, DOI 10.1109/VL.1996.545293
   Blackwell AF, 2008, LECT NOTES ARTIF INT, V5223, P5, DOI 10.1007/978-3-540-87730-1_4
   Brooks RJ, 1996, MATH COMPUT MODEL, V24, P1, DOI 10.1016/0895-7177(96)00103-3
   Caire P, 2013, S VIS LANG HUM CEN C, P115, DOI 10.1109/RE.2013.6636711
   Clarke Steven., 2005, Cognitive Dimensions of Notations 10th Anniversary Workshop, page, P131
   Cohen J., 1992, Current Directions in Psychological Science, V1, P98, DOI [DOI 10.1111/1467-8721.EP10768783, 10.1111/1467-8721.ep10768783]
   da Silva AR, 2015, COMPUT LANG SYST STR, V43, P139, DOI 10.1016/j.cl.2015.06.001
   Figl K, 2010, LECT NOTES BUS INF P, V47, P230
   Green T. R. G., 1991, Empirical Studies of Programmers: Fourth Workshop, P121
   Green TRG, 2006, J VISUAL LANG COMPUT, V17, P328, DOI 10.1016/j.jvlc.2006.04.004
   Green T. R. G., 1989, People and Computers V. Proceedings of the Fifth Conference of the British Computer Society Human-Computer Interaction Specialist Group, P443
   Green Thomas., 1998, Cognitive dimensions of information artefacts: a tutorial
   Green Thomas RG, 1992, HUMAN COMPUTER INTER, P167
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Häser F, 2016, INFORM SOFTWARE TECH, V79, P52, DOI 10.1016/j.infsof.2016.07.001
   Hair JF, 2010, Multivariate data analysis
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hazzan O., 2007, FRONTIER J, V4, P6
   Hitchman S., 2002, Commun. Assoc. Inf. Syst, V9, P10
   Hoisl B, 2014, 2014 9TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P180, DOI 10.1109/QUATIC.2014.62
   Huang I.-L., 2012, ACAD INFORM MANAGEME, V15, P73
   Huang WD, 2009, INFORM VISUAL, V8, P139, DOI 10.1057/ivs.2009.10
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   International Organization For Standardization, 1998, ISO 9241-11
   Jackson D., 1999, TECHNICAL REPORT
   Johanson A, 2017, EMPIR SOFTW ENG, V22, P2206, DOI 10.1007/s10664-016-9483-z
   Kahraman G, 2015, SOFTW SYST MODEL, V14, P1505, DOI 10.1007/s10270-013-0387-8
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kosar T., 2018, EMPIR SOFTW ENG, P1
   Kosar T, 2016, INFORM SOFTWARE TECH, V71, P77, DOI 10.1016/j.infsof.2015.11.001
   Kosar T, 2012, EMPIR SOFTW ENG, V17, P276, DOI 10.1007/s10664-011-9172-x
   Kosar T, 2010, COMPUT SCI INF SYST, V7, P247, DOI 10.2298/CSIS1002247K
   KOSSLYN SM, 1977, COGNITIVE PSYCHOL, V9, P52, DOI 10.1016/0010-0285(77)90004-4
   Krahn H, 2008, LECT NOTES BUS INF P, V11, P297
   Kutar M., 2002, COMP EMPIRICAL STUDY, P1
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   Lauder A., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P114, DOI 10.1007/BFb0054089
   Liskov B., 2000, PROGRAM DEV JAVA ABS
   Martínez Y, 2014, EMPIR SOFTW ENG, V19, P1887, DOI 10.1007/s10664-013-9269-5
   Melia Santiago, 2008, 2008 8th International Conference on Web Engineering (ICWE), P13, DOI 10.1109/ICWE.2008.36
   Meliá S, 2016, SOFTWARE QUAL J, V24, P709, DOI 10.1007/s11219-015-9299-x
   MODUGNO F, 1994, PEOPLE AND COMPUTERS IX, P91
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Moody D. L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P485, DOI 10.1145/1810295.1810442
   Moody DL, 2003, PROC INT CONF SOFTW, P295
   Myers B. A., 1990, Journal of Visual Languages and Computing, V1, P97, DOI 10.1016/S1045-926X(05)80036-9
   OMG, 2004, TECHNICAL REPORT
   Osborne J., 2005, PRACTICAL ASSESSMENT, V9, P42
   Ottensooser A, 2012, J SYST SOFTWARE, V85, P596, DOI 10.1016/j.jss.2011.09.023
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Purchase HC, 2004, INT J HUM-COMPUT ST, V61, P187, DOI 10.1016/j.ijhcs.2004.01.003
   Scanniello G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2491912
   Siau K, 2004, J DATABASE MANAGE, V15, P73, DOI 10.4018/jdm.2004010103
   Siau K, 1997, INFORM SYST, V22, P155, DOI 10.1016/S0306-4379(97)00009-4
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   SPOHRER JC, 1986, COMMUN ACM, V29, P624, DOI 10.1145/6138.6145
   Störrle H, 2013, LECT NOTES COMPUT SC, V8107, P104, DOI 10.1007/978-3-642-41533-3_7
   Taylor RN, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P226, DOI 10.1109/FOSE.2007.21
   Taylor S., 2003, EXTREME PROGRAMM AGI, P1013
   Ware C., 2002, Information Visualization, V1, P103, DOI 10.1057/palgrave.ivs.95000/3
   Whitley KN, 1997, J VISUAL LANG COMPUT, V8, P109, DOI 10.1006/jvlc.1996.0030
   Wohed P, 2005, LECT NOTES COMPUT SC, V3716, P63
NR 68
TC 4
Z9 4
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2019
VL 108
BP 78
EP 87
DI 10.1016/j.infsof.2018.12.005
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HM3IE
UT WOS:000459366200005
DA 2024-07-18
ER

PT J
AU Palomba, F
   Di Nucci, D
   Panichella, A
   Zaidman, A
   De Lucia, A
AF Palomba, Fabio
   Di Nucci, Dario
   Panichella, Annibale
   Zaidman, Andy
   De Lucia, Andrea
TI On the impact of code smells on the energy consumption of mobile
   applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code smells; Refactoring; Energy consumption; Mobile apps
AB Context. The demand for green software design is steadily growing higher especially in the context of mobile devices, where the computation is often limited by battery life. Previous studies found how wrong programming solutions have a strong impact on the energy consumption. Objective. Despite the efforts spent so far, only a little knowledge on the influence of code smells, Le.,symptoms of poor design or implementation choices, on the energy consumption of mobile applications is available. Method. To provide a wider overview on the relationship between smells and energy efficiency, in this paper we conducted a large-scale empirical study on the influence of 9 Android-specific code smells on the energy consumption of 60 Android apps. In particular, we focus our attention on the design flaws that are theoretically supposed to be related to non-functional attributes of source code, such as performance and energy consumption. Results. The results of the study highlight that methods affected by four code smell types, Le.,Internal Setter, Leaking Thread, Member Ignoring Method, and Slow Loop, consume up to 87 times more than methods affected by other code smells. Moreover, we found that refactoring these code smells reduces energy consumption in all of the situations. Conclusions. Based on our findings, we argue that more research aimed at designing automatic refactoring approaches and tools for mobile apps is needed.
C1 [Palomba, Fabio] Univ Zurich, Binzmuhlestr 14, CH-8050 Zurich, Switzerland.
   [Di Nucci, Dario] Vrije Univ Brussel, Pl Laan 2, B-1050 Elsene, Belgium.
   [Panichella, Annibale; Zaidman, Andy] Delft Univ Technol, Mekelweg 2, NL-2628 CD Delft, Netherlands.
   [De Lucia, Andrea] Univ Salerno, Via Giovanni Paolo II,132, I-84084 Fisciano, Italy.
C3 University of Zurich; Vrije Universiteit Brussel; Delft University of
   Technology; University of Salerno
RP Palomba, F (corresponding author), Univ Zurich, Binzmuhlestr 14, CH-8050 Zurich, Switzerland.
EM fpalomba@unisa.it
RI Di Nucci, Dario/Y-9679-2019; De Lucia, Andrea/AAG-6781-2020; Panichella,
   Annibale/AAJ-8443-2020; Zaidman, Andy/O-6542-2014
OI Di Nucci, Dario/0000-0002-3861-1902; Panichella,
   Annibale/0000-0002-7395-3588; Zaidman, Andy/0000-0003-2413-3935; De
   Lucia, Andrea/0000-0002-4238-1425; Palomba, Fabio/0000-0001-9337-5116
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Amalfitano D, 2012, IEEE INT CONF AUTOM, P258, DOI 10.1145/2351676.2351717
   Amsel Nadine., 2010, Proceedings, CHI EA, P3337, DOI DOI 10.1145/1753846.1753981
   Anandan S, 2012, MATER SCI FORUM, V712, P1, DOI 10.4028/www.scientific.net/MSF.712.1
   [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], 2017, EMPIRICAL SOFTWARE E
   [Anonymous], 2014, CASCON
   [Anonymous], 2016, 2016 IEEE 24th International Conference on Program Comprehension (ICPC)
   [Anonymous], 2014, P 8 ACM IEEE INT S E
   [Anonymous], 2013, PEW RES CTR
   Bavota G., RECOMMENDING REFACTO, P387, DOI [10.1007/978-3-642-45135-5_15, DOI 10.1007/978-3-642-45135-5_15]
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bunse C, 2009, MDM: 2009 10TH INTERNATIONAL CONFERENCE ON MOBILE DATA MANAGEMENT, P600, DOI 10.1109/MDM.2009.103
   Carette A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P115, DOI 10.1109/SANER.2017.7884614
   Cayci F., 2012, P 1 INT WORKSH GREEN, P55
   Choi W, 2013, ACM SIGPLAN NOTICES, V48, P623, DOI [10.1145/2544173.2509552, 10.1145/2509136.2509552]
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Cruz Luis, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P46, DOI 10.1109/MOBILESoft.2017.19
   Di Nucci D, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P103, DOI 10.1109/SANER.2017.7884613
   Dong Mian., 2011, MobiSys '11, P335, DOI DOI 10.1145/1999995.2000027
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gjoshevski M., 2015, SQAMIA, P9
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Gupta A., 2014, P INT S EMP SOFTW EN, P40
   Habchi Sarra, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P110, DOI 10.1109/MOBILESoft.2017.11
   Hao S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P92, DOI 10.1109/ICSE.2013.6606555
   Hasan S, 2016, PROC INT CONF SOFTW, P225, DOI 10.1145/2884781.2884869
   Hecht G, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P59, DOI [10.1145/2897073.2897100, 10.1109/MobileSoft.2016.030]
   Hecht G, 2015, IEEE INT CONF AUTOM, P236, DOI 10.1109/ASE.2015.46
   Hindle A, 2015, EMPIR SOFTW ENG, V20, P374, DOI 10.1007/s10664-013-9276-6
   Hindle Abram, 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P12
   Hunt N., 2011, 2011 INTERACT-15: Proceedings of the 15th Workshop on Interaction between Compilers and Computer Architectures (INTERACT 2011), P63, DOI 10.1109/INTERACT.2011.13
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Kim D. K., 2017, INT J CONTENTS, V13
   Li D., 2014, P 3 INT WORKSHOP GRE, P46, DOI DOI 10.1145/2593743.2593750
   Li D, 2013, P 2013 INT S SOFTW T, P78, DOI DOI 10.1145/2483760.2483780
   Li D, 2014, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSME.2014.34
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Linares-Vásquez M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P143, DOI 10.1145/2786805.2786847
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Mannan UA, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P225, DOI [10.1109/MobileSoft.2016.048, 10.1145/2897073.2897094]
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   MILLER JC, 1963, COMMUN ACM, V6, P58, DOI 10.1145/366246.366248
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Morales R., 2017, IEEE T SOFTW ENG
   Morales R, 2016, ARXIV161005711
   Noureddine A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P623, DOI 10.1109/ICSE.2015.208
   Palomba F., 2017, IMPACT CODE SMELLS E, DOI [10.6084/m9.gshare.3759489, DOI 10.6084/M9.GSHARE.3759489]
   Palomba F., IEEE T SOFTW ENG
   Palomba F, 2018, INFORM SOFTWARE TECH, V99, P1, DOI 10.1016/j.infsof.2018.02.004
   Palomba F, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P487, DOI 10.1109/SANER.2017.7884659
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, ADV COMPUT, V95, P201, DOI 10.1016/B978-0-12-800160-8.00004-8
   Park J.-J., 2014, P 26 INT C SOFTW ENG
   Procaccianti G, 2016, J SYST SOFTWARE, V117, P185, DOI 10.1016/j.jss.2016.02.035
   Reimann Jan, 2014, TOOL SUPPORTED QUALI
   Romer R. H., 1976, ENERGY INTRO PHYS
   Saborido R., 2015, TECHNICAL REPORT
   Sahin C, 2014, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSME.2014.35
   Shaaban Z., 2006, DEP COMP SYST 2006 D, P207
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Zhang L, 2010, PROCEEDINGS OF 2010 INTERNATIONAL CONFERENCE ON PUBLIC ADMINISTRATION (6TH), VOL II, P105, DOI 10.1145/1878961.1878982
NR 67
TC 56
Z9 60
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2019
VL 105
BP 43
EP 55
DI 10.1016/j.infsof.2018.08.004
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HD5RF
UT WOS:000452586900004
OA Green Published
DA 2024-07-18
ER

PT J
AU Heeager, LT
   Nielsen, PA
AF Heeager, Lise Tordrup
   Nielsen, Peter Axel
TI A conceptual model of agile software development in a safety-critical
   context: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Agile software development; Agile processes; Software development;
   Safety-critical software systems; Systematic literature review;
   Interpretive literature review
ID GUIDELINES; MISSION; RISKS
AB Context: Safety-critical software systems are increasingly being used in new application areas, such as personal medical devices, traffic control, and detection of pathogens. A current research debate is regarding whether safety-critical systems are better developed with traditional waterfall processes or agile processes that are purportedly faster and promise to lead to better products.
   Objective: To identify the issues and disputes in agile development of safety-critical software and the key qualities as found in the extant research literature.
   Method: We conducted a systematic literature review as an interpretive study following a research design to search, assess, extract, group, and understand the results of the found studies.
   Results: There are key issues and propositions that we elicit from the literature and combine into a conceptual model for understanding the foundational challenges of agile software development of safety-critical systems. The conceptual model consists of four problematic practice areas and five relationships, which we find to be even more important than the problematic areas. From this review, we suggest that there are important research gaps that need to be investigated.
   Conclusions: We suggest that future research should have a primary focus on the relationships in the resulting conceptual model and specifically on the dynamics of the field as a whole, on incremental versus iterative development, and on how to create value with minimal but sufficient effort.
C1 [Heeager, Lise Tordrup] Aarhus Univ, Dept Management, Aarhus, Denmark.
   [Nielsen, Peter Axel] Aalborg Univ, Dept Comp Sci, Aalborg, Denmark.
C3 Aarhus University; Aalborg University
RP Nielsen, PA (corresponding author), Aalborg Univ, Dept Comp Sci, Aalborg, Denmark.
EM pan@cs.aau.dk
RI Nielsen, Peter Axel/K-1952-2019
OI Nielsen, Peter Axel/0000-0002-0282-7445
CR Abdelaziz AA, 2015, 2015 INTERNATIONAL CONFERENCE ON COMPUTING, CONTROL, NETWORKING, ELECTRONICS AND EMBEDDED SYSTEMS ENGINEERING (ICCNEEE), P41, DOI 10.1109/ICCNEEE.2015.7381425
   [Anonymous], INFORM SOFTW TECHNOL
   [Anonymous], IFIP TC8 WG 8 2 WORK
   [Anonymous], 2004, XP Ser
   [Anonymous], 2005, Communications of the ACM
   [Anonymous], COMMUNICATIONS ASS I
   [Anonymous], 2013, P 28 ANN ACM S APPL
   [Anonymous], P 1 I ENG TECHN INT
   [Anonymous], P ENL HALD REACT PRO
   [Anonymous], P EUR SYST SOFTW PRO
   [Anonymous], P FM AM
   [Anonymous], 2015, BOOK SOFTWARE ENG 10
   [Anonymous], 2003, CMMI guidlines for process integration and product improvement
   [Anonymous], INT C SOFTW PROC IMP
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   [Anonymous], P 2004 WORKSH NEW SE
   [Anonymous], 2016, LECT NOTES BUSINESS, DOI DOI 10.1007/978-3-319-33515-5_27
   [Anonymous], J SOFTW ENG APPL
   [Anonymous], 2004, Agile and Iterative Development
   [Anonymous], P ACM S APPL COMP
   [Anonymous], P 1 ACM WORKSH BUS D
   [Anonymous], AGILE METHODS MOST A
   [Anonymous], 2009, ACIS P
   Baker SW, 2005, AGILE 2005, Proceedings, P185, DOI 10.1109/ADC.2005.27
   Bandara W, 2015, COMMUN ASSOC INF SYS, V37, P154
   Beck K., 2011, MANIFESTO AGILE SOFT
   Bedoll R, 2003, LECT NOTES COMPUT SC, V2753, P25
   Black S, 2009, COMPUTER, V42, P37, DOI 10.1109/MC.2009.284
   Boehm B.W., 2004, Balancing Agility and Discipline: A Guide for the Perplexed
   BOEHM BW, 1989, IEEE T SOFTWARE ENG, V15, P902, DOI 10.1109/32.29489
   Bostrom G., 2006, P 2006 INT WORKSH SO, P11
   Carugati A, 2018, INFORM SYST J, V28, P6, DOI 10.1111/isj.12120
   Cawley O, 2010, LECT NOTES BUS INF P, V65, P31, DOI 10.1007/978-3-642-16416-3_4
   Cockburn A., 2006, AGILE SOFTWARE DEV C
   Cohn M, 2003, COMPUTER, V36, P74, DOI 10.1109/MC.2003.1204378
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Cordeiro Lucas., 2007, SIGSOFT Softw. Eng. Notes, V32, P4, DOI [DOI 10.1145/1317471.1317476, 10.1145/1317471.1317476]
   DAVIS GB, 1982, IBM SYST J, V21, P4, DOI 10.1147/sj.211.0004
   Demissie S, 2016, COMM COM INF SC, V609, P409, DOI 10.1007/978-3-319-38980-6_29
   Doss O., 2016, ACM SIGSOFT Software Engineering Notes, V41, P30, DOI 10.1145/2894784.2894798
   Drobka J, 2004, IEEE SOFTWARE, V21, P70, DOI 10.1109/MS.2004.47
   Fitzgerald Brian, 2013, 2013 35th International Conference on Software Engineering (ICSE), P863, DOI 10.1109/ICSE.2013.6606635
   Gary K, 2011, SOFTWARE PRACT EXPER, V41, P945, DOI 10.1002/spe.1075
   Górski J, 2012, COMPUT SCI-AGH, V13, P165, DOI 10.7494/csci.2012.13.4.165
   Górski J, 2013, LECT NOTES COMPUT SC, V8166, P48, DOI 10.1007/978-3-642-40894-6_4
   Grenning J, 2001, IEEE SOFTWARE, V18, P27, DOI 10.1109/52.965799
   Hajou A., 2015, Lecture Notes on Software Engineering, V3, P251, DOI 10.7763/LNSE.2015.V3.200
   Hajou A., 2015, Lecture Notes on Software Engineering, V3, P267, DOI 10.7763/LNSE.2015.V3.202
   Hajou A, 2014, 2014 14TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND ITS APPLICATIONS (ICCSA), P40, DOI 10.1109/ICCSA.2014.19
   Heeager L.T., 2012, Journal of Information Technology Case and Application Research, V14, P3
   Heinemann L, 2015, DIABETES CARE, V38, P716, DOI 10.2337/dc15-0168
   Hoyle D., 2006, ISO 9000 QUALITY SYS
   Humphrey W.S., 1990, MANAGING SOFTWARE PR
   Jakobsen CR, 2008, AGILE 2008, PROCEEDINGS, P212, DOI 10.1109/Agile.2008.10
   Jonsson H, 2012, PROC INT SYMP SOFTW, P355, DOI 10.1109/ISSREW.2012.80
   Kitchenham B. A., 2010, EASE, V10, P25
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kjeldskov J, 2003, LECT NOTES COMPUT SC, V2795, P317
   Lee G, 2010, MIS QUART, V34, P87
   Lin WG, 2009, INTERNATIONAL JOINT CONFERENCE ON COMPUTATIONAL SCIENCES AND OPTIMIZATION, VOL 2, PROCEEDINGS, P388, DOI 10.1109/CSO.2009.191
   McCaffery F, 2016, COMM COM INF SC, V609, P417, DOI 10.1007/978-3-319-38980-6_30
   McHugh M., 2014, SPICE, P190, DOI DOI 10.1007/978-3-319-13036-1_17
   McHugh M, 2014, J SOFTW-EVOL PROC, V26, P504, DOI 10.1002/smr.1608
   McHugh M, 2013, INT WORK SOFTW, P12, DOI 10.1109/SEHC.2013.6602471
   McHugh M, 2012, COMM COM INF SC, V290, P141
   McHugh Martin., 2013, International Conference on Software Process Improvement and Capability Determination, P199, DOI [10.1007/ 978-3-642-38833-0_18, DOI 10.1007/978-3-642-38833-0_18]
   Mehrfard H, 2011, INT J INF SYST MODEL, V2, P67, DOI 10.4018/jismd.2011040104
   Mehrfard H, 2010, STUD COMPUT INTELL, V296, P241, DOI 10.1007/978-3-642-13273-5_16
   Misra SC, 2010, INT J QUAL RELIAB MA, V27, P451, DOI 10.1108/02656711011035147
   Notander JP, 2013, APPL COMPUT REV, V13, P17, DOI 10.1145/2577554.2577558
   Notander JP, 2013, LECT NOTES COMPUT SC, V7983, P283, DOI 10.1007/978-3-642-39259-7_23
   Paige RF, 2008, LECT NOTES COMPUT SC, V5219, P30, DOI 10.1007/978-3-540-87698-4_6
   Pressman R. S., 2010, Software Engineering: A Practitioner's Approach
   Rasmussen R, 2009, AGILE 2009 CONFERENCE, P151, DOI 10.1109/AGILE.2009.50
   Rottier PA, 2008, AGILE 2008, PROCEEDINGS, P218, DOI 10.1109/Agile.2008.52
   Santos ID, 2017, INFORM SOFTWARE TECH, V88, P1, DOI 10.1016/j.infsof.2017.03.008
   Schryen G, 2015, COMMUN ASSOC INF SYS, V37, P286
   Schwaber K., 2001, Agile software development with scrum
   Sidky A, 2007, IEEE ANNU SOFTW ENG, P3, DOI 10.1109/SEW.2007.61
   Smith PG, 2005, J PROD INNOVAT MANAG, V22, P216, DOI 10.1111/j.0737-6782.2005.116_3.x
   Spence JW, 2005, AGILE 2005, PROCEEDINGS, P272, DOI 10.1109/ADC.2005.47
   Stalhane T., 2012, P 11 INT PROB SAF AS, P6052
   VanderLeest SH, 2009, IEEEAAIA DIGIT AVION, P1562
   vom Brocke J, 2015, COMMUN ASSOC INF SYS, V37, P205
   Wäyrynen J, 2004, LECT NOTES COMPUT SC, V3134, P117
   Webster J, 2002, MIS QUART, V26, pXIII
   Wils A, 2006, LECT NOTES COMPUT SC, V4044, P123
   Wolff S., 2012, 2012 Proceedings of First International Workshop on Formal Methods in Software Engineering: Rigorous and Agile Approaches (FormSERA 2012), P23, DOI 10.1109/FormSERA.2012.6229784
   Wolfswinkel JF, 2013, EUR J INFORM SYST, V22, P45, DOI 10.1057/ejis.2011.51
   Xiaocheng Ge, 2010, Proceedings of the 2010 Agile Conference (AGILE 2010), P35, DOI 10.1109/AGILE.2010.10
   ZULTNER RE, 1993, COMMUN ACM, V36, P79, DOI 10.1145/163430.163577
NR 92
TC 25
Z9 30
U1 2
U2 39
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2018
VL 103
BP 22
EP 39
DI 10.1016/j.infsof.2018.06.004
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GU9ZY
UT WOS:000445717000002
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Pérez, F
   Lapeña, R
   Font, J
   Cetina, C
AF Perez, Francisca
   Lapena, Raul
   Font, Jaime
   Cetina, Carlos
TI Fragment retrieval on models for model maintenance: Applying a
   multi-objective perspective to an industrial case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Conceptual models; Traceability links recovery; Bug localization;
   Feature location; Evolutionary algorithms
AB Context Traceability Links Recovery (TLR), Bug Localization (BL), and Feature Location (FL) are amongst the most relevant tasks performed during software maintenance. However, most research in the field targets code, while models have not received enough attention yet.
   Objective: This paper presents our approach (FROM, Fragment Retrieval on Models) that uses an Evolutionary Algorithm to retrieve the most relevant model fragments for three different types of input queries: natural language requirements for TLR, bug descriptions for BL, and feature descriptions for FL.
   Method: FROM uses an Evolutionary Algorithm that generates model fragments through genetic operations, and assesses the relevance of each model fragment with regard to the provided query through a fitness configuration. We analyze the influence that four fitness configurations have over the results of FROM, combining three
   objectives: Similitude, Understandability, and Timing. To analyze this, we use a real-world case study from our industrial partner, which is a worldwide leader in train manufacturing. We record the results in terms of recall, precision, and F-measure. Moreover, results are compared against those obtained by a baseline, and a statistical analysis is performed to provide evidences of the significance of the results.
   Results: The results show that FROM can be applied in our industrial case study. Also, the results show that the configurations and the baseline have significant differences in performance for TLR, BL, and FL tasks. Moreover, our results show that there is no single configuration that is powerful enough to obtain the best results in all tasks.
   Conclusions: The type of task performed (TLR, BL, and FL) during the retrieval of model fragments has an actual impact on the results of the configurations of the Evolutionary Algorithm. Our findings suggest which configuration offers better results as well as the objectives that do not contribute to improve the results.
C1 [Perez, Francisca; Lapena, Raul; Font, Jaime; Cetina, Carlos] Univ San Jorge, SVIT Res Grp, Autovia,A-23 Zaragoza Huesca Km 299, Zaragoza 50830, Spain.
C3 Universidad San Jorge
RP Pérez, F (corresponding author), Univ San Jorge, SVIT Res Grp, Autovia,A-23 Zaragoza Huesca Km 299, Zaragoza 50830, Spain.
EM mfperez@usj.es; rlapena@usj.es; jfont@usj.es; ccetina@usj.es
RI Font, Jaime/S-1243-2018; Font, Jaime/AFL-9934-2022; Pérez,
   Francisca/KPH-0503-2024; Cetina, Carlos/P-8682-2017
OI Font, Jaime/0000-0002-2980-5596; Cetina, Carlos/0000-0001-8542-5515;
   Perez, Francisca/0000-0001-6371-915X
FU Ministry of Economy and Competitiveness (MINECO) through the Spanish
   National R + D + i Plan; ERDF funds under the project Model-Driven
   Variability Extraction for Software Product Line Adoption
   [TIN2015-64397-R]
FX This work has been partially supported by the Ministry of Economy and
   Competitiveness (MINECO) through the Spanish National R + D + i Plan and
   ERDF funds under the project Model-Driven Variability Extraction for
   Software Product Line Adoption (TIN2015-64397-R).
CR [Anonymous], TECHNICAL REPORT
   [Anonymous], P 26 INT C SOFTW ENG
   [Anonymous], INF SOFTW TECHNOL
   [Anonymous], IMPACT LAYOUT QUALIT
   [Anonymous], 1993, P IEEE INT S REQ ENG
   [Anonymous], 14 INT C QUAL SOFTW
   [Anonymous], 28 IEEE ACM INT C AU
   [Anonymous], 2017, IEEE T EVOL COMPUT
   [Anonymous], 2012, FORMAL CONCEPT ANAL
   [Anonymous], 2017, EFFICIENT JAVA MATRI
   [Anonymous], 21 IEEE INT C SOFTW
   [Anonymous], 17 INT SOFTW PROD LI
   [Anonymous], P 2 INT WORKSH REQ E
   [Anonymous], INF SOFTW TECHNOL
   [Anonymous], T SOFTWARE ENG
   [Anonymous], OPENNLP
   [Anonymous], WATCHMAKER FRAMEWORK
   [Anonymous], EMP SOFTWARE ENG
   [Anonymous], SURVEY FEATURE LOCAT
   [Anonymous], P 33 INT C SOFTW ENG
   [Anonymous], 2009, FOUND TRENDS INF RET, DOI DOI 10.1561/1500000016
   [Anonymous], 9 IEEE WORK C MIN SO
   [Anonymous], P ACM IEEE 19 INT C
   [Anonymous], 2003, P C EMP METH NAT LAN
   [Anonymous], IEEE 18 INT C PROGR
   [Anonymous], 2007, P 11 INT SOFTW PROD
   [Anonymous], 18 INT SOFTW PROD LI
   [Anonymous], 19 WORK C REV ENG
   [Anonymous], IEEE 23 INT REQ ENG
   [Anonymous], ENGLISH PORTER2 STEM
   [Anonymous], INF SCI
   [Anonymous], P 22 IEEE ACM INT C
   [Anonymous], IEEE ACM 28 INT C AU
   [Anonymous], IEEE 18 INT C PROGR
   [Anonymous], P 26 ANN ACM SIGPLAN
   [Anonymous], P 15 INT C SOFTW REU
   [Anonymous], 21 IEEE INT C SOFTW
   [Anonymous], 12 INT SOFTW PROD LI
   [Anonymous], T SOFTWARE ENG
   [Anonymous], P 34 INT C SOFTW ENG
   [Anonymous], P 20 INT C SOFTW PRO
   [Anonymous], 19 AS PAC SOFTW ENG
   [Anonymous], MEASURING UML MODELS
   [Anonymous], J SOFTWARE MAINTENAN
   [Anonymous], P 22 IEEE ACM INT C
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Borg M, 2014, EMPIR SOFTW ENG, V19, P1565, DOI 10.1007/s10664-013-9255-y
   Bradford RogerB., 2008, Proceedings of the 17th ACM Conference on Information and Knowledge Management, CIKM '08, P153, DOI DOI 10.1145/1458082.1458105
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Cetina C, 2017, J SYST SOFTWARE, V134, P261, DOI 10.1016/j.jss.2017.09.022
   Conover W.J., 1999, Practical Nonparametric Statistics, V350
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   FONSECA CM, 1993, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P416
   Font J., 2015, P 19 INT C SOFTW PRO, P46, DOI DOI 10.1145/2791060.2791085
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hofmann T, 1999, P 22 ANN INT ACM SIG, V99, P50
   Holthusen, 2014, P 18 INT SOFTW PROD, V2, P36, DOI DOI 10.1145/2647908.2655965
   Horsmann Tobias., 2015, GSCL, P22
   Ishibuchi H, 2006, IEEE C EVOL COMPUTAT, P1128
   Khatiwada S, 2018, INFORM SOFTWARE TECH, V93, P45, DOI 10.1016/j.infsof.2017.08.012
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Koffka Kurt, 2013, PRINCIPLES GESTALT P, DOI DOI 10.4324/9781315009292
   Landauer T. K., 1998, DISCOURSE PROCESS, V25
   Lopez-Herrejon RE, 2015, J SYST SOFTWARE, V103, P353, DOI 10.1016/j.jss.2014.10.037
   Martinez J, 2015, IEEE INT CONF AUTOM, P396, DOI 10.1109/ASE.2015.44
   Martinez Jabier, 2015, P 19 INT C SOFTW PRO, P101, DOI DOI 10.1145/2791060.2791086
   Martínez J, 2016, PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS IMPROVEMENT (CIMPS 2016): APPLICATIONS IN SOFTWARE ENGINEERING
   Nadi S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P140, DOI 10.1145/2568225.2568283
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Sultanov H., 2010, 18 IEEE INT REQ ENG
   Sundaram SK, 2010, REQUIR ENG, V15, P313, DOI 10.1007/s00766-009-0096-6
   Thomas SW, 2013, IEEE T SOFTWARE ENG, V39, P1427, DOI 10.1109/TSE.2013.27
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wille D, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P44
   Xiaorui Zhang, 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P90, DOI 10.1109/SPLC.2011.24
   Zhang SY, 2012, I C NETWORK PROTOCOL
   Zhang XX, 2011, 5TH INTERNATIONAL CONFERENCE ON SIGNAL PROCESSING AND COMMUNICATION SYSTEMS, ICSPCS'2011
   Zhang XR, 2012, ASIA PAC SOFWR ENG, P766, DOI 10.1109/APSEC.2012.76
   Zitzler E, 1998, LECT NOTES COMPUT SC, V1498, P292, DOI 10.1007/BFb0056872
NR 81
TC 10
Z9 10
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2018
VL 103
BP 188
EP 201
DI 10.1016/j.infsof.2018.06.017
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GU9ZY
UT WOS:000445717000014
DA 2024-07-18
ER

PT J
AU Limsettho, N
   Bennin, KE
   Keung, JW
   Hata, H
   Matsumoto, K
AF Limsettho, Nachai
   Bennin, Kwabena Ebo
   Keung, Jacky W.
   Hata, Hideaki
   Matsumoto, Kenichi
TI Cross project project defect prediction using class distribution
   estimation and oversampling
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Cross-Project defect prediction; Software fault prediction;
   Oversampling; Class imbalance learning; Class distribution estimation
AB Context Cross-project defect prediction (CPDP) which uses dataset from other projects to build predictors has been recently recommended as an effective approach for building prediction models that lack historical or sufficient local datasets. Class imbalance and distribution mismatch between the source and target datasets associated with real-world defect datasets are known to have a negative impact on prediction performance.
   Objective: To alleviate the negative effects of class imbalance and distribution mismatch on performance of CPDP models by using Class Distribution Estimation and Synthetic Minority Oversampling Technique. A novel approach called Class Distribution Estimation with Synthetic Minority Oversampling Technique (CDE-SMOTE) is proposed to optimize and improve the CPDP performance and avoid excessive oversampling.
   Method: The proposed CDE-SMOTE employs CDE to estimate the class distribution of the target project. SMOTE is then used to modify the class distribution of the training data until the distribution becomes the reverse of the approximated class distribution of the target project. Four comprehensive experiments are conducted on 14 open source software projects.
   Results: The proposed approach improves the overall performance of CPDP models when compared to the performance of other CPDP approaches. Significant improvements are observed in 63% of the test cases according to the Wilcoxon signed-rank tests with 16.421%, 29.687% and 20.259% improvements in terms of Balance, G-measure, and F-measure, respectively. Application of CDE-SMOTE on NN-filtered datasets significantly improved prediction performance.
   Conclusions: CDE-SMOTE mitigates the class imbalance and distribution mismatch problems and also helps prevents excessive oversampling that results in performance degradation of prediction models. This approach is thus recommended for CPDP studies in software engineering.
C1 [Limsettho, Nachai; Hata, Hideaki; Matsumoto, Kenichi] Nara Inst Sci & Technol, Grad Sch Sci & Technol, Ikoma, Japan.
   [Bennin, Kwabena Ebo; Keung, Jacky W.] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
C3 Nara Institute of Science & Technology; City University of Hong Kong
RP Bennin, KE (corresponding author), City Univ Hong Kong, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
EM nachai.limsettho.nz2@is.naist.jp; kebennin2-c@my.cityu.edu.hk;
   jacky.keung@cityu.edu.hk; hata@is.naist.jp; matumoto@is.naist.jp
RI Hata, Hideaki/GQB-2557-2022; Keung, Jacky/ABA-7089-2020; MATSUMOTO,
   KENICHI/AAD-9090-2019; Hata, Hideaki/N-7103-2019; Keung,
   Jacky/X-4693-2019
OI MATSUMOTO, KENICHI/0000-0002-7418-9323; Hata,
   Hideaki/0000-0003-0708-5222; Keung, Jacky/0000-0002-3803-9600; Bennin,
   Kwabena/0000-0001-9140-9271
FU JSPS KAKENHI [16H05857]; General Research Fund of the Research Grants
   Council of Hong Kong [11208017]; City University of Hong Kong [7004474,
   7004683]; Grants-in-Aid for Scientific Research [16H05857] Funding
   Source: KAKEN
FX This research was supported by JSPS KAKENHI Grant number 16H05857, was
   conducted as a part of the Program for Advancing Strategic International
   Networks to Accelerate the Circulation of Talented Researchers:
   Interdisciplinary Global Networks for Accelerating Theory and Practice
   in Software Ecosystem, Japanese Goverment Scholarship (Monbukagakusho)
   and was supported in part by the General Research Fund of the Research
   Grants Council of Hong Kong (No. 11208017), and the research funds of
   City University of Hong Kong (No. 7004474, 7004683).
CR Abu Shanab A, 2012, 2012 IEEE 13TH INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI), P415, DOI 10.1109/IRI.2012.6303039
   AHA DW, 1991, MACH LEARN, V6, P37, DOI 10.1023/A:1022689900470
   [Anonymous], 1993, MORGAN KAUFMANN SERI
   [Anonymous], P 11 INT S EMP SOFTW
   [Anonymous], 2017, IEEE T SOFTWARE ENG
   Bennin KE, 2017, ASIA PAC SOFWR ENG, P630, DOI 10.1109/APSEC.2017.76
   Bennin KE, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P214, DOI 10.1109/QRS.2016.33
   Bennin KE, 2016, P INT COMP SOFTW APP, P154, DOI 10.1109/COMPSAC.2016.144
   Breiman L., 2001, Mach. Learn., V45, P5
   Catal C, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P199, DOI 10.1109/ITNG.2009.12
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Esuli A, 2015, ACM T KNOWL DISCOV D, V9, DOI 10.1145/2700406
   Forman G, 2008, DATA MIN KNOWL DISC, V17, P164, DOI 10.1007/s10618-008-0097-y
   García V, 2012, KNOWL-BASED SYST, V25, P13, DOI 10.1016/j.knosys.2011.06.013
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Japkowicz N., 2002, Intelligent Data Analysis, V6, P429
   John G. H., 1995, Uncertainty in Artificial Intelligence. Proceedings of the Eleventh Conference (1995), P338
   Jureczko M., 2010, P 6 INT C PRED MOD S, P9, DOI 10.1145/1868328.1868342
   Kamei Y., 2007, 1 INT S EMP SOFTW EN, DOI 10.1109/ESEM.2007.28
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Khoshgoftaar T. M., 1995, Annals of Software Engineering, V1, P141, DOI 10.1007/BF02249049
   King G, 2008, STAT SCI, V23, P78, DOI 10.1214/07-STS247
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Kuncheva L. I., 2004, COMBINING PATTERN CL, V390, P413
   LECESSIE S, 1992, APPL STAT-J ROY ST C, V41, P191
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Murillo J., 2016, Inteligencia Artif., V19, P114, DOI [10.4114/ia.v18i56.1159, DOI 10.4114/IA.V18I56.1159]
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Pai GJ, 2007, IEEE T SOFTWARE ENG, V33, P675, DOI [10.1109/TSE.2007.70722, 10.1109/TSE.2007.70722.]
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Phung S.L., 2009, Learning pattern classification tasks with imbalanced data sets, P193
   Poon WN, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P434, DOI 10.1109/QRS.2017.53
   Riquelme J., 2008, Actas de los Talleres de las Jornadas de Ingenieria del Software y Bases de Datos, V2, P67
   Ryu D, 2017, SOFTWARE QUAL J, V25, P235, DOI 10.1007/s11219-015-9287-1
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tosun A, 2010, AAAI CONF ARTIF INTE, P1748
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang BX, 2010, KNOWL INF SYST, V25, P1, DOI 10.1007/s10115-009-0198-y
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Wei Gao, 2015, 2015 IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining (ASONAM), P97, DOI 10.1145/2808797.2809327
   Xing F, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P213
   Xue JC, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P897
   Zhang Y, 2015, P INT COMP SOFTW APP, P264, DOI 10.1109/COMPSAC.2015.58
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 54
TC 36
Z9 37
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2018
VL 100
BP 87
EP 102
DI 10.1016/j.infsof.2018.04.001
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GJ1VN
UT WOS:000435056100006
DA 2024-07-18
ER

PT J
AU Adamo, D
   Nurmuradov, D
   Piparia, S
   Bryce, R
AF Adamo, David
   Nurmuradov, Dmitry
   Piparia, Shraddha
   Bryce, Renee
TI Combinatorial-based event sequence testing of Android applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE GUI testing; Automated testing; Combinatorial testing; Mobile apps;
   Android; Mobile application testing
ID FRAMEWORK
AB Context Mobile applications are Event Driven Systems (EDS) that take Graphical User Interface (GUI) event sequences as input and respond by changing their state. EDS are often tested with event sequences that exercise system functionality. Much of prior work focuses on testing random event sequences. Combinatorial-based techniques are often used to systematically generate event combinations and may be extended to test behavior that occurs only when events are executed in a particular order. We expand upon the state-of-the-art by using combinatorial-based techniques to systematically test Android applications with automatically generated GUI event sequences.
   Objective: This paper describes a combinatorial-based technique for automatic construction of Android application test suites. The goal is to minimize redundant execution of events, maximize coverage of event combinations, and increase the likelihood of testing behavior that occurs when GUI events are executed in a particular order.
   Method: A greedy online algorithm selects and executes GUI events that maximize coverage of n-way event combinations, where n is a specified event combination strength. We compare our combinatorial-based technique to random and frequency-based techniques. We use a two-hour time budget to generate test suites for ten Android applications and empirically evaluate the test suites in terms of code and event coverage.
   Results: Our 2-way and 3-way combinatorial-based test suites achieve better code and event coverage compared to random and frequency-based test suites in the majority of our subject applications. The results show that there is no significant difference in code or event coverage between 2-way and 3-way combinatorial-based test suites.
   Conclusion: Given the time budget, the combinatorial-based technique is more effective than random and frequency-based techniques, but its effectiveness may vary depending on specific characteristics of the application under test.
C1 [Adamo, David; Nurmuradov, Dmitry; Piparia, Shraddha; Bryce, Renee] Univ North Texas, 1155 Union Circle 311366, Denton, TX 76203 USA.
C3 University of North Texas System; University of North Texas Denton
RP Adamo, D (corresponding author), Univ North Texas, 1155 Union Circle 311366, Denton, TX 76203 USA.
EM davidadamo@my.unt.edu; dmitrynurmuradov@my.unt.edu;
   shraddhapiparia@my.unt.edu; renee.bzyce@unt.edu
OI Piparia, Shraddha/0000-0002-1809-4418
FU Ultimate Software Group, Inc.
FX This work is supported in part by Ultimate Software Group, Inc. Any
   opinions, findings, and conclusions expressed herein are the authors'
   and do not reflect those of the sponsors.
CR Amalfitano D, 2017, J SYST SOFTWARE, V125, P322, DOI 10.1016/j.jss.2016.12.017
   Amalfitano D, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P33, DOI 10.1109/MobileSoft.2015.11
   Amalfitano D, 2015, IEEE SOFTWARE, V32, P53, DOI 10.1109/MS.2014.55
   Appium, 2017, APPIUM MOBILE APP AU
   Bryce R.C., 2007, WORKSHOP DOMAIN SPEC, P1
   Bryce RC, 2005, PROC INT CONF SOFTW, P146
   Bryce RC, 2007, SOFTW TEST VERIF REL, V17, P159, DOI 10.1002/stvr.365
   Bryce RC, 2006, INFORM SOFTWARE TECH, V48, P960, DOI 10.1016/j.infsof.2006.03.004
   Carino S., 2016, ELECT THESIS DISSERT
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen DM, 1996, IEEE SOFTWARE, V13, P83, DOI 10.1109/52.536462
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Di Lucca GA, 2003, FIFTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION THEME: ARCHITECTURE, PROCEEDINGS, P74, DOI 10.1109/WSE.2003.1234011
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   F-Droid, 2017, F DROID FREE OPEN SO
   Google, 2017, UI APPL EX MONK
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   Hu Cuixiong, 2011, Proceedings of the 6th International Workshop on Automation of Software Test, P77
   IDC Research, 2016, SMARTPH OS MARK SHAR
   Jensen C S, 2013, P 2013 INT S SOFTW T, P67, DOI [10.1145/2483760.2483777, DOI 10.1145/2483760.2483777]
   Kuhn D.R., 2002, Proceedings of 27th Annual NASA Goddard Software Engineering Workshop, 2002, P91, DOI DOI 10.1109/SEW.2002.1199454
   Kuhn D.R., P IEEE 5 INT C SOFTW, P601
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Lei Y, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P549
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mirzaei N, 2016, PROC INT CONF SOFTW, P559, DOI 10.1145/2884781.2884853
   Mohamad I.B., 2013, RES J APPL SCI ENG T, P3299
   Morgado IC, 2015, IEEE INT CONF AUTOM, P876, DOI 10.1109/ASE.2015.96
   Mountainminds GmbH, 2017, ECLEMMA JACOCO JAV C
   Nguyen C.D., 2012, Proceedings of the 2012 International Symposium on Software Testing and Analysis, P100, DOI 10.1145/04000800.2336765
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   von Bochmann G., 1994, SIGSOFT Software Engineering Notes, P109
   Wang WH, 2009, PROC IEEE INT CONF S, P211, DOI 10.1109/ICSM.2009.5306321
   Wang WH, 2008, IEEE HI ASS SYS ENGR, P209, DOI 10.1109/HASE.2008.53
   Yuan X., 2007, P INT C AUTOMATED SO, P405
   Yuan X, 2011, IEEE T SOFTWARE ENG, V37, P559, DOI 10.1109/TSE.2010.50
   Yuan X, 2010, IEEE T SOFTWARE ENG, V36, P81, DOI 10.1109/TSE.2009.68
NR 39
TC 11
Z9 13
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2018
VL 99
BP 98
EP 117
DI 10.1016/j.infsof.2018.03.007
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GG5XA
UT WOS:000432767900009
DA 2024-07-18
ER

PT J
AU Schermann, G
   Cito, J
   Leitner, P
   Zdun, U
   Gall, HC
AF Schermann, Gerald
   Cito, Juergen
   Leitner, Philipp
   Zdun, Uwe
   Gall, Harald C.
TI We're doing it live: A multi-method empirical study on continuous
   experimentation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Release engineering; Continuous deployment; Continuous experimentation;
   Empirical study
ID DEPLOYMENT
AB Context Continuous experimentation guides development activities based on data collected on a subset of online users on a new experimental version of the software. It includes practices such as canary releases, gradual rollouts, dark launches, or A/B testing.
   Objective: Unfortunately, our knowledge of continuous experimentation is currently primarily based on wellknown and outspoken industrial leaders. To assess the actual state of practice in continuous experimentation, we conducted a mixed-method empirical study.
   Method: In our empirical study consisting of four steps, we interviewed 31 developers or release engineers, and performed a survey that attracted 187 complete responses. We analyzed the resulting data using statistical analysis and open coding.
   Results: Our results lead to several conclusions: (1) from a software architecture perspective, continuous experimentation is especially enabled by architectures that foster independently deployable services, such as microservices based architectures; (2) from a developer perspective, experiments require extensive monitoring and analytics to discover runtime problems, consequently leading to developer on call policies and influencing the role and skill sets required by developers; and (3) from a process perspective, many organizations conduct experiments based on intuition rather than clear guidelines and robust statistics.
   Conclusion: Our findings show that more principled and structured approaches for release decision making are needed, striving for highly automated, systematic, and data- and hypothesis-driven deployment and experimentation.
C1 [Schermann, Gerald; Cito, Juergen; Leitner, Philipp; Gall, Harald C.] Univ Zurich, Dept Informat, Zurich, Switzerland.
   [Zdun, Uwe] Univ Vienna, Vienna, Austria.
C3 University of Zurich; University of Vienna
RP Schermann, G (corresponding author), Univ Zurich, Dept Informat, Zurich, Switzerland.
EM schermann@ifi.uzh.ch; cito@ifi.uzh.ch; leitner@ifi.uzh.ch;
   uwe.zdun@univie.ac.at; gall@ifi.uzh.ch
RI Zdun, Uwe/AFR-2161-2022
OI Gall, Harald/0000-0002-3874-5628
FU European Community's Seventh Framework Programme (FP7) [610802]; Swiss
   National Science Foundation (SNSF) under project name"Whiteboard" (SNSF
   Project) [149450]
FX The authors would like to thank all interview and survey participants.
   The research leading to these results has received funding from the
   European Community's Seventh Framework Programme (FP7/2007-2013) under
   grant agreement no. 610802 (CloudWave), and from the Swiss National
   Science Foundation (SNSF) under project name"Whiteboard" (SNSF Project
   no. 149450).
CR Adams B., 2016, P INT C SOFTW AN EV
   Ahmed T., 2016, P 18 EUR C POW EL AP, P1, DOI [10.1109/EPE.2016.7695651, DOI 10.1109/EPE.2016.7695651]
   [Anonymous], P 2015 10 JOINT M FD
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2007, GUIDE ADV EMPIRICAL
   [Anonymous], ACM Computing Surveys, DOI [DOI 10.1145/242224.242420, 10.1145/242224.242420]
   [Anonymous], 2013, THOUGHTWORKS FORREST
   [Anonymous], 2008, EASE CITESEER
   Bakshy E, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P283, DOI 10.1145/2566486.2567967
   Bakshy E, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P108, DOI 10.1145/2736277.2741082
   Barik T, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P882, DOI 10.1145/2786805.2803200
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Bellomo S, 2014, I C DEPEND SYS NETWO, P702, DOI 10.1109/DSN.2014.104
   Braa K., 1999, ACCOUNTING MANAGEMEN, V9, P25, DOI [DOI 10.1016/S0959-8022(98)00018-6, 10.1016/S0959-8022(98)00018-6]
   Brandtner M, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P184, DOI 10.1109/CSMR-WCRE.2014.6747169
   Bruneo D., 2014, P 4 INT WORKSH MAN C
   Capilla R., 2013, SYSTEMS SOFTWARE VAR
   Chen LP, 2017, J SYST SOFTWARE, V128, P72, DOI 10.1016/j.jss.2017.02.013
   Chen LP, 2015, IEEE SOFTWARE, V32, P49
   Cito J., 2015, P 2015 ACM INT S NEW
   Claps GG, 2015, INFORM SOFTWARE TECH, V57, P21, DOI 10.1016/j.infsof.2014.07.009
   Debbiche A, 2014, LECT NOTES COMPUT SC, V8892, P17, DOI 10.1007/978-3-319-13835-0_2
   Etsy, 2016, COD CRAFT
   Fabijan A., 2017, INT C SOFTW ENG ICSE
   Facebook, 2016, ENG BLOG
   Fagerholm F, 2017, J SYST SOFTWARE, V123, P292, DOI 10.1016/j.jss.2016.03.034
   Feitelson DG, 2013, IEEE INTERNET COMPUT, V17, P8, DOI 10.1109/MIC.2013.25
   Fitzgerald B., 2014, P 1 INT WORKSH RAP C, P1, DOI DOI 10.1145/2593812.2593813
   Flint, 2001, SOC RES UPDATE, P33, DOI DOI 10.1111/J.1442-2018.2010.00541.X
   Foo K. C., 2015, P 37 INT C SOFTW ENG, V2
   Fowler M., 2013, Continuous Delivery
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Garousi V, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916008
   Google, 2016, GOOGLE DEV BLOG
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   HILTON M, 2017, P 2017 11 JOINT M FD, P197, DOI DOI 10.1145/3106237.3106270
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Hodgson P., 2016, FEATURE TOGGLES
   Hohpe G, 2016, IEEE SOFTWARE, V33, P30, DOI 10.1109/MS.2016.137
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Hummer W., TESTING IDEMPOTENCE, P368, DOI [10.1007/978-3-642-45065-519, DOI 10.1007/978-3-642-45065-5_19]
   Itkonen J, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962627
   Kevic K., 2017, INT C SOFTW ENG SOFT
   Kim M, 2016, PROC INT CONF SOFTW, P96, DOI 10.1145/2884781.2884783
   Kohavi R, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1168
   Kohavi R, 2009, DATA MIN KNOWL DISC, V18, P140, DOI 10.1007/s10618-008-0114-1
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Lin B, 2016, PROCEEDINGS OF THE 19TH ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING COMPANION, P333, DOI 10.1145/2818052.2869117
   Lindgren E, 2016, INFORM SOFTWARE TECH, V77, P80, DOI 10.1016/j.infsof.2016.04.008
   Lwakatare LE, 2016, LECT NOTES COMPUT SC, V10027, P399, DOI 10.1007/978-3-319-49094-6_27
   Lwakatare LE, 2015, LECT NOTES BUS INF P, V212, P212, DOI 10.1007/978-3-319-18612-2_19
   Mazlami G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P524, DOI 10.1109/ICWS.2017.61
   Moskowitz A., 2003, EAT YOUR OWN DOG FOO, V28
   NEELY S, 2013, AG C, P121, DOI DOI 10.1109/AGILE.2013.17
   Netflix, 2016, NETFLIX TECH BLOG
   Newman S., 2015, BUILDING MICROSERVIC
   Olsson HH, 2012, EUROMICRO CONF PROC, P392, DOI 10.1109/SEAA.2012.54
   Puppet Labs, 2016, STAT DEVOPS REP
   Rahman M. T., 2016, P 13 INT C MIN SOFTW, P201, DOI DOI 10.1145/2901739.2901745
   Rausch T., 2017, 14 INT C MIN SOFTW R
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   Rubin J, 2016, PROC INT CONF SOFTW, P982, DOI 10.1145/2884781.2884871
   SAVOR T, 2016, P 38 INT C SOFTW ENG, P21, DOI DOI 10.1145/2889160.2889223
   Schelle Graham, 2016, 2016 International Conference on Reconfigurable Computing and FPGAs (ReConFig), DOI 10.1109/ReConFig.2016.7857138
   Schermann G., 2015, P 11 INT WORKSH ENG
   Schermann G, 2016, MIDDLEWARE '16: PROCEEDINGS OF THE 17TH INTERNATIONAL MIDDLEWARE CONFERENCE, DOI 10.1145/2988336.2988348
   Shahin M., 2017, P 21 INT C EV ASS SO, P384
   Shahin M, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962587
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Spencer D., 2009, CARD SORTING DESIGNI
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Tamburrelli G, 2014, LECT NOTES COMPUT SC, V8636, P184, DOI 10.1007/978-3-319-09940-8_13
   Tang CQ, 2015, SOSP'15: PROCEEDINGS OF THE TWENTY-FIFTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P328, DOI 10.1145/2815400.2815401
   Tang D., 2010, P 16 ACM SIGKDD INT, P17, DOI [DOI 10.1145/1835804.1835810, 10.1145/1835804.1835810]
   Tarvo A., 2015, Proceedings of the 2015 International Symposium on Software Testing and Analysis, ISSTA 2015, page, P418, DOI [10.1145/2771783.2784770, DOI 10.1145/2771783.2784770]
   Twitter, 2016, TWITTER ENG BLOG
   Ur Rahman AA, 2015, 2015 AGILE CONFERENCE, P1, DOI 10.1109/Agile.2015.12
   Vasilescu Bogdan., 2015, P 2015 10 JOINT M FD, P805, DOI DOI 10.1145/2786805.2786850
   Vassallo Carmine, 2017, P 33 IEEE INT C SOFT
   Veeraraghavan K, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P635
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 85
TC 26
Z9 32
U1 0
U2 14
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2018
VL 99
BP 41
EP 57
DI 10.1016/j.infsof.2018.02.010
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GG5XA
UT WOS:000432767900004
OA Green Accepted, Bronze
DA 2024-07-18
ER

PT J
AU Shepperd, M
   Ajienka, N
   Counsell, S
AF Shepperd, Martin
   Ajienka, Nemitari
   Counsell, Steve
TI The role and value of replication in empirical software engineering
   results
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Experiment; Reliability; Replication;
   Meta-analysis
ID P-VALUES; EFFORT PREDICTION; COST ESTIMATION; MOVING WINDOWS;
   CROSS-COMPANY; ANALOGY; COMMUNICATION; REGRESSION; CRISIS
AB Context: Concerns have been raised from many quarters regarding the reliability of empirical research findings and this includes software engineering. Replication has been proposed as an important means of increasing confidence.
   Objective: We aim to better understand the value of replication studies, the level of confirmation between replication and original studies, what confirmation means in a statistical sense and what factors modify this relationship.
   Method: We perform a systematic review to identify relevant replication experimental studies in the areas of (i) software project effort prediction and (ii) pair programming. Where sufficient details are provided we compute prediction intervals.
   Results: Our review locates 28 unique articles that describe replications of 35 original studies that address 75 research questions. Of these 10 are external, 15 internal and 3 internal-same-article replications. The odds ratio of internal to external (conducted by independent researchers) replications of obtaining a 'confirmatory' result is 8.64. We also found incomplete reporting hampered our ability to extract estimates of effect sizes. Where we are able to compute replication prediction intervals these were surprisingly large.
   Conclusion: We show that there is substantial evidence to suggest that current approaches to empirical replications are highly problematic. There is a consensus that replications are important, but there is a need for better reporting of both original and replicated studies. Given the low power and incomplete reporting of many original studies, it can be unclear the extent to which a replication is confirmatory and to what extent it yields additional knowledge to the software engineering community. We recommend attention is switched from replication research to meta-analysis.
C1 [Shepperd, Martin; Counsell, Steve] Brunel Univ London, Dept Comp Sci, BSEL, London, England.
   [Ajienka, Nemitari] Edge Hill Univ, Dept Comp Sci, Ormskirk L39 4QP, England.
C3 Brunel University; Edge Hill University
RP Shepperd, M (corresponding author), Brunel Univ London, Dept Comp Sci, BSEL, London, England.
EM martin.shepperd@brunel.ac.uk
RI Ajienka, Nemitari/ABI-3639-2020; Shepperd, Martin/F-9683-2013
OI Shepperd, Martin/0000-0003-1874-6145; Ajienka,
   Nemitari/0000-0002-8792-282X
FU EPSRC [EP/P025196/1, EP/M024083/1, EP/N011627/1]; EPSRC [EP/N011627/1,
   EP/P025196/1, EP/M024083/1] Funding Source: UKRI
FX We would like to thank both the guest editors and the reviewers for
   their detailed and constructive comments on two earlier versions of this
   paper. Martin Shepperd was supported by the EPSRC Grant EP/P025196/1.
   Steve Counsell was supported by the EPSRC Grants EP/M024083/1 and
   EP/N011627/1.
CR Aarts AA, 2015, SCIENCE, V349, DOI 10.1126/science.aac4716
   Al-Kilidar H., 2005, AUSTR SOFTW ENG C
   Altman DG, 1991, PRACTICAL STAT MED R
   Amasaki S, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915983
   Amasaki S, 2013, LECT NOTES COMPUT SC, V7983, P214, DOI 10.1007/978-3-642-39259-7_18
   Amrhein V, 2017, PEERJ, V5, DOI 10.7717/peerj.3544
   Anderson SF, 2016, PSYCHOL METHODS, V21, P1, DOI 10.1037/met0000051
   [Anonymous], 11 IEEE INT SOFTW ME
   [Anonymous], 3 INT S EMP SOFTW EN
   Azhar Damir, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P173, DOI 10.1109/ESEM.2013.25
   Bakker M, 2012, PERSPECT PSYCHOL SCI, V7, P543, DOI 10.1177/1745691612459060
   Baresi L, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276936
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bezerra RMM, 2015, INT SYMP EMP SOFTWAR, P132, DOI 10.1109/ESEM.2015.7321213
   Borenstein M., 2009, INTRO METAANALYSIS
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   Briand LC, 1999, P 21 INT C SOFTW ENG, DOI DOI 10.1145/302405.302647
   Brooks A., 1996, ISERN9610 U STRATHCL
   Buglione L, 2010, 20 INT WORKSH SOFTW
   Buglione L, 2008, LECT NOTES COMPUT SC, V5089, P75, DOI 10.1007/978-3-540-69566-0_9
   Canfora G, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P195
   Carver JC, 2010, P 1 INT WORKSH REPL, P1
   Ciolkowski M, 2009, INT SYMP EMP SOFTWAR, P133, DOI 10.1109/ESEM.2009.5316026
   Cooper ID, 2016, J MED LIBR ASSOC, V104, P76, DOI 10.3163/1536-5050.104.1.013
   Cumming G, 2008, PERSPECT PSYCHOL SCI, V3, P286, DOI 10.1111/j.1745-6924.2008.00079.x
   da Silva FQB, 2014, EMPIR SOFTW ENG, V19, P501, DOI 10.1007/s10664-012-9227-7
   de Magalhaes CVC, 2015, INFORM SOFTWARE TECH, V64, P76, DOI 10.1016/j.infsof.2015.02.001
   Di Martino Sergio, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P186, DOI 10.1007/978-3-642-21843-9_16
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Ferrucci F., 2010, ESTIMATING WEB APPL, P103
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Haddock CK, 1998, PSYCHOL METHODS, V3, P339, DOI 10.1037/1082-989X.3.3.339
   Hanks B., 2008, ACM J ED RESOUR COMP, V4
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Hedges L. V., 1984, STAT METHODS METAANA, V24, P25, DOI [DOI 10.1002/EV.1376, 10.1016/C2009-0-03396-0, DOI 10.1016/C2009-0-03396-0, 10.1002/ev.1376]
   Idri A, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P21, DOI 10.1109/METRIC.2002.1011322
   Idri A., 2013, ASSESSING RBFN BASED
   Idri A, 2015, 2015 IEEE SYMPOSIUM SERIES ON COMPUTATIONAL INTELLIGENCE (IEEE SSCI), P976, DOI 10.1109/SSCI.2015.142
   Idri A, 2012, WD SCI P COMP ENG, V7, P863
   Idri A, 2013, 2013 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DATA MINING (CIDM), P207, DOI 10.1109/CIDM.2013.6597238
   Ioannidis JPA, 2008, EPIDEMIOLOGY, V19, P640, DOI 10.1097/EDE.0b013e31818131e7
   Ioannidis JPA, 2005, PLOS MED, V2, P696, DOI 10.1371/journal.pmed.0020124
   JEFFERY DR, 1993, IEEE T SOFTWARE ENG, V19, P529, DOI 10.1109/32.232016
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Jeffery R., 1996, Empirical Software Engineering, V1, P11, DOI 10.1007/BF00125809
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   Jorgensen M, 2016, J SYST SOFTWARE, V116, P133, DOI 10.1016/j.jss.2015.03.065
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B., 2004, 27 IEEE INT SOFTW EN
   Kitchenham B., 1993, 1 INT S SOFTW METR
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Lavazza L, 2013, INFORM SOFTWARE TECH, V55, P1796, DOI 10.1016/j.infsof.2013.04.003
   Lemos OAL, 2012, PROC INT CONF SOFTW, P529, DOI 10.1109/ICSE.2012.6227163
   Lenarduzzi V., 2014, 9 INT C SOFTW ENG AD
   Lenarduzzi V, 2015, LECT NOTES BUS INF P, V212, P105, DOI 10.1007/978-3-319-18612-2_9
   Lokan C., 2008, EASE 2008
   Lokan C. J., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P200, DOI 10.1109/METRIC.1999.809741
   Lokan C, 2017, EMPIR SOFTW ENG, V22, P716, DOI 10.1007/s10664-016-9446-4
   Lokan C, 2014, INFORM SOFTWARE TECH, V56, P1063, DOI 10.1016/j.infsof.2014.02.008
   Lokan Chris., 2006, 2006 ACMIEEE INT S E, P75, DOI DOI 10.1145/1159733.1159747
   Loken E, 2017, SCIENCE, V355, P584, DOI 10.1126/science.aal3618
   Madeyski L., 2015, WHY REPRODUCIB UNPUB
   Mende T., 2010, 6 INT C PRED MOD SOF, P5
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Mendes E, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P100, DOI 10.1109/ISESE.2003.1237969
   Mendes E., 2005, SIGCSE Bulletin, V37, P296, DOI 10.1145/1151954.1067526
   Mendes E., 2006, ITiCSE06. Proceedings of the 11th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education, P108, DOI 10.1145/1140124.1140155
   Mendes E., 2009, EASE 2009
   Mendes E., 2003, 14 ACM C HYP HYP NOT, P173
   Mendes E., 2005, 11 IEEE INT SOFTWARE, P10
   Mendes E, 2008, J SYST SOFTWARE, V81, P673, DOI 10.1016/j.jss.2007.07.044
   Mendes E, 2008, EMPIR SOFTW ENG, V13, P3, DOI 10.1007/s10664-007-9045-5
   Miller J, 2005, INFORM SOFTWARE TECH, V47, P233, DOI 10.1016/j.infsof.2004.08.005
   Minku L, 2015, 2015 ACM IEEE INT S, P1, DOI DOI 10.1109/ESEM.2015.7321199
   Minku LL, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P446, DOI 10.1145/2568225.2568228
   Murdoch DJ, 2008, AM STAT, V62, P242, DOI 10.1198/000313008X332421
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   Patil P, 2016, PERSPECT PSYCHOL SCI, V11, P539, DOI 10.1177/1745691616646366
   Peng RD, 2011, SCIENCE, V334, P1226, DOI 10.1126/science.1213847
   Pfleeger S. L., 1995, Annals of Software Engineering, V1, P219, DOI 10.1007/BF02249052
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   Quesada-Lopez C., 2015, P 18 IB C SOFTW ENG
   Quesada-Lopez C., 2014, P 8 ACM IEEE INT S E
   Quesada-López C, 2016, J OBJECT TECHNOL, V15, DOI 10.5381/jot.2016.15.3.a2
   Robins A., 2006, P 8 AUSTR C COMP ED, V52, P165, DOI 10.5555/1151869.1151891
   ROSENTHAL R, 1979, PSYCHOL BULL, V86, P638, DOI 10.1037/0033-2909.86.3.638
   Ruhe M, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P30, DOI 10.1109/METRIC.2003.1232453
   Ruhe M, 2003, PROC INT CONF SOFTW, P285, DOI 10.1109/ICSE.2003.1201208
   Salleh N, 2014, EMPIR SOFTW ENG, V19, P714, DOI 10.1007/s10664-012-9238-4
   Sfetsos P, 2006, LECT NOTES COMPUT SC, V4044, P43
   Sfetsos P, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P57, DOI 10.1109/QUATIC.2012.36
   Sfetsos P, 2009, EMPIR SOFTW ENG, V14, P187, DOI 10.1007/s10664-008-9093-5
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2015, IEEE SOFTWARE, V32, P106, DOI 10.1109/MS.2015.8
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Simons DJ, 2014, PERSPECT PSYCHOL SCI, V9, P76, DOI 10.1177/1745691613514755
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Spence JR, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0162874
   Stanley DJ, 2014, PERSPECT PSYCHOL SCI, V9, P305, DOI 10.1177/1745691614528518
   Stroebe W, 2014, PERSPECT PSYCHOL SCI, V9, P59, DOI 10.1177/1745691613514450
   Vermeulen I, 2015, COMMUN METHODS MEAS, V9, P253, DOI 10.1080/19312458.2015.1096333
   Wan X, 2014, BMC MED RES METHODOL, V14, DOI 10.1186/1471-2288-14-135
NR 106
TC 34
Z9 36
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2018
VL 99
BP 120
EP 132
DI 10.1016/j.infsof.2018.01.006
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GG5XA
UT WOS:000432767900011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ahmad, N
   Rextin, A
   Kulsoom, UE
AF Ahmad, Naveed
   Rextin, Aimal
   Kulsoom, Um E.
TI Perspectives on usability guidelines for smartphone applications: An
   empirical investigation and systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Usability; Guidelines; Smartphones; Platform; Genre; Apps
ID MOBILE APPLICATIONS; DESIGN; INTERFACES; CAPACITY; COMMERCE; PLUS
AB Context Several usability guidelines have been proposed to improve the usability of smartphone apps. These guidelines can be classified into three disjoint sets: platform specific guidelines, genre specific guidelines, and generic guidelines. However, smartphone applications are usually developed for multiple platforms and targeted for a variety of users. Hence the usefulness of existing guidelines is severally limited.
   Objective: This study aims to develop a comprehensive list of usability guidelines suitable for multiple platforms and genres of smartphone applications.
   Method: A controlled experiment was conducted, and it highlighted that even popular and established apps have usability problems. In order to identify different perspectives on usability a systematic literature review was conducted.
   Results: Systematic literature review resulted in 148 studies that proposed a total of 359 usability guidelines. These guidelines were condensed into 25 guidelines in 7 categories by removing redundancy, repetition and similarity through a sequential and iterative process. Finally, usefulness of the proposed classification of guidelines is established by mapping these to usability issues identified earlier.
C1 [Ahmad, Naveed; Rextin, Aimal; Kulsoom, Um E.] COMSATS Inst Informat Technol, Dept Comp Sci, Islamabad 44000, Pakistan.
C3 COMSATS University Islamabad (CUI)
RP Ahmad, N (corresponding author), COMSATS Inst Informat Technol, Dept Comp Sci, Islamabad 44000, Pakistan.
EM naveedahmad@comsats.edu.pk
CR Adipat B, 2011, MIS QUART, V35, P99
   Al-khalifa H.S., P 18 INT C INF INT W, P375
   [Anonymous], 2014, RES APPL EC, DOI DOI 10.5296/RAE.V6I1.4643
   [Anonymous], P 3 NORD C HUM COMP
   [Anonymous], 2007, WEBCREDIBLE 7 USABIL
   [Anonymous], 1999, 13407 ISOIEC
   [Anonymous], 1983, The Psychology of Human-Computer Interaction
   [Anonymous], 2014, IEEE MTT S INT MICRO, DOI DOI 10.1109/TVT.2014.2345415
   [Anonymous], 2010, ACM Transactions on Accessible Computing, DOI DOI 10.1145/1838562.1838563
   Anthony L, 2014, PERS UBIQUIT COMPUT, V18, P1471, DOI 10.1007/s00779-013-0749-9
   Athilingam P, 2016, APPL NURS RES, V32, P156, DOI 10.1016/j.apnr.2016.07.001
   Ayob N.Z. binti, 2009, INF MAN ENG 2009 ICI
   Baharuddin R., 2013, RES J APPL SCI ENG T, V5, P2225
   Baker A., 2012, STANFORD ENCY PHILOS
   Banga V., 2010, SECRET GREAT MOBILE
   Bellman S, 1999, COMMUN ACM, V42, P32, DOI 10.1145/322796.322805
   Bhandari U., 2017, COMPUT HUMAN BEHAV, V72
   Brewster S, 2002, PERS UBIQUIT COMPUT, V6, P188, DOI 10.1007/s007790200019
   Brown M., 2011, J NIELSEN MOBILE APP
   Buchanan G., 2001, Proceedings of the 10th International Conference on the World Wide Web, P673, DOI [https://doi.org/10.1145/371920.372181, DOI 10.1145/371920.372181]
   Burigat S, 2008, INT J HUM-COMPUT ST, V66, P78, DOI 10.1016/j.ijhcs.2007.08.006
   Burigat S, 2013, PERS UBIQUIT COMPUT, V17, P371, DOI 10.1007/s00779-011-0500-3
   Burmistrov I., 2009, EUR C COGN ERG DES P, P11
   Burren V., 2010, 5 USABILITY TIPS MOB
   Cairns P., 2014, P SIGCHI C HUM FACT
   Cannon P., 2016, P 34 ACM INT C DES C
   Card S.K, 1987, P IFIP INTERACT 87 2
   Chadwick-Dias A., 2002, ACM SIGCAPH COMPUTER, P30, DOI DOI 10.1145/960201.957212
   Chan S., 2002, J ELECT COMMERCE RES, V3
   Chan S.S., 2002, Journal of Electronic Commerce Research, V3, P187
   Chapman C., 2010, MOBILE WEB DESIGN TI
   Chau P.Y.K, 2002, COMMUN ACM, V45, P45
   Chaudry B., 2012, P 2 ACM SIGHIT INT H, P91, DOI DOI 10.1145/2110363.2110377
   Cheng LC, 2016, PROCEEDINGS OF CHIUXID 2016: BRIDGING THE GAPS IN THE HCI & UX WORLD, P1, DOI 10.1145/2898459.2898460
   Chiu K, 2017, AM J GERIAT PSYCHIAT, V25, pS132
   Chmielewski J., 2013, P INT C ADV MOB COMP, P234
   Clark V.L.P., 2015, PARTICIPANTS DATA CO, P231
   Cota C.X.N., P 2 INT C TECHN EC E, P357
   Cowan N, 2001, BEHAV BRAIN SCI, V24, P87, DOI 10.1017/S0140525X01003922
   Zapata BC, 2015, J MED SYST, V39, DOI 10.1007/s10916-014-0182-2
   Zapata BC, 2014, J MED SYST, V38, DOI 10.1007/s10916-014-0081-6
   Crystal A., 2004, 54 ANN C INT COMM AS
   Davidson JL, 2013, C&C'13: PROCEEDINGS OF THE 9TH ACM CONFERENCE ON CREATIVITY & COGNITION 2013, P114
   Dharmasiri C, 2013, INT CONF ADV ICT, P75, DOI 10.1109/ICTer.2013.6761158
   Donnelly K., 2009, MOBILE LEARNING
   Falkowska J., INT C DES US EXP US, P399
   Ferrer V., 2013, IEEE, P1
   Fetaji B., 2011, 2011 33rd International Conference on Information Technology Interfaces, P269
   Fetaji M., 2011, INF TECHN INT ITI P, P275
   FITTS PM, 1954, J EXP PSYCHOL, V47, P381, DOI 10.1037/h0055392
   Flavián C, 2006, INFORM MANAGE-AMSTER, V43, P1, DOI 10.1016/j.im.2005.01.002
   Fortes R.P.M., 2016, P 22 BRAZ S MULT WEB, P7
   Fuglerud KS, 2012, UNIVERSAL ACCESS INF, V11, P359, DOI 10.1007/s10209-011-0253-9
   Garcia-Lopez E, 2017, COMPUT STAND INTER, V52, P51, DOI 10.1016/j.csi.2017.01.011
   GerhardtPowals J, 1996, INT J HUM-COMPUT INT, V8, P189, DOI 10.1080/10447319609526147
   Ghidini E, 2016, P ANN HICSS, P5691, DOI 10.1109/HICSS.2016.704
   Gilmore D. J., 1991, People and Computers VI. Proceedings of the HCI '91 Conference, P317
   Ginossar Tamar, 2017, JMIR Mhealth Uhealth, V5, pe20, DOI 10.2196/mhealth.7073
   Glissmann S, 2005, ICMB 2005: International Conference on Mobile Business, P308, DOI 10.1109/ICMB.2005.83
   Gorlenko L, 2003, IBM SYST J, V42, P639, DOI 10.1147/sj.424.0639
   Grasso A, 2005, IEEE INTERNATIONAL WORKSHOP ON WIRELESS AND MOBILE TECHNOLOGIES IN EDUCATION, PROCEEDINGS, P123, DOI 10.1109/WMTE.2005.27
   Gündüz F, 2012, INT CONF ADV COMPUT, P49, DOI 10.1109/ACSAT.2012.9
   Hakkila J., 2006, Proceedings of the 3rd international conference on Mobile technology, applications systems, P24, DOI DOI 10.1145/1292331.1292358
   Halpert B.J., 2005, InfoSecCD'05 Proceedings of the 2nd annual conference on information security curriculum development, P112, DOI [10.1145/1107622.1107649, DOI 10.1145/1107622.1107649]
   Han M., 2009, P 2 INT C INT SCI IN, P1013, DOI 10.1145/1655925.1656109
   Harrison R., 2013, J INTERACTION SCI, V1, P1, DOI [10.1186/2194-0827-1-1, DOI 10.1186/2194-0827-1-1]
   Hartson H. R., 1989, Computing Surveys, V21, P5, DOI 10.1145/62029.62031
   Hashim A.S., 2010, US SCI ENG I USER 20, P226, DOI DOI 10.1109/IUSER.2010.5716757
   Heitkötter H, 2013, LECT NOTES BUS INF P, V140, P120
   Hermansson CT, 2014, I C INNOV MOBILE INT, P128, DOI 10.1109/IMIS.2014.59
   Hoehle H, 2016, INT J HUM-COMPUT ST, V89, P35, DOI 10.1016/j.ijhcs.2016.02.001
   Holl K, 2016, PROCEDIA COMPUT SCI, V94, P41, DOI 10.1016/j.procs.2016.08.010
   Holland S., 2001, P MOB HCI 01
   Holzinger Andreas, 2007, Universal Access in the Information Society, V6, P31, DOI 10.1007/s10209-007-0074-z
   Holzinger A, 2005, P INT COMP SOFTW APP, P169
   Hussain A., 2016, AIP C P, P1761
   Inostroza R., P 7 EUR C TEL INF SY, P27
   James J., 2008, COMMON SENSE TIPS DE
   Johnston A, 2016, PROCEEDINGS OF THE 28TH AUSTRALIAN COMPUTER-HUMAN INTERACTION CONFERENCE (OZCHI 2016), P494, DOI 10.1145/3010915.3011003
   Kaikkonen A., P 2 IEE INT C MOB TE
   Kaikkonen A., 2005, MOB TECHN APPL SYST, P1
   Kaikkonen Anne., 2003, CHI '03: Proceedings of the SIGCHI conference on Human factors in computing systems, P329
   Karkkainen L., 2002, Proceedings of the Second Nordic Conference on Human-Computer Interaction - NordiCHI'02, P227, DOI DOI 10.1145/572020.572052
   Karkkainen T., 2008, P 7 INT C MOB UB MUL, P162, DOI DOI 10.1145/1543137.1543170
   Kascak LR, 2014, 2014 IEEE INTERNATIONAL CONFERENCE ON HEALTHCARE INFORMATICS (ICHI), P343, DOI 10.1109/ICHI.2014.54
   Kaur E., 2016, P 14 INT C ADV MOB C, P181, DOI [10.1145/3007120.3007135, DOI 10.1145/3007120.3007135]
   Kellog W. A., 1987, Human-Computer Interaction - INTERACT '87. Proceedings of the Second IFIP Conference, P389
   Kenteris M, 2009, PERS UBIQUIT COMPUT, V13, P103, DOI 10.1007/s00779-007-0191-y
   Kitchenham B., 2007, 2007001 EBSE
   Koch R., 2001, 80 20 PRINCIPLE SECR
   Koskinen E, 2008, SPAA'08: PROCEEDINGS OF THE TWENTIETH ANNUAL SYMPOSIUM ON PARALLELISM IN ALGORITHMS AND ARCHITECTURES, P297
   Koukia S, 2006, 2006 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE AND INTELLIGENT AGENT TECHNOLOGY, WORKSHOPS PROCEEDINGS, P267, DOI 10.1109/WI-IATW.2006.130
   Kristoffersen S., 1999, GROUP'99. Proceedings of the International ACM SIGGROUP Conference on Supporting Group Work, P276, DOI 10.1145/320297.320330
   Kuusinen K., 2014, SOFTW ENG ADV APPL S
   Lal R., 2010, MEEGO C DUBL IR
   Liu C, 2011, J SYST SOFTWARE, V84, P2022, DOI 10.1016/j.jss.2011.06.049
   Lobo D., 2011, International Journal of Information and Electronics Engineering, V1, P33
   Mansar SL, 2012, PROC TECH, V5, P839, DOI 10.1016/j.protcy.2012.09.093
   Masood M, 2015, PROCD SOC BEHV, V197, P1818, DOI 10.1016/j.sbspro.2015.07.241
   Mata P, 2015, PERS UBIQUIT COMPUT, V19, P623, DOI 10.1007/s00779-015-0849-9
   Medhi I, 2011, ACM T COMPUT-HUM INT, V18, DOI 10.1145/1959022.1959024
   Meech S., 2007, CONT QUILTS DESIGN S
   Mendoza-González R, 2012, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON INTERACCION PERSONA-ORDENADOR (INTERACCION'12), DOI 10.1145/2379636.2379639
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Mourad A., 2010, GUIDELINES MOBILE US
   Nagy A, 2014, 2014 5TH IEEE CONFERENCE ON COGNITIVE INFOCOMMUNICATIONS (COGINFOCOM), P487, DOI 10.1109/CogInfoCom.2014.7020505
   Naik S., 2009, TOP 10 TIPS DESIGNIN
   Navarro CX, 2016, IEEE REV IBEROAM TEC, V11, P33, DOI 10.1109/RITA.2016.2518459
   Nayebi F., 2012, 2012 25 IEEE CAN C E, P1, DOI DOI 10.1109/CCECE.2012.6334930
   Nielsen J., 1993, USABILITY ENG
   Noori S., US SCI ENG I USER 20, P57
   Ouhbi S., 2015, Journal of Medical Systems, V39
   Parikh SP, 2012, IEEE T HAPTICS, V5, P39, DOI [10.1109/ToH.2011.71, 10.1109/TOH.2011.71]
   Peischl B, 2015, SOFTWARE QUAL J, V23, P509, DOI 10.1007/s11219-014-9239-1
   Pitkanen J., 2016, MOBILE APPL USABILIT
   Poupyrev I., 2002, P 15 ANN ACM S USER, P51
   Purvis M., 2011, INF TECHN NEW GEN IT
   Reviver D., 2010, 8 USEFUL INTERFACE D
   Robbins N., 2011, P 2011 JOINT STAT M, DOI DOI 10.1002/LT.25677
   Rubin J., 2008, Handbook of usability testing: how to plan, design and conduct e ective tests, P115
   Sangar A.B., 2015, IND J SCI TECHNOL, V8
   Schneidawind J., 1992, USA TODAY
   Seong D.S. K., 2006, Proceedings of the 3rd International Conference on Mobile Technology, Application and Systems, P25, DOI https://doi.org/10.1145/1292331.1292359
   Serm TC, 2006, 2006 INTERNATIONAL CONFERENCE ON COMPUTING & INFORMATICS (ICOCI 2006), P119
   Shitkova M., 2015, Smart enterprise engineering: 12, P1603
   Shneiderman B., 2017, SHNEIDERMANS 8 GOLDE
   Shrestha Sujan, 2007, P 4 INT C MOB TECHN, P187, DOI DOI 10.1145/1378063.1378094
   SIEBRA C, 2017, P 11 INT C UB INF MA, P1
   Siebra C, 2016, PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON HUMAN-COMPUTER INTERACTION WITH MOBILE DEVICES AND SERVICES (MOBILEHCI 2016), P807, DOI 10.1145/2957265.2961848
   Silva PA, 2015, P ANN HICSS, P3237, DOI 10.1109/HICSS.2015.390
   SIMON HA, 1974, SCIENCE, V183, P482, DOI 10.1126/science.183.4124.482
   Su D.K.S, J INTERNET TECHNOL, V7, P239, DOI [10.6138/JIT.2006.7.3.04, DOI 10.6138/JIT.2006.7.3.04]
   Tarasewich P, 2003, COMMUN ACM, V46, P57, DOI 10.1145/953460.953489
   Uther M., 2002, MOBILE INTERNET USAB, P174
   Van Biljon J., 2016, P ANN C S AFR I COMP, P1
   Venkatesh V, 2003, COMMUN ACM, V46, P53, DOI 10.1145/953460.953488
   Warsi A., 2009, USABILITY GUIDELINES
   Weinschenk S., 2000, DESIGNING EFFECTIVE
   Wozny L. A., 1989, Interacting with Computers, V1, P273, DOI 10.1016/0953-5438(89)90015-5
   Yu N, 2016, INFORM SCIENCES, V330, P427, DOI 10.1016/j.ins.2015.06.004
   Zaphiris P., 2005, Proceedings of CHI '05 Human Factors in Computing Systems, P1897, DOI [DOI 10.1145/1056808.1057050, 10.1145/1056808.1057050]
   Zhang P, 2001, INT J ELECTRON COMM, V6, P9
   Zydney JM, 2015, TECHTRENDS, V59, P40
NR 143
TC 31
Z9 32
U1 2
U2 43
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2018
VL 94
BP 130
EP 149
DI 10.1016/j.infsof.2017.10.005
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FO6WE
UT WOS:000417009000008
DA 2024-07-18
ER

PT J
AU Chen, ZF
   Chen, L
   Ma, WWY
   Zhou, XY
   Zhou, YM
   Xu, BW
AF Chen Zhifei
   Chen Lin
   Ma Wanwangying
   Zhou Xiaoyu
   Zhou Yuming
   Xu Baowen
TI Understanding metric-based detectable smells in Python software: A
   comparative study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Python; Code smell; Detection strategy; Software maintainability
ID CODE-SMELLS; BAD SMELLS; IMPACT; IDENTIFICATION; PROBABILITY; AGREEMENT
AB Context Code smells are supposed to cause potential comprehension and maintenance problems in software development. Although code smells are studied in many languages, e.g. Java and C#, there is a lack of technique or tool support addressing code smells in Python.
   Objective: Due to the great differences between Python and static languages, the goal of this study is to define and detect code smells in Python programs and to explore the effects of Python smells on software maintainability.
   Method: In this paper, we introduced ten code smells and established a metric-based detection method with three different filtering strategies to specify Metric thresholds (Experience-Based Strategy, Statistics-Based Strategy, and Tuning Machine Strategy). Then, we performed a Comparative study to investigate how three detection strategies perform in detecting Python smells and how these smells affect software maintainability with different detection strategies. This study utilized a corpus of 106 Python projects with most stars on GitHub.
   Results: The results showed that: (1) the metric-based detection approach performs well in detecting Python smells and Tuning Machine Strategy achieves the best accuracy; (2) the three detection strategies discover some different smell occurrences, and Long Parameter List and Long Method are more prevalent than other smells; (3) several kinds of code smells are more significantly related to changes or faults in Python modules.
   Conclusion: These findings reveal the key features of Python smells and also provide a guideline for the choice of detection strategy in detecting and analyzing Python smells.
C1 [Chen Zhifei; Chen Lin; Ma Wanwangying; Zhou Yuming; Xu Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.
   [Zhou Xiaoyu] Southeast Univ, Sch Comp Sci & Engn, Nanjing 210096, Jiangsu, Peoples R China.
C3 Nanjing University; Southeast University - China
RP Chen, L; Xu, BW (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.
EM chenzhifei@smail.nju.edu.cn; lchen@nju.edu.cn; wwyma@smail.nju.edu.cn;
   zhouxy@seu.edu.cn; zhouyuming@nju.edu.cn; bwxu@nju.edu.cn
RI Xu, Baowen/IXW-4882-2023
OI Xu, Baowen/0000-0001-7743-1296
FU National Natural Science Foundation of China [61472175, 61472178,
   61403187]; Natural Science Foundation of Jiangsu Province of China
   [BK20140611]; National Key Basic Research and Development Program of
   China [2014CB340702]
FX This research is supported by the National Natural Science Foundation of
   China (61472175, 61472178, 61403187), the Natural Science Foundation of
   Jiangsu Province of China (BK20140611), the National Key Basic Research
   and Development Program of China (2014CB340702).
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Akerblom B., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P292
   [Anonymous], 2010, 2010 IEEE International Conference on Software Maintenance, DOI [10.1109/ICSM.2010.5609564, DOI 10.1109/ICSM.2010.5609564]
   [Anonymous], 2016, 2016 IEEE 24th International Conference on Program Comprehension (ICPC)
   Arcoverde R., 2011, WORKSH REF TOOLS, P33
   Beazley D., 2009, PYTHON ESSENTIAL REF
   Brown W.J., 1998, ANTIPATTEMS REFACTOR
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Chen L, 2016, SCI CHINA INFORM SCI, V59, DOI 10.1007/s11432-015-5426-3
   Chen ZF, 2014, P INT COMP SOFTW APP, P219, DOI 10.1109/COMPSAC.2014.30
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Coxe S, 2009, J PERS ASSESS, V91, P121, DOI 10.1080/00223890802634175
   D'Ambros Marco, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P23, DOI 10.1109/QSIC.2010.58
   Deligiannis I, 2004, J SYST SOFTWARE, V72, P129, DOI 10.1016/S0164-1212(03)00240-1
   Du BoisB., 2006, IASTED C SOFTWARE EN, P346
   Fard AM, 2013, IEEE INT WORK C SO, P116, DOI 10.1109/SCAM.2013.6648192
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fontana FA, 2015, INT WORKS EMERG TREN, P44, DOI 10.1109/WETSoM.2015.14
   Fontana FA, 2013, PROC IEEE INT CONF S, P396, DOI 10.1109/ICSM.2013.56
   Fowler M., 1997, REFACTORING IMPROVIN
   Gong L., 2015, P INT S SOFTW TEST A
   Gorbovitski M, 2010, ACM SIGPLAN NOTICES, V45, P27, DOI 10.1145/1899661.1869635
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Holkner A., 2009, Proceedings of the Thirty-Second Australasian Conference on Computer Science, V91, P19
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Lin Chen, 2009, 2009 33rd Annual IEEE International Computer Software and Applications Conference (COMPSAC 2009), P306, DOI 10.1109/COMPSAC.2009.149
   Liu H, 2016, IEEE T SOFTWARE ENG, V42, P544, DOI 10.1109/TSE.2015.2503740
   Lozano A, 2008, PROC IEEE INT CONF S, P227, DOI 10.1109/ICSM.2008.4658071
   Lozano Angelo., 2007, Ninth International Workshop on Principles of software evolution, P31
   LUTZ M., 2010, Programming Python
   Macia I., 2011, Proceedings of the 2011 Fifth Brazilian Symposium on Software Components, Architectures and Reuse (SBCARS 2011), P41, DOI 10.1109/SBCARS.2011.18
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Marinescu R, 2005, PROC IEEE INT CONF S, P701
   Mihancea PF, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P92, DOI 10.1109/CSMR.2005.53
   Min Zhang, 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P458, DOI 10.1109/ICSTW.2011.69
   Mo R, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P51, DOI 10.1109/WICSA.2015.12
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Munro MatthewJames., 2005, Software Metrics, P15, DOI 10.1109/metrics.2005.38
   Oliveto R, 2010, EUR CON SFTWR MTNCE, P248, DOI 10.1109/CSMR.2010.47
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Rahman F, 2012, EMPIR SOFTW ENG, V17, P503, DOI 10.1007/s10664-011-9195-3
   Rao AA, 2008, LECT NOTES ENG COMP, P1001
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Sanner MF, 1999, J MOL GRAPH MODEL, V17, P57
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Stolee KT, 2013, IEEE T SOFTWARE ENG, V39, P1654, DOI 10.1109/TSE.2013.42
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Xu ZG, 2013, INT CONF QUAL SOFTW, P117, DOI 10.1109/QSIC.2013.50
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
NR 64
TC 21
Z9 25
U1 2
U2 29
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2018
VL 94
BP 14
EP 29
DI 10.1016/j.infsof.2017.09.011
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FO6WE
UT WOS:000417009000002
DA 2024-07-18
ER

PT J
AU Morasca, S
   Lavazza, L
AF Morasca, Sandro
   Lavazza, Luigi
TI Risk-averse slope-based thresholds: Definition and empirical evaluation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Fault-proneness; Faultiness; Threshold; Software measures; Logistic
   regression; Probit regression; Risk-aversion
AB Background. Practical use of a measure X for an internal attribute (e.g., size, complexity, cohesion, coupling) of software modules often requires setting a threshold on X, to make decisions as to which modules may be estimated to be potentially faulty. To keep quality under control, practitioners may want to set a threshold on X to identify "early symptoms" of possible faultiness of those modules that should be closely monitored and possibly modified.
   Objective. We propose and evaluate a risk-averse approach to setting thresholds on X based on properties of the slope of statistically significant fault-proneness models, to identify "early symptoms" of module faultiness.
   Method. To this end, we introduce four ways for setting thresholds on X. First, we use the value of X where a fault-proneness model curve changes direction the most, i.e., it has maximum convexity. Then, we use the values of X where the slope has specific values: one-half of the maximum slope, and the median and mean slope in the interval between minimum and maximum slopes.
   Results. We provide the theoretical underpinnings for our approach and we apply our approach to data from the PROMISE repository by building Binary Logistic and Probit regression fault-proneness models. The empirical study shows that the proposed thresholds effectively detect "early symptoms" of module faultiness, while achieving a level of accuracy in classifying faulty modules close to other usual fault proneness thresholds.
   Conclusions. Our method can be practically used for setting "early symptom" thresholds based on evidence captured by statistically significant models. Also, the thresholds depend on characteristics of the models alone, so project managers do not need to devise the thresholds themselves. The proposed thresholds correspond to increasing risk levels, so project managers can choose the threshold that best suits their needs in a risk-averse framework. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Morasca, Sandro; Lavazza, Luigi] Univ Insubria, Dept Theoret & Appl Sci, Varese, VA, Italy.
C3 University of Insubria
RP Morasca, S (corresponding author), Univ Insubria, Dept Theoret & Appl Sci, Varese, VA, Italy.
EM sandro.morasca@uninsubria.it; luigi.lavazza@uninsubria.it
RI Lavazza, Luigi/AAF-5323-2020
OI Morasca, Sandro/0000-0003-4598-7024; Lavazza, Luigi/0000-0002-5226-4337
FU S-CASE - European Commission [610717]; Fondo di ricerca d'Ateneo -
   University degli Studi dell'Insubria; Metodi, tecniche e strumenti per
   l'analisi, l'implementazione e la valutazione di sistemi software
FX Parts of this work have been supported by the FP7 Collaborative Project
   S-CASE (Grant agreement no. 610717), funded by the European Commission,
   and by projects "Metodi, tecniche e strumenti per l'analisi,
   l'implementazione e la valutazione di sistemi software" and "Fondo di
   ricerca d'Ateneo" funded by the University degli Studi dell'Insubria.
CR Alves TL, 2010, PROC IEEE INT CONF S
   [Anonymous], P SAS GLOB FOR 2014
   [Anonymous], 2016, P 12 INT C PRED MOD
   [Anonymous], 2015, PROMISE REPOSITORY E
   Baldi P, 2000, BIOINFORMATICS, V16, P412, DOI 10.1093/bioinformatics/16.5.412
   Bender R, 1999, BIOMETRICAL J, V41, P305, DOI 10.1002/(SICI)1521-4036(199906)41:3<305::AID-BIMJ305>3.0.CO;2-Y
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P722, DOI 10.1109/32.815329
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Cohen J., 1988, STAT POWER ANAL BEHA
   COLEMAN D, 1995, J SYST SOFTWARE, V29, P3, DOI 10.1016/0164-1212(94)00125-7
   Erni K, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P64, DOI 10.1109/METRIC.1996.492444
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Ferreira KAM, 2012, J SYST SOFTWARE, V85, P244, DOI 10.1016/j.jss.2011.05.044
   Filo T. G. S., 2015, P 1 INT C ADV TRENDS
   Foucault M., 2014, P S APPL COMP SAC GY, DOI [10.1145/2554850.2554997, DOI 10.1145/2554850.2554997]
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hardin J.W., 2002, Generalized Estimating Equations
   Hosmer DW, 2013, WILEY SER PROBAB ST, P89
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Khoshgoftaar T. M., 2002, P 13 INT S SOFTW REL, DOI 10.1109ISSRE.2002.1173256
   Kline M., 1998, CALCULUS INTUITIVE P
   Krantz D. H., 1971, Foundations of Measurement, V1
   Lanza Michele., 2006, Object-Oriented Metrics in Practice, DOI DOI 10.1007/3-540-39538-5
   Lavazza L, 2016, ES P 10 ACM INT S, DOI DOI 10.1145/2961111.2962595
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   McCabe T., 1976, IEEE T SOFTW ENG, V2
   McFadden D., 1974, Frontiers in econometrics, DOI DOI 10.1108/EB028592
   Menard S, 2000, AM STAT, V54, P17, DOI 10.2307/2685605
   Mendling J, 2012, J SYST SOFTWARE, V85, P1188, DOI 10.1016/j.jss.2012.01.017
   Morasca S., 2015, P INT S SOFTW REL EN, DOI [10.1109/ISSRE.2015.7381835, DOI 10.1109/ISSRE.2015.7381835]
   Morasca S., 2016, P 20 INT C EV ASS SO, P53
   Morasca S., 2009, P 3 INT S EMP SOFTW
   Oliveira P., 2014, P IEEE C SOFTW MAINT, DOI [10.1109/CSMR-WCRE.2014.6747177, DOI 10.1109/CSMR-WCRE.2014.6747177]
   Rijsbergen C. J. V., 1979, Information Retrieval
   Rosenberg L. H., 1999, P 24 ANN SOFTW ENG W
   Sanchez-Gonzalez L, 2012, 16 INT C EV ASS SOFT, P197, DOI [10.1049/ic.2012.0026, DOI 10.1049/IC.2012.0026]
   Schneidewind N.F., 2001, 7 INT SOFTWARE METRI, P328, DOI [DOI 10.1109/METRIC.2001.915540, 10.1109/METRIC.2001.915540]
   Schneidewind NF, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P402, DOI 10.1109/ISSRE.1997.630888
   Schneidewind NF, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P127, DOI 10.1109/METRIC.1997.637173
   Shatnawi R, 2015, J SOFTW-EVOL PROC, V27, P95, DOI 10.1002/smr.1702
   Shatnawi R, 2010, IEEE T SOFTWARE ENG, V36, P216, DOI 10.1109/TSE.2010.9
   Shatnawi R, 2010, J SOFTW MAINT EVOL-R, V22, P1, DOI 10.1002/smr.404
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Tosun A., 2009, P 3 INT S EMP SOFTW, DOI [10.1145/1671248.1671311, DOI 10.1145/1671248.1671311]
   Vale G, 2015, 2015 29TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P110, DOI 10.1109/SBES.2015.9
   Watson A. H., 1996, 500235 NIST
NR 47
TC 7
Z9 8
U1 1
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2017
VL 89
BP 37
EP 63
DI 10.1016/j.infsof.2017.03.005
PG 27
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EY3HD
UT WOS:000403861300004
DA 2024-07-18
ER

PT J
AU Gheyi, R
   Borba, P
   Sampaio, A
   Ribeiro, M
AF Gheyi, Rohit
   Borba, Paulo
   Sampaio, Augusto
   Ribeiro, Marcio
TI An idiom to represent data types in Alloy
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Data types; Alloy
AB Context: It is common to consider Alloy signatures or UML classes as data types that have a canonical fixed interpretation: the elements of the type correspond to terms recursively generated by the type constructors. However, these language constructs resemble data types but, strictly, they are not.
   Objective: In this article, we propose an idiom to specify data types in Alloy.
   Method: We compare our approach to others in the context of checking data refinement using the Alloy Analyzer tool.
   Results: Some previous studies do not include the generation axiom and may perform unsound analysis. Other studies recommend some optimizations to overcome a limitation in the Alloy Analyzer tool.
   Conclusion: The problem is not related to the tool but the way data types must be represented in Alloy. This study shows the importance of using automated analyses to test translation between different language constructs. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Gheyi, Rohit] Univ Fed Campina Grande, Campina Grande, PB, Brazil.
   [Borba, Paulo; Sampaio, Augusto] Univ Fed Pernambuco, Recife, PE, Brazil.
   [Ribeiro, Marcio] Univ Fed Alagoas, Arapiraca, AL, Brazil.
C3 Universidade Federal de Campina Grande; Universidade Federal de
   Pernambuco; Universidade Federal de Alagoas
RP Gheyi, R (corresponding author), Univ Fed Campina Grande, Campina Grande, PB, Brazil.
EM rohit@dsc.ufcg.edu.br; phmb@cin.ufpe.br; acas@cin.ufpe.br;
   marcio@ic.ufal.br
RI Borba, Paulo/C-5617-2013; Ribeiro, Marcio/C-8356-2017
OI Borba, Paulo/0000-0002-0381-2843; Ribeiro, Marcio/0000-0002-4293-4261;
   Gheyi, Rohit/0000-0002-5562-4449
FU CNPq; CAPES
FX We would like to thank the anonymous reviewers. This work was partially
   supported by CNPq and CAPES grants.
CR Bolton C, 2005, ELECTRON NOTES THEOR, V137, P23, DOI 10.1016/j.entcs.2005.04.023
   Estler HC, 2008, ELECTRON NOTES THEOR, V214, P331, DOI 10.1016/j.entcs.2008.06.015
   Hoare C. A. R., 1972, Acta Informatica, V1, P271, DOI 10.1007/BF00289507
   Jackson Daniel., 2000, P 22 INT C SOFTWARE, P730
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jones CB., 1990, SYSTEMATIC SOFTWARE
   Malik P, 2010, LECT NOTES COMPUT SC, V5977, P377, DOI 10.1007/978-3-642-11811-1_28
   Milicevic Aleksandar, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering (ICSE). Proceedings, P609, DOI 10.1109/ICSE.2015.77
   Ramananandro T, 2008, FORM ASP COMPUT, V20, P21, DOI 10.1007/s00165-007-0058-z
   Woodcock J., 1996, Using Z: Specification, Refinement, and Proof
NR 10
TC 0
Z9 0
U1 0
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2017
VL 82
BP 173
EP 176
DI 10.1016/j.infsof.2016.11.003
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED9CE
UT WOS:000389167000010
DA 2024-07-18
ER

PT J
AU Ghoreshi, M
   Haghighi, H
AF Ghoreshi, M.
   Haghighi, H.
TI An incremental method for extracting tests from object-oriented
   specification
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Test case generation; Formal specification; Specification-based testing;
   Object orientation; Object-Z
ID FRAMEWORK; CLASSBENCH; NOTION
AB Context: The nature of the object-oriented development process is iterative and incremental, and through this process, software artifacts are refined and evolved continuously; however, most of proposed methods for deriving test cases from formal, object-oriented specifications have been adapted from previous structural techniques and are not aligned with such an incremental process. These methods are not adaptive with changes in the software specification, and there is no mechanism to evolve test artifacts respectively. Moreover, the existing methods do not cover all different object-oriented testing levels, i.e., intra-method, inter-method, intra-class and inter-class levels.
   Objective: This paper presents an incremental method for extracting tests from formal, object-oriented specifications. Extracted tests are adaptive with changes in the class specification. In addition, the proposed method covers all different object-oriented testing levels.
   Method: We first make a test machine (as a new notion introduced in this paper) for each class operation to cover the intra-method test level. With the combination of these test machines, new test machines covering the inter-method and intra-class test levels can be made. Extracted tests can be easily modified when the class specification is modified, and, in this way, our approach enables iterative and incremental test derivation. With test machines corresponding to a class hierarchy, this approach can also be used for deriving inter-class tests.
   Results: As a case study, we applied our method to the specification of a computer game. Results indicate that test machines can incrementally be extracted through a class hierarchy, and a parent test machine can be used to obtain its corresponding child test machines (by reusing test artifacts). Furthermore, by running extracted test cases on the implemented game, we discovered some real bugs.
   Conclusion: The proposed approach can incrementally extract tests and bring extendibility and reusability as two main advantages of the object- oriented paradigm to the test domain. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Ghoreshi, M.; Haghighi, H.] Shahid Beheshti Univ, Fac Comp Sci & Engn, Tehran, Iran.
C3 Shahid Beheshti University
RP Haghighi, H (corresponding author), Shahid Beheshti Univ, Fac Comp Sci & Engn, Tehran, Iran.
EM h_haghighi@sbu.ac.ir
CR Ahmad M, 2010, COMM COM INF SC, V117, P195
   Alagar VS, 2011, TEXTS COMPUT SCI, P1, DOI 10.1007/978-0-85729-277-3
   Alexander RT, 2004, J UNIVERS COMPUT SCI, V10, P391
   Ammann Paul, 2008, Introduction to software testing, V1st
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Binder R. V., 1996, Software Testing, Verification and Reliability, V6, P125, DOI 10.1002/(SICI)1099-1689(199609/12)6:3/4<125::AID-STVR121>3.0.CO;2-X
   Binder R.V., 2000, AW OBJ TECHNOL S
   Carrington D, 2000, SOFTW TEST VERIF REL, V10, P111, DOI 10.1002/1099-1689(200006)10:2<111::AID-STVR204>3.0.CO;2-P
   Courbis A.L., 2012, SOFTWARE ENG KNOWLED
   Cristia Maximiliano, 2010, Proceedings of the 2010 8th IEEE International Conference on Software Engineering and Formal Methods (SEFM 2010), P268, DOI 10.1109/SEFM.2010.31
   Cristiá M, 2014, LECT NOTES COMPUT SC, V8411, P400
   Cristiá M, 2014, SOFTW TEST VERIF REL, V24, P3, DOI 10.1002/stvr.1477
   DICK J, 1993, FME 93 IND STRENGTH
   Ghoreshi M., TECHNICAL REPORT
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   Hoffman D, 1997, SOFTWARE PRACT EXPER, V27, P573, DOI 10.1002/(SICI)1097-024X(199705)27:5<573::AID-SPE98>3.0.CO;2-3
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   Liu L, 2004, LECT NOTES COMPUT SC, V3308, P306
   Liu L, 2002, IEEE INT C ENG COMP, P153, DOI 10.1109/ICECCS.2002.1181508
   McDonald J., 1998, INT C FORM ENG METH
   Meyer B., 1988, Object-Oriented Software Construction
   Murray L, 1997, AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE - PROCEEDINGS, P80, DOI 10.1109/ASWEC.1997.623757
   Nadeem A, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P81
   Najafi M, 2012, SCI IRAN, V19, P1699, DOI 10.1016/j.scient.2012.06.021
   Offutt J., 2001, IEEE P 12 INT S SOFT
   Shahamiri SR, 2011, INFORM SOFTWARE TECH, V53, P774, DOI 10.1016/j.infsof.2011.02.006
   Smith Graeme., 2000, OBJECT Z SPECIFICATI
   Stocks P, 1996, IEEE T SOFTWARE ENG, V22, P777, DOI 10.1109/32.553698
   Taivalsaari A, 1996, ACM COMPUT SURV, V28, P438, DOI 10.1145/243439.243441
   Woodcock J., 1996, Using Z: Specification, Refinement, and Proof
   Young M., 2008, SOFTWARE TESTING ANA
NR 31
TC 2
Z9 2
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2016
VL 78
BP 1
EP 26
DI 10.1016/j.infsof.2016.05.005
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR0YZ
UT WOS:000379634100001
DA 2024-07-18
ER

PT J
AU Ayora, C
   Torres, V
   de la Vara, JL
   Pelechano, V
AF Ayora, Clara
   Torres, Victoria
   Luis de la Vara, Jose
   Pelechano, Vicente
TI Variability management in process families through change patterns
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Business process modeling; Business process variability; Process-aware
   information system; Process family; Change patterns
ID BUSINESS PROCESS MODELS; SUPPORT
AB Context: The increasing adoption of process-aware information systems together with the high variability in business processes has resulted in collections of process families. These families correspond to a business process model and its variants, which can comprise hundreds or thousands of different ways of realizing this process. Managing process variability in this context can be very challenging, labor-intensive, and error-prone, and new approaches for managing process families are necessary.
   Objective: We aim to facilitate variability management in process families, ensure process family correctness, and reduce the effort needed for such purposes.
   Method: We have derived a set of change patterns for process families from variability-specific language constructs identified in the literature. For validation, we have conducted a case study with a safety standard in which we have measured the number of operations needed to model and evolve the variability of the standard with and without the patterns.
   Results: We present 10 change patterns for managing variability in process families and show how they can be implemented. The patterns support the modeling and evolution of process families and ensure process family correctness by automatically introducing and deleting modeling elements. The case study results show that the application of the defined change patterns can reduce the number of operations when modeling a process family by 34% and when evolving it by 40%.
   Conclusions: The application of the change patterns can help in effectively modeling and evolving large and highly-variable process families. Their application can also considerably reduce variability management effort. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Ayora, Clara; Torres, Victoria; Pelechano, Vicente] Univ Politecn Valencia, Ctr Invest Metodos Prod Software, Camino Vera S-N, E-46022 Valencia, Spain.
   [Luis de la Vara, Jose] Univ Carlos III Madrid, Dept Comp Sci, Avda Univ 30, Leganes 28911, Madrid, Spain.
C3 Universitat Politecnica de Valencia; Universidad Carlos III de Madrid
RP Ayora, C (corresponding author), Univ Politecn Valencia, Ctr Invest Metodos Prod Software, Camino Vera S-N, E-46022 Valencia, Spain.
EM cayora@pros.upv.es; vtorres@pros.upv.es; jvara@inf.uc3m.es;
   pele@pros.upv.es
RI de la Vara, Jose Luis/A-7678-2018; Pelechano, Vicente/S-4344-2016;
   Torres, Victoria/B-3828-2017
OI de la Vara, Jose Luis/0000-0003-1813-398X; Pelechano,
   Vicente/0000-0003-1090-230X; Torres, Victoria/0000-0002-2039-2174
FU Spanish Ministry of Economy and Competitiveness [SMART-ADAPT
   TIN2013-42981-P]
FX This work has been developed with the financial support of Spanish
   Ministry of Economy and Competitiveness under the project SMART-ADAPT
   TIN2013-42981-P. We also want to thank Barbara Weber and Manfred
   Reichert for their valuable input and feedback on the design and
   development of the set of change patterns for process families.
CR Alférez GH, 2014, J SYST SOFTWARE, V91, P24, DOI 10.1016/j.jss.2013.06.034
   [Anonymous], 2013, Business process management, DOI DOI 10.1007/978-3-642-33143-5
   [Anonymous], 2012, Business Process Management: Concepts, Languages, Architectures
   [Anonymous], 2010, 615082010 IEC
   [Anonymous], 2002, REAL WORLD RES RESOU
   [Anonymous], THESIS U TWENTE NETH
   ARIS community, BAS RUL EPC MOD
   Ayora C, 2012, PROSTR201206
   Ayora C, 2015, INFORM SOFTWARE TECH, V57, P248, DOI 10.1016/j.infsof.2014.05.009
   Ayora C, 2013, LECT NOTES BUS INF P, V147, P246
   Ayora C, 2013, LECT NOTES BUS INF P, V132, P477
   Baier T, 2010, LECT NOTES BUS INF P, V50, P108
   de la Vara JL, 2013, LECT NOTES COMPUT SC, V8107, P69, DOI 10.1007/978-3-642-41533-3_5
   Dijkman R, 2012, COMPUT IND, V63, P91, DOI 10.1016/j.compind.2011.12.003
   Döhring M, 2011, LECT NOTES BUS INF P, V87, P25
   Dumas M, 2005, PROCESS-AWARE INFORMATION SYSTEMS: BRIDGING PEOPLE AND SOFTWARE THROUGH PROCESS TECHNOLOGY, P1, DOI 10.1002/0471741442
   Gottschalk F, 2009, LECT NOTES COMPUT SC, V5565, P486, DOI 10.1007/978-3-642-02144-2_38
   Gschwind T, 2008, LECT NOTES COMPUT SC, V5240, P4, DOI 10.1007/978-3-540-85758-7_4
   Hallerbach A, 2010, J SOFTW MAINT EVOL-R, V22, P519, DOI 10.1002/smr.491
   Kumar A, 2012, COMPUT IND, V63, P112, DOI 10.1016/j.compind.2011.12.002
   La Rosa M., 2013, BUSINESS PROCESS VAR
   La Rosa M, 2009, SOFTW SYST MODEL, V8, P251, DOI 10.1007/s10270-008-0090-3
   Lanz A, 2014, REQUIR ENG, V19, P113, DOI 10.1007/s00766-012-0162-3
   Lonn Carl-Mikael, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P190, DOI 10.1007/978-3-642-31095-9_13
   De la Vara JL, 2010, LECT NOTES COMPUT SC, V6426, P132
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Moreno-Montes de Oca I, 2015, INFORM SOFTWARE TECH, V58, P187, DOI 10.1016/j.infsof.2014.07.011
   Nair S, 2015, INFORM SOFTWARE TECH, V60, P1, DOI 10.1016/j.infsof.2014.12.002
   Nair S, 2014, INFORM SOFTWARE TECH, V56, P689, DOI 10.1016/j.infsof.2014.03.001
   OMG, BUS PROC MOD NOT VER
   Panesar-Walawege RK, 2013, INFORM SOFTWARE TECH, V55, P836, DOI 10.1016/j.infsof.2012.11.009
   Pascalau E, 2010, LECT NOTES BUS INF P, V67, P91
   Puhlmann F., 2006, TECHNICAL REPORT
   Reinhartz-Berger I, 2008, J DATABASE MANAGE, V19, P74, DOI 10.4018/jdm.2008010104
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Russell N., 2004, FITTR200401 QUEENSLA
   Russell N., 2004, 127 EINDHOVEN U TECH
   Russell N., 2006, P CAISE 06
   Sbai H, 2013, ICEIS: PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 3, P382, DOI 10.5220/0004565503820387
   Scherer R, 2011, IFIP ADV INF COMM TE, V362, P341
   Shull F., 2008, Guide to advanced empirical software engineering, Band, V93
   Simmonds J., 2011, TRDCC201112 U CHIL
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Vogelaar JJCL, 2012, LECT NOTES BUS INF P, V100, P50
   Weber B., 2012, ENABLING FLEXIBILITY
   Weber B, 2008, DATA KNOWL ENG, V66, P438, DOI 10.1016/j.datak.2008.05.001
   Weber B, 2011, COMPUT IND, V62, P467, DOI 10.1016/j.compind.2010.12.012
   Wohlin C., 2012, Experimentation in Software Engineering
   [No title captured]
NR 50
TC 14
Z9 16
U1 0
U2 12
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2016
VL 74
BP 86
EP 104
DI 10.1016/j.infsof.2016.01.007
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DJ7BX
UT WOS:000374368000006
OA Green Published
DA 2024-07-18
ER

PT J
AU Garousi, V
   Fernandes, JM
AF Garousi, Vahid
   Fernandes, Joao M.
TI Highly-cited papers in software engineering: The top-100
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Highly-cited papers; Top cited; Most cited; Most
   frequently cited; Bibliometrics
ID ARTICLES; JOURNALS; SCIENCE; BIBLIOMETRICS; AUTHORS; WEB
AB Context: According to the search reported in this paper, as of this writing (May 2015), a very large number of papers (more than 70,000) have been published in the area of Software Engineering (SE) since its inception in 1968. Citations are crucial in any research area to position the work and to build on the work of others. Identification and characterization of highly-cited papers are common and are regularly reported in various disciplines.
   Objective: The objective of this study is to identify the papers in the area of SE that have influenced others the most as measured by citation count Studying highly-cited SE papers helps researchers to see the type of approaches and research methods presented and applied in such papers, so as to be able to learn from them to write higher quality papers which will likely receive high citations.
   Method: To achieve the above objective, we conducted a study, comprised of five research questions, to identify and classify the top-100 highly-cited SE papers in terms of two metrics: total number of citations and average annual number of citations.
   Results: By total number of citations, the top paper is "A metrics suite for object-oriented design", cited 1817 times and published in 1994. By average annual number of citations, the top paper is "QoS-aware middleware for Web services composition", cited 154.2 times on average annually and published in 2004.
   Conclusion: It is concluded that it is important to identify the highly-cited SE papers and also to characterize the overall citation landscape in the SE field. We hope that this paper will encourage further discussions in the SE community towards further analysis and formal characterization of the highly-cited SE papers. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Garousi, Vahid] Hacettepe Univ, Dept Comp Engn, Software Engn Res Grp, Ankara, Turkey.
   [Fernandes, Joao M.] Univ Minho, Sch Engn, Dept Informat, Ctr ALGORITMI, Braga, Portugal.
C3 Hacettepe University; Universidade do Minho
RP Garousi, V (corresponding author), Hacettepe Univ, Dept Comp Engn, Software Engn Res Grp, Ankara, Turkey.
EM vahid.garousi@hacettepe.edu.tr; jmf@di.uminho.pt
RI Fernandes, João/IUN-2117-2023; Fernandes, João M/B-3942-2013
OI Fernandes, João M/0000-0003-1174-1966; Garousi,
   Vahid/0000-0001-6590-7576
FU Hacettepe University
FX Vahid Garousi was partially supported by several internal grants
   provided by the Hacettepe University. The authors would like to thank
   the anonymous reviewers for their insightful comments.
CR Abramo G, 2014, J INFORMETR, V8, P89, DOI 10.1016/j.joi.2013.10.011
   Abrizah A, 2013, SCIENTOMETRICS, V94, P721, DOI 10.1007/s11192-012-0813-7
   Aghaei Chadegani A, 2013, ASIAN SOC SCI, V9, P18, DOI [DOI 10.5539/ASS.V9N5P18, 10.5539/ass.v9n5p18]
   Aksnes DW, 2003, RES EVALUAT, V12, P159, DOI 10.3152/147154403781776645
   Antonakis J, 2014, LEADERSHIP QUART, V25, P152, DOI 10.1016/j.leaqua.2013.10.014
   Archambault É, 2009, J AM SOC INF SCI TEC, V60, P1320, DOI 10.1002/asi.21062
   AVERSA ES, 1985, SCIENTOMETRICS, V7, P383, DOI 10.1007/BF02017156
   Baier C, 2003, IEEE T SOFTWARE ENG, V29, P524, DOI 10.1109/TSE.2003.1205180
   Basili V.R., 1992, SOFTWARE MODELING ME
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Bornmann L, 2014, RES EVALUAT, V23, P166, DOI 10.1093/reseval/rvu002
   Bornmann L, 2010, PLOS ONE, V5, DOI 10.1371/journal.pone.0014331
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Buhr RJA, 1998, IEEE T SOFTWARE ENG, V24, P1131, DOI 10.1109/32.738343
   Cai KY, 2008, J SYST SOFTWARE, V81, P1051, DOI 10.1016/j.jss.2007.08.028
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Corby Z, 2010, NAT NEWS, DOI [10.1038/news.2010.539, DOI 10.1038/NEWS.2010.539]
   Danell R, 2011, J AM SOC INF SCI TEC, V62, P50, DOI 10.1002/asi.21454
   de Freitas FG, 2011, LECT NOTES COMPUT SC, V6956, P18, DOI 10.1007/978-3-642-23716-4_5
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Eaton DJ, 2014, MED PHYS, V41, P43, DOI 10.1118/1.4887822
   Falagas ME, 2008, FASEB J, V22, P338, DOI 10.1096/fj.07-9492LSF
   Farhoodi R, 2013, INT J SOFTW ENG KNOW, V23, P463, DOI 10.1142/S0218194013500137
   Feldt R., ISI LISTED SE J
   Fernandes JM, 2014, SCIENTOMETRICS, V101, P257, DOI 10.1007/s11192-014-1331-6
   FRUCHTERMAN TMJ, 1991, SOFTWARE PRACT EXPER, V21, P1129, DOI 10.1002/spe.4380211102
   Fuggetta A, 1998, IEEE T SOFTWARE ENG, V24, P342, DOI 10.1109/32.685258
   GARFIELD E, 1955, SCIENCE, V122, P108, DOI 10.1126/science.122.3159.108
   Garousi V., GRADUATE COURSE RES
   Garousi V., ALL SOURCE DATA HIGH
   Garousi V., RAW DATA CLASSIFICAT
   Garousi V., 2010, Computer and Information Science, V3, P19, DOI DOI 10.1142/S0218194013500423
   Garousi V, 2015, SCIENTOMETRICS, V105, P23, DOI 10.1007/s11192-015-1663-x
   Garousi V, 2013, INT J SOFTW ENG KNOW, V23, P1343, DOI 10.1142/S0218194013500423
   Hamrick TA, 2010, INTERFACES, V40, P454, DOI 10.1287/inte.1100.0527
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Ioannidis JPA, 2014, NATURE, V514, P561, DOI 10.1038/514561a
   Jensen Kurt, 2007, International Journal on Software Tools for Technology Transfer, V9, P213, DOI 10.1007/s10009-007-0038-x
   Kim S, 2011, APPL WATER SCI, V1, P11, DOI 10.1007/s13201-011-0003-4
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Miyairi N, 2012, SCIENTOMETRICS, V92, P197, DOI 10.1007/s11192-012-0722-9
   Newman MEJ, 2014, EPL-EUROPHYS LETT, V105, DOI 10.1209/0295-5075/105/28002
   Parnas DL, 2007, COMMUN ACM, V50, P19, DOI 10.1145/1297797.1297815
   Persson O, 2010, SCIENTOMETRICS, V83, P397, DOI 10.1007/s11192-009-0007-0
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Ponce FA, 2010, J NEUROSURG, V112, P223, DOI 10.3171/2009.12.JNS091599
   Pysek P, 2006, PRESLIA, V78, P437
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Small H, 2004, SCIENTOMETRICS, V60, P305, DOI 10.1023/B:SCIE.0000034376.55800.18
   Tijssen RJW, 2002, SCIENTOMETRICS, V54, P381, DOI 10.1023/A:1016082432660
   Van Noorden R, 2014, NATURE, V514, P550, DOI 10.1038/514550a
   Wang MY, 2011, SCIENTOMETRICS, V87, P695, DOI 10.1007/s11192-011-0366-1
   Wohlin C, 2005, INFORM SOFTWARE TECH, V47, P957, DOI 10.1016/j.infsof.2005.09.002
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C, 2008, INFORM SOFTWARE TECH, V50, P3, DOI 10.1016/j.infsof.2007.10.002
   Wohlin C, 2007, INFORM SOFTWARE TECH, V49, P2, DOI 10.1016/j.infsof.2006.08.004
   Wohlin C, 2009, INFORM SOFTWARE TECH, V51, P2, DOI 10.1016/j.infsof.2008.09.012
   Wong WE, 2008, J SYST SOFTWARE, V81, P1059, DOI 10.1016/j.jss.2007.09.018
   Wong WE, 2011, J SYST SOFTWARE, V84, P162, DOI 10.1016/j.jss.2010.09.036
   Wong WE, 2009, J SYST SOFTWARE, V82, P1370, DOI 10.1016/j.jss.2009.06.018
NR 62
TC 43
Z9 44
U1 3
U2 74
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2016
VL 71
BP 108
EP 128
DI 10.1016/j.infsof.2015.11.003
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DB0RW
UT WOS:000368216200006
OA Green Published
DA 2024-07-18
ER

PT J
AU Bjarnason, E
   Smolander, K
   Engström, E
   Runeson, P
AF Bjarnason, Elizabeth
   Smolander, Kari
   Engstrom, Emelie
   Runeson, Per
TI A theory of distances in software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Theory; Empirical software engineering; Requirements engineering;
   Verification; Human factors; Distances
ID REQUIREMENTS TRACEABILITY; TRANSFORMATION; IMPACT
AB Context: Coordinating a software project across distances is challenging. Even without geographical and time zone distances, other distances within a project can cause communication gaps. For example, organisational and cognitive distances between product owners and development-near roles such as developers and testers can lead to differences in understanding and interpretation of the business requirements. Applying good software development practices, known to enhance alignment and coordination within development projects, can alleviate these challenges.
   Objective: The aim of our research is to identify and describe underlying factors which can explain why certain practices support aligning and coordinating software development projects.
   Method: We have inductively generated a theory analysing empirical data consisting of 15 interviews from 5 different companies. The systematic and iterative analysis was based on an initial hypothesis that distances affect development, and on results from previous research.
   Results: We present a theory of distances that explains how practices improve the communication within a project by impacting distances between people, activities and artefacts. We also present a theoretical model of how specific alignment practices affect different types of distances.
   Conclusions: The results provide a basis for further research and can be used by software organisations to improve on software practice. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Bjarnason, Elizabeth; Engstrom, Emelie; Runeson, Per] Lund Univ, Dept Comp Sci, S-22100 Lund, Sweden.
   [Smolander, Kari] Lappeenranta Univ Technol, Innovat & Software, Lappeenranta, Finland.
C3 Lund University; Lappeenranta-Lahti University of Technology LUT
RP Bjarnason, E (corresponding author), Lund Univ, Dept Comp Sci, Box 118, S-22100 Lund, Sweden.
EM elizabeth@cs.lth.se; kari.smolander@lut.fi; emelie.engstrom@cs.lth.se;
   per.runeson@cs.lth.se
RI Engström, Emelie/AAG-7808-2019; Runeson, Per/H-5113-2019; Smolander,
   Kari/B-4581-2015
OI Engström, Emelie/0000-0001-6736-9425; Runeson, Per/0000-0003-2795-4851;
   Bjarnason, Elizabeth/0000-0001-9070-0008
FU EASE (ease.cs.lth.se), Ericsson Research and Academy of Finland grant
   [259454]
FX This research was partly funded by EASE (ease.cs.lth.se), Ericsson
   Research and Academy of Finland grant #259454.
CR Agerfalk P.J., 2005, P INT WORKSHOP DISTR, P47
   Allen T. J., 1977, Managing the flow of technology: technology transfer and the dissemination of technical information within RD organizations
   [Anonymous], 1998, PROC 4 INT WORKING C
   [Anonymous], P 44 ANN HAW INT C S
   [Anonymous], 1969, NATO WORKING C SOFTW
   [Anonymous], P 1 INT WORKSH AG RE
   [Anonymous], P IEEE 1 INT S REQ E
   [Anonymous], 197592005 ISOIEC TR
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], P 2008 INT C SOFTW T
   [Anonymous], J EXPERT SYST
   [Anonymous], P 3 SEMAT WORKSH GEN
   [Anonymous], ACM SIGSOFT SOFTW EN
   [Anonymous], GUIDE ADV EMPIRICAL
   [Anonymous], IEEE T SOFTW
   [Anonymous], 2009, WORKSHOP COLLABORATI
   [Anonymous], SPECIAL ISSUE GEN TH
   [Anonymous], REQUIREMENTS ENG J
   [Anonymous], J EMPIRICAL SOFTW EN
   [Anonymous], THESIS
   Azzeb M, 2008, LECT NOTES COMPUT SC, V5007, P123, DOI 10.1007/978-3-540-79588-9_12
   Bjarnason Elizabeth, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P292, DOI 10.1007/978-3-642-37422-7_21
   Bjarnason E, 2011, INT REQUIR ENG CONF, P37, DOI 10.1109/RE.2011.6051639
   BOEHM BW, 1989, IEEE T SOFTWARE ENG, V15, P902, DOI 10.1109/32.29489
   Borg M, 2014, EMPIR SOFTW ENG, V19, P1565, DOI 10.1007/s10664-013-9255-y
   Briand LC, 2006, J SYST SOFTWARE, V79, P339, DOI 10.1016/j.jss.2005.05.001
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Calefato F, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3
   Chakraborty C, 2007, APPL SOFT COMPUT, V7, P858, DOI 10.1016/j.asoc.2006.02.006
   Cheng BHC, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P285, DOI 10.1109/FOSE.2007.17
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   Damian D, 2005, EMPIR SOFTW ENG, V10, P255, DOI 10.1007/s10664-005-1288-4
   Damian D, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P149, DOI 10.1109/APSEC.2001.991471
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   Dias Neto A. C., 2007, P ACM INT WORKSH EMP, P31
   Dibbern J, 2008, MIS QUART, V32, P333
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Gregor S, 2006, MIS QUART, V30, P611
   Grieskamp W, 2011, SOFTW TEST VERIF REL, V21, P55, DOI 10.1002/stvr.427
   Hall JG, 2012, INNOV SYST SOFTW ENG, V8, P175, DOI 10.1007/s11334-011-0171-2
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Hayes JH, 2007, INNOV SYST SOFTW ENG, V3, P193, DOI 10.1007/s11334-007-0024-1
   Herlea D, 1998, SEVENTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WET ICE '98), P57, DOI 10.1109/ENABL.1998.725671
   Hofstede G., 1993, Executive, V7, P81, DOI [DOI 10.5465/AME.1993.9409142061, 10.5465/ame.1993]
   Holmström H, 2006, INFORM SYST MANAGE, V23, P7, DOI 10.1201/1078.10580530/46108.23.3.20060601/93703.2
   Huo M, 2008, LECT NOTES COMPUT SC, V5007, P173
   Jacobson I, 2012, IEEE INT CONF AUTOM, P15, DOI 10.1145/2351676.2351679
   Jarke M, 1998, COMMUN ACM, V41, P32, DOI 10.1145/290133.290145
   Jilani LL, 2001, IEEE T SOFTWARE ENG, V27, P673, DOI 10.1109/32.940565
   Johnson P., 2012, IEEE Software, V29, P94, DOI 10.1109/MS.2012.127
   Johnson P., 2013, ACM SIGSOFT SOFTW EN, V38, P47, DOI DOI 10.1145/2507288.2529923
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Kukkanen J, 2009, ASIA PAC SOFWR ENG, P482, DOI 10.1109/APSEC.2009.62
   Kwan I, 2007, INT REQUIR ENG CONF, P369, DOI 10.1109/RE.2007.55
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Liberman N., 2007, Social psychology: Handbook of basic principles, P353, DOI DOI 10.1037/E633942013-052
   Lormans M, 2008, EMPIR SOFTW ENG, V13, P727, DOI 10.1007/s10664-008-9078-4
   Marczak S, 2011, INT REQUIR ENG CONF, P47, DOI 10.1109/RE.2011.6051643
   Marczak S, 2008, INT REQUIR ENG CONF, P53, DOI 10.1109/RE.2008.26
   Martin RC, 2008, IEEE SOFTWARE, V25, P54, DOI 10.1109/MS.2008.24
   Mellor SJ, 2003, IEEE SOFTWARE, V20, P14, DOI 10.1109/MS.2003.1231145
   Melnik G., 2006, AGILE 2006
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   Päivärinta T, 2015, SCI COMPUT PROGRAM, V101, P124, DOI 10.1016/j.scico.2014.11.012
   Post H, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P295, DOI 10.1109/RE.2009.43
   Prikladnicki R, 2012, J SOFTW-EVOL PROC, V24, P119, DOI 10.1002/smr.475
   Ramesh B, 1997, ANN SOFTW ENG, V3, P397, DOI 10.1023/A:1018969401055
   Ramesh B, 1998, COMMUN ACM, V41, P37, DOI 10.1145/290133.290147
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Regnell B, 2000, J SYST SOFTWARE, V50, P117, DOI 10.1016/S0164-1212(99)00084-9
   Robson C., 2002, Real world research
   Sabaliauskaite G, 2010, LECT NOTES COMPUT SC, V6182, P128, DOI 10.1007/978-3-642-14192-8_14
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Stol KJ, 2015, SCI COMPUT PROGRAM, V101, P79, DOI 10.1016/j.scico.2014.11.010
   Thelin T, 2000, J SYST SOFTWARE, V52, P139, DOI 10.1016/S0164-1212(99)00140-5
   Uusitalo EJ, 2008, INT REQUIR ENG CONF, P265, DOI 10.1109/RE.2008.30
   WATKINS R, 1994, IEEE SOFTWARE, V11, P104, DOI 10.1109/52.300100
   Winkler JK, 2008, INFORM SYST FRONT, V10, P243, DOI 10.1007/s10796-008-9068-5
   Wolf Timo, 2008, Software Process: Improvement and Practice, V13, P493, DOI 10.1002/spip.401
   Yousuf F, 2008, INMIC: 2008 INTERNATIONAL MULTITOPIC CONFERENCE, P553, DOI 10.1109/INMIC.2008.4777800
   Yue T, 2011, REQUIR ENG, V16, P75, DOI 10.1007/s00766-010-0111-y
   Zhu JJ, 2012, INFORM SCIENCES, V212, P15, DOI 10.1016/j.ins.2012.05.011
NR 86
TC 35
Z9 37
U1 2
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2016
VL 70
BP 204
EP 219
DI 10.1016/j.infsof.2015.05.004
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA3LC
UT WOS:000367697600015
DA 2024-07-18
ER

PT J
AU Ralph, P
AF Ralph, Paul
TI Software engineering process theory: A multi-method comparison of
   Sensemaking-Coevolution-Implementation Theory and
   Function-Behavior-Structure Theory
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Process theory; Software process; Case study; Questionnaire
ID DESIGN; SCIENCE; MODEL
AB Context: Software engineering has experienced increased calls for attention to theory, including process theory and general theory. However, few process theories or potential general theories have been proposed and little empirical evaluation has been attempted.
   Objective: The purpose of this paper is to empirically evaluate two previously untested software development process theories - Sensemaking-Coevolution-Implementation Theory (SCI) and the Function-Behavior-Structure Framework (FBS).
   Method: A survey of more than 1300 software developers is combined with four longitudinal, positivist case studies to achieve a simultaneously broad and deep empirical evaluation. Instrument development, statistical analysis of questionnaire data, case data analysis using a closed-ended, a priori coding scheme and data triangulation are described.
   Results: Case data analysis strongly supports SCI, as does analysis of questionnaire response distributions (p < 0.001; chi-square goodness of fit test). Furthermore, case-questionnaire triangulation found no evidence that support for SCI varied by participants' gender, education, experience, nationality or the size or nature of their projects.
   Conclusions: SCI is supported. No evidence of an FBS subculture was found. This suggests that instead of iterating between weakly-coupled phases (analysis, design, coding, testing), it is more accurate and useful to conceptualize development as ad hoc oscillation between making sense of the project context (Sensemaking), simultaneously improving mental representations of the context and design space (Coevolution) and constructing, debugging and deploying software artifacts (Implementation). (C) 2015 Elsevier B.V. All rights reserved.
C1 [Ralph, Paul] Univ Auckland, Dept Comp Sci, Auckland 1142, New Zealand.
C3 University of Auckland
RP Ralph, P (corresponding author), Univ Auckland, Dept Comp Sci, Auckland 1142, New Zealand.
EM paul@paulralph.name
RI Ralph, D. Paul/H-4322-2019
OI Ralph, D. Paul/0000-0002-7411-0857
FU National Sciences and Engineering Research Council of Canada; University
   of British Columbia; Lancaster University
FX This research was funded by the National Sciences and Engineering
   Research Council of Canada, The University of British Columbia and
   Lancaster University. Special thanks are due to Brett Cannon, Ekkart
   Kindler, Pericles Loucopoulus, Pontus Johnson, Tero Paivarinta, Jeffrey
   Parsons and Olga Volkoff for their encouragement and advice. I would
   also like to thanks all of those who participated in and helped recruit
   participants for this study.
CR Agarwal R, 1999, IEEE T SOFTWARE ENG, V25, P541, DOI 10.1109/32.799953
   Alexander C., 1964, Notes on the Synthesis of Form
   Anderson P, 1999, ORGAN SCI, V10, P216, DOI 10.1287/orsc.10.3.216
   [Anonymous], SIGSOFT SOFTW ENG NO
   [Anonymous], 2001, Axiomatic Design: Advances and Applications
   [Anonymous], 2005, Extreme programming explained: Embrace change
   Avison D., 2006, Information Systems Development-Methodologies, Techniques & Tools
   Berente N., 2006, P 1 INT C DES SCI IN
   Bergman M, 2007, J ASSOC INF SYST, V8, P546, DOI 10.17705/1jais.00144
   Bjarnason E., 2014, 3rd SEMAT Workshop on General Theories of Software Engineering (GTSE'14), P21, DOI DOI 10.1145/2593752.2593757
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Bollinger T, 1997, COMPUTER, V30, P128, DOI 10.1109/2.625346
   Brewer J., 2006, FDN MULTIMETHOD RES
   Brooks F.P., 2010, Design of Design: Essays from a Computer Scientist
   Churchman C.W., 1971, The design of inquiring systems
   Colman A., 2008, A dictionary of psychology
   Cross N., 2001, Design Studies, V22, P425, DOI [10.1016/S0142-694X(01)00009-6, DOI 10.1016/S0142-694X(01)00009-6]
   CROSS N., 1992, RES DESIGN THINKING
   Cross N., 2001, DESIGN KNOWING LEARN, P79
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Dervin B., 1998, Journal of Knowledge Management, V2, P36, DOI 10.1108/13673279810249369
   DeVellis R.F., 2011, Scale development: Theory and applications, V26
   Dubé L, 2003, MIS QUART, V27, P597
   Eekels J, 2000, J ENG DESIGN, V11, P377, DOI 10.1080/09544820010000962
   Fitzgerald B, 2006, MIS QUART, V30, P587
   Fowler F., 1995, Improving Survey Questions: Design and Evaluation
   Freeman P, 2004, COMMUN ACM, V47, P19, DOI 10.1145/1012037.1012054
   Freimut B., 2001, P 7 INT SOFTW METR S, P51
   Galle P, 2009, DESIGN STUD, V30, P321, DOI 10.1016/j.destud.2009.02.002
   Gero J. S., 2007, P 16 INT C ENG DES P
   Gero J.S., 2006, DESIGN COMPUTING COG, P407, DOI [https://doi.org/10.1007/978-1-4020-5131-921, DOI 10.1007/978-1-4020-5131-921]
   Gero JS, 2007, AI EDAM, V21, P379, DOI 10.1017/S0890060407000340
   Gero JS, 2004, DESIGN STUD, V25, P373, DOI 10.1016/j.destud.2003.10.010
   GERO JS, 1990, AI MAG, V11, P26
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Goldschmidt G., 1991, CREATIVITY RES J, V4, P123, DOI [10.1080/10400419109534381, DOI 10.1080/10400419109534381, https://doi.org/10.1080/10400419109534381]
   Gray EM, 1998, SOFTWARE QUAL J, V7, P21, DOI 10.1023/A:1008840808887
   Great Britain Office of Government Commerce, 2009, MAN SUCC PROJ PRINCE
   Gregor S, 2006, MIS QUART, V30, P611
   Grudin J., 2002, P PART DES C PDC 200, P141
   Hall T, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1525880.1525883
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Howard GS, 1999, J SYST SOFTWARE, V45, P177, DOI 10.1016/S0164-1212(98)10077-8
   Hunt SD, 2008, ORGAN STUD, V29, P1469, DOI 10.1177/0170840608099521
   Jacobson I., 2009, DRDOBBS
   Jayaratna N., 1994, Understanding and Evaluating Methodologies
   Johnson P., 2012, IEEE Software, V29, P94, DOI 10.1109/MS.2012.127
   Johnson P., 2013, ACM SIGSOFT SOFTW EN, V38, P47, DOI DOI 10.1145/2507288.2529923
   Kim Jaegwon., 1999, The Cambridge Dictionary of Philosophy, V2d, P125
   Kruchten P, 2005, IEEE SOFTWARE, V22, P52, DOI 10.1109/MS.2005.33
   Kruchten P.., 2004, RATIONAL UNIFIED PRO
   Laitenberger O, 2001, IEEE T SOFTWARE ENG, V27, P387, DOI 10.1109/32.922713
   Laitenberger O, 2000, J SYST SOFTWARE, V53, P183, DOI 10.1016/S0164-1212(00)00052-2
   Lakatos I., 1978, PHILOS PAP, V2
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   Lehman M.M., 2001, IWPSE 01 P 4 INT WOR, P70
   Maher M., 1995, 2 IFIP WG5 2 WORKSH, P1
   Mohanani R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P895, DOI 10.1145/2568225.2568235
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Parsons J, 2004, IEEE T SOFTWARE ENG, V30, P873, DOI 10.1109/TSE.2004.94
   PLATT JR, 1964, SCIENCE, V146, P347, DOI 10.1126/science.146.3642.347
   Poole M.S., 2010, Handbook of Decision Making, P543
   Poole M.S., 2004, HDB ORG CHANGE INNOV
   Popper K., 2005, The logic of scientific discovery
   Prats M, 2009, DESIGN STUD, V30, P503, DOI 10.1016/j.destud.2009.04.002
   Proctor T., 2010, Creative problem solving for managers: Developing skills for decision making and innovation
   Qian L, 1996, AI EDAM, V10, P289, DOI 10.1017/S0890060400001633
   Rajlich V, 2006, COMMUN ACM, V49, P67, DOI 10.1145/1145287.1145289
   Ralph P., 2015, P INT C SOFTW ENG FL
   Ralph P., 2010, THESIS
   Ralph P., 2014, ACM SIGSOFT SOFTW EN, V39, P23, DOI DOI 10.1145/2674632.2674647
   Ralph P., 2012, P 2012 INT C INF SYS
   Ralph P., 2015, P 5 INT WORKSH TWIN
   Ralph P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P24, DOI 10.1145/2568225.2568261
   Ralph P, 2015, SCI COMPUT PROGRAM, V101, P21, DOI 10.1016/j.scico.2014.11.007
   Ralph P, 2013, 2013 2ND SEMAT WORKSHOP ON A GENERAL THEORY OF SOFTWARE ENGINEERING (GTSE), P35, DOI 10.1109/GTSE.2013.6613868
   Ralph P, 2013, REQUIR ENG, V18, P293, DOI 10.1007/s00766-012-0161-4
   Ralph P, 2011, LECT NOTES BUS INF P, V93, P92
   Ralph P, 2010, LECT NOTES COMPUT SC, V6105, P139, DOI 10.1007/978-3-642-13335-0_10
   Ralph P, 2009, LECT NOTES BUS INF P, V14, P103
   Royce W.W., 1970, P IEEE WESCON IEEE, P1
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   RUSSELL DM, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P269
   Schon D., 1984, The Reflective Practitioner: How Professionals Think in Action
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   SINGER EA, 1959, EXPERIENCE REFLECTIO
   Sober E., 1999, Proceedings and Addresses of the American Philosophical Association, V73, P47, DOI DOI 10.2307/3131087
   Sosa R., 2005, COMPUTATIONAL COGNIT, P19
   STRAUB DW, 1989, MIS QUART, V13, P147, DOI 10.2307/248922
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
   Trochim W.M., 2001, Research Methods Knowledge Base, V2
   Truex D., 2000, Accounting, Management and Information Technologies, V10, P53, DOI 10.1016/S0959-8022(99)00009-0
   Van Orman Quine W., 1990, PURSUIT TRUTH
   VANDEVEN AH, 1995, ACAD MANAGE REV, V20, P510, DOI 10.2307/258786
   Vermaas PE, 2007, DESIGN STUD, V28, P133, DOI 10.1016/j.destud.2006.11.001
   Wegner D. M., 1987, THEORIES GROUP BEHAV, P185, DOI [10.1007/978-1-4612-4634-3_9, DOI 10.1007/978-1-4612-4634-3_9]
   Weick KE, 2005, ORGAN SCI, V16, P409, DOI 10.1287/orsc.1050.0133
   WOLFE RA, 1994, J MANAGE STUD, V31, P405, DOI 10.1111/j.1467-6486.1994.tb00624.x
   Yin R.K., 2009, CASE STUDIES DESIGN, V4th
NR 101
TC 18
Z9 21
U1 0
U2 15
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2016
VL 70
BP 232
EP 250
DI 10.1016/j.infsof.2015.06.010
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DA3LC
UT WOS:000367697600017
OA Green Published
DA 2024-07-18
ER

PT J
AU Sepúlveda, S
   Cravero, A
   Cachero, C
AF Sepulveda, Samuel
   Cravero, Ania
   Cachero, Cristina
TI Requirements modeling languages for software product lines: A systematic
   literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Requirements engineering; Modeling languages; Software product lines;
   Systematic literature review
ID VARIABILITY
AB Context: Software product lines (SPLs) have reached a considerable level of adoption in the software industry, having demonstrated their cost-effectiveness for developing higher quality products with lower costs. For this reason, in the last years the requirements engineering community has devoted much effort to the development of a myriad of requirements modelling languages for SPLs.
   Objective: In this paper, we review and synthesize the current state of research of requirements modelling languages used in SPLs with respect to their degree of empirical validation, origin and context of use, level of expressiveness, maturity, and industry adoption.
   Method: We have conducted a systematic literature review with six research questions that cover the main objective. It includes 54 studies, published from 2000 to 2013.
   Results: The mean level of maturity of the modelling languages is 2.59 over 5, with 46% of them falling within level 2 or below -no implemented abstract syntax reported-. They show a level of expressiveness of 0.7 over 1.0. Some constructs (feature, mandatory, optional, alternative, exclude and require) are present in all the languages, while others (cardinality, attribute, constraint and label) are less common. Only 6% of the languages have been empirically validated, 41% report some kind of industry adoption and 71% of the languages are independent from any development process. Last but not least, 57% of the languages have been proposed by the academia, while 43% have been the result of a joint effort between academia and industry.
   dConclusions: Research on requirements modeling languages for SPLs has generated a myriad of languages that differ in the set of constructs provided to express SPL requirements. Their general lack of empirical validation and adoption in industry, together with their differences in maturity, draws the picture of a discipline that still needs to evolve. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Sepulveda, Samuel; Cravero, Ania] Univ La Frontera, Ctr Estudios Ingn Software, Dept Ciencias Comp & Informat, Temuco, Chile.
   [Cachero, Cristina] Univ Alicante, Dept Lenguajes & Sistemas Informat, Alicante, Spain.
C3 Universidad de La Frontera; Universitat d'Alacant
RP Sepúlveda, S (corresponding author), Univ La Frontera, Ctr Estudios Ingn Software, Dept Ciencias Comp & Informat, Casilla 54-D, Temuco, Chile.
EM samuel.sepulveda@ceisufro.cl; ania.cravero@ufrontera.cl;
   ccachero@dlsi.ua.es
RI Sepulveda, Samuel/GQY-6887-2022; Cuevas, Samuel Sepúlveda/AAH-3760-2019;
   Castro, Cristina Cachero/AAC-2213-2019
OI Cuevas, Samuel Sepúlveda/0000-0002-0369-7750; Castro, Cristina
   Cachero/0000-0001-6281-8287; Cravero, Ania/0000-0003-0883-7254
FU Vicerrectoria de Investigacion y Postgrado, Universidad de La Frontera
   [DIUFRO DI14-0065]
FX This work was supported by the project DIUFRO DI14-0065, Vicerrectoria
   de Investigacion y Postgrado, Universidad de La Frontera. Special thanks
   to Jenifer Inostroza for her useful technical support on this work.
CR Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   America P., 2005, Software Process Improvement and Practice, V10, P171, DOI 10.1002/spip.220
   [Anonymous], 2008, P 12 INT C EV ASS SO
   [Anonymous], P 5 INT WORKSH ADV S
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], P INT C COMP COMM EN
   [Anonymous], P WORKSH S MODELS 20
   [Anonymous], 2012, VAMOS 12
   [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], TREATISE BASIC PHILO
   [Anonymous], SEMINAL CONTRIBUTION
   [Anonymous], 2005, Software product line engineering: Foundations, Principles and Techniques
   [Anonymous], INF SYST DEV
   [Anonymous], 2011, P 2011 ACM S APPL CO
   [Anonymous], 2008, SYSTEMATIC REV SOCIA
   [Anonymous], P 6 INT WORKSH ADV S
   [Anonymous], 2011, VAMOS 11 P 5 WORKSH, DOI DOI 10.1145/1944892.1944893
   [Anonymous], 2009, 6 EXP SOFTW ENG LAT
   [Anonymous], 2002, Statistical Methods For Inter-Rater Reliability Assessment
   [Anonymous], 2007, VAMOS
   Asikainen T, 2007, ADV ENG INFORM, V21, P23, DOI 10.1016/j.aei.2006.11.007
   Asikainen T, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P31, DOI 10.1109/SPLINE.2006.1691575
   Azevedo S, 2012, INNOV SYST SOFTW ENG, V8, P51, DOI 10.1007/s11334-011-0177-9
   Bachmann F, 2004, LECT NOTES COMPUT SC, V3014, P66
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Behjati R, 2013, INFORM SOFTWARE TECH, V55, P607, DOI 10.1016/j.infsof.2012.09.006
   Belategi L, 2010, LECT NOTES COMPUT SC, V6287, P466, DOI 10.1007/978-3-642-15579-6_38
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Bertoa MF., 2010, QUALITY ATTRIBUTES S
   Bragança A, 2009, INNOV SYST SOFTW ENG, V5, P65, DOI 10.1007/s11334-009-0078-3
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Buchmann T, 2014, SOFTW SYST MODEL, V13, P1495, DOI 10.1007/s10270-012-0305-5
   Cavalcanti Y.C., 2011, P 5 WORKSH VAR MOD S, P49, DOI DOI 10.1145/1944892.1944898
   Chang SH, 2006, LECT NOTES COMPUT SC, V4034, P334
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Classen A, 2008, LECT NOTES COMPUT SC, V4961, P16, DOI 10.1007/978-3-540-78743-3_2
   Clements P., 2002, Software product lines
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23, DOI 10.1109/SPLINE.2007.24
   Czarnecki K, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P41, DOI 10.1109/SPLINE.2006.1691576
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   Dao T. M., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P175, DOI 10.1109/SPLC.2011.55
   Dhungana D., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P120, DOI 10.1109/SPLC.2011.22
   Dhungana D, 2006, IEEE INT CONF AUTOM, P327
   Djebbi O, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P494, DOI 10.1109/ASPEC.2007.63
   Drago I., 2012, the 2012 ACM conference, P481, DOI [10.1145/2398776.2398827, DOI 10.1145/2398776.2398827]
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Eriksson M, 2005, LECT NOTES COMPUT SC, V3714, P33
   Faulk StuartR., 2001, P 5 IEEE INT S REQUI, P48
   Fey D., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P198
   Fleiss Joseph L., 1981, STAT METHODS RATES P
   Gomaa H, 2002, LECT NOTES COMPUT SC, V2319, P78
   Guozheng Ge, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P375, DOI 10.1109/ASE.2008.52
   Haber A., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P150, DOI 10.1109/SPLC.2011.28
   Harzing A.W., 2007, Publish or Perish
   Heuer A, 2010, LECT NOTES COMPUT SC, V6287, P62, DOI 10.1007/978-3-642-15579-6_5
   Jun Zhang, 2012, 2012 Proceedings of IEEE 16th International Conference on Computer Supported Cooperative Work in Design (CSCWD 2012), P366, DOI 10.1109/CSCWD.2012.6221844
   Khurum M, 2009, J SYST SOFTWARE, V82, P1982, DOI 10.1016/j.jss.2009.06.048
   Kim CJ, 2008, INFORM SOFTWARE TECH, V50, P259, DOI 10.1016/j.infsof.2007.01.001
   Kim S, 2011, J SYST SOFTWARE, V84, P2035, DOI 10.1016/j.jss.2011.03.084
   Kitchenham B., 2004, Procedures for performing systematic literature reviews, P33
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   Kitchenham B. A., 2010, EASE, V10, P25
   Korherr B, 2007, DEXA 2007: 18TH INTERNATIONAL CONFERENCE ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P829
   La Rosa M, 2009, SOFTW SYST MODEL, V8, P251, DOI 10.1007/s10270-008-0090-3
   Lisboa LB, 2010, INFORM SOFTWARE TECH, V52, P1, DOI 10.1016/j.infsof.2009.05.001
   McGregor JD, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.74
   Mellado D, 2010, INFORM SOFTWARE TECH, V52, P1094, DOI 10.1016/j.infsof.2010.05.007
   Moher D, 2009, ANN INTERN MED, V151, P264, DOI [10.7326/0003-4819-151-4-200908180-00135, 10.1136/bmj.b2700, 10.1371/journal.pmed.1000097, 10.1186/2046-4053-4-1, 10.1136/bmj.i4086, 10.1136/bmj.b2535, 10.1016/j.ijsu.2010.02.007, 10.1016/j.ijsu.2010.07.299]
   Morisio M, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P321, DOI 10.1109/ASE.2000.873688
   Moros B, 2013, INFORM SOFTWARE TECH, V55, P941, DOI 10.1016/j.infsof.2012.12.003
   Muthig D., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P110
   Park J, 2011, J SYST SCI SYST ENG, V20, P193, DOI 10.1007/s11518-011-5164-z
   Peng X, 2006, LECT NOTES COMPUT SC, V4039, P87
   Peng X, 2009, J COMPUT SCI TECH-CH, V24, P319, DOI 10.1007/s11390-009-9227-2
   Perrouin G, 2012, SOFTW SYST MODEL, V11, P361, DOI 10.1007/s10270-010-0186-4
   Pieczynski A, 2004, 11TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P323
   Reinhartz-Berger I, 2009, INFORM SOFTWARE TECH, V51, P1275, DOI 10.1016/j.infsof.2009.03.005
   Riebisch M, 2004, 11TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P370, DOI 10.1109/ECBS.2004.1316721
   Schobbens PY, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P139
   Sepulveda Samuel., 2012, Proceedings of the 7th Iberian Conference on Information Systems and Technologies (CISTI'12), P1
   Shige Wang, 2010, Proceedings 2010 IEEE 12th International Symposium on High-Assurance Systems Engineering (HASE), P142, DOI 10.1109/HASE.2010.23
   Sinnema M, 2004, LECT NOTES COMPUT SC, V3154, P197
   Sinnema M, 2008, J SYST SOFTWARE, V81, P584, DOI 10.1016/j.jss.2007.06.002
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   Stoiber R., 2010, 2010 Fourth International Workshop on Software Product Management (IWSPM), P53, DOI 10.1109/IWSPM.2010.5623865
   Sturm A, 2008, INT J SOFTW ENG KNOW, V18, P1115, DOI 10.1142/S0218194008004045
   Tawhid R., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P80, DOI 10.1109/SPLC.2011.27
   Teixeira L, 2013, J SYST SOFTWARE, V86, P1038, DOI 10.1016/j.jss.2012.11.006
   Thurimella AK, 2007, INT REQUIR ENG CONF, P254, DOI 10.1109/RE.2007.11
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   Vaidhyanathan Vedana, 2012, Journal of Electronic Resources in Medical Libraries, V9, P47, DOI 10.1080/15424065.2012.651576
   Webber DL, 2004, SCI COMPUT PROGRAM, V53, P305, DOI 10.1016/j.scico.2003.04.004
   Webers W, 2008, LECT NOTES COMPUT SC, V5025, P95, DOI 10.1007/978-3-540-69062-7_9
   Xiaorui Zhang, 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P90, DOI 10.1109/SPLC.2011.24
   Yong Zhou, 2010, 2010 Proceedings of International Conference on Computational Intelligence and Software Engineering (CiSE 2010), DOI 10.1109/CISE.2010.5676823
   Zhang HY, 2004, SCI COMPUT PROGRAM, V53, P381, DOI 10.1016/j.scico.2003.04.007
NR 100
TC 21
Z9 22
U1 0
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2016
VL 69
BP 16
EP 36
DI 10.1016/j.infsof.2015.08.007
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CW5RA
UT WOS:000365053100002
DA 2024-07-18
ER

PT J
AU Buckley, J
   Ali, N
   English, M
   Rosik, J
   Herold, S
AF Buckley, Jim
   Ali, Nour
   English, Michael
   Rosik, Jacek
   Herold, Sebastian
TI Real-Time Reflexion Modelling in architecture reconciliation: A multi
   case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Reflexion Modelling; Software architecture; Architecture consistency;
   Architecture conformance
ID SOFTWARE ARCHITECTURE; COMPLIANCE CHECKING; COMPONENT RECOVERY; SOURCE
   CODE; DESIGN; FEATURES; PRODUCT; EROSION; TOOL
AB Context: Reflexion Modelling is considered one of the more successful approaches to architecture reconciliation. Empirical studies strongly suggest that professional developers involved in real-life industrial projects find the information provided by variants of this approach useful and insightful, but the degree to which it resolves architecture conformance issues is still unclear.
   Objective: This paper aims to assess the level of architecture conformance achieved by professional architects using Reflexion Modelling, and to determine how the approach could be extended to improve its suitability for this task.
   Method: An in vivo, multi-case-study protocol was adopted across five software systems, from four different financial services organizations. Think-aloud, video-tape and interview data from professional architects involved in Reflexion Modelling sessions were analysed qualitatively.
   Results: This study showed that (at least) four months after the Reflexion Modelling sessions less than 50% of the architectural violations identified were removed. The majority of participants who did remove violations favoured changes to the architectural model rather than to the code. Participants seemed to work off two specific architectural templates, and interactively explored their architectural model to focus in on the causes of violations, and to assess the ramifications of potential code changes. They expressed a desire for dependency analysis beyond static-source-code analysis and scalable visualizations.
   Conclusion: The findings support several interesting usage-in-practice traits, previously hinted at in the literature. These include (1) the iterative analysis of systems through Reflexion models, as a precursor to possible code change or as a focusing mechanism to identify the location of architecture conformance issues, (2) the extension of the approach with respect to dependency analysis of software systems and architectural modelling templates, (3) improved visualization support and (4) the insight that identification of architectural violations in itself does not lead to their removal in the majority of instances. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Buckley, Jim; English, Michael; Rosik, Jacek; Herold, Sebastian] Univ Limerick, Irish Software Engn Res Ctr Lero, Limerick, Ireland.
   [Ali, Nour] Univ Brighton, Sch Comp Engn & Math, Brighton BN2 4AT, E Sussex, England.
C3 University of Limerick; University of Brighton
RP English, M (corresponding author), Univ Limerick, Irish Software Engn Res Ctr Lero, Limerick, Ireland.
RI English, Michael/KIC-0937-2024; Herold, Sebastian/N-3557-2015
OI Buckley, Jim/0000-0001-6928-6746; Herold, Sebastian/0000-0002-3180-9182
FU Science Foundation Ireland Grants [12/IP/1351, 10/CE/I1855]; Irish
   Software Engineering Research Centre; University of Brighton under the
   Rising Star Scheme; Science Foundation Ireland (SFI) [10/CE/i1855,
   12/IP/1351] Funding Source: Science Foundation Ireland (SFI)
FX This work was supported, in part, by Science Foundation Ireland Grants
   12/IP/1351 and 10/CE/I1855 to Lero - the Irish Software Engineering
   Research Centre (www.lero.ie) and by the University of Brighton under
   the Rising Star Scheme awarded to Nour Ali.
CR Ali N., 2012, P 8 INT ACM SIGSOFT, P23
   Anders Ericsson K., 1993, PROTOCOL ANAL
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Babbage C., 1864, Passages From the Life of a Philosopher
   Bischofberger W, 2004, LECT NOTES COMPUT SC, V3047, P1
   Blackwell AF, 2001, LECT NOTES ARTIF INT, V2117, P325
   Buckley J, 2008, J SOFTW MAINT EVOL-R, V20, P107, DOI 10.1002/smr.364
   Buckley J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1291, DOI 10.1109/ICSE.2013.6606700
   Burke Joseph, 2012, THESIS U LIMERICK
   Cheesman J., 2000, UML COMPONENTS SIMPL
   Christl A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P89
   CIMITILE A, 1995, J SYST SOFTWARE, V28, P117, DOI 10.1016/0164-1212(94)00049-S
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   de Moor O, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P3, DOI 10.1109/SCAM.2007.31
   de Moor O, 2008, LECT NOTES COMPUT SC, V5235, P78, DOI 10.1007/978-3-540-88643-3_3
   de Silva Lakshitha, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P240, DOI 10.1007/978-3-642-39031-9_21
   de Silva L, 2012, J SYST SOFTWARE, V85, P132, DOI 10.1016/j.jss.2011.07.036
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dubochet G., 2009, Proceedings of the 21st Working Conference on the Psychology of Programmers Interest Group, P174
   Duszynski S, 2009, EUR CON SFTWR MTNCE, P323, DOI 10.1109/CSMR.2009.52
   Eichberg M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P391, DOI 10.1145/1368088.1368142
   Frenzel P, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P160, DOI 10.1109/WCRE.2007.28
   Ganesan D, 2008, INT CONF QUAL SOFTW, P347, DOI 10.1109/QSIC.2008.45
   Garlan D., 2000, FUTURE SOFTWARE ENG, P91
   Gibbons A., 1985, Algorithmic graph theory
   Greenwood Davydd J., 1999, Action Research: From practice to writing in an international action research development program
   Hassan AE, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P349, DOI 10.1109/ICSE.2002.1007981
   Headway Software, 2014, SOFTW ARCH DEP MAN T
   hello2morrow, 2014, HELLO2MORROW SON
   Henriksson A., 2003, DEFINITION ROUND TRI
   Herold S., 2011, THESIS CLAUSTHAL U T
   Herold S, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P24, DOI 10.1109/MiSE.2013.6595292
   HOCHSTEIN L, 2003, SEW, P137, DOI DOI 10.1109/SEW.2003.1270736
   Kästner C, 2014, IEEE T SOFTWARE ENG, V40, P67, DOI 10.1109/TSE.2013.45
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Klocwork, 2014, SEE YOUR ARCH OPT YO
   Knodel J., 2011, SUSTAINABLE STRUCTUR
   Knodel J, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P43
   Knodel J, 2008, PROC IEEE INT CONF S, P287, DOI 10.1109/ICSM.2008.4658077
   Knodel Jens, 2006, P 10 EUR C SOFTW MAI, V10, P294
   Knodel Jens, 2007, 2007 WORKING IEEEIFI, P12, DOI 10.1109/wicsa.2007.1
   Kolb Ronny, 2006, SOFTW PROD LIN C 200, V10, P181
   Koschke R, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P36, DOI 10.1109/WCRE.2003.1287235
   Koschke R, 2002, PROC IEEE INT CONF S, P478, DOI 10.1109/ICSM.2002.1167807
   Layman Lucas, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P176
   Le Gear A, 2005, PROG COMPREHEN, P279, DOI 10.1109/WPC.2005.4
   Lindvall M, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P77, DOI 10.1109/METRIC.2002.1011327
   Mattsson A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089120
   Mattsson A, 2009, IEEE T SOFTWARE ENG, V35, P83, DOI 10.1109/TSE.2008.87
   Mitchell M., 2004, RES DESIGN EXPLAINED
   Murphy GC, 1997, COMPUTER, V30, P29, DOI 10.1109/2.607045
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   NOLAND EW, 1959, SOC FORCES, V37, P361, DOI 10.2307/2574186
   Parnas D. L., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P279, DOI 10.1109/ICSE.1994.296790
   Passos L, 2010, IEEE SOFTWARE, V27, P82, DOI 10.1109/MS.2009.117
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Popescu D, 2008, WORKSH ARCH DEP SYST
   Pruijt Leo, 2014, P WICSA 2014 COMP VO
   Robillard MP, 2003, PROC INT CONF SOFTW, P822, DOI 10.1109/ICSE.2003.1201304
   Romano D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P303, DOI 10.1109/ICSM.2011.6080797
   Rosik J, 2011, SOFTWARE PRACT EXPER, V41, P63, DOI 10.1002/spe.999
   Rosik Jacek, 2009, P 21 ANN PSYCH PROGR
   Rosik Jacek, 2015, THESIS U LIMERICK
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sangal N, 2005, ACM SIGPLAN NOTICES, V40, P167, DOI 10.1145/1103845.1094824
   SCHWANKE RW, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P83, DOI 10.1109/ICSE.1991.130626
   Sefika M, 1996, PROC INT CONF SOFTW, P387, DOI 10.1109/ICSE.1996.493433
   Shaw M, 2006, IEEE SOFTWARE, V23, P31, DOI 10.1109/MS.2006.58
   Shuttleworth Martyn, 2009, TYPES VALIDITY AN OV
   SourceForge.net, 2013, REFL MOD ECL PLUG
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Tran JB, 2000, PROG COMPREHEN, P48, DOI 10.1109/WPC.2000.852479
   Tvedt RT, 2002, PROC IEEE INT CONF S, P393, DOI 10.1109/ICSM.2002.1167796
   Tvedt RT, 2004, ADV COMPUT, V61, P1, DOI 10.1016/S0065-2458(03)61001-6
   van Gurp J, 2005, J SOFTW MAINT EVOL-R, V17, P277, DOI 10.1002/smr.313
   van Gurp J, 2002, J SYST SOFTWARE, V61, P105, DOI 10.1016/S0164-1212(01)00152-2
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   Wilde N, 2003, J SYST SOFTWARE, V65, P105, DOI [10.1016/S0164-1212(02)00052-3, 10.1016/s0164-1212(02)00052-3]
   Yin R.K., 2011, Qualitative research from start to finish
NR 80
TC 17
Z9 18
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2015
VL 61
BP 107
EP 123
DI 10.1016/j.infsof.2015.01.011
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF7PI
UT WOS:000352748400007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Axelsson, J
   Papatheocharous, E
   Andersson, J
AF Axelsson, Jakob
   Papatheocharous, Efi
   Andersson, Jesper
TI Characteristics of software ecosystems for Federated Embedded Systems: A
   case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software ecosystems; Embedded Systems; Systems-of-Systems; Architecture;
   Case study
AB Context: Traditionally, Embedded Systems (ES) are tightly linked to physical products, and closed both for communication to the surrounding world and to additions or modifications by third parties. New technical solutions are however emerging that allow addition of plug-in software, as well as external communication for both software installation and data exchange. These mechanisms in combination will allow for the construction of Federated Embedded Systems (FES). Expected benefits include the possibility of third-party actors developing add-on functionality; a shorter time to market for new functions; and the ability to upgrade existing products in the field. This will however require not only new technical solutions, but also a transformation of the software ecosystems for ES.
   Objective: This paper aims at providing an initial characterization of the mechanisms that need to be present to make a FES ecosystem successful. This includes identification of the actors, the possible business models, the effects on product development processes, methods and tools, as well as on the product architecture.
   Method: The research was carried out as an explorative case study based on interviews with 15 senior staff members at 9 companies related to ES that represent different roles in a future ecosystem for FES. The interview data was analyzed and the findings were mapped according to the Business Model Canvas (BMC).
   Results: The findings from the study describe the main characteristics of a FES ecosystem, and identify the challenges for future research and practice.
   Conclusions: The case study indicates that new actors exist in the FES ecosystem compared to a traditional supply chain, and that their roles and relations are redefined. The business models include new revenue streams and services, but also create the need for trade-offs between, e.g., openness and dependability in the architecture, as well as new ways of working. (C) 2014 The Authors. Published by Elsevier B.V. This is an open access article under the CC BY license (http://creativecommons.orgilicensesiby/3.0/).
C1 [Axelsson, Jakob; Papatheocharous, Efi] Swedish Inst Comp Sci, SE-16429 Kista, Sweden.
   [Axelsson, Jakob] Malardalen Univ, Sch Innovat Design & Engn, SE-72123 Vasteras, Sweden.
   [Andersson, Jesper] Linneaus Univ, Dept Comp Sci, SE-35195 Vaxjo, Sweden.
C3 Malardalen University; Linnaeus University
RP Axelsson, J (corresponding author), Swedish Inst Comp Sci, SE-16429 Kista, Sweden.
EM jakob.axelsson@sics.se
RI Axelsson, Jakob/AAE-3249-2020
OI Axelsson, Jakob/0000-0002-3986-1196
FU VINNOVA, the Swedish Agency for Innovation Systems [2012-03782]; ERCIM
   "Alain Bensoussan" Fellowship Programme; European Union [246016];
   Swedish Research Council [2012-03782] Funding Source: Swedish Research
   Council; Vinnova [2012-03782] Funding Source: Vinnova
FX The authors would like to express their thanks to all participants in
   this study. The research was funded by VINNOVA, the Swedish Agency for
   Innovation Systems (Grant No. 2012-03782). The work of Dr.
   Papatheocharous was carried out during the tenure of an ERCIM "Alain
   Bensoussan" Fellowship Programme. The research leading to these results
   has received funding from the European Union Seventh Framework Programme
   (FP7/2007-2013) under Grant Agreement No. 246016.
CR [Anonymous], P 4 3 INT WORKSH SOF
   [Anonymous], 2011, P 32 INT C INF SYST
   [Anonymous], P 4 EUR C SOFTW ARCH
   [Anonymous], 2013, P 1 INT WORKSH SOFTW, DOI DOI 10.1145/2489850.2489854
   [Anonymous], 2013, 5 WORKSHOP ADAPTIVE
   [Anonymous], P 1 WORKSH SOFTW EC
   [Anonymous], OFFICIAL J EUROPEAN
   [Anonymous], 2 INT WORKSH SOFTW E
   [Anonymous], 2005, SOFTWARE ECOSYSTEMS
   [Anonymous], P 3 INT WORKSH SOFTW
   [Anonymous], 2010, 4 EUROPEAN C SOFTWAR
   [Anonymous], 8 IFIP WORK C VIRT E
   [Anonymous], P 3 INT WORKSH SOFTW
   Bosch J, 2010, J SYST SOFTWARE, V83, P67, DOI 10.1016/j.jss.2009.06.051
   Bosch Jan, 2009, 2009 13 INT SOFTW PR, V9, P111, DOI DOI 10.1145/1753235.1753251
   Boucharas V, 2009, IWOCE 2009: INTERNATIONAL WORKSHOP ON OPEN COMPONENT ECOSYSTEM, P41
   Eklund U, 2012, LECT NOTES BUS INF P, V114, P248
   Goldman R., 2005, INNOVATION HAPPENS E
   Hanssen GK, 2012, J SYST SOFTWARE, V85, P1455, DOI 10.1016/j.jss.2011.04.020
   Iansiti M, 2004, HARVARD BUS REV, V82, P68
   Iyer B, 2006, CALIF MANAGE REV, V48, P28, DOI 10.2307/41166348
   Jansen S, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P1, DOI 10.4337/9781781955635
   Jansen S, 2009, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE-COMPANION.2009.5070978
   Kilamo T, 2012, J SYST SOFTWARE, V85, P1467, DOI 10.1016/j.jss.2011.06.071
   Manikas K, 2013, J SYST SOFTWARE, V86, P1294, DOI 10.1016/j.jss.2012.12.026
   Osterwalder A., 2010, BUSINESS MODEL GENER, DOI DOI 10.1111/J.1540-5885.2012.00977_2.X
   Popp KM, 2010, LECT NOTES BUS INF P, V51, P181
   Robson C., 2002, Real world research
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yin D.R. K., 2017, Case Study Research and Applications: Design and Methods
NR 31
TC 19
Z9 19
U1 0
U2 38
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2014
VL 56
IS 11
SI SI
BP 1457
EP 1475
DI 10.1016/j.infsof.2014.03.011
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AO4ZD
UT WOS:000341349000004
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Jansen, S
AF Jansen, Slinger
TI Measuring the health of open source software ecosystems: Beyond the
   scope of project health
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software ecosystem health; Open source ecosystems; Software repository
   mining
AB Background: The livelihood of an open source ecosystem is important to different ecosystem participants: software developers, end-users, investors, and participants want to know whether their ecosystem is healthy and performing well. Currently, there exists no working operationalization available that can be used to determine the health of open source ecosystems. Health is typically looked at from a project scope, not from an ecosystem scope.
   Objectives: With such an operationalization, stakeholders can make better decisions on whether to invest in an ecosystem: developers can select the healthiest ecosystem to join, keystone organizers can establish which governance techniques are effective, and end-users can select ecosystems that are robust, will live long, and prosper.
   Method: Design research is used to create the health operationalization. The evaluation step is done using four ecosystem health projects from literature.
   Results: The Open Source Ecosystem Health Operationalization is provided, which establishes the health of a complete software ecosystem, using the data from collections of open source projects that belong to the ecosystem.
   Conclusion: The groundwork is done, by providing a summary of research challenges, for more research in ecosystem health. With the operationalization in hand, researchers no longer need to start from scratch when researching open source ecosystems' health. (C) 2014 Elsevier B.V. All rights reserved.
C1 Univ Utrecht, Dept Informat & Comp Sci, NL-3508 TC Utrecht, Netherlands.
C3 Utrecht University
RP Jansen, S (corresponding author), Univ Utrecht, Dept Informat & Comp Sci, NL-3508 TC Utrecht, Netherlands.
EM slinger.jansen@uu.nl
RI Roijackers, Slinger/Y-4244-2019
OI Roijackers, Slinger/0000-0003-3752-2868
CR [Anonymous], 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering (ASE'10)
   Baars A, 2012, LECT NOTES BUS INF P, V114, P168
   Barbosa O, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P59
   Crowston K., 2006, Software Process Improvement and Practice, V11, P123, DOI 10.1002/spip.259
   Crowston K., 2002, IEE Proceedings-Software, V149, P3, DOI 10.1049/ip-sen:20020197
   Cusumano M., 2012, STAYING POWER 6 ENDU
   den Hartigh E, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P221
   Dhungana D, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P43
   Gamalielsson J., 2010, PROC 2 INT WORKSHOP, P1
   Gamalielsson J, 2010, IFIP ADV INF COMM TE, V319, P85
   Goeminne M, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P247
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Haenni N., 2013, Proceedings of the 2013 International Workshop on Ecosystem Architectures, P1
   Hoving R, 2013, I C DIGIT ECOSYST TE, P13, DOI 10.1109/DEST.2013.6611322
   Iansiti M, 2004, HARVARD BUS REV, V82, P68
   Iansiti Marco, 2004, The keystone advantage: What the new dynamics of business ecosystems mean for strategy, innovation, and sustainability
   Jansen S, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P1, DOI 10.4337/9781781955635
   Jansen S., 2009, 31 INT C SOFTW ENG N
   Jansen S, 2012, J SYST SOFTWARE, V85, P1495, DOI 10.1016/j.jss.2011.12.007
   Lakhani K., 2005, Why hackers do what they do: Understanding motivation and effort in free/open source software projects
   Lingen S. van, 2013, P 5 WORKSH SOFTW EC
   Lucassen G., 2013, P INT C SOFTW BUS
   Lundell B., 2009, P 1 INT WORKSH BUILD
   Manikas K., 2013, P INT WORKSH SOFTW E
   Manikas K., 2012, J SYST SOFTWARE, V85
   Mens T., 2014, Studying Evolving Software Ecosystems based on Ecological Models, P297, DOI DOI 10.1007/978-3-642-45398-4_10
   Syed S., 2013, P INT WORKSH SOFTW E
   Waltl J, 2012, LECT NOTES BUS INF P, V114, P94
   West J, 2013, ADV STRATEG MANAGE, V30, P27, DOI 10.1108/S0742-3322(2013)0000030005
   Wiggins A, 2009, INT FED INFO PROC, V299, P94
   Wynn D., 2007, EMERGING FREE OPEN S
NR 31
TC 93
Z9 100
U1 3
U2 47
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2014
VL 56
IS 11
SI SI
BP 1508
EP 1519
DI 10.1016/j.infsof.2014.04.006
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AO4ZD
UT WOS:000341349000007
DA 2024-07-18
ER

PT J
AU Nair, S
   de la Vara, JL
   Sabetzadeh, M
   Briand, L
AF Nair, Sunil
   de la Vara, Jose Luis
   Sabetzadeh, Mehrdad
   Briand, Lionel
TI An extended systematic literature review on provision of evidence for
   safety certification
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Safety-critical systems; Safety standards; Safety compliance; Safety
   certification; Safety evidence; Systematic literature review
ID CRITICAL SOFTWARE; FORMAL METHODS; REQUIREMENTS; VERIFICATION;
   INFORMATION; ARGUMENTS; STANDARDS; FRAMEWORK; QUALITY; DESIGN
AB Context: Critical systems in domains such as aviation, railway, and automotive are often subject to a formal process of safety certification. The goal of this process is to ensure that these systems will operate safely without posing undue risks to the user, the public, or the environment. Safety is typically ensured via complying with safety standards. Demonstrating compliance to these standards involves providing evidence to show that the safety criteria of the standards are met.
   Objective: In order to cope with the complexity of large critical systems and subsequently the plethora of evidence information required for achieving compliance, safety professionals need in-depth knowledge to assist them in classifying different types of evidence, and in structuring and assessing the evidence. This paper is a step towards developing such a body of knowledge that is derived from a large-scale empirically rigorous literature review.
   Method: We use a Systematic Literature Review (SLR) as the basis for our work. The SLR builds on 218 peer-reviewed studies, selected through a multi-stage process, from 4963 studies published between 1990 and 2012.
   Results: We develop a taxonomy that classifies the information and artefacts considered as evidence for safety. We review the existing techniques for safety evidence structuring and assessment, and further study the relevant challenges that have been the target of investigation in the academic literature. We analyse commonalities in the results among different application domains and discuss implications of the results for both research and practice.
   Conclusion: The paper is, to our knowledge, the largest existing study on the topic of safety evidence. The results are particularly relevant to practitioners seeking a better grasp on evidence requirements as well as to researchers in the area of system safety. As a major finding of the review, the results strongly suggest the need for more practitioner-oriented and industry-driven empirical studies in the area of safety certification. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Nair, Sunil; de la Vara, Jose Luis] Certus Ctr Software V&V, Simula Res Lab, N-1325 Lysaker, Norway.
   [Sabetzadeh, Mehrdad; Briand, Lionel] SnT Ctr Secur, L-2721 Luxembourg, Luxembourg.
RP Nair, S (corresponding author), Certus Ctr Software V&V, Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
EM sunil@simula.no; jdelavara@simula.no; mehrdad.sabetzadeh@uni.lu;
   lionel.briand@uni.lu
RI de la Vara, Jose Luis/A-7678-2018
OI de la Vara, Jose Luis/0000-0003-1813-398X; Sabetzadeh,
   Mehrdad/0000-0002-4711-8319
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Akerholm M., 2009, INT WORKSH SOFTW REU
   Althammer Egbert, 2008, 2008 6th IEEE International Conference on Industrial Informatics (INDIN), P258, DOI 10.1109/INDIN.2008.4618105
   Andersen BS, 2011, COMMUN ACM, V54, P52, DOI [10.1145/2001269.2001286, 10.1145/2016036.2024356]
   Anderson KJ, 2006, Developments in Risk-Based Approaches to Safety, P171, DOI 10.1007/1-84628-447-3_9
   Ankrum TS, 2005, Ninth IEEE International Symposium on High-Assurance Systems Engineering, P99, DOI 10.1109/HASE.2005.20
   [Anonymous], P 2005 WORKSH REAL E
   [Anonymous], 2011 AIAA MOD SIM TE
   [Anonymous], 2005, 61508 IEC
   [Anonymous], 2006, SIGBED REV
   [Anonymous], 2009, 262628 ISODIS
   [Anonymous], P 5 INT C EMB REAL T
   [Anonymous], 2012, DO178CED12C
   [Anonymous], IEEE COMPUT SOC
   [Anonymous], 2007, Software for Dependable Systems: Sufficient Evidence?
   [Anonymous], P 1 WORKSH CRIT AUT
   [Anonymous], 2010, Design and Safety Assessment of Critical Systems
   [Anonymous], 2012, IEEEIFIP INT C DEPEN, DOI DOI 10.1109/DSN.2012
   [Anonymous], 2006, P 1 I ENG TECHN INT, DOI DOI 10.1049/CP:20060221
   Arthasartsri S, 2009, PROCEEDINGS OF 2009 8TH INTERNATIONAL CONFERENCE ON RELIABILITY, MAINTAINABILITY AND SAFETY, VOLS I AND II, P1356, DOI 10.1109/ICRMS.2009.5270030
   Bain A., 2008, 3 IET INT C SYST SAF, P1
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Basir N., 2009, 4 IET INT C SYST SAF, P14
   Basir N, 2008, LECT NOTES COMPUT SC, V5219, P249, DOI 10.1007/978-3-540-87698-4_22
   Basir N, 2009, ELECTRON NOTES THEOR, V238, P19, DOI 10.1016/j.entcs.2009.09.003
   Basir N, 2010, LECT NOTES COMPUT SC, V6351, P68, DOI 10.1007/978-3-642-15651-9_6
   Bate I, 2003, RELIAB ENG SYST SAFE, V81, P303, DOI 10.1016/S0951-8320(03)00094-2
   Bate I, 2000, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P125, DOI 10.1109/HASE.2000.895450
   Bate I, 2001, COMPUT J, V44, P531, DOI 10.1093/comjnl/44.6.531
   Bate I., 2004, P 22 INT SYST SAF C, P685
   Bate I, 2009, SAFETY-CRITICAL SYSTEMS: PROBLEMS, PROCESS AND PRACTICE, P149, DOI 10.1007/978-1-84882-349-5_9
   Becker U, 2008, LECT NOTES COMPUT SC, V5219, P263, DOI 10.1007/978-3-540-87698-4_23
   Beine M., 2010, EMBEDDED REAL TIME S, P1
   Benediktsson O., 2001, Software Process Improvement and Practice, V6, P47, DOI 10.1002/spip.135
   Berlack H.R., 1992, Software configuration management
   Bertolino A., 1998, Software Testing, Verification and Reliability, V8, P155, DOI 10.1002/(SICI)1099-1689(1998090)8:3<155::AID-STVR163>3.0.CO;2-B
   Bilich CG, 2009, LECT NOTES COMPUT SC, V5775, P103, DOI 10.1007/978-3-642-04468-7_10
   BISHOP P, 2004, P WORKSH ASS CAS, P390
   Bishop P, 2011, IEEE T SOFTWARE ENG, V37, P708, DOI 10.1109/TSE.2010.67
   Bishop PG, 1998, IND PERSPECTIVES SAF, P194, DOI DOI 10.1007/978-1-4471-1534-2_14
   Bloomfield R, 2010, MAKING SYSTEMS SAFER, P51, DOI 10.1007/978-1-84996-086-1_4
   Bohn J., 2002, P IDPT CIT
   Bouissou M, 1999, P A REL MAI, P142, DOI 10.1109/RAMS.1999.744110
   Brown A., 2010, 5 IET INT C SYST SAF, P1
   Brown M. J. D., 1990, IEEE Aerospace and Electronics Systems Magazine, V5, P31, DOI 10.1109/62.63161
   Brown R, 1998, IND PERSPECTIVES SAF, P184
   Brunel Julien, 2012, Computer Safety, Reliability,and Security. Proceedings of SAFECOMP 2012 Workshops: Sassur, ASCoMS, DESEC4LCCI, ERCIM/EWICS, IWDE, P307, DOI 10.1007/978-3-642-33675-1_27
   BURNS A, 1994, SOFTWARE ENG J, V9, P267, DOI 10.1049/sej.1994.0036
   Bush D., 2001, P LOND COMM S U COLL
   Camus J.-L., 2003, Electronics Systems and Software, V1, P38, DOI 10.1049/ess:20030107
   Caseley P., 2009, INC SARS ANN C 4 IET, P1
   Chinneck P., 2004, P 9 AUSTR WORKSH SAF, V47, P33
   Cichocki T, 2008, IMPROVEMENTS IN SYSTEM SAFETY, P59, DOI 10.1007/978-1-84800-100-8_5
   Clegg J., 2009, 4 IET INT C SYST SAF, P52
   Cleland GL, 2002, ESA SP PUBL, V486, P175
   Cockram T., 2003, CURRENT ISSUES SAFET, P151
   Coe D.J., 2011, SOFTWARE SAFETY ENG
   Conmy P, 2007, FOURTH INTERNATIONAL WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, PROCEEDINGS, P127, DOI 10.1109/MOMPES.2007.4
   Conmy P, 2010, IEEE T IND INFORM, V6, P195, DOI 10.1109/TII.2009.2039938
   Corrie J.D., 2006, 11 IET INT C SYST SA, P29
   Cruz-Neira C, 1999, IEEE SOFTWARE, V16, P26, DOI 10.1109/52.776945
   Cyra L, 2007, DEPCOS - RELCOMEX '07: INTERNATIONAL CONFERENCE ON DEPENDABILITY OF COMPUTER SYSTEMS, PROCEEDINGS, P91, DOI 10.1109/DEPCOS-RELCOMEX.2007.44
   Czerny BJ, 2000, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P189, DOI 10.1109/HASE.2000.895458
   Dahll G, 2000, NUCL ENG DES, V195, P307, DOI 10.1016/S0029-5493(99)00213-7
   Dehlinger J., 2006, ACM SIGBED REV SPEC
   Denney Ewen, 2012, Computer Safety, Reliability, and Security. Proceedings of the 31st International Conference, SAFECOMP 2012, P1, DOI 10.1007/978-3-642-33678-2_1
   Denney E., 2008, AEROSPACE C, P1
   Denney E, 2011, INT SYMP EMP SOFTWAR, P380, DOI 10.1109/ESEM.2011.53
   Despotou G, 2010, MAKING SYSTEMS SAFER, P233, DOI 10.1007/978-1-84996-086-1_14
   Dick A., 2008, 3 IET INT C SYST SAF, P1
   Dittel T, 2010, LECT NOTES COMPUT SC, V6351, P97, DOI 10.1007/978-3-642-15651-9_8
   Dodd I, 2012, RELIAB ENG SYST SAFE, V98, P7, DOI 10.1016/j.ress.2011.09.007
   Eastaughffe KA, 1999, PROC IEEE SOFTW ENGN, P33, DOI 10.1109/SESS.1999.766576
   El Koursi EM, 2002, TSI PRESS S, V14, P51, DOI 10.1109/WAC.2002.1049420
   El koursi EM, 1998, IEEE SYS MAN CYBERN, P3240, DOI 10.1109/ICSMC.1998.726502
   Ericson C., 2011, Concise Encyclopedia of System Safety: Definition of Terms and Concepts
   Eriksson LH, 2004, LECT NOTES COMPUT SC, V3219, P31
   Esposito C., 2011, 2011 Proceedings of 5th Latin-American Symposium on Dependable Computing Workshops (LADC-W 2011), P52, DOI 10.1109/LADCW.2011.13
   Evans J., 3 IET INT C SYST SAF, P43
   Falessi D., 2011, IEEE SOFTWARE, P99
   Falessi D., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, P460
   Benet AF, 2011, ADVANCES IN SYSTEMS SAFETY, P157, DOI 10.1007/978-0-85729-133-2_10
   Feather M. S., 2011, Proceedings of the 2011 IEEE International Conference on Space Mission Challenges for Information Technology (SMC-IT 2011), P10, DOI 10.1109/SMC-IT.2011.17
   Feiler P.H., 2010, AEROSPACE C, P1, DOI [10.1109/AERO.2010.5446809, DOI 10.1109/AERO.2010.5446809.]
   Fenn J, 2005, Constituents of Modern System-safety Thinking, P21, DOI 10.1007/1-84628-130-X_2
   Fenton N., 1998, IEE Proceedings-Software, V145, P35, DOI 10.1049/ip-sen:19984895
   Fernandez A, 2011, INFORM SOFTWARE TECH, V53, P789, DOI 10.1016/j.infsof.2011.02.007
   Ferrell T., 2001, 20 C DIG AV SYST DAS, V1
   Fey I., 2008, P SAE CONV
   Forster Marc, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P146, DOI 10.1109/ISSRE.2009.22
   Fowler D, 2000, LECT NOTES COMPUT SC, V1943, P250
   Galloway A., 2005, The 24th Digital Avionics Systems Conference (IEEE Cat. No. 05CH37708)
   Gerlach M., 2011, P EMB WORLD C
   Good J, 1999, IEE CONF PUBL, P51, DOI 10.1049/cp:19990162
   Graydon P, 2012, IEEE SOFTWARE, V29, P50, DOI 10.1109/MS.2012.26
   Graydon PJ, 2007, LECT NOTES COMPUT SC, V4615, P362
   Graydon PJ, 2007, I C DEPEND SYS NETWO, P347, DOI 10.1109/DSN.2007.17
   Greenwell W., 2006, P 2006 INT SYST SAF
   Gurr C., 2001, INFORMAL LOG, P22
   Habli Ibrahim, 2010, International Journal of Critical Computer-Based Systems, V1, P364, DOI 10.1504/IJCCBS.2010.036605
   Habli Ibrahim, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P7, DOI 10.1109/ISSRE.2008.19
   Habli I., 2010, P 2010 SAE WORLD C
   Habli I, 2007, LECT NOTES COMPUT SC, V4802, P306
   Habli I, 2007, SAFETY OF SYSTEMS, P55, DOI 10.1007/978-1-84628-806-7_4
   Habli I, 2009, ELECTRON NOTES THEOR, V238, P27, DOI 10.1016/j.entcs.2009.09.004
   Hall Jon G., 2008, 2008 The Third International Conference on Software Engineering Advances (ICSEA), P379, DOI 10.1109/ICSEA.2008.69
   Hamilton V, 2011, ADVANCES IN SYSTEMS SAFETY, P41, DOI 10.1007/978-0-85729-133-2_3
   Harju H, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P54, DOI 10.1109/QUATIC.2010.22
   Hawkins R., 2009, 4 IET INT C SYST SAF, P23
   Hawkins R., 2010, 5 IET INT C SYST SAF, P1
   Hawkins R, 2011, ADVANCES IN SYSTEMS SAFETY, P3, DOI 10.1007/978-0-85729-133-2_1
   Hayhurst K.J., 2001, 20 C DIG AV SYST DAS, V11
   Heimdahl M.P., 2007, IEEE COMPUT SOC, V2007, P137
   Hilderman Vance., 2007, Avionics Communications
   Hill J., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P297, DOI 10.1109/RE.2010.42
   Hill J, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P617
   HJORLAND B, 1995, J AM SOC INFORM SCI, V46, P400, DOI 10.1002/(SICI)1097-4571(199507)46:6<400::AID-ASI2>3.0.CO;2-Y
   Hobbs Chris, 2012, The Application of Bayesian Belief Networks to Assurance Case Preparation, DOI 10.1049/iet-tv.49.12695
   Hollingsworth C.S., 2008, Pacific Northwest Insect Management Handbook, P1
   HOLLOW P, 2000, P 10 INT S INT COUNC
   Hu ZJ, 2009, LECT NOTES COMPUT SC, V5775, P132
   Huhn M, 2010, LECT NOTES COMPUT SC, V6416, P296, DOI 10.1007/978-3-642-16561-0_30
   Huhn M, 2009, LECT NOTES COMPUT SC, V5775, P118, DOI 10.1007/978-3-642-04468-7_11
   Johansson M, 2012, J SOFTW-EVOL PROC, V24, P501, DOI 10.1002/smr.499
   Jolliffe G., 2005, The 24th Digital Avionics Systems Conference (IEEE Cat. No. 05CH37708)
   Joung E., 2009, 31 INT C TEL EN C IN, P1
   Karydas DM, 1999, RELIAB ENG SYST SAFE, V66, P103, DOI 10.1016/S0951-8320(99)00026-5
   Kath O., 2009, 4 INT WORKSH SOFTW R
   Katta V., 2010, CSDM
   Kelly T., P DEPENDABLE SYSTEMS
   Kelly T., 2004, P SAE 2004 WORLD C D
   Kelly T, 1998, THESIS U YORK
   Kelly TP, 2008, IMPROVEMENTS IN SYSTEM SAFETY, P3, DOI 10.1007/978-1-84800-100-8_1
   Kelly Tim., 2007, ACM International Conference Proceeding Series, V248, P53
   Kelly TimP., 2003, Current Issues in Safety-Critical Systems, P99
   Kelly TP, 2001, RELIAB ENG SYST SAFE, V71, P271, DOI 10.1016/S0951-8320(00)00079-X
   Kesseler E, 2008, INFORM SYST J, V18, P299, DOI 10.1111/j.1365-2575.2007.00257.x
   Kinnersly S, 2011, ADVANCES IN SYSTEMS SAFETY, P25, DOI 10.1007/978-0-85729-133-2_2
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kornecki A, 2009, INNOV SYST SOFTW ENG, V5, P149, DOI 10.1007/s11334-009-0088-1
   Kotonya G, 1997, ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE AND INTERNATIONAL COMPUTER SCIENCE CONFERENCE, PROCEEDINGS, P259, DOI 10.1109/APSEC.1997.640183
   Kritzinger D., 2009, 4 IET INT C SYST SAF
   Kuball S, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P15, DOI 10.1109/DSN.2003.1209912
   Lahtinen J, 2010, LECT NOTES COMPUT SC, V6351, P55, DOI 10.1007/978-3-642-15651-9_5
   LAWRENCE JD, 1994, COMPASS '94 - PROCEEDINGS OF THE NINTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P197, DOI 10.1109/CMPASS.1994.318452
   Lee E, 2010, LECT NOTES COMPUT SC, V6416, P343
   Lewis R, 2009, SAFETY-CRITICAL SYSTEMS: PROBLEMS, PROCESS AND PRACTICE, P183, DOI 10.1007/978-1-84882-349-5_12
   Limnios N., 2000, 22 C INT COUNC AER S
   Linling S., 2009, 4 IET INT C SYST SAF, P31
   Linling S., 2011, PROCEDIA ENG, V17, P358
   Lisagor O., 2006, P 24 INT SYST SAF C, P596
   Littlewood B, 2007, IEEE T SOFTWARE ENG, V33, P347, DOI 10.1109/TSE.2007.1002
   LIU SY, 1995, J SYST SOFTWARE, V28, P77, DOI 10.1016/0164-1212(94)00082-X
   Lucas J, 2008, IMPROVEMENTS IN SYSTEM SAFETY, P77, DOI 10.1007/978-1-84800-100-8_6
   Lutz Robyn, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P271, DOI 10.1109/ISSRE.2008.13
   Makarychev KS, 2001, MATH INTELL, V23, P41, DOI 10.1007/BF03024516
   Mannering D, 2008, IMPROVEMENTS IN SYSTEM SAFETY, P25, DOI 10.1007/978-1-84800-100-8_3
   Mayo P., 2009, 4 IET INT C SYST SAF, P23
   McDermid J., 1994, DES SAF CRIT SYS IEE
   McDermid J. A., 1991, Proceedings. 1991 International Symposium on Software Reliability Engineering (Cat. No.91TH0336-5), P43, DOI 10.1109/ISSRE.1991.145352
   McDermid J.A., 2001, P 6 AUSTR WORKSHOP S, P1
   McDonnell S, 1996, IEEE SYMPOSIUM AND WORKSHOP ON ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P190, DOI 10.1109/ECBS.1996.494528
   Meacham D., 2009, INT C SYST SYST ENG, P1
   Menon C., 4 IET INT C SYST SAF, P22
   Menon C, 2009, SAFETY-CRITICAL SYSTEMS: PROBLEMS, PROCESS AND PRACTICE, P223, DOI 10.1007/978-1-84882-349-5_15
   Méry D, 2010, LECT NOTES COMPUT SC, V6416, P312, DOI 10.1007/978-3-642-16561-0_31
   Ministry of Defence, 2007, 0056 MIN DEF
   Moraes R, 2007, LECT NOTES COMPUT SC, V4746, P179
   Nair S., 2012, SLR EVIDENCE CLASSIF
   Nair S., 2013, 6 IEEE  INT C SOFTW
   Near JP, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P31, DOI 10.1145/1985793.1985799
   Nguyen EA, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P50, DOI 10.1109/ISSRE.2011.33
   Nicholson M., 2003, P 21 INT SYST SAF C
   Nicholson M., 2000, P 5 AUSTR WORKSH IND, P31
   Nicolás J, 2009, INFORM SOFTWARE TECH, V51, P1291, DOI 10.1016/j.infsof.2009.04.001
   Nordland O., 2001, SAFECOMP 2001, P56
   Ogunsola A, 2003, 2003 IEEE INTERNATIONAL SYMPOSIUM ON ELECTROMAGNETIC COMPATIBILITY (EMC), VOLS 1 AND 2, SYMPOSIUM RECORD, P429, DOI 10.1109/ICSMC2.2003.1428283
   *OMG, 2006, OMG OBJ CONSTR LANG
   OMG, 2013, SOFTW ASS CAS METH
   OPENCOSS, 2012, D1 2  IND US CAS DES
   OPENCOSS, 2012, OPENCOSS D5 1 BAS CO
   OPENCOSS, 2012, OPENCOSS D6 1 BAS EV
   Ozols M., 1998, 16 INT SYST SAF C CI
   Palin Rob., 2011, Physical Therapy for Children, P1
   Palin R, 2010, LECT NOTES COMPUT SC, V6351, P82, DOI 10.1007/978-3-642-15651-9_7
   Panesar-Walawege Rajwinder Kaur, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P335, DOI 10.1109/ICST.2010.12
   Panesar-Walawege RK, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P30, DOI 10.1109/ISSRE.2011.11
   Papadopoulos Y, 2003, RELIAB ENG SYST SAFE, V81, P325, DOI 10.1016/S0951-8320(03)00095-4
   Papadopoulos Y, 1999, RELIAB ENG SYST SAFE, V63, P47, DOI 10.1016/S0951-8320(98)00015-5
   Pierce R, 2005, Constituents of Modern System-safety Thinking, P51, DOI 10.1007/1-84628-130-X_4
   Pygott C, 1997, J SYST ARCHITECT, V43, P735, DOI 10.1016/S1383-7621(97)00032-5
   Radatz J., 1990, Standard IEEE Std. 610.12-1990
   Railway Applications - Safety Related Electronic Systems for Signalling, 1998, RAILW APPL SAF REL E
   Redmill F, 2004, SAFETY SCI, V42, P355, DOI 10.1016/j.ssci.2003.09.005
   Reinhardt D., 2007, P 11 AUSTR WORKSH SA, p[69, 79]
   Reinhardt S.L.D., 2010, 5 IET INT C SYST SAF, P1
   Rich K., 2007, 2007 2 I ENG TECHNOL, P217
   Ridderhofl W, 2007, LECT NOTES COMPUT SC, V4680, P1
   Rierson L.K., 1999, P 18 INT C DIG AV SY, V1
   Rodríguez-Dapena P, 1999, IEEE SOFTWARE, V16, P31, DOI 10.1109/52.776946
   Rushby J., 2011, 2011 International Conference on Embedded Software (EMSOFT 2011), P211
   Rushby J, 2008, AIAA GUID NAV CONTR
   Rushby J, 2007, IEEE INT C ENG COMP, P15, DOI 10.1109/ICECCS.2007.26
   Rushby J, 2010, MAKING SYSTEMS SAFER, P3, DOI 10.1007/978-1-84996-086-1_1
   Rushby J, 2008, LECT NOTES COMPUT SC, V5289, P21
   Sabetzadeh M., 2011, Proceedings of the 2011 IEEE 13th International Symposium on High-Assurance Systems Engineering (HASE 2011), P63, DOI 10.1109/HASE.2011.22
   Sabetzadeh M., 2011, 13 INT S HIGH ASS SY, P193
   Sabetzadeh M., MODUS GOAL BASED APP
   SAEED A, 1995, ISA T, V34, P283, DOI 10.1016/0019-0578(95)00019-V
   Schneider D., 2011, 2011 5th IEEE International Conference on Self-Adaptive and Self-Organizing Systems (SASO), P89, DOI 10.1109/SASO.2011.20
   Schoitsch E, 2006, LECT NOTES COMPUT SC, V4166, P372
   SHAW R, 1994, COMPUT METH PROG BIO, V44, P5, DOI 10.1016/0169-2607(94)90143-0
   Sherriff M, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P375
   Singhal A., 2011, SOFTW ENG INT J, V1
   Smith SP, 2004, LECT NOTES COMPUT SC, V3219, P325
   Spriggs J., 2003, CURRENT ISSUES SAFET, P79
   Squair MatthewJohn., 2006, Proceedings of the 10th Australian Workshop on Safety Critical Systems and Software - Volume 55, SCS'05, P13
   Stallbaum H., 2010, Proceedings 2010 Workshop on Model-Driven Engineering, Verification, and Validation (MoDeVVa 2010), P25, DOI 10.1109/MoDeVVa.2010.21
   Stensrud Erik, 2011, Proceedings of the 2011 First International Workshop on Software Certification (WoSoCER 2011), P13, DOI 10.1109/WoSoCER.2011.7
   Stephenson Z., 2010, 5 IET INT C SYST SAF, P33
   Stephenson Z., 2010, EMBEDDED REAL TIME S
   Stephenson Z, 2011, ADVANCES IN SYSTEMS SAFETY, P55, DOI 10.1007/978-0-85729-133-2_4
   Sujan MA, 2007, LECT NOTES COMPUT SC, V4680, P14
   Tangming Yuan, 2010, Proceedings of the 2010 Second World Congress on Software Engineering (WCSE 2010), P107, DOI 10.1109/WCSE.2010.37
   Thomas M, 2007, COMPUTER, V40, P109, DOI 10.1109/MC.2007.407
   Torner F., 11 INT HIGH ASS SYST, P313
   Valk JL, 2010, MAKING SYSTEMS SAFER, P115, DOI 10.1007/978-1-84996-086-1_8
   Varley P, 1999, IEEE Trans Inf Technol Biomed, V3, P261, DOI 10.1109/4233.809170
   Vilkomir S. A., 2000, PROJECT CONTROL HUMA, P18
   Wagner Stefan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P269, DOI 10.1109/ISSRE.2010.31
   Wang J, 2002, J SAFETY RES, V33, P81, DOI 10.1016/S0022-4375(02)00005-1
   Wang J., 2000, DISASTER PREVENTION, V9, P271
   Wassyng A, 2011, LECT NOTES COMPUT SC, V6662, P206
   Weaver R., 2003, P 8 AUSTR WORKSH SAF, V33, P57
   WEAVER RA, 2002, 20 INT SYST SAF C DE
   Weaver R, 2006, DEVELOPMENTS IN RISK-BASED APPROACHES TO SAFETY, P277, DOI 10.1007/1-84628-447-3_16
   Whiting L., 1999, Software Engineering Notes, V24, P32, DOI 10.1145/381788.316173
   Wildman L., 2008, 13 AUSTR C SAF REL P
   Wilson S. P., 1997, Safety and Reliability of Software Based Systems. Twelfth Annual CSR Workshop, P135
   Wilson SP, 1996, IEEE SYMPOSIUM AND WORKSHOP ON ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P198, DOI 10.1109/ECBS.1996.494529
   Winkelbauer W, 2006, DEVELOPMENTS IN RISK-BASED APPROACHES TO SAFETY, P83, DOI 10.1007/1-84628-447-3_5
   Wlad J., 2006, 25 DIG AV SYST C, P1
   Wu WH, 2007, LECT NOTES COMPUT SC, V4680, P172
   Wu WH, 2007, LECT NOTES COMPUT SC, V4615, P383
   Yan F, 2009, ICCSSE 2009: PROCEEDINGS OF 2009 4TH INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE & EDUCATION, P917, DOI 10.1109/ICCSE.2009.5228263
   Ye F., 2004, 9 AUSTR WORKSH SAF R, V47, P13
   Ye F., 2004, USE COTS SOFTWARE CO
   Yih S, 2012, NUCL ENG DES, V242, P379, DOI 10.1016/j.nucengdes.2011.10.010
   Yuan TM, 2011, INFORMAL LOG, V31, P89
   Zoughbi G, 2011, SOFTW SYST MODEL, V10, P337, DOI 10.1007/s10270-010-0164-x
   [No title captured]
NR 251
TC 72
Z9 76
U1 1
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2014
VL 56
IS 7
BP 689
EP 717
DI 10.1016/j.infsof.2014.03.001
PG 29
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH3FW
UT WOS:000336010100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tarhan, A
   Yilmaz, SG
AF Tarhan, Ayca
   Yilmaz, Seda Gunes
TI Systematic analyses and comparison of development performance and
   product quality of Incremental Process and Agile Process
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical method; Quantitative analysis; Qualitative analysis; Software
   measurement; Process performance; Agile development
ID SOFTWARE-DEVELOPMENT
AB Context: Although Agile software development models have been widely used as a base for the software project life-cycle since 1990s, the number of studies that follow a sound empirical method and quantitatively reveal the effect of using these models over Traditional models is scarce.
   Objective: This article explains the empirical method of and the results from systematic analyses and comparison of development performance and product quality of Incremental Process and Agile Process adapted in two projects of a middle-size, telecommunication software development company. The Incremental Process is an adaption of the Waterfall Model whereas the newly introduced Agile Process is a combination of the Unified Software Development Process, Extreme Programming, and Scrum.
   Method: The method followed to perform the analyses and comparison is benefited from the combined use of qualitative and quantitative methods. It utilizes; GQM Approach to set measurement objectives, CMMI as the reference model to map the activities of the software development processes, and a predefined assessment approach to verify consistency of process executions and evaluate measure characteristics prior to quantitative analysis.
   Results: The results of the comparison showed that the Agile Process had performed better than the Incremental Process in terms of productivity (79%), defect density (57%), defect resolution effort ratio (26%), Test Execution V&V Effectiveness (21%), and effort prediction capability (4%). These results indicate that development performance and product quality achieved by following the Agile Process was superior to those achieved by following the Incremental Process in the projects compared.
   Conclusion: The acts of measurement, analysis, and comparison enabled comprehensive review of the two development processes, and resulted in understanding their strengths and weaknesses. The comparison results constituted objective evidence for organization-wide deployment of the Agile Process in the company. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Tarhan, Ayca; Yilmaz, Seda Gunes] Hacettepe Univ, Dept Comp Engn, TR-06532 Ankara, Turkey.
C3 Hacettepe University
RP Tarhan, A (corresponding author), Hacettepe Univ, Dept Comp Engn, Beytepe Kampusu, TR-06532 Ankara, Turkey.
EM atarhan@cs.hacettepe.edu.tr; sedagunes@gmail.com
RI Tarhan, Ayca/D-6138-2013; KOLUKISA, AYÇA/HKN-2117-2023
CR Abrahamson P., 2002, Agile software development methods: Review and Analysis
   Anderson D. J., 2008, AGILE MANAGEMENT SOF
   [Anonymous], 2002, Agile software development
   [Anonymous], 2003, CASE STUDY RES DESIG
   [Anonymous], 2006, P 28 INT C SOFTW ENG, DOI DOI 10.1145/1134285.1134383
   [Anonymous], 2004, XP Ser
   [Anonymous], P FRONT ED 35 ANN C
   [Anonymous], 2008, 12207 ISOIEC
   [Anonymous], 2004, 1012 IEEE
   Benefield, 2008, Proceedings of the 41st Annual Hawaii International Conference on System Sciences (HICSS 2008), P461, DOI [10.1109/HICSS.2008.382, DOI 10.1109/HICSS.2008.382]
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Burr A., 1996, STAT METHODS SOFTWAR
   CMU/SEI-CMMI Product Team, 2010, CMUSEI2010TR033
   Dalcher D, 2005, 12TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P289, DOI 10.1109/ECBS.2005.32
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Ebert C., 2007, Software measurement: establish, extract, evaluate, execute
   Fenton N., 2013, Software Metrics: A Rigorous and Practical Approach
   FLORAC WA, 1999, SEI S SOFTW, P1
   GOMEZ O, 2008, LNCS, V5007, P165
   Highsmith J., 2002, Agile software development ecosystems
   Hommes B.J., 2004, EVALUATION BUSINESS, P137
   Ilieva S, 2004, EUROMICRO CONF PROC, P326, DOI 10.1109/EURMIC.2004.1333387
   ISO, 2007, ISO/IEC 15939
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Ji F, 2011, 2011 24TH IEEE-CS CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING (CSEET), P482, DOI 10.1109/CSEET.2011.5876129
   Khramov Y, 2006, AGILE 2006, Proceedings, P119, DOI 10.1109/AGILE.2006.52
   Layman L, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P32
   Li J., 2010, P ACM IEEE INT S EMP, P1
   Macias F, 2003, PROCEEDINGS OF THE FOURTH MEXICAN INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE (ENC 2003), P73, DOI 10.1109/ENC.2003.1232877
   Palmer S.R., 2002, PRACTICAL GUIDE FEAT
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Poppendieck M, 2006, IMPLEMENTING LEAN SO
   Puntambekar A.A., 2009, Software Engineering
   Schwaber K., 2001, Agile software development with scrum
   Sillitti A., 2005, Software Metrics, P10
   Sommerville I., 2010, SOFTWARE ENG
   Sutherland J, 2007, AGILE 2007, Proceedings, P272, DOI 10.1109/AGILE.2007.52
   Tarhan A, 2012, IEEE SOFTWARE, V29, P77, DOI 10.1109/MS.2011.91
   Tarhan A, 2011, SOFTWARE QUAL J, V19, P615, DOI 10.1007/s11219-011-9129-8
   Van Solingen R., 2002, ENCY SOFTWARE ENG
   van Waardenburg G, 2013, INFORM SOFTWARE TECH, V55, P2154, DOI 10.1016/j.infsof.2013.07.012
   Wheeler D.J., 1995, ADV TOPICS STAT PROC
   Yilmaz Seda Gunes, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P86, DOI 10.1049/ic.2011.0010
   [No title captured]
NR 44
TC 23
Z9 39
U1 2
U2 81
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2014
VL 56
IS 5
BP 477
EP 494
DI 10.1016/j.infsof.2013.12.002
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG6RB
UT WOS:000335545000003
DA 2024-07-18
ER

PT J
AU Islam, S
   Mouratidis, H
   Weippl, ER
AF Islam, Shareeful
   Mouratidis, Haralambos
   Weippl, Edgar R.
TI An empirical study on the implementation and evaluation of a goal-driven
   software development risk management model
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software risk management; Goal modelling language; Requirements
   engineering; Empirical study; Goal-risk model
ID PROJECT RISKS; PRINCIPLES
AB Context: Building a quality software product in the shortest possible time to satisfy the global market demand gives an enterprise a competitive advantage. However, uncertainties and risks exist at every stage of a software development project. These can have an extremely high influence on the success of the final software product. Early risk management practice is effective to manage such risks and contributes effectively towards the project success.
   Objective: Despite risk management approaches, a detailed guideline that explains where to integrate risk management activities into the project is still missing. Little effort has been directed towards the evaluation of the overall impact of a risk management method. We present a Goal-driven Software Development Risk Management Model (GSRM) and its explicit integration into the requirements engineering phase and an empirical investigation result of applying GSRM into a project.
   Method: We combine the case study method with action research so that the results from the case study directly contribute to manage the studied project risks and to identify ways to improve the proposed methodology. The data is collected from multiple sources and analysed both in a qualitative and quantitative way.
   Results: When risk factors are beyond the control of the project manager and project environment, it is difficult to control these risks. The project scope affects all the dimensions of risk. GSRM is a reasonable risk management method that can be employed in an industrial context. The study results have been compared against other study results in order to generalise findings and identify contextual factors.
   Conclusion: A formal early stage risk management practice provides early warning related to the problems that exists in a project, and it contributes to the overall project success. It is not necessary to always consider budget and schedule constraints as top priority. There exist issues such as requirements, change management, and user satisfaction which can influence these constraints. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Islam, Shareeful; Mouratidis, Haralambos] Univ E London, Sch Architecture Comp & Engn, London E16 2RD, England.
   [Weippl, Edgar R.] SBA Res gGmbh, Sommerpalais Harrach, A-1040 Vienna, Austria.
C3 University of East London
RP Islam, S (corresponding author), Univ E London, Sch Architecture Comp & Engn, 4-6 Univ Way, London E16 2RD, England.
EM shareeful@uel.ac.uk; haris@uel.ac.uk; eweippl@sba-research.org
RI Weippl, Edgar/ABC-6536-2020; Weippl, Edgar/D-5123-2011; Islam,
   Shareeful/E-8784-2012
OI Weippl, Edgar/0000-0003-0665-6126; Weippl, Edgar/0000-0003-0665-6126;
   Islam, Shareeful/0000-0003-0885-1881; Mouratidis,
   Haralambos/0000-0002-2599-0712
FU Austrian Science Fund (FWF) [P26289-N23]; Austrian Science Fund (FWF)
   [P26289] Funding Source: Austrian Science Fund (FWF)
FX We would like to thank all the project team members of the automation
   project and the ministry of planning employees. A special thanks goes to
   the MIT students for the endless support in the empirical investigation.
   Finally, we thank the management of Domain Techx for giving us the
   opportunity to work in this project. This work was partly supported by
   the Austrian Science Fund (FWF) project no. P26289-N23.
CR Alberts C.J., 1996, Continuous Risk Management Guidebook
   [Anonymous], 1999, AS/NZS 4360:1999
   [Anonymous], 2004, 15504 ISOIEC
   [Anonymous], 2018, Risk management: Guidelines
   [Anonymous], 2003, CMMI guidlines for process integration and product improvement
   [Anonymous], 2002, RES DESIGN QUALITATI
   Arshad N.H., 2007, P 6 WSEAS INT C SOFT, P51
   Bannerman PL, 2008, J SYST SOFTWARE, V81, P2118, DOI 10.1016/j.jss.2008.03.059
   Barki H., 1993, Journal of Management Information Systems, V10, P203
   Boehm B, 1998, COMPUTER, V31, P33, DOI 10.1109/2.689675
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Brownlee A., 2002, DESIGNING CONDUCTING
   Broy M., 2009, TUM10935
   Carr Marvin J., 1993, Technical Report CMU/SEI-93-TR-6
   Chittister C., 1993, IEEE T SYST MAN CYB, V23
   Davison R, 2004, INFORM SYST J, V14, P65, DOI 10.1111/j.1365-2575.2004.00162.x
   Easterbrook S., 2007, SELECTING EMPIRICAL
   Fernández DM, 2010, LECT NOTES COMPUT SC, V6395, P183
   Foo S.-W., 2000, P IEEE INT C MAN INN
   Freimut B., 2001, Software Engineering Notes, V26, P277, DOI 10.1145/503271.503247
   Glass R., 1998, Software Runaways: Monumental Software Disasters
   Iacovou CL, 2008, COMMUN ACM, V51, P89, DOI 10.1145/1349026.1349044
   International Organization for Standardization, 2002, RISK MAN VOC GUID US
   Islam Shareeful, 2009, Proceedings of the 2009 12th International Conference on Computer and Information Technology (ICCIT 2009), P514, DOI 10.1109/ICCIT.2009.5407292
   Islam S., 2010, P 4 IEEE RES INT C R
   Islam S., 2011, J SOFTWARE JSW, V6
   Islam S., 2011, THESIS TU MUNCHEN GE
   Jiang J, 2000, J SYST SOFTWARE, V52, P3, DOI 10.1016/S0164-1212(99)00128-4
   Karolak DW., 1995, Software engineering risk management: A just-in-time approach
   Keil M, 1998, COMMUN ACM, V41, P76, DOI 10.1145/287831.287843
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kontio J., 2001, Software Engineering Risk Management: A Method, Improvement Framework and Empirical Evaluation
   Kwak YH, 2004, TECHNOVATION, V24, P915, DOI 10.1016/S0166-4972(03)00033-6
   Linberg KR, 1999, J SYST SOFTWARE, V49, P177, DOI 10.1016/S0164-1212(99)00094-1
   MCCONNELL S, 1996, RAPID DEV TAMING WIL
   Moynihan T, 1997, IEEE SOFTWARE, V14, P35, DOI 10.1109/52.589229
   Nakatsu RT, 2009, INFORM MANAGE-AMSTER, V46, P57, DOI 10.1016/j.im.2008.11.005
   Nyfjord J., 2008, P INT MULT ENG COMP
   Odzaly Edzreena Edza, 2009, 2009 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM), P418, DOI 10.1109/ESEM.2009.5316014
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Procaccino JD, 2002, INFORM SOFTWARE TECH, V44, P53, DOI 10.1016/S0950-5849(01)00217-8
   Ropponen J, 2000, IEEE T SOFTWARE ENG, V26, P98, DOI 10.1109/32.841112
   Ropponen J., 1999, Beyond the IT Productivity Paradox, P247
   Roy GG, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P60, DOI 10.1109/ASWEC.2004.1290458
   Saarinen T, 1996, INFORM MANAGE, V31, P103, DOI 10.1016/S0378-7206(96)01075-0
   Schatz B., 2008, MODEL BASED DEV SOFT
   Schmidt R, 2001, J MANAGE INFORM SYST, V17, P5, DOI 10.1080/07421222.2001.11045662
   Sisti F J., 1994, Software Risk Evaluation Method
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Wallace L, 2004, INFORM MANAGE-AMSTER, V42, P115, DOI 10.1016/j.im.2003.12.007
   Wallace L, 2004, COMMUN ACM, V47, P68, DOI 10.1145/975817.975819
   Yin R.K., 2009, CASE STUDIES DESIGN, V4th
NR 53
TC 25
Z9 31
U1 0
U2 34
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2014
VL 56
IS 2
BP 117
EP 133
DI 10.1016/j.infsof.2013.06.003
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 285TN
UT WOS:000329418000002
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Avancini, A
   Ceccato, M
AF Avancini, Andrea
   Ceccato, Mariano
TI Comparison and integration of genetic algorithms and dynamic symbolic
   execution for security testing of cross-site scripting vulnerabilities
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Static analysis; Dynamic analysis; Security testing
AB Context: Cross-site scripting (XSS for short) is considered one of the major threat to the security of web applications. Static analysis supports manual security review in mitigating the impact of XSS-related issues, by suggesting a set of potential problems, expressed in terms of candidate vulnerabilities. A security problem spotted by static analysis, however, consists of a list of (possibly complicated) conditions that should be satisfied to concretely exploit a vulnerability. Static analysis, instead, does not provide examples of what input values must be used to make the application execute the (sometimes complex) execution path that causes a XSS vulnerability. Runnable test cases, however, consist of an executable and reproducible evidence of the vulnerability mechanics. Test cases represent a valuable support for developers who should concretely understand security problems in detail before fixing them.
   Objective: This paper evaluates various strategies to automatically generate security test cases, i.e. test cases that expose a vulnerability by making the application control flow satisfy vulnerability conditions.
   Method: A combination of genetic algorithms and concrete symbolic execution is presented for the automatic generation of security test cases. This combined strategy is compared with genetic algorithms and with concrete symbolic execution alone, in terms of coverage and productivity on four case study web applications.
   Result: While genetic algorithms require less time to generate security test cases, those generated by concrete symbolic execution cover a higher number of vulnerabilities. The highest coverage, however, is achieved when the two approaches are combined and integrated.
   Conclusion: The integrated approach that we propose has shown to be effective for security testing. In fact, genetic algorithms have shown to be able to generate test cases only for few and simple vulnerabilities when not combined with other approaches. However, their contribution is fundamental to improve the coverage of test cases generated by concrete symbolic execution. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Avancini, Andrea; Ceccato, Mariano] Fdn Bruno Kessler, Ctr Informat & Commun Technol, I-38123 Trento, Italy.
C3 Fondazione Bruno Kessler
RP Ceccato, M (corresponding author), IRST, FBK, Via Sommarive 18, I-38050 Trento, Italy.
EM anavancini@fbk.eu; ceccato@fbk.eu
RI Ceccato, Mariano/T-7139-2019
OI Ceccato, Mariano/0000-0001-7325-0316
CR [Anonymous], BLACK HAT EUR 2009
   Avancini A, 2011, IEEE INT WORK C SO, P85, DOI 10.1109/SCAM.2011.7
   Baars A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P53, DOI 10.1109/ASE.2011.6100119
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Chang W, 2008, CCS'08: PROCEEDINGS OF THE 15TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P39
   Chess B., 2007, Secure programming with static analysis
   Christey S., 2006, Vulnerability Type Distributions in CVE
   Cordy JR, 2006, SCI COMPUT PROGRAM, V61, P190, DOI 10.1016/j.scico.2006.04.002
   De Lucia A, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P617, DOI 10.1145/2330163.2330251
   Del Grosso C, 2008, COMPUT OPER RES, V35, P3125, DOI 10.1016/j.cor.2007.01.013
   Gong RH, 2005, SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERNG, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING AND FIRST AICS INTERNATIONAL WORKSHOP ON SELF-ASSEMBLING WIRELESS NETWORKS, PROCEEDINGS, P246
   Huang Y.-W., 2004, P 13 INT C WORLD WID, P40, DOI [10.1145/988672.988679, DOI 10.1145/988672.988679]
   Inkumsah Kobi, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P297, DOI 10.1109/ASE.2008.40
   Jovanovic N, 2006, P IEEE S SECUR PRIV, P258, DOI 10.1109/SP.2006.29
   Krinke J., 2007, Proc. 3rd Int'l Workshop on Code Based Security Assessments, P6
   Leonardi C, 2010, LECT NOTES COMPUT SC, V6051, P455, DOI 10.1007/978-3-642-13094-6_35
   Livshits VB, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P271
   Majumdar R, 2007, PROC INT CONF SOFTW, P416
   Malburg J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P436, DOI 10.1109/ASE.2011.6100092
   Motulsky H.J., 2010, INTUITIVE BIOSTATIST, V2nd
   Pargas R. P., 1999, Software Testing, Verification and Reliability, V9, P263, DOI 10.1002/(SICI)1099-1689(199912)9:4<263::AID-STVR190>3.0.CO;2-Y
   Sakti Abdelilah, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P213, DOI 10.1007/978-3-642-33119-0_16
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   SHANKAR U., 2001, Proceedings of the 10th conference on USENIX Security Symposium-Volume 10, SSYM'01, USENIX Association, Berkeley, CA, USA, P16
   Sharir M., 1981, Program flow analysis. Theory and applications, P189
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   STROM RE, 1993, IEEE T SOFTWARE ENG, V19, P478, DOI 10.1109/32.232013
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   Wang L, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P165, DOI 10.1109/SCAM.2008.24
   Wassermann G., 2008, P 2008 INT S SOFTW T, P249, DOI DOI 10.1145/1390630.1390661
   Wassermann G, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P171, DOI 10.1145/1368088.1368112
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 32
TC 15
Z9 15
U1 0
U2 24
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2013
VL 55
IS 12
BP 2209
EP 2222
DI 10.1016/j.infsof.2013.08.001
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 242QW
UT WOS:000326258100009
DA 2024-07-18
ER

PT J
AU Vizcaíno, A
   García, F
   Villar, JC
   Piattini, M
   Portillo, J
AF Vizcaino, Aurora
   Garcia, Felix
   Carlos Villar, Jose
   Piattini, Mario
   Portillo, Javier
TI Applying Q-methodology to analyse the success factors in GSD
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Global Software Development (GSD); Success factor; Q-methodology
ID SOFTWARE-DEVELOPMENT
AB Context: The context of this paper is Global Software Development (GSD) which is a current trend concerning the development of software in a distributed manner throughout different countries. This paradigm has several advantages, but unfortunately there are a number of challenges that hinder projects' successful development.
   Objective: The main goal of this paper is to discover which factors affect the success of GSD projects and how these are ranked by researchers and practitioners.
   Method: This paper analyses the relevant success factors reported in literature. These were collected by conducting a literature review, as a result of which 39 GSD success factors were selected. Q-methodology was then followed to conduct a survey from which the opinions of 21 experts in GSD were collected.
   Results: The data indicated that the best ranked GSD success factors are staff motivation, skilled human resources and the identification of roles and responsibilities. The lowest scores were, surprisingly, language barriers, time zone differences between sites, cultural differences and geographical distance which, to date, have frequently been considered by researchers as the most influential factors in GSD. This study additionally shows the results according to the different points of view of the respondents involved and the context of the projects.
   Conclusion: This study indicates that there are different points of view as regards which issues are most important to success when setting up a GSD project. For instance, some experts prefer a knowledge focus, while others prefer a project management approach in which the most important issues are those related to management (risks, coordination) and so on.
   Conclusion: The results obtained have also shown that the challenges of GSD are changing, since the critical issues were initially related to the various types of distances (geographical, temporal, sociocultural, language). However, there is now a greater concern for the team members' features and skills. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Vizcaino, Aurora; Garcia, Felix; Carlos Villar, Jose; Piattini, Mario; Portillo, Javier] Univ Castilla La Mancha, Inst Tecnol & Sistemas Informac, Ciudad Real 13017, Spain.
C3 Universidad de Castilla-La Mancha
RP Vizcaíno, A (corresponding author), Univ Castilla La Mancha, Inst Tecnol & Sistemas Informac, Paseo Univ 4, Ciudad Real 13017, Spain.
EM Aurora.Vizcaino@uclm.es; Felix.Garcia@uclm.es;
   JoseCarlos.Villar@uclm.es; Mario.Piattini@uclm.es; JPortillo@indra.es
RI Piattini, Mario/F-6271-2013; Vizcaíno, Aurora/D-4452-2011; Garcia,
   Felix/D-4299-2011
OI Piattini, Mario/0000-0002-7212-8279; Vizcaíno,
   Aurora/0000-0002-2072-5581; Garcia, Felix/0000-0001-6460-0353
FU GEODAS-BC project (Ministerio de Economia y Competitividad); GEODAS-BC
   project (Fondo Europeo de Desarrollo Regional FEDER)
   [TIN2012-37493-C03-01]; ORIGIN [IDI-2010043 (1-5)]; CDTI; FEDER,
   GLOBALIA [PEII11-0291-5274]; PEGASO/MAGO (Ministerio de Ciencia e
   Innovacion MICINN); PEGASO/MAGO (FEDER) [TIN2009-13718-C02-01]
FX We would like to thank to the two reviewers for all their useful
   suggestions which have helped to improve this paper. We would like alto
   to thank all the people who kindly answered our survey invitation
   emails, and we are particularly grateful to all those who filled in the
   questionnaire and provided valuable feedback about it. Their
   contribution has made this study a reality. This work has been funded by
   the GEODAS-BC project (Ministerio de Economia y Competitividad and Fondo
   Europeo de Desarrollo Regional FEDER, TIN2012-37493-C03-01). It is also
   supported by ORIGIN (IDI-2010043 (1-5)) funded by CDTI and FEDER,
   GLOBALIA (PEII11-0291-5274, Consejeria de Educacion y Ciencia, Junta de
   Comunidades de Castilla-La Mancha) and PEGASO/MAGO (Ministerio de
   Ciencia e Innovacion MICINN and FEDER, TIN2009-13718-C02-01).
CR Agerfalk P.J., 2005, P INT WORKSHOP DISTR, P47
   Ågerfalk PJ, 2008, LECT NOTES COMPUT SC, V5007, P1, DOI 10.1007/978-3-540-79588-9_1
   Betz Stefanie, 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P330, DOI 10.1109/ICGSE.2010.45
   Brown S.R., 1993, OPERANT SUBJECTIVITY, V16, P91
   Carmel E., 1999, GLOBAL SOFTWARE TEAM
   Cuppen E, 2010, ECOL ECON, V69, P579, DOI 10.1016/j.ecolecon.2009.09.005
   da Silva F.Q.B, 2011, INFORM SYSTEM TECHNO
   Damian D, 2004, PROC INT CONF SOFTW, P756, DOI 10.1109/ICSE.2004.1317521
   Damian D, 2005, 13 IEEE REQ ENG C PA, P32
   Eskeli J, 2011, ICSOFT 2011: PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATABASE TECHNOLOGIES, VOL 1, P29
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Hossain E, 2009, INT CONF GLOBAL SOFT, P175, DOI 10.1109/ICGSE.2009.25
   Islam Shareeful, 2009, 2009 Fourth IEEE International Conference on Global Software Engineering, P347, DOI 10.1109/ICGSE.2009.54
   Jedeloo S, 2010, INT J NURS STUD, V47, P593, DOI 10.1016/j.ijnurstu.2009.10.006
   Jimenez M, 2009, ADV SOFTWARE ENG, V2009
   Khan SU, 2009, ASIA PAC SOFWR ENG, P79, DOI 10.1109/APSEC.2009.16
   KHAN SU, 2009, 4 ICGSE IEEE, P207, DOI DOI 10.1109/ICGSE.2009.28
   Nonaka I., 2001, MANAGING IND KNOWLED
   Nurdiani I., 2011, 2011 Sixth IEEE International Conference on Global Software Engineering Workshop, P36, DOI 10.1109/ICGSE-W.2011.16
   Persson JS, 2009, IEEE T ENG MANAGE, V56, P508, DOI 10.1109/TEM.2009.2013827
   Prikladnicki R, 2010, INFORM SOFTWARE TECH, V52, P779, DOI 10.1016/j.infsof.2010.03.009
   Prikladnicki R, 2010, IEEE SOFTWARE, V27, P12, DOI 10.1109/MS.2010.48
   SMITE D, 2008, ICGSE IEEE, P173, DOI DOI 10.1109/ICGSE.2008.22
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Timo P, 2007, P INT C GLOB SOFTW E
   Verner J.M, 16 INT C EV ASS SOFT, P2
   Watts S, 2005, DOINT Q METHODOLOGY, V2
   Yeun E, 2005, INT J NURS STUD, V42, P871, DOI 10.1016/j.ijnurstu.2004.12.002
NR 28
TC 11
Z9 15
U1 0
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2013
VL 55
IS 7
BP 1200
EP 1211
DI 10.1016/j.infsof.2013.01.003
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 161UD
UT WOS:000320217900004
DA 2024-07-18
ER

PT J
AU Abate, P
   Di Cosmo, R
   Treinen, R
   Zacchiroli, S
AF Abate, Pietro
   Di Cosmo, Roberto
   Treinen, Ralf
   Zacchiroli, Stefano
TI A modular package manager architecture
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software dependencies; Software repositories; Software components;
   Package manager; Open source
AB Context: The success of modern software distributions in the Free and Open Source world can be explained, among other factors, by the availability of a large collection of software packages and the possibility to easily install and remove those components using state-of-the-art package managers. However, package managers are often built using a monolithic architecture and hard-wired and ad-hoc dependency solvers implementing some customized heuristics.
   Objective: We aim at laying the foundation for improving on existing package managers. Package managers should be complete, that is find a solution whenever there exists one, and allow the user to specify complex criteria that define how to pick the best solution according to the user's preferences.
   Method: In this paper we propose a modular architecture relying on precise interface formalisms that allows the system administrator to choose from a variety of dependency solvers and backends.
   Results: We have built a working prototype-called MPM-following the design advocated in this paper, and we show how it largely outperforms a variety of current package managers.
   Conclusion: We argue that a modular architecture, allowing for delegating the task of constraint solving to external solvers, is the path that leads to the next generation of package managers that will deliver better results, offer more expressive preference languages, and be easily adaptable to new platforms. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Abate, Pietro; Di Cosmo, Roberto; Treinen, Ralf; Zacchiroli, Stefano] Univ Paris Diderot, PPS, UMR 7126, CNRS, F-75205 Paris, France.
C3 Centre National de la Recherche Scientifique (CNRS); Universite Paris
   Cite
RP Zacchiroli, S (corresponding author), Univ Paris Diderot, PPS, UMR 7126, CNRS, F-75205 Paris, France.
EM abate@pps.jussieu.fr; roberto@dicosmo.org;
   treinen@pps.univ-paris-diderot.fr; zack@pps.univ-paris-diderot.fr
OI Zacchiroli, Stefano/0000-0002-4576-136X
CR Abate P., MISC COMPETITION 201
   Abate P., 2012, J SYSTEMS SOFTWARE
   Abate P., 2011, P 14 INT ACM SIGS S, P179, DOI DOI 10.1145/2000229.2000255
   Argelich J, 2010, ELECTRON P THEOR COM, P11, DOI 10.4204/EPTCS.29.2
   Berre D. L., 2008, P 1 WORKSH AN SOFTW, P197
   Bozman C., 2010, 5 MANC PROJ
   Di Cosmo R, 2010, LECT NOTES COMPUT SC, V6287, P476, DOI 10.1007/978-3-642-15579-6_40
   EDOS Project Workpackage 2 Team, 2005, REP FORM MAN SOFTW D
   EDOS Project Workpackage 2 Team, 2006, REP FORM MAN SOFTW D
   FISHBURN PC, 1974, MANAGE SCI, V20, P1442, DOI 10.1287/mnsc.20.11.1442
   Gebser M, 2011, ELECTRON PROC THEOR, P12, DOI 10.4204/EPTCS.65.2
   Guerreiro A., 2010, EXTENSION EXISTING P
   Jenson G, 2010, LECT NOTES COMPUT SC, V6092, P182, DOI 10.1007/978-3-642-13238-4_11
   Lau KK, 2007, IEEE T SOFTWARE ENG, V33, P709, DOI 10.1109/TSE.2007.70726
   Le Berre D, 2009, IWOCE 2009: INTERNATIONAL WORKSHOP ON OPEN COMPONENT ECOSYSTEM, P21
   Lyubimkin E.V., 2010, CUPT PACKAGE MANAGER
   Mancinelli F, 2006, IEEE INT CONF AUTOM, P199
   Michel C, 2010, ELECTRON PROC THEOR, P1, DOI 10.4204/EPTCS.29.1
   Steuer R, 1986, Multiple Criteria Optimization: Theory, Computation and Application
   SUSE, 2008, YAST PACK MAN
   SUSE Libzypp Library, 2008, LIBZ LIB
   Treinen R., 2009, 3 MANC PROJ
   Treinen R., 2008, DEBCONF 8 P 9 C DEB
   Treinen R, 2009, IWOCE 2009: INTERNATIONAL WORKSHOP ON OPEN COMPONENT ECOSYSTEM, P31
   Trezentos Paulo, 2010, ASE 10, P427, DOI DOI 10.1145/1858996.1859087
   Tucker C, 2007, PROC INT CONF SOFTW, P178
NR 26
TC 11
Z9 12
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2013
VL 55
IS 2
BP 459
EP 474
DI 10.1016/j.infsof.2012.09.002
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 060EO
UT WOS:000312759500019
DA 2024-07-18
ER

PT J
AU Shahrokni, A
   Feldt, R
AF Shahrokni, Ali
   Feldt, Robert
TI A systematic review of software robustness
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic review; Robustness; Software robustness
ID IMPROVING ROBUSTNESS; DESIGN; REQUIREMENTS; ARCHITECTURE; DEPENDABILITY;
   VERIFICATION; CONCURRENT; PATTERN
AB Context: With the increased use of software for running key functions in modern society it is of utmost importance to understand software robustness and how to support it. Although there have been many contributions to the field there is a lack of a coherent and summary view.
   Objective: To address this issue, we have conducted a literature review in the field of robustness.
   Method: This review has been conducted by following guidelines for systematic literature reviews. Systematic reviews are used to find and classify all existing and available literature in a certain field.
   Results: From 9193 initial papers found in three well-known research databases, the 144 relevant papers were extracted through a multi-step filtering process with independent validation in each step. These papers were then further analyzed and categorized based on their development phase, domain, research, contribution and evaluation type. The results indicate that most existing results on software robustness focus on verification and validation of Commercial of the shelf (COTS) or operating systems or propose design solutions for robustness while there is a lack of results on how to elicit and specify robustness requirements. The research is typically solution proposals with little to no evaluation and when there is some evaluation it is primarily done with small, toy/academic example systems.
   Conclusion: We conclude that there is a need for more software robustness research on real-world, industrial systems and on software development phases other than testing and design, in particular on requirements engineering. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Shahrokni, Ali; Feldt, Robert] Chalmers Univ Technol, Dept Comp Sci & Engn, S-41296 Gothenburg, Sweden.
C3 Chalmers University of Technology
RP Shahrokni, A (corresponding author), Chalmers Univ Technol, Dept Comp Sci & Engn, S-41296 Gothenburg, Sweden.
EM ali.shahrokni@chalmers.se; robert.feldt@chalmers.se
OI Feldt, Robert/0000-0002-5179-4205
CR Abie H, 2009, 2009 COMPUTATION WORLD: FUTURE COMPUTING, SERVICE COMPUTATION, COGNITIVE, ADAPTIVE, CONTENT, PATTERNS, P153, DOI 10.1109/ComputationWorld.2009.26
   Acharya M., 2006, Proceedings. 21st IEEE International Conference on Automated Software Engineering
   Acharya M., 2006, 2006 17th IEEE International Symposium on Software Reliability Engineering
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ait-Ameur Y, 2003, ACM SIGPLAN NOTICES, V38, P123, DOI 10.1145/780731.780750
   Al-Khanjari ZA, 2003, IC'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON INTERNET COMPUTING, VOLS 1 AND 2, P809
   Albinet A, 2004, 2004 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P867
   Allen J, 2005, 2005 IEEE Workshop on Automatic Speech Recognition and Understanding (ASRU), P4
   Ambriola V., 1998, Systems Implementation 2000. IFIP TC2 WG2.4 Working Conference on Systems Implementation 2000: Languages, Methods and Tools, P114
   [Anonymous], 1145 U NEWCASTLE
   [Anonymous], DEPENDABILITY BASIC
   [Anonymous], 1990, IEEE STD 61012 1990
   [Anonymous], INT MULT COMP GLOB I
   [Anonymous], 67905 COPPEUFRJ ES S
   [Anonymous], 2005, P 3 ACS IEEE INT C C, DOI DOI 10.1109/AICCSA.2005.1387132
   [Anonymous], 1995, 1268 U WISC MAD
   [Anonymous], 2000, P DARPA INF SURV C E, DOI DOI 10.1109/DISCEX.2000.821532
   [Anonymous], IEE C COTS SAF CRIT
   [Anonymous], WEBIST 2007
   [Anonymous], IEEE T SOFTWARE ENG
   [Anonymous], EBSE20071 KEEL U SCH
   [Anonymous], IEEE INT S PAR DISTR
   [Anonymous], 1992, EXCEPTION HANDLING M
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bak S, 2009, 15TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATION SYMPOSIUM: RTAS 2009, PROCEEDINGS, P99, DOI 10.1109/RTAS.2009.20
   Barbosal R, 2007, ICCBSS 2007: SIXTH INTERNATIONAL IEEE CONFERENCE ON COMMERCIAL-OFF-THE-SHELF (COTS)-BASED SOFTWARE SYSTEMS, PROCEEDINGS, P233
   Baudry B, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P272, DOI 10.1109/METRIC.2001.915535
   Belcastro C. M., 2002, Proceedings of the 2002 American Control Conference (IEEE Cat. No.CH37301), P4776, DOI 10.1109/ACC.2002.1025414
   Belli Fevzi, 2010, Proceedings 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2010), P208, DOI 10.1109/SSIRI.2010.14
   Bennani MN, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P62, DOI 10.1109/ICAC.2004.1301348
   BERZTISS AT, 1994, INT J SOFTW ENG KNOW, V4, P165, DOI 10.1142/S021819409400009X
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Boehm B.W., 1978, Characteristics of Software Quality
   Brito PHS, 2009, LAT-AM SYMP DEP COMP, P103, DOI 10.1109/LADC.2009.22
   Brito PHS, 2008, IEEE HI ASS SYS ENGR, P177, DOI 10.1109/HASE.2008.11
   Byung-Hoon Suh, 1992, Proceedings. Third International Symposium on Software Reliability Engineering (Cat. No.92TH0486-1), P237, DOI 10.1109/ISSRE.1992.285888
   Calås G, 2006, Third International Conference on Information Technology: New Generations, Proceedings, P72, DOI 10.1109/ITNG.2006.7
   Chan HA, 2004, P A REL MAI, P346, DOI 10.1109/RAMS.2004.1285473
   Chattopadhyay J., 2006, Journal of Aerospace Quality and Reliability, V2, P81
   Chen Fu, 2004, Software Engineering Notes, V29, P23, DOI 10.1145/1013886.1007516
   Choi J, 2007, J INF SCI ENG, V23, P1339
   Chung L, 2009, LECT NOTES COMPUT SC, V5600, P363, DOI 10.1007/978-3-642-02463-4_19
   Costa D., 1999, Proceedings 1999 Pacific Rim International Symposium on Dependable Computing, P201, DOI 10.1109/PRDC.1999.816230
   Costa D, 2000, DSN 2000: INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P251, DOI 10.1109/ICDSN.2000.857547
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Dehnert J, 2002, LECT NOTES COMPUT SC, V2360, P121
   DELAPUENTE JA, 1994, AUTOMATIC CONTROL - WORLD CONGRESS 1993, VOL 2, P693
   Demsky B, 2008, LECT NOTES COMPUT SC, V5142, P490, DOI 10.1007/978-3-540-70592-5_21
   DeVale J, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P145, DOI 10.1109/DSN.2002.1028895
   DeVale J, 2001, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P519, DOI 10.1109/DSN.2001.941438
   DINGMAN CP, 1995, DIG PAP INT SYMP FAU, P522, DOI 10.1109/FTCS.1995.466945
   Dix M, 2002, EUROMICRO CONF PROC, P62, DOI 10.1109/EURMIC.2002.1046134
   Dolev Shlomi, 2010, International Journal on Software Tools for Technology Transfer, V12, P53, DOI 10.1007/s10009-008-0096-8
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Fernandez JC, 2005, LECT NOTES COMPUT SC, V3502, P333
   Fernsler K., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P189, DOI 10.1109/ISSRE.1999.809324
   Fetzer C, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P155, DOI 10.1109/DSN.2002.1028896
   Forrester JE, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE 4TH UNSENIX WINDOWS SYSTEMS SYMPOSIUM, P59
   Frick A., 1995, Technology of Object-Oriented Languages and Systems TOOLS 17. Proceedings of the Seventeenth International Conference, P13
   Frick A, 2000, SOFTWARE PRACT EXPER, V30, P481, DOI 10.1002/(SICI)1097-024X(20000425)30:5<481::AID-SPE299>3.0.CO;2-S
   Fu C, 2005, IEEE T SOFTWARE ENG, V31, P292, DOI 10.1109/TSE.2005.51
   Gabriel RP, 2006, ACM SIGPLAN NOTICES, V41, P433, DOI 10.1145/1167515.1167510
   Garousi V, 2010, IEEE T SOFTWARE ENG, V36, P778, DOI 10.1109/TSE.2010.5
   Ghosh A. K., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P166, DOI 10.1109/ISSRE.1999.809321
   Ghosh AK, 1999, DIG PAP INT SYMP FAU, P344, DOI 10.1109/FTCS.1999.781070
   Ghosh AK, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P231, DOI 10.1109/ISSRE.1998.730886
   Groot P, 2000, LECT NOTES ARTIF INT, V1937, P403
   Hameed Kashif, 2010, Journal of Software Engineering and Applications, V3, P303, DOI 10.4236/jsea.2010.34036
   Hanna S, 2008, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P471, DOI 10.1109/ITNG.2008.182
   Hanna S, 2009, INFORMATION SYSTEMS DEVELOPMENT: CHALLENGES IN PRACTICE, THEORY AND EDUCATION, VOLS 1AND 2, P1093, DOI 10.1007/978-0-387-78578-3_40
   Heimdahl MPE, 2000, SCI COMPUT PROGRAM, V36, P65, DOI 10.1016/S0167-6423(99)00018-0
   Henderson MI, 1996, MECHATRONICS, V6, P209, DOI 10.1016/0957-4158(95)00073-9
   Henzinger TA, 2008, PHILOS T R SOC A, V366, P3727, DOI 10.1098/rsta.2008.0141
   Holderfield VT, 2002, LECT NOTES ARTIF INT, V2592, P355
   Huhns MN, 2000, IEEE INTERNET COMPUT, V4, P93, DOI 10.1109/4236.815875
   Huhns MN, 2003, LECT NOTES COMPUT SC, V2603, P199
   Huhns MN, 2002, IEEE INTERNET COMPUT, V6, P80, DOI 10.1109/4236.991447
   Huhns MN, 2001, INT J SOFTW ENG KNOW, V11, P259, DOI 10.1142/S0218194001000530
   Hui Ding, 2006, Proceedings. RTSS. 26th IEEE International Real-Time Systems Symposium
   Issarny V., 2001, Proceedings of the 34th Annual Hawaii International Conference on System Sciences, DOI 10.1109/HICSS.2001.927253
   ISSARNY V, 1993, J OBJECT-ORIENT PROG, V6, P29
   Jaffe M. S., 1989, Proceedings. 11th International Conference on Software Engineering (Cat. No.89CH2718-5), P302, DOI 10.1145/74587.74628
   JAFFE MS, 1991, IEEE T SOFTWARE ENG, V17, P241, DOI 10.1109/32.75414
   Jhumka A, 2002, 7TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P211, DOI 10.1109/HASE.2002.1173125
   Jiang Shu-juan, 2005, Mini-Micro Systems, V26, P1854
   Jing CM, 2008, LECT NOTES COMPUT SC, V5245, P24, DOI 10.1007/978-3-540-88140-7_3
   Johansson A, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P127, DOI 10.1109/ISSRE.2007.23
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Jwo JS, 2001, COMPUTER SCIENCE AND TECHNOLOGY IN NEW CENTURY, P506
   Kaksonen R, 2001, INT FED INFO PROC, V64, P174
   Kanoun K, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P11, DOI 10.1109/ISSRE.2005.13
   Kashmirian J., 2000, Foundations of Intelligent Systems. 12th International Symposium, ISMIS 2000. Proceedings (Lecture Notes in Artificial Intelligence Vol.1932), P205
   Keane J, 1996, PROCEEDINGS OF THE 11TH KNOWLEDGE-BASED SOFTWARE ENGINEERING CONFERENCE, P104, DOI 10.1109/KBSE.1996.552828
   Khedri N, 2006, PROC WRLD ACAD SCI E, V14, P354
   Kitchenham B, 2004, PROCEDURES PERFORMIN, P33
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Koopman P, 2000, IEEE T SOFTWARE ENG, V26, P837, DOI 10.1109/32.877845
   Koopman P, 1997, SYM REL DIST SYST, P72, DOI 10.1109/RELDIS.1997.632800
   Koopman P., 1999, Proceedings Computer Security, Dependability, and Assurance: From Needs to Solutions (Cat. No.98EX358), P103, DOI 10.1109/CSDA.1998.798360
   Koopman P, 1999, DIG PAP INT SYMP FAU, P30, DOI 10.1109/FTCS.1999.781031
   Kovi A., 2010, Proceedings 2010 30th International Conference on Distributed Computing Systems Workshops (ICDCS 2010 Workshops), P302, DOI 10.1109/ICDCSW.2010.73
   Kropp NP, 1998, DIG PAP INT SYMP FAU, P230, DOI 10.1109/FTCS.1998.689474
   Kulkarni D, 2010, IEEE T SOFTWARE ENG, V36, P184, DOI 10.1109/TSE.2010.11
   Laranjeiro N, 2008, P IEEE I C SERV COMP, P187, DOI 10.1109/SCC.2008.123
   Laranjeiro N, 2010, SYM REL DIST SYST, P255, DOI 10.1109/SRDS.2010.36
   Laranjeiro N, 2009, DEPEND: 2009 SECOND INTERNATIONAL CONFERENCE ON DEPENDABILITY, P122, DOI 10.1109/DEPEND.2009.25
   Lei B, 2010, ELECTRON NOTES THEOR, V260, P173, DOI 10.1016/j.entcs.2009.12.037
   Lei B, 2010, SCI COMPUT PROGRAM, V75, P879, DOI 10.1016/j.scico.2010.02.005
   LI T, 1994, SERVING HUMANITY THROUGH COMMUNICATIONS, VOLS 1-3, P1767, DOI 10.1109/ICC.1994.368731
   Liggesmerer P., 1998, Proceedings of the 15th International Conference and Exposition on Testing Computer Software. Testing Under Pressure, P71
   Lisboa LB, 2010, INFORM SOFTWARE TECH, V52, P1, DOI 10.1016/j.infsof.2009.05.001
   Liu Hongtao, 2006, High Technology Letters (English Language Edition), V12, P23
   Lu Caroline, 2009, 2009 IEEE 14th International Conference on Emerging Technologies & Factory Automation. ETFA 2009, DOI 10.1109/ETFA.2009.5347121
   Majumdar R, 2009, REAL TIM SYST SYMP P, P355, DOI 10.1109/RTSS.2009.17
   Mao CY, 2005, IEEE INT C ENG COMP, P432
   Martin E, 2007, PROC INT CONF SOFTW, P65, DOI 10.1109/ICSECOMPANION.2007.84
   Maxion RA, 1998, DIG PAP INT SYMP FAU, P346, DOI 10.1109/FTCS.1998.689485
   MAXION RA, 1995, DIG PAP INT SYMP FAU, P528, DOI 10.1109/FTCS.1995.466944
   Mays D, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P567, DOI 10.1109/ICSE.2002.1008001
   Mendes Naaliel, 2010, Proceedings of the 2010 Eighth European Dependable Computing Conference (EDCC 2010), P33, DOI 10.1109/EDCC.2010.14
   Micskei Z, 2007, LECT NOTES COMPUT SC, V4526, P20
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Moraes R., 2006, Proceedings. 6th European Dependable Computing Conference
   MOSES J, 1991, RELIABILITY AND ROBUSTNESS OF ENGINEERING SOFTWARE II, P19
   Mukherjee A, 1997, IEEE T SOFTWARE ENG, V23, P366, DOI 10.1109/32.601075
   Nebut C, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P85, DOI 10.1109/ISSRE.2003.1251033
   Neishaburi MH, 2007, IEEE INT SYMP DESIGN, P247
   Neishaburi MH, 2007, I C COMP SYST APPLIC, P528, DOI 10.1109/AICCSA.2007.370932
   Oláh J, 2009, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON DEPENDABILITY OF COMPUTER SYSTEMS, P107, DOI 10.1109/DepCoS-RELCOMEX.2009.41
   Pan J., 1999, 1999 IEEE AUTOTESTCON Proceedings (Cat. No.99CH36323), P493, DOI 10.1109/AUTEST.1999.800419
   Pan JT, 2001, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P141, DOI 10.1109/DSN.2001.941400
   Pardo Juan, 2009, Proceedings of the 2009 International Conference on Embedded Systems & Applications. ESA 2009, P274
   Petersen K., 2008, C EVALUATION ASSESSM, P71
   Popovic M, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P485
   Preston-Thomas P., 1991, ICC 91. International Conference on Communications Conference Record (Cat. No.91CH2984-3), P1159, DOI 10.1109/ICC.1991.162535
   Rajanikanth KN, 2003, TENCON IEEE REGION, P173, DOI 10.1109/TENCON.2003.1273308
   Robertson P, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1118178.1118200
   Robillard MP, 1999, LECT NOTES COMPUT SC, V1687, P322, DOI 10.1145/318774.319251
   Rollet Antoine, 2007, 2007 5th International Conference on Software Engineering Research, Management and Applications, P667
   Ruiz J.-C., 2005, Proceedings. 11th Pacific Rim International Symposium on Dependable Computing
   Saad-Khorchef F, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P1461, DOI 10.1145/1244002.1244315
   Santana F. G., 2001, Reliable Software Technologies - Ada-Europea 2001. 6th Ada-Europe International Conference on Reliable Software Technologies. Proceedings (Lecture Notes in Computer Science Vol.2043), P148
   Sârbu C, 2006, LECT NOTES COMPUT SC, V4328, P120
   Schmidt DC, 1999, C++ REP, V11, P40
   Seung Hak Kuk, 2009, 2009 IEEE Asia-Pacific Services Computing Conference (APSCC 2009), P319, DOI 10.1109/APSCC.2009.5394106
   Shahrokni A., 2009, Proceedings 21st International Conference on Software Engineering & Knowledge Engineering (SEKE 2009), P460
   Shahrokni A, 2010, LECT NOTES COMPUT SC, V6182, P79, DOI 10.1007/978-3-642-14192-8_9
   Shelton CP, 2000, DSN 2000: INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P261, DOI 10.1109/ICDSN.2000.857548
   Shin ME, 2005, SCI COMPUT PROGRAM, V57, P27, DOI 10.1016/j.scico.2004.10.003
   Shyamasundar R. K., 1994, Sadhana, V19, P941, DOI 10.1007/BF02743937
   Siewiorek D. P., 1993, Digest of Papers FTCS-23 The Twenty-Third International Symposium on Fault-Tolerant Computing, P88, DOI 10.1109/FTCS.1993.627311
   Sloan J, 2010, I C DEPEND SYS NETWO, P161, DOI 10.1109/DSN.2010.5544923
   Süsskraut M, 2007, I C DEPEND SYS NETWO, P61, DOI 10.1109/DSN.2007.84
   Svahnberg M, 2010, INFORM SOFTWARE TECH, V52, P237, DOI 10.1016/j.infsof.2009.11.006
   Turlapati R, 2005, 2005 IEEE/WIC/ACM International Conference on Intelligent Agent Technology, Proceedings, P386
   Twala B, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P102, DOI 10.1109/ISESE.2005.1541819
   Vasan A, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P241
   Verde L, 2000, PROCEEDINGS OF THE 2000 IEEE INTERNATIONAL SYMPOSIUM ON COMPUTER-AIDED CONTROL SYSTEM DESIGN, P196, DOI 10.1109/CACSD.2000.900211
   Vieira M, 2007, 13TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P322, DOI 10.1109/PRDC.2007.56
   Vieira M, 2007, I C DEPEND SYS NETWO, P131, DOI 10.1109/DSN.2007.16
   Voas J, 1997, IEEE SOFTWARE, V14, P73, DOI 10.1109/52.595959
   Waydo S, 2003, 42ND IEEE CONFERENCE ON DECISION AND CONTROL, VOLS 1-6, PROCEEDINGS, P738
   Xiao S, 2003, SECOND IEEE INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS, PROCEEDINGS, P223, DOI 10.1109/NCA.2003.1201160
   Xu L, 2009, ITCS: 2009 INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY AND COMPUTER SCIENCE, PROCEEDINGS, VOL 2, PROCEEDINGS, P120, DOI 10.1109/ITCS.2009.164
   Yeh C.-H., 2001, Proceedings 15th International Parallel and Distributed Processing Symposium. IPDPS 2001, DOI 10.1109/IPDPS.2001.924968
   Zamli Kamal Z., 2006, Proceedings of the 2006 International Conference on Computing & Informatics. ICOCI 2006, DOI 10.1109/ICOCI.2006.5276549
NR 169
TC 52
Z9 57
U1 1
U2 30
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2013
VL 55
IS 1
BP 1
EP 17
DI 10.1016/j.infsof.2012.06.002
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 036GA
UT WOS:000311013200001
DA 2024-07-18
ER

PT J
AU Moe, NB
   Aurum, A
   Dybå, T
AF Moe, Nils Brede
   Aurum, Aybuke
   Dyba, Tore
TI Challenges of shared decision-making: A multiple case study of agile
   software development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile software development; Scrum; Decision-making; Self-management;
   Alignment; Teamwork
ID SELF-MANAGEMENT; TEAM; SYSTEMS; FRAMEWORK; MODEL
AB Context: Agile software development changes the nature of collaboration, coordination, and communication in software projects.
   Objective: Our objective was to understand the challenges of shared decision-making in agile software development teams.
   Method: We designed a multiple case study consisting of four projects in two software product companies that recently adopted Scrum. We collected data in semi-structured interviews, through participant observations, and from process artifacts.
   Results: We identified three main challenges to shared decision-making in agile software development: alignment of strategic product plans with iteration plans, allocation of development resources, and performing development and maintenance tasks in teams.
   Conclusion: Agile software development requires alignment of decisions on the strategic, tactical, and operational levels in order to overcome these challenges. Agile development also requires a transition from specialized skills to redundancy of functions and from rational to naturalistic decision-making. This takes time; the case companies needed from one to two years to change from traditional, hierarchical decision-making to shared decision-making in software development projects. Crown Copyright (C) 2011 Published by Elsevier B.V. All rights reserved.
C1 [Aurum, Aybuke] Univ New S Wales, Sch Informat Syst Technol & Management, Sydney, NSW, Australia.
   [Moe, Nils Brede; Dyba, Tore] SINTEF, NO-7465 Trondheim, Norway.
C3 University of New South Wales Sydney; SINTEF
RP Aurum, A (corresponding author), Univ New S Wales, Sch Informat Syst Technol & Management, Sydney, NSW, Australia.
EM nils.b.moe@sintef.no; aybuke@unsw.edu.au; tore.dyba@sintef.no
RI mchugh, fearghal/D-1070-2012; Moe, Nils Brede/AAD-8183-2021
OI Aurum, Aybuke/0000-0003-2416-4555; Moe, Nils Brede/0000-0003-2669-0778
FU TeamIT project; Research Council of Norway [193236/140]
FX We appreciate the input received from the project participants of the
   investigated companies. This research is supported by the TeamIT project
   and the Research Council of Norway under Grant 193236/140. We are
   grateful to Torgeir Dingsoyr from SINTEF ICT, who participated in the
   data collection at the North Company, and to the reviewers of this paper
   who gave us valuable feedback.
CR Abrahamsson P., 2002, Agile Software Development Methods: Review and Analysis
   [Anonymous], 1996, ORG DECISION MAKING
   [Anonymous], P IEEE WESCON LOS AL
   [Anonymous], 2004, XP Ser
   [Anonymous], 5 EUR C INF SYST
   [Anonymous], ELEMENTS SOFTWARE PR
   [Anonymous], 18 INT IEEE REQ ENG
   [Anonymous], BEEDLE AGILE SOFTWAR
   [Anonymous], P 38 HAW INT C SYST
   [Anonymous], 1989, PARTICIPANT OBSERVAT
   [Anonymous], 1986, PSYCHOL WORK PRODUCT
   Anthony R. N., 1965, PLANNING CONTROL SYS
   Aurum A, 2007, LECT NOTES COMPUT SC, V4542, P109
   Aurum A, 2006, INT J SOFTW ENG KNOW, V16, P795, DOI 10.1142/S0218194006003002
   Börjesson A, 2004, IEEE SOFTWARE, V21, P36, DOI 10.1109/MS.2004.27
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Dickinson T.L., 1997, SER APPL PSYCHOL, P19
   Dybå T, 2000, IEEE SOFTWARE, V17, P82, DOI 10.1109/52.877872
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Fægri TE, 2010, INFORM SOFTWARE TECH, V52, P1118, DOI 10.1016/j.infsof.2010.06.002
   FJELLMAN SM, 1976, ETHOS, V4, P73, DOI 10.1525/eth.1976.4.1.02a00040
   Kirkman BL, 1999, ACAD MANAGE J, V42, P58, DOI 10.5465/256874
   Klein G, 2008, HUM FACTORS, V50, P456, DOI 10.1518/001872008X288385
   Langfield-Smith K, 1997, ACCOUNT ORG SOC, V22, P207, DOI 10.1016/S0361-3682(95)00040-2
   Langley A, 1999, ACAD MANAGE REV, V24, P691, DOI 10.2307/259349
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   Levesque LL, 2001, J ORGAN BEHAV, V22, P135, DOI 10.1002/job.87
   Li JC, 2010, INT ARCH PHOTOGRAMM, V38, P1
   Lipshitz R, 2001, J BEHAV DECIS MAKING, V14, P331, DOI 10.1002/bdm.381
   Marks MA, 2000, J APPL PSYCHOL, V85, P971, DOI 10.1037//0021-9010.85.6.971
   Marks MA, 2001, ACAD MANAGE REV, V26, P356, DOI 10.5465/AMR.2001.4845785
   McAvoy J, 2009, EUR J INFORM SYST, V18, P372, DOI 10.1057/ejis.2009.22
   Mintzberg H., 1989, MINTZBERG MANAGEMENT, DOI DOI 10.1111/j.1468-0432.2009.00465.x
   Moe N. B., 2006, Software Process Improvement and Practice, V11, P21, DOI 10.1002/spip.250
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Moe NB, 2009, IEEE SOFTWARE, V26, P20, DOI 10.1109/MS.2009.182
   Morgan G., 1996, IMAGES ORG, V2nd
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Nerur S, 2007, COMMUN ACM, V50, P79, DOI 10.1145/1226736.1226739
   Pearce CL, 2004, ACAD MANAGE EXEC, V18, P47, DOI 10.5465/AME.2004.12690298
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Salas E, 2005, SMALL GR RES, V36, P555, DOI 10.1177/1046496405277134
   Simon HA, 1955, Q J ECON, V69, P99, DOI 10.2307/1884852
   TAKEUCHI H, 1986, HARVARD BUS REV, V64, P137
   Vinekar V, 2006, INFORM SYST MANAGE, V23, P31, DOI 10.1201/1078.10580530/46108.23.3.20060601/93705.4
   Yin RK, 2002, Applied Social Research Methods Series, V34
   Zannier C, 2007, INFORM SOFTWARE TECH, V49, P637, DOI 10.1016/j.infsof.2007.02.010
   Zazworka N., 2010, 4th International Symposium on Empirical Software Engineering and Measurement (ESEM), P1, DOI DOI 10.1145/1852786.1852805
NR 49
TC 89
Z9 110
U1 5
U2 113
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2012
VL 54
IS 8
SI SI
BP 853
EP 865
DI 10.1016/j.infsof.2011.11.006
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 963DB
UT WOS:000305599200005
DA 2024-07-18
ER

PT J
AU Clarke, P
   O'Connor, RV
AF Clarke, Paul
   O'Connor, Rory V.
TI The situational factors that affect the software development process:
   Towards a comprehensive reference framework
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering process; Process definition; Process implementation
   and change
ID GROUNDED THEORY; DEVELOPMENT RISK; AGILE METHODS; MANAGEMENT; ISO-9000
AB Context: An optimal software development process is regarded as being dependent on the situational characteristics of individual software development settings. Such characteristics include the nature of the application(s) under development, team size, requirements volatility and personnel experience. However, no comprehensive reference framework of the situational factors affecting the software development process is presently available.
   Objective: The absence of such a comprehensive reference framework of the situational factors affecting the software development process is problematic not just because it inhibits our ability to optimise the software development process, but perhaps more importantly, because it potentially undermines our capacity to ascertain the key constraints and characteristics of a software development setting.
   Method: To address this deficiency, we have consolidated a substantial body of related research into an initial reference framework of the situational factors affecting the software development process. To support the data consolidation, we have applied rigorous data coding techniques from Grounded Theory and we believe that the resulting framework represents an important contribution to the software engineering field of knowledge.
   Results: The resulting reference framework of situational factors consists of eight classifications and 44 factors that inform the software process. We believe that the situational factor reference framework presented herein represents a sound initial reference framework for the key situational elements affecting the software process definition.
   Conclusion: In addition to providing a useful reference listing for the research community and for committees engaged in the development of standards, the reference framework also provides support for practitioners who are challenged with defining and maintaining software development processes. Furthermore, this framework can be used to develop a profile of the situational characteristics of a software development setting, which in turn provides a sound foundation for software development process definition and optimisation. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Clarke, Paul] Dublin City Univ, Lero Irish Software Engn Res Ctr, Dublin 9, Ireland.
   [O'Connor, Rory V.] Dublin City Univ, Sch Comp, Dublin 9, Ireland.
C3 Dublin City University; Dublin City University
RP Clarke, P (corresponding author), Dublin City Univ, Lero Irish Software Engn Res Ctr, Dublin 9, Ireland.
EM pclarke@computing.dcu.ie; roconnor@computing.d-cu.ie
RI Clarke, Paul/JAX-9606-2023
OI Clarke, Paul/0000-0002-4487-627X; O'Connor, Rory/0000-0001-9253-0313
FU Science Foundation Ireland [10/CE/11855]; Irish Software Engineering
   Research Centre
FX This work is supported, in part, by Science Foundation Ireland Grant
   10/CE/11855 to Lero, the Irish Software Engineering Research Centre
   (www.lero.ie).
CR Albrech A., 1979, PROC JOINT SHAREGUID, P83
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], W ELECT SHOW CONVENT
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2017, 122072017 ISOIECIEEE
   [Anonymous], 2002, VTT PUBLICATIONS
   [Anonymous], 1992, CMUSEI92TR004
   [Anonymous], 2006, CMMI DEV VERS 1 2
   Appari A, 2010, J SYST SOFTWARE, V83, P2098, DOI 10.1016/j.jss.2010.06.012
   Barki H, 2001, J MANAGE INFORM SYST, V17, P37, DOI 10.1080/07421222.2001.11045666
   BASKERVILLE R, 2001, REALIGNING RES PRACT, P12
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Bekkers W, 2008, 2008 SECOND INTERNATIONAL WORKSHOP ON SOFTWARE PRODUCT MANAGEMENT, P43
   Benaroch M, 2010, IEEE SOFTWARE, V27, P65, DOI 10.1109/MS.2010.28
   Benediktsson O, 2006, IEE P-SOFTW, V153, P87, DOI 10.1049/ip-sen:20050061
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Boehm B., 2003, BALANCING AGILITY DI
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Boehm BW., 1981, Software Engineering Economics
   Cameron J, 2002, COMMUN ACM, V45, P72, DOI 10.1145/504729.504731
   Casher J.D., 1984, Management Review, V73, P50
   Cater-Steel AP, 2001, 2001 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P262, DOI 10.1109/ASWEC.2001.948520
   COALLIER F, 1994, IEEE SOFTWARE, V11, P98, DOI 10.1109/52.251221
   Coleman G, 2008, J SYST SOFTWARE, V81, P772, DOI 10.1016/j.jss.2007.07.027
   Constantine L., METHODOLOGICAL AGILI
   Corbin J., 2008, QUAL RES, DOI DOI 10.4135/9781452230153.N10
   Dede B., 2010, Situational Factors Affecting Software Development Process Selection
   Delany S.J., APPL CASE BASED REAS
   Douglas D., 2003, MANAGE RES NEWS, V26, P44
   Duchscher JEB, 2004, J ADV NURS, V48, P605, DOI 10.1111/j.1365-2648.2004.03249.x
   El Emam K, 2000, J SYST SOFTWARE, V51, P119, DOI 10.1016/S0164-1212(99)00117-X
   Ferratt TW, 2010, SIGMIS CPR '10: PROCEEDINGS OF THE 2010 ACM SIGMIS COMPUTER PERSONNEL RESEARCH CONFERENCE, P165
   Fitzgerald B, 2006, EUR J INFORM SYST, V15, P200, DOI 10.1057/palgrave.ejis.3000605
   Fowler M., 2001, AGILE MANIFESTO SOFT, P28
   Gibson D., 2006, CMUSEI2006TR004
   Ginsberg M., 1995, CMUSEI94TR024
   Glaser B., 1976, DISCOVERY GRUOUNDED
   Glaser B.G., 1998, DOING GROUNDED THEOR
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Grady R., 1997, SUCCESSFUL SOFTWARE
   Herbsleb J., 1994, CMUSEI945TR013
   Herbsleb JD, 1996, PROC INT CONF SOFTW, P323, DOI 10.1109/ICSE.1996.493427
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Hyde K., 2004, Software Process Improvement and Practice, V9, P217, DOI 10.1002/spip.205
   IEEE, 2004, GUID SOFTW ENG BOOK
   ISO, 1987, 9001 ISO
   *ISO IEC, 1998, 15504 ISOIEC
   Jones C., 2008, J DEFENSE SOFTWARE E, V21, P9
   Kautz K., 1998, Software Process Improvement and Practice, V4, P209, DOI 10.1002/(SICI)1099-1670(199812)4:4<209::AID-SPIP105>3.0.CO;2-8
   Keil M, 1998, COMMUN ACM, V41, P76, DOI 10.1145/287831.287843
   Kettunen V., 2010, P 19 INT S SOFTW TES, P231, DOI [10.1145/1831708.1831737, DOI 10.1145/1831708.1831737]
   KITCHENHAM BA, 1991, SOFTWARE METRICS RIG
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Knigge L, 2006, ENVIRON PLANN A, V38, P2021, DOI 10.1068/a37327
   Koh T. W., 2008, Information Technology Journal, V7, P830, DOI 10.3923/itj.2008.830.839
   Kolodner J.L., 1993, Case-Based Reasoning
   Lawlis P.K., 1995, Crosstalk, V8, P21
   Lebsanft K., 2001, Product Focused Software Process Improvement. Third International Conference, PROFES 2001. Proceedings (Lecture Notes in Computer Science Vol.2188), P78
   Lempert L. B., 2007, SAGE HDB GROUNDED TH, P245, DOI DOI 10.4135/9781848607941.N12
   Lyytinen K, 1998, INFORM SYST RES, V9, P233, DOI 10.1287/isre.9.3.233
   MacCormack A, 2003, J PROD INNOVAT MANAG, V20, P217, DOI 10.1111/1540-5885.2003004
   Oskarsson O., 1996, An ISO 9000 approach to building quality software
   Palmer S.R., 2002, PRACTICAL GUIDE FEAT
   Park H, 2008, EXPERT SYST APPL, V35, P929, DOI 10.1016/j.eswa.2007.08.001
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Reichertz J., 2007, The sage handbook of grounded theory
   Reifer DJ, 2002, IEEE SOFTWARE, V19, P16, DOI 10.1109/MS.2002.1020280
   Ropponen J, 2000, IEEE T SOFTWARE ENG, V26, P98, DOI 10.1109/32.841112
   Schwaber K., 1995, BUS OBJ DES IMPL WOR
   Stelzer D, 1997, SOFTWARE QUAL J, V6, P65, DOI 10.1023/A:1018591430752
   Stelzer D., 1996, SOFTWARE PROCESS IMP, V2, P197, DOI DOI 10.1002/(SICI)1099-1670(199609)2:3<197::AID-SPIP47>3.0.CO;2-C
   Subramanian GH, 2009, COMMUN ACM, V52, P118, DOI 10.1145/1562764.1562794
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Truex D., 2000, Accounting, Management and Information Technologies, V10, P53, DOI 10.1016/S0959-8022(99)00009-0
   Wallace L, 2004, COMMUN ACM, V47, P68, DOI 10.1145/975817.975819
   Wang AI, 2009, INFORM SOFTWARE TECH, V51, P293, DOI 10.1016/j.infsof.2008.03.005
   WATSON I, 1994, KNOWL ENG REV, V9, P327, DOI 10.1017/S0269888900007098
   Wegelius H., 2007, EUROSPI 2007 IND P, P227
   Whitworth E, 2007, AGILE 2007, PROCEEDINGS, P26, DOI 10.1109/AGILE.2007.60
   Xu P, 2007, J MANAGE INFORM SYST, V24, P293, DOI [10.2753/MIS0742-1222240211, 10.2753/MIS0742-I22224021I]
   Yang YH, 2001, IND MANAGE DATA SYST, V101, P329, DOI 10.1108/EUM0000000005821
NR 83
TC 188
Z9 206
U1 1
U2 67
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2012
VL 54
IS 5
BP 433
EP 447
DI 10.1016/j.infsof.2011.12.003
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 906CR
UT WOS:000301323000001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Brossard, A
   Abed, M
   Kolski, C
AF Brossard, Arnaud
   Abed, Mourad
   Kolski, Christophe
TI Taking context into account in conceptual models using a Model Driven
   Engineering approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Business process; Model-Driven Engineering; Human Computer Interaction
AB Context: In public transport, travelers (considered as information systems users) do not have the same objectives and/or concerns at the same time. For this reason it is not always easy to provide them with the right information at the right time. If personalizing the information to the user allows to do this to some extend it is not enough since the information could also depend on the use of the context and the environment (e.g., place, time, etc.).
   Objective: This paper proposes a solution allowing the context to be managed inside an application's conceptual models in order to provide more flexible web applications from the user's point of view.
   Method: Our work is based on a modeling method using the Model Driven Engineering (MDE) approach and on practical field experiences permitting us to validate our solution. Our domain of application is personalized transport information.
   Results: Introducing the notion of context into rules and decision trees that are used inside conceptual models allowed us to incorporate context as important information for personalizing web applications.
   Conclusion: The context should be integrated into an application during the modeling phase to allow a smooth integration inside the application and to facilitate the evolution over time. Our solution offers a better user's experience through an extended personalization of web applications. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Brossard, Arnaud] Aplon France, F-62223 Aubin, France.
   [Abed, Mourad; Kolski, Christophe] Univ Lille Nord France, F-59046 Lille, France.
   [Abed, Mourad; Kolski, Christophe] UVHC, LAMIH, F-59313 Valenciennes, France.
   [Abed, Mourad; Kolski, Christophe] CNRS, UMR 8530, F-59313 Valenciennes, France.
C3 Universite de Lille; Centre National de la Recherche Scientifique
   (CNRS); Universite Polytechnique Hauts-de-France; Centre National de la
   Recherche Scientifique (CNRS)
RP Brossard, A (corresponding author), Aplon France, F-62223 Aubin, France.
EM a.brossard@aplon.org
RI Abed, Ahmed M./AAN-3264-2021; kolski, christophe/M-4947-2019
OI Abed, Ahmed M./0000-0001-5315-3850; kolski,
   christophe/0000-0002-7881-6435; Abed, Mourad/0000-0001-9723-7714
FU International Campus on Safety and Intermodality in Transportation
   (CISIT); Nord/Pas-de-Calais Region; European Community; Regional
   Delegation for Research and Technology; French Ministry of Higher
   Education and Research; French National Research Agency; French National
   Center for Scientific Research
FX This research was supported by International Campus on Safety and
   Intermodality in Transportation (CISIT), the Nord/Pas-de-Calais Region,
   the European Community, the Regional Delegation for Research and
   Technology, the French Ministry of Higher Education and Research, the
   French National Research Agency (Viatic.Mobilite project) and the French
   National Center for Scientific Research. The authors gratefully
   acknowledge the support of these institutions. The authors also thank
   the journal's anonymous reviewers for their many constructive remarks.
CR ADAMS MJ, 2005, P 17 C ADV INF SYST
   ANDERSSON B, 2005, P 17 C ADV INF SYST, P243
   ANLI A, 2005, P HCI INT LAS VEG NE, V7
   [Anonymous], ORMSC20010701 OMG
   [Anonymous], THESIS U CATHOLIQUE
   [Anonymous], 2004, Software Factories
   [Anonymous], 2003, Pervasive computing: The mobile world
   BERNONVILLE S, 2005, INTERNET INFORM TECH, V119
   BERRIONVILLE S, INT J MED I IN PRESS, DOI DOI 10.1016/J.IJMEDINF.2008.04.003
   BESSAI B, 2008, P 9 WORKSH BUS PROC, P86
   BPMI, 2004, BUS PROC MOD NOT VER
   BREINER K, 2009, HCI, V4, P663
   BROSSARD A, 2008, THESIS U VALENCIENNE
   BROSSARD A, 2010, INTERACTION HOMME MA, P223
   BROSSARD A, 2007, INGENIERIE SYSTEMES, V5, P69
   BROSSARD A, 2008, 27 EUR ANN C HUM DEC
   BROSSARD A, 2009, ACM MOB C 6 INT C MO
   Calvary G, 2003, INTERACT COMPUT, V15, P289, DOI 10.1016/S0953-5438(03)00010-9
   Calvary G, 2001, LECT NOTES COMPUT SC, V2254, P173
   CALVARY G, 2003, 9 IFIP WORK C ENG HU
   *CHOICESTREAM, 2008, CHOICESTREAM PERS SU
   COOK S, 2004, DOMAIN SPECIFIC MODE, P2
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   da Silva PP, 2003, IEEE SOFTWARE, V20, P62, DOI 10.1109/MS.2003.1207457
   Debevoise T., 2007, BUSINESS PROCESS MAN
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   Erl T., 2007, SOA Principles of Service Design
   Erl T, 2005, SERVICE ORIENTED ARC
   EYERMANN U, 2004, WHAT SENIOR MANAGEME
   Ezzedine H, 2008, INT J COMPUT COMMUN, V3, P281, DOI 10.15837/ijccc.2008.3.2396
   Favre Jean-Marie, 2006, L'ingenierie dirigee par les modeles: au-dela du MDA
   FONDEMENT F, 2004, 3 WORKSH SOFTW MOD E
   FORBRIG P, 2004, P 1 INT WORKSH MAK M
   Frankel D., 2003, The Zachman Framework and the OMG's Model Driven Architecture
   FRANKEL D, 2005, MDA J, P1
   FRESSMANN A, 2007, 8 INT TAG WIRTSCH KA
   GATES B, 2008, B GATES KEYNOTE MICR
   Hailpern B, 2006, IBM SYST J, V45, P451, DOI 10.1147/sj.453.0451
   HAN R, 1998, IEEE PERSONAL COMMUN, V5
   HENDERSONSELLER.B, 2005, SOFTWARE SYSTEM MODE, V4, P4, DOI DOI 10.1007/S10270-004-0076-8
   HINZ M, 2004, P BERL XML TAG 2004, P65
   HOLTEN R, 2005, ONTOLOGY DRIVEN METH, P174
   JACQUET C, 2006, P C FRANC UB MOB UB, P33
   Kaltz J Wolfgang., 2005, Revue d'intelligence artificielle, V19, P439
   Kapitsaki GM, 2009, INFORM SOFTWARE TECH, V51, P1244, DOI 10.1016/j.infsof.2009.03.002
   Kjeldskov J., 2003, DUX 03 P 2003 C DESI, P1
   Lenat D., 1998, Technical report
   LUYTEN K, 2004, THESIS TRANSNATIONAL
   Magal S., 2009, Essentials of Business Processes an Information Systems, V10th
   MAUS H, 2001, P 3 INT INT C CONTEX, P261
   Muller Pierre-Alain., 2005, Software and Systems Modeling, V4, P424
   Nugroho A, 2009, INFORM SOFTWARE TECH, V51, P1670, DOI 10.1016/j.infsof.2009.04.007
   NUNES JDN, 2001, THESIS U MADEIRA POR
   *OMG, 2005, SEM BUS VOC BUS RUL
   *OMG, 2005, INTRO OMGS UN MOD LA
   *OMG, 2003, MDA GUID V1 01 1
   OYA M, 2002, MDA SYSTEM DESIGN MD
   PALANO R, 2006, P 6 WORKSH DOM SPEC, P23
   Patern'o F., 1999, Model-based design and evaluation of interactive applications
   Paterno F, 1997, HUMAN-COMPUTER INTERACTION - INTERACT '97, P362
   PAWLOWSKI JM, 2008, P 7 IEEE C POL ADH M, P1
   PEREZMEDINA JL, 2007, P 6 INT WORKSH TASK
   Petit-Rozé C, 2006, INFORM SOFTWARE TECH, V48, P107, DOI 10.1016/j.infsof.2005.03.004
   PETITROZE C, 2004, GENIE LOGICIEL, V70, P29
   REENSKAUG T, 1979, MODELS VIEW CONTROLL
   Rosemann Michael, 2008, International Journal of Business Process Integration and Management, V3, P47, DOI 10.1504/IJBPIM.2008.019347
   ROSEMANN M, 2006, P CAIS 06 WORKSH BUS
   Rozanski N., 2005, SOFTWARE SYSTEMS ARC
   SAIDANI O, 2007, 8 WORKSH BUS PROC MO
   Schattkowsky T, 2006, LECT NOTES COMPUT SC, V3844, P201
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   SOTTET JS, 2006, IHM IDM TANDEM PROME
   TARIQ NA, 2004, P 13 NORD BALT C BIO, P43
   The Business Rules Group, 2000, DEF BUS RUL WHAT AR
   Van den Bergh J, 2004, SECOND IEEE ANNUAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS WORKSHOPS, PROCEEDINGS, P13
   Van Setten M., 2001, PERSONALIZED INFORM
   VANDENBERGH J, 2006, THESIS HASSELT U
   VANDERDONCKT J, 2005, P CAISE 05, P16
   VESANEN J, 2005, HELSINKI SCH EC WO W, V391
NR 80
TC 23
Z9 24
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2011
VL 53
IS 12
BP 1349
EP 1369
DI 10.1016/j.infsof.2011.06.011
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 847QF
UT WOS:000296986900005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kaminski, G
   Praphamontripong, U
   Ammann, P
   Offutt, J
AF Kaminski, Garrett
   Praphamontripong, Upsorn
   Ammann, Paul
   Offutt, Jeff
TI A logic mutation approach to selective mutation for programs and queries
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software logic testing; Mutation testing; Database query testing;
   Disjunctive Normal Form
AB Context: Program mutation testing is a technique for measuring and generating high quality test data. However, traditional mutation operators are not necessarily efficient or effective. We address three specific issues. One, test data that kills all mutants generated by current mutation tools can still miss detection of some common logic faults because such tools lack appropriate logic mutation operators. Two, the number of mutants generated is often unnecessarily large. Three, many equivalent mutants can be generated and these can be difficult to eliminate.
   Objective: This paper explores the idea of addressing these issues by selectively generating only specially engineered subsuming higher order logic mutants. However, such an approach is only useful if a test set that kills all such mutants also kills a high percentage of general mutants. Method: An empirical study was conducted using a tool that generates only subsuming higher order logic mutants and tools that generate general mutants. Both Java code and SQL were used as the source under test.
   Results and conclusions: For both the software and queries, tests killing all the subsuming higher order mutants killed a high percentage of general mutants while reducing both the number of mutants and the number of equivalent mutants. The conclusion is that, for the test subjects studied, subsuming higher order logic mutation is an effective approach to selective mutation for programs and queries. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Kaminski, Garrett; Praphamontripong, Upsorn; Ammann, Paul; Offutt, Jeff] George Mason Univ, Fairfax, VA 22030 USA.
C3 George Mason University
RP Kaminski, G (corresponding author), George Mason Univ, Fairfax, VA 22030 USA.
EM gkaminsk@gmu.edu; uprapham@gmu.edu; pammann@gmu.edu; offutt@gmu.edu
CR Acree A. T., 1979, GITICS7908 SCH INF C
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 2006, CIT
   [Anonymous], ACM T SOFTWARE ENG M
   Chan M.Y., 1999, Proceedings of the 2nd International Symposium on Cooperative Database Systems for Advanced Applications, P363
   Chays D, 2004, SOFTW TEST VERIF REL, V14, P17, DOI 10.1002/stvr.286
   CHAYS D, 2000, P INT S SOFTW TEST A, P147
   CHEN Z, 2008, P 2008 ACM S APPL CO
   Chilenski J.J., 2001, INVESTIGATION 3 FORM
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Emmi M., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P151
   Halfond WGJ, 2006, IEEE INT CONF AUTOM, P69
   Hamlet R. G., 1982, IEEE T SOFTWARE ENG, V8, P371
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   Jia Y, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P249, DOI 10.1109/SCAM.2008.36
   KAMINSKI G, 2009, P 2 INT C SOFTW TEST, P386
   KAMINSKI G, 2009, P 2 INT C SOFTW TEST, P167
   KAMINSKI G, 2009, P MUT WORKSH 2 INT C
   Kaminski G, 2008, SOFTW TEST VERIF REL, V18, P149, DOI 10.1002/stvr.386
   KAPFHAMMER GM, 2003, P 9 EUR SOFTW ENG C, P98
   Kuhn DR, 1999, ACM T SOFTW ENG METH, V8, P411, DOI 10.1145/322993.322996
   Lau MF, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P117
   Lau MF, 2006, P INT COMP SOFTW APP, P403
   Lau M. F., 2007, P 12 INT C REL SOFTW, P55
   Lau MF, 2005, ACM T SOFTW ENG METH, V14, P247, DOI 10.1145/1072997.1072998
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   OFFUTT AJ, 1994, IEEE T SOFTWARE ENG, V20, P337, DOI 10.1109/32.286422
   Offutt AJ, 1999, SOFTWARE PRACT EXPER, V29, P167, DOI 10.1002/(SICI)1097-024X(199902)29:2<167::AID-SPE225>3.0.CO;2-V
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   Offutt J, 2003, SOFTW TEST VERIF REL, V13, P25, DOI 10.1002/stvr.264
   OFFUTT J, 1996, INT S SOFTW TEST AN, P195
   OFFUTT J, 1994, WILEYS SOFTWARE TEST, V4, P131
   OFFUTT J, 1997, WILEYS SOFTWARE TEST, V7, P165
   Polo M, 2009, SOFTW TEST VERIF REL, V19, P111, DOI 10.1002/stvr.392
   SUAREZCABAL MJ, 2004, P 12 ACM SIGSOFT INT, P253
   Sullivan J, 1997, COMPUTER, V30, P103, DOI 10.1109/2.587557
   TUYA J, 2006, P 2 WORKSH MUT AN RA
   TUYA J, WILEYS SOFT IN PRESS, DOI DOI 10.1002/STVR.424(JANUARY15)
   Tuya J, 2007, INFORM SOFTWARE TECH, V49, P398, DOI 10.1016/j.infsof.2006.06.009
   WILLMOR D, 2010, P 28 ACM INT C SOFTW, P102
   Yu YT, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P14
NR 44
TC 21
Z9 23
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2011
VL 53
IS 10
BP 1137
EP 1152
DI 10.1016/j.infsof.2011.03.009
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 801ER
UT WOS:000293421200009
DA 2024-07-18
ER

PT J
AU Rainer, A
AF Rainer, Austen
TI The longitudinal, chronological case study research strategy: A
   definition, and an example from IBM Hursley Park
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software project; Deadline effect; Longitudinal case study; Chronology;
   Qualitative data; Theory development
ID PROJECT SUCCESS; SOFTWARE; STATE
AB Context: There is surprisingly little empirical software engineering research (ESER) that has analysed and reported the rich, fine-grained behaviour of phenomena over time using qualitative and quantitative data. The ESER community also increasingly recognises the need to develop theories of software engineering phenomena e.g. theories of the actual behaviour of software projects at the level of the project and over time.
   Objective: To examine the use of the longitudinal, chronological case study (LCCS) as a research strategy for investigating the rich, fine-grained behaviour of phenomena over time using qualitative and quantitative data.
   Method: Review the methodological literature on longitudinal case study. Define the LCCS and demonstrate the development and application of the LCCS research strategy to the investigation of Project C, a software development project at IBM Hursley Park. Use the study to consider prospects for LCCSs, and to make progress on a theory of software project behaviour.
   Results: LCCSs appear to provide insights that are hard to achieve using existing research strategies, such as the survey study. The LCCS strategy has basic requirements that data is time-indexed, relatively fine-grained and collected contemporaneous to the events to which the data refer. Preliminary progress is made on a theory of software project behaviour.
   Conclusion: LCCS appears well suited to analysing and reporting rich, fine-grained behaviour of phenomena over time. (C) 2011 Elsevier B.V. All rights reserved.
C1 Univ Hertfordshire, Sch Comp Sci, Hatfield AL10 9AB, Herts, England.
C3 University of Hertfordshire
RP Rainer, A (corresponding author), Univ Hertfordshire, Sch Comp Sci, Hatfield AL10 9AB, Herts, England.
EM a.w.rainer@herts.ac.uk
OI Rainer, Austen/0000-0001-8868-263X
FU Royal Academy of Engineering [ITG10-279]
FX I thank IBM Hursley Park and all of the project members of Project C for
   allowing me to study the project and report the results of that study.
   In particular, I thank Paul Gibson and John Allan for their continual
   support at IBM Hursley Park. I also thank Professor Martin Shepperd for
   supervising my doctoral studies, which form the basis for the case study
   reported here. Completion of this paper was facilitated by a short
   research visit to Lund University, partly funded by a Royal Academy of
   Engineering International Travel Grant (ITG10-279). I thank Professor
   Per Runeson for his support in preparation for and during the visit to
   Lund University. Finally, I thank the editor and reviewers for their
   constructive comments on earlier drafts of this paper.
CR ABDELHAMID TK, 1989, COMMUN ACM, V32, P1426, DOI 10.1145/76380.76383
   ANDERSSON C, 2007, IEEE T SOFTWARE ENG
   [Anonymous], 1 INT S EMP SOFTW EN
   [Anonymous], REAL WORLD RES RESOU
   [Anonymous], 1994, CHAOS REP
   [Anonymous], GUIDE ADV EMPIRICAL
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   BRADAC MG, 1994, IEEE T SOFTWARE ENG, V20, P774, DOI 10.1109/32.328994
   BRADAC MG, 1993, 15 INT C SOFTW ENG
   Checkland P., 1981, Systems thinking, systems practice, V10th ed
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Cook JE, 1998, IEEE T SOFTWARE ENG, V24, P650, DOI 10.1109/32.707700
   Crowston K., 2006, Software Process Improvement and Practice, V11, P123, DOI 10.1002/spip.259
   Crowston K., 2004, 4 WORKSH OP SOURC SO
   Crowston K., 2003, 24 INT C INF SYST IC
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   DESOUZA CRB, 2004, 2004 ACM C COMP SUPP
   DESOUZA CRB, 2008, 2008 INT C SOFTW ENG
   Easterbrook S., 2008, GUIDE ADV SOFTWARE E
   El Emam K, 2008, IEEE SOFTWARE, V25, P84, DOI 10.1109/MS.2008.107
   FENTON N, 1994, IEEE SOFTWARE, V11, P86, DOI 10.1109/52.300094
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   GERKEN J, 2007, VISUALIZATION 2007
   Glass RL, 2005, IEEE SOFTWARE, V22, P112, DOI 10.1109/MS.2005.144
   Glass RL, 2003, IEEE SOFTWARE, V20, P20, DOI 10.1109/MS.2003.1241361
   GUINDON R, 1990, INT J MAN MACH STUD, V33, P279, DOI 10.1016/S0020-7373(05)80120-8
   Guindon R., 1990, Human-Computer Interaction, V5, P305, DOI 10.1207/s15327051hci0502&3_6
   HERCEG P, 2007, MTR070061R1 MITRE CO
   HESSE W, 1996, 5 EUR WORKSH SOFTW P
   HOLT NE, 2006, THESIS U OSLO
   Israeli A, 2010, J SYST SOFTWARE, V83, P485, DOI 10.1016/j.jss.2009.09.042
   Jackson M., 1995, SOFTWARE REQUIREMENT
   Jorgensen M, 2006, INFORM SOFTWARE TECH, V48, P297, DOI 10.1016/j.infsof.2005.07.002
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   KITCHENHAM B, 1996, TR9609 KEEL U, P120
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Koch S, 2007, J SOFTW MAINT EVOL-R, V19, P361, DOI 10.1002/smr.348
   Lagnado DA, 2004, J EXP PSYCHOL LEARN, V30, P856, DOI 10.1037/0278-7393.30.4.856
   Lagnado DA, 2006, J EXP PSYCHOL LEARN, V32, P451, DOI 10.1037/0278-7393.32.3.451
   LONCHAMP J, 1993, 2 INT C SOFTW PROC C
   MacDonell SG, 2003, J SYST SOFTWARE, V66, P91, DOI 10.1016/S0164-1212(02)00067-5
   Porter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P41, DOI 10.1145/268411.268421
   Porter AA, 1997, IEEE T SOFTWARE ENG, V23, P329, DOI 10.1109/32.601071
   PRECHELT L, 2006, TRB0602 FREIE U I F
   Procaccino JD, 2005, J SYST SOFTWARE, V78, P194, DOI 10.1016/j.jss.2004.12.011
   Procaccino JD, 2002, INFORM SOFTWARE TECH, V44, P53, DOI 10.1016/S0950-5849(01)00217-8
   Raffo DM, 2000, J SYST SOFTWARE, V53, P31, DOI 10.1016/S0164-1212(00)00006-6
   RAINER A, 2005, 11 IEEE INT SOFTW ME
   RAINER A, 2011, UHCSTR508 U HERTF SC
   RAINER A, 1999, THESIS BOURNEMOUTH U
   RAINER A, 2005, 1 INT C OP SOURC SYS
   Rainer A, 2010, INFORM SOFTWARE TECH, V52, P1217, DOI 10.1016/j.infsof.2010.06.004
   ROBINSON H, 2004, FUT EMP STUD SOFTW E
   Robinson H, 2007, INFORM SOFTWARE TECH, V49, P540, DOI 10.1016/j.infsof.2007.02.007
   Robson C., 2002, Real world research
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   SALO O, 2004, EMPIRICAL EVALUATION, P408
   SALO O, 2005, INT S EMP SOFTW ENG
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shneiderman B., 2006, TIME ERRORS NOVEL EV
   SHULL F, 2008, BUILDING THEORIES MU
   SINGER J, 1998, INT WORKSH PROGR COM
   SJOBERG DI, 2005, IEEE T SOFTWARE ENG
   *STAND GROUP, 1999, REC SUCC CHAOS
   *STAND GROUP, 2003, LAT STAND GROUP CHAO
   Standish Group, 2004, 3 Q RES REP
   TAFF LM, 1991, IEEE T SOFTWARE ENG, V17, P839, DOI 10.1109/32.83918
   The Standish Group, 2001, EXTR CHAOS
   VANGENUCHTEN M, 1991, IEEE T SOFTWARE ENG, V17, P582, DOI 10.1109/32.87283
   Verner JM, 2007, INFORM SOFTWARE TECH, V49, P181, DOI 10.1016/j.infsof.2006.05.001
   VERNER JM, 2009, 3 INT C RES CHALL IN
   WEISS D, 2005, RA00105 POZN U TECHN, P50
   WOHLIN C, 1996, SOFTW PROC IMPR C SP
   Wolf A. L., 1993, 2 INT C SOFTW PROC B
   Yin R.K., 2011, Qualitative research from start to finish
   Ziman J.M., 1978, RELIABLE KNOWLEDGE E
NR 78
TC 8
Z9 10
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2011
VL 53
IS 7
BP 730
EP 746
DI 10.1016/j.infsof.2011.01.003
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 767DU
UT WOS:000290836300004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fægri, TE
   Dybå, T
   Dingsoyr, T
AF Faegri, Tor Erlend
   Dyba, Tore
   Dingsoyr, Torgeir
TI Introducing knowledge redundancy practice in software development:
   Experiences with job rotation in support work
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Job rotation; Personnel rotation; Empirical software engineering; Agile
   organizations; Organizational learning; Software development
ID PRODUCT DEVELOPMENT TEAMS; SHARED KNOWLEDGE; MANAGEMENT; INFORMATION;
   INTEGRATION; INNOVATION; SYSTEMS; SPECIALIZATION; ACQUISITION; DYNAMICS
AB Context: Job rotation is a widely known approach to increase knowledge redundancy but empirical evidence regarding introduction and adoption in software development is scant. A lack of knowledge redundancy is a limiting factor for collaboration, flexibility, and coordination within teams and within the organization.
   Objective: The scientific objective of this investigation was to explore benefits and challenges with improving knowledge redundancy among developers participating in job rotation. There were two practical objectives; (a) to establish customer support as a legitimate organizational function that would shield developers from support enquiries, and (b) to contribute to improved flexibility in project staffing by enabling overlapping product experience among developers.
   Method: We used action research to integrate organizational change with scientific inquiry. During a period of eighteen weeks, nine developers rotated to customer support. We collected data throughout the period of collaboration: in meetings, from comprehensive interviews, and from customer support work logs.
   Results: Perceptions of reduced efficiency and unnecessary redundancy outweighed benefits of shielding and learning about different products. Although there were strong indications of increased knowledge redundancy, the benefits were not sufficient to justify job rotation. Job rotation was abandoned after the trial period.
   Conclusions: Job rotation can contribute to improved knowledge redundancy. Benefits of knowledge redundancy include innovation stemming from integration of different knowledge domains and improved appreciation of organizational concerns. However, knowledge redundancy incurs a collective cost that must be amortized and legitimized by the organization. An adoption process that accommodates open and trustful discussion among all involved stakeholders is therefore encouraged. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Faegri, Tor Erlend; Dyba, Tore; Dingsoyr, Torgeir] SINTEF Informat & Commun Technol, N-7465 Trondheim, Norway.
   [Faegri, Tor Erlend; Dingsoyr, Torgeir] Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, N-7491 Trondheim, Norway.
C3 SINTEF; Norwegian University of Science & Technology (NTNU)
RP Fægri, TE (corresponding author), SINTEF Informat & Commun Technol, SP Andersens Vei 15B, N-7465 Trondheim, Norway.
EM Tor.E.Fegri@sintef.no; Tore.Dyba@sintef.no; Torgeir.Dingsoyr@sintef.no
RI Dingsøyr, Torgeir/AAJ-7360-2020; Dingsøyr, Torgeir/J-5862-2012
OI Dingsøyr, Torgeir/0000-0003-0725-345X; Dingsøyr,
   Torgeir/0000-0003-0725-345X
FU Research Council of Norway [174390/140]
FX The work in this paper was supported by the Research Council of Norway
   through the project EVidence based Improvement of SOFTware engineering
   (EVISOFT, partially funded by the Research Council of Norway under Grant
   No. 174390/140). We are grateful for the constructive comments from
   anonymous reviewers and associate editor at Information and Software
   Technology. We also thank Chris Wright for valuable comments to improve
   clarity and readability.
CR Alavi M, 2001, MIS QUART, V25, P107, DOI 10.2307/3250961
   Allwood JM, 2004, INT J PROD RES, V42, P865, DOI 10.1080/00207540310001631566
   [Anonymous], 2005, ORGANIZATION, DOI DOI 10.1177/1350508405051277
   [Anonymous], 2007, INTRO ACTION RES SOC, DOI DOI 10.4135/9781412984614
   ARENT J, 2002, IMPROVING SOFTWARE O
   Argyris C., 1996, Organizational learning II: Theory, method, and practice, V2
   Armour PG, 2002, COMMUN ACM, V45, P17
   Barker JamesR., 1999, DISCIPLINE TEAMWORK
   Baskerville R., 2006, Knowledge Management Research & Practice, V4, P83, DOI 10.1057/palgrave.kmrp.8500090
   Baskerville R, 1998, EUR J INFORM SYST, V7, P90, DOI 10.1057/palgrave.ejis.3000298
   BASKERVILLE R, 2004, MIS Q, V28
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Brown JS, 1991, ORGAN SCI, V2, P40, DOI 10.1287/orsc.2.1.40
   Brown JS, 2001, ORGAN SCI, V12, P198, DOI 10.1287/orsc.12.2.198.10116
   Carlile PR, 2004, ORGAN SCI, V15, P555, DOI 10.1287/orsc.1040.0094
   Carlile PR, 2002, ORGAN SCI, V13, P442, DOI 10.1287/orsc.13.4.442.2953
   Chen S, 2005, J ENG TECHNOL MANAGE, V22, P291, DOI [10.1016/j.jengtecman.2005.09.003, 10.1016/j.jenctecman.2005.09.003]
   Cook SDN, 1999, ORGAN SCI, V10, P381, DOI 10.1287/orsc.10.4.381
   CORBI TA, 1989, IBM SYST J, V28, P294, DOI 10.1147/sj.282.0294
   Corbin J., 2008, QUAL RES, DOI DOI 10.4135/9781452230153.N10
   Cosgel MM, 1999, J INST THEOR ECON, V155, P301
   Davies Andrew., 2005, BUSINESS PROJECTS
   Davison R, 2004, INFORM SYST J, V14, P65, DOI 10.1111/j.1365-2575.2004.00162.x
   Dybå T, 2000, IEEE SOFTWARE, V17, P82, DOI 10.1109/52.877872
   Dybå T, 2003, MANAGING SOFTWARE ENGINEERING KNOWLEDGE, P95
   Edmondson AC, 2007, ACAD MANAGE REV, V32, P1155, DOI 10.5465/AMR.2007.26586086
   Enberg C, 2006, MANAGE LEARN, V37, P143, DOI 10.1177/1350507606063440
   Eriksson T, 2006, IND LABOR RELAT REV, V59, P653, DOI 10.1177/001979390605900407
   FAEGRI TE, 2009, BUILDING GEN KNOWLED, P46
   FAEGRI TE, 2010, XP2010 11 INT C AG S
   Fægri TE, 2007, IEEE SOFTWARE, V24, P96, DOI 10.1109/MS.2007.68
   Floyd C., 1992, Software Development and Reality Construction, P86, DOI DOI 10.1007/978-3-642-76817-0_10
   Flyvbjerg B., 2001, MAKING SOCIAL SCI MA
   Galunic DC, 1998, STRATEGIC MANAGE J, V19, P1193, DOI 10.1002/(SICI)1097-0266(1998120)19:12<1193::AID-SMJ5>3.3.CO;2-6
   Gebert D, 2006, EUR J WORK ORGAN PSY, V15, P431, DOI 10.1080/13594320600826314
   GLASS RL, 1992, INFORM MANAGE, V23, P183, DOI 10.1016/0378-7206(92)90043-F
   Grant RM, 1996, ORGAN SCI, V7, P375, DOI 10.1287/orsc.7.4.375
   Hauptman O, 1999, R&D MANAGE, V29, P179, DOI 10.1111/1467-9310.00128
   Hodgson DE, 2004, ORGANIZATION, V11, P81, DOI 10.1177/1350508404039659
   Hoopes DG, 1999, STRATEGIC MANAGE J, V20, P837, DOI 10.1002/(SICI)1097-0266(199909)20:9<837::AID-SMJ54>3.0.CO;2-I
   Hughes Thomas P., 1987, The social construction of technical systems: New directions in the sociology and history of technology, V82, DOI DOI 10.1177/030631289019001010
   Kampenes V.B., 2008, EVALUATION ASSESSMEN
   Keil-Slawik R., 1992, SOFTWARE DEV REALITY, P168
   Kolb D.A., 2000, EXPERIENTIAL LEARNIN
   Lindbeck A, 2000, J LABOR ECON, V18, P353, DOI 10.1086/209962
   Lundvall BA, 2007, INT J MANPOWER, V28, P207, DOI 10.1108/01437720710755218
   Lyytinen K, 1999, INFORM SYST J, V9, P85, DOI 10.1046/j.1365-2575.1999.00051.x
   March JamesG., 1993, Organization
   Moe NB, 2008, LECT NOTES BUS INF P, V9, P11
   Moe NB, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P76, DOI 10.1109/ASWEC.2008.28
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Morgan G., 1996, IMAGES ORG, V2nd
   Nerur S, 2007, COMMUN ACM, V50, P79, DOI 10.1145/1226736.1226739
   Nonaka I, 1995, KNOWLEDGE CREATING C
   ORLIKOWSKI WJ, 1994, ADMIN SCI QUART, V39, P541, DOI 10.2307/2393771
   ORLIKOWSKI WJ, 1992, ORGAN SCI, V3, P398, DOI 10.1287/orsc.3.3.398
   Ortega J, 2001, MANAGE SCI, V47, P1361, DOI 10.1287/mnsc.47.10.1361.10257
   PENTLAND BT, 1992, ADMIN SCI QUART, V37, P527, DOI 10.2307/2393471
   Pinch T., SOCIAL CONSTRUCTION, P17
   Polanyi M., 1966, Knowledge in Organisations
   Postrel S, 2002, ORGAN SCI, V13, P303, DOI 10.1287/orsc.13.3.303.2773
   Rindfleisch A, 2001, J MARKETING, V65, P1, DOI 10.1509/jmkg.65.2.1.18253
   Robilliard PN, 1999, COMMUN ACM, V42, P87, DOI 10.1145/291469.291476
   Rönkkö K, 2007, INFORM SOFTWARE TECH, V49, P682, DOI 10.1016/j.infsof.2007.02.014
   Rulke DL, 2000, MANAGE SCI, V46, P612, DOI 10.1287/mnsc.46.5.612.12052
   Söderquist KE, 2006, LONG RANGE PLANN, V39, P497, DOI 10.1016/j.lrp.2005.07.004
   Song M, 2006, R&D MANAGE, V36, P173, DOI 10.1111/j.1467-9310.2006.00424.x
   SUSMAN GI, 1978, ADMIN SCI QUART, V23, P582, DOI 10.2307/2392581
   Taylor A, 2006, ACAD MANAGE J, V49, P723, DOI 10.2307/20159795
   Tell F, 2004, ORGANIZATION, V11, P443, DOI 10.1177/1350508404044057
   Tiwana A, 2004, INFORM SOFTWARE TECH, V46, P899, DOI 10.1016/j.infsof.2004.03.006
   UN CA, 2007, J TECHNOLOGY MANAGEM, V2, P4
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   VONMAYRHAUSER A, 1995, IEEE COMPUT, V28, P44, DOI DOI 10.1109/2A02076
   WALZ DB, 1993, COMMUN ACM, V36, P63, DOI 10.1145/163430.163447
   WANG X, 2007, THESIS U BATH BATH, P305
   Welling H, 2007, CREATIVITY RES J, V19, P163, DOI 10.1080/10400410701397214
NR 77
TC 36
Z9 37
U1 2
U2 34
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2010
VL 52
IS 10
BP 1118
EP 1132
DI 10.1016/j.infsof.2010.06.002
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 638LF
UT WOS:000280895700008
DA 2024-07-18
ER

PT J
AU Staron, M
   Meding, W
   Söderqvist, B
AF Staron, Miroslaw
   Meding, Wilhelm
   Soderqvist, Bo
TI A method for forecasting defect backlog in large streamline software
   development projects and its industrial evaluation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Quality metrics; Defect prediction; Early warning; LEAN software
   development; Streamline development
ID PREDICTION
AB Context: Predicting a number of defects to be resolved in large software projects (defect backlog) usually requires complex statistical methods and thus is hard to use on a daily basis by practitioners in industry. Making predictions in simpler and more robust way is often required by practitioners in software engineering industry.
   Objective: The objective of this paper is to present a simple and reliable method for forecasting the level of defect backlog in large, lean-based software development projects.
   Method: The new method was created as part of an action research project conducted at Ericsson. In order to create the method we have evaluated multivariate linear regression, expert estimations and analogy-based predictions w.r.t. their accuracy and ease-of-use in industry. We have also evaluated the new method in a life project at one of the units of Ericsson during a period of 21 weeks (from the beginning of the project until the release of the product).
   Results: The method for forecasting the level of defect backlog uses an indicator of the trend (an arrow) as a basis to forecast the level of defect backlog. Forecasts are based on moving average which combined with the current level of defect backlog was found to be the best prediction method (Mean Magnitude of Relative Error of 16%) for the level of future defect backlog.
   Conclusion: We have found that ease-of-use and accuracy are the main aspects for practitioners who use predictions in their work. In this paper it is concluded that using the simple moving average provides a sufficiently-good accuracy (much appreciated by practitioners involved in the study). We also conclude that using the indicator (forecasting the trend) instead of the absolute number of defects in the backlog increases the confidence in our method compared to our previous attempts (regression, analogy-based, and expert estimates). (C) 2010 Elsevier B.V. All rights reserved.
C1 [Staron, Miroslaw] Chalmers & Univ Gothenburg, Dept Appl IT, SE-41296 Gothenburg, Sweden.
C3 Royal Institute of Technology; Chalmers University of Technology
RP Staron, M (corresponding author), Chalmers & Univ Gothenburg, Dept Appl IT, SE-41296 Gothenburg, Sweden.
EM miroslaw.staron@ituniv.se; wilhelm.meding@er-icsson.com;
   bo.soderqvist@ericsson.com
FU Ericsson AB; Software Architecture Quality Center
FX The authors would like to thank Ericsson AB for the received support; in
   particular the managers supporting us and the Software Architecture
   Quality Center.
CR ADELAKUN O, 1997, 2 C INF QUAL TURK FI
   AGRESTI WW, 1992, IEEE T SOFTWARE ENG, V18, P988, DOI 10.1109/32.177368
   [Anonymous], 2002, Agile software development
   [Anonymous], 2005, Extreme programming explained: Embrace change
   BAILEY JH, 1992, ANN REL MAINT S
   BALL T, 2005, 27 INT C SOFTW ENG S
   BALL T, 2005, 27 INT C SOFTW ENG I
   Baskerville RL, 1996, J INFORM TECHNOL, V11, P235, DOI 10.1080/026839696345289
   BROCKERS A, 1996, METRICS
   CAVANO JP, 1984, J SYST SOFTWARE, V4, P269, DOI 10.1016/0164-1212(84)90026-8
   Chirinos L, 2005, J SYST SOFTWARE, V74, P207, DOI 10.1016/j.jss.2004.01.019
   Clark B, 2002, IEEE SOFTWARE, V19, P12, DOI 10.1109/MS.2002.1032844
   Dekkers C. A., 2002, IT Professional, V4, P24, DOI 10.1109/MITP.2002.1000457
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   FENTON NE, 1996, SOFTWARE METRICS RIG, V7, pS638
   GRAHAM D, 1992, IEE C SOFTW PROT EV
   Hooimeijer P., 2007, ASE 07, P34
   *INT STAND ORG, 2007, 15939 ISOIEC
   Kilpi T, 2001, IEEE SOFTWARE, V18, P72, DOI 10.1109/52.965808
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   LAIRD LM, 2006, SOFTWARE MEASUREMENT, V16
   LI PL, 2006, P 28 INT C SOFTW ENG
   LI PL, 2004, FSE 04, P263
   LITTLEWOOD B, 1991, SOFTWARE RELIABILITY, V7, pS235
   MALAIYA YK, 2000, 11 INT S SOFTW REL E
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   MOHAGHEGHI P, 2004, 26 INT C SOFTW ENG I
   NEUFELDER AM, 2000, NAT AER EL C DAYT OH
   Pfleeger SL, 1997, IEEE SOFTWARE, V14, P33, DOI 10.1109/52.582973
   Poppendieck M., 2007, IMPLEMENTING LEAN SO
   Schalken J, 2008, J SYST SOFTWARE, V81, P603, DOI 10.1016/j.jss.2007.07.041
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Staron M., 2007, INFORM SOFTWARE TECH
   STARON M, 2007, INT C EMP ASS SOFTW
   STARON M, 2010, INFORM SOFTWARE ENG, V4, P1
   Staron M, 2008, INFORM SOFTWARE TECH, V50, P782, DOI 10.1016/j.infsof.2007.10.001
   Staron M, 2009, LECT NOTES COMPUT SC, V5891, P1, DOI 10.1007/978-3-642-05415-0_1
   SUSMAN GI, 1978, ADMIN SCI QUART, V23, P582, DOI 10.2307/2392581
   TOMASZEWSKI P, 2007, SOFTWARE PROCESS IMP, P1
   TRAN P, 1991, 10 ANN INT C COMP CO
   VANSOLINGEN R, 1999, PRACTICAL GUIDE QUAL, P195
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Womack J.P., 1990, The Machine That Changed the World Vol. 323 No. 1, pp. 273287
   ZUSE H, 1998, FRAMEWORK SOFTWARE M, V29
NR 45
TC 14
Z9 15
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2010
VL 52
IS 10
BP 1069
EP 1079
DI 10.1016/j.infsof.2010.05.005
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 638LF
UT WOS:000280895700005
DA 2024-07-18
ER

PT J
AU Moe, NB
   Dingsoyr, T
   Dybå, T
AF Moe, Nils Brede
   Dingsoyr, Torgeir
   Dyba, Tore
TI A teamwork model for understanding an agile team: A case study of a
   Scrum project
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile software development; Scrum; Software engineering; Teamwork;
   Empirical software engineering; Case study
ID SELF-MANAGEMENT; SOFTWARE-DEVELOPMENT; BEHAVIORS; FRAMEWORK; AUTONOMY
AB Context Software development depends significantly on team performance, as does any process that involves human interaction
   Objective Most current development methods argue that teams should self-manage Our objective is thus to provide a better understanding of the nature of self-managing agile teams, and the teamwork challenges that arise when introducing such teams
   Method We conducted extensive fieldwork for 0 months in a software development company that introduced Scrum. We focused on the human sensemaking, on how mechanisms of teamwork were understood by the people involved
   Results We describe a project through Dickinson and McIntyre's teamwork model, focusing on the interrelations between essential teamwork components Problems with team orientation, team leadership and coordination in addition to highly specialized skills and corresponding division of work were important barriers for achieving team effectiveness
   Conclusion Transitioning from individual work to self-managing teams requires a reorientation not only by developers but also by management This transition takes time and resources, but should not be neglected In addition to Dickinson and McIntyre's teamwork components, we found trust and shared mental models to be of fundamental importance (C) 2009 Elsevier B V All rights reserved
C1 [Moe, Nils Brede; Dingsoyr, Torgeir; Dyba, Tore] SINTEF, NO-7465 Trondheim, Norway.
C3 SINTEF
RP Moe, NB (corresponding author), SINTEF, NO-7465 Trondheim, Norway.
RI Moe, Nils Brede/AAD-8183-2021; Dingsøyr, Torgeir/J-5862-2012; Dingsøyr,
   Torgeir/AAJ-7360-2020
OI Dingsøyr, Torgeir/0000-0003-0725-345X; Dingsøyr,
   Torgeir/0000-0003-0725-345X; Moe, Nils Brede/0000-0003-2669-0778
FU Research Council of Norway [174390/140]
FX This work was supported by the EVISOFT project, which is partially
   funded by the Research Council of Norway under Grant 174390/140.
CR Acuña ST, 2009, INFORM SOFTWARE TECH, V51, P627, DOI 10.1016/j.infsof.2008.08.006
   AJZEN I, 1991, ORGAN BEHAV HUM DEC, V50, P179, DOI 10.1016/0749-5978(91)90020-T
   [Anonymous], BEEDLE AGILE SOFTWAR
   Aurum A, 2006, INT J SOFTW ENG KNOW, V16, P795, DOI 10.1142/S0218194006003002
   Bandon D., 2001, J QUALITATIVE PARTIC, V24, P41
   BARKER JR, 1993, ADMIN SCI QUART, V38, P408, DOI 10.2307/2393374
   Beck K., 2000, EXTREME PROGRAMMING
   Belbin R.M., 1993, Team Roles at Work
   Boehm B., 2003, BALANCING AGILITY DI
   Burke CS, 2006, LEADERSHIP QUART, V17, P288, DOI 10.1016/j.leaqua.2006.02.007
   Cohen SG, 1997, J MANAGE, V23, P239, DOI 10.1177/014920639702300303
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Derby Esther., 2006, AGILE RETROSPECTIVES
   Dickinson T.L., 1997, SER APPL PSYCHOL, P19
   Diefenbach T, 2009, QUAL QUANT, V43, P875, DOI 10.1007/s11135-008-9164-0
   Dybå T, 2000, IEEE SOFTWARE, V17, P82, DOI 10.1109/52.877872
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Guzzo RA, 1996, ANNU REV PSYCHOL, V47, P307, DOI 10.1146/annurev.psych.47.1.307
   Hackman J.R., 1987, Handbook of organizational behavior
   Hoegl M, 2001, ORGAN SCI, V12, P435, DOI 10.1287/orsc.12.4.435.10635
   Hoegl M, 2006, HUM RESOURCE MANAGE, V45, P67, DOI 10.1002/hrm.20092
   Jurison J., 1999, COMMUNICATIONS AIS, V2
   KATZENBACH JR, 1993, HARVARD BUS REV, V71, P111
   Kirkman BL, 1999, ACAD MANAGE J, V42, P58, DOI 10.5465/256874
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Langfred CW, 2000, J ORGAN BEHAV, V21, P563, DOI 10.1002/1099-1379(200008)21:5<563::AID-JOB31>3.0.CO;2-H
   Langley A, 1999, ACAD MANAGE REV, V24, P691, DOI 10.2307/259349
   Levesque LL, 2001, J ORGAN BEHAV, V22, P135, DOI 10.1002/job.87
   MARKHAM SE, 1995, LEADERSHIP QUART, V6, P343, DOI 10.1016/1048-9843(95)90013-6
   Marks MA, 2001, ACAD MANAGE REV, V26, P356, DOI 10.5465/AMR.2001.4845785
   Moe NB, 2009, IEEE SOFTWARE, V26, P20, DOI 10.1109/MS.2009.182
   Morgan G., 2006, Images of Organization
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Nerur S, 2007, COMMUN ACM, V50, P79, DOI 10.1145/1226736.1226739
   NONAKA I, 1995, KNOWLEDGE CREATING C, V12
   Rising L, 2000, IEEE SOFTWARE, V17, P26, DOI 10.1109/52.854065
   Rogers E. M., 1995, Diffusion of Innovation Theory, P25, DOI https://doi.org/10.1007/978-3-642-79868-92
   Rousseau V, 2006, SMALL GR RES, V37, P540, DOI 10.1177/1046496406293125
   Salas E, 2005, SMALL GR RES, V36, P555, DOI 10.1177/1046496405277134
   SALAS E, 2007, 52 NEBR S MOT LINC N
   Sapsed J, 2002, INT J MANAG REV, V4, P71, DOI 10.1111/1468-2370.00077
   Schatz B, 2005, IEEE SOFTWARE, V22, P36, DOI 10.1109/MS.2005.74
   TAKEUCHI H, 1986, HARVARD BUS REV, V64, P137
   Tata J., 2004, J MANAGERIAL ISSUES, V16, P248
   TUCKMAN BW, 1965, PSYCHOL BULL, V63, P384, DOI 10.1037/h0022100
   Uhl-Bien M, 1998, ACAD MANAGE J, V41, P340, DOI 10.5465/256912
   West M.A., 1990, INNOVATION CREATIVIT
   YIN RK, 2009, CASE STUDY RES DESIG, V14, pS219
NR 49
TC 220
Z9 267
U1 18
U2 352
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2010
VL 52
IS 5
SI SI
BP 480
EP 491
DI 10.1016/j.infsof.2009.11.004
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 588XF
UT WOS:000277107200002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Bachara, P
   Blachnicki, K
   Zielinski, K
AF Bachara, Pawel
   Blachnicki, Konrad
   Zielinski, Krzysztof
TI Framework for application management with dynamic aspects J-EARS case
   study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Dynamic aspects; Resource management; Java; Self-adaptability; J-EARS
AB The cost of computer system maintenance rises together with the increasing complexity of such systems. The use of an autonomic system architecture saves money by delegating some forms of maintenance to the systems themselves. The aim of this paper is to describe the results of creating a tool which introduces elements of adaptivity to Java applications using dynamic aspects. The impact of introducing aspects on the performance of various Application Servers is also discussed. Finally, benefits and problems arising from the use of the tool are presented, basing on sample use cases. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Bachara, Pawel; Blachnicki, Konrad; Zielinski, Krzysztof] AGH Univ Sci & Technol, Inst Comp Sci, PL-30059 Krakow, Poland.
C3 AGH University of Krakow
RP Bachara, P (corresponding author), AGH Univ Sci & Technol, Inst Comp Sci, Al Mickiewicza 30, PL-30059 Krakow, Poland.
EM bachara@agh.edu.pl; blachnicki@gmail.com; kz@agh.edu.pl
CR ARBAB F, OVERVIEW MANIFOLD IT
   Arbab Farhad., 1998, Bulletin of the Dutch Association for Theoretical Computer Science NVTI, P11
   BOSS J, 2006, AOP REFERENCE DOCUME
   CHITCHYAN R, COMPARING DYNAMIC AO
   DeMichiel L., 2006, ENTERPRISE JAVABEANS
   GREENWOOD P, 2004, USING DYNAMIC ASPECT
   Hapner M., 2001, JAVA MESSAGE SERVICE
   *IBM, IBM CORP POL MAN AUT
   *IBM CORP, 2007, AUTONOMIC COMPUTING
   Johnson Rod., SPRING FRAMEWORK REF
   KERSTEN M, 2005, AOPWORK ACIP TOOLS 1
   KERSTEN M, 2005, AOPWORK ACP TOOLS 2
   MICROSYSTEMS SUN, 2004, TECHNOLOGY, V9, P2
   NICOARA A, CONTROLLED SYSTEMATI
   POPOVICI A, PROSE USER MANUAL
   Proctor Mark., Drools Documentation vv4.0.4
   *SUN MICR, 2004, JAV MAN EXT JMX TECH
   *SUN MICR, 2006, JAVATM MAN EXT JMXTM
   *SUN MICR INC, 2006, JAV SCRIPT PROGR GUI
   VANDERPERREN W, ASPECT ORIENTED PROG
NR 20
TC 4
Z9 4
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2010
VL 52
IS 1
BP 67
EP 78
DI 10.1016/j.infsof.2009.06.003
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 527ND
UT WOS:000272372900005
DA 2024-07-18
ER

PT J
AU Ganesan, D
   Keuler, T
   Nishimura, Y
AF Ganesan, Dharmalingam
   Keuler, Thorsten
   Nishimura, Yutaro
TI Architecture compliance checking at run-time
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Run-time monitoring; Architecture compliance checking; Hierarchical
   Colored Petri nets
AB In this paper, we report on our experiences with architecture compliance checking - the process of checking whether the planned or specified software architecture is obeyed by the running system - of an OSGi-based, dynamically evolving application in the office domain. To that end, we first show how to dynamically instrument a running system in the context of OSGi in order to collect run-time traces. Second, we explain how to bridge the abstraction gap between run-time traces and software architectures, through the construction of hierarchical Colored Petri nets (CP-nets). In addition, we demonstrate how to design reusable hierarchical CP-nets. In an industry example. we were able to extract views that helped us to identify a number of architecturally relevant issues (e.g., architectural style violations, behavior violations) that would not have been detected otherwise, and could have caused serious problems like system malfunctioning or unauthorized access to sensitive data. Finally, we package valuable experiences and lessons learned from this endeavor. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Ganesan, Dharmalingam] Fraunhofer Ctr Expt Software Engn, College Pk, MD 20740 USA.
   [Keuler, Thorsten] Fraunhofer Inst Expt Software Engn, D-67663 Kaiserslautern, Germany.
   [Nishimura, Yutaro] Ricoh Co Ltd, Chuo Ku, Tokyo 1048222, Japan.
C3 Fraunhofer Gesellschaft; Ricoh Company, Ltd.
RP Ganesan, D (corresponding author), Fraunhofer Ctr Expt Software Engn, 5825 Univ Res Court Suite 1300, College Pk, MD 20740 USA.
EM dganesan@fc-md.umd.edu; thorsten.keuler@ie-se.fraunhofer.de;
   yutaron@nts.ricoh.co.jp
CR ARIAS TB, 2008, 15 WORK C REV ENG
   Briand LC, 2006, IEEE T SOFTWARE ENG, V32, P642, DOI 10.1109/TSE.2006.96
   Clements P., 2003, SEI S SOFTW
   FUKUZAWA K, 2002, INT C SOFTW ENG KNOW
   GANESAN D, 2007, P SOFTW PROD LIN C S
   GANESAN D, 2008, P 8 INT C QUAL SOFTW
   GOMAA H, 2000, P ACM WORKSH DYN BEH
   JENSEN K, 1993, BASIC CONCEPTS ANAL
   KAZMAN R, 1999, J AUTOMATED SOFTWARE, V6, P107, DOI DOI 10.1023/A:1008781513258
   KEULER T, 2008, WORKSH NEXT GEN ASP
   Kiczales G., 1997, ASPECT ORIENTED PROG
   KIVILUOMA K, 2006, P INT S SOFT TEST AN
   KRIKHAAR RL, 1999, THESIS U AMSTERDAM
   LINDVALL M, 2008, IEEE AER C
   Murphy G. C., 1995, P 3 ACM SIGSOFT S FD
   Oreizy P., 1998, P 20 INT C SOFTW ENG
   Padgham L, 2005, ENG APPL ARTIF INTEL, V18, P173, DOI 10.1016/j.engappai.2004.11.018
   PARNAS DL, 1979, IEEE T SOFTWARE ENG, V5, P128, DOI 10.1109/TSE.1979.234169
   Postma A, 2003, INFORM SOFTWARE TECH, V45, P171, DOI 10.1016/S0950-5849(02)00193-3
   RICHNER T, 1999, P INT C SOFTW MAINT
   Richters M., 2003, AOSD MOD UML WORKSH
   RIVA C, 2002, P EUR C SOFTW MAINT
   Schmerl B, 2006, IEEE T SOFTWARE ENG, V32, P454, DOI 10.1109/TSE.2006.66
   SHAHABUDDIN M, 2008, AER C
   Storey MAD, 1997, PROC INT CONF SOFTW, P606, DOI 10.1145/253228.253496
   van der Aalst WMP, 2000, LECT NOTES COMPUT SC, V1825, P455
   VANDERLINDEN FJ, 1995, IEEE SOFTWARE, V12, P51, DOI 10.1109/52.469760
   XU J, 1998, P INT WORKSH SOFTW P
NR 28
TC 8
Z9 8
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2009
VL 51
IS 11
SI SI
BP 1586
EP 1600
DI 10.1016/j.infsof.2009.06.007
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 504LW
UT WOS:000270619300010
DA 2024-07-18
ER

PT J
AU Reinhartz-Berger, I
   Sturm, A
AF Reinhartz-Berger, Iris
   Sturm, Arnon
TI Utilizing domain models for application design and validation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Domain engineering; Software product line engineering; Domain analysis;
   Metamodeling; Feature oriented; Variability management
AB Domain analysis enables identifying families of applications and capturing their terminology in order to assist and guide system developers to design valid applications in the domain. One major way of carrying out the domain analysis is modeling. Several studies suggest using metamodeling techniques, feature-oriented approaches, or architectural-based methods for modeling domains and specifying applications in those domains. However, these methods mainly focus on representing the domain knowledge, providing insufficient guidelines (if any) for creating application models that satisfy the domain rules and constraints. In particular, validation of the application models which include application-specific knowledge is insufficiently dealt. In order to fill these lacks, we propose a general approach, called Application-based DOmain Modeling (ADOM), which enables specifying domains and applications similarly, (re)using domain knowledge in application models, and validating the application models against the relevant In this paper we present the ADOM approach, demonstrating its application to UML domain models. 2.0 class and sequence diagrams. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Reinhartz-Berger, Iris] Univ Haifa, Dept Management Informat Syst, IL-31905 Haifa, Israel.
   [Sturm, Arnon] Ben Gurion Univ Negev, Dept Informat Syst Engn, IL-84105 Beer Sheva, Israel.
C3 University of Haifa; Ben Gurion University
RP Reinhartz-Berger, I (corresponding author), Univ Haifa, Dept Management Informat Syst, Carmel Mt, IL-31905 Haifa, Israel.
EM iris@mis.haifa.ac.il; sturm@bgu.ac.il
RI STURM, ARNON/F-1510-2012
OI STURM, ARNON/0000-0002-4021-7752
CR Addy EA, 1998, ANN SOFTW ENG, V5, P279, DOI 10.1023/A:1018968222862
   [Anonymous], UN MOD LANG SUP VERS
   [Anonymous], MANAGEMENT INFORM SY, DOI DOI 10.2307/23044042
   [Anonymous], P COMP ASS SOFTW ENG
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Batory D, 2006, COMMUN ACM, V49, P45, DOI 10.1145/1183236.1183264
   BECKER J, 2006, P REF 2006 RAHM MKWI
   BENAVIDES D, 2006, SURVEY AUTOMATED ANA
   Clauss M., 2001, WORKSH DOM SPEC VIS
   CZARNECKI K, 2005, SOFTWARE PROCESS IMP
   DAVIS J, 2002, 6 WORLD MULT SYST CY
   de Champeaux D., 1993, OBJECT ORIENTED SYST
   Dori D., 2011, OBJECT PROCESS METHO, P1208
   DUFFY DJ, 2004, DOMAIN ARCHITECTURES
   Frakes W, 1998, ANN SOFTW ENG, V5, P125, DOI 10.1023/A:1018972323770
   France RB, 2004, IEEE T SOFTWARE ENG, V30, P193, DOI 10.1109/TSE.2004.1271174
   Gomaa H., 2004, Designing Software Product Lines with UML: From Use Cases to PatternBased Software Architectures
   GOMAA H, 2002, P 8 IEEE INT C ENG C
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   KANG K, 1990, CMUSEI90TR021ADA2357
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kim D.-K., 2007, Design Pattern Formalization Techniques, P183
   Kim DK, 2004, J VISUAL LANG COMPUT, V15, P265, DOI 10.1016/j.jvlc.2004.01.004
   KIM DK, 2008, SOFTWARE QUALITY J
   Mannion M, 2004, LECT NOTES COMPUT SC, V3014, P211
   Mannion Mike, 2002, LNCS, V2379, P176
   Meekel J., 1997, Software Engineering Notes, V22, P75, DOI 10.1145/258368.258389
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Morisio M, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P321, DOI 10.1109/ASE.2000.873688
   NAKATANI LH, 1999, P 2 C DOM SPEC LANG, P15
   NEAL S, 2001, INT ENTERPRISE DISTR, P237
   Neighbors JamesM., 1989, SOFTWARE REUSABILITY, P295
   Nordstrom G, 1999, ECBS '99, IEEE CONFERENCE AND WORKSHOP ON ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P68, DOI 10.1109/ECBS.1999.755863
   *OMG, 2003, MET OBJ FAC MOF VERS
   PADMANABHAN P, 2005, AUTOMAT SOFTW ENG, V12, P447
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Reinhartz-Berger I, 2008, J DATABASE MANAGE, V19, P74, DOI 10.4018/jdm.2008010104
   REINHARTZBERGER I, 2005, P ENT MOD INF SYST A
   SCHLEICHER A, 2001, P 34 ANN HAW INT C S, P1243
   Schmid K, 2004, SCI COMPUT PROGRAM, V53, P259, DOI 10.1016/j.scico.2003.04.002
   Schuette R., 1998, LECT NOTES COMPUTER, P240, DOI [DOI 10.1007/978-3-540-49524-620, DOI 10.1007/978-3-540-49524-6-20]
   SELONEN P, 2003, P 9 EUR SOFTW ENG C, P58
   Soffer P., 2007, CAISE 07 WORKSH P, P339
   STURM A, 2006, 8 INT C ENT IN PRESS
   THOMAS O, 2005, P 1 INT WORKSH BUS P, P16
   VALERIO A, 1997, ACM SIGAPP APPL COMP, V5
   van Deursen A., 2002, Journal of Computing and Information Technology - CIT, V10, P1, DOI 10.2498/cit.2002.01.01
   Ziadi T, 2004, LECT NOTES COMPUT SC, V3014, P129
   [No title captured]
   2006, METAEDIT
NR 51
TC 30
Z9 33
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2009
VL 51
IS 8
BP 1275
EP 1289
DI 10.1016/j.infsof.2009.03.005
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 464KT
UT WOS:000267504500006
DA 2024-07-18
ER

PT J
AU De Win, B
   Scandariato, R
   Buyens, K
   Grégoire, J
   Joosen, W
AF De Win, Bart
   Scandariato, Riccardo
   Buyens, Koen
   Gregoire, Johan
   Joosen, Wouter
TI On the secure software development process: CLASP, SDL and Touchpoints
   compared
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Software Engineering (ICSE 2007)
CY MAY 20-26, 2007
CL Minneapolis, MN
SP IEEE Comp Soc, TCSE, ACM SIGSOFT
DE Secure software; Software process; SDL; CLASP; Touchpoints
AB Development processes for software construction are common knowledge and mainstream practice in most development organizations. Unfortunately, these processes offer little support in order to meet security requirements. Over the years, research efforts have been invested in specific methodologies and techniques for secure software engineering, yet dedicated processes have been proposed only recently.
   In this paper, three high-profile processes for the development of secure software, namely OWASP's CLASP, Microsoft's SDL and McGraw's Touchpoints, are evaluated and compared in detail. The paper identifies the commonalities, discusses the specificity of each approach, and proposes suggestions for improvement. (C) 2008 Elsevier B.V. All rights reserved.
C1 [De Win, Bart; Scandariato, Riccardo; Buyens, Koen; Gregoire, Johan; Joosen, Wouter] Katholieke Univ Leuven, Dept Comp Sci, DistriNet, B-3001 Heverlee, Belgium.
C3 KU Leuven
RP De Win, B (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, DistriNet, Celestijnenlaan 200A, B-3001 Heverlee, Belgium.
EM bart.dewin@cs.kuleuven.be
CR Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   BUYENS K, 2007, SIMILARITIES DIFFERE
   Davenport T.H., 1993, PROCESS INNOVATION R
   Goertzel K.M., 2007, Software security assurance: a state-of-art report (sar)
   Hall A, 2002, IEEE SOFTWARE, V19, P18, DOI 10.1109/52.976937
   Howard M., 2006, SECURITY DEV LIFECYC
   Howard M., 2002, Writing secure code
   [ISO IEC], 2005, 15408 ISOIEC
   *ISO IEC, 2006, 21827 ISOIEC
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Jaquith A., 2007, SECURITY METRICS REP
   McGraw G., 2006, Software security: building security in
   *MSDN, 2005, SEC DEV LIF PHAS
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   *OWASP, 2006, COMPR LIGHTW APPL SE
   PETERSON G, 2004, COLLABORATION SECURE
   SALTZER JH, 1975, P IEEE, V63, P1278, DOI 10.1109/PROC.1975.9939
   Stoneburner G., 2004, NIST Special Publication 800-27 Rev A titled Engineering Principles for Information Technology Security (A Baseline for Achieving Security)
   Viega J., 2002, BUILDING SECURE SOFT
   WHEELER DA, SECURE PROGRAMMING L
   2007, MICROSOFT THREAT MOD
NR 21
TC 49
Z9 61
U1 1
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2009
VL 51
IS 7
SI SI
BP 1152
EP 1171
DI 10.1016/j.infsof.2008.01.010
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 456JD
UT WOS:000266840500007
OA Green Published
DA 2024-07-18
ER

PT J
AU Chivers, H
   Paige, RF
AF Chivers, Howard
   Paige, Richard F.
TI XRound: A reversible template language and its application in
   model-based security analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model-Driven Development; Template processing; UML; Security analysis
AB Successful analysis of the models used in Model-Driven Development requires the ability to synthesise the results of analysis and automatically integrate these results with the models themselves. This paper presents a reversible template language called XRound which supports round-trip transformations between models and the logic used to encode system properties. A template processor that supports the language is described, and the use of the template language is illustrated by its application in an analysis workbench, designed to support analysis of security properties of UML and MOF-based models. As a result of using reversible templates, it is possible to seamlessly and automatically integrate the results of a security analysis with a model. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Chivers, Howard] Cranfield Univ, Dept Informat Syst, Shrivenham, England.
   [Paige, Richard F.] Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
C3 Cranfield University; University of York - UK
RP Chivers, H (corresponding author), Cranfield Univ, Dept Informat Syst, Shrivenham, England.
EM hrchivers@iee.org; paige@cs.york.ac.uk
CR ALANEN M, 2004, P 2 NORD WORKSH UNIF, V35
   *ATL, 2007, TRANSF LANG ATLAS GR
   Balogh A., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1280, DOI 10.1145/1141277.1141575
   BRAENDELAND G, 2006, P QUAL PROT QOP, P11
   Breu R, 2005, LECT NOTES COMPUT SC, V3416, P122
   BUCHHOLTZ M, 2005, LECT NOTES COMPUTER, V3582
   Chivers H, 2005, 25th IEEE International Conference on Distributed Computing Systems Workshops, Proceedings, P114, DOI 10.1109/ICDCSW.2005.126
   CHIVERS H, 2006, P 10 IFIP OP CO COMM
   CHIVERS H, 2006, SECURITY DESIGN ANAL, P484
   CLARK J, 1999, TRANSFORMATIONS XSLT
   Cordy J. R., 2007, TXL PROGRAMMING LANG
   DELFABRO M, 2005, P IDM 05 PREME JOURN
   Foster JN, 2007, ACM T PROGR LANG SYS, V29, DOI [10.1145/1232420.1232424, 10.1145/1047659.1040325]
   Houmb SH, 2007, INTEGRATING SECURITY AND SOFTWARE ENGINEERING: ADVANCES AND FUTURE VISIONS, P190
   HU Z, 2004, P ACM SIGPALNS 2004
   *IBM, 2004, ECL JAV EM TEMPL
   JURJENS J, 2005, SECURE SYSTEMS DEV
   KOLOVOS DS, 2006, P EUR C MOD DRIV ARC, V4066
   MANNING J, 2003, CODE GENERATION ACTI
   *MDA, 2005, OBJ MAN GROUP SPEC
   *MOF, 2007, 2 0 QIER VOEW TRAMSF
   *OBJ MAN GROUP, 2007, MOF MOD TEXT TRANSF
   PATRASCOIU O, 2008, P 1 EUR MDA WORKSH M, P83
   Petriu D. C., 2007, P 6 INT WORKSH SOFTW, P91
   Pottinger R., 2003, P 29 INT C VER LARG, P826
   Tratt L., 2005, TR0501 DEP COMP SCI
   *XMF, 2005, XMF REF GUID
   2007, VELOCITY USER GUIDE
NR 28
TC 0
Z9 0
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2009
VL 51
IS 5
SI SI
BP 876
EP 893
DI 10.1016/j.infsof.2008.05.006
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 425OY
UT WOS:000264648200006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Berlin, S
   Raz, T
   Glezer, C
   Zviran, M
AF Berlin, Stanislav
   Raz, Tzvi
   Glezer, Chanan
   Zviran, Moshe
TI Comparison of estimation methods of cost and duration in IT projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Project cost estimation; Artificial neural
   networks; Regression
ID DEVELOPMENT CYCLE TIME; SOFTWARE; SUCCESS
AB Producing accurate and reliable project cost estimations at an early stage of a project's life cycle remains a substantial challenge in the information technology field. This research benchmarks the performance of various approaches to estimating IT project effort and duration. Empirical data were gathered from various "real-world" organizations including several prominent Israeli high-tech companies as well as from the International Software Benchmarking Standards Group (ISBSG) IT project database. The study contrasts two types of models that have been employed to estimate project duration and effort separately: linear regression estimation models and models deriving from a more novel approach based on artificial neural networks (ANNs). (C) 2008 Elsevier B.V. All rights reserved.
C1 [Glezer, Chanan] Ariel Univ Ctr Samaria, Dept Ind Engn & Management, IL-44837 Ariel, Israel.
   [Berlin, Stanislav; Raz, Tzvi; Zviran, Moshe] Tel Aviv Univ, Fac Management, IL-69978 Tel Aviv, Israel.
C3 Ariel University; Tel Aviv University
RP Glezer, C (corresponding author), Ariel Univ Ctr Samaria, Dept Ind Engn & Management, IL-44837 Ariel, Israel.
EM chanang@ariel.ac.il
OI Glezer, Chanan/0000-0002-4356-1858
CR ALBRECT AJ, 1978, IEEE T SOFTWARE ENG, V24, P345
   Anderson A., 1995, INTRO NEURAL NETWORK
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2004, GUID PROJ MAN BOD KN
   [Anonymous], CMUCS91100
   AXELSSON J, 1999, COST MODELS ELECT AR
   Baccarini D., 1996, International Journal of Project Management, V14, P201, DOI 10.1016/0263-7863(95)00093-3
   Boetticher B, 2003, SOFTWARE ENG COMPUTA
   BOETTICHER G, 2001, 2 INT WORKSH SOFT CO
   Bourque P, 2007, J COMPUT SCI TECH-CH, V22, P348, DOI 10.1007/s11390-007-9051-5
   Callahan J., 2001, International Journal of Project Management, V19, P59, DOI 10.1016/S0263-7863(99)00045-9
   *CIOB, 1980, N45 CIOB
   *COSMIC FFP, 1999, MEAS MAN
   DELANY S, 1998, LIMIT CBR SOFTWARE P
   GARMUS D, 2000, ADDISONWESLEY INFORM
   Gonzalez Steven., 2000, Neural Networks for Macroeconomic Forecasting: A complementary Approach to Linear Regression Models
   Griffin A, 1997, J MARKETING RES, V34, P24, DOI 10.2307/3152062
   HEEMSTRA FJ, 1992, INFORM SOFTWARE TECH, V34, P627, DOI 10.1016/0950-5849(92)90068-Z
   HORNIK K, 1989, NEURAL NETWORKS, V2, P359, DOI 10.1016/0893-6080(89)90020-8
   *ISBSG, 2004, INT SOFTW BENCHM STA
   Jones C., 1996, APPL SOFTWARE MEASUR
   LARSON EW, 1989, IEEE T ENG MANAGE, V36, P119, DOI 10.1109/17.18828
   MEYER MH, 1995, IEEE T ENG MANAGE, V42, P297, DOI 10.1109/17.482080
   Mosteller F, 1997, DATA ANAL REGRESSION
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Samson B, 1997, INFORM SOFTWARE TECH, V39, P55, DOI 10.1016/0950-5849(96)01124-X
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Tronto IFB, 2007, P INT JOINT C NEUR N
   VICINANZA S, 1990, P 11 INT C INF SYST, P149
   Wittig G., 1994, AUSTR J INFORM SYSTE, V1, P87, DOI DOI 10.3127/AJIS.V1I2.424
   WITTING W, 1997, INFORM SOFTWARE TECH, V39, P476
NR 31
TC 44
Z9 49
U1 2
U2 17
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2009
VL 51
IS 4
BP 738
EP 748
DI 10.1016/j.infsof.2008.09.007
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 409HA
UT WOS:000263495600005
DA 2024-07-18
ER

PT J
AU Koning, M
   Sun, CA
   Sinnema, M
   Avgeriou, P
AF Koning, Michiel
   Sun, Chang-ai
   Sinnema, Marco
   Avgeriou, Paris
TI VxBPEL: Supporting variability for Web services in BPEL
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Variability; Web service; Service-based system; Business Process
   Execution Language
ID ORCHESTRATION
AB Web services provide a way to facilitate the business integration over the Internet. Flexibility is an important and desirable property of Web service-based systems due to dynamic business environments. The flexibility can be provided or addressed by incorporating variability into a system. In this study, we investigate how variability can be incorporated into service-based systems. We propose a language, VxBPEL, which is an adaptation of an existing language, BPEL, and able to capture variability in these systems. We develop a prototype to interpret this language. Finally, we illustrate our method by using it to handle variability of an example. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Sun, Chang-ai] Beijing Jiaotong Univ, Sch Comp & Informat Technol, Beijing 100044, Peoples R China.
   [Koning, Michiel; Sinnema, Marco; Avgeriou, Paris] Univ Groningen, Dept Comp Sci, NL-9700 AV Groningen, Netherlands.
C3 Beijing Jiaotong University; University of Groningen
RP Sun, CA (corresponding author), Beijing Jiaotong Univ, Sch Comp & Informat Technol, Beijing 100044, Peoples R China.
EM casun@bjtu.edu.cn; p.avgeriou@cs.rug.nl
OI Avgeriou, Paris/0000-0002-7101-0754
FU SeCSE [511680]; Beijing Jiaotong University [2007RC099]
FX This work is partially supported by the EU-funded project SeCSE (IST
   Contract No. 511680) and the Science and Technology Foundation of
   Beijing Jiaotong University (Grant No. 2007RC099). The authors
   appreciate the anonymous reviewers for their invaluable comments which
   helped to greatly improve the presentation of the paper.
CR *ACTIVEBPEL ENG, ACT ENDP
   BACHMANN F, 2001, P ACM SIGSOFT S SOFT
   Batory D., 1992, ACM Transactions on Software Engineering and Methodology, V1, P355, DOI 10.1145/136586.136587
   *BEA IBM MICR SAP, 2003, SIEB SYST BUS PROC E
   Benatallah B, 2005, DISTRIB PARALLEL DAT, V17, P5, DOI 10.1023/B:DAPD.0000045366.15607.67
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Charfi A, 2004, LECT NOTES COMPUT SC, V3250, P168
   CHARFI A, 2007, THESIS TU DARMSTADT
   Charfi A, 2007, WORLD WIDE WEB, V10, P309, DOI 10.1007/s11280-006-0016-3
   Colombo M, 2006, LECT NOTES COMPUT SC, V4294, P191
   Curbera F, 2002, IEEE INTERNET COMPUT, V6, P86, DOI 10.1109/4236.991449
   ERRADI A, 2005, P MIDDL WEB SERV MWS
   ERRADI A, 2005, P IEEE INT C E TECHN
   EZENWOYE O, 2006, FIUSCIS20060601
   EZENWOYE O, 2006, P 8 INT C ENT INF SY
   EZENWOYE O, 2006, FIUSCIS20060602
   HAN Y, 1998, CSCW 98 WORKSH AD WO
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   Little M, 2003, COMMUN ACM, V46, P49, DOI 10.1145/944217.944237
   *OASIS, 2006, WEB SERV BUS PROC EX
   Peltz C, 2003, COMPUTER, V36, P46, DOI 10.1109/MC.2003.1236471
   Siljee J, 2005, LECT NOTES COMPUT SC, V3826, P255
   Sinnema M, 2004, LECT NOTES COMPUT SC, V3154, P197
   *SUN MICR, JAV MAN EXT
   Topaloglu NY, 2004, LECT NOTES COMPUT SC, V3250, P128
   TSAI WT, 2004, 28 ANN INT COMP SOFT, P554
   Verma K., 2005, The METEOR-S approach for configuring and executing dynamic web processes
NR 27
TC 61
Z9 68
U1 7
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 258
EP 269
DI 10.1016/j.infsof.2007.12.002
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 386YX
UT WOS:000261919900002
OA Green Published
DA 2024-07-18
ER

PT J
AU Habra, N
   Alexandre, S
   Desharnais, JM
   Laporte, CY
   Renault, A
AF Habra, Naji
   Alexandre, Simon
   Desharnais, Jean-Marc
   Laporte, Claude Y.
   Renault, Alain
TI Initiating software process improvement in very small enterprises -
   Experience with a light assessment tool
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software process improvement (SPI); process evaluation; CMMISM; OWPL;
   micro-evaluation; Very Small Enterprises (VSE); small settings
ID ORGANIZATIONS
AB The paper concerns software process improvement in Very Small Enterprises (VSEs). It presents briefly a gradual methodology to initiate software process improvement in VSE through three steps approach and develops the first and most original step. This first step is based on a light evaluation achieved by means of a dedicated Micro-Evaluation approach. It has been experimented during 7 years in 86 organizations from three countries. The experience with that utilization tends to show that such a light approach is practicable and promising, at least for the targeted enterprises. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Habra, Naji] Univ Namur, PReCISE Res Ctr, Namur, Belgium.
   [Desharnais, Jean-Marc; Laporte, Claude Y.] Ecole Technol Super, Montreal, PQ, Canada.
C3 University of Namur; University of Quebec; Ecole de Technologie
   Superieure - Canada
RP Habra, N (corresponding author), Univ Namur, PReCISE Res Ctr, Namur, Belgium.
EM nha@info.fundp.ac.be; simon.alexandre@cetic.be;
   jean-marc.desharnais@etsmtl.ca; claude.y.laporte@etsmtl.ca;
   alain.renault@tudor.lu
CR Abrahamsson P, 1999, SOFTWARE QUAL J, V8, P63, DOI 10.1023/A:1008978919720
   Alexandre S, 2006, EUROMICRO CONF PROC, P328, DOI 10.1109/EUROMICRO.2006.48
   BORSTLER J, 2002, 0220 UMINF UM U
   Brodman JG, 1997, PROC INT CONF SOFTW, P661, DOI 10.1145/253228.253805
   *CITA, 1997, UT SYST INF INT PME
   DESHARNAIS JM, 2005, P SWDC REK INT C SOF
   HABRA N, 1999, P EUR C SOFTW PROC I
   HABRA N, 2002, P WORKSH SOFTW QUAL
   HABRA N, 1999, P INT C PROD FOC SOF
   HARA F, 2001, P EUR SOFTW PROC IMP
   Horvat R. V., 2000, Software Process Improvement and Practice, V5, P45, DOI 10.1002/(SICI)1099-1670(200003)5:1<45::AID-SPIP110>3.0.CO;2-2
   *ISO IEC, 15504200306 ISOIEC 1
   Johnson D. L., 1997, IEEE SOFTWARE PROCES, V8
   Kuvaja P, 1999, SOFTWARE QUAL J, V8, P149, DOI 10.1023/A:1008909011736
   LAPORTE CY, 2006, P 6 SPICE C PROC ASS, P57
   Mc Caffery F, 2007, IEEE SOFTWARE, V24, P24, DOI 10.1109/MS.2007.3
   OLOFSSON S, 2000, UMINF001 UM U DEP CO
   RICHARDSON I, 2002, P ECSQ 2002 7 INT C
   Richardson I, 2007, IEEE SOFTWARE, V24, P18, DOI 10.1109/MS.2007.12
   Saastamoinen I, 2004, LECT NOTES COMPUT SC, V3281, P69
   *SEI, 2002, CMUSEI2002TR028
   STAMBOLLIAN A, 2006, P 6 SPICE C PROC ASS, P97
NR 22
TC 25
Z9 30
U1 1
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2008
VL 50
IS 7-8
BP 763
EP 771
DI 10.1016/j.infsof.2007.08.004
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 305KT
UT WOS:000256178000011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Postmus, D
   Meijler, TD
AF Postmus, Douwe
   Meijler, Theo Dirk
TI Aligning the economic modeling of software reuse with reuse practices
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software reuse; reuse economic model; composition; variation
ID VARIABILITY; COTS; ROI
AB In contrast to current practices where software reuse is applied recursively and reusable assets are tailored trough parameterization or specialization, existing reuse economic models assume that (i) the cost of reusing a software asset depends on its size and (ii) reusable assets are developed from scratch. The contribution of this paper is that it provides modeling elements and an economic model that is better aligned with current practices. The functioning of the model is illustrated in an example. The example also shows how the model can support practitioners in deciding whether it is economically feasible to apply software reuse recursively. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Postmus, Douwe; Meijler, Theo Dirk] Univ Groningen, Dept Business, NL-9700 AV Groningen, Netherlands.
   Univ Groningen, ICT, NL-9700 AV Groningen, Netherlands.
C3 University of Groningen; University of Groningen
RP Postmus, D (corresponding author), Univ Groningen, Dept Business, POB 800, NL-9700 AV Groningen, Netherlands.
EM d.postmus@rug.nl; t.d.meijler@rug.nl
RI Postmus, Douwe/AAF-5454-2021
OI Postmus, Douwe/0000-0002-9458-7038
CR [Anonymous], ACM SIGSOFT SOFTWARE
   Atkinson C, 2005, MODEL-DRIVEN SOFTWARE DEVELOPMENT, P119
   Atkinson C, 2000, KLUWER INT SER ENG C, V576, P289
   BANKER RD, 1994, INFORM SOFTWARE TECH, V36, P275, DOI 10.1016/0950-5849(94)90083-3
   BARNES BH, 1991, IEEE SOFTWARE, V8, P13, DOI 10.1109/52.62928
   Ben Lamine SB, 2005, LECT NOTES COMPUT SC, V3714, P113
   Böckle G, 2004, IEEE SOFTWARE, V21, P23
   Boehm B., 1995, Annals of Software Engineering, V1, P57, DOI 10.1007/BF02249046
   Boehm B, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P156
   Bosch J, 2001, PROC INT CONF SOFTW, P91, DOI 10.1109/ICSE.2001.919084
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Brereton P, 2000, COMPUTER, V33, P54, DOI 10.1109/2.881695
   Brown AW, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.714622
   Brown AW, 1996, SECOND IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS, P414, DOI 10.1109/ICECCS.1996.558485
   Carney D, 2000, IEEE SOFTWARE, V17, P83, DOI 10.1109/52.841700
   Clements P., 2002, Software product lines
   Crnkovic I, 2002, COMMUN ACM, V45, P35, DOI 10.1145/570907.570928
   Favaro JM, 1998, ANN SOFTW ENG, V5, P5, DOI 10.1023/A:1018976424679
   Fayad ME, 1997, COMMUN ACM, V40, P32, DOI 10.1145/262793.262798
   FLANAGAN D, 2002, JAVA NUTSHELL QUICK
   Frakes W, 1996, ACM COMPUT SURV, V28, P415, DOI 10.1145/234528.234531
   GAFFNEY JE, 1989, INFORM SOFTWARE TECH, V31, P258, DOI 10.1016/0950-5849(89)90005-0
   Jaaksi A, 2002, IEEE SOFTWARE, V19, P73, DOI 10.1109/MS.2002.1020290
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Lim WC, 1996, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE, PROCEEDINGS, P41, DOI 10.1109/ICSR.1996.496112
   Lycett M, 2001, INFORM SOFTWARE TECH, V43, P203, DOI 10.1016/S0950-5849(00)00159-2
   Messerschmitt D., 2003, SOFTWARE ECOSYSTEM U
   Mili A, 2001, ANN SOFTW ENG, V11, P175, DOI 10.1023/A:1012599304672
   Nazareth DL, 2004, J SYST SOFTWARE, V73, P245, DOI [10.1016/S0164-1212(03)00248-6, 10.1016/s0164-1212(03)00248-6]
   PFLEEGER SL, 1994, INFORM SOFTWARE TECH, V36, P475, DOI 10.1016/0950-5849(94)90025-6
   Poulin J.S., 1997, MEASURING SOFTWARE R
   Poulin J. S., 1997, INT J APPL SOFTWARE, V3, P20
   POULIN JS, 1993, IBM SYST J, V32, P567, DOI 10.1147/sj.324.0567
   PREE W, 1994, LECT NOTES COMPUTER, V821, P150, DOI DOI 10.1007/BFB0052181.[
   Ravichandran T, 2003, COMMUN ACM, V46, P109, DOI 10.1145/859670.859678
   Schmid K, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P593, DOI 10.1109/ICSE.2002.1008004
   Schmid K, 2002, IEEE SOFTWARE, V19, P50, DOI 10.1109/MS.2002.1020287
   Sinnema M, 2004, LECT NOTES COMPUT SC, V3154, P197
   Sommerville I., 2004, Software Engineering
   Szyperski C., 2002, COMPONENT SOFTWARE, V2nd
   Thiel S, 2002, IEEE SOFTWARE, V19, P66, DOI 10.1109/MS.2002.1020289
   Törngren M, 2005, EUROMICRO-SEAA 2005: 31ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P432
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
   van Ommering R, 2005, IEEE T SOFTWARE ENG, V31, P537, DOI 10.1109/TSE.2005.84
   van Ommering R, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P255, DOI 10.1109/ICSE.2002.1007973
   VANOMMERING R, 2002, LECT NOTES COMPUTER, V2379, P328
   WILES E, 1999, UWADCS99032
   [No title captured]
NR 48
TC 6
Z9 10
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2008
VL 50
IS 7-8
BP 753
EP 762
DI 10.1016/j.infsof.2007.07.009
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 305KT
UT WOS:000256178000010
DA 2024-07-18
ER

PT J
AU Chae, HS
   Yeom, K
   Kim, TY
AF Chae, Heung Seok
   Yeom, Keunhyuk
   Kim, Tae Yeon
TI Specifying and validating structural constraints of analysis class
   models using OCL
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE OCL; class model; structural constraints
AB Analysis modeling focuses on functional requirements and postpone implementation specific issues until subsequent design activities are undertaken. Based on the analysis models, the design activities are performed by refining and clarifying the analysis models. Thus, the quality of analysis models has a vast impact on the design models. Therefore, much effort should be taken to build correct analysis models.
   In this paper, we propose structural constraints that analysis class models of information systems should satisfy, and describe an OCL-based approach to validating the analysis class models against the constraints. In addition, through a case study with four medium-sized industrial information systems, we find that the proposed approach can help to identify deficiencies in analysis models. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Chae, Heung Seok; Yeom, Keunhyuk; Kim, Tae Yeon] Pusan Natl Univ, Dept Comp Sci & Engn, Pusan 609735, South Korea.
C3 Pusan National University
RP Chae, HS (corresponding author), Pusan Natl Univ, Dept Comp Sci & Engn, 30 Jangjeon Dong, Pusan 609735, South Korea.
EM hschae@pusan.ac.kr; yeonn@pusan.ac.kr; tykim@pusan.ac.kr
CR [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], UNIFIED SOFTWARE DEV
   [Anonymous], 2001, APPL USE CASE DRIVEN
   Arlow Jim., 2002, UML UNIFIED PROCESS
   BENATTOU M, 2002, WORKSH INT TRANSF UM
   BRIAND LC, 1998, EMPIR SOFTW ENG, V1, P65
   GOGOLLA M, 2002, 5 C UN MOD LANG P, P84
   GOGOLLA M, 2001, 6 AUSTR WORKSH REQ E, P51
   GOGOLLA M, 2003, 6 C UN MOD LANG P, P265
   Gomaa H., 2000, DESIGNING CONCURRENT
   Ol'khovich L, 2003, PROGRAM COMPUT SOFT+, V29, P323, DOI 10.1023/B:PACS.0000004132.42846.11
   *OMG, 2002, UML 1 4 SPEC OMG DOC
   RICHTERS M, 2000, 3 INT C UN MOD LANG, P265
   SCHLEICHER A, 2001, 34 HAW INT C SYST SC
   SELONEN P, 2003, ESEC 2003, P58
   *TONGYANG SYST, 2002, ORB COMP BAS SOFTW D
   Warmer J.B., 1998, OBJECT CONSTRAINT LA
   ZIADI T, 2002, WORKSH SOFTW MOD ENG
   ZIEMANN P, 2003, 8 INT WORKSH FORM ME, P1
NR 19
TC 2
Z9 3
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2008
VL 50
IS 5
BP 436
EP 448
DI 10.1016/j.infsof.2007.05.002
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 290WJ
UT WOS:000255153200006
DA 2024-07-18
ER

PT J
AU Alspaugh, TA
   Antón, AI
AF Alspaugh, Thomas A.
   Anton, Annie I.
TI Scenario support for effective requirements
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE requirements engineering; scenario analysis; scenario management
AB Scenarios are widely used as requirements, and the quality of requirements is an important factor in the efficiency and success of a development project. The informal nature of scenarios requires that analysts do much manual work with them, and much tedious and detailed effort is needed to make a collection of scenarios well-defined, relatively complete, minimal, and coherent. We discuss six aspects of scenarios having inherent structure on which automated support may be based, and the results of using such support. This automated support frees analysts to concentrate on tasks requiring human intelligence, resulting in higher-quality scenarios for better system requirements. Two studies validating the work are presented. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Alspaugh, Thomas A.] Univ Calif Irvine, Donald Bren Sch Informat & Comp Sci, Dept Informat, Irvine, CA 92717 USA.
   [Anton, Annie I.] N Carolina State Univ, Dept Comp Sci, Coll Engn, Raleigh, NC 27695 USA.
C3 University of California System; University of California Irvine; North
   Carolina State University
RP Alspaugh, TA (corresponding author), Univ Calif Irvine, Donald Bren Sch Informat & Comp Sci, Dept Informat, Irvine, CA 92717 USA.
EM alspaugh@ics.uci.edu
CR Alexander I., 2004, SCENARIOS STORIES US, P3
   ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   ALOTAIBY TN, 2004, ACMSE 42 P 42 ANN SE, P104
   Alspaugh TA, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P142, DOI 10.1109/ISRE.1999.777994
   ALSPAUGH TA, 2003, UCIISR0307
   ALSPAUGH TA, 2005, REFSQ 05 REQ ENG FDN, P187
   ALSPAUGH TA, 2003, RE 03 11 INT C REQ E
   ALSPAUGH TA, 2001, REFSQ 01 REQ ENG FDN, P113
   ANNIE I, 1994, P 6 INT C ADV INF SY, P94
   ANNIE I, 1997, THESIS GEORGIA I TEC
   [Anonymous], 1994, CHAOS REP
   [Anonymous], 2004, SCENARIOS STORIES US
   [Anonymous], IEEE COMPUTER SOC
   Anton A. I., 2001, Requirements Engineering, V6, P63, DOI 10.1007/PL00010356
   Anton A. I., 1998, Requirements Engineering, V3, P219, DOI 10.1007/s007660050006
   Anton AI, 1998, PROC INT CONF SOFTW, P157, DOI 10.1109/ICSE.1998.671112
   *AS BROWN BOV EL S, 1999, SOFTW REQ SPEC EUR V
   BASANIERI F, 2004, ERCIM NEWS, V58, P30
   BENACHOUR C, 1999, 4 IEEE INT S REQ ENG, P36
   BENNER K, 1992, IFIP WORK GROUP 8 1
   Bertino E, 1999, LECT NOTES COMPUT SC, V1628, P416
   BODE LJ, 2002, TR200210 N CAR STAT
   BOEHM BW, 1976, IEEE T COMPUT, V25, P1226, DOI 10.1109/TC.1976.1674590
   BOEHM BW, 1984, IEEE SOFTWARE, V1, P75, DOI 10.1109/MS.1984.233702
   Boehm BW., 1981, Software Engineering Economics
   BREITMAN K, 2005, REQUIREMENTS ENG J, V10
   Breitman KK, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P214, DOI 10.1109/ICRE.1998.667828
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   CORDES DW, 1989, INFORM SOFTWARE TECH, V31, P181, DOI 10.1016/0950-5849(89)90036-0
   DAG JNO, 2001, REFSQ 01 REQ ENG FDN
   Damian D, 2005, EMPIR SOFTW ENG, V10, P255, DOI 10.1007/s10664-005-1288-4
   Davis A.M., 1990, SOFTWARE REQUIREMENT
   Davis AM, 2000, J SYST SOFTWARE, V53, P205, DOI 10.1016/S0164-1212(00)00011-X
   GOUGH P, 1995, RE 95 P INT S REQ EN, P10
   Heitmeyer C., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P56, DOI 10.1109/ISRE.1995.512546
   *IEEE, 1998, IEEE T SOFTW ENG DEC
   Jarke M., 1998, Requirements Engineering, V3, P155, DOI 10.1007/s007660050002
   JARKE M, 1998, 199 DAGST SEM REP
   Kruskal JB., 1983, TIME WARPS STRING ED, P1
   LAUZON D, 1994, KNOWLEDGE BASED SOFT, P98
   Letier E, 2005, PROC INT CONF SOFTW, P382
   Maiden N. A. M., 1998, Automated Software Engineering, V5, P419, DOI 10.1023/A:1008605412971
   Maiden NAM, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P148, DOI 10.1109/ICRE.1998.667820
   Maiden NAM, 1996, SOFTWARE ENG J, V11, P281, DOI 10.1049/sej.1996.0038
   Massonet P, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P26, DOI 10.1109/ISRE.1997.566836
   Park S, 2000, INFORM SOFTWARE TECH, V42, P429, DOI 10.1016/S0950-5849(99)00102-0
   POTTS C, 1994, IEEE SOFTWARE, V11, P21, DOI 10.1109/52.268952
   POTTS C, 1993, IEEE SOFTWARE, V10, P19, DOI 10.1109/52.232392
   Robertson Suzanne., 2004, Scenarios, Stories, Use Cases Through the Development Life-cycle, P39
   Rolland C, 1998, IEEE T SOFTWARE ENG, V24, P1055, DOI 10.1109/32.738339
   RYAN K., 1993, IEEE INT S REQUIREME, P112
   Shaw M, 2001, PROC INT CONF SOFTW, P657, DOI 10.1109/ICSE.2001.919147
   Sutcliffe A, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P320
   THOMAS A, 2001, ENHANCED MESSAGING S
   THOMAS A, 2006, UCIISR067
   THOMAS A, 2002, THESIS N CAROLINA ST
   THOMAS A, 2006, UCIISR0614
   TVERSKY A, 1977, PSYCHOL REV, V84, P327, DOI 10.1037/h0026750
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P1089, DOI 10.1109/32.738341
   Weidenhaupt K, 1998, IEEE SOFTWARE, V15, P34, DOI 10.1109/52.663783
   WOO HG, 2002, RE 02 INT C REQ ENG, P173
   ZOWGHI D, 2002, 8 INT WORKSH REQ ENG
   1998, REQUIREMENTS ENG J
   [No title captured]
NR 65
TC 26
Z9 30
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2008
VL 50
IS 3
BP 198
EP 220
DI 10.1016/j.infsof.2006.12.003
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 254UI
UT WOS:000252613100004
DA 2024-07-18
ER

PT J
AU Ko, Y
   Park, S
   Seo, J
   Choi, S
AF Ko, Youngjoong
   Park, Sooyong
   Seo, Jungyun
   Choi, Soonhwang
TI Using classification techniques for informal requirements in the
   requirements analysis-supporting system
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE requirements engineering; requirements classification; internet-based
   application system; similarity measure
ID TEXT
AB In order to efficiently develop large-scale and complicated software, it is important for system engineers to correctly understand users' requirements. Most requirements in large-scale projects are collected from various stakeholders located in various regions, and they are generally written in natural language. Therefore, the initial collected requirements must be classified into various topics prior to analysis phases in order to be usable as input in several requirements analysis methods. If this classification process is manually done by analysts, it becomes a time-consuming task. To solve this problem, we propose a new bootstrapping method which can automatically classify requirements sentences into each topic category using only topic words as the representative of the analysts' views. The proposed method is verified through experiments using two requirements data sets: one written in English and the other in Korean. The significant performances were achieved in the experiments: the 84.28 and 87.91 F1 scores for the English and Korean data sets, respectively. As a result, the proposed method can provide an effective function for an Internet-based requirements analysis-supporting system so as to efficiently gather and analyze requirements from various and distributed stakeholders by using the Internet. (C) 2006 Elsevier B.V. All rights reserved.
C1 Dong A Univ, Dept Comp Engn, Pusan 604714, South Korea.
   Sogang Univ, Dept Comp Sci, Program Integrated Biotechnol, Seoul 121742, South Korea.
C3 Dong A University; Sogang University
RP Ko, Y (corresponding author), Dong A Univ, Dept Comp Engn, 840 Hadan 2 Dong, Pusan 604714, South Korea.
EM yjko@dau.ac.kr; sypark@sogang.ac.kr; seojy@sogang.ac.kr;
   soonhwang@sogang.ac.kr
CR [Anonymous], THESIS CARNEGIE MELL
   [Anonymous], P 42 ANN M ASS COMP
   [Anonymous], 2003, Software requirements
   BERENBACH B, 2006, P 2006 INT WORKSH GL, P15
   Boehm B, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P14, DOI 10.1109/ISRE.1999.777981
   BOEHM B, 1998, P 5 INT C SOFTW PROC, P125
   BRILL E, 1995, COMPUTATIONAL LINGUI, V21
   CHEN H, 1994, COMMUN ACM, V37, P56, DOI 10.1145/194313.194322
   Craven M, 2000, ARTIF INTELL, V118, P69, DOI 10.1016/S0004-3702(00)00004-7
   Cybulski JL, 1998, 1998 ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P128, DOI 10.1109/APSEC.1998.733606
   Dag JNO, 2005, IEEE SOFTWARE, V22, P32, DOI 10.1109/MS.2005.1
   Damian DE, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P319, DOI 10.1109/ICRE.2002.1048545
   Davis AM, 1998, IEEE SOFTWARE, V15, P6
   Fantechi A., 2003, Requirements Engineering, V8, P161, DOI 10.1007/s00766-003-0174-0
   Goguen J.A., 1993, 1993 P IEEE INT S RE, P152, DOI DOI 10.1109/ISRE.1993.324822
   *IEEE, 1998, IEEESTD12331998
   Joachims Thorsten, 1998, EUROPEAN C MACHINE L, P137, DOI 10.1007/
   Karov Y, 1998, COMPUT LINGUIST, V24, P41
   Klein MH, 1999, INT FED INFO PROC, V12, P225
   Ko Y, 2004, INFORM PROCESS MANAG, V40, P191, DOI 10.1016/S0306-4573(03)00029-3
   Ko Y, 2004, INFORM PROCESS MANAG, V40, P65, DOI 10.1016/S0306-4573(02)00056-0
   Ko Y., 2000, Proceedings of Twelfth International Conference on Software Engineering and Knowledge Engineering (SEKE 2000), Chicago, USA, P344
   LEFFINGWELL D, 2005, MANAGING SOFTWARE RE
   Leonard T, 1997, PROC INT C TOOLS ART, P462, DOI 10.1109/TAI.1997.632289
   MITRA M, 1997, P 5 INT C COMP ASS I
   PALMER JD, 1992, INFORM DECIS TECHNOL, V18, P283
   Park S, 2000, INFORM SOFTWARE TECH, V42, P429, DOI 10.1016/S0950-5849(99)00102-0
   PARK S, 2002, 2 INT C COMP INF SCI, P43
   PARK S, 1994, P 6 INT C SOFTW ENG
   RUJSBERGEN CJ, 1979, INFORM RETRIEVEL, V2
   RYAN K, 1993, P 1 IEEE INT S REQ E
   Sommerville I, 1997, ANN SOFTW ENG, V3, P101, DOI 10.1023/A:1018946223345
   Sommerville I, 2005, IEEE SOFTWARE, V22, P16, DOI 10.1109/MS.2005.13
   杨云峰, 1999, [西安公路交通大学学报, Journal of Xian Highway University], P67
   [No title captured]
NR 35
TC 27
Z9 35
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2007
VL 49
IS 11-12
BP 1128
EP 1140
DI 10.1016/j.infsof.2006.11.007
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 227RS
UT WOS:000250676100005
DA 2024-07-18
ER

PT J
AU Jacobs, J
   van Moll, J
   Kusters, R
   Trienekens, J
   Brombacher, A
AF Jacobs, Jef
   van Moll, Jan
   Kusters, Rob
   Trienekens, Jos
   Brombacher, Aarnout
TI Identification of factors that influence defect injection and detection
   in development of software intensive products
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE defect injection factors; defect detection factors; card sorting;
   cluster analysis
ID CLUSTER-ANALYSIS
AB The objective of this study is the identification of factors that influence defect injection and defect detection. The study is part of a broader research project with the goal to lower the number of residual defects in software intensive products, by using the influencing factors to decrease injection of defects and to increase detection of defects. As a first step, we performed an extensive literature search to find influencing factors and processed the factors to achieve consistently formulated sets of factors without duplications. As a second step, we used a cluster analysis to reduce the number influencing factors to manageable-sized sets for practical application. As a last step, final groupings of factors were obtained by expert interpretation of the cluster analysis results. These steps were separately performed for defect injection and detection influencing factors, resulting in sets of, respectively, 16 and 17 factors. Finally, the resulting factor groupings were evaluated.
   The findings (1) are the basis for further research focusing on a framework for lowering residual defects, (2) already provide information to enable practitioners to devise strategies for lowering residual defects, and (3) may create awareness in organizations to reconsider policies regarding development and Verification & Validation. (c) 2006 Elsevier B.V. All rights reserved.
C1 Philips Semicond, Chief Technol Off, Eindhoven, Netherlands.
   Sioux Embedded Syst BV, Eindhoven, Netherlands.
   Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
C3 Philips; Philips Research; Eindhoven University of Technology
RP Jacobs, J (corresponding author), Philips Semicond, Chief Technol Off, Eindhoven, Netherlands.
EM jef.jacobs@philips.com
RI Kusters, Rob/B-3093-2010
OI Kusters, Rob/0000-0003-4069-5655
CR BOCK HH, 1985, J CLASSIF, V2, P77, DOI 10.1007/BF01908065
   BOEHM B, 1995, ANN SOFTW ENG, V1, P45
   Boehm BW., 1981, Software Engineering Economics
   CHULANI S, 1995, MODELING SOFTWARE DE, P99
   Crosby P.B., 1979, QUALITY IS FREE ART
   Dyba T., 2000, Empirical Software Engineering, V5, P357, DOI 10.1023/A:1009800404137
   EVERITT BS, 1979, BIOMETRICS, V35, P169, DOI 10.2307/2529943
   Furuyama T, 1997, J SYST SOFTWARE, V38, P13, DOI 10.1016/S0164-1212(97)00064-2
   GARVIN DA, 1984, SLOAN MANAGE REV, V26, P25
   HARTIGAN JA, 1985, J CLASSIF, V2, P63, DOI 10.1007/BF01908064
   JONES TC, 1975, P GUIDE, V40
   KAN SH, 1994, IBM SYST J, V33, P4, DOI 10.1147/sj.331.0004
   Kaner C., 1996, SOFTWARE Q, V3, P23
   Krippendorff K., 1980, Content analysis: An introduction to its methodology, V5
   Li M, 2003, IEEE T SOFTWARE ENG, V29, P811, DOI 10.1109/TSE.2003.1232286
   Mayring P., 1983, QUALITATIVE INHALTSA, V7th
   Nunnally JC, 1978, PSYCHOMETRIC THEORY
   Reason J., 1991, HUMAN ERROR
   ROSENBERG S, 1975, MULTIVATIATE BEH OCT, P489
   Sawyer S, 1998, IBM SYST J, V37, P552, DOI 10.1147/sj.374.0552
   TOMS ML, 2001, SAE WORLD C DETR MIC
   TROCHIM W, 1998, SPECIAL ISSUE EVALUA, V12, P87
   Trochim W.M. K., 1993, ANN C AM EVALUATION
   TROCHIM WMK, 1986, EVAL PROGRAM PLANN, V9, P289, DOI 10.1016/0149-7189(86)90044-3
   TROCHIM WMK, 1989, EVAL PROGRAM PLANN, V12, P1, DOI 10.1016/0149-7189(89)90016-5
   TULLIS T, 2004, P UPA 2004 MINN JUN
   Weller S.C., 1988, Systematic data collection
   Zhang XM, 2000, J SYST SOFTWARE, V50, P43, DOI 10.1016/S0164-1212(99)00075-8
NR 28
TC 14
Z9 16
U1 0
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2007
VL 49
IS 7
BP 774
EP 789
DI 10.1016/j.infsof.2006.09.002
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 179MV
UT WOS:000247294900005
DA 2024-07-18
ER

PT J
AU Yu, C
   Cui, B
   Wang, S
   Su, H
AF Yu, Cui
   Cui, Bin
   Wang, Shuguang
   Su, Jianwen
TI Efficient index-based KNN join processing for high-dimensional data
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE high-dimensional data; KNN; similarity join
AB In many advanced database applications (e.g., multimedia databases), data objects are transformed into high-dimensional points and manipulated in high-dimensional space. One of the most important but costly operations is the similarity join that combines similar points from multiple datasets. In this paper, we examine the problem of processing K-nearest neighbor similarity join (KNN join). KNN join between two datasets, R and S, returns for each point in R its K most similar points in S. We propose a new index-based KNN join approach using the iDistance as the underlying index structure. We first present its basic algorithm and then propose two different enhancements. In the first enhancement, we optimize the original KNN join algorithm by using approximation bounding cubes. In the second enhancement, we exploit the reduced dimensions of data space. We conducted an extensive experimental study using both synthetic and real datasets, and the results verify the performance advantage of our schemes over existing KNN join algorithms. (c) 2006 Elsevier B.V. All rights reserved.
C1 Peking Univ, Dept Comp Sci, Beijing 100871, Peoples R China.
   Monmouth Univ, Dept Comp Sci, Long Branch, NJ 07764 USA.
   Natl Univ Singapore, Dept Comp Sci, Singapore 117548, Singapore.
   Univ Calif Santa Barbara, Dept Comp Sci, Santa Barbara, CA 93106 USA.
C3 Peking University; Monmouth University; National University of
   Singapore; University of California System; University of California
   Santa Barbara
RP Cui, B (corresponding author), Peking Univ, Dept Comp Sci, Beijing 100871, Peoples R China.
EM cyu@monmouth.edu; bin.cui@pku.edu.cn; wangshug@comp.nus.edu.sg;
   su@cs.ucsb.edu
RI Cui, Bin/A-4554-2012; Yu, Cui/IXW-9617-2023
OI CUI, Bin/0000-0003-1681-4677
CR [Anonymous], 2001, P 7 ACM SIGKDD INT C
   [Anonymous], MATRIX COMPUTATIONS
   Boehm C, 2004, KNOWL INF SYST, V6, P728, DOI 10.1007/s10115-003-0122-9
   Böhm C, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P43, DOI 10.1109/ICDM.2002.1183884
   BOHM C, 2002, P C DAT WAR KNOWL DI, P135
   BOHM C, 2001, P 2001 ACM SIGMOD IN, P379
   Böhn C, 2003, LECT NOTES COMPUT SC, V2736, P504
   Brinkoff T., 1993, P ACM SIGMOD, P237
   Chakrabarti K., 2000, Proceedings of the 6th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P89
   Corral A, 2005, LECT NOTES COMPUT SC, V3631, P153, DOI 10.1007/11547686_12
   CUI B, 2004, P DASFAA C, P302
   Dasarathy B.V., 1991, NEAREST NEIGHBOR CLA
   FILHO RFS, 2001, 17 IEEE INT C DAT EN, P623
   Fukunaga K., 1990, Introduction to StatisticalPattern Recognition
   Hartigan J. A., 1979, Applied Statistics, V28, P100, DOI 10.2307/2346830
   HJALTASON GR, 1998, P ACM SIGMOD INT C M, P237
   Jagadish HV, 2005, ACM T DATABASE SYST, V30, P364, DOI 10.1145/1071610.1071612
   Kahveci T, 2003, PROC INT CONF DATA, P265, DOI 10.1109/ICDE.2003.1260798
   Koudas N, 2000, IEEE T KNOWL DATA EN, V12, P3, DOI 10.1109/69.842246
   Liu B., 1999, INT C KNOWLEDGE DISC, P337, DOI [10.1145/312129.312274, DOI 10.1145/312129.312274]
   Rigaux P., 2001, Spatial Databases With Application 10 GIS
   Shim K, 1997, PROC INT CONF DATA, P301, DOI 10.1109/ICDE.1997.581814
   THEODORIDIS Y, 2000, P 19 ACM SIGMOD INT, P189
   Weber R., 1998, Proceedings of the Twenty-Fourth International Conference on Very-Large Databases, P194
   YU C, 2001, P C VER LARG DAT BAS, P166
   Zhang J, 2004, 16TH INTERNATIONAL CONFERENCE ON SCIENTIFIC AND STATISTICAL DATABASE MANAGEMENT, PROCEEDINGS, P297
NR 26
TC 52
Z9 62
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2007
VL 49
IS 4
BP 332
EP 344
DI 10.1016/j.infsof.2006.05.006
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 149TB
UT WOS:000245168500003
DA 2024-07-18
ER

PT J
AU van den Brand, MGJ
   Klint, P
AF van den Brand, Mark G. J.
   Klint, Paul
TI ATERMS for manipulation and exchange of structured data: It's all about
   sharing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE ATERMS; trees; syntax trees; abstract syntax trees; maximal subterm
   sharing; annotations; parsing; term rewriting; intermediate data format;
   abstract data type; data exchange; component-based software; model
   checking; toolbus; ASF plus SDF meta-environment; APIGEN; program
   generation
ID TRAVERSAL
AB Some data types are so simple that they tend to be reimplemented over and over again. This is certainly true for terms, tree-like data structures that can represent prefix formulae, syntax trees, intermediate code, and more. We first describe the motivation to introduce Annotated Terms (ATERMS): unifying several term formats, optimizing storage requirements by introducing maximal subterm sharing, and providing a language-neutral exchange format. Next, we present a brief overview of the ATERM technology itself and of its wide range of applications. A discussion of competing technologies and the future of ATERMS concludes the paper. (C) 2006 Elsevier B.V. All rights reserved.
C1 Univ Amsterdam, CWI, Software Engn Dept, Amsterdam, Netherlands.
   Univ Amsterdam, Inst Informat, Amsterdam, Netherlands.
   Tech Univ Eindhoven, Dept Math & Comp Sci, Eindhoven, Netherlands.
C3 University of Amsterdam; University of Amsterdam; Eindhoven University
   of Technology
RP Klint, P (corresponding author), Univ Amsterdam, CWI, Software Engn Dept, Kruislaan 403, Amsterdam, Netherlands.
EM Paul.Klint@cwi.nl
OI van den Brand, Mark/0000-0003-3529-6182
CR Bergstra JA, 1998, SCI COMPUT PROGRAM, V31, P205, DOI 10.1016/S0167-6423(97)00021-X
   Blom S, 2001, LECT NOTES COMPUT SC, V2102, P250
   BOEHM HJ, 1988, SOFTWARE PRACT EXPER, V18, P807, DOI 10.1002/spe.4380180902
   Borovansky P., 1998, Electronic Notes in Theoretical Computer Science, V15, DOI 10.1016/S1571-0661(05)82552-6
   Bravenboer M., 2006, P 2006 ACM SIGPLAN S, P95
   BRYANT RE, 1992, COMPUT SURV, V24, P293, DOI 10.1145/136035.136043
   DAVID V, 2004, 0405 LAB RECH DEV EP
   Déharbe D, 2003, I C SOFTW ENG FORM M, P220, DOI 10.1109/SEFM.2003.1236224
   DEJONG HA, 2004, J LOGIC ALGEBR PROGR, V50, P5
   Gao H, 2005, DISTRIB COMPUT, V18, P21, DOI 10.1007/s00446-004-0115-2
   GAO H, 2000, LECT NOTES COMPUTER, V3758, P161
   Groote JF, 2000, LECT NOTES ARTIF INT, V1955, P161, DOI 10.1007/3-540-44404-1_11
   HEERING J, 1989, SIGPLAN NOTICES, V24, P43, DOI 10.1145/71605.71607
   Holt RC, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P162, DOI 10.1109/WCRE.2000.891463
   Jin D, 2002, PROG COMPREHEN, P65, DOI 10.1109/WPC.2002.1021320
   JIN D, 2001, EXCHANGE SOFTWARE RE
   KIENLE HM, 2000, WORKSH STAND EXCH FO, P33
   KIENLE HM, 2001, SOFTWARE ENG NOTES, V26, P6
   Klint P., 1993, ACM Transactions on Software Engineering and Methodology, V2, P176, DOI 10.1145/151257.151260
   KLINT P, 1998, IFIP WG 2 4 WORK C S, P1
   KLINT P, 1994, UNPUB
   Kort J, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P161, DOI 10.1109/SCAM.2003.1238042
   Kuipers T, 2003, SCI COMPUT PROGRAM, V47, P59, DOI 10.1016/S0167-6423(02)00108-9
   Lämmel R, 2003, LECT NOTES COMPUT SC, V2562, P357
   LIMA G, 2002, P 16 S BRAS ENG SOFT, P1
   Mamas E, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P172, DOI 10.1109/WCRE.2000.891464
   Moreau PE, 2004, J LOGIC ALGEBR PROGR, V59, P5, DOI 10.1016/j.jlap.2003.12.003
   Moreau PE, 2003, LECT NOTES COMPUT SC, V2622, P61
   Moreira AM, 2004, J LOGIC ALGEBR PROGR, V59, P63, DOI 10.1016/j.jlap.2003.12.001
   MOREIRA AM, 2003, ELECT NOTES THEORETI, P131
   Mossakowski T, 2000, LECT NOTES COMPUT SC, V1785, P93
   REILLES A, 2006, IN PRESS ELECT NOTES
   Sannella D, 2001, LECT NOTES COMPUT SC, V2267, P328
   Sherman DJ, 1998, LECT NOTES COMPUT SC, V1384, P249, DOI 10.1007/BFb0054176
   SIM S, 2001, SOFTWARE ENG NOTES, V26, P44
   SIRIN E, UNPUB J WEB SEMANTIC
   van de Pol J, 2002, LECT NOTES COMPUT SC, V2378, P367
   van den Brand M, 2005, IEE P-SOFTW, V152, P70, DOI 10.1049/ip-sen:20041181
   van den Brand M, 2003, LECT NOTES COMPUT SC, V2706, P424
   van den Brand M, 2006, SCI COMPUT PROGRAM, V61, P245, DOI 10.1016/j.scico.2006.04.005
   Van den Brand MGJ, 2003, ACM T SOFTW ENG METH, V12, P152, DOI 10.1145/941566.941568
   van den Brand MGJ, 2000, SOFTWARE PRACT EXPER, V30, P259, DOI 10.1002/(SICI)1097-024X(200003)30:3<259::AID-SPE298>3.0.CO;2-Y
   Van den Brand MGJ, 2002, ACM T PROGR LANG SYS, V24, P334, DOI 10.1145/567097.567099
   van der Storm T., 2003, THESIS U AMSTERDAM
   van Deursen A., 2002, Journal of Computing and Information Technology - CIT, V10, P1, DOI 10.2498/cit.2002.01.01
   VANBEEK DA, 2006, IN PRESS J LOGIC ALG
   VANDENBRAND M, 2000, WORKSH STAND EXCH FO
   VANDENBRAND M, 1998, 2 INT WORKSH REWR LO
   VANDENBRAND MGJ, 2001, LECT NOTES COMPUTER, V2027, P365
   VANDENBRAND MGJ, 2000, LECT NOTES COMPUTER, V1827, P89
   VANDENBRAND MGJ, 2003, ELECT NOTES THEORETI, V82
   VANDENBRAND MGJ, 1998, T3 COFI
   VANDERSTORM T, 2004, SENR0403 CENTR WISK
   VANDEURSEN A, 2001, INTEROPERABILITY REE, V296
   VANLANGEVELDE IA, 2001, SENR0102 CENTR WISK
   Veerman N, 2005, SCI COMPUT PROGRAM, V57, P129, DOI 10.1016/j.scico.2005.01.001
   Veerman N, 2004, J SOFTW MAINT EVOL-R, V16, P219, DOI 10.1002/smr.295
   VEERMAN N, 2006, IN PRESS SOFTWARE PR
   VINJU JJ, 2005, THESIS U AMSTERDAM
   VISSER E, 1995, ASF SDF 9K WORKSH GE, P89
   Visser Eelco, 1997, Syntax Definition for Language Prototyping
   WADDINGTON DG, 2005, 5 WORKSH LANG DESCR, P35
   Winter A, 2002, LECT NOTES COMPUT SC, V2265, P485
NR 63
TC 13
Z9 15
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2007
VL 49
IS 1
BP 55
EP 64
DI 10.1016/j.infsof.2006.08.009
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 115AK
UT WOS:000242706600006
DA 2024-07-18
ER

PT J
AU Auguston, M
   Michael, JB
   Shing, MT
AF Auguston, Mikhail
   Michael, James Bret
   Shing, Man-Tak
TI Environment behavior models for automation of testing and assessment of
   system safety
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Workshop on Advances in Model-Based Software Testing
CY MAY 15-16, 2005
CL St.Louis, MO
SP ICSE
DE model-based testing; testing automation; reactive and real-time system
   testing
AB This paper presents an approach to automatic scenario generation from environment behavior models for testing of real-time reactive systems. The model of behavior is defined as a set of events (event trace) with two basic relations: precedence and inclusion. The attributed event grammar (AEG) specifies possible event traces and provides a uniform approach for automatically generating and executing test cases. The environment model includes a description of hazardous states in which the system may arrive and makes it possible to gather statistics for system safety assessment. The approach is supported by a generator that creates test cases from the AEG models. We demonstrate the approach with a case study of a software prototype of the computer-assisted resuscitation algorithm for a safety-critical casualty intravenous fluid infusion pump. Published by Elsevier B.V.
C1 USN, Postgrad Sch, Dept Comp Sci, Monterey, CA 93943 USA.
C3 United States Department of Defense; United States Navy; Naval
   Postgraduate School
RP Auguston, M (corresponding author), USN, Postgrad Sch, Dept Comp Sci, 833 Dyer Rd, Monterey, CA 93943 USA.
EM maugusto@nps.edu; bmichael@nps.edu; shing@nps.edu
CR Alfonso A, 2004, PROC INT CONF SOFTW, P168, DOI 10.1109/ICSE.2004.1317439
   ALUR R, 2004, J SOFTWARE TOOLS TEC, V5, P308
   [Anonymous], SAFEWARE SYSTEM SAFE
   Auguston M, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P217, DOI 10.1109/ASE.2002.1115015
   AUGUSTON M, 2005, P ICSE 2005 WORKSH A
   AUGUSTON M, 1994, P 6 INT C SOFTW ENG, V3, P108
   AUGUSTON M, 2000, P 7 MONT WORKSH MOD, P23
   Blackburn M. R., 1998, P DIG AV SYST C DASC, V1, pC45/1
   Boyapati C., 2002, ISSTA 02, P123, DOI DOI 10.1145/566172.566191
   Crowley J.L., 1996, ACM SIGSOFT SOFTWARE, V21, P71
   Dalal S. R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P285, DOI 10.1109/ICSE.1999.841019
   Drusinsky D, 2004, P IEEE RAP SYST PROT, P29, DOI 10.1109/IWRSP.2004.1311092
   Hierons RM, 2003, LECT NOTES COMPUT SC, V2767, P289
   HONG HS, 2001, P MONT WORKSH MONT C, P230
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   KOREL B, 1996, P ISCE, V18, P71
   KREINER C, 1998, P 24 EUR C IEEE VAST, V2, P919
   Kuball S, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P161, DOI 10.1109/ISSRE.2004.40
   LUQI M, 2003, P 14 IEEE INT WORKSH, P210
   MAURER PM, 1990, IEEE SOFTWARE, V7, P50, DOI 10.1109/52.56422
   McKeeman William M., 1998, Digit. Tech. J., V1, P100
   NASA, 1997, NASASTD871913A
   PAAKKI J, 1995, ACM COMPUT SURV, V27, P196, DOI 10.1145/210376.197409
   PROWELL SJ, 1998, CLEANROOM SOFTWARE E
   VARGA A, 2002, OMNET DISCRETE SIMUL
   WANG YB, 1994, IEEE T SOFTWARE ENG, V20, P750, DOI 10.1109/32.328996
   *WRAIR DEP RES MED, 2001, CARA PUMP CONTR SOFT
   *WRAIR DEP RES MED, 2001, CARA TAGG REQ INCR 3
   *WRAIR DEPT RES ME, 2001, NARR DESCR CARA SOFT
NR 29
TC 8
Z9 8
U1 1
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2006
VL 48
IS 10
BP 971
EP 980
DI 10.1016/j.infsof.2006.03.005
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 092ZM
UT WOS:000241136700004
DA 2024-07-18
ER

PT J
AU Wang, JM
   Zhou, YM
   Wen, LJ
   Chen, YJ
   Lu, HM
   Xu, BW
AF Wang, JM
   Zhou, YM
   Wen, LJ
   Chen, YJ
   Lu, HM
   Xu, BW
TI DMC: a more precise cohesion measure for classes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE object-oriented system; class; cohesion; measure; class element
   dependence graph
ID OBJECT-ORIENTED CLASSES; PRACT.-EXPER. 2000; CHAE,HEUNG,SEOK;
   KWON,YONG,RAE
AB In object-oriented systems, a single class consists of attributes and methods and its cohesion denotes the degree of relatedness among these elements. To quantify the cohesiveness of a class, a large number of measures that only depict method-attribute reference relationships have been proposed in last decade. However, the flow-dependence relationships among attributes, the direction of method-attribute references, and the potential dependence relationships among the elements in the class are ignored. To address this problem, this paper first depicts four types of explicit dependence relationships and uses a class element dependence graph to represent all dependencies among the elements in a class. Then, a dependence matrix that reflects the degree of direct dependence and indirect dependence among the elements in a class is computed. Finally, a more precise cohesion measure for classes is proposed. (C) 2004 Elsevier B.V. All rights reserved.
C1 Tsinghua Univ, Sch Software, Beijing 100084, Peoples R China.
   SE Univ, Dept Comp Sci & Engn, Nanjing 210096, Peoples R China.
C3 Tsinghua University; Southeast University - China
RP Tsinghua Univ, Sch Software, Room 819,Main Bldg, Beijing 100084, Peoples R China.
EM jimwang@tsinghua.edu.cn
RI wang, jian/GVS-0711-2022; Xu, Baowen/IXW-4882-2023
OI Xu, Baowen/0000-0001-7743-1296; Wang, Jianmin/0000-0001-6841-7943; Wen,
   Lijie/0000-0003-0358-3160
CR Aman H, 1998, IEICE T INF SYST, VE81D, P1364
   Bansiya J, 1999, J OBJECT-ORIENT PROG, V11, P47
   Bieman J. M., 1995, SIGSOFT Software Engineering Notes, P259, DOI 10.1145/223427.211856
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P722, DOI 10.1109/32.815329
   Chae HS, 2000, SOFTWARE PRACT EXPER, V30, P1405, DOI 10.1002/1097-024X(200010)30:12<1405::AID-SPE330>3.0.CO;2-3
   Chae HS, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P158, DOI 10.1109/METRIC.1998.731241
   Chen ZQ, 2002, PROC IEEE INT CONF S, P377, DOI 10.1109/ICSM.2002.1167794
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   HENDERSONSELLER.B, 1995, SOFTWARE METRICS, P81
   Hitz M., 1995, International Symposium on Applied Corporate Computing, P25
   Lee YS., 1995, Proc. International Conference on Software Quality, Maribor, P81
   Moser S, 1997, ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE AND INTERNATIONAL COMPUTER SCIENCE CONFERENCE, PROCEEDINGS, P31, DOI 10.1109/APSEC.1997.640159
   Ott LM, 1998, INFORM SOFTWARE TECH, V40, P691, DOI 10.1016/S0950-5849(98)00092-5
   Sinha S, 2001, ACM T SOFTW ENG METH, V10, P209, DOI 10.1145/367008.367022
   Xu BW, 2001, ACM SIGPLAN NOTICES, V36, P70, DOI 10.1145/583960.583969
   Xu BW, 2003, SOFTWARE PRACT EXPER, V33, P583, DOI 10.1002/spe.505
   Xu BW, 2001, SOFTWARE PRACT EXPER, V31, P1381, DOI 10.1002/spe.413
   Zhou YM, 2002, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.2002.1167746
NR 20
TC 16
Z9 17
U1 1
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 1
PY 2005
VL 47
IS 3
BP 167
EP 180
DI 10.1016/j.infsof.2004.07.001
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 896QV
UT WOS:000226949500003
DA 2024-07-18
ER

PT J
AU Antón, AI
   Earp, JB
   Carter, RA
AF Antón, AI
   Earp, JB
   Carter, RA
TI Precluding incongruous behavior by aligning software requirements with
   security and privacy policies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 8th International Workshop on Requirements Engineering-Foundation for
   Software Quality (REFSQ 02)
CY SEP 09-10, 2002
CL ESSEN, GERMANY
DE privacy policy; security policy; requirements alignment
ID TRACEABILITY
AB Keeping sensitive information secure is increasingly important in e-commerce and web-based applications in which personally identifiable information is electronically transmitted and disseminated. This paper discusses techniques to aid in aligning security and privacy policies with system requirements. Early conflict identification between requirements and policies enables analysts to prevent incongruous behavior, misalignments and unfulfilled requirements, ensuring that security and privacy are built in rather than added on as an afterthought. Validated techniques to identify conflicts between system requirements and the governing security and privacy policies are presented. The techniques are generalizable to other domains, in which systems contain sensitive information. (C) 2003 Elsevier B.V. All rights reserved.
C1 N Carolina State Univ, Coll Engn, Raleigh, NC 27695 USA.
   N Carolina State Univ, Coll Management, Raleigh, NC 27695 USA.
C3 North Carolina State University; North Carolina State University
EM aianton@eos.ncsu.edu; julia_carp@ncsu.edu
CR Alexander I, 2003, IEEE SOFTWARE, V20, P58, DOI 10.1109/MS.2003.1159030
   [Anonymous], 1908, APC, V5, P138
   Anton AI, 1998, PROC INT CONF SOFTW, P157, DOI 10.1109/ICSE.1998.671112
   ANTON AI, 2002, 10 ANN IEEE JOINT RE
   ANTON AI, 2001, E COMMERCE SECURITY, P29
   ANTON AI, 2002, NCSU E COMMERCE STUD
   Avison D, 1999, COMMUN ACM, V42, P94, DOI 10.1145/291469.291479
   Baskerville RL, 1996, MIS QUART, V20, P481, DOI 10.2307/249565
   Carter RA, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P94
   CHUNG L, 1993, 5 INT C ADV INF SYST, P234
   Culnan M.J., 1999, Georgetown Internet Privacy Policy Survey: Report to the Federal Trade Commission
   DEAN T, 2000, COURSE TECHNOLOGY
   Domges R, 1998, COMMUN ACM, V41, P54, DOI 10.1145/290133.290149
   EAMES D, 1999, SAF 99 TOUL FRANC 27
   *EUR UN, 2003, 9546EC EUR UN
   *FED TRAD COMM, 1998, PRIV ONL REP C
   Goldin L., 1997, Automated Software Engineering, V4, P375, DOI 10.1023/A:1008617922496
   HAUSER JR, 1988, HARVARD BUS REV, V66, P63
   Jackson M., 1995, SOFTWARE REQUIREMENT
   Kock N., 1997, ORG SOC, V4, P65
   Kollock P, 1998, ANNU REV SOCIOL, V24, P183, DOI 10.1146/annurev.soc.24.1.183
   Lichtenstein S, 1997, P ANN HICSS, P350, DOI 10.1109/HICSS.1997.663407
   MOFFETT JD, 1999, REQUIREMENTS POLICIE
   PFLEEGER SL, 1991, COMPUT SECUR, V10, P515
   *PURD U, 1999, POL FRAMW INT RISK E
   Ramesh B, 1998, COMMUN ACM, V41, P37, DOI 10.1145/290133.290147
   *RED TRAD COMM, 2000, PRIV ONL FAIR INF PR
   Sindre G, 2000, 37TH INTERNATIONAL CONFERENCE ON TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS, PROCEEDINGS, P120, DOI 10.1109/TOOLS.2000.891363
   Trcek D., 2000, NOMS 2000. 2000 IEEE/IFIP Network Operations and Management Symposium `The Networked Planet: Management Beyond 2000' (Cat. No.00CB37074), P817, DOI 10.1109/NOMS.2000.830431
   *US DHEW, 1973, ED WELF SEC ADV COMM, V8
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
NR 31
TC 21
Z9 26
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV 1
PY 2003
VL 45
IS 14
BP 967
EP 977
DI 10.1016/S0950-5849(03)00095-8
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 732QT
UT WOS:000185957600004
DA 2024-07-18
ER

PT J
AU Al-Darwish, N
AF Al-Darwish, N
TI PageGen: an effective scheme for dynamic generation of web pages
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE dynamic generation of web pages; web and electronic publishing; XML;
   active server pages; HTML patterns
AB We present a scheme for dynamic generation of web pages. The scheme separates presentation from content. Furthermore, by utilizing the theine metaphor. the scheme makes it easy to develop a web site with several design themes, each having its own template, graphics and style sheet characteristics. The proposed scheme relies on versatile substitution mechanisms, which nonetheless use simplified syntax. Most importantly. the scheme utilizes XML for defining custom tags that are transformed into HTML using the innovative concept of HTML patterns. The scheme was initially implemented as a COM component (PageGen) and later ported to Microsoft .NET. it has proven to be quite effective for Active Server Pages (and ASP.NET) sites used to host online books and course material. However, the scheme is general enough for use with any database-centric site or content as well as being adapted to other web application frameworks such as PHP and JSP. (C) 2003 Elsevier B.V. All rights reserved.
C1 King Fahd Univ Petr & Minerals, Dept ICS, Dhahran 31261, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals
RP Al-Darwish, N (corresponding author), King Fahd Univ Petr & Minerals, Dept ICS, POB 1928, Dhahran 31261, Saudi Arabia.
CR ALEXANDER S, 1998, WEBCLASS DEV PRIMER
   BERNERSLEE T, 2001, SCI AM           MAY
   BOSAK J, 1999, SCI AM           MAY
   DIBARTOLO V, FREEMARKER OPEN ALTE
   HILLIER S, 2000, COM PLUS PROGRAMMING
   *IC, WEB DEV PHP FASTT
   JOVANVIC T, USING RESUSING EXTEN
   LEFF A, 2001, 5 INT ENT DISTR OBJ
   LOWY J, COM NET OREILLY NETW
   MAGNUSSON G, START VELOCITY TEMPL
   OBERG RJ, 2000, UNDERSTANDING PROGRA
   PAHL S, 2002, UNDERSTANDING ENTERP
   PLATT DS, 2000, MSDN MAGAZINE    DEC
   POWERS S, ACCESSING COM COMPLU
   SCHNEIDER B, 2001, ARSDIGITA SYSTEM JUN
   SESHADRI G, UNDERSTANDING JAVA S
   SINGH I, DESIGNING ENTERPRISE
   UNGER K, SOLVE YOU SERVLET BA
   EXTENSIBLE MARKUP LA
NR 19
TC 4
Z9 7
U1 0
U2 8
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL 15
PY 2003
VL 45
IS 10
BP 651
EP 662
DI 10.1016/S0950-5849(03)00050-8
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 715NN
UT WOS:000184978800002
DA 2024-07-18
ER

PT J
AU Guo, J
AF Guo, J
TI Software reuse through re-engineering the legacy systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software reuse; software re-engineering; program slicing
ID DESIGN
AB Software reuse is widely considered to be a way to increase the productivity and improve the quality and reliability of new software systems. Identifying, extracting and re-engineering software components that implement abstractions within existing systems is a promising cost-effective way to create reusable assets and re-engineer legacy systems. This paper summarizes our experiences with using computer-supported methods to develop a software architecture to support the re-engineering of the Janus Combat Simulation System. In this effort, we have developed an object-oriented architecture for the Janus Combat Simulation Subsystem, and validated the architecture with an executable prototype. In this paper, we propose methods to facilitate the reuse of the software components of the legacy systems by recovering the behavior of the systems using systematic methods, and illustrate their use in the context of the Janus System. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Calif State Univ Los Angeles, Dept Comp Sci, Los Angeles, CA 90032 USA.
C3 California State University System; California State University Los
   Angeles
RP Calif State Univ Los Angeles, Dept Comp Sci, Los Angeles, CA 90032 USA.
EM jiang.guo@calstatela.edu
CR Achee BL, 1997, J SYST SOFTWARE, V39, P179, DOI 10.1016/S0164-1212(96)00171-9
   BLAZY S, 1998, ACM COMPUT SURV, V30, P181
   BOHM C, 1966, COMMUN ACM, V9, P366, DOI 10.1145/355592.365646
   BOWEN JP, 1995, COMPUTER, V28, P56, DOI 10.1109/2.375178
   Canfora G., 1993, Proceedings of Working Conference on Reverse Engineering (Cat. No.93TH0534-8), P73, DOI 10.1109/WCRE.1993.287777
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHOI SC, 1990, IEEE SOFTWARE, V7, P66, DOI 10.1109/52.43051
   Cutillo F., 1993, Proceedings of Working Conference on Reverse Engineering (Cat. No.93TH0534-8), P83, DOI 10.1109/WCRE.1993.287776
   Demeyer S., 2002, Object-Oriented Reengineering Patterns
   Dewar R., 1999, IEE Proceedings-Software, V146, P145, DOI 10.1049/ip-sen:19990614
   DIJSKTRA E, 1976, DISCIPLINE PROGRAMMI
   EDWARDS HM, 1993, PROC INT CONF SOFTW, P499, DOI 10.1109/ICSE.1993.346016
   GALL H, 1996, P 6 INT C INF PROC M, V3, P1099
   Gannod GC, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P249, DOI 10.1109/WCRE.1996.558929
   GANNOD GC, 1993, P FORM METH PROGR AP, P335
   Guo J, 2002, NINTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P177, DOI 10.1109/ECBS.2002.999836
   GUO J, 1999, P 11 INT C SOFTW ENG, P346
   HAUSLER PA, 1990, IEEE SOFTWARE, V7, P55, DOI 10.1109/52.43050
   HENINGER KL, 1980, IEEE T SOFTWARE ENG, V6, P2, DOI 10.1109/TSE.1980.230208
   Holtzblatt LJ, 1997, IEEE T SOFTWARE ENG, V23, P461, DOI 10.1109/32.605763
   KLOSCH R, 1996, P CSS 96 LOS ANG US, P92
   Lano K., 1993, Proceedings of Working Conference on Reverse Engineering (Cat. No.93TH0534-8), P17, DOI 10.1109/WCRE.1993.287782
   Leite JCSDP, 1997, J SOFTW MAINT-RES PR, V9, P3, DOI 10.1002/(SICI)1096-908X(199701)9:1<3::AID-SMR144>3.0.CO;2-4
   Liu S.-S., 1990, Proceedings. Conference on Software Maintenance 1990 (Cat. No.90CH2921-5), P266, DOI 10.1109/ICSM.1990.131371
   LLOYD A, 1999, COMMUNICATIONS ASS I, V2, P130
   LUQI, 1993, P INT S WORKSH NEW M, P23
   MARKOSIAN L, 1994, COMMUN ACM, V37, P58, DOI 10.1145/175290.175297
   MITTERMEIR RT, 1997, P WORKSH MIGR STRAT
   NIERSTRASZ O, 2002, P RAD INN SOFTW SYST
   Ning J. Q., 1993, Proceedings of Working Conference on Reverse Engineering (Cat. No.93TH0534-8), P64, DOI 10.1109/WCRE.1993.287778
   NING JQ, 1994, COMMUN ACM, V37, P50, DOI 10.1145/175290.175295
   ONG CL, 1993, J OBJECT-ORIENT PROG, V6, P58
   RICH C, 1990, IEEE SOFTWARE, V7, P82, DOI 10.1109/52.43053
   Rivera R., 1994, Proceedings of the Fourth Systems Reengineering Technology Workshop (APL RMI-94-003), P319
   Sward R. E., 1994, Proceedings of the Fourth Systems Reengineering Technology Workshop (APL RMI-94-003), P327
   Ward M. P., 1993, Proceedings of Working Conference on Reverse Engineering (Cat. No.93TH0534-8), P212, DOI 10.1109/WCRE.1993.287763
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   WILKENING DE, 1995, J SYST SOFTWARE, V30, P117, DOI 10.1016/0164-1212(94)00120-C
   ZIMMER JA, 1990, SOFTWARE PRACT EXPER, V20, P365, DOI 10.1002/spe.4380200404
NR 39
TC 5
Z9 6
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 15
PY 2003
VL 45
IS 9
BP 597
EP 609
DI 10.1016/S0950-5849(03)00047-8
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 699RL
UT WOS:000184069700005
DA 2024-07-18
ER

PT J
AU Abo-eleneen, A
   Palliyali, A
   Catal, C
AF Abo-eleneen, Amr
   Palliyali, Ahammed
   Catal, Cagatay
TI The role of Reinforcement Learning in software testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Machine learning; Reinforcement Learning; Artificial
   intelligence
AB Context: Software testing is applied to validate the behavior of the software system and identify flaws and bugs. Different machine learning technique types such as supervised and unsupervised learning were utilized in software testing. However, for some complex software testing scenarios, neither supervised nor unsupervised machine learning techniques were adequate. As such, researchers applied Reinforcement Learning (RL) techniques in some cases. However, a systematic overview of the state-of-the-art on the role of reinforcement learning in software testing is lacking.Objective: The objective of this study is to determine how and to what extent RL was used in software testing.Methods: In this study, a Systematic Literature Review (SLR) was conducted on the use of RL in software testing, and 40 primary studies were investigated.Results: This study highlights different software testing types to which RL has been applied, commonly used RL algorithms and architecture for learning, challenges faced, advantages and disadvantages of using RL, and the performance comparison of RL-based models against other techniques.Conclusions: RL has been widely used in software testing but has almost narrowed to two applications. There is a shortage of papers using advanced RL techniques in addition to multi-agent RL. Several challenges were presented in this study.
C1 [Abo-eleneen, Amr; Palliyali, Ahammed; Catal, Cagatay] Qatar Univ, Dept Comp Sci & Engn, Doha 2713, Qatar.
C3 Qatar University
RP Catal, C (corresponding author), Qatar Univ, Dept Comp Sci & Engn, Doha 2713, Qatar.
EM aa1405465@student.qu.edu.qa; ap1304567@student.qu.edu.qa;
   ccatal@qu.edu.qa
RI Catal, Cagatay/AAF-3929-2019
OI Catal, Cagatay/0000-0003-0959-2930; aboeleneen, amr
   essam/0000-0003-4957-6804
FU Qatar National Library
FX Open access funding provided by the Qatar National Library.
CR Adamo D, 2018, PROCEEDINGS OF THE 9TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON AUTOMATING TEST CASE DESIGN, SELECTION, AND EVALUATION (A-TEST '18), P2, DOI 10.1145/3278186.3278187
   Ahmad T, 2020, IEEE ACCESS, V8, P195000, DOI 10.1109/ACCESS.2020.3033888
   Nguyen A, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P56, DOI 10.1145/3345629.3345636
   [Anonymous], 2009, Scholarpedia
   Araiza-Illan D., 2016, P 3 WORKSHOP MODEL D, P9, DOI 10.1145/3022099.3022101
   Bank D, 2020, arXiv
   Böttinger K, 2018, 2018 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2018), P116, DOI 10.1109/SPW.2018.00026
   Buzdalov M., 2013, GECCO 2013 P 2013 GE, P1655, DOI [10.1145/2464576.2482746, DOI 10.1145/2464576.2482746]
   Carino S, 2015, IEEE INT CONF AUTOM, P138, DOI 10.1109/ASE.2015.70
   Cegin J, 2020, IEEE ICST WORKSHOP, P354, DOI 10.1109/ICSTW50294.2020.00063
   Chen CY, 2019, ASIAN TEST SYMPOSIUM, P73, DOI 10.1109/ATS47505.2019.00013
   Chen JJ, 2020, IEEE INT CONF AUTOM, P78, DOI 10.1145/3324884.3416570
   Cho K., 2014, PROCS C EMPIRICAL ME, P1724, DOI DOI 10.3115/V1/D14-1179
   Chollet F, 2017, PROC CVPR IEEE, P1800, DOI 10.1109/CVPR.2017.195
   Collins Eliane, 2021, SBES '21: Brazilian Symposium on Software Engineering, P186, DOI 10.1145/3474624.3474634
   Cristianini N., 2008, ENCY ALGORITHMS, DOI [DOI 10.1007/978-0-387-30162-4_415, 10.1007/978-0-387-30162-4415]
   Czibula G, 2018, APPL SOFT COMPUT, V65, P517, DOI 10.1016/j.asoc.2018.01.042
   Dai H., 2019, P 33 INT C NEUR INF
   Degott C, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P296, DOI 10.1145/3293882.3330569
   Esnaashari M, 2021, EXPERT SYST APPL, V183, DOI 10.1016/j.eswa.2021.115446
   Feinberg V, 2018, Arxiv, DOI arXiv:1803.00101
   Feng S, 2021, IEEE T INTELL TRANSP, V22, P5635, DOI 10.1109/TITS.2020.2988309
   Fraser G., 2019, HDB SOFTWARE ENG, P123
   Goodfellow I., 2014, arXiv, DOI 10.48550/arXiv.1406.2661
   Groce A., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P161, DOI 10.1109/ISSRE.2012.1
   Grondman I, 2012, IEEE T SYST MAN CY C, V42, P1291, DOI 10.1109/TSMCC.2012.2218595
   Haarnoja T., 2018, SOFT ACTOR CRITIC AL
   Harries L, 2020, Arxiv, DOI arXiv:2007.08220
   He KM, 2015, Arxiv, DOI [arXiv:1512.03385, 10.48550/arxiv.1512.03385]
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Huurman S., 2020, P IEEE ACM 42 INT C, P541, DOI [10.1145/3387940.3392214, DOI 10.1145/3387940.3392214]
   Jalote P., 2012, An integrated approach to software engineering
   Karunakaran D, 2020, IEEE INT C INTELL TR, DOI 10.1109/itsc45102.2020.9294590
   Kim J, 2018, PROCEEDINGS 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P51, DOI 10.1145/3194718.3194720
   Kit E., 1995, SOFTWARE TESTING REA
   KOHONEN T, 1990, P IEEE, V78, P1464, DOI 10.1109/5.58325
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Kumar D, 2016, PROCEDIA COMPUT SCI, V79, P8, DOI 10.1016/j.procs.2016.03.003
   Li T, 2006, KNOWL INF SYST, V10, P453, DOI 10.1007/s10115-006-0013-y
   Lillicrap T., 2015, arXiv, DOI 10.48550/arXiv.1509.02971
   Mariani L., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P81, DOI 10.1109/ICST.2012.88
   Melo F.S., 2001, Tech. Rep
   Mnih V, 2013, Arxiv, DOI [arXiv:1312.5602, 10.48550/arxiv.1312.5602]
   Mnih V, 2016, PR MACH LEARN RES, V48
   Moghadam MH, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1187, DOI 10.1145/3338906.3342484
   Mukherjee S, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428298
   Murphy K. P., 2006, NAIVE BAYES CLASSIFI
   Myers Glenford J., 2011, The Art of Software Testing
   Neto G., 2005, Learning theory course, V2
   Oster N, 2006, LECT NOTES COMPUT SC, V4166, P426
   Paduraru C., 2020, LANGETI 2020 P 1 ACM, P1, DOI [10.1145/3416504.3424333, DOI 10.1145/3416504.3424333]
   Paduraru C, 2020, IEEE ICST WORKSHOP, P52, DOI 10.1109/ICSTW50294.2020.00025
   Pfeifer N, 2020, DES AUT TEST EUROPE, P538, DOI 10.23919/DATE48585.2020.9116198
   Puterman M., 1990, Handb Oper Res Manage Sci, V2, P331
   Racanière S, 2017, ADV NEUR IN, V30
   Ramler R., 2006, P 2006 INT WORKSHOP, P85, DOI DOI 10.1145/1138929.1138946
   Reddy S, 2020, PROC INT CONF SOFTW, P1410, DOI 10.1145/3377811.3380399
   Salakhutdinov R., 2007, P 24 INT C MACH LEAR, P791, DOI DOI 10.1145/1273496.1273596
   Sarker Iqbal H, 2021, SN Comput Sci, V2, P420, DOI 10.1007/s42979-021-00815-1
   Schulman J, 2017, Arxiv, DOI arXiv:1707.06347
   Shi TT, 2020, PR INT CONF DATA SC, P663, DOI 10.1109/DSAA49011.2020.00076
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Sutton RS., 1991, SIGART B, V2, P160, DOI DOI 10.1145/122344.122377
   Vuong TAT, 2018, PROCEEDINGS OF THE 9TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON AUTOMATING TEST CASE DESIGN, SELECTION, AND EVALUATION (A-TEST '18), P31, DOI 10.1145/3278186.3278191
   Viswanadha K, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P52, DOI 10.1109/AITest.2019.000-8
   WHITEHEAD SD, 1995, ARTIF INTELL, V73, P271, DOI 10.1016/0004-3702(94)00012-P
   Wu J, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P662, DOI [10.1109/saner48275.2020.9054815, 10.1109/SANER48275.2020.9054815]
   Wu YC, 2020, PROC IEEE INT CONF S, P692, DOI 10.1109/ICSME46990.2020.00074
   Zhang B., 2021, INT C ARTIFICIAL INT, P4015
   Zhang X., 2012, P 4 AS PAC S INT, DOI [10.1145/2430475.2430483, DOI 10.1145/2430475.2430483]
   Zheng Y, 2021, PROC INT CONF SOFTW, P423, DOI 10.1109/ICSE43902.2021.00048
NR 73
TC 2
Z9 2
U1 19
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107325
DI 10.1016/j.infsof.2023.107325
EA SEP 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA T4QU2
UT WOS:001077858700001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Alnaseef, F
   Niazi, M
   Mahmood, S
   Alshayeb, M
   Ahmad, I
AF Alnaseef, Faisal
   Niazi, Mahmood
   Mahmood, Sajjad
   Alshayeb, Mohammad
   Ahmad, Irfan
TI Towards a successful secure software acquisition
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic reviews; Empirical software engineering; Software security;
   Software acquisition; Software process
AB Context: Security is a critical attribute of software quality. Organizations invest considerable sums of money in protecting their assets. Despite investing in secure infrastructure, organizations remain prone to security risks and cyberattacks that exploit security flaws. Many factors contribute to the challenges related to software security, e.g., the exponential increase in Internet-enabled applications, threats from hackers, and the susceptibility of inexperienced Internet users. Moreover, organizations tend to procure off-the-shelf software from third-party suppliers. However, gaining a complete understanding of ways to assess suppliers' readiness to provide secure software before selecting a supplier is imperative. Objective: We have developed a readiness model for secure software acquisition (RMSSA) to help software organizations select suppliers who can provide secure software. Method: We employed state-of-the-art techniques based on systematic literature review to determine the best practices undertaken by organizations in terms of acquiring secure software, which depends on six core security knowledge areas: confidentiality, integrity, availability, authorization, authentication, and accountability. Results: We evaluated the RMSSA theoretically and in a practical environment based on three case studies with software organizations. Our findings can guide software organizations in selecting the supplier who can develop secure software. Conclusion: The proposed RMSSA can be used to evaluate suppliers' readiness to provide secure software.
C1 [Alnaseef, Faisal; Niazi, Mahmood; Mahmood, Sajjad; Alshayeb, Mohammad; Ahmad, Irfan] King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran, Saudi Arabia.
   [Niazi, Mahmood; Mahmood, Sajjad; Alshayeb, Mohammad] King Fahd Univ Petr & Minerals, Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals; King Fahd University of
   Petroleum & Minerals
RP Niazi, M (corresponding author), King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran, Saudi Arabia.
EM mkniazi@kfupm.edu.sa
RI Ahmad, Irfan/D-7254-2015; Niazi, Mahmood/C-8873-2015; Alshayeb,
   Mohammad/B-5941-2015
OI Ahmad, Irfan/0000-0001-8311-1731; Niazi, Mahmood/0000-0001-7318-7644;
   Alshayeb, Mohammad/0000-0001-7950-0099
FU Deanship of Research Oversight and coordination at King Fahd University
   of Petroleum and Minerals, Saudi Arabia [DF191039]
FX The authors would like to acknowledge the support provided by the
   Deanship of Research Oversight and coordination at King Fahd University
   of Petroleum and Minerals, Saudi Arabia, under Research Grant DF191039.
CR Alshayeb M.J.S.P., 2023, READINESS MODEL SECU, V53, P1013
   Baca D, 2013, SOFTWARE PRACT EXPER, V43, P259, DOI 10.1002/spe.2109
   BHATTI DT, 2014, INT J BUSINESS SOCIA, V4, P33
   Bygren S., 2012, 2012 IEEE INT SYSTEM, P1
   Choi SJ, 2001, J SYST SOFTWARE, V59, P343, DOI 10.1016/S0164-1212(01)00102-9
   Clipsham P, 2011, SOFTWARE QUAL J, V19, P381, DOI 10.1007/s11219-010-9120-9
   Daneshgar F, 2013, INFORM SOFTWARE TECH, V55, P1741, DOI 10.1016/j.infsof.2013.03.009
   DASKALANTONAKIS MK, 1994, IEEE SOFTWARE, V11, P17, DOI 10.1109/52.300079
   Demirors O., 2001, Software Process Improvement and Practice, V6, P189, DOI 10.1002/spip.148
   Farbey B, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P76
   Futcher L., 2008, Proceedings of the 2008 Annual Research Conference of the South African Institute of computer Scientists and Information Technologists, V338, P56, DOI DOI 10.1145/1456659.1456667
   Hevner A, 2010, INTEGR SER INFORM SY, V22, P1, DOI 10.1007/978-1-4419-5653-8_1
   Homescu A, 2017, IEEE T DEPEND SECURE, V14, P158, DOI 10.1109/TDSC.2015.2433252
   Jones J., 2014, SOFTWARE ACQUISITION
   JR F, 2002, ENCYCLOP SOFTW ENG
   Khan Khaled Md, 2010, International Journal of Secure Software Engineering, V1, P35, DOI 10.4018/jsse.2010040103
   Khan RA, 2022, IEEE ACCESS, V10, P5456, DOI 10.1109/ACCESS.2022.3140181
   L MA, 2017, J SOFTW ENG APPL, V10, P211
   McGraw G, 2002, COMPUTER, V35, P99, DOI 10.1109/MC.2002.993782
   McGraw G., 2008, SOFTWARE SECURITY FR
   Mohaddes Deylami H., 2015, EFFECTS SOFTWARE SEC
   Mufti Y, 2018, IEEE ACCESS, V6, P28611, DOI 10.1109/ACCESS.2018.2840322
   Nelson P, 1996, COMMUN ACM, V39, P29, DOI 10.1145/233977.233986
   Niazi M, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2302
   Palanisamy R., 2010, J ENTERPRISE INFORM
   Paul M., 2013, Official (ISC) 2 guide to the CSSLP CBK
   Starrett E., 2007, SOFTWARE ACQUISITION
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Tondel Inger Anne, 2017, International Journal of Secure Software Engineering, V8, P1, DOI 10.4018/IJSSE.2017100101
   Tucker M.A., 2015, TE FRAMEWORK FRAMEWO
   Venable J, 2016, EUR J INFORM SYST, V25, P77, DOI 10.1057/ejis.2014.36
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
NR 32
TC 0
Z9 0
U1 2
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107315
DI 10.1016/j.infsof.2023.107315
EA AUG 2023
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R5MG7
UT WOS:001064786000001
DA 2024-07-18
ER

PT J
AU Mendez, M
   Benito-Parejo, M
   Ibias, A
   Nunez, M
AF Mendez, Manuel
   Benito-Parejo, Miguel
   Ibias, Alfredo
   Nunez, Manuel
TI Metamorphic testing of chess engines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Metamorphic testing; Chess engines
AB Context: Chess engines are computer programs that analyse chess positions. The goal of this analysis is to decide which player has an advantage and evaluate how big the advantage is. Using this analysis, chess engines are really powerful players who can consistently beat the best (human) players. Even though these programs are fantastic players, we cannot be sure that the code is fault free because it is very difficult to test them. In particular, we face the oracle problem: if the chess engine plays better than any potential tester, how can a tester claim that a certain evaluation is wrong or that a suggested move is not the best one?Objective: The main goal of our work is to provide a metamorphic testing tool to evaluate chess engines. In particular, we are interested in looking for inconsistent behaviours in the best publicly available chess engine, Stockfish, but we would also like to consider other chess engines.Methods: We developed a metamorphic testing solution to validate chess engines. First, we defined metamorphic relations that might reveal inconsistent behaviours. The underlying idea was that the evaluation of related positions should be the same. For example, if we consider a position and rotate all the pieces with respect to the central axis, then both positions should have the same evaluation. One of our main priorities was to have a fully automatised tool. Source inputs are obtained from available datasets while follow-up inputs are automatically computed by applying sound transformations to the source inputs with respect to the corresponding metamorphic rule. In order to assess the usefulness of our work, we applied it to analyse a dataset with more than 40,000 positions.Results: Empirical evidence validates the usefulness of our work to analyse the best available chess engine, Stockfish. Our tool revealed non-negligible deviations from the expected behaviour in Stockfish for all the MRs. Additional experiments showed that our tool can be easily used to analyse other chess engines such as Komodo, Houdini and Gull.Conclusion: The experiments demonstrate the usefulness of our approach to identify issues in the latest version of the widely recognised to be the best chess engine: Stockfish (version 15, released in April 2022). Our tool is flexible and can be easily extended with metamorphic relations that can be defined in the future by either us or other users. Since all our metamorphic relations are implemented and the code is freely available, users can use them as a pattern to implement new relations.
C1 [Mendez, Manuel; Benito-Parejo, Miguel; Ibias, Alfredo; Nunez, Manuel] Univ Complutense Madrid, Design & Testing Reliable Syst Res Grp, Madrid, Spain.
C3 Complutense University of Madrid
RP Mendez, M (corresponding author), Univ Complutense Madrid, Design & Testing Reliable Syst Res Grp, Madrid, Spain.
EM manumend@ucm.es; mibeni01@ucm.es; aibias@ucm.es; manuelnu@ucm.es
RI Núñez, Manuel/B-6889-2008; Ibias, Alfredo/AAJ-6625-2020
OI Núñez, Manuel/0000-0001-9808-6401; Ibias, Alfredo/0000-0002-3122-4272;
   MENDEZ HURTADO, MANUEL/0000-0002-6802-2164
FU State Research Agency (AEI) of the Spanish Ministry of Science and
   Innovation [PID2021-122215NB-C31]; Region of Madrid [CT82/20-CT83/20];
   EIE Funds of the European Union; Santander-Complutense University of
   Madrid;  [S2018/TCS-4314]
FX This work has been supported by the State Research Agency (AEI) of the
   Spanish Ministry of Science and Innovation under grant
   PID2021-122215NB-C31 (AwESOMe) ; the Region of Madrid under grant
   S2018/TCS-4314 (FORTE-CM) co-funded by EIE Funds of the European Union;
   and Santander-Complutense University of Madrid under grant
   CT82/20-CT83/20.
CR Abreu R, 2022, 3RD INTERNATIONAL WORKSHOP ON QUANTUM SOFTWARE ENGINEERING (Q-SE 2022), P16, DOI 10.1145/3528230.3529189
   Almendros-Jiménez JM, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106631
   Almendros-Jiménez JM, 2023, IEEE T SOFTWARE ENG, V49, P549, DOI 10.1109/TSE.2022.3156182
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 2022, TOP CHESS ENGINE CHA
   [Anonymous], 2022, FORSYTH EDWARDS NOTA
   [Anonymous], 2022, STOCKFISH 15 STRONG
   [Anonymous], 2022, LC0 VS SF
   [Anonymous], 2009, FIDE LAWS CHESS ADOP
   [Anonymous], 2022, KAGGLE CHESS POSITIO
   [Anonymous], 2022, ARASAN TEST SUITE
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Cavalli AR, 2015, ANN TELECOMMUN, V70, P85, DOI 10.1007/s12243-015-0457-8
   Chen T.Y., 1998, Metamorphic testing: a new approach for generating next test cases
   Chen TY, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1487, DOI 10.1145/3468264.3473136
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen TY, 2003, INFORM SOFTWARE TECH, V45, P1, DOI 10.1016/S0950-5849(02)00129-5
   Ellis JD, 2021, J COMPUT SCI-NETH, V55, DOI 10.1016/j.jocs.2021.101456
   Elo A. E., 1967, Chess Life, VXXII, P242
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   Hui ZW, 2020, IEEE T RELIAB, V69, P657, DOI 10.1109/TR.2019.2931561
   Jia M., 2020, Int. J. Performability Eng., V16, P67
   Jiang MY, 2022, INFORM SOFTWARE TECH, V150, DOI 10.1016/j.infsof.2022.106966
   Liaqat A., 2018, 14 INT C EMERGING TE, P1
   Liaqat A, 2020, IEEE ACCESS, V8, P174179, DOI 10.1109/ACCESS.2020.3024929
   Mouha N, 2018, IEEE T RELIAB, V67, P870, DOI 10.1109/TR.2018.2847247
   Murphy C, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P189
   Myers Glenford J., 2011, The Art of Software Testing
   Nunez A, 2021, IEEE T RELIAB, V70, P261, DOI 10.1109/TR.2020.3011512
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Pesu D, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2018), P38, DOI 10.1145/3193977.3193980
   Roldan-Gomez J., 2023, IN PRESS
   Roldán-Gómez J, 2023, ENG APPL ARTIF INTEL, V123, DOI 10.1016/j.engappai.2023.106344
   Segura S, 2020, IEEE SOFTWARE, V37, P46, DOI 10.1109/MS.2018.2875968
   Segura S, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P7, DOI 10.1109/ICSE-NIER.2017.16
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Tearth, 2022, FEW THOUGHTS TEST CH
   Tolksdorf S, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P273, DOI 10.1145/3293882.3330567
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Van Rossum G., 2009, Python 3 Reference Manual
   Vanthoor M., 2022, CREATING RUSTIC CHES
   WALD A, 1948, ANN MATH STAT, V19, P326, DOI 10.1214/aoms/1177730197
   WALD A, 1945, ANN MATH STAT, V16, P117, DOI 10.1214/aoms/1177731118
   Xiao He, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P502, DOI 10.1145/3395363.3397382
   Xu YZ, 2022, IET SOFTW, V16, P386, DOI 10.1049/sfw2.12058
   Zhang ZY, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106701
   Zhou ZQ, 2021, IEEE T SOFTWARE ENG, V47, P1164, DOI 10.1109/TSE.2019.2915065
   Zhou ZQ, 2020, IEEE T SOFTWARE ENG, V46, P1120, DOI 10.1109/TSE.2018.2876433
NR 48
TC 0
Z9 0
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2023
VL 162
AR 107263
DI 10.1016/j.infsof.2023.107263
EA JUN 2023
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA M4JZ9
UT WOS:001029897300001
OA hybrid
DA 2024-07-18
ER

PT J
AU Frattini, J
   Fucci, D
   Mendez, D
   Spinola, R
   Mandic, V
   Tausan, N
   Ahmad, MO
   Gonzalez-Huerta, J
AF Frattini, Julian
   Fucci, Davide
   Mendez, Daniel
   Spinola, Rodrigo
   Mandic, Vladimir
   Tausan, Nebojsa
   Ahmad, Muhammad Ovais
   Gonzalez-Huerta, Javier
TI An initial theory to understand and manage requirements engineering debt
   in practice
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements engineering; Requirements engineering debt; Interview
   study; Online survey; Theory
ID TECHNICAL DEBT
AB Context: Advances in technical debt research demonstrate the benefits of applying the financial debt metaphor to support decision-making in software development activities. Although decision-making during requirements engineering has significant consequences, the debt metaphor in requirements engineering is inadequately explored.Objective: We aim to conceptualize how the debt metaphor applies to requirements engineering by organizing concepts related to practitioners' understanding and managing of requirements engineering debt (RED).Method: We conducted two in-depth expert interviews to identify key requirements engineering debt concepts and construct a survey instrument. We surveyed 69 practitioners worldwide regarding their perception of the concepts and developed an initial analytical theory. Results: We propose a RED theory that aligns key concepts from technical debt research but emphasizes the specific nature of requirements engineering. In particular, the theory consists of 23 falsifiable propositions derived from the literature, the interviews, and survey results.Conclusions: The concepts of requirements engineering debt are perceived to be similar to their technical debt counterpart. Nevertheless, measuring and tracking requirements engineering debt are immature in practice. Our proposed theory serves as the first guide toward further research in this area.
C1 [Frattini, Julian; Fucci, Davide; Mendez, Daniel; Gonzalez-Huerta, Javier] Blekinge Inst Technol, Valhallvagen 1, S-37140 Karlskrona, Sweden.
   [Mendez, Daniel] Fortiss GmbH, Guerickestr 25, D-80805 Munich, Germany.
   [Spinola, Rodrigo] Virginia Commonwealth Univ, Richmond, VA 23284 USA.
   [Spinola, Rodrigo] Univ Salvador, Salvador, Brazil.
   [Mandic, Vladimir; Tausan, Nebojsa] Univ Novi Sad, Dr Zorana Dindica 1, Novi Sad 21102, Serbia.
   [Ahmad, Muhammad Ovais] Univ Karlstad, Univ Gatan 2, S-65188 Karlstad, Sweden.
C3 Blekinge Institute Technology; fortiss; Virginia Commonwealth
   University; Universidade Salvador (UNIFACS); Universidad de El Salvador;
   University of Novi Sad; Karlstad University
RP Frattini, J (corresponding author), Blekinge Inst Technol, Valhallvagen 1, S-37140 Karlskrona, Sweden.
EM julian.frattini@bth.se
RI Fucci, Davide/C-1463-2015; Taušan, Nebojša/S-1995-2016; Mendez,
   Daniel/ABA-4579-2021; Mandic, Vladimir/I-6306-2019; Ahmad, Muhamamd
   Ovais/F-7679-2012
OI Fucci, Davide/0000-0002-0679-4361; Taušan, Nebojša/0000-0001-9663-7951;
   Mendez, Daniel/0000-0003-0619-6027; Mandic,
   Vladimir/0000-0001-6996-2222; Frattini, Julian/0000-0003-3995-6125;
   Ahmad, Muhamamd Ovais/0000-0002-7885-0369
FU KKS foundation, Sweden
FX This work was supported by the KKS foundation, Sweden through the
   S.E.R.T. Research Profile project at Blekinge Institute of Technology
   and the NODLA project at Karlstad University. We additionally thank the
   reviewers for their valuable feedback that helped strengthen the
   manuscript.
CR Baltes S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10072-8
   Barbosa L., 2022, WORKSH REQ ENG WER20, P123
   Berenbach B, 2014, PROCEDIA COMPUT SCI, V28, P505, DOI 10.1016/j.procs.2014.03.062
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Curtis B, 2012, IEEE SOFTWARE, V29, P34, DOI 10.1109/MS.2012.156
   Ernst N. A., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P61, DOI 10.1109/MTD.2012.6226002
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Fernández DM, 2017, EMPIR SOFTW ENG, V22, P2298, DOI 10.1007/s10664-016-9451-7
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   HILTY L. M., 2005, INFORM SYSTEMS SUSTA
   Kruchten P., 2019, Managing Technical Debt
   LENARDUZZI V, 2019, INT S EMP SOFTW ENG, V2019, DOI [DOI 10.1109/ESEM.2019.8870159, DOI 10.1109/esem.2019.8870159]
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Marshall MN, 1996, FAM PRACT, V13, P92, DOI 10.1093/fampra/13.1.92
   Melo A, 2022, J SYST SOFTWARE, V194, DOI 10.1016/j.jss.2022.111483
   Molléri JS, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106240
   O'Connor D, 2010, SOLID STATE TECHNOL, V53, P34
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Ramac R., 2021, J SYST SOFTWARE, DOI [10.1016/j.jss, DOI 10.1016/J.JSS]
   Rios Nicolli, 2020, Requirements Engineering: Foundation for Software Quality. 26th International Working Conference, REFSQ 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12045), P55, DOI 10.1007/978-3-030-44429-7_4
   Rios N, 2020, EMPIR SOFTW ENG, V25, P3216, DOI 10.1007/s10664-020-09832-9
   Rios N, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268917
   Rios N, 2018, INFORM SOFTWARE TECH, V102, P117, DOI 10.1016/j.infsof.2018.05.010
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   Siebra CA, 2012, INT SYMP EMP SOFTWAR, P247, DOI 10.1145/2372251.2372297
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Wagner S, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3306607
   Wieringa Roel J., 2014, Design science methodology for information systems and software engineering
   Yuepu Guo, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P528, DOI 10.1109/ICSM.2011.6080824
   Zabardast E, 2022, J SYST SOFTWARE, V193, DOI 10.1016/j.jss.2022.111485
NR 35
TC 1
Z9 1
U1 4
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2023
VL 159
AR 107201
DI 10.1016/j.infsof.2023.107201
EA APR 2023
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA F4QH2
UT WOS:000982204000001
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Laatikainen, G
   Li, MC
   Abrahamsson, P
AF Laatikainen, Gabriella
   Li, Mengcheng
   Abrahamsson, Pekka
TI A system-based view of blockchain governance
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Blockchain governance; Systems theory; Systematic literature review
ID TECHNOLOGY; CHALLENGES
AB Context: Governance is crucial in achieving the success and sustainability of blockchain systems. However, blockchain governance is multi-faceted, complex, dynamic, and challenging due to its decentralized nature and automatically enforced rules and mechanisms.Objectives: This study aims to advance the theory of blockchain governance and support practitioners to deepen the researchers' and practitioners' understanding of blockchain governance.Methods: The study is a systematic literature review of 75 articles that applies systems theory to conceptualize blockchain governance as a system and parsimoniously organize its interrelated elements into a conceptual model. Results: The paper proposes a holistic definition and a conceptual model of blockchain governance. Blockchain governance encompasses technical and social means to make decisions on the different levels (e.g., individual, community, organizational, national, international) related to actors, roles, rights, incentives, responsibilities, rules, and the business, technological, legal, and regulatory aspects of a blockchain system during its whole lifecycle.Conclusion: The system-based model of blockchain governance can serve as a reference framework and structured foundation for analyzing, discussing, and developing the governance of blockchain systems.
C1 [Laatikainen, Gabriella; Li, Mengcheng; Abrahamsson, Pekka] Univ Jyvaskyla, Fac Informat Technol, Jyvaskyla, Finland.
C3 University of Jyvaskyla
RP Laatikainen, G (corresponding author), Univ Jyvaskyla, Fac Informat Technol, Jyvaskyla, Finland.
EM gabriella.laatikainen@jyu.fi
RI Li, Mengcheng/IYJ-8108-2023; Abrahamsson, Pekka/A-5559-2018
OI Laatikainen, Gabriella/0000-0002-0647-5176; Abrahamsson,
   Pekka/0000-0002-4360-2226
CR Allen Darcy W. E., 2021, Governing Markets as Knowledge Commons, P159, DOI [10.1017/9781108692915, DOI 10.1017/9781108692915]
   Allen DE, 2022, J AM STAT ASSOC, V117, P214, DOI 10.1080/01621459.2020.1768101
   Alston E., 2020, CAN PERMISSIONLESS B
   Andoni M, 2019, RENEW SUST ENERG REV, V100, P143, DOI 10.1016/j.rser.2018.10.014
   Arrunada B., 2018, SOC SCI RES NETW, DOI [10.2139/ssrn.3160070, DOI 10.2139/SSRN.3160070]
   ATLAS.ti, 2022, ABOUT US
   Atzori Marcella., 2015, Blockchain Technology and Decentralized Governance: Is the State Still Necessary?, DOI [10.22495/jgr_v6_i1_p5, DOI 10.22495/JGR_V6_I1_P5]
   Bakkalbasi Nisa, 2006, Biomed Digit Libr, V3, P7, DOI 10.1186/1742-5581-3-7
   Baudlet M, 2020, 2020 2ND CONFERENCE ON BLOCKCHAIN RESEARCH & APPLICATIONS FOR INNOVATIVE NETWORKS AND SERVICES (BRAINS), P17, DOI [10.1109/brains49436.2020.9223280, 10.1109/BRAINS49436.2020.9223280]
   Beck R, 2018, J ASSOC INF SYST, V19, P1020, DOI 10.17705/1jais.00518
   Benedict G., 2019, Journal of ICT Standardization, V7, P195
   Brennan NM, 2019, BRIT ACCOUNT REV, V51, DOI 10.1016/j.bar.2019.100860
   Bushee BJ, 2010, J ACCOUNT RES, V48, P1, DOI 10.1111/j.1475-679X.2009.00357.x
   Campbell-Verduyn M., 2017, Bitcoin and Beyond: Cryptocurrencies, Blockchains, and Global Governance, V1st edn
   Carter N., 2017, CROSS SECTIONAL OVER, P61
   Chang V, 2020, TECHNOL FORECAST SOC, V158, DOI 10.1016/j.techfore.2020.120166
   Chen Y., 2020, DECENTRALIZED GOVT B
   Chen Yi-jia, 2020, Journal of Sustainable Development, V13, P1, DOI 10.5539/jsd.v13n1p1
   Cohn A., 2017, SMART ALL BLOCKCHAIN
   Crepaldi M., 2019, P 17 INT C ARTIFICIA, P189, DOI [10.1145/3322640.3328780, DOI 10.1145/3322640.3328780]
   De Filippi P., 2018, RES REPORT
   De Filippi P., 2018, Blockchain and the Law, P72
   De Filippi P, 2021, INTERNET POLICY REV, V10, DOI 10.14763/2021.2.1549
   De Filippi P, 2020, TECHNOL SOC, V62, DOI 10.1016/j.techsoc.2020.101284
   De Filippi P, 2016, INTERNET POLICY REV, V5, DOI 10.14763/2016.3.427
   Demil B, 2010, LONG RANGE PLANN, V43, P227, DOI 10.1016/j.lrp.2010.02.004
   Diaz-Valdivia A., 2020, DISTRIBUTED ENERGY T
   DiRose S, 2018, 2018 13TH ANNUAL CONFERENCE ON SYSTEM OF SYSTEMS ENGINEERING (SOSE), P195, DOI 10.1109/SYSOSE.2018.8428782
   DuPont Q, 2018, RIPE SER GLOB POLIT, P157
   Dyck A, 2008, J FINANC, V63, P1093, DOI 10.1111/j.1540-6261.2008.01353.x
   ERTZ MYRIAM, 2019, International Journal of Innovation Studies, V3, P84, DOI [DOI 10.1016/J.IJIS.2019.12.002, 10.1016/j.ijis.2019.12.002]
   Faqir-Rhazoui Y, 2021, J INTERNET SERV APPL, V12, DOI 10.1186/s13174-021-00139-6
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Gasser U., 2015, SSRN ELECT J, DOI [10.2139/ssrn.2549270, DOI 10.2139/SSRN.2549270]
   Gioia DA, 2013, ORGAN RES METHODS, V16, P15, DOI 10.1177/1094428112452151
   Hacker Philipp., 2019, REGULATING BLOCKCHAI, p140
   Hofmann A., 2020, P 28 EUROPEAN C INFO
   Howell B.E., 2019, GOVT BLOCKCHAIN DIST
   Hsieh, 2017, INT EXT GOV BLOCKCH, P26
   Hsieh YC, 2017, SUSTAINABILITY-BASEL, V9, DOI 10.3390/su9061068
   Hütten M, 2019, GLOBAL NETW, V19, P329, DOI 10.1111/glob.12217
   IBM Food Trust, 2022, US
   Jensen J.R., 2021, EMPIRICAL EVIDENCE 4, P9
   John T, 2018, MATEC WEB CONF, V223, DOI 10.1051/matecconf/201822301010
   Karjalainen R., 2020, GOVERNANCE DECENTRAL
   Katz D., 1978, The Social Psychology of Organizations
   Kolehmainen Taija, 2021, Software Business. 11th International Conference, ICSOB 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 407), P70, DOI 10.1007/978-3-030-67292-8_6
   Kraus S, 2020, INT ENTREP MANAG J, V16, P1023, DOI 10.1007/s11365-020-00635-4
   Laatikainen G., 2021, SCANDINAVIAN C INFOR
   Laatikainen G, 2021, Arxiv, DOI [arXiv:2105.15131, 10.48550/arXiv.2105.15131, DOI 10.48550/ARXIV.2105.15131]
   Laatikainen G, 2021, LECT NOTES BUS INF P, V434, P66, DOI 10.1007/978-3-030-91983-2_6
   Lacity M., 2019, BLOCKCHAIN GOVT MODE
   Lacity MC, 2018, MIS Q EXEC, V17, P201
   Lee B., 2020, SOC SCI RES NETW, DOI DOI 10.2139/SSRN.3537314
   Locke K., 2002, The grounded theory approach to qualitative research
   Lumineau F, 2021, ORGAN SCI, V32, P500, DOI 10.1287/orsc.2020.1379
   Mattila J., 2018, COLLABORATIVE VALUE, P183, DOI DOI 10.1007/978-981-10-8956-5_10
   McCurdy D., 2020, THESIS
   McKeown KR, 2010, J BUS FINANC LIBR, V15, P253, DOI 10.1080/08963568.2010.488048
   Meijer D, 2018, PROCEEDINGS OF THE 19TH ANNUAL INTERNATIONAL CONFERENCE ON DIGITAL GOVERNMENT RESEARCH (DGO 2018): GOVERNANCE IN THE DATA AGE, P772, DOI 10.1145/3209281.3209321
   Midha V, 2012, DECIS SUPPORT SYST, V54, P23, DOI 10.1016/j.dss.2012.03.002
   NADLER DA, 1980, ORGAN DYN, V9, P35, DOI 10.1016/0090-2616(80)90039-X
   Nilsson O., PUBLIC BLOCKCHAIN CO
   Osterwalder A, 2005, COMMUN ASSOC INF SYS, V16
   Panin A, 2019, LECT NOTES BUS INF P, V370, P237, DOI 10.1007/978-3-030-33742-1_19
   Pereira J, 2019, TECHNOL FORECAST SOC, V146, P94, DOI 10.1016/j.techfore.2019.04.030
   Poblet M, 2020, FRONT BLOCKCHAIN, V3, DOI 10.3389/fbloc.2020.575662
   Post C, 2020, J MANAGE STUD, V57, P351, DOI 10.1111/joms.12549
   Razzaq A, 2019, INT J ADV COMPUT SC, V10, P685
   Reijers W., 2016, LEDGER-PITTSBURGH, V1, P134, DOI [DOI 10.5195/LEDGER.2016.62, 10.5195/ledger.2016.62]
   Reijers W, 2021, TOPOI-INT REV PHILOS, V40, P821, DOI 10.1007/s11245-018-9626-5
   Reyes C.L., 2016, SSRN ELECT J, DOI [10.2139/ssrn.2884978, DOI 10.2139/SSRN.2884978]
   Rikken O, 2019, INFORM POLITY, V24, P397, DOI 10.3233/IP-190154
   Schad J, 2018, J MANAGE STUD, V55, P1490, DOI 10.1111/joms.12398
   Schleicher DJ, 2018, J MANAGE, V44, P2209, DOI 10.1177/0149206318755303
   Schmeiss J, 2019, CALIF MANAGE REV, V62, P121, DOI 10.1177/0008125619883618
   Schwabe G, 2019, INFORM POLITY, V24, P437, DOI 10.3233/IP-190147
   Shermin V, 2017, STRATEG CHANG, V26, P499, DOI 10.1002/jsc.2150
   Smit K, 2020, 24 PAC AS C INF SYST
   Smith Crown, 2019, REV DISTRIBUTED GOVT
   Strauss A., 1994, HDB QUALITATIVE RES, P273, DOI DOI 10.1007/BF00988593
   Tasca P, 2018, Arxiv, DOI arXiv:1708.04872
   Trump Benjamin D., 2018, Environment Systems & Decisions, V38, P426, DOI 10.1007/s10669-018-9703-8
   Van Deventer M.O., 2017, GOVERNANCE BUSINESS
   van Deventer O., 2018, TECHRUPTION CONSORTI, DOI [10.18420/BLOCKCHAIN2018_06, DOI 10.18420/BLOCKCHAIN2018_06]
   van Pelt R, 2021, INFORM SYST MANAGE, V38, P21, DOI 10.1080/10580530.2020.1720046
   Wang FN, 2020, FRONT BLOCKCHAIN, V2, DOI 10.3389/fbloc.2019.00028
   Wang YL, 2019, INT J PROD ECON, V211, P221, DOI 10.1016/j.ijpe.2019.02.002
   Wells P, 2016, ORGAN ENVIRON, V29, P36, DOI 10.1177/1086026615590882
   Werbach, 2018, BERKELEY TECHNOLOGY, V33, P487, DOI [DOI 10.15779/Z38H41JM9N, 10.15779/Z38H41JM9N]
   Wolfswinkel JF, 2013, EUR J INFORM SYST, V22, P45, DOI 10.1057/ejis.2011.51
   Zachariadis M, 2019, INFORM ORGAN-UK, V29, P105, DOI 10.1016/j.infoandorg.2019.03.001
   Ziolkowski R, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P4535
NR 93
TC 6
Z9 7
U1 10
U2 33
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2023
VL 157
AR 107149
DI 10.1016/j.infsof.2023.107149
EA JAN 2023
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8V3CL
UT WOS:000930512200001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Almeida, C
   Kalinowski, M
   Uchôa, A
   Feijó, B
AF Almeida, Clauvin
   Kalinowski, Marcos
   Uchoa, Anderson
   Feijo, Bruno
TI Negative effects of gamification in education software: Systematic
   mapping and practitioner perceptions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Gamification; Negative effects; Education; Learning; Systematic mapping;
   Snowballing; Focus group
ID DIGITAL BADGES; DARK SIDE; ENGAGEMENT; DESIGN; IMPLEMENTATION;
   ENVIRONMENTS; EXPERIENCES; MOTIVATION; POINTS; IMPACT
AB Context: While most research shows positive effects of gamification, the focus on its adverse effects is considerably smaller and further understanding of these effects is needed. Objective: To provide a comprehensive overview on research reporting negative effects of game design elements and to provide insights into the awareness of developers on these effects and into how they could be considered in practice. Method: We conducted a systematic mapping study of the negative effects of game design elements on education/learning systems. We also held a focus group discussion with developers of a gamified software, discussing the mapping study results with regard to their awareness and perceptions on the reported negative effects in practice. Results: The mapping study revealed 87 papers reporting undesired effects of game design elements. We found that badges, leaderboards, competitions, and points are the game design elements most often reported as causing negative effects. The most cited negative effects were lack of effect, worsened performance, motivational issues, lack of understanding, and irrelevance. The ethical issues of gaming the system and cheating were also often reported. As part of our results, we map the relations between game design elements and the negative effects that they may cause. The focus group revealed that developers were not aware of many of the possible negative effects and that they consider this type of information useful. The discussion revealed their agreement on some of those potential negative effects and also some positive counterparts. Conclusions: Gamification, when properly applied, can have positive effects on education/learning software. However, gamified software is also prone to generate harmful effects. Revealing and discussing potentially negative effects can help to make more informed decisions considering their trade-off with respect to the expected benefits.
C1 [Almeida, Clauvin; Kalinowski, Marcos; Feijo, Bruno] Pontifical Catholic Univ Rio de Janeiro PUC Rio, Rio De Janeiro, Brazil.
   [Uchoa, Anderson] Fed Univ Ceara UFC, Itapaje, Brazil.
C3 Pontificia Universidade Catolica do Rio de Janeiro
RP Almeida, C (corresponding author), Pontifical Catholic Univ Rio de Janeiro PUC Rio, Rio De Janeiro, Brazil.
EM almeidaclauvin@gmail.com; kalinowski@inf.puc-rio.br;
   andersonuchoa@ufc.br; bfeijo@inf.puc-rio.br
RI Uchôa, Anderson/N-4331-2019
OI Uchôa, Anderson/0000-0002-6847-5569; Feijo, Bruno/0000-0003-4441-2632
FU Coordination for the Improvement of Higher Education Personnel
   (CAPES-Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior),
   Brazil [001]; National Council for Scientific and Technological
   Development (CNPq-Conselho Nacional de Desenvolvimento Cientifico e
   Tecnologico), Brazil [312827/2020-2]; Cearense Foundation of Scientific
   and Technological Support (FUNCAP-Fundacao Cearense de Apoio ao
   Desenvolvimento Cientifico e Tecnologico), Brazil
   [BP5-00197-00042.01.00/22]
FX This study was financed in part by the Coordination for the Improvement
   of Higher Education Personnel (CAPES-Coordenacao de Aperfeicoamento de
   Pessoal de Nivel Superior), Brazil-Finance Code 001, and by the National
   Council for Scientific and Technological Development (CNPq-Conselho
   Nacional de Desenvolvimento Cientifico e Tecnologico), Brazil under
   grant 312827/2020-2. This study was also financed by the Cearense
   Foundation of Scientific and Technological Support (FUNCAP-Fundacao
   Cearense de Apoio ao Desenvolvimento Cientifico e Tecnologico), Brazil
   under grant BP5-00197-00042.01.00/22. We would like to thank the focus
   group participants for the valuable discussion that enriched this paper.
CR Albuquerque J, 2017, COMPUT EDUC, V115, P161, DOI 10.1016/j.compedu.2017.08.005
   Algashami A., 2019, THESIS BOURNEMOUTH U, P318
   Alhammad MM, 2018, J SYST SOFTWARE, V141, P131, DOI 10.1016/j.jss.2018.03.065
   Almeida C, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P17, DOI 10.1109/SEAA53835.2021.00011
   [Anonymous], 2010, NATURE, V467, P252, DOI 10.1038/467252a
   [Anonymous], 2013, Proceedings of the First International Conference on Gameful Design, Research, and Applications-Gamification '13, DOI [DOI 10.1145/2583008.2583010, 10.1145/2583008.2583010]
   [Anonymous], 2017, GAMIFIN C 2017
   [Anonymous], 2016, INFORM SYSTEM ED J
   Attali Y, 2015, COMPUT EDUC, V83, P57, DOI 10.1016/j.compedu.2014.12.012
   Azevedo O, 2018, LECT NOTES COMPUT SC, V11082, P231, DOI 10.1007/978-3-319-98572-5_18
   Babichenko D, 2019, PROC EUR CONF GAME, P41, DOI 10.34190/GBL.19.016
   Barata Gabriel, 2013, Foundations of Augmented Cognition. 7th International Conference, AC 2013. Held as Part of HCI International 2013. Proceedings, P639, DOI 10.1007/978-3-642-39454-6_68
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Berkling Kay, 2013, 2013 International Conference on Interactive Collaborative Learning (ICL), P525, DOI 10.1109/ICL.2013.6644642
   Boehm B., 2001, FDN EMPIRICAL SOFTWA, P426
   Bogost I, 2014, GAMEFUL WORLD: APPROACHES, ISSUES, APPLICATIONS, P65
   Brathwaite B., 2009, Challenges for game designers
   Brom C, 2019, J EDUC COMPUT RES, V57, P1575, DOI 10.1177/0735633118797330
   Buckley P, 2016, INTERACT LEARN ENVIR, V24, P1162, DOI 10.1080/10494820.2014.964263
   Buisman A.L.D., 2014, the Proceedings of the Computer Science Education Research Conference, VVV, P9, DOI DOI 10.1145/2691352.2691353
   Campos A, 2015, PROC EUR CONF GAME, P117
   Chau CL, 2019, FRONT PSYCHOL, V10, DOI 10.3389/fpsyg.2019.02468
   Chou Y., 2019, Actionable gamification: Beyond points, badges, and leaderboards
   Codish D., 2014, PERSONALITY BASED GA
   Codish D., 2017, GENDER MODERATION GA
   D.A. Qatar Computing Research Institute, 2020, RAYYAN
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Davis K, 2018, J COMPUT ASSIST LEAR, V34, P492, DOI 10.1111/jcal.12254
   Davis K, 2015, COMPUT EDUC, V88, P72, DOI 10.1016/j.compedu.2015.04.011
   de-Marcos L, 2014, COMPUT EDUC, V75, P82, DOI 10.1016/j.compedu.2014.01.012
   Denden M, 2021, INT J HUM-COMPUT ST, V154, DOI 10.1016/j.ijhcs.2021.102674
   Deterding S., 2011, P 15 INT AC MINDTREK, P9, DOI [10.1145/2181037.2181040, DOI 10.1145/2181037.2181040]
   Diefenbach S, 2019, INT J HUM-COMPUT ST, V127, P190, DOI 10.1016/j.ijhcs.2018.09.004
   Domínguez A, 2013, COMPUT EDUC, V63, P380, DOI 10.1016/j.compedu.2012.12.020
   Duolingo, 2020, US MISS
   Ejsing-Duun S, 2014, PROC EUR CONF GAME, P92
   Facey-Shaw L, 2020, SIMULAT GAMING, V51, P33, DOI 10.1177/1046878119884996
   Featherstone M, 2019, INT J HUM-COMPUT ST, V127, P150, DOI 10.1016/j.ijhcs.2018.05.006
   Fernandes E, 2019, ADV INTELL SYST, V800, P617, DOI 10.1007/978-3-030-14070-0_89
   Fernández DM, 2017, EMPIR SOFTW ENG, V22, P2298, DOI 10.1007/s10664-016-9451-7
   Fitz-Walter Z, 2017, COMPUT HUM BEHAV, V71, P586, DOI 10.1016/j.chb.2016.08.050
   Fotaris P, 2016, ELECTRON J E-LEARN, V14, P94
   Gabrielle V., DARK SIDE GAMIFYING
   Ge ZG, 2018, COMPUT EDUC, V126, P143, DOI 10.1016/j.compedu.2018.07.009
   Ghaban W., 2019, P 11 INT C COMPUTER, P392, DOI DOI 10.5220/0007730703920400
   Gibson D, 2015, EDUC INF TECHNOL, V20, P403, DOI 10.1007/s10639-013-9291-7
   Haaranen L, 2014, PROCEEDINGS OF THE 45TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION (SIGCSE'14), P33, DOI 10.1145/2538862.2538921
   Hakulinen L, 2013, 2013 LEARNING AND TEACHING IN COMPUTING AND ENGINEERING (LATICE 2013), P47, DOI 10.1109/LaTiCE.2013.34
   Hamari J, 2014, P ANN HICSS, P3025, DOI 10.1109/HICSS.2014.377
   Hammedi W, 2021, J BUS RES, V122, P256, DOI 10.1016/j.jbusres.2020.08.032
   Hanus MD, 2015, COMPUT EDUC, V80, P152, DOI 10.1016/j.compedu.2014.08.019
   Hernández-Fernández A, 2020, SUSTAINABILITY-BASEL, V12, DOI 10.3390/su12239958
   Iruela M., 2020, WHAT PERCEPTION STUD, DOI DOI 10.1109/ACCESS.2020.3011222
   Johnson Daniel, 2016, Internet Interv, V6, P89, DOI 10.1016/j.invent.2016.10.002
   Kim M, 2009, PROC INT CONF SOFTW, P309, DOI 10.1109/ICSE.2009.5070531
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Klock A C. T., 2016, Proceedings of the 15th Brazilian Symposium on Human Factors in Computer Systems - IHC'16, P1, DOI DOI 10.1145/3033701.3033715
   Kocadere SA, 2015, J E-LEARN KNOWL SOC, V11, P85
   Koivisto J, 2019, INT J INFORM MANAGE, V45, P191, DOI 10.1016/j.ijinfomgt.2018.10.013
   Kontio J., 2008, Guide to Advanced Empirical Software Engineering, P93, DOI [DOI 10.1007/978-1-84800-044-5_4, 10.1007/978-1-84800-044-54, DOI 10.1007/978-1-84800-044-54]
   Lavoué É, 2019, IEEE T LEARN TECHNOL, V12, P16, DOI 10.1109/TLT.2018.2823710
   Lee BC, 2019, SUSTAINABILITY-BASEL, V11, DOI 10.3390/su11113002
   Leonardo R., 2018, EVID BASED MED PRACT, V3, P2, DOI [DOI 10.7717/PEERJ.5061/TABLE-1, DOI 10.4172/2471-9919.1000115]
   Mahmud SND, 2020, SUSTAINABILITY-BASEL, V12, DOI 10.3390/su12093801
   Majuri J., 2018, CEUR WORKSH P, P11, DOI DOI 10.1016/J.CHB.2015.08.048
   Marinho A., 2019, Revista Brasileira De Informatica Na Educacao, V27, P40, DOI DOI 10.5753/RBIE.2019.27.02.40
   Martakis A, 2013, INT CONF RES CHAL
   Martin R, 2017, PROC FRONT EDUC CONF
   Matosin N, 2014, DIS MODEL MECH, V7, P171, DOI 10.1242/dmm.015123
   Matthews KL, 2018, QUAL HEALTH RES, V28, P1621, DOI 10.1177/1049732318782167
   McDaniel R, 2012, IEEE INT PROF COMMUN
   Menary J., 2021, EMERALD OPEN RES, V3, P6, DOI [DOI 10.35241/EMERALDOPENRES.14163.2, DOI 10.35241/EMERALDOPENRES.14163.1]
   Mendes E, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110607
   Menzies T, 2017, EMPIR SOFTW ENG, V22, P1903, DOI 10.1007/s10664-016-9469-x
   Minge M, 2020, INFORMATION, V11, DOI 10.3390/info11050249
   Mora A, 2017, J COMPUT HIGH EDUC, V29, P516, DOI 10.1007/s12528-017-9150-4
   Morris BJ, 2019, J COMPUT HIGH EDUC, V31, P573, DOI 10.1007/s12528-019-09228-9
   Morschheuser B, 2017, PROCEEDINGS OF THE 50TH ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P1298
   Mourao E, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2020.106294
   Naik V, 2015, IEEE CONF TECHNOL ED, P7, DOI 10.1109/T4E.2015.23
   Nascimento ED, 2019, INT SYMP EMP SOFTWAR, P145
   Nelson M. J., 2012, MINDTREK 12, P23, DOI DOI 10.1145/2393132.2393138
   Nicholson S., 2013, GAMES LEARNING SOC 9
   Norman G, 2010, ADV HEALTH SCI EDUC, V15, P625, DOI 10.1007/s10459-010-9222-y
   O. Research, 2019, GAM MARK DEPL PREM C
   Ohn MH, 2020, TZU CHI MED J, V32, P211, DOI 10.4103/tcmj.tcmj_5_19
   Ortiz-Rojas M, 2017, PROC EUR CONF GAME, P507
   Papadopoulos PM, 2016, COMM COM INF SC, V583, P225, DOI 10.1007/978-3-319-29585-5_13
   Pedro LZ, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P214, DOI 10.1145/2695664.2695752
   Peixoto M., 2017, P S APPL COMP, P1108, DOI [DOI 10.1145/3019612.3019752, 10.1145/3019612, DOI 10.1145/3019612, 10.1145/3019612.3019752]
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pilkington C, 2018, INT REV RES OPEN DIS, V19, P282
   Piras L, 2017, INT CONF RES CHAL, P255, DOI 10.1109/RCIS.2017.7956544
   Prause CR, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P649, DOI 10.1145/2786805.2786806
   Putz LM, 2020, COMPUT HUM BEHAV, V110, DOI 10.1016/j.chb.2020.106392
   Rapp A, 2019, INT J HUM-COMPUT ST, V127, P1, DOI 10.1016/j.ijhcs.2018.11.007
   Rice JW, 2012, INT J GAMING COMPUT-, V4, P81, DOI 10.4018/jgcms.2012100106
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Seaborn K, 2015, INT J HUM-COMPUT ST, V74, P14, DOI 10.1016/j.ijhcs.2014.09.006
   Singer L., 2012, Proceedings 2012 2nd International Workshop on Games and Software Engineering: Realizing User Engagement with Game Engineering Techniques (GAS 2012), P5, DOI 10.1109/GAS.2012.6225927
   Teixeira da Silva JA, 2015, J NEGAT RESULTS BIOM, V14, DOI 10.1186/s12952-015-0033-9
   Tiefenbacher F., 2020, SYSTEMS SOFTWARE SER, DOI DOI 10.1007/978-3-030-56441-4
   Toda AM, 2018, COMM COM INF SC, V832, P143, DOI 10.1007/978-3-319-97934-2_9
   Klock ACT, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P2006, DOI 10.1145/3167132.3167347
   U. nations, Sustainable-Development-Goals-Report-2022
   Uchôa A, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR HEALTHCARE (SEH 2019), P9, DOI 10.1109/SEH.2019.00009
   van Roy R, 2019, INT J HUM-COMPUT ST, V127, P38, DOI 10.1016/j.ijhcs.2018.04.009
   van Roy R, 2019, INT J HUM-COMPUT ST, V127, P62, DOI 10.1016/j.ijhcs.2018.09.003
   Volkswagen, 2009, FUN THEOR 1 PIAN STA
   Volkswagen, 2009, FUN THEOR 3 IN VOLKS
   Volkswagen, 2009, FUN THEORY 2 IN VOLK
   Werbach K., 2012, For the win: How game thinking can revolutionize your business
   Werbach K., 2015, The gamification toolkit: Dynamics, mechanics, and components for the win
   Wohlin C., 2012, Experimentation in Software Engineering
   Wohlin C, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106366
   Zainuddin Z, 2020, EDUC RES REV-NETH, V30, DOI 10.1016/j.edurev.2020.100326
   Zaric N, 2020, INT J SERIOUS GAMES, V7, P3, DOI 10.17083/ijsg.v7i4.356
   Zichermann G., 2011, GAMIFICATION DESIGN
NR 118
TC 11
Z9 12
U1 2
U2 26
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2023
VL 156
AR 107142
DI 10.1016/j.infsof.2022.107142
EA JAN 2023
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8D5JS
UT WOS:000918330000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Moyano, CG
   Pufahl, L
   Weber, I
   Mendling, J
AF Moyano, Cielo Gonzalez
   Pufahl, Luise
   Weber, Ingo
   Mendling, Jan
TI Uses of business process modeling in agile software development projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Process models; Agile methodologies; Multi-method; Literature review;
   Thematic synthesis; Focus group
ID REQUIREMENTS; CHALLENGES; SCRUM; UML
AB Context: Agile methodologies and frameworks are widely used in software development projects because of their support for continuous change and delivery. Agile software development advocates de-prioritizing aspects such as processes and documentation. In traditional software engineering methodologies, however, business process models have been extensively used to support these aspects. Up until now, it is unclear to what extent recommendations to focus on code imply that conceptual modeling should be discontinued. Objective: The objective of this study is to investigate this hypothesis. More specifically, we develop a theoretical argument of how business process models are and can be used to support agile software development projects. Method: To this end, we use a multi-method study design. First, we conduct a systematic literature review, in which we identify studies on the usage of business process models in agile software development. Second, we apply procedures from thematic synthesis to analyze the connection between these uses and the phases of the development cycle. Third, we use a focus group design with practitioners to systematically reflect upon how these uses can help regarding four categories of challenges in agile software development: management, team, technology, and process. Results: From 37 relevant studies, we distill 15 different uses. The results highlight the benefits of process modeling as an instrument to support agile software development projects from different angles and in all project phases. Process modeling appears to be particularly relevant for the first phases of the development cycle, and for management and process issues in agile projects. Conclusion: We conclude that business process models indeed provide benefits for agile software development projects. Our findings have practical implications and emphasize the need for future research on modeling and agile development.
C1 [Moyano, Cielo Gonzalez; Mendling, Jan] Humboldt Univ, Chair Proc Management & Informat Syst, D-10099 Berlin, Germany.
   [Pufahl, Luise; Weber, Ingo] Tech Univ Berlin, Chair Software & Business Engn, D-10623 Berlin, Germany.
C3 Humboldt University of Berlin; Technical University of Berlin
RP Moyano, CG (corresponding author), Humboldt Univ, Chair Proc Management & Informat Syst, D-10099 Berlin, Germany.
EM c.gonzalez.moyano@hu-berlin.de
RI Weber, Ingo/C-9166-2011
OI Weber, Ingo/0000-0002-4833-5921
FU Einstein Foundation Berlin; Deutsche Forschungsgemeinschaft (DFG, German
   Research Foundation) , Germany [414984028 - SFB 1404 FONDA]
FX The research by Jan Mendling was supported by the Einstein Foundation
   Berlin, and the work of Cielo Gonz?lez Moyano was funded by the Deutsche
   Forschungsgemeinschaft (DFG, German Research Foundation) , Germany -
   Project-ID 414984028 - SFB 1404 FONDA.
CR Accompa Inc, 2021, ACC REQ MAN SOFTW
   Al-Zewairi M., 2017, Journal of Computer and Communications, V5, P74, DOI [10.4236/jcc.2017.55007, DOI 10.4236/JCC.2017.55007]
   Alfraihi H, 2017, MODELSWARD: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P451, DOI 10.5220/0006207004510458
   Ambler S.W, AGILE MODELING JUST
   Ambler S.W., 2021, AGILE MODELING PRINC
   Ambler Scott W., 2006, XOOTIC S 2006, V2006, P13
   Ambler Scott W., 2004, The Object Primer: Agile Model-Driven Development with UML
   [Anonymous], 2018, 624432018 IEC
   [Anonymous], 2013, PMBOK GUIDE
   [Anonymous], 2014, STAKEHOLDER GOAL ANA, DOI DOI 10.1007/978-3-662-43839-8
   Atlassian, 2021, CONFLUENCE
   Babar Z, 2015, LECT NOTES BUS INF P, V235, P322, DOI 10.1007/978-3-319-25897-3_21
   Baloian N, 2013, INT CONF E BUS ENG, P306, DOI 10.1109/ICEBE.2013.47
   Beck K., 2011, MANIFESTO AGILE SOFT
   Berrocal J, 2010, LECT NOTES COMPUT SC, V6156, P321, DOI 10.1007/978-3-642-13792-1_25
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Bourque P., 2014, SWEBOK GUIDE SOFTWAR
   Carvalho RAD, 2010, Arxiv, DOI arXiv:1005.4975
   Chaudron MRV, 2012, SOFTW SYST MODEL, V11, P571, DOI 10.1007/s10270-012-0278-4
   Cockburn A., 2006, AGILE SOFTWARE DEV C
   Cognini R, 2017, WEB 2017: THE FIFTH INTERNATIONAL CONFERENCE ON BUILDING AND EXPLORING WEB BASED ENVIRONMENTS, P39
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dännart S, 2019, LECT NOTES COMPUT SC, V11483, P529, DOI 10.1007/978-3-030-21290-2_33
   Denning Stephen, 2013, Strategy & Leadership, V41, P5, DOI 10.1108/10878571311318187
   Dieste O., 2001, HDB SOFTWARE ENG KNO, P733, DOI DOI 10.1142/9789812389718_0031
   Djan Elijah, 2020, Responsible Design, Implementation and Use of Information and Communication Technology. 19th IFIP WG 6.11 Conference on e-Business, e-Services, and e-Society, I3E 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12066), P370, DOI 10.1007/978-3-030-44999-5_31
   Dobrigkeit F, 2017, INT CONF ENG DES, P319
   DOJ, 2003, DEP JUST SYST DEV LI
   Dragicevic S, 2014, 2014 SIXTH INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE, COMMUNICATION SYSTEMS AND NETWORKS (CICSYN), P65, DOI 10.1109/CICSyN.2014.27
   Dumas M., 2018, FUNDAMENTALS BUSINES, DOI DOI 10.1007/978-3-642-33143-5.PDF
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Elallaoui M, 2016, PROCEDIA COMPUT SCI, V83, P221, DOI 10.1016/j.procs.2016.04.119
   Fernández-Sáez AM, 2018, EMPIR SOFTW ENG, V23, P3281, DOI 10.1007/s10664-018-9599-4
   Forbrig P, 2016, LECT NOTES BUS INF P, V261, P107, DOI 10.1007/978-3-319-45321-7_8
   García-Maldonado E, 2018, 2018 6TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2018), P146, DOI [10.1109/CONISOFT.2018.00028, 10.1109/CONISOFT.2018.8645910]
   Golra FR, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P24, DOI 10.1145/2976767.2976807
   Gotel O., 2012, SOFTWARE SYSTEMS TRA, P3, DOI [DOI 10.1007/978-1-4471-2239-5_1, 10.1007/978-1-4471-2239-5_1]
   Gupta A, 2019, PROC CEUR WORKSHOP, V2376, P18
   Hansson H. B. S., 2014, P XM 2014 3 EXTR MOD
   Herden A., 2015, NEW TRENDS NETWORKIN, P537
   Herden A, 2016, ADV INTELL SYST, V465, P413, DOI 10.1007/978-3-319-33622-0_37
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Highsmith J., 2002, Agile software development ecosystems
   Intland Software, 2021, CODEBEAMER
   Jalali A, 2012, LECT NOTES BUS INF P, V125, P23
   Jama Software Inc, 2021, JAM SOFTW
   JURECZKO M, 2007, SOFTWARE ENG PROGR
   Kassab Mohamad, 2018, 2018 IEEE International Professional Communication Conference (ProComm). Proceedings, P118, DOI 10.1109/ProComm.2018.00033
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   KORSON T, 1990, COMMUN ACM, V33, P40, DOI 10.1145/83880.84459
   KPMG, 2019, AG TRANSF AG EXP OP
   Layman L, 2006, INFORM SOFTWARE TECH, V48, P781, DOI 10.1016/j.infsof.2006.01.004
   Lederer M, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P342, DOI 10.1109/SEAA.2017.40
   Ling S., 1995, INT J OPER PROD MAN
   Lungu M, 2008, PROC IEEE INT CONF S, P428, DOI 10.1109/ICSM.2008.4658096
   Malinova M., 2022, COGNITIVE DIAGRAM UN
   Marchesi M, 2018, CEE-SECR'18: PROCEEDINGS OF THE 14TH CENTRAL AND EASTERN EUROPEAN SOFTWARE ENGINEERING CONFERENCE RUSSIA, DOI 10.1145/3290621.3290627
   Mendling J, 2008, LECT NOTES BUS INF P, V6, P1
   Mevius M., 2013, 5 INT C INF PROC KNO, P160
   Mingers J, 2001, INFORM SYST RES, V12, P240, DOI 10.1287/isre.12.3.240.9709
   Misra S, 2012, INT J QUAL RELIAB MA, V29, P972, DOI 10.1108/02656711211272863
   Morgan D. L., 1996, QUALITATIVE RES METH, V16
   Moyon F, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P31, DOI 10.1145/3194760.3194767
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Neubauer J, 2014, LECT NOTES COMPUT SC, V8802, P56, DOI 10.1007/978-3-662-45234-9_5
   Oberhauser R., 2017, Proc., P19
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   Ordóñez H, 2015, LECT NOTES COMPUT SC, V9155, P298, DOI 10.1007/978-3-319-21404-7_22
   Oriol M., 2019, Quality of Information and Communications Technology, P49
   Ouyang C, 2009, ACM T SOFTW ENG METH, V19, DOI 10.1145/1555392.1555395
   Pastrana M, 2018, LECT NOTES BUS INF P, V308, P649, DOI 10.1007/978-3-319-74030-0_52
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Politowski C, 2016, 2016 IEEE/ACM 5TH INTERNATIONAL WORKSHOP ON GAMES AND SOFTWARE ENGINEERING (GAS), P22, DOI [10.1145/2896958.2896960, 10.1109/GAS.2016.012]
   Polyvyanyy A, 2012, LECT NOTES COMPUT SC, V7481, P335, DOI 10.1007/978-3-642-32885-5_26
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Romano BL, 2019, ACTA SCI-TECHNOL, V41, DOI 10.4025/actascitechnol.v41i1.38349
   Royce W. W., 1987, P 9 INT C SOFTW ENG
   Rusu L, 2015, INT J COMPUT COMMUN, V10, P230, DOI 10.15837/ijccc.2015.2.1754
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Schreiber G., 2000, Knowledge Engineering and Management: The CommonKADS Methodology
   Shameem M, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1979
   Thurner V., 1997, CAISE
   Tripp JF, 2018, J COMPUT INFORM SYST, V58, P170, DOI 10.1080/08874417.2016.1220240
   Trkman M, 2016, INFORM SOFTWARE TECH, V71, P58, DOI 10.1016/j.infsof.2015.10.006
   Turetken O, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1796
   Valente P, 2017, L N INF SYST ORGAN, V22, P201, DOI 10.1007/978-3-319-52593-8_13
   Valente P, 2016, LECT NOTES COMPUT SC, V9856, P261, DOI 10.1007/978-3-319-44902-9_17
   VersionOne C., 2019, 13 ANN STAT AG REP
   Wagner S, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3306607
   Warnars HLHS, 2011, BEHAV INFORM TECHNOL, V30, P293, DOI 10.1080/01449290903186231
   Williams L, 2003, COMPUTER, V36, P39, DOI 10.1109/MC.2003.1204373
   Zaouali S., 2016, 2016 Third International Conference on Systems of Collaboration (SysCo), P1
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
   Zhang YF, 2011, IEEE SOFTWARE, V28, P84, DOI 10.1109/MS.2010.85
NR 98
TC 6
Z9 6
U1 6
U2 26
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2022
VL 152
AR 107028
DI 10.1016/j.infsof.2022.107028
EA AUG 2022
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4E9SM
UT WOS:000848158300005
DA 2024-07-18
ER

PT J
AU Awan, U
   Hannola, L
   Tandon, A
   Goyal, RK
   Dhir, A
AF Awan, Usama
   Hannola, Lea
   Tandon, Anushree
   Goyal, Raman Kumar
   Dhir, Amandeep
TI Quantum computing challenges in the software industry. A fuzzy AHP-based
   approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Fuzzy analytic hierarchy process (F-AHP); Software process automation;
   Multiple-criteria decision-making (MCDM); Quantum software requirement;
   Quantum computing
ID STATE; TECHNOLOGIES; ENTANGLEMENT; PERSPECTIVE; ALGORITHMS; PHOTON; BIT
AB Context: The current technology revolution has posed unexpected challenges for the software industry. In recent years, the field of quantum computing (QC) technologies has continued to grow in influence and maturity, and it is now poised to revolutionise software engineering. However, the evaluation and prioritisation of QC challenges in the software industry remain unexplored, relatively under-identified and fragmented.
   Objective: The purpose of this study is to identify, examine and prioritise the most critical challenges in the software industry by implementing a fuzzy analytic hierarchy process (F-AHP).
   Method: First, to identify the key challenges, we conducted a systematic literature review by drawing data from the four relevant digital libraries and supplementing these efforts with a forward and backward snowballing search. Second, we followed the F-AHP approach to evaluate and rank the identified challenges, or barriers.
   Results: The results show that the key barriers to QC adoption are the lack of technical expertise, information accuracy and organisational interest in adopting the new process. Another critical barrier is the lack of standards of secure communication techniques for implementing QC.
   Conclusion: By applying F-AHP, we identified institutional barriers as the highest and organisational barriers as the second highest global weight ranked categories among the main QC challenges facing the software industry. We observed that the highest-ranked local barriers facing the software technology industry are the lack of resources for design and initiative while the lack of organisational interest in adopting the new process is the most significant organisational barrier. Our findings, which entail implications for both academicians and practitioners, reveal the emergent nature of QC research and the increasing need for interdisciplinary research to address the identified challenges.
C1 [Awan, Usama; Hannola, Lea] Lappeenranta Lahti Univ Technol LUT, LUT Sch Engn Sci, Lappeenranta, Finland.
   [Tandon, Anushree] Univ Turku, Turku Sch Econ, Turku 20500, Finland.
   [Goyal, Raman Kumar] Thapar Inst Engn & Technol, Comp Sci & Engn Dept, Patiala, Punjab, India.
   [Dhir, Amandeep] North West Univ, Optentia Res Focus Area, Vanderbijlpark, South Africa.
   [Dhir, Amandeep] Univ Agder, Sch Business & Law, Dept Management, Kristiansand, Norway.
   [Dhir, Amandeep] Univ Stavanger, Norwegian Sch Hotel Management, Stavanger, Norway.
C3 Lappeenranta-Lahti University of Technology LUT; University of Turku;
   Thapar Institute of Engineering & Technology; North West University -
   South Africa; University of Agder; Universitetet i Stavanger
RP Awan, U (corresponding author), Lappeenranta Lahti Univ Technol LUT, LUT Sch Engn Sci, Lappeenranta, Finland.
EM usama.awan@lut.fi
RI Awan, Usama/K-5538-2013; Dhir, Amandeep/F-1826-2013
OI Awan, Usama/0000-0002-6185-9594; Dhir, Amandeep/0000-0002-6006-6058;
   Tandon, Anushree/0000-0002-7319-418X
CR Abura'ed N, 2017, ACM COMPUT SURV, V49, DOI 10.1145/3009965
   Access O., 2019, EUR QUANT FLAGSH IN, P0
   Ahsan M., 2015, ACM J EMERG TECH COM, V12, P1
   Ajagekar A, 2020, COMPUT CHEM ENG, V143, DOI 10.1016/j.compchemeng.2020.107119
   Ajagekar A, 2020, COMPUT CHEM ENG, V132, DOI 10.1016/j.compchemeng.2019.106630
   Ajagekar A, 2019, ENERGY, V179, P76, DOI 10.1016/j.energy.2019.04.186
   Akbar MA, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2292
   Allcock J., 2018, ARXIV, DOI [10.1145/3411466, DOI 10.1145/3411466]
   Almudever CG, 2017, DES AUT TEST EUROPE, P836, DOI 10.23919/DATE.2017.7927104
   [Anonymous], 2009, ARTIF INTELL
   Arute F, 2019, NATURE, V574, P505, DOI 10.1038/s41586-019-1666-5
   Badampudi D., 2015, P 19 INT C EV ASS SO, P1, DOI [10.1145/2745802.2745818, DOI 10.1145/2745802.2745818]
   Barad Karen., 2007, M UNIVERSE HALFWAY Q
   Barends R, 2014, NATURE, V508, P500, DOI 10.1038/nature13171
   Bayerstadler A, 2021, EPJ QUANTUM TECHNOL, V8, DOI 10.1140/epjqt/s40507-021-00114-x
   Benedetti M, 2016, PHYS REV A, V94, DOI 10.1103/PhysRevA.94.022308
   BENNETT CH, 1993, PHYS REV LETT, V70, P1895, DOI 10.1103/PhysRevLett.70.1895
   BENNETT CH, 1992, PHYS REV LETT, V68, P3121, DOI 10.1103/PhysRevLett.68.3121
   Bennett CH, 1997, SIAM J COMPUT, V26, P1510, DOI 10.1137/S0097539796300933
   Bernien H, 2013, NATURE, V497, P86, DOI 10.1038/nature12016
   Bernstein DJ, 2017, NATURE, V549, P188, DOI 10.1038/nature23461
   Bernstein E, 1997, SIAM J COMPUT, V26, P1411, DOI 10.1137/S0097539796300921
   Bhavin M, 2021, J INF SECUR APPL, V56, DOI 10.1016/j.jisa.2020.102673
   Biamonte J, 2017, NATURE, V549, P195, DOI 10.1038/nature23474
   Biswas R, 2017, PARALLEL COMPUT, V64, P81, DOI 10.1016/j.parco.2016.11.002
   Bong K.H., 2020, IEEE T ENG MANAG
   Boschi D, 1998, PHYS REV LETT, V80, P1121, DOI 10.1103/PhysRevLett.80.1121
   Chang DY, 1996, EUR J OPER RES, V95, P649, DOI 10.1016/0377-2217(95)00300-2
   Chang SH, 2017, TECHNOL FORECAST SOC, V118, P107, DOI 10.1016/j.techfore.2017.02.006
   Chiarello F, 2007, IEEE T APPL SUPERCON, V17, P124, DOI 10.1109/TASC.2007.897367
   CLARKSON MBE, 1995, ACAD MANAGE REV, V20, P92, DOI 10.2307/258888
   Córcoles AD, 2020, P IEEE, V108, P1338, DOI 10.1109/JPROC.2019.2954005
   Cuomo D, 2020, IET QUANTUM COMMUN, V1, P3, DOI 10.1049/iet-qtc.2020.0002
   Dadkhah M, 2020, J SYST SOFTWARE, V162, DOI 10.1016/j.jss.2019.110485
   de Avila AB, 2020, NEUROCOMPUTING, V393, P223, DOI 10.1016/j.neucom.2019.01.118
   Derian JD, 2020, SECUR DIALOGUE, V51, P399, DOI 10.1177/0967010620901905
   DEUTSCH D, 1985, P ROY SOC LOND A MAT, V400, P97, DOI 10.1098/rspa.1985.0070
   DiCarlo L, 2009, NATURE, V460, P240, DOI 10.1038/nature08121
   Ding J., 2009, Post-Quantum Cryptography, P193, DOI [10.1007/978-3-540-88702-76, DOI 10.1007/978-3-540-88702-76]
   DONALDSON T, 1995, ACAD MANAGE REV, V20, P65, DOI 10.5465/AMR.1995.9503271992
   Donkor E, 2002, P SOC PHOTO-OPT INS, V4732, P153, DOI 10.1117/12.477423
   Dunjko V., 2017, ARXIV
   Dyck B, 2017, J MANAGE INQUIRY, V26, P32, DOI 10.1177/1056492616656407
   Economou S.E., 2019, ARXIV, P1
   Egger Daniel J., 2020, IEEE Transactions on Quantum Engineering, V1, DOI 10.1109/TQE.2020.3030314
   Egger DJ, 2021, IEEE T COMPUT, V70, P2136, DOI 10.1109/TC.2020.3038063
   Engström H, 2018, ENTERTAIN COMPUT, V27, P10, DOI 10.1016/j.entcom.2018.02.008
   Eskandarpour R, 2020, IEEE T POWER SYST, V35, P4135, DOI 10.1109/TPWRS.2020.3004073
   Farhi E, 2014, Arxiv, DOI arXiv:1411.4028
   Fernández-Caramés TM, 2020, IEEE INTERNET THINGS, V7, P6457, DOI 10.1109/JIOT.2019.2958788
   Fernández-Caramés TM, 2020, IEEE ACCESS, V8, P21091, DOI 10.1109/ACCESS.2020.2968985
   Ferraro E, 2020, PHYS LETT A, V384, DOI 10.1016/j.physleta.2020.126352
   Freedman MH, 2003, B AM MATH SOC, V40, P31
   Gill S.S., 2020, SYSTEM REV FUT DIREC, P1
   Gill SS, 2022, SOFTWARE PRACT EXPER, V52, P66, DOI 10.1002/spe.3039
   Grover LK, 1997, PHYS REV LETT, V79, P325, DOI 10.1103/PhysRevLett.79.325
   Gyongyosi L, 2019, COMPUT SCI REV, V31, P51, DOI 10.1016/j.cosrev.2018.11.002
   Hahn T, 2021, ACAD MANAGE REV, V46, P362, DOI 10.5465/amr.2018.0408
   Harwood Stuart, 2021, IEEE Transactions on Quantum Engineering, V2, DOI 10.1109/TQE.2021.3049230
   Hassija V, 2020, IET QUANTUM COMMUN, V1, P42, DOI 10.1049/iet-qtc.2020.0027
   Henderson M, 2021, QUANT MACH INTELL, V3, DOI 10.1007/s42484-020-00034-6
   Horodecki R, 2009, REV MOD PHYS, V81, P865, DOI 10.1103/RevModPhys.81.865
   Imre S., 2012, Advanced Quantum Communications: An Engineering Approach
   Imre S, 2014, COMPUT ELECTR ENG, V40, P134, DOI 10.1016/j.compeleceng.2013.10.008
   Jiang H, 2018, TECHNOL FORECAST SOC, V135, P241, DOI 10.1016/j.techfore.2017.11.015
   Kato Z, 1996, JPN J HUM GENET, V41, P333, DOI 10.1007/BF01913177
   Khan AA, 2021, APPL SOFT COMPUT, V102, DOI 10.1016/j.asoc.2021.107090
   Khan AA, 2019, APPL SOFT COMPUT, V83, DOI 10.1016/j.asoc.2019.105648
   Kiefl Niklas, 2020, ECSEE '20. Proceedings of the 4th European Conference on Software Engineering Education, P27, DOI 10.1145/3396802.3396816
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Koziel B, 2017, IEEE T CIRCUITS-I, V64, P86, DOI 10.1109/TCSI.2016.2611561
   Kubler S, 2016, EXPERT SYST APPL, V65, P398, DOI 10.1016/j.eswa.2016.08.064
   Kurizki G, 2015, P NATL ACAD SCI USA, V112, P3866, DOI 10.1073/pnas.1419326112
   Lanyon BP, 2010, NAT CHEM, V2, P106, DOI [10.1038/NCHEM.483, 10.1038/nchem.483]
   Lesovik GB, 2019, SCI REP-UK, V9, DOI 10.1038/s41598-019-40765-6
   Li K, 2021, FUND RES-CHINA, V1, P85, DOI 10.1016/j.fmre.2020.12.001
   Li X., 2019, IEEE T ENG MANAG
   Maurer PC, 2012, SCIENCE, V336, P1283, DOI 10.1126/science.1220513
   Mavroeidis V, 2018, INT J ADV COMPUT SC, V9, P405
   Mielke A., 2019, PAMM, V19, DOI DOI 10.1002/PAMM.201900470
   Mills K, 2018, NURS EDUC TODAY, V69, P149, DOI 10.1016/j.nedt.2018.07.014
   Mistarihi MZ, 2020, APPL SOFT COMPUT, V90, DOI 10.1016/j.asoc.2020.106136
   Moher D, 2010, INT J SURG, V8, P336, DOI [10.1016/j.ijsu.2010.02.007, DOI 10.1016/j.ijsu.2010.02.007]
   Mohseni M, 2017, NATURE, V543, P171, DOI 10.1038/543171a
   Moller AM, 2016, BRIT J ANAESTH, V117, P428, DOI 10.1093/bja/aew264
   Monroe C, 2014, PHYS REV A, V89, DOI 10.1103/PhysRevA.89.022317
   Montanaro A, 2016, NPJ QUANTUM INFORM, V2, DOI 10.1038/npjqi.2015.23
   Ross OHM, 2020, IEEE ACCESS, V8, P814, DOI 10.1109/ACCESS.2019.2962155
   Mosca M, 2018, IEEE SECUR PRIV, V16, P38, DOI 10.1109/MSP.2018.3761723
   Mourao E, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2020.106294
   Mourik V, 2012, SCIENCE, V336, P1003, DOI 10.1126/science.1222360
   Mykhailova M, 2020, SIGCSE 2020: PROCEEDINGS OF THE 51ST ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P1019, DOI 10.1145/3328778.3366952
   Nayak C, 2008, REV MOD PHYS, V80, P1083, DOI 10.1103/RevModPhys.80.1083
   Ngo-The A, 2008, SOFT COMPUT, V12, P95, DOI [10.1007/S00500-007-0219-2, 10.1007/s00500-007-0219-2]
   Njorbuenwu M, 2019, 2019 2ND INTERNATIONAL CONFERENCE ON DATA INTELLIGENCE AND SECURITY (ICDIS 2019), P212, DOI 10.1109/ICDIS.2019.00039
   Ofek N, 2016, NATURE, V536, P441, DOI 10.1038/nature18949
   Orus Roman, 2019, Reviews in Physics, V4, P115, DOI 10.1016/j.revip.2019.100028
   Otorbaev D., 2021, QUANTUM COMPUTERS CH
   Outeiral C, 2021, WIRES COMPUT MOL SCI, V11, DOI 10.1002/wcms.1481
   Park CS, 1996, LIFE SCI, V59, P219, DOI 10.1016/0024-3205(96)00287-1
   Pérez-Castillo R, 2021, ADV ENG SOFTW, V151, DOI 10.1016/j.advengsoft.2020.102933
   Piattini Mario, 2020, ACM SIGSOFT Software Engineering Notes, V45, P12, DOI 10.1145/3402127.3402131
   PODSAKOFF PM, 1986, J MANAGE, V12, P531, DOI 10.1177/014920638601200408
   Poonia RC, 2016, J INFORM OPTIM SCI, V37, P279, DOI 10.1080/02522667.2015.1131024
   Qassim Yousef, 2017, 2017 International Conference on Computing, Networking and Communications (ICNC), P684, DOI 10.1109/ICCNC.2017.7876212
   Ravichandran T, 2005, IEEE T ENG MANAGE, V52, P249, DOI 10.1109/TEM.2005.844925
   SAATY RW, 1987, MATH MODELLING, V9, P161, DOI 10.1016/0270-0255(87)90473-8
   Saaty T. L., 1991, Prediction, projection, and forecasting: applications of the analytical hierarchy process in economics, finance, politics, games, and sports
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   Savchuk MM, 2019, CYBERN SYST ANAL+, V55, P10, DOI 10.1007/s10559-019-00107-w
   Schradle N, 2020, ZYGON, V55, P733, DOI 10.1111/zygo.12637
   Schuld M, 2015, CONTEMP PHYS, V56, P172, DOI 10.1080/00107514.2014.964942
   Seddiqi H, 2014, FRONT PHYS, V2, DOI 10.3389/fphy.2014.00079
   Shaikh TA, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY (CIT), P112, DOI 10.1109/CIT.2016.79
   Shaw K, 2012, EXPERT SYST APPL, V39, P8182, DOI 10.1016/j.eswa.2012.01.149
   Silva Ana, 2017, P 21 INT C EVALUATIO, P364, DOI [10.1145/3084226.3084262, DOI 10.1145/3084226.3084262]
   Somaschi N, 2016, NAT PHOTONICS, V10, P340, DOI [10.1038/nphoton.2016.23, 10.1038/NPHOTON.2016.23]
   Takeda K, 2016, SCI ADV, V2, DOI 10.1126/sciadv.1600694
   Taylor RD, 2020, TELECOMMUN POLICY, V44, DOI 10.1016/j.telpol.2020.101909
   Togan E, 2010, NATURE, V466, P730, DOI 10.1038/nature09256
   Uhlig R.P., 2019, 2019 IEEE FRONTIERS, P1
   Van Huijstee M.M., 2007, Environmental Sciences, V4, P75, DOI [10.1080/15693430701526336, DOI 10.1080/15693430701526336]
   Van Meter R., 2016, LOCAL DISTRIBUTED QU
   Veldhorst M, 2014, NAT NANOTECHNOL, V9, P981, DOI [10.1038/NNANO.2014.216, 10.1038/nnano.2014.216]
   Villalba-Diez J, 2020, SENSORS-BASEL, V20, DOI 10.3390/s20205856
   Wallquist M, 2009, PHYS SCRIPTA, VT137, DOI 10.1088/0031-8949/2009/T137/014001
   Wang JX, 2021, TECHNOL ANAL STRATEG, V33, P1347, DOI 10.1080/09537325.2021.1963429
   Wang L, 2008, T I MEAS CONTROL, V30, P313, DOI 10.1177/0142331207088191
   Wohlin C, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106366
   Wu W, 2021, FUND RES-CHINA, V1, P213, DOI 10.1016/j.fmre.2020.12.004
   Yao NY, 2012, NAT COMMUN, V3, DOI 10.1038/ncomms1788
   Younas M, 2018, INFORM SOFTWARE TECH, V103, P142, DOI 10.1016/j.infsof.2018.06.014
   Zable A., 2020, P 26 ACM S VIRTUAL R, P1
   Zahedinejad E, 2016, PHYS REV APPL, V6, DOI 10.1103/PhysRevApplied.6.054005
   Zhang Q, 2006, NAT PHYS, V2, P678, DOI 10.1038/nphys417
   Zidan M., 2018, Appl. Math. Inf. Sci, V12, P265, DOI [10.18576/amis/120127, DOI 10.18576/AMIS/120127]
   Zwanenburg FA, 2013, REV MOD PHYS, V85, P961, DOI 10.1103/RevModPhys.85.961
NR 138
TC 46
Z9 48
U1 3
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2022
VL 147
AR 106896
DI 10.1016/j.infsof.2022.106896
EA MAR 2022
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L8PL
UT WOS:000852891700010
OA hybrid, Green Published, Green Accepted
DA 2024-07-18
ER

PT J
AU Sahin, SE
   Özyedierler, EM
   Tosun, A
AF Sahin, Sefa Eren
   Ozyedierler, Ecem Mine
   Tosun, Ayse
TI Predicting vulnerability inducing function versions using node
   embeddings and graph neural networks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software vulnerabilities; Graph neural networks; Graph embeddings;
   Abstract syntax trees
AB Context: Predicting software vulnerabilities over code changes is a difficult task due to obtaining real vulnerability data and their associated code fixes from software projects as software organizations are often reluctant to report those. Objective: We aim to propose a vulnerability prediction model that runs after every code change, and identifies vulnerability inducing functions in that version. We also would like to assess the success of node and token based source code representations over abstract syntax trees (ASTs) on predicting vulnerability inducing functions. Method: We train neural networks to represent node embeddings and token embeddings over ASTs in order to obtain feature representations. Then, we build two Graph Neural Networks (GNNs) with node embeddings, and compare them against Convolutional Neural Network (CNN) and Support Vector Machine (SVM) with token representations. Results: We report our empirical analysis over the change history of vulnerability inducing functions of Wireshark project. GraphSAGE model using source code representation via ASTs achieves the highest AUC rate, while CNN models using token representations achieves the highest recall, precision and F1 measure. Conclusion: Representing functions with their structural information extracted from ASTs, either in token form or in complete graph form, is great at predicting vulnerability inducing function versions. Transforming source code into token frequencies as a natural language text fails to build successful models for vulnerability prediction in a real software project.
C1 [Sahin, Sefa Eren; Ozyedierler, Ecem Mine; Tosun, Ayse] Istanbul Tech Univ, Fac Comp & Informat Engn, Istanbul, Turkey.
   [Tosun, Ayse] Istanbul Tech Univ, Artificial Intelligence & Data Sci Res & Applicat, Istanbul, Turkey.
C3 Istanbul Technical University; Istanbul Technical University
RP Tosun, A (corresponding author), Istanbul Tech Univ, Fac Comp & Informat Engn, Istanbul, Turkey.
EM sahinsef@itu.edu.tr; ozyedierlere@itu.edu.tr; tosunay@itu.edu.tr
OI Tosun, Ayse/0000-0003-1859-7872; Ozyedierler, Ecem
   Mine/0000-0002-9448-5373
CR Allamanis M., 2018, INT C LEARN REPR ICL
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alon Uri, 2019, INT C LEARN REPR
   [Anonymous], CWE 2019 CWE TOP 25
   [Anonymous], go deep
   Bruna J., 2014, P INT C LEARN REPR
   Camilo F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P269, DOI 10.1109/MSR.2015.32
   Cao DF, 2020, IEEE INT CONF TRUST, P539, DOI 10.1109/TrustCom50675.2020.00078
   Chakraborty Saikat, 2020, CoRR abs/2009.07235 (2020). arXiv:2009.07235.
   Colas F, 2006, INT FED INFO PROC, V217, P169
   Eken B, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2381
   Garg A., 2020, ARXIV201211701
   Ghaffarian SM, 2021, INFORM SCIENCES, V553, P189, DOI 10.1016/j.ins.2020.11.053
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P163
   Grover A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P855, DOI 10.1145/2939672.2939754
   Hamilton WL, 2017, ADV NEUR IN, V30
   Hovsepyan A., 2012, P 4 INT WORKSH SEC M, P7
   ISO/IEC, 250102011 ISOIEC
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kipf TN, 2017, INT C LEARN REPR
   Li Y., 2016, ICLR, P1, DOI DOI 10.48550/ARXIV.1511.05493
   Liang HL, 2019, IEEE ACCESS, V7, P116309, DOI 10.1109/ACCESS.2019.2936948
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Maloof M.A., 2003, WORKSHOP LEARNING IM
   McIntosh S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P560, DOI 10.1145/3180155.3182514
   Meneely A., 2015, ART SCI ANAL SOFTWAR, P215, DOI 10.1016/B978-0-12-411519-4.00008-2
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mikolov T., 1 INT C LEARN REPR I
   Morrison P., 2015, P 2015 S BOOTCAMP SC
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Perozzi B, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P701, DOI 10.1145/2623330.2623732
   Piessens Frank, 2002, P 13 INT S SOFTW REL, P47
   Pornprasit C, 2021, IEEE WORK CONF MIN S, P369, DOI 10.1109/MSR52588.2021.00049
   Sahin S.E., 2022, INF SOFTW TECHNOL, V2022, DOI 10.17632/ymtf9znmfz.1
   Sahin S.E., GNN VULNERABILITY PR
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Schlichtkrull M, 2018, LECT NOTES COMPUT SC, V10843, P593, DOI 10.1007/978-3-319-93417-4_38
   Schrouff J.V., 2019, ICLR, P14
   Shein Khin Phyu Phyu, 2010, Proceedings of the Second International Conference on Communication Software and Networks (ICCSN 2010), P169, DOI 10.1109/ICCSN.2010.35
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Spanos Georgios, 2017, Pan-Hellenic conference on informatics, P1
   Suneja S., 2020, Learning to map source code to software vulnerability using code-as-agraph
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Wu ZH, 2021, IEEE T NEUR NET LEAR, V32, P4, DOI 10.1109/TNNLS.2020.2978386
   Xu K, 2019, IEEE VTS VEH TECHNOL, DOI [10.1109/vtcfall.2019.8891597, 10.1109/biocas.2019.8918711]
   Yamaguchi F, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P359
   Zhang Y, 2015, IEEE INT C ENG COMP, P40, DOI 10.1109/ICECCS.2015.15
   Zheng W, 2020, PROCEEDINGS OF THE 2020 IEEE 2ND INTERNATIONAL WORKSHOP ON INTELLIGENT BUG FIXING (IBF '20), P26, DOI [10.1109/IBF50092.2020.9034888, 10.1109/ibf50092.2020.9034888]
   Zhou J, 2020, AI OPEN, V1, P57, DOI 10.1016/j.aiopen.2021.01.001
   Zhou YQ, 2019, ADV NEUR IN, V32
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
NR 56
TC 2
Z9 2
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2022
VL 145
DI 10.1016/j.infsof.2022.106822
EA JAN 2022
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YK2ON
UT WOS:000745059100002
DA 2024-07-18
ER

PT J
AU Makedonski, P
   Grabowski, J
AF Makedonski, Philip
   Grabowski, Jens
TI Facilitating the co-evolution of semantic descriptions in standards and
   models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Modelling; Standards; Maintenance; Traceability; Semantics; Duplication
ID TRACEABILITY; REQUIREMENTS; SUPPORT; CODE
AB Context: Standardised specifications for sophisticated technologies are subdivided in multiple documents maintained by different working groups, typically accompanied by models and other formalised artefacts. As the specifications and the models evolve, ensuring their consistency at scale becomes challenging. Objective: While previous work developed a methodology for facilitating the co-evolution of models and standards, based on the Network Function Virtualisation (NFV) Information Model (IM) and models extracted from the related standardised specifications, the methodology focused on structural aspects only. This article refines the methodology, enabling the alignment of semantic descriptions of information elements and attributes, both across specifications and across information elements. Method: To enable the alignment of semantic descriptions, we extend the methodology by using statistical and visual analyses of terms used in the specifications. The underlying meta-model for the information extracted from the specifications is extended to accommodate the capturing of additional semantic information. Results: We report on our experiences with the application of a prototypical implementation of the methodology during the continued alignment and maintenance of the IM and the related standardised specifications. More than 400 potential inconsistencies were identified, leading to more than 100 contributions, some of which addressed multiple findings. Feedback from the working group provided insights on how to refine the methodology further. Conclusions: Models shall play a more central role and be better integrated throughout the specification development and implementation processes, helping to ensure and maintain consistency among specifications. Our experiences may provide useful insights into ongoing and future initiatives where similar challenges are faced.
C1 [Makedonski, Philip; Grabowski, Jens] Univ Gottingen, Inst Comp Sci, Goldschmidtstr 7, Gottingen, Germany.
C3 University of Gottingen
RP Makedonski, P (corresponding author), Univ Gottingen, Inst Comp Sci, Goldschmidtstr 7, Gottingen, Germany.
EM makedonski@cs.uni-goettingen.de; grabowski@cs.uni-goettingen.de
FU European Telecommunications Standards Institute (ETSI), in the context
   of the Specialist Task Force (STF) 570
FX This work was partially supported by the European Telecommunications
   Standards Institute (ETSI), in the context of the Specialist Task Force
   (STF) 570.
CR Alalfi M. H., 2012, 2012 Proceedings of the 6th International Workshop on Software Clones (IWSC 2012), P78, DOI 10.1109/IWSC.2012.6227873
   Antoniol G, 2000, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2000.883003
   Balint M, 2006, INT C PROGRAM COMPRE, P56, DOI 10.1109/ICPC.2006.25
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Berardinelli L, 2015, IEEE INT C EMERG
   Borg M, 2014, EMPIR SOFTW ENG, V19, P1565, DOI 10.1007/s10664-013-9255-y
   Cleland-Huang J, 2007, COMPUTER, V40, P27, DOI 10.1109/MC.2007.195
   Cleland-Huang J, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P6, DOI 10.1109/TEFSE.2009.5069575
   Dag JNO, 2006, EMPIR SOFTW ENG, V11, P303, DOI 10.1007/s10664-006-6405-5
   David J, 2009, P INT COMP SOFTW APP, P340, DOI 10.1109/COMPSAC.2009.52
   Deissenboeck F., 2010, P 4 INT WORKSH SOFTW, P57, DOI [10.1145/1808901.1808909, DOI 10.1145/1808901.1808909]
   Deissenboeck F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P603, DOI 10.1145/1368088.1368172
   Ducasse S., 2011, MSE and FAMIX 3.0: an interexchange format and source code model family
   Ens B, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P117, DOI 10.1109/VISSOFT.2014.28
   FRUCHTERMAN TMJ, 1991, SOFTWARE PRACT EXPER, V21, P1129, DOI 10.1002/spe.4380211102
   Galvao I, 2007, IEEE INT ENTERP DIST, P313, DOI 10.1109/EDOC.2007.42
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Hummel Benjamin., 2011, Proceedings of the 5th International Workshop on Software Clones, IWSC '11, P21, DOI [10.1145/1985404.1985409, DOI 10.1145/1985404.1985409]
   Juergens E., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P79, DOI 10.1145/1810295.1810308
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Landhäusser M, 2014, SOFTWARE QUAL J, V22, P121, DOI 10.1007/s11219-013-9210-6
   Landhauser M., 2012, 2012 Proceedings of the First International Workshop on Realizing Artificial Intelligence Synergies in Software Engineering (RAISE 2012), P22, DOI 10.1109/RAISE.2012.6227965
   Makedonski P, 2019, LECT NOTES COMPUT SC, V11753, P219, DOI 10.1007/978-3-030-30690-8_13
   Maro S, 2016, IEEE INT CONF AUTOM, P414, DOI 10.1145/2970276.2970314
   Parizi RM, 2014, IEEE T RELIAB, V63, P913, DOI 10.1109/TR.2014.2338254
   Roy J. R., 2007, QUEENS SCH COMPUTING, V541, P64
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   Wnuk K, 2012, EMPIR SOFTW ENG, V17, P305, DOI 10.1007/s10664-011-9174-8
   Yu L, 2007, EMPIR SOFTW ENG, V12, P123, DOI 10.1007/s10664-006-9000-x
   Zhang Yakun, 2020, P 29 ACM SIGSOFT INT, P528
NR 33
TC 0
Z9 0
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2022
VL 143
AR 106763
DI 10.1016/j.infsof.2021.106763
EA DEC 2021
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XK9HO
UT WOS:000727767300001
DA 2024-07-18
ER

PT J
AU Domingo, A
   Echeverría, J
   Pastor, O
   Cetina, C
AF Domingo, Africa
   Echeverria, Jorge
   Pastor, Oscar
   Cetina, Carlos
TI Evaluating the influence of scope on feature location
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Feature location; Controlled experiment; Model-driven engineering
ID MODELS; INFORMATION; FAMILIES
AB Context: Feature Location (FL) is a widespread technique that is used to maintain and evolve a software product. FL is also helpful in reengineering a family of software products into a Software Product Line (SPL). Despite the popularity of FL, there is no study that evaluates the influence of scope (single product or product family) when engineers perform FL. Objective: The goal of this paper is to compare the performance, productivity, and perceived difficulty of manual FL when scope changes from a single product to a product family. Method: We conducted a crossover experiment to compare the performance, productivity, and perceived difficulty of manual FL when scope changes. The experimental objects are extracted from a real-world SPL that uses a Domain-Specific Language to generate the firmware of its products. Results: Performance and productivity decrease significantly when engineers locate features in a product family regardless of their experience. For these variables the impact of the FL Scope is medium-large. On contrast, for perceived difficulty, the magnitude of the difference is moderate and is not significant. Conclusions: While performance and productivity decrease significantly when engineers locate features in a product family, the difficulty they perceive does not predict the significant worsening of the results. Our work also identifies strengths and weaknesses in FL. This can help in developing better FL approaches and test cases for evaluation.
C1 [Domingo, Africa; Echeverria, Jorge; Cetina, Carlos] Univ San Jorge, SVIT Res Grp, Zaragoza, Spain.
   [Pastor, Oscar] Univ Poliecn Valencia, PROS Res Ctr, Valencia, Spain.
C3 Universidad San Jorge; Universitat Politecnica de Valencia
RP Domingo, A (corresponding author), Univ San Jorge, SVIT Res Grp, Zaragoza, Spain.
EM adomingo@usj.es; jecheverria@usj.es; opastor@dsic.upv.es; ccetina@usj.es
RI Echeverria, Jorge/AAB-8222-2022; Pastor Lopez, Oscar/S-4216-2016;
   Cetina, Carlos/P-8682-2017
OI Echeverria, Jorge/0000-0001-7272-7047; Domingo,
   Africa/0000-0003-3007-6367; Pastor Lopez, Oscar/0000-0002-1320-8471;
   Cetina, Carlos/0000-0001-8542-5515
CR Arcega L., 2015, PROC INT WORKSHOP MO, P51
   Assunçao WKG, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106198
   Ballarín M, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P189, DOI 10.1145/3239372.3239397
   Batory D, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P13
   Berger Thorsten, 2013, 7 INT WORKSH VAR MOD, DOI DOI 10.1145/2430502.2430513
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   Blasco D, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110804
   Calder M, 2003, COMPUT NETW, V41, P115, DOI 10.1016/S1389-1286(02)00352-3
   Cetina C, 2017, J SYST SOFTWARE, V134, P261, DOI 10.1016/j.jss.2017.09.022
   Cohen J., 1988, STAT POWER ANAL BEHA
   Damevski K, 2016, EMPIR SOFTW ENG, V21, P724, DOI 10.1007/s10664-015-9373-9
   Echeverría J, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106444
   Font J, 2018, IEEE T EVOLUT COMPUT, V22, P363, DOI 10.1109/TEVC.2017.2751100
   Font J, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P272, DOI 10.1145/2976767.2976789
   Galecki A.T., 2014, LINEAR MIXED MODELS, DOI DOI 10.1201/B17198
   Ji Wenbin, 2015, INT SYST SOFTW PROD, P61, DOI DOI 10.1145/2791060.2791107
   Jinshui Wang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P213, DOI 10.1109/ICSM.2011.6080788
   Jordan H, 2015, INT C PROGRAM COMPRE, P174, DOI 10.1109/ICPC.2015.26
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Krüger J, 2017, ACM INT CONF PR SER, P105, DOI 10.1145/3168365.3168371
   Kruger Jacob, 2019, Software Engineering for Variability Intensive Systems, P153, DOI 10.1201/9780429022067-7
   Lai A., 1999, MULT SEP WORKSH
   Marcén AC, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P57, DOI 10.1145/3109729.3109734
   Martinez J, 2015, IEEE INT CONF AUTOM, P396, DOI 10.1109/ASE.2015.44
   O.M.G, 2013, MET FAC MOF VERS 2 4
   Panach JI, 2015, INFORM SOFTWARE TECH, V62, P164, DOI 10.1016/j.infsof.2015.02.012
   Pastor O., 2007, MODEL DRIVEN ARCHITE
   Pérez F, 2020, INFORM SOFTWARE TECH, V125, DOI 10.1016/j.infsof.2020.106337
   Pérez F, 2019, AUTOMAT SOFTW ENG, V26, P161, DOI 10.1007/s10515-019-00251-9
   Pérez F, 2018, INFORM SOFTWARE TECH, V103, P188, DOI 10.1016/j.infsof.2018.06.017
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Reinhartz-Berger I, 2005, EMPIR SOFTW ENG, V10, P57, DOI 10.1023/B:EMSE.0000048323.40484.e0
   Revelle M, 2005, PROG COMPREHEN, P23, DOI 10.1109/WPC.2005.43
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Starke J, 2009, PROC IEEE INT CONF S, P157, DOI 10.1109/ICSM.2009.5306335
   Stehman SV, 1997, REMOTE SENS ENVIRON, V62, P77, DOI 10.1016/S0034-4257(97)00083-7
   Vegas S, 2016, IEEE T SOFTWARE ENG, V42, P120, DOI 10.1109/TSE.2015.2467378
   Wang JS, 2013, J SOFTW-EVOL PROC, V25, P1193, DOI 10.1002/smr.1593
   Wilde N, 2003, J SYST SOFTWARE, V65, P105, DOI [10.1016/S0164-1212(02)00052-3, 10.1016/s0164-1212(02)00052-3]
   Wohlin C., 2012, Experimentation in Software Engineering
NR 43
TC 0
Z9 0
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2021
VL 140
AR 106674
DI 10.1016/j.infsof.2021.106674
EA JUL 2021
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UY8FG
UT WOS:000701752600014
OA Green Published
DA 2024-07-18
ER

PT J
AU Mendes, F
   Mendes, E
   Salleh, N
   Oivo, M
AF Mendes, Fabiana
   Mendes, Emilia
   Salleh, Norsaremah
   Oivo, Markku
TI Insights on the relationship between decision-making style and
   personality in software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Decision-making style; Personality; Software engineering
ID PROJECT-MANAGEMENT
AB Context: Software development involves many activities, and decision making is an essential one. Various factors can impact a decision-making process, and by understanding such factors, one can improve the process. Since people are the ones making decisions, some human-related aspects are amongst those influencing factors. One such aspect is the decision maker's personality. Objective: This research investigates the relationship between decision-making style and personality within the context of software project development. Method: We conducted a survey in a population of Brazilian software engineers to gather data on their personality and decision-making style. Results: Data from 63 participants was gathered and resulted in the identification of seven statistically significant correlations between decision-making style and personality (personality factor and personality facets). Furthermore, we built a regression model in which decision-making style (DMS) was the response variable and personality factors the independent variables. The backward elimination procedure selected only agreeableness to explain 4.2% of DMS variation. The model accuracy was evaluated and deemed good enough. Regarding the moderation effect of demographic variables (age, educational level, experience, and role) on the relationship between DMS and Agreeableness, the analysis showed that only software engineers' role has such effect.
   Conclusion: This paper contributes toward understanding the relationship between DMS and personality. Results show that the personality variable agreeableness can explain the variation in decision-making style. Furthermore, someone's role in a software development project can impact the strength of the relationship between DMS and agreeableness.
C1 [Mendes, Fabiana; Oivo, Markku] Univ Oulu, Fac Informat Technol & Elect Engn, POB 3000, Oulu 90014, Finland.
   [Mendes, Fabiana] Univ Brasilia, Fac UnB Gama, BR-72444240 Brasilia, DF, Brazil.
   [Mendes, Emilia] Blekinge Inst Technol, Dept Comp Sci, Karlskrona, Sweden.
   [Salleh, Norsaremah] IIUM, Dept Comp Sci, POB 10, Kuala Lumpur 50728, Malaysia.
C3 University of Oulu; Universidade de Brasilia; Blekinge Institute
   Technology; International Islamic University Malaysia
RP Mendes, F (corresponding author), Univ Brasilia, Fac UnB Gama, BR-72444240 Brasilia, DF, Brazil.
EM fabiana.mendes@oulu.fi; emilia.mendes@bth.se; norsaremah@iium.edu.my;
   markku.oivo@oulu.fi
RI Salleh, Norsaremah/AFU-5066-2022; Mendes, Maria E/B-4207-2015; Mendes,
   Fabiana/AAH-5593-2019
OI Salleh, Norsaremah/0000-0001-5625-7014; Mendes,
   Fabiana/0000-0002-1724-2044; Mendes, Emilia/0000-0003-0449-5322; Oivo,
   Markku/0000-0002-1698-2323
CR Abatecola G, 2013, J MANAG GOV, V17, P1073, DOI 10.1007/s10997-011-9189-y
   Albayrak Ö, 2009, ASIA PAC SOFWR ENG, P333, DOI 10.1109/APSEC.2009.39
   [Anonymous], 2000, REVISED NEO PERSONAL
   [Anonymous], 2017, The scrum guide: the definitive guide to scrum
   [Anonymous], 2002, ACM SIGSOFT SOFTW EN, DOI DOI 10.1145/571681.571686
   [Anonymous], 2012, Applied Social Research Method Series
   [Anonymous], 2009, PROC IEEE 13 INT MUL
   [Anonymous], 1973, LEADERSHIP DECISION
   Babyak MA, 2004, PSYCHOSOM MED, V66, P411, DOI 10.1097/01.psy.0000127692.23278.a9
   Barroso AS, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 3, P53, DOI 10.5220/0006292000530062
   Bergner RM, 2011, NEW IDEAS PSYCHOL, V29, P147, DOI 10.1016/j.newideapsych.2010.08.001
   Boddy D., 2008, MANAGEMENT INTRO, P209
   Burge Janet E., 2008, RATIONALE BASED SOFT, P67, DOI DOI 10.1007/978-3-540-77583-6_5
   Burger J.M., 2010, PERSONALITY, P162
   Butcher J.N., 2009, OXFORD HDB PERSONALI, P306
   Button KS, 2013, NAT REV NEUROSCI, V14, P365, DOI 10.1038/nrn3475
   Calefato Fabio, 2018, 2018 IEEE/ACM 13th International Conference on Global Software Engineering (ICGSE), P87, DOI 10.1145/3196369.3196372
   Capilla R, 2020, LECT NOTES COMPUT SC, V12292, P231, DOI 10.1007/978-3-030-58923-3_16
   Carver C.S., 2012, PERSPECTIVES PERSONA, P2
   Cervone D., 2012, PERSONALITY THEORY R, P7
   Charette RN, 2005, IEEE SPECTRUM, V42, P42, DOI 10.1109/MSPEC.2005.1502528
   Coelho J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P186, DOI 10.1145/3106237.3106246
   Colomo-Palacios R, 2013, BEHAV INFORM TECHNOL, V32, P1077, DOI 10.1080/0144929X.2011.630414
   Coyle S, 2013, INT J INTELL INF TEC, V9, P38, DOI 10.4018/jiit.2013040104
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Cunha JAOG, 2016, PROCEDIA COMPUT SCI, V100, P947, DOI 10.1016/j.procs.2016.09.255
   Dorst K, 2011, DESIGN STUD, V32, P521, DOI 10.1016/j.destud.2011.07.006
   Drury-Grogan ML, 2013, INT J INF TECH DECIS, V12, P1097, DOI 10.1142/S0219622013400105
   Dybå T, 2014, IEEE SOFTWARE, V31, P32, DOI 10.1109/MS.2014.97
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Feldt R., 2008, INT WORKSHOP COOPERA, P49, DOI DOI 10.1145/1370114.1370127
   Field A.P., 2009, DISCOVERING STAT USI, P222
   Fink A., 2013, CONDUCT SURVEYS STEP, P109
   Fitzgerald S.P., 2002, Decision making, P12
   Gaubatz P, 2015, J SYST SOFTWARE, V103, P128, DOI 10.1016/j.jss.2015.01.056
   Glube, 1978, LEADERSHIP DECISION
   Halim Z., 2017, IEEE T AFFECT COMPUT
   Hannay JE, 2010, IEEE T SOFTWARE ENG, V36, P61, DOI 10.1109/TSE.2009.41
   Hogan R., 1997, HDB PERSONALITY PSYC, P5
   HUNT RG, 1989, ORGAN BEHAV HUM DEC, V44, P436, DOI 10.1016/0749-5978(89)90018-6
   Jia JD, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P86, DOI [10.1109/CHASE.2016.026, 10.1145/2897586.2897589]
   Johnson J.A., 2019, DESCRIPTIONS USED IP
   Johnson JA, 2014, J RES PERS, V51, P78, DOI 10.1016/j.jrp.2014.05.003
   Kanij T, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P1, DOI 10.1109/CHASE.2015.7
   Kasunic M., 2005, Tech. Rep..
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Klein G., 1997, ALCFTR19970155 US AI
   Landau S., 2003, HDB STAT ANAL USING, P41
   Lytra I., 2013, P 1 INT SOFTW ENG SY, P43, DOI DOI 10.1145/2489850.2489859
   Malavolta I, 2014, LECT NOTES COMPUT SC, V8785, P9, DOI 10.1007/978-3-319-12241-0_2
   McAvoy J, 2009, EUR J INFORM SYST, V18, P372, DOI 10.1057/ejis.2009.22
   Medina A, 2015, PROJ MANAG J, V46, P81, DOI 10.1002/pmj.21530
   Mendes E., 2007, P 16 INT C WORLD WID, P963, DOI DOI 10.1145/1242572.124702
   Mendes FF, 2019, INFORM SOFTWARE TECH, V111, P50, DOI 10.1016/j.infsof.2019.03.010
   Moe NB, 2012, INFORM SOFTWARE TECH, V54, P853, DOI 10.1016/j.infsof.2011.11.006
   Muller R., 2009, INT J MANAG PROJECTS
   Power K, 2019, LECT NOTES COMPUT SC, V11681, P55, DOI 10.1007/978-3-030-29983-5_4
   Razavian M, 2016, J SOFTW-EVOL PROC, V28, P394, DOI 10.1002/smr.1776
   Rose J, 2007, INFORM SOFTWARE TECH, V49, P605, DOI 10.1016/j.infsof.2007.02.005
   Salleh N, 2009, INT SYMP EMP SOFTWAR, P214, DOI 10.1109/ESEM.2009.5315997
   Schon D., 2001, SUPPORTING LIFELONG, V1, P40
   Schuurman D, 2016, TECHNOL INNOV MANAG, P7
   Selart M., 2005, MANAGE DECIS, V43, P397
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Vroom V.H., 1974, DECISION SCI, V5, P743
   Vroom V.H., 1988, NEW LEADERSHIP MANAG
   Weiner I., 2008, HDB PERSONALITY ASSE, P315
   Williams C., 2016, MGMT PRINCIPLES MANA, P99
   Wohlin C., 2012, EXPT SOFTWARE ENG, P39
   Wright H. K., 2010, P FSE SDP WORKSH FUT, P411, DOI [10.1145/1882362.1882446, DOI 10.1145/1882362.1882446]
NR 70
TC 7
Z9 7
U1 1
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2021
VL 136
AR 106586
DI 10.1016/j.infsof.2021.106586
EA APR 2021
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA SJ2MZ
UT WOS:000655363900007
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Ahrens, M
   Schneider, K
AF Ahrens, Maike
   Schneider, Kurt
TI Improving requirements specification use by transferring attention with
   eye tracking data
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Attention transfer; Software requirements specification; Requirements
   document; Eye tracking; Visualization; Empirical study
AB Context: Software requirements specifications are the main point of reference in traditional software projects. Especially in large projects, these documents get read by multiple people, multiple times. Several guidelines and templates already exist to support writing a good specification. However, not much research has been done in investigating how to support the use of specifications and help readers to find relevant information and navigate in the document more efficiently.
   Objective: We aim to ease the reading process of requirements specifications by making use of previously recorded attention data. Therefore, we created three different attention transfer features based on eye tracking data obtained from observing readers when using specifications.
   Method: In a student experiment, we evaluated if these attention visualizations positively affect the roles software architect, UI-designer and tester when reading a specification for the first time.
   Results: The results show that the attention visualizations did not decrease navigation effort, but helped to draw the readers' attention towards highlighted parts and decreased the average time spent on pages. They were mostly perceived as valuable by the readers.
   Conclusions: We explored and evaluated the approach of visualizing other readers' attention focus to help support new readers. Our results include interesting findings on what works well, what does not and what could be enhanced. We present several suggestions on how attention data could be used to fasten document navigation, direct reading and facilitate user-specific reading.
C1 [Ahrens, Maike; Schneider, Kurt] Leibniz Univ Hannover, Software Engn Grp, Welfengarten 1, D-30167 Hannover, Germany.
C3 Leibniz University Hannover
RP Ahrens, M (corresponding author), Leibniz Univ Hannover, Software Engn Grp, Welfengarten 1, D-30167 Hannover, Germany.
EM maike.ahrens@inf.uni-hannover.de; kurt.schneider@inf.uni-hannover.de
OI Schneider, Kurt/0000-0002-7456-8323; Ahrens, Maike/0000-0002-9577-0598
CR Adam S., 2014, REQUIR ENG MAG, V4
   Ahrens M, 2020, LECT NOTES COMPUT SC, V12045, P36, DOI 10.1007/978-3-030-44429-7_3
   Ahrens M, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL WORKSHOP ON EYE MOVEMENTS IN PROGRAMMING (EMIP 2019), P2, DOI 10.1109/EMIP.2019.00009
   Ahrens M, 2016, LECT NOTES COMPUT SC, V9619, P301, DOI 10.1007/978-3-319-30282-9_21
   Basili V.R., GOAL QUESTION METRIC, VI
   Bednarik R., 2018, P 18 KOL CALL INT C, P1
   Bednarik R, 2012, INT J HUM-COMPUT ST, V70, P143, DOI 10.1016/j.ijhcs.2011.09.003
   Crosby M.E., 2002, ROLES BEACONS PLAY C, P58
   D'Angelo S, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P6245, DOI 10.1145/3025453.3025573
   De Smet B, 2014, SCI COMPUT PROGRAM, V79, P260, DOI 10.1016/j.scico.2012.01.004
   Deitelhoff F, 2018, IEEE INT CONF ADV LE, P77, DOI 10.1109/ICALT.2018.00116
   DeLine Robert., 2005, SOFTVIS 05, P183, DOI [10.1145/1056018.1056044, DOI 10.1145/1056018.1056044]
   Fricker S, 2010, LECT NOTES COMPUT SC, V6182, P60, DOI 10.1007/978-3-642-14192-8_7
   Gotel OCZ, 2009, INFORMATION VISUALIZATION, IV 2009, PROCEEDINGS, P519, DOI 10.1109/IV.2009.61
   Gross A., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P171, DOI 10.1109/RE.2012.6345801
   Hill W. C., 1992, CHI '92 Conference Proceedings. ACM Conference on Human Factors in Computing Systems. Striking a Balance, P3, DOI 10.1145/142750.142751
   Kalyuga S, 2012, EDUC PSYCHOL REV, V24, P313, DOI 10.1007/s10648-012-9195-x
   Kersten M, 2005, P 2005 INT C ASP OR, P159, DOI DOI 10.1145/1052898.1052912
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Kevic K, 2017, J SYST SOFTWARE, V128, P252, DOI 10.1016/j.jss.2016.03.030
   MCLAUGHLIN GH, 1969, J READING, V12, P639
   Parnin C, 2006, INT C PROGRAM COMPRE, P13, DOI 10.1109/ICPC.2006.14
   Robertson S., 2012, MASTERING REQUIREMEN
   Robillard M.P., PROGRAM NAVIGATION A
   Robillard M.P, 2009, TOPOLOGY, V31, P339
   Schneider K, 2006, RATIONAL MANAGEMENT IN SOFTWARE ENGINEERING, P91
   Sharafi Z, 2020, EMPIR SOFTW ENG, V25, P3128, DOI 10.1007/s10664-020-09829-4
   SHARIF B., 2011, Proceedings of the 6th International Workshop on Traceability in Emerging Forms of Software Engineering (TEFSE), P67, DOI DOI 10.1145/1987856.1987872
   Solingen R. V., 1999, GOAL QUESTION METRIC
   Stein Randy., 2004, Proceedings of the 6th international conference on Multimodal interfaces, P9, DOI DOI 10.1145/1027933.1027936
   Treude C, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P649, DOI 10.1109/ICSE.2015.214
   Treude C, 2015, IEEE T SOFTWARE ENG, V41, P565, DOI 10.1109/TSE.2014.2387172
   Wohlin C., 2012, Experimentation in Software Engineering
   Zhu Yang-Ming., 2016, Software Reading Techniques: Twenty Techniques for More Effective Software Review and Inspection
NR 34
TC 6
Z9 7
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2021
VL 131
AR 106483
DI 10.1016/j.infsof.2020.106483
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LB
UT WOS:000614250000013
DA 2024-07-18
ER

PT J
AU Li, ZL
   Jiang, ZW
   Chen, X
   Cao, KB
   Gu, Q
AF Li, Zhengliang
   Jiang, Zhiwei
   Chen, Xiang
   Cao, Kaibo
   Gu, Qing
TI Laprob: A Label propagation-Based software bug localization method
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bug localization; Label propagation; Biparty hybrid graph; Bug report
ID FAULT LOCALIZATION; RETRIEVAL; RANKING
AB Context: Bug localization, which locates suspicious snippets related to the bugs mentioned in the bug reports, is time-consuming and laborious. Many automatic bug localization methods have been proposed to speed up the process of bug fixing and reduce the burden on developers. However, these methods have not fully utilized the intra-relations and inter-relations among the bug reports and the source files (i.e., call relationships between the source files).
   Objective: In this paper, we propose a novel method LaProb (a label propagation-based software bug localization method) that makes full use of the intra-relations and inter-relations among the bug reports and the source files.
   Method: LaProb transforms the problem of bug localization into a multi-label distribution learning problem. LaProb first constructs a BHG (Biparty Hybrid Graph) by analyzing the structures and contents of bug reports and source files, and calculates the intra-relations between pairs of bug reports and source files, as well as the interrelations between bug reports and source files. Based on BHG, LaProb then predicts the label distribution on source files by using the label propagation algorithm for the target bug report. Finally, LaProb finishes the bug localization task by sorting the results of label propagation.
   Results: The experimental results on nine open-source software projects (i.e., SWT, AspectJ, Eclipse, ZXing, SEC, HIVE, HBASE, WFLY and ROO) show that compared with several state-of-the-art methods (including BugLocator, BRTracer, BLUiR, AmaLgam, Locus and BLIZZARD), LaProb performs the best in terms of all five metrics on average. For MAP performance measure, LaProb achieves an improvement of 30.9%, 36.6%, 28.0%, 22.2%, 20.1% and 53.5%, respectively.
   Conclusion: LaProb is capable of making full use of the intra-relations and inter-relations among the bug reports and the source files and achieves better performance than seven state-of-the-art methods.
C1 [Li, Zhengliang; Jiang, Zhiwei; Chen, Xiang; Cao, Kaibo; Gu, Qing] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
   [Chen, Xiang] Guilin Univ Elect Technol, Guangxi Key Lab Trusted Software, Guilin 541004, Peoples R China.
   [Chen, Xiang] Nantong Univ, Sch Informat Sci & Technol, Nantong 226019, Peoples R China.
   [Cao, Kaibo] Nanjing Univ, Software Inst, Nanjing 210023, Peoples R China.
C3 Nanjing University; Guilin University of Electronic Technology; Nantong
   University; Nanjing University
RP Chen, X; Gu, Q (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.; Chen, X (corresponding author), Guilin Univ Elect Technol, Guangxi Key Lab Trusted Software, Guilin 541004, Peoples R China.; Chen, X (corresponding author), Nantong Univ, Sch Informat Sci & Technol, Nantong 226019, Peoples R China.
EM lzl@smail.nju.edu.cn; jiangzhiwei@outlook.com; xchencs@ntu.edu.cn;
   imkbcao@gmail.com; guq@nju.edu.cn
RI Chen, Xiang/AAG-3663-2019; Jiang, Zhiwei/JLR-6369-2023
OI Chen, Xiang/0000-0002-1180-3891; Jiang, Zhiwei/0000-0001-5243-4992; Cao,
   Kaibo/0000-0002-0924-8657
FU National Natural Science Foundation of China [61972192, 61202006,
   61906085, 41972111]; Second Tibetan Plateau Scientific Expedition and
   Research Program [2019QZKK0204]; Nantong Application Research Plan
   [JC2018134, JC2019106]; Guangxi Key Laboratory of Trusted Software
   [kx202012]; Collaborative Innovation Center of Novel Software Technology
   and Industrialization
FX The authors would like to thank the editors and the anonymous reviewers
   for their insightful comments and suggestions, which can substantially
   improve the quality of this work. This work was supported by National
   Natural Science Foundation of China under Grant Nos. 61972192, 61202006,
   61906085, 41972111; The Second Tibetan Plateau Scientific Expedition and
   Research Program (2019QZKK0204); The Nantong Application Research Plan
   under Grant Nos. (JC2018134 and JC2019106); Guangxi Key Laboratory of
   Trusted Software (Grant no. kx202012). This work is partially supported
   by the Collaborative Innovation Center of Novel Software Technology and
   Industrialization.
CR Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Almhana R, 2016, IEEE INT CONF AUTOM, P286, DOI 10.1145/2970276.2970344
   Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   Lam AN, 2015, IEEE INT CONF AUTOM, P476, DOI 10.1109/ASE.2015.73
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   [Anonymous], 2006, Semi-Supervised Learning
   [Anonymous], 2010, C EMPIRICAL METHODS
   [Anonymous], Learning from labeled and unlabeled data with label propagation
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Baluja S, 2008, WORLD WID WEB C, P895
   Chaparro O, 2019, EMPIR SOFTW ENG, V24, P2947, DOI 10.1007/s10664-018-9672-z
   Daitch S.I., 2009, P 26 ANN INT C MACH, P201, DOI DOI 10.1145/1553374.1553400
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   Geng X, 2016, IEEE T KNOWL DATA EN, V28, P1734, DOI 10.1109/TKDE.2016.2545658
   Gregory S, 2010, NEW J PHYS, V12, DOI 10.1088/1367-2630/12/10/103018
   Huo X., 2016, IJCAI, P1606
   Huo X, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1909
   Jebara T., 2009, P 26 ANN INT C MACH, P441
   Jiang Zhiwe., 2015, KNOWLEDGE SCI ENG MA, P411
   Khatiwada S, 2018, INFORM SOFTWARE TECH, V93, P45, DOI 10.1016/j.infsof.2017.08.012
   Kim D.S., 2013, P 27 AAAI C ART INT
   Lee J, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P61, DOI 10.1145/3213846.3213856
   Long J, 2008, LECT NOTES ARTIF INT, V5285, P179, DOI 10.1007/978-3-540-88269-5_17
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Pham PT, 2011, IEEE MULTIMEDIA, V18, P44, DOI 10.1109/MMUL.2011.22
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Rahman MM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P621, DOI 10.1145/3236024.3236065
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Sisman B., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P50, DOI 10.1109/MSR.2012.6224299
   Sun XB, 2019, IEEE ACCESS, V7, P18811, DOI 10.1109/ACCESS.2019.2894976
   Tantithamthavorn C, 2018, INFORM SOFTWARE TECH, V102, P160, DOI 10.1016/j.infsof.2018.06.001
   Wan Y, 2018, WORLD WIDE WEB, V21, P1523, DOI 10.1007/s11280-018-0526-9
   Wang M, 2009, IEEE T CIRC SYST VID, V19, P733, DOI 10.1109/TCSVT.2009.2017400
   Wang SW, 2016, J SOFTW-EVOL PROC, V28, P921, DOI 10.1002/smr.1801
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Xia X, 2016, PROC IEEE INT CONF S, P268, DOI 10.1109/ICSME.2016.67
   Xiao Y, 2018, INFORM SOFTWARE TECH, V99, P58, DOI 10.1016/j.infsof.2018.03.003
   Yang L, 2006, CIKM 06, P690
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Ye X, 2016, IEEE T SOFTWARE ENG, V42, P379, DOI 10.1109/TSE.2015.2479232
   Youm KC, 2017, INFORM SOFTWARE TECH, V82, P177, DOI 10.1016/j.infsof.2016.11.002
   Zeng Ximin, 2013, MICROBIOL, V4, P1
   Zhang W., 2018, RES KEY THEORIES MET, P1, DOI 10.13328/j.cnki.jos.005565.
   Zhou Dengyong, 2006, 19 INT C NEURAL INFO, V19, P1601
   Zhou DY, 2004, ADV NEUR IN, V16, P321
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zhou Y, 2017, INT J SOFTW ENG KNOW, V27, P925, DOI 10.1142/S0218194017500346
   Zoidi O, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2700381
NR 51
TC 13
Z9 14
U1 0
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2021
VL 130
AR 106410
DI 10.1016/j.infsof.2020.106410
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PI2JM
UT WOS:000600922900016
DA 2024-07-18
ER

PT J
AU Ghosh, D
   Singh, J
AF Ghosh, Debolina
   Singh, Jagannath
TI Spectrum-based multi-fault localization using Chaotic Genetic Algorithm
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Debugging; Software testing; Spectrum-based debugging; Genetic
   Algorithm; Chaotic GA; Fault localization
ID SLICES
AB Context: In the field of software engineering, the most complex and time consuming activity is fault-finding. Due to increasing size and complexity of software, there is a necessity of automated fault detection tool which can detect fault with minimal human intervention. A programmer spends a lot of time and effort on software fault localization. Various Spectrum Based Fault Localization (SBFL) techniques have already been developed to automate the fault localization in single-fault software. But, there is a scarcity of fault localization technique for multi-fault software. In our study, we have found that pure SBFL is not always sufficient for effective fault localization in multi-fault programs.
   Objective: To address the above challenge, we propose an automated framework using Chaos-based Genetic Algorithm for Multi-fault Localization (CGAML) based on SBFL technique.
   Methods: Traditional Genetic Algorithm (GA) sometimes stuck in local optima, and it takes more time to converge. Different chaos mapping functions have been applied to GA for better performance. We have used logistic mapping function to achieve chaotic sequence. The proposed technique CGAML first calculates the suspiciousness score for each program statement and then assigns ranks according to that score. The statements having smaller rank means there is a high probability of the statements to be faulty.
   Results: Five open-source benchmark programs are tested to evaluate the efficiency of CGAML technique. The experimental results show CGAML gives better results for both single-fault and multi-fault programs in comparison with existing spectrum-based fault localization techniques.
   Conclusion: EXAM metric is used to compare the performance of our proposed technique with other existing techniques. Smaller EXAM score denotes the higher accuracy of the technique. The proposed framework generates smaller EXAM score in comparison with other existing techniques. We found that, overall CGAML works on an average 8.5% better than GA for both single-fault and multi-fault software.
C1 [Ghosh, Debolina; Singh, Jagannath] Kalinga Inst Ind Technol, Sch Comp Engn, Bhubaneswar, India.
C3 Kalinga Institute of Industrial Technology (KIIT)
RP Ghosh, D (corresponding author), Kalinga Inst Ind Technol, Sch Comp Engn, Bhubaneswar, India.
EM debolina442@gmail.com; jagannath.singhfcs@kiit.ac.in
RI Ghosh, Dr Debolina/JJC-3372-2023
OI Ghosh, Dr Debolina/0000-0003-3169-2065
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2011, J SYST SOFTWARE, V84, P573, DOI 10.1016/j.jss.2010.11.915
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   [Anonymous], 2010, 2010 IEEE INT C SOFT
   Artho Cyrille, 2011, International Journal on Software Tools for Technology Transfer, V13, P223, DOI 10.1007/s10009-010-0139-9
   Beust Cedric, 2007, NEXT GENERATION JAVA
   Bouillon Philipp, 2003, P 2003 OOPSLA WORKSH, P1
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   Chakraborty S, 2017, ARXIV PREPRINT ARXIV
   Chauhan Naresh, 2010, SOFTWARE TESTING PRI
   Cheda D, 2009, ELECTRON NOTES THEOR, V246, P55, DOI 10.1016/j.entcs.2009.07.015
   Cheng Zhang, 2010, 2010 32nd International Conference on Software Engineering (ICSE), P271, DOI 10.1145/1810295.1810351
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Eiben AE, 2011, SWARM EVOL COMPUT, V1, P19, DOI 10.1016/j.swevo.2011.02.001
   El-Shorbagy MA, 2016, CHAOS SOLITON FRACT, V85, P8, DOI 10.1016/j.chaos.2016.01.007
   Fritzson P., 1992, ACM Letters on Programming Languages and Systems, V1, P303, DOI 10.1145/161494.161498
   Ghosh Debolina, 2020, International Journal of Information Technology, V12, P677, DOI 10.1007/s41870-019-00347-1
   González J, 2014, LECT NOTES COMPUT SC, V8901, P183, DOI 10.1007/978-3-319-14125-1_11
   Grochtmann M., 1993, Software Testing, Verification and Reliability, V3, P63, DOI 10.1002/stvr.4370030203
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hao D, 2009, PROC INT CONF SOFTW, P583, DOI 10.1109/ICSE.2009.5070561
   Harik GR, 1999, IEEE T EVOLUT COMPUT, V3, P287, DOI 10.1109/4235.797971
   Heiden S, 2019, SOFTWARE PRACT EXPER, V49, P1197, DOI 10.1002/spe.2703
   Janssen T, 2009, SINTER 09, P23
   Javidi M, 2015, INT ARAB J INF TECHN, V12, P163
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Kim J, 2016, J INF SCI ENG, V32, P177
   Korel Bogdan., 1997, P 3 INT WORKSHOP AUT, P43
   Kutlu Akif, 2015, P 2 INT C INF TECHN
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Lu H, 2014, MATH PROBL ENG, V2014, DOI 10.1155/2014/924652
   Massol Vincent, 2003, TED HUSTED JUNIT ACT
   MAY RM, 1976, NATURE, V261, P459, DOI 10.1038/261459a0
   Mohapatra DP, 2005, INFORM SOFTWARE TECH, V47, P805, DOI 10.1016/j.infsof.2005.02.002
   Mund GB, 2002, INFORM SOFTWARE TECH, V44, P123, DOI 10.1016/S0950-5849(01)00224-5
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Pothier G, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P535
   Ribeiro HL, 2018, IEEE INT CONF SOFTW, P404, DOI 10.1109/ICST.2018.00048
   Rüdisüli M, 2013, WOODHEAD PUBL SER EN, P813, DOI 10.1533/9780857098801.3.813
   Silva J, 2011, ADV ENG SOFTW, V42, P976, DOI 10.1016/j.advengsoft.2011.05.024
   Singh Jagannath, 2018, International Journal of Business Information Systems, V27, P45
   Singh J, 2018, SOFTWARE PRACT EXPER, V48, P233, DOI 10.1002/spe.2520
   Snaselova P, 2015, PROCEDIA COMPUT SCI, V51, P316, DOI 10.1016/j.procs.2015.05.248
   SRINIVAS M, 1994, COMPUTER, V27, P17, DOI 10.1109/2.294849
   Tavazoei MS, 2007, APPL MATH COMPUT, V187, P1076, DOI 10.1016/j.amc.2006.09.087
   Treffer A, 2016, IEEE INT SYMP SOFTW, P175, DOI 10.1109/ISSREW.2016.17
   Umbarkar A.J., 2015, ICTACT J SOFT COMPUT, V6, P1
   Wambugu Geoffrey M., 2017, INT J AP MAT COM-POL, V1, P1
   WHITLEY D, 1994, STAT COMPUT, V4, P65, DOI 10.1007/BF00175354
   Wong W. Eric, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P42
   Wong WE, 2006, J SYST SOFTWARE, V79, P891, DOI 10.1016/j.jss.2005.06.045
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Yang XH, 2015, BOUND VALUE PROBL, P1, DOI 10.1186/s13661-015-0300-1
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Yuan XH, 2002, MATH COMPUT SIMULAT, V59, P319, DOI 10.1016/S0378-4754(01)00363-9
   Zhang L, 2017, J SYST SOFTWARE, V129, P35, DOI 10.1016/j.jss.2017.04.017
   Zhang M, 2017, P 26 ACM SIGS INT S, P261, DOI DOI 10.1145/3092703.3092731
   Zheng Y, 2018, J SYST SOFTWARE, V139, P107, DOI 10.1016/j.jss.2018.02.001
NR 60
TC 25
Z9 25
U1 0
U2 33
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2021
VL 133
AR 106512
DI 10.1016/j.infsof.2021.106512
EA JAN 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QL2TC
UT WOS:000620932900007
DA 2024-07-18
ER

PT J
AU Gil, M
   Albert, M
   Fons, J
   Pelechano, V
AF Gil, Miriam
   Albert, Manoli
   Fons, Joan
   Pelechano, Vicente
TI Engineering human-in-the-loop interactions in cyber-physical systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Human-in-the-loop design; Human-System interactions; Autonomous
   cyber-physical systems; User attention
ID FUNCTION ALLOCATION; AUTOMATION; DESIGN; PRINCIPLES; CONTEXT; TRUST;
   MODEL
AB Context: Cyber-Physical Systems (CPSs) are gradually and widely introducing autonomous capabilities into everything. However, human participation is required to accomplish tasks that are better performed with humans (often called human-in-the-loop). In this way, human-in-the-loop solutions have the potential to handle complex tasks in unstructured environments, by combining the cognitive skills of humans with autonomous systems behaviors.
   Objective: The objective of this paper is to provide appropriate techniques and methods to help designers analyze and design human-in-the-loop solutions. These solutions require interactions that engage the human, provide natural and understandable collaboration, and avoid disturbing the human in order to improve human experience.
   Method: We have analyzed several works that identified different requirements and critical factors that are relevant to the design of human-in-the-loop solutions. Based on these works, we have defined a set of design principles that are used to build our proposal. Fast-prototyping techniques have been applied to simulate the designed human-in-the-loop solutions and validate them.
   Results: We have identified the technological challenges of designing human-in-the-loop CPSs and have provided a method that helps designers to identify and specify how the human and the system should work together, focusing on the control strategies and interactions required.
   Conclusions: The use of our approach facilitates the design of human-in-the-loop solutions. Our method is practical at earlier stages of the software life cycle since it allows domain experts to focus on the problem and not on the solution.
C1 [Gil, Miriam; Albert, Manoli; Fons, Joan; Pelechano, Vicente] Univ Politecn Valencia, Ctr Invest Metodos Prod Software, Camino Vera S-N, Valencia 46022, Spain.
C3 Universitat Politecnica de Valencia
RP Gil, M (corresponding author), Univ Politecn Valencia, Ctr Invest Metodos Prod Software, Camino Vera S-N, Valencia 46022, Spain.
EM mgil@pros.upv.es; malbert@pros.upv.es; jjfons@pros.upv.es;
   pele@pros.upv.es
RI Gil, Miriam/HGD-5342-2022; Gil, Miriam/AAB-1461-2020; Fons,
   Joan/ABG-9296-2020; Albert, Manoli maa/F-7937-2016
OI Gil, Miriam/0000-0002-2987-1825; Albert Albiol,
   Manuela/0000-0003-3747-400X; Fons, Joan/0000-0002-3718-3096
FU Spanish State Research Agency; Generalitat Valenciana [TIN2017-84094-R,
   AICO/2019/009]; ERDF
FX This work has been developed with the financial support of the Spanish
   State Research Agency and the Generalitat Valenciana under the projects
   TIN2017-84094-R and AICO/2019/009, and co-financed with ERDF.
CR [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 2016, DIGITAL TRANSFORMATI
   [Anonymous], 2003, INFORM SYST J
   [Anonymous], 1996, ACM Trans. Comput.-Hum. Interact., DOI 10.1145/235833.236054
   [Anonymous], 1983, The Psychology of Human-Computer Interaction
   [Anonymous], 2506220068 ISI ISO I
   [Anonymous], 2016, TIMELINE FUTURE DRIV
   [Anonymous], 2009, 9241 210 2010 ERGONO, DOI DOI 10.3403/30388991
   [Anonymous], 2013, AUTONOMOUS VEHICLE I
   [Anonymous], 2002, Applied Statistics for Software Managers
   [Anonymous], 2013, FORBES
   Bardram J. E., 2012, Proceedings of the 4th ACM SIGCHI Symposium on Engineering Interactive Computing Systems, P3
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   BERNSEN NO, 1994, INTERACT COMPUT, V6, P347, DOI 10.1016/0953-5438(94)90008-6
   Beruscha F., 2011, SHORT PAPER
   Bindewald JM, 2014, INT J HUM-COMPUT ST, V72, P822, DOI 10.1016/j.ijhcs.2014.07.004
   Bolton ML, 2013, IEEE T SYST MAN CY-S, V43, P488, DOI 10.1109/TSMCA.2012.2210406
   Bouzit S., 2017, IEEE 11 INT C RES CH
   BUXTON B, 1995, GRAPH INTER, P239
   Calvary G, 2003, INTERACT COMPUT, V15, P289, DOI 10.1016/S0953-5438(03)00010-9
   Cámara J, 2017, MANAGING TRADE-OFFS IN ADAPTABLE SOFTWARE ARCHITECTURES, P155, DOI 10.1016/B978-0-12-802855-1.00007-1
   Cao Y., 2009, P 14 INT C INT US IN, P335, DOI DOI 10.1145/1502650.1502697
   Chun J, 2013, TRANSPORT RES F-TRAF, V21, P231, DOI 10.1016/j.trf.2013.09.014
   Cranor L.F., 2008, FRAMEWORK REASONING
   DAHLBACK N, 1993, KNOWL-BASED SYST, V6, P258, DOI 10.1016/0950-7051(93)90017-N
   de Sa Marco., 2006, CHI'06 Extended Abstracts on Human Factors in Computing Systems. CHI EA'06, P694, DOI DOI 10.1145/1125451.1125592
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   Dorn C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P53, DOI 10.1109/ICSE.2013.6606551
   Dzindolet MT, 2003, INT J HUM-COMPUT ST, V58, P697, DOI 10.1016/S1071-5819(03)00038-7
   Emmanouilidis C, 2019, ANNU REV CONTROL, V47, P249, DOI 10.1016/j.arcontrol.2019.03.004
   Eskins D., 2011, Proceedings of the 2011 Eighth International Conference on Quantitative Evaluation of Systems (QEST 2011), P233, DOI 10.1109/QEST.2011.38
   Farooq Umer, 2016, interactions, V23, P26, DOI [10.1145/3001896, DOI 10.1145/3001896]
   Feng L, 2016, IEEE T AUTOM SCI ENG, V13, P450, DOI 10.1109/TASE.2016.2530623
   Gil M, 2019, INT J HUM-COMPUT ST, V130, P21, DOI 10.1016/j.ijhcs.2019.04.006
   Gil M, 2012, PERS UBIQUIT COMPUT, V16, P543, DOI 10.1007/s00779-011-0414-0
   Hollnagel E, 2000, INT J HUM-COMPUT ST, V52, P253, DOI 10.1006/ijhc.1999.0288
   Horvitz E, 2003, COMMUN ACM, V46, P52, DOI 10.1145/636772.636798
   Huang S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P571, DOI 10.1109/ICSE.2015.196
   Jameson A, 2005, LECT NOTES ARTIF INT, V3538, P1
   Jamieson Susan, 2004, Med Educ, V38, P1217, DOI 10.1111/j.1365-2929.2004.02012.x
   Janssen CP, 2019, INT J HUM-COMPUT ST, V131, P99, DOI 10.1016/j.ijhcs.2019.05.006
   Jirgl M, 2018, IFAC PAPERSONLINE, V51, P225, DOI 10.1016/j.ifacol.2018.07.158
   Johnson P., 1999, Human-Computer Interaction: Ergonomics and User Interfaces. Proceedings of HCI International '99 (8th International Conference on Human-Computer Interaction), P1199
   Jovanovic M, 2014, HER ARCH, P300
   Ju W, 2008, DES ISSUES, V24, P72, DOI 10.1162/desi.2008.24.3.72
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kieras David E., 2003, University of Michigan Published Papers
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Krugh Matthew, 2018, Manufacturing Letters, V15, P89, DOI 10.1016/j.mfglet.2018.01.003
   Kuniavsky M, 2010, SMART THINGS: UBIQUITOUS COMPUTING USER EXPERIENCE DESIGN, P1
   Lahmer M, 2018, AUTOMOTIVEUI'18: PROCEEDINGS OF THE 10TH ACM INTERNATIONAL CONFERENCE ON AUTOMOTIVE USER INTERFACES AND INTERACTIVE VEHICULAR APPLICATIONS, P310, DOI 10.1145/3239060.3239086
   Lee JD, 2004, HUM FACTORS, V46, P50, DOI 10.1518/hfes.46.1.50.30392
   Leigh SW, 2018, IEEE PERVAS COMPUT, V17, P34, DOI 10.1109/MPRV.2018.022511241
   Lemmela S., 2008, Proceedings of the 10th international conference on Multimodal interfaces, P265, DOI [DOI 10.1145/1452392.1452447, 10.1145/1452392.1452447]
   Li W., 2014, TOOLS ALGORITHMS CON, P470, DOI [10.1007/978-3-642-54862-8_40, 10.1007/978-3-642-54862-8_40/COVER]
   Lim Brian Y., 2013, Human-Computer Interaction. Towards Intelligent and Implicit Interaction. 15th International Conference, HCI International 2013. Proceedings: LNCS 8008, P92, DOI 10.1007/978-3-642-39342-6_11
   Lloyd Eric, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P163, DOI 10.1109/SEAMS.2017.1
   Miller CA, 2007, HUM FACTORS, V49, P57, DOI 10.1518/001872007779598037
   Miller D., 2015, JOINT COGNITION AUTO
   Mirnig A.G., 2016, INT C AUT US INT INT
   Moore A, 2016, IEEE SOFTWARE, V33, P36, DOI 10.1109/MS.2016.1
   Munir S., 2013, 8 INT WORKSH FEEDB C
   Nahavandi S, 2017, IEEE SYST MAN CYBERN, V3, P10, DOI 10.1109/MSMC.2016.2623867
   NIELSEN J, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P206
   Nunes DS, 2015, IEEE COMMUN SURV TUT, V17, P944, DOI 10.1109/COMST.2015.2398816
   Obrenovic Z, 2007, COMMUN ACM, V50, P83, DOI 10.1145/1230819.1241668
   Paterno F., 1999, HDB ANAL HUMAN COMPU, P1
   Rajaonah B, 2008, INT J HUM-COMPUT ST, V66, P185, DOI 10.1016/j.ijhcs.2007.09.002
   Reeves LM, 2004, COMMUN ACM, V47, P57, DOI 10.1145/962081.962106
   Russell DM, 2003, IBM SYST J, V42, P177, DOI 10.1147/sj.421.0177
   SAE International, 2016, TECHNICAL REPORT
   Savio N., 2007, P MOBILEHCI 2007, P248
   Schirner G, 2013, COMPUTER, V46, P36, DOI 10.1109/MC.2013.31
   Seshia SA, 2017, IEEE T COMPUT AID D, V36, P1421, DOI 10.1109/TCAD.2016.2633961
   Shepherd A., 2001, Hierarchical task analysis
   Sheridan TB, 2000, INT J HUM-COMPUT ST, V52, P203, DOI 10.1006/ijhc.1999.0285
   Sowe SK, 2016, IT PROF, V18, P10, DOI 10.1109/MITP.2016.14
   Stumpf S., 2012, CHI 12
   Thevenin D, 1999, HUMAN-COMPUTER INTERACTION - INTERACT '99, P110
   Triggs T.J., 1982, HER12 HUM FACT
   Trivedi MM, 2007, COMPUTER, V40, P60, DOI 10.1109/MC.2007.170
   van der Heiden RMA, 2018, PLOS ONE, V13, DOI 10.1371/journal.pone.0201963
   Winkler S, 2015, IEEE INT C INTELL TR, P1035, DOI 10.1109/ITSC.2015.172
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wright P, 2000, INT J HUM-COMPUT ST, V52, P335, DOI 10.1006/ijhc.1999.0292
NR 85
TC 29
Z9 32
U1 5
U2 47
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2020
VL 126
AR 106349
DI 10.1016/j.infsof.2020.106349
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA NT9PE
UT WOS:000573271800008
OA Green Published
DA 2024-07-18
ER

PT J
AU Delgado-Pérez, P
   Chicano, F
AF Delgado-Perez, Pedro
   Chicano, Francisco
TI An experimental and practical study on the equivalent mutant connection:
   An evolutionary approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mutation testing; Equivalent mutant problem; Search-based software
   engineering; Evolutionary algorithm
ID MUTATION; SOFTWARE
AB Context: Mutation testing is considered to be a powerful approach to assess and improve the quality of test suites. However, this technique is expensive mainly because some mutants are semantically equivalent to the original program; in general, equivalent mutants require manual revision to differentiate them from useful ones, which is known as the Equivalent Mutant Problem (EMP).
   Objective: In the past, several authors have proposed different techniques to individually identify certain equivalent mutants, with notable advances in the last years. In our work, by contrast, we address the EMP from a global perspective. Namely, we wonder the extent to which equivalent mutants are connected (i.e., whether they share mutation operators and code areas) as well as the extent to which the knowledge of that connection can benefit the mutant selection process. Such a study could allow going beyond the implicit limit in the traditional individual detection of equivalent mutants.
   Method: We use an evolutionary algorithm to select the mutants, an approach called Evolutionary Mutation Testing (EMT). We propose a new derived version, Equivalence-Aware EMT (EA-EMT), which penalizes the fitness of known equivalent mutants so that they do not transfer their features to the next generations of mutants.
   Results: In our experiments applying EMT to well-known C++ programs, we found that (i) equivalent mutants often originate from other equivalent mutants (over 60% on average); (H) EA-EMT's approach of penalizing known equivalent mutants provides better results than the original EMT in most of the cases (notably, the more equivalent mutants are detected, the better); and (Hi) we can combine EA-EMT with Trivial Compiler Equivalence as a way to automatically identify equivalent mutants in a real situation, reaching a more stable version of EMT.
   Conclusions: This novel approach opens the way for improvement in other related areas that deal with equivalent versions.
C1 [Delgado-Perez, Pedro] Univ Cadiz, Escuela Super Ingn, Cadiz, Spain.
   [Chicano, Francisco] Univ Malaga, Escuela Tecn Super Ingn Informat, Malaga, Spain.
C3 Universidad de Cadiz; Universidad de Malaga
RP Delgado-Pérez, P (corresponding author), Univ Cadiz, Escuela Super Ingn, Cadiz, Spain.
EM pedro.delgado@uca.es
RI Chicano, Francisco/I-5650-2015; Delgado-Pérez, Pedro/N-4289-2018
OI Chicano, Francisco/0000-0003-1259-2990; Delgado-Pérez,
   Pedro/0000-0003-1568-9288
FU European Commission (FEDER); Spanish Ministry of Science, Innovation and
   Universities [RTI2018-093608-B-C33]; Spanish Ministry of Innovation and
   Competitiveness [TIN2017-88213-R]; University of Malaga
FX This work is partially funded by the European Commission (FEDER), the
   Spanish Ministry of Science, Innovation and Universities
   (RTI2018-093608-B-C33), the Spanish Ministry of Innovation and
   Competitiveness (TIN2017-88213-R), and the University of Malaga (Exhauro
   project).
CR Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   Arcaini P, 2017, INFORM SOFTWARE TECH, V81, P52, DOI 10.1016/j.infsof.2016.01.019
   Ayad A, 2019, IEEE ICST WORKSHOP, P112, DOI 10.1109/ICSTW.2019.00039
   Barbosa H.J., 2002, Proceedings of the 4th Annual Conference on Genetic and Evolutionary Computation, P287
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Delgado-Perez P., 2017, SAC 17, P1387, DOI [10.1145/3019612.3019828, DOI 10.1145/3019612.3019828]
   Delgado-Pérez P, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P2224, DOI 10.1145/3297280.3297499
   Delgado-Pérez P, 2018, INFORM SOFTWARE TECH, V104, P130, DOI 10.1016/j.infsof.2018.07.011
   Delgado-Pérez P, 2017, IEEE C EVOL COMPUTAT, P596, DOI 10.1109/CEC.2017.7969365
   Delgado-Pérez P, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1630
   Delgado-Pérez P, 2017, LECT NOTES COMPUT SC, V10306, P381, DOI 10.1007/978-3-319-59147-6_33
   Delgado-Pérez P, 2017, INFORM SOFTWARE TECH, V81, P169, DOI 10.1016/j.infsof.2016.07.002
   Devroey X, 2018, J SYST SOFTWARE, V141, P1, DOI 10.1016/j.jss.2018.03.010
   Domínguez-Jiménez JJ, 2011, INFORM SOFTWARE TECH, V53, P1108, DOI 10.1016/j.infsof.2011.03.008
   Goldberg DavidE., 2007, Genetic Algorithms in Search, Optimization Machine Learning
   Grün BJM, 2009, IEEE ICST WORKSHOP, P192, DOI 10.1109/ICSTW.2009.37
   Gutiérrez-Madroñal L, 2019, SOFTWARE PRACT EXPER, V49, P640, DOI 10.1002/spe.2629
   Houshmand M, 2017, LECT NOTES COMPUT SC, V10522, P164, DOI 10.1007/978-3-319-68972-2_11
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Joines J. A., 1994, Proceedings of the First IEEE Conference on Evolutionary Computation. IEEE World Congress on Computational Intelligence (Cat. No.94TH0650-2), P579, DOI 10.1109/ICEC.1994.349995
   Domínguez-Jiménez JJ, 2009, ECOWS'09: PROCEEDINGS OF THE 7TH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P97, DOI 10.1109/ECOWS.2009.18
   Kintis M, 2018, IEEE T SOFTWARE ENG, V44, P308, DOI 10.1109/TSE.2017.2684805
   Kintis M, 2015, INFORM SOFTWARE TECH, V68, P1, DOI 10.1016/j.infsof.2015.07.009
   Kintis M, 2015, SOFTW TEST VERIF REL, V25, P508, DOI 10.1002/stvr.1529
   Kintis M, 2013, ASIA PAC SOFWR ENG, P180, DOI 10.1109/APSEC.2013.34
   Langdon WB, 2015, IEEE T EVOLUT COMPUT, V19, P118, DOI 10.1109/TEVC.2013.2281544
   de Oliveira AAL, 2013, 2013 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P829
   López J, 2018, INFORM SOFTWARE TECH, V103, P138, DOI 10.1016/j.infsof.2018.06.013
   López-Ibáñez M, 2016, OPER RES PERSPECT, V3, P43, DOI 10.1016/j.orp.2016.09.002
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Ma YS, 2009, ETRI J, V31, P140, DOI 10.4218/etrij.09.0108.0356
   Madeyski L, 2014, IEEE T SOFTWARE ENG, V40, P23, DOI 10.1109/TSE.2013.44
   Mresa E. S., 1999, Software Testing, Verification and Reliability, V9, P205, DOI 10.1002/(SICI)1099-1689(199912)9:4<205::AID-STVR186>3.0.CO;2-X
   Nica S., 2012, WORKSH FORM METH DEV
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Papadakis M, 2014, SCI COMPUT PROGRAM, V95, P298, DOI 10.1016/j.scico.2014.05.012
   Periaux, 2015, EVOLUTIONARY METHODS, P9, DOI [10.1007/978-94- 017-9520-3_2, DOI 10.1007/978-94-017-9520-3_2]
   Pizzoleto AV, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.100
   Sanchez A.B., 2018, P GEN EV COMP C COMP, DOI [10.1145/3205651.3205670, DOI 10.1145/3205651.3205670]
   Schuler D, 2013, SOFTW TEST VERIF REL, V23, P353, DOI 10.1002/stvr.1473
   Segura S, 2011, INFORM SOFTWARE TECH, V53, P1124, DOI 10.1016/j.infsof.2011.03.006
   Silva RA, 2017, INFORM SOFTWARE TECH, V81, P19, DOI 10.1016/j.infsof.2016.01.017
   Chekam TT, 2020, EMPIR SOFTW ENG, V25, P434, DOI 10.1007/s10664-019-09778-7
   Wu F, 2017, INFORM SOFTWARE TECH, V81, P97, DOI 10.1016/j.infsof.2016.03.002
   Yu-Seung Ma, 2006, 28th International Conference on Software Engineering Proceedings, P827
NR 46
TC 4
Z9 4
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2020
VL 124
AR 106317
DI 10.1016/j.infsof.2020.106317
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LP3MD
UT WOS:000534222000004
DA 2024-07-18
ER

PT J
AU Ochodek, M
   Staron, M
   Meding, W
AF Ochodek, Miroslaw
   Staron, Miroslaw
   Meding, Wilhelm
TI Simsax: A measure of project similarity based on symbolic approximation
   method and software defect inflow
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Metrics; Defect inflow; Project comparison
ID ACCURACY; SEQUENCE
AB Background: Profiling software development projects, in order to compare them, find similar sub-projects or sets of activities, helps to monitor changes in software processes. Since we lack objective measures for profiling or hashing, researchers often fall back on manual assessments.
   Objective: The goal of our study is to define an objective and intuitive measure of similarity between software development projects based on software defect-inflow profiles.
   Method: We defined a measure of project similarity called SimSAX which is based on segmentation of defect-inflow profiles, coding them into strings (sequences of symbols) and comparing these strings to find so-called motifs. We use simulations to find and calibrate the parameters of the measure. The objects in the simulations are two different large industry projects for which we know the similarity a priori, based on the input from industry experts. Finally, we apply the measure to find similarities between five industrial and six open source projects.
   Results: Our results show that the measure provides the most accurate simulated results when the compared motifs are long (32 or more weeks) and we use an alphabet of 5 or more symbols. The measure provides the possibility to calibrate for each industrial case, thus allowing to optimize the method for finding specific patterns in project similarity.
   Conclusions: We conclude that our proposed measure provides a good approximation for project similarity. The industrial evaluation showed that it can provide a good starting point for finding similar periods in software development projects.
C1 [Ochodek, Miroslaw] Poznan Univ Tech, Fac Comp, Inst Comp Sci, Ul Piotrowo 2, PL-60965 Poznan, Poland.
   [Staron, Miroslaw] Chalmers Univ Gothenburg, Gothenburg, Sweden.
   [Meding, Wilhelm] Ericsson AB, Gothenburg, Sweden.
C3 Poznan University of Technology; Chalmers University of Technology;
   Ericsson
RP Ochodek, M (corresponding author), Poznan Univ Tech, Fac Comp, Inst Comp Sci, Ul Piotrowo 2, PL-60965 Poznan, Poland.
EM mochodek@cs.put.poznan.pl; miroslaw.staron@cse.gu.se;
   wilhelm.meding@ericsson.com
OI Staron, Miroslaw/0000-0002-9052-0864; Ochodek,
   Miroslaw/0000-0002-9103-717X
CR Aghabozorgi S, 2015, INFORM SYST, V53, P16, DOI 10.1016/j.is.2015.04.007
   [Anonymous], P INT C SOFTW PROC P
   [Anonymous], 2009, P 2009 SIAM INT C DA
   Bardsiri VK, 2012, IET SOFTW, V6, P461, DOI 10.1049/iet-sen.2011.0210
   Bernard Nicolau de França Breno, 2015, CLEIej, V18, P5
   Bisio R., 1995, Case-Based Reasoning Research and Development. First International Conference, ICCBR-95. Proceedings, P11, DOI 10.1007/3-540-60598-3_2
   D'haeseleer P, 2006, NAT BIOTECHNOL, V24, P423, DOI 10.1038/nbt0406-423
   Esling P, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379788
   Fu TC, 2011, ENG APPL ARTIF INTEL, V24, P164, DOI 10.1016/j.engappai.2010.09.007
   Heidenberg J, 2013, LECT NOTES BUS INF P, V149, P165
   Idri A, 2001, JOINT 9TH IFSA WORLD CONGRESS AND 20TH NAFIPS INTERNATIONAL CONFERENCE, PROCEEDINGS, VOLS. 1-5, P470, DOI 10.1109/NAFIPS.2001.944298
   Idri A, 2015, INFORM SOFTWARE TECH, V58, P206, DOI 10.1016/j.infsof.2014.07.013
   International Standard Organization and International Electrotechnical Commission, 2017, 159392017 ISOIEC
   Keogh E, 2005, KNOWL INF SYST, V8, P154, DOI 10.1007/s10115-004-0172-7
   Lin J., 2003, 8THACM SIGMOD WORKSH, DOI [10.1145/882082. 882086, DOI 10.1145/882082.882086]
   Lin J., 2002, Finding motifs in time series, P53
   Lin J, 2007, DATA MIN KNOWL DISC, V15, P107, DOI 10.1007/s10618-007-0064-z
   Lokan C, 2001, IEEE SOFTWARE, V18, P26, DOI 10.1109/52.951491
   Lokan Chris., 2006, 2006 ACMIEEE INT S E, P75, DOI DOI 10.1145/1159733.1159747
   Maxwell KD, 2000, IEEE SOFTWARE, V17, P80, DOI 10.1109/52.820015
   Mendes E., 2005, 11 INT S SOFTWARE ME, P10, DOI DOI 10.1109/METRICS.2005.4
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   NEEDLEMAN SB, 1970, J MOL BIOL, V48, P443, DOI 10.1016/0022-2836(70)90057-4
   Olszewska M, 2016, J SYST SOFTWARE, V117, P258, DOI 10.1016/j.jss.2016.03.029
   Rana R, 2014, J SYST SOFTWARE, V98, P59, DOI 10.1016/j.jss.2014.08.033
   Senin Pavel, 2014, Machine Learning and Knowledge Discovery in Databases. European Conference, ECML PKDD 2014. Proceedings: LNCS 8726, P468, DOI 10.1007/978-3-662-44845-8_37
   Silhavy P, 2019, IEEE ACCESS, V7, P9618, DOI 10.1109/ACCESS.2019.2891878
   Silhavy R, 2018, INFORM SOFTWARE TECH, V97, P1, DOI 10.1016/j.infsof.2017.12.009
   Silhavy R, 2017, ADV INTELL SYST, V575, P1, DOI 10.1007/978-3-319-57141-6_1
   Staron M., 2018, Software development measurement programs: Development, management and evolution
   Staron M, 2010, INFORM SOFTWARE TECH, V52, P1069, DOI 10.1016/j.infsof.2010.05.005
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 32
TC 6
Z9 6
U1 1
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2019
VL 115
BP 131
EP 147
DI 10.1016/j.infsof.2019.06.003
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IX7GL
UT WOS:000485851700011
DA 2024-07-18
ER

PT J
AU Chen, T
   Li, MQ
   Yao, X
AF Chen, Tao
   Li, Miqing
   Yao, Xin
TI Standing on the shoulders of giants: Seeding search-based
   multi-objective optimization with prior knowledge for software service
   composition
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Genetic and Evolutionary Computation Conference (GECCO)
CY JUL 15-19, 2018
CL Kyoto, JAPAN
SP Assoc Comp Machinery Special Interest Grp Genet & Evolutionary Computat, Assoc Comp Machinery, SparkCognition, Nat Res, Sentient, Uber AI Labs, Springer, Beacon, NEC, Fujitsu Ltd, Rakuten Linkshare, NTT DATA Engn Syst Corp, DataDirect Networks Japan, HPCTECH Corp, Intelligent Light, Japanese Soc Evolutionary Computat, Shinshu Univ, Univ Electro Commun, Univ Electro Commun, Artificial Intelligence eXplorat Res Ctr
DE Service composition; Search-based software engineering; Multi-objective
   optimization; Evolutionary algorithm; Seeding strategy
ID QOS; ALGORITHM; SELECTION
AB Context Search-Based Software Engineering, in particular multi-objective evolutionary algorithm, is a promising approach to engineering software service composition while simultaneously optimizing multiple conflicting Quality-of-Service (QoS) objectives. Yet, existing applications of evolutionary algorithms have failed to consider domain knowledge about the problem into the optimization, which is a perhaps obvious but challenging task.
   Objective: This paper aims to investigate different strategies of exploring and injecting knowledge about the problem into the Multi-Objective Evolutionary Algorithm (MOEA) by seeding. Further, we investigate various factors that contribute to the effectiveness of seeding, including the number of seeds, the importance of crossover operation and the similarity of historical problems.
   Method: We conduced empirical evaluations with NSGA-II, MOEA/D and IBEA based on a wide spectrum of problem instances, including 10 different workflow structures, from 5 to 100 abstract services and 510 to 5.529 x 10(203) candidate concrete services with diverse QoS on latency, throughput and cost, which was chosen from the real-world WS-DREAM dataset that contains 4500 QoS values.
   Results: We found that, (i) all seeding strategies generally outperform their non-seeded counterparts under the same search budget with large statistical significance. Yet, they may involve relatively smaller compromise on one or two of the quality aspects among convergence, uniformity and spread. (ii) The implication of the number of seeds on the service composition problems is minimal in general (except for IBEA). (iii) In contrast to the non-seeded counterparts, the seeding strategies suffer much less implications by the crossover operation. (iv) The differences of historical problems, which are important for two proposed seeding strategies, can indeed affect the results in a non-linear manner; however, the results are still greatly better than the non-seeded counterparts even with up to 90% difference of the problem settings.
   Conclusion: The paper concludes that (i) When applying the seeding strategies, the number of seeds to be placed in is less important in general, except for the pre-optimization based strategies under IBEA. (ii) Eliminating or having less crossover is harmful for multi-objective service composition optimization, but the seeding strategies are much less sensitive to this operator than their non-seeded counterparts. (iii) For the history based seeding strategies, the seeds do not have to come from the most similar historical composition problem to achieve the best HV value, but a largely different historical problem should usually be avoided, unless they are the only available seeds.
C1 [Chen, Tao] Loughborough Univ, Dept Comp Sci, Loughborough, Leics, England.
   [Li, Miqing; Yao, Xin] Univ Birmingham, Sch Comp Sci, CERCIA, Birmingham, W Midlands, England.
   [Yao, Xin] Southern Univ Sci & Technol, Dept Comp Sci & Engn, Shenzhen, Peoples R China.
C3 Loughborough University; University of Birmingham; Southern University
   of Science & Technology
RP Chen, T (corresponding author), Loughborough Univ, Dept Comp Sci, Loughborough, Leics, England.
EM txc919@gmail.com; m.li.8@cs.bham.ac.uk; x.yao@cs.bham.ac.uk
RI Li, Miqing/P-4153-2015
OI Li, Miqing/0000-0002-8607-9607; Chen, Tao/0000-0001-5025-5472
FU DAASE Programme Grant from the EPSRC [EP/J017515/1]; REF QR fund from
   the Nottingham Trent University; EPSRC [EP/J017515/1] Funding Source:
   UKRI
FX This work is supported by the DAASE Programme Grant from the EPSRC
   (Grant no. EP/J017515/1) and the REF QR fund from the Nottingham Trent
   University.
CR Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Back T., 1996, EVOLUTIONARY ALGORIT
   Bichler M, 2006, COMPUTER, V39, P99, DOI 10.1109/MC.2006.102
   Canfora G, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1069
   Cardellini V, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P743
   Chen T, 2018, GECCO'18: PROCEEDINGS OF THE 2018 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1419, DOI 10.1145/3205455.3205513
   Chen T, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3204459
   Chen T, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3190507
   Chen T, 2017, IEEE T SERV COMPUT, V10, P618, DOI 10.1109/TSC.2015.2499770
   Chen T, 2015, COMPUTER, V48, P93, DOI 10.1109/MC.2015.278
   Cohen J., 1988, STAT POWER ANAL BEHA
   Dai ST, 2014, PROCEEDINGS OF THE 21ST INTERNATIONAL CONFERENCE ON NUCLEAR ENGINEERING - 2013, VOL 2
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2001, MULTIOBJECTIVE OPTIM, DOI DOI 10.1109/TEVC.2002.804322
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Fraser G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P121, DOI 10.1109/ICST.2012.92
   Ishibuchi H, 2008, IEEE C EVOL COMPUTAT, P2419, DOI 10.1109/CEC.2008.4631121
   Kumar S, 2018, INT C PAR DISTRIB SY, P972, DOI [10.1109/PADSW.2018.8644640, 10.1109/ICPADS.2018.00129]
   LI M, 2018, PROCEEDINGS OF THE 4, DOI DOI 10.5729/ICTCS.2018.1.40
   Lopez-Herrejon RE, 2014, 2014 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P387, DOI 10.1109/CEC.2014.6900473
   López-Ibáñez M, 2011, LECT NOTES COMPUT SC, V6576, P46, DOI 10.1007/978-3-642-19893-9_4
   Meadows B., 2013, EVALUATING SEEDING G, P221
   Miqing Li, 2019, Evolutionary Multi-Criterion Optimization. 10th International Conference, EMO 2019. Proceedings: Lecture Notes in Computer Science (LNCS 11411), P15, DOI 10.1007/978-3-030-12598-1_2
   Ramírez A, 2017, EXPERT SYST APPL, V72, P357, DOI 10.1016/j.eswa.2016.10.047
   Schott J.R., 1995, FAULT TOLERANT DESIG, DOI DOI 10.1016/0008-8749(78)90168-5
   Trummer I, 2014, IEEE T SOFTWARE ENG, V40, P167, DOI 10.1109/TSE.2013.61
   Voss T, 2008, IEEE C EVOL COMPUTAT, P3036, DOI 10.1109/CEC.2008.4631208
   Wada H, 2012, IEEE T SERV COMPUT, V5, P358, DOI 10.1109/TSC.2011.6
   White DR, 2011, IEEE T EVOLUT COMPUT, V15, P515, DOI 10.1109/TEVC.2010.2083669
   Yu Y, 2015, IEEE C EVOL COMPUTAT, P2843, DOI 10.1109/CEC.2015.7257242
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
   Zheng ZB, 2014, IEEE T SERV COMPUT, V7, P32, DOI 10.1109/TSC.2012.34
   Zhou AM, 2006, IEEE C EVOL COMPUTAT, P892
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
NR 36
TC 17
Z9 17
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2019
VL 114
BP 155
EP 175
DI 10.1016/j.infsof.2019.05.013
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA IQ3RQ
UT WOS:000480669200010
OA Green Published
DA 2024-07-18
ER

PT J
AU Pettinato, M
   Gil, JP
   Galeas, P
   Russo, B
AF Pettinato, Michele
   Gil, Juan Pablo
   Galeas, Patricio
   Russo, Barbara
TI Log mining to re-construct system behavior: An exploratory study on a
   large telescope system
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Log mining; Latent Dirichlet Allocation; Text processing; System
   behavior
AB Context A large amount of information about system behavior is stored in logs that record system changes. Such information can be exploited to discover anomalies of a system and the operations that cause them. Given their large size, manual inspection of logs is hard and infeasible in a desired timeframe (e.g., real-time), especially for critical systems.
   Objective: This study proposes a semi-automated method for reconstructing sequences of tasks of a system, revealing system anomalies, and associating tasks and anomalies to code components.
   Method: The proposed approach uses unsupervised machine learning (Latent Dirichlet Allocation) to discover latent topics in messages of log events and introduces a novel technique based on pattern recognition to derive the semantic of such topics (topic labelling). The approach has been applied to the big data generated by the ALMA telescope system consisting of more than 2000 log events collected in about five hours of telescope operation.
   Results: With the application of our approach to such data, we were able to model the behavior of the telescope over 16 different observations. We found five different behavior models and three different types of errors. We use the models to interpret each error and discuss its cause.
   Conclusions: With this work, we have also been able to discuss some of the known challenges in log mining. The experience we gather has been then summarized in lessons learned.
C1 [Pettinato, Michele] Via Arrigo Boito 25, I-95041 Caltagirone, CT, Italy.
   [Gil, Juan Pablo] Very Large Telescope Cerro Paranal, Antofagasta, Region De Antof, Chile.
   [Galeas, Patricio] Univ La Frontera, Avda Francisco Salazar 01145, Temuco 4811230, Araucania, Chile.
   [Russo, Barbara] Free Univ Bozen Bolzano, Pza Domenicani 3, I-39100 Bolzzano, Italy.
C3 Universidad de La Frontera; Free University of Bozen-Bolzano
RP Russo, B (corresponding author), Free Univ Bozen Bolzano, Pza Domenicani 3, I-39100 Bolzzano, Italy.
EM juan.gil@alma.cl; patricio.galeas@ufrontera.cl; barbara.russo@unibz.it
RI Russo, Barbara/AAA-8850-2019; Galeas, Patricio/O-7615-2014
OI Russo, Barbara/0000-0003-3737-9264; Gil Ramirez, Juan
   Pablo/0009-0003-6219-1818
FU GAUSS Italian research project - MIUR, PRIN 2015 [2015KWREMX]; DE-BASS
   research project - Free University of Bolzano
FX This work has been partially supported by the GAUSS Italian research
   project (funded by MIUR, PRIN 2015, Contract: 2015KWREMX) and DE-BASS
   research project (funded by Free University of Bolzano).
CR Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   ALMA, 2017, ALM GLOSS
   Andrews JH, 2003, IEEE T SOFTWARE ENG, V29, P634, DOI 10.1109/TSE.2003.1214327
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2012, EXPT SOFTWARE ENG CO
   [Anonymous], 2008, PROC 1 USENIX C ANAL
   [Anonymous], 2012, ALMA NEWSLETTER
   Asayama S., 2016, ALMA Cycle 4 Technical Handbook
   Asayama S., 2017, ALMA CYCLE 5 TECHNIC
   Bertero C, 2017, PROC INT SYMP SOFTW, P351, DOI 10.1109/ISSRE.2017.43
   Blei D. M., 2003, J MACH LEARN RES
   Chang J., 2009, Advances in neural information processing systems, P22, DOI DOI 10.5555/2984093.2984126
   Chuah Edward, 2010, 2010 INT C HIGH PERF, P1, DOI [DOI 10.1109/HIPC.2010.5713159, 10.1109/HIPC.2010.5713159]
   Cinque M, 2013, IEEE T SOFTWARE ENG, V39, P806, DOI 10.1109/TSE.2012.67
   Damevski K, 2018, IEEE T SOFTWARE ENG, V44, P1100, DOI 10.1109/TSE.2017.2748134
   Damevski K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P126, DOI [10.1109/MSR.2016.022, 10.1145/2901739.2901741]
   ESO, 2016, ERR DEF
   Featherstun R.W., 2010, Proceedings of the 24th USENIX international confer- ence on Large installation system administration (LISA), LISA'10, P1
   Fronza I, 2013, J SYST SOFTWARE, V86, P2, DOI 10.1016/j.jss.2012.06.025
   Fu S, 2010, J PARALLEL DISTR COM, V70, P1100, DOI 10.1016/j.jpdc.2010.06.010
   Gadler D, 2017, INT SYMP EMP SOFTWAR, P334, DOI 10.1109/ESEM.2017.47
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Gil J. P., 2016, P SPIE P SPIE, V9913
   Goldstein M, 2017, PROC INT SYMP SOFTW, P282, DOI 10.1109/ISSRE.2017.14
   Gordon AD., 1999, Monographs on Statistics and Applied Probability, V82
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Grün B, 2011, J STAT SOFTW, V40, P1
   Guille A, 2014, 2014 PROCEEDINGS OF THE IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM 2014), P375, DOI 10.1109/ASONAM.2014.6921613
   Hindle A, 2015, EMPIR SOFTW ENG, V20, P479, DOI 10.1007/s10664-014-9312-1
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   JIANG B, 2016, PLOS ONE, V11, DOI DOI 10.4103/1673-5374.169603
   Jiang ZM, 2008, J SOFTW MAINT EVOL-R, V20, P249, DOI 10.1002/smr.374
   Khodabandelou G., 2014, P 11 WORKING C MININ, DOI DOI 10.1145/2597073.2597101
   Koltsov S., 2014, P 2014 ACM C WEB SCI, P161, DOI DOI 10.1145/2615569.2615680
   Lau J., 2014, P EUR CHAPT ASS COMP
   Lau J. H., 2011, P 49 ANN M ASS COMP, P1536
   Layman L, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P303, DOI 10.1145/2901739.2901760
   Mariani Leonardo, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P117, DOI 10.1109/ISSRE.2008.48
   Mehrotra R, 2013, SIGIR'13: THE PROCEEDINGS OF THE 36TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH & DEVELOPMENT IN INFORMATION RETRIEVAL, P889
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   O'Callaghan D, 2015, EXPERT SYST APPL, V42, P5645, DOI 10.1016/j.eswa.2015.02.055
   Oliner A, 2012, COMMUN ACM, V55, P63, DOI 10.1145/2076450.2076466
   Oliner A, 2007, I C DEPEND SYS NETWO, P575, DOI 10.1109/DSN.2007.103
   Rouillard JP, 2004, USENIX Association Proceedings of the Eighteenth Large Installation System Administration Conference, P133
   Russo B, 2015, EMPIR SOFTW ENG, V20, P879, DOI 10.1007/s10664-014-9303-2
   Salfner F., 2006, P 20 IEEE INT PAR DI, DOI [10.1109/IPDPS.2006.1639672, DOI 10.1109/IPDPS.2006.1639672]
   Simon K., 2006, An Introduction to Knowledge Engineering
   Sommer H, 2004, PROC SPIE, V5496, P219, DOI 10.1117/12.551718
   van der Aalst WMP, 2003, DATA KNOWL ENG, V47, P237, DOI 10.1016/S0169-023X(03)00066-1
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Zhao WZ, 2015, BMC BIOINFORMATICS, V16, DOI 10.1186/1471-2105-16-S13-S8
   Zhen Ming Jiang, 2010, Proceedings 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2010), P131, DOI 10.1109/SSIRI.2010.15
   Zou LY, 2016, PROCEEDINGS OF 2016 IEEE INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND BIG DATA ANALYSIS (ICCCBDA 2016), P342, DOI 10.1109/ICCCBDA.2016.7529581
NR 53
TC 9
Z9 9
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2019
VL 114
BP 121
EP 136
DI 10.1016/j.infsof.2019.06.011
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IQ3RQ
UT WOS:000480669200008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Varghese, RBG
   Raimond, K
   Lovesum, J
AF Varghese, Bright Gee R.
   Raimond, Kumudha
   Lovesum, Jeno
TI A novel approach for automatic remodularization of software systems
   using extended ant colony optimization algorithm
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Remodularization; Ant colony optimization; Turbo modularization quality;
   Software system; Code dependency
ID MODULARIZATION
AB Context Software modularization is extremely important to streamline the inner structure of the program modules without influencing its core functionality. As the framework advances during the upkeep stage, the pristine design of the software package gets disintegrated and hence it is arduous to understand and maintain. There are many existing approaches being carried out to automatically remodularize using optimization techniques to ease the maintenance and improve the quality of the system. The outcomes are rather insufficiently optimal and depend on problem-specific operators, which in turn expands the time multifaceted nature to land at an answer. Apart from these limitations, the issues, such as time complexity, scalability and performance need to be addressed.
   Objective: In this paper, an efficient automatic software remodularization using extended Ant Colony Optimization (ACO) has been proposed to remodularize the software systems.
   Method: The proposed approach mainly includes two phases: optimised traversal of software system using ACO for finding the order of software files to be processed and remodularization of software system using the proposed approach of extended ACO.
   Results: We experimented our proposed approach on seven software systems. The performance is evaluated by using Turbo modularization quality (MQ) which supports Module dependency graph (MDG) that have edge weights. The time complexity of remodularized software system is evaluated based on number of Turbo MQ.
   Conclusion It can be concluded that when the performance has been compared with the subsisting methodologies, for example, Genetic algorithm (GA), Hill climbing (HC) and Interactive genetic algorithms (I-GM), the proposed approach has higher Turbo MQ value with lesser time complexity in the evaluated software systems.
C1 [Varghese, Bright Gee R.; Raimond, Kumudha; Lovesum, Jeno] Karunya Inst Technol & Sci, Coimbatore, Tamil Nadu, India.
C3 Karunya Institute of Technology & Sciences
RP Varghese, RBG (corresponding author), Karunya Inst Technol & Sci, Coimbatore, Tamil Nadu, India.
EM brightachus@karunya.edu; kraimond@karunya.edu; jenolovesum@karunya.edu
RI lovesum, jeno/ABA-8743-2020
OI lovesum, jeno/0000-0001-6055-496X; Varghese R, Bright
   Gee/0000-0002-4559-774X
CR Abdeen H, 2013, WORK CONF REVERSE EN, P212, DOI 10.1109/WCRE.2013.6671296
   Abdeen H, 2009, WORK CONF REVERSE EN, P103, DOI 10.1109/WCRE.2009.13
   [Anonymous], 2015, INF SCI, V291, P115
   Anquetil N., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P235, DOI 10.1109/WCRE.1999.806964
   Barros MD, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1205, DOI 10.1145/2330163.2330330
   Bavota Gabriele, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P75, DOI 10.1007/978-3-642-33119-0_7
   Bavota G., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P195, DOI 10.1109/WCRE.2010.29
   Dahiya Surender Singh, 2010, Proceedings of the 21st Australian Software Engineering Conference (ASWEC 2010), P149, DOI 10.1109/ASWEC.2010.30
   Dorigo M., 1997, IEEE Transactions on Evolutionary Computation, V1, P53, DOI 10.1109/4235.585892
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gutjahr WJ, 2000, FUTURE GENER COMP SY, V16, P873, DOI 10.1016/S0167-739X(00)00044-3
   Harman M., 2002, P GEN EV COMP C
   Jaimes AL, 2009, LECT NOTES COMPUT SC, V5467, P423, DOI 10.1007/978-3-642-01020-0_34
   Junjie Pan, 2006, 1 INT C INN COMP INF, VI
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   Mancoridis S., P IEEE INT C SOFTW M
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Mitchell BS, 2008, SOFT COMPUT, V12, P77, DOI 10.1007/s00500-007-0218-3
   Mitchell Brian S., 2002, THESIS
   Mitchell BrianS., 2002, GECCO, V2, P1375
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Opdyke William F., 1992, THESIS
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Raiha O., 2009, P 11 ANN C COMP GEN, P2131, DOI DOI 10.1145/1570256.1570289
   Rajalakshmi M., 2014, INT J RES COMPUT APP, P65
   Ramírez A, 2015, INFORM SCIENCES, V305, P234, DOI 10.1016/j.ins.2015.01.017
   Seng O, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1045
   Sherkat E, 2015, PHYSICA A, V419, P80, DOI 10.1016/j.physa.2014.10.011
   Shtern M, 2009, INT C PROGRAM COMPRE, P248, DOI 10.1109/ICPC.2009.5090051
   Tajgardan Mahjoubeh, 2017, SOFTWARE SYSTEMS CLU, P99
   Takagi H, 2001, P IEEE, V89, P1275, DOI 10.1109/5.949485
   Wang XP, 2016, INFORM SCIENCES, V348, P124, DOI 10.1016/j.ins.2016.01.068
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
NR 34
TC 13
Z9 14
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2019
VL 114
BP 107
EP 120
DI 10.1016/j.infsof.2019.06.002
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IQ3RQ
UT WOS:000480669200007
DA 2024-07-18
ER

PT J
AU Zhou, TC
   Sun, XB
   Xia, X
   Li, B
   Chen, X
AF Zhou, Tianchi
   Sun, Xiaobing
   Xia, Xin
   Li, Bin
   Chen, Xiang
TI Improving defect prediction with deep forest
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software defect prediction; Deep forest; Cascade strategy; Empirical
   evaluation
ID MODEL; FRAMEWORK
AB Context: Software defect prediction is important to ensure the quality of software. Nowadays, many supervised learning techniques have been applied to identify defective instances (e.g., methods, classes, and modules).
   Objective: However, the performance of these supervised learning techniques are still far from satisfactory, and it will be important to design more advanced techniques to improve the performance of defect prediction models.
   Method: We propose a new deep forest model to build the defect prediction model (DPDF). This model can identify more important defect features by using a new cascade strategy, which transforms random forest classifiers into a layer-by-layer structure. This design takes full advantage of ensemble learning and deep learning.
   Results: We evaluate our approach on 25 open source projects from four public datasets (i.e., NASA, PROMISE, AEEEM and Relink). Experimental results show that our approach increases AUC value by 5% compared with the best traditional machine learning algorithms.
   Conclusion: The deep strategy in DPDF is effective for software defect prediction.
C1 [Zhou, Tianchi; Sun, Xiaobing; Li, Bin] Yangzhou Univ, Sch Informat Engn, Yangzhou, Jiangsu, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
   [Chen, Xiang] Northwestern Polytech Univ, Sch Software, Xian, Shaanxi, Peoples R China.
   [Sun, Xiaobing] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
C3 Yangzhou University; Monash University; Northwestern Polytechnical
   University; Nanjing University
RP Sun, XB (corresponding author), Yangzhou Univ, Sch Informat Engn, Yangzhou, Jiangsu, Peoples R China.; Sun, XB (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
EM xbsun@yzu.edu.cn
RI Chen, Xiang/AAG-3663-2019; Xia, Xin/AAD-6217-2022
OI Chen, Xiang/0000-0002-1180-3891; Xia, Xin/0000-0002-6302-3256; Sun,
   Xiaobing/0000-0001-5165-5080
FU Natural Science Foundation of China [61872312, 61402396, 61472344,
   61611540347]; Open Funds of State Key Laboratory for Novel Software
   Technology of Nanjing University [KFKT20181312]; Jiangsu "333" Project;
   Six Talent Peaks Project in Jiangsu Province [RJFW-053]; Jiangsu
   Overseas Visiting Scholar program
FX This work is supported partially by Natural Science Foundation of China
   under Grant No. 61872312, No. 61402396, No. 61472344 and No.
   61611540347, partially by the Open Funds of State Key Laboratory for
   Novel Software Technology of Nanjing University under Grant no.
   KFKT20181312, partially by the Jiangsu "333" Project, partially by the
   the Six Talent Peaks Project in Jiangsu Province under Grant No.
   RJFW-053, and partially by the Jiangsu Overseas Visiting Scholar
   program.
CR Agarwal K, 2015, J INTELL MANUF, V26, P785, DOI 10.1007/s10845-013-0834-y
   Agrawal Amritanshu, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE). Proceedings, P1050, DOI 10.1145/3180155.3180197
   [Anonymous], 2013, Representation learning: A review and new perspectives
   [Anonymous], P INT C SOFTW ENG SO
   [Anonymous], P 30 IEEE ACM INT C
   Arar ÖF, 2017, APPL SOFT COMPUT, V59, P197, DOI 10.1016/j.asoc.2017.05.043
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Cheadle Chris, 2003, Appl Bioinformatics, V2, P209
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   Chidamber S. R., 1994, METRICS SUITE OBJECT
   COX DR, 1958, BIOMETRIKA, V45, P562, DOI 10.2307/2333203
   Cristianini N., 2000, INTRO SUPPORT VECTOR
   D'Ambros M., 2010, EXTENSIVE COMP BUG P
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Domingos P, 1997, MACH LEARN, V29, P103, DOI 10.1023/A:1007413511361
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Fenton N, 2008, EMPIR SOFTW ENG, V13, P499, DOI 10.1007/s10664-008-9072-x
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gorunescu F, 2011, INTEL SYST REF LIBR, P1, DOI 10.1007/978-3-642-19721-5
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold S, 2017, IEEE T SOFTWARE ENG, V43, P1091, DOI 10.1109/TSE.2017.2748129
   Hinton G, 2012, IEEE SIGNAL PROC MAG, V29, P82, DOI 10.1109/MSP.2012.2205597
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Isa D, 2009, APPL ARTIF INTELL, V23, P758, DOI 10.1080/08839510903210589
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Jing XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P414, DOI 10.1145/2568225.2568320
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Landwehr N, 2005, MACH LEARN, V59, P161, DOI 10.1007/s10994-005-0466-3
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   Lee T, 2016, IEEE T SOFTWARE ENG, V42, P1015, DOI 10.1109/TSE.2016.2550458
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li J., 2017, IEEE INT C SOFTW QUA
   Li ZQ, 2017, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2017.19
   Liu SL, 2014, P INT COMP SOFTW APP, P426, DOI 10.1109/COMPSAC.2014.66
   Lu HH, 2014, PROC INT SYMP SOFTW, P312, DOI 10.1109/ISSRE.2014.35
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Malhotra R, 2016, APPL SOFT COMPUT, V49, P1034, DOI 10.1016/j.asoc.2016.04.032
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Öztürk MM, 2015, EXPERT SYST APPL, V42, P6496, DOI 10.1016/j.eswa.2015.03.013
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Rana R, 2016, J SYST SOFTWARE, V117, P229, DOI 10.1016/j.jss.2016.02.015
   Romano J., 2006, ANN M FLORIDA ASS IN
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Sun XB, 2019, IEEE ACCESS, V7, P18811, DOI 10.1109/ACCESS.2019.2894976
   Sun XB, 2019, SCI CHINA INFORM SCI, V62, DOI 10.1007/s11432-017-9459-5
   Sun XB, 2017, ASIA PAC SOFWR ENG, P348, DOI 10.1109/APSEC.2017.41
   Sun XB, 2017, J SYST SOFTWARE, V134, P355, DOI 10.1016/j.jss.2017.09.021
   Sun XB, 2016, FRONT COMPUT SCI-CHI, V10, P812, DOI 10.1007/s11704-016-5226-y
   Sun XB, 2015, INFORM SOFTWARE TECH, V66, P1, DOI 10.1016/j.infsof.2015.05.003
   Sun XB, 2014, J SYST SOFTWARE, V96, P51, DOI 10.1016/j.jss.2014.05.036
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tassey G., 2002, EC IMPACTS INADEQUAT
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang HB, 2017, IEEE T SOFTWARE ENG, V43, P556, DOI 10.1109/TSE.2016.2615615
   Wang J, 2012, INT CONF QUAL SOFTW, P13, DOI 10.1109/QSIC.2012.19
   Wang L., 2017, P 39 INT C SOFTW ENG, V2017, P189, DOI DOI 10.1109/ICSE-C.2017.102
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wang TJ, 2016, AUTOMAT SOFTW ENG, V23, P569, DOI 10.1007/s10515-015-0179-1
   Wu R., 2011, ACM SIGSOFT S EUR C
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xia X, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P311, DOI 10.1109/SANER.2015.7081841
   Xiaotao Rong, 2016, International Journal of Intelligent Systems Technologies and Applications, V15, P19
   Xu Z, 2016, PROC INT SYMP SOFTW, P309, DOI 10.1109/ISSRE.2016.13
   Xu Z, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P370, DOI 10.1109/SANER.2016.34
   Yan M, 2017, INT SYMP EMP SOFTWAR, P344, DOI 10.1109/ESEM.2017.48
   Yang J, 2016, PROCEEDINGS OF 2016 IEEE 18TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS; IEEE 14TH INTERNATIONAL CONFERENCE ON SMART CITY; IEEE 2ND INTERNATIONAL CONFERENCE ON DATA SCIENCE AND SYSTEMS (HPCC/SMARTCITY/DSS), P465, DOI [10.1109/HPCC-SmartCity-DSS.2016.87, 10.1109/HPCC-SmartCity-DSS.2016.0073]
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yang Y, 2016, PROCEEDINGS OF THE 8TH (2016) INTERNATIONAL CONFERENCE ON FINANCIAL RISK AND CORPORATE FINANCE MANAGEMENT, P152
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhang ZW, 2017, AUTOMAT SOFTW ENG, V24, P47, DOI 10.1007/s10515-016-0194-x
   Zhou ZH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3553
NR 84
TC 68
Z9 74
U1 1
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2019
VL 114
BP 204
EP 216
DI 10.1016/j.infsof.2019.07.003
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IQ3RQ
UT WOS:000480669200013
DA 2024-07-18
ER

PT J
AU Imtiaz, J
   Sherin, S
   Khan, MU
   Iqbal, MZ
AF Imtiaz, Javaria
   Sherin, Salman
   Khan, Muhammad Uzair
   Iqbal, Muhammad Zohaib
TI A systematic literature review of test breakage prevention and repair
   techniques
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Test case repair; Regression testing; Automated testing; Systematic
   literature review
ID SOFTWARE; GUIDELINES
AB Context: When an application evolves, some of the developed test cases break. Discarding broken test cases causes a significant waste of effort and leads to test suites that are less effective and have lower coverage. Test repair approaches evolve test suites along with applications by repairing the broken test cases.
   Objective: Numerous studies are published on test repair approaches every year. It is important to summarise and consolidate the existing knowledge in the area to provide directions to researchers and practitioners. This research work provides a systematic literature review in the area of test case repair and breakage prevention, aiming to guide researchers and practitioners in the field of software testing.
   Method: We followed the standard protocol for conducting a systematic literature review. First, research goals were defined using the Goal Question Metric (GQM). Then we formulate research questions corresponding to each goal. Finally, metrics are extracted from the included papers. Based on the defined selection criteria a final set of 41 primary studies are included for analysis.
   Results: The selection process resulted in 5 journal papers, and 36 conference papers. We present a taxonomy that lists the causes of test case breakages extracted from the literature. We found that only four proposed test repair tools are publicly available. Most studies evaluated their approaches on open-source case studies.
   Conclusion: There is significant room for future research on test repair techniques. Despite the positive trend of evaluating approaches on large scale open source studies, there is a clear lack of results from studies done in a real industrial context. Few tools are publicly available which lowers the potential of adaption by industry practitioners.
C1 [Imtiaz, Javaria; Sherin, Salman; Khan, Muhammad Uzair; Iqbal, Muhammad Zohaib] Natl Univ Comp & Emerging Sci, QUEST Lab, Islamabad, Pakistan.
   [Imtiaz, Javaria; Sherin, Salman; Khan, Muhammad Uzair; Iqbal, Muhammad Zohaib] Natl Ctr Robot & Automat, UAV Dependabil Lab, Rawalpindi, Punjab, Pakistan.
RP Sherin, S (corresponding author), Natl Univ Comp & Emerging Sci, QUEST Lab, Islamabad, Pakistan.
EM javaria.imtiaz@questlab.pk; salman.sherin@questlab.pk;
   uzair.khan@questlab.pk; zohaib.iqbal@questlab.pk
RI Sherin, Salman/IAS-0802-2023; Khan, Muhammad Sarwar/Q-8307-2019
OI Iqbal, Muhammad Zohaib Z/0000-0001-8190-5327
CR Alégroth E, 2016, INFORM SOFTWARE TECH, V73, P66, DOI 10.1016/j.infsof.2016.01.012
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   [Anonymous], P 7 INT WORKSH AUT S
   [Anonymous], 2007, ESEC FSE 2007, DOI DOI 10.1145/1287624.1287707
   [Anonymous], 2010, P 19 INT S SOFTW TES
   [Anonymous], 2012, THESIS
   Borjesson E., 2012, 2012 IEEE 5 INT C SO
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Carino S., 2015, 10 INT WORKSH AUT SO
   Catal C., 2012, 2 INT WORKSHOP EVIDE, P9, DOI [10.1145/2372233.2372238, DOI 10.1145/2372233.2372238]
   Chang N., 2018, 2018 IEEE INT C SOFT
   Chen L., 2010, P 14 INT C EV ASS SO, P135
   Christophe L, 2013, BENEVOL 2013, P13
   Christophe L, 2014, SOFTW MAINT EV ICSME
   Clerissi D., 2013, P 2013 INT WORKSH JO
   Daniel B., 2011, P 1 INT WORKSH END T
   Daniel B, 2009, IEEE INT CONF AUTOM, P433, DOI 10.1109/ASE.2009.17
   Datchayani M., 2012, Journal of Software, V7, P2269, DOI 10.4304/jsw.7.10.2269-2277
   Dogan S, 2014, J SYST SOFTWARE, V91, P174, DOI 10.1016/j.jss.2014.01.010
   Dyutiman Choudhary Dyutiman Choudhary, 2011, Pro-poor value chain development for high value products in mountain regions: Indian Bay Leaf
   FERGUSON D, 2005, INT C AUT PLANN SCHE
   Gao Y, 2015, P INT COMP SOFTW APP, P222, DOI 10.1109/COMPSAC.2015.16
   Gao ZB, 2016, IEEE T SOFTWARE ENG, V42, P170, DOI 10.1109/TSE.2015.2454510
   Garousi V, 2016, INFORM SOFTWARE TECH, V80, P195, DOI 10.1016/j.infsof.2016.09.002
   Gove R., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P202, DOI 10.1109/ICSTW.2011.73
   Grechanik M., 2009, INT C SOFTW MAINT IC
   Grechanik M, 2009, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2009.5070540
   Hammoudi M., 2016, SOFTW TEST VER VAL I
   Hammoudi M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P751, DOI 10.1145/2950290.2950294
   Hammoudi M, 2016, IEEE INT CONF SOFTW, P180, DOI 10.1109/ICST.2016.16
   Hao D, 2013, LECT NOTES COMPUT SC, V7920, P602, DOI 10.1007/978-3-642-39038-8_25
   Huang S., 2010, FRAMEWORK AUTOMATICA
   Hutchinson J., 2011, 33 INT C SOFTW ENG
   Jiang B, 2011, SOFTWARE PRACT EXPER, V41, P1073, DOI 10.1002/spe.1092
   Jin Chen, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P467, DOI 10.1109/ICST.2012.59
   Kanewala U, 2014, INFORM SOFTWARE TECH, V56, P1219, DOI 10.1016/j.infsof.2014.05.006
   Khan MU, 2019, J SYST SOFTWARE, V149, P396, DOI 10.1016/j.jss.2018.12.018
   Khan MU, 2018, COMPUT STAND INTER, V55, P156, DOI 10.1016/j.csi.2017.08.002
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Leotta M., 2015, SOFTW TEST VER VAL I
   Leotta M., 2013, REV ENG WCRE 2013 20
   Leotta M., 2013, SOFTW TEST VER VAL W
   Leotta M., 2015, 2015 IEEE ACM 8 INT
   Leotta M, 2016, ADV COMPUT, V101, P193, DOI 10.1016/bs.adcom.2015.11.007
   Leotta M, 2016, J SOFTW-EVOL PROC, V28, P177, DOI 10.1002/smr.1771
   Li X, 2017, IEEE INT CONF SOFTW, P161, DOI 10.1109/ICST.2017.22
   Machado ID, 2014, INFORM SOFTWARE TECH, V56, P1183, DOI 10.1016/j.infsof.2014.04.002
   Marsavina C., 2014, SOURC COD AN MAN SCA
   Mayan J. A., 2015, INT C CIRC POW COMP
   McMaster S, 2009, IEEE ICST WORKSHOP, P251, DOI 10.1109/ICSTW.2009.11
   Memon A. M., 2003, Software Engineering Notes, V28, P118, DOI 10.1145/949952.940088
   Memon A. M., 2004, C ART INT APPL AIA
   Memon AM, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1416563.1416564
   Mirzaaghaei M., 2010, SOFTW MAINT ICSM 201
   Mirzaaghaei M., 2011, P 6 IT WORKSH ECL TE, P99
   Mirzaaghaei M., 2012, AUTOMATIC TEST SUITE
   Mirzaaghaei M., 2012, INT C SOFTW TEST VER
   Munir H, 2016, EMPIR SOFTW ENG, V21, P684, DOI 10.1007/s10664-015-9380-x
   Narciso EN, 2014, INT J SOFTW ENG KNOW, V24, P653, DOI 10.1142/S0218194014500259
   Nguyen H. A., 2017, SOFTW MAINT EV ICSME
   Petersen BD, 2008, PAIN MANAGEMENT IN INTERVENTIONAL RADIOLOGY, P71, DOI 10.1017/CBO9780511547331.008
   Petersen K., 2008, EVAL ASSESS SOFTW EN
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pinto L. S., 2012, P ACM SIGSOFT 20 INT, V1
   Priya G., GUI TEST SCRIPT REPA
   Raffero Emanuele, 2016, P 2 INT WORKSH US IN
   Rapos EJ, 2016, 2016 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P34, DOI [10.1109/MiSE.2016.014, 10.1145/2896982.2896983]
   Si Huang, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P245, DOI 10.1109/ICST.2010.39
   Solingen R.V., 2002, Encyclopedia of Software Engineering
   Stocco Andrea, 2018, P 26 ACM JOINT EUR S
   Tan SH, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P471, DOI 10.1109/ICSE.2015.65
   Wohlin C., 2014, EASE C
   Xie Q., 2008, INT C SOFTW MAINT
   Xu Z., 2009, SOFTW TEST VERIF REL, V25, P77
   Yandrapally R., 2014, P 2014 INT S SOFTW T
   Yang N, 2012, IEEE W SP LANG TECH, P455, DOI 10.1109/SLT.2012.6424267
   Yong Xu, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P287, DOI 10.1109/APSEC.2014.51
   Zhang YL, 2013, PROCEEDINGS OF 2013 INTERNATIONAL SYMPOSIUM - WOMEN'S SURVIVAL AND DEVELOPMENT IN CURRENT CULTURAL ENVIRONMENT, P45
NR 79
TC 17
Z9 17
U1 0
U2 8
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2019
VL 113
BP 1
EP 19
DI 10.1016/j.infsof.2019.05.001
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IE1DW
UT WOS:000472127100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bagheri, S
   Kusters, RJ
   Trienekens, JJM
   Grefen, PWPJ
AF Bagheri, Samaneh
   Kusters, R. J.
   Trienekens, J. J. M.
   Grefen, P. W. P. J.
TI A reference model-based user requirements elicitation process: Toward
   operational business-IT alignment in a co-creation value network
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Operational business-IT alignment; Customer knowledge management process
   and challenges; User requirements elicitation process; Elicitation
   problems; Reference model; Design science research; Co-creation value
   network
ID DELPHI METHOD; INFORMATION-TECHNOLOGY; STRATEGIC ALIGNMENT; DESIGN
   SCIENCE; MANAGEMENT; FUTURE; CONCEPTUALIZATION; FRAMEWORK; INDUSTRY;
   COMPANY
AB Context: To improve operational business-IT alignment (BITA), the development of IT-based systems should be derived from business requirements. However, the requirements elicitation process is challenging and encounters several problems which might lead to acquiring low-quality user requirements and failure of systems development projects. Many of elicitation problems are also identified as being relevant in the BITA literature. We focus on one category of well-known elicitation problems, such as communication flaws.
   Until now, the majority of requirements elicitation studies with the aim of addressing operational BITA are based on an asking strategy. This elicitation strategy is suitable for relatively stable situations. To compensate for the limitation of this strategy in a more complex situation, e.g., a co-creation value network (VN) setting, using it in conjunction with other elicitation strategies is more likely to yield satisfactory results.
   Objective: To contribute to operational BITA improvement in a VN setting by addressing one category of elicitation problems. For this purpose, we design and evaluate a reference model-based approach to facilitate the user requirements elicitation process.
   Method: Two-phase research according to the design science approach is followed. In the design phase, a reference model-based user requirements elicitation process is designed. Also, as a proof of concept, two instances of this artifact are designed. Two reference models, respectively, describing customer knowledge management processes and customer knowledge management challenges in a VN setting are used separately in designing these two instances. In the evaluation phase, the applicability and usefulness of these instances are evaluated in two separate studies.
   Results: A reference model supports asking-based user requirements elicitation process via a Delphi method in a complex context of a VN. It improves the user requirements elicitation process by addressing a set of recognized elicitation problems.
   Conclusions: The reference model-based approach, by addressing the elicitation problems, contributes to user requirements elicitation process improvement in general and to a better operational BITA in the complex situation of a VN in particular.
C1 [Bagheri, Samaneh; Kusters, R. J.; Trienekens, J. J. M.; Grefen, P. W. P. J.] Eindhoven Univ Technol, Sch Ind Engn, Eindhoven, Netherlands.
C3 Eindhoven University of Technology
RP Bagheri, S (corresponding author), Eindhoven Univ Technol, Sch Ind Engn, Eindhoven, Netherlands.
EM s.bagheri@tue.nl; r.j.kusters@tue.nl; j.j.m.trienekens@tue.nl;
   p.w.p.j.grefen@tue.nl
RI Bagheri, Samaneh/JFL-1506-2023; Kusters, Rob/B-3093-2010
OI Bagheri, Samaneh/0000-0002-1732-2298; Kusters, Rob/0000-0003-4069-5655
CR Ahlemann F, 2009, INT J PROJ MANAG, V27, P19, DOI 10.1016/j.ijproman.2008.01.008
   Alaceva C, 2015, COMPUT HUM BEHAV, V51, P715, DOI 10.1016/j.chb.2014.12.007
   Angelis G. D., 2016, P 31 ANN ACM S APPL, P1282, DOI [10.1145/2851613.2851760, DOI 10.1145/2851613.2851760]
   [Anonymous], 1992, CMUSEI92TR012 MELL U
   Aversano L, 2016, INFORM SOFTWARE TECH, V72, P171, DOI 10.1016/j.infsof.2015.12.009
   Bagheri S, 2017, INT ICE CONF ENG, P1317, DOI 10.1109/ICE.2017.8280033
   Bagheri S, 2016, PROC CIRP, V47, P382, DOI 10.1016/j.procir.2016.03.221
   Bagheri S, 2015, PROC EUR CONF KNOWL, P66
   Bleistein SJ, 2006, INFORM SOFTWARE TECH, V48, P846, DOI 10.1016/j.infsof.2005.12.001
   Browne GJ, 2001, J MANAGE INFORM SYST, V17, P223, DOI 10.1080/07421222.2001.11045665
   Browne GJ, 1997, MANAGE SCI, V43, P1, DOI 10.1287/mnsc.43.1.1
   Camarinha-Matos L.M., 2014, Enterprise interoperability VI, P3
   Camarinha-Matos LM, 2009, COMPUT IND ENG, V57, P46, DOI 10.1016/j.cie.2008.11.024
   Carrizo D, 2014, INFORM SOFTWARE TECH, V56, P644, DOI 10.1016/j.infsof.2014.01.009
   Coltman T, 2015, J INF TECHNOL, V30, P91, DOI 10.1057/jit.2014.35
   Daneva M, 2010, INTENTIONAL PERSPECTIVES ON INFORMATION SYSTEMS ENGINEERING, P115, DOI 10.1007/978-3-642-12544-7_7
   Davey B., 2015, ISSUES INFORM SCI IN, V12, P071
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   DAVIS GB, 1982, IBM SYST J, V21, P4, DOI 10.1147/sj.211.0004
   Dey S, 2017, INFORM SOFTWARE TECH, V87, P160, DOI 10.1016/j.infsof.2017.03.004
   Dubé L, 2003, MIS QUART, V27, P597
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Fernández DM, 2017, EMPIR SOFTW ENG, V22, P2298, DOI 10.1007/s10664-016-9451-7
   Frank U., 2007, REFERENCE MODELING B, P118, DOI DOI 10.4018/978-1-59904-054-7.CH006
   Geist MR, 2010, EVAL PROGRAM PLANN, V33, P147, DOI 10.1016/j.evalprogplan.2009.06.006
   Gerow JE, 2016, INFORM MANAGE-AMSTER, V53, P541, DOI 10.1016/j.im.2015.12.006
   Glinz M, 2015, COMPUT SCI-RES DEV, V30, P363, DOI 10.1007/s00450-014-0256-x
   Grefen P., 2015, BUSINESS INFORM SYST
   Grefen P, 2018, IEEE INTERNET COMPUT, V22, P48, DOI 10.1109/MIC.2018.032501517
   Grefen P, 2017, INT J E-BUS RES, V13, P70, DOI 10.4018/IJEBR.2017100105
   Habershon N., 1993, Journal of European Industrial Training, V17, P8
   Hakanen T, 2014, IND MARKET MANAG, V43, P1195, DOI 10.1016/j.indmarman.2014.08.002
   Hallowell MR, 2010, J CONSTR ENG M, V136, P99, DOI 10.1061/(ASCE)CO.1943-7862.0000137
   Hansen S, 2009, LECT NOTES BUS INF P, V14, P44
   Henderson J. C., 1999, IBM Systems Journal, V38, P472, DOI [10.1147/sj.382.0472, 10.1147/SJ.1999.5387096]
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hickey AM, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P169
   Ferreira FNH, 2016, IND MARKET MANAG, V58, P114, DOI 10.1016/j.indmarman.2016.05.025
   Jaakkola E, 2015, J SERV MANAGE, V26, P182, DOI 10.1108/JOSM-12-2014-0323
   Landeta J, 2006, TECHNOL FORECAST SOC, V73, P467, DOI 10.1016/j.techfore.2005.09.002
   Lee-Klenz S., 2010, P ACM S APPL COMPUTI, P111
   Luftman J, 2017, J INF TECHNOL-UK, V32, P26, DOI 10.1057/jit.2015.23
   Martin S. F., 2008, ICIS 2008 P
   Mayring P., 2004, Qualitative content analysis: theoretical foundation, basic procedures and software solution, V1, P159
   Merriam S. B., 2001, Revised and expanded from case study research in education
   Moody J. W., 1998, Journal of Management Information Systems, V15, P79
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Osterwalder A, 2005, COMMUN ASSOC INF SYS, V16
   Otto B, 2013, COMPUT IND, V64, P887, DOI 10.1016/j.compind.2013.06.017
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Pijpers V, 2012, REQUIR ENG, V17, P203, DOI 10.1007/s00766-011-0136-x
   Pitts MG, 2007, INFORM SYST J, V17, P89, DOI 10.1111/j.1365-2575.2006.00240.x
   Preston DS, 2009, INFORM SYST RES, V20, P159, DOI 10.1287/isre.1070.0159
   Ravichandran T, 2005, J MANAGE INFORM SYST, V21, P237, DOI 10.1080/07421222.2005.11045820
   Reinhartz-Berger I, 2010, IEEE T SYST MAN CY A, V40, P1045, DOI 10.1109/TSMCA.2010.2044408
   Sein MK, 2011, MIS QUART, V35, P37
   Singh SN, 2009, REQUIR ENG, V14, P177, DOI 10.1007/s00766-009-0081-0
   Skulmoski GJ, 2007, J INF TECHNOL EDUC-R, V6, P1
   Tallon PP, 2016, J ASSOC INF SYST, V17, P563, DOI 10.17705/1jais.00438
   Tapia R. S., 2008, CTIT WORKSHOP P SERI, VWP08-05
   Thomas J, 2008, BMC MED RES METHODOL, V8, DOI 10.1186/1471-2288-8-45
   Thomas O., 2005, Business Process Management Workshops. BPM 2005 International Workshops BPI, BPD, ENEI, BPRM, WSCOBPM, BPS. Revised Selected Papers (Lecture Notes in Computer Science Vol. 3812), P484
   Ullah A, 2013, ACM TRANS MANAG INF, V4, DOI 10.1145/2445560.2445564
   Ullah A, 2011, J COMPUT INFORM SYST, V51, P21
   Vargo SL, 2017, INT J RES MARK, V34, P46, DOI 10.1016/j.ijresmar.2016.11.001
   Venable John, 2012, Design Science Research in Information Systems. Advances in Theory and Practice. Proceedings 7th International Conference, DESRIST 2012, P423, DOI 10.1007/978-3-642-29863-9_31
   Verner JM, 2014, INFORM SOFTWARE TECH, V56, P54, DOI 10.1016/j.infsof.2013.06.005
   Yin R. K., 2017, CASE STUDY RES DESIG
   Zowghi D, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P19, DOI 10.1007/3-540-28244-0_2
NR 69
TC 8
Z9 13
U1 1
U2 40
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2019
VL 111
BP 72
EP 85
DI 10.1016/j.infsof.2019.03.012
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HW6ST
UT WOS:000466821600005
OA Green Published
DA 2024-07-18
ER

PT J
AU Rabiser, R
   Schmid, K
   Eichelberger, H
   Vierhauser, M
   Guinea, S
   Grünbacher, P
AF Rabiser, Rick
   Schmid, Klaus
   Eichelberger, Holger
   Vierhauser, Michael
   Guinea, Sam
   Gruenbacher, Paul
TI A domain analysis of resource and requirements monitoring: Towards a
   comprehensive model of the software monitoring domain
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software monitoring; Requirements monitoring; Resource monitoring;
   Domain model; Reference architecture
ID FRAMEWORK; RUNTIME; SYSTEMS; JAVA; TAXONOMY
AB [Context] Complex and heterogeneous software systems need to be monitored as their full behavior often only emerges at runtime, e.g., when interacting with other systems or the environment. Software monitoring approaches observe and check properties or quality attributes of software systems during operation. Such approaches have been developed in diverse communities for various kinds of systems and purposes. For instance, requirements monitoring aims to check at runtime whether a software system adheres to its requirements, while resource or performance monitoring collects information about the consumption of computing resources by the monitored system. Many venues publish research on software monitoring, often using diverse terminology, and focusing on different monitoring aspects and phases. The lack of a comprehensive overview of existing research often leads to re-inventing the wheel. [Objective] We provide a domain model to structure and systematize the field of software monitoring, starting with requirements and resource monitoring. [Method] We developed an initial domain model based on (i) our extensive experiences with requirements and resource monitoring, (ii) earlier efforts to develop a comparison framework for monitoring approaches, and (iii) an earlier systematic literature review on requirements monitoring frameworks. We then systematically analyzed 47 existing requirements and resource monitoring approaches to iteratively refine the domain model and to develop a reference architecture for software monitoring approaches. [Results] Our domain model covers the key elements of monitoring approaches and allows analyzing their commonalities and differences. Together with the reference architecture, our domain model supports the development of integrated monitoring solutions. We provide details on 47 approaches we analyzed with the model to assess its coverage. We also evaluate the reference architecture by instantiating it for five different monitoring solutions. [Conclusions] We conclude that requirements and resource monitoring have more commonalities than differences, which is promising for the future integration of existing monitoring solutions.
C1 [Rabiser, Rick; Gruenbacher, Paul] Johannes Kepler Univ Linz, Inst Software Syst Engn, Christian Doppler Lab MEVSS, Linz, Austria.
   [Schmid, Klaus; Eichelberger, Holger] Univ Hildesheim, Software Syst Engn, Hildesheim, Germany.
   [Vierhauser, Michael] Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46556 USA.
   [Guinea, Sam] Politecn Milan, Dipartimento Elettron Informaz & Bioingn, Milan, Italy.
C3 Johannes Kepler University Linz; University of Hildesheim; University of
   Notre Dame; Polytechnic University of Milan
RP Rabiser, R (corresponding author), Johannes Kepler Univ Linz, Inst Software Syst Engn, Christian Doppler Lab MEVSS, Linz, Austria.
EM rick.rabiser@jku.at; schmid@sse.uni-hildesheim.de;
   eichelberger@sse.uni-hildesheim.de; mvierhau@nd.edu;
   sam.guinea@polimi.it; paul.gruenbacher@jku.at
RI Schmid, Klaus/AAB-1480-2019; Vierhauser, Michael/AAG-5859-2021;
   Grunbacher, Paul/C-2970-2013; Rabiser, Rick/B-8673-2017
OI Schmid, Klaus/0000-0002-4147-3942; Vierhauser,
   Michael/0000-0003-2672-9230; Eichelberger, Holger/0000-0002-2584-5558;
   Grunbacher, Paul/0000-0002-1951-5288; Rabiser, Rick/0000-0003-3862-1112
FU Austrian Federal Ministry for Digital and Economic Affairs; National
   Foundation for Research, Technology and Development; Primetals
   Technologies (via the Christian Doppler Lab MEVSS); Austrian Science
   Fund (FWF) [J3998 -N31]; QualiMaster - European Commission in the 7th
   framework programme [619525]; Austrian Science Fund (FWF) [J3998]
   Funding Source: Austrian Science Fund (FWF)
FX The financial support by the Austrian Federal Ministry for Digital and
   Economic Affairs, the National Foundation for Research, Technology and
   Development, and Primetals Technologies (via the Christian Doppler Lab
   MEVSS) is gratefully acknowledged (Rabiser). Michael Vierhauser's work
   was funded by the Austrian Science Fund (FWF) under Grant No. J3998
   -N31. This work was also partially supported by the QualiMaster (grant
   619525) funded by the European Commission in the 7th framework
   programme. Any opinions expressed herein are solely by the authors and
   not of the EU.
CR Aceto G, 2013, COMPUT NETW, V57, P2093, DOI 10.1016/j.comnet.2013.04.001
   Al-Shaer E. S., 1999, Active Technologies for Network and Service Management. 10th IFIP/IEEE International Workshop on Distributed Systems: Operations and Management, DSOM'99. Proceedings (Lecture Notes in Computer Science Vol.1700), P19
   Anagnostakis KG, 2002, LECT NOTES COMPUT SC, V2546, P120
   Angelov S, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P141, DOI 10.1109/WICSA.2009.5290800
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Autili M, 2015, IEEE T SOFTWARE ENG, V41, P620, DOI 10.1109/TSE.2015.2398877
   Baresi Luciano, 2013, 2013 IEEE 20th International Conference on Web Services (ICWS), P83, DOI 10.1109/ICWS.2013.21
   Baresi L, 2015, IEEE INT CONF SERV, P123, DOI 10.1109/SOCA.2015.49
   Basiri A, 2016, IEEE SOFTWARE, V33, P35, DOI 10.1109/MS.2016.60
   Batory D., 1995, SIGSOFT Software Engineering Notes, P27, DOI 10.1145/223427.211786
   Becker C, 2009, LECT NOTES COMPUT SC, V5648, P221, DOI 10.1007/978-3-642-02818-2_18
   Bellavista P, 2002, COMPUT J, V45, P595, DOI 10.1093/comjnl/45.6.595
   Bellman P, 2000, AIDS Treat News, P1
   Binder W, 2005, LECT NOTES COMPUT SC, V3437, P154
   Binder W, 2004, IEEE INTERNET COMPUT, V8, P74, DOI 10.1109/MIC.2004.28
   Binder W., 2001, Electronic Commerce Research, V1, P131, DOI 10.1023/A:1011579730296
   Bitto Verena, 2015, P PRINCIPLES PRACTIC, P76
   Bratanis K., 2010, P 3 INT WORKSH MON A, P9, DOI DOI 10.1145/1929566.1929568
   Breitgand D, 2003, INT FED INFO PROC, V118, P263, DOI 10.1109/INM.2003.1194185
   Buckley J, 2005, J SOFTW MAINT EVOL-R, V17, P309, DOI 10.1002/smr.319
   Calinescu R, 2012, COMMUN ACM, V55, P69, DOI 10.1145/2330667.2330686
   Chan K, 2005, LECT NOTES COMPUT SC, V3712, P38
   Chawla Anil., 2004, SIGSOFT SOFTW ENG NO, V29, P1
   CHEN F, 2007, 22 ANN ACM SIGPLAN C, P569
   Chen F, 2006, ELECTRON NOTES THEOR, V144, P3, DOI 10.1016/j.entcs.2006.02.002
   Comuzzi M, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON INTERNET AND WEB APPLICATIONS AND SERVICES, P383, DOI 10.1109/ICIW.2009.63
   Contreras AR, 2014, 2014 FIFTH INTERNATIONAL CONFERENCE ON THE APPLICATIONS OF DIGITAL INFORMATION AND WEB TECHNOLOGIES (ICADIWT), P28, DOI 10.1109/ICADIWT.2014.6814690
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Czajkowski G, 1998, ACM SIGPLAN NOTICES, V33, P21, DOI 10.1145/286942.286944
   Czarnecki Krzysztof., 2012, P 6 INT WORKSHOP VAR, P173, DOI DOI 10.1145/2110147.2110167
   Delgado N, 2004, IEEE T SOFTWARE ENG, V30, P859, DOI 10.1109/TSE.2004.91
   Doherty P, 2009, AUTON AGENT MULTI-AG, V19, P332, DOI 10.1007/s10458-009-9079-8
   Dragomir A, 2013, ASIA PAC SOFWR ENG, P396, DOI 10.1109/APSEC.2013.60
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Ehlers J, 2011, LECT NOTES COMPUT SC, V6903, P278, DOI 10.1007/978-3-642-23798-0_30
   Eichelberger H., 2014, P 18 INT SOFTW PROD, P133
   Eichelberger H., 2016, SOFTWARETECHNIK, V36, P43
   Eichelberger H., 2015, SOFTWARETECHNIK TREN, V35, P35
   Eichelberger H, 2017, ICPE'17: COMPANION OF THE 2017 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, P91, DOI 10.1145/3053600.3053617
   Eichelberger H, 2014, J SYST SOFTWARE, V93, P163, DOI 10.1016/j.jss.2014.02.022
   Fickas S., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P140, DOI 10.1109/ISRE.1995.512555
   Fittkau F, 2015, LECT NOTES COMPUT SC, V9306, P80, DOI 10.1007/978-3-319-24072-5_6
   Galster M., 2011, JOINT ACM SIGSOFT C, P153, DOI DOI 10.1145/2000259.2000285
   Gates A. Q., 2001, P INT C RUNT VER, V55, P164
   Ghezzi C, 2012, PROC INT CONF SOFTW, P1403, DOI 10.1109/ICSE.2012.6227237
   Guinea S, 2011, LECT NOTES COMPUT SC, V7084, P359, DOI 10.1007/978-3-642-25535-9_24
   Gunadi H, 2014, LECT NOTES COMPUT SC, V8442, P296, DOI 10.1007/978-3-319-06410-9_21
   Hamida A.B., 2012, P 4 INT WORKSH SOFTW, P134
   Havelund K., 2001, Electronic Notes in Theoretical Computer Science, V55, DOI 10.1016/S1571-0661(04)00253-1
   Hu L., 2010, INT J INTELL INF PRO, V1, P78
   Jin Shao, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P313, DOI 10.1109/CLOUD.2010.31
   Jung R., 2016, SOFTWARETECHNIK, V36, P1
   Kang Kyo C, 1990, Technical Report
   Kanstren T, 2011, INT J ADV SOFTW, V4, P256
   Khurum M, 2009, J SYST SOFTWARE, V82, P1982, DOI 10.1016/j.jss.2009.06.048
   Kiczales G, 2005, PROC INT CONF SOFTW, P49
   Kritzinger LM, 2017, IEEE INT CONF AUTOM, P889, DOI 10.1109/ASE.2017.8115700
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Lengauer P., 2015, Proceedings of the 6th ACM/SPEC International Conference on Performance Engineering, P51
   LI BX, 2013, 7 INT S SERV OR SYST, P92, DOI DOI 10.1109/SOSE.2013.16
   Lim W.C., 1998, Managing Software Reuse
   Mansouri-Samani M., 1993, IEEE Network, V7, P20, DOI 10.1109/65.244791
   Martinelli Fabio, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P270, DOI 10.1109/ICSTW.2008.3
   Michlmayr Anton., 2009, MWSOC 09 P 4 INT WOR, P1, DOI DOI 10.1145/1657755.1657756
   Miettinen T, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P100, DOI 10.1109/SEAA.2008.24
   Muccini H, 2007, LECT NOTES COMPUT SC, V4608, P124
   MULO E., 2010, DEBS '10: Proceedings of the Fourth ACM International Conference on Distributed Event-Based Systems, P62
   Nakagawa E. Y., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P297, DOI 10.1109/WICSA-ECSA.212.49
   NEIGHBORS JM, 1984, IEEE T SOFTWARE ENG, V10, P564, DOI 10.1109/TSE.1984.5010280
   Nielsen CB, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2794381
   Okanovic D, 2016, LECT NOTES COMPUT SC, V9951, P94, DOI 10.1007/978-3-319-46433-6_7
   Ouchenne B., 2011, 1 INT WS SEC PRIV PR, P26
   Rabiser R, 2018, AUTOMAT SOFTW ENG, V25, P875, DOI 10.1007/s10515-018-0241-x
   Rabiser R, 2017, J SYST SOFTWARE, V125, P309, DOI 10.1016/j.jss.2016.12.034
   Ramirez A. J., 2010, 2010 First International Workshop on Requirements at Run Time (RE@RunTime), P41, DOI 10.1109/RE@RUNTIME.2010.5628549
   Robinson WN, 2006, REQUIR ENG, V11, P17, DOI 10.1007/s00766-005-0016-3
   Ruz C., 2010, P 3 INT WORKSH MON A, P25
   Schmid K, 2000, SPRINGER INT SER ENG, V576, P513
   Seracini F., 2014, 11 INT C AUT COMP IC, P233
   Shaw M., 2002, International Journal on Software Tools for Technology Transfer, V4, P1, DOI 10.1007/s10009-002-0083-4
   Shaw M., 1996, SOFTWARE ARCHITECTUR, V101
   Simmonds J, 2013, COMPUTING, V95, P223, DOI 10.1007/s00607-012-0215-y
   Sistla A. P., 2011, INT C RUNT VER, P276
   van Hoorn A., 2009, TECHNICAL REPORT
   Van Hoorn A., 2012, P 3 ACM SPEC INT C P, P247, DOI DOI 10.1145/2188286.2188326
   Vierhauser M, 2016, INFORM SOFTWARE TECH, V80, P89, DOI 10.1016/j.infsof.2016.08.005
   Vierhauser M, 2016, J SYST SOFTWARE, V112, P123, DOI 10.1016/j.jss.2015.07.008
   Vierhauser M, 2015, INT REQUIR ENG CONF, P96, DOI 10.1109/RE.2015.7320412
   Volz M., 2011, Proceedings of the 2011 IEEE 13th International Conference on High Performance Computing and Communication (HPCC 2011). 2011 IEEE International Workshop on Future Trends of Distributed Computing Systems (FTDCS 2011). Workshops of the 2011 International Conference on Ubiquitous Intelligence and Computing (UIC 2011). Workshops of the 2011 International Conference on Autonomic and Trusted Computing (ATC 2011), P477, DOI 10.1109/HPCC.2011.69
   Waller Jan, 2012, Multicore Software Engineering, Performance, and Tools. Proceedings International Conference (MSEPT 2012), P42, DOI 10.1007/978-3-642-31202-1_5
   Wang YQ, 2009, AUTOMAT SOFTW ENG, V16, P3, DOI 10.1007/s10515-008-0042-8
   Zeginis Chrysostomos, 2013, Service-Oriented and Cloud Computing. Second European Conference (ESOCC 2013). Proceedings: LNCS 8135, P188, DOI 10.1007/978-3-642-40651-5_16
   Zhou WC, 2009, LECT NOTES COMPUT SC, V5779, P184, DOI 10.1007/978-3-642-04694-0_13
   Zmuda D, 2010, PROCEDIA COMPUT SCI, V1, P125, DOI 10.1016/j.procs.2010.04.015
NR 94
TC 12
Z9 12
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2019
VL 111
BP 86
EP 109
DI 10.1016/j.infsof.2019.03.013
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HW6ST
UT WOS:000466821600006
OA Green Published
DA 2024-07-18
ER

PT J
AU Koc, T
   Kochovski, P
   Drobintsev, PD
   Stankovski, V
AF Koc, Tar
   Kochovski, Petar
   Drobintsev, Pavel D.
   Stankovski, Vlado
TI Formal Quality of Service assurances, ranking and verification of cloud
   deployment options with a probabilistic model checking method
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Cloud; Fog; Edge; Software engineering; Decision-making; Equivalence
   classes; Probabilistic model checking
ID RESOURCE-MANAGEMENT; GENETIC ALGORITHM; DECISION-MAKING; INTERNET;
   INFRASTRUCTURE; OPTIMIZATION; FRAMEWORK; THINGS; EDGE
AB Context: Existing software workbenches allow for the deployment of cloud applications across a variety of Infrastructure-as-a-Service (IaaS) providers. The expected workload, Quality of Service (QoS) and Non-Functional Requirements (NFRs) must be considered before an appropriate infrastructure is selected. However, this decision-making process is complex and time-consuming. Moreover, the software engineer needs assurances that the selected infrastructure will lead to an adequate QoS of the application.
   Objective: The goal is to develop a new method for selection of an optimal cloud deployment option, that is, an infrastructure and configuration for deployment and to verify that all hard and as many soft QoS requirements as possible will be met at runtime.
   Method: A new Formal QoS Assurances Method (FoQoSAM), which relies on stochastic Markov models is introduced to facilitate an automated decision-making process. For a given workload, it uses QoS monitoring data and a user-related metric in order to automatically generate a probabilistic model. The probabilistic model takes the form of a finite automaton. It is further used to produce a rank list of cloud deployment options. As a result, any of the cloud deployment options can be verified by applying a probabilistic model checking approach.
   Results: Testing was performed by ranking deployment options for two cloud applications, File Upload and Video-conferencing. The FoQoSAM method was compared to a baseline Analytic Hierarchy Process (AHP). The results show that the first ranked cloud deployment options satisfy all hard and at least one of the soft requirements for both methods, however, the FoQoSAM method always satisfies at least an additional QoS requirement compared to the baseline AHP method.
   Conclusions: The proposed new FoQoSAM method is appropriate and can be used in decision-making when ranking and verifying cloud deployment options. Due to its practical utility it was integrated into the SWITCH workbench.
C1 [Koc, Tar; Kochovski, Petar; Stankovski, Vlado] Univ Ljubljana, Fac Civil & Geodet Engn, Ljubljana, Slovenia.
   [Koc, Tar; Kochovski, Petar; Drobintsev, Pavel D.] Peter Great St Petersburg Polytech Univ, Inst Comp Sci & Technol, St Petersburg, Russia.
C3 University of Ljubljana; Peter the Great St. Petersburg Polytechnic
   University
RP Stankovski, V (corresponding author), Univ Ljubljana, Fac Civil & Geodet Engn, Ljubljana, Slovenia.
EM vlado.stankovski@fgg.uni-lj.si
OI Stankovski, Vlado/0000-0001-9547-787X
FU European Union's Horizon 2020 Research and Innovation Programme [643963,
   644179, 815141]; Slovenian Research Agency [BI-RU/16-18-043]; H2020 -
   Industrial Leadership [815141, 644179] Funding Source: H2020 -
   Industrial Leadership
FX The research and development reported in this chapter have received
   funding from the European Union's Horizon 2020 Research and Innovation
   Programme under grant agreements no. 643963 (SWITCH project: Software
   Workbench for Interactive, Time Critical and Highly self-adaptive Cloud
   applications), no. 644179 (ENTICE project: dEcentralized repositories
   for traNsparent and efficienT virtual maChine opErations), and no.
   815141 (DECENTER: Decentralised technologies for orchestrated
   Cloud-to-Edge intelligence). Funding was also received from the
   Slovenian Research Agency under grant agreement no. BI-RU/16-18-043
   (Internet of Things and cloud computing as support for the development
   of new smart approaches in the construction sector).
CR Al-Fuqaha A, 2015, IEEE COMMUN SURV TUT, V17, P2347, DOI 10.1109/COMST.2015.2444095
   [Anonymous], 2008, P 12 INT C PROC MAN
   [Anonymous], 2016, J APPL ENVIRON BIOL
   [Anonymous], 1998, HTTPERF TOOL MEASURI, DOI DOI 10.1145/306225.306235
   Bennett CC, 2013, ARTIF INTELL MED, V57, P9, DOI 10.1016/j.artmed.2012.12.003
   Chaczko Z., 2011, PROC INT C COMPUT SO, V14, P134
   Chaisiri S, 2012, IEEE T SERV COMPUT, V5, P164, DOI 10.1109/TSC.2011.7
   Curry DM, 2014, PROCEDIA COMPUT SCI, V36, P185, DOI 10.1016/j.procs.2014.09.077
   Dastjerdi AV, 2016, COMPUTER, V49, P112, DOI 10.1109/MC.2016.245
   Felter W, 2015, INT SYM PERFORM ANAL, P171, DOI 10.1109/ISPASS.2015.7095802
   Garg SK, 2013, FUTURE GENER COMP SY, V29, P1012, DOI 10.1016/j.future.2012.06.006
   Goncalves R, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1383, DOI 10.1145/2695664.2695923
   Guerrero C, 2018, J GRID COMPUT, V16, P113, DOI 10.1007/s10723-017-9419-x
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Hu Jinhua, 2010, 2010 3 INT S PAR ARC
   Iversen EB, 2014, APPL ENERG, V123, P1, DOI 10.1016/j.apenergy.2014.02.003
   Jain N., 2017, uS Patent, Patent No. [9,595,054., 9595054]
   Jennings B, 2015, J NETW SYST MANAG, V23, P567, DOI 10.1007/s10922-014-9307-7
   Karim Raed, 2013, 2013 IEEE Ninth World Congress on Services (SERVICES), P341, DOI 10.1109/SERVICES.2013.71
   Kebir S, 2017, INFORM SOFTWARE TECH, V88, P17, DOI 10.1016/j.infsof.2017.03.009
   Kochovski P, 2018, AUTOMAT CONSTR, V85, P182, DOI 10.1016/j.autcon.2017.10.008
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Lewis J., 2014, MARS
   Li L. E., 2011, uS Patent App, Patent No. [12/571,271, 12571271]
   Li L, 2014, IEEE T IND INFORM, V10, P1497, DOI 10.1109/TII.2014.2306782
   Littman M. L., 1995, Uncertainty in Artificial Intelligence. Proceedings of the Eleventh Conference (1995), P394
   Llerena YRS, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P454, DOI 10.1145/3106237.3106301
   Lucas Simarro Jose Luis, 2011, 2011 International Conference on High Performance Computing & Simulation, P1
   Luong NC, 2017, IEEE COMMUN SURV TUT, V19, P954, DOI 10.1109/COMST.2017.2647981
   Manvi SS, 2014, J NETW COMPUT APPL, V41, P424, DOI 10.1016/j.jnca.2013.10.004
   Mardani A, 2015, ECON RES-EKON ISTRAZ, V28, P516, DOI 10.1080/1331677X.2015.1075139
   Mausam, 2012, Synthesis Lectures on Artificial Intelligence and Machine Learning, V6, P1
   Mijumbi R, 2016, IEEE COMMUN MAG, V54, P98, DOI 10.1109/MCOM.2016.7378433
   Moonen L, 2016, INFORM SOFTWARE TECH, V77, P34, DOI 10.1016/j.infsof.2016.05.002
   Naskos A, 2015, IEEE ACM INT SYMP, P31, DOI 10.1109/CCGrid.2015.91
   Panda SK, 2015, J SUPERCOMPUT, V71, P1505, DOI 10.1007/s11227-014-1376-6
   Pascinski U., 2017, J GRID COMPUT, P1
   Puterman ML., 2014, MARKOV DECISION PROC, DOI DOI 10.1002/9780470316887
   Randles Martin, 2010, Proceedings of the 2010 IEEE 24th International Conference on Advanced Information Networking and Applications Workshops (WAINA 2010), P551, DOI 10.1109/WAINA.2010.85
   Sandhu R, 2015, CLUSTER COMPUT, V18, P817, DOI 10.1007/s10586-014-0416-6
   Schuster-Bockler Benjamin, 2007, Curr Protoc Bioinformatics, VAppendix 3, p3A, DOI 10.1002/0471250953.bia03as18
   Singh S, 2015, COMPUT ELECTR ENG, V47, P138, DOI 10.1016/j.compeleceng.2015.02.003
   Sotomayor B, 2009, IEEE INTERNET COMPUT, V13, P14, DOI 10.1109/MIC.2009.119
   Stankovski V, 2014, CLUSTER COMPUT, V17, P101, DOI 10.1007/s10586-013-0263-x
   Stefanic P., 2018, NONFUNCTIONAL REQUIR
   Su GX, 2016, LECT NOTES COMPUT SC, V9633, P269, DOI 10.1007/978-3-662-49665-7_16
   Taylor H.M., 2014, An introduction to stochastic modeling
   Tosatto A, 2015, 2015 9TH INTERNATIONAL CONFERENCE ON COMPLEX, INTELLIGENT, AND SOFTWARE INTENSIVE SYSTEMS CISIS 2015, P70, DOI 10.1109/CISIS.2015.35
   Trihinas D, 2014, IEEE ACM INT SYMP, P226, DOI 10.1109/CCGrid.2014.41
   Tsoumakos D, 2013, IEEE ACM INT SYMP, P34, DOI 10.1109/CCGrid.2013.45
   Yang J, 2013, CONCURR COMP-PRACT E, V25, P2435, DOI 10.1002/cpe.3080
   Zanella A, 2014, IEEE INTERNET THINGS, V1, P22, DOI 10.1109/JIOT.2014.2306328
   Zhang LQ, 2014, IEEE INFOCOM SER, P433, DOI 10.1109/INFOCOM.2014.6847966
   Zhao ZM, 2015, IEEE ACM INT SYMP, P1181, DOI 10.1109/CCGrid.2015.73
   Zhao ZM, 2015, PROCEDIA COMPUT SCI, V68, P17, DOI 10.1016/j.procs.2015.09.220
   Zheng ZB, 2013, IEEE T PARALL DISTR, V24, P1213, DOI 10.1109/TPDS.2012.285
NR 56
TC 23
Z9 23
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2019
VL 109
BP 14
EP 25
DI 10.1016/j.infsof.2019.01.003
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ0SX
UT WOS:000462106400002
OA Green Published
DA 2024-07-18
ER

PT J
AU Gharib, M
   Giorgini, P
AF Gharib, Mohamad
   Giorgini, Paolo
TI Information quality requirements engineering with STS-IQ
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Information quality requirements; Goal-oriented requirements
   engineering; GORE; Conceptual modelling; Framework
ID DATA TRUSTWORTHINESS; DESIGN SCIENCE; SYSTEMS; PERSPECTIVE; FRAMEWORK;
   SECURITY; TROPOS
AB Context :Information Quality (IQ) is particularly important for organizations: they depend on information for managing their daily tasks and relying on low-quality information may negatively influence their overall performance. Despite this, the literature shows that most software development approaches do not consider IQ requirements during the system design, which leaves the system open to different kinds of vulnerabilities.
   Objective: The main objective of this research is proposing a framework for modeling and analyzing IQ requirements for Socio-Technical Systems (STS).
   Method: We propose STS-IQ, a goal-oriented framework for modeling and analyzing IQ requirements in their social and organizational context since the early phases of the system design. The framework extends and refines our previous work, and it consists of: (i) a modeling language that provides concepts and constructs for modeling IQ requirements; (ii) a set of analysis techniques that support the verification of the correctness and consistency of the IQ requirements model; (iii) a mechanism for deriving the final IQ specifications in terms of IQ policies; (iv) a methodology to assist software engineers during the system design; and (v) a CASE tool, namely STS-IQ Tool.
   Result: We demonstrated the applicability, usefulness, and scalability of the modeling and reasoning techniques within a stock market case study, and we also evaluated the usability and utility of the framework with end-users.
   Conclusion: We conclude that the STS-IQ framework supports the modeling and analysis of IQ requirements, and also the derivation of precise IQ specifications in terms of IQ policies. Therefore, we believe it has potential in practice.
C1 [Gharib, Mohamad] Univ Florence, Dept Math & Comp Sci U Dini, Viale Morgagni 65, I-50134 Florence, Italy.
   [Gharib, Mohamad; Giorgini, Paolo] Univ Trento, Informat Engn & Comp Sci Dept DISI, Via Sommarive 9, I-38050 Povo, Trento, Italy.
C3 University of Florence; University of Trento
RP Gharib, M (corresponding author), Univ Florence, Dept Math & Comp Sci U Dini, Viale Morgagni 65, I-50134 Florence, Italy.; Gharib, M (corresponding author), Univ Trento, Informat Engn & Comp Sci Dept DISI, Via Sommarive 9, I-38050 Povo, Trento, Italy.
EM mohamad.gharib@unifi.it; paolo.giorgini@unitn.it
RI Gharib, Mohamad/AAA-3573-2020; Giorgini, Paolo/G-7886-2012
OI Gharib, Mohamad/0000-0003-2286-2819; Giorgini, Paolo/0000-0003-4152-9683
FU European Research Council [267856]; European Union's Horizon 2020
   research and innovation programme [653642 - VisiOn]
FX This research has received funding from the European Research Council
   advanced grant No. 267856, "Lucretius: Foundations for Software
   Evolution", and the European Union's Horizon 2020 research and
   innovation programme under grant No. 653642 - VisiOn.
CR AAMODT A, 1995, DATA KNOWL ENG, V16, P191, DOI 10.1016/0169-023X(95)00017-M
   Ackoff R. L., 1989, Journal of applied system analysis, V16, P3, DOI DOI 10.5840/DU2005155/629
   [Anonymous], 2012, MEASURING DATA QUALI
   [Anonymous], QUAL CONTROL APPL ST
   [Anonymous], 2017, 2017 12 SYST SYST EN, DOI DOI 10.1109/SYSOSE.2017.7994946
   [Anonymous], MANAGEMENT SCI MODEL
   [Anonymous], 2010, Report of the Stafs of The CFTC And SEC to The Joint Advisory Committee on Emerging Regulatory Issues
   [Anonymous], 2005, Secure Systems Development with UML
   Anton AI, 1998, PROC INT CONF SOFTW, P157, DOI 10.1109/ICSE.1998.671112
   Ballou D, 1998, MANAGE SCI, V44, P462, DOI 10.1287/mnsc.44.4.462
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   Batini Carlo., 2006, DATA QUALITY
   Bell D, 2007, INFORM SYST FRONT, V9, P69, DOI 10.1007/s10796-006-9018-z
   Bertino E, 2010, LECT NOTES COMPUT SC, V6358, P1, DOI 10.1007/978-3-642-15546-8_1
   Bertino E, 2009, LECT NOTES COMPUT SC, V5463, P22, DOI 10.1007/978-3-642-00887-0_2
   Bihlmeyer R, 2009, DLV USER MANUAL
   Bovee M, 2003, INT J INTELL SYST, V18, P51, DOI 10.1002/int.10074
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   BUCKLAND MK, 1991, J AM SOC INFORM SCI, V42, P351, DOI 10.1002/(SICI)1097-4571(199106)42:5<351::AID-ASI5>3.0.CO;2-3
   Cappiello C., 2013, ECIS, P216
   Dai CY, 2008, LECT NOTES COMPUT SC, V5159, P82
   Dalpiaz F., 2016, Security Requirements Engineering: Designing Secure Socio-Technical Systems
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Fowler M., 1997, ANAL PATTERNS REUSAB
   Franca B., 2015, CLEI ELECT J, V18, P5
   Gharib M, 2015, LECT NOTES BUSINESS, V214, P379, DOI [10.1007/978-3-319-19237-6_24, DOI 10.1007/978-3-319-19237-6_24]
   Gharib M., 2013, CEUR WORKSH P, V978, P85
   Gharib M., 2014, TECH REP
   Gharib M, 2015, LECT NOTES BUS INF P, V235, P254, DOI 10.1007/978-3-319-25897-3_17
   Gharib M, 2015, INT CONF RES CHAL, P139, DOI 10.1109/RCIS.2015.7128874
   Gharib M, 2015, LECT NOTES COMPUT SC, V9013, P49, DOI 10.1007/978-3-319-16101-3_4
   Gharipour M, 2016, R RES LANDSCAPE ENV, P1
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Juran J.M., 1988, QUALITY CONTROL HDB, V9
   Kyle A.S., 2010, J FINANC, P1, DOI [10.2139/ssrn.1686004, DOI 10.2139/SSRN.1686004]
   Lin L, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P371
   Liu L., 2002, ICIQ, P292
   Massacci F, 2008, LECT NOTES COMPUT SC, V5332, P1087
   McCracken Daniel D, 2003, Encyclopedia of Computer Science, P129
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Mouratidis H, 2007, INT J SOFTW ENG KNOW, V17, P285, DOI 10.1142/S0218194007003240
   Nanex L., 2010, NANEX FLASH CRASH SU
   Nurse J.R., 2011, The International Conference on Computer Applications and Network Security (ICCANS) 2011, P492
   Nurse J. R. C., 2011, 2011 Workshop on Socio-Technical Aspects in Security and Trust, P60, DOI 10.1109/STAST.2011.6059257
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Pipino LL., 2002, Communications of the ACM, V45, P211, DOI [DOI 10.1145/505248.506010, 10.1145/505248.506010]
   Prat N., 2008, P ANN HAW INT C SYST
   REEVES CA, 1994, ACAD MANAGE REV, V19, P419, DOI 10.2307/258934
   Scannapieco M., 2002, P 7 INT C INF QUAL, P279
   Shankaranarayan G., 2000, Proc. Int. Conf. Information Quality, Cambridge, P1
   Sommerville I, 2012, COMMUN ACM, V55, P71, DOI 10.1145/2209249.2209268
   Stavri P Zoe, 2003, AMIA Annu Symp Proc, P629
   Stenmark D., 2001, RELATIONSHIP INFORM, V24, P1
   STEVENS P, 2006, USING UML SOFTWARE E
   Venable John, 2012, Design Science Research in Information Systems. Advances in Theory and Practice. Proceedings 7th International Conference, DESRIST 2012, P423, DOI 10.1007/978-3-642-29863-9_31
   Wang R. Y., 1996, Journal of Management Information Systems, V12, P5
   WANG RY, 1995, DECIS SUPPORT SYST, V13, P349, DOI 10.1016/0167-9236(93)E0050-N
   Wang RY, 1998, COMMUN ACM, V41, P58, DOI 10.1145/269012.269022
   Watts S, 2009, DECIS SUPPORT SYST, V48, P202, DOI 10.1016/j.dss.2009.07.012
   Wieringa Roel., 2009, Proceedings of the 4th international conference on design science research in information systems and technology, P8
   Wohlin C., 2012, Experimentation in Software Engineering
   Yu E., 2010, SOCIAL MODELING REQU
   Zannone N, 2006, THESIS
NR 63
TC 4
Z9 4
U1 1
U2 13
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2019
VL 107
BP 83
EP 100
DI 10.1016/j.infsof.2018.11.002
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HJ0YN
UT WOS:000456889200007
DA 2024-07-18
ER

PT J
AU Tripathi, N
   Seppänen, P
   Boominathan, G
   Oivo, M
   Liukkunen, K
AF Tripathi, Nirnaya
   Seppanen, Pertti
   Boominathan, Ganesh
   Oivo, Markku
   Liukkunen, Kari
TI Insights into startup ecosystems through exploration of multi-vocal
   literature
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Startup; Ecosystem; Startup ecosystem; Software startup; Multi-vocal
   literature review; Systematic literature review
ID SOFTWARE ECOSYSTEMS; COMPANIES
AB Context: Successful startup firms have the ability to create jobs and contribute to economic welfare. A suitable ecosystem developed around startups is important to form and support these firms. In this regard, it is crucial to understand the startup ecosystem, particularly from researchers' and practitioners' perspectives. However, a systematic literature research on the startup ecosystem is limited. Objective: In this study, our objective was to conduct a multi-vocal literature review and rigorously find existing studies on the startup ecosystem in order to organize and analyze them, know the definitions and major elements of this ecosystem, and determine the roles of such elements in startups' product development. Method: We conducted a multi-vocal literature review to analyze relevant articles, which are published technical articles, white papers, and Internet articles that focused on the startup ecosystem. Our search generated 18,310 articles, of which 63 were considered primary candidates focusing on the startup ecosystem. Results: From our analysis of primary articles, we found four definitions of a startup ecosystem. These definitions used common terms, such as stakeholders, supporting organization, infrastructure, network, and region. Out of 63 articles, 34 belonged to the opinion type, with contributions in the form of reports, whereas over 50% had full relevance to the startup ecosystem. We identified eight major elements (finance, demography, market, education, human capital, technology, entrepreneur, and support factors) of a startup ecosystem, which directly or indirectly affected startups. Conclusions: This study aims to provide the state of the art on the startup ecosystem through a multi-vocal literature review. The results indicate that current knowledge on the startup ecosystem is mainly shared by non-peer-reviewed literature, thus signifying the need for more systematic and empirical literature on the topic. Our study also provides some recommendations for future work.
C1 [Tripathi, Nirnaya; Seppanen, Pertti; Boominathan, Ganesh; Oivo, Markku; Liukkunen, Kari] Univ Oulu, M3S Res Grp, Oulu 90014, Finland.
C3 University of Oulu
RP Tripathi, N (corresponding author), Univ Oulu, M3S Res Grp, Oulu 90014, Finland.
EM nirnaya.tripathi@oulu.fi
OI Liukkunen, Kari/0000-0002-0719-4712; Seppanen,
   Pertti/0000-0002-4289-2487; Tripathi, Nirnaya/0000-0001-8506-1176
CR Aaltonen A., 2016, FACTORS SHAPING ENTR
   [Anonymous], 2016, P 2 INT WORKSH SOFTW
   [Anonymous], 2011, 2011 P PICMET 11 TEC
   [Anonymous], 2013, 4 STEPS EPIPHANY SUC
   [Anonymous], 2010, The importance of startups in job creation and job destruction
   [Anonymous], 2016, INDIA STARTUP ECOSYS
   [Anonymous], RTMAC201501 U SAO PA
   [Anonymous], SOFTWARE STARTUP ECO
   Bajwa S. S., 2016, EMPIR SOFTW ENG, P1
   Blank S., 2012, The Startup Owner's Manual The Step-by-Step Guide for Building a Great Company
   Bosch J, 2010, J SYST SOFTWARE, V83, P67, DOI 10.1016/j.jss.2009.06.051
   Carree M. A., HDB ENTREPRENEURSHIP, P557
   Cohen B., 2006, BUS STRATEG ENVIRON, V15, P1, DOI [DOI 10.1002/BSE.428, 10.1002/bse.428]
   Crowne M, 2002, IEMC-2002: IEEE INTERNATIONAL ENGINEERING MANAGEMENT CONFERENCE, VOLS I AND II, PROCEEDINGS, P338, DOI 10.1109/IEMC.2002.1038454
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cukier D., 2015, DESIGNING MATURITY M
   Cukier D, 2015, LECT NOTES COMPUT SC, V9459, P600, DOI 10.1007/978-3-319-26844-6_45
   Garousi V., 2016, Proceedings of the 20th international conference on evaluation and assessment in software engineering, P26
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Ives AR, 2007, SCIENCE, V317, P58, DOI 10.1126/science.1133258
   Jansen S, 2009, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE-COMPANION.2009.5070978
   Keele S., TECHNICAL REPORT
   Kenney M, 2001, LEAS ORG MAN SERIES, P127
   Klotins E, 2015, LECT NOTES BUS INF P, V210, P245, DOI 10.1007/978-3-319-19593-3_22
   Makinen S., 2012, 18th International Conference on Engineering, Technology and Innovation, pp, P1, DOI DOI 10.1109/ICE.2012.6297653
   Manikas K, 2016, J SYST SOFTWARE, V117, P84, DOI 10.1016/j.jss.2016.02.003
   Manikas K, 2013, J SYST SOFTWARE, V86, P1294, DOI 10.1016/j.jss.2012.12.026
   Moore J.F., 1997, DEATH COMPETITION
   Neck HM, 2004, J SMALL BUS MANAGE, V42, P190, DOI 10.1111/j.1540-627X.2004.00105.x
   OGAWA RT, 1991, REV EDUC RES, V61, P265, DOI 10.3102/00346543061003265
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Pilinkiene V, 2014, PROCD SOC BEHV, V156, P365, DOI 10.1016/j.sbspro.2014.11.204
   Ries E, 2011, The Lean Startup
   Ruixue Xia, 2010, Proceedings 2010 Ninth International Conference on Mobile Business/2010 Ninth Global Mobility Roundtable. ICMB-GMR 2010, P1, DOI 10.1109/ICMB-GMR.2010.30
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Safwan M., 2016, Strategic Direction Volume, V32, P12, DOI [https://doi.org/10.1108/SD-03-2016-0036, DOI 10.1108/SD-03-2016-0036]
   Seppänen P, 2017, LECT NOTES BUS INF P, V304, P3, DOI 10.1007/978-3-319-69191-6_1
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Templier M., 2015, COMMUN ASS INF SYST, V37
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Torres N. N., 2016, P 12 BRAZ S INF SYST, P51
   Tripathi N, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P125, DOI 10.1109/SEAA.2017.34
   Tripathi N, 2016, COMM COM INF SC, V609, P150, DOI 10.1007/978-3-319-38980-6_12
   Wang Xiaofeng, 2016, INT C AG SOFTW DEV, P169, DOI 10.1007/978-3-319-33515-5_14
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 48
TC 41
Z9 45
U1 9
U2 84
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2019
VL 105
BP 56
EP 77
DI 10.1016/j.infsof.2018.08.005
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HD5RF
UT WOS:000452586900005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU He, X
   Chen, X
   Cai, SB
   Zhang, Y
   Huang, G
AF He, Xiao
   Chen, Xing
   Cai, Sibo
   Zhang, Ying
   Huang, Gang
TI Testing bidirectional model transformation using metamorphic testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Metamorphic testing; Bidirectional model transformation; Model driven
   engineering
ID COMPLETENESS; CORRECTNESS; GRAPH
AB Context In model-based software development, bidirectional model transformation (BX) provides a fundamental solution to model synchronization that can retain the consistency among models. Similar to conventional programs, a BX program may also contain bugs. Accordingly, a BX program must be tested prior to being used in practice. A challenging problem of testing BX programs is to construct test oracles (e.g., assertions and expected output models), which are usually difficult and/or expensive to manually specify.
   Objective: In we paper, we investigate how to alleviate the oracle problem in BX testing via reducing the costs of developing test oracles.
   Method: We propose a metamorphic testing approach for BX. First, we identify three generic metamorphic relations for BX. Afterwards, we define a metamodel MT4MT to establish metamorphic test groups and test scripts. We also propose a testing framework to support metamorphic testing based on MT4MT.
   Results: We conducted an experimental study of mutation analysis and a case study on three ATL-based ad-hoc BXs. The results of the experimental study and the case study showed that our approach killed 79.38% mutants and enabled us to test real-world ATL-based ad-hoc BXs. We also demonstrated that MT4MT can be used to test the semantics properties of BXs.
   Conclusion: Our approach is an effective and practical approach with lower costs of developing test oracles.
C1 [He, Xiao] Univ Sci & Technol Beijing, Sch Comp & Commun Engn, 30 Xueyuan Rd, Beijing 100083, Peoples R China.
   [Chen, Xing] Fuzhou Univ, Fujian Prov Key Lab Network Comp & Intelligent In, Fuzhou 350116, Fujian, Peoples R China.
   [Cai, Sibo; Zhang, Ying; Huang, Gang] Peking Univ, Minist Educ, Key Lab High Confidence Software Technol, Beijing 100871, Peoples R China.
   [He, Xiao] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.
   [Cai, Sibo; Zhang, Ying] Internetware Ltd Co, Beijing 100080, Peoples R China.
C3 University of Science & Technology Beijing; Fuzhou University; Peking
   University; Nanjing University
RP He, X (corresponding author), Univ Sci & Technol Beijing, Sch Comp & Commun Engn, 30 Xueyuan Rd, Beijing 100083, Peoples R China.
EM hexiao@ustb.edu.cn
RI zhang, ying/HJB-1230-2022
OI he, xiao/0000-0002-3000-0795
FU National Key R&D Program of China [2017YFB1002000]; National Natural
   Science Foundation of China [61300009, 61472180]
FX This work was supported by the National Key R&D Program of China under
   Grant No. 2017YFB1002000, the National Natural Science Foundation of
   China (Nos. 61300009, 61472180). We are grateful to Prof. T.Y. Chen
   (Swinburne University of Technology), Prof. Tao Yue (Simula Research
   Laboratory), and Dr. Zheng Cheng for their valuable comments and
   suggestions about this paper.
CR AB L, 2015, SOFTW SYST MODEL, V14, P1003
   Ab Rahim L, 2010, LECT NOTES COMPUT SC, V6394, P166
   [Anonymous], 2016, SOFTW SYST MODEL
   BAAR T, 2007, BERLIN, V6, P70
   Basili V. R., 1992, SOFTWARE MODELING AN
   Brottier E, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P85
   Chan F., 1998, P IASTED INT C SOFTW, P191
   Chan WK, 2006, INT J SOFTW ENG KNOW, V16, P677, DOI 10.1142/S0218194006002951
   Chen LX, 2013, INT CONF QUAL SOFTW, P313, DOI 10.1109/QSIC.2013.27
   Chen T.Y., 1998, Metamorphic testing: a new approach for generating next test cases
   Chen TY, 2016, COMPUTER, V49, P48, DOI 10.1109/MC.2016.176
   Chen TY, 2016, J SYST SOFTWARE, V116, P177, DOI 10.1016/j.jss.2015.07.037
   Chen TY, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-24
   Chen TY, 2002, P INT COMP SOFTW APP, P327, DOI 10.1109/CMPSAC.2002.1045022
   Chen TY, 2003, INFORM SOFTWARE TECH, V45, P1, DOI 10.1016/S0950-5849(02)00129-5
   Cicchetti A., 2010, JTL A BIDIRECTIONAL, P183
   Cicchetti A, 2011, LECT NOTES COMPUT SC, V6563, P183, DOI 10.1007/978-3-642-19440-5_11
   Diskin Z, 2016, J SYST SOFTWARE, V111, P298, DOI 10.1016/j.jss.2015.06.003
   Diskin Z, 2011, LECT NOTES COMPUT SC, V6981, P304, DOI 10.1007/978-3-642-24485-8_22
   Diskin Z, 2008, LECT NOTES COMPUT SC, V5301, P21, DOI 10.1007/978-3-540-87875-9_2
   Ehrig H, 2008, LECT NOTES COMPUT SC, V5214, P194, DOI 10.1007/978-3-540-87405-8_14
   Ehrig K, 2009, SOFTW SYST MODEL, V8, P479, DOI 10.1007/s10270-008-0095-y
   Finot O., 2013, INTERNATIONAL CONFER
   Fischer S, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-015-5316-8
   Fleurey F, 2009, SOFTW SYST MODEL, V8, P185, DOI 10.1007/s10270-007-0074-8
   Foster JN, 2007, ACM T PROGR LANG SYS, V29, DOI [10.1145/1232420.1232424, 10.1145/1047659.1040325]
   Fürst L, 2015, SOFTW SYST MODEL, V14, P1297, DOI 10.1007/s10270-013-0380-2
   GARCIADOMINGUEZ A, 2011, BERLIN, V11, P395
   Gerking C., 2015, 6TH INTERNATIONAL WO, P1
   Giese Holger, 2012, Graph Transformations. Proceedings 6th International Conference, ICGT 2012, P249, DOI 10.1007/978-3-642-33654-6_17
   Giese H., MODEL SYNCHRONIZATIO, P555
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   GOGOLLA M, 2011, BERLIN, V7, P221
   Gonzalez C. A., 2012, PROCEEDINGS OF 15TH, P449
   Guerra E, 2015, SOFTW SYST MODEL, V14, P623, DOI 10.1007/s10270-013-0369-x
   Guerra E, 2013, AUTOMAT SOFTW ENG, V20, P5, DOI 10.1007/s10515-012-0102-y
   He X., 2016, J SYST SOFTW
   He X, 2017, P INT COMP SOFTW APP, P224, DOI 10.1109/COMPSAC.2017.252
   He X, 2016, 2016 10TH INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE), P57, DOI 10.1109/TASE.2016.26
   He X, 2014, P INT COMP SOFTW APP, P11, DOI 10.1109/COMPSAC.2014.103
   He X, 2014, SCI CHINA INFORM SCI, V57, DOI 10.1007/s11432-013-4919-1
   Hermann F, 2015, SOFTW SYST MODEL, V14, P241, DOI 10.1007/s10270-012-0309-1
   Hidaka S, 2016, SOFTW SYST MODEL, V15, P907, DOI 10.1007/s10270-014-0450-0
   Jiang M., 2014, SOFTWARE ENGINEERING
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kawanaka S, 2006, ACM SIGPLAN NOTICES, V41, P201, DOI 10.1145/1160074.1159830
   Khan Y, 2013, IEEE ICST WORKSHOP, P43, DOI 10.1109/ICSTW.2013.13
   Ko HS, 2016, PEPM'16: PROCEEDINGS OF THE 2016 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION, P61, DOI 10.1145/2847538.2847544
   Kolovos DimitriosS., 2006, Global Integrated Model Management (GaMMa), P13, DOI DOI 10.1145/1138304.1138308
   Lauder M., 2012, BIDIRECTIONAL MODEL, P287
   Lin Y., A TESTING FRAMEWORK, P219
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Lúcio L, 2016, SOFTW SYST MODEL, V15, P647, DOI 10.1007/s10270-014-0429-x
   MACEDO N, 2013, SPRINGER, P297
   Maoz S, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P24, DOI 10.1109/MODELS.2015.7338232
   Mottu J., 2008, PROCEEDINGS OF INTER
   Mottu JM, 2006, LECT NOTES COMPUT SC, V4066, P376
   MOUGENOT A, 2009, SPRINGER, V5, P130
   Oakes BJ, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P256, DOI 10.1109/MODELS.2015.7338256
   OMG, 2015, TECHNICAL REPORT FOR
   Pacheco H, 2014, PPDP'14: PROCEEDINGS OF THE 16TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING, P147, DOI 10.1145/2643135.2643141
   Popoola S, 2016, LECT NOTES COMPUT SC, V9765, P36, DOI 10.1007/978-3-319-42064-6_3
   Scheidgen M., 2015, PROC 3 WORKSHOP SCAL, P1
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Selim G.M., 2012, Proceedings of the First Workshop on the Analysis of Model Transformations, P21
   SEN S, 2009, BERLIN, V2009, P148
   Song H, 2011, J SYST SOFTWARE, V84, P711, DOI 10.1016/j.jss.2010.12.009
   Stenzel K, 2015, SOFTW SYST MODEL, V14, P981, DOI 10.1007/s10270-013-0351-7
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Sun CA, 2012, INT J WEB SERV RES, V9, P51, DOI 10.4018/jwsr.2012010103
   Taentzer Gabriele, 2012, ELECTR COMMUN, V47, DOI DOI 10.14279/TUJ.ECEASST.47.727
   Troya J, 2018, J SYST SOFTWARE, V136, P188, DOI 10.1016/j.jss.2017.05.043
   Troya J, 2015, IEEE ICST WORKSHOP
   Vogel T., 2009, PROCEEDINGS OF 12TH
   WIEBER M, 2014, SPRINGER, V6, P1
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Xiong YF, 2013, SOFTW SYST MODEL, V12, P89, DOI 10.1007/s10270-010-0187-3
   Yang ZB, 2014, J SYST SOFTWARE, V93, P42, DOI 10.1016/j.jss.2014.02.058
   Zhang Jie, 2014, P 29 ACM IEEE INT C, P701, DOI DOI 10.1145/2642937.2642994
   Zhou ZQ, 2016, IEEE T SOFTWARE ENG, V42, P264, DOI 10.1109/TSE.2015.2478001
NR 81
TC 7
Z9 9
U1 2
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2018
VL 104
BP 109
EP 129
DI 10.1016/j.infsof.2018.07.010
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ1PB
UT WOS:000449138900008
DA 2024-07-18
ER

PT J
AU Mi, Q
   Keung, J
   Xiao, Y
   Mensah, S
   Gao, YJ
AF Mi, Qing
   Keung, Jacky
   Xiao, Yan
   Mensah, Solomon
   Gao, Yujin
TI Improving code readability classification using convolutional neural
   networks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code readability; Convolutional Neural Network; Deep learning; Program
   comprehension; Empirical software engineering; Open source software
AB Context Code readability classification (which refers to classification of a piece of source code as either readable or unreadable) has attracted increasing concern in academia and industry. To construct accurate classification models, previous studies depended mainly upon handcrafted features. However, the manual feature engineering process is usually labor-intensive and can capture only partial information about the source code, which is likely to limit the model performance.
   Objective: To improve code readability classification, we propose the use of Convolutional Neural Networks (ConvNets).
   Method: We first introduce a representation strategy (with different granularities) to transform source codes into integer matrices as the input to ConvNets. We then propose DeepCRM, a deep learning-based model for code readability classification. DeepCRM consists of three separate ConvNets with identical architectures that are trained on data preprocessed in different ways. We evaluate our approach against five state-of-the-art code readability models.
   Results: The experimental results show that DeepCRM can outperform previous approaches. The improvement in accuracy ranges from 2.4% to 17.2%.
   Conclusions: By eliminating the need for manual feature engineering, DeepCRM provides a relatively improved performance, confirming the efficacy of deep learning techniques in the task of code readability classification.
C1 [Mi, Qing; Keung, Jacky; Xiao, Yan; Mensah, Solomon] City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
   [Gao, Yujin] Beijing Inst Technol, Sch Comp Sci & Technol, Beijing, Peoples R China.
C3 City University of Hong Kong; Beijing Institute of Technology
RP Mi, Q (corresponding author), City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
EM qing.mi@my.cityu.edu.hk; jacky.keung@cityu.edu.hk;
   yanxiao6-c@my.cityu.edu.hk; smensah2-c@my.cityu.edu.hk;
   paulgyj@bit.edu.cn
RI Keung, Jacky/X-4693-2019; Keung, Jacky/ABA-7089-2020; Mi,
   Qing/GQI-1620-2022
OI Keung, Jacky/0000-0002-3803-9600; Mi, Qing/0000-0001-5063-3189; XIAO,
   Yan/0000-0002-2563-083X
FU General Research Fund of the Research Grants Council of Hong Kong
   [11208017]; City University of Hong Kong [7004683, 9678149]
FX This work is supported in part by the General Research Fund of the
   Research Grants Council of Hong Kong (no. 11208017), and the research
   funds of City University of Hong Kong (no. 7004683 and 9678149).
CR Aggarwal KK, 2002, P A REL MAI, P235, DOI 10.1109/RAMS.2002.981648
   Lam AN, 2015, IEEE INT CONF AUTOM, P476, DOI 10.1109/ASE.2015.73
   Nguyen AT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P858, DOI 10.1109/ICSE.2015.336
   [Anonymous], IEEE T SOFTWARE ENG
   [Anonymous], 2016, 12 INT C PRED MOD DA, DOI DOI 10.1145/2972958.2972963
   [Anonymous], CONVOLUTIONAL NEURAL
   [Anonymous], P 30 INT C MACH LEAR
   BASIT H A, 2007, P 6 JOINT M EUR SOFT, P513, DOI DOI 10.1145/1287624.1287698
   Binkley D, 2009, INT C PROGRAM COMPRE, P158, DOI 10.1109/ICPC.2009.5090039
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Börstler J, 2016, IEEE T SOFTWARE ENG, V42, P886, DOI 10.1109/TSE.2016.2527791
   Börstler J, 2016, SOFTWARE QUAL J, V24, P231, DOI 10.1007/s11219-015-9267-5
   Buse RPL, 2012, PROC INT CONF SOFTW, P987, DOI 10.1109/ICSE.2012.6227122
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Carruthers A, 2013, DERMATOL SURG, V39, P149, DOI 10.1111/dsu.12130
   Choetkiertikul M., 2016, IEEE T SOFTWARE ENG, V9
   Collobert R, 2011, J MACH LEARN RES, V12, P2493
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   De Boer PT, 2005, ANN OPER RES, V134, P19, DOI 10.1007/s10479-005-5724-z
   Doan A, 2011, COMMUN ACM, V54, P86, DOI 10.1145/1924421.1924442
   Dorn J, 2012, MCS Thesis, V5, P11
   Downes-Le Guin T, 2012, INT J MARKET RES, V54, P613, DOI 10.2501/IJMR-54-5-613-633
   Farr JV., 2011, Systems life cycle costing - Economic Analysis, estimation, and management
   Flesch R, 1948, J APPL PSYCHOL, V32, P221, DOI 10.1037/h0057532
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Green R, 2011, COMMUN ACM, V54, P57, DOI 10.1145/2043174.2043191
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Dam HK, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P944, DOI 10.1145/2950290.2983985
   Ibrahim JG, 1999, BIOMETRICS, V55, P591, DOI 10.1111/j.0006-341X.1999.00591.x
   King DB, 2015, ACS SYM SER, V1214, P1
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   LeCun Y, 1989, NEURAL COMPUT, V1, P541, DOI 10.1162/neco.1989.1.4.541
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Lee T, 2013, Int. J. Softw. Eng. Appl, V7, P413
   Liken Rensis, 1932, Archives of psychology
   Mikolov Tomas, 2013, Preprints
   Peng H, 2015, LECT NOTES ARTIF INT, V9403, P547, DOI 10.1007/978-3-319-25159-2_49
   Posnett D, 2011, P 8 WORKING C MINING, P73
   Sasaki Y, 2013, EUR CON SFTWR MTNCE, P361, DOI 10.1109/CSMR.2013.50
   Scalabrino S, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Scalabrino S, 2017, IEEE INT CONF AUTOM, P417, DOI 10.1109/ASE.2017.8115654
   Sharif Bonita, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P196, DOI 10.1109/ICPC.2010.41
   Szegedy C, 2015, PROC CVPR IEEE, P1, DOI 10.1109/CVPR.2015.7298594
   Uni Yarmouk., 2013, International Journal of Software Engineering and Its Applications, V7, P441
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wang XR, 2014, J SOFTW-EVOL PROC, V26, P27, DOI 10.1002/smr.1581
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Zhang Y, 2017, ADV SOC SCI EDUC HUM, V185, P253
NR 50
TC 29
Z9 31
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2018
VL 104
BP 60
EP 71
DI 10.1016/j.infsof.2018.07.006
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ1PB
UT WOS:000449138900004
DA 2024-07-18
ER

PT J
AU Mi, Q
   Keung, J
   Huo, YQ
   Mensah, S
AF Mi, Qing
   Keung, Jacky
   Huo, Yuqi
   Mensah, Solomon
TI Not all bug reopens are negative: A case study on eclipse bug reports
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Non-negative bug reopen; Bug report; Reopen cycle; Data quality; Open
   source software; Empirical software engineering
AB Context: We observed a special type of bug reopen that has no direct impact on the user experience or the normal operation of the system being developed. We refer to these as non negative bug reopens.
   Objective: Non-negative bug reopens are novel and somewhat contradictory to popular conceptions. Therefore, we thoroughly explored these phenomena in this study.
   Method: We begin with a novel approach that preliminarily characterizes non-negative bug reopens. Based on bug reports extracted from Eclipse Bugzilla, we then examined a case study to compare non-negative and regular bug reopens using the Wilcoxon-Mann-Whitney test.
   Results: The results show that non-negative bug reopens are statistically significantly different than regular bug reopens, based on their survival times and the number of developers involved in the entire debugging process.
   Conclusion: Taking into account the significant differences, we suggest that the effects of non-negative bug reopens should be considered in future research in related areas, such as bug triage and reopened bug prediction.
C1 [Mi, Qing; Keung, Jacky; Mensah, Solomon] City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
   [Huo, Yuqi] Remain Univ China, Sch Informat, Beijing, Peoples R China.
C3 City University of Hong Kong; Renmin University of China
RP Mi, Q (corresponding author), City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
EM Qing.Mi@my.cityu.edu.hk; Jacky.Keung@cityu.edu.hk; bnhony@ruc.edu.cn;
   smensah2-c@my.cityu.edu.hk
RI Keung, Jacky/ABA-7089-2020; Keung, Jacky/X-4693-2019; Mi,
   Qing/GQI-1620-2022
OI Keung, Jacky/0000-0002-3803-9600; Mi, Qing/0000-0001-5063-3189
FU General Research Fund of the Research Grants Council of Hong Kong
   [11208017]; research funds of City University of Hong Kong [7004683]
FX We thank the anonymous reviewers for their constructive comments and
   suggestions. This work is supported in part by the General Research Fund
   of the Research Grants Council of Hong Kong (No. 11208017), and the
   research funds of City University of Hong Kong (No. 7004683).
CR [Anonymous], AUTOMATED SOFTWARE E
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Jongyindee A, 2012, IEICE T INF SYST, VE95D, P2202, DOI 10.1587/transinf.E95.D.2202
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Lamkanfi A, 2013, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2013.6624028
   Mi Q, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915986
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Thung F, 2015, AUTOMAT SOFTW ENG, V22, P561, DOI 10.1007/s10515-014-0169-8
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Zimmermann T., 2012, 2012 34 INT C SOFTW, P1074, DOI [10.1109/ICSE.2012.6227112, DOI 10.1109/ICSE.2012.6227112]
NR 10
TC 3
Z9 4
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2018
VL 99
BP 93
EP 97
DI 10.1016/j.infsof.2018.03.006
PG 5
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GG5XA
UT WOS:000432767900008
DA 2024-07-18
ER

PT J
AU Romano, S
   Scanniello, G
   Antoniol, G
   Marchetto, A
AF Romano, Simone
   Scanniello, Giuseppe
   Antoniol, Giuliano
   Marchetto, Alessandro
TI SPIRITuS: a SimPle Information Retrieval regressIon Test Selection
   approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE SPIRITuS; Regression test case selection; Regression testing
ID TEST-CASE PRIORITIZATION; TRACEABILITY LINKS; SOURCE-CODE; LOCATION;
   MUTATION; TOOL
AB Context: Regression Test case Selection (RTS) approaches aim at selecting only those test cases of a test suite that exercise changed parts of the System Under Test (SUT) or parts affected by changes.
   Objective:We present SPIRITuS (SimPle Information Retrieval regressIon Test Selection approach). It uses method code coverage information and a Vector Space Model to select test cases to be run. In a nutshell, the extent of a lexical modification to a method is used to decide if a test case has to be selected. The main design goals of SPIRITuS are to be: (i) easy to adapt to different programming languages and (ii) tunable via an easy to understand threshold.
   Method:To assess SPIRITuS, we conducted a large experiment on 389 faulty versions of 14 open-source programs implemented in Java. We were mainly interested in investigating the tradeoff between the number of selected test cases from the original test suite and fault detection effectiveness. We also compared SPIRITuS against well-known RTS approaches.
   Resuks:SPIRITuS selects a number of test cases significantly smaller than the number of test cases the other approaches select at the price of a slight reduction in fault detection capability.
   Conclusions:SPIRITuS can be considered a viable competitor of existing test case selection approaches especially when the average number of test cases covering a modified method increases (such information can be easily derived before test case selection takes place).
C1 [Romano, Simone; Scanniello, Giuseppe] Univ Basilicata, Potenza, Italy.
   [Antoniol, Giuliano] Ecole Polytech Montreal, Montreal, PQ, Canada.
C3 University of Basilicata; Universite de Montreal; Polytechnique Montreal
RP Romano, S (corresponding author), Univ Basilicata, Potenza, Italy.
EM simone.romano@unibas.it; giuseppe.scanniello@unibas.it;
   antoniol@ieee.org; alex.marchetto@gmail.com
RI Romano, Simone/ABD-6504-2020; Romano, Simone/JVZ-6529-2024; Marchetto,
   Alessandro/AAE-4179-2022
OI Romano, Simone/0000-0003-4880-3622; Marchetto,
   Alessandro/0000-0002-6833-896X
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2014, The Java Language Specification, Java SE
   [Anonymous], INT S SOFTW TEST AN
   [Anonymous], 2014, ACM T SOFTWARE ENG M
   Antoniol G, 2000, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2000.883003
   Arnaoudova V, 2014, IEEE T SOFTWARE ENG, V40, P502, DOI 10.1109/TSE.2014.2312942
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Biswas S, 2011, INFORM-J COMPUT INFO, V35, P289
   Busjaeger B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P975, DOI 10.1145/2950290.2983954
   Chen JJ, 2016, IEEE INT CONF SOFTW, P266, DOI 10.1109/ICST.2016.19
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Corazza Anna, 2018, Software Quality Journal, V26, P751, DOI 10.1007/s11219-016-9347-1
   de Souza LS, 2011, PROC INT C TOOLS ART, P245, DOI 10.1109/ICTAI.2011.45
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Do H., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering (SIGSOFT '08/FSE-16), P71
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Gligoric M., 2015, P 2015 INT S SOFTWAR, P211, DOI 10.1145/2771783.2771784
   Gligoric M, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P713, DOI 10.1109/ICSE.2015.230
   Gligoric M, 2014, LECT NOTES COMPUT SC, V8559, P293, DOI 10.1007/978-3-319-08867-9_19
   Gotlieb Arnaud., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P171
   Graves TL, 1998, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.1998.671115
   Harrold MJ, 2001, ACM SIGPLAN NOTICES, V36, P312, DOI 10.1145/504311.504305
   Jiang Zhen Ming, 2006, MSR '06: Proceedings of the 2006 international workshop on Mining software repositories, P179, DOI DOI 10.1145/1137983.1138030
   Legunsen O, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P583, DOI 10.1145/295029.2950361
   Lingming Zhang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P23, DOI 10.1109/ICSM.2011.6080769
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Maiming C. D., 2009, INTRO INFORM RETRIEV
   Marchetto A, 2016, IEEE T SOFTWARE ENG, V42, P918, DOI 10.1109/TSE.2015.2510633
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Mirarab S, 2012, IEEE T SOFTWARE ENG, V38, P936, DOI 10.1109/TSE.2011.56
   Panichella A, 2015, IEEE T SOFTWARE ENG, V41, P358, DOI 10.1109/TSE.2014.2364175
   Pfleeger SL, 2000, IEEE SOFTWARE, V17, P27, DOI 10.1109/52.819965
   Raji F., 1981, Proceedings of the National Telecommunications Conference, VB-6-3, P1
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Romano Jeanine, 2006, ANN M FLOR ASS I RES, V177, P34
   Romano S, 2017, PROC IEEE ACM INT C, P19, DOI 10.1109/ICSE-C.2017.12
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Rothermel G, 1998, IEEE T SOFTWARE ENG, V24, P401, DOI 10.1109/32.689399
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Saha RK, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P268, DOI 10.1109/ICSE.2015.47
   Scanniello G, 2015, EMPIR SOFTW ENG, V20, P1666, DOI 10.1007/s10664-014-9327-7
   Shaowei Wang, 2011, 2011 18th Working Conference on Reverse Engineering, P92, DOI 10.1109/WCRE.2011.72
   Shi A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P246, DOI 10.1145/2635868.2635921
   Soetens QD, 2013, EUR CON SFTWR MTNCE, P101, DOI 10.1109/CSMR.2013.20
   Soetens QD, 2012, EUR CON SFTWR MTNCE, P535, DOI 10.1109/CSMR.2012.70
   Vokolos F, 1997, P INT C REL QUAL SAF
   White L. J., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P262, DOI 10.1109/ICSM.1992.242535
   Wohlin C., 2012, Experimentation in Software Engineering
   Xing ZC, 2006, WORK CONF REVERSE EN, P263
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
NR 59
TC 18
Z9 20
U1 0
U2 9
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2018
VL 99
BP 62
EP 80
DI 10.1016/j.infsof.2018.03.004
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GG5XA
UT WOS:000432767900006
DA 2024-07-18
ER

PT J
AU García-Floriano, A
   López-Martín, C
   Yáñez-Márquez, C
   Abran, M
AF Garcia-Floriano, Andres
   Lopez-Martin, Cuauhtemoc
   Yanez-Marquez, Cornelio
   Abran, Main
TI Support vector regression for predicting software enhancement effort
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software enhancement effort prediction; Support vector machine; Support
   vector regression; Statistical regression; Neural networks; Association
   rules; Decision trees; ISBSG
ID MAINTENANCE EFFORT; PROJECT EFFORT; SOURCE LINES; COST; MACHINE;
   METRICS; MODELS; SELECTION; ACCURACY; DURATION
AB Context Software maintenance (SM) has to be planned, which involves SM effort prediction. One type of SM is enhancement, where new functionality is added or existing functionality changed or deleted.
   Objective: Analyze the prediction accuracy of two types of support vector regression (epsilon-SVR and nu-SVR) when applied to predict software enhancement effort.
   Method: Both types of support vector regression used linear, polynomial, radial basis function, and sigmoid kernels. Prediction accuracies for epsilon-SVR and nu-SVR were compared with those of statistical regressions, neural networks, association rules, and decision trees. The models were trained and tested with five data sets of enhancement projects from Release 11 of the International Software Benchmarking Standards Group (ISBSG). Each data set was selected on the basis of data quality, development platform, programming language generation, and levels of effort recording.
   Results: The polynomial kernel epsilon-SVR (PK epsilon-SVR) was statistically better than statistical regression, neural networks, association rules and decision trees, with 95% confidence.
   Conclusions: A PK epsilon-SVR could be used for predicting software enhancement effort in mainframe platforms and coded in a third-generation programming languages, and when enhancement effort recording includes the efforts of the development team, its support personnel, the computer operations involvement, and end users.
C1 [Garcia-Floriano, Andres] Univ Mexiquense Bicentenario, Unidad Estudios Super Tepotzotlan, Mexico City, DF, Mexico.
   [Lopez-Martin, Cuauhtemoc] Univ Guadalajara, Dept Informat Syst, Mexico City, DF, Mexico.
   [Yanez-Marquez, Cornelio] Inst Politecn Nacl, Ctr Invest Comp, Lab Comp Inteligente, Mexico City, DF, Mexico.
   [Abran, Main] Univ Quebec, Ecole Technol Super, Dept Software Engn & Informat Technol, Montreal, PQ, Canada.
C3 Universidad de Guadalajara; Instituto Politecnico Nacional - Mexico;
   University of Quebec; Ecole de Technologie Superieure - Canada;
   University of Quebec Montreal
RP López-Martín, C (corresponding author), Univ Guadalajara, Dept Informat Syst, Mexico City, DF, Mexico.
EM andres.garcia@umb.mx; cuauhtemoc@cucea.udg.mx; cyanez@cic.ipn.mx;
   alain.abran@etsmtl.ca
RI Floriano, Andrés García/G-7761-2018; Lopez-Martin,
   Cuauhtemoc/AAL-4768-2021; Yáñez-Márquez, Cornelio/A-1411-2008; Abran,
   Alain/I-2493-2016
OI Floriano, Andrés García/0000-0002-9948-5954; Abran,
   Alain/0000-0003-2670-9061
FU Universidad Mexiquense del Bicentenario, Mexico; CUCEA of Universidad de
   Guadalajara, Jalisco, Mexico; Instituto Politecnico Nacional, Mexico;
   Consejo Nacional de Ciencia y Tecnologia (CONACyT); Ecole de technologie
   superieure - Universite du Quebec (Canada); National Research Council of
   Canada
FX The authors thank the Universidad Mexiquense del Bicentenario, Mexico;
   the CUCEA of Universidad de Guadalajara, Jalisco, Mexico; Instituto
   Politecnico Nacional, Mexico, the Consejo Nacional de Ciencia y
   Tecnologia (CONACyT), and the Ecole de technologie superieure -
   Universite du Quebec (Canada), for their support during the development
   of this work. This work has been partially funded by the National
   Research Council of Canada. In addition, we appreciate the valuable
   comments of Dr. Ivica Kalichanin-Balich.
CR Ahn Y, 2003, J SOFTW MAINT EVOL-R, V15, P71, DOI 10.1002/smr.269
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], IEEE COMPUT SOC
   [Anonymous], 2009, ISBSG GLOSSARY TERMS
   [Anonymous], 1998, 12191998 IEEE
   [Anonymous], 2009, Introduction to Probability and Statistics for Engineers and Scientists
   [Anonymous], 2011, ISBSG FIELD DESCRIPT
   BAILEY JW, 1981, P 5 INT C SOFTW ENG, P107
   Berlin S, 2009, INFORM SOFTWARE TECH, V51, P738, DOI 10.1016/j.infsof.2008.09.007
   Boehm B., 2000, COCOMO II
   Boehm BW., 1981, Software Engineering Economics
   Boser B. E., 1992, Proceedings of the Fifth Annual ACM Workshop on Computational Learning Theory, P144, DOI 10.1145/130385.130401
   Bourque P., 2014, IEEE COMPUT SOC
   Bourque P, 2007, J COMPUT SCI TECH-CH, V22, P348, DOI 10.1007/s11390-007-9051-5
   Braga PL, 2007, PROC INT C TOOLS ART, P181, DOI 10.1109/ICTAI.2007.172
   Braga PL, 2007, IEEE IJCNN, P1595, DOI 10.1109/IJCNN.2007.4371196
   Chang CC, 2011, ACM T INTEL SYST TEC, V2, DOI 10.1145/1961189.1961199
   CONOVER WJ, 1999, PRACTICAL NONPARAMET
   Corazza A, 2009, INT SYMP EMP SOFTWAR, P191, DOI 10.1109/ESEM.2009.5315991
   Corazza A., 2010, Proceedings of the 6th International Conference on Predictive Models in Software Engineering, p4:1, DOI [10.1145/1868328.1868335, DOI 10.1145/1868328.1868335]
   Corazza A, 2011, EMPIR SOFTW ENG, V16, P211, DOI 10.1007/s10664-010-9138-4
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   De Lucia A, 2005, INFORM SOFTWARE TECH, V47, P3, DOI 10.1016/j.infsof.2004.05.002
   Fan RE, 2005, J MACH LEARN RES, V6, P1889
   Fioravanti F, 2001, IEEE T SOFTWARE ENG, V27, P1062, DOI 10.1109/32.988708
   Fu, 2013, LAGRANGE MULTIPLIERS
   Goldberg Yoav, 2008, Proceedings of the 46th Annual Meeting of the Association for Computational Linguistics on Human Language Technologies: Short Papers, P237
   González-Ladrón-de-Guevara F, 2016, J SYST SOFTWARE, V113, P188, DOI 10.1016/j.jss.2015.11.040
   Hayes JH, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P254, DOI 10.1109/CSMR.2004.1281427
   Haykin S., 1994, NEURAL NETWORKS, V2
   Herbircht R., 2001, LEARNING KERNEL CLAS
   Horvat G., 2003, ADV LEARNING THEORY
   Hsu CJ, 2011, SOFTWARE QUAL J, V19, P165, DOI 10.1007/s11219-010-9110-y
   Humphrey W.S., 1995, SEI SERIES SOFTWARE
   ISBSG, 2009, GUID US ISBSG DAT RE
   Jean-Marc D., 1988, ANAL STAT PRODUCTIVI
   JORGENSEN M, 1995, IEEE T SOFTWARE ENG, V21, P674, DOI 10.1109/32.403791
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kantardzic M., 2011, Data Mining: Concepts, Models, Methods, and Algorithms
   KEMERER C, 1987, COMMUN ACM, V30
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kitchenham B., 2009, 5 INT C PRED MOD SOF
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Kohavi R, 1995, LECT NOTES ARTIF INT, V912, P174
   Leung H. K. N., 2002, Empirical Software Engineering, V7, P157, DOI 10.1023/A:1015202115651
   Li H, 2016, APPL SCI-BASEL, V6, DOI 10.3390/app6010025
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   Lopez-Martin C., 2017, 26 INT C SOFTW ENG D
   López-Martín C, 2015, APPL SOFT COMPUT, V27, P434, DOI 10.1016/j.asoc.2014.10.033
   Mendes E, 2005, J SYST SOFTWARE, V77, P157, DOI 10.1016/j.jss.2004.08.034
   Midha V, 2012, DECIS SUPPORT SYST, V54, P23, DOI 10.1016/j.dss.2012.03.002
   Min JH, 2005, EXPERT SYST APPL, V28, P603, DOI 10.1016/j.eswa.2004.12.008
   Myrtveit I, 2012, EMPIR SOFTW ENG, V17, P23, DOI 10.1007/s10664-011-9183-7
   Niessink F, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P32, DOI 10.1109/ICSM.1997.624228
   Oliveira ALI, 2006, NEUROCOMPUTING, V69, P1749, DOI 10.1016/j.neucom.2005.12.119
   Oliveira ALI, 2010, INFORM SOFTWARE TECH, V52, P1155, DOI 10.1016/j.infsof.2010.05.009
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Quinlan J.R., 1993, C4 5 PROGRAMS MACHIN
   QUINLAN JR, 1987, INT J MAN MACH STUD, V27, P221, DOI 10.1016/S0020-7373(87)80053-6
   Ramil JF, 2000, PROC IEEE INT CONF S, P163, DOI 10.1109/ICSM.2000.883036
   Salzberg S. L., 1993, C4 5 PROGRAMS MACHIN, P235
   Schölkopf B, 2000, NEURAL COMPUT, V12, P1207, DOI 10.1162/089976600300015565
   Sheetz SD, 2009, J SYST SOFTWARE, V82, P1540, DOI 10.1016/j.jss.2009.04.038
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Shin M, 2000, IEEE T SOFTWARE ENG, V26, P567, DOI 10.1109/32.852743
   Shukla Ruchi, 2008, 1st India Software Engineering Conference. ISEC 2008, P107
   Shukla R, 2012, LECT NOTES COMPUT SC, V7336, P157, DOI 10.1007/978-3-642-31128-4_12
   Smola AJ, 2004, STAT COMPUT, V14, P199, DOI 10.1023/B:STCO.0000035301.49549.88
   Song TH, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P406, DOI 10.1109/ASPEC.2007.48
   The Standish Group, 2013, CHAOS MAN THINK BIG
   Tripathy P., 2014, Software Evolution and Maintenance
   Ulziit B, 2015, J SOFTW-EVOL PROC, V27, P763, DOI 10.1002/smr.1720
   Vapnik V. N., 1998, STAT LEARNING THEORY
   Nguyen V, 2011, INFORM SOFTWARE TECH, V53, P682, DOI 10.1016/j.infsof.2010.11.003
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   Witten IH, 2011, MOR KAUF D, P1
   Yan Ku, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P482, DOI 10.1109/ICSM.2011.6080815
   Yu LG, 2006, J SOFTW MAINT EVOL-R, V18, P311, DOI 10.1002/smr.335
   Yuan JT, 2016, CHEMOMETR INTELL LAB, V156, P166, DOI 10.1016/j.chemolab.2016.06.002
NR 79
TC 34
Z9 36
U1 2
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2018
VL 97
BP 99
EP 109
DI 10.1016/j.infsof.2018.01.003
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GA0MR
UT WOS:000428008600008
DA 2024-07-18
ER

PT J
AU Silhavy, R
   Silhavy, P
   Prokopova, Z
AF Silhavy, Radek
   Silhavy, Petr
   Prokopova, Zdenka
TI Evaluating subset selection methods for use case points estimation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software Development Effort Estimation; Software size estimation;
   Clustering techniques; Spectral Clustering; K-means; Moving Window; Use
   Case Points
ID MOVING WINDOWS; SOFTWARE; REGRESSION; CLASSIFICATION; ACCURACY; PROJECTS
AB When the Use Case Points method is used for software effort estimation, users are faced with low model accuracy which impacts on its practical application. This study investigates the significance of using subset selection methods for the prediction accuracy of Multiple Linear Regression models, obtained by the stepwise approach. K-means, Spectral Clustering, the Gaussian Mixture Model and Moving Window are evaluated as appropriate subset selection techniques. The methods were evaluated according to several evaluation criteria and then statistically tested. Evaluation was performing on two independent datasets-which differ in project types and size. Both were cut by the hold-out method. If clustering were used, the training sets were clustered into 3 classes; and, for each of class, an independent regression model was created. These were later used for the prediction of testing sets. If Moving Window was used, then window of sizes 5, 10 and 15 were tested.
   The results show that clustering techniques decrease prediction errors significantly when compared to Use Case Points or moving windows methods. Spectral Clustering was selected as the best-performing solution, because it achieves a Sum of Squared Errors reduction of 32% for the first dataset, and 98% for the second dataset. The Mean Absolute Percentage Error is less than 1% for the second dataset for Spectral Clustering; 9% for moving window; and 27% for Use Case Points. When the first dataset is used, then prediction errors are significantly higher -53% for Spectral Clustering, but Use Case Points produces a 165% result.
   It can be concluded that this study proves subset selection techniques as a significant method for improving the prediction ability of linear regression models - which are used for software development effort prediction. It can also be concluded that the clustering method performs better than the moving window method.
C1 [Silhavy, Radek; Silhavy, Petr; Prokopova, Zdenka] Tomas Bata Univ Zlin, Fac Appl Infomat, Nad Stranemi 4511, Zlin 76001, Czech Republic.
C3 Tomas Bata University Zlin
RP Silhavy, R (corresponding author), Tomas Bata Univ Zlin, Fac Appl Infomat, Nad Stranemi 4511, Zlin 76001, Czech Republic.
EM radek@silhavy.cz
RI Hadj-Mabrouk, Habib/D-2851-2017; Prokopová, Zdenka/H-6371-2012; Silhavy,
   Petr/H-6414-2012; Silhavy, Radek/H-6422-2012
OI Hadj-Mabrouk, Habib/0000-0001-9322-8175; Silhavy,
   Petr/0000-0002-3724-7854; Silhavy, Radek/0000-0002-5637-8796
CR Amasaki S, 2016, PROCEEDINGS OF 2016 JOINT CONFERENCE OF THE INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P213, DOI [10.1109/IWSM-Mensura.2016.041, 10.1109/IWSM-Mensura.2016.31]
   Amasaki S, 2016, INT WORKSH EMPIR ENG, P24, DOI 10.1109/IWESEP.2016.10
   Amasaki S, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P23, DOI 10.1109/IWSM-MENSURA.2012.13
   Anandhi V, 2014, 2014 INTERNATIONAL CONFERENCE ON INTELLIGENT COMPUTING APPLICATIONS (ICICA 2014), P353, DOI 10.1109/ICICA.2014.79
   [Anonymous], NEURAL COMPUT APPL
   [Anonymous], 1993, METRICS OBJECTORY NO
   [Anonymous], ENCY BIOMETRICS
   [Anonymous], APPL SOFT COMPUT
   [Anonymous], 1995, 1995 IEEE INT C
   [Anonymous], AER C 2016 IEEE
   Bardsiri VK, 2012, IET SOFTW, V6, P461, DOI 10.1049/iet-sen.2011.0210
   Bardsiri VK, 2014, EMPIR SOFTW ENG, V19, P857, DOI 10.1007/s10664-013-9241-4
   de Myttenaere A, 2016, NEUROCOMPUTING, V192, P38, DOI 10.1016/j.neucom.2015.12.114
   Idri A, 2015, INFORM SOFTWARE TECH, V58, P206, DOI 10.1016/j.infsof.2014.07.013
   James G, 2013, SPRINGER TEXTS STAT, V103, P1, DOI [10.1007/978-1-4614-7138-7, 10.1007/978-1-4614-7138-7_1]
   Jorgensen M, 2004, EMPIR SOFTW ENG, V9, P297, DOI 10.1023/B:EMSE.0000039881.57613.cb
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Li T, 2006, KNOWL INF SYST, V10, P453, DOI 10.1007/s10115-006-0013-y
   Lokan C, 2017, EMPIR SOFTW ENG, V22, P716, DOI 10.1007/s10664-016-9446-4
   Lokan C, 2009, INT SYMP EMP SOFTWAR, P111, DOI 10.1109/ESEM.2009.5316019
   Nassif AB, 2016, NEURAL COMPUT APPL, V27, P2369, DOI 10.1007/s00521-015-2127-1
   Nassif AB, 2013, J SYST SOFTWARE, V86, P144, DOI 10.1016/j.jss.2012.07.050
   Ochodek M, 2011, INFORM SOFTWARE TECH, V53, P885, DOI 10.1016/j.infsof.2011.02.004
   Ochodek M, 2011, INFORM SOFTWARE TECH, V53, P200, DOI 10.1016/j.infsof.2010.10.005
   Prokopova Z, 2017, ADV INTELL SYST, V575, P479, DOI 10.1007/978-3-319-57141-6_51
   Saxena A, 2017, NEUROCOMPUTING, V267, P664, DOI 10.1016/j.neucom.2017.06.053
   Shepperd M., 2000, Empirical Software Engineering, V5, P175, DOI 10.1023/A:1026582314146
   Silhavy R, 2017, J SYST SOFTWARE, V125, P1, DOI 10.1016/j.jss.2016.11.029
   Silhavy R, 2015, ADV INTELL SYST, V349, P11, DOI 10.1007/978-3-319-18473-9_2
   Silhavy R, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0141887
   Soltanolkotabi M, 2014, ANN STAT, V42, P669, DOI 10.1214/13-AOS1199
   Subriadi Apol Pribadi, 2014, Journal of Theoretical and Applied Information Technology, V59, P735
   Urbanek T, 2015, SPRINGERPLUS, V4, DOI 10.1186/s40064-015-1555-9
   von Luxburg U, 2007, STAT COMPUT, V17, P395, DOI 10.1007/s11222-007-9033-z
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
NR 37
TC 37
Z9 38
U1 3
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2018
VL 97
BP 1
EP 9
DI 10.1016/j.infsof.2017.12.009
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GA0MR
UT WOS:000428008600001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Ozkaya, M
AF Ozkaya, Mert
TI Do the informal & formal software modeling notations satisfy
   practitioners for software architecture modeling?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE A survey; Software architectures; Informal/formal semantics; ADLs; UML;
   Formal specification languages
ID CLASSIFICATION; LANGUAGE; DESIGN; STATE
AB Context: Software architectures can be modeled using semantically informal (i.e., ambiguous) or formal (i.e., mathematically precise) software modeling notations.
   Objective: In this paper, 115 different practitioners from 28 different countries who work in companies that perform software development have been surveyed. The goal is to understand practitioners' knowledge and experience about informal and formal modeling notations in specifying software architectures.
   Method: The survey consists of 35 different questions, divided into three parts, i.e., the participant profile, the informal modeling, and formal modeling. The results of the survey lead to many interesting findings:
   Results: (1) Informal software modeling notations (especially UML) are practitioners' top choice in specifying software architectures (94%). (2) Despite many informal languages, some practitioners (40%) insist using informal ad-hoc techniques (i.e., simple boxes/lines and natural languages) to specify complex design decisions (e.g., structure, behaviour, and interaction). (3) Practitioners using informal notations are impressed by their low learning-curve (79%), visuality (62%), and general-purpose scope (66%). (4) Practitioners still criticise informal notations too, essentially for the lack of support for complex design decisions and their exhaustive analysis. (5) While formal modeling notations bridge this gap mentioned in step-4, many practitioners (70%) rarely use formal notations due essentially to the high-learning curve, the lack of knowledge among stake-holders, and the lack of popularity in industry. (6) Among the considered formal notations (i.e., process algebras, high-level formal specification languages, and architecture description languages (ADLs)), process algebras are never used and ADLs are the least used formal languages are ADLs (i.e., 12% frequently use ADLs). (7) Practitioners complain about ADLs' weak tool support (38%) and their lack of tutorials/guidance/etc (33%).
   Conclusion: The survey results will let the community realise the advantages and disadvantages of informal and formal modeling notations for software architecture modeling from practitioners' viewpoint.
C1 [Ozkaya, Mert] Altinbas Univ, Dept Comp Engn, Istanbul, Turkey.
C3 Altinbas University
RP Ozkaya, M (corresponding author), Altinbas Univ, Dept Comp Engn, Istanbul, Turkey.
EM mert.ozkaya@kemerburgaz.edu.tr
RI Ozkaya, Mert/P-1420-2017
OI Ozkaya, Mert/0000-0002-3464-6489
FU Scientific and Technological Research Council of Turkey (TUBITAK)
   [215E159]
FX This work has been supported by the project of the Scientific and
   Technological Research Council of Turkey (TUBITAK), Grant No. 215E159. I
   also would like to express my deep gratitude to Deniz Akdur who
   constantly shared his thoughts and provided invaluable feedback during
   the preparation of the survey questions.
CR Abrial J R, 2010, Modeling in Event-B: system and softeng
   Aldrich J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P187, DOI 10.1109/ICSE.2002.1007967
   Ali N, 2008, P 1 INT WORKSH SOFTW, DOI [10. 1145/1370888. 1370897, DOI 10.1145/1370888.1370897]
   Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   [Anonymous], 2002, ACM SIGSOFT SOFTW EN, DOI DOI 10.1145/571681.571686
   [Anonymous], 2005, Secure Systems Development with UML
   [Anonymous], 2003, High Integrity Software: The SPARK Approach to Safety and Security
   [Anonymous], 2019, Business Process Management: Concepts, Languages, Architectures
   Babar MA, 2009, COMPUTER, V42, P26, DOI 10.1109/MC.2009.233
   Balmelli L, 2007, J OBJECT TECHNOL, V6, P149, DOI 10.5381/jot.2007.6.6.a5
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Barnett M, 2005, LECT NOTES COMPUT SC, V3362, P49
   Barr M., 1995, PRENTICE HALL INT SE
   Bauer B, 2001, INT J SOFTW ENG KNOW, V11, P207, DOI 10.1142/S0218194001000517
   Bergstra J.A., 2001, HDB PROCESS ALGEBRA
   Bernardi S, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379778
   Bradbury J.S., 2004, Proceedings of the 1st ACM SIGSOFT Workshop on Self-managed Systems. WOSS '04, P28, DOI [10.1145/1075405.1075411, DOI 10.1145/1075405.1075411]
   Caracciolo A, 2014, LECT NOTES COMPUT SC, V8627, P374, DOI 10.1007/978-3-319-09970-5_32
   Chain P., 2005, FMCO LECT NOTES COMP, V4111, P342
   Christensen HB, 2009, ASIA PAC SOFWR ENG, P111, DOI 10.1109/APSEC.2009.12
   Cimatti A., 2000, Int. J. Softw. Tools for Technol. Transf. (STTT), V2, P410, DOI [DOI 10.1007/S100090050046, 10.1007/s100090050046]
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   Clements P. C., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P16, DOI 10.1109/IWSSD.1996.501143
   Conway CL, 2004, ACM SIGPLAN NOTICES, V39, P30, DOI 10.1145/998300.997169
   Cuenot P., 2008, AUTOMOB ENG, V793
   Daehyun Kum, 2008, 2008 International Conference on Control, Automation and Systems (ICCAS), P558, DOI 10.1109/ICCAS.2008.4694565
   Dashofy EM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P266, DOI 10.1109/ICSE.2002.1007974
   DeVito Z., 2011, P 2011 INT C HIGH PE
   Eijk P.V., 1989, FORMAL DESCRIPTION T
   Elvesaeter Brian, 2011, Proceedings of the 1st International Conference on Cloud Computing and Services Science. CLOSER 2011, P276
   Feiler P., 2006, COMPUTER AIDED CONTR, P1206
   Garlan D., 1997, P CASCON, V97, P169
   Garlan D., 1994, TECHNICAL REPORT
   Gorlick M., 1994, Proceedings. IEEE Symposium on Visual Languages (Cat. No.94TH8010), P137, DOI 10.1109/VL.1994.363631
   Hill RJ, 1998, APPLIED CRYSTALLOGRAPHY, P65, DOI 10.1145/288408.288425
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Larsen K.G., 1997, STTT, V1
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   LUCKHAM DC, 1995, IEEE T SOFTWARE ENG, V21, P336, DOI 10.1109/32.385971
   Magee J., 1995, Software Engineering - ESEC '95. 5th European Software Engineering Conference. Proceedings, P137
   Magee J., 1996, Software Engineering Notes, V21, P3, DOI 10.1145/250707.239104
   Magee Jeff., 2006, CONCURRENCY STATE MO
   Malavolta I., 2012, IEEE T SOFTW ENG, V99
   Maroti M., 2014, MPM@ MoDELS, V1237, P41
   Medvidovic N., 1996, Software Engineering Notes, V21, P24, DOI [10.1145/239098.239106, 10.1145/250707.239106]
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Medvidovic N, 2007, INFORM SOFTWARE TECH, V49, P12, DOI 10.1016/j.infsof.2006.08.006
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   MILNER R, 1992, INFORM COMPUT, V100, P1, DOI [10.1016/0890-5401(92)90008-4, 10.1016/0890-5401(92)90009-5]
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Ozkaya Mert, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P177, DOI 10.1109/SEAA.2013.34
   Ozkaya M, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P677
   Pandey R.K., 2010, ACM SIGSOFT Software Engineering Notes, V35, P1, DOI DOI 10.1145/1764810.1764828
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Smolander K, 2008, EUR J INFORM SYST, V17, P575, DOI 10.1057/ejis.2008.48
   SONI D, 1995, PROC INT CONF SOFTW, P196, DOI 10.1145/225014.225033
   Spivey J.M., 1992, PRENTICE HALL INT SE
   Sterling L. S., 1994, The Art of Prolog, V2nd
   Tang A, 2006, J SYST SOFTWARE, V79, P1792, DOI 10.1016/j.jss.2006.04.029
   Taylor Richard N., 2010, Software Architecture-Foundations, Theory, and Practice.
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   Zhang PC, 2010, J SYST SOFTWARE, V83, P723, DOI 10.1016/j.jss.2009.11.709
NR 65
TC 19
Z9 19
U1 0
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 15
EP 33
DI 10.1016/j.infsof.2017.10.008
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FX4EZ
UT WOS:000426026800002
DA 2024-07-18
ER

PT J
AU Lanna, A
   Castro, T
   Alves, V
   Rodrígues, G
   Schobbens, PY
   Apel, S
AF Lanna, Andre
   Castro, Thiago
   Alves, Vander
   Rodrigues, Genaina
   Schobbens, Pierre-Yves
   Apel, Sven
TI Feature-family-based reliability analysis of software product lines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software product lines; Software reliability analysis; Parametric
   verification
ID VERIFICATION
AB Context Verification techniques are being applied to ensure that software systems achieve desired quality levels and fulfill functional and non-functional requirements. However, applying these techniques to software product lines is challenging, given the exponential blowup of the number of products. Current product-line verification techniques leverage symbolic model checking and variability information to optimize the analysis, but still face limitations that make them costly or infeasible. In particular, state-of-the-art verification techniques for product line reliability analysis are enumerative which hinders their applicability, given the latent exponential blowup of the configuration space.
   Objective: The objectives of this paper are the following: (a) we present a method to efficiently compute the reliability of all configurations of a compositional or annotation-based software product line from its UML behavioral models, (b) we provide a tool that implements the proposed method, and (c) we report on an empirical study comparing the performance of different reliability analysis strategies for software product lines.
   Method: We present a novel feature-family-based analysis strategy to compute the reliability of all products of a (compositional or annotation-based) software product line. The feature-based step of our strategy divides the behavioral models into smaller units that can be analyzed more efficiently. The family-based step performs the reliability computation for all configurations at once by evaluating reliability expressions in terms of a suitable variational data structure.
   Results: Our empirical results show that our feature-family-based strategy for reliability analysis outperforms, in terms of time and space, four state-of-the-art strategies (product-based, family-based, feature-product-based, and family-product-based) for the same property. It is the only one that could be scaled to a 2(20)-fold increase in the size of the configuration space.
   Conclusion: Our feature-family-based strategy leverages both feature- and family-based strategies by taming the size of the models to be analyzed and by avoiding the products enumeration inherent to some state-of-the-art analysis methods.
C1 [Lanna, Andre; Castro, Thiago; Alves, Vander; Rodrigues, Genaina] Univ Brasilia, Comp Sci Dept, Campus Univ Darcy Ribeiro,Edificio CIC EST, BR-70910900 Brasilia, DF, Brazil.
   [Castro, Thiago] Brazilian Army, Syst Dev Ctr, QG Exercito Bloco G 2o Andar, Brasilia, DF, Brazil.
   [Schobbens, Pierre-Yves] Univ Namur, PReC1SE, NaDI, Fac Comp Sci, Rue Grandgagnage 21, B-5000 Namur, Belgium.
   [Alves, Vander; Apel, Sven] Univ Passau, Dept Informat & Math, Innstr 33, D-94032 Passau, Germany.
C3 Universidade de Brasilia; University of Namur; University of Passau
RP Lanna, A (corresponding author), Univ Brasilia, Comp Sci Dept, Campus Univ Darcy Ribeiro,Edificio CIC EST, BR-70910900 Brasilia, DF, Brazil.
EM andrelanna@unb.br
RI Schobbens, Pierre-Yves/H-2333-2011; Rodrigues, Genaina Nunes/N-4215-2019
OI Schobbens, Pierre-Yves/0000-0001-8677-4485; Rodrigues, Genaina
   Nunes/0000-0003-1661-8131; Alves, Vander/0000-0003-1573-048X; Apel,
   Sven/0000-0003-3687-2233; Mael de Castro, Thiago/0000-0001-5758-2097
FU CAPES [BEX 0557-16-1]; Alexander von Humboldt
   [3.2-1190844-BRA-HFSTCAPES-E]; German Research Foundation [AP 206/4, AP
   206/6]
FX We would like to thank the following people for fruitful discussions and
   suggestions on how to improve this work: Alexandre Mota, Cecilia Rubira,
   Azzedine Boukerche, Rodrigo Bonifacio, Marcelo Ladeira, Abflio Oliveira,
   Paula Gueiros, and Eneias Silva. Vander Alves would like to thank for
   the research grant CAPES ref. BEX 0557-16-1 / Alexander von Humboldt
   ref. 3.2-1190844-BRA-HFSTCAPES-E. Sven Apel's work has been supported by
   the German Research Foundation (AP 206/4 and AP 206/6).
CR [Anonymous], 2000, Generative programming: methods, tools, and applications
   Apel S., 2013, Feature-Oriented Software Development: Concepts and Implementation
   Bahar RI, 1997, FORM METHOD SYST DES, V10, P171, DOI 10.1023/A:1008699807402
   BAHAR RI, 1993, 1993 IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER-AIDED DESIGN - DIGEST OF TECHNICAL PAPERS, P188, DOI 10.1109/ICCAD.1993.580054
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Bodden E, 2013, ACM SIGPLAN NOTICES, V48, P355, DOI 10.1145/2499370.2491976
   Clarke EM, 1999, MODEL CHECKING, P1
   Classen Andreas, 2012, International Journal on Software Tools for Technology Transfer, V14, P589, DOI 10.1007/s10009-012-0234-1
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Classen A, 2014, SCI COMPUT PROGRAM, V80, P416, DOI 10.1016/j.scico.2013.09.019
   Classen A, 2013, IEEE T SOFTWARE ENG, V39, P1069, DOI 10.1109/TSE.2012.86
   Classen A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P321, DOI 10.1145/1985793.1985838
   Clements P., 2002, Software product lines
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Czarnecki K., 2006, VERIFYING FEATURE BA, P211
   Daws C, 2005, LECT NOTES COMPUT SC, V3407, P280
   Dimovski A.S., FAMILY BASED MODAL C, P282, DOI [10.1007/978-3-319-23404-5_18, DOI 10.1007/978-3-319-23404-5_18]
   Dubslaff C, 2015, LECT NOTES COMPUT SC, V8989, P180, DOI 10.1007/978-3-662-46734-3_5
   Dubslaff Clemens, 2014, MODULARITY 14 MODULA, P169, DOI [10.1145/2577080.2577095, DOI 10.1145/2577080.2577095]
   Filieri A., 2012, 2012 Proceedings of First International Workshop on Formal Methods in Software Engineering: Rigorous and Agile Approaches (FormSERA 2012), P2, DOI 10.1109/FormSERA.2012.6229785
   Ghezzi C, 2013, INFORM SOFTWARE TECH, V55, P508, DOI 10.1016/j.infsof.2012.07.017
   Grunske L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P31, DOI 10.1145/1368088.1368094
   Hahn E., 2010, PROBABILISTIC REACHA, P1
   Hahn EM, 2010, LECT NOTES COMPUT SC, V6174, P660, DOI 10.1007/978-3-642-14295-6_56
   Hao Y, 2008, PHYSIOL MEAS, V29, pR27, DOI 10.1088/0967-3334/29/11/R01
   Heradio R, 2016, INFORM SOFTWARE TECH, V72, P1, DOI 10.1016/j.infsof.2015.11.004
   Kowal M, 2015, IEEE INT CONF AUTOM, P407, DOI 10.1109/ASE.2015.16
   KRAMER J, 1983, IEE PROC-E, V130, P1, DOI 10.1049/ip-e.1983.0001
   Leite AF, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P726, DOI 10.1109/CLOUD.2015.101
   Liang Jia Hui, 2015, P 19 INT C SOFTW PRO, P91, DOI [10.1145/2791060, DOI 10.1145/2791060]
   Machado ID, 2014, INFORM SOFTWARE TECH, V56, P1183, DOI 10.1016/j.infsof.2014.04.002
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Nunes V., 2012, 2012 Sixth Brazilian Symposium on Software Components, Architectures and Reuse (SBCARS 2012), P51, DOI 10.1109/SBCARS.2012.23
   Object Management Group, 2011, UML PROF MARTE MOD A
   Pessoa L, 2017, INFORM SOFTWARE TECH, V86, P54, DOI 10.1016/j.infsof.2017.02.002
   Plath M, 2001, SCI COMPUT PROGRAM, V41, P53, DOI 10.1016/S0167-6423(00)00018-6
   Pohl Klaus, 2010, Software product line engineering
   Rodrigues GN, 2015, IEEE HI ASS SYS ENGR, P173, DOI 10.1109/HASE.2015.34
   Siegmund N, 2014, ACM SIGPLAN NOTICES, V49, P95, DOI [10.1145/2517208.2517209, 10.1145/2637365.2517209]
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   van der Linden F. J., 2007, Software Product Lines in Action: the Best Industrial Practice in Product Line Engineering
   Varshosaz Mahsa, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P63, DOI 10.1109/APSEC.2014.18
   Walkingshaw Eric, 2014, ACM SIGPLAN S NEW ID, P213
   Weiss David M., 2008, 2008 12th International Software Product Line Conference (SPLC), DOI 10.1109/SPLC.2008.56
NR 45
TC 11
Z9 11
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2018
VL 94
BP 59
EP 81
DI 10.1016/j.infsof.2017.10.001
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FO6WE
UT WOS:000417009000005
DA 2024-07-18
ER

PT J
AU Santos, ID
   Andrade, RMD
   Rocha, LS
   Matalonga, S
   de Oliveira, KM
   Travassos, GH
AF Santos, Ismayle de Sousa
   de Castro Andrade, Rossana Maria
   Rocha, Lincoln Souza
   Matalonga, Santiago
   de Oliveira, Kathia Marcal
   Travassos, Guilherme Horta
TI Test case design for context-aware applications: Are we there yet?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Context aware application; Systematic review; Software testing
ID SOFTWARE; FRAMEWORK; MODEL
AB Context: Current software systems have increasingly implemented context-aware adaptations to handle the diversity of conditions of their surrounding environment. Therefore, people are becoming used to a variety of context-aware software systems (CASS). This context-awareness brings challenges to the software construction and testing because the context is unpredictable and may change at any time. Therefore, software engineers need to consider the dynamic context changes while testing CASS. Different test case design techniques (TCDT) have been proposed to support the testing of CASS. However, to the best of our knowledge, there is no analysis of these proposals on the advantages, limitations and their effective support to context variation during testing.
   Objective: To gather empirical evidence on TCDT concerned with CASS by identifying, evaluating and synthesizing knowledge available in the literature.
   Method: To undertake a secondary study (quasi-Systematic Literature Review) on TCDT for CASS regarding their assessed quality characteristics, used coverage criteria, test type, and test technique.
   Results: From 833 primary studies published between 2004 and 2014, just 17 studies regard the design of test cases for CASS. Most of them focus on functional suitability. Furthermore, some of them take into account the changes in the context by providing specific test cases for each context configuration (static perspective) during the test execution. These 17 studies revealed five challenges affecting the design of test cases and 20 challenges regarding the testing of CASS. Besides, seven TCDT are not empirically evaluated.
   Conclusion: A few TCDT partially support the testing of CASS. However, it has not been observed evidence on any TCDT supporting the truly context-aware testing, which that can adapt the expected output based on the context variation (dynamic perspective) during the test execution. It is an open issue deserving greater attention from researchers to increase the testing coverage and ensure users confidence in CASS. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Santos, Ismayle de Sousa; de Castro Andrade, Rossana Maria; Rocha, Lincoln Souza] Univ Fed Ceara, Fortaleza, Ceara, Brazil.
   [Matalonga, Santiago] Univ ORT Uruguay, Montevideo, Uruguay.
   [de Oliveira, Kathia Marcal] Univ Valenciennes, UMR, LAMIH, CNRS 8201, Valenciennes, France.
   [Travassos, Guilherme Horta] Univ Fed Rio de Janeiro, Rio De Janeiro, Brazil.
C3 Universidade Federal do Ceara; University ORT Uruguay; Centre National
   de la Recherche Scientifique (CNRS); Universite Polytechnique
   Hauts-de-France; Universidade Federal do Rio de Janeiro
RP Santos, ID; Andrade, RMD (corresponding author), Univ Fed Ceara, Fortaleza, Ceara, Brazil.
EM ismaylesantos@great.ufc.br; rossana@ufc.br; lincoln@great.ufc.br;
   smatalonga@uni.ort.edu.uy; kathia.oliveira@univ-valenciennes.fr;
   ght@cos.ufrj.br
RI Travassos, Guilherme H/G-2842-2012; Andrade, Rossana M C/K-1790-2015;
   Matalonga, Santiago/O-4316-2019
OI Matalonga, Santiago/0000-0001-5429-2449; Maria de Castro Andrade,
   Rossana/0000-0002-0186-2994; Marcal de Oliveira,
   Kathia/0000-0001-8146-5966; Rocha, Lincoln/0000-0001-5402-8744
FU CNPq (MCT/CNPq - Universal) [484380/2013-3]
FX This work is a partial result of the "CAcTUS - Context-Awareness Testing
   for Ubiquitous Systems", a project supported by CNPq (MCT/CNPq 14/2013 -
   Universal) under grant number 484380/2013-3.
CR Amalfitano D, 2013, IEEE ICST WORKSHOP, P126, DOI 10.1109/ICSTW.2013.22
   [Anonymous], 2011, ISO 13314
   [Anonymous], 2007, EBSE200701 U DURH DE
   [Anonymous], 2012, ART SOFTWARE TESTING, DOI DOI 10.1002/9781119202486
   [Anonymous], 2014, GUIDE SOFTWARE ENG B
   [Anonymous], 2015, PENSAMENTO BASEADO NO RISCO NA ISO 9001: 2015 Proposito deste artigo O que e o pensamento baseado no risco ?, P1, DOI 10.1109/ieeestd.2015.7106435
   [Anonymous], 1990, P IFIP TC8 WG 8 2 WO
   [Anonymous], 2007, P 2 INT WORKSH AUT S
   Bezerra Carla, 2014, P 26 C LINTERACTION, P183, DOI [10.1145/2670444., DOI 10.1145/2670444]
   Binkley D, 2015, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2015.7335396
   BIOLCHINI J, 2005, TECHNICAL REPORT
   Carvalho RM, 2015, LECT NOTES COMPUT SC, V9189, P13, DOI 10.1007/978-3-319-20804-6_2
   Carvalho RM, 2017, SOFTWARE QUAL J, V25, P743, DOI 10.1007/s11219-016-9320-z
   Chadegani A. A., 2013, ASIAN SOC SCI, V9
   Champiri ZD, 2015, EXPERT SYST APPL, V42, P1743, DOI 10.1016/j.eswa.2014.09.017
   Chan WK, 2006, INT J SOFTW ENG KNOW, V16, P677, DOI 10.1142/S0218194006002951
   Chan WK, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P241
   Dey A. K., 2000, P PARCHI 2000 WORKSH
   Elberzhager F, 2012, INFORM SOFTWARE TECH, V54, P1092, DOI 10.1016/j.infsof.2012.04.007
   FRANKL PG, 1988, IEEE T SOFTWARE ENG, V14, P1483, DOI 10.1109/32.6194
   Fredericks EM, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P17, DOI 10.1145/2593929.2593937
   Griebe T., 2014, Proceedings of the 29th Annual ACM Symposium on Applied Computing, P420
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Horváth I, 2015, COMPUT AIDED DESIGN, V59, P161, DOI 10.1016/j.cad.2014.10.006
   Huai Wang, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P151, DOI 10.1109/QSIC.2010.57
   Ibrahim Suhaimi, 2011, INT C TEL TECHN APPL
   IEEE, 2015, IEEE COMM SEARCH
   IEEE, 2016, IS IEEE EXPL DIG LIB
   ISO-Standards, 2013, ISO 29022, V1, P1, DOI [DOI 10.1109/IEEESTD.2013.6588537, 10.1109/IEEESTD.2013.6588537]
   Kanewala U, 2014, INFORM SOFTWARE TECH, V56, P1219, DOI 10.1016/j.infsof.2014.05.006
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kjeldskov J, 2003, LECT NOTES COMPUT SC, V2795, P317
   Kotonya G, 2003, EUROMICRO CONF PROC, P43
   Lu H, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P61, DOI 10.1145/1368088.1368098
   Lu Heng, 2006, P 14 ACM SIGSOFT INT, P242, DOI DOI 10.1145/1181775.1181805
   Matalonga S., 2015, P 2015 WORKSH SYST A
   Matalonga S, 2015, COMM COM INF SC, V526, P33, DOI 10.1007/978-3-319-19860-6_4
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Mendez-Porras A., 2015, CIBSE 2015 18 IB AM, P195
   Micskei Zoltan, 2012, Agent and Multi-Agent Systems. Technologies and Applications. Proceedings 6th KES International Conference, KES-AMSTA 2012, P504, DOI 10.1007/978-3-642-30947-2_55
   Neto BJA, 2013, INT WIREL COMMUN, P1430, DOI 10.1109/IWCMC.2013.6583766
   Pai M., 2004, NAT MED J INDIA, V17
   Perera C, 2014, IEEE ACCESS, V2, P1660, DOI 10.1109/ACCESS.2015.2389854
   Pressman R. S., 2010, Software Engineering: A Practitioner's Approach
   Propp S, 2008, LECT NOTES COMPUT SC, V5247, P29, DOI 10.1007/978-3-540-85992-5_3
   Puschel G., 2012, MOD WORKSH
   Qiu D, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2631685
   Rocha L. S., 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P132, DOI 10.1109/SBES.2011.33
   Rodrigues F., 2014, 112014 FED U RIO DE
   Santos Rainara M., 2013, Human-Computer Interaction. 6th Latin American Conference, CLIHC 2013. Proceedings: LNCS 8278, P63, DOI 10.1007/978-3-319-03068-5_13
   Spinola RO, 2012, INFORM SOFTWARE TECH, V54, P759, DOI 10.1016/j.infsof.2012.01.009
   Travassos GH, 2008, IEEE INT C ENG COMP, P193, DOI 10.1109/ICECCS.2008.30
   Tse T. H., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P458, DOI 10.1109/CMPSAC.2004.1342879
   Vieira V, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P535, DOI 10.1145/2695664.2695782
   Wang HA, 2009, IEEE INT CONF AUTOM, P610, DOI 10.1109/ASE.2009.79
   Wang H, 2014, ACM T AUTON ADAP SYS, V9, DOI 10.1145/2620000
   Wang ZM, 2007, PROC INT CONF SOFTW, P406
   Wohlin C., 2014, EXPT SOFTWARE ENG
   Ye CL, 2009, PROCEEDINGS OF 2009 INTERNATIONAL CONFERENCE OF NATURAL PRODUCT AND TRADITIONAL MEDICINE, VOLS 1 AND 2, P1, DOI 10.1145/1640206.1640210
   Yu L, 2014, INT CONF SOFTW SECUR, P137, DOI 10.1109/SERE.2014.27
NR 60
TC 27
Z9 28
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2017
VL 88
BP 1
EP 16
DI 10.1016/j.infsof.2017.03.008
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW2TI
UT WOS:000402348500001
DA 2024-07-18
ER

PT J
AU Hesse, TM
   Lerche, V
   Seiler, M
   Knoess, K
   Paech, B
AF Hesse, Tom-Michael
   Lerche, Veronika
   Seiler, Marcus
   Knoess, Konstantin
   Paech, Barbara
TI Documented decision-making strategies and decision knowledge in open
   source projects: An empirical study on Firefox issue reports
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Decision-making strategy; Naturalistic decision-making; Rational
   decision-making; Decision knowledge; Decision documentation; Design
   decision; Software development decision; Empirical study; Issue tracking
   system
ID ARCHITECTURE; MODEL
AB Context: Decision-making is a vital task during software development. Typically, issue tracking systems are used to document decisions in large open source projects where developers are spread across the world. While most decision documentation approaches assume that developers use rational decision strategies, in practice also naturalistic strategies are employed. However, quantitative studies of the distribution of decision strategies and related knowledge are missing.
   Objective: Our overall goal is to provide insights and ideas for further research to systematically support and document decision-making during software development in open source projects. In this paper, we analyze decisions documented in comments to issue reports in order to understand the documentation of decision-making in detail.
   Method: We coded the comments of 260 issue reports of the open source project Firefox for decision making strategies and knowledge on decisions. Then, we statistically analyzed the coded data with regard to the dominant decision strategy, the distribution of decision strategies and knowledge, and the relations between strategy and knowledge.
   Results: The vast majority of documented decision-making strategies was naturalistic. Interestingly, for feature requests the percentage of rational decision-making strategies was higher than for bugs. Documented knowledge mostly concerned the decision context. More solutions were documented together with a higher amount of naturalistic decision-making. However, solutions were negatively correlated with the assessment of the situation. So, developers are likely to exploit and document decision problems and solutions in an imbalanced way.
   Conclusion: Our analysis revealed important insights on how decision-making and its related knowledge is documented during software development in open source projects. For instance, we found naturalistic decision-making to play an important role for development decisions. Our coding tables can be used by other researchers to further investigate our results. The study insights should be reflected in decision support systems to improve their effectiveness and acceptance by developers. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Hesse, Tom-Michael; Seiler, Marcus; Paech, Barbara] Heidelberg Univ, Inst Comp Sci, Neuenheimer Feld 205, D-69120 Heidelberg, Germany.
   [Lerche, Veronika; Knoess, Konstantin] Heidelberg Univ, Inst Psychol, Hauptstr 47-51, D-69117 Heidelberg, Germany.
C3 Ruprecht Karls University Heidelberg; Ruprecht Karls University
   Heidelberg
RP Hesse, TM (corresponding author), Heidelberg Univ, Inst Comp Sci, Neuenheimer Feld 205, D-69120 Heidelberg, Germany.
EM hesse@informatik.uni-heidelberg.de;
   veronika.lerche@psychologie.uni-heidelberg.de;
   seiler@informatik.uni-heidelberg.de; knoess@stud.uni-heidelberg.de;
   paech@informatik.uni-heidelberg.de
RI Paech, Barbara/AAI-5997-2020; Lerche, Veronika/J-3359-2016
FU DFG (German Research Foundation) under the Priority Programme Design For
   Future - Managed Software Evolution [SPP1593]
FX This work was partially supported by the DFG (German Research
   Foundation) under the Priority Programme SPP1593: Design For Future -
   Managed Software Evolution. We thank our colleagues Paul Huebner, Doris
   Keidel-Mueller, and Christian Kuecherer for providing valuable feedback
   on the paper.
CR Amott D, 2008, DECIS SUPPORT SYST, V44, P657, DOI 10.1016/j.dss.2007.09.003
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2014, SOFTWARE PROJECT MAN
   [Anonymous], INF SOFTW TECHNOL
   [Anonymous], R LANG ENV STAT COMP
   [Anonymous], 2 MINDS REFLECTIONS
   [Anonymous], P 3 INT WORKSH SHAR
   Babar Muhammad Ali, 2007, Second Workshop on Sharing and Reusing architectural Knowledge Architecture, Rationale, and Design Intent (SHARK/ADI'07: ICSE Workshops 2007), DOI 10.1109/SHARK-ADI.2007.1
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Berander P, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P69, DOI 10.1007/3-540-28244-0_4
   Burge J.E., 2008, Rationale-Based Software Engineering
   Burge JE, 2004, DESIGN COMPUTING AND COGNITION '04, P557
   Canfora G, 2000, INT J SOFTW ENG KNOW, V10, P627, DOI 10.1142/S0218194000000316
   Capilla Rafael, 2007, Second Workshop on Sharing and Reusing architectural Knowledge Architecture, Rationale, and Design Intent (SHARK/ADI'07: ICSE Workshops 2007), DOI 10.1109/SHARK-ADI.2007.9
   Chen LP, 2013, IEEE SOFTWARE, V30, P38, DOI 10.1109/MS.2012.174
   CICCHETTI DV, 1981, AM J MENT DEF, V86, P127
   Cohen J., 1988, STAT POWER ANAL BEHA
   Falessi D., 2006, P 2006 ACMIEEE INT S, P134
   Falessi D, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978812
   Francalanci C, 2008, INT FED INFO PROC, V275, P187
   Gamer M, 2012, IRR VARIOUS COEFFICI
   Gore J, 2006, ORGAN STUD, V27, P925, DOI 10.1177/0170840606065701
   Harrison NB, 2007, IEEE SOFTWARE, V24, P38, DOI 10.1109/MS.2007.124
   Hesse T.-M., 2015, 27 INT C SOFTW ENG K, P152
   Hesse TM, 2013, 2013 3RD INTERNATIONAL WORKSHOP ON THE TWIN PEAKS OF REQUIREMENTS AND ARCHITECTURE (TWINPEAKS), P22, DOI 10.1109/TwinPeaks-2.2013.6617355
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Jonassen DH, 2012, ETR&D-EDUC TECH RES, V60, P341, DOI 10.1007/s11423-011-9230-5
   Khomh F., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P179, DOI 10.1109/MSR.2012.6224279
   Klein G, 2008, HUM FACTORS, V50, P456, DOI 10.1518/001872008X288385
   Klein G, 2010, J COGN ENG DECIS MAK, V4, P186, DOI 10.1518/155534310X12844000801203
   Ko A., 2011, iConference, P106
   Kruchten P, 2006, LECT NOTES COMPUT SC, V4214, P43
   LEE JT, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P114, DOI 10.1109/ICSE.1991.130629
   Lipshitz R, 2001, J BEHAV DECIS MAKING, V14, P331, DOI 10.1002/bdm.381
   MacLean A., 1991, Human-Computer Interaction, V6, P201, DOI 10.1207/s15327051hci0603&4_2
   Manteuffel Christian, 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P225, DOI 10.1109/WICSA.2014.32
   Mayring P., 2010, Handbuch Qualitative Forschung in der Psychologie, P601, DOI [10.1007/978-3-531-92052-8_42, DOI 10.1007/978-3-531-92052-8_42]
   Mentis HM, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1341
   Ngo-The A, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P267
   Orasanu J., 1993, DECISION MAKING ACTI, P3
   Ruhe G, 2002, LECT NOTES COMPUT SC, V2640, P104
   SHROUT PE, 1979, PSYCHOL BULL, V86, P420, DOI 10.1037/0033-2909.86.2.420
   Souza R, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P31, DOI 10.1109/SBES.2014.10
   Stanton NA, 2010, INT J HUM-COMPUT INT, V26, P99, DOI 10.1080/10447310903498676
   Tang A, 2007, J SYST SOFTWARE, V80, P918, DOI 10.1016/j.jss.2006.08.040
   Tang A, 2006, J SYST SOFTWARE, V79, P1792, DOI 10.1016/j.jss.2006.04.029
   Tang A, 2015, LECT NOTES COMPUT SC, V9278, P105, DOI 10.1007/978-3-319-23727-5_9
   Tang A, 2010, DESIGN STUD, V31, P614, DOI 10.1016/j.destud.2010.09.004
   Tang A, 2010, J SYST SOFTWARE, V83, P352, DOI 10.1016/j.jss.2009.08.032
   TVERSKY A, 1974, SCIENCE, V185, P1124, DOI 10.1126/science.185.4157.1124
   Tyree J, 2005, IEEE SOFTWARE, V22, P19, DOI 10.1109/MS.2005.27
   van Heesch U, 2013, J SYST SOFTWARE, V86, P1545, DOI 10.1016/j.jss.2013.01.057
   van Heesch U, 2012, J SYST SOFTWARE, V85, P795, DOI 10.1016/j.jss.2011.10.017
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
   Zannier C, 2007, INFORM SOFTWARE TECH, V49, P637, DOI 10.1016/j.infsof.2007.02.010
   Zannier C, 2006, LECT NOTES COMPUT SC, V4044, P11
   Zimmermann O, 2007, LECT NOTES COMPUT SC, V4880, P15
NR 57
TC 10
Z9 10
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2016
VL 79
BP 36
EP 51
DI 10.1016/j.infsof.2016.06.003
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DW0AE
UT WOS:000383302500003
DA 2024-07-18
ER

PT J
AU Huang, CY
   Chen, CS
   Lai, CE
AF Huang, Chin-Yu
   Chen, Chung-Sheng
   Lai, Chia-En
TI Evaluation and analysis of incorporating Fuzzy Expert System approach
   into test suite reduction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Test suite reduction; Tie-breaking; Software testing; Test suite
   minimization; Fault detection effectiveness; Fuzzy logic; Test case
   prioritization
ID ALGORITHMS; MINIMIZATION; SCALABILITY; SIMULATION; COSTS
AB Context: Software has become increasingly important in our modern society. However, when new features are developed due to user requests, such requests could make the sizes of test-case pools bigger. Many techniques are proposed to solve this problem, such as test suite reduction. However, the ability to expose faults may be weakened when reducing the sizes of the test suites. In this paper, we propose some methods using fuzzy logic in order to improve existing test-suite reduction techniques.
   Objective: The main purpose of this research is to use a Fuzzy Expert System approach in order to enhance the effectiveness of fault detection during software testing.
   Method: Incorporating a Fuzzy Expert System into traditional test suite reduction techniques is presented and studied. More objective criteria are used in order to compare the performance of our proposed and selected test suite reduction methods. Some important measures (and metrics) will also be obtained and discussed. Application of the Fuzzy Expert System approach for test case prioritization is also discussed.
   Results: The experiments in three improved test-suite reduction techniques show that the modified algorithms can reduce the size of test suites, which have improved the fault detection quality.
   Conclusion: During software testing, test data are generally classified with Boolean logic. This method can classify data into groups easily. However, there may be ambiguity in classifications due to similar properties for certain data. Ambiguous data can be classified in each group. In this study, Boolean logic will be replaced by fuzzy logic. Incorporating the Fuzzy Expert System approach into three traditional test suite reduction techniques (i.e., HGS, GRE, and Greedy) is presented and evaluated. The experiments, based on nine real subject programs ranging from 173 LOCs to 35,545 LOCs, have demonstrated that our proposed Fuzzy-HGS, Fuzzy-GRE, and Fuzzy-Greedy algorithms can significantly reduce the sizes of test suites while also improving fault detection effectiveness. For instance, Fuzzy-HGS, Fuzzy-GRE, and Fuzzy Greedy algorithms have almost the same reduction capability of test suite as traditional HGS, GRE, and Greedy algorithms. But in terms of the percentage of fault detection effectiveness loss (FDE loss), both Fuzzy-HGS and Fuzzy-GRE algorithms are averagely decreased by 21% and 5%, respectively. Additionally, Fuzzy-Greedy algorithm still provide the lower FDE loss for large subject programs compared to traditional Greedy algorithm. Based upon the integrated theoretical foundation, the approaches presented in this paper offer an efficient, useful software testing scheme in the testing and debugging phases. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Huang, Chin-Yu; Chen, Chung-Sheng] Natl Tsing Hua Univ, Dept Comp Sci, Hsinchu, Taiwan.
   [Huang, Chin-Yu; Lai, Chia-En] Natl Tsing Hua Univ, Inst Informat Syst & Applicat, Hsinchu, Taiwan.
C3 National Tsing Hua University; National Tsing Hua University
RP Huang, CY (corresponding author), Natl Tsing Hua Univ, Dept Comp Sci, Hsinchu, Taiwan.; Huang, CY (corresponding author), Natl Tsing Hua Univ, Inst Informat Syst & Applicat, Hsinchu, Taiwan.
EM cyhuang@cs.nthu.edu.tw
FU Ministry of Science and Technology, Taiwan [MOST 105-2221-E-007-081]
FX The work described in this paper was supported by the Ministry of
   Science and Technology, Taiwan, under Grant MOST 105-2221-E-007-081. The
   authors also wish to thank anonymous referees for their constructive and
   insightful suggestions, which led to a significant improvement of this
   paper.
CR [Anonymous], P INT C ART INT AAAI
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 2007, Software testing and analysis-process, principles and techniques
   [Anonymous], 2013, Software testing: A craftsman's approach
   [Anonymous], P 22 INT WORKSH PRIN
   Bai Y., 2006, ADV FUZZY LOGIC TECH
   Bo Jiang, 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P21, DOI 10.1109/QSIC.2011.37
   Chen TY, 1996, INFORM PROCESS LETT, V60, P135, DOI 10.1016/S0020-0190(96)00135-4
   Chen TY, 1998, INFORM SOFTWARE TECH, V40, P777, DOI 10.1016/S0950-5849(98)00094-9
   Chen TY, 1998, INFORM SOFTWARE TECH, V40, P347, DOI 10.1016/S0950-5849(98)00050-0
   Chen Yanping., 2007, Fourth international workshop on Software quality assurance: in conjunction with the 6th ESEC/FSE joint meeting, P62, DOI DOI 10.1145/1295074.1295086
   Chilenski J. J., 1994, Proceedings. The Ninth Knowledge-Based Software Engineering Conference (Cat. No.94TH0664-3), P59, DOI 10.1109/KBSE.1994.342677
   Chvatal V., 1979, Mathematics of Operations Research, V4, P233, DOI 10.1287/moor.4.3.233
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   Driankov Dimiter., 1996, INTRO FUZZY CONTROL, Vsecond
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Fenton N., 2015, Software Metrics: A Rigorous and Practical Approach
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Fraser G, 2007, LECT NOTES COMPUT SC, V4422, P291
   Garey M. R., 1979, Computers and intractability. A guide to the theory of NP-completeness
   Gonzalez-Sanchez Alberto, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P42, DOI 10.1109/QSIC.2010.28
   Gonzalez-Sanchez A., 2012, PRIORITIZING TESTS F, P251, DOI [10.1007/978-1-4614-6230-9_15, DOI 10.1007/978-1-4614-6230-9_15]
   Gonzalez-Sanchez A, 2011, SOFTWARE PRACT EXPER, V41, P1105, DOI 10.1002/spe.1065
   Gotlieb Arnaud., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P171
   Hao D, 2012, PROC INT CONF SOFTW, P738, DOI 10.1109/ICSE.2012.6227144
   Harder M, 2003, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2003.1201188
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Heimdahl MPE, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P176, DOI 10.1109/ASE.2004.1342735
   Huang CY, 2010, J SYST SOFTWARE, V83, P646, DOI 10.1016/j.jss.2009.11.703
   Hutchins M., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P191, DOI 10.1109/ICSE.1994.296778
   Iancu I., 2012, CONCEPTS THEORIES AP, DOI [10.5772/36321, DOI 10.5772/36321]
   *IEEE, 1998, 8291998 IEEE
   Jeffrey D, 2005, PROC IEEE INT CONF S, P549
   Jeffrey D, 2007, IEEE T SOFTWARE ENG, V33, P108, DOI 10.1109/TSE.2007.18
   Kandel A., 1992, Fuzzy Expert Systems
   Keller G., 2003, STAT MANAGEMENT EC, V6th
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   KUMAR VP, 1994, J PARALLEL DISTR COM, V22, P379, DOI 10.1006/jpdc.1994.1099
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Lin CT, 2014, INFORM SOFTWARE TECH, V56, P1322, DOI 10.1016/j.infsof.2014.04.013
   Lin JW, 2009, INFORM SOFTWARE TECH, V51, P679, DOI 10.1016/j.infsof.2008.11.004
   MAMDANI EH, 1975, INT J MAN MACH STUD, V7, P1, DOI 10.1016/S0020-7373(75)80002-2
   Mansour N, 1999, J SOFTW MAINT-RES PR, V11, P19, DOI 10.1002/(SICI)1096-908X(199901/02)11:1<19::AID-SMR182>3.0.CO;2-M
   Mei H, 2012, IEEE T SOFTWARE ENG, V38, P1258, DOI 10.1109/TSE.2011.106
   Memon A, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P186, DOI 10.1109/ASE.2004.1342736
   Murphy C., 2013, AUTOMATIC TEST CASE
   Paliouras G., 1993, THESIS
   Rothermel G, 1998, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.1998.738487
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Sampath S, 2012, INFORM SOFTWARE TECH, V54, P724, DOI 10.1016/j.infsof.2012.01.007
   Sampath Sreedevi., 2006, P 2006 WORKSHOP TEST, P23
   Schwartz A, 2013, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSM.2013.11
   Shi A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P246, DOI 10.1145/2635868.2635921
   Shill PC, 2011, IEEE INT CONF FUZZY, P1572
   Smith A.M., 2007, P 22 IEEEACM INT C A, P539
   Sprenkle S, 2005, PROC IEEE INT CONF S, P587
   Srivastava P., 2011, Journal of Uncertain Systems, V5, P183
   SUN XH, 1994, IEEE T PARALL DISTR, V5, P599, DOI 10.1109/71.285606
   TAKAGI T, 1985, IEEE T SYST MAN CYB, V15, P116, DOI 10.1109/TSMC.1985.6313399
   Tallam Sriraman., 2005, PASTE 05, P35, DOI [10.1145/1108768.1108802, DOI 10.1145/1108768.1108802]
   Vokolos FI, 1998, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.1998.738488
   von Ronne J., 1999, THESIS
   Wong WE, 1997, P INT COMP SOFTW APP, P522, DOI 10.1109/CMPSAC.1997.625062
   Xie Bo, 2005, THESIS
   Yu TT, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P48, DOI 10.1145/2568225.2568294
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
   Zhang L, 2009, PROCEEDINGS OF 2009 INTERNATIONAL SYMPOSIUM ON AIRCRAFT AIRWORTHINESS, P212
   Zhang LM, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P170, DOI 10.1109/ISSRE.2011.26
   Zhong H, 2008, INFORM SOFTWARE TECH, V50, P534, DOI 10.1016/j.infsof.2007.06.003
NR 72
TC 7
Z9 8
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2016
VL 79
BP 79
EP 105
DI 10.1016/j.infsof.2016.07.005
PG 27
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DW0AE
UT WOS:000383302500006
DA 2024-07-18
ER

PT J
AU Moonen, L
   Yazdanshenas, AR
AF Moonen, Leon
   Yazdanshenas, Amir Reza
TI Analyzing and visualizing information flow in heterogeneous
   component-based software systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Information flow analysis; Component-based software systems; Model
   reconstruction; Program comprehension; Software visualization
ID DEPENDENCE
AB Context: Component-based software engineering is aimed at managing the complexity of large-scale software development by composing systems from reusable parts. To understand or validate the behavior of such a system, one needs to understand the components involved in combination with understanding how they are configured and composed. This becomes increasingly difficult when components are implemented in various programming languages, and composition is specified in external artifacts. Moreover, tooling that supports in-depth system-wide analysis of such heterogeneous systems is lacking.
   Objective: This paper contributes a method to analyze and visualize information flow in a component based system at various levels of abstraction. These visualizations are designed to support the comprehension needs of both safety domain experts and software developers for, respectively, certification and evolution of safety-critical cyber-physical systems.
   Method: We build system-wide dependence graphs and use static program slicing to determine all possible end-to-end information flows through and across a system's components. We define a hierarchy of five abstractions over these information flows that reduce visual distraction and cognitive overload, while satisfying the users' information needs. We improve on our earlier work to provide interconnected views that support both systematic, as well as opportunistic navigation scenarios.
   Results: We discuss the design and implementation of our approach and the resulting views in a prototype tool called FlowTracker. We summarize the results of a qualitative evaluation study, carried out via two rounds of interview, on the effectiveness and usability of these views. We discuss a number of improvements, such as more selective information presentations, that resulted from the evaluation.
   Conclusion: The evaluation shows that the proposed approach and views are useful for understanding and validating heterogeneous component-based systems, and address information needs that could earlier only be met by manual inspection of the source code. We discuss lessons learned and directions for future work. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Moonen, Leon] Simula Res Lab, Oslo, Norway.
   [Yazdanshenas, Amir Reza] Testify AS, Oslo, Norway.
RP Moonen, L (corresponding author), Simula Res Lab, Oslo, Norway.
EM leon.moonen@computer.org; amirry@simula.no
RI Moonen, Leon/M-8790-2015
OI Moonen, Leon/0000-0002-1761-6771
FU Simula Research Laboratory; Research Council of Norway [191171, 221751,
   203461]
FX We would like to thank the participants in our workshop and interviews
   for their valuable time and feedback. Without their collaboration, the
   evaluation of this work would not have been possible. This work was
   partly funded by Simula Research Laboratory and by the Research Council
   of Norway through the projects inspectIT (#191171), evolveIT (#221751)
   and Certus SFI (#203461).
CR ANDERSON P, 2008, IEEE INT WORK C SOUR, P3, DOI DOI 10.1109/SCAM.2008.11
   [Anonymous], 2005, GUIDE SOFTWARE ENG B
   Beydeda S, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P146, DOI 10.1109/QSIC.2003.1319097
   Beydeda Sami., 2005, TESTING COMMERCIAL O
   Binkley D, 2005, FIFTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P15, DOI 10.1109/SCAM.2005.28
   BOOGERD C, 2008, IEEE INT WORKSH 8 IE, P79, DOI DOI 10.1109/SCAM.2008.18
   Brugman H., 2004, P LREC 2004 4 INT C, P2065
   Campbell DT., 1963, EXPT QUASIEXPERIMENT
   Debray SK, 2000, ACM T PROGR LANG SYS, V22, P378, DOI 10.1145/349214.349233
   Deelstra S, 2005, J SYST SOFTWARE, V74, P173, DOI 10.1016/j.jss.2003.11.012
   Enck W, 2014, ACM T COMPUT SYST, V32, DOI 10.1145/2619091
   Gallagher K, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P58, DOI 10.1109/FOSM.2008.4659249
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Gross H.-G., 2005, NO COMPONENT BASED S
   Hatton L, 2004, INFORM SOFTWARE TECH, V46, P465, DOI 10.1016/j.infsof.2003.09.016
   Hermans F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P451, DOI 10.1145/1985793.1985855
   Hopkins L, 1998, J PROCESS CONTR, V8, P57, DOI 10.1016/S0959-1524(97)00027-9
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   JOHNSON RE, 1988, J OBJECT-ORIENT PROG, V1, P22
   Krinke J, 2004, PROC IEEE INT CONF S, P168, DOI 10.1109/ICSM.2004.1357801
   Lee YK, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P580, DOI 10.1145/2591062.2591074
   Li JY, 2008, IEEE T SOFTWARE ENG, V34, P271, DOI 10.1109/TSE.2008.14
   Lin X.-G., 1991, THESIS
   Maletic JI, 2002, VISSOFT 2002: FIRST INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P32, DOI 10.1109/VISSOF.2002.1019792
   Manickam P., 2013, COMPONENT ORIENTED D
   Mysore S, 2008, ACM SIGPLAN NOTICES, V43, P211, DOI 10.1145/1353536.1346308
   Nielsen J., 1990, SIGCHI Bulletin, P249
   OMG, 2010, ARCH DRIV MOD ADM KN
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Petre M, 2010, J VISUAL LANG COMPUT, V21, P171, DOI 10.1016/j.jvlc.2009.11.001
   Pinzger M, 2008, INT C PROGRAM COMPRE, P252, DOI 10.1109/ICPC.2008.23
   Rountev A, 2005, LECT NOTES COMPUT SC, V3489, P82
   Silva J, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187674
   Steele J., 2010, BEAUTIFUL VISUALIZAT
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Storey MA, 2006, SOFTWARE QUAL J, V14, P187, DOI 10.1007/s11219-006-9216-4
   Strein D, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P207
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   T.O.M. Group, 2005, UN MOD LANG SUP V2 0
   TIP F, 1995, J PROGRAM LANG, V3, P121
   TVERSKY A, 1974, SCIENCE, V185, P1124, DOI 10.1126/science.185.4157.1124
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   Walls C., 2011, SPRING IN ACTION
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Wu Y, 2001, IEEE INT C ENG COMP, P222, DOI 10.1109/ICECCS.2001.930181
   Yang SQ, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P89, DOI 10.1109/ICSE.2015.31
   Yazdanshenas A. R., 2012, IEEE INT C PROGR COM
   Yazdanshenas A.R., 2011, 2011 27 IEEE INT C S, P193
NR 48
TC 4
Z9 4
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2016
VL 77
BP 34
EP 55
DI 10.1016/j.infsof.2016.05.002
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ5UQ
UT WOS:000379271000003
DA 2024-07-18
ER

PT J
AU Alarifi, A
   Zarour, M
   Alomar, N
   Alshaikh, Z
   Alsaleh, M
AF Alarifi, Abdulrahman
   Zarour, Mohammad
   Alomar, Noura
   Alshaikh, Ziyad
   Alsaleh, Mansour
TI SECDEP: Software engineering curricula development and evaluation
   process using SWEBOK
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering education; Undergraduate curricula; SWEBOK; SE2004;
   SE2014; SWECOM
ID GAP
AB Context: Software engineering (SE) has a multidisciplinary and dynamic nature that makes it challenging to design its educational material. Guide to the software engineering body of knowledge (SWEBOK) which has evolved to become ISO/IEC 19759 standard has identified various knowledge areas to be part of any SE curricula. Although there is a number of studies that address the gap between SE curricula and software industry, the literature lacks defining a process that can be leveraged for continuously improving SE curricula to fulfill the software development market demands.
   Objective: In this paper, we propose a Software Engineering Curricula Development and Evaluation Process (SECDEP) that takes advantage of the SWEBOK guidelines to improve the quality of SE programs based on objective and subjective evidences.
   Method: Our process consists of multi-steps in which the local software market needs and the target SE program objectives and constraints are all taken into consideration. As a case study, we follow our process to investigate the core SE courses delivered as part of the SE curricula in a set of universities in our region.
   Results: The conducted case study identifies the factors that might contribute to mitigating the skills shortages in the target software market. We demonstrate the effectiveness of our process by identifying the weaknesses of the studied SE curricula and presenting recommendations to align the studied curricula with the demands of the target software market, which assists SE educators in the design and evaluation of their SE curricula.
   Conclusion: Based on the obtained results, the studied SE curricula can be enhanced by incorporating latest SE technologies, covering most of the SWEBOK knowledge areas, adopting SE curricula standards, and increasing the level of industrial involvement in SE curricula. We believe that achieving these enhancements by SE educators will have a positive impact on the SE curricula in question. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Alarifi, Abdulrahman; Alshaikh, Ziyad; Alsaleh, Mansour] King Abdulaziz City Sci & Technol, POB 6086, Riyadh 11442, Saudi Arabia.
   [Zarour, Mohammad] Prince Sultan Univ, Coll Comp Sci & Informat Syst, Riyadh, Saudi Arabia.
   [Alomar, Noura] King Saud Univ, Software Engn Dept, Riyadh, Saudi Arabia.
C3 King Abdulaziz City for Science & Technology; Prince Sultan University;
   King Saud University
RP Alarifi, A (corresponding author), King Abdulaziz City Sci & Technol, POB 6086, Riyadh 11442, Saudi Arabia.
EM aarifi@kacst.edu.sa; mzarour@psu.edu.sa; nnalomar@ksu.edu.sa;
   zshiakh@kacst.edu.sa; maalsaleh@kacst.edu.sa
RI Alsaleh, Mohd/J-8282-2016; Zarour, Mohammad I./D-5253-2009
OI Zarour, Mohammad I./0000-0002-1169-9502; Alomar,
   Noura/0000-0002-9052-999X; Alsaleh, Mohd/0000-0002-8614-1722
FU KACST
FX We thank the anonymous reviewers for their comments which helped improve
   this paper to its present form. This work was supported in part by
   KACST.
CR AI-Zaghoull F, 2014, INT CONF COMP SCI, P127, DOI 10.1109/CSIT.2014.6805990
   Almi N. E. A. M., 2011, 2011 IEEE Symposium on Computers & Informatics (ISCI), P542, DOI 10.1109/ISCI.2011.5958974
   [Anonymous], 2004, Technical Report
   [Anonymous], 152882008 IEEE STD
   [Anonymous], WORLD ACAD SCI ENG T
   [Anonymous], 2015, TECHNICAL REPORT
   [Anonymous], WILEY SERIES PROBABI
   Ardis M., 2014, The Software Engineering Competency Model (SWECOM)
   Ardis M.A., 2014, SIGSOFT SOFTWARE ENG, V39, P11
   Beckman K, 1997, IEEE SOFTWARE, V14, P49, DOI 10.1109/52.636668
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Fairley RE, 2014, CONF SOFTW ENG EDUC, P192, DOI 10.1109/CSEET.2014.6816804
   Frailey DJ, 2002, 15TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P6, DOI 10.1109/CSEE.2002.995193
   Frezza ST, 2006, IEEE SOFTWARE, V23, P27, DOI 10.1109/MS.2006.156
   Garcia-Mireles G.A., 2009, 2009 MEX INT C COMP, P272, DOI [10.1109/ENC.2009.19, DOI 10.1109/ENC.2009.19]
   Hanna S., 2014, Journal of Software Engineering and Applications, V7, P602
   Hanna S, 2014, CONF SOFTW ENG EDUC, P84, DOI 10.1109/CSEET.2014.6816785
   I. ISO, 2010, 247652010E ISO IEC I, P1, DOI [10.1109/IEEESTD.2010.5733835, DOI 10.1109/IEEESTD.2010.5733835]
   IDC, 2015, TECHNICAL REPORT
   Jaakkola H., 2006, IEEE INT C 2006 ICCC, P1
   Kitchenham B, 2005, J SYST SOFTWARE, V74, P325, DOI 10.1016/j.jss.2004.03.016
   Kuang LQ, 2012, PHYSCS PROC, V33, P1762, DOI 10.1016/j.phpro.2012.05.282
   LeBlanc R., 2004, Software engineering 2004: Curriculum guidelines for undergraduate degree programs in software engineering
   Levy D., 2008, P 19 ANN C AUSTR ASS, P260
   Mishra A, 2011, CROAT J EDUC, V13, P188
   Mishra A, 2007, EUR J ENG EDUC, V32, P349, DOI 10.1080/03043790701278607
   Pyster A., 2012, Guide to the Systems Engineering Body of Knowledge (SEBoK) v. 1.0. 1. Guide to the Systems Engineering Body of Knowledge (SEBoK)
   Pyster A., 2009, SOFTWARE ENG 2009 GS
   Qadir M. M., 2011, 2011 5th Malaysian Conference in Software Engineering (MySEC), P269, DOI 10.1109/MySEC.2011.6140682
   Qui R.U.R., 2014, INT J SCI TECHNOL RE, V3, P224
   Samarthyam G, 2012, PROC INT CONF SOFTW, P1215, DOI 10.1109/ICSE.2012.6227021
   Shkoukani M., 2013, INT J ADV COMPUT ENG, V1, P37
   Sobel A., 2003, COMPUTING C IN PRESS
   Su H., 2007, J COMPUT SMALL COLL, V23, P143
   Subrahmanyam GVB, 2009, CONF SOFTW ENG EDUC, P248, DOI 10.1109/CSEET.2009.8
   Teel S., 2012, ISSUES INF SCI INF T, V9, P63
   Thomas B.B., 2005, 4 ASEE AAEE GLOB C E, P612
NR 37
TC 14
Z9 16
U1 1
U2 15
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2016
VL 74
BP 114
EP 126
DI 10.1016/j.infsof.2016.01.013
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DJ7BX
UT WOS:000374368000008
DA 2024-07-18
ER

PT J
AU Hervieu, A
   Marijan, D
   Gotlieb, A
   Baudry, B
AF Hervieu, Aymeric
   Marijan, Dusica
   Gotlieb, Arnaud
   Baudry, Benoit
TI Practical minimization of pairwise-covering test configurations using
   constraint programming
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Variability testing; Highly-configurable software systems; Constraint
   programming
ID INTERACTION TEST SUITES
AB Context: Testing highly-configurable software systems is challenging due to a large number of test configurations that have to be carefully selected in order to reduce the testing effort as much as possible, while maintaining high software quality. Finding the smallest set of valid test configurations that ensure sufficient coverage of the system's feature interactions is thus the objective of validation engineers, especially when the execution of test configurations is costly or time-consuming. However, this problem is NP-hard in general and approximation algorithms have often been used to address it in practice.
   Objective: In this paper, we explore an alternative exact approach based on constraint programming that will allow engineers to increase the effectiveness of configuration testing while keeping the number of configurations as low as possible.
   Method: Our approach consists in using a (time-aware) minimization algorithm based on constraint programming. Given the amount of time, our solution generates a minimized set of valid test configurations that ensure coverage of all pairs of feature values (a.k.a. pairwise coverage). The approach has been implemented in a tool called PACOGEN.
   Results: PACOGEN was evaluated on 224 feature models in comparison with the two existing tools that are based on a greedy algorithm. For 79% of 224 feature models, PACOGEN generated up to 60% fewer test configurations than the competitor tools. We further evaluated PACOGEN in the case study of an industrial video conferencing product line with a feature model of 169 features, and found 60% fewer configurations compared with the manual approach followed by test engineers. The set of test configurations generated by PACOGEN decreased the time required by test engineers in manual test configuration by 85%, increasing the feature-pairs coverage at the same time.
   Conclusion: Our experimental evaluation concluded that optimal time-aware minimization of pairwise-covering test configurations is efficiently addressed using constraint programming techniques. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Hervieu, Aymeric; Baudry, Benoit] INRIA Rennes Bretagne Atlantique, Rennes, France.
   [Marijan, Dusica; Gotlieb, Arnaud] Simula Res Lab, Fornebu, Norway.
C3 Universite de Rennes
RP Marijan, D (corresponding author), Simula Res Lab, Fornebu, Norway.
EM dusica@simula.no
FU Research Council of Norway through the Certus SFI project
FX We are immensely grateful to Marius Liaaen and the engineers from the QA
   department of Cisco Systems Norway, who provided us with the feedback on
   this work and participated in our experimental evaluation study. This
   work has been supported by the Research Council of Norway through the
   Certus SFI project.
CR [Anonymous], 2012, P 6 INT WORKSH VAMOS
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Bell KZ, 2005, ENABLING TECHNOLOGIES FOR THE NEW KNOWLEDGE SOCIETY, P221
   Benavides D., 2005, P 17 INT C SOFTW ENG
   Blue D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P182, DOI 10.1109/ICSE.2013.6606564
   Bryce RC, 2005, PROC INT CONF SOFTW, P146
   Bryce RC, 2009, SOFTW TEST VERIF REL, V19, P37, DOI 10.1002/stvr.393
   Bryce RC, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1082
   Calvagna A, 2012, SOFTW TEST VERIF REL, V22, P507, DOI 10.1002/stvr.466
   Chvatal V., 1979, Mathematics of Operations Research, V4, P233, DOI 10.1287/moor.4.3.233
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Cohen MB, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P121, DOI 10.1109/TAIC.PART.2007.17
   Czamecki K., 2000, GENERATIVE PROGRAMMI
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   Eriksson M, 2005, LECT NOTES COMPUT SC, V3714, P33
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   Hartman A, 2005, GRAPH THEORY, COMBINATORICS AND ALGORITHMS: INTERDISCIPLINARY APPLICATIONS, P237
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Hervieu A, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P120, DOI 10.1109/ISSRE.2011.31
   Hnich B, 2006, CONSTRAINTS, V11, P199, DOI 10.1007/s10601-006-7094-9
   Johansen Martin Fagereng, 2012, Testing Software and Systems. 24th IFIP WG 6.1 International Conference (ICTSS 2012). Proceedings, P39, DOI 10.1007/978-3-642-34691-0_5
   Johansen MF, 2011, LECT NOTES COMPUT SC, V6981, P638, DOI 10.1007/978-3-642-24485-8_47
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Kang K. C., 1990, Technical Report
   Karatas AS, 2010, LECT NOTES COMPUT SC, V6308, P537, DOI 10.1007/978-3-642-15396-9_43
   Klaib MFJ, 2008, ASIA PAC SOFWR ENG, P463, DOI 10.1109/APSEC.2008.49
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Lawrence J., 2011, J COMB DES, V18, P37
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Lopez-Herrejon RE, 2013, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSM.2013.58
   Memon A. M., 2003, Software Engineering Notes, V28, P118, DOI 10.1145/949952.940088
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Oster S., 2011, P 15 INT SOFTW PROD, V2, DOI DOI 10.1145/2019136.2019143.
   Oster S, 2010, LECT NOTES COMPUT SC, V6287, P196, DOI 10.1007/978-3-642-15579-6_14
   Perrouin Gilles, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P459, DOI 10.1109/ICST.2010.43
   Perrouin G, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P339, DOI 10.1109/SPLC.2008.38
   Perrouin G, 2012, SOFTWARE QUAL J, V20, P605, DOI 10.1007/s11219-011-9160-9
   Petke Justyna, 2013, P ESEC FSE 2013, DOI [DOI 10.1145/2491411.2491436, 10.1145/2491411.2491436]
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Qu X., 2008, P 2008 INT S SOFTW T, P75
   Rossi F, 2006, FOUND ARTIF INTELL, P1
   Salinesi C, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P375, DOI 10.1109/RE.2009.52
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   VANHENTENRYCK P, 1991, LOGIC PROGRAMM, P745
   Williams A. W., 2002, SOFTWARE COMPONENT I
   Williams AW, 2000, INT FED INFO PROC, V48, P59
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Zilberstein S, 1996, AI MAG, V17, P73
NR 52
TC 23
Z9 23
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2016
VL 71
BP 129
EP 146
DI 10.1016/j.infsof.2015.11.007
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DB0RW
UT WOS:000368216200007
DA 2024-07-18
ER

PT J
AU Cafeo, BBP
   Cirilo, E
   Garcia, A
   Dantas, F
   Lee, J
AF Cafeo, Bruno B. P.
   Cirilo, Elder
   Garcia, Alessandro
   Dantas, Francisco
   Lee, Jaejoon
TI Feature dependencies as change propagators: An exploratory study of
   software product lines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software Product Line; Maintenance; Feature dependency; Change
   propagation
AB Context: A Software Product Line (SPL) is a set of software systems that share common functionalities, so-called features. When features are related, we consider this relation a feature dependency. Whenever a new feature is added, the presence of feature dependencies in the source code may increase the maintenance effort. In particular, along the maintenance of SPL implementation, added features may induce changes in other features, the so-called change propagation. Change propagation is the set of ripple changes required to other features whenever a particular feature is added or changed.
   Objective: The relationship between feature dependency and change propagation is not well understood. Therefore, the objective of our study is to examine the relation between feature dependency and change propagation.
   Method: We investigate change propagation through feature dependencies in additive changes on five evolving SPLs. We analysed a wide range of additive changes in 21 representations of those SPLs. This analysis enabled us to understand whether and how features dependencies and change propagations are related.
   Results: The results have empirically confirmed for the first time the strong relation between feature dependency and change propagation. We also identified what are the circumstances involving dependent features that are more likely to cause change propagation. Surprisingly, the results also suggested that the extent of change propagation across SPL features might be higher than the one found in previous studies of dependent modules in non-SPLs. We also found a concentration of change propagation in a few feature dependencies.
   Conclusion: Even though the results show that there is a strong relation between feature dependencies and change propagation, such relation is not alike for all dependencies. This indicates that (i) a general feature dependency minimisation might not ameliorate the change propagation, and (ii) feature dependency properties must be analysed beforehand to drive maintenance effort to important dependencies. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Cafeo, Bruno B. P.; Garcia, Alessandro] Pontif Catholic Univ Rio de Janeiro, OPUS Res Grp, Software Engn Lab, Dept Informat, Rio De Janeiro, Brazil.
   [Cirilo, Elder] Univ Fed Sao Joao del Rei, Dept Comp Sci, Sao Joao Del Rei, Brazil.
   [Dantas, Francisco] State Univ Rio Grande Norte, Dept Comp, Natal, RN, Brazil.
   [Cafeo, Bruno B. P.; Lee, Jaejoon] Univ Lancaster, Sch Comp & Commun, Lancaster, England.
C3 Universidade Federal de Sao Joao del-Rei; Universidade do Estado do Rio
   Grande do Norte (UERN); Lancaster University
RP Cafeo, BBP (corresponding author), Pontif Catholic Univ Rio de Janeiro, OPUS Res Grp, Rio De Janeiro, Brazil.
EM bcafeo@inf.puc-rio.br
OI Lee, Jaejoon/0000-0001-6016-8540
FU CAPES; CNPq [141688/2013-0, 305526/2009-0, 308490/2012-6]; FAPERJ
   [E-26/102.211/2009]; Universal project grants [483882/2009-7,
   485348/2011-0]; PUC-Rio (productivity grant)
FX This work has been funded by: B. B. P. Cafeo CAPES Ph.D. scholarship and
   CNPq scholarship (number 141688/2013-0); A. Garcia FAPERJ distinguished
   scientist grant (number E-26/102.211/2009), CNPq productivity grant
   (numbers 305526/2009-0 and 308490/2012-6), Universal project grants
   (number 483882/2009-7 and 485348/2011-0), and PUC-Rio (productivity
   grant).
CR Alves V, 2005, LECT NOTES COMPUT SC, V3714, P70
   [Anonymous], 2008, SPLC
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   APEL S, 2011, ICSE 2011, P421
   Apel S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P482, DOI 10.1109/ICSE.2013.6606594
   Bellman R., 1958, Q APPL MATH, V16, P87
   Bertsekas D., 2008, Introduction to probability
   Cafeo B., 2014, DAGSTUHL REPORTS SCH, P18
   Cafeo B. B. P., 2012, 2012 26th Brazilian Symposium on Software Engineering (SBES), P141, DOI 10.1109/SBES.2012.23
   Cafeo B.B.P., 2014, FEATURE DEPENDENCIES
   Cafeo BBP, 2013, INT WORKS EMERG TREN, P69, DOI 10.1109/WETSoM.2013.6619339
   Cataldo M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P161, DOI 10.1145/1985793.1985816
   Cirilo E, 2008, J UNIVERS COMPUT SCI, V14, P1344
   Clements P, 2002, IEEE SOFTWARE, V19, P28, DOI 10.1109/MS.2002.1020283
   Dijkstra EW., 1959, NUMER MATH, V1, P269, DOI [10.1007/BF01386390, DOI 10.1007/BF01386390]
   Ferber S., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P235
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   FLOYD RW, 1962, COMMUN ACM, V5, P345, DOI 10.1145/367766.368168
   Garvin BJ, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P90, DOI 10.1109/ISSRE.2011.25
   Geipel MM, 2012, IEEE T SOFTWARE ENG, V38, P1432, DOI 10.1109/TSE.2011.91
   Gini C., 1921, ECON J, V31, P124, DOI [DOI 10.2307/2223319, 10.2307/2223319]
   Godfrey MW, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P129, DOI 10.1109/FOSM.2008.4659256
   Hassan AE, 2004, PROC IEEE INT CONF S, P284, DOI 10.1109/ICSM.2004.1357812
   Kästner C, 2009, J OBJECT TECHNOL, V8, P59
   Lee K, 2004, LECT NOTES COMPUT SC, V3107, P69
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Lochau M, 2012, SOFTWARE QUAL J, V20, P567, DOI 10.1007/s11219-011-9165-4
   Lopez-Herrejon R. E., 2001, Generative and Component-Based Software Engineering. Third International Conference, GCSE 2001. Proceedings (Lecture Notes in Computer Science Vol.2186), P10
   Lorenz MO, 1905, J AM STAT ASSOC, V9, P209
   Marijan Dusica., 2013, Proceedings of the 17th International Software Product Line Conference. SPLC'13, P227, DOI DOI 10.1145/2491627.2491646
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Parnas D. L., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P279, DOI 10.1109/ICSE.1994.296790
   Perrouin G, 2012, SOFTWARE QUAL J, V20, P605, DOI 10.1007/s11219-011-9160-9
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rajlich V, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P84, DOI 10.1109/ICSM.1997.624234
   Ribeiro M, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P23
   Sangal N, 2005, ACM SIGPLAN NOTICES, V40, P167, DOI 10.1145/1103845.1094824
   Schach SR, 2003, EMPIR SOFTW ENG, V8, P351, DOI 10.1023/A:1025368318006
   Svahnberg M., 2000, LNCS, P391
   Thum T., 2013, SPL2GO
   Trujillo Salvador., 2006, GPCE 06 P 5 INT C GE, P191
   Tsantalis N, 2005, IEEE T SOFTWARE ENG, V31, P601, DOI 10.1109/TSE.2005.83
   Vasilescu B., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P313, DOI 10.1109/ICSM.2011.6080798
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Ye H, 2005, IEE P-SOFTW, V152, P101, DOI 10.1049/ip-sen:20045007
NR 46
TC 6
Z9 7
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2016
VL 69
BP 37
EP 49
DI 10.1016/j.infsof.2015.08.009
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CW5RA
UT WOS:000365053100003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Goseva-Popstojanova, K
   Perhinschi, A
AF Goseva-Popstojanova, Katerina
   Perhinschi, Andrei
TI On the capability of static code analysis to detect security
   vulnerabilities
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Security vulnerabilities; Common Weakness Enumeration (CWE); Static code
   analysis evaluation; Experiment; Case studies
ID SOFTWARE
AB Context: Static analysis of source code is a scalable method for discovery of software faults and security vulnerabilities. Techniques for static code analysis have matured in the last decade and many tools have been developed to support automatic detection.
   Objective: This research work is focused on empirical evaluation of the ability of static code analysis tools to detect security vulnerabilities with an objective to better understand their strengths and shortcomings.
   Method: We conducted an experiment which consisted of using the benchmarking test suite Juliet to evaluate three widely used commercial tools for static code analysis. Using design of experiments approach to conduct the analysis and evaluation and including statistical testing of the results are unique characteristics of this work. In addition to the controlled experiment, the empirical evaluation included case studies based on three open source programs.
   Results: Our experiment showed that 27% of C/C++ vulnerabilities and 11% of Java vulnerabilities were missed by all three tools. Some vulnerabilities were detected by only one or combination of two tools; 41% of C/C++ and 21% of Java vulnerabilities were detected by all three tools. More importantly, static code analysis tools did not show statistically significant difference in their ability to detect security vulnerabilities for both C/C++ and Java. Interestingly, all tools had median and mean of the per CWE recall values and overall recall across all CWEs close to or below 50%, which indicates comparable or worse performance than random guessing. While for C/C++ vulnerabilities one of the tools had better performance in terms of probability of false alarm than the other two tools, there was no statistically significant difference among tools' probability of false alarm for Java test cases.
   Conclusions: Despite recent advances in methods for static code analysis, the state-of-the-art tools are not very effective in detecting security vulnerabilities. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Goseva-Popstojanova, Katerina] W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
   [Perhinschi, Andrei] TASC Inc, Fairmt, WV 26554 USA.
C3 West Virginia University
RP Goseva-Popstojanova, K (corresponding author), W Virginia Univ, Lane Dept Comp Sci & Elect Engn, POB 6109, Morgantown, WV 26506 USA.
EM Katerina.Goseva@mail.wvu.edu
OI Goseva-Popstojanova, Katerina/0000-0003-4683-672X
FU NASA
FX This work was funded in part by the NASA Independent Verification and
   Validation Facility in Fairmont, WV through grant managed by TASC Inc.
   Authors thank Keenan Bowens, Travis Dawson, Roger Harris, Joelle
   Loretta, Jerry Sims, and Christopher Williams for their input and
   feedback. We also thank the anonymous reviewers for their comments and
   suggestions.
CR [Anonymous], TECHNICAL REPORT
   [Anonymous], CAS STAT AN TOOL STU
   [Anonymous], 2007, SPECIAL PUBLICATION, V500-268
   [Anonymous], 2009, Cyberspace Policy Review
   [Anonymous], 2014, 2014 GLOBAL REP COST
   [Anonymous], ADDISON WESLEY SOFTW
   ANTUNES N, 2009, 15 IEEE PAC RIM INT, P301, DOI DOI 10.1109/PRDC.2009.54
   Austin A, 2013, INFORM SOFTWARE TECH, V55, P1279, DOI 10.1016/j.infsof.2012.11.007
   BACA D, 2009, INT C AV REL SEC ARE, P804
   Baca D, 2013, SOFTWARE PRACT EXPER, V43, P259, DOI 10.1002/spe.2109
   Black P.E., 2007, ADA USER J, V28, P184
   Boland T, 2012, COMPUTER, V45, P88, DOI 10.1109/MC.2012.345
   Chess B, 2004, IEEE SECUR PRIV, V2, P76, DOI 10.1109/MSP.2004.111
   Díaz G, 2013, INFORM SOFTWARE TECH, V55, P1462, DOI 10.1016/j.infsof.2013.02.005
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Emanuelsson P, 2008, ELECTRON NOTES THEOR, V217, P5, DOI 10.1016/j.entcs.2008.06.039
   Erno K., 2012, SATE 4 WORKSH CTR AS
   Hofer T., 2010, THESIS ECOLE POLYTEC
   Johns M., 2008, SCANSTUD EVALUATING
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   McGraw G., 2006, Software security: building security in
   Okun V., 2011, US US NAT I STANDARD
   Velicheti L. M. R., 2014, P 9 ANN CYB INF SEC, P17
   Wohlin C., 2012, Experimentation in Software Engineering
   Zheng J, 2006, IEEE T SOFTWARE ENG, V32, P240, DOI 10.1109/TSE.2006.38
   Zhivich M, 2009, IEEE SECUR PRIV, V7, P87, DOI 10.1109/MSP.2009.56
NR 26
TC 55
Z9 66
U1 1
U2 14
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2015
VL 68
BP 18
EP 33
DI 10.1016/j.infsof.2015.08.002
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT8OP
UT WOS:000363076200002
DA 2024-07-18
ER

PT J
AU Grapenthin, S
   Poggel, S
   Book, M
   Gruhn, V
AF Grapenthin, Simon
   Poggel, Steven
   Book, Matthias
   Gruhn, Volker
TI Improving task breakdown comprehensiveness in agile projects with an
   Interaction Room
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 40th Euromicro Conference on Software Engineering and Advanced
   Applications (SEAA)
CY AUG 27-29, 2014
CL Univ Verona, Dept Comp Sci, Verona, ITALY
SP Elsevier Informat & Software Technol Journal, EDALab s r l, Euromicro
HO Univ Verona, Dept Comp Sci
DE Scrum; Sprint planning meeting; Task breakdown; Interaction Room
AB Context: The planning, estimation and controlling mechanisms of agile process models rely significantly on a fixed set of tasks being established for each sprint. These tasks are created as refinements of product backlog items at the beginning of each sprint. However, a project team's understanding of the backlog items' business implications and dependencies may often not be deep enough to identify all necessary tasks this early, so in addition to the tasks defined in the beginning of the sprint, more necessary tasks might be discovered as the sprint progresses, making any attempt at progress estimation or risk management difficult.
   Objective: We strive to enable software teams to achieve a deeper understanding of product backlog items, which should help them to identify a sprint's tasks more reliably and comprehensively, and avoid discovering the need for extra tasks during sprint execution.
   Method: We introduced a project team in a medium-sized software development company to the Interaction Room method, which encourages interdisciplinary communication about key system design aspects among all stakeholders. We observed the team's conduct in the sprint planning meetings, and tracked early- vs. late-identified tasks across several sprints.
   Results: Before the introduction of our method, the team used to discover on average 26% of a sprint's tasks not at the beginning of the sprint, but later during the course of the sprint. Using the Interaction Room in two separate projects, this ratio dropped to an average of 5% late-discovered tasks.
   Conclusion: Our observations from these projects suggest that increased communication among all stakeholders of a project leads to a more reliable identification of the tasks to be performed in a sprint, and that an Interaction Room can provide appropriate guidance to conduct this team communication in a focused and pragmatic way. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Grapenthin, Simon; Gruhn, Volker] Univ Duisburg Essen, Paluno, D-45127 Essen, Germany.
   [Poggel, Steven] Adesso AG, D-44269 Dortmund, Germany.
   [Book, Matthias] Univ Iceland, Dept Comp Sci, IS-107 Reykjavik, Iceland.
C3 University of Duisburg Essen; University of Iceland
RP Book, M (corresponding author), Univ Iceland, Dept Comp Sci, Dunhagi 5, IS-107 Reykjavik, Iceland.
EM simon.grapenthin@paluno.uni-due.de; steven.poggel@adesso.de; book@hi.is;
   volker.gruhn@paluno.uni-due.de
RI Book, Matthias/Z-6218-2019
OI Book, Matthias/0000-0003-2472-5201
CR Book M., 2012, P ACM SIGSOFT 20 INT, P30, DOI [10.1145/2393596.2393630, DOI 10.1145/2393596.2393630]
   CARMEL E, 1993, COMMUN ACM, V36, P40, DOI 10.1145/153571.163265
   Cohn M., 2005, Agile Estimating and Planning
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Cristal M, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P222, DOI 10.1109/ICGSE.2008.34
   Grapenthin S., 2013, Proceedings of the 31st ACM international conference on Design of communication, New York, NY, USA, P71, DOI DOI 10.1145/2507065.2507087
   Grapenthin S, 2014, EUROMICRO CONF PROC, P1, DOI 10.1109/SEAA.2014.71
   Mangano N, 2012, AUTOMAT SOFTW ENG, V19, P381, DOI 10.1007/s10515-012-0104-9
   Moore R, 2007, P AG C, P175, DOI DOI 10.1109/AGILE.2007.53
   Preece J., 2011, Interaction design: beyond human-computer interaction, V3rd
   Renger M, 2008, LECT NOTES BUS INF P, V10, P61
   Robinson H, 2005, AGILE 2005, PROCEEDINGS, P49, DOI 10.1109/ADC.2005.36
   Robinson H, 2005, LECT NOTES COMPUT SC, V3556, P100
   Rubin Kenneth S., 2012, Essential Scrum: A practical guide to the most popular Agile process, V1st
   Schwaber C., 2007, The Truth about Agile Processes: Frank Answers to Frequently Asked Questions, Forrester Report
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Sharp H, 2008, INT J HUM-COMPUT ST, V66, P506, DOI 10.1016/j.ijhcs.2007.10.004
   Usman Muhammad, 2014, P 10 INT C PRED MOD, P82, DOI 10.1145/2639490.2639503
   Whittaker S., 1999, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V8, P175, DOI 10.1023/A:1008603001894
NR 19
TC 12
Z9 16
U1 4
U2 37
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2015
VL 67
BP 254
EP 264
DI 10.1016/j.infsof.2015.07.008
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA CT2AO
UT WOS:000362604600016
DA 2024-07-18
ER

PT J
AU Jezek, K
   Dietrich, J
   Brada, P
AF Jezek, Kamil
   Dietrich, Jens
   Brada, Premek
TI How Java APIs break - An empirical study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Binary compatibility; API evolution; Backward compatibility; Byte-code;
   Java
ID COMPATIBILITY
AB Context: It has become common practice to build programs by using libraries. While the benefits of reuse are well known, an often overlooked risk are system runtime failures due to API changes in libraries that evolve independently. Traditionally, the consistency between a program and the libraries it uses is checked at build time when the entire system is compiled and tested. However, the trend towards partially upgrading systems by redeploying only evolved library versions results in situations where these crucial verification steps are skipped. For Java programs, partial upgrades create additional interesting problems as the compiler and the virtual machine use different rule sets to enforce contracts between the providers and the consumers of APIs.
   Objective: We have studied the extent of the problem in real world programs. We were interested in two aspects: the compatibility of API changes as libraries evolve, and the impact this has on programs using these libraries.
   Method: This study is based on the qualitas corpus version 20120401. A data set consisting of 109 Java open-source programs and 564 program versions was used from this corpus. We have investigated two types of library dependencies: explicit dependencies to embedded libraries, and dependencies defined by symbolic references in Maven build files that are resolved at build time. We have used JaCC for API analysis, this tool is based on the popular ASM byte code analysis library.
   Results: We found that for most of the programs we investigated, APIs are unstable as incompatible changes are common. Surprisingly, there are more compatibility problems in projects that use automated dependency resolution. However, we found only a few cases where this has an actual impact on other programs using such an API.
   Conclusion: It is concluded that API instability is common and causes problems for programs using these APIs. Therefore, better tools and methods are needed to safeguard library evolution. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Jezek, Kamil; Brada, Premek] Univ W Bohemia, Fac Sci Appl, European Ctr Excellence, NTIS, Plzen 30614, Czech Republic.
   [Dietrich, Jens] Massey Univ, Sch Engn & Adv Technol, Palmerston North, New Zealand.
C3 University of West Bohemia Pilsen; Massey University
RP Dietrich, J (corresponding author), Massey Univ, Sch Engn & Adv Technol, Palmerston North, New Zealand.
EM kjezek@kiv.zcu.cz; j.b.dietrich@massey.ac.nz; brada@kiv.zcu.cz
RI Brada, Premek/D-1180-2016; Brada, Premek/Z-2715-2019; Brada,
   Premek/GRR-9271-2022
OI Brada, Premek/0000-0001-5617-6396; Brada, Premek/0000-0001-5617-6396;
   Dietrich, Jens/0000-0001-9019-6550
FU European Regional Development Fund (ERDF), project "NTIS - New
   Technologies for the Information Society", European Centre of Excellence
   [CZ.1.05/1.1.00/02.0090]
FX The work was partially supported by European Regional Development Fund
   (ERDF), project "NTIS - New Technologies for the Information Society",
   European Centre of Excellence, CZ.1.05/1.1.00/02.0090.
CR [Anonymous], 2007, EVOLVING JAVA BASED
   [Anonymous], 2012, P 20 ACM SIGSOFT S F
   Barr M, 2003, PROC IEEE INT CONF S, P129, DOI 10.1109/ICSM.2003.1235414
   Bauml J, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P428, DOI 10.1109/SEAA.2009.80
   Belguidoum M, 2008, ELECTRON NOTES THEOR, V215, P75, DOI 10.1016/j.entcs.2008.06.022
   Beugnard A, 1999, COMPUTER, V32, P38, DOI 10.1109/2.774917
   Bloch J., 2016, Effective Java
   Brada P., 2003, THESIS
   Brada P, 2011, ELECTRON NOTES THEOR, V279, P17, DOI 10.1016/j.entcs.2011.11.009
   Bruneton Eric, 2002, ADAPTABLE EXTENSIBLE, V30
   Corwin J, 2003, ACM SIGPLAN NOTICES, V38, P241, DOI 10.1145/949343.949326
   Cox B.J., 1986, OBJECT ORIENTED PROG
   Dietrich J, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P64, DOI 10.1109/CSMR-WCRE.2014.6747226
   Dietrich J, 2010, LECT NOTES COMPUT SC, V6092, P150, DOI 10.1007/978-3-642-13238-4_9
   Dietrich Jens, 2014, WHAT JAVA DEV COMPAT
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Dig D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P441, DOI 10.1145/1368088.1368148
   Dmitriev M, 2002, ACM SIGPLAN NOTICES, V37, P373, DOI 10.1145/583854.582453
   Drossopoulou S, 1998, ACM SIGPLAN NOTICES, V33, P341, DOI 10.1145/286942.286974
   FORMAN IR, 1995, SIGPLAN NOTICES, V30, P426, DOI 10.1145/217839.217880
   Gosling J., 2012, Java Language Specification, V7
   Heinemann Lars, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P207, DOI 10.1007/978-3-642-21347-2_16
   JBoss Inc., 2012, JBOOS PROJ VERS
   Jezek K, 2013, EUR CON SFTWR MTNCE, P375, DOI 10.1109/CSMR.2013.53
   Jezek Kamil, 2014, P EUROMICRO DSD SEAA
   Keller R., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P307, DOI 10.1007/BFb0054097
   Lammel Ralf, 2011, P SAC 11
   LEHMAN M, 1985, PROGRAMME EVOLUTION
   Lindholm Tim., 2012, The Java virtual machine speci cation, V7
   Liskov Barbara H., 1994, ACM T PROGR LANG SYS, V16, P1811
   Martin R. C., 1996, C++ Report, V8, P61
   Martin Robert C., 1996, C REP, V8, P30
   Mens T, 2008, PROC IEEE INT CONF S, P386, DOI 10.1109/ICSM.2008.4658087
   Oracle Inc., 2013, PROJ JIGS
   Oracle Inc., 2013, JAV PROD VERS
   OSGi Alliance, 2012, OSGI SERV PLATF REL
   OSGi Alliance, 2010, SEM VERS TECHN WHIT
   Preston-Werner Tom, 2014, SEM VERS 2 0 0
   Raemaekers S, 2014, TECHNICAL REPORT
   Raemaekers S., 2012, 6 INT WORKSH SOFTW Q, V12
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Raemaekers Steven, 2011, EXPLORING RISKS USAG
   Savga Ilie, 2007, P 6 INT C GEN PROGR, P175
   Schwittek W., 2013, Component-Based Software Engineering, P75, DOI DOI 10.1145/2465449
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   WINOGRAD T, 1979, COMMUN ACM, V22, P391, DOI 10.1145/359131.359133
NR 46
TC 32
Z9 37
U1 0
U2 8
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2015
VL 65
BP 129
EP 146
DI 10.1016/j.infsof.2015.02.014
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CK3IP
UT WOS:000356110100009
DA 2024-07-18
ER

PT J
AU Lopez-Herrejon, RE
   Linsbauer, L
   Egyed, A
AF Lopez-Herrejon, Roberto E.
   Linsbauer, Lukas
   Egyed, Alexander
TI A systematic mapping study of search-based software engineering for
   software product lines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software product line; Systematic mapping study; Search based software
   engineering; Evolutionary algorithm; Metaheuristics
ID REUSE SCENARIO; VARIABILITY; MODEL; SELECTION; MUTATION; CONSTRAINTS;
   RELIABILITY; ALGORITHMS; GENERATION
AB Context: Search-Based Software Engineering (SBSE) is an emerging discipline that focuses on the application of search-based optimization techniques to software engineering problems. Software Product Lines (SPLs) are families of related software systems whose members are distinguished by the set of features each one provides. SPL development practices have proven benefits such as improved software reuse, better customization, and faster time to market. A typical SPL usually involves a large number of systems and features, a fact that makes them attractive for the application of SBSE techniques which are able to tackle problems that involve large search spaces.
   Objective: The main objective of our work is to identify the quantity and the type of research on the application of SBSE techniques to SPL problems. More concretely, the SBSE techniques that have been used and at what stage of the SPL life cycle, the type of case studies employed and their empirical analysis, and the fora where the research has been published.
   Method: A systematic mapping study was conducted with five research questions and assessed 77 publications from 2001, when the term SBSE was coined, until 2014.
   Results: The most common application of SBSE techniques found was testing followed by product configuration, with genetic algorithms and multi-objective evolutionary algorithms being the two most commonly used techniques. Our study identified the need to improve the robustness of the empirical evaluation of existing research, a lack of extensive and robust tool support, and multiple avenues worthy of further investigation.
   Conclusions: Our study attested the great synergy existing between both fields, corroborated the increasing and ongoing interest in research on the subject, and revealed challenging open research questions. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Lopez-Herrejon, Roberto E.; Linsbauer, Lukas; Egyed, Alexander] Johannes Kepler Univ Linz, Inst Software Syst Engn, A-4040 Linz, Austria.
C3 Johannes Kepler University Linz
RP Lopez-Herrejon, RE (corresponding author), Johannes Kepler Univ Linz, Inst Software Syst Engn, Altenbergerstr 69, A-4040 Linz, Austria.
EM roberto.lopez@jku.at; lukas.linsbauer@jku.at; alexander.egyed@jku.at
RI Egyed, Alexander/E-2632-2017
OI Egyed, Alexander/0000-0003-3128-5427
FU Austrian Science Fund (FWF) Projects [P25289-N15, P25513-N15]; Lise
   Meitner Fellowship [M1421-N15]; Austrian Science Fund (FWF) [P25513]
   Funding Source: Austrian Science Fund (FWF)
FX This research is partially funded by the Austrian Science Fund (FWF)
   Projects P25289-N15, P25513-N15, and Lise Meitner Fellowship M1421-N15.
   We thank Javier Ferrer, Francisco Chicano, and Enrique Alba for their
   help with the earlier versions of this work.
CR Afzal Wasif, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P488
   Al-Hajjaji Mustafa, 2014, SPLC 14
   Ali N., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P153, DOI 10.1109/ICSM.2011.6080782
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   [Anonymous], 2013, P 17 INT SOFTW PROD, DOI [DOI 10.1145/2491627.2491635, 10.1145/2491627.2491635]
   [Anonymous], FOSE 2014
   [Anonymous], 2013, P 17 INT SOFTWARE PR
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Back T., 2012, Handbook of Natural Computing, DOI 10.1007/978-3-540-92910-9_22
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   Baller H, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P303, DOI 10.1109/ICST.2014.43
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T., 2010, P INT C AUT SOFTW EN, P73, DOI DOI 10.1145/1858996.1859010
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Calvagna A, 2013, IEEE ICST WORKSHOP, P338, DOI 10.1109/ICSTW.2013.45
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   Cleve A., 2013, 17 EUR C SOFTW MAINT
   Coello C. A. C., 2007, EVOLUTIONARY ALGORIT, V5
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Colanzi Thelma Elita, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P259, DOI 10.1007/978-3-642-33119-0_19
   Colanzi TE, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P28, DOI 10.1109/CMSBSE.2013.6604433
   Colanzi TE, 2012, PROC INT CONF SOFTW, P1507, DOI 10.1109/ICSE.2012.6227050
   Colanzi Thelma Elita, 2014, SPLC 14
   Colanzi Thelma Elita, 2014, COMPSAC 14
   Cruz J, 2013, 2013 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P2229
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   da Silva IF, 2011, SOFTWARE PRACT EXPER, V41, P899, DOI 10.1002/spe.1078
   de Freitas FG, 2011, LECT NOTES COMPUT SC, V6956, P18, DOI 10.1007/978-3-642-23716-4_5
   Deb K., 2010, MULTIOBJECTIVE OPTIM
   Del Rosso C, 2008, J SYST SOFTWARE, V81, P1, DOI 10.1016/j.jss.2007.07.006
   Eiben A. E., 2015, INTRO EVOLUTIONARY C
   Sanchez LE, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P39, DOI 10.1109/CMSBSE.2013.6604435
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Ensan Faezeh, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P613, DOI 10.1007/978-3-642-31095-9_40
   Ferreira Bastos Jonatas, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P11, DOI 10.1049/ic.2011.0002
   Filho J. B. F., 2013, 17 INT SOFTW PROD LI, P72
   Fischer S, 2014, PROC IEEE INT CONF S, P391, DOI 10.1109/ICSME.2014.61
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Goues C.L, 2014, LECT NOTES COMPUTER, V8636
   Assunçao WKG, 2013, 2013 BRAZILIAN CONFERENCE ON INTELLIGENT SYSTEMS (BRACIS), P249, DOI 10.1109/BRACIS.2013.49
   Guizzo G, 2014, LECT NOTES COMPUT SC, V8636, P77
   Guizzo Giovani, 2013, P CHIL COMP C JCC 13
   Guo JM, 2013, IEEE INT CONF AUTOM, P301, DOI 10.1109/ASE.2013.6693089
   Guo JM, 2011, J SYST SOFTWARE, V84, P2208, DOI 10.1016/j.jss.2011.06.026
   Harman M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P5, DOI 10.1145/2648511.2648513
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M., BABEL PIDGIN SBSE CA, V79, P247
   Harman M, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2537853
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Haslinger E.N., 2013, P INT WORKSH VAR MOD, P16, DOI [10.1145/2430502.2430524, DOI 10.1145/2430502.2430524]
   Haslinger Evelyn Nicole, 2013, ABS13117313 CORR
   Henard C, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P126
   Henard C, 2014, LECT NOTES COMPUT SC, V8636, P92
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Henard C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1245, DOI 10.1109/ICSE.2013.6606689
   Henard C, 2013, IEEE ICST WORKSHOP, P188, DOI 10.1109/ICSTW.2013.30
   Henard Christopher, 2012, ABS12115451 CORR
   Heradio R, 2013, INT J SOFTW ENG KNOW, V23, P1177, DOI 10.1142/S0218194013500368
   Heradio R, 2012, EXPERT SYST APPL, V39, P7919, DOI 10.1016/j.eswa.2012.01.109
   Holl G, 2012, INFORM SOFTWARE TECH, V54, P828, DOI 10.1016/j.infsof.2012.02.002
   Hongxia Zhang, 2013, 2013 IEEE International Conference on Services Computing (SCC), P751, DOI 10.1109/SCC.2013.23
   Islam S, 2014, J SYST SOFTWARE, V88, P1, DOI 10.1016/j.jss.2013.07.040
   Johansen Martin Fagereng, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P269, DOI 10.1007/978-3-642-33666-9_18
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Kästner C, 2014, IEEE T SOFTWARE ENG, V40, P67, DOI 10.1109/TSE.2013.45
   Kakola T., 2006, SOFTWARE PRODUCT LIN
   Kang Kyo C, 1990, Technical Report
   Karimpour R, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P34, DOI 10.1109/CMSBSE.2013.6604434
   Kitchenham B., 2007, EBSE200701 KEEL U UK
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Laguna MA, 2013, SCI COMPUT PROGRAM, V78, P1010, DOI 10.1016/j.scico.2012.05.003
   Le Goues C, 2013, SOFTWARE QUAL J, V21, P421, DOI 10.1007/s11219-013-9208-0
   Li J, 2011, ADV INTEL SOFT COMPU, V124, P459
   Li Yi, 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P141, DOI 10.1109/RE.2012.6345798
   Linsbauer L, 2014, LECT NOTES COMPUT SC, V8636, P153
   Lopez-Herrejon Roberto Erick, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P168, DOI 10.1007/978-3-642-33119-0_13
   Lopez-Herrejon R. E., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P181, DOI 10.1109/SPLC.2011.52
   Lopez-Herrejon R. E., 2012, P VAMOS 2012, P93
   Lopez-Herrejon R. E., 2014, ABS14015367 CORR
   Lopez-Herrejon R.E., ABS14062823 CORR
   Lopez-Herrejon RE, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1255, DOI 10.1145/2576768.2598305
   Lopez-Herrejon RE, 2013, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSM.2013.58
   Lopez-Herrejon Roberto E., 2014, CEC
   Luke S, 2009, Essentials of Metaheuristics
   Machado ID, 2014, INFORM SOFTWARE TECH, V56, P1183, DOI 10.1016/j.infsof.2014.04.002
   Mahdavi-Hezavehi S, 2013, INFORM SOFTWARE TECH, V55, P320, DOI 10.1016/j.infsof.2012.08.010
   Marler RT, 2004, STRUCT MULTIDISCIP O, V26, P369, DOI 10.1007/s00158-003-0368-6
   Mohabbati B, 2013, INFORM SOFTWARE TECH, V55, P1845, DOI 10.1016/j.infsof.2013.05.006
   Mohabbati Bardia, 2011, DEV CONFIGURATION SE, P1606
   Muhammad Irfan Ullah, 2009, SERG200903
   Muller J., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P15, DOI 10.1109/SPLC.2011.18
   Nohrer A., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P25, DOI 10.1109/SPLC.2011.45
   Ognjanovic I., 2012, 2012 IEEE International Conference on Services Computing (SCC), P25, DOI 10.1109/SCC.2012.6
   Olaechea R., 2012, Proceedings of the Fourth International Workshop on Nonfunctional System Properties in Domain Specific Modeling Languages, p2:1, DOI DOI 10.1145/2420942.2420944
   Olaechea Rafael, 2014, SPLC 14
   Pascual Gustavo G., 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P282, DOI 10.1007/978-3-642-39031-9_24
   Pascual GG, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P73, DOI 10.1109/SEAMS.2013.6595494
   Perrouin G, 2012, SOFTWARE QUAL J, V20, P605, DOI 10.1007/s11219-011-9160-9
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petke Justyna, 2014, Genetic Programming. 17th European Conference (EuroGP 2014). Revised Selected Papers: LNCS 8599, P137, DOI 10.1007/978-3-662-44303-3_12
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Poli R., 2008, A Field Guide to Genetic Programming
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Rabiser R, 2010, INFORM SOFTWARE TECH, V52, P324, DOI 10.1016/j.infsof.2009.11.001
   Räihä O, 2011, RELATING SOFTWARE REQUIREMENTS AND ARCHITECTURES, P307, DOI 10.1007/978-3-642-21001-3_18
   Roberto E, 2011, SSBSE 2011
   Rubin J., 2013, SPLC, P101
   Runyu Shi, 2010, Proceedings 2010 International Conference on Progress in Informatics and Computing (PIC 2010), P665, DOI 10.1109/PIC.2010.5687874
   Russell S., 2010, ARTIF INTELL, V3rd
   Sánchez AB, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P41, DOI 10.1109/ICST.2014.15
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Sayyad AS, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P22, DOI 10.1109/CMSBSE.2013.6604432
   Schulze Sandro, 2013, INT WORKSH FEAT OR S, P33
   Segura S, 2011, IET SOFTW, V5, P70, DOI 10.1049/iet-sen.2009.0096
   Segura S., 2012, Proceedings of the Sixth International Workshop on Variability Modeling of Software-Intensive Systems, P63, DOI DOI 10.1145/2110147.2110155
   Segura S, 2014, EXPERT SYST APPL, V41, P3975, DOI 10.1016/j.eswa.2013.12.028
   Serajzadeh Hadi, 2011, SPLC WORKSH, P12
   Sheng Chen, 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P35, DOI 10.1109/SPLC.2011.47
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Tan Lei, 2013, P 36 AUSTR COMP SCI, P125
   Tang JF, 2013, OMEGA-INT J MANAGE S, V41, P536, DOI 10.1016/j.omega.2012.07.003
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Ullah MI, 2010, J SYST SOFTWARE, V83, P2496, DOI 10.1016/j.jss.2010.07.049
   Van Veldhuizen DavidA., 1999, EVOL COMPUT
   Velazco R.E.O., 2013, THESIS U WATERLOO WA
   Wang RZ, 2012, PROCEDIA COMPUT SCI, V12, P13, DOI 10.1016/j.procs.2012.09.023
   Wang S, 2014, LECT NOTES COMPUT SC, V8636, P199
   Wang SA, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1493
   Wang Shuai, 2014, SPLC
   Wang Ying-lin, 2014, Journal of Shanghai Jiaotong University (Science), V19, P50, DOI 10.1007/s12204-013-1468-0
   Wei Zhang, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P4, DOI 10.1007/978-3-642-21347-2_2
   Wohlin C., 2012, Experimentation in Software Engineering
   Wohlin C., 2014, INT C EVALUATION ASS, P1
   Wohlin C, 2013, J SYST SOFTWARE, V86, P2594, DOI 10.1016/j.jss.2013.04.076
   Wu ZQ, 2011, INT J INF TECH DECIS, V10, P811, DOI 10.1142/S0219622011004580
   Xu Z., 2013, P 17 INT SOFTWARE PR, P52, DOI DOI 10.1145/2491627.2491650
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S, 2013, EMPIR SOFTW ENG, V18, P550, DOI 10.1007/s10664-013-9247-y
   Yu LB, 2014, IEEE HI ASS SYS ENGR, P65, DOI 10.1109/HASE.2014.18
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
   Zhiqiao Wu, 2010, Proceedings of the 2nd International Conference on Software Engineering and Data Mining (SEDM 2010), P69
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zitzler E., EVOLUTIONARY MULTIOB, P871
NR 152
TC 66
Z9 67
U1 0
U2 36
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2015
VL 61
BP 33
EP 51
DI 10.1016/j.infsof.2015.01.008
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF7PI
UT WOS:000352748400003
DA 2024-07-18
ER

PT J
AU Gaitani, MAG
   Zafeiris, VE
   Diamantidis, NA
   Giakoumakis, EA
AF Gaitani, Maria Anna G.
   Zafeiris, Vassilis E.
   Diamantidis, N. A.
   Giakoumakis, E. A.
TI Automated refactoring to the NULL OBJECT design pattern
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Refactoring; Design patterns; Null Object; Optional fields; Null checks
ID IDENTIFICATION; OPPORTUNITIES
AB Context: Null-checking conditionals are a straightforward solution against null dereferences. However, their frequent repetition is considered a sign of poor program design, since they introduce source code duplication and complexity that impacts code comprehension and maintenance. The Nun OBJECT design pattern enables the replacement of null-checking conditionals with polymorphic method invocations that are bound, at runtime, to either a real object or a Null Object.
   Objective: This work proposes a novel method for automated refactoring to NULL OBJECT that eliminates null-checking conditionals associated with optional class fields, i.e., fields that are not initialized in all class instantiations and, thus, their usage needs to be guarded in order to avoid null dereferences.
   Method: We introduce an algorithm for automated discovery of refactoring opportunities to Nun OBJECT. Moreover, we specify the source code transformation procedure and an extensive set of refactoring preconditions for safely refactoring an optional field and its associated null-checking conditionals to the NULL OBJECT design pattern. The method is implemented as an Eclipse plug-in and is evaluated on a set of open source Java projects.
   Results: Several refactoring candidates are discovered in the projects used in the evaluation and their refactoring lead to improvement of the cyclomatic complexity of the affected classes. The successful execution of the projects' test suites, on their refactored versions, provides empirical evidence on the soundness of the proposed source code transformation. Runtime performance results highlight the potential for applying our method to a wide range of project sizes.
   Conclusion: Our method automates the elimination of null-checking conditionals through refactoring to the NULL OBJECT design pattern. It contributes to improvement of the cyclomatic complexity of classes with optional fields. The runtime processing overhead of applying our method is limited and allows its integration to the programmer's routine code analysis activities. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Gaitani, Maria Anna G.; Zafeiris, Vassilis E.; Diamantidis, N. A.; Giakoumakis, E. A.] Athens Univ Econ & Business, Dept Informat, Athens 10434, Greece.
C3 Athens University of Economics & Business
RP Giakoumakis, EA (corresponding author), Patission 76, Athens 10434, Greece.
EM mariannag17@gmail.com; bzafiris@aueb.gr; nad@aueb.gr; mgia@aueb.gr
RI Giakoumakis, Emmanouil/AAJ-2690-2021; Zafeiris, Vassilis/JFS-1742-2023
OI Giakoumakis, Emmanouil/0000-0002-0586-8592; Zafeiris,
   Vassilis/0000-0003-0751-4509
CR Ajouli Akram, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P25, DOI 10.1109/SEAA.2013.53
   [Anonymous], 2014, CLASS OPTIONAL JAVA
   Ayewah N., 2010, P 9 ACM SIGPLAN SIGS, P65, DOI 10.1145/1806672.1806686
   Chatzigeorgiou A., 2014, JDEODORANT ECLIPSE P
   Christopoulou A, 2012, INFORM SOFTWARE TECH, V54, P1202, DOI 10.1016/j.infsof.2012.05.004
   Cinneide M. O., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P463, DOI 10.1109/ICSM.1999.792644
   Fähndrich M, 2003, ACM SIGPLAN NOTICES, V38, P302, DOI 10.1145/949343.949332
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Henney Kevlin, 2002, P 7 EUR C PATT LANG
   Hotta K., 2012, 16 EUR C SOFTW MAINT
   Hovemeyer D, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P9, DOI 10.1145/1251535.1251537
   Jebelean C., 2010, P 2010 IEEE INT C AU, P1
   Jeon SU, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P337, DOI 10.1109/APSEC.2002.1183003
   Juillerat N, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P81, DOI 10.1109/SCAM.2007.11
   Kerievsky J., 2004, REFACTORING PATTERNS
   Liskov B.H., 1999, CMUCS99156
   Madhavan R, 2011, ACM SIGPLAN NOTICES, V46, P1033, DOI 10.1145/2076021.2048144
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Rajesh J., 2004, PPDP 04, P227
   ROOTS research group, 2011, JTRANSFORMER QUER TR
   Tokuda L., 1995, INT S APPL CORP COMP
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Tsantalis N, 2010, J SYST SOFTWARE, V83, P391, DOI 10.1016/j.jss.2009.09.017
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Woolf B., 1997, PATTERN LANGUAGES PR, V3
NR 27
TC 15
Z9 17
U1 0
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2015
VL 59
BP 33
EP 52
DI 10.1016/j.infsof.2014.10.010
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CB1ZT
UT WOS:000349427200003
DA 2024-07-18
ER

PT J
AU Shrivastava, SV
   Rathod, U
AF Shrivastava, Suprika V.
   Rathod, Urvashi
TI Categorization of risk factors for distributed agile projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Distributed Agile Development (DAD); Agile software development (ASD);
   Distributed Software Development (DSD); Risk factor classification;
   Leavitt's' model; Risk management in distributed agile development
ID GLOBAL SOFTWARE-DEVELOPMENT; MANAGEMENT; SYSTEMS; COMMUNICATION;
   CHALLENGES; SCRUM
AB Context: Organizations combine agile approach and Distributed Software Development (DSD) in order to develop better quality software solutions in lesser time and cost. It helps to reap the benefits of both agile and distributed development but pose significant challenges and risks. Relatively scanty evidence of research on the risks prevailing in distributed agile development (DAD) has motivated this study.
   Objective: This paper aims at creating a comprehensive set of risk factors that affect the performance of distributed agile development projects and identifies the risk management methods which are frequently used in practice for controlling those risks.
   Method: The study is an exploration of practitioners' experience using constant comparison method for analyzing in-depth interviews of thirteen practitioners and work documents of twenty-eight projects from thirteen different information technology (IT) organizations. The field experience was supported by extensive research literature on risk management in traditional, agile and distributed development.
   Results: Analysis of qualitative data from interviews and project work documents resulted into categorization of forty-five DAD risk factors grouped under five core risk categories. The risk categories were mapped to Leavitt's model of organizational change for facilitating the implementation of results in real world. The risk factors could be attributed to the conflicting properties of DSD and agile development. Besides that, some new risk factors have been experienced by practitioners and need further exploration as their understanding will help the practitioners to act on time.
   Conclusion: Organizations are adopting DAD for developing solutions that caters to the changing business needs, while utilizing the global talent. Conflicting properties of DSD and agile approach pose several risks for DAD. This study gives a comprehensive categorization of the risks faced by the practitioners in managing DAD projects and presents frequently used methods to reduce their impact. The work fills the yawning research void in this field. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Shrivastava, Suprika V.; Rathod, Urvashi] SIU, SCIT, Pune 411057, Maharashtra, India.
C3 Symbiosis International University; Symbiosis Centre for Information
   Technology (SCIT)
RP Shrivastava, SV (corresponding author), SIU, SCIT, Rajiv Gandhi Infotech Pk, Pune 411057, Maharashtra, India.
EM suprikashrvt@gmail.com; urvashi.srathod@gmail.com
RI Harrison, Dylan/AFP-8142-2022; Symbiosis Centre for Information
   Technology, Pune/AAE-3123-2019; Rathod, Urvashi/R-9303-2016
OI Rathod, Urvashi/0000-0002-9555-1045
FU Project Management Institute Educational Foundation, PMIEF (USA)
FX We would like to thank all the participants from the corporate who
   participated in the interview session and gave their valuable inputs for
   this research work. Our special thanks to the Dr. R Raman (Director,
   SCIT) for his critical inputs and the support which he has extended to
   us for carrying the research. This work has been funded by Project
   Management Institute Educational Foundation, PMIEF (USA).
CR [Anonymous], 2002, Agile software development
   [Anonymous], 2006, APPL SOFTWARE RISK M
   [Anonymous], 2007, Scaling Software Agility: Best Practices for Large Enterprises
   [Anonymous], IEEE INT C GLOB SOFT
   [Anonymous], 1964, NEW PERSPECTIVES ORG
   [Anonymous], BUSINESS RES METHODS
   [Anonymous], P AGILE 2008 C CAN 4
   [Anonymous], ORG CHANGE THEORY PR
   [Anonymous], CUTTER IT J LLC
   [Anonymous], AGILE TESTING PRACTI
   [Anonymous], TEST DATA MANAGEMENT
   [Anonymous], QUAL RES J
   [Anonymous], 2012 IEEE 21 INT WOR
   [Anonymous], 2005, Extreme programming explained: Embrace change
   [Anonymous], P AGILE 2008 C
   [Anonymous], SCRUMMASTER STUDY GU
   [Anonymous], 7 AN STAT AG DEV SUR
   [Anonymous], 2004, GUID PROJ MAN BOD KN, V3rd
   [Anonymous], SCALING LEAN AGILE D
   [Anonymous], DEFINITIVE GUIDE PRO
   [Anonymous], AGILE SUCCESS FACTOR
   [Anonymous], P 22 EUROMICRO C SEP
   [Anonymous], SUCCEEDING AGILE SOF
   [Anonymous], P AGILE 2008 C
   [Anonymous], QUAL METHODS
   [Anonymous], AGILITY SCALE SURVEY
   [Anonymous], CASE STUDY THOUGHTWO
   [Anonymous], GEN SPECIALISTS IMPR
   Augustine S., 2005, Managing agile projects, V1st
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   Begel Andrew, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P255
   Boehm B., 2003, BALANCING AGILITY DI
   Bowen GA, 2009, QUAL RES J, V9, P27, DOI 10.3316/QRJ0902027
   Chamberlain S, 2006, LECT NOTES COMPUT SC, V4044, P143
   Clegg S, 2004, J MANAGE STUD, V41, P525, DOI 10.1111/j.1467-6486.2004.00443.x
   Coffey A., 1996, Making Sense of qualitative data, P26
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Conchúir EO, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P159, DOI 10.1109/ICGSE.2006.261229
   Cooper D.R., 2013, Business research methods, V12th
   Cusumano M, 2008, COMMUN ACM, V51, P15, DOI 10.1145/1314215.1314218
   da Silva Fabio Q. B., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P87, DOI 10.1109/ICGSE.2010.18
   Damian D, 2006, IEEE SOFTWARE, V23, P17, DOI 10.1109/MS.2006.126
   Damian DE, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P319, DOI 10.1109/ICRE.2002.1048545
   Dhar S, 2006, J GLOB INF MANAG, V14, P39, DOI 10.4018/jgim.2006070104
   Drummond B, 2008, AGILE 2008, PROCEEDINGS, P315, DOI 10.1109/Agile.2008.21
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Evaristo JR, 2004, J ENG TECHNOL MANAGE, V21, P175, DOI [10.1016/j.jengtecman.2003.05.001, 10.1016/j.jengtecman.2003.15.01]
   Fereday J., 2006, INT J QUAL METH, V5, P80, DOI [10.1177/160940690600500107, DOI 10.1177/160940690600500107]
   Franklin T, 2008, AGILE 2008, PROCEEDINGS, P269, DOI 10.1109/Agile.2008.88
   GLASER BG, 1965, SOC PROBL, V12, P436, DOI 10.1525/sp.1965.12.4.03a00070
   Gutwin C., 2004, Computer Supported Cooperative Work Conference Proceedings, P72, DOI 10.1145/1031607.1031621
   He M, 2008, LECT NOTES COMPUT SC, V5007, P381
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Ho C.W., 2004, P OOPSLA WORKSHOP EC, P73, DOI DOI 10.1145/1066129.1066144
   Hoda R, 2011, LECT NOTES BUS INF P, V77, P73
   Holmström H, 2006, INFORM SYST MANAGE, V23, P7, DOI 10.1201/1078.10580530/46108.23.3.20060601/93703.2
   Hossain E, 2009, ASIA PAC SOFWR ENG, P457, DOI 10.1109/APSEC.2009.56
   Jalali S., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P45, DOI 10.1109/ICGSE.2010.14
   Judy K.H., 2008, Hawaii International Conference on System Sciences, Proceedings of the 41st Annual, P462
   Kähkönen T, 2003, EUROMICRO CONF PROC, P273
   Kajko-Mattsson M., 2010, Proceedings of the 2010 Agile Conference (AGILE 2010), P51, DOI 10.1109/AGILE.2010.14
   Kajko-Mattsson M, 2006, PROC IEEE INT CONF S, P422
   KEEN PGW, 1981, COMMUN ACM, V24, P24, DOI 10.1145/358527.358543
   Krishna S, 2004, COMMUN ACM, V47, P62, DOI 10.1145/975817.975818
   Kunz M, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P673, DOI 10.1109/ASWEC.2008.61
   Layman L, 2006, INFORM SOFTWARE TECH, V48, P781, DOI 10.1016/j.infsof.2006.01.004
   Lehtinen TOA, 2014, INFORM SOFTWARE TECH, V56, P408, DOI 10.1016/j.infsof.2014.01.004
   Little T, 2005, IEEE SOFTWARE, V22, P28, DOI 10.1109/MS.2005.60
   Lyytinen K, 1998, INFORM SYST RES, V9, P233, DOI 10.1287/isre.9.3.233
   Marshall G., 2011, DESIGNING QUALITATIV, VFifth
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   Moe NB, 2012, INFORM SOFTWARE TECH, V54, P853, DOI 10.1016/j.infsof.2011.11.006
   Monasor M.J, 2009, ADV SOFTW ENG, P1, DOI DOI 10.1155/2009/710971
   Moore S., 2004, OFFSHORE OUTSOURCING
   Mudumba V., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P219, DOI 10.1109/ICGSE.2010.33
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Nyfjord J, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P476, DOI 10.1109/SEAA.2008.77
   Paasivaara M, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P87, DOI 10.1109/ICGSE.2008.38
   Paasivaara M, 2009, INT CONF GLOBAL SOFT, P195, DOI 10.1109/ICGSE.2009.27
   Patton J, 2003, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P146, DOI 10.1109/ADC.2003.1231465
   Patton M. Q., 2002, QUALITATIVE RES EVAL, V3rd
   Persson JS, 2009, IEEE T ENG MANAGE, V56, P508, DOI 10.1109/TEM.2009.2013827
   Phalnikar R, 2009, INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER CONTROL : ICACC 2009 - PROCEEDINGS, P535, DOI 10.1109/ICACC.2009.93
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Prikladnicki R, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P99, DOI 10.1109/ICGSE.2008.36
   Prikladnicki R, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P18, DOI 10.1109/ICGSE.2006.261212
   Ramesh B, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1164394.1164418
   Rothman J, 2013, IEEE SOFTWARE, V30, P7, DOI 10.1109/MS.2013.33
   Rowlinson S, 2008, CONSTR MANAG ECON, V26, P611, DOI 10.1080/01446190802071182
   Sakthivel S, 2005, INFORM SOFTWARE TECH, V47, P305, DOI 10.1016/j.infsof.2004.09.001
   Sarker S, 2004, EUR J INFORM SYST, V13, P3, DOI 10.1057/palgrave.ejis.3000485
   Schmidt R, 2001, J MANAGE INFORM SYST, V17, P5, DOI 10.1080/07421222.2001.11045662
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Scott W., 1992, ORG RATIONAL NATURAL
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sedehi H, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P99, DOI 10.1109/IWSM-MENSURA.2012.22
   Sengupta B., 2006, 28th International Conference on Software Engineering Proceedings, P731, DOI 10.1145/1134285.1134402
   Shore J., 2007, ART AGILE DEV
   Smite D, 2011, IEEE SOFTWARE, V28, P15, DOI 10.1109/MS.2011.70
   Stoneburner G., 2002, SP 800 30 RISK MANAG
   Sutherland J, 2008, AGILE 2008, PROCEEDINGS, P339, DOI 10.1109/Agile.2008.92
   Woodward E., 2010, A Practical Guide to Distributed Scrum (IBM.)
   Yin R.K., 2011, Qualitative research from start to finish
NR 105
TC 51
Z9 61
U1 6
U2 129
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 373
EP 387
DI 10.1016/j.infsof.2014.07.007
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800022
DA 2024-07-18
ER

PT J
AU Hurtado, N
   Ruiz, M
   Orta, E
   Torres, J
AF Hurtado, Nuria
   Ruiz, Mercedes
   Orta, Elena
   Torres, Jesus
TI Using simulation to aid decision making in managing the usability
   evaluation process
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Usability evaluation; Decision making; Simulation modelling; Systems
   dynamics; Software process improvement
ID SOFTWARE; MODEL
AB Context: This paper is developed in the context of Usability Engineering. More specifically, it focuses on the use of modelling and simulation to help decision-making in the scope of usability evaluation.
   Objective: The main goal of this paper is to present UESim: a System Dynamics simulation model to help decision-making in the make-up of the usability evaluation team during the process of usability evaluation.
   Method: To develop this research we followed four main research phases: (a) study identification, (b) study development, (c) running and observation and finally, (d) reflexion. In relation with these phases the paper describes the literature revision, the model building and validation, the model simulation and its results and finally the reflexion on it.
   Results: We developed and validated a model to simulate the usability evaluation process. Through three different simulations we analysed the effects of different compositions of the evaluation team on the outcome of the evaluation. The simulation results show the utility of the model in the decision making of the usability evaluation process by changing the number and expertise of evaluators employed.
   Conclusion: One of the main advantages of using such a simulation model is that it allows developers to observe the evolution of the key indicators of the evaluation process over time. UESim represents a customisable tool to help decision-making in the management of the usability evaluation process, since it makes it possible to analyse how the key process indicators are affected by the main management options of the Usability Evaluation Process. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Hurtado, Nuria; Ruiz, Mercedes; Orta, Elena] Univ Cadiz, Dept Comp Sci & Engn, Cadiz 11003, Spain.
   [Torres, Jesus] Univ Seville, Dept Comp Sci & Engn, E-41012 Seville, Spain.
C3 Universidad de Cadiz; University of Sevilla
RP Hurtado, N (corresponding author), Univ Cadiz, Dept Comp Sci & Engn, C Chile 1, Cadiz 11003, Spain.
EM nuria.hurtado@uca.es; mercedes.ruiz@uca.es; elena.orta@uca.es;
   jtorres@lsi.us.es
RI Ruiz, Mercedes/L-7317-2013; Torres, Jesús/F-6002-2010; Hurtado,
   Nuria/F-3069-2016; Orta, Elena/L-8448-2013
OI Ruiz, Mercedes/0000-0002-8527-4734; Torres, Jesús/0000-0002-7786-5841;
   Hurtado, Nuria/0000-0001-7910-3720; Orta, Elena/0000-0002-3398-9746
FU Spanish Ministry of Science and Technology; ERDF funds
   [TIN2010-20057-C03-03, TIN2010-20057-C03-02, TIN2013-46928-C3-2-R]
FX This work has been partially supported by the Spanish Ministry of
   Science and Technology with ERDF funds under Grants
   TIN2010-20057-C03-03, TIN2010-20057-C03-02 and TIN2013-46928-C3-2-R.
CR Abdel-Hamid T., 1984, THESIS MIT
   Abdel-Hamid T., 1991, SOFTWARE PROJECT DYN
   [Anonymous], THESIS U SO CALIFORN
   [Anonymous], 1973, WORLD DYNAMICS
   [Anonymous], BEHAV INF TECHNOL
   [Anonymous], 2005, Researching Information Systems and Computing
   Avison D, 1999, COMMUN ACM, V42, P94, DOI 10.1145/291469.291479
   Barlas Y, 1996, SYST DYNAM REV, V12, P183, DOI 10.1002/(SICI)1099-1727(199623)12:3<183::AID-SDR103>3.0.CO;2-4
   Bias R G, 2005, COST JUSTIFYING USAB
   Bin Ali N, 2012, EUROMICRO CONF PROC, P327, DOI 10.1109/SEAA.2012.69
   Biswas P., 2011, UNIVERSAL ACCESS INF, P1
   Boehm B., 1995, Annals of Software Engineering, V1, P57, DOI 10.1007/BF02249046
   Chatley R., 2003, P WORKSH BRIDG GAPS, P5
   Choi K, 2009, INFORM SOFTWARE TECH, V51, P162, DOI 10.1016/j.infsof.2008.03.001
   Collofello JS, 1996, CONFERENCE PROCEEDINGS OF THE 1996 IEEE FIFTEENTH ANNUAL INTERNATIONAL PHOENIX CONFERENCE ON COMPUTERS AND COMMUNICATIONS, P289, DOI 10.1109/PCCC.1996.493647
   Daly-Jones O., 2001, HDB USER CTR DESIGN
   Dertzbacher J., 2011, Proceedings of the 2011 Workshop-School on Theoretical Computer Science (WEIT 2011), P74, DOI 10.1109/WEIT.2011.21
   Dumas J.S., 1999, PRACTICAL GUIDE USAB
   Forrester JW, 1961, Industrial dynamics
   Forrester JW., 1980, TIMS Stud Manag Sci, V14, P209
   Garousi Vahid, 2009, Software Process: Improvement and Practice, V14, P165, DOI 10.1002/spip.411
   He Zhang, 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P3, DOI 10.1109/ICSSP.2012.6225979
   He Zhang, 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P228, DOI 10.1109/ICSSP.2012.6225974
   Hertzum M, 2003, INT J HUM-COMPUT INT, V15, P183, DOI 10.1207/S15327590IJHC1501_14
   Hertzum M., 2002, CHI 2002, P662, DOI DOI 10.1145/506443.506534
   Hsueh NL, 2008, INFORM SOFTWARE TECH, V50, P897, DOI 10.1016/j.infsof.2007.10.015
   Hurtado N., 2005, P 6 INT WORKSH SOFTW
   Hurtado N, 2009, LECT NOTES COMPUT SC, V5727, P912, DOI 10.1007/978-3-642-03658-3_109
   Hwang W, 2010, COMMUN ACM, V53, P130, DOI 10.1145/1735223.1735255
   Kamer G., 1993, THESIS LINKOPING U
   Kellner M. I., 1991, Proceedings. First International Conference on the Software Process. Manufacturing Complex Systems (Cat. No.91TH0418-4), P8, DOI 10.1109/ICSP.1991.664337
   Kellner MI, 1999, J SYST SOFTWARE, V46, P91, DOI 10.1016/S0164-1212(99)00003-5
   Kirmani S, 2008, J USABILITY STUD, V4, P49
   Kouskouras KG, 2007, EUR J OPER RES, V181, P374, DOI 10.1016/j.ejor.2006.05.031
   Law AM, 2009, WINT SIMUL C PROC, P24, DOI 10.1109/WSC.2009.5429312
   Law E., 2004, P 3 NORD C HUM COMP, P241, DOI DOI 10.1145/1028014.1028051
   Law E.L., 2004, P SIGCHI C HUMAN FAC, P9, DOI [DOI 10.1145/985692.985694, 10.1145/985692.985694]
   Law ELC, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P719
   Lindgaard Gitte., 1994, USABILITY TESTING SY
   Madachy R.J., 2008, Software Process Dynamics
   Martini I.P., 2001, PRINCIPLES GLACIAL G, P1
   MCTAGGART R, 1991, ADULT EDUC QUART, V41, P168, DOI 10.1177/0001848191041003003
   Minghui Wu, 2009, Journal of Software, V4, P1127, DOI 10.4304/jsw.4.10.1127-1135
   MOLICH R, 1990, COMMUN ACM, V33, P338, DOI 10.1145/77481.77486
   Nielsen J., 1990, SIGCHI Bulletin, P249
   NIELSEN J, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P206
   Nielsen J., 1992, CHI '92 Conference Proceedings. ACM Conference on Human Factors in Computing Systems. Striking a Balance, P373, DOI 10.1145/142750.142834
   Nielsen J., 1994, Usability inspection methods, P25, DOI [10.5555/189200.189209, DOI 10.5555/189200.189209, DOI 10.1089/TMJ.2010.0114]
   Orta E, 2009, IFIP ADV INF COMM TE, V305, P357
   Orta E, 2009, ECOWS'09: PROCEEDINGS OF THE 7TH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P109, DOI 10.1109/ECOWS.2009.20
   Araujo MAP, 2012, INT SYMP EMP SOFTWAR, P281, DOI 10.1145/2372251.2372303
   PETERSON DW, 1994, SYST DYNAM REV, V10, P159, DOI 10.1002/sdr.4260100205
   Pfahl D, 1999, J SYST SOFTWARE, V46, P135, DOI 10.1016/S0164-1212(99)00007-2
   Qudrat-Ullah H., 2005, P 19 EUR C MOD SIM R
   Raffo D., 1999, ELEMENTS SOFTWARE PR
   Richardson G., 1981, INTRO SYSTEM DYNAMIC
   Ruiz M, 2002, SOFTWARE QUAL J, V10, P181, DOI 10.1023/A:1020580008694
   Sargent RG, 2011, WINT SIMUL C PROC, P183, DOI 10.1109/WSC.2011.6147750
   Saurabh K, 2008, ICEIS 2008: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL ISAS-1, P183
   Schmettow M, 2012, COMMUN ACM, V55, P64, DOI 10.1145/2133806.2133824
   Setamanit SO, 2008, LECT NOTES COMPUT SC, V5007, P320, DOI 10.1007/978-3-540-79588-9_28
   Shtub A, 2010, WINT SIMUL C PROC, P242, DOI 10.1109/WSC.2010.5679160
   Sterman JohnD., 2000, BUSINESS DYNAMICS
   Turner CW., 2006, INT ENCY ERGONOMICS, V3, P3084, DOI DOI 10.1201/9780849375477.CH597
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
   Uzzafer M, 2013, J SYST SOFTWARE, V86, P21, DOI 10.1016/j.jss.2012.06.042
   VIRZI RA, 1992, HUM FACTORS, V34, P457, DOI 10.1177/001872089203400407
   Woolrych A, 2011, INT J HUM-COMPUT INT, V27, P940, DOI 10.1080/10447318.2011.555314
   Zhang H, 2008, LECT NOTES COMPUT SC, V5007, P345, DOI 10.1007/978-3-540-79588-9_30
   Zhang H, 2012, J SOFTW-EVOL PROC, V24, P741, DOI 10.1002/smr.516
   Zhang H, 2010, LECT NOTES COMPUT SC, V6195, P309, DOI 10.1007/978-3-642-14347-2_27
   Zhang H, 2009, IEEE AUS SOFT ENGR, P345, DOI 10.1109/ASWEC.2009.45
NR 72
TC 11
Z9 12
U1 0
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 509
EP 526
DI 10.1016/j.infsof.2014.06.001
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AU9YI
UT WOS:000345947500029
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Licorish, SA
   MacDonell, SG
AF Licorish, Sherlock A.
   MacDonell, Stephen G.
TI Understanding the attitudes, knowledge sharing behaviors and task
   performance of core developers: A longitudinal study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Core developers; Psycholinguistics; Content analysis; Attitudes;
   Knowledge sharing; Task performance
ID FREE SPEECH TECHNIQUES; SOFTWARE-DEVELOPMENT; LANGUAGE USE; VIRTUAL
   TEAMS; PERSONALITY; CONSEQUENCES; COORDINATION; LEADERSHIP; NETWORKS;
   PATTERNS
AB Context: Prior research has established that a few individuals generally dominate project communication and source code changes during software development. Moreover, this pattern has been found to exist irrespective of task assignments at project initiation.
   Objective: While this phenomenon has been noted, prior research has not sought to understand these dominant individuals. Previous work considering the effect of team structures on team performance has found that core communicators are the gatekeepers of their teams' knowledge, and the performance of these members was correlated with their teams' success. Building on this work, we have employed a longitudinal approach to study the way core developers' attitudes, knowledge sharing behaviors and task performance change over the course of their project, based on the analysis of repository data.
   Method: We first used social network analysis (SNA) and standard statistical analysis techniques to identify and select artifacts from ten different software development teams. These procedures were also used to select central practitioners among these teams. We then applied psycholinguistic analysis and directed content analysis (CA) techniques to interpret the content of these practitioners' messages. Finally, we inspected these core developers' activities as recorded in system change logs at various points in time during systems' development.
   Results: Among our findings, we observe that core developers' attitudes and knowledge sharing behaviors were linked to their involvement in actual software development and the demands of their wider project teams. However, core developers appeared to naturally possess high levels of insightful characteristics, which became evident very early during teamwork.
   Conclusions: Project performance would likely benefit from strategies aimed at surrounding core developers with other competent communicators. Core developers should also be supported by a wider team who are willing to ask questions and challenge their ideas. Finally, the availability of adequate communication channels would help with maintaining positive team climate, and this is likely to mitigate the negative effects of distance during distributed developments. (c) 2014 Elsevier B.V. All rights reserved.
C1 [Licorish, Sherlock A.; MacDonell, Stephen G.] Univ Otago, Dept Informat Sci, Dunedin 9054, New Zealand.
C3 University of Otago
RP Licorish, SA (corresponding author), Univ Otago, Dept Informat Sci, POB 56, Dunedin 9054, New Zealand.
EM sherlock.licorish@otago.ac.nz; stephen.macdonell@otago.ac.nz
RI MacDonell, Stephen G./AAI-1579-2019
OI MacDonell, Stephen G./0000-0002-2231-6941
FU AUT University
FX We thank IBM for granting us access to the Jazz repository, and the
   coders for their help in the data analysis. Thanks to the reviewers for
   their detailed and insightful comments on the early versions of this
   work, and Daniela Damian for her direction. S. Licorish carried out the
   research underpinning this paper while supported by an AUT University
   Vice-Chancellor's Doctoral Scholarship Award and a Post Submission
   Doctoral Scheme Award.
CR Abreu R, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P153
   Ahuja MK, 2003, MANAGE SCI, V49, P21, DOI 10.1287/mnsc.49.1.21.12756
   Al-Ani B, 2011, LEADERSHIP-LONDON, V7, P219, DOI 10.1177/1742715011407382
   André M, 2011, INFORM SOFTWARE TECH, V53, P259, DOI 10.1016/j.infsof.2010.11.011
   [Anonymous], 2002, MANAGEMENT TEAMS WHY
   [Anonymous], 2007, P 2014 WORKSH ECL TE, DOI 10.1145/1328279.1328284
   [Anonymous], 2007, Proceedings of the 2007 Conference of the Center for Advanced Studies on Collaborative Research, CASCON '07, DOI DOI 10.1145/1321211.1321221
   [Anonymous], 2002, Research in the Schools
   [Anonymous], 1986, HDB ORG BEHAV
   [Anonymous], 2010, P 19 INT C WORLD WID
   [Anonymous], 2013, SCH COMPUTER MATH SC
   [Anonymous], 1981, HUMAN FACTORS SOFTWA
   [Anonymous], 1969, CONTENT ANAL SOCIAL
   [Anonymous], 2013, P 17 INT C EVALUATIO
   [Anonymous], SIGSOFT 2008 FSE 16
   [Anonymous], P INT C INF SYST ICI
   [Anonymous], 1981, Review of personality and social psychology, DOI DOI 10.1037/0022-3514.59.6.1216
   [Anonymous], 2012, 3 INT WORKSHOP EMERG
   [Anonymous], 1983, Media for interactive communication
   [Anonymous], 2014, Software engineering: a practitioner's approach
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Babbie Earl R., 2012, The practice of social research
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Bales RF, 1950, AM SOCIOL REV, V15, P257, DOI 10.2307/2086790
   BAVELAS A, 1950, J ACOUST SOC AM, V22, P723
   Benne KD, 1948, J SOC ISSUES, V4, P41, DOI 10.1111/j.1540-4560.1948.tb01783.x
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   Boehm B., 2006, 28th International Conference on Software Engineering Proceedings, P12, DOI 10.1145/1134285.1134288
   Boh WF, 2007, MANAGE SCI, V53, P1315, DOI 10.1287/mnsc.1060.0687
   Borici A., 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P5, DOI 10.1109/CHASE.2012.6223024
   Brooks A., 1994, Vistas in Astronomy, V38, P377, DOI 10.1016/0083-6656(94)90011-6
   Cataldo M., 2006, P 2006 20 06 ANN C C, P353, DOI DOI 10.1145/1180875.1180929
   Cataldo M., 2012, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P3081, DOI DOI 10.1145/2207676.2208722
   Cataldo M, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P71
   Cataldo M, 2008, CSCW: 2008 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, CONFERENCE PROCEEDINGS, P579
   Chang KC, 2013, INT J PROJ MANAG, V31, P252, DOI 10.1016/j.ijproman.2012.06.005
   Costa JMR, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3151
   Crowston K., 2006, P IEEE 39 HAW INT C, DOI DOI 10.1109/HICSS.2006.101
   Cummings JN, 2003, SOC NETWORKS, V25, P197, DOI 10.1016/S0378-8733(02)00049-7
   Damian D, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P81
   Datta S., 2010, P 3 IND SOFTW ENG C, P33
   de Souza CRB, 2009, COMPUT SUPP COOP W J, V18, P445, DOI 10.1007/s10606-009-9101-3
   de Vries RE, 2006, COMMUN RES, V33, P115, DOI 10.1177/0093650205285366
   Denning PJ, 2012, COMMUN ACM, V55, P33, DOI 10.1145/2380656.2380668
   Downey J, 2009, INFORMATION SYSTEMS DEVELOPMENT: CHALLENGES IN PRACTICE, THEORY AND EDUCATION, VOLS 1AND 2, P447, DOI 10.1007/978-0-387-68772-8_34
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Ehrlich K., 2012, P ACM 2012 C COMPUTE, P945, DOI DOI 10.1145/2145204.2145345
   Espinosa J. A., 2006, Information Technology & People, V19, P345, DOI 10.1108/09593840610718036
   Espinosa JA, 2007, ORGAN SCI, V18, P613, DOI 10.1287/orsc.1070.0297
   Espinosa JA, 2007, J MANAGE INFORM SYST, V24, P135, DOI 10.2753/MIS0742-1222240104
   Frost R, 2007, IEEE SOFTWARE, V24, P114, DOI 10.1109/MS.2007.170
   Gee Woo Bock, 2002, Information Resources Management Journal, V15, P14, DOI 10.4018/irmj.2002040102
   GEEN RG, 1991, ANNU REV PSYCHOL, V42, P377, DOI 10.1146/annurev.ps.42.020191.002113
   GILES H, 1993, AM BEHAV SCI, V36, P262, DOI 10.1177/0002764293036003002
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   GRAESSER AC, 1994, AM EDUC RES J, V31, P104, DOI 10.2307/1163269
   Guetzkow H, 1955, MANAGE SCI, V1, P233, DOI 10.1287/mnsc.1.3-4.233
   Hart Roderick P., 1984, Verbal Style and the Presidency: A Computer-Based Analysis
   HATANO G, 1991, PERSPECTIVES ON SOCIALLY SHARED COGNITION, P331, DOI 10.1037/10096-014
   Henri F., 1992, Collaborative Learning Through Computer Conferencing: the Najaden Papers. Proceedings of the NATO Advanced Research Workshop, P117
   Hinds P., 2006, P 2006 20 ANN C COMP, P343
   Hinds PJ, 2003, SHARING EXPERTISE: BEYOND KNOWLEDGE MANAGEMENT, P3
   Hsieh HF, 2005, QUAL HEALTH RES, V15, P1277, DOI 10.1177/1049732305276687
   Inkpen AC, 2005, ACAD MANAGE REV, V30, P146, DOI [10.5465/AMR.2005.15281445, 10.2307/20159100]
   Jaanu T, 2012, INT SYMP EMP SOFTWAR, P231, DOI 10.1145/2372251.2372293
   Johnson R. B., 2004, ED RES, V33, P14, DOI DOI 10.3102/0013189X033007014
   Junior Methanias Colaco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P126, DOI 10.1109/MSR.2010.5463339
   Kalman ME, 2002, COMMUN RES, V29, P125, DOI 10.1177/0093650202029002002
   Kelter U, 2003, LECT NOTES COMPUT SC, V2591, P412
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   Krauss R. M., 1996, Social psychology: Handbook of basic principles
   Krebs SA, 2006, SMALL GR RES, V37, P721, DOI 10.1177/1046496406294886
   Kumar V., 2006, Introduction to Data Mining
   Larose D. T., 2005, Discovering knowledge in data
   LEAVITT HJ, 1951, J ABNORM SOC PSYCH, V46, P38, DOI 10.1037/h0057189
   Lee S, 2010, EMPIR SOFTW ENG, V15, P204, DOI 10.1007/s10664-009-9119-7
   Levin DZ, 2004, MANAGE SCI, V50, P1477, DOI 10.1287/mnsc.1030.0136
   Li Z, 2006, P 1 WORKSH ARCH SYST, P25, DOI DOI 10.1145/1181309.1181314
   Licorish S. A., 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P83, DOI 10.1109/CHASE.2012.6223029
   Licorish S, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P66, DOI 10.1109/CHASE.2009.5071413
   Licorish SA, 2013, IEEE AUS SOFT ENGR, P107
   Licorish Sherlock A., 2013, P C EV ASS SOFTW ENG, P228
   Lopez Jose., 2000, SOCIAL STRUCTURE
   Mairesse F, 2007, J ARTIF INTELL RES, V30, P457, DOI 10.1613/jair.2349
   Mehl MR, 2003, J PERS SOC PSYCHOL, V84, P857, DOI 10.1037/0022-3514.84.4.857
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Nguyen T, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P45, DOI 10.1109/ICGSE.2008.39
   OXMAN TE, 1988, AM J PSYCHIAT, V145, P464
   Pennebaker J. W., 2007, Linguistic inquiry and word count (LIWC2007)
   Pennebaker JW, 2003, ANNU REV PSYCHOL, V54, P547, DOI 10.1146/annurev.psych.54.101601.145041
   Pennebaker JW, 1997, J PERS SOC PSYCHOL, V72, P863, DOI 10.1037/0022-3514.72.4.863
   Pennebaker JW, 2002, J RES PERS, V36, P271, DOI 10.1006/jrpe.2002.2349
   Pennebaker JW, 1999, J PERS SOC PSYCHOL, V77, P1296, DOI 10.1037/0022-3514.77.6.1296
   Quigley NR, 2007, ORGAN SCI, V18, P71, DOI 10.1287/orsc.1060.0223
   Rigby P. C., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories (MSR '07), P23, DOI [10.1109/MSR.2007.35, DOI 10.1109/MSR.2007.35]
   SCHNURR PP, 1992, J PERS ASSESS, V58, P311, DOI 10.1207/s15327752jpa5802_10
   Shihab E, 2010, LECT NOTES ARTIF INT, V6284, P91
   Shihab E, 2009, PROC IEEE INT CONF S, P147, DOI 10.1109/ICSM.2009.5306333
   Singer J, 1998, PROC IEEE INT CONF S, P139, DOI 10.1109/ICSM.1998.738502
   Sowe SK, 2008, J SYST SOFTWARE, V81, P431, DOI 10.1016/j.jss.2007.03.086
   SPENCE DP, 1978, SOC SCI MED-MED SOC, V12, P141, DOI 10.1016/0271-7123(78)90042-1
   Stone LD, 2002, BASIC APPL SOC PSYCH, V24, P173, DOI 10.1207/S15324834BASP2403_1
   Szulanski G, 2000, ORGAN BEHAV HUM DEC, V82, P9, DOI 10.1006/obhd.2000.2884
   TAYLOR MA, 1994, J NERV MENT DIS, V182, P319, DOI 10.1097/00005053-199406000-00002
   Vessey I, 2002, J MANAGE INFORM SYST, V19, P129, DOI 10.1080/07421222.2002.11045721
   Wolf T, 2009, IEEE SOFTWARE, V26, P58, DOI 10.1109/MS.2009.16
   Zanetti MS, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P49, DOI 10.1109/CHASE.2013.6614731
   ZELDOW PB, 1993, J PERS ASSESS, V60, P181, DOI 10.1207/s15327752jpa6001_14
   Zhou MH, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P271, DOI 10.1145/1985793.1985831
   Zhu E., 1996, Proceedings of selected research and development presentations at the 1996 National Convention of the Association for Educational Communications and Technology, P821
   Zigurs I, 2003, ORGAN DYN, V31, P339, DOI 10.1016/S0090-2616(02)00132-8
NR 115
TC 41
Z9 43
U1 2
U2 100
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2014
VL 56
IS 12
SI SI
BP 1578
EP 1596
DI 10.1016/j.infsof.2014.02.004
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AP2LG
UT WOS:000341903100004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Prechelt, L
   Pepper, A
AF Prechelt, Lutz
   Pepper, Alexander
TI Why software repositories are not used for defect-insertion circumstance
   analysis more often: A case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mining software repositories; Version archive; Bug tracker; Root cause
   analysis; Bug; Bugfix
AB Context: Root-cause analysis is a data-driven technique for developing software process improvements in mature software organizations. The search for individual process correlates of high defect densities, which we call defect insertion circumstance analysis (DICA), is potentially both effective and cost-efficient as one approach to be used when attempting a general defect root cause analysis. In DICA, data from existing repositories (version archive, bug tracker) is evaluated largely automatically in order to determine conditions (such as the people, roles, components, or time-periods involved) that correlate with higher-than-normal defect insertion frequencies. Nevertheless, no reports of industrial use of DICA have been published.
   Objective: Determine the reasons why DICA is not used more often by practitioners.
   Method: We use a single-case, typical-case, revelatory-type case study to evaluate in parallel the importance of six plausible reasons (R1-R6). The case is based on 11 years of repository data from a small but mature software company building a product in the high-end content management system domain and describes a four person-months effort to make use of these data.
   Results: While DICA required non-negligible effort (R3) and some degree of inventiveness (R2), the most relevant roadblock was insufficient reliability of the results (R6) combined with the difficulty of assessing this reliability (R5). We identify three difficulties that led to this outcome.
   Conclusion: Current repository mining methods are too immature for successful DICA. Gradual improvements are unlikely to help; different principles of operation will be required. Even with such different techniques, issues with input data quality may continue to make good results difficult-to-have. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Prechelt, Lutz] Free Univ Berlin, Berlin, Germany.
   [Pepper, Alexander] Infopark AG, Berlin, Germany.
C3 Free University of Berlin
RP Prechelt, L (corresponding author), Free Univ Berlin, Berlin, Germany.
EM prechelt@int.fu-berlin.de; alexander.pepper@infopark.de
CR [Anonymous], 8 WORK C MIN SOFTW R
   Antoniol Giuliano, 2008, P 2008 C CTR ADV STU
   Asaduzzaman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P116, DOI 10.1109/MSR.2012.6224267
   Bhattacharya P, 2011, P 8 WORK C MIN SOFTW, P207
   Canfora G., 2011, 8 WORK C MIN SOFTW R
   CMMI Product Team, 2010, Technical Report CMU/SEI-2010-TR-033
   Cook JE, 1998, IEEE T SOFTWARE ENG, V24, P650, DOI 10.1109/32.707700
   Eyolfson J., 2011, WORKING C MINING SOF, P153, DOI DOI 10.1145/1985441.1985464
   Eyolfson J., 2013, EMPIRICAL SOFTW ENG, V19
   Giger E, 2011, P 8 WORK C MIN SOFTW, P83, DOI [10.1145/1985441.1985456, DOI 10.1145/1985441.1985456]
   Graves T.L., 1988, P 5 INT S SOFTW METR, P267
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Haley TJ, 1996, IEEE SOFTWARE, V13, P33, DOI 10.1109/52.542292
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Prechelt Lutz, 2014, INT SCHOLAR RES NOT, V2014, DOI [10.1155/2014/701357, DOI 10.1155/2014/701357]
   Robles G., 2004, "Second International Workshop on Remote Analysis and Measurement of Software Systems (RAMSS 04)" - W15S Workshop - 26th International Conference on Software Engineering, P51, DOI 10.1049/ic:20040351
   Rotella P., 2011, 8 WORK C MIN SOFTW R
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
   Sinha VibhaSinghal., 2010, Proc. of 3rd India Software Engineering Conf, P3
   Sliwerski J., 2005, ACM SIGSOFT SOFTW EN, V30
   Wang X.O., 2011, 8 WORK C MIN SOFTW R
   Whitehead, 2011, P 8 WORK C MIN SOFTW, P219, DOI [10.1145/1985441.1985475, DOI 10.1145/1985441.1985475]
   Williams C, 2008, P 2008 WORKSHOP DEFE, P32
   Yin R.K., 2011, Qualitative research from start to finish
   Zaman S., 2011, 8 WORK C MIN SOFTW R
   Zeltyn S., 2011, 8 WORK C MIN SOFTW R
NR 30
TC 19
Z9 19
U1 0
U2 10
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2014
VL 56
IS 10
BP 1377
EP 1389
DI 10.1016/j.infsof.2014.05.001
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AN8JO
UT WOS:000340850700013
DA 2024-07-18
ER

PT J
AU Febrero, F
   Calero, C
   Moraga, MA
AF Febrero, Felipe
   Calero, Coral
   Angeles Moraga, Ma
TI A Systematic Mapping Study of Software Reliability Modeling
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software Reliability; Modeling; Systematic Mapping; Taxonomy
AB Context: Software Reliability (SR) is a highly active and dynamic research area. Published papers have approached this topic from various and heterogeneous points of view, resulting in a rich body of literature on this topic. The counterpart to this is the considerable complexity of this body of knowledge.
   Objective: The objective of this study is to obtain a panorama and a taxonomy of Software Reliability Modeling (SRM).
   Method: In order to do this, a Systematic Mapping Study (SMS) which analyzes and structures the literature on Software Reliability Modeling has been carried out.
   Results: A total of 972 works were obtained as a result of the Systematic Mapping Study. On the basis of the more than 500 selected primary studies found, the results obtained show an increasing diversity of work.
   Conclusion: Although it was discovered that Software Reliability Growth Models (SRGM) are still the most common modeling technique, it was also found that both the modeling based on static and architectural characteristics and the models based on Artificial Intelligence and automatic learning techniques are increasingly more apparent in literature. We have also observed that most Software Reliability Modeling efforts take place in the Pacific Rim area and in academic environments. Industrial initiatives are as yet marginal, and would appear to be primarily located in the USA. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Febrero, Felipe; Calero, Coral; Angeles Moraga, Ma] Univ Castilla La Mancha, Inst Tecnol & Sistemas Informac, E-13071 Ciudad Real, Spain.
C3 Universidad de Castilla-La Mancha
RP Moraga, MA (corresponding author), Univ Castilla La Mancha, Inst Tecnol & Sistemas Informac, Paseo Univ 4, E-13071 Ciudad Real, Spain.
EM ffebrero@eutelsat.fr; Coral.Calero@uclm.es; MariaAngeles.Moraga@uclm.es
RI Moraga/G-2615-2015; Calero, Coral/D-4319-2011
OI Moraga/0000-0001-9165-7144; Febrero Hidalgo, Felipe/0000-0002-1882-4353;
   Calero, Coral/0000-0003-0728-4176
FU GEO-DAS-BC project (Ministerio de Economia y Competitividad and
   FondoEuropeo de Desarrollo Regional FEDER) [TIN2012-37493C03-01]
FX This research has been funded by the following projects: GEO-DAS-BC
   project (Ministerio de Economia y Competitividad and FondoEuropeo de
   Desarrollo Regional FEDER, TIN2012-37493C03-01).
CR Afzal W., 2008, P 20 INT C SOFTW ENG, P1
   [Anonymous], EGG2663 ID NAT ENG L
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], 25000 ISOIEC
   [Anonymous], 2008, 1633 IEEE STD
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Chu T.L., 2010, N6725 JCN BROOKH NAT
   Condori-Fernandez N, 2009, INT SYMP EMP SOFTWAR, P503
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Everett W, 1998, IEEE T RELIAB, V47, P372
   ISO/IEC, 2010, Technical report
   Karanta I., 2006, VTT WORKING PAPERS
   Kitchenham B., 2007, Joint Report
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   LITTLEWOOD B, 1980, IEEE T SOFTWARE ENG, V6, P489, DOI 10.1109/TSE.1980.230790
   LITTLEWOOD B, 2000, FUTURE SOFTWARE ENG, P177
   Lyu M.R., 1996, Handbook of Software Reliability Engineering, P71
   Lyu MR, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P153, DOI 10.1109/FOSE.2007.24
   Musa J. D, 1982, P EL SYST EFF LIF CY, P395
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   RAMAMOORTHY CV, 1982, IEEE T SOFTWARE ENG, V8, P354, DOI 10.1109/TSE.1982.235728
   SCHICK GJ, 1978, IEEE T SOFTWARE ENG, V4, P104, DOI 10.1109/TSE.1978.231481
   YAMADA S, 1985, IEEE T SOFTWARE ENG, V11, P1431, DOI 10.1109/TSE.1985.232179
NR 25
TC 29
Z9 33
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2014
VL 56
IS 8
BP 839
EP 849
DI 10.1016/j.infsof.2014.03.006
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AI9OL
UT WOS:000337261800002
DA 2024-07-18
ER

PT J
AU Tofan, D
   Galster, M
   Avgeriou, P
   Schuitema, W
AF Tofan, Dan
   Galster, Matthias
   Avgeriou, Paris
   Schuitema, Wes
TI Past and future of software architectural decisions - A systematic
   mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architecture; Architectural decisions; Systematic mapping study
ID DESIGN
AB Context: The software architecture of a system is the result of a set of architectural decisions. The topic of architectural decisions in software engineering has received significant attention in recent years. However, no systematic overview exists on the state of research on architectural decisions.
   Objective: The goal of this study is to provide a systematic overview of the state of research on architectural decisions. Such an overview helps researchers reflect on previous research and plan future research. Furthermore, such an overview helps practitioners understand the state of research, and how research results can help practitioners in their architectural decision-making.
   Method: We conducted a systematic mapping study, covering studies published between January 2002 and January 2012. We defined six research questions. We queried six reference databases and obtained an initial result set of 28,895 papers. We followed a search and filtering process that resulted in 144 relevant papers.
   Results: After classifying the 144 relevant papers for each research question, we found that current research focuses on documenting architectural decisions. We found that only several studies describe architectural decisions from the industry. We identified potential future research topics: domain-specific architectural decisions (such as mobile), achieving specific quality attributes (such as reliability or scalability), uncertainty in decision-making, and group architectural decisions. Regarding empirical evaluations of the papers, around half of the papers use systematic empirical evaluation approaches (such as surveys, or case studies). Still, few papers on architectural decisions use experiments.
   Conclusion: Our study confirms the increasing interest in the topic of architectural decisions. This study helps the community reflect on the past ten years of research on architectural decisions. Researchers are offered a number of promising future research directions, while practitioners learn what existing papers offer. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Tofan, Dan; Avgeriou, Paris; Schuitema, Wes] Univ Groningen, Dept Math & Comp Sci, NL-9747 AG Groningen, Netherlands.
   [Galster, Matthias] Univ Canterbury, Dept Comp Sci & Software Engn, Christchurch 8140, New Zealand.
C3 University of Groningen; University of Canterbury
RP Tofan, D (corresponding author), Univ Groningen, Dept Math & Comp Sci, Nijenborgh 9, NL-9747 AG Groningen, Netherlands.
EM d.c.tofan@rug.nl
OI Avgeriou, Paris/0000-0002-7101-0754; Tofan, Dan/0000-0001-9376-4576
CR Ameller David, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P200, DOI 10.1007/978-3-642-39031-9_18
   Bailey John, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P482
   Bosch J, 2004, LECT NOTES COMPUT SC, V3047, P194
   Brereton Pearl., 2008, Proceedings of the 12th International Conference on Evaluation and Assessment in Software Engineering, P41
   Brown A., 2012, The Architecture of Open Source Applications
   Bu WF, 2009, 2009 ICSE WORKSHOP ON SHARING AND REUSING ARCHITECTURAL KNOWLEDGE, P33, DOI 10.1109/SHARK.2009.5069113
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Ciolkowski M, 2003, LECT NOTES COMPUT SC, V2765, P104
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   de Boer R. C., 2008, 3 WORKSH SHAR REUS A, P71
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   EBSE-RG, TEMPL MAPP STUD PROT
   Eisenfuhr F, 2010, RATIONAL DECISION MAKING, P1, DOI 10.1007/978-3-642-02851-9
   Elberzhager F, 2012, INFORM SOFTWARE TECH, V54, P1092, DOI 10.1016/j.infsof.2012.04.007
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Falessi D, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978812
   Host Martin, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P479
   Janis I.L., 1989, CRUCIAL DECISIONS
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Kazman R, 2001, PROC INT CONF SOFTW, P297, DOI 10.1109/ICSE.2001.919103
   Kitchenham B., 2003, ACM SIGSOFT SOFTW EN, V28, P24, DOI DOI 10.1145/638750.638758
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Kitchenham BA, 2010, EMPIR SOFTW ENG, V15, P618, DOI 10.1007/s10664-010-9134-8
   Kruchten P., 2004, GRON WORKSH SOFTW VA, P54
   Kruchten P, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P291
   Li ZY, 2013, INFORM SOFTWARE TECH, V55, P777, DOI 10.1016/j.infsof.2012.11.005
   Miller S, 1997, ORGAN STUD, V18, P577, DOI 10.1177/017084069701800402
   Newell B.R., 2007, Straight choices: The psychology of decision making
   Nutt P.C., 2010, Handbook of decision making
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Peterson M., 2009, An Introduction to Decision Theory
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Poort Eltjo R., 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P37, DOI 10.1007/978-3-642-28714-5_4
   SCHWEIGER DM, 1986, ACAD MANAGE J, V29, P51, DOI 10.5465/255859
   Shahin M, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P293, DOI 10.1109/WICSA.2009.5290823
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Tang A, 2010, J SYST SOFTWARE, V83, P352, DOI 10.1016/j.jss.2009.08.032
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Tofan Dan, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P192, DOI 10.1007/978-3-642-39031-9_17
   Tofan D, 2011, LECT NOTES COMPUT SC, V6903, P244, DOI 10.1007/978-3-642-23798-0_27
   Tofan D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P916, DOI 10.1145/1985793.1985944
   Venkatesh V, 2000, MANAGE SCI, V46, P186, DOI 10.1287/mnsc.46.2.186.11926
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yin R.K., 2011, Qualitative research from start to finish
   Zeckhauser R., 1996, Wise Choices: Decisions, Games, and Negotiations"
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zimmermann O, 2011, IEEE SOFTWARE, V28, P64, DOI 10.1109/MS.2011.3
NR 49
TC 51
Z9 51
U1 1
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2014
VL 56
IS 8
BP 850
EP 872
DI 10.1016/j.infsof.2014.03.009
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AI9OL
UT WOS:000337261800003
DA 2024-07-18
ER

PT J
AU Cedergren, S
   Larsson, S
AF Cedergren, Stefan
   Larsson, Stig
TI Evaluating performance in the development of software-intensive products
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Performance measurements; Performance management; Efficiency;
   Effectiveness; Software-intensive products
ID RESEARCH-AND-DEVELOPMENT; MEASUREMENT SYSTEM-DESIGN; BALANCED SCORECARD;
   INNOVATION; NPD; BENCHMARKING; STRATEGY
AB Context: Organizational performance measurements in software product development have received a lot of attention in the literature. Still, there is a general discontent regarding the way performance is evaluated in practice, with few studies really focusing on why this is the case. In this paper research focusing on the context of developing software-intensive products in large established multi-national organizations is reported on.
   Objective: The purpose of this research is to investigate performance measurement practices related to software product development activities. More specifically, focus is on exploring how managers engaged in software product development activities perceive and evaluate performance in large organizations from a managerial perspective.
   Method: The research approach pursued in this research consist of exploratory multiple case studies. Data is collected mainly through 54 interviews in five case studies in large international organizations developing software-intensive products in Sweden. Focused group interviews with senior managers from eight companies have also been used in the data collection.
   Results: The results of this research indicate that managers within software product development in general are dissatisfied with their current way of evaluating performance. Performance measurements and the perception of performance are today focused on cost, time, and quality, i.e. what is easily measurable and not necessarily what is important. The dimensions of value creation and learning are missing. Moreover, measurements tend to be result oriented, rather than process oriented, making it difficult to integrate these measurements in the management practices.
   Conclusion: Managers that are dissatisfied with their performance measurement system and want to improve the current situation should not start by focusing on the current measurements directly; instead they should focus on how the organization perceives performance and how important performance criteria are being developed. By developing relevant performance criteria the first step in developing an effective performance measurement system is made. Moreover, it is concluded that manager's perception of performance is affected by the currently used measurements, hence limiting the scope of the performance criteria. Thus, a change in the way managers perceive performance is necessary before there can be any changes in the way performance is evaluated. (C) 2014 Published by Elsevier B.V.
C1 [Cedergren, Stefan; Larsson, Stig] Malardalen Univ, Sch Innovat Design & Engn, SE-72123 Vasteras, Sweden.
C3 Malardalen University
RP Cedergren, S (corresponding author), Malardalen Univ, Sch Innovat Design & Engn, POB 883, SE-72123 Vasteras, Sweden.
EM stefan.cedergren@mdh.se; stig.larsson@mdh.se
OI Larsson, Stig/0000-0002-0921-0878
CR Adams R, 2006, INT J MANAG REV, V8, P21, DOI 10.1111/j.1468-2370.2006.00119.x
   [Anonymous], NEW PERFORMANCE CHAL
   [Anonymous], FOSER
   [Anonymous], INNOVATION BUSINESS
   [Anonymous], 2004, GUID PROJ MAN BOD KN
   [Anonymous], OFFICE SOLUTIONS
   [Anonymous], SCH INNOVATION DESIG
   [Anonymous], C INT INV INN ING SO
   [Anonymous], INNOVATION DESIGN EN
   [Anonymous], PICMET 2010 TECHNOLO
   [Anonymous], HDB NEW PRODUCT DEV
   [Anonymous], MEASURING INNOVATION
   Barczak G, 2012, BUS HORIZONS, V55, P293, DOI 10.1016/j.bushor.2012.01.006
   Basili Victor, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P488
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Basili VR, 2010, COMPUTER, V43, P57, DOI 10.1109/MC.2010.108
   Benediktsson O, 2006, IEE P-SOFTW, V153, P87, DOI 10.1049/ip-sen:20050061
   Bourne M, 2000, INT J OPER PROD MAN, V20, P754, DOI 10.1108/01443570010330739
   Bremser WG, 2004, R&D MANAGE, V34, P229, DOI 10.1111/j.1467-9310.2004.00335.x
   Browning TR, 2000, EMS - 2000: PROCEEDINGS OF THE 2000 IEEE ENGINEERING MANAGEMENT SOCIETY, P168, DOI 10.1109/EMS.2000.872495
   Camm E. H., 2009, 2009 IEEE POW EN SOC, P1, DOI [10.1109/pes.2009.5275322, 10.1109/PES.2009.5275322, DOI 10.1109/PES.2009.5275322]
   Castro Oscar, 2012, Product-Focused Software Process Improvement. Proceedings 13th International Conference (PROFES 2012), P74, DOI 10.1007/978-3-642-31063-8_7
   Chapman C.B., 1997, PROJECT RISK MANAGEM
   Chiesa V, 2009, R&D MANAGE, V39, P488, DOI 10.1111/j.1467-9310.2009.00554.x
   COLQUHOUN GJ, 1993, INT J COMP INTEG M, V6, P252, DOI 10.1080/09511929308944576
   Cooper RG, 2004, RES TECHNOL MANAGE, V47, P43, DOI 10.1080/08956308.2004.11671662
   Cooper RG, 2004, RES TECHNOL MANAGE, V47, P50, DOI 10.1080/08956308.2004.11671630
   Cooper RG, 2008, RES TECHNOL MANAGE, V51, P47
   Driva H., 2001, Integrated Manufacturing Systems, V12, P368, DOI 10.1108/EUM0000000005714
   Ebert C., 2007, Software measurement: establish, extract, evaluate, execute
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Ermolayev V, 2007, LECT NOTES ARTIF INT, V4659, P387
   Gharajedaghi J., 2006, SYSTEMS THINKING MAN, V2nd
   Godener A, 2004, R&D MANAGE, V34, P191, DOI 10.1111/j.1467-9310.2004.00333.x
   Gopal A, 2002, IEEE T SOFTWARE ENG, V28, P863, DOI 10.1109/TSE.2002.1033226
   Handfield RB, 1998, J OPER MANAG, V16, P321, DOI 10.1016/S0272-6963(98)00017-5
   Hart C., 1998, Doing a literature review
   Hauser J., 1998, European Management Journal, V16, P516
   Hobday M, 1998, RES POLICY, V26, P689, DOI 10.1016/S0048-7333(97)00044-9
   Hong P, 2004, INT J OPER PROD MAN, V24, P1269, DOI 10.1108/01443570410569047
   Jägle AJ, 1999, R&D MANAGE, V29, P271, DOI 10.1111/1467-9310.00136
   KAPLAN RS, 1992, HARVARD BUS REV, V70, P71
   Kerssens-van Drogelen I., 2000, INT J MANAG REV, V2, P111
   Koller T., 2005, Measuring and Managing the Value of Companies
   Loch CH, 2002, J PROD INNOVAT MANAG, V19, P185, DOI 10.1111/1540-5885.1930185
   Lynch R., 1991, MEASURE UP
   Mallick DN, 2005, PROD OPER MANAG, V14, P142, DOI 10.1111/j.1937-5956.2005.tb00015.x
   Mashiko Y, 1997, J SYST SOFTWARE, V36, P17, DOI 10.1016/0164-1212(95)00194-8
   MATSON JE, 1994, IEEE T SOFTWARE ENG, V20, P275, DOI 10.1109/32.277575
   Meredith J, 1998, J OPER MANAG, V16, P441, DOI 10.1016/S0272-6963(98)00023-0
   Neely A, 2000, INT J OPER PROD MAN, V20, P1119, DOI 10.1108/01443570010343708
   Neely A, 2005, INT J OPER PROD MAN, V25, P1228, DOI 10.1108/01443570510633639
   Neely A, 2005, INT J OPER PROD MAN, V25, P1264, DOI 10.1108/01443570510633648
   Neely A, 2007, BUSINESS PERFORMANCE MEASUREMENT: UNIFYING THEORIES AND INTEGRATING PRACTICE, 2ND EDITION, P1, DOI 10.1017/CBO9780511488481
   Neely A, 2006, CALIF MANAGE REV, V48, P101, DOI 10.2307/41166352
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Neufeld G, 2001, RES TECHNOL MANAGE, V44, P42
   Nixon B, 1997, R&D MANAGE, V27, P87, DOI 10.1111/1467-9310.00044
   O'Donnell FJ, 2002, INT J OPER PROD MAN, V22, P1198, DOI 10.1108/01443570210450301
   Paranjape B, 2006, MEAS BUS EXCELL, V10, P4, DOI 10.1108/13683040610685748
   Patton M. Q., 2002, QUALITATIVE RES EVAL, V3rd
   Petersen K, 2011, INFORM SOFTWARE TECH, V53, P317, DOI 10.1016/j.infsof.2010.12.001
   Robson C., 2002, Real world research
   Roth GL, 1996, J ORGAN CHANGE MANAG, V9, P92, DOI 10.1108/09534819610107349
   Rubenstein AH, 2004, IEEE T ENG MANAGE, V51, P407, DOI 10.1109/TEM.2004.836366
   Schwaber K., 1997, BUSINESS OBJECT DESI, DOI [10.1007/978-1-4471-0947-1_11, DOI 10.1007/978-1-4471-0947-1_11]
   Sink D.S., 1989, Planning and Measurement in Your Organization of the Future
   Slack N., 2007, Operations Management, V5th
   Stainer A, 1997, INT J TECHNOL MANAGE, V13, P486, DOI 10.1504/IJTM.1997.001691
   SZAKONYI R, 1994, RES TECHNOL MANAGE, V37, P27, DOI 10.1080/08956308.1994.11670966
   Tahir T., 2011, Proceedings of the 2011 Frontiers of Information Technology (FIT 2011), P39, DOI 10.1109/FIT.2011.15
   Ulrich K.T., 2008, Product Design and Development, V4th
   Yin R.K., 2011, Qualitative research from start to finish
NR 73
TC 5
Z9 5
U1 0
U2 26
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2014
VL 56
IS 5
BP 516
EP 526
DI 10.1016/j.infsof.2013.11.006
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AG6RB
UT WOS:000335545000006
DA 2024-07-18
ER

PT J
AU Aceituna, D
   Walia, G
   Do, H
   Lee, SW
AF Aceituna, Daniel
   Walia, Gursimran
   Do, Hyunsook
   Lee, Seok-Won
TI Model-based requirements verification method: Conclusions from two
   controlled experiments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements verification; Model-based verification; NLtoSTD; Fault
   checklist; Controlled experiments
AB Context: Requirements engineering is one of the most important and critical phases in the software development life cycle, and should be carefully performed to build high quality and reliable software. However, requirements are typically gathered through various sources and are represented in natural language (NL), making requirements engineering a difficult, fault prone, and a challenging task.
   Objective: To ensure high-quality software, we need effective requirements verification methods that can clearly handle and address inherently ambiguous nature of NL specifications. The objective of this paper is to propose a method that can address the challenges with NL requirements verification and to evaluate our proposed method through controlled experiments.
   Method: We propose a model-based requirements verification method, called NLtoSTD, which transforms NL requirements into a State Transition Diagram (STD) that can help to detect and to eliminate ambiguities and incompleteness. The paper describes the NLtoSTD method to detect requirement faults, thereby improving the quality of the requirements. To evaluate the NLtoSTD method, we conducted two controlled experiments at North Dakota State University in which the participants employed the NLtoSTD method and a traditional fault checklist during the inspection of requirement documents to identify the ambiguities and incompleteness of the requirements.
   Results: Two experiment results show that the NLtoSTD method can be more effective in exposing the missing functionality and, in some cases, more ambiguous information than the fault-checklist method. Our experiments also revealed areas of improvement that benefit the method's applicability in the future.
   Conclusion: We presented a new approach, NLtoSTD, to verify requirements documents and two controlled experiments assessing our approach. The results are promising and have motivated the refinement of the NLtoSTD method and future empirical evaluation. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Aceituna, Daniel; Walia, Gursimran; Do, Hyunsook] N Dakota State Univ, Dept Comp Sci, Fargo, ND 58108 USA.
   [Lee, Seok-Won] Ajou Univ, Dept Software Convergence Technol, Suwon 443749, Gyeonggi Do, South Korea.
C3 North Dakota State University Fargo; Ajou University
RP Lee, SW (corresponding author), Ajou Univ, Dept Software Convergence Technol, San 5 Woncheon Dong, Suwon 443749, Gyeonggi Do, South Korea.
EM daniel.aceituna@ndsu.edu; gursimran.walia@nd-su.edu;
   hyunsook.do@ndsu.edu; leesw@ajou.ac.kr
FU NSF [CNS-0855106, CCF-1050343, CCF-1149389]; Next-Generation Information
   Computing Development Program through the National Research Foundation
   of Korea (NRF); Ministry of Science, ICT & Future Planning
   [2013M3C4A7056233]; Direct For Computer & Info Scie & Enginr; Division
   of Computing and Communication Foundations [1149389] Funding Source:
   National Science Foundation
FX This work was supported, in part, by NSF Awards CNS-0855106 and
   CCF-1050343 as well as NSF CAREER Award CCF-1149389 to North Dakota
   State University. This work was supported by Next-Generation Information
   Computing Development Program through the National Research Foundation
   of Korea (NRF) funded by the Ministry of Science, ICT & Future Planning
   (2013M3C4A7056233) to Ajou University.
CR Aceituna D., 2011, 2011 First International Workshop on Empirical Requirements Engineering, P13, DOI 10.1109/EmpiRE.2011.6046248
   Aceituna D., 2010, INT S SOFTW REL ENG
   Alur R, 2005, RTAS 2005: 11TH IEEE REAL TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P508
   Alur R., 1990, Proceedings. Fifth Annual IEEE Symposium on Logic in Computer Science (90CH2897-7), P414, DOI 10.1109/LICS.1990.113766
   Alur Rajeev., 2003, TSE, V31, P304
   [Anonymous], 2006, Proceedings of the 14th ACM SIGSOFT international symposium on Foundations of software engineering, SIGSOFT '06/FSE-14
   Berry D., 2004, Perspectives on Software Requirements
   Berry DanielM., 2008, Innovations for Requirement Analysis. From Stakeholders' Needs to Formal Designs, P1, DOI DOI 10.1007/978-3-540-89778-1_1
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Boehm BW., 1981, Software Engineering Economics
   Brykczynski B., 1999, Software Engineering Notes, V24, P82, DOI 10.1145/308769.308798
   Carver J., 2006, IEEE T SOFTWARE ENG, V34, P800
   Cause D., 2000, P 4 INT C REQ ENG
   Chaar J., IEEE T SOFTWARE ENG, V19
   Chantree F, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P59
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Cortés LA, 2000, PROC INT SYMP SYST, P149, DOI 10.1109/ISSS.2000.874042
   Damas C, 2005, IEEE T SOFTWARE ENG, V31, P1056, DOI 10.1109/TSE.2005.138
   Deeptimahanti DK, 2009, IEEE INT CONF AUTOM, P680, DOI 10.1109/ASE.2009.48
   FAGAN ME, 1986, IEEE T SOFTWARE ENG, V12, P744, DOI 10.1109/TSE.1986.6312976
   Franch X, 2011, INT REQUIR ENG CONF, P133, DOI 10.1109/RE.2011.6051642
   Heitmeyer C. L., 1996, ACM Transactions on Software Engineering and Methodology, V5, P231, DOI 10.1145/234426.234431
   Innab N., 2012, 2012 IEEE International Conference on Information Science and Technology, P485, DOI 10.1109/ICIST.2012.6221694
   Kof L, 2007, INT REQUIR ENG CONF, P121, DOI 10.1109/RE.2007.38
   Kof L, 2010, IEEE INT C SEMANT CO, P46, DOI 10.1109/ICSC.2010.95
   Leszak M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P428, DOI 10.1109/ICSE.2000.870433
   Letier E, 2005, PROC INT CONF SOFTW, P382
   Letier E., 2013, INT C SOFTW ENG MAY, P592
   Lin WY, 2012, PROC CVPR IEEE, P1, DOI 10.1109/CVPR.2012.6247651
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Popescu Daniel, 2007, Innovations for Requirements Analysis. From Stakeholders' Needs to Formal Designs.14th Monterey Workshop 2007. Revised Selected Papers, P103
   Porter A. A., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P103, DOI 10.1109/ICSE.1994.296770
   PORTER AA, 1995, IEEE T SOFTWARE ENG, V21, P563, DOI 10.1109/32.391380
   Sakthivel S., 1991, ACM Transactions on Software Engineering and Method, P68
   Schneider G.M., 1992, ACM T SOFTW ENG METH, V1, P563
   Sutcliffe AG, 1998, IEEE T SOFTWARE ENG, V24, P1072, DOI 10.1109/32.738340
   Sutcliffe AG, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P164, DOI 10.1109/ICRE.1998.667822
   Uchitel S., 2005, REQUIREMENTS ENG J S, V11, P23
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 39
TC 15
Z9 17
U1 0
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2014
VL 56
IS 3
BP 321
EP 334
DI 10.1016/j.infsof.2013.11.004
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA8NU
UT WOS:000331353000004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Shihab, E
   Kamei, Y
   Adams, B
   Hassan, AE
AF Shihab, Emad
   Kamei, Yasutaka
   Adams, Bram
   Hassan, Ahmed E.
TI Is lines of code a good measure of effort in effort-aware models?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Effort-aware prediction; Prediction models; Defect prediction
ID SOFTWARE; METRICS; VALIDATION; COMPLEXITY
AB Context: Effort-aware models, e.g., effort-aware bug prediction models aim to help practitioners identify and prioritize buggy software locations according to the effort involved with fixing the bugs. Since the effort of current bugs is not yet known and the effort of past bugs is typically not explicitly recorded, effort-aware bug prediction models are forced to use approximations, such as the number of lines of code (LOC) of the predicted files.
   Objective: Although the choice of these approximations is critical for the performance of the prediction models, there is no empirical evidence on whether LOC is actually a good approximation. Therefore, in this paper, we investigate the question: is LOC a good measure of effort for use in effort-aware models?
   Method: We perform an empirical study on four open source projects, for which we obtain explicitly-recorded effort data, and compare the use of LOC to various complexity, size and churn metrics as measures of effort.
   Results: We find that using a combination of complexity, size and churn metrics are a better measure of effort than using LOC alone. Furthermore, we examine the impact of our findings on previous effort-aware bug prediction work and find that using LOC as a measure for effort does not significantly affect the list of files being flagged, however, using LOC under-estimates the amount of effort required compared to our best effort predictor by approximately 66%.
   Conclusion: Studies using effort-aware models should not assume that LOC is a good measure of effort. For the case of effort-aware bug prediction, using LOC provides results that are similar to combining complexity, churn, size and LOC as a proxy for effort when prioritizing the most risky files. However, we find that for the purpose of effort-estimation, using LOC may under-estimate the amount of effort required. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Shihab, Emad] Rochester Inst Technol, Dept Software Engn, Rochester, NY 14623 USA.
   [Kamei, Yasutaka] Kyushu Univ, Grad Sch, Fukuoka 812, Japan.
   [Kamei, Yasutaka] Kyushu Univ, Fac Informat Sci & Elect Engn, Fukuoka 812, Japan.
   [Adams, Bram] Ecole Polytech Montreal, Lab Maintenance Construct & Intelligence Software, Montreal, PQ, Canada.
   [Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab, Kingston, ON, Canada.
C3 Rochester Institute of Technology; Kyushu University; Kyushu University;
   Universite de Montreal; Polytechnique Montreal; Queens University -
   Canada
RP Shihab, E (corresponding author), Rochester Inst Technol, Dept Software Engn, Rochester, NY 14623 USA.
EM emad.shihab@rit.edu; kamei@ailkyushu-u.ac.jp; bram.adams@polymtl.ca;
   ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan, Ahmed/AAB-7241-2019; Ali,
   Ahmed/HOF-4672-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Adams,
   Bram/0000-0001-7213-4006
CR Ahsan Syed Nadeem, 2009, Proceedings 21st International Conference on Software Engineering & Knowledge Engineering (SEKE 2009), P129
   [Anonymous], 1976, ICSE 76
   [Anonymous], MSRTR2010140
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Auer M, 2006, IEEE T SOFTWARE ENG, V32, P83, DOI 10.1109/TSE.2006.1599418
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Boehm BW., 1981, Software Engineering Economics
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Chidamber S.R., 1934, IEEE T SOFTWARE ENG, V20, P476
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Godfrey MW, 2009, IEEE SOFTWARE, V26, P67, DOI 10.1109/MS.2009.10
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Hewett R, 2009, EMPIR SOFTW ENG, V14, P165, DOI 10.1007/s10664-008-9064-x
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Khoshgoftaar TM, 1999, INT J SOFTW ENG KNOW, V9, P547, DOI 10.1142/S0218194099000309
   Mende T., 2009, P INT C PRED MOD SOF
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P409, DOI 10.1007/s10515-010-0070-z
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Scientific Toolworks Inc., UND 2 6
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M., 2000, Empirical Software Engineering, V5, P175, DOI 10.1023/A:1026582314146
   Shihab E., 2010, Proceedings of the ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, P1
   Shin Y, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P61, DOI 10.1109/MSR.2009.5069481
   Song QB, 2006, IEEE T SOFTWARE ENG, V32, P69, DOI 10.1109/TSE.2006.1599417
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Zimmermann Thomas., 2007, PROMISE '07: Proceedings of the Third International Workshop on Predictor Models in Software Engineering, P1
NR 37
TC 31
Z9 37
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2013
VL 55
IS 11
BP 1981
EP 1993
DI 10.1016/j.infsof.2013.06.002
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 231BH
UT WOS:000325387500008
DA 2024-07-18
ER

PT J
AU Ryan, S
   O'Connor, RV
AF Ryan, Sharon
   O'Connor, Rory V.
TI Acquiring and sharing tacit knowledge in software development teams: An
   empirical study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Tacit knowledge; Transactive memory; Social interaction; Agile teams;
   Team performance
ID TRANSACTIVE MEMORY; SUBJECTIVE MEASURES; COMMUNICATION; PERFORMANCE;
   COORDINATION; SYSTEMS; ORGANIZATIONS; IMPROVEMENT; EXPERTISE; STRENGTH
AB Context: Sharing expert knowledge is a key process in developing software products. Since expert knowledge is mostly tacit, the acquisition and sharing of tacit knowledge along with the development of a transactive memory system (TMS) are significant factors in effective software teams.
   Objective: We seek to enhance our understanding human factors in the software development process and provide support for the agile approach, particularly in its advocacy of social interaction, by answering two questions: How do software development teams acquire and share tacit knowledge? What roles do tacit knowledge and transactive memory play in successful team performance?
   Method: A theoretical model describing the process for acquiring and sharing tacit knowledge and development of a TMS through social interaction is presented and a second predictive model addresses the two research questions above. The elements of the predictive model and other demographic variables were incorporated into a larger online survey for software development teams, completed by 46 software SMEs, consisting of 181 individual team members.
   Results: Our results show that team tacit knowledge is acquired and shared directly through good quality social interactions and through the development of a TMS with quality of social interaction playing a greater role than transactive memory. Both TMS and team tacit knowledge predict effectiveness but not efficiency in software teams.
   Conclusion: It is concluded that TMS and team tacit knowledge can differentiate between low- and high-performing teams in terms of effectiveness, where more effective teams have a competitive advantage in developing new products and bringing them to market. As face-to-face social interaction is key, collocated, functionally rich, domain expert teams are advocated rather than distributed teams, though arguably the team manager may be in a separate geographic location provided that there is frequent communication and effective use of issue tracking tools as in agile teams. (c) 2013 Elsevier B.V. All rights reserved.
C1 [O'Connor, Rory V.] Dublin City Univ, Sch Comp, Dublin 9, Ireland.
C3 Dublin City University
RP O'Connor, RV (corresponding author), Dublin City Univ, Sch Comp, Dublin 9, Ireland.
EM sryan@repgraph.co.uk; roconnor@computing.dcu.ie
RI 张, 海心/C-6087-2014
OI O'Connor, Rory/0000-0001-9253-0313
CR Abrahamsson P, 2009, EUR J INFORM SYST, V18, P281, DOI 10.1057/ejis.2009.27
   Ågerfalk PJ, 2009, INFORM SYST RES, V20, P317, DOI 10.1287/isre.1090.0244
   Akgün AE, 2005, INFORM MANAGE-AMSTER, V42, P1105, DOI 10.1016/j.im.2005.01.001
   ANCONA DG, 1992, ADMIN SCI QUART, V37, P634, DOI 10.2307/2393475
   [Anonymous], AG DEV C 22 26 JUN S
   [Anonymous], P IEEE INT WORKSH EN
   [Anonymous], C RES PRACT INF TECH
   [Anonymous], PHILOS ORG THEORY RE
   [Anonymous], ITI 3 INT C INF COMM
   [Anonymous], AG DEV C 22 26 JUN S
   [Anonymous], P INT S MAN IND CO A
   Barker R.T., 1998, J BUS COMMUN, V35, P443
   Berger, 1967, The Social Construction of Reality
   Berman SL, 2002, ACAD MANAGE J, V45, P13, DOI 10.5465/3069282
   Boehm BW., 1981, Software Engineering Economics
   BOMMER WH, 1995, PERS PSYCHOL, V48, P587, DOI 10.1111/j.1744-6570.1995.tb01772.x
   Brooks Frederick P., 1995, The mythical man-month
   CANNONBOWERS JA, 1993, INDIVIDUAL AND GROUP DECISION MAKING, P221
   CHIU CY, 1995, SOC COGNITION, V13, P49, DOI 10.1521/soco.1995.13.1.49
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   Crowston K, 2007, IEEE T PROF COMMUN, V50, P185, DOI 10.1109/TPC.2007.902654
   Daft R.L., 2009, ORG THEORY DESIGN
   Davenport Thomas., 2000, WORKING KNOWLEDGE
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dyer W.G., 1987, Team building: Issues and alternatives, V2nd
   Edmondson AC, 2003, DECISION SCI, V34, P197, DOI 10.1111/1540-5915.02316
   Edmondson AC, 2002, ORGAN SCI, V13, P128, DOI 10.1287/orsc.13.2.128.530
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Fernie S., 2003, International Journal of Project Management, V21, P177, DOI 10.1016/S0263-7863(02)00092-3
   GIBBS WW, 1994, SCI AM, V271, P86, DOI 10.1038/scientificamerican0994-86
   Glass R.L., 1992, Building quality software
   GRANOVETTER MS, 1973, AM J SOCIOL, V78, P1360, DOI 10.1086/225469
   Guinan PJ, 1998, INFORM SYST RES, V9, P101, DOI 10.1287/isre.9.2.101
   Hackman J.R., 1987, Handbook of organizational behavior
   Hackman J.R., 1992, Handbook of industrial and organizational psychology, P199
   Hansen MT, 1999, HARVARD BUS REV, V77, P106
   HENDERSON JC, 1992, MANAGE SCI, V38, P757, DOI 10.1287/mnsc.38.6.757
   Hollingshead AB, 1998, J EXP SOC PSYCHOL, V34, P423, DOI 10.1006/jesp.1998.1358
   Johannessen JA, 2001, INT J INFORM MANAGE, V21, P3, DOI 10.1016/S0268-4012(00)00047-5
   Koskinen K. U., 2003, International Journal of Project Management, V21, P281, DOI 10.1016/S0263-7863(02)00030-3
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Layman L, 2006, INFORM SOFTWARE TECH, V48, P781, DOI 10.1016/j.infsof.2006.01.004
   Lechler T, 2001, SMALL BUS ECON, V16, P263, DOI 10.1023/A:1011167519304
   Leonard D, 1998, CALIF MANAGE REV, V40, P112, DOI 10.2307/41165946
   Lesser E., 2000, KNOWLEDGE COMMUNITIE
   Levesque LL, 2001, J ORGAN BEHAV, V22, P135, DOI 10.1002/job.87
   Lewis K, 2003, J APPL PSYCHOL, V88, P587, DOI 10.1037/0021-9010.88.4.587
   Lewis K, 2011, ORGAN SCI, V22, P1254, DOI 10.1287/orsc.1110.0647
   LIANG DW, 1995, PERS SOC PSYCHOL B, V21, P384, DOI 10.1177/0146167295214009
   McChesney IR, 2004, INFORM SOFTWARE TECH, V46, P473, DOI 10.1016/j.infsof.2003.10.001
   MESSICK S, 1995, AM PSYCHOL, V50, P741, DOI 10.1037/0003-066X.50.9.741
   Mishra D, 2012, INFORM SOFTWARE TECH, V54, P1067, DOI 10.1016/j.infsof.2012.04.002
   Moreland R.L., 1999, SHARED COGNITION ORG, P3
   Moreland RL, 2000, ORGAN BEHAV HUM DEC, V82, P117, DOI 10.1006/obhd.2000.2891
   Nelson R.R., 1982, EVOL THEOR
   Nerur S, 2007, COMMUN ACM, V50, P79, DOI 10.1145/1226736.1226739
   Nonaka I, 1995, KNOWLEDGE CREATING C
   Olson GM, 2000, HUM-COMPUT INTERACT, V15, P139, DOI 10.1207/S15327051HCI1523_4
   Orasanu J., 1993, Decision making in action: models and methods, P327
   PINTO MB, 1990, J PROD INNOVAT MANAG, V7, P200, DOI 10.1016/0737-6782(90)90004-X
   PODSAKOFF PM, 1986, J MANAGE, V12, P531, DOI 10.1177/014920638601200408
   Podsakoff PM, 2003, J APPL PSYCHOL, V88, P879, DOI 10.1037/0021-9010.88.5.879
   Polanyi M., 1966, Knowledge in Organisations
   Qumer A, 2008, J SYST SOFTWARE, V81, P1899, DOI 10.1016/j.jss.2007.12.806
   Rousseau D.M., 1994, TRENDS ORG BEHAV, P13
   Ryan S, 2009, J SYST SOFTWARE, V82, P229, DOI 10.1016/j.jss.2008.05.037
   SALANCIK GR, 1978, ADMIN SCI QUART, V23, P224, DOI 10.2307/2392563
   Sharp H, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P61, DOI 10.1007/978-3-642-12575-1_4
   Spender J.C., 1998, MANAGERIAL ORG COGNI, P13
   Spender JC, 1996, STRATEGIC MANAGE J, V17, P5, DOI 10.1002/smj.4250171103
   Sternberg R. J., 2000, PRACTICAL INTELLIGEN
   Strode DE, 2012, J SYST SOFTWARE, V85, P1222, DOI 10.1016/j.jss.2012.02.017
   Thompson P, 2001, J MANAGE STUD, V38, P923, DOI 10.1111/1467-6486.00266
   Tsoukas H., 2003, BLACKWELL HDB ORG LE, P410
   von Glaserfeld E., 1995, RADICAL CONSTRUCTIVI
   Wall TD, 2004, PERS PSYCHOL, V57, P95, DOI 10.1111/j.1744-6570.2004.tb02485.x
   Wegner D. M., 1987, THEORIES GROUP BEHAV, P185, DOI [10.1007/978-1-4612-4634-3_9, DOI 10.1007/978-1-4612-4634-3_9]
   WEICK KE, 1993, ADMIN SCI QUART, V38, P357, DOI 10.2307/2393372
   Wilson T.D., 2002, INFORM RES, V8
   Yuan YC, 2010, COMMUN RES, V37, P20, DOI 10.1177/0093650209351469
NR 80
TC 83
Z9 105
U1 1
U2 132
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2013
VL 55
IS 9
BP 1614
EP 1624
DI 10.1016/j.infsof.2013.02.013
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 174PU
UT WOS:000321168700007
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Minku, LL
   Yao, X
AF Minku, Leandro L.
   Yao, Xin
TI Ensembles and locality: Insight on improving software effort estimation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software effort estimation; Ensembles of learning machines; Locality;
   Empirical validation
ID ARTIFICIAL NEURAL-NETWORK; REGRESSION-MODELS; EXTRACTION; DIVERSITY
AB Context: Ensembles of learning machines and locality are considered two important topics for the next research frontier on Software Effort Estimation (SEE).
   Objectives: We aim at (1) evaluating whether existing automated ensembles of learning machines generally improve SEEs given by single learning machines and which of them would be more useful; (2) analysing the adequacy of different locality approaches; and getting insight on (3) how to improve SEE and (4) how to evaluate/choose machine learning (ML) models for SEE.
   Method: A principled experimental framework is used for the analysis and to provide insights that are not based simply on intuition or speculation. A comprehensive experimental study of several automated ensembles, single learning machines and locality approaches, which present features potentially beneficial for SEE, is performed. Additionally, an analysis of feature selection and regression trees (RTs), and an investigation of two tailored forms of combining ensembles and locality are performed to provide further insight on improving SEE.
   Results: Bagging ensembles of RTs show to perform well, being highly ranked in terms of performance across different data sets, being frequently among the best approaches for each data set and rarely performing considerably worse than the best approach for any data set. They are recommended over other learning machines should an organisation have no resources to perform experiments to chose a model. Even though RTs have been shown to be more reliable locality approaches, other approaches such as k-Means and k-Nearest Neighbours can also perform well, in particular for more heterogeneous data sets.
   Conclusion: Combining the power of automated ensembles and locality can lead to competitive results in SEE. By analysing such approaches, we provide several insights that can be used by future research in the area. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Minku, Leandro L.; Yao, Xin] Univ Birmingham, Sch Comp Sci, CERCIA, Birmingham B15 2TT, W Midlands, England.
C3 University of Birmingham
RP Minku, LL (corresponding author), Univ Birmingham, Sch Comp Sci, CERCIA, Birmingham B15 2TT, W Midlands, England.
EM l.l.minku@cs.bham.ac.uk; x.yao@cs.bham.ac.uk
OI Minku, Leandro/0000-0002-2639-0671; Yao, Xin/0000-0001-8837-4442
FU EPSRC [EP/D052785/1, EP/J017515/1]; European Commission [270428]; EPSRC
   [EP/J017515/1, EP/D052785/1] Funding Source: UKRI
FX The authors would like to thank all the participants of PROMISE'11 and
   especially Dr. Tim Menzies and Prof. Martin Shepperd for the fruitful
   discussions and suggestions. We would also like to thank Dr. Peter
   Coxhead and Dr. Rami Bahsoon for their help and advice, and the
   anonymous reviewers for their constructive comments, which have helped
   to improve the quality of this paper significantly. This work was
   supported by EPSRC Grants (Nos. EP/D052785/1 and EP/J017515/1) and
   European Commission through its FP7 Grant (No. 270428).
CR Agarwal R., 2001, Software Engineering Notes, V26, P60, DOI 10.1145/505482.505491
   [Anonymous], INT JOINT C NEUR NET
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], J INFORM FUSION
   [Anonymous], INT S SOFTW REL ENG
   [Anonymous], INT SOFTW METR S SYD
   [Anonymous], IEEE T SOFTWARE ENG
   [Anonymous], PREDICTIVE MODELS SO
   [Anonymous], IEEE T SOFTWARE ENG
   [Anonymous], SPECTRAL CLUSTERER W
   [Anonymous], SPACE EXPLORATION SO
   [Anonymous], INFORM SOFTWARE TECH
   [Anonymous], INT JOINT C NEUR NET
   [Anonymous], 1960, CONTRIBUTIONS PROBAB
   Baskeles B., 2007, INT S COMPUTER INFOR, P1
   Bauer E, 1999, MACH LEARN, V36, P105, DOI 10.1023/A:1007515423169
   Bishop C, 2007, RECOGNITION PATTERN
   Bishop C.M., 2005, NEURAL NETWORKS PATT
   Boehm BW., 1981, Software Engineering Economics
   Braga PL, 2007, IEEE IJCNN, P1595, DOI 10.1109/IJCNN.2007.4371196
   Breiman L, 1996, ANN STAT, V24, P2350
   Breiman L, 1996, MACH LEARN, V24, P123, DOI 10.1007/bf00058655
   Brown G, 2005, J MACH LEARN RES, V6, P1621
   Chen HH, 2009, IEEE T NEURAL NETWOR, V20, P1962, DOI 10.1109/TNN.2009.2034144
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Gallego JJC, 2007, J COMPUT SCI TECH-CH, V22, P371, DOI 10.1007/s11390-007-9043-5
   Tronto IFB, 2007, IEEE IJCNN, P771
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Frank E, 2000, MACH LEARN, V41, P5, DOI 10.1023/A:1007670802811
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall MA, 1998, AUST COMP S, V20, P181
   Hartigan J. A., 1975, CLUSTERING ALGORITHM, V458, P468
   Heiat A, 2002, INFORM SOFTWARE TECH, V44, P911, DOI 10.1016/S0950-5849(02)00128-3
   Islam M, 2003, IEEE T NEURAL NETWOR, V14, P820, DOI 10.1109/TNN.2003.813832
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kannan R., 2000, CLUSTERINGS GOOD BAD
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kultur Y, 2009, KNOWL-BASED SYST, V22, P395, DOI 10.1016/j.knosys.2009.05.001
   Kuncheva LI, 2003, MACH LEARN, V51, P181, DOI 10.1023/A:1022859003006
   Liu Y, 1999, NEURAL NETWORKS, V12, P1399, DOI 10.1016/S0893-6080(99)00073-8
   Liu Y, 1999, IEEE T SYST MAN CY B, V29, P716, DOI 10.1109/3477.809027
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   Minku LL, 2011, P 7 INT C PRED MOD S, P1, DOI DOI 10.1145/2020390.2020399
   Mitchell M.L., 2010, RES DESIGN EXPLAINED, V7th
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Seo YS., 2008, P 4 INT WORKSH PRED, P25, DOI DOI 10.1145/1370788.1370796
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shi JB, 2000, IEEE T PATTERN ANAL, V22, P888, DOI 10.1109/34.868688
   Shirabad J.S., 2005, The PROMISE Repository of Software Engineering Databases
   Tresp V., 2001, HDB NEURAL NETWORK S
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wittig G, 1997, INFORM SOFTWARE TECH, V39, P469, DOI 10.1016/S0950-5849(97)00004-9
   Zhao YH, 2008, ADV SPACE RES, V41, P1955, DOI 10.1016/j.asr.2007.07.020
   Zorkadis V, 2006, J EXP THEOR ARTIF IN, V18, P523, DOI 10.1080/09528130600975873
   Zorkadis V, 2005, NEURAL NETWORKS, V18, P799, DOI 10.1016/j.neunet.2005.06.045
NR 58
TC 80
Z9 81
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2013
VL 55
IS 8
BP 1512
EP 1528
DI 10.1016/j.infsof.2012.09.012
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 168DF
UT WOS:000320685200011
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Martínez, Y
   Cachero, C
   Meliá, S
AF Martinez, Yulkeidi
   Cachero, Cristina
   Melia, Santiago
TI MDD <i>vs</i>. traditional software development: A practitioner's
   subjective perspective
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE MDD; MBD; Code-centric development; Experiment; Usefulness; Ease of use
ID MODEL; ACCEPTANCE
AB Context: Today's project managers have a myriad of methods to choose from for the development of software applications. However, they lack empirical data about the character of these methods in terms of usefulness, ease of use or compatibility, all of these being relevant variables to assess the developer's intention to use them.
   Objective: To compare three methods, each following a different paradigm (Model-Driven, Model-Based and Code-Centric) with respect to their adoption potential by junior software developers engaged in the development of the business layer of a Web 2.0 application.
   Method: We have conducted a quasi-experiment with 26 graduate students of the University of Alicante. The application developed was a Social Network, which was organized around a fixed set of modules. Three of them, similar in complexity, were used for the experiment. Subjects were asked to use a different method for each module, and then to answer a questionnaire that gathered their perceptions during such use.
   Results: The results show that the Model-Driven method is regarded as the most useful, although it is also considered the least compatible with previous developers' experiences. They also show that junior software developers feel comfortable with the use of models, and that they are likely to use them if the models are accompanied by a Model-Driven development environment.
   Conclusions: Despite their relatively low level of compatibility, Model-Driven development methods seem to show a great potential for adoption. That said, however, further experimentation is needed to make it possible to generalize the results to a different population, different methods, other languages and tools, different domains or different application sizes. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Martinez, Yulkeidi] Univ Maximo Gomez Baez Ciego de Avila, Ciego De Avila 67800, Cuba.
   [Cachero, Cristina; Melia, Santiago] Univ Alicante, DLSI, Alicante, Spain.
C3 University of Ciego de Avila; Universitat d'Alacant
RP Martínez, Y (corresponding author), Univ Maximo Gomez Baez Ciego de Avila, Carretera Moron Km 9 1-2, Ciego De Avila 67800, Cuba.
EM yulkeidi@gmail.com; ccachero@dlsi.ua.es; santi@dlsi.ua.es
RI Castro, Cristina Cachero/AAC-2213-2019; Meliá, Santiago/AAT-3532-2021;
   Martínez Espinosa, Yulkeidi/AIC-7269-2022
OI Castro, Cristina Cachero/0000-0001-6281-8287; Meliá,
   Santiago/0000-0003-3782-6626; Martínez Espinosa,
   Yulkeidi/0000-0003-2221-0650
FU Spanish Ministry of Education; University of Alicante [TIN2010-15789,
   GRE10-23]
FX This paper has been co-supported by the Spanish Ministry of Education,
   and the University of Alicante under contracts TIN2010-15789 (SONRIA)
   and GRE10-23 (DISEMRIA). The authors also wish to thank their students
   for taking the time to participate in this empirical study. In addition,
   we would also like to thank Jose Javier Martinez and Juan Antonio Osuna
   who contributed to the development of the OOH4RIA Tool. Special thanks
   to the reviewers for their useful comments, which greatly helped to
   improve the quality of this work.
CR Abelson R.P., 1985, Handbook of social psychology, V1, P231
   ADELBRATT T, 1980, ACTA PSYCHOL, V45, P177, DOI 10.1016/0001-6918(80)90030-X
   Agarwal R, 2000, IEEE T ENG MANAGE, V47, P295, DOI 10.1109/17.865899
   Ajzen I, 2005, HANDBOOK OF ATTITUDES, P173
   Ambler Scott, 2002, Agile modeling: effective practices for extreme programming and the unified process
   [Anonymous], 2007, IIS
   [Anonymous], 2007, PASW STAT 18 COR SYS, P406
   [Anonymous], MOD DRIV ARCH
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Balasubramanian K, 2006, COMPUTER, V39, P33, DOI 10.1109/MC.2006.54
   Cernosek G., 2004, The Value of Modeling
   Cook T.D., 1979, QUASIEXPERIMENTATION, P405
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Eichberg M, 2010, LECT NOTES COMPUT SC, V6138, P104, DOI 10.1007/978-3-642-13595-8_10
   Fernandez R., 2010, ENFERM GLOB, V19, P1
   Fowler M, 2004, UML distilled: A brief guide to the standard object modeling language
   Gronback R.C., 2009, ECLIPSE MODELING PRO, P689
   Gustavsson H., 2007, IEEE INT C SOFTW MAI, P521
   Guttman M., 2007, REALLIFE MDA SOLVING
   Heijstek W, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P113, DOI 10.1109/SEAA.2009.70
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Kampenes VB, 2009, INFORM SOFTWARE TECH, V51, P71, DOI 10.1016/j.infsof.2008.04.006
   Kleppe A., 2003, MDA EXPLAINED MODEL, V83, P192
   Kruchten P., 2003, RATIONAL UNIFIED PRO, P298
   Martinez Y., 2012, REPLICATION PACKAGE
   Meliá S, 2010, LECT NOTES COMPUT SC, V6189, P514, DOI 10.1007/978-3-642-13911-6_41
   Mellor SJ, 2003, IEEE SOFTWARE, V20, P14, DOI 10.1109/MS.2003.1231145
   Milano P., 2004, DESIGNING DATA INTEN
   Mohagheghi P, 2010, 5 C2M EEMDD WORKSH E, P6
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Mohagheghi P, 2008, FRONT ARTIF INTEL AP, V182, P14, DOI 10.3233/978-1-58603-916-5-14
   Moody D. L., 2003, ECIS
   Moore GC, 1991, INFORM SYST RES, V2, P192, DOI 10.1287/isre.2.3.192
   Munoz J, 2005, ACT 2 TALL DES SOFTW, P1
   Norman G, 2010, ADV HEALTH SCI EDUC, V15, P625, DOI 10.1007/s10459-010-9222-y
   Nugroho A, 2009, INFORM SOFTWARE TECH, V51, P1670, DOI 10.1016/j.infsof.2009.04.007
   Ozgur T., 2007, Comparison of Microsoft DSL Tools and Eclipse Modeling Frameworks for Domain-Specific Modeling
   Panach J., 2010, INCORPORACION MECANI
   Pelechano V., 2006, JISBD
   Pfleeger SL, 1999, J SYST SOFTWARE, V47, P111, DOI 10.1016/S0164-1212(99)00031-X
   Picek R, 2009, J INF ORGAN SCI, V33, P285
   Riemenschneider CK, 2002, IEEE T SOFTWARE ENG, V28, P1135, DOI 10.1109/TSE.2002.1158287
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Shneiderman B., 1996, EYES HAVE TASK DATA
   Stahl T., 2006, MODEL DRIVEN SOFTWAR, P970
   Steinberg D., 2008, Eclipse Modeling Framework, V2nd ed., P744, DOI [10.1108/02641610810878585., DOI 10.1108/02641610810878585]
   THOMPSON RL, 1991, MIS QUART, V15, P125, DOI 10.2307/249443
   Venkatesh V, 2000, MANAGE SCI, V46, P186, DOI 10.1287/mnsc.46.2.186.11926
   Walderhaug S., 2008, WORKSH EUR C MOD DRI
   Wikipedia, LEAK ABSTR
   Wikipedia, LIST UN MOD LANG TOO
   Wohlin C., 2000, EXPT SOFTWARE ENG IN, V15, P228
   WRIGHT P, 1975, J MARKETING RES, V12, P60, DOI 10.2307/3150659
NR 53
TC 30
Z9 32
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2013
VL 55
IS 2
BP 189
EP 200
DI 10.1016/j.infsof.2012.07.004
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 060EO
UT WOS:000312759500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Abramov, J
   Sturm, A
   Shoval, P
AF Abramov, Jenny
   Sturm, Arnon
   Shoval, Peretz
TI Evaluation of the Pattern-based method for Secure Development (PbSD): A
   controlled experiment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Database design; Model driven development; Secure software development;
   Authorization; Security patterns; Controlled experiment
ID DESIGN PATTERNS; DRIVEN SECURITY; UML MODELS; REQUIREMENTS
AB Context: Security in general, and database protection from unauthorized access in particular, are crucial for organizations. Although it has been long accepted that the important system requirements should be considered from the early stages of the development process, non-functional requirements such as security tend to get neglected or dealt with only at later stages of the development process.
   Objective: We present an empirical study conducted to evaluate a Pattern-based method for Secure Development - PbSD - that aims to help developers, in particular database designers, to design database schemata that comply with the organizational security policies regarding authorization, from the early stages of development. The method provides a complete framework to guide, enforce and verify the correct implementation of security policies within a system design, and eventually generate a database schema from that design.
   Method: The PbSD method was evaluated in comparison with a popular existing method that directly specifies the security requirements in SQL and Oracle's VPD. The two methods were compared with respect to the quality of the created access control specifications, the time it takes to complete the specification, and the perceived quality of the methods.
   Results: We found that the quality of the access control specifications using the PbSD method for secure development were better with respect to privileges granted in the table, column and row granularity levels. Moreover, subjects who used the PbSD method completed the specification task in less time compared to subjects who used SQL Finally, the subjects perceived the PbSD method clearer and more easy to use.
   Conclusion: The pattern-based method for secure development can enhance the quality of security specification of databases, and decrease the software development time and cost. The results of the experiment may also indicate that the use of patterns in general has similar benefits; yet this requires further examinations. (c) 2012 Elsevier B.V. All rights reserved.
C1 [Abramov, Jenny; Sturm, Arnon; Shoval, Peretz] Ben Gurion Univ Negev, Dept Informat Syst Engn, IL-84105 Beer Sheva, Israel.
   [Abramov, Jenny] Ben Gurion Univ Negev, Deutsch Telekom Labs, IL-84105 Beer Sheva, Israel.
C3 Ben Gurion University; Ben Gurion University; Deutsche Telekom AG
RP Sturm, A (corresponding author), Ben Gurion Univ Negev, Dept Informat Syst Engn, IL-84105 Beer Sheva, Israel.
EM sturm@bgu.ac.il
RI Shoval, Peretz/F-1229-2012; STURM, ARNON/F-1510-2012
OI STURM, ARNON/0000-0002-4021-7752; Shoval, Peretz/0000-0002-0183-2832
FU Deutsche Telekom Laboratories at Ben-Gurion University of the Negev
FX This research was partially supported by Deutsche Telekom Laboratories
   at Ben-Gurion University of the Negev.
CR Abramov J, 2011, CAISE FORUM, P41
   Abramov J, 2011, LECT NOTES BUS INF P, V83, P637
   Ampatzoglou A, 2007, INFORM SOFTWARE TECH, V49, P445, DOI 10.1016/j.infsof.2006.07.003
   [Anonymous], 2008, OR OR DAT SECU GUID
   [Anonymous], 2005, Secure Systems Development with UML
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   Basin D, 2009, INFORM SOFTWARE TECH, V51, P815, DOI 10.1016/j.infsof.2008.05.011
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Compagna L, 2009, ARTIF INTELL LAW, V17, P1, DOI 10.1007/s10506-008-9067-3
   Czuprynski J., 2003, DATABASE J
   D'Aubeterre F., 2009, P 4 INT C DES SCI RE
   D'Aubeterre F, 2008, EUR J INFORM SYST, V17, P528, DOI 10.1057/ejis.2008.42
   Dhillon G., 2001, Information security management: Global challenges in the new millennium
   Fernandez EB, 2007, INTEGRATING SECURITY AND SOFTWARE ENGINEERING: ADVANCES AND FUTURE VISIONS, P107
   Fernández-Medina E, 2005, INFORM SOFTWARE TECH, V47, P463, DOI 10.1016/j.infsof.2004.09.013
   Gamma Erich., 1994, DESIGN PATTERNS
   Jiirjens Jan, 2007, International Journal on Software Tools for Technology Transfer, V9, P527, DOI 10.1007/s10009-007-0048-8
   Jürjens J, 2008, METHOD INFORM MED, V47, P409, DOI 10.3414/ME9122
   Koch Manuel., 2006, Software Systems Modeling, V5, P429, DOI DOI 10.1007/S10270-006-0030-Z
   KRIEGEL ALEX., 2008, SQL Bible, V2nd
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   Lee SW, 2010, COMPUT SECUR, V29, P299, DOI 10.1016/j.cose.2010.01.003
   Lloyd J., 2009, LNCS, P15
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   MASSACCI F, 2006, SOCIAL MODELING REQU
   Montrieux L, 2010, P IEEE ACM INT C AUT, P357
   Moody D, 2007, ADVANCES IN INFORMATION SYSTEMS DEVELOPMENT, VOL 2, P481, DOI 10.1007/978-0-387-70802-7_40
   Mouratidis H, 2007, INT J SOFTW ENG KNOW, V17, P285, DOI 10.1142/S0218194007003240
   Mouratidis H, 2010, INT J INTELL SYST, V25, P813, DOI 10.1002/int.20432
   Mouratidis H, 2009, LECT NOTES COMPUT SC, V5565, P231, DOI 10.1007/978-3-642-02144-2_21
   OMG Object Management Group, 2010, OBJ CONSTR LANG OMG
   Opdahl AL, 2009, INFORM SOFTWARE TECH, V51, P916, DOI 10.1016/j.infsof.2008.05.013
   Pavlich-Mariscal JA, 2010, COMPUT SECUR, V29, P350, DOI 10.1016/j.cose.2009.11.005
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P1134, DOI 10.1109/32.988711
   Ray I, 2004, INFORM SOFTWARE TECH, V46, P575, DOI 10.1016/j.infsof.2003.10.007
   Reinhartz-Berger I, 2008, J DATABASE MANAGE, V19, P74, DOI 10.4018/jdm.2008010104
   Reinhartz-Berger I, 2009, INFORM SOFTWARE TECH, V51, P1275, DOI 10.1016/j.infsof.2009.03.005
   Schmidt Holger, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P367, DOI 10.1007/978-3-642-21640-4_28
   Schumacher M., 2005, Security Patterns: Integrating Security and Systems Engineering, V1st
   Schumacher Markus., 2003, SECURITY ENG PATTERN
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Shoval P, 1997, DATA KNOWL ENG, V21, P297, DOI 10.1016/S0169-023X(97)88935-5
   Vokác M, 2004, EMPIR SOFTW ENG, V9, P149, DOI 10.1023/B:EMSE.0000027778.69251.1f
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yu E. S. K., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P159, DOI 10.1109/ICSE.1994.296775
   Zhang C., 2011, IEEE T SOFTWARE ENG
NR 46
TC 9
Z9 10
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2012
VL 54
IS 9
BP 1029
EP 1043
DI 10.1016/j.infsof.2012.04.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 977BP
UT WOS:000306631700008
DA 2024-07-18
ER

PT J
AU Thurimella, AK
   Bruegge, B
AF Thurimella, Anil Kumar
   Bruegge, Bernd
TI Issue-based variability management
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Rationale management; Requirements engineering; Product line
   engineering; Empirical software engineering
AB Context: Variability management is a key activity in software product line engineering. This paper focuses on managing rationale information during the decision-making activities that arise during variability management. By decision-making we refer to systematic problem solving by considering and evaluating various alternatives. Rationale management is a branch of science that enables decision-making based on the argumentation of stakeholders while capturing the reasons and justifications behind these decisions.
   Objective: Decision-making should be supported to identify variability in domain engineering and to resolve variation points in application engineering. We capture the rationale behind variability management decisions. The captured rationale information is useful to evaluate future changes of variability models as well as to handle future instantiations of variation points. We claim that maintaining rationale will enhance the longevity of variability models. Furthermore, decisions should be performed using a formal communication between domain engineering and application engineering.
   Method: We initiate the novel area of issue-based variability management (IVM) by extending variability management with rationale management. The key contributions of this paper are: (i) an issue-based variability management methodology (IVMM), which combines questions, options and criteria (QOC) and a specific variability approach; (ii) a meta-model for IVMM and a process for variability management and (iii) a tool for the methodology, which was developed by extending an open source rationale management tool.
   Results: Rationale approaches (e.g. questions, options and criteria) guide distributed stakeholders when selecting choices for instantiating variation points. Similarly, rationale approaches also aid the elicitation of variability and the evaluation of changes. The rationale captured within the decision-making process can be reused to perform future decisions on variability.
   Conclusion: IVMM was evaluated comparatively based on an experimental survey, which provided evidence that IVMM is more effective than a variability modeling approach that does not use issues. (c) 2012 Elsevier B.V. All rights reserved.
C1 [Thurimella, Anil Kumar; Bruegge, Bernd] Tech Univ Munich, D-8000 Munich, Germany.
C3 Technical University of Munich
EM Anil.Thurimella@gmail.com
FU Siemens AG, CT SE1
FX This work was supported by Siemens AG, CT SE1. Special thanks to Klaus
   Beetz for organizing the financial support for the research work. We
   would like to thank Paul Gruenbacher, Allen Dutoit, Guenter Boeckle and
   Oliver Creighton for their support and collaboration during various
   stages of our research. Many thanks to Graham Ruxton and Walid Maalej
   for their proofreading efforts.
CR Ajila SA, 2004, PROCEEDINGS OF THE 2004 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI-2004), P157, DOI 10.1109/IRI.2004.1431453
   America P., 2003, PFE, V3014, P44
   [Anonymous], GENERATIVE PROGRAMMI
   [Anonymous], 1970, 131 U CAL BERK I URB
   Babar MA, 2010, IEEE SOFTWARE, V27, P89, DOI 10.1109/MS.2010.77
   Bertolino A., 2002, INT WORKSH REQ ENG P, P12
   Beuche D., 2006, PURE VARIANTS TECHNI
   Boehm B, 2001, IEEE SOFTWARE, V18, P46, DOI 10.1109/52.922725
   Bosch J, 2002, LECT NOTES COMPUT SC, V2290, P13
   Bruegge B, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P139, DOI 10.1109/ICGSE.2006.261227
   Bruegge Bernd., 2003, OBJECT ORIENTED SOFT, V2nd
   Bühne S, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P41, DOI 10.1109/RE.2005.45
   Chen L., 2009, P 13 INT SOFTWARE PR, P81
   Chen Y, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P103, DOI 10.1109/IWPSE.2004.1334774
   CLEMENTS P, 2006, FRAMEWORK SOFTWARE P
   CONKLIN J, 1988, P 1988 ACM C COMP SU
   Cooke S., 1984, MAKING MANAGEMENT DE
   Damian D. E., 2003, Requirements Engineering, V8, P149, DOI 10.1007/s00766-003-0173-1
   Deelstra S., 2004, SPRINGER VERLAG LECT, V3154, P65
   Dhungana D., 2007, SOFTWARE PRODUCT LIN, P151
   Dhungana D, 2010, J SYST SOFTWARE, V83, P1108, DOI 10.1016/j.jss.2010.02.018
   Dutoit A., 2003, MANAGING SOFTWARE EN
   Dutoit A. H., 1996, THESIS CARNEGIE MELL
   Dutoit AH, 2006, RATIONALE MANAGEMENT
   Fink A., 2003, The survey handbook, V1
   Fischer R., 1981, GETTING YES NEGOTIAT
   Gomaa H., 2005, DESIGNING SOFTWARE P
   Gruenbacher P., 2006, REQUIREMENTS NEGOTIA
   HALMANS G, 2003, SOFTWARE SYSTEMS MOD, V2, P15
   Hotz L, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P388, DOI 10.1109/ASE.2004.1342771
   Hull E., 2004, Requirements Engineering
   JOHN I, 2003, P 9 INT WORKSH REQ E
   Jureta IJ, 2008, REQUIR ENG, V13, P87, DOI 10.1007/s00766-007-0056-y
   Kang Kyo C, 1990, Technical Report
   Kruchten P., 2004, GRON WORKSH SOFTW VA, P54
   Lago P, 2005, PROC INT CONF SOFTW, P206
   LEE JT, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P114, DOI 10.1109/ICSE.1991.130629
   Maalej W., 2010, IEEE MARK09 IEEE COM, P32
   Maalej W., 2008, 2008 1 INT WORKSH MA, pi
   MacLean A., 1991, Human-Computer Interaction, V6, P201, DOI 10.1207/s15327051hci0603&4_2
   Massen T. v. d., 2003, INTERNATIONALWORKSHO, P168
   Metzger A, 2007, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2007.61
   Neil L., 2003, P 5 INT WORKSH PROD, P22
   Paulish D.J., 2003, INT WORKSH PROD LIN
   Peterson M., 2009, An Introduction to Decision Theory
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rabiser R., 2008, VAMOS WORKSH, P73
   Rabiser R, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P141
   Rabiser R, 2010, INFORM SOFTWARE TECH, V52, P324, DOI 10.1016/j.infsof.2009.11.001
   Regnell B, 2001, P 1 SWED C SOFTW ENG, P49
   SAVOLAINEN J, 2001, P 2001 S SOFTW REUS, P133
   Schmid K, 2004, SCI COMPUT PROGRAM, V53, P259, DOI 10.1016/j.scico.2003.04.002
   Schmidt DC, 1997, COMMUN ACM, V40, P85, DOI 10.1145/262793.262810
   Sinnema M, 2007, INFORM SOFTWARE TECH, V49, P717, DOI 10.1016/j.infsof.2006.08.001
   SUBRAHMANIAN E, 1993, AI EDAM, V7, P257, DOI 10.1017/S0890060400000354
   Svahnberg M., 1991, J SOFTWARE MAINTENAN, V11, P391
   Thurimella A.K., 2009, 2 INT WORKSH MAN REQ
   Thurimella A.K., 2007, P 11 INT C SOFTW ENG, P108
   THURIMELLA AK, 2008, P 12 INT SOFTW PROD, P99, DOI DOI 10.1109/SPLC.2008.14
   Thurimella AK, 2007, INT REQUIR ENG CONF, P254, DOI 10.1109/RE.2007.11
   WOLF T, 2007, THESIS TU MUNCHEN
   WOLF T, 2005, P INT WORKSH DISTR S, P111
   Zhang HY, 2003, LECT NOTES COMPUT SC, V2681, P681
NR 63
TC 15
Z9 16
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2012
VL 54
IS 9
BP 933
EP 950
DI 10.1016/j.infsof.2012.02.005
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 977BP
UT WOS:000306631700002
DA 2024-07-18
ER

PT J
AU Cámara, J
   Salaün, G
   Canal, C
   Ouederni, M
AF Camara, Javier
   Salauen, Gwen
   Canal, Carlos
   Ouederni, Meriem
TI Interactive specification and verification of behavioral adaptation
   contracts
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Formal specification; Software adaptation; Software reusability;
   Interaction protocol
AB Context: Adaptation is a crucial issue when building new applications by reusing existing software services which were not initially designed to interoperate with each other. Adaptation contracts describe composition constraints and adaptation requirements among these services. The writing of this specification by a designer is a difficult and error-prone task, especially when interaction protocols are considered in service interfaces.
   Objective: In this article, we propose a tool-based, interactive approach to support the contract design process.
   Method: Our approach includes: (i) a graphical notation to define port bindings, and an interface compatibility measure to compare protocols and suggest some port connections to the designer, (ii) compositional and hierarchical techniques to facilitate the specification of adaptation contracts by building them incrementally, (iii) validation and verification techniques to check that the contract will make the involved services work correctly and as expected by the designer.
   Results: Our results show a reduction both in the amount of effort that the designer has to put into building the contract, as well as in the number of errors present in the final result (noticeably higher in the case of manual specification).
   Conclusion: We conclude that it is important to provide integrated tool support for the specification and verification of adaptation contracts, since their incorrect specification induces erroneous executions of the system. To the best of our knowledge, such tool support has not been provided by any other approach so far, and hence we consider the techniques described in this paper as an important contribution to the area of behavioral software adaptation. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Camara, Javier] Univ Coimbra, Dept Informat Engn, P-3000 Coimbra, Portugal.
   [Salauen, Gwen] Grenoble INP INRIA LIG, Grenoble, France.
   [Canal, Carlos] Univ Malaga, Dept Comp Sci, E-29071 Malaga, Spain.
   [Ouederni, Meriem] Univ Nantes, LINA, F-44035 Nantes, France.
C3 Universidade de Coimbra; Communaute Universite Grenoble Alpes; Institut
   National Polytechnique de Grenoble; Universite Grenoble Alpes (UGA);
   Centre National de la Recherche Scientifique (CNRS); Universidad de
   Malaga; Nantes Universite
RP Cámara, J (corresponding author), Univ Coimbra, Dept Informat Engn, P-3000 Coimbra, Portugal.
EM jcmoreno@dei.uc.pt
RI Camara, Javier/ABF-1534-2021; Canal, Carlos/H-4782-2015
OI Canal, Carlos/0000-0002-8002-0372
FU Spanish Ministry of Innovation and Science (MICINN) [TIN2008-05932];
   FEDER; Andalusian Regional Government [P07-TIC-3184, PB-TIC-3131]
FX The authors thank Jose Antonio Martin, Pascal Poizat, and the members of
   the GISUM group at the University of Malaga who participated in the
   experiments described in this article. This work has been partially
   supported by the Project TIN2008-05932 funded by the Spanish Ministry of
   Innovation and Science (MICINN), FEDER, and the Projects P07-TIC-3184
   and PB-TIC-3131 funded by the Andalusian Regional Government.
CR [Anonymous], 1989, CWI Q.
   Arbab F., 2004, ELECT NOTES THEORETI, V97, P25
   ARNOLD A, 1994, INT SERIES COMPUTER
   Autili M, 2007, PROC INT CONF SOFTW, P784
   Bracciali A, 2005, J SYST SOFTWARE, V74, P45, DOI 10.1016/j.jss.2003.05.007
   Brogi A, 2006, LECT NOTES COMPUT SC, V4294, P27
   Cámara J, 2009, INT CONF QUAL SOFTW, P65, DOI 10.1109/QSIC.2009.17
   Cámara J, 2008, J UNIVERS COMPUT SCI, V14, P2182
   Canal C, 2008, IEEE T SOFTWARE ENG, V34, P546, DOI 10.1109/TSE.2008.31
   Clarke EM, 1999, MODEL CHECKING, P1
   Cubo J, 2008, ELECTRON NOTES THEOR, V215, P39, DOI 10.1016/j.entcs.2008.06.020
   de Alfaro L., 2001, Software Engineering Notes, V26, P109, DOI 10.1145/503271.503226
   Dumas M, 2006, LECT NOTES COMPUT SC, V4102, P65
   Foster H., 2006, 28th International Conference on Software Engineering Proceedings, P771, DOI 10.1145/1134285.1134408
   Fu X., 2004, P 13 INT C WORLD WID, P621
   Giannakopoulou D, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P412, DOI 10.1109/ASE.2001.989841
   HENNESSY M, 1995, THEOR COMPUT SCI, V138, P353, DOI 10.1016/0304-3975(94)00172-F
   Inverardi P., 2005, 20 IEEEACM INT C AUT, P405
   Koehler C., 2009, P SAC 2009, P1369, DOI DOI 10.1145/1529282.1529587
   Mateescu R, 2008, LECT NOTES COMPUT SC, V5364, P84, DOI 10.1007/978-3-540-89652-4_10
   Meng S, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P346, DOI 10.1145/1244002.1244085
   MILNER R, 1993, THEOR COMPUT SCI, V114, P149, DOI 10.1016/0304-3975(93)90156-N
   Motahari Nezhad H.R., 2010, Protocol-aware matching of web service interfaces for adapter development, P731
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   NEZHAD H.R. MOTAHARI., 2007, 16th international conference on World Wide Web (WWW '07), P993, DOI [10.1145/1242572.1242706, DOI 10.1145/1242572.1242706]
   Ouederni M., 2010, MEASURING COMPATIBIL
   Ouederni M, 2010, ELECTRON PROC THEOR, P57, DOI 10.4204/EPTCS.37.5
   Pedersen T, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P1024
   Poizat P, 2007, LECT NOTES COMPUT SC, V4468, P141
   Rahm E, 2001, VLDB J, V10, P334, DOI 10.1007/s007780100057
   Salan G., 2006, INT J BUSINESS PROCE, V1, P116, DOI [10.1504/IJBPIM.2006.010025, DOI 10.1504/IJBPIM.2006.010025]
   Salaün G, 2008, SEFM 2008: SIXTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P313, DOI 10.1109/SEFM.2008.42
   Yellin DM, 1997, ACM T PROGR LANG SYS, V19, P292, DOI 10.1145/244795.244801
NR 33
TC 6
Z9 7
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2012
VL 54
IS 7
BP 701
EP 723
DI 10.1016/j.infsof.2012.01.010
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 946WG
UT WOS:000304387600004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mendoza, LE
   Capel, MI
   Pérez, MA
AF Mendoza, Luis E.
   Capel, Manuel I.
   Perez, Maria A.
TI Conceptual framework for business processes compositional verification
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Business Process Modelling; Model-Checking; Task model; Compositional
   verification; Formal specification
AB Context: To guarantee the success of Business Process Modelling (BPM) it is necessary to check whether the activities and tasks described by Business Processes (BPs) are sound and well coordinated.
   Objective: This article describes and validates a Formal Compositional Verification Approach (FCVA) that uses a Model-Checking (MC) technique to specify and verify BPs.
   Method: This is performed using the Communicating Sequential Processes + Time (CSP+T) process calculus, which adds new constructions to timed Business Process Model and Notation (BPMN) modelling entities for non- functional requirement specification.
   Results: Using our proposal we are able to specify the BP Task Model (BPTM) associated with BPs by formalising the timed BPMN notational elements. The proposal also allows us to apply MC to BPTM verification. A real-life example of verifying a BPTM in the field of Customer Relationship Management (CRM) is discussed as a practical application of FCVA.
   Conclusion: This approach facilitates the verification of complex BPs from independently verified local processes, and establishes a feasible way to use process calculi to verify BPs using state-of-the-art MC tools. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Mendoza, Luis E.; Perez, Maria A.] Univ Simon Bolivar, Proc & Syst Dept, Caracas 1080A, Venezuela.
   [Capel, Manuel I.] Univ Granada, Software Engn Dept, ETSI Informat & Telecommun, E-18071 Granada, Spain.
C3 Simon Bolivar University; University of Granada
RP Mendoza, LE (corresponding author), Univ Simon Bolivar, Proc & Syst Dept, POB 89000, Caracas 1080A, Venezuela.
EM lmendoza@usb.ve; manuelcapel@ugr.es; movalles@usb.ve
RI Morales, Luis Mendoza/AAN-9128-2020; Capel Tunon, Manuel
   Isidoro/C-2435-2012; Morales, Luis E Mendoza/E-9520-2010
OI Morales, Luis Mendoza/0000-0002-5081-7559; Capel Tunon, Manuel
   Isidoro/0000-0003-2449-4394; Morales, Luis E Mendoza/0000-0002-5081-7559
CR AALST W, INFORM SYSTEMS, V32
   AALST W, 2009, LECT NOTES BUSINESS, V12, P27
   AALST W, LECT NOTES COMPUTER
   Aalst W.v. d., 2002, WORKFLOW MANAGEMENT, V1st
   [Anonymous], 1997, The Theory and Practice of Concurrency
   Clarke Edmund M., 2001, Model Checking
   Combi C, 2009, LECT NOTES COMPUT SC, V5701, P64, DOI 10.1007/978-3-642-03848-8_6
   DIAZ G, 2005, LNCS, V3670
   DIJKMAN R, INF SOFTW TECHNOL, V50
   DUURSMA C, 1994, KADSIIM5VUBRR00420
   ESHUIS H, 2002, THESIS U TWENTE ENSC
   Formal Systems (Europe) Ltd, 2005, FAIL DIV REF FDR2 US
   Gonzalez Aleksander, 2011, Proceedings of the 13th International Conference on Enterprise Information Systems. ICEIS 2011, P363
   MA S, P ACIS INT C SOFTW E, V1
   MENDOZA L, 2008, ALGORITHM PROPOSAL A
   MENDOZA L, 2009, PROCEDURE PROPOSAL A
   MENDOZA L, INF SOFTW TECHNOL, V49
   Mendoza LE, 2009, LECT NOTES BUS INF P, V19, P213
   MORIMOTO S, 2008, INT J OPERATIONS QUA, V14, P237
   OASIS, 2007, Web Services Business Process Execution Language Version 2.0
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   ROZINAT A, LECT NOTES COMPUTER
   RUF J, 1997, P IFIP WG 10 5 INT C
   Schneider S, 2000, Concurrent and real-time systems
   van Dongen BF, 2004, LECT NOTES COMPUT SC, V3288, P362
   Wong PYH, 2011, SCI COMPUT PROGRAM, V76, P633, DOI 10.1016/j.scico.2009.09.010
   YEUNG W, METHODS SYST DES, V22
   ZIC JJ, 1994, ACM T PROGR LANG SYS, V16, P1661, DOI 10.1145/197320.197322
NR 28
TC 18
Z9 24
U1 1
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2012
VL 54
IS 2
BP 149
EP 161
DI 10.1016/j.infsof.2011.08.004
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 864ES
UT WOS:000298220400002
DA 2024-07-18
ER

PT J
AU Wen, JF
   Li, SX
   Lin, ZY
   Hu, Y
   Huang, CQ
AF Wen, Jianfeng
   Li, Shixian
   Lin, Zhiyong
   Hu, Yong
   Huang, Changqin
TI Systematic literature review of machine learning based software
   development effort estimation models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software effort estimation; Machine learning; Systematic literature
   review
ID DEVELOPMENT COST ESTIMATION; ARTIFICIAL NEURAL-NETWORKS; EFFORT
   PREDICTION; EMPIRICAL VALIDATION; GENETIC ALGORITHM; PROJECT EFFORT;
   ANALOGY; REGRESSION; INFORMATION; SELECTION
AB Context: Software development effort estimation (SDEE) is the process of predicting the effort required to develop a software system. In order to improve estimation accuracy, many researchers have proposed machine learning (ML) based SDEE models (ML models) since 1990s. However, there has been no attempt to analyze the empirical evidence on ML models in a systematic way.
   Objective: This research aims to systematically analyze ML models from four aspects: type of ML technique, estimation accuracy, model comparison, and estimation context.
   Method: We performed a systematic literature review of empirical studies on ML model published in the last two decades (1991-2010).
   Results: We have identified 84 primary studies relevant to the objective of this research. After investigating these studies, we found that eight types of ML techniques have been employed in SDEE models. Overall speaking, the estimation accuracy of these ML models is close to the acceptable level and is better than that of non-ML models. Furthermore, different ML models have different strengths and weaknesses and thus favor different estimation contexts.
   Conclusion: ML models are promising in the field of SDEE. However, the application of ML models in industry is still limited, so that more effort and incentives are needed to facilitate the application of ML models. To this end, based on the findings of this review, we provide recommendations for researchers as well as guidelines for practitioners. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Wen, Jianfeng; Li, Shixian] Sun Yat Sen Univ, Dept Comp Sci, Guangzhou 510275, Guangdong, Peoples R China.
   [Lin, Zhiyong] Guangdong Polytech Normal Univ, Dept Comp Sci, Guangzhou, Guangdong, Peoples R China.
   [Hu, Yong] Sun Yat Sen Univ, Inst Business Intelligence & Knowledge Discovery, Dept Commerce E, Guangdong Univ Foreign Studies, Guangzhou 510275, Guangdong, Peoples R China.
   [Huang, Changqin] S China Normal Univ, Engn Res Ctr Comp Network & Informat Syst, Guangzhou, Guangdong, Peoples R China.
C3 Sun Yat Sen University; Guangdong Polytechnic Normal University; Sun Yat
   Sen University; Guangdong University of Foreign Studies; South China
   Normal University
RP Wen, JF (corresponding author), Sun Yat Sen Univ, Dept Comp Sci, Guangzhou 510275, Guangdong, Peoples R China.
EM wjfsysu@gmail.com
RI Wen, Jianfeng/AAN-4940-2021; Wen, Jianfeng/B-8191-2011; Huang,
   Changqin/AAD-4590-2020
OI Wen, Jianfeng/0000-0002-5673-6004; Huang, Changqin/0000-0003-1371-2608
FU National Natural Science Foundation of China [61003066, 70801020,
   60940033]; Natural Science Foundation of Guangdong Province in China
   [10151063101000046]; Science and Technology Planning Project of
   Guangdong Province in China [2010B010600034]; Foundation for
   Distinguished Young Talents in Higher Education of Guangdong Province in
   China [LYM08074, LYM10097]; Guangdong University of Foreign Studies
FX The authors thank Prof. Magne Jorgensen for sharing BESTweb
   bibliographic library. We would also like to thank the reviewers for
   their insightful comments. We thank Dr. Hai Liu for his valuable
   suggestions on the English presentation of this paper. This research was
   supported by the National Natural Science Foundation of China (Grant
   Nos.: 61003066, 70801020, and 60940033), the Natural Science Foundation
   of Guangdong Province in China (Grant No.: 10151063101000046), the
   Science and Technology Planning Project of Guangdong Province in China
   (Grant No.: 2010B010600034), the Foundation for Distinguished Young
   Talents in Higher Education of Guangdong Province in China (Grant Nos.:
   LYM08074 and LYM10097), and the "211 Project" of Guangdong University of
   Foreign Studies.
CR Albrecht A.J., 1979, Em Proceedings of the Joint SHARE, GUIDE, and IBM Application Development Symposium, P83
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Alpaydin E, 2004, INTRO MACHINE LEARNI
   Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], 2007, The promise repository of empirical software engineering data
   [Anonymous], 1988, Qualitative research methods, DOI DOI 10.4135/9781412985000
   [Anonymous], 2010, SURGERY, DOI DOI 10.1016/J.SURG.2009.06.030
   [Anonymous], P EASE
   ARAUJO RA, 2010, P 22 INT C TOOLS ART, P160
   Auer M, 2006, IEEE T SOFTWARE ENG, V32, P83, DOI 10.1109/TSE.2006.1599418
   Azzeb M, 2008, LECT NOTES COMPUT SC, V5007, P123, DOI 10.1007/978-3-540-79588-9_12
   Azzeh M., 2008, P 4 INT WORKSH PRED, P71, DOI DOI 10.1145/1370788.1370805
   AZZEH M, 2009, P 5 INT C PRED MOD S, P1
   BAILEY JW, 1981, P 5 INT C SOFTW ENG, P107
   Berlin S, 2009, INFORM SOFTWARE TECH, V51, P738, DOI 10.1016/j.infsof.2008.09.007
   Bibi S, 2008, INFORM SOFTWARE TECH, V50, P656, DOI 10.1016/j.infsof.2007.06.004
   Bibi S, 2010, J SOFTW MAINT EVOL-R, V22, P121, DOI [10.1002/smr.451, 10.1002/spip.418]
   Bibi S, 2006, INT FED INFO PROC, V204, P533
   Bishop Christopher M, 2006, PATTERN RECOGN, V128, P1
   Boehm B, 1999, INFORM SOFTWARE TECH, V41, P937, DOI 10.1016/S0950-5849(99)00091-9
   Boehm B, 2000, ANN SOFTW ENG, V10, P177, DOI 10.1023/A:1018991717352
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Boehm BW., 1981, Software Engineering Economics
   Braga PL, 2007, PROC INT C TOOLS ART, P181, DOI 10.1109/ICTAI.2007.172
   Braga PL, 2007, IEEE IJCNN, P1595, DOI 10.1109/IJCNN.2007.4371196
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   BRIAND LC, 1992, IEEE T SOFTWARE ENG, V18, P931, DOI 10.1109/32.177363
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   Briand LC, 1999, P 21 INT C SOFTW ENG, DOI DOI 10.1145/302405.302647
   BRIAND LC, 2000, 0005 ISERN
   Burgess CJ, 2001, INFORM SOFTWARE TECH, V43, P863, DOI 10.1016/S0950-5849(01)00192-6
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   Corazza A., 2010, Proceedings of the 6th International Conference on Predictive Models in Software Engineering, p4:1, DOI [10.1145/1868328.1868335, DOI 10.1145/1868328.1868335]
   Corazzesi A, 2010, EMPIR SOFTW ENG, P1
   COSTAGLIOLA G, 2006, P INT C WEB ENG ICWE, P9
   Tronto IFD, 2008, J SYST SOFTWARE, V81, P356, DOI 10.1016/j.jss.2007.05.011
   Desharnais J. M., 1989, Analyse statistique de la productivitie des projects informatique a partie de la technique des point des function
   Dolado JJ, 2001, INFORM SOFTWARE TECH, V43, P61, DOI 10.1016/S0950-5849(00)00137-3
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Elish MO, 2009, EXPERT SYST APPL, V36, P10774, DOI 10.1016/j.eswa.2009.02.013
   Ferrucci Filomena, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P89, DOI 10.1109/SSBSE.2010.20
   Finnie GR, 1997, J SYST SOFTWARE, V39, P281, DOI 10.1016/S0164-1212(97)00055-1
   Gray A, 1997, INFORM SOFTWARE TECH, V39, P425, DOI 10.1016/S0950-5849(96)00006-7
   Gray A. R., 1999, Empirical Software Engineering, V4, P297, DOI 10.1023/A:1009849100780
   Grimstad S, 2006, INFORM SOFTWARE TECH, V48, P302, DOI 10.1016/j.infsof.2005.04.004
   HEEMSTRA FJ, 1992, INFORM SOFTWARE TECH, V34, P627, DOI 10.1016/0950-5849(92)90068-Z
   Heiat A, 2002, INFORM SOFTWARE TECH, V44, P911, DOI 10.1016/S0950-5849(02)00128-3
   Huang SJ, 2006, J INF SCI ENG, V22, P297
   Huang SJ, 2008, EUR J OPER RES, V188, P898, DOI 10.1016/j.ejor.2007.07.002
   Huang SJ, 2006, INFORM SOFTWARE TECH, V48, P1034, DOI 10.1016/j.infsof.2005.12.020
   Huang SJ, 2009, APPL INTELL, V30, P73, DOI 10.1007/s10489-007-0097-4
   Huang X, 2007, APPL SOFT COMPUT, V7, P29, DOI 10.1016/j.asoc.2005.06.007
   Idri A, 2004, STUD FUZZ SOFT COMP, V159, P64
   Idri Ah, 2007, Software Process and Product Measurement. International Conference, IWSM-Mensura 2007, P21
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Jeffery R, 2000, INFORM SOFTWARE TECH, V42, P1009, DOI 10.1016/S0950-5849(00)00153-1
   Jingzhou Li, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P126
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M, 2007, INT J FORECASTING, V23, P449, DOI 10.1016/j.ijforecast.2007.05.008
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Jun ES, 2001, EXPERT SYST APPL, V21, P1, DOI 10.1016/S0957-4174(01)00021-5
   KADODA G, 2000, P C EV ASS SOFTW ENG
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Keung JW, 2008, IEEE T SOFTWARE ENG, V34, P471, DOI 10.1109/TSE.2008.34
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kultur Y, 2009, KNOWL-BASED SYST, V22, P395, DOI 10.1016/j.knosys.2009.05.001
   Kumar KV, 2008, J SYST SOFTWARE, V81, P1853, DOI 10.1016/j.jss.2007.12.793
   Lee A, 1998, INFORM MANAGE-AMSTER, V34, P1, DOI 10.1016/S0378-7206(98)00041-X
   Li JZ, 2008, EMPIR SOFTW ENG, V13, P63, DOI 10.1007/s10664-007-9054-4
   Li JZ, 2007, EMPIR SOFTW ENG, V12, P65, DOI 10.1007/s10664-006-7552-4
   Li YF, 2009, EMPIR SOFTW ENG, V14, P603, DOI 10.1007/s10664-008-9104-6
   Li YF, 2009, EXPERT SYST APPL, V36, P5921, DOI 10.1016/j.eswa.2008.07.062
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   MacDonell SG, 2003, J SYST SOFTWARE, V66, P91, DOI 10.1016/S0164-1212(02)00067-5
   MACDONELL SG, 2007, P EMP SOFTW ENG MEAS, P401
   Mair C, 2000, J SYST SOFTWARE, V53, P23, DOI 10.1016/S0164-1212(00)00005-4
   Mair C, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P491, DOI 10.1109/ISESE.2005.1541858
   Mendes E, 2005, J SYST SOFTWARE, V77, P157, DOI 10.1016/j.jss.2004.08.034
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Mendes E, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P79, DOI 10.1109/ISESE.2002.1166928
   MENDES E, 2007, P ACM IEEE INT S EMP, P334
   Mendes E, 2008, J SYST SOFTWARE, V81, P673, DOI 10.1016/j.jss.2007.07.044
   Mendes E, 2008, IEEE T SOFTWARE ENG, V34, P723, DOI 10.1109/TSE.2008.64
   MITCHELL T, 1989, ANNU REV COMPUT SCI, V4, P417
   Mittas N, 2008, INFORM SOFTWARE TECH, V50, P221, DOI 10.1016/j.infsof.2007.04.001
   Mittas N, 2010, EMPIR SOFTW ENG, V15, P523, DOI 10.1007/s10664-010-9128-6
   Molokken-Ostvold K, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P208, DOI 10.1109/METRIC.2004.1357904
   MUKHOPADHYAY T, 1992, MIS QUART, V16, P155, DOI 10.2307/249573
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   Oliveira ALI, 2006, NEUROCOMPUTING, V69, P1749, DOI 10.1016/j.neucom.2005.12.119
   Oliveira ALI, 2010, INFORM SOFTWARE TECH, V52, P1155, DOI 10.1016/j.infsof.2010.05.009
   Park H, 2008, EXPERT SYST APPL, V35, P929, DOI 10.1016/j.eswa.2007.08.001
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   Pfleeger SL, 2005, IEEE SOFTWARE, V22, P66, DOI 10.1109/MS.2005.19
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Samson B, 1997, INFORM SOFTWARE TECH, V39, P55, DOI 10.1016/0950-5849(96)01124-X
   Seo YS., 2008, P 4 INT WORKSH PRED, P25, DOI DOI 10.1145/1370788.1370796
   Setiono R, 2010, PROC INT C TOOLS ART, P45, DOI 10.1109/ICTAI.2010.82
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shepperd M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P304, DOI 10.1109/FOSE.2007.23
   Shin M, 2000, IEEE T SOFTWARE ENG, V26, P567, DOI 10.1109/32.852743
   Shukla KK, 2000, INFORM SOFTWARE TECH, V42, P701, DOI 10.1016/S0950-5849(00)00114-2
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Stamelos I, 2003, INFORM SOFTWARE TECH, V45, P51, DOI 10.1016/S0950-5849(02)00163-5
   Stensrud E, 2001, INFORM SOFTWARE TECH, V43, P413, DOI 10.1016/S0950-5849(01)00147-1
   Stensrud E, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P205, DOI 10.1109/METRIC.1998.731247
   Stewart B, 2002, J SOFTW MAINT EVOL-R, V14, P161, DOI 10.1002/smr.250
   Tuan Khanh Le-Do, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P503, DOI 10.1109/COMPSAC.2010.56
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   Walkerden F., 1997, ADV COMPUT, V44, P59, DOI DOI 10.1016/S0065-2458(08)60337-X
   Wen JF, 2009, ASIA PAC SOFWR ENG, P179, DOI 10.1109/APSEC.2009.40
   Wieczorek I, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P237, DOI 10.1109/METRIC.2002.1011342
   Wittig G, 1997, INFORM SOFTWARE TECH, V39, P469, DOI 10.1016/S0950-5849(97)00004-9
   Wittig G., 1994, AUSTR J INFORM SYSTE, V1, P87, DOI DOI 10.3127/AJIS.V1I2.424
   Wohlin C, 2009, INFORM SOFTWARE TECH, V51, P2, DOI 10.1016/j.infsof.2008.09.012
   Zhang D, 2003, SOFTWARE QUAL J, V11, P87, DOI 10.1023/A:1023760326768
   Zhang GQ, 1998, INT J FORECASTING, V14, P35, DOI 10.1016/S0169-2070(97)00044-7
NR 126
TC 304
Z9 316
U1 2
U2 89
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2012
VL 54
IS 1
BP 41
EP 59
DI 10.1016/j.infsof.2011.09.002
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 859JA
UT WOS:000297871500003
DA 2024-07-18
ER

PT J
AU Ali, MS
   Babar, MA
   Chen, LP
   Stol, KJ
AF Ali, Muhammad Sarmad
   Babar, Muhammad Ali
   Chen, Lianping
   Stol, Klaas-Jan
TI A systematic review of comparative evidence of aspect-oriented
   programming
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Evidence-based software engineering; Systematic literature review;
   Aspect-oriented programming
AB Context: Aspect-oriented programming (AOP) promises to improve many facets of software quality by providing better modularization and separation of concerns, which may have system wide affect. There have been numerous claims in favor and against AOP compared with traditional programming languages such as Objective Oriented and Structured Programming Languages. However, there has been no attempt to systematically review and report the available evidence in the literature to support the claims made in favor or against AOP compared with non-AOP approaches.
   Objective: This research aimed to systematically identify, analyze, and report the evidence published in the literature to support the claims made in favor or against AOP compared with non-AOP approaches.
   Method: We performed a systematic literature review of empirical studies of AOP based development, published in major software engineering journals and conference proceedings.
   Results: Our search strategy identified 3307 papers, of which 22 were identified as reporting empirical studies comparing AOP with non-AOP approaches. Based on the analysis of the data extracted from those 22 papers, our findings show that for performance, code size, modularity, and evolution related characteristics, a majority of the studies reported positive effects, a few studies reported insignificant effects, and no study reported negative effects; however, for cognition and language mechanism, negative effects were reported.
   Conclusion: AOP is likely to have positive effect on performance, code size, modularity, and evolution. However its effect on cognition and language mechanism is less likely to be positive. Care should be taken using AOP outside the context in which it has been validated. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Babar, Muhammad Ali] IT Univ Copenhagen, DK-2300 Copenhagen, Denmark.
   [Ali, Muhammad Sarmad; Chen, Lianping; Stol, Klaas-Jan] Univ Limerick, Lero Irish Software Engn Res Ctr, Limerick, Ireland.
C3 IT University Copenhagen; University of Limerick
RP Babar, MA (corresponding author), IT Univ Copenhagen, Rued Langgaards Vej 7, DK-2300 Copenhagen, Denmark.
EM sarmad.ali@lero.ie; malibaba@itu.dk; lianping.chen@lero.ie;
   klaas-jan.stol@lero.ie
RI Stol, Klaas-Jan/I-6269-2013
OI Stol, Klaas-Jan/0000-0002-1038-5050; Ali, Muhammad
   Sarmad/0000-0002-7223-5322
FU Science Foundation Ireland [03/CE2/I303_1]; IRCSET [RS/2008/134]
FX This work was supported, in part, by Science Foundation Ireland Grant
   03/CE2/I303_1 to Lero and by IRCSET Grant no. RS/2008/134 to M. Ali
   Babar and Klaas-Jan Stol. We thanks Hesham Shokry, Aman-UI-Haq, and Deva
   Kumar for helping us in the initial searches for the literature used in
   this research. We are also thankful to the IST area editor, Barbara
   Kitchenham, and anonymous reviewers for providing useful comments to
   improve the paper.
CR Atkins D, 2004, BMJ-BRIT MED J, V328, P1490
   BERGMANS LMJ, 1992, P OOPSLA WORKSH OBJ
   Ceccato M., 2004, EL P 1 WORKSH ASP RE
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Ciolkowski M, 2007, LECT NOTES COMPUT SC, V4336, P20
   Colyer A, 2006, IEEE SOFTWARE, V23, P72, DOI 10.1109/MS.2006.26
   DIESTE O, 2007, P 1 INT S EMP SOFTW, P215
   Dijkstra E.W., 1982, EWD 447: On the role of scientific thought. Selected Writings on Computing: A Personal Perspective, P60, DOI DOI 10.1007/978-1-4612-5695-3
   Dyba T., 2007, Proc. of the First Int. Symp. on Empirical Software Engineering and Measurement, P225
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Gamma Erich., 1994, DESIGN PATTERNS
   Greenhalgh T., 2001, READ PAPER, V2nd
   HARRISON W, 1993, SIGPLAN NOTICES, V28, P411, DOI 10.1145/167962.165932
   Hatton L, 2007, COMPUTER, V40, P64, DOI 10.1109/MC.2007.58
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales Gregor., 2001, Proceedings of the 15th European Conference on Object-Oriented Programming, P327
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Laddad R, 2003, IEEE SOFTWARE, V20, P90, DOI 10.1109/MS.2003.1241372
   Lieberherr K., 1995, ADAPTIVE OBJECT ORIE
   McConnell Steve., 2004, Code Complete, V2nd ed
   Meyer B., 1988, Object-Oriented Software Construction
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Murphy GC, 2001, COMMUN ACM, V44, P75, DOI 10.1145/383845.383862
   Object Management Group (OMG), 1999, COMM OBJ REQ BROK AR
   Olson D.L., 2008, ADV DATA MINING TECH, DOI https://doi.org/10.1007/978-3-540-76917-0
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sant'Anna C., 2003, P BRAZILIAN S SOFTWA, P19
   Steimann F, 2006, ACM SIGPLAN NOTICES, V41, P481, DOI 10.1145/1167515.1167514
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   YAU SS, 1985, IEEE T SOFTWARE ENG, V11, P849, DOI 10.1109/TSE.1985.232544
   ZHAO J, 2004, P 10 INT SOFTW METR
NR 36
TC 52
Z9 53
U1 0
U2 27
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2010
VL 52
IS 9
BP 871
EP 887
DI 10.1016/j.infsof.2010.05.003
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 629QL
UT WOS:000280214700001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Feldt, R
   Angelis, L
   Torkar, R
   Samuelsson, M
AF Feldt, Robert
   Angelis, Lefteris
   Torkar, Richard
   Samuelsson, Maria
TI Links between the personalities, views and attitudes of software
   engineers
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Human factors; Personality; Attitudes; Empirical
   study; Statistical analysis
ID 5-FACTOR MODEL; PERFORMANCE
AB Context: Successful software development and management depends not only on the technologies. methods and processes employed but also on the judgments and decisions of the humans involved. These, in turn, are affected by the basic views and attitudes of the individual engineers.
   Objective: The objective of this paper is to establish if these views and attitudes can be linked to the personalities of software engineers.
   Methods: We summarize the literature on personality and software engineering and then describe an empirical study on 47 professional engineers in ten different Swedish software development companies. The study evaluated the personalities of these engineers via the IPIP 50-item five-factor personality test and prompted them on their attitudes towards and basic views on their professional activities.
   Results: We present extensive statistical analyses of their responses to show that there are multiple, significant associations between personality factors and software engineering attitudes. The tested individuals are more homogeneous in personality than a larger sample of individuals from the general population.
   Conclusion: Taken together, the methodology and personality test we propose and the associated statistical analyses can help find and quantify relations between complex factors in software engineering projects in both research and practice. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Feldt, Robert; Torkar, Richard] Blekinge Inst Technol, S-37225 Ronneby, Sweden.
   [Angelis, Lefteris] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
   [Samuelsson, Maria] Univ West, Dept Informat, S-46186 Trollhattan, Sweden.
C3 Blekinge Institute Technology; Aristotle University of Thessaloniki;
   University West - Sweden
RP Feldt, R (corresponding author), Blekinge Inst Technol, S-37225 Ronneby, Sweden.
EM robert.feldt@bth.se; lef@csd.auth.gr; rto@bth.se
OI Feldt, Robert/0000-0002-5179-4205
FU Knowledge Foundation in Sweden
FX The authors want to thank all the 47 participants in the 10 companies
   that took part in this research and their managers for allowing them to
   participate. We also want to acknowledge the helpful comments from the
   anonymous reviewers. This research was supported partly by the Knowledge
   Foundation in Sweden (under a research grant for the project BESQ).
CR Acuña ST, 2004, SOFTWARE PRACT EXPER, V34, P675, DOI 10.1002/spe.586
   AKAIKE H, 1974, IEEE T AUTOMAT CONTR, VAC19, P716, DOI 10.1109/TAC.1974.1100705
   [Anonymous], 1971, The Psychology of Computer Programming
   [Anonymous], 1987, Peopleware: Productive Projects and Teams
   [Anonymous], 1993, MONOGR STAT APPL PRO
   Atkinson R.L., 1993, INTRO PSYCHOL
   Barnett, 1992, An Introduction to Generalized Linear Models, V34, DOI DOI 10.2307/1269239
   BARTHOLOMEW DJ, 2002, TEXTS STAT SCI
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Blumberg M., 1982, ACAD MANAGE REV, V7, P560, DOI [10.5465/amr.1982.4285240, DOI 10.5465/AMR.1982.4285240]
   BROADBENT DE, 1971, DECISIONS STRESS
   BUCHANAN T, 2007, ONLINE IMPLEMENTATIO
   Capretz LF, 2003, INT J HUM-COMPUT ST, V58, P207, DOI 10.1016/S1071-5819(02)00137-4
   Chao J, 2006, AGILE 2006, PROCEEDINGS, P89, DOI 10.1109/AGILE.2006.20
   Curtis Bill, 1982, P 1982 C HUM FACT CO, P212
   Da Cunha AD, 2007, COMMUN ACM, V50, P109, DOI 10.1145/1230819.1241672
   FELDT R, 2008, ICSE WORKSH COGN HUM
   Furnham A, 2002, PERS INDIV DIFFER, V33, P1325, DOI 10.1016/S0191-8869(02)00016-8
   Goldberg L.R., 1999, Personality psychology in Europe, V7, P7, DOI DOI 10.1037/0022-3514.86.1.174
   Goldberg LR, 2006, J RES PERS, V40, P84, DOI 10.1016/j.jrp.2005.08.007
   Howard A, 2001, COMMUN ACM, V44, P23, DOI 10.1145/374308.374322
   Jung C.G., 1971, COLLECT WORKS, V6
   Karn J., 2006, ISESE 2006, P232
   Keirsey D., 1984, PLEASE UNDERSTAND ME
   KELLNER MI, 1991, ICSE91, P144
   Kichuk SL, 1997, J ENG TECHNOL MANAGE, V14, P195, DOI 10.1016/S0923-4748(97)00010-6
   Knuth D. E., ART COMPUTER PROGRAM, V2
   Likert R., 1932, TECHNIQUE MEASUREMEN, DOI 1933-01885-001
   Matthews G., 2000, HUMAN PERFORMANCE CO
   MCCRAE RR, 1989, J PERS, V57, P17, DOI 10.1111/j.1467-6494.1989.tb00759.x
   MCCRAE RR, 1992, J PERS, V60, P175, DOI 10.1111/j.1467-6494.1992.tb00970.x
   McCullagh P., 2019, Generalized linear models
   Myers Isabel Briggs, 1998, MBTI Manual: A Guide to the Development and Use of the Myers-Briggs Type Indicator
   Rothstein M. G., 2006, Human Resources Management Review, V16, P155, DOI 10.1016/j.hrmr.2006.03.004
   Rushton JP, 2008, PERS INDIV DIFFER, V45, P679, DOI 10.1016/j.paid.2008.07.015
   RUSHTON JP, J RES COMPUTING ED, V26
   Sabini J., 1995, Social psychology, V2nd
   Salgado JF, 1997, J APPL PSYCHOL, V82, P30, DOI 10.1037/0021-9010.82.1.30
   SAMUELSSON M, 2005, THESIS U W TROLLHATT
   Sfetsos P, 2006, LECT NOTES COMPUT SC, V4044, P43
   Smith D. C., 1989, Computer Personnel, V12, P12, DOI 10.1145/1036387.1036389
   *SPSS INC, SPSS WIND
   1992, NE0 PI R PROFESSIONA
NR 43
TC 92
Z9 101
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2010
VL 52
IS 6
BP 611
EP 624
DI 10.1016/j.infsof.2010.01.001
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 602PE
UT WOS:000278150500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Li, XT
   Fan, YS
   Madnick, S
   Sheng, QZ
AF Li, Xitong
   Fan, Yushun
   Madnick, Stuart
   Sheng, Quan Z.
TI A pattern-based approach to protocol mediation for web services
   composition
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Service oriented architecture; Web service; Service composition;
   Protocol mediation; BPEL
ID FLOW
AB Context: With the increasing popularity of Service Oriented Architecture (SOA), service composition is gaining momentum as the potential silver bullet for application integration. However, services are not always perfectly compatible and therefore cannot be directly composed. Service mediation, roughly classified into signature and protocol ones, thus becomes one key working area in SOA.
   Objective: As a challenging problem, protocol mediation is still open and existing approaches only provide partial solutions. Further investigation on a systematic approach is needed.
   Methods: In this paper, an approach based on mediator patterns is proposed to generate executable mediators and glue partially compatible services together. The mediation process and its main steps are introduced. By utilizing message mapping, a heuristic technique for identifying protocol mismatches and selecting appropriate mediator patterns is presented. The corresponding BPEL templates of these patterns are also developed.
   Results: A prototype system, namely Service Mediation Toolkit (SMT), has been implemented to validate the feasibility and effectiveness of the proposed approach.
   Conclusion: The approach along with the prototype system facilitate the existing practice of protocol mediation for Web services composition. (c) 2009 Elsevier B.V. All rights reserved.
C1 [Li, Xitong; Fan, Yushun] Tsinghua Univ, Dept Automat, Beijing 100084, Peoples R China.
   [Madnick, Stuart] MIT, Alfred P Sloan Sch Management, Cambridge, MA 02142 USA.
   [Sheng, Quan Z.] Univ Adelaide, Sch Comp Sci, Adelaide, SA 5005, Australia.
C3 Tsinghua University; Massachusetts Institute of Technology (MIT);
   University of Adelaide
RP Li, XT (corresponding author), Tsinghua Univ, Dept Automat, Beijing 100084, Peoples R China.
EM lxt04@mails.tsinghua.edu.cn
RI xitong, Li/GQA-3559-2022; Madnick, Stuart E/A-8465-2011; Sheng, Quan
   Z./ITV-5105-2023; Sheng, Quan Z./B-8169-2008
OI xitong, Li/0000-0003-4807-1556; Sheng, Quan Z./0000-0002-3326-4147;
   Sheng, Quan Z./0000-0002-3326-4147
FU National Natural Science Foundation of China [60674080, 60704027];
   National High-Tech R&D (863) Plan of China [2006AA04Z151, 2007AA04Z150];
   National Basic Research Development (973) Program of China
   [2006CB705407]
FX This work was supported by National Natural Science Foundation of China
   (No. 60674080 and No. 60704027), National High-Tech R&D (863) Plan of
   China (No. 2006AA04Z151 and No. 2007AA04Z150) and National Basic
   Research Development (973) Program of China (No. 2006CB705407).
CR Becker S, 2006, LECT NOTES COMPUT SC, V3938, P193
   BENATALLAH B, 2005, P INT C ADV INF SYST
   Bracciali A, 2005, J SYST SOFTWARE, V74, P45, DOI 10.1016/j.jss.2003.05.007
   Chou SC, 2004, INFORM SOFTWARE TECH, V46, P729, DOI 10.1016/j.infsof.2003.12.006
   Dumas M, 2006, LECT NOTES COMPUT SC, V4102, P65
   Feng Jiang, 2008, GPC Workshops - 2008 3rd International Conference on Grid and Pervasive Computing Workshops, P3
   Huang SM, 2008, INFORM SOFTWARE TECH, V50, P1069, DOI 10.1016/j.infsof.2007.10.014
   Jensen K., 1997, MONOGRAPHS THEORETIC, V1-3
   Kim IG, 2007, J SYST SOFTWARE, V80, P1797, DOI 10.1016/j.jss.2007.02.047
   LI X, 2008, P ASP DAC IN PRESS, P3
   Li Xi-tong, 2008, Computer Integrated Manufacturing Systems, V14, P675
   Li XT, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P137, DOI 10.1109/WICSA.2008.13
   Li XT, 2007, SIXTH INTERNATIONAL CONFERENCE ON GRID AND COOPERATIVE COMPUTING, PROCEEDINGS, P315, DOI 10.1109/GCC.2007.1
   Maamar Z, 2006, INFORM SOFTWARE TECH, V48, P540, DOI 10.1016/j.infsof.2005.05.011
   NEZHAD H.R. MOTAHARI., 2007, 16th international conference on World Wide Web (WWW '07), P993, DOI [10.1145/1242572.1242706, DOI 10.1145/1242572.1242706]
   Ouyang C, 2007, SCI COMPUT PROGRAM, V67, P162, DOI 10.1016/j.scico.2007.03.002
   Papazoglou MP, 2007, COMPUTER, V40, P38, DOI 10.1109/MC.2007.400
   Papazoglou MP, 2007, VLDB J, V16, P389, DOI 10.1007/s00778-007-0044-3
   POKRAEV S, 2006, OP INTEROP WORKSH EN, P659
   Rahm E, 2001, VLDB J, V10, P334, DOI 10.1007/s007780100057
   Schmidt MT, 2005, IBM SYST J, V44, P781, DOI 10.1147/sj.444.0781
   Shinjo Y, 2004, INFORM SOFTWARE TECH, V46, P351, DOI 10.1016/j.infsof.2003.09.013
   SZOMSZOR M, 2006, P INT C WEB SERV ICW
   Tan W, 2009, IEEE T AUTOM SCI ENG, V6, P94, DOI 10.1109/TASE.2008.916747
   van der Aalst WMP, 2008, INFORM SOFTWARE TECH, V50, P131, DOI 10.1016/j.infsof.2006.11.004
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   WU C, 2007, P 21 INT C ADV INF N
   Yellin DM, 1997, ACM T PROGR LANG SYS, V19, P292, DOI 10.1145/244795.244801
   Younas M, 2005, ADV ENG INFORM, V19, P143, DOI 10.1016/j.aei.2005.05.009
   Yu Q, 2008, VLDB J, V17, P537, DOI 10.1007/s00778-006-0020-3
   Zaremski A. M., 1995, ACM Transactions on Software Engineering and Methodology, V4, P146, DOI 10.1145/210134.210179
NR 31
TC 22
Z9 26
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2010
VL 52
IS 3
BP 304
EP 323
DI 10.1016/j.infsof.2009.11.002
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 571PF
UT WOS:000275765900005
DA 2024-07-18
ER

PT J
AU Chang, CP
   Chu, CP
   Yeh, YF
AF Chang, Ching-Pao
   Chu, Chih-Ping
   Yeh, Yu-Fang
TI Integrating in-process software defect prediction with association
   mining to discover defect pattern
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software defect prediction; Association rule; Multi-interval
   discretization
ID CLASSIFICATION; QUALITY
AB Rather than detecting defects at an early stage to reduce their impact, defect prevention means that defects are prevented from occurring in advance. Causal analysis is a common approach to discover the causes of defects and take corrective actions. However, selecting defects to analyze among large amounts of reported defects is time consuming, and requires significant effort. To address this problem, this study proposes a defect prediction approach where the reported defects and performed actions are utilized to discover the patterns of actions which are likely to cause defects. The approach proposed in this study is adapted from the Action-Based Defect Prediction (ABDP), an approach uses the classification with decision tree technique to build a prediction model, and performs association rule mining on the records of actions and defects. An action is defined as a basic operation used to perform a software project, while a defect is defined as software flaws and can arise at any stage of the software process. The association rule mining finds the maximum rule set with specific minimum support and confidence and thus the discovered knowledge can be utilized to interpret the prediction models and software process behaviors. The discovered patterns then can be applied to predict the defects generated by the subsequent actions and take necessary corrective actions to avoid defects. The proposed defect prediction approach applies association rule mining to discover defect patterns, and multi-interval discretization to handle the continuous attributes of actions.
   The proposed approach is applied to a business project, giving excellent prediction results and revealing the efficiency of the proposed approach. The main benefit of using this approach is that the discovered defect patterns can be used to evaluate subsequent actions for in-process projects, and reduce variance of the reported data resulting from different projects. Additionally, the discovered patterns can be used in causal analysis to identify the causes of defects for software process improvement. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Chang, Ching-Pao; Chu, Chih-Ping] Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, Tainan 701, Taiwan.
   [Yeh, Yu-Fang] Natl Changhua Univ Educ, Dept Business Educ, Changhua 500, Taiwan.
C3 National Cheng Kung University; National Changhua University of
   Education
RP Chang, CP (corresponding author), Natl Cheng Kung Univ, Dept Comp Sci & Informat Engn, 1 Ta Hsueh Rd, Tainan 701, Taiwan.
EM chingpao@ms28.hinet.net
FU National Science Council of Taiwan, ROC [NSC-92-2213-E-309-005];
   Ministry of Economic Affairs of Taiwan [93-EC-17-A-02-S1-029]
FX This work is partially supported by the National Science Council of
   Taiwan, ROC, under Grant NSC-92-2213-E-309-005, and partially sponsored
   by the Ministry of Economic Affairs of Taiwan, under grant
   93-EC-17-A-02-S1-029.
CR [Anonymous], 2001, ADAP COMP MACH LEARN
   [Anonymous], P 14 BRIT NAT C DAT
   [Anonymous], ADV KNOWLEDGE DISCOV
   [Anonymous], 2014, Software engineering: a practitioner's approach
   Basile TMA, 2005, LECT NOTES ARTIF INT, V3673, P430
   Bibi S, 2008, EXPERT SYST APPL, V34, P2091, DOI 10.1016/j.eswa.2007.02.012
   BOEHM B, 2001, IEEE COMPUT, V34, P2
   Boulle M, 2004, MACH LEARN, V55, P53, DOI 10.1023/B:MACH.0000019804.29836.05
   Chang CP, 2007, J SYST SOFTWARE, V80, P559, DOI 10.1016/j.jss.2006.09.009
   CHANG CP, 2007, J SOFTWARE ENG STUDI, V2, P138
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Cusumano M., 1991, JAPANS SOFTWARE FACT
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fenton N, 2007, INFORM SOFTWARE TECH, V49, P32, DOI 10.1016/j.infsof.2006.09.001
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Han J., 2006, DATA MINING CONCEPTS
   Huntley CL, 2003, IEEE T ENG MANAGE, V50, P485, DOI 10.1109/TEM.2003.820136
   Japkowicz N., 2002, Intelligent Data Analysis, V6, P429
   KHOSHGOFTAAR TM, 1995, J SYST SOFTWARE, V29, P85, DOI 10.1016/0164-1212(94)00130-F
   Khoshgoftaar TM, 2000, IEEE T RELIAB, V49, P4, DOI 10.1109/24.855532
   Lawler J, 2003, IEEE SOFTWARE, V20, P68, DOI 10.1109/MS.2003.1196324
   Leszak M, 2002, J SYST SOFTWARE, V61, P173, DOI 10.1016/S0164-1212(01)00146-7
   Li JY, 2004, J INTELL INF SYST, V22, P155, DOI 10.1023/B:JIIS.0000012468.25883.a5
   Liu B, 2000, IEEE INTELL SYST APP, V15, P47, DOI 10.1109/5254.889106
   Liu B, 2003, APPL INTELL, V18, P119, DOI 10.1023/A:1021931008240
   Lutz RR, 2003, J SYST SOFTWARE, V65, P155, DOI 10.1016/S0164-1212(02)00057-2
   MAYS RG, 1990, IBM SYST J, V29, P4, DOI 10.1147/sj.291.0004
   Michalak K., 2006, Int. J. Appl. Math. Comput. Sci, V16, P503
   Mohapatra S, 2001, PROC IEEE INT CONF S, P260, DOI 10.1109/ICSM.2001.972739
   Munson JC, 2006, ADV ENG SOFTW, V37, P327, DOI 10.1016/j.advengsoft.2005.07.003
   Ohlsson MC, 2001, J SOFTW MAINT EVOL-R, V13, P167, DOI 10.1002/smr.229
   PERNER P, 1998, P JOINT IAPR INT WOR, P475
   Pighin M, 1998, INFORM SOFTWARE TECH, V40, P861, DOI 10.1016/S0950-5849(98)00103-7
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   RAJEEV R, 2000, DATA MIN KNOWL DISC, V4, P315
   RASTOGI R, 2002, IEEE T KNOWL DATA EN, V14, P1041
   Salem AM, 2004, INFORM SOFTWARE TECH, V46, P781, DOI 10.1016/j.infsof.2003.10.008
   SHEN L, 2002, LECT NOTES COMPUTER, V2412, P181
   Srikant R., 1996, SIGMOD Record, V25, P1, DOI 10.1145/235968.233311
   Tay FEH, 2002, IEEE T KNOWL DATA EN, V14, P666, DOI 10.1109/TKDE.2002.1000349
   Thwin MMT, 2005, J SYST SOFTWARE, V76, P147, DOI 10.1016/j.jss.2004.05.001
   WANG K, 1998, P 4 INT C KNOWL DISC, P121
   Weiss G.M., 2004, ACM SIGKDD Explorations Newsletter, V6, DOI DOI 10.1145/1007730.1007734
   Westphal CR., 1998, DATA MINING SOLUTION
   Zhong S, 2004, IEEE INTELL SYST, V19, P20, DOI 10.1109/MIS.2004.1274907
NR 46
TC 25
Z9 26
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 375
EP 384
DI 10.1016/j.infsof.2008.04.008
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 386YX
UT WOS:000261919900011
DA 2024-07-18
ER

PT J
AU Qin, L
   Atluri, V
AF Qin, Li
   Atluri, Vijayalakshmi
TI Evaluating the validity of data instances against ontology evolution
   over the Semantic Web
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Ontology evolution; Data validity; Semantic Web
AB It is natural for ontologies to evolve over time. These changes could be at structural and semantic levels. Due to changes to ail ontology, its data instances may become invalid, and as a result, may become non-interpretable. In this paper, we address precisely this problem, validity of data instances due to ontological evolution. Towards this end, we make the following three novel contributions to the area of Semantic Web. First, we propose formal notions of structural validity and semantic validity of data instances, and then present approaches to ensure them. Second, we propose semantic view as part of an ontology, and demonstrate that it is sufficient to validate it data instance against the semantic view rather than the entire ontology. We discuss how the semantic view can be generated through ail implication analysis, i.e., how semantic changes to one component imply semantic changes to other components in the ontology. Third, we propose a validity identification approach that employs locally maintaining a hash value of the semantic view at the data instance. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Qin, Li] Fairleigh Dickinson Univ, Dept Informat Syst & Decis Sci, Teaneck, NJ 07666 USA.
   [Atluri, Vijayalakshmi] Rutgers State Univ, CIMIC, Newark, NJ 07102 USA.
   [Atluri, Vijayalakshmi] Rutgers State Univ, MSIS, Newark, NJ 07102 USA.
C3 Fairleigh Dickinson University; Rutgers University System; Rutgers
   University New Brunswick; Rutgers University Newark; Rutgers University
   System; Rutgers University New Brunswick; Rutgers University Newark
RP Qin, L (corresponding author), Fairleigh Dickinson Univ, Dept Informat Syst & Decis Sci, 1000 River Rd, Teaneck, NJ 07666 USA.
EM liqin@fdu.edu; atluri@cimic.rutgers.edu
OI Atluri, Vijayalakshmi/0000-0003-2068-780X
CR [Anonymous], OWL WEB ONTOLOGY LAN
   CARROLL JJ, 2003, LECT NOTES COMPUTER, V2870
   DOAN A, 2002, P WORLD WID WEB C WW
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Heflin J, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P443
   KLEIN M, 2002, P 21 INT C CONC MOD, P79
   KLEIN M, 2002, 13 INT C KNOWL ENG K
   KLEIN M, 2003, P WORKSH ONT DISTR S
   Klein M., 2003, WORKSH SEM INT ISWC
   Klein MichelCA., 2001, SWWS, P75
   MELNIK S, RDF API DRAFT CRYPTO
   MITRA P, 2005, 4 INT SEM WEB C ISWC
   Noy N., 2002, P NAT C ART INT AAAI
   NOY N, 2003, KNOWLEDGE INFORM SYS, V5
   Noy NF, 2003, INT J HUM-COMPUT ST, V59, P983, DOI 10.1016/j.ijhcs.2003.08.002
   NOY NF, 2000, 17 NAT C ART INT AAA
   NOY NF, 2004, 3 INT SEM WEB C ISWC
   QIN L, 2006, J DATA SEMANTICS, V5, P130
   QIN L, 23 INT C CONC MOD ER, P624
   QIN L, 2003, 10 ACM C COMP COMM S
   Qin L, 2006, INT J SEMANT WEB INF, V2, P1, DOI 10.4018/jswis.2006100101
   SAYERS C, 2003, HPL2003235
NR 22
TC 15
Z9 17
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2009
VL 51
IS 1
SI SI
BP 83
EP 97
DI 10.1016/j.infsof.2008.01.004
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 389FU
UT WOS:000262077500010
DA 2024-07-18
ER

PT J
AU Javed, F
   Mernik, M
   Gray, J
   Bryant, BR
AF Javed, Faizan
   Mernik, Marjan
   Gray, Jeff
   Bryant, Barrett R.
TI MARS: A metamodel recovery system using grammar inference
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE domain-specific modeling; metamodeling; reverse engineering; grammar
   inference
ID LANGUAGE
AB Domain-specific modeling (DSM) assists subject matter experts in describing the essential characteristics of a problem in their domain. When a metamodel is lost, repositories of domain models can become orphaned from their defining metamodel. Within the purview of model-driven engineering, the ability to recover the design knowledge in a repository of legacy models is needed.
   In this paper we describe MARS, a semi-automatic grammar-centric system that leverages grammar inference techniques to solve the metamodel recovery problem. The paper also contains an applicative case study, as well as experimental results from the recovery of several metamodels in diverse domains. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Javed, Faizan; Gray, Jeff; Bryant, Barrett R.] Univ Alabama Birmingham, Dept Comp & Informat Sci, Birmingham, AL 35294 USA.
   [Mernik, Marjan] Univ Maribor, Fac Elect Engn & Comp Sci, SLO-2000 Maribor, Slovenia.
C3 University of Alabama System; University of Alabama Birmingham;
   University of Maribor
RP Javed, F (corresponding author), Univ Alabama Birmingham, Dept Comp & Informat Sci, 1300 Univ Blvd, Birmingham, AL 35294 USA.
EM javedf@cis.uab.edu
RI Mernik, Marjan/A-1147-2008
OI Mernik, Marjan/0000-0002-2775-0667; Gray, Jeff/0000-0003-0082-6753
FU Direct For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [1052616] Funding Source: National Science
   Foundation
CR ALAANEN M, 2004, 606 TUCS
   BALASUBRAMANIAN K, 2006, IEEE COMPUTER    FEB, P33
   Bray T., 2004, Extensible Markup Language (XML) 1.0, VThird
   CHIDLOVSKII B, 2001, P 8 INT WORKSH KNOWL
   CLARK J, 1999, XSL TRANSFORMATION X
   Clark J., 1999, XML Path Language (XPath) Version 1.0
   Crepinsek M, 2005, ACM SIGPLAN NOTICES, V40, P39, DOI 10.1145/1064165.1064172
   Diskin Z., 2006, P 3 INT WORKSH MET S
   Favre JM, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P204, DOI 10.1109/WCRE.2004.15
   Favre JM, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P95, DOI 10.1109/CSMR.2001.914973
   Freund Y., 1993, Proceedings of the Twenty-Fifth Annual ACM Symposium on the Theory of Computing, P315, DOI 10.1145/167088.167191
   Garofalakis M., 2000, P 2000 ACM SIGMOD IN, P165
   GOLD EM, 1967, INFORM CONTROL, V10, P447, DOI 10.1016/S0019-9958(67)91165-5
   Graaf B, 2008, J SYST SOFTWARE, V81, P517, DOI 10.1016/j.jss.2007.06.007
   Gray J, 2004, LECT NOTES COMPUT SC, V3286, P361
   Gray J., 2007, CRC HDB DYNAMIC SYST
   Johann S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P362, DOI 10.1109/ASE.2004.1342765
   Kang Kyo C, 1990, Technical Report
   Karsai G, 2004, IEEE T CONTR SYST T, V12, P263, DOI 10.1109/TCST.2004.824311
   Lämmel R, 2001, IEEE SOFTWARE, V18, P78, DOI 10.1109/52.965809
   Lédeczi A, 2001, COMPUTER, V34, P44, DOI 10.1109/2.963443
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Mernik M., 2004, Informatica, V28, P245
   Mernik M, 2005, COMPUT LANG SYST STR, V31, P1, DOI 10.1016/j.cl.2004.02.001
   Mernik M, 2002, LECT NOTES COMPUT SC, V2304, P1
   PAZZANI M, 1992, MACH LEARN, V9, P57, DOI 10.1007/BF00993254
   PETERSON JL, 1977, COMPUT SURV, V9, P223, DOI 10.1145/356698.356702
   PEYTONJONES S, 1997, IMPLEMENTATION FUNCT
   Rissanen J, 1999, COMPUT J, V42, P260, DOI 10.1093/comjnl/42.4.260
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   SHARP D, 2000, P 1 SOFTW PROD LIN C, P353
   Simeon Jerome., 2003, Proceedings of the 30th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, P1, DOI [10.1145/604131.604132, DOI 10.1145/604131.604132]
   Sprinkle J, 2004, J VISUAL LANG COMPUT, V15, P291, DOI 10.1016/j.jvlc.2004.01.006
   van Deursen A, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P122, DOI 10.1109/WICSA.2004.1310696
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Wimmer M, 2006, LECT NOTES COMPUT SC, V3844, P159
   2006, GME USERS MAILING LI
   METAMODEL RECOVERY S
NR 38
TC 28
Z9 32
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2008
VL 50
IS 9-10
BP 948
EP 968
DI 10.1016/j.infsof.2007.08.003
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 324PG
UT WOS:000257529900008
DA 2024-07-18
ER

PT J
AU Liu, JYC
   Chen, VJ
   Chan, CL
   Lie, T
AF Liu, Julie Yu-Chih
   Chen, Victor J.
   Chan, Chien-Lung
   Lie, Ting
TI The impact of software process standardization on software flexibility
   and project management performance: Control theory perspective
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE project performance; software process improvement; software flexibility;
   standardization
ID PROCESS IMPROVEMENT; ORGANIZATIONAL CONTROL; EMPIRICAL-ASSESSMENT;
   SYSTEMS-DEVELOPMENT; QUALITY; MATURITY; DESIGN; UNCERTAINTY; KNOWLEDGE;
   SUCCESS
AB It has been assumed for years that process standardization in the development of software will improve the efficiency of the development project by the virtues of applying a learned procedure and tight controls. Past research, however, is inconclusive in the elements that must be in place to achieve the benefits. In this study, we employ the software quality principle of flexibility as a mediator variable to determine if certain design aspects play a key role in achieving the benefits to the project of process standardization. A survey of computer professionals indicates that software flexibility is a positive influence. System designers should apply standard processes but with an eye toward quality design principles. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Liu, Julie Yu-Chih; Chan, Chien-Lung; Lie, Ting] Yuan Ze Univ, Dept Informat Management, Chungli 32003, Taiwan.
   [Chen, Victor J.] Natl Cheng Kung Univ, Inst Telecommun Management, Tainan 701, Taiwan.
C3 Yuan Ze University; National Cheng Kung University
RP Lie, T (corresponding author), Yuan Ze Univ, Dept Informat Management, Chungli 32003, Taiwan.
EM imyuchih@saturn.yzu.edu.tw; victor@mail.ncku.edu.tw;
   clchan@im.yzu.edu.tw; tinglie@saturn.yzu.edu.tw
RI Chan, Chien-Lung/K-2086-2012; Chen, Victor/T-9177-2018
OI Chan, Chien-Lung/0000-0002-7486-7075; Chen, Victor/0000-0002-5247-3139;
   Liu, Julie Yu-Chih/0000-0002-0456-2858
CR Aaen I., 2007, Software Process Improvement and Practice, V12, P267, DOI 10.1002/spip.309
   Anderson BB, 2002, J SYST SOFTWARE, V61, P59, DOI 10.1016/S0164-1212(01)00114-5
   [Anonymous], 1993, TESTING STRUCTURAL E
   [Anonymous], 2001, SCANDINAVIAN J INFOR
   ARMSTRONG JS, 1977, J MARKETING RES, V14, P396, DOI 10.2307/3150783
   Ashrafi N, 2003, INFORM MANAGE-AMSTER, V40, P677, DOI 10.1016/S0378-7206(02)00096-4
   Barbacci M., 1995, CMUSEI95TR021
   BARON RM, 1986, J PERS SOC PSYCHOL, V51, P1173, DOI 10.1037/0022-3514.51.6.1173
   BASILI VR, 1995, SLOAN MANAGE REV, V37, P55
   Beath C.M., 1983, Proceedings of the Fourth International Conference on Information Systems, P133
   CHIN WW, 1994, PLS GRAPH MANUAL VER
   COBB RH, 1990, IEEE SOFTWARE, V7, P44, DOI 10.1109/52.60601
   Conradi R, 2002, IEEE SOFTWARE, V19, P92, DOI 10.1109/MS.2002.1020295
   Deephouse C., 1995, Journal of Management Information Systems, V12, P187
   Dekleva S, 1997, INFORM SYST RES, V8, P95, DOI 10.1287/isre.8.1.95
   DEKLEVA SM, 1992, MIS QUART, V16, P355, DOI 10.2307/249533
   Deligiannis I, 2003, J SYST SOFTWARE, V65, P127, DOI 10.1016/S0164-1212(02)00054-7
   Dybå T, 2005, IEEE T SOFTWARE ENG, V31, P410, DOI 10.1109/TSE.2005.53
   Ebert C, 1999, J SYST SOFTWARE, V46, P25, DOI 10.1016/S0164-1212(98)10086-9
   FERGUSON P, 1997, IEEE COMPUT, V30, P46
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   Ghiselli E.E., 1981, Measurement theory for the behavioral sciences
   Glass R.L., 2005, IEEE Software, V22, P3
   Hansen B, 2004, INT J INFORM MANAGE, V24, P457, DOI 10.1016/j.ijinfomgt.2004.08.007
   Hatton L, 1998, IEEE SOFTWARE, V15, P46, DOI 10.1109/52.676735
   HENDERSON JC, 1992, MANAGE SCI, V38, P757, DOI 10.1287/mnsc.38.6.757
   HICKEY A, 2003, COMPARATIVE TECHNOLO, V1, P255
   Hulland J, 1999, STRATEGIC MANAGE J, V20, P195, DOI 10.1002/(SICI)1097-0266(199902)20:2<195::AID-SMJ13>3.3.CO;2-Z
   HUMPHREY WS, 1991, IEEE SOFTWARE, V8, P11, DOI 10.1109/52.300031
   JACOBSON I, 1995, JOOP, P15
   Janz B. D., 1997, Journal of Management Information Systems, V14, P41
   Jiang JJ, 2004, INFORM MANAGE-AMSTER, V41, P279, DOI 10.1016/S0378-7206(03)00052-1
   Johnson DL, 2000, IEEE SOFTWARE, V17, P40, DOI 10.1109/52.854067
   Jones MC, 1996, INFORM MANAGE-AMSTER, V31, P57, DOI 10.1016/S0378-7206(96)01068-3
   Jorgensen M, 2006, INFORM SOFTWARE TECH, V48, P297, DOI 10.1016/j.infsof.2005.07.002
   Kerr S., 1977, ORG ADM SCI, V8, P135
   Kuilboer JP, 2000, INFORM SOFTWARE TECH, V42, P27, DOI 10.1016/S0950-5849(99)00054-3
   Kuperman V, 2006, J AM SOC INF SCI TEC, V57, P51, DOI 10.1002/asi.20252
   Leung H, 2001, J COMPUT INFORM SYST, V42, P26
   Linberg KR, 1999, J SYST SOFTWARE, V49, P177, DOI 10.1016/S0164-1212(99)00094-1
   LOCKE EA, 1981, PSYCHOL BULL, V90, P125, DOI 10.1037/0033-2909.90.1.125
   LOHMOLLER J, 1988, LATENT VARIABLE PATH
   Markeset T., 2003, Journal of Quality in Maintenance Engineering, V9, P376, DOI 10.1108/13552510310503231
   Nelson KM, 1996, MIS QUART, V20, P409, DOI 10.2307/249562
   NIDUMOLU S, 1995, INFORM SYST RES, V6, P191, DOI 10.1287/isre.6.3.191
   Nidumolu SR, 1996, INFORM MANAGE, V31, P135, DOI 10.1016/S0378-7206(96)01073-7
   OUCHI WG, 1977, ADMIN SCI QUART, V22, P95, DOI 10.2307/2391748
   OUCHI WG, 1979, MANAGE SCI, V25, P833, DOI 10.1287/mnsc.25.9.833
   PAULK MC, 1995, IEEE SOFTWARE, V12, P74, DOI 10.1109/52.363163
   PAULK MC, 1993, IEEE SOFTWARE, V10, P18, DOI 10.1109/52.219617
   Rainer A, 2002, J SYST SOFTWARE, V62, P71, DOI 10.1016/S0164-1212(01)00122-4
   Rifkin S, 2002, LECT NOTES COMPUT SC, V2349, P13
   Snowdon R. A., 2007, Software Process Improvement and Practice, V12, P21, DOI 10.1002/spip.307
   Sommerville I, 1999, IEEE T SOFTWARE ENG, V25, P784, DOI 10.1109/32.824395
   SWANSON K, 1991, MIS QUART, V15, P567, DOI 10.2307/249460
   von Wangenheim C. G., 2006, Software Process Improvement and Practice, V11, P329, DOI 10.1002/spip.276
   Ward RP, 2001, COMMUN ACM, V44, P105, DOI 10.1145/367211.367291
   Wateridge J., 1995, International Journal of Project Management, V13, P169, DOI 10.1016/0263-7863(95)00020-Q
   WERTS CE, 1974, EDUC PSYCHOL MEAS, V34, P25, DOI 10.1177/001316447403400104
   WOHLWEND H, 1993, PROC INT CONF SOFTW, P212, DOI 10.1109/ICSE.1993.346042
NR 60
TC 28
Z9 34
U1 0
U2 14
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2008
VL 50
IS 9-10
BP 889
EP 896
DI 10.1016/j.infsof.2008.01.002
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 324PG
UT WOS:000257529900004
DA 2024-07-18
ER

PT J
AU Bush, AA
   Tiwana, A
   Tsuji, H
AF Bush, Ashley A.
   Tiwana, Amrit
   Tsuji, Hiroshi
TI An empirical investigation of the drivers of software outsourcing
   decisions in Japanese organizations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE outsourcing; project management; global software development; Japan
ID INFORMATION; MANAGEMENT; RISK; TRUST; MODEL; US
AB Although Japan represents the single largest Asian market and 10% of the global software outsourcing market, little is understood about how Japanese companies make software project outsourcing decisions. Tried-and-tested outsourcing models consistently fail to predict the outsourcing decisions of Japanese companies, leaving global software development companies with little usable guidance in the Japanese outsourcing market. Analyses of 396 software project outsourcing decisions made by 33 IT managers in Toshiba, Hitachi, Fujitsu, IBM-Japan, and Mitsubishi provides novel insights into the drivers of Japanese software outsourcing decisions. The objective of this paper is to develop an analytic tool to predict the likelihood of a software project being outsourced by Japanese IT managers. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Bush, Ashley A.] Florida State Univ, Coll Business, Tallahassee, FL 32306 USA.
   [Tiwana, Amrit] Iowa State Univ, Ames, IA 50011 USA.
   [Tsuji, Hiroshi] Osaka Prefecture Univ, Grad Sch Engn, Osaka 5998531, Japan.
C3 State University System of Florida; Florida State University; Iowa State
   University; Osaka Metropolitan University
RP Bush, AA (corresponding author), Florida State Univ, Coll Business, Tallahassee, FL 32306 USA.
EM abush@fsu.edu; tiwana@iastate.edu; tsuji@cs.osakafu-u.ac.jp
OI Bush, Ashley/0009-0000-6504-7019
CR Aron R, 2005, J MANAGE INFORM SYST, V22, P37, DOI 10.1080/07421222.2005.11045852
   Babbie E.R., 1973, Survey research methods
   Banker RD, 2000, INFORM SYST RES, V11, P219, DOI 10.1287/isre.11.3.219.12209
   Bensaou M, 1997, INFORM SYST RES, V8, P107, DOI 10.1287/isre.8.2.107
   Bharadwaj A, 2005, IEEE T ENG MANAGE, V52, P449, DOI 10.1109/TEM.2005.856573
   BLACKBURN J., 2000, Communications of the ACM, V43, P200
   BUKSZAR E, 1988, ACAD MANAGE J, V31, P628, DOI 10.5465/256462
   Cavaye ALM, 1996, INFORM SYST J, V6, P227, DOI 10.1111/j.1365-2575.1996.tb00015.x
   Choudhury V, 2003, INFORM SYST RES, V14, P291, DOI 10.1287/isre.14.3.291.16563
   Cohen Linda., 2006, Multisourcing: Moving Beyond Outsourcing to Achieve Growth and Agility
   Cusumano MA, 2005, COMMUN ACM, V48, P25, DOI 10.1145/1089107.1089129
   Damian D, 2006, IEEE SOFTWARE, V23, P17, DOI 10.1109/MS.2006.126
   Dutta A, 2005, J MANAGE INFORM SYST, V22, P15, DOI 10.1080/07421222.2005.11045850
   FRASER MD, 1991, IEEE T SOFTWARE ENG, V17, P454, DOI 10.1109/32.90448
   Hickey AM, 2004, J MANAGE INFORM SYST, V20, P65, DOI 10.1080/07421222.2004.11045786
   Keil M, 2005, IEEE SOFTWARE, V22, P64, DOI 10.1109/MS.2005.58
   Keil M, 2002, INFORM SYST J, V12, P103, DOI 10.1046/j.1365-2575.2002.00121.x
   Koh C, 2004, INFORM SYST RES, V15, P356, DOI 10.1287/isre.1040.0035
   Louviere JJ., 1988, ANAL DECISION MAKING
   MATSUBARA T, 2001, IEEE SOFTWARE    SEP, P77
   NONAKA I, 1994, ORGAN SCI, V5, P14, DOI 10.1287/orsc.5.1.14
   Oza NV, 2006, INFORM SOFTWARE TECH, V48, P345, DOI 10.1016/j.infsof.2005.09.011
   Pare G, 1997, INFORMATION SYSTEMS AND QUALITATIVE RESEARCH, P542
   PASCALE RT, 1978, ADMIN SCI QUART, V23, P91, DOI 10.2307/2392435
   Ramesh B, 2002, IEEE SOFTWARE, V19, P50, DOI 10.1109/MS.2002.1003454
   ROWEN RB, 1990, IEEE T ENG MANAGE, V37, P10, DOI 10.1109/17.45260
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   Sabherwal R, 1999, COMMUN ACM, V42, P80, DOI 10.1145/293411.293485
   Sengupta K, 1996, IEEE T SYST MAN CY A, V26, P177, DOI 10.1109/3468.485744
   Shepherd DA, 1999, MANAGE SCI, V45, P621, DOI 10.1287/mnsc.45.5.621
   STASSER G, 1985, J PERS SOC PSYCHOL, V48, P1467, DOI 10.1037/0022-3514.48.6.1467
   Tiwana A, 2004, COMMUN ACM, V47, P73, DOI 10.1145/1029496.1029497
   Tiwana A, 2004, INFORM SOFTWARE TECH, V46, P899, DOI 10.1016/j.infsof.2004.03.006
   TIWANA A, IN PRESS COMMUNICATI
   Tiwana A, 2007, J MANAGE INFORM SYST, V24, P259, DOI 10.2753/MIS0742-1222240108
   Tiwana A, 2006, DECISION SCI, V37, P357, DOI 10.1111/j.1540-5414.2006.00131.x
   Tiwana A, 2006, IEEE T ENG MANAGE, V53, P412, DOI 10.1109/TEM.2006.878099
   Wasti SN, 1999, IEEE T ENG MANAGE, V46, P444, DOI 10.1109/17.797966
   Whiston S.C., 1993, J CAREER DEV, V19, P175
NR 39
TC 36
Z9 45
U1 1
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2008
VL 50
IS 6
BP 499
EP 510
DI 10.1016/j.infsof.2007.08.006
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 295WY
UT WOS:000255506100002
DA 2024-07-18
ER

PT J
AU González, MP
   Lorés, J
   Granollers, A
AF Gonzalez, Maria Paula
   Lores, Jesus
   Granollers, Antoni
TI Enhancing usability testing through datamining techniques:: A novel
   approach to detecting usability problem patterns for a context of use
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE usability engineering; qualitative usability testing; context of use;
   usability problem patterns; datamining; association rules; decision
   trees
ID LANGUAGE; STATE
AB Usability is a software attribute usually associated with the "ease of use and to learn" of a given interactive system. Nowadays usability evaluation is becoming an important part of software development, providing results based on quantitative and qualitative estimations. In this context, qualitative results are usually obtained through a Qualitative Usability Testing process which includes a number of different methods focused on analyzing the interface of a particular interactive system. These methods become complex when a large number of interactive systems belonging to the same context of use have to be jointly considered to provide a general diagnosis, as a considerable amount of information must be visualized and treated simultaneously. However, diagnosing the most general usability problems of a context of use as a whole from a qualitative viewpoint is a challenge for UE nowadays. Identifying such problems can help to evaluate a new interface belonging to this context, and to prevent usability errors when a novel interactive system is being developed. From a quantitative viewpoint, condensing results in singles scores, metrics or statistical functions is an acceptable solution for processing huge amounts of usability related information. Nevertheless, QUT processes need to keep their richness by prioritizing the "what" over the "how much/how many" questions related to the detection of usability problems.
   To cope with the above situation, this paper presents a new approach in which two datamining techniques (association rules and decision trees) are used to extend the existing Qualitative Usability Testing process in order to provide a general usability diagnosis of a given context of use from a qualitative viewpoint. In order to validate our proposal, usability problems patterns belonging to academic web-pages in Spanish-speaking countries are assessed by processing 3450 records which store qualitative information collected by means of a Heuristic Evaluation. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Gonzalez, Maria Paula] Consejo Nacl Invest Cient & Tecn, Natl Council Sci & Tech Res, RA-1033 Buenos Aires, DF, Argentina.
   [Gonzalez, Maria Paula] Univ Nacl Sur, Dept Comp Sci & Engn, VyGLab, Visualizat & Graph Res Lab, RA-8000 Bahia Blanca, Buenos Aires, Argentina.
   [Gonzalez, Maria Paula; Lores, Jesus; Granollers, Antoni] Univ Lleida, Grp GRIHO, Lerida 25001, Spain.
C3 Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET);
   National University of the South; Universitat de Lleida
RP González, MP (corresponding author), Consejo Nacl Invest Cient & Tecn, Natl Council Sci & Tech Res, Avda Rivadavia 1917, RA-1033 Buenos Aires, DF, Argentina.
EM mpg@cs.uns.edu.ar; tonig@cs.uns.edu.ar
RI Granollers, Toni/D-2496-2011
OI Granollers, Toni/0000-0001-9189-7308
CR [Anonymous], 2002, Usability Engineering: Scenario-based Development of Human-Computer Interaction
   [Anonymous], 1998, Contextual design: defining customer-centered systems
   [Anonymous], SCENARIO BASED DESIG
   [Anonymous], 1998, ISO 9241-11
   *ANSI, 2001, 3542001 ANSI NCITS
   BAILEY R, 2002, ACM, V3
   Bias Randolph., 1994, USABILITY INSPECTION, P63
   Brink T., 2002, DESIGN WEB SITES WOR
   Buchanan MC, 2005, ACM T MULTIM COMPUT, V1, P60, DOI 10.1145/1047936.1047942
   Carroll J., 2000, Making Use: Scenario-based Design of Human-Computer Interactions
   Choi DH, 2005, EXPERT SYST APPL, V29, P867, DOI 10.1016/j.eswa.2005.06.006
   Constantine L.L., 1999, Software for Use: A Practical Guide to the Models and Methods of Usage-Centered Design
   CORTES AF, 2000, RECOPILATION USABILI
   COYETTE A, LNCS
   Demsar J., 2004, ORANGE EXPT MACHINE
   Dicks R. S., 2002, SIGDOC 02 P 20 ANN I, P26
   Dumas J., 2000, PRACTICAL GUIDE USAB
   DUMAS JS, 2004, INTERACTIONS, P24
   Ferre X, 2005, LECT NOTES COMPUT SC, V3547, P202
   Finlay J, 1997, APPL ARTIF INTELL, V11, P633, DOI 10.1080/088395197117966
   GAFFNEY G, 1999, USABILITY TECHNIQUES
   GONZALEZ MP, 2006, EVALUATION CONTEXT U
   GONZALEZ MP, 2006, IN PRESS LECT NOTES
   Granollers T, 2006, HCI RELATED PAPERS OF INTERACCION 2004, P103, DOI 10.1007/1-4020-4205-1_9
   Han J., 2006, DATA MINING CONCEPTS
   HOLTZBLATT K, 1996, P CHI INT C
   Hornbæk K, 2006, INT J HUM-COMPUT ST, V64, P79, DOI 10.1016/j.ijhcs.2005.06.002
   Ian H.W., 2005, Data Mining: Practical machine Learning Tools and Techniques
   Imielinski T, 1999, DATA MIN KNOWL DISC, V3, P373, DOI 10.1023/A:1009816913055
   Ivory MY, 2001, ACM COMPUT SURV, V33, P470, DOI 10.1145/503112.503114
   Lorenz J, 2005, PHYSICA A, V355, P217, DOI 10.1016/j.physa.2005.02.086
   Mao JY, 2005, COMMUN ACM, V48, P105, DOI 10.1145/1047671.1047677
   Mayhew D.J., 1999, USABILITY ENG LIFECY
   MCGROW K, 2004, COMPUTERS INFORM NUR
   Mitchell T. M., 1997, MACHINE LEARNING
   Muller M. J., 1998, Interactions, V5, P13, DOI 10.1145/285213.285219
   Netz A, 2001, PROC INT CONF DATA, P379, DOI 10.1109/ICDE.2001.914850
   NIELSEN J, 1994, CHI 94 C COMP HUM FA
   Paterno F., 2000, APPL COMP
   Pyle D., 1999, DATA PREPARATION DAT
   Romei A, 2006, DATA KNOWL ENG, V57, P179, DOI 10.1016/j.datak.2005.04.007
   SAURO J, 2005, HCI05 ACM
   Snyder C., 2003, Paper Prototyping: The Fast and Easy Way to Design and Refne User Interfaces, VIllustrated
   Sutcliffe Alistair., 2002, User-Centred Requirements Engineering
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
   WHARTON C, 1994, USABILITY INSPECTION, P1994
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 50
TC 20
Z9 21
U1 0
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2008
VL 50
IS 6
BP 547
EP 568
DI 10.1016/j.infsof.2007.06.001
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 295WY
UT WOS:000255506100005
OA Green Published
DA 2024-07-18
ER

PT J
AU Gotlieb, A
   Denmat, T
   Botella, B
AF Gotlieb, Arnaud
   Denmat, Tristan
   Botella, Bernard
TI Goal-oriented test data generation for pointer programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE goal-oriented test data generation; constraint logic programming; static
   single assignment form; pointer variables
ID SINGLE-ASSIGNMENT FORM
AB Automatic test data generation leads to the identification of input values on which a selected path or a selected branch is executed within a program (path-oriented vs. goal-oriented methods). In both cases, several approaches based oil constraint solving exist, but in the presence of pointer variables only path-oriented methods have been proposed. Pointers are responsible for the existence of conditional aliasing problems that usually provoke the failure of the goal-oriented test data generation process. In this paper, we propose an overall constraint-based method that exploits the results of an intraprocedural points-to analysis and provides two specific constraint combinators for automatically generating goal-oriented test data. This approach correctly handles multi-levels stack-directed pointers that are mainly used in C programs. The method has been fully implemented in the test data generation tool INKA and first experiences in applying it to a variety of existing programs are presented. (c) 2006 Elsevier B.V. All rights reserved.
C1 INRIA, IRISA, F-35042 Rennes, France.
   THALES AEROSPACE, F-78851 Elancourt, France.
C3 Universite de Rennes; Inria; Thales Group
RP Gotlieb, A (corresponding author), INRIA, IRISA, Campus Beaulieu, F-35042 Rennes, France.
EM Arnaud.Gotlieb@irisa.fr
CR Binkley DW, 1998, J SYST SOFTWARE, V40, P17, DOI 10.1016/S0164-1212(97)00016-2
   Botella B, 2006, SOFTW TEST VERIF REL, V16, P97, DOI 10.1002/stvr.333
   BRANDIS MM, 1994, ACM T PROGR LANG SYS, V16, P1684, DOI 10.1145/197320.197331
   Carlsson M., 1997, P PROGR LANG IMPL LO
   Chen TY, 2001, P INT COMP SOFTW APP, P172, DOI 10.1109/CMPSAC.2001.960614
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   CYTRON R, 1993, P PROGR LANG DES IMP
   Demillo R. A., 1993, ACM Transactions on Software Engineering and Methodology, V2, P109, DOI 10.1145/151257.151258
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   EMAMI E, 1994, P PROGR LANG DES IMP
   Ferguson R., 1996, ACM Transactions on Software Engineering and Methodology, V5, P63, DOI 10.1145/226155.226158
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   GHIYA R, 1998, P S PRINC PROGR LANG
   Gotlieb A, 2000, LECT NOTES ARTIF INT, V1861, P399
   Gotlieb A., 2003, 27 IEEE ANN INT COMP
   GOTLIEB A, 1998, P INT S SOFTW TEST A, P53
   GOTLIEB A, 2006, 19 INT C SOFTW SYST
   HASTI R, 1998, P ACM SIGPLAN 98 C P, P97
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   KOWSHIK S, 2002, P INT C COMP ARCH SY
   Lapkowski C, 1998, LECT NOTES COMPUT SC, V1383, P128, DOI 10.1007/BFb0026427
   LIVSHITS VB, 2003, ACM SIGSOFT S FDN SO, P317
   MARRE B, 2004, P 19 IEEE INT C AUT
   Marriott K., 1998, PROGRAMMING CONSTRAI
   MEUDEC C, 2001, ATGEN AUTOMATIC TEST, V11, P81
   Nguyen Tran Sy, 2003, Software Engineering Notes, V28, P108, DOI 10.1145/949952.940087
   Offutt AJ, 1999, SOFTWARE PRACT EXPER, V29, P167, DOI 10.1002/(SICI)1097-024X(199902)29:2<167::AID-SPE225>3.0.CO;2-V
   Ostrand TJ., 1991, P S TEST AN VER, P74
   Sai-ngern S, 2005, INFORM SOFTWARE TECH, V47, P199, DOI 10.1016/j.infsof.2004.08.004
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   VISVANATHAN S, 2002, P 17 IEEE INT C AUT
   2002, INKA 6 US MANUAL
NR 32
TC 7
Z9 8
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2007
VL 49
IS 9-10
BP 1030
EP 1044
DI 10.1016/j.infsof.2006.10.016
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 199PQ
UT WOS:000248708100006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Higo, Y
   Kamiya, T
   Kusumoto, S
   Inoue, K
AF Higo, Yoshiki
   Kamiya, Toshihiro
   Kusumoto, Shinji
   Inoue, Katsuro
TI Method and implementation for investigating code clones in a software
   system
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software maintenance; code clone; software understanding; software
   metrics
AB Maintaining software systems is becoming more difficult as the size and complexity of software increase. One factor that complicates software maintenance is the presence of code clones. A code clone is a code fragment that has identical or similar code fragments to it in the source code. Code clones are introduced for various reasons such as reusing code by 'copy and paste'. If modifying a code clone with many similar code fragments, we must consider whether to modify each of them. Especially for large-scale software, such a process is very complicated and expensive. In this paper, we propose methods of visualizing and featuring code clones to support their understanding in large-scale software. The methods have been implemented as a tool called Gemini, which has applied to an open source software system. Application results show the usefulness and capability of our system. (c) 2006 Elsevier B.V. All rights reserved.
C1 Osaka Univ, Grad Sch Infromat Sci & Technol, Dept Software Sci, Toyonaka, Osaka 560, Japan.
   Natl Inst Adv Ind Sci & Technol, Informat Technol Res Inst, Tokyo 1010021, Japan.
C3 Osaka University; National Institute of Advanced Industrial Science &
   Technology (AIST)
RP Higo, Y (corresponding author), Osaka Univ, Grad Sch Infromat Sci & Technol, Dept Software Sci, 1-3 Machikaneyama Cho, Toyonaka, Osaka 560, Japan.
EM y-higo@ist.osaka-u.ac.jp; t-kamiya@aist.go.jp;
   kusumoto@ist.osaka-u.ac.jp; inoue@ist.osaka-u.ac.jp
CR BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   BAKER BS, 1992, COMPUTING SCIENCE AND STATISTICS : VOL 24, P49
   Balazinska M, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P98, DOI 10.1109/WCRE.2000.891457
   Basit Hamid Abdul, 2005, SIGSOFT Softw. Eng. Notes, V30, P156, DOI [10.1145/1095430.1081733, DOI 10.1145/1095430.1081733]
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   FOWLOR M, 1999, REFACTORING IMPROVIN
   JOHNSON JH, 1996, P 1996 C CTR ADV STU, P7
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser C, 2005, PROC IEEE INT CONF S, P305
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Mayrand J, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P244, DOI 10.1109/ICSM.1996.565012
   Rieger M, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P100, DOI 10.1109/WCRE.2004.25
   Ueda Y, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P327, DOI 10.1109/APSEC.2002.1183002
   Ueda Y, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P67, DOI 10.1109/METRIC.2002.1011326
   Walenstein A, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/WCRE.2003.1287259
   Yip S. W. L., 1994, Proceedings. 1994 First Asia-Pacific Software Engineering Conference, P70, DOI 10.1109/APSEC.1994.465272
NR 17
TC 18
Z9 24
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2007
VL 49
IS 9-10
BP 985
EP 998
DI 10.1016/j.infsof.2006.10.005
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 199PQ
UT WOS:000248708100003
DA 2024-07-18
ER

PT J
AU Rose, J
   Pedersen, K
   Hosbond, JH
   Kræmmergaard, P
AF Rose, Jeremy
   Pedersen, Keld
   Hosbond, Jens Henrik
   Kraemmergaard, Pernille
TI Management competences, not tools and techniques:: A grounded
   examination of software project management at WM-data
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software project management; software engineering; competence
ID LEARNING EFFECTIVENESS; EMPIRICAL-ANALYSIS; SYSTEM; KNOWLEDGE; RISK;
   SIMULATIONS; PRINCIPLES; FRAMEWORK; SUPPORT; QUALITY
AB Traditional software project management theory often focuses on desk-based development of software and algorithms, much in line with the traditions of the classical project management and software engineering. This can be described as a tools and techniques perspective, which assumes that software project management success is dependent on having the right instruments available, rather than on the individual qualities of the project manager or the cumulative qualities and skills of the software organisation. Surprisingly, little is known about how (or whether) these tools techniques are used in practice. This study, in contrast, uses a qualitative grounded theory approach to develop the basis for an alternative theoretical perspective: that of competence. A competence approach to understanding software project management places the responsibility for success firmly on the shoulders of the people involved, project members, project leaders, managers. The competence approach is developed through an investigation of the experiences of project managers in a medium sized software development company (WM-data) in Denmark. Starting with a simple model relating project conditions, project management competences and desired project outcomes, we collected data through interviews, focus groups and one large plenary meeting with most of the company's project managers. Data analysis employed content analysis for concept (variable) development and causal mapping to trace relationships between variables. In this way we were able to build up a picture of the competences project managers use in their daily work at WM-data, which we argue is also partly generalisable to theory. The discrepancy between the two perspectives is discussed, particularly in regard to the current orientation of the software engineering field. The study provides many methodological and theoretical starting points for researchers wishing to develop a more detailed competence perspective of software project managers' work. (C) 2007 Elsevier B.V. All rights reserved.
C1 Aalborg Univ, Dept Comp Sci, Aalborg, Denmark.
   Aarhus Univ, Aarhus Sch Business, Dept Business Studies, DK-8000 Aarhus C, Denmark.
C3 Aalborg University; Aarhus University
RP Rose, J (corresponding author), Aalborg Univ, Dept Comp Sci, Aalborg, Denmark.
EM jeremy@cs.aau.dk; keldp@cs.auu.dk; joenne@cs.auc.dk; PKJ@asb.dk
OI Rose, Jeremy/0000-0002-7858-9471
CR ABDELHAMID TK, 1991, SIMULATION, V56, P233, DOI 10.1177/003754979105600407
   Ambrosini V, 2001, J MANAGE STUD, V38, P811, DOI 10.1111/1467-6486.00260
   Andres HP, 2001, J MANAGE INFORM SYST, V18, P41
   Antoniol G, 2004, LECT NOTES COMPUT SC, V3103, P1425
   Barki H, 2001, J MANAGE INFORM SYST, V17, P37, DOI 10.1080/07421222.2001.11045666
   Barros MD, 2004, J SYST SOFTWARE, V70, P21, DOI 10.1016/S0164-1212(02)00155-3
   Barros MD, 2002, LECT NOTES COMPUT SC, V2319, P227
   Benediktsson O, 2003, SOFTWARE QUAL J, V11, P265, DOI 10.1023/A:1025809010217
   Berelson B., 1952, CONTENT ANAL COMMUNI
   Bernstein R.J., 1989, Social theories of Modern Societies: Anthony Giddens and his Critics
   Chang CK, 1999, IEEE SOFTWARE, V16, P80, DOI 10.1109/52.805479
   Chang CK, 2001, ANN SOFTW ENG, V11, P107, DOI 10.1023/A:1012543203763
   Charette RN, 1996, IEEE SOFTWARE, V13, P110, DOI 10.1109/52.526838
   Chatzigeorgiou A, 2003, INFORM SOFTWARE TECH, V45, P671, DOI 10.1016/S0950-5849(03)00074-0
   Chee CL, 1998, J SYST SOFTWARE, V43, P119, DOI 10.1016/S0164-1212(98)10027-4
   Chee CL, 1997, SOFTWARE PRACT EXPER, V27, P725, DOI 10.1002/(SICI)1097-024X(199706)27:6<725::AID-SPE105>3.0.CO;2-K
   Davison R, 2004, INFORM SYST J, V14, P65, DOI 10.1111/j.1365-2575.2004.00162.x
   de Amescua A, 2004, INFORM SYST MANAGE, V21, P78, DOI 10.1201/1078/44118.21.2.20040301/80425.11
   DEUTSCH MS, 1991, IEEE T ENG MANAGE, V38, P365, DOI 10.1109/17.97444
   DREIER A, 2000, LEARN ORGAN, V7, P52
   Gallivan MJ, 2003, INFORM SYST J, V13, P37, DOI 10.1046/j.1365-2575.2003.00138.x
   García MNM, 2004, LECT NOTES COMPUT SC, V3181, P341
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Guillen M., 1994, MODELS MANAGEMENT
   HAHN U, 1991, IEEE T SOFTWARE ENG, V17, P467, DOI 10.1109/32.90449
   Hansen B, 2004, INT J INFORM MANAGE, V24, P457, DOI 10.1016/j.ijinfomgt.2004.08.007
   HAPKE M, 1994, FUZZY SET SYST, V67, P101, DOI 10.1016/0165-0114(94)90211-9
   HARRISON W, 1992, IEEE T SOFTWARE ENG, V18, P1025, DOI 10.1109/32.177371
   HARVEY DA, 1995, GEC-J RES, V12, P26
   Hazeyama A, 1998, IEICE T INF SYST, VE81D, P1404
   HEEMSTRA FJ, 1992, INFORM SOFTWARE TECH, V34, P627, DOI 10.1016/0950-5849(92)90068-Z
   HOPPER P, 1987, EMERGENT GRAMMAR, V13, P139
   Huang SJ, 2001, INFORM MANAGE-AMSTER, V38, P449, DOI 10.1016/S0378-7206(00)00081-1
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   Keil M, 2000, MIS QUART, V24, P299, DOI 10.2307/3250940
   Keil M, 1995, MIS QUART, V19, P421, DOI 10.2307/249627
   Keil M, 2000, MIS QUART, V24, P631, DOI 10.2307/3250950
   Kellner MI, 1999, J SYST SOFTWARE, V46, P91, DOI 10.1016/S0164-1212(99)00003-5
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   KOMIYA S, 1995, IEICE T INF SYST, VE78D, P1142
   Komiya S, 2000, IEICE T INF SYST, VE83D, P627
   LEE GS, 1994, J SYST SOFTWARE, V26, P149, DOI 10.1016/0164-1212(94)90085-X
   LIU LC, 1989, SIGPLAN NOTICES, V24, P85
   Maxwell K, 1999, MANAGE SCI, V45, P787, DOI 10.1287/mnsc.45.6.787
   McGuire EG, 1996, SOFTWARE QUAL J, V5, P305, DOI 10.1007/BF00209188
   Moynihan T, 2002, INFORM MANAGE-AMSTER, V39, P377, DOI 10.1016/S0378-7206(01)00104-5
   MUNSON JC, 1990, J SYST SOFTWARE, V12, P283, DOI 10.1016/0164-1212(90)90051-M
   Myers MD, 1997, INFORMATION SYSTEMS AND QUALITATIVE RESEARCH, P276
   Nidumolu SR, 1996, INFORM MANAGE, V31, P135, DOI 10.1016/S0378-7206(96)01073-7
   Patton M. Q., 2015, Qualitative research and evaluation methods
   Paul RA, 1999, IEEE T KNOWL DATA EN, V11, P255, DOI 10.1109/69.755633
   Pfahl D, 2003, EMPIR SOFTW ENG, V8, P367, DOI 10.1023/A:1025320418915
   Pfahl D, 2004, INFORM SOFTWARE TECH, V46, P127, DOI 10.1016/S0950-5849(03)00115-0
   PHAN DD, 1995, INFORM MANAGE, V28, P271, DOI 10.1016/0378-7206(94)00046-L
   Pressman R.S., 2000, SOFTWARE ENG PRACTIT
   Raffo DM, 2000, J SYST SOFTWARE, V53, P31, DOI 10.1016/S0164-1212(00)00006-6
   Raffo DM, 2003, INT J SOFTW ENG KNOW, V13, P513, DOI 10.1142/S0218194003001445
   REXING GL, 1991, AT&T TECH J, V70, P40, DOI 10.1002/j.1538-7305.1991.tb00344.x
   Rodríguez D, 2004, LECT NOTES COMPUT SC, V3009, P287
   Schmidt C, 1999, INFORM SOFTWARE TECH, V41, P403, DOI 10.1016/S0950-5849(99)00011-7
   Schneider K, 1997, INT J SOFTW ENG KNOW, V7, P401, DOI 10.1142/S0218194097000242
   SENGUPTA K, 1993, MANAGE SCI, V39, P411, DOI 10.1287/mnsc.39.4.411
   Silverman David., 2001, Interpreting Qualitative Data: Methods for Analyzing Talk, Text, and Interaction, V2nd
   SOMERS T, 2001, HAW INT C SYST SCI
   SOMMERVILLE I, 2000, INT COMPUTER SCI SER
   Strauss A. L., 1997, Grounded Theory in Practice
   Vaishnavi V., 2004, DESIGN RES INFORM SY
   Walls JG, 1992, INFORM SYST RES, V3, P36, DOI 10.1287/isre.3.1.36
   WALSHAM G, 1995, EUR J INFORM SYST, V4, P74, DOI 10.1057/ejis.1995.9
   Walsham G, 1995, INFORM SYST RES, V6, P376, DOI 10.1287/isre.6.4.376
   WEIDE BW, 1993, INT J SOFTW ENG KNOW, V3, P351, DOI 10.1142/S0218194093000161
   WELLER EF, 1994, COMPUTER, V27, P27, DOI 10.1109/2.312035
NR 72
TC 32
Z9 41
U1 0
U2 27
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2007
VL 49
IS 6
BP 605
EP 624
DI 10.1016/j.infsof.2007.02.005
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 169NU
UT WOS:000246599700007
DA 2024-07-18
ER

PT J
AU Abrahao, S
   Poels, G
AF Abrahao, Silvia
   Poels, Geert
TI Experimental evaluation of an object-oriented function point measurement
   procedure
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE functional size measurement; function point analysis; OO-method function
   points; object-orientation; empirical software engineering
ID SOFTWARE; DESIGN
AB This paper presents an empirical study that evaluates OO-Method Function Points (OOmFP), a functional size measurement procedure for object-oriented systems that are specified using the OO-Method approach. A laboratory experiment with students was conducted to compare OOmFP with the IFPUG - Function Point Analysis (FPA) procedure on a range of variables, including efficiency, reproducibility, accuracy, perceived ease of use, perceived usefulness and intention to use. The results show that OOmFP is more time-consuming than FPA but the measurement results are more reproducible and accurate. The results also indicate that OOmFP is perceived to be more useful and more likely to be adopted in practice than FPA in the context of OO-Method systems development. We also report lessons learned and suggest improvements to the experimental procedure employed and replications of this study using samples of industry practitioners. (c) 2006 Elsevier B.V. All rights reserved.
C1 Valencia Univ Technol, Dept Comp Sci & Computat, Valencia 46022, Spain.
   Univ Ghent, Fac Econ & Business Adm, B-9000 Ghent, Belgium.
C3 Universitat Politecnica de Valencia; Ghent University
RP Abrahao, S (corresponding author), Valencia Univ Technol, Dept Comp Sci & Computat, Camino Vera S-N, Valencia 46022, Spain.
EM sabrahao@dsic.upv.es; Geert.Poels@UGent.be
RI Abrahão, Silvia/AAK-6976-2020; Poels, Geert/D-1130-2013
OI Abrahão, Silvia/0000-0003-3580-2014; Poels, Geert/0000-0001-9247-6150
CR ABRAHAO S, 2006, SOFTWARE SYSTEM MODE, V5, P48
   ABRAN A, 2003, COMM SOFTW MEAS INT
   Albrecht A.J., 1979, Em Proceedings of the Joint SHARE, GUIDE, and IBM Application Development Symposium, P83
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 1999, FUNCT POINT COUNT PR
   [Anonymous], 4032012 WST
   [Anonymous], 1989, MIS Q
   *ANSI IEEE, 1998, IEEE REC PRACT SOFTW
   ANTONIOL G, 1998, P 10 C ADV INF SYST, P59
   ASMA, 1994, SIZ OBJ OR ENV
   Banker R., 1992, J MANAGE INFORM SYST, V8, P127
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P313, DOI 10.1109/ICSE.1999.841022
   Briand L. C, 2001, P 7 INT S SOFTW METR, P260
   CAMPBELL DT, 1959, PSYCHOL BULL, V56, P81, DOI 10.1037/h0046016
   DEKKERS CA, 2001, IT METRICS STRATEGIE, V7
   FETCKE T, 1998, P 1 EUR SOFTW MEAS C, P395
   FETCKE T, 2001, P 11 INT WORKSH SOFT, P1
   Garmus David., 2000, Function Point Analysis: Measurement Practices for Successful Software Projects, V1th
   *ISO, 2002, 1414311998 ISOIEC
   *ISO, 2004, 141435 ISOIEC TR
   *ISO, 2003, 141433 ISO
   *ISO, 2002, 141434 ISOIEC TR
   ISO, 1998, 141431 ISOIEC
   JACQUET JP, 2008, P 8 INT WORKSH SOFTW, P43
   Kammelar J., 2000, P 4 INT ECOOP WORKSH
   KEMERER CF, 1993, COMMUN ACM, V36, P85, DOI 10.1145/151220.151230
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   LARANJEIRA LA, 1990, IEEE T SOFTWARE ENG, V16, P510, DOI 10.1109/32.52774
   LEHNE OA, 1997, P C OBJ OR PROGR SYS
   MARCH ST, 1995, DECIS SUPPORT SYST, V15, P251, DOI 10.1016/0167-9236(94)00041-2
   MINKIEWICZ F, 1999, PROJECT CONTROL SOFT
   Nunally J.C., 1978, Psychometric theory
   Pastor O, 2001, INFORM SYST, V26, P507, DOI 10.1016/S0306-4379(01)00035-7
   Rains E., 1991, OOPS Messenger, V2, P23
   Ram DJ, 2000, FIRST ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P121, DOI 10.1109/APAQ.2000.883785
   Rescher Nicholas., 1973, The Primacy of Practice
   Riemenschneider CK, 2002, IEEE T SOFTWARE ENG, V28, P1135, DOI 10.1109/TSE.2002.1158287
   Smith RK, 2001, IEEE T SOFTWARE ENG, V27, P264, DOI 10.1109/32.910861
   Sneed H., 1996, P 7 EUR SOFTW CONTR, P135
   STRAUB DW, 1989, MIS QUART, V13, P147, DOI 10.2307/248922
   Symons C.R.:., 1991, Software Sizing and Estimating: Mk II FPA
   THOMSON N, 1994, P OOPSLA 94 WORKSH P
   TORRES I, 2003, FUNCTION POINTS COUN
   Uemura T, 2001, J SOFTW MAINT EVOL-R, V13, P223, DOI 10.1002/smr.231
   Van Solingen Rini, 1999, The Goal/ Question/ Metric Method: a practical guide for quality improvement of software development
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   ZHAO H, 1995, P GSE C BERL GERM
NR 47
TC 13
Z9 13
U1 0
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2007
VL 49
IS 4
BP 366
EP 380
DI 10.1016/j.infsof.2006.06.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 149TB
UT WOS:000245168500005
DA 2024-07-18
ER

PT J
AU Gegick, M
   Williams, L
AF Gegick, Michael
   Williams, Laurie
TI On the design of more secure software-intensive systems by use of attack
   patterns
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software and system safety; patterns
AB Retrofitting security implementations to a released software-intensive system or to a system under development may require significant architectural or coding changes. These late changes can be difficult and more costly than if performed early in the software process. We have created regular expression-based attack patterns that show the sequential events that occur during an attack. By performing a Security Analysis for Existing Threats (SAFE-T), software engineers can match the symbols of a regular expression to their system design. An architectural analysis that identifies security vulnerabilities early in the software process can prepare software engineers for which security implementations are necessary when coding starts. A case study involving students in an upper-level undergraduate security course suggests that SAFE-T can be performed by relatively inexperienced engineers who are not experts in security. Data from the case study also suggest that the attack patterns do not restrict themselves to vulnerabilities in specific environments. (c) 2006 Elsevier B.V. All rights reserved.
C1 N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Gegick, M (corresponding author), N Carolina State Univ, Dept Comp Sci, 890 Oval Dr,Campus Box 8206, Raleigh, NC 27695 USA.
EM mcgegick@ncsu.edu; lawilli3@ncsu.edu
OI Gegick, Michael/0000-0002-5816-4118
CR [Anonymous], P 17 NAT COMP SEC C
   [Anonymous], DOBBS J
   ARBAUGH WA, 2000, IEEE, V3, P52
   Bishop M, 1996, COMPUT SYST, V9, P131
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   CARLSTEDT J, 1975, PATTERN DIRECTED PRO
   CHEN H, 2004, USING BUILD INTEGRAT
   Chen H., 2002, MOPS INFRASTRUCTURE
   CUNNINGHAM W, 1994, WIKIWIKIWEB
   GAMMA E, 1995, DESIGN PATTERNS
   GEGICK M, 2004, COMPUTER SCI, VMS
   GEGICK M, 2005, INT C SOFTW ENG SOFT
   Hansman S, 2005, COMPUT SECUR, V24, P31, DOI 10.1016/j.cose.2004.06.011
   Hoglund Greg, 2004, Exploiting Software: How to Break Code
   HOWARD M, 2003, WRITING SECURE MODE
   *IEEE, 1990, ANSI IEEE STAND GLOS
   Krsul I. V., 1998, THESIS PURDUE U W LA
   LANDWEHR C, 1994, ACM SIGSAC, V26
   McGraw G., 2006, Software security: building security in
   Moore A., 2001, ATTACK MODELING INFO
   Schumacher Markus, 2001, P 8 C PATT LANG PROG
   Stefan J., 2002, PROC SAC 2002, P253
   Viega J., 2002, BUILDING SECURE SOFT
NR 23
TC 18
Z9 19
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2007
VL 49
IS 4
BP 381
EP 397
DI 10.1016/j.infsof.2006.06.002
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 149TB
UT WOS:000245168500006
DA 2024-07-18
ER

PT J
AU Hong, KJ
   Kim, TG
AF Hong, KJ
   Kim, TG
TI DEVSpecL: DEVS specification language for modeling, simulation and
   analysis of discrete event systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE discrete event system; DEVS formalism; DEVS specification language;
   model testing; seamless design framework
AB Discrete EVent Systems Specification (DEVS) formalism supports specification of discrete event models in a hierarchical modular manner. This paper proposes it DEVS modeling language called DEVS Specification Language (DEVSpecL) based on which discrete event systems are modeled, simulated and analyzed within a DEVS-based framework for seamless systems design. Models specified in DEVSpecL can be translated in different forms of codes by code generators, which are executed with various tools for models verification, logical analysis, performance evaluation, and others. (c) 2005 Elsevier Ltd All rights reserved.
C1 Korea Adv Inst Sci & Technol, EECS Dept, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Hong, KJ (corresponding author), Korea Adv Inst Sci & Technol, EECS Dept, 373-1 Guseong Dong, Taejon 305701, South Korea.
EM kjhong@smslab.kaist.ac.kr
RI Kim, Tag Gon/C-2021-2011
CR [Anonymous], 1989, 8807 ISO
   Cho S.M., 2001, T SOC MODELING SIMUL, V18, P178
   DAHBURA AT, 1990, P IEEE, V78, P1317, DOI 10.1109/5.58319
   DOU C, 1995, IEEE GLOBECOM 95, V3, P1585
   HEISER JE, 1997, P IEEE AUTOTESTCON 1, P204
   Helovuo J, 2001, SECOND INTERNATIONAL CONFERENCE ON APPLICATION OF CONCURRENCY TO SYSTEMS DESIGN, PROCEEDINGS, P201, DOI 10.1109/CSD.2001.981777
   Holzmann G. J., 1991, Design and Validation of Comp. Protocols, V512
   Hong GP, 1996, T SOC COMPUT SIMUL, V13, P19
   Hong JS, 1997, DISCRETE EVENT DYN S, V7, P355, DOI 10.1023/A:1008262409521
   HONG KJ, 2005, THESIS DEP EECS KAIS
   *IEEE, 1998, 20031997 IEEE
   *IEEE, 1998, 8023 IEEE
   *ISO, 1987, 9074 ISO
   Kim TG, 2001, DISCRETE EVENT MODELING AND SIMULATION TECHNOLOGIES, P131
   KIM TG, 1994, DEVSIMPLUSPLUS USERS
   KIM TG, 1992, 1992 EUR SIM MULT YO, P152
   Milner R., 1989, Communication and concurrency
   THOMAS C, 1996, P AIS 96 LA JOLL CA, P371
   Zeigler BP., 2000, Theory of Modeling and Simulation
   [No title captured]
NR 20
TC 16
Z9 17
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2006
VL 48
IS 4
BP 221
EP 234
DI 10.1016/j.infsof.2005.04.008
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 027PP
UT WOS:000236427800001
DA 2024-07-18
ER

PT J
AU Green, GC
   Hevner, AR
   Collins, RW
AF Green, GC
   Hevner, AR
   Collins, RW
TI The impacts of quality and productivity perceptions on the use of
   software process improvement innovations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software process improvement (SPI) innovations; personal software
   process; software quality; development productivity
ID PERCEIVED USEFULNESS; INFORMATION-TECHNOLOGY; ACCEPTANCE; CREATION; EASE
AB Numerous software process improvement (SPI) innovations have been proposed to improve software development productivity and system quality; however, their diffusion in practice has been disappointing. This research investigates the adoption of the Personal Software Process on industrial software projects. Quantitative and qualitative analyses reveal that perceived increases in software quality and development productivity, project management benefits, and innovation fit to development tasks, enhance the usefulness of the innovation to developers. Results underscore the need to enrich current technology acceptance models with these constructs, and serve to encourage project managers to adopt formal SPI methods if developers perceive the methods will have positive impacts on their productivity and system quality. (c) 2004 Elsevier B.V. All rights reserved.
C1 Baylor Univ, Hankamer Sch Business, Dept Informat Syst, Waco, TX 76798 USA.
   Univ S Florida, Coll Business Adm, Informat Syst & Decis Sci Dept, Tampa, FL 33620 USA.
C3 Baylor University; State University System of Florida; University of
   South Florida
RP Baylor Univ, Hankamer Sch Business, Dept Informat Syst, POB 98005, Waco, TX 76798 USA.
EM gina_green@baylor.edu; ahevner@coba.usf.edu; rcollins@coba.usf.edu
CR ADAMS DA, 1992, MIS QUART, V16, P227, DOI 10.2307/249577
   Agarwal R, 2000, IEEE T ENG MANAGE, V47, P295, DOI 10.1109/17.865899
   Agarwal Ritu., 2000, Framing the Domains of IT Management Research, P85
   [Anonymous], 1997, INTRO PERSONAL SOFTW
   [Anonymous], 1962, DIFFUSION INNOVATION
   [Anonymous], P ACM SIGSOFT S FDN
   [Anonymous], 2003, CMMI guidlines for process integration and product improvement
   Armour PG, 2001, COMMUN ACM, V44, P15, DOI 10.1145/357489.357495
   Baddoo N, 2002, J SYST SOFTWARE, V62, P85, DOI 10.1016/S0164-1212(01)00125-X
   COMPEAU DR, 1995, COMMUN ACM, V39, P24
   CONRADI R, 2002, IEEE SOFTWARE    JUL, P92
   DAVIS FD, 1989, MANAGE SCI, V35, P982, DOI 10.1287/mnsc.35.8.982
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   DYBA T, 2001, THESIS NORWEGIAN U S
   Ebert C, 1999, J SYST SOFTWARE, V46, P25, DOI 10.1016/S0164-1212(98)10086-9
   Ferguson P, 1997, COMPUTER, V30, P24, DOI 10.1109/2.589907
   Fichman R.G., 2000, FRAMING DOMAINS IT M, P105
   FICHMAN RG, 1993, SLOAN MANAGE REV, V34, P7
   Fichman RG, 1999, INFORM SYST RES, V10, P255, DOI 10.1287/isre.10.3.255
   Frakes WB, 2001, J SYST SOFTWARE, V57, P99, DOI 10.1016/S0164-1212(00)00121-7
   Glass RL, 1999, COMMUN ACM, V42, P74, DOI 10.1145/293411.293481
   Goodhue DL, 1995, MANAGE SCI, V41, P1827, DOI 10.1287/mnsc.41.12.1827
   GREEN G, 1999, CMUSEI98SR013
   Hardgrave BC, 2003, J MANAGE INFORM SYST, V20, P123
   HARTWICK J, 1994, MANAGE SCI, V40, P440, DOI 10.1287/mnsc.40.4.440
   HAYES W, 1997, SEI97TR001 CARN MELL
   Humphrey WattsS., 2000, Introduction to the team software process
   Iivari J, 1996, COMMUN ACM, V39, P94, DOI 10.1145/236156.236183
   Kamatar J, 2000, IEEE SOFTWARE, V17, P85, DOI 10.1109/52.895173
   Khalifa M, 2000, IEEE T ENG MANAGE, V47, P360, DOI 10.1109/17.865904
   Kuilboer JP, 2000, INFORM SOFTWARE TECH, V42, P27, DOI 10.1016/S0950-5849(99)00054-3
   Lim KH, 2000, MIS QUART, V24, P449, DOI 10.2307/3250969
   Mathieson K., 2001, Data Base for Advances in Information Systems, V32, P86
   McGibbon T., 1999, BUSINESS CASE SOFTWA
   Morisio M, 1999, J SYST SOFTWARE, V49, P17, DOI 10.1016/S0164-1212(99)00063-1
   Nambisan S, 1999, MIS QUART, V23, P365, DOI 10.2307/249468
   Nunnally JC, 1978, PSYCHOMETRIC THEORY
   Pressman R.S., 1997, Software Engineering: a Practitioner's Approach
   Prowell S.J., 1999, SEI S SOFTW
   Rainer A, 2003, J SYST SOFTWARE, V66, P7, DOI 10.1016/S0164-1212(02)00059-6
   Rainer A, 2002, J SYST SOFTWARE, V62, P71, DOI 10.1016/S0164-1212(01)00122-4
   Ravichandran T, 2003, IEEE T ENG MANAGE, V50, P270, DOI 10.1109/TEM.2003.817278
   Ravichandran T, 2000, MIS QUART, V24, P381, DOI 10.2307/3250967
   Riemenschneider CK, 2002, IEEE T SOFTWARE ENG, V28, P1135, DOI 10.1109/TSE.2002.1158287
   Rifkin S, 2001, IEEE SOFTWARE, V18, P112, DOI 10.1109/MS.2001.936229
   Sharma S, 2000, COMMUN ACM, V43, P80, DOI 10.1145/323830.323848
   Swanson EB, 1997, ORGAN SCI, V8, P458, DOI 10.1287/orsc.8.5.458
   Szajna B, 1996, MANAGE SCI, V42, P85, DOI 10.1287/mnsc.42.1.85
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Venkatesh V, 2000, MIS QUART, V24, P115, DOI 10.2307/3250981
   Venkatesh V, 1999, MIS QUART, V23, P239, DOI 10.2307/249753
   Wilson DN, 2001, J SYST SOFTWARE, V59, P135, DOI 10.1016/S0164-1212(01)00057-7
NR 52
TC 42
Z9 46
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 1
PY 2005
VL 47
IS 8
BP 543
EP 553
DI 10.1016/j.infsof.2004.10.004
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 921KR
UT WOS:000228763700004
DA 2024-07-18
ER

PT J
AU Kauppinen, M
   Vartiainen, M
   Kontio, J
   Kujala, S
   Sulonen, R
AF Kauppinen, M
   Vartiainen, M
   Kontio, J
   Kujala, S
   Sulonen, R
TI Implementing requirements engineering processes throughout
   organizations: success factors and challenges
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE requirements engineering; process improvement; case study; action
   research
ID SOFTWARE PROCESS-IMPROVEMENT; EXPERIENCES
AB This paper aims at identifying critical factors affecting organization-wide implementation of requirements engineering (RE) processes. The paper is based on a broad literature review and three longitudinal case studies that were carried out using an action research method. The results indicate that RE process implementation is a demanding undertaking, and its success greatly depends on such human factors as motivation, commitment and enthusiasm. Therefore, it is essential that the RE process is useful for its individual users. Furthermore, the results indicate that organizations can gain benefits from RE by defining a simple RE process, by focusing on a small set of RE practices, and by supporting the systematic usage of these practices. (C) 2004 Elsevier B.V. All rights reserved.
C1 Aalto Univ, Software Business & Engn Inst, FIN-02015 Espoo, Finland.
   Aalto Univ, Dept Ind Engn & Management, FIN-02015 Espoo, Finland.
C3 Aalto University; Aalto University
RP Aalto Univ, Software Business & Engn Inst, POB 9210, FIN-02015 Espoo, Finland.
EM marjo.kauppinen@hut.fi; matti.vartiainen@hut.fi; jyrki.kontio@hut.fi;
   sari.kujala@hut.fi; reijo.sulonen@hut.fi
RI Holt, Karen/B-6501-2011; Vartiainen, Matti A/F-9448-2012; Kujala,
   Sari/M-7004-2013
OI Kujala, Sari/0000-0001-5586-3725; Kauppinen, Marjo/0000-0002-8794-6792
CR [Anonymous], 1990, QUALITATIVE EVALUATI, DOI DOI 10.1002/NUR.4770140111
   [Anonymous], 1998, Software process improvement
   [Anonymous], 1997, Requirements engineering: a good practice guide
   Armour PG, 2001, COMMUN ACM, V44, P15, DOI 10.1145/357489.357495
   Avison D, 1999, COMMUN ACM, V42, P94, DOI 10.1145/291469.291479
   BASILI V, 1994, IEEE SOFTWARE, V11, P58, DOI 10.1109/52.300090
   BASILI V, 1995, IEEE SOFTWARE, V12, P83, DOI 10.1109/52.469763
   Basili VR, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P69, DOI 10.1109/ICSE.2002.1007957
   Claus C., 1999, P 5 INT WORKSH REQ E, P33
   Conradi R, 2002, IEEE SOFTWARE, V19, P92, DOI 10.1109/MS.2002.1020295
   Curtis B, 1997, PROC INT CONF SOFTW, P624, DOI 10.1145/253228.253536
   Damian D, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P111, DOI 10.1109/ISESE.2002.1166931
   DAVIS AM, 1993, SOFTWARE REQUIRMENTS
   Diaz M, 1997, IEEE SOFTWARE, V14, P75, DOI 10.1109/52.605934
   Fuggetta A., 2000, P C LIM IR FUT SOFTW, P25, DOI DOI 10.1145/336512.336521
   Haley TJ, 1996, IEEE SOFTWARE, V13, P33, DOI 10.1109/52.542292
   Hofmann HF, 2001, IEEE SOFTWARE, V18, P58, DOI 10.1109/MS.2001.936219
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   HUMPHREY WS, 1991, IEEE SOFTWARE, V8, P11, DOI 10.1109/52.300031
   HUTCHINGS AF, 1995, COMMUN ACM, V38, P72, DOI 10.1145/203356.203370
   HUTCHINGS T, 1993, COMMUN ACM, V36, P105, DOI 10.1145/163430.164057
   *ISO IEC, 1998, 155047 ISOIEC TR
   Jacobs S, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/ISRE.1999.777997
   Jakobsen AB, 1998, IEEE SOFTWARE, V15, P64, DOI 10.1109/52.646884
   Jakobson AB, 2000, IEEE SOFTWARE, V17, P71, DOI 10.1109/52.896252
   JOHNSON A, 1994, PROC INT CONF SOFTW, P323, DOI 10.1109/ICSE.1994.296794
   Kaindia H., 2002, Requirements Engineering, V7, P113, DOI 10.1007/s007660200008
   Kauppinen M., 2001, Product Focused Software Process Improvement. Third International Conference, PROFES 2001. Proceedings (Lecture Notes in Computer Science Vol.2188), P196
   Kauppinen M, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P43, DOI 10.1109/ICRE.2002.1048504
   Kautz K., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P626, DOI 10.1109/ICSE.2000.870456
   Kotonya G., 1998, Requirements engineering: processes and techniques
   McFeeley B., 1996, IDEAL USERS GUIDE SO
   O'Hara F., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P635, DOI 10.1109/ICSE.2000.870457
   Paulk M.C., 1997, The capability maturity model
   POTTS C, 1993, IEEE SOFTWARE, V10, P19, DOI 10.1109/52.232392
   Sakamoto K, 1998, PROC INT CONF SOFTW, P22, DOI 10.1109/ICSE.1998.671099
   Salo A., 1998, P 4 INT WORKSH REQ E, P99
   Sommerville I, 2001, Software Engineering
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Stringer E.T., 1999, ACTION RES-LONDON, V2nd
   TANAKA T, 1995, PROC INT CONF SOFTW, P123, DOI 10.1145/225014.225026
   THAYER R, 1997, SOFTWARE REQUIREMENT, P489
   Villalón JACM, 2002, SOFTWARE QUAL J, V10, P261, DOI 10.1023/A:1021638523413
   Ward RP, 2001, COMMUN ACM, V44, P105, DOI 10.1145/367211.367291
   Weber M, 2003, IEEE SOFTWARE, V20, P16, DOI 10.1109/MS.2003.1159025
   Webster J, 2002, MIS QUART, V26, pXIII
   Wiegers K, 1999, IEEE SOFTWARE, V16, P78, DOI 10.1109/52.776953
   Wiegers K., 1999, SOFTWARE REQUIREMENT
NR 48
TC 38
Z9 41
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV 1
PY 2004
VL 46
IS 14
BP 937
EP 953
DI 10.1016/j.infsof.2004.04.002
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 851NQ
UT WOS:000223692200002
DA 2024-07-18
ER

PT J
AU Ali, FM
   Du, WC
AF Ali, FM
   Du, WC
TI Toward reuse of object-oriented software design models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE object-oriented design reuse; OO design classification; reusable design
   models classification
AB In software reuse, which is an important approach to improving the practice of software engineering, many factors may hinder reusing software artifacts. Among those factors are the availability of software artifacts at a different level of abstraction and a method to classify and retrieve them. This paper proposes an approach based on faceted classification scheme for the classification and retrieval of software design artifacts, namely Object-Oriented Design Models, thus facilitating their reuse. Six facets, Domain, Abstractions, Responsibilities, Collaborations, Design View, and Asset Type have been defined to constitute the classification and the retrieval attributes. Each of the facets describes one aspect of an Object-Oriented design model. It contains a number of predefined terms chosen through the analysis of various software systems specifications. The selected terms of each facet are arranged on a conceptual graph to aid the retrieval process. A design artifact is classified by associating with it a software descriptor through the selection of one or more terms from each facet. The role of a descriptor is to emphasize the important structural and behavioral properties of a design artifact and also to document the artifacts associated with the design model. The associated similarity-based retrieval mechanism helps users to search for candidate design artifacts that best match their target specification. The similarity analysis is based on the estimation of the conceptual distance between the terms in a query descriptor and the terms in the specified descriptors of various design models in a software repository. A case study is presented to illustrate the classification and the retrieval process. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ New Brunswick, Fac Comp Sci, Fredericton, NB E3B 5A3, Canada.
C3 University of New Brunswick
RP Univ New Brunswick, Fac Comp Sci, Fredericton, NB E3B 5A3, Canada.
EM fauzi@brunnet.net; wdu@unb.ca
CR [Anonymous], 1990, DESIGNING OBJECT ORI
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 1995, SUCCEEDING OBJECTS D
   ARNANGO G, 1993, P 2 INT WORKSH SOFTW
   BOOCH G, 1999, UNIFIED MODELING REF
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   BUTLER G, 1999, REUSABLE OBJECT ORIE
   Cann J., 1997, Principles of Classification
   DAMIANI E, 1999, ACM T SOFTWERE ENG M, V8
   DEVANBU P, 1990, P 12 INT C SOFTW ENG, P249
   EMBLEY DW, 1987, P 9 INT C SOFTW ENG
   FRAKES WB, 1994, IEEE T SOFTWARE ENG, V20, P617, DOI 10.1109/32.310671
   FRAKES WB, 1987, INFORMATION SYSTEM S
   Gamma Erich., 1994, DESIGN PATTERNS
   GIRARDI MR, THESIS U GENEVA
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   KRUT R, 1996, DOMAIN ANAL WORK REP
   KWASNIK BH, 1999, LIB TRENDS, V48
   LEE RC, 1997, UML C PLUS PLUS PRAC
   MAAREK YS, 1991, IEEE T SOFTWARE ENG, V17, P800, DOI 10.1109/32.83915
   Maple A., 1995, Faceted access: A review of the literature
   MILI A, 1999, IEEE SOFTWARE    SEP
   MILI H, 1995, IEEE T SOFWARE ENG, V22
   MILI H, 1997, P 1997 S SOFTW REUS
   MOREL JM, 1993, P 2 INT WORKSH SOFTW
   OCKERMAN JJ, 1999, INT J HUMAN COMPUTER
   OSTERTAG EJ, 1992, THESIS U MARYLAND CO
   OSTERTAGE EJ, 1992, ACM T SOFTWARE ENG M, V1
   PENIX J, CLASSIFICATION RETRI
   Prieto-Diaz R., 1991, DOMAIN ANAL SOFTWARE
   PRIETODIAZ R, 1985, THESIS U CALIFORNIA
   PRIETODIAZ R, 1987, IEEE SOFTWARE    JAN
   RAJARAAMAN V, COSSAR CONCEPT SPACE
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Sen A, 1997, IEEE T SOFTWARE ENG, V23, P418, DOI 10.1109/32.605760
   SINDRE G, ICCI 93 INT C COMP I
   SOLDERITSCH EJ, 1992, SYST SOFTW ENG S NOV
   Sommerville I, 2001, Software Engineering
   SUTCHIFFE A, 2000, J SYSTEMS SOFTWARE
   Taylor A.G., 1992, INTRO CATALOGING CLA
   WOOD M, 1988, SIGIR FOR, V22
   YONGBEOM K, 1998, J MANAGEMENT INFORMA, V14
   [No title captured]
NR 44
TC 15
Z9 16
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 15
PY 2004
VL 46
IS 8
BP 499
EP 517
DI 10.1016/S0950-5849(03)00089-2
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 814JJ
UT WOS:000220970700001
DA 2024-07-18
ER

PT J
AU Saleh, K
   El-Morr, C
AF Saleh, K
   El-Morr, C
TI M-UML: an extension to UML for the modeling of mobile agent-based
   software systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE language extension; mobile agents; mobility requirements; unified
   modeling language
ID JAVA
AB The Unified Modeling Language (UML) is a language for the specification, visualization, and documentation of object-oriented software systems [The Unified Modeling Language User Guide, 1998]. However, UML cannot describe in an explicit manner the mobility requirements needed for modeling mobile agent-based software systems. In this paper, we present M-UML, our proposed extension to UML covering all aspects of mobility at the various views and diagrams of UML. The use of M-UML is illustrated using a simple mobile voting system example. (C) 2003 Elsevier B.V. All rights reserved.
C1 Amer Univ Sharjah, Dept Comp Sci, Sharjah, U Arab Emirates.
C3 American University of Sharjah
RP Saleh, K (corresponding author), Amer Univ Sharjah, Dept Comp Sci, POB 26666, Sharjah, U Arab Emirates.
EM ksaleh@aus.ac.ae
RI Morr, Christo El/F-7534-2014; Morr, Christo El/AEU-3035-2022
OI Morr, Christo El/0000-0001-6287-3438; Morr, Christo
   El/0000-0001-6287-3438
CR BAUER B, 2001, 22 INT C SOFTW ENG A, P91
   BAUMEISTER H, 2002, EXTENDING ACTIVITY D
   BOOCH G, 1998, UNIFIED MODELING LAN
   ELMORR C, 2003, 2 P ACS IEEE INT C C
   Fowler Martin., 1999, UML DISTILLED, V2nd
   KLEIN C, 2001, UNIFIED MODELING LAN, P116
   Lange DB, 1999, COMMUN ACM, V42, P88, DOI 10.1145/295685.298136
   Maes P., 1999, COMMUNICATIONS ACM, V42
   NWANA H, P WORKSH AG MED EL T
   Saleh K, 1999, INFORM SOFTWARE TECH, V41, P235, DOI 10.1016/S0950-5849(99)00002-6
   SALEH K, 2003, SPECIFICATIONS MOBIL
   SALEH K, 2001, INT C EL COMM ICEC 2
   SALEH K, 2003, 2 INT C APPL DEV COM
   VIGNA G, 1999, LECT NOTES COMP SCI, V1419
   Wagner C, 2002, COMMUN ACM, V45, P84, DOI 10.1145/506218.506220
   Wong D, 1999, COMMUN ACM, V42, P92, DOI 10.1145/295685.295717
NR 16
TC 17
Z9 19
U1 1
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 15
PY 2004
VL 46
IS 4
BP 219
EP 227
DI 10.1016/j.infsof.2003.07.004
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 776CX
UT WOS:000189098400002
DA 2024-07-18
ER

PT J
AU Lunn, K
   Sixsmith, A
   Lindsay, A
   Vaarama, M
AF Lunn, K
   Sixsmith, A
   Lindsay, A
   Vaarama, M
TI Traceability in requirements through process modelling, applied to
   social care applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE requirements; business process modelling; social care systems; UML;
   traceability
AB This paper relates experiences of using a business-process approach to the determination of requirements for social care systems. A method has been developed and used successfully with a number of major research projects, most specifically PLANEC. A protocol and framework are presented that utilise the Unified Modelling Language and adopts best practice from IT and social science methods. It utilises a loose-coupled hierarchical grouping of processes as a strategic view, and more tightly coupled models such as workflows. The method, as it has evolved, has produced a clear linkage between stakeholder goals and expectations, and IT functionality expressed as UML use cases. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Huddersfield, Sch Comp & Engn, Huddersfield HD1 3DH, W Yorkshire, England.
   Univ Liverpool, Dept Primary Care, Liverpool L69 3BX, Merseyside, England.
   Stakes Natl Res & Dev Ctr Welf & Hlth, Helsinki, Finland.
C3 University of Huddersfield; University of Liverpool
RP Lunn, K (corresponding author), Univ Huddersfield, Sch Comp & Engn, Huddersfield HD1 3DH, W Yorkshire, England.
CR ALEXANDER I, 2002, WORKSH GOAL OR BUS P
   Allen Paul., 1998, Component-based development for enterprise systems: Applying the SE- LECT Perspective
   [Anonymous], UNIFIED SOFTWARE DEV
   Bennett S., 2001, Schaum's Outline of UML
   Checkland P., 1981, Systems thinking, systems practice, V10th ed
   ERICSSON HE, 2000, BUSINESS MODELLING U
   LUNN K, 1997, 2 INT WORKSH END US
   LUNN K, 2002, P 7 CAIS IFIDA WG8 1
   Lunn K., 2003, SOFTWARE DEV UML
   MCLEOD G, 2003, USE CASES
   MICHAEL P, 1996, TOOLS THINKING
   Poulson D, 1996, PRACTICAL HDB USER C
   Senge P.M., 1992, 5 DISCIPLINE
   SIXSMITH A, 1993, INT J GERIATR PSYCH, V8, P407, DOI 10.1002/gps.930080507
   SIXSMITH A, 1997, INT C GER CHIC MAY
   SIXSMITH A, 1996, EUR C GER HELS OCT
   *UK GOV, 2003, BETT GOV OLD PEOPL
   *UK NH, 2002, INF HLTH
   VAARAMA M, 1996, FUNCTIONAL SPECIFICA
NR 19
TC 14
Z9 14
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC 1
PY 2003
VL 45
IS 15
BP 1045
EP 1052
DI 10.1016/S0950-5849(03)00132-0
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 737GZ
UT WOS:000186223200005
DA 2024-07-18
ER

PT J
AU Mili, H
   Ah-Ki, E
   Godin, R
   Mcheick, H
AF Mili, H
   Ah-Ki, E
   Godin, R
   Mcheick, H
TI An experiment in software component retrieval
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software reuse; multi-faceted classification; boolean retrieval;
   plain-text retrieval; retrieval evaluation; approximate retrieval
ID SYSTEMS
AB Our research centers around exploring methodologies for developing reusable software, and developing methods and tools for building inter-enterprise information systems with reusable components. In this paper, we focus on an experiment in which different component indexing and retrieval methods were tested. The results are surprising. Earlier work had often shown that controlled vocabulary indexing and retrieval per-formed better than full-text indexing and retrieval [IEEE Trans. Software Engng (1994) 1, IEEE Trans. Software Engng 17 (1991) 800], but the differences in performance were often so small that some questioned whether those differences were worth the much greater cost of controlled vocabulary indexing and retrieval [Commun. Assoc. Comput. Mach. 28 (1985) 289, Commun. Assoc. Comput. Mach. 29 (1986) 648]. In our experiment, we found that full-text indexing and retrieval of software components provided comparable precision but much better recall than controlled vocabulary indexing and retrieval of components. There are a number of explanations for this somewhat counter-intuitive result, including the nature of software artifacts, and the notion of relevance that was used in our experiment. We bring to the fore some fundamental questions related to reuse repositories. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Quebec, Dept Informat, Montreal, PQ H3C 3P8, Canada.
C3 University of Quebec; University of Quebec Montreal
RP Univ Quebec, Dept Informat, Case Postale 8888 A, Montreal, PQ H3C 3P8, Canada.
EM hafedh.mili@uqam.ca
RI Mili, Hafedh/JAO-1456-2023; Mcheick, Hamid/A-6250-2018
OI Mcheick, Hamid/0000-0002-2589-8609
CR *ACM, 1985, COMPUTING REV    JAN, P45
   ALLEN P, 2001, COMPONENT DEV STRATE, V11
   BILOFSKY HS, 1986, NUCLEIC ACIDS RES, V14, P1, DOI 10.1093/nar/14.1.1
   BLAIR DC, 1985, COMMUN ACM, V28, P289, DOI 10.1145/3166.3197
   CUTTING D, 1992, P APPL NAT LANG PROC
   Damiani E, 1999, ACM T SOFTW ENG METH, V8, P215, DOI 10.1145/310663.310665
   DUMPLETON G, 1994, OSE CPLUSPLUS LIB US
   FRAKES WB, 1994, IEEE T SOFTWARE  AUG, P1
   FRAKES WB, 1994, INFORMATION RETRIEVA
   HALL RJ, 1993, PROC INT CONF SOFTW, P371, DOI 10.1109/ICSE.1993.346028
   HENNINGER S, 1994, IEEE SOFTWARE, V11, P48, DOI 10.1109/52.311059
   ISODA S, 1992, P 14 INT C SOFTW ENG, P320
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   JONES KS, 1980, KEY PAPERS INFORMATI, P305
   LESK ME, 1969, AM DOC, V20, P27, DOI 10.1002/asi.4630200106
   MAAREK YS, 1991, IEEE T SOFTWARE ENG, V17, P800, DOI 10.1109/32.83915
   MILI A, 1994, P 16 INT C SOFTW ENG
   MILI H, 1995, IEEE T SOFTWARE ENG, V21, P528, DOI 10.1109/32.391379
   Mili H., 1990, Artificial Intelligence in Medicine, V2, P217, DOI 10.1016/0933-3657(90)90060-5
   MILI H, 1988, IEEE T PATTERN ANAL, V10, P204, DOI 10.1109/34.3883
   MILI H, 1997, P S SOFTW REUS 97 BO, P89
   MILI H, 1987, P 3 ANN EXP SYST GOV, P12
   MILI H, 1999, BUILDING APPL FRAMEW, P523
   Mili H., 2002, Reuse Based Software Engineering: Techniques, Organization, and Controls
   MILI H, 1994, J SYSTEMS SOFTWARE, V27
   OASIS, 2001, BUS PROC BUS INF AN
   Ostertag E., 1992, ACM Transactions on Software Engineering and Methodology, V1, P205, DOI 10.1145/131736.131739
   PRIETODIAZ R, 1987, IEEE SOFTWARE    JAN, P6
   RADA R, 1989, IEEE T SYST MAN CYB, V19, P17, DOI 10.1109/21.24528
   SALTON G, 1986, COMMUN ACM, V29, P648, DOI 10.1145/6138.6149
   SALTON G, 1983, INTRO MODERN INFORMA
   SMITH C, 1985, MEDLINE QUERIES DIST
   SOERGEL D, 1985, ORG INFORMATION PRIN
   WEINBERG BH, 1985, B MED LIBR ASSOC, V73, P365
   WOODFIELD SN, 1987, IEEE SOFTWARE    JUL, P52
   Ye YW, 2000, LECT NOTES COMPUT SC, V1844, P302
   Zaremski A. M., 1993, SIGSOFT Software Engineering Notes, V18, P182, DOI 10.1145/167049.167077
   ZAREMSKI AM, 1995, SOFTWARE ENG NOTES, V21
   Zipf GK, 1965, PSYCHOBIOLOGY LANGUA
NR 39
TC 10
Z9 13
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL 15
PY 2003
VL 45
IS 10
BP 633
EP 649
DI 10.1016/S0950-5849(03)00002-8
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 715NN
UT WOS:000184978800001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Kim, CR
   Chung, CW
AF Kim, CR
   Chung, CW
TI A multi-step approach for partial similarity search in large image data
   using histogram intersection
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE image database; region-based retrieval; histogram; filtering function;
   histogram intersection
AB We investigate the problem of retrieving partially similar images from a large image database. The region-based image retrieval technique is a method of retrieving partially similar images and has been proposed as a way to efficiently process queries in an image database In region-based image retrieval, region matching is indispensable for computing the partial similarity between two images because the query processing is based upon regions instead of the entire image. A naive method of region matching is a pairwise comparison between regions; this causes severe overhead and deteriorates the performance of query processing. In this paper, we focus on the development of a filtering function for the reduction of overall search time in region-based image retrieval, which is of special importance in the case of retrieving partially similar images from a large image database. To prune irrelevant images in a database, we introduce a correct and efficient similarity function by using the Histogram Intersection, which is needed for a crude selection based on a lower bounding property. Subsequently the result is refined by the pairwise region comparison between the query image and selected images. We have performed extensive experiments on synthetic and real image data to evaluate our proposed method. The experimental results reveal that our proposed technique achieves a significant pruning of up to 99% of irrelevant images and is up to 22 times faster than pairwise comparison, where the number of bins is set at 100. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Korea Adv Inst Sci & Technol, Dept Elect Engn & Comp Sci, Div Comp Sci, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Kim, CR (corresponding author), Korea Adv Inst Sci & Technol, Dept Elect Engn & Comp Sci, Div Comp Sci, 373-1 Kusong Dong, Taejon 305701, South Korea.
EM crkim@mail.bc.ac.kr
RI Chung, Chin-Wan/C-2029-2011
CR Agrawal R., 1993, Foundations of Data Organization and Algorithms. 4th International Conference. FODO '93 Proceedings, P69
   Agrawal R., 1995, VLDB '95. Proceedings of the 21st International Conference on Very Large Data Bases, P490
   [Anonymous], INT J DIGITAL LIB
   Faloutsos C., 1994, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V3, P231, DOI 10.1007/BF00962238
   FALOUTSOS C, 1994, ACM SIGMOD INT C MAN, P419
   Flickner M., 1995, IEEE COMPUT, V28, P23, DOI DOI 10.1109/2.410146
   Guha S, 1999, PROC INT CONF DATA, P512, DOI 10.1109/ICDE.1999.754967
   GUIBAS LJ, 1995, IS T SPIE S EL IM SC, P352
   Gupta A, 1997, COMMUN ACM, V40, P70, DOI 10.1145/253769.253798
   Jacobs CE., 1995, FAST MULTIRESOLUTION
   Kastenmuller G, 1998, P GERM C BIOINF GCB
   LEE SL, 2000, ICDE, P599
   Natsev A, 1999, SIGMOD RECORD, VOL 28, NO 2 - JUNE 1999, P395, DOI 10.1145/304181.304217
   NIBLACK W, 1993, P SOC PHOTO-OPT INS, V1908, P173
   OGLE VE, 1995, COMPUTER, V28, P40, DOI 10.1109/2.410150
   PENTLAND A, 1995, STORAGE RETRIEVAL IM, P34
   PICARD RW, 1993, IEEE ICASSP, V5, P161
   RAFIEI D, 1997, ACM SIGMOD INT C MAN, P13
   S Berchtold., 1997, VLDB J, V6, P333
   Smith JR, 1999, MULTIMEDIA SYST, V7, P129, DOI 10.1007/s005300050116
   SMITH JR, 1999, J COMPUTER VISION IM
   SWAIN MJ, 1991, INT J COMPUT VISION, V7, P11, DOI 10.1007/BF00130487
   Yi BK, 1998, PROC INT CONF DATA, P201, DOI 10.1109/ICDE.1998.655778
NR 23
TC 6
Z9 8
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 15
PY 2003
VL 45
IS 4
BP 203
EP 215
AR PII S0950-5849(02)00206-9
DI 10.1016/S0950-5849(02)00206-9
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 653FW
UT WOS:000181425400003
DA 2024-07-18
ER

PT J
AU Zhou, HA
   Feng, YL
   Li, J
AF Zhou, HA
   Feng, YL
   Li, J
TI Probability graph based data hoarding for mobile environment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE mobile computing; disconnected operation; automated hoarding;
   probability graph
AB The vision of mobile environment is severely challenged by disconnected operation. Automated hoarding is an attractive approach solution to this issue. On the other hand, the large overhead of automatic hoarding algorithm is a serious problem for handheld devices. In this paper, we propose an application-independent automatic hoarding algorithm based on probability graph. Simulation results show that it can improve cache hit rate with low time and space overhead in disconnected operation effectively, especially for small cache size, which makes our proposed algorithm preferable for handheld devices. (C) 2002 Elsevier Science B.V. All rights reserved.
C1 Chinese Acad Sci, Inst Software, Comp Sci Lab, Beijing 100080, Peoples R China.
C3 Chinese Academy of Sciences; Institute of Software, CAS
RP Zhou, HA (corresponding author), Chinese Acad Sci, Inst Software, Comp Sci Lab, POB 8718, Beijing 100080, Peoples R China.
CR Barbarà D, 1999, IEEE T KNOWL DATA EN, V11, P108, DOI 10.1109/69.755619
   Cunha C., 1995, TR95010 BOST U DEP C
   GRIFFIOEN J, 1994, P SUMM USENIX TECHN
   Jing J, 1999, ACM COMPUT SURV, V31, P117, DOI 10.1145/319806.319814
   KISTLER JJ, 1992, ACM T COMPUT SYST, V10, P213
   KUENNING G, 1997, THESI U CALIFORNIA L
   KUENNINGS G, 1997, P 16 ACM S OP SYST P
   SATYANARAYANAN M, 1996, P 15 ACM S PRINC DIS
   SAYGIN Y, 2000, P 10 INT WORKSH RES
   TAIT C, 1995, P 1 ACM INT C MOB CO
   Zupan J., 1982, CLUSTERING LARGE DAT
   [No title captured]
NR 12
TC 1
Z9 1
U1 1
U2 8
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN 1
PY 2003
VL 45
IS 1
BP 35
EP 41
AR PII S0950-5849(02)00160-X
DI 10.1016/S0950-5849(02)00160-X
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 633RD
UT WOS:000180295500005
DA 2024-07-18
ER

PT J
AU Wang, CW
   Zhang, L
   Zhang, XF
AF Wang, Chuangwei
   Zhang, Li
   Zhang, Xiaofang
TI Multi-grained contextual code representation learning for commit message
   generation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code change; Code representation learning; Commit message generation;
   Pre-training
ID COMPLETION
AB Commit messages, precisely describing the code changes for each commit in natural language, makes it possible for developers and succeeding reviewers to understand the code changes without digging into implementation details. However, the semantic and structural gap between code and natural language poses a significant challenge for commit message generation. Several researchers have proposed automated techniques to generate commit messages. Nevertheless, the information about the code is not sufficiently exploited. In this paper, we propose multi-grained contextual code representation learning for commit message generation (COMU). We extract multi-grained information from the changed code at the line and AST levels (i.e., Code_Diff and AST_Diff). In Code_Diff, we construct global contextual semantic information about the changed code, and mark whether a line of code has changed with three different tokens. In AST_Diff, we extract the code structure from source code changes and combine the extracted structure with four types of editing operations to explicitly focus on the detailed information of the changed part. In addition, we build the experimental datasets, since there is still no publicly sufficient dataset for this task. The release of this dataset would contribute to advancing research in this field. We perform an extensive experiment to evaluate the effectiveness of COMU. The experimental evaluation and human study show that our model outperforms the baseline model.
C1 [Wang, Chuangwei; Zhang, Li; Zhang, Xiaofang] Soochow Univ, Sch Comp Sci & Technol, Suzhou, Peoples R China.
C3 Soochow University - China
RP Zhang, XF (corresponding author), Soochow Univ, Sch Comp Sci & Technol, Suzhou, Peoples R China.
EM 20215227033@stu.suda.edu.cn; zhangliml@suda.edu.cn; xfzhang@suda.edu.cn
RI Wang, CW/HLX-1207-2023
OI Wang, CW/0000-0002-7921-4129; Zhang, Xiaofang/0000-0002-8667-0456
FU National Natural Science Foundation of China [62172202]; Collaborative
   Innovation Center of Novel Software Technology and Industrialization,
   China; Major Program of the Natural Science Foundation of Jiangsu Higher
   Education Institutions of China [22KJA520008]; Priority Academic Program
   Development of Jiangsu Higher Education Institutions, China
FX This work is partially supported by the National Natural Science
   Foundation of China (62172202) , Collaborative Innovation Center of
   Novel Software Technology and Industrialization, China, the Major
   Program of the Natural Science Foundation of Jiangsu Higher Education
   Institutions of China under Grant Nos. 22KJA520008 and the Priority
   Academic Program Development of Jiangsu Higher Education Institutions,
   China.
CR Ahmad WU, 2021, Arxiv, DOI [arXiv:2103.06333, 10.48550/arXiv.2103.06333]
   Allamanis M, 2018, Arxiv, DOI arXiv:1711.00740
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Brown T., 2020, P ADV NEUR INF PROC, V33, P1877
   Buse Raymond P. L., 2010, P 25 IEEE ACM INT C, P33, DOI DOI 10.1145/1858996.1859005
   Chen Boxing, 2014, P 9 WORKSHOP STAT MA, P362, DOI DOI 10.3115/V1/W14-3346
   Cvitkovic M, 2019, PR MACH LEARN RES, V97
   Denkowski Michael, 2014, P 9 WORKSH STAT MACH, DOI [10.3115/v1/W14-3348, DOI 10.3115/V1/W14-3348]
   Devanbu P, 2020, Arxiv, DOI arXiv:2009.08525
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Cortés-Coy LF, 2014, IEEE INT WORK C SO, P275, DOI 10.1109/SCAM.2014.14
   Gao SZ, 2022, Arxiv, DOI arXiv:2104.09340
   Giger E, 2011, P 8 WORK C MIN SOFTW, P83, DOI [10.1145/1985441.1985456, DOI 10.1145/1985441.1985456]
   Guo DY, 2022, Arxiv, DOI arXiv:2203.03850
   Guo DY, 2021, Arxiv, DOI arXiv:2009.08366
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Huang Y, 2020, J COMPUT SCI TECH-CH, V35, P1258, DOI 10.1007/s11390-020-0496-0
   Huang Y, 2017, INT SYMP EMP SOFTWAR, P414, DOI 10.1109/ESEM.2017.56
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Kanade A, 2020, PR MACH LEARN RES, V119
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Lewis M, 2019, Arxiv, DOI [arXiv:1910.13461, DOI 10.48550/ARXIV.1910.13461]
   Li ZH, 2022, 2022 29TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, APSEC, P357, DOI 10.1109/APSEC57359.2022.00048
   Li ZY, 2022, Arxiv, DOI arXiv:2203.09095
   Liang HL, 2019, IEEE ACCESS, V7, P83812, DOI 10.1109/ACCESS.2019.2925313
   Lin CY, 2004, ROUGE: A Package for Automatic Evaluation of Summaries, P74, DOI DOI 10.1253/JCJ.34.1213
   Liu SQ, 2022, IEEE T SOFTWARE ENG, V48, P1800, DOI 10.1109/TSE.2020.3038681
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Liu ZX, 2023, Arxiv, DOI arXiv:2302.03924
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Loyola P, 2017, Arxiv, DOI arXiv:1704.04856
   Loyola Pablo, 2018, P 11 INT C NAT LANG, P119, DOI DOI 10.18653/V1/W18-6513
   Mastropaolo A, 2021, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE43902.2021.00041
   Nie LY, 2021, NEUROCOMPUTING, V459, P97, DOI 10.1016/j.neucom.2021.05.039
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Qin Liu, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P299, DOI 10.1109/MSR.2019.00056
   Raffel C, 2020, J MACH LEARN RES, V21
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Shen JF, 2016, P INT COMP SOFTW APP, P103, DOI 10.1109/COMPSAC.2016.162
   Shi Ensheng, 2022, P 2022 C EMP METH NA, P5520
   Shia E, 2022, Arxiv, DOI arXiv:2203.02700
   Sun ZY, 2019, AAAI CONF ARTIF INTE, P7055
   Svyatkovskiy A, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2727, DOI 10.1145/3292500.3330699
   Tufano M, 2021, Arxiv, DOI [arXiv:2009.05617, 10.48550/ARXIV.2009.05617]
   Tufano R., 2022, arXiv
   Tufano R, 2021, PROC INT CONF SOFTW, P163, DOI 10.1109/ICSE43902.2021.00027
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wang X, 2021, Arxiv, DOI arXiv:2108.04556
   Wang YL, 2021, AAAI CONF ARTIF INTE, V35, P14015
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Watson C, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3485275
   Wen M, 2020, IEEE T SOFTWARE ENG, V46, P1155, DOI 10.1109/TSE.2018.2876256
   Xu SB, 2022, 13TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, INTERNETWARE 2022, P242, DOI 10.1145/3545258.3545274
   Xu SB, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3975
   Zhang J, 2020, PROC INT CONF SOFTW, P1385, DOI 10.1145/3377811.3380383
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
NR 63
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2024
VL 167
AR 107393
DI 10.1016/j.infsof.2023.107393
EA DEC 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GB7Z1
UT WOS:001150276600001
DA 2024-07-18
ER

PT J
AU Dohi, T
   Li, SQ
   Hiroyuki, O
AF Dohi, Tadashi
   Li, Siqiao
   Hiroyuki, Okamura
TI Local polynomial software reliability models and their application
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software reliability models; Non-homogeneous Poisson processes; Local
   polynomial debug rate; Maximum likelihood estimation; Goodness-of-fit
   performance; Predictive performance
ID LINEAR-EXPONENTIAL-DISTRIBUTION; FAILURE-RATE; ORDER-STATISTICS;
   DISTRIBUTIONS
AB In this paper, we propose local polynomial software reliability models (SRMs), which can be categorized into a semi-parametric modeling framework. Our models belong to the common non-homogeneous Poisson process (NHPP)-based SRMs, but possess a flexible structure to approximate an arbitrary mean value function by controlling the polynomial degree. More specifically, we develop two types of local polynomial NHPP-based SRMs; finite-failure (type-I) and infinite-failure (type-II) SRMs, which are substantial extensions of the existing NHPP-based SRMs in the similar categories. We also develop two maximum likelihood estimation algorithms in both estimation and prediction phases, where the former is used for the testing period experienced in the past, and the latter for the prediction in the future. In numerical experiments with actual 8 software fault count time interval data sets, we compare our local polynomial NHPP-based SRMs with the well-known existing parametric NHPP-based SRMs in terms of goodness-of-fit and predictive performances. Finally, it can be concluded that our local polynomial NHPP-based SRMs with lower polynomial degrees could outperform the existing NHPP-based SRMs in several cases and should be listed as candidates for the representative NHPP-based SRMs in software reliability analysis.
C1 [Dohi, Tadashi; Li, Siqiao; Hiroyuki, Okamura] Hiroshima Univ, Grad Sch Adv Sci & Engn, 1-4-1 Kagamiyama, Higashihiroshima, Hiroshima 7398527, Japan.
C3 Hiroshima University
RP Dohi, T (corresponding author), Hiroshima Univ, Grad Sch Adv Sci & Engn, 1-4-1 Kagamiyama, Higashihiroshima, Hiroshima 7398527, Japan.
EM dohi@hiroshima-u.ac.jp; rel-siqiao@hiroshima-u.ac.jp;
   okamu@hiroshima-u.ac.jp
RI Dohi, Tadashi/D-5882-2011
FU MEXT KAKENHI [22K04579]
FX This work was partially supported by MEXT KAKENHI Grant Number 22K04579.
CR ABDELGHALY AA, 1986, IEEE T SOFTWARE ENG, V12, P950, DOI 10.1109/TSE.1986.6313050
   Achcar JA, 1998, SER QUAL RELIAB ENGN, V4, P1
   [Anonymous], 1966, The statistical analysis of series of events
   Bagkavos D, 2008, IEEE T RELIAB, V57, P41, DOI 10.1109/TR.2007.911264
   BAIN LJ, 1974, TECHNOMETRICS, V16, P551, DOI 10.2307/1267607
   BALAKRISHNAN N, 1986, COMMUN STAT THEORY, V15, P179, DOI 10.1080/03610928608829114
   Barlow R., 1981, STAT THEORY RELIABIL
   BERGER JO, 1993, J AM STAT ASSOC, V88, P1412, DOI 10.2307/2291285
   Cretois E., 1998, INT J RELIABILITY QU, V5, P249
   Csenki A, 2011, RELIAB ENG SYST SAFE, V96, P1587, DOI 10.1016/j.ress.2011.06.008
   Davison AC, 2000, J ROY STAT SOC D-STA, V49, P189, DOI 10.1111/1467-9884.00229
   Demiris N, 2015, STAT METHODS MED RES, V24, P287, DOI 10.1177/0962280211419645
   DUANE JT, 1964, IEEE T AEROSP, VAS 2, P563, DOI 10.1109/TA.1964.4319640
   Freels JK, 2019, QUAL ENG, V31, P545, DOI 10.1080/08982112.2018.1557685
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   GOEL AL, 1985, IEEE T SOFTWARE ENG, V11, P1411, DOI 10.1109/TSE.1985.232177
   Gokhale SS, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P34, DOI 10.1109/HASE.1998.731593
   Hishitani J., 1991, Journal of Information Processing, V14, P178
   KOGAN VI, 1988, SIAM J APPL MATH, V48, P416, DOI 10.1137/0148022
   KRANE SA, 1963, TECHNOMETRICS, V5, P161, DOI 10.2307/1266060
   Kuo L, 1996, J AM STAT ASSOC, V91, P763, DOI 10.2307/2291671
   Lawless JF., 2011, Statistical Models and Methods for Lifetime Data
   Li S., 2021, P REL MAINT ENG SUMM, P98
   LITTLEWOOD B, 1984, IEEE T RELIAB, V33, P157, DOI 10.1109/TR.1984.5221762
   Lyu M., 1996, Handbook of Software Reliability Engineering
   Mahmoud M, 2009, STAT PAP, V50, P407, DOI 10.1007/s00362-007-0073-4
   Musa J. D., 1984, Proceedings of the 7th International Conference on Software Engineering (cat. no. 84CH2011-5), P230
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   Musa JohnD., 1979, SOFTWARE RELIABILITY
   Nafreen M, 2021, INT J RELIAB QUAL SA, V28, DOI 10.1142/S0218539321500340
   Neuts MF., 1981, Matrix-Geometric Solutions in Stochastic Models
   OHBA M, 1984, LECT NOTES ECON MATH, V235, P144
   Ohishi K, 2009, J SYST SOFTWARE, V82, P535, DOI 10.1016/j.jss.2008.11.840
   Okamura H., 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P62, DOI 10.1109/IWSM-MENSURA.2011.26
   Okamura H., 2013, Int. J. Softw. Eng. Appl., V7, P401
   Okamura H, 2016, ANN OPER RES, V244, P177, DOI 10.1007/s10479-015-1870-0
   Okamura H, 2013, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2013.6698909
   Okamura H, 2013, RELIAB ENG SYST SAFE, V116, P135, DOI 10.1016/j.ress.2012.02.002
   Phillips G.M., 1996, Best approximation, Theory and Approximation of Numrrical Analysis, P86
   Vouk M. A., 1992, P 2 BELL COREPURDUE, P254
   Wood A, 1996, COMPUTER, V29, P69, DOI 10.1109/2.544240
   YAMADA S, 1983, IEEE T RELIAB, V32, P475, DOI 10.1109/TR.1983.5221735
   Yamada S., 1985, Transactions of the Institute of Electronics and Communication Engineers of Japan, Section E (English), VE68, P292
   Yu Y, 2023, MATHEMATICS-BASEL, V11, DOI 10.3390/math11040985
   Zhao M, 1996, SCAND J STAT, V23, P597
NR 45
TC 0
Z9 0
U1 8
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2024
VL 166
AR 107366
DI 10.1016/j.infsof.2023.107366
EA NOV 2023
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG2H8
UT WOS:001124028600001
DA 2024-07-18
ER

PT J
AU Ye, T
   Zhuang, Y
   Qiao, GZ
AF Ye, Tong
   Zhuang, Yi
   Qiao, Gongzhe
TI MDSSED: A safety and security enhanced model-driven development approach
   for smart home apps
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Security; Safety; Smart home apps; Model-driven software development;
   Formal method
ID REQUIREMENTS
AB Context: With the popularization of smart home devices, people rely more on automation functions provided by smart home apps. This increases the attack surface for safety and security threats. Many of these threats are at the interaction level, caused by unintended or malicious interactions between apps.Objective: Most of the current studies focus on identifying unsafe interactions between smart home apps by code analysis. To the best of our knowledge, none of the existing studies focuses on enhancing the safety and security of smart home apps under interaction threats in the design phase. To fill this gap, this paper presents MDSSED, a safety and security enhanced model-driven development approach for smart home apps.Method: First, this paper identifies eleven types of interaction threats faced by smart home apps. Second, the MDSSED profile is proposed to support modeling smart home apps using UML. Third, the MDSSED prototype tool is developed to generate threat models and corresponding safety and security properties automatically. Then, the safety and security properties are automatically verified by model checking. Finally, the MDSSED tool automatically converts the UML models to the Samsung SmartThings apps.Results: To evaluate the accuracy and effectiveness of MDSSED, this paper uses the benchmarks in existing state-of-the-art studies. The results show that MDSSED not only identified the safety and security problems in the existing benchmarks but also pointed out vulnerabilities of apps under other interaction threats identified in this paper.Conclusion: To the best of our knowledge, MDSSED is the first model-driven development approach that supports the automatic verification of the safety and security properties of smart home apps under interaction threats. The accuracy, practicality, and efficiency of MDSSED are corroborated by experiments. The source code of the MDSSED tool and the experimental data are available online.1
C1 [Ye, Tong; Zhuang, Yi; Qiao, Gongzhe] Nanjing Univ Aeronaut & Astronaut, 29 Jiangjun Ave, Nanjing 211100, Jiangsu, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics
RP Zhuang, Y (corresponding author), Nanjing Univ Aeronaut & Astronaut, 29 Jiangjun Ave, Nanjing 211100, Jiangsu, Peoples R China.
EM yetong@nuaa.edu.cn; zy16@nuaa.edu.cn; qgz@nuaa.edu.cn
RI Te, Tong/HIR-7900-2022
OI Ye, Tong/0000-0003-3812-3105; Zhuang, Yi/0000-0003-0706-0148
FU National Natural Science Foundation of China (General Program)
   [61572253]
FX This work is supported by the National Natural Science Foundation of
   China (General Program) under Grant No. 61572253.
CR Alhanahnah Mohannad, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P272, DOI 10.1145/3395363.3397347
   [Anonymous], 2021, SMARTTHINGS DEV DOCU
   [Anonymous], 2021, ECLIPSE PAPYRUS
   [Anonymous], 2021, SMARTTHINGS GROOVY I
   Anthi E, 2021, COMPUT SECUR, V108, DOI 10.1016/j.cose.2021.102352
   Basin D., 2003, 8 ACM S ACC CONTR MO
   Bernardi S, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110746
   Bright P., 2021, SAMSUNGS TIZEN IS RI
   Celik ZB, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23326
   Celik ZB, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P147
   Chi HT, 2022, P IEEE S SECUR PRIV, P285, DOI [10.1109/SP46214.2022.9833620, 10.1109/SP46214.2022.00146]
   Chi HT, 2020, I C DEPEND SYS NETWO, P411, DOI 10.1109/DSN48063.2020.00056
   Nguyen DT, 2018, CONEXT'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON EMERGING NETWORKING EXPERIMENTS AND TECHNOLOGIES, P191, DOI 10.1145/3281411.3281440
   Deng MN, 2011, REQUIR ENG, V16, P3, DOI 10.1007/s00766-010-0115-7
   Drozhzhin A., 2021, TIZEN OS 40 NEW VULN
   Feng JC, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1376, DOI 10.1145/3368089.3417047
   Fernandes E, 2016, P IEEE S SECUR PRIV, P636, DOI 10.1109/SP.2016.44
   Ghezzi C, 2014, REQUIR ENG, V19, P231, DOI 10.1007/s00766-013-0198-z
   Google home, 2021, US
   Hale ML, 2019, REQUIR ENG, V24, P365, DOI 10.1007/s00766-017-0287-5
   Hazeyama A, 2018, P INT COMP SOFTW APP, P234, DOI 10.1109/COMPSAC.2018.10235
   Hu XW, 2020, COMPUT SECUR, V88, DOI 10.1016/j.cose.2019.101615
   IFTTT, 2021, US
   Jia YHA, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23051
   Kreitz Mark, 2019, ACM SIGSOFT Software Engineering Notes, V44, DOI 10.1145/3356773.3356798
   Kumar D, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P33
   Lamsweerde A.V., 2007, ENG REQUIREMENTS SYS
   Lee M., 2021, HACKERS USE DDOS ATT
   Mahadewa K, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P2, DOI 10.1145/3460319.3464838
   Mai PX, 2018, INFORM SOFTWARE TECH, V100, P165, DOI 10.1016/j.infsof.2018.04.007
   MDSSED, 2022, US
   Microsoft flow, 2021, US
   Mohsin M, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P342, DOI 10.1109/QRS.2019.00051
   Nguyen PH, 2015, INFORM SOFTWARE TECH, V68, P62, DOI 10.1016/j.infsof.2015.08.006
   Ni SR, 2015, IEEE T DEPEND SECURE, V12, P190, DOI 10.1109/TDSC.2014.2320714
   Nick G., 2021, How many iot devices are there in 2021? [Online]. Available
   NuSMV, 2021, US
   Rayner M., 2005, OMG unified modeling language specification
   Rouland Q, 2019, IEEE INT C ENG COMP, P236, DOI 10.1109/ICECCS.2019.00033
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yefei Zhao, 2009, 2009 Canadian Conference on Electrical and Computer Engineering (CCECE 2009), P974, DOI 10.1109/CCECE.2009.5090274
   Zhang L, 2020, IEEE INFOCOM SER, P377, DOI [10.1109/infocom41043.2020.9155483, 10.1109/INFOCOM41043.2020.9155483]
NR 42
TC 0
Z9 0
U1 4
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2023
VL 163
AR 107287
DI 10.1016/j.infsof.2023.107287
EA JUN 2023
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA N5TP4
UT WOS:001037637400001
DA 2024-07-18
ER

PT J
AU Bomström, H
   Kelanti, M
   Annanperä, E
   Liukkunen, K
   Kilamo, T
   Sievi-Korte, O
   Systä, K
AF Bomstrom, Henri
   Kelanti, Markus
   Annanpera, Elina
   Liukkunen, Kari
   Kilamo, Terhi
   Sievi-Korte, Outi
   Systa, Kari
TI Information needs and presentation in agile software development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Agile software development; DevOps; Information
   needs; Visualization
ID VISUALIZATION; TEAMS; ROLES
AB Context: Agile software companies applying the DevOps approach require collaboration and information sharing between practitioners in various roles to produce value. Adopting new development practices affects how practitioners collaborate, requiring companies to form a closer connection between business strategy and software development. However, the types of information management, sales, and development needed to plan, evaluate features, and reconcile their expectations with each other need to be clarified. Objective: To support practitioners in collaborating and realizing changes to their practices, we investigated what information is needed and how it should be represented to support different stakeholders in their tasks. Compared to earlier research, we adopted a holistic approach - by including practitioners throughout the development process - to better understand the information needs from a broader viewpoint.Method: We conducted six workshops and 12 semi-structured interviews at three Finnish small and mediumsized enterprises from different software domains. Thematic analysis was used to identify information-related issues and information and visualization needs for daily tasks. Three themes were constructed as the result of our analysis.Results: Visual information representation catalyzes stakeholder discussion, and supporting information exchange between stakeholder groups is vital for efficient collaboration in software product development. Additionally, user-centric data collection practices are needed to understand how software products are used and to support practitioners' daily information needs. We also found that a passive way of representing information, such as a dashboard that would disturb practitioners only when attention is needed, was preferred for daily information needs.Conclusion: The software engineering community should consider reviewing the information needs of practitioners from a more holistic view to better understand how tooling support can benefit information exchange between stakeholder groups when making product development decisions and how those tools should be built to accommodate different stakeholder views.
C1 [Bomstrom, Henri; Kelanti, Markus; Annanpera, Elina; Liukkunen, Kari] Univ Oulu, Res Unit M3S, Pentti Kaiteran katu 1, Oulu 90014, Finland.
   [Kilamo, Terhi; Sievi-Korte, Outi; Systa, Kari] Tampere Univ, Fac Informat Technol & Commun Sci, Kalevantie 4, Tampere 33014, Finland.
C3 University of Oulu; Tampere University
RP Bomström, H (corresponding author), Univ Oulu, Res Unit M3S, Pentti Kaiteran katu 1, Oulu 90014, Finland.
EM henri.bomstrom@oulu.fi; markus.kelanti@oulu.fi; elina.annanpera@oulu.fi;
   kari.liukkunen@oulu.fi; terhi.kilamo@tuni.fi; outi.sievi-korte@tuni.fi;
   kari.systa@tuni.fi
RI Bomström, Henri/ABC-8849-2021; Systa, Kari/G-4320-2014
OI Bomström, Henri/0000-0002-7028-9044; Liukkunen,
   Kari/0000-0002-0719-4712; Kilamo, Terhi/0000-0002-9561-1116; Kelanti,
   Markus/0000-0003-1886-8521; Annanpera, Elina/0000-0002-2615-9576;
   Sievi-Korte, Outi/0000-0002-4956-8989; Systa, Kari/0000-0001-7371-0773
FU ITEA3 project VISDOM; ITEA3 project Oxilate; Business Finland
FX The authors thank the company representatives for the time and expertise
   they provided for the interviews and workshops. The work was supported
   by the ITEA3 project VISDOM and partly by the ITEA3 project Oxilate. The
   authors thank Business Finland for the funding. Furthermore, we thank
   the anonymous reviewers for their insightful comments that helped
   improve this article.
CR Ahmad A, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1513, DOI 10.1145/3412841.3442026
   Alqudah M., 2016, International Journal on Advanced Science, Engineering and Information Technology, V6, P1, DOI [DOI 10.18517/IJASEIT.6.6.1374, 10.18517/IJASEIT.6.6.1374]
   Anderson J.B., 2006, UNDERSTANDING INFORM
   [Anonymous], 2007, Scaling Software Agility: Best Practices for Large Enterprises
   [Anonymous], 2010, Practices for Scaling Lean & Agile Development: Large, Multisite, and Offshore Product Development with Large-Scale Scrum
   [Anonymous], 2007, Software Visualization: Visualizing the Structure, Behavior, and Evolution of Software
   Beck K., 2000, EXTREME PROGRAMMING
   Benarek G, 2005, P ACM 2005 WORKSH HU, P1
   Bouraffa Abir, 2020, P IEEE ACM 42 INT C, P71
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Braun V., 2021, Thematic analysis: A practical guide to understanding and doing
   Braun V, 2021, QUAL RES PSYCHOL, V18, P328, DOI 10.1080/14780887.2020.1769238
   Breu S, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P301
   Buse RPL, 2012, PROC INT CONF SOFTW, P987, DOI 10.1109/ICSE.2012.6227122
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Chotisarn N, 2020, J VISUAL-JAPAN, V23, P539, DOI 10.1007/s12650-020-00647-w
   Cockburn A., 2002, Cutter IT Journal, V15, P6
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Creswell JW, 2000, THEOR PRACT, V39, P124, DOI 10.1207/s15430421tip3903_2
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Ebert C, 2016, IEEE SOFTWARE, V33, P94, DOI 10.1109/MS.2016.68
   Etikan I., 2016, American Journal of Theoretical and Applied Statistics, V5, P1, DOI [DOI 10.11648/J.AJTAS.20160501.11, 10.11648/j.ajtas.20160501]
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Fowler M., 2001, Software Development, V9, P28
   Freeman R.E., 1994, Business Ethics Quarterly, V4, P409, DOI DOI 10.2307/3857340
   Ghobadi S, 2015, INFORM MANAGE-AMSTER, V52, P82, DOI 10.1016/j.im.2014.10.008
   Gotel OCZ, 2008, IEEE INT CONF INF VI, P547, DOI 10.1109/IV.2008.56
   Gross A., 2012, 2012 IEEE First International Workshop on the Twin Peaks of Requirements and Architecture (Twin Peaks), P41, DOI 10.1109/TwinPeaks.2012.6344560
   Gross A., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P171, DOI 10.1109/RE.2012.6345801
   Gustavsson T., 2017, P XP2017 SCI WORKSH, P1, DOI [10.1145/3120459.3120475, DOI 10.1145/3120459.3120475]
   Hemon A, 2020, INFORM SYST FRONT, V22, P927, DOI 10.1007/s10796-019-09905-1
   Hess A, 2019, J IND INF INTEGR, V14, P3, DOI 10.1016/j.jii.2018.04.002
   Hess A, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P327, DOI 10.1109/REW.2017.63
   Hoda R, 2016, J SYST SOFTWARE, V117, P245, DOI 10.1016/j.jss.2016.02.049
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Holz H, 2002, LECT NOTES COMPUT SC, V2640, P60
   Järvinen J, 2014, LECT NOTES BUS INF P, V182, P58
   Jedlitschka A, 2014, EMPIR SOFTW ENG, V19, P1921, DOI 10.1007/s10664-013-9268-6
   Josyula J, 2018, INT WORKSH EMPIR ENG, P1, DOI 10.1109/IWESEP.2018.00009
   Kaya A., 2018, CEUR WORKSHOP PROC, V2245, P213
   Klotins E, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10191-w
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Komssi M, 2015, REQUIR ENG, V20, P45, DOI 10.1007/s00766-013-0186-3
   Kortum F, 2020, EUROMICRO CONF PROC, P306, DOI 10.1109/SEAA51224.2020.00058
   Koschke R, 2003, J SOFTW MAINT EVOL-R, V15, P87, DOI 10.1002/smr.270
   LaToza Thomas D., 2010, P 32 ACM IEEE INT C, P185, DOI DOI 10.1145/1806799.1806829
   Lehtola L, 2009, REQUIR ENG, V14, P113, DOI 10.1007/s00766-009-0078-8
   Logre Ivan, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3229096
   Maletic JI, 2002, VISSOFT 2002: FIRST INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P32, DOI 10.1109/VISSOF.2002.1019792
   Margaret-Anne D.Storey., 2005, SOFTVIS, P193, DOI DOI 10.1145/1056018.1056045
   Mattila P., 2016, 20 INT ACAD MINDTREK, P262
   Merino L, 2018, J SYST SOFTWARE, V144, P165, DOI 10.1016/j.jss.2018.06.027
   Merino L, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1923
   Müller SC, 2013, PROC IEEE INT CONF S, P290, DOI 10.1109/ICSM.2013.40
   Novais RL, 2013, INFORM SOFTWARE TECH, V55, P1860, DOI 10.1016/j.infsof.2013.05.008
   Omoronyia I, 2010, SOFTWARE PRACT EXPER, V40, P1107, DOI 10.1002/spe.1005
   Orlikowski WJ, 1991, INFORM SYST RES, V2, P1, DOI 10.1287/isre.2.1.1
   Palmer S.R., 2001, A Practical Guide to Feature-Driven Development, V1st
   Panas T, 2007, IEEE INT C ENG COMP, P217, DOI 10.1109/ICECCS.2007.20
   Paredes J, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P157, DOI 10.1109/VISSOFT.2014.32
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Price B. A., 1993, Journal of Visual Languages and Computing, V4, P211, DOI 10.1006/jvlc.1993.1015
   Riungu-Kalliosaari L, 2016, LECT NOTES COMPUT SC, V10027, P590, DOI 10.1007/978-3-319-49094-6_44
   Rodríguez P, 2022, IEEE T SOFTWARE ENG, V48, P466, DOI 10.1109/TSE.2020.2989666
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   ROMAN GC, 1992, 14TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING : PROCEEDINGS, P412
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sauvola T, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P9, DOI 10.1109/SEAA.2015.63
   Schwaber K., 2001, Agile software development with scrum
   Seriai A, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P60, DOI 10.1109/VISSOFT.2014.19
   Sutherland A, 2009, PROC INT CONF SOFTW, P259, DOI 10.1109/ICSE-COMPANION.2009.5070996
   Ye Y., 2006, P INT WORKSHOP INTER, P15
   Yilmaz Murat, 2015, ACM SIGSOFT Software Engineering Notes, V40, DOI 10.1145/2693208.2693239
   Yilmaz M, 2012, COMM COM INF SC, V290, P198
   Zhu HB, 2006, IEEE T SYST MAN CY A, V36, P1110, DOI 10.1109/TSMCA.2006.883170
NR 75
TC 0
Z9 0
U1 9
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2023
VL 162
AR 107265
DI 10.1016/j.infsof.2023.107265
EA JUN 2023
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA N2WD4
UT WOS:001035669000001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Kemell, KK
   Nguyen-Duc, A
   Suoranta, M
   Abrahamsson, P
AF Kemell, Kai-Kristian
   Nguyen-Duc, Anh
   Suoranta, Mari
   Abrahamsson, Pekka
TI StartCards-A method for early-stage software startups
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software startups; Requirements engineering; Validation; Software
   engineering method; Action research
ID COMPANIES; MODEL
AB Context: Software startups are important drivers of economy on a global scale, and have become associated with innovation and high growth. However, the overwhelming majority of startups ends in failure. Many of these startup failures ultimately stem from software engineering issues, and requirements engineering (RE) ones in particular. Despite the emphasis placed on the importance of RE activities in the startup context, many startups continue to develop software without a clear market or customer, having never had meaningful contact with their would-be customer.Objective: We develop a method aimed at early-stage startups that is intended to help startups through the initial stages of the startup process: StartCards. The method emphasizes the importance of idea and product validation activities in particular in order to tackle anti-patterns related to (a lack of) RE in startups. This method is based on existing literature, both grey and academic literature.Method: StartCards was developed using the Canonical Action Research (CAR) approach, over the course of 4 AR cycles. During the AR process, the method was used by 44 student startup teams in a practical course setting. Data from the use of the method was collected through self-reporting in the form of modified learning diaries, mentoring meetings with the startup teams, and a qualitative survey.Results: We consider the current version of StartCards useful for early-stage startups based on the data we have collected. The method can also be used as a pedagogical tool in startup education. Conclusions: The paper presents the first published version of the method. While work on the method continues, the method is deemed ready for use.
C1 [Kemell, Kai-Kristian] Univ Helsinki, Dept Comp Sci, Yliopistonkatu 3, Helsinki 00014, Finland.
   [Nguyen-Duc, Anh] Univ South Eastern Norway, Business Sch, Gullbringvegen 36, N-3800 Bo I Telemark, Norway.
   [Suoranta, Mari] Univ Jyvaskyla, Jyvaskyla Univ Sch Business & Econ, Seminaarinkatu 15, Jyvaskyla 40014, Finland.
   [Abrahamsson, Pekka] Tampere Univ, Fac Informat Technol & Commun Sci, Kanslerinrinne 1, Tampere 33014, Finland.
C3 University of Helsinki; University of Jyvaskyla; Tampere University
RP Kemell, KK (corresponding author), Univ Helsinki, Dept Comp Sci, Yliopistonkatu 3, Helsinki 00014, Finland.
EM kai-kristian.kemell@helsinki.fi
OI Kemell, Kai-Kristian/0000-0002-0225-4560; Suoranta,
   Mari/0000-0002-3849-4902
CR 2020.stateofeuropeantech, STATE EUROPEAN TECH
   Abrahamsson Pekka, 2021, Software Business. 11th International Conference, ICSOB 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 407), P193, DOI 10.1007/978-3-030-67292-8_15
   Abrahamsson P., 2002, Proceedings of the 35th Annual Hawaii International Conference on System Sciences, P3239, DOI 10.1109/HICSS.2002.994403
   Alvarez SA, 2007, STRATEG ENTREP J, V1, P11, DOI 10.1002/sej.4
   Nguyen-Duc A, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P120, DOI 10.1109/SEAA.2016.21
   Bajwa SS, 2017, EMPIR SOFTW ENG, V22, P2373, DOI 10.1007/s10664-016-9458-0
   Bajwa SS, 2017, IEEE SOFTWARE, V34, P18, DOI 10.1109/MS.2017.84
   Bajwa SS, 2016, LECT NOTES BUS INF P, V240, P169, DOI 10.1007/978-3-319-40515-5_14
   Berg V, 2018, J SYST SOFTWARE, V144, P255, DOI 10.1016/j.jss.2018.06.043
   Blank, 2013, 4 STEPS EPIPHANY
   Bosch J., 2013, LEAN ENTERPRISE SOFT, V167, DOI [10.1007/978-3-642-44930-7_1, DOI 10.1007/978-3-642-44930-7_1]
   Cheng BHC, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P285, DOI 10.1109/FOSE.2007.17
   Clark C, 2008, VENTUR CAP, V10, P257, DOI 10.1080/13691060802151945
   Crowne M, 2002, IEMC-2002: IEEE INTERNATIONAL ENGINEERING MANAGEMENT CONFERENCE, VOLS I AND II, PROCEEDINGS, P338, DOI 10.1109/IEMC.2002.1038454
   Davison R, 2004, INFORM SYST J, V14, P65, DOI 10.1111/j.1365-2575.2004.00162.x
   Davison RM, 2021, J ASSOC INF SYST, V22, P851, DOI 10.17705/1jais.00682
   digital.ai, 2020, 14th Annual State of Agile Report
   Giardino C, 2016, IEEE T SOFTWARE ENG, V42, P585, DOI 10.1109/TSE.2015.2509970
   Giardino C, 2015, LECT NOTES BUS INF P, V212, P52, DOI 10.1007/978-3-319-18612-2_5
   Giardino C, 2014, LECT NOTES BUS INF P, V182, P27
   Giardino C, 2014, IEEE SOFTWARE, V31, P28, DOI 10.1109/MS.2014.129
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Jacobson, 2018, QUEUE, V16, P101
   Jacobson I., 2012, QUEUE, V10, P40, DOI [10.1145/2381996.2389616, DOI 10.1145/2381996.2389616]
   Kemell K., 2020 46 EUR C SOFTW
   Kemell K.-K., 2018, SIBW 2018 P 1 INT WO, P15
   Kemell KK, 2020, LECT NOTES COMPUT SC, V12562, P402, DOI 10.1007/978-3-030-64148-1_25
   Klotins E, 2019, IEEE SOFTWARE, V36, P118, DOI 10.1109/MS.2018.227105530
   Klotins E, 2019, EMPIR SOFTW ENG, V24, P68, DOI 10.1007/s10664-018-9620-y
   Kon F., 2014, A panorama of the Israeli software startup ecosystem
   Kotonya G., 1998, Requirements engineering: processes and techniques
   Kuhrmann M, 2022, IEEE T SOFTWARE ENG, V48, P3523, DOI 10.1109/TSE.2021.3099532
   Lenarduzzi V, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P112, DOI 10.1109/SEAA.2016.56
   Maurya Ash., 2012, RUNNING LEAN ITERATE
   Melegati J, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106807
   Melegati J, 2019, INFORM SOFTWARE TECH, V109, P92, DOI 10.1016/j.infsof.2019.02.001
   Moon J.A., 2006, Learning journals: A handbook for reflective practice and professional development
   Moss J., 2018, MAKE WINNING PITCH D
   Mullins J.W., 2009, Getting to Plan B: Breaking Through to a Better Business Model
   Nguyen-Duc A., 2016, Agile processes, in software engineering, and extreme programming, P118, DOI [10.1007/978-3-319-33515-510, DOI 10.1007/978-3-319-33515-510, DOI 10.1007/978-3-319-33515-5_10]
   Nguyen-Duc A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09987-z
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Osterwalder A., 2010, BUSINESS MODEL GENER, DOI DOI 10.1111/J.1540-5885.2012.00977_2.X
   Pantiuchina J, 2017, LECT NOTES BUS INF P, V283, P167, DOI 10.1007/978-3-319-57633-6_11
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Pitchbook, 2019, 4Q 2018 PITCHBOOK NV
   Rasmussen EA, 2006, TECHNOVATION, V26, P185, DOI 10.1016/j.technovation.2005.06.012
   Remenyi D., 2020, INNOVATION TEACHING
   Ries E., 2011, The lean startup: How today's entrepreneurs use continuous innovation to create radically successful businesses
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   Seppanen P., 2020, FUNDAMENTALS SOFTWAR, P45
   Seppänen P, 2017, LECT NOTES COMPUT SC, V10611, P280, DOI 10.1007/978-3-319-69926-4_20
   Sirelkhatim F, 2015, COGENT BUS MANAG, V2, DOI 10.1080/23311975.2015.1052034
   SUSMAN GI, 1978, ADMIN SCI QUART, V23, P582, DOI 10.2307/2392581
   Unterkalmsteiner M, 2016, E-INFORMATICA, V10, P89, DOI 10.5277/e-Inf160105
   Wang G., 2017, ICIS 2017 P
   Wang Xiaofeng, 2016, INT C AG SOFTW DEV, P169, DOI 10.1007/978-3-319-33515-5_14
   Xu S., 2019, TECHCRUNCH
   Zave P, 1997, ACM COMPUT SURV, V29, P315, DOI 10.1145/267580.267581
   Zott C, 2011, J MANAGE, V37, P1019, DOI 10.1177/0149206311406265
NR 61
TC 1
Z9 1
U1 2
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2023
VL 160
AR 107224
DI 10.1016/j.infsof.2023.107224
EA APR 2023
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA F6MQ3
UT WOS:000983470500001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Wang, WJ
   Chen, JJ
   Yang, L
   Zhang, HY
   Wang, Z
AF Wang, Weijing
   Chen, Junjie
   Yang, Lin
   Zhang, Hongyu
   Wang, Zan
TI Understanding and predicting incident mitigation time
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Incident management; Online service systems; Bug-fixing time; Effort
   estimation; Software maintenance
ID BUG-FIXING TIME; SOFTWARE ANALYTICS; MANAGEMENT
AB Context: Incident management plays a significant role in online service systems. Incidents should be mitigated as soon as possible in order to achieve high service stability. However, available resources tend to be limited, and thus engineers have to schedule their tasks carefully. Time to Mitigate (TTM) refers to the time an incident requires to restore the service availability. Predicting TTM can help better estimate maintenance efforts and provide developers more information when arranging their tasks. Objective: Our work aims to predict TTM precisely, which consists of two main steps. First, we perform an empirical study to understand incidents deeply. Then, we design an effective approach for TTM prediction based on the findings from the empirical study. Methods: In the empirical study, we used 20 Microsoft online service systems to investigate the duration of each stage in incident management and the relationship between TTM and incident indicators. Then, we propose TTMPred, a deep-learning-based approach for TTM prediction in the continuous triage scenario based on the features identified from our empirical study. In particular, we improve the generality of TTMPred by extending it to predicting the fixing time of traditional software bugs. Results: We investigate the effectiveness of TTMPred on four large-scale online service systems in Microsoft, as well as four widely-used Bugzilla-based projects. The results show that TTMPred performs better than the compared approaches for both incident TTM prediction and bug-fixing time prediction. For example, on average, TTMPred improves the state-of-the-art regression-based approach by 25.66% in terms of MAE (Mean Absolute Error) on the incident data and 42.14% on MAE on the bug data. Conclusion: TTMPred can be extended to the bug scenario, and continuously predict accurate bug-fixing time during the triage process.
C1 [Wang, Weijing; Chen, Junjie; Yang, Lin; Wang, Zan] Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
   [Zhang, Hongyu] Univ Newcastle, Callaghan, NSW, Australia.
   [Wang, Weijing; Wang, Zan] Tianjin Univ, Sch New Media & Commun, Tianjin, Peoples R China.
C3 Tianjin University; University of Newcastle; Tianjin University
RP Chen, JJ (corresponding author), Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
EM wangweijing@tju.edu.cn; junjiechen@tju.edu.cn; linyang@tju.edu.cn;
   hongyu.zhang@newcastle.edu.au; wangweijing@tju.edu.cn
RI Chen, Junjie/ABE-8685-2020
OI Chen, Junjie/0000-0003-4509-2271; Wang, Weijing/0000-0002-9250-573X
FU National Natural Science Foundation of China [62002256]; Australian
   Research Council (ARC) Discovery Project [DP200102940, DP220103044]
FX This work was supported by the National Natural Science Foundation of
   China (Grant No. 62002256) and the Australian Research Council (ARC)
   Discovery Project (DP200102940 and DP220103044) .
CR Akbarinasaji S, 2018, J SYST SOFTWARE, V136, P173, DOI 10.1016/j.jss.2017.02.021
   Ardimento P., 2017, P 7 INT C WEB INT MI, DOI [10.1145/3102254.3102275, DOI 10.1145/3102254.3102275]
   Ardimento P, 2020, IEEE CONF EVOL ADAPT, DOI 10.1109/eais48028.2020.9122781
   Ardimento P, 2020, STUD COMPUT INTELL, V880, P63, DOI 10.1007/978-3-030-36617-9_5
   Ardimento P, 2016, LECT NOTES ARTIF INT, V9956, P167, DOI 10.1007/978-3-319-46307-0_11
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Chen JJ, 2020, IEEE INT CONF AUTOM, P373, DOI 10.1145/3324884.3416624
   Chen JJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P364, DOI 10.1109/ASE.2019.00042
   Chen JJ, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P111, DOI 10.1109/ICSE-SEIP.2019.00020
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Chen YJ, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P304, DOI 10.1145/3368089.3409768
   Chen YJ, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2659, DOI 10.1145/3308558.3313501
   Chen Z., 2020, CLOUD INTELLIGENCE W
   Chen ZC, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3569932
   Chen ZB, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1487, DOI 10.1145/3368089.3417055
   Cho K., 2014, ARXIV14061078
   Cho Kyunghyun, 2014, SYNTAX SEMANTICS STR, P5, DOI [10.3115/v1/w14-4012, 10.3115 /v1/D14-1179, DOI 10.3115/V1/D14-1179]
   Cotroneo D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P200, DOI 10.1145/3338906.3338916
   Dos Santos C., 2014, Coling, P69
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   Garraghan P, 2018, IEEE CLOUD COMPUT, V5, P12, DOI 10.1109/MCC.2018.053711662
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Habayeb M, 2018, IEEE T SOFTWARE ENG, V44, P1224, DOI 10.1109/TSE.2017.2757480
   Hermann KM, 2015, ADV NEURAL INFORM PR, V28, P1693
   Hochreiter S., 1997, Neural Computation, V9, P1735
   Jiang JJ, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1410, DOI 10.1145/3368089.3417054
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Lebedev S., 2016, HMMLEARN
   Li LQ, 2021, PROCEEDINGS OF THE 2021 USENIX ANNUAL TECHNICAL CONFERENCE, P489
   Lim MH, 2014, IEEE DATA MINING, P320, DOI 10.1109/ICDM.2014.96
   Lou JG, 2017, AUTOMAT SOFTW ENG, V24, P905, DOI 10.1007/s10515-017-0218-1
   Lou JG, 2013, IEEE INT CONF AUTOM, P475, DOI 10.1109/ASE.2013.6693105
   Marks L., 2011, Proceedings of the 7th International Conference on Predictive Models in Software Engineering, P1, DOI [10.1145/2020390.2020401, DOI 10.1145/2020390.2020401]
   Newman MEJ, 2005, CONTEMP PHYS, V46, P323, DOI 10.1080/00107510500052444
   Osei-Bryson KM, 2004, COMPUT OPER RES, V31, P1933, DOI 10.1016/S0305-0548(03)00156-4
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pennington J., 2014, P C EMP METH NAT LAN, P1532, DOI DOI 10.3115/V1/D14-1162
   Puranik S, 2016, PROCEDIA COMPUT SCI, V93, P924, DOI 10.1016/j.procs.2016.07.271
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   Sawarkar R, 2019, 2019 IEEE 5TH INTERNATIONAL CONFERENCE FOR CONVERGENCE IN TECHNOLOGY (I2CT), DOI 10.1109/i2ct45611.2019.9033749
   Seber G. A., 2012, Linear regression analysis, V329
   Sepahvand R, 2020, IET SOFTW, V14, P203, DOI 10.1049/iet-sen.2019.0260
   Sharma M, 2019, INT J SYST ASSUR ENG, V10, P1328, DOI 10.1007/s13198-019-00888-5
   Wang WJ, 2021, PROC INT SYMP SOFTW, P36, DOI 10.1109/ISSRE52982.2021.00017
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   WILLMOTT CJ, 1985, J GEOPHYS RES-OCEANS, V90, P8995, DOI 10.1029/JC090iC05p08995
   WOLD S, 1987, CHEMOMETR INTELL LAB, V2, P37, DOI 10.1016/0169-7439(87)80084-9
   Yang L, 2021, PROC INT CONF SOFTW, P1448, DOI 10.1109/ICSE43902.2021.00130
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhao NW, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P162, DOI 10.1145/3377813.3381363
   Zhao NW, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P315, DOI 10.1145/3368089.3409672
NR 56
TC 3
Z9 3
U1 1
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2023
VL 155
DI 10.1016/j.infsof.2022.107119
EA DEC 2022
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7F4NK
UT WOS:000901826200020
DA 2024-07-18
ER

PT J
AU Choma, J
   Guerra, EM
   Alvaro, A
   Pereira, R
   Zaina, L
AF Choma, Joelma
   Guerra, Eduardo M.
   Alvaro, Alexandre
   Pereira, Roberto
   Zaina, Luciana
TI Influences of UX factors in the Agile UX context of software startups
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software startups; Agile UX; User experience; UX definition;
   Practitioners; Survey
ID USER EXPERIENCE; COMPANIES
AB Context: Software startups work under uncertain market conditions, constant time pressures, and extremely limited resources. Startup practitioners commonly adopt agile practices and lean development to build and release software quickly. Within this context, User eXperience (UX) work is critical for generating user value and creating a competitive advantage. However, integrating agile and UX remains an open question and little explored in software startups.Objective: In this study, we investigate how startup practitioners understand the UX concept and what are the influences of UX factors on the agile context of software startups.Method: To achieve this goal, we surveyed software practitioners from software startups in Brazil. We obtained 97 valid responses from professionals working in different areas, in positions of UX experts, software engineers, and managers.Results: Our findings show that most software startup practitioners understand UX from a perspective that gives value to the user/customer interaction with the product and company, focusing on achieving a good UX. Regarding the influences of UX factors, we found that most selected factors carried the meaning of delivering value to the business and the user for producing successful products. On the other hand, the lack of resources is a factor that significantly hinders UX work in early-stage startups and with small teams.Conclusion: By analyzing our results on four dimensions, covering business & market, product & process, customers & users, and UX work & teams, we provided four takeaways to help practitioners with the adoption of Agile UX in software startups context.
C1 [Choma, Joelma; Alvaro, Alexandre; Zaina, Luciana] Fed Univ Sao Carlos UFSCar, Sorocaba, Brazil.
   [Guerra, Eduardo M.] Free Univ Bozen Bolzano, Bolzano, Bolzano, Italy.
   [Pereira, Roberto] Univ Fed Parana, Curitiba, Brazil.
C3 Universidade Federal de Sao Carlos; Free University of Bozen-Bolzano;
   Universidade Federal do Parana
RP Choma, J (corresponding author), Fed Univ Sao Carlos UFSCar, Sorocaba, Brazil.
EM jchoma@ufscar.br; eduardo.guerra@unibz.it; alvaro@ufscar.br;
   rpereira@inf.ufpr.br; lzaina@ufscar.br
RI Pereira, Roberto/AAX-9721-2020; Choma, Joh/KCZ-1386-2024
OI Pereira, Roberto/0000-0003-3052-3016; 
FU Sao Paulo Research Foundation (FAPESP) [2020/00615-9, 2020/10429-8];
   Conselho Nacional de Desenvolvimento Cientifico e Tecnologico
   (CNPq-Brazil) [313312/2019-2]
FX We thank the support of the grants #2020/00615-9 and #2020/10429-8, Sao
   Paulo Research Foundation (FAPESP) , and the support of the Conselho
   Nacional de Desenvolvimento Cientifico e Tecnologico (CNPq-Brazil) ,
   process number: 313312/2019-2.
CR Abelein U, 2015, EMPIR SOFTW ENG, V20, P28, DOI 10.1007/s10664-013-9278-4
   Alvertis I, 2016, PROCEDIA COMPUT SCI, V97, P73, DOI 10.1016/j.procs.2016.08.282
   [Anonymous], 2009, 9241 210 2010 ERGONO, DOI DOI 10.3403/30388991
   Ardito C, 2014, INT J HUM-COMPUT ST, V72, P542, DOI 10.1016/j.ijhcs.2013.10.004
   Barksdale Jeremy T., 2012, International Journal of Agile and Extreme Software Development, V1, P52
   Beck K., 2011, MANIFESTO AGILE SOFT
   Berg V, 2018, J SYST SOFTWARE, V144, P255, DOI 10.1016/j.jss.2018.06.043
   Bordin S., 2016, AGILE PROCESSES SOFT, P3
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brhel M, 2015, INFORM SOFTWARE TECH, V61, P163, DOI 10.1016/j.infsof.2015.01.004
   Brown T., 2019, CHANGE DESIGN DESIGN, P304
   Coleman G, 2008, J ENTERP INF MANAG, V21, P633, DOI 10.1108/17410390810911221
   CRITCHLOW DE, 1991, COMMUN STAT THEORY, V20, P127, DOI 10.1080/03610929108830487
   Da Silva TS, 2018, INFORM SOFTWARE TECH, V102, P1, DOI 10.1016/j.infsof.2018.04.008
   de Lima Salgado A., 2016, SIGDOC 16
   Desmet P, 2007, INT J DES, V1, P57
   Gauthier J, 2021, GLOBAL STARTUP ECOSY
   Ghazi AN, 2019, IEEE ACCESS, V7, P24703, DOI 10.1109/ACCESS.2018.2881041
   Giardino C, 2016, IEEE T SOFTWARE ENG, V42, P585, DOI 10.1109/TSE.2015.2509970
   Giardino C, 2014, LECT NOTES BUS INF P, V182, P27
   Giardino C, 2014, IEEE SOFTWARE, V31, P28, DOI 10.1109/MS.2014.129
   Gothelf J., 2016, Lean UX: Designing Great Products with Agile Teams
   Guerino G., 2021, LECT NOTES BUSINESS
   Hassenzahl M, 2006, BEHAV INFORM TECHNOL, V25, P91, DOI 10.1080/01449290500330331
   Hokkanen L., 2016, P ACADEMICMINDTREK 2, P59, DOI [10.1145/2994310.2994371, DOI 10.1145/2994310.2994371]
   Hokkanen L., 2016, Lecture Notes in Business Information Processing, V251, P66, DOI [10.1007/978, DOI 10.1007/978]
   Hokkanen L, 2015, PROCEEDINGS OF THE 20TH EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (EUROPLOP 2015), DOI 10.1145/2855321.2855373
   Hokkanen L, 2015, LECT NOTES BUS INF P, V212, P81, DOI 10.1007/978-3-319-18612-2_7
   Hokkanen L, 2015, LECT NOTES COMPUT SC, V9459, P217, DOI 10.1007/978-3-319-26844-6_16
   Holm J, 2015, IEEE INT CONF INF VI, P245, DOI 10.1109/iV.2015.52
   Hossain SS, 2019, LECT NOTES COMPUT SC, V11623, P70, DOI 10.1007/978-3-030-24308-1_6
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Klotins E, 2021, IEEE T SOFTWARE ENG, V47, P498, DOI 10.1109/TSE.2019.2900213
   Klotins E, 2019, EMPIR SOFTW ENG, V24, P68, DOI 10.1007/s10664-018-9620-y
   Knapp J., 2016, Sprint: How to solve big problems and test new ideas in just five days
   Kopec W, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P49, DOI 10.1145/3195836.3195840
   Kuusinen Kati, 2019, Human-Centered Software Engineering. 7th IFIP WG 13.2 International Working Conference, HCSE 2018. Revised Selected Papers: Lecture Notes in Computer Science (LNCS 11262), P3, DOI 10.1007/978-3-030-05909-5_1
   Lallemand C, 2015, COMPUT HUM BEHAV, V43, P35, DOI 10.1016/j.chb.2014.10.048
   Law ELC, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P719
   Liikkanen L.A., 2014, P 8 NORD C HUM COMP
   Lindgren E, 2016, INFORM SOFTWARE TECH, V77, P80, DOI 10.1016/j.infsof.2016.04.008
   May Beverly, 2012, Proceedings of the 2012 Agile Conference, P141, DOI 10.1109/Agile.2012.18
   McCrum-Gardner E, 2008, BRIT J ORAL MAX SURG, V46, P38, DOI 10.1016/j.bjoms.2007.09.002
   Nguyen-Duc A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09987-z
   Norman D., 1995, C COMPANION HUMAN FA, P155, DOI DOI 10.1145/223355.223477
   Norman D., 2019, The definition of user experience (UX)
   Ogunyemi AA, 2019, INT J HUM-COMPUT INT, V35, P1461, DOI 10.1080/10447318.2018.1541544
   Pantiuchina J, 2017, LECT NOTES BUS INF P, V283, P167, DOI 10.1007/978-3-319-57633-6_11
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Pilz J, 2021, PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS AND TECHNOLOGIES (WEBIST), P467, DOI 10.5220/0010713800003058
   Ries E, 2011, The Lean Startup
   Saad J, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106688
   Seyam M, 2015, PROCEEDINGS OF THE 2015 INTERNATIONAL CONFERENCE ON COLLABORATION TECHNOLOGIES AND SYSTEMS, P124, DOI 10.1109/CTS.2015.7210412
   Signoretti I, 2020, LECT NOTES COMPUT SC, V12562, P125, DOI 10.1007/978-3-030-64148-1_8
   Silveira SAM, 2021, LECT NOTES BUS INF P, V419, P19, DOI 10.1007/978-3-030-78098-2_2
   Solanas Valerie., 1967, SCUM MANIFESTO
   Souza R, 2017, 2017 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR STARTUPS (SOFTSTART 2017), P17, DOI 10.1109/SoftStart.2017.2
   Sutton SM, 2000, IEEE SOFTWARE, V17, P33, DOI 10.1109/52.854066
   Sward D., 2007, Towards a UX Manifesto, P35
   UK Government Digital Service, 2019, USER EXPERIENCE
   Unterkalmsteiner M, 2016, E-INFORMATICA, V10, P89, DOI 10.5277/e-Inf160105
   UXPA, 2022, US EXP PROF ASS UXPA
   Wohlin C., 2012, Experimentation in Software Engineering
   Zaina LAM, 2021, INT J HUM-COMPUT ST, V147, DOI 10.1016/j.ijhcs.2020.102574
   Zorzetti M, 2022, INFORM SOFTWARE TECH, V141, DOI 10.1016/j.infsof.2021.106718
NR 65
TC 3
Z9 3
U1 1
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2022
VL 152
AR 107041
DI 10.1016/j.infsof.2022.107041
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4E9SM
UT WOS:000848158300004
DA 2024-07-18
ER

PT J
AU Crespo, Y
   López-Nozal, C
   Marticorena-Sánchez, R
   Gonzalo-Tasis, M
   Piattini, M
AF Crespo, Yania
   Lopez-Nozal, Carlos
   Marticorena-Sanchez, Raul
   Gonzalo-Tasis, Margarita
   Piattini, Mario
TI The role of awareness and gamification on technical debt management
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technical Debt; Raising awareness; SonarQube; Gamification;
   Quasi-experiment
ID BETA REGRESSION; SOFTWARE
AB Context: Managing technical debt and developing easy-to-maintain software are very important aspects for technological companies. Integrated development environments (IDEs) and static measurement and analysis tools are used for this purpose. Meanwhile, gamification also is gaining popularity in professional settings, particularly in software development.
   Objective: This paper aims to analyse the improvement in technical debt indicators due to the use of techniques to raise developers' awareness of technical debt and the introduction of gamification into technical debt management.
   Method: A quasi-experiment that manipulates a training environment with three different treatments was conducted. The first treatment was based on training in the concept of technical debt, bad smells and refactoring, while using multiple plugins in IDEs to obtain reports on quality indicators of both the code and the tests. The second treatment was based on enriching previous training with the use of SonarQube to continuously raise awareness of technical debt. The third was based on adding a gamification component to technical debt management based on a contest with a top ten ranking. The results of the first treatment are compared with the use of SonarQube for continuously raising developers' awareness of technical debt; while the possible effect of gamification is compared with the results of the previous treatment.
   Results: It was observed that continuously raising awareness using a technical debt management tool, such as SonarQube, significantly improves the technical debt indicators of the code developed by the participants versus using multiple code and test quality checking tools. On the other hand, incorporating some kind of competition between developers by defining a contest and creating a ranking does not bring about any significant differences in the technical debt indicators.
   Conclusion: Investment in staff training through tools to raise developers' awareness of technical debt and incorporating it into continuous integration pipelines does bring improvements in technical debt management
C1 [Crespo, Yania; Gonzalo-Tasis, Margarita] Univ Valladolid, Dept Informat, Valladolid, Spain.
   [Lopez-Nozal, Carlos; Marticorena-Sanchez, Raul] Univ Burgos, Dept Ingn Informat, Burgos, Spain.
   [Piattini, Mario] Univ Castilla La Mancha, Dept Tecnol & Sistemas Informac, Ciudad Real, Spain.
C3 Universidad de Valladolid; Universidad de Burgos; Universidad de
   Castilla-La Mancha
RP Crespo, Y (corresponding author), Univ Valladolid, Dept Informat, Valladolid, Spain.
EM yania@infor.uva.es; clopezno@ubu.es; rmartico@ubu.es;
   marga@infor.uva.es; Mario.Piattini@uclm.es
RI Piattini, Mario/F-6271-2013; Crespo, Yania/I-5609-2015
OI Piattini, Mario/0000-0002-7212-8279; Crespo, Yania/0000-0003-0639-0540;
   GONZALO TASIS, MARGARITA/0000-0003-2945-3436; Marticorena Sanchez,
   Raul/0000-0002-2633-635X; Lopez Nozal, Carlos/0000-0001-8462-212X
FU Universidad de Valladolid [PID2017/2018-28]
FX This research is based on the work carried out under the Innovation
   projects of Universidad de Valladolid PID2017/2018-28, PID2018/2019-38.
   The authors would like to thank the reviewers and Dr. Valentin Cardenoso
   for the comments that have served to improve the first versions of this
   work.
CR Alhammad MM, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2231
   Alhammad MM, 2018, J SYST SOFTWARE, V141, P131, DOI 10.1016/j.jss.2018.03.065
   Allman E, 2012, COMMUN ACM, V55, P50, DOI 10.1145/2160718.2160733
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   [Anonymous], 2018, GAMIFICATION GAME CH
   Atal R., 2015, Joint Proceedings of the 3rd International Workshop on Quantitative Approaches to Software Quality (QuASoQ), the Workshop on Alternate Workforces for Software Engineering (WAWSE) and the 1st International Workshop on Case Method for Computing Education (CMCE) co-located with APSEC 2015, P63
   Avgeriou P, 2016, Dagstuhl reports, V6, DOI DOI 10.4230/DAGREP.6.4.110
   Baldassarre MT, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106377
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Ben-Shachar MS., 2020, J OPEN SOURCE SOFTW, V5, P2815, DOI DOI 10.21105/JOSS.02815
   Besker T, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT, TECHDEBT, P21, DOI 10.1145/3387906.3388619
   Besker T, 2022, INFORM SOFTWARE TECH, V142, DOI 10.1016/j.infsof.2021.106740
   Codish D., 2017, P 50 HAW INT C SYST, P2006, DOI [10.24251/hicss.2017.244, DOI 10.24251/HICSS.2017.244]
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Crespo Y, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2021), P99, DOI 10.1109/TechDebt52882.2021.00020
   Cribari-Neto F, 2010, J STAT SOFTW, V34, P1
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Delgado D, 2017, CONF SOFTW ENG EDUC, P77, DOI 10.1109/CSEET.2017.22
   Dieste O, 2017, EMPIR SOFTW ENG, V22, P2457, DOI 10.1007/s10664-016-9471-3
   Digkas G, 2022, SOFTWARE QUAL J, V30, P283, DOI 10.1007/s11219-021-09569-8
   Do LNQ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P714, DOI 10.1145/3236024.3264830
   Falessi D., 2015, P 2015 EUROPEAN C SO, DOI [10.1145/27974332797462, DOI 10.1145/27974332797462]
   Feldt R, 2018, EMPIR SOFTW ENG, V23, P3801, DOI 10.1007/s10664-018-9655-0
   Ferrari SLP, 2004, J APPL STAT, V31, P799, DOI 10.1080/0266476042000214501
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler Martin, 2009, Technical debt quadrant, 2009
   Fox A., 2013, ENG SOFTWARE SERVICE
   Guaman D., 2017, P 2017 7 INT WORKSHO, P171, DOI [DOI 10.18178/WCSE.2017.06.030, 10.18178/wcse.2017.06.030]
   Haendler T, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P7691
   Hammedi W, 2021, J BUS RES, V122, P256, DOI 10.1016/j.jbusres.2020.08.032
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Lenth Russell V, 2024, CRAN
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Moldon L., 2020, ARXIV ABS200602371
   Moldon L, 2021, PROC INT CONF SOFTW, P549, DOI 10.1109/ICSE43902.2021.00058
   Monteiro R.H.B., 2021, DIVERSITY GAMIFICATI
   PAOLINO P, 2001, POLIT ANAL, V0009
   Parodi E, 2016, PROC LAT AM COMPUT C
   Pedreira O, 2015, INFORM SOFTWARE TECH, V57, P157, DOI 10.1016/j.infsof.2014.08.007
   Porto DD, 2021, J SYST SOFTWARE, V173, DOI 10.1016/j.jss.2020.110870
   Raibulet C, 2018, J SYST SOFTWARE, V144, P409, DOI 10.1016/j.jss.2018.07.010
   Ramasubbu N, 2019, IEEE T SOFTWARE ENG, V45, P285, DOI 10.1109/TSE.2017.2774832
   Rios N, 2018, INFORM SOFTWARE TECH, V102, P117, DOI 10.1016/j.infsof.2018.05.010
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saarimäki N, 2019, EUROMICRO CONF PROC, P317, DOI 10.1109/SEAA.2019.00055
   Silva D, 2017, COMPUT APPL ENG EDUC, V25, P230, DOI 10.1002/cae.21793
   Souza MRD, 2018, INFORM SOFTWARE TECH, V95, P201, DOI 10.1016/j.infsof.2017.09.014
   Stepsize, 2021, STAT TECHN DEBT 2021
   Stol K.-J., 2021, EMPIR SOFTW ENG
   Tonin GS, 2017, LECT NOTES BUS INF P, V283, P84, DOI 10.1007/978-3-319-57633-6_6
   Trang S, 2021, COMPUT HUM BEHAV, V116, DOI 10.1016/j.chb.2020.106644
   Wickham H., 2016, Using Gramm. Graph, P1, DOI DOI 10.18637/JSS.V077.B02
   Wohlin C., 2012, Experimentation in Software Engineering
   Xiao Liu, 2020, ICIIT 2020: Proceedings of the 2020 5th International Conference on Intelligent Information Technology, P56, DOI 10.1145/3385209.3385226
NR 54
TC 3
Z9 3
U1 3
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2022
VL 150
AR 106946
DI 10.1016/j.infsof.2022.106946
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2U8GD
UT WOS:000823392100010
DA 2024-07-18
ER

PT J
AU Huang, YC
   Wei, MS
   Wang, S
   Wang, JJ
   Wang, Q
AF Huang, Yuchao
   Wei, Moshi
   Wang, Song
   Wang, Junjie
   Wang, Qing
TI Yet another combination of IR- and neural-based comment generation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Comment generation; Information retrieval; Deep neural network
AB Background: Code comment generation techniques aim to generate natural language descriptions for source code. There are two orthogonal approaches for this task, i.e., information retrieval (IR) based and neural -based methods. Recent studies have focused on combining their strengths by feeding the input code and its similar code snippets retrieved by the IR-based approach to the neural-based approach, which can enhance the neural-based approach's ability to output low-frequency words and further improve the performance.Aim: However, despite the tremendous progress, our pilot study reveals that the current combination is not generalizable and can lead to performance degradation. In this paper, we propose a straightforward but effective approach to tackle the issue of existing combinations of these two comment generation approaches.Method: Instead of binding IR-and neural-based approaches statically, we combine them in a dynamic manner. Specifically, given an input code snippet, we first use an IR-based technique to retrieve a similar code snippet from the corpus. Then we use a Cross-Encoder based classifier to decide the comment generation method to be used dynamically, i.e., if the retrieved similar code snippet is a true positive (i.e., is semantically similar to the input), we directly use the IR-based technique. Otherwise, we pass the input to the neural-based model to generate the comment.Results: We evaluate our approach on a large-scale dataset of Java projects. Experiment results show that our approach can achieve 25.45 BLEU score, which improves the state-of-the-art IR-based approach, neural-based approach, and their combination by 41%, 26%, and 7%, respectively.Conclusions: We propose a straightforward but effective dynamic combination of IR-based and neural-based comment generation, which outperforms state-of-the-art approaches by a substantial margin.
C1 [Huang, Yuchao; Wang, Junjie; Wang, Qing] Lab Internet Software Technol, Beijing, Peoples R China.
   [Wang, Song; Wang, Junjie; Wang, Qing] Inst Software Chinese Acad Sci, State Key Lab Comp Sci, Beijing, Peoples R China.
   [Huang, Yuchao; Wang, Junjie; Wang, Qing] Univ Chinese Acad Sci, Beijing, Peoples R China.
   [Wei, Moshi] York Univ, Elect Engn & Comp Sci, Toronto, ON, Canada.
C3 Chinese Academy of Sciences; Institute of Software, CAS; Chinese Academy
   of Sciences; University of Chinese Academy of Sciences, CAS; York
   University - Canada
RP Wang, JJ; Wang, Q (corresponding author), Inst Software Chinese Acad Sci, State Key Lab Comp Sci, Beijing, Peoples R China.
EM yuchao2019@iscas.ac.cn; moshiwei@yorku.ca; wangsong@eecs.yorku.ca;
   junjie@iscas.ac.cn; wq@iscas.ac.cn
RI li, bai/JNE-1502-2023; cao, yutong/JJF-4531-2023; Zhu,
   Jie/HPI-1935-2023; wang, qi/ITT-9652-2023; Jiang, Yu/JEZ-9814-2023; qi,
   li/JFE-7167-2023
FU National Key Research and De-velopment Program of China
   [2018YFB1403400]; National Natural Science Foundation of China
   [62072442]
FX Acknowledgments This work is supported by the National Key Research and
   De-velopment Program of China under grant No. 2018YFB1403400, and the
   National Natural Science Foundation of China under grant No. 62072442.
CR Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Banerjee S., 2005, P WORKSHOP INTRINSIC, P65
   Bromley J., 1993, International Journal of Pattern Recognition and Artificial Intelligence, V7, P669, DOI 10.1142/S0218001493000339
   Cho KYHY, 2014, Arxiv, DOI [arXiv:1406.1078, DOI 10.3115/V1/D14-1179, 10.48550/ARXIV.1406.1078, DOI 10.48550/ARXIV.1406.1078]
   Collard ML, 2011, IEEE INT WORK C SO, P173, DOI 10.1109/SCAM.2011.19
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Eddy BP, 2013, CONF PROC INT SYMP C, P13, DOI 10.1109/ICPC.2013.6613829
   Edmund W, 2014, MIN QUEST ANSW SIT A
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Gros D, 2020, IEEE INT CONF AUTOM, P746, DOI 10.1145/3324884.3416546
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Haque S, 2021, Arxiv, DOI arXiv:2101.02742
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Kajko-Mattsson M, 2005, EMPIR SOFTW ENG, V10, P31, DOI 10.1023/B:LIDA.0000048322.42751.ca
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Kingma D. P., 2014, arXiv
   Koehn P, 2017, Arxiv, DOI [arXiv:1706.03872, 10.48550/arXiv.1706.03872, DOI 10.48550/ARXIV.1706.03872, DOI 10.18653/V1/W17-3204]
   Kramer D., 1999, Seventeenth Annual International Conference on Computer Documentation. Conference Proceedings, P147, DOI 10.1145/318372.318577
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Lin CY, 2004, ROUGE: A Package for Automatic Evaluation of Summaries, P74, DOI DOI 10.1253/JCJ.34.1213
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Loper E, 2002, PREPRINT
   Lopes C, 2010, UCI source code data sets
   Rush AM, 2015, Arxiv, DOI [arXiv:1509.00685, 10.18653/v1/d15-1044, DOI 10.18653/V1/D15-1044]
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   PAL SK, 1992, IEEE T NEURAL NETWOR, V3, P683, DOI 10.1109/72.159058
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Reimers N, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3982
   Schuster M, 1997, IEEE T SIGNAL PROCES, V45, P2673, DOI 10.1109/78.650093
   Shimonaka K, 2016, INT WORKSH EMPIR ENG, P18, DOI 10.1109/IWESEP.2016.18
   Sridhara G., 2010, P IEEE ACM INT C AUT, P43, DOI DOI 10.1145/1858996.1859006
   Sutskever I, 2014, ADV NEUR IN, V27
   Vaswani A, 2023, Arxiv, DOI [arXiv:1706.03762, DOI 10.48550/ARXIV.1706.03762, 10.48550/arXiv.1706.03762]
   Vedantam R, 2015, PROC CVPR IEEE, P4566, DOI 10.1109/CVPR.2015.7299087
   Wei BL, 2020, IEEE INT CONF AUTOM, P349, DOI 10.1145/3324884.3416578
   Wilcoxon Frank., 1963, CRITICAL VALUES PROB
   Wiseman S, 2016, Arxiv, DOI [arXiv:1606.02960, 10.48550/arXiv.1606.02960]
   Wong E, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P380, DOI 10.1109/SANER.2015.7081848
   You QZ, 2016, PROC CVPR IEEE, P4651, DOI 10.1109/CVPR.2016.503
   Zhang J, 2020, PROC INT CONF SOFTW, P1385, DOI 10.1145/3377811.3380383
NR 49
TC 2
Z9 2
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2022
VL 152
AR 107001
DI 10.1016/j.infsof.2022.107001
EA AUG 2022
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4E9SM
UT WOS:000848158300006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cajander, Å
   Larusdottir, M
   Geiser, JL
AF Cajander, Asa
   Larusdottir, Marta
   Geiser, Johannes L.
TI UX professionals' learning and usage of UX methods in agile
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE User experience; UX; Agile development; UX professionals; UX methods;
   Lifelong learning
ID SOFTWARE-DEVELOPMENT; USABILITY; SCRUM; CHALLENGES; PRINCIPLES;
   ENGINEERS; INDUSTRY
AB Context: The usage of User Experience (UX) methods has been studied through the years. However, little is known about UX professionals' lifelong learning processes related to UX methods in Agile, choosing what UX methods to use, and the enablers and hindrances for using the UX methods.
   Objective: The study aims to broaden current knowledge about UX professionals' lifelong learning practices to understand their work situations better. The paper describes how UX professionals learn about and choose UX methods, their frequency of use, and the enablers and barriers when using the UX methods in Agile.
   Method: An interview study was conducted with 13 UX professionals from various industries and two countries working with Agile and UX. We used a qualitative approach, and a thematic analysis was carried out to answer the research questions.
   Results: The results show that support from colleagues is an essential component for learning about the methods and how to use UX methods. Time pressure makes UX professionals choose methods they know will deliver their desired results. Prototyping, user testing, user journeys, and workshops are the most frequently used UX methods. Additionally, the results show that UX professionals think that the UX methods are often too complicated and take too long to learn. Additionally, they find it challenging to integrate UX methods into Agile.
   Conclusion: These findings indicate that UX methods might work better if designed to be less complicated and deliver results more efficiently. Moreover, collegial and peer learning is central to UX professionals. The HCI community could be more active in supporting this culture by sharing information and learning. Finally, the usability and UX of the tools affect which UX methods are used.
C1 [Cajander, Asa; Geiser, Johannes L.] Uppsala Univ, Uppsala, Sweden.
   [Larusdottir, Marta] Reykjavik Univ, Reykjavik, Iceland.
C3 Uppsala University; Reykjavik University
RP Cajander, Å (corresponding author), Uppsala Univ, Uppsala, Sweden.
EM asa.cajander@it.uu.se; marta@ru.is; jogeiser@icloud.com
OI Cajander, Asa/0000-0001-7472-2215
FU AFA [180250]
FX AFA funded the research study through System Development Methods for a
   Digital Work Environment (STRIA), grant number 180250.
CR Alalwan Ali Abdallah, COMPUT ELECTRON AGR, V34, P1177, DOI [10.1016/j.palaeo.2017.02.029, DOI 10.1016/J.COMPAG.2017.12.034, 10.1016/j.tele.2017.05.008]
   [Anonymous], 4 NORDIC C HUMAN COM
   Ardito C, 2014, INT J HUM-COMPUT ST, V72, P542, DOI 10.1016/j.ijhcs.2013.10.004
   Arvola M, 2008, NORD J DIGIT LIT, V3, P78
   Bell E., 2019, Business Research Methods, VFifth
   Beyer H., 2010, Synthesis Lectures on Human-Centered Informatics, V3, P1
   Boivie I., 2005, FINE BALANCE ADDRESS
   Boivie I, 2006, INTERACT COMPUT, V18, P601, DOI 10.1016/j.intcom.2005.10.003
   Braun V, 2013, Success Qual Res, V1st
   Brhel M, 2015, INFORM SOFTWARE TECH, V61, P163, DOI 10.1016/j.infsof.2015.01.004
   Bruun A, 2018, NORDICHI'18: PROCEEDINGS OF THE 10TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION, P352, DOI 10.1145/3240167.3240213
   Bygstad B, 2008, INTERACT COMPUT, V20, P375, DOI 10.1016/j.intcom.2007.12.001
   Cajander Å, 2015, IFIP ADV INF COMM TE, V468, P141, DOI 10.1007/978-3-319-27048-7_10
   Cajander Å, 2013, LECT NOTES COMPUT SC, V8119, P762
   Cajander Å, 2012, COMPUT SCI EDUC, V22, P319, DOI 10.1080/08993408.2012.727710
   Cajander Å, 2010, IFIP ADV INF COMM TE, V332, P86
   Cajander Asa., 2010, Usability - Who Cares?: The Introduction of User-Centred Systems Design in Organisations
   Clemmensen T., 2021, HUMAN WORK INTERACTI, P81, DOI [10.1007/978-3-030-71796-4_5, DOI 10.1007/978-3-030-71796-4]
   Cockton G, 2016, HUMAN COMPU, P1, DOI 10.1007/978-3-319-32165-3
   Cohn Mike, 2009, Succeeding with Agile: Software Development Using Scrum, V1st
   Cohn ML., 2010, P 16 ACM INT C SUPPO, P45, DOI [10.1145/1880071.1880079, DOI 10.1145/1880071.1880079]
   Cutkosky M., 2013, 3 INT C INT DES ENG
   Da Silva TS, 2018, INFORM SOFTWARE TECH, V102, P1, DOI 10.1016/j.infsof.2018.04.008
   Daniels M, 2015, INT J ENG EDUC, V31, P267
   de Grip A, 2012, INT J MANPOWER, V33, P583, DOI 10.1108/01437721211253209
   Denscombe M., 2014, The Good Research Guide: For small-Scale Social Research Projects
   Desmet PMA, 2013, INT J DES, V7, P5
   Espinoza AM, 2020, SOC PSYCHOL EDUC, V23, P861, DOI 10.1007/s11218-020-09571-1
   Fiesler C, 2019, CONFERENCE COMPANION PUBLICATION OF THE 2019 COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'19 COMPANION), P455, DOI 10.1145/3311957.3359428
   Folstad Asbjorn., 2012, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P2127, DOI DOI 10.1145/2207676
   Gama K, 2018, ITICSE'18: PROCEEDINGS OF THE 23RD ANNUAL ACM CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P248, DOI 10.1145/3197091.3197138
   Garcia-Penalvo F.J, 2014, P 2 INT C TECHN EC E, P569, DOI 10.1145/2669711.2669957
   Geiser J., 2020, THESIS UPPSALA U
   GOULD JD, 1985, COMMUN ACM, V28, P300, DOI 10.1145/3166.3170
   Gray CM, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3285, DOI 10.1145/2702123.2702579
   Gray Colin M, 2014, P 2014 C DES INT SYS, P725, DOI DOI 10.1145/2598510.2598595
   Gross J, 2012, CHANDOS INF PROF SER, P99
   Guest G, 2006, EUR J ENG EDUC, V31, P273, DOI 10.1080/03043790600644396
   Gulliksen J., 2004, PROC NORDICHI 2004, P207
   Hoda R, 2017, INFORM SOFTWARE TECH, V85, P60, DOI 10.1016/j.infsof.2017.01.007
   Holmlid S., 2007, DEVELOPING THEMATIC
   Holtzblatt K., 2004, RAPID CONTEXTUAL DES, DOI [DOI 10.1145/1066322.1066325, 10.1145/1066322.1066325]
   Horvath I., 2006, P IDETCCIE, P10
   Hui JS, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P2023, DOI 10.1145/2998181.2998264
   Hussein I, 2014, INT CONF USER SCI, P62, DOI 10.1109/IUSER.2014.7002678
   Iivari J., 2006, System Sciences, V8, p176a
   Inal Y, 2020, J USABILITY STUD, V15, P210
   Jeong SH, 2018, HUM RESOUR DEV REV, V17, P128, DOI 10.1177/1534484318772242
   Johnson B.D., 2011, Synthesis Lectures on Computer Science, V5, P1
   Kashfi P, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.130
   Kou YB, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300279
   Kuusinen K., 2012, Proceedings of the 7th Nordic Conference on Human-Computer Interaction: Making Sense Through Design (NordiCHI'12), P139, DOI DOI 10.1145/2399016.2399037
   Larusdottir M., 2015, INTERACT 2015 ADJUNC, V22, P249
   Lárusdóttir M, 2016, HUMAN COMPU, P225, DOI 10.1007/978-3-319-32165-3_10
   Larusdottir M, 2017, J SYST SOFTWARE, V123, P214, DOI 10.1016/j.jss.2016.01.024
   Law ELC, 2015, INT J HUM-COMPUT INT, V31, P584, DOI 10.1080/10447318.2015.1065693
   Lazar J., 2017, RES METHODS HUMAN CO, DOI DOI 10.1016/B978-0-12-805390-4.00014-5
   Lenarduzzi V, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P112, DOI 10.1109/SEAA.2016.56
   Longworth N., 1996, LIFELONG LEARNING NE
   Loscher I., 2020, THESIS ACTA U UPSALI
   Peters AK, 2015, INT CONF GLOBAL SOFT, P61, DOI 10.1109/ICGSE.2015.20
   Poltrock S.E., 1994, ACM Trans. Comput.-Hum. Interact, V1, P52
   Rajanen M, 2007, LECT NOTES COMPUT SC, V4663, P511
   Roedl D.J., 2013, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P1951, DOI DOI 10.1145/2470654.2466257
   Rogers Y, 2004, ANNU REV INFORM SCI, V38, P87, DOI 10.1002/aris.1440380103
   Schugurensky D., 2000, WALL Working Paper
   Seale C., 2004, QUALITATIVE RES PRAC
   Smerdon ET, 1996, AM CERAM SOC BULL, V75, P51
   Vasilchenko A., 2020, FRONT EDUC, V2020
   Wale-Kolade A, 2016, INTERACT COMPUT, V28, P437, DOI 10.1093/iwc/iwv016
   Yuan Jia, 2012, Human-Centered Software Engineering. Proceedings of the 4th International Conference, HCSE 2012, P331, DOI 10.1007/978-3-642-34347-6_25
   Zander Carol., 2012, Proceedings of the 12th Koli Calling International Conference on Computing Education Research, P111, DOI DOI 10.1145/2401796.2401810
NR 72
TC 2
Z9 3
U1 11
U2 39
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2022
VL 151
AR 107005
DI 10.1016/j.infsof.2022.107005
EA JUL 2022
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V5BX
UT WOS:000859493100005
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Chen, ZF
   Ma, WWY
   Chen, L
   Song, W
AF Chen, Zhifei
   Ma, Wanwangying
   Chen, Lin
   Song, Wei
TI Collaboration in software ecosystems: A study of work groups in open
   environment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Open source software; Software ecosystem; Collaboration; Work groups;
   Cross-project bugs
ID NETWORK EVOLUTION
AB Context: As a particular type of software ecosystem, an open source software ecosystem (OSSECO) is a collection of interdependent open source software (OSS) projects which are developed and evolve together. Events happening within an OSSECO inherently involve the collaboration of participants from multiple OSS projects, forming a temporary work group. However, it is still unclear how different members of a work group collaborate to fix cross-project bugs, a typical event in the maintenance of OSSECOs. Objective: This study aims to investigate the characteristics of collaboration within a work group when fixing cross-project bugs in an OSSECO. It involves the participants from the upstream (which caused the bugs) and the downstream (which were affected by the bugs) OSS projects. Method: We conducted our study on 236 cross-project bugs from the scientific Python ecosystem, involving 571 participants and 91 OSS projects, to understand open collaboration within a work group. We established a quantitative analysis to investigate the members of a work group, along with a qualitative analysis to understand the roles of the members from different OSS communities. Results: The results show that: (1) A typical work group is constituted of four to eight members from the core development teams of the two OSS communities. More members concern with the upstream OSS projects and few can make active contributions to both sides; (2) Distinct responsibilities are taken by the two OSS communities, with the downstream members as the problem-finders and the upstream members as the decision-makers or gatekeepers. Conclusions: Our findings reveal the collaborative mechanism and the responsibility allocation between the upstream and downstream OSS communities in the ecosystems.
C1 [Chen, Zhifei; Song, Wei] Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, Nanjing, Peoples R China.
   [Ma, Wanwangying; Chen, Lin] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
C3 Nanjing University of Science & Technology; Nanjing University
RP Chen, ZF (corresponding author), Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, Nanjing, Peoples R China.
EM chenzhifei@njust.edu.cn; wwyma@smail.nju.edu.cn; lchen@nju.edu.cn;
   wsong@njust.edn.cn
FU National Natural Science Foundation of China [61872177, 62172202,
   61761136003]
FX Acknowledgments We would like to thank the anonymous reviewers for their
   insightful feedback and comments. This work was supported in part by the
   National Natural Science Foundation of China (Grant No. 61872177,
   62172202, and 61761136003) .
CR [Anonymous], 2014, Proceedings of the 5th International Workshop on Emerging Trends in Software Metrics, WETSoM 2014, DOI [10.1145/2593868.2593875, DOI 10.1145/2593868.2593875]
   Bertram D, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P291
   Blincoe K, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P202, DOI 10.1109/MSR.2015.26
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Bosch Jan, 2009, 2009 13 INT SOFTW PR, V9, P111, DOI DOI 10.1145/1753235.1753251
   Breu S, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P301
   Canfora G., 2011, Proceedings of the 8th Working Conference on Mining Software Repositories (MSR'11), P143, DOI DOI 10.1145/1985441.1985463
   Choi J, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P835, DOI 10.1145/2998181.2998265
   Constantino K, 2020, INT CONF GLOBAL SOFT, P55, DOI 10.1145/3372787.3390442
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Crowston K., 2005, First Monday, V10, DOI 10.5210/fm.v10i2.1207
   Crowston K, 2008, J DATABASE MANAGE, V19, P1, DOI 10.4018/jdm.2008040101
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Farias V, 2019, IEEE SOFTWARE, V36, P42, DOI 10.1109/MS.2018.2874325
   Franco-Bedoya O, 2017, INFORM SOFTWARE TECH, V91, P160, DOI 10.1016/j.infsof.2017.07.007
   Gandhi M, 2019, P INT WORKSH QUANT A, P37
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Hou TT, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106451
   Jansen S, 2009, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE-COMPANION.2009.5070978
   Jiang J, 2017, EMPIR SOFTW ENG, V22, P547, DOI 10.1007/s10664-016-9436-6
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Kittur A, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P215
   Lima A., 2014, 8 INT AAAI C WEBL SO, DOI [10.1609/icwsm.v8i1.14552, DOI 10.1609/ICWSM.V8I1.14552]
   Lungu M, 2010, SCI COMPUT PROGRAM, V75, P264, DOI 10.1016/j.scico.2009.09.004
   Lyulina E, 2021, IEEE WORK CONF MIN S, P618, DOI 10.1109/MSR52588.2021.00086
   Ma WWY, 2020, PROC INT CONF SOFTW, P100, DOI 10.1145/3377811.3380442
   Ma WWY, 2017, PROC INT CONF SOFTW, P381, DOI 10.1109/ICSE.2017.42
   Manikas K, 2013, J SYST SOFTWARE, V86, P1294, DOI 10.1016/j.jss.2012.12.026
   Messerschmitt D.G., 2005, Software ecosystem: Understanding an indispensable technology and industry, P1
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Oliveira R, 2020, INFORM SOFTWARE TECH, V120, DOI 10.1016/j.infsof.2019.106242
   Sheoran Jyoti, 2014, P 11 WORK C MIN SOFT, P336, DOI DOI 10.1145/2597073.2597114
   Tausczik Y.R., 2014, Proceedings of the 17th ACM Conference on Computer Supported Cooperative Work and Social Computing, CSCW'14, P355
   Thung F, 2013, EUR CON SFTWR MTNCE, P323, DOI 10.1109/CSMR.2013.41
   Wang Y, 2021, AUTOMAT SOFTW ENG, V28, DOI 10.1007/s10515-021-00283-0
   Wilcoxon F., 1992, BREAKTHROUGHS STAT, p196
   Yang WH, 2020, INFORM SOFTWARE TECH, V125, DOI 10.1016/j.infsof.2020.106336
   Yu WL, 2014, ADV EDUC RES, V58, P265
   Zhou SR, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P350, DOI 10.1145/3338906.3338918
NR 40
TC 6
Z9 6
U1 1
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2022
VL 145
AR 106849
DI 10.1016/j.infsof.2022.106849
EA FEB 2022
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0J9PR
UT WOS:000780430800010
DA 2024-07-18
ER

PT J
AU Tronicek, Z
AF Tronicek, Zdenek
TI Indexing source code and clone detection
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Clone detection; Code clones; Indexing; Tree pattern matching
ID ACCURATE; SEARCH
AB Context: Searching source code is a common task in code recommendation systems as well as in many other areas. Clone detection is used in software maintenance and bug detection. Objective: The paper introduces an algorithm for building the index structure of abstract syntax trees. When the index structure is built, a pattern tree can be found in time linear in the length of the pattern. Furthermore, the paper describes DrDup2 and DrDupLex, two open-source tools that use the index structure to find Type-2 clones. Method: The index structure presented in this paper is based on the trie, which is a fundamental data structure in computer science. Evaluation of the presented clone detectors is done on BigCloneBench, which is a well-established benchmark for clone detection. Results: Comparison with three state-of-the-art clone detectors (NiCad, CloneWorks and SourcererCC) shows that DrDup2 and DrDupLex are able to beat them in precision, recall and running time. Conclusion: The presented index structure can be used for example to speed up searching for code fragments in code recommendation systems. It is also shown that it can be used to detect Type-2 clones with high precision and recall.
C1 [Tronicek, Zdenek] Tarleton State Univ, Coll Sci & Technol, Stephenville, TX 76401 USA.
C3 Texas A&M University System; Tarleton State University
RP Tronicek, Z (corresponding author), Tarleton State Univ, Coll Sci & Technol, Stephenville, TX 76401 USA.
EM tronicek@tarleton.edu
CR Akram J, 2020, SOFTWARE PRACT EXPER, V50, P22, DOI 10.1002/spe.2759
   [Anonymous], 2018, REFACTORING IMPROVIN
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Barnaby C, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1353, DOI 10.1145/3368089.3417052
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bettenburg N, 2012, SCI COMPUT PROGRAM, V77, P760, DOI 10.1016/j.scico.2010.11.010
   Büch L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P95, DOI [10.1109/saner.2019.8668039, 10.1109/SANER.2019.8668039]
   Bulychev P., 2008, SPRING YOUNG RES C S, DOI DOI 10.15514/SYRCOSE-2008-2-22
   Charpentier A., 2015, P 19 INT C EV ASS SO
   Choi E., 2011, PROC 5 INT WORKSHOP, P7
   Chunrong Fang, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P516, DOI 10.1145/3395363.3397362
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Evans WS, 2009, SOFTWARE QUAL J, V17, P309, DOI 10.1007/s11219-009-9074-y
   FREDKIN E, 1960, COMMUN ACM, V3, P490, DOI 10.1145/367390.367400
   Gil Y, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P477, DOI 10.1109/SANER.2017.7884657
   Göde N, 2009, EUR CON SFTWR MTNCE, P219, DOI 10.1109/CSMR.2009.20
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Higo Y., 2011, 2011 18th Working Conference on Reverse Engineering, P3, DOI 10.1109/WCRE.2011.11
   Hummel Benjamin., 2010, Software Maintenance, IEEE International Conference on, P1
   Janousek J, 2014, LECT NOTES COMPUT SC, V8614, P198, DOI 10.1007/978-3-319-09704-6_18
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang Lingxiao, 2007, P THE 6 JOINT M EURO, P55, DOI DOI 10.1145/1287624.1287634
   Johnson J. H., 1993, Proceedings CASCON '93, P171
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Koschke Rainer, 2007, DUPLICATION REDUNDAN
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Leitao AM, 2004, SOFTWARE QUAL J, V12, P361, DOI 10.1023/B:SQJO.0000039793.31052.72
   Li JY, 2012, PROC INT CONF SOFTW, P310, DOI 10.1109/ICSE.2012.6227183
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Luan SF, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360578
   Mayrand J, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P244, DOI 10.1109/ICSM.1996.565012
   Murakami H, 2013, CONF PROC INT SYMP C, P93, DOI 10.1109/ICPC.2013.6613837
   Nichols L, 2019, LECT NOTES COMPUT SC, V11424, P247, DOI 10.1007/978-3-030-16722-6_14
   Nishi MA, 2018, J SYST SOFTWARE, V137, P130, DOI 10.1016/j.jss.2017.11.039
   Perez Daniel, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P518, DOI 10.1109/MSR.2019.00078
   Ragkhitwetsagul C, 2019, EMPIR SOFTW ENG, V24, P2236, DOI 10.1007/s10664-019-09697-7
   Rahman F, 2012, EMPIR SOFTW ENG, V17, P503, DOI 10.1007/s10664-011-9195-3
   Rahman W, 2020, INT WORKS SOFTW CLON, P38, DOI [10.1109/iwsc50091.2020.9047640, 10.1109/IWSC50091.2020.9047640]
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy J. R., 2007, QUEENS SCH COMPUTING, V541, P64
   Saini V, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P354, DOI 10.1145/3236024.3236026
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Svajlenko J, 2017, PROC IEEE ACM INT C, P27, DOI 10.1109/ICSE-C.2017.3
   Svajlenko J, 2014, PROC IEEE INT CONF S, P321, DOI 10.1109/ICSME.2014.54
   Tairas R., 2006, P 44 ANN SE REG C, P679, DOI 10.1145/1185448.1185597
   Ul Ain Q, 2019, IEEE ACCESS, V7, P86121, DOI 10.1109/ACCESS.2019.2918202
   van Bladel B, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P492, DOI [10.1109/SANER48275.2020.9054798, 10.1109/saner48275.2020.9054798]
   Wahler V, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P128
   Walker A, 2020, APPL COMPUT REV, V20, P5, DOI [10.1145/3392350.3392351, 10.1145/3338840.3355659]
   Walker A, 2019, APPL COMPUT REV, V19, P28, DOI [10.1145/3338840.3355654, 10.1145/3381307.3381310]
   Wang PC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/3180155.3180179
   Yu DJ, 2019, IEEE ACCESS, V7, P22421, DOI 10.1109/ACCESS.2019.2898411
   Yu H, 2019, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2019.00021
   Yuan Y, 2012, IEEE INT CONF AUTOM, P286, DOI 10.1145/2351676.2351725
   Yuan Y, 2011, ASIA PAC SOFWR ENG, P250, DOI [10.1109/APSEC.2011.13, 10.1109/APSC.2011.13]
   Zeng J, 2019, IEEE ACCESS, V7, P125062, DOI 10.1109/ACCESS.2019.2938825
NR 64
TC 1
Z9 1
U1 1
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2022
VL 144
AR 106805
DI 10.1016/j.infsof.2021.106805
EA JAN 2022
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YK3DU
UT WOS:000745098800012
DA 2024-07-18
ER

PT J
AU Li, MY
   Shi, L
   Wang, YW
   Wang, JJ
   Wang, Q
   Hu, J
   Peng, XH
   Liao, WM
   Pi, GZ
AF Li, Mingyang
   Shi, Lin
   Wang, Yawen
   Wang, Junjie
   Wang, Qing
   Hu, Jun
   Peng, Xinhua
   Liao, Weimin
   Pi, Guizhen
TI Automated data function extraction from textual requirements by
   leveraging semi-supervised CRF and language model
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Function point analysis; Size estimation; Conditional random field;
   Bootstrapping; Language model
AB Context: Function Point Analysis (FPA) provides an objective, comparative measure for size estimation in the early stage of software development. When practicing FPA, analysts typically abide by the following steps: data function (DF) extraction, transactional function extraction, function type classification and adjustment factor determination. However, due to lack of approach and tool support, these steps are usually conduct by human efforts in practice. Related approaches can hardly be applied in the FPA due to the following three challenges, i.e., FPA rule-driven extraction, domain-specific parsing, and expensive labeled resources. Objective: In this paper, we aim to automate the extraction of DFs, which is the starting and fundamental step in FPA. Method: We propose an automated approach named DEX to extract data functions from textual requirements. Specifically, DEX introduces the popularly-used conditional random field (CRF) model to predict the boundary of a data function. Besides, DEX employs the bootstrapping-based algorithm and DF-oriented language model to further boost the performance. Results: We evaluate DEX from two aspects: evaluation on a real industrial dataset and a manual review by domain experts. The evaluation on the real industrial dataset shows that DEX could achieve 80% precision, 84% recall, and 82% F1, and outperforms three state-of-the-art baselines. The expert review suggests that DEX could increase 16% precision and 13% recall, compared with those produced by engineers. Conclusion: DEX could achieve promising results under a small number of labeled requirements and outperform the state-of-the-art approaches. Moreover, DEX could help engineers produce more accurate and complete DFs in the industrial environment.
C1 [Li, Mingyang; Shi, Lin; Wang, Yawen; Wang, Junjie; Wang, Qing; Hu, Jun] Inst Software, Lab Internet Software Technol, Beijing, Peoples R China.
   [Li, Mingyang; Shi, Lin; Wang, Yawen; Wang, Junjie; Wang, Qing; Hu, Jun] Univ Chinese Acad Sci, Beijing, Peoples R China.
   [Wang, Qing] Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
   [Peng, Xinhua; Liao, Weimin; Pi, Guizhen] China Merchants Bank, Shenzhen, Peoples R China.
C3 Chinese Academy of Sciences; University of Chinese Academy of Sciences,
   CAS; Chinese Academy of Sciences; China Merchants Bank
RP Shi, L (corresponding author), Inst Software, Lab Internet Software Technol, Beijing, Peoples R China.; Shi, L (corresponding author), Univ Chinese Acad Sci, Beijing, Peoples R China.
EM shilin@iscas.ac.cn
RI cao, yutong/JJF-4531-2023; li, bai/JNE-1502-2023; junjie,
   wang/JXM-3649-2024; Zhu, Jie/HPI-1935-2023; wang, qi/ITT-9652-2023
OI Shi, Lin/0000-0003-1476-7213
FU National Key Research and Development Program of China [2018YFB1403400];
   China Merchants Bank; National Science Foundation of China [61802374,
   61432001, 61602450]
FX This work is supported by the National Key Research and Development
   Program of China under grant No. 2018YFB1403400, China Merchants Bank,
   the National Science Foundation of China under grant No. 61802374, No.
   61432001, No. 61602450.
CR Adem NAZ, 2010, INT CONF COMPUT AUTO, P664, DOI 10.1109/ICCAE.2010.5451322
   [Anonymous], C EMP METH NAT LANG
   Arora C, 2017, IEEE T SOFTWARE ENG, V43, P918, DOI 10.1109/TSE.2016.2635134
   Baek S.J., 2012, P INT C IT CONV SEC
   Berry DM, 2017, INT REQUIR ENG CONF, P570, DOI 10.1109/RE.2017.64
   Bourigault D., 1992, P 14 C COMPUTATIONAL, V3, P977
   Brown P. F., 1992, Computational Linguistics, V18, P31
   Bundschuh M., 2008, IFPUG FUNCTION POINT, P453
   Bundschuh M., 2008, IFPUG FUNCTION POINT, P323
   Chan W, 2016, INT CONF ACOUST SPEE, P4960, DOI 10.1109/ICASSP.2016.7472621
   Chiu J.P., 2016, Named entity recognition with bidirectional lstm-cnns, V4, P357, DOI 10.1162/tacl_a_00104
   Dai HJ, 2015, J CHEMINFORMATICS, V7, DOI 10.1186/1758-2946-7-S1-S14
   Dey R, 2017, MIDWEST SYMP CIRCUIT, P1597, DOI 10.1109/MWSCAS.2017.8053243
   Dhinakaran VT, 2018, INT REQUIR ENG CONF, P170, DOI 10.1109/RE.2018.00026
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Dwarakanath A, 2013, S VIS LANG HUM CEN C, P314, DOI 10.1109/RE.2013.6636736
   Edagawa T, 2011, J SYST SOFTWARE, V84, P976, DOI 10.1016/j.jss.2011.01.029
   Finkel Jenny Rose, 2005, ACL, P363
   Gemkow T, 2018, INT REQUIR ENG CONF, P412, DOI 10.1109/RE.2018.00052
   Gers FA, 2001, IEEE T NEURAL NETWOR, V12, P1333, DOI 10.1109/72.963769
   Greenberg N, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P2824
   Hira A, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962613
   Howard J, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P328
   Huang RH, 2010, ACL 2010: 48TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P275
   Huang ZH, 2015, COMPUT INTEL NEUROSC, V2015, DOI 10.1155/2015/685404
   Inokuchi A, 2000, LECT NOTES COMPUT<D>, V1910, P13
   International Organization for Standardization, INFORM TECHNOLOGY SO
   Irawati A.R., 2012, INT J COMPUTER SCI I, V9, P124
   Johann T, 2017, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2017.71
   Jones Karen Sparck., 2004, Journal of documentation
   Kanimozhi U, 2017, POLYTECH OPEN LIBR I, V56, P53
   Lafferty John D, 2001, CONDITIONAL RANDOM F
   Lample M., 2016, P NAACL HLT, P260, DOI DOI 10.18653/V1/N16-1030
   Li HY, 2008, RECSYS'08: PROCEEDINGS OF THE 2008 ACM CONFERENCE ON RECOMMENDER SYSTEMS, P107
   Li MY, 2020, PROC IEEE INT CONF S, P208, DOI 10.1109/ICSME46990.2020.00029
   Lin ZQ, 2017, IEEE INT CONF AUTOM, P123, DOI 10.1109/ASE.2017.8115625
   Ling Wang, 2015, CoRR
   LOW GC, 1990, IEEE T SOFTWARE ENG, V16, P64, DOI 10.1109/32.44364
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Maas A., 2015, Proceedings of the 2015 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, P345
   MATSON JE, 1994, IEEE T SOFTWARE ENG, V20, P275, DOI 10.1109/32.277575
   Ménard PA, 2016, AUTOMAT SOFTW ENG, V23, P649, DOI 10.1007/s10515-015-0184-4
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Poritz A. B., 1982, Proceedings of ICASSP 82. IEEE International Conference on Acoustics, Speech and Signal Processing, P1291
   Pow-Sang JA, 2009, COMM COM INF SC, V59, P160
   Qin Long, 2013, THESIS
   Rosenfeld R, 2000, P IEEE, V88, P1270, DOI 10.1109/5.880083
   Sachan D.S, 2017, ABS171107908
   Sag Muhammet Ali, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P272, DOI 10.1109/IWSM.Mensura.2014.29
   Settles B, 2008, P C EMP METH NAT LAN, P1070, DOI DOI 10.3115/1613715.1613855
   Shi L, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1444, DOI 10.1145/3368089.3417053
   Singh T.D., 2008, P 6 INT C NAT LANG P, P240
   Tantithamthavorn C., 2017, Scottknottesd: The Scott-Knott Effect Size Difference (esd) Test
   Zhang T, 2002, J MACH LEARN RES, V2, P615, DOI 10.1162/153244302320884560
   Zhu X.J., 2005, Semi-Supervised Learning Literature Survey
NR 55
TC 2
Z9 3
U1 1
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2022
VL 143
AR 106770
DI 10.1016/j.infsof.2021.106770
EA DEC 2021
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XK9HO
UT WOS:000727767300005
DA 2024-07-18
ER

PT J
AU Feng, S
   Keung, J
   Zhang, PC
   Xiao, Y
   Zhang, M
AF Feng, Shuo
   Keung, Jacky
   Zhang, Peichang
   Xiao, Yan
   Zhang, Miao
TI The impact of the distance metric and measure on SMOTE-based techniques
   in software defect prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical software engineering; Defect prediction; Class imbalance;
   Distance metric; Synthetic minority oversampling TEchnique
ID DIFFERENTIAL EVOLUTION
AB Context: In software defect prediction, SMOTE-based techniques are widely adopted to alleviate the class imbalance problem. SMOTE-based techniques select instances close in the distance to synthesize minority class instances, ensuring few noise instances are generated. Objective: However, recent studies show that selecting instances far away effectively increases the diversity and alleviates the overgeneralization brought by SMOTE-based techniques. To investigate the relationship between the distance of the selected instances and the performances of SMOTE-based techniques, we carry out this study. Method: We first conduct experiments to empirically investigate the impact of the distance between the instances on the performances of three common SMOTE-based techniques. Based on the experimental result, we improve a recently proposed oversampling technique-SMOTUNED. Results: The experimental results on five common classifiers across 30 imbalanced datasets from the PROMISE repository show that (1) the selection of the distance metric has little impact on the performances of SMOTE based techniques, (2) as long as the number of synthesized noise instances is not beyond the noise-resistant ability of classifiers, the overall performances measured by AUC and balance of SMOTE-based techniques are not significantly affected by the distance between instances, and (3) the probability of detection (pd) and the probability of false alarm (pf) values of SMOTE-based techniques are significantly affected by the distance between the selected instances. The larger the distance between the selected instances is, the lower the pd and pf values SMOTE-based techniques obtain. The performance of the improved SMOTUNED is similar to that of the original SMOTUNED, but the improved SMOTUNED dramatically decreases the execution time of the original SMOTUNED. Conclusion: By controlling the distance, different pd and pf values can be obtained. The diversity of SMOTE-based techniques can be improved, and the overgeneralization can be avoided.
C1 [Feng, Shuo] Zhengzhou Univ, Sch Informat Engn, Zhengzhou, Henan, Peoples R China.
   [Feng, Shuo; Keung, Jacky; Zhang, Miao] City Univ Hong Kong, Dept Comp Sci, Kowloon, Peoples R China.
   [Zhang, Peichang] Shenzhen Univ, Coll Elect & Informat Engn, Shenzhen, Guangdong, Peoples R China.
   [Xiao, Yan] Natl Univ Singapore, Sch Comp, Singapore 117417, Singapore.
C3 Zhengzhou University; City University of Hong Kong; Shenzhen University;
   National University of Singapore
RP Zhang, PC (corresponding author), Shenzhen Univ, Coll Elect & Informat Engn, Shenzhen, Guangdong, Peoples R China.; Xiao, Y (corresponding author), Natl Univ Singapore, Sch Comp, Singapore 117417, Singapore.
EM shuo.feng@hotmail.com; jacky.keung@cityu.edu.hk; pzhang@szu.edu.cn;
   dcsxan@nus.edu.sg; miazhang9-c@my.cityu.edu.hk
OI ZHANG, Miao/0000-0001-9659-9393; Keung, Jacky/0000-0002-3803-9600; XIAO,
   Yan/0000-0002-2563-083X; feng, shuo/0000-0002-1575-9891
CR Abu Shanab A, 2012, 2012 IEEE 13TH INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI), P415, DOI 10.1109/IRI.2012.6303039
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   [Anonymous], 2001, Ph.D. Thesis
   Benni KE, 2018, IEEE T SOFTWARE ENG, V44, P534, DOI 10.1109/TSE.2017.2731766
   Bennin KE, 2019, EMPIR SOFTW ENG, V24, P602, DOI 10.1007/s10664-018-9633-6
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen HW, 2021, IEEE T SOFTWARE ENG, V47, P2803, DOI 10.1109/TSE.2020.2968520
   Chen X, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106441
   Chen X, 2019, INFORM SOFTWARE TECH, V106, P161, DOI 10.1016/j.infsof.2018.10.003
   Chen Z, 2018, APPL INTELL, V48, P2441, DOI 10.1007/s10489-017-1088-8
   Coviello C, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106224
   Eluri VK, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106616
   Feng S, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106662
   Feng S, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106432
   Han H, 2005, LECT NOTES COMPUT SC, V3644, P878, DOI 10.1007/11538059_91
   He HB, 2008, IEEE IJCNN, P1322, DOI 10.1109/IJCNN.2008.4633969
   Henein M. M. R., 2018, P 13 INT C SOFTW TEC, P185, DOI DOI 10.5220/0006911402190227
   Huanjing Wang, 2010, 2010 Ninth International Conference on Machine Learning and Applications (ICMLA 2010), P135, DOI 10.1109/ICMLA.2010.27
   Iranmehr A, 2019, NEUROCOMPUTING, V343, P50, DOI 10.1016/j.neucom.2018.11.099
   Jaskowiak PA, 2013, IEEE ACM T COMPUT BI, V10, P845, DOI 10.1109/TCBB.2013.9
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Khan SH, 2018, IEEE T NEUR NET LEAR, V29, P3573, DOI 10.1109/TNNLS.2017.2732482
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kondo M, 2019, EMPIR SOFTW ENG, V24, P1925, DOI 10.1007/s10664-018-9679-5
   Li N, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106287
   Liu SG, 2017, COMPUT SECUR, V69, P35, DOI 10.1016/j.cose.2016.12.004
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pérez F, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106676
   Rankovic D, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106627
   Reidy, 2007, STAT MATHS PSYCHOL
   Ryu D, 2017, SOFTWARE QUAL J, V25, P235, DOI 10.1007/s11219-015-9287-1
   Schäfer T, 2019, FRONT PSYCHOL, V10, DOI 10.3389/fpsyg.2019.00813
   Shirabad J. S., 2005, PROMISE REPOSITORY S, V24
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Spearman, 1961, PROOF MEASUREMENT AS
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Székely GJ, 2007, ANN STAT, V35, P2769, DOI 10.1214/009053607000000505
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tsymbal A, 2004, Computer Science Department, Trinity College Dublin
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wong GY, 2013, IEEE IND ELEC, P2354, DOI 10.1109/IECON.2013.6699499
   Xu Z, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106452
   Xu Z, 2018, INT C PROGRAM COMPRE, P132, DOI 10.1145/3196321.3196331
   Xu Z, 2019, J SYST SOFTWARE, V154, P59, DOI 10.1016/j.jss.2019.03.027
   Yadav A, 2019, INFORM SOFTWARE TECH, V112, P1, DOI 10.1016/j.infsof.2019.03.014
   Zhang XL, 2016, IEEE-ACM T AUDIO SPE, V24, P967, DOI 10.1109/TASLP.2016.2536478
   Zhu TF, 2020, KNOWL-BASED SYST, V187, DOI 10.1016/j.knosys.2019.06.034
   Zielinski K, 2008, STUD COMPUT INTELL, V143, P111
NR 50
TC 7
Z9 7
U1 2
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2022
VL 142
AR 106742
DI 10.1016/j.infsof.2021.106742
EA OCT 2021
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WN5QL
UT WOS:000711821900004
DA 2024-07-18
ER

PT J
AU Nurwidyantoro, A
   Shahin, M
   Chaudron, MRV
   Hussain, W
   Shams, R
   Perera, H
   Oliver, G
   Whittle, J
AF Nurwidyantoro, Arif
   Shahin, Mojtaba
   Chaudron, Michel R., V
   Hussain, Waqar
   Shams, Rifat
   Perera, Harsha
   Oliver, Gillian
   Whittle, Jon
TI Human values in software development artefacts: A case study on issue
   discussions in three Android applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Human values; Issue tracker; Software artefacts; Software repositories
ID STACK OVERFLOW; CLASSIFICATION
AB Context: Human values such as inclusion, privacy, and accessibility need to be considered during software development to attract and maintain users. However, little effort has been made to study human values consideration in software development, particularly in software development artefacts. Objective: Issue discussion is potentially a rich source for human values analysis because it is a common place for users and developers to share and communicate their concerns. This paper aims to investigate the extent to which human values are discussed and whether the presence of values differs across projects. Method: We carried out a case study to discover human values in 1,097 issues collected from three Android projects: Signal, K-9, and Focus. Results: We identified 20 value themes and proposed a contextualised software engineering description for each of them. The analysis shows that privacy, freedom, usability, and efficiency were the prevalent value themes in the issue discussions of these three projects. Meanwhile, Self-direction -Action and Security -Personal are the common prevalent human values found in the projects. Moreover, we found that a statement of values from the apps and their functionalities could contribute to the presence of values. Conclusion: The results suggest that human values are present in software development artefacts, for which automated tools can be developed to extract and classify human values from them.
C1 [Nurwidyantoro, Arif; Shahin, Mojtaba; Hussain, Waqar; Shams, Rifat; Perera, Harsha; Oliver, Gillian] Monash Univ, Fac IT, Dept Software Syst & Cybersecur, Clayton, Vic 3800, Australia.
   [Chaudron, Michel R., V] Eindhoven Univ Technol, Dept Math & Comp Sci, NL-5600 Eindhoven, Netherlands.
   [Whittle, Jon] CSIROs Data61, Clayton, Vic 3168, Australia.
C3 Monash University; Eindhoven University of Technology; Commonwealth
   Scientific & Industrial Research Organisation (CSIRO)
RP Nurwidyantoro, A (corresponding author), Monash Univ, Fac IT, Dept Software Syst & Cybersecur, Clayton, Vic 3800, Australia.
EM Arif.Nurwidyantoro@monash.edu; Mojtaba.Shahin@monash.edu;
   m.r.v.chaudron@tue.nl; Waqar.Hussain@monash.edu; Rifat.Shams@monash.edu;
   Harsha.Perera@monash.edu; Gillian.Oliver@monash.edu;
   Jon.Whittle@data61.csiro.au
RI Oliver, Gillian C/A-7845-2010; Nurwidyantoro, Arif/GOP-1594-2022
OI Nurwidyantoro, Arif/0000-0001-8683-3078; Hussain,
   Waqar/0000-0003-1508-4174; Shams, Rifat Ara/0000-0002-9426-3068; Perera,
   Harsha/0000-0002-1662-3208; Oliver, Gillian/0000-0003-2943-5035;
   Chaudron, Michel/0000-0001-7517-6666
CR Abad ZSH, 2017, INT REQUIR ENG CONF, P496, DOI 10.1109/RE.2017.36
   Adolph S., 2008, P C CTR ADV STUD COL, P13
   Alqahtani SS, 2017, INT SYMP EMP SOFTWAR, P169, DOI 10.1109/ESEM.2017.25
   [Anonymous], 2003, HUM FAC ER
   Aslan S, 2015, SIMUL-T SOC MOD SIM, V91, P307, DOI 10.1177/0037549715572673
   Bao LF, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P37, DOI [10.1145/2901739.2901748, 10.1109/MSR.2016.014]
   Barceló JA, 2014, SOC SCI COMPUT REV, V32, P417, DOI 10.1177/0894439313511943
   Barn BS, 2016, LECT NOTES COMPUT SC, V9856, P151, DOI 10.1007/978-3-319-44902-9_10
   Bissyandé TF, 2013, PROC INT SYMP SOFTW, P188, DOI 10.1109/ISSRE.2013.6698918
   Breitmoser V, 2018, OPENPGP CONSIDERAT 3
   Chatterjee Preetha, 2019, IEEE WORK CONF MIN S, P490, DOI [DOI 10.1109/MSR.2019.00075, 10.1109/MSR.2019.00075]
   Chen A., 2010, Int. Conf. Electrical Machines, P1, DOI [10.1109/ICELMACH.2010.5608320, DOI 10.1109/ICELMACH.2010.5608320]
   Cheng AS, 2012, J AM SOC INF SCI TEC, V63, P1360, DOI 10.1002/asi.22646
   Cheng An-Shou, 2010, Proceedings of the American Society for Information Science and Technology, V47, DOI [DOI 10.1002/meet.14504701232, 10.1002/meet.14504701232, DOI 10.1002/MEET.14504701232]
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Ding J, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION), P7, DOI [10.1145/3194932.3194935, 10.1109/GLOCOM.2018.8647613]
   Ferrario MA, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P553, DOI 10.1145/2889160.2889219
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   Friedman B., 2008, The handbook of information and computer ethics, P69, DOI DOI 10.1145/242485.242493
   Friedman B, 2013, PHILOS ENG TECHNOL, V16, P55, DOI 10.1007/978-94-007-7844-3_4
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Gibler C., 2012, P 5 INT C TRUST TRUS, V7344, P291, DOI DOI 10.1007/978-3-642-30921-2
   GitHub, ISSUES
   Glinz M, 2007, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2007.45
   Hanel P.H. P., 2017, Values and behavior: taking a cross cultural perspective, DOI [DOI 10.1007/978-3-319-56352-7_8, 10.1007/978-3-319-56352-7_8]
   Hanel PHP, 2018, FRONT PSYCHOL, V9, DOI 10.3389/fpsyg.2018.00849
   Harris MA, 2016, INT J INFORM MANAGE, V36, P441, DOI 10.1016/j.ijinfomgt.2016.02.004
   Holmes T, 2011, The Common Cause Handbook
   Huang Q, 2020, IEEE T SOFTWARE ENG, V46, P1098, DOI 10.1109/TSE.2018.2876340
   Hussain W, 2022, IEEE T SOFTWARE ENG, V48, P1818, DOI 10.1109/TSE.2020.3038802
   HUTCHEON PD, 1972, BRIT J SOCIOL, V23, P172, DOI 10.2307/589108
   Jha N, 2019, EMPIR SOFTW ENG, V24, P3659, DOI 10.1007/s10664-019-09716-7
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kim S., 2012, STUDY STATIC ANAL MO, DOI [10.1007/978-94-007-2792-2_50, DOI 10.1007/978-94-007-2792-2_50]
   Koepfler J.A., 2012, Proceedings of the 2012 American Society of Information Science and Technology Conference, P1, DOI [10.1002/meet.14504901238, DOI 10.1002/MEET.14504901238]
   Koepfler J.A., 2011, Proceedings of the 2011 ASIST Annual Meeting, P1, DOI [DOI 10.1002/MEET.2011.14504801116, 10.1002/meet.2011.14504801116]
   Loorak MH, 2014, COMPUT GRAPH FORUM, V33, P391, DOI 10.1111/cgf.12395
   Lu Mengmeng., 2017, P 21 INT C EVALUATIO, P344, DOI [10.1145/3084226.3084241, DOI 10.1145/3084226.3084241]
   Ma YZ, 2018, IEEE WORK CONF MIN S, P414, DOI 10.1145/3196398.3196446
   Mahmoudi H, 2015, PROCD SOC BEHV, V176, P419, DOI 10.1016/j.sbspro.2015.01.491
   Maio GR, 2010, ADV EXP SOC PSYCHOL, V42, P1, DOI 10.1016/S0065-2601(10)42001-8
   Mairiza D., 2010, P 2010 ACM S APPL CO, P311, DOI DOI 10.1145/1774088.1774153
   Marlinspike M, 2015, SAYING GOODBYE ENCRY
   Mougouei D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P780, DOI 10.1145/3236024.3264843
   Mukta M. S. H., 2017, 11 INT AAAI C WEB SO
   Naseri Mohammad, 2019, Proceedings on Privacy Enhancing Technologies, V2019, P291, DOI 10.2478/popets-2019-0031
   O.W. Systems, 2010, ANN PUBL BET
   Ortu M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P480, DOI [10.1145/2901739.2903505, 10.1109/MSR.2016.059]
   Pereira R, 2017, PROC IEEE ACM INT C, P238, DOI 10.1109/ICSE-C.2017.80
   Perera H, 2020, PROC INT CONF SOFTW, P409, DOI 10.1145/3377811.3380393
   Perera H, 2020, INT REQUIR ENG CONF, P192, DOI 10.1109/RE48521.2020.00030
   Perera H, 2019, INT REQUIR ENG CONF, P404, DOI 10.1109/RE.2019.00053
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Prana GAA, 2019, EMPIR SOFTW ENG, V24, P1296, DOI 10.1007/s10664-018-9660-3
   Rokeach M., NATURE HUMAN VALUES
   Schwartz S. H., 2017, VALUES BEHAV TAKING, P51, DOI [DOI 10.1007/978-3-319-56352-7_3, 10.1007/978-3-319-56352-7_3]
   Schwartz S.H., 2012, OVERVIEW SCHWARTZ TH, V2, DOI [10.9707/2307-0919.1116, DOI 10.9707/2307-0919.1116]
   SCHWARTZ SH, 1990, J PERS SOC PSYCHOL, V58, P878, DOI 10.1037/0022-3514.58.5.878
   SCHWARTZ SH, 1994, J SOC ISSUES, V50, P19, DOI 10.1111/j.1540-4560.1994.tb01196.x
   Shams RA, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P53, DOI 10.1145/3377815.3381382
   Shaohua Wang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P321, DOI 10.1109/MSR.2019.00058
   Slavin R, 2016, PROC INT CONF SOFTW, P25, DOI 10.1145/2884781.2884855
   Sokolova K, 2017, DECIS SUPPORT SYST, V93, P62, DOI 10.1016/j.dss.2016.09.006
   Statista, 2020, Number of available applications in the Google Play Store from December 2009 to May 2020
   Thew S, 2018, REQUIR ENG, V23, P443, DOI 10.1007/s00766-017-0273-y
   Tómasdóttir KF, 2017, IEEE INT CONF AUTOM, P578, DOI 10.1109/ASE.2017.8115668
   Tóth L, 2018, LECT NOTES COMPUT SC, V10964, P492, DOI 10.1007/978-3-319-95174-4_39
   Tsai CH, 2017, EDUC INF TECHNOL, V22, P2159, DOI 10.1007/s10639-016-9542-5
   Viega J., 2002, ACM Transactions on Information and Systems Security, V5, P238, DOI 10.1145/545186.545188
   Viviani G, 2018, INT C PROGRAM COMPRE, P328, DOI 10.1145/3196321.3196357
   Wang H. Y., 2013, International Journal of Marketing Studies, V5, P11, DOI [10.5539/ijms.v5n2p11, DOI 10.5539/IJMS.V5N2P11]
   Weisbaum H., 2018, NBC NEWS
   Werder K, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION), P20, DOI 10.1145/3194932.3194941
   WINNER L, 1980, DAEDALUS, V109, P121
   Winter E, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2019), P19, DOI 10.1109/CHASE.2019.00012
   Winter E, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267427
   Wyman A, 2020, WHAT IS FIREFOX FOCU
   Zhou YQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P914, DOI 10.1145/3106237.3117771
   Zou J, 2017, INFORM SOFTWARE TECH, V84, P19, DOI 10.1016/j.infsof.2016.12.003
NR 79
TC 8
Z9 9
U1 1
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2022
VL 141
AR 106731
DI 10.1016/j.infsof.2021.106731
EA OCT 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA WD5OM
UT WOS:000704989700002
OA Green Published
DA 2024-07-18
ER

PT J
AU Zolduoarrati, E
   Licorish, SA
AF Zolduoarrati, Elijah
   Licorish, Sherlock A.
TI On the value of encouraging gender tolerance and inclusiveness in
   software engineering communities
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Gender tolerance; Gender inclusiveness; Software engineering
   communities; Stack overflow; Orientation; attitudes; and knowledge
   sharing; patterns; Collaborative Software Engineering
ID LANGUAGE USE; PERSONALITY; INFORMATION; IMPACT; PERFORMANCE; DIVERSITY;
   WOMEN; FIELD; TEAM; COLLABORATION
AB Context: The recent spike in the growth of online communities is a testament to the technological advancements of the 21st century. People with shared interests, problems, and solutions can now engage via online groups, including the software engineering community. There is evidence, however, to suggest females are often underrepresented in such online communities, and especially those that are technology related. This comes at a great loss to these communities, and for software engineering in particular. Females, like males, add much value to the field of software engineering. Objective: Limited evidence exists to quantify the value of males and females in the software engineering process or relevant communities. This insight could inform evidence-driven inclusiveness strategies. Accordingly, we sought to better understand gender differences in the Stack Overflow community in order to delineate the value of gender diversity in the field of software engineering. Method: This study used archival data from Stack Overflow over an 11-year period, comprising records from 9.5 million contributors. We employed quantitative and qualitative approaches to examine the role of gender in terms of contributors' orientation, attitudes, and knowledge sharing patterns. Results: The results indicate female contributors on Stack Overflow differed significantly from males in relation to their orientation, attitudes, and knowledge sharing patterns. We observe that female contributors tend to have a more cooperative orientation. Additionally, females expressed a more supportive and collective outlook and were more willing to share knowledge than their male counterparts. Conclusion: The software engineering community would benefit from gender tolerance and inclusiveness to promote a knowledge sharing culture. In this regard, gender diversity should be encouraged for the value it brings to Stack Overflow and the field of software engineering.
C1 [Zolduoarrati, Elijah; Licorish, Sherlock A.] Univ Otago, Informat Sci Dept, Dunedin, New Zealand.
C3 University of Otago
RP Licorish, SA (corresponding author), Univ Otago, Informat Sci Dept, Dunedin, New Zealand.
EM sherlock.licorish@otago.ac.nz
CR Abukhait RM, 2019, INT J INNOV MANAG, V23, DOI 10.1142/S1363919619500063
   Adaji I, 2016, LECT NOTES COMPUT SC, V10047, P3, DOI 10.1007/978-3-319-47874-6_1
   Aksekili Asli Yuksel, 2021, Lean and Agile Software Development. 5th International Conference, LASD 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 408), P3, DOI 10.1007/978-3-030-67084-9_1
   Altiner S, 2018, S AFR J SCI, V114
   Amin A., 2020, INFORM SOFTWARE TECH, P128
   André M, 2011, INFORM SOFTWARE TECH, V53, P259, DOI 10.1016/j.infsof.2010.11.011
   Andres H.P., 2002, COMP FACE TO FACE VI
   [Anonymous], 2014, Proceedings of the 6th international workshop on social software engineering, DOI 10.1145/2661685.2661689
   [Anonymous], 2013, P 17 INT C EVALUATIO
   [Anonymous], 2010, CULTURES ORG SOFTWAR
   [Anonymous], 1981, Review of personality and social psychology, DOI DOI 10.1037/0022-3514.59.6.1216
   [Anonymous], 2008, SOFTWARE ENG PRINCIP
   Arnold JE, 2015, DISCOURSE PROCESS, V52, P77, DOI 10.1080/0163853X.2014.946847
   Astromskis S, 2017, J SYST SOFTWARE, V132, P85, DOI 10.1016/j.jss.2017.06.072
   Augustin L, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P559, DOI 10.1109/ICSE.2002.1008000
   Balliet D, 2011, PSYCHOL BULL, V137, P881, DOI 10.1037/a0025354
   Bazelli B, 2013, PROC IEEE INT CONF S, P460, DOI 10.1109/ICSM.2013.72
   Benne KD, 1948, J SOC ISSUES, V4, P41, DOI 10.1111/j.1540-4560.1948.tb01783.x
   Blickenstaff JC, 2005, GENDER EDUC, V17, P369, DOI 10.1080/09540250500145072
   Blincoe K, 2019, IEEE SOFTWARE, V36, P51, DOI 10.1109/MS.2019.2917428
   Blohm Ivo, 2011, International Journal of Networking and Virtual Organisations, V9, P106, DOI 10.1504/IJNVO.2011.042413
   Broos A, 2005, CYBERPSYCHOL BEHAV, V8, P21, DOI 10.1089/cpb.2005.8.21
   Byrne M M, 2001, AORN J, V73, P703, DOI 10.1016/S0001-2092(06)61966-2
   Calefato F, 2019, INFORM SOFTWARE TECH, V114, P1, DOI 10.1016/j.infsof.2019.05.012
   Canedo ED., 2020, P 14 ACM IEEE INT S, DOI [10.1145/3382494.3410682, DOI 10.1145/3382494.3410682]
   Canedo ED, 2019, INFORMATION, V10, DOI 10.3390/info10100309
   Capretz LF, 2014, IEEE SOFTWARE, V31, P104
   Catolino G, 2020, IEEE SOFTWARE, V37, P10, DOI 10.1109/MS.2019.2944594
   Catolino G, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P11, DOI 10.1109/ICSE-SEIS.2019.00010
   Cavusoglu H., 2015, P ACM C COMPUTER SUP, V2015, P171, DOI DOI 10.1145/2685553.2698999
   Chang KC, 2013, INT J PROJ MANAG, V31, P252, DOI 10.1016/j.ijproman.2012.06.005
   Chen JQ, 2016, J BUS ETHICS, V133, P487, DOI 10.1007/s10551-014-2395-1
   Choi HS, 2018, GROUP PROCESS INTERG, V21, P37, DOI 10.1177/1368430216638539
   Cobb-Clark DA, 2012, ECON LETT, V115, P11, DOI 10.1016/j.econlet.2011.11.015
   Connelly C. E., 2003, Leadership Organization Development Journal, V24, P294, DOI [DOI 10.1108/01437730310485815/FULL/PDF, 10.1108/01437730310485815, DOI 10.1108/01437730310485815]
   Cropley D, 2017, EUR J INNOV MANAG, V20, P493, DOI 10.1108/EJIM-12-2016-0120
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Cuddy AJC, 2015, J PERS SOC PSYCHOL, V109, P622, DOI 10.1037/pspi0000027
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   DAMERAU FJ, 1993, INFORM PROCESS MANAG, V29, P433, DOI 10.1016/0306-4573(93)90039-G
   Damian D, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P57, DOI 10.1007/978-3-642-10294-3_3
   Das M, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI [10.1145/3290605.3300793, 10.1109/icacce46606.2019.9079984]
   Denning PJ, 2017, COMMUN ACM, V60, P20, DOI 10.1145/3152912
   Dubois P.M.J., 2020, P ACM HUM COMP INT, V4, P1
   Dufwenberg M, 2006, J ECON BEHAV ORGAN, V61, P50, DOI 10.1016/j.jebo.2005.01.002
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   Fell CB, 2016, SCIENTOMETRICS, V108, P113, DOI 10.1007/s11192-016-1967-5
   Ford D, 2017, S VIS LANG HUM CEN C, P239, DOI 10.1109/VLHCC.2017.8103473
   Ford D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P846, DOI 10.1145/2950290.2950331
   Gall M., 1996, EDUC RES-UK, P357
   Gao J, 2018, INT J ADV MANUF TECH, V94, P1545, DOI 10.1007/s00170-017-0140-5
   Gefen D, 1997, MIS QUART, V21, P389, DOI 10.2307/249720
   GOLDBERG LR, 1993, AM PSYCHOL, V48, P26, DOI 10.1037/0003-066X.48.1.26
   Hannah A, 1999, J LANG SOC PSYCHOL, V18, P153, DOI 10.1177/0261927X99018002002
   Hargittai E, 2006, SOC SCI QUART, V87, P432, DOI 10.1111/j.1540-6237.2006.00389.x
   He J., 2010, Journal of Information Systems Education, V21, P203
   Henri F., 1992, Collaborative Learning Through Computer Conferencing: the Najaden Papers. Proceedings of the NATO Advanced Research Workshop, P117
   Herring C, 2009, AM SOCIOL REV, V74, P208, DOI 10.1177/000312240907400203
   HOEFFDING W, 1948, DUKE MATH J, V15, P773, DOI 10.1215/S0012-7094-48-01568-3
   Hofstede G., 1980, Culture's consequences: International differences in work-related values
   Hoogendoorn S, 2013, MANAGE SCI, V59, P1514, DOI 10.1287/mnsc.1120.1674
   Imtiaz N, 2019, PROC INT CONF SOFTW, P700, DOI 10.1109/ICSE.2019.00079
   Ivanova-Stenzel R, 2011, J ECON PSYCHOL, V32, P797, DOI 10.1016/j.joep.2011.05.011
   Iyer RN, 2019, IEEE Transactions on Software Engineering
   Karn JS, 2007, BEHAV INFORM TECHNOL, V26, P99, DOI 10.1080/01449290500102110
   Katz J.H., 1989, COLL UNIONS WORK MON, V11, P12
   Kayes I., 2015, ACM Conference on Hypertext and Social Media (HT), P175
   Kimbrough AM, 2013, COMPUT HUM BEHAV, V29, P896, DOI 10.1016/j.chb.2012.12.005
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   Kosti MV, 2016, EMPIR SOFTW ENG, V21, P1509, DOI 10.1007/s10664-015-9395-3
   Kristinsson K, 2016, LONG RANGE PLANN, V49, P464, DOI 10.1016/j.lrp.2015.12.013
   Layman L., 2005, P FRONT ED 35 ANN C, P9
   Lenberg P., 2017, ARXIV171208341
   Lenberg P, 2014, P 7 INT WORKSH COOP, P48, DOI DOI 10.1145/2593702.2593711
   Licorish S. A., 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P83, DOI 10.1109/CHASE.2012.6223029
   Licorish S.A., 2013, COLLABORATION PATTER
   Licorish SA, 2013, IEEE AUS SOFT ENGR, P107
   Lin B, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P425, DOI [10.1145/2901739.2901777, 10.1109/MSR.2016.050]
   Liu X, 2018, INT J MED INFORM, V111, P172, DOI 10.1016/j.ijmedinf.2017.12.019
   Lorber J., 2001, Gender inequality, V4th ed
   Ma Will Wai Kit, 2011, Hybrid Learning. Proceedings 4th International Conference, ICHL 2011, P116, DOI 10.1007/978-3-642-22763-9_11
   May A, 2019, EMPIR SOFTW ENG, V24, P1997, DOI 10.1007/s10664-019-09685-x
   MCCRAE RR, 1987, J PERS SOC PSYCHOL, V52, P81, DOI 10.1037/0022-3514.52.1.81
   McGrath Cohoon J., 2006, Women and information technology: Research on underrepresentation, P206
   Meldrum S, 2017, P 21 INT C EVALUATIO, P180
   Meldrum S., 2020, ARXIV201012282
   Mendez C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1004, DOI 10.1145/3180155.3180241
   Menendez D.A., 2020, EASYCHAIR
   Menezes A, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P45, DOI 10.1145/3195836.3195857
   Merriam -Webster, MERRIAM WEBSTER COM, P2021
   Mersino A., 2013, Emotional intelligence for project managers
   Miliszewska I, 2006, J INF TECHNOL EDUC-R, V5, P107
   Mistrík I, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P389, DOI 10.1007/978-3-642-10294-3_19
   Mulac A, 2001, HUM COMMUN RES, V27, P121, DOI 10.1093/hcr/27.1.121
   National Science Foundation, 2004, RES TECHNOL MANAGE I, P62
   Newman ML, 2008, DISCOURSE PROCESS, V45, P211, DOI 10.1080/01638530802073712
   Nishii LH, 2013, ACAD MANAGE J, V56, P1754, DOI 10.5465/amj.2009.0823
   Ojha A.K., 2005, S ASIAN J MANAGEMENT, V12, P67
   Oliveira AW, 2010, J SCI TEACH EDUC, V21, P103, DOI 10.1007/s10972-009-9157-4
   Oliveira Nigini, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274399
   Oliveira N, 2016, PROCEEDINGS OF THE NORDICHI '16: THE 9TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION - GAME CHANGING DESIGN, DOI 10.1145/2971485.2971520
   Ortu Marco, 2017, Journal of Software Engineering Research and Development, V5, DOI 10.1186/s40411-017-0044-y
   Ostergaard CR, 2011, RES POLICY, V40, P500, DOI 10.1016/j.respol.2010.11.004
   Pedro LZ, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P214, DOI 10.1145/2695664.2695752
   Pennebaker JW, 2003, ANNU REV PSYCHOL, V54, P547, DOI 10.1146/annurev.psych.54.101601.145041
   Riahi F., 2012, P 21 INT C WORLD WID, P791, DOI [10.1145/2187980.2188202, DOI 10.1145/2187980.2188202]
   Roberts E. S., 2002, SIGCSE Bulletin, V34, P84, DOI 10.1145/543812.543837
   ROSENBLATT M, 1956, P NATL ACAD SCI USA, V42, P43, DOI 10.1073/pnas.42.1.43
   Rourke L, 2004, ETR&D-EDUC TECH RES, V52, P5, DOI 10.1007/BF02504769
   Russo Daniel, 2020, IEEE Transactions on Software Engineering, V48, P16
   Santos V, 2015, EMPIR SOFTW ENG, V20, P1006, DOI 10.1007/s10664-014-9307-y
   Schenk Dennis., 2013, Proceedings of the 2013 International Workshop on Social Software Engineering, P21, DOI DOI 10.1145/2501535.2501540
   Shihab E, 2009, PROC IEEE INT CONF S, P147, DOI 10.1109/ICSM.2009.5306333
   Singh V, 2019, IFIP ADV INF COMM TE, V556, P68, DOI 10.1007/978-3-030-20883-7_7
   Song HG, 2015, COMPUT HUM BEHAV, V50, P274, DOI 10.1016/j.chb.2015.04.013
   Srba I, 2016, IEEE SOFTWARE, V33, P80, DOI 10.1109/MS.2016.34
   Stone LD, 2002, BASIC APPL SOC PSYCH, V24, P173, DOI 10.1207/S15324834BASP2403_1
   Sun B, 2020, FRONT PSYCHOL, V11, DOI 10.3389/fpsyg.2020.00806
   Tantisuwankul J, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110416
   Thayer SE, 2006, CYBERPSYCHOL BEHAV, V9, P432, DOI 10.1089/cpb.2006.9.432
   Valentine C., 2017, GENDER PREDICTO
   van den Hooff B, 2004, SOCIAL CAPTIAL AND INFORMATION TECHNOLOGY, P163
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Vasilescu B, 2012, PROCEEDINGS OF THE 2012 ASE INTERNATIONAL CONFERENCE ON SOCIAL INFORMATICS (SOCIALINFORMATICS 2012), P332, DOI 10.1109/SocialInformatics.2012.81
   WALZ DB, 1993, COMMUN ACM, V36, P63, DOI 10.1145/163430.163447
   Wang C, 2017, INFORM PROCESS MANAG, V53, P721, DOI 10.1016/j.ipm.2017.02.003
   Wang Y., 2019, GENDER REPUTATION DI
   Wang ZD, 2018, PROC INT CONF SOFTW, P81, DOI 10.1145/3183428.3183437
   White A., WOMENS USAGE SPECIFI, V5, P2018
   Woolley AW, 2010, SCIENCE, V330, P686, DOI 10.1126/science.1193147
   Wurzelová P, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON GENDER EQUALITY IN SOFTWARE ENGINEERING (GE 2019), P5, DOI 10.1109/GE.2019.00009
   Yilmaz M, 2017, INFORM SOFTWARE TECH, V86, P101, DOI 10.1016/j.infsof.2017.01.005
   Zahedi M, 2016, INT J INFORM MANAGE, V36, P995, DOI 10.1016/j.ijinfomgt.2016.06.007
   Zhang YL, 2013, DECIS SUPPORT SYST, V55, P851, DOI 10.1016/j.dss.2013.04.003
   Zhou Zhi-Min., 2012, Proceedings of the 21st international conference on World Wide Web, P767, DOI DOI 10.1145/2187980.2188199
   Zhu E., 1996, Meaning negotiation, knowledge construction, and mentoring in a distance learning course
NR 136
TC 14
Z9 14
U1 2
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2021
VL 139
AR 106667
DI 10.1016/j.infsof.2021.106667
EA JUN 2021
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA US8LY
UT WOS:000697678300004
DA 2024-07-18
ER

PT J
AU Auer, F
   Lenarduzzi, V
   Felderer, M
   Taibi, D
AF Auer, Florian
   Lenarduzzi, Valentina
   Felderer, Michael
   Taibi, Davide
TI From monolithic systems to Microservices: An assessment framework
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Microservices; Cloud migration; Software measurement
AB Context: Re-architecting monolithic systems with Microservices-based architecture is a common trend. Various companies are migrating to Microservices for different reasons. However, making such an important decision like re-architecting an entire system must be based on real facts and not only on gut feelings.
   Objective: The goal of this work is to propose an evidence-based decision support framework for companies that need to migrate to Microservices, based on the analysis of a set of characteristics and metrics they should collect before re-architecting their monolithic system.
   Method: We conducted a survey done in the form of interviews with professionals to derive the assessment framework based on Grounded Theory.
   Results: We identified a set consisting of information and metrics that companies can use to decide whether to migrate to Microservices or not. The proposed assessment framework, based on the aforementioned metrics, could be useful for companies if they need to migrate to Microservices and do not want to run the risk of failing to consider some important information.
C1 [Auer, Florian; Felderer, Michael] Univ Innsbruck, Innsbruck, Austria.
   [Lenarduzzi, Valentina] LUT Univ, Lappeenranta, Finland.
   [Felderer, Michael] Blekinge Inst Technol, Karlskrona, Sweden.
   [Taibi, Davide] Tampere Univ, Tampere, Finland.
C3 University of Innsbruck; Lappeenranta-Lahti University of Technology
   LUT; Blekinge Institute Technology; Tampere University
RP Auer, F (corresponding author), Univ Innsbruck, Innsbruck, Austria.
EM florian.auer@uibk.ac.at; valentina.lenarduzzi@lut.fi;
   michael.felderer@uibk.ac.at; davide.taibi@tuni.fi
RI Taibi, Davide/E-4935-2015
OI Taibi, Davide/0000-0002-3210-3990; Lenarduzzi,
   Valentina/0000-0003-0511-5133
FU Austrian Science Fund (FWF) [I 4701-N]; Federal Ministry for Climate
   Action, Environment, Energy, Mobility, Innovation and Technology (BMK),
   Austria; Federal Ministry for Digital and Economic Affairs (BMDW),
   Austria; Province of Upper Austria
FX This work was partially supported by the Austrian Science Fund (FWF): I
   4701-N and by the Federal Ministry for Climate Action, Environment,
   Energy, Mobility, Innovation and Technology (BMK), Austria, the Federal
   Ministry for Digital and Economic Affairs (BMDW), Austria, and the
   Province of Upper Austria in the frame of the COMET -Competence Centers
   for Excellent Technologies Programme managed by Austrian Research
   Promotion Agency FFG.
CR [Anonymous], 2018, Information and Software Technology.
   [Anonymous], 2020, CLOUD COMPUTING SERV, DOI DOI 10.1007/978-3-030-49432-2_7
   Auer F, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234197
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   de Camargo A., 2016, P 18 INT C INF INT W, P422, DOI [10.1145/3011141.3011179, DOI 10.1145/3011141.3011179]
   Di Francesco P, 2019, J SYST SOFTWARE, V150, P77, DOI 10.1016/j.jss.2019.01.001
   Di Francesco P, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P21, DOI 10.1109/ICSA.2017.24
   Do NH, 2017, CONF INNOV CLOUD, P72, DOI 10.1109/ICIN.2017.7899252
   Gribaudo M, 2018, ELECTRON NOTES THEOR, V337, P45, DOI 10.1016/j.entcs.2018.03.033
   Harms H, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P902, DOI 10.1145/3106237.3117775
   Heorhiadi V, 2016, INT CON DISTR COMP S, P57, DOI 10.1109/ICDCS.2016.11
   Hollweck T, 2015, CAN J PROGRAM EVAL, V30, P108, DOI 10.3138/cjpe.30.1.108
   ISO/IEC, 2011, ISO/IEC 25010:2011 Systems and software engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-System and Software Quality models
   Khazaei H, 2016, INT CONF CLOUD COMP, P261, DOI [10.1109/CloudCom.2016.48, 10.1109/CloudCom.2016.0051]
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Klock S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P11, DOI 10.1109/ICSA.2017.38
   Kratzke N, 2017, COMM COM INF SC, V740, P186, DOI 10.1007/978-3-319-62594-2_10
   Lenarduzzi V, 2021, IEEE SOFTWARE, V38, P40, DOI 10.1109/MS.2020.3030786
   Lenarduzzi V, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110710
   Lewis James, 2014, Microservices
   Marquez G., 2020, CIBSE, P57
   Nupponen J, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2020), P49, DOI [10.1109/ICSA-C50368.2020.00016, 10.1109/ICSA-050368.2020.00016]
   Pahl C, 2016, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, VOL 1 (CLOSER), P137, DOI 10.5220/0005785501370146
   Panichella S., 11 INT C CLOUD COMP, P2021
   Peltonen S, 2021, INFORM SOFTWARE TECH, V136, DOI 10.1016/j.infsof.2021.106571
   Salah T, 2017, CONF INNOV CLOUD, P185, DOI 10.1109/ICIN.2017.7899408
   Saquicela V., NEW PERSPECTIVES SOF, P169
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Taibi D., 2019, CLOSER 2018 CCIS, P126, DOI DOI 10.1007/978-3-030-29193-8
   Taibi D., 2018, CLOUD SYNC
   Taibi D., 2019, MICROSERVICES SCI EN
   Taibi D, 2021, IEEE SOFTWARE, V38, P25, DOI 10.1109/MS.2020.3028708
   Taibi D, 2020, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE (CLOSER), P181, DOI 10.5220/0009578501810192
   Taibi D, 2019, CLOSER: PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P153, DOI 10.5220/0007755901530164
   Taibi D, 2018, IEEE SOFTWARE, V35, P56, DOI 10.1109/MS.2018.2141031
   Taibi D, 2017, IEEE CLOUD COMPUT, V4, P22, DOI 10.1109/MCC.2017.4250931
   Ueda T, 2016, I S WORKL CHAR PROC, P85, DOI 10.1109/IISWC.2016.7581269
   Villamizar M, 2016, IEEE ACM INT SYMP, P179, DOI 10.1109/CCGrid.2016.37
   Villamizar M, 2015, COMPUT COLOMB CONF, P583, DOI 10.1109/ColumbianCC.2015.7333476
   Wuetherick B., 2010, CANAD J U CONTIN ED, V36
NR 40
TC 36
Z9 39
U1 4
U2 43
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2021
VL 137
AR 106600
DI 10.1016/j.infsof.2021.106600
EA MAY 2021
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SQ8FQ
UT WOS:000660586400006
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Kumara, I
   Garriga, M
   Romeu, AU
   Di Nucci, D
   Palomba, F
   Tamburri, DA
   van den Heuvel, WJ
AF Kumara, Indika
   Garriga, Martin
   Romeu, Angel Urbano
   Di Nucci, Dario
   Palomba, Fabio
   Tamburri, Damian Andrew
   van den Heuvel, Willem-Jan
TI The do's and don'ts of infrastructure code: A systematic gray literature
   review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Infrastructure-as-code; DevOps; Gray literature review
AB Context: Infrastructure-as-code (IaC) is the DevOps tactic of managing and provisioning software infrastructures through machine-readable definition files, rather than manual hardware configuration or interactive configuration tools.
   Objective: From a maintenance and evolution perspective, the topic has picked the interest of practitioners and academics alike, given the relative scarcity of supporting patterns and practices in the academic literature. At the same time, a considerable amount of gray literature exists on IaC. Thus we aim to characterize IaC and compile a catalog of best and bad practices for widely used IaC languages, all using gray literature materials.
   Method: In this paper, we systematically analyze the industrial gray literature on IaC, such as blog posts, tutorials, white papers using qualitative analysis techniques.
   Results: We proposed a definition for IaC and distilled a broad catalog summarized in a taxonomy consisting of 10 and 4 primary categories for best practices and bad practices, respectively, both language-agnostic and language-specific ones, for three IaC languages, namely Ansible, Puppet, and Chef. The practices reflect implementation issues, design issues, and the violation of/adherence to the essential principles of IaC.
   Conclusion: Our findings reveal critical insights concerning the top languages as well as the best practices adopted by practitioners to address (some of) those challenges. We evidence that the field of development and maintenance IaC is in its infancy and deserves further attention.
C1 [Kumara, Indika; Garriga, Martin; Romeu, Angel Urbano; Di Nucci, Dario; Tamburri, Damian Andrew; van den Heuvel, Willem-Jan] Jheronimus Acad Data Sci, Shertogenbosch, Netherlands.
   [Palomba, Fabio] Univ Salerno, Fisciano, Italy.
C3 University of Salerno
RP Di Nucci, D (corresponding author), Jheronimus Acad Data Sci, Shertogenbosch, Netherlands.
EM i.p.k.weerasingha.dewage@tue.nl; m.garriga@uvt.nl; a.urbanoromeu@uvt.nl;
   d.dinucci@uvt.nl; fpalomba@unisa.it; d.a.tamburri@tue.nl;
   w.j.a.m.vdnheuvel@uvt.nl
RI Tamburri, Damian Andrew/AAJ-2507-2021; Di Nucci, Dario/Y-9679-2019
OI Tamburri, Damian Andrew/0000-0003-1230-8961; Di Nucci,
   Dario/0000-0002-3861-1902; kumara, Indika/0000-0003-4355-0494
FU European Union's Horizon 2020 research and innovation programme [825480,
   825040]; Swiss National Science Foundation [PZ00P2_186090]; H2020 -
   Industrial Leadership [825480] Funding Source: H2020 - Industrial
   Leadership; Swiss National Science Foundation (SNF) [PZ00P2_186090]
   Funding Source: Swiss National Science Foundation (SNF)
FX This research has received funding from the European Union's Horizon
   2020 research and innovation programme under grant agreement No 825480
   (H2020 SODALITE) and No 825040 (H2020 RADON). Fabio acknowledges the
   support of the Swiss National Science Foundation through the SNF Project
   No. PZ00P2_186090 (TED).
CR Abal I, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3149119
   [Anonymous], 2013, NETWORK FUNCTION VIR
   Artac M., 2016, Proceedings of the 2nd International Workshop on Quality-Aware DevOps, P40
   Artac M, 2017, PROC IEEE ACM INT C, P497, DOI 10.1109/ICSE-C.2017.162
   Bass Leonard J., 2015, SEI series in software engineering, P1
   Bergmayr A, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3150227
   Borovits Nemania, 2020, MaLTeSQuE 2020: Proceedings of the 4th ACM SIGSOFT International Workshop on Machine-Learning Techniques for Software-Quality Evaluation, P7, DOI 10.1145/3416505.3423564
   Butijn BJ, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3369052
   Dalla Palma S, 2022, IEEE T SOFTWARE ENG, V48, P2086, DOI 10.1109/TSE.2021.3051492
   Dalla Palma S, 2020, SOFTWAREX, V12, DOI 10.1016/j.softx.2020.100633
   Dalla Palma S, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110726
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Graff M., 2003, Secure Coding: Principles and Practices
   Guarino N., 2009, HDB ONTOLOGIES, P1, DOI [DOI 10.1007/978-3-540-92673-30, 10.1007/978-3-540-92673-3_0, DOI 10.1007/978-3-540-92673-3_0]
   Guerriero M, 2019, PROC IEEE INT CONF S, P580, DOI 10.1109/ICSME.2019.00092
   Hasan Mohammed Mehedi, 2020, LANGETI 2020: Proceedings of the 1st ACM SIGSOFT International Workshop on Languages and Tools for Next-Generation Testing, P7, DOI 10.1145/3416504.3424334
   Hochstein L., 2017, Ansible: Up and Running: Automating configuration management and deployment the easy way
   Huttermann M., 2012, DevOps for Developers, P135, DOI DOI 10.1007/978-1-4302-4570-4_9
   Islam C, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3305268
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Keele S, 2007, GUIDELINES PERFORMIN
   Kokuryo S, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P442, DOI 10.1109/QRS51102.2020.00063
   Kumara Indika, 2020, WIMS 2020: Proceedings of the 10th International Conference on Web Intelligence, Mining and Semantics, P63, DOI 10.1145/3405962.3405979
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Lipton P, 2018, IEEE CLOUD COMPUT, V5, P37, DOI 10.1109/MCC.2018.022171666
   Loope James., 2011, MANAGING INFRASTRUCT
   Marschall M., 2015, CHEF INFRASTRUCTURE
   Morris K., 2016, Infrastructure as Code: Managing Servers in the Cloud
   Opdebeeck R, 2020, IEEE INT WORK C SO, P238, DOI 10.1109/SCAM51674.2020.00032
   Rahman A, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3408897
   Rahman A, 2020, PROC INT CONF SOFTW, P752, DOI 10.1145/3377811.3380409
   Rahman A, 2020, EMPIR SOFTW ENG, V25, P3430, DOI 10.1007/s10664-020-09841-8
   Rahman A, 2019, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2019.00033
   Rahman A, 2019, INFORM SOFTWARE TECH, V108, P65, DOI 10.1016/j.infsof.2018.12.004
   Rahman A, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P16, DOI 10.1145/3194760.3194769
   Saldana J., 2015, CODING MANUAL QUALIT
   Sandobalin J, 2020, IEEE ACCESS, V8, P17734, DOI 10.1109/ACCESS.2020.2966597
   Schermann G, 2018, IEEE WORK CONF MIN S, P26, DOI 10.1145/3196398.3196456
   Schwarz J, 2018, 2018 11TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P220, DOI 10.1109/QUATIC.2018.00040
   Shamim MSI, 2020, 2020 IEEE SECURE DEVELOPMENT (SECDEV 2020), P58, DOI 10.1109/SecDev45635.2020.00025
   Sharma T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P189, DOI [10.1109/MSR.2016.028, 10.1145/2901739.2901761]
   Soldani D, 2015, IEEE COMMUN MAG, V53, P72, DOI 10.1109/MCOM.2015.7263348
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Sotiropoulos T, 2020, PROC INT CONF SOFTW, P26, DOI 10.1145/3377811.3380384
   Taschuk M, 2017, PLOS COMPUT BIOL, V13, DOI 10.1371/journal.pcbi.1005412
   Ting Dai, 2020, SoCC '20: Proceedings of the 11th ACM Symposium on Cloud Computing, P358, DOI 10.1145/3419111.3421303
   van der Bent E, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P164, DOI 10.1109/SANER.2018.8330206
   Varia J., 2011, CLOUD COMPUTING PRIN, P457, DOI DOI 10.1002/9780470940105.CH18
   Verdecchia R, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P141, DOI 10.1109/ICSA.2019.00023
   Weerasiri D, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3054177
   Wilson G, 2017, PLOS COMPUT BIOL, V13, DOI 10.1371/journal.pcbi.1005510
   Wilson G, 2014, PLOS BIOL, V12, DOI 10.1371/journal.pbio.1001745
   Wohlin C., 2012, Experimentation in Software Engineering
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wurster Michael, 2020, Advanced Information Systems Engineering. CAiSE Forum 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 386), P138, DOI 10.1007/978-3-030-58135-0_12
   Zampetti F, 2020, EMPIR SOFTW ENG, V25, P1095, DOI 10.1007/s10664-019-09785-8
NR 57
TC 16
Z9 16
U1 11
U2 28
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2021
VL 137
AR 106593
DI 10.1016/j.infsof.2021.106593
EA MAY 2021
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SQ8FQ
UT WOS:000660586400002
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Ni, YC
   Du, X
   Ye, P
   Minku, LL
   Yao, X
   Harman, M
   Xiao, RL
AF Ni, Youcong
   Du, Xin
   Ye, Peng
   Minku, Leandro L.
   Yao, Xin
   Harman, Mark
   Xiao, Ruliang
TI Multi-objective software performance optimisation at the architecture
   level randomised search rules
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architecture; Performance optimisation; Multi-objective
   evolutionary optimisation; Randomised search rule
ID GENETIC ALGORITHM; MODEL; ANTIPATTERNS; RELIABILITY; FRAMEWORK
AB Architecture-based software performance optimisation can help to find potential performance problems and mitigate their negative effects at an early stage. To automate this optimisation process, rule-based and metaheuristic-based performance optimisation methods have been proposed. However, existing rule-based methods explore a limited search space, potentially excluding optimal or near-optimal solutions. Most of current metaheuristic-based methods ignore existing practical knowledge of performance improvement, and lead to solutions that are not easily explicable to humans. To address these problems, we propose a novel approach for performance optimisation at the software architecture level named Multiobjective performance Optimisation based on Randomised search rulEs (MORE). First, we design randomised search rules (MORE-R) to provide explanation without parameters while benefiting from existing practical knowledge of performance improvement. Second, based on all possible composite applications of MORE-R, an explicable multi-objective optimisation problem (MORE-P) is defined to enlarge search space and enable solutions explicable to architectural stakeholder. Third, a multi-objective evolutionary algorithm (MORE-EA) with an introduced do-nothing rule, innovative encoding and repair mechanism is designed to effectively solve MORE-P. The experiments show that MORE is able to achieve more explicable and higher quality solutions than two stateof-the-art techniques. They also demonstrate the benefits of integrating search-based software engineering approaches with practical knowledge.
C1 [Ni, Youcong; Du, Xin; Xiao, Ruliang] Fujian Normal Univ, Coll Math & Informat, Fuzhou 350117, Peoples R China.
   [Ye, Peng] Wuhan Text Univ, Coll Math & Comp, Wuhan 430200, Peoples R China.
   [Ni, Youcong; Du, Xin] Fujian Normal Univ, Fujian Prov Engn Technol Res Ctr Publ Serv Big Da, Fuzhou 350007, Fujian, Peoples R China.
   [Minku, Leandro L.] Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, W Midlands, England.
   [Yao, Xin] Southern Univ Sci & Technol, Dept Comp Sci & Engn, Shenzhen 518055, Peoples R China.
   [Harman, Mark] UCL, Dept Comp Sci, London WC1E 6BT, England.
C3 Fujian Normal University; Wuhan Textile University; Fujian Normal
   University; University of Birmingham; Southern University of Science &
   Technology; University of London; University College London
RP Du, X (corresponding author), Fujian Normal Univ, Coll Math & Informat, Fuzhou 350117, Peoples R China.; Ye, P (corresponding author), Wuhan Text Univ, Coll Math & Comp, Wuhan 430200, Peoples R China.
EM youcongni@foxmail.com; xindu79@126.com; whuyp@126.com
RI Ye, Peng/J-1137-2017
FU Royal Society International Exchanges, UK [IE151226]; Talent support
   program of High school in the new century of Fujian Province, China;
   Natural Science Foundation of Fujian Province, China [2020J01165,
   2017J01498]; Natural Science Foundation of Hubei Province, China
   [2018CFB689]
FX This work is supported by the Royal Society International Exchanges, UK
   (IE151226) , Talent support program of High school in the new century of
   Fujian Province, China (Year 2017) , the Natural Science Foundation of
   Fujian Province, China (Nos. 2020J01165, 2017J01498) , the Natural
   Science Foundation of Hubei Province, China (No. 2018CFB689) .
CR Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Amoozegar M, 2015, SCI IRAN, V22, P1018
   [Anonymous], 2017, SOFTW DES QUAL GROUP
   Arcelli D., 2013, ECEASST
   Arcelli D, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P105, DOI 10.1109/ICSA.2018.00020
   Arcelli D, 2018, INFORM SOFTWARE TECH, V95, P366, DOI 10.1016/j.infsof.2017.09.006
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Boehm B., 2009, COST ESTIMATION COCO
   Brosch F., 2011, Proceedings of the joint ACM SIGSOFT conference-QoSA and ACM SIGSOFT symposium-ISARCS on Quality of software architectures-QoSA and architecting critical systems-ISARCS, P75
   Brosch F, 2012, IEEE T SOFTWARE ENG, V38, P1319, DOI 10.1109/TSE.2011.94
   Brosig F, 2015, IEEE T SOFTWARE ENG, V41, P157, DOI 10.1109/TSE.2014.2362755
   Chen ZF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P811, DOI 10.1145/3180155.3180229
   Cortellessa V, 2014, SOFTW SYST MODEL, V13, P391, DOI 10.1007/s10270-012-0246-z
   De Jong K, 2016, PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'16 COMPANION), P185, DOI 10.1145/2908961.2926973
   De Sanctis M, 2017, INFORM SOFTWARE TECH, V83, P35, DOI 10.1016/j.infsof.2016.11.008
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2011, Multi-objective optimisation using evolutionary algorithms: an introduction, P3, DOI DOI 10.1007/978-0-85729-652-8_1
   Distefano S, 2011, IEEE T SOFTWARE ENG, V37, P65, DOI 10.1109/TSE.2010.10
   Du X., 2015, P COMP PUBL 2015 ANN, P1385, DOI [10.1145/2739482.2764705, DOI 10.1145/2739482.2764705]
   Du X, 2015, IEEE C EVOL COMPUTAT, P2129, DOI 10.1109/CEC.2015.7257147
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Eiben AE., 2003, NAT COMPUT, V2nd, DOI 10.1007/978-3-662-05094-1
   Etemaadi R, 2015, SCI COMPUT PROGRAM, V97, P366, DOI 10.1016/j.scico.2014.06.012
   Etemaadi R, 2013, J SYST SOFTWARE, V86, P2559, DOI 10.1016/j.jss.2013.05.109
   Etemaadi R, 2012, EUROMICRO CONF PROC, P63, DOI 10.1109/SEAA.2012.38
   FONSECA C, 2005, 3 INT C EV MULT OPT, V216
   Gokhale SS, 2007, IEEE T DEPEND SECURE, V4, P32, DOI 10.1109/TDSC.2007.4
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Immonen A, 2008, SOFTW SYST MODEL, V7, P49, DOI 10.1007/s10270-006-0040-x
   ISO, 2011, 197612011 ISO COSMIC
   Kavimandan A, 2009, LECT NOTES COMPUT SC, V5581, P18, DOI 10.1007/978-3-642-02351-4_2
   Kounev S, 2006, IEEE T SOFTWARE ENG, V32, P486, DOI 10.1109/TSE.2006.69
   Koziolek A., 2014, KARLSRUHE SERIES SOF, V7
   Koziolek A, 2013, J SYST SOFTWARE, V86, P2542, DOI 10.1016/j.jss.2013.03.081
   Koziolek Anne, 2011, JOINT ACM SIGSOFT C, P33
   Koziolek H, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P776, DOI 10.1145/1985793.1985902
   Li H., 2010, Proceedings of the first joint WOSP/SIPEW international conference on Performance engineering, P117
   Li R, 2011, IEEE C EVOL COMPUTAT, P432
   Liu JM, 2017, PROC INT CONF EDU IN, P345, DOI 10.1109/EITT.2017.88
   Martens A., 2010, P 1 JOINT WOSP SIPEW, P105, DOI [DOI 10.1145/1712605.1712624, 10.1145]
   Martens A, 2009, ELECTRON NOTES THEOR, V253, P77, DOI 10.1016/j.entcs.2009.09.029
   Martens A, 2009, QUASSOSS 09: 1ST INTERNATIONAL WORKSHOP ON THE QUALITY OF SERVICE-ORIENTED SOFTWARE SYSTEM, P25
   Martens A, 2010, LECT NOTES COMPUT SC, V6093, P84, DOI 10.1007/978-3-642-13821-8_8
   McGregor J, 2007, CMUSEI2007TN001
   Meedeniya I., 2012, Proceedings 2012 2nd International Workshop on Software Engineering for Embedded Systems (SEES), P23, DOI 10.1109/SEES.2012.6225486
   Meier J.D., 2004, NET APPL PERFORMANCE
   Meunier H, 2000, IEEE C EVOL COMPUTAT, P317, DOI 10.1109/CEC.2000.870312
   Minku LL, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P446, DOI 10.1145/2568225.2568228
   Navarro E, 2013, INT J INF TECH DECIS, V12, P547, DOI 10.1142/S0219622013500211
   O. MG, 2017, UML SUPERSTRUCTURE S
   Poort E, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P127, DOI 10.1109/WICSA.2015.9
   Rahman S., 2017, ISEAS PERSPECTIVES, V42, P1
   Rahmoun S, 2015, P EUR C SOFTW ARCH W, P25
   Ramin E.I., 2014, THESIS
   Reussner R., 2010, THESIS
   Salcedo-Sanz S, 2009, COMPUT SCI REV, V3, P175, DOI 10.1016/j.cosrev.2009.07.001
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Sedaghatbaf A, 2019, SOFTW SYST MODEL, V18, P2609, DOI 10.1007/s10270-018-0684-3
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Slot R, 2010, THESIS
   Smith C.U., 2003, 29 INT COMP MEAS GRO, P717
   Srinivas N., 1994, Evolutionary Computation, V2, P221, DOI 10.1162/evco.1994.2.3.221
   Tribastone M., 2014, ACM SPEC INT C PERF, P63
   Tribastone M, 2013, IEEE T SOFTWARE ENG, V39, P744, DOI 10.1109/TSE.2012.66
   Tribastone M, 2012, IEEE T SOFTWARE ENG, V38, P205, DOI 10.1109/TSE.2010.82
   Trubiani C, 2014, J SYST SOFTWARE, V95, P141, DOI 10.1016/j.jss.2014.03.081
   Xu J, 2012, PERFORM EVALUATION, V69, P525, DOI 10.1016/j.peva.2009.11.003
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 70
TC 1
Z9 1
U1 1
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2021
VL 135
AR 106565
DI 10.1016/j.infsof.2021.106565
EA MAR 2021
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RQ5WO
UT WOS:000642489200004
DA 2024-07-18
ER

PT J
AU Ballarín, M
   Marcén, AC
   Pelechano, V
   Cetina, C
AF Ballarin, Manuel
   Marcen, Ana C.
   Pelechano, Vicente
   Cetina, Carlos
TI On the influence of model fragment properties on a machine
   learning-based approach for feature location
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model fragment location; Feature location; Machine learning; Learning to
   rank
ID TRAINING DATA; CLASSIFICATION; RETRIEVAL; TESTS
AB Context: Leveraging machine learning techniques to address feature location on models has been gaining attention. Machine learning techniques empower software product companies to take advantage of the knowledge and the experience to improve the performance of the feature location process. Most of the machine learning-based works for feature location on models report the machine learning techniques and the tuning parameters in detail. However, these works focus on the size and the distribution of the data sets, neglecting the properties of their contents.
   Objective: In this paper, we analyze the influence of three model fragment properties (density, multiplicity, and dispersion) on a machine learning-based approach for feature location.
   Method: The analysis of these properties is based on an industrial case provided by CAF, a worldwide provider of railway solutions. The test cases were evaluated through a machine learning technique that uses different subsets of a knowledge base to learn how to locate unknown features.
   Results: Results show that the density and dispersion properties have a direct impact on the results. In our case study, the model fragments with extra-small density values achieve results with up to 43% more precision, 41% more recall, 42% more F-measure, and 0.53 more Matthews Correlation Coefficient (MCC) than the model fragments with other density values. On the other hand, the model fragments with extra-small and small dispersion values achieve results with up to 53% more precision, 52% more recall, 52% more F-measure, and 0.57 more MCC than the model fragments with other dispersion values.
   Conclusions: The analysis of the results shows that both density and dispersion properties significantly influence the results. These results can serve not only to improve the reports by means of the model fragment properties, but also to be able to compare machine learning-based feature location approaches fairly improving the feature location results.
C1 [Ballarin, Manuel; Marcen, Ana C.; Cetina, Carlos] Univ San Jorge, SVIT Res Grp, Autovia A-23 Zaragoza Huesca Km299, Zaragoza 50830, Spain.
   [Marcen, Ana C.; Pelechano, Vicente] Univ Politecn Valencia, Ctr Invest Metodos Prod Software, Camino Vera S-N, Valencia 46022, Spain.
C3 Universidad San Jorge; Universitat Politecnica de Valencia
RP Ballarín, M (corresponding author), Univ San Jorge, SVIT Res Grp, Autovia A-23 Zaragoza Huesca Km299, Zaragoza 50830, Spain.
EM mballarin@usj.es; acmarcen@usj.es; pele@dsic.upv.es; ccetina@usj.es
RI Marcén, Ana/HKF-5543-2023; Cetina, Carlos/P-8682-2017
OI Marcén, Ana/0000-0002-5054-4618; Cetina, Carlos/0000-0001-8542-5515
FU Ministry of Economy and Competitiveness (MINECO), Spain through the
   Spanish National R+D+i Plan; ERDF funds under the Project ALPS
   [RTI2018096411-B-I00]; REVaMP2 Project [ITEA3 15010, ACIF/2018/171]
FX This work has been partially supported by the Ministry of Economy and
   Competitiveness (MINECO), Spain through the Spanish National R+D+i Plan
   and ERDF funds under the Project ALPS (RTI2018096411-B-I00). We also
   thank the ITEA3 15010 REVaMP2 Project and ACIF/2018/171.
CR [Anonymous], 2017, IEEE T EVOL COMPUT
   [Anonymous], 2017, DEEP FOREST ALTERNAT
   [Anonymous], 2009, ENCY DATABASE SYSTEM, DOI DOI 10.1007/978-0-387-39940-9_565
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Ballarín M, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P189, DOI 10.1145/3239372.3239397
   Baltes S., 2020, ARXIV200207764
   Binkley D, 2014, PROC IEEE INT CONF S, P441, DOI 10.1109/ICSME.2014.70
   Buda M, 2018, NEURAL NETWORKS, V106, P249, DOI 10.1016/j.neunet.2018.07.011
   Canuto SergioD., 2013, Journal of Information and Data Management, V4, P453
   Cao ZR, 2018, AUTOMAT SOFTW ENG, V25, P501, DOI 10.1007/s10515-018-0231-z
   Conover W.J., 1999, WILEY SERIES PROBABI
   Corley CS, 2015, PROC IEEE INT CONF S, P556, DOI 10.1109/ICSM.2015.7332513
   Dang V., 2013, The lemur project-wiki-ranklib
   Falessi D, 2017, EMPIR SOFTW ENG, V22, P996, DOI 10.1007/s10664-016-9460-6
   Foody GM, 2006, REMOTE SENS ENVIRON, V104, P1, DOI 10.1016/j.rse.2006.03.004
   Foody GM, 2004, IEEE T GEOSCI REMOTE, V42, P1335, DOI 10.1109/TGRS.2004.827257
   García S, 2010, INFORM SCIENCES, V180, P2044, DOI 10.1016/j.ins.2009.12.010
   Han J, 2001, AUST COMP S, V23, P60, DOI 10.1109/ACSC.2001.906624
   Haugen O, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P139, DOI 10.1109/SPLC.2008.25
   Jiang Y, 2017, IEEE INT CONF COMMUN, P66
   Lapeña R, 2017, ACM SIGPLAN NOTICES, V52, P63, DOI 10.1145/3170492.3136052
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Marcén AC, 2020, J SYST SOFTWARE, V163, DOI 10.1016/j.jss.2020.110519
   Marcén AC, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P57, DOI 10.1145/3109729.3109734
   Marcén AC, 2017, LECT NOTES COMPUT SC, V10650, P491, DOI 10.1007/978-3-319-69904-2_37
   Mills C, 2018, PROC IEEE INT CONF S, P369, DOI 10.1109/ICSME.2018.00045
   Pérez F, 2019, AUTOMAT SOFTW ENG, V26, P161, DOI 10.1007/s10515-019-00251-9
   Pérez F, 2018, INFORM SOFTWARE TECH, V103, P188, DOI 10.1016/j.infsof.2018.06.017
   Shabtai A., 2009, INFORM SECURITY TECH, V14, P16, DOI [DOI 10.1016/j.istr.2009.03.003, DOI 10.1016/J.ISTR.2009.03.003]
   SHERBA S.A., 2003, Second International Software Requirements to Architectures Workshop (STRAW 03), P150
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Vale T, 2019, EMPIR SOFTW ENG, V24, P1328, DOI 10.1007/s10664-018-9652-3
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang JL, 2014, IEEE T KNOWL DATA EN, V26, P698, DOI 10.1109/TKDE.2013.32
   Weiss G., 2001, Tech Rep
   Weiss GM, 2003, J ARTIF INTELL RES, V19, P315, DOI 10.1613/jair.1199
   Wohlin C., 2012, Experimentation in Software Engineering
   Wolf L, 2005, PROC CVPR IEEE, P359
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Zhao F, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P298, DOI 10.1109/QRS.2015.49
   ZHUANG X, 1994, INT J REMOTE SENS, V15, P3271, DOI 10.1080/01431169408954326
NR 42
TC 5
Z9 5
U1 1
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2021
VL 129
AR 106430
DI 10.1016/j.infsof.2020.106430
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI7BA
UT WOS:000583428200008
DA 2024-07-18
ER

PT J
AU Gong, DW
   Pan, F
   Tian, T
   Yang, S
   Meng, FL
AF Gong, Dunwei
   Pan, Feng
   Tian, Tian
   Yang, Su
   Meng, Fanlin
TI A feedback-directed method of evolutionary test data generation for
   parallel programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Information utilization; Genetic algorithm; Parallel program; Path
   coverage; Test data
ID PATHS; VERIFICATION; CHECKING
AB Context: Genetic algorithms can be utilized for automatic test data generation. Test data are encoded as individuals which are evolved for a number of generations using genetic operators. Test data of a parallel program include not only the program input, but also the communication information between each pair of processes. Traditional genetic algorithms, however, do not make full use of information provided by a population's evolution, resulting in a low efficiency in generating test data. Objective: This paper emphasizes the problem of test data generation for parallel programs, and presents a feedback-directed genetic algorithm for generating test data of path coverage. Method: Information related to a schedule sequence is exploited to improve genetic operators. Specifically, a scheduling sequence is evaluated according to how well an individual covers the target path. The probability of the crossover and mutation points being located in the region is determined based on the evaluation result, which prevents a good schedule sequence from being destroyed. If crossover and mutation are performed in the scheduling sequence, the location of crossover and mutation points is further determined according to the relationship between nodes to be covered and the scheduling sequence. In this way, the population can be evolved in a narrowed search space. Results: The proposed algorithm is applied to test 11 parallel programs. The experimental results show that, compared with the genetic algorithm without utilizing information during the population evolution, the proposed algorithm significantly reduces the number of generations and the time consumption. Conclusion: The proposed algorithm can greatly improve the efficiency in evolutionary test data generation.
C1 [Gong, Dunwei; Pan, Feng; Yang, Su] China Univ Min & Technol, Sch Informat & Control Engn, Xuzhou 221116, Jiangsu, Peoples R China.
   [Tian, Tian] Shandong Jianzhu Univ, Sch Comp Sci & Technol, Jinan 250101, Shandong, Peoples R China.
   [Meng, Fanlin] Univ Essex, Dept Math Sci, Colchester CO4 3SQ, Essex, England.
C3 China University of Mining & Technology; Shandong Jianzhu University;
   University of Essex
RP Tian, T (corresponding author), Shandong Jianzhu Univ, Sch Comp Sci & Technol, Jinan 250101, Shandong, Peoples R China.
EM tian_tiantian@126.com
OI Meng, Fanlin/0000-0002-4866-0011
FU National Natural Science Foundation of China [61773384, 61503220];
   National Basic Research Program of China (973Program) [2014CB046306-2];
   National Key R&D Program of China [2018YFB1003802-01]
FX This paper is jointly supported by National Natural Science Foundation
   of China with grant No. 61773384 and 61503220, and National Basic
   Research Program of China (973Program) with grant No. 2014CB046306-2,
   National Key R&D Program of China with grant No. 2018YFB1003802-01.
CR Ahmed MA, 2008, COMPUT OPER RES, V35, P3107, DOI 10.1016/j.cor.2007.01.012
   Ahmed MA, 2016, J SYST ARCHITECT, V64, P50, DOI 10.1016/j.sysarc.2015.11.001
   Alsariera YA, 2018, ADV SCI LETT, V24, P7245, DOI 10.1166/asl.2018.12922
   Anbunathan R, 2019, IET SOFTW, V13, P423, DOI 10.1049/iet-sen.2018.5207
   [Anonymous], 2014, SOFTWARE METRICS RIG, DOI DOI 10.1201/B17461
   [Anonymous], 2014, SEARCH METHODOLOGIES, DOI DOI 10.1007/978-1-4614-6940-7_4
   Ayub MS, 2017, PROC INT SYMP SOFTW, P294, DOI 10.1109/ISSRE.2017.15
   Barker B., 2015, WORKSH HIGH PERF COM
   Barney B., 2017, MESSAGE PASSING INTE
   Beyer D, 2004, PROC INT CONF SOFTW, P326, DOI 10.1109/ICSE.2004.1317455
   Bianchi FA, 2018, IEEE T SOFTWARE ENG, V44, P747, DOI 10.1109/TSE.2017.2707089
   Cao LX, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON INFORMATION AND AUTOMATION, P1200, DOI 10.1109/ICInfA.2015.7279469
   Carver RH, 2010, CONCURR COMP-PRACT E, V22, P2445, DOI 10.1002/cpe.1573
   Chehouri A., 2016, Journal of Computer Science, V12, P350, DOI [10.3844/jcssp.2016.350, DOI 10.3844/JCSSP.2016.350, DOI 10.3844/JCSSP.2016.350.362]
   Choudhary A, 2017, PROC INT CONF SOFTW, P266, DOI 10.1109/ICSE.2017.32
   Dang XY, 2020, IEEE T RELIAB, V69, P334, DOI 10.1109/TR.2019.2922684
   Dessbesell GF, 2008, 2008 4TH SOUTHERN CONFERENCE ON PROGRAMMABLE LOGIC, PROCEEDINGS, P87, DOI 10.1109/SPL.2008.4547737
   Du P., 2013, ADV MAT RES, V756-759, P2620
   Du Z., 2001, MPI PARALLEL PROGRAM
   Ghiduk AS, 2018, ARAB J SCI ENG, V43, P7907, DOI 10.1007/s13369-018-3226-y
   Gong DW, 2016, INFORM SOFTWARE TECH, V80, P217, DOI 10.1016/j.infsof.2016.09.003
   Guo SJ, 2016, IEEE INT CONF AUTOM, P531, DOI 10.1145/2970276.2970332
   Guo SJ, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P854, DOI 10.1145/2786805.2786841
   Jia YH, 2014, LECT NOTES COMPUT SC, V8886, P37, DOI 10.1007/978-3-319-13563-2_4
   Jung W, 2007, 2007 INTERNATIONAL CONFERENCE ON INTELLIGENT PERVASIVE COMPUTING, PROCEEDINGS, P327, DOI 10.1109/IPC.2007.81
   Khanna D, 2018, LECT NOTES COMPUT SC, V10951, P466, DOI 10.1007/978-3-319-95582-7_28
   Khari M, 2020, SOFT COMPUT, V24, P9143, DOI 10.1007/s00500-019-04444-y
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Krammer B, 2006, LECT NOTES COMPUT SC, V4192, P105
   Lei Y, 2006, IEEE T SOFTWARE ENG, V32, P382, DOI 10.1109/TSE.2006.56
   Leungwattanakit W, 2014, IEEE T SOFTWARE ENG, V40, P483, DOI 10.1109/TSE.2013.49
   Li Bin, 2008, CIS Workshops 2007. International Conference on Computational Intelligence and Security Workshops, P183, DOI 10.1109/CIS.Workshops.2007.146
   Luo Q, 2017, EMPIR SOFTW ENG, V22, P6, DOI 10.1007/s10664-015-9413-5
   Mareli M., 2018, Applied Computing and Informatics, V14, P107, DOI 10.1016/j.aci.2017.09.001
   Melo SM, 2019, INFORM SOFTWARE TECH, V105, P226, DOI 10.1016/j.infsof.2018.08.017
   Mishra Deepti Bala, 2019, Indonesian J. Electr. Eng. Comput. Sci., V15, P504, DOI [10.11591/ijeecs.v15.i1.pp504-510, DOI 10.11591/IJEECS.V15.I1.PP504-510]
   Nistor A, 2012, PROC INT CONF SOFTW, P727, DOI 10.1109/ICSE.2012.6227145
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Pandey A, 2019, INT J SOFTW SCI COMP, V11, P31, DOI 10.4018/IJSSCI.2019010103
   Przewozniczek MW, 2020, EXPERT SYST APPL, V145, DOI 10.1016/j.eswa.2019.113126
   Qi XF, 2018, LECT NOTES COMPUT SC, V11293, P173, DOI 10.1007/978-3-030-04272-1_11
   Qi XF, 2016, FRONT COMPUT SCI-CHI, V10, P631, DOI 10.1007/s11704-016-5096-3
   Scalabrino S, 2018, IEEE INT CONF AUTOM, P868, DOI 10.1145/3238147.3240477
   Sheoran S., 2019, INT J SYST ASSUR ENG, P1
   Siegel SF, 2011, MATH COMPUT SCI, V5, P427, DOI 10.1007/s11786-011-0101-6
   Souza S.R.S., 2011, P WORKSH PAR DISTR S, P1
   Sun BC, 2019, INFORM SOFTWARE TECH, V114, P190, DOI 10.1016/j.infsof.2019.07.002
   Tan N, 2015, 2015 24TH IEEE INTERNATIONAL SYMPOSIUM ON ROBOT AND HUMAN INTERACTIVE COMMUNICATION (RO-MAN), P246, DOI 10.1109/ROMAN.2015.7333566
   Terragni V, 2016, PROC INT CONF SOFTW, P1121, DOI 10.1145/2884781.2884876
   Tian T, 2016, AUTOMAT SOFTW ENG, V23, P469, DOI 10.1007/s10515-014-0173-z
   Tian T, 2014, CHINESE J ELECTRON, V23, P291
   Vakkalanka S, 2008, PPOPP'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P285, DOI 10.1145/1345206.1345258
   Vetter JereyS., 2000, Proceedings Supercomputing 2000, November 4-10, 2000, Dallas, Texas, USA. IEEE Computer Society, P51
   Wang H, 2018, APPL SOFT COMPUT, V69, P806, DOI 10.1016/j.asoc.2017.06.029
   Wang H, 2017, INFORM SCIENCES, V382, P374, DOI 10.1016/j.ins.2016.12.024
   Xanthakis S., 1992, 5 INT C SOFTWARE ENG, P625
   Xie Xiao-Yuan, 2009, Journal of Software, V20, P3117, DOI 10.3724/SP.J.1001.2009.00580
   Yang X.S., 2019, Mathematical Foundations of Nature-Inspired Methods
   Yao XJ, 2015, IET SOFTW, V9, P103, DOI 10.1049/iet-sen.2014.0058
   Yu HB, 2018, PROC IEEE ACM INT C, P527, DOI 10.1145/3183440.3190336
   Zhang XD, 2017, IEEE INT CONF SOFTW, P172, DOI 10.1109/ICST.2017.23
NR 61
TC 4
Z9 5
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2020
VL 124
AR 106318
DI 10.1016/j.infsof.2020.106318
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LP3MD
UT WOS:000534222000005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Ochodek, M
   Kopczynska, S
   Staron, M
AF Ochodek, Miroslaw
   Kopczynska, Sylwia
   Staron, Miroslaw
TI Deep learning model for end-to-end approximation of COSMIC functional
   size based on use-case names
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Functional size approximation; Approximate software sizing methods;
   COSMIC; Deep learning; Word embeddings; Use cases
ID SYSTEMS
AB Context: COSMIC is a widely used functional size measurement (FSM) method that supports software development effort estimation. The FSM methods measure functional product size based on functional requirements. Unfortunately, when the description of the product's functionality is often abstract or incomplete, the size of the product can only be approximated since the object to be measured is not yet fully described. Also, the measurement performed by human-experts can be time-consuming, therefore, it is worth considering automating it.
   Objective: Our objective is to design a new prediction model capable of approximating COSMIC-size of use cases based only on their names that is easier to train and more accurate than existing techniques.
   Method: Several neural-network architectures are investigated to build a COSMIC size approximation model. The accuracy of models is evaluated in a simulation study on the dataset of 437 use cases from 27 software development projects in the Management Information Systems (MIS) domain. The accuracy of the models is compared with the Average Use-Case approximation (AUC), and two recently proposed two-step models-Average Use-Case Goal-aware Approximation (AUCG) and Bayesian Network Use-Case Goal AproxImatioN (BN-UCGAIN).
   Results: The best prediction accuracy was obtained for a convolutional neural network using a word-embedding model trained on Wikipedia+Gigaworld. The accuracy of the model outperformed the baseline AUC model by ca. 20%, and the two-step models by ca. 5-7%. In the worst case, the improvement in the prediction accuracy is visible after estimating 10 use cases.
   Conclusions: The proposed deep learning model can be used to automatically approximate COSMIC size of software applications for which the requirements are documented in the form of use cases (or at least in the form of use-case names). The advantage of the model is that it does not require collecting historical data other than COSMIC size and names of use cases.
C1 [Ochodek, Miroslaw; Kopczynska, Sylwia] Poznan Univ Tech, Fac Comp & Telecommun, Ul Piotrowo 2, PL-60965 Poznan, Poland.
   [Staron, Miroslaw] Chalmers Univ Gothenburg, Gothenburg, Sweden.
C3 Poznan University of Technology; Chalmers University of Technology
RP Ochodek, M (corresponding author), Poznan Univ Tech, Fac Comp & Telecommun, Ul Piotrowo 2, PL-60965 Poznan, Poland.
EM mochodek@cs.put.poznan.pl; sylwia.kopczynska@cs.put.poznan.pl;
   miroslaw.staron@cse.gu.se
RI Kopczyńska, Sylwia/G-1504-2014
OI Kopczyńska, Sylwia/0000-0002-9550-3334; Ochodek,
   Miroslaw/0000-0002-9103-717X; Staron, Miroslaw/0000-0002-9052-0864
FU Poznan University of Technology
FX This research has been partially supported by the statutory funds of
   Poznan University of Technology.
CR Abran A., 2010, Software metrics and software metrology
   Adolph S., 2003, PATTERNS EFFECTIVE U
   Albrech A., 1979, PROC JOINT SHAREGUID, P83
   [Anonymous], P SMEF 07
   [Anonymous], 197612011 ISOIEC
   [Anonymous], 2018, CLEI ELECT J
   [Anonymous], 2014, P SSST EMNLP 2014 8
   [Anonymous], COSMIC FUNCTIONAL SI
   [Anonymous], APPL COMPUT INFORM
   [Anonymous], 2013, SOFTWARE REQUIREMENT
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 1414312007R2019 ISOI
   [Anonymous], COSMIC GUIDELINE EAR
   [Anonymous], 2017, ARXIV170201923
   [Anonymous], 1997, NEURAL COMPUT
   [Anonymous], 9 INT WORKSH SOFTW M
   [Anonymous], 245702005 ISOIEC
   [Anonymous], 2014, STAKEHOLDER GOAL ANA, DOI DOI 10.1007/978-3-662-43839-8
   [Anonymous], 2012, IFPUG NEWSLETTER
   [Anonymous], COSMIC FUNCTION POIN
   [Anonymous], 2015, COSMIC FUNCT SIZ MEA
   [Anonymous], 298812010 ISOIEC
   [Anonymous], P IWSM MENSURA 2007
   Bagriyanik S, 2016, INFORM SOFTWARE TECH, V72, P189, DOI 10.1016/j.infsof.2015.12.011
   Bernard Nicolau de França Breno, 2015, CLEIej, V18, P5
   Buglione L, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P49, DOI 10.1109/IWSM-Mensura.2013.18
   Chollet F., 2018, Towards Data Science
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cockburn A., 2001, Writing effective use cases
   Cohn M., 2005, Agile Estimating and Planning
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Cohn Mike., 2010, SUCCEEDING AGILE SOF
   Commeyne C., 2016, Software Measurements News, V21, P25
   De Vito G, 2014, EUROMICRO CONF PROC, P69, DOI 10.1109/SEAA.2014.30
   del Bianco V, 2014, INFORM SOFTWARE TECH, V56, P1253, DOI 10.1016/j.infsof.2014.04.009
   Desharnais J.-M, 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P269, DOI 10.1109/IWSM-MENSURA.2011.45
   Desharnais J. M., 2011, P 12 INT C PROD FOC, P68
   Ecar M, 2018, LECT NOTES BUS INF P, V314, P3, DOI 10.1007/978-3-319-91602-6_1
   Efstathiou V, 2018, IEEE WORK CONF MIN S, P38, DOI 10.1145/3196398.3196448
   Hess M. R., 2004, ANN M AM ED RES ASS, P1
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hussain I, 2013, DATA KNOWL ENG, V85, P2, DOI 10.1016/j.datak.2012.06.005
   Inayat I., 2015, Comput. Human Behav, V51
   Jacobson I, 2016, COMMUN ACM, V59, P61, DOI 10.1145/2890778
   Jenner M.S., 2001, 4 EUROPEAN C SOFTWAR, P173
   Jurkiewicz J, 2015, EMPIR SOFTW ENG, V20, P82, DOI 10.1007/s10664-013-9277-5
   King DB, 2015, ACS SYM SER, V1214, P1
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Kopczynska Sylwia, 2012, 2012 First International Workshop on Software Engineering Education based on Real-World Experiences (EduRex 2012), P13, DOI 10.1109/EduRex.2012.6225698
   Kraemer HC, 2006, BIOL PSYCHIAT, V59, P990, DOI 10.1016/j.biopsych.2005.09.014
   Langdon WB, 2016, INFORM SOFTWARE TECH, V73, P16, DOI 10.1016/j.infsof.2016.01.003
   Lavazza L, 2019, INFORM SOFTWARE TECH, V109, P108, DOI 10.1016/j.infsof.2019.02.002
   Marín B, 2008, LECT NOTES COMPUT SC, V5338, P170
   Mikolov T., 2013, P 2013 C N AM CHAPTE, P746
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Nawrocki J., 2006, BIS, P13
   Nawrocki J, 2014, LECT NOTES COMPUT SC, V8327, P40, DOI 10.1007/978-3-319-04298-5_5
   Ochodek M, 2011, INFORM SOFTWARE TECH, V53, P885, DOI 10.1016/j.infsof.2011.02.004
   Ochodek M, 2011, INFORM SOFTWARE TECH, V53, P200, DOI 10.1016/j.infsof.2010.10.005
   Ochodek M, 2018, J SYST SOFTWARE, V143, P29, DOI 10.1016/j.jss.2018.05.012
   Ochodek M, 2016, PROCEEDINGS OF 2016 JOINT CONFERENCE OF THE INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P201, DOI [10.1109/IWSM-Mensura.2016.8, 10.1109/IWSM-Mensura.2016.039]
   Ochodek M, 2016, INFORM SOFTWARE TECH, V80, P73, DOI 10.1016/j.infsof.2016.08.007
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Rao R. B., 2008, P 2008 SIAM INT C DA, P588, DOI [https://doi.org/10.1137/1.9781611972788.54, DOI 10.1137/1.9781611972788.54, 10.1137/1.9781611972788.54]
   Salm M, 2017, CONTRIB ECON, P41, DOI 10.1007/978-3-319-62671-0_3
   Schön EM, 2017, COMPUT STAND INTER, V49, P79, DOI 10.1016/j.csi.2016.08.011
   Sellami A, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P282, DOI 10.1109/ICSEA.2009.96
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Symons C.R.:., 1991, Software Sizing and Estimating: Mk II FPA
   Tiwari S, 2015, INFORM SOFTWARE TECH, V67, P128, DOI 10.1016/j.infsof.2015.06.004
   Trudel S, 2016, PROCEEDINGS OF 2016 JOINT CONFERENCE OF THE INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P23, DOI [10.1109/IWSM-Mensura.2016.15, 10.1109/IWSM-Mensura.2016.016]
   Valdés-Souto F, 2017, SCI COMPUT PROGRAM, V135, P105, DOI 10.1016/j.scico.2016.11.005
   Vogelezang F, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P27, DOI 10.1109/IWSM-Mensura.2013.14
   Wautelet Y, 2016, LECT NOTES COMPUT SC, V9975, P127, DOI 10.1007/978-3-319-47717-6_11
   Wohlin C., 2012, Experimentation in Software Engineering
   Zivkovic A, 2005, INFORM SOFTWARE TECH, V47, P881, DOI 10.1016/j.infsof.2005.02.008
NR 77
TC 10
Z9 11
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2020
VL 123
AR 106310
DI 10.1016/j.infsof.2020.106310
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK1XD
UT WOS:000530651200007
DA 2024-07-18
ER

PT J
AU Coelho, J
   Valente, MT
   Milen, L
   Silva, LL
AF Coelho, Jailton
   Valente, Marco Tulio
   Milen, Luciano
   Silva, Luciana L.
TI Is this GitHub project maintained? Measuring the level of maintenance
   activity of open-source projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Unmaintained projects; GitHub; Open source software
ID DEFECT PREDICTION; SOFTWARE; CLASSIFICATION
AB Context: GitHub hosts an impressive number of high-quality OSS projects. However, selecting "the right tool for the job" is a challenging task, because we do not have precise information about those high-quality projects.
   Objective: In this paper, we propose a data-driven approach to measure the level of maintenance activity of GitHub projects. Our goal is to alert users about the risks of using unmaintained projects and possibly motivate other developers to assume the maintenance of such projects.
   Method: We train machine learning models to define a metric to express the level of maintenance activity of GitHub projects. Next, we analyze the historical evolution of 2927 active projects in the time frame of one year.
   Results: From 2927 active projects, 16% become unmaintained in the interval of one year. We also found that Objective-C projects tend to have lower maintenance activity than projects implemented in other languages. Finally, software tools-such as compilers and editors-have the highest maintenance activity over time.
   Conclusions: A metric about the level of maintenance activity of GitHub projects can help developers to select open source projects.
C1 [Coelho, Jailton; Valente, Marco Tulio; Milen, Luciano; Silva, Luciana L.] Univ Fed Minas Gerais, Belo Horizonte, MG, Brazil.
C3 Universidade Federal de Minas Gerais
RP Coelho, J (corresponding author), Univ Fed Minas Gerais, Belo Horizonte, MG, Brazil.
EM jailtoncoelho@dcc.ufmg.br
RI silva, luciana/AFP-3191-2022
OI silva, luciana/0000-0002-9987-4538; Valente, Marco
   Tulio/0000-0002-8180-7548
FU CAPES; FAPEMIG [CEX-PPM00490-17]; CNPq [308164/2019-9]
FX Our research is supported by CAPES, FAPEMIG (process CEX-PPM00490-17),
   and CNPq (process 308164/2019-9). We would also like to thank the 112
   GitHub developers who kindly answered our survey.
CR [Anonymous], 24 INT S FDN SOFTW E
   Bao LF, 2017, IEEE WORK CONF MIN S, P170, DOI 10.1109/MSR.2017.58
   Barcomb A., 2019, 41 INT C SOFTW ENG I, P1
   Bijlsma D, 2012, SOFTWARE QUAL J, V20, P265, DOI 10.1007/s11219-011-9140-0
   Borges BD, 2016, ORBIS, V12, P1
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Breiman L., 2001, Mach. Learn., V45, P5
   Businge J, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P368, DOI 10.1109/ICSM.2012.6405295
   Calle M Luz, 2011, Brief Bioinform, V12, P86, DOI 10.1093/bib/bbq011
   Izquierdo JLC, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P292, DOI 10.1109/MODELS.2017.19
   Coelho J, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240501
   Coelho J, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P114, DOI 10.1145/3195836.3195848
   Coelho J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P186, DOI 10.1145/3106237.3106246
   Cox D R, 2018, ANAL SURVIVAL DATA, DOI DOI 10.1201/9781315137438
   da Costa DA, 2014, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSME.2014.50
   Di Penta Massimiliano, 2012, P ACM SIGSOFT 20 INT, P1
   Eghbal Nadia, 2016, Technical report
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   Khondhu Jymit., 2013, Open Source Software: Quality Verification, volume 404 of IFIP Advances in Information and Communication Technology, V404, P61
   Koch S, 2002, INFORM SYST J, V12, P27, DOI 10.1046/j.1365-2575.2002.00110.x
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lee Amanda, 2017, 39 INT C SOFTW ENG I, P1
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lin B, 2017, INT CONF GLOBAL SOFT, P66, DOI 10.1109/ICGSE.2017.11
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Liu C, 2018, IEEE ACCESS, V6, P52082, DOI 10.1109/ACCESS.2018.2869207
   Louppe G, 2013, ADV NEURAL INFORM PR
   Maldonado ED, 2017, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSME.2017.8
   Martin W, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P435, DOI 10.1145/2950290.2950320
   Mens T, 2014, 7 INT SEM SER ADV TE, P79
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Oman P., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P337, DOI 10.1109/ICSM.1992.242525
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Pinto G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P112, DOI 10.1109/SANER.2016.68
   Provost F, 2001, MACH LEARN, V42, P203, DOI 10.1023/A:1007601015854
   Ramasubramanian Karthik, 2017, MACHINE LEARNING MOD
   Rastogi A, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240504
   Robles G, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P167, DOI 10.1109/MSR.2009.5069497
   Samoladas I, 2010, INFORM SOFTWARE TECH, V52, P902, DOI 10.1016/j.infsof.2010.05.001
   Steinmacher I, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P256, DOI 10.1145/3180155.3180208
   Steinmacher I, 2016, PROC INT CONF SOFTW, P273, DOI 10.1145/2884781.2884806
   Thung F., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P205, DOI 10.1109/WCRE.2012.30
   Tian Y, 2015, EMPIR SOFTW ENG, V20, P1354, DOI 10.1007/s10664-014-9331-y
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Tourani P, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P24, DOI 10.1109/SANER.2017.7884606
   Valiev M, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P644, DOI 10.1145/3236024.3236062
   Yamashita K., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P344
   Zhou MH, 2015, IEEE T SOFTWARE ENG, V41, P82, DOI 10.1109/TSE.2014.2349496
NR 55
TC 34
Z9 34
U1 3
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2020
VL 122
AR 106274
DI 10.1016/j.infsof.2020.106274
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LC4TR
UT WOS:000525318800003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ozkaya, M
   Erata, F
AF Ozkaya, Mert
   Erata, Ferhat
TI A survey on the practical use of UML for different software architecture
   viewpoints
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architecture viewpoints; UML; Survey; Practitioners
ID DOMAIN-SPECIFIC LANGUAGE; MODEL
AB Context Software architecture viewpoints modularize the software architectures in terms of different viewpoints that each address a different concern. Unified Modeling Language (UML) is so popular among practitioners for modeling software architectures from different viewpoints.
   Objective: In this paper, we aimed at understanding the practitioners' UML usage for the modeling of software architectures from different viewpoints.
   Method: To this end, 109 practitioners with diverse profiles have been surveyed to understand practitioners' UML usage for six different viewpoints: functional, information, concurrency, development, deployment, and operational. Each viewpoint has been considered in terms of a set of software models that can be created in that viewpoint.
   Results: The survey includes 35 questions for different viewpoint models, and the results lead to interesting findings. While the top popular viewpoints for the UML-based software architecture modeling are the functional (96%) and information (99%) viewpoints, the least popular one is the operational viewpoint that is considered by 26% of the practitioners. The top popular UML modeling tool is Enterprise Architect regardless of the viewpoints considered. Concerning the software models that can be created in each viewpoint, UML's class diagram is practitioners' top choice for the functional structure (71%), data structure (85%), concurrency structure (75%), software code structure (34%), and system installation (39%), and system support (16%) models; UML's sequence diagram is the top choice for the data lifecycle models (47%); UML's deployment diagram for the physical structure (71%), mapping between the functional and physical components (53%), and system migration (21%) models; UML's activity diagram for the data flow (65%), software build and release processes (20-22%), and system administration (36%) models; UML's component diagram for the mapping between the functional and concurrent components (35%), software module structure (47%), and system configuration (21%) models; and UML's package diagram for the software module structure (47%) models.
C1 [Ozkaya, Mert] Yeditepe Univ, Istanbul, Turkey.
   [Erata, Ferhat] Yale Univ, New Haven, CT USA.
C3 Yeditepe University; Yale University
RP Ozkaya, M (corresponding author), Yeditepe Univ, Istanbul, Turkey.
EM mozkaya@cse.yeditepe.edu.tr
RI Erata, Ferhat/IQR-9159-2023; Ozkaya, Mert/P-1420-2017
OI Erata, Ferhat/0000-0001-6305-4266; Ozkaya, Mert/0000-0002-3464-6489
CR [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   Balmelli L, 2007, J OBJECT TECHNOL, V6, P149, DOI 10.5381/jot.2007.6.6.a5
   Bauer B, 2001, INT J SOFTW ENG KNOW, V11, P207, DOI 10.1142/S0218194001000517
   Belghiat Aissam, 2016, CIT. Journal of Computing and Information Technology, V24, P149, DOI 10.20532/cit.2016.1002695
   Bendraou R, 2010, IEEE T SOFTWARE ENG, V36, P662, DOI 10.1109/TSE.2009.85
   Brisolara L, 2005, ASIA S PACIF DES AUT, P986, DOI 10.1145/1120725.1120773
   Clements P, 2003, PROC INT CONF SOFTW, P740, DOI 10.1109/ICSE.2003.1201264
   Clements P., 2002, DOCUMENTING SOFTWARE
   Conway CL, 2004, ACM SIGPLAN NOTICES, V39, P30, DOI 10.1145/998300.997169
   DeVito Z., 2011, PROC INT C HIGH PERF, P1, DOI [DOI 10.1145/2063384.2063396, 10.1145/2063384. 2063396]
   Dobing B, 2005, LECT NOTES COMPUT SC, V3770, P2, DOI 10.1007/11568346_2
   Dori Dov, 2014, 2014 World Automation Congress (WAC), P790, DOI 10.1109/WAC.2014.6936160
   Fernández-Sáez AM, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P292, DOI 10.1109/MODELS.2015.7338260
   Forward A., 2008, Proc. 2008 Int. Work. onModels Softw. Eng, P27, DOI DOI 10.1145/1370731.1370738
   Garlan D., 1994, TECHNICAL REPORT
   Garland J., 2002, LARGE SCALE SOFTWARE
   Grossman M, 2005, INFORM SOFTWARE TECH, V47, P383, DOI 10.1016/j.infsof.2004.09.005
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Lange CFJ, 2006, IEEE SOFTWARE, V23, P40, DOI 10.1109/MS.2006.50
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   Maier MW, 2001, COMPUTER, V34, P107, DOI 10.1109/2.917550
   Membarth R, 2016, IEEE T PARALL DISTR, V27, P210, DOI 10.1109/TPDS.2015.2394802
   Nugroho A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P90
   Osman H, 2012, P 2 ED INT WORKSH EX, P1
   Ozkaya M., 2018, J AERONAUTICS SPACE, V11, P119
   Ozkaya M, 2018, SOFTWARE PRACT EXPER, V48, P985, DOI 10.1002/spe.2561
   Ozkaya M, 2018, INFORM SOFTWARE TECH, V95, P15, DOI 10.1016/j.infsof.2017.10.008
   Ozkaya M, 2016, PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2016), P677
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Popping R., 2015, Bulletin of Sociological Methodology, V128, P23, DOI [10.1177/0759106315597389, DOI 10.1177/0759106315597389]
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Reggio G, 2014, LECT NOTES COMPUT SC, V8767, P149, DOI 10.1007/978-3-319-11653-2_10
   Rozanski N., 2005, SOFTWARE SYSTEMS ARC
   Rumbaugh James, 1999, The unified modeling language reference manual
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Scheaffer RL, 2011, Elementary Survey Sampling
   Selic B., 1998, Languages, Compilers, and Tools for Embedded Systems. ACM SIGPLAN Workshop LCTES'98. Proceedings, P250, DOI 10.1007/BFb0057795
   Sheng QZ, 2005, ICMB 2005: International Conference on Mobile Business, P206, DOI 10.1109/ICMB.2005.33
   SONI D, 1995, PROC INT CONF SOFTW, P196, DOI 10.1145/225014.225033
   Torchiano M, 2011, INT SYMP EMP SOFTWAR, P372, DOI 10.1109/ESEM.2011.51
   Agner LTW, 2013, J SYST SOFTWARE, V86, P997, DOI 10.1016/j.jss.2012.11.023
NR 47
TC 29
Z9 30
U1 4
U2 24
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2020
VL 121
AR 106275
DI 10.1016/j.infsof.2020.106275
PG 27
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT0NB
UT WOS:000518706200009
DA 2024-07-18
ER

PT J
AU Wang, JJ
   Li, MY
   Wang, S
   Menzies, T
   Wang, Q
AF Wang, Junjie
   Li, Mingyang
   Wang, Song
   Menzies, Tim
   Wang, Qing
TI Images don't lie: Duplicate crowdtesting reports detection with
   screenshot information
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Crowdtesting; Duplicate report; Similarity detection
ID BUG REPORT DETECTION
AB Context: Crowdtesting is effective especially when it comes to the feedback on GUI systems, or subjective opinions about features. Despite of this, we find crowdtesting reports are highly duplicated, i.e., 82% of them are duplicates of others. Most of the existing approaches mainly adopted textual information for duplicate detection, and suffered from low accuracy because of the lexical gap. Our observation on real industrial crowdtesting data found that when dealing with crowdtesting reports of GUI systems, the reports would be accompanied with images, i.e., the screenshots of the tested app. We assume the screenshot to be valuable for duplicate crowdtesting report detection because it reflects the real context of the bug and is not affected by the variety of natural languages.
   Objective: We aim at automatically detecting duplicate crowdtesting reports that could help reduce triaging effort.
   Method: In this work, we propose SETU which combines information from the ScrEenshots and the TextUal descriptions to detect duplicate crowdtesting reports. We extract four types of features to characterize the screenshots (i.e., image structure feature and image color feature) and the textual descriptions (i.e., TF-IDF feature and word embedding feature), and design a hierarchical algorithm to detect duplicates based on the four similarity scores derived from the four features respectively.
   Results: We investigate the effectiveness of SETU on 12 projects with 3,689 reports from one of the Chinese largest crowdtesting platforms. Results show that recall@1 achieved by SETU is 0.44 to 0.79, recall@5 is 0.66 to 0.92, and MAP is 0.21 to 0.58 across all experimental projects. Furthermore, SETU can outperform existing state-of-the-art approaches significantly and substantially.
   Conclusion: Through combining the screenshots and textual descriptions, our proposed SETU can improve the duplicate crowdtesting reports detection performance.
C1 [Wang, Junjie; Li, Mingyang; Wang, Qing] Chinese Acad Sci, Lab Internet Software Technol, Inst Software, Beijing, Peoples R China.
   [Wang, Junjie; Wang, Qing] Chinese Acad Sci, State Key Lab Comp Sci, Inst Software, Beijing, Peoples R China.
   [Wang, Junjie; Li, Mingyang; Wang, Qing] Univ Chinese Acad Sci, Beijing, Peoples R China.
   [Wang, Song] Univ Waterloo, Elect & Comp Engn, Waterloo, ON, Canada.
   [Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 Chinese Academy of Sciences; Institute of Software, CAS; Chinese Academy
   of Sciences; Institute of Software, CAS; Chinese Academy of Sciences;
   University of Chinese Academy of Sciences, CAS; University of Waterloo;
   North Carolina State University
RP Wang, Q (corresponding author), Chinese Acad Sci, Lab Internet Software Technol, Inst Software, Beijing, Peoples R China.
EM wangjunjie@itechs.iscas.ac.cn; limingyang@itechs.iscas.ac.cn;
   song.wang@uwaterloo.ca; tim@menzies.us; wq@itechs.iscas.ac.cn
RI wang, qi/ITT-9652-2023; Menzies, Tim/X-7680-2019
OI Menzies, Tim/0000-0002-5040-3196; wang, jun jie/0000-0002-9941-6713
FU National Key Research and Development Program of China [2018YFB1401000];
   National Natural Science Foundation of China [61602450, 6143200]; China
   Scholarship Council
FX This work is supported by the National Key Research and Development
   Program of China under grant No. 2018YFB1401000, National Natural
   Science Foundation of China under grant No. 61602450, No. 6143200, and
   China Scholarship Council. We would like to thank the testers in Baidu
   for their great efforts in supporting this work.
CR Alipour A, 2013, IEEE WORK CONF MIN S, P183, DOI 10.1109/MSR.2013.6624026
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2012, Proceedings of_the_21st_ACM_international_conference_on_Information_and_knowledge management
   Bairi RB, 2016, CIKM'16: PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P791, DOI 10.1145/2983323.2983811
   Banerjee S., 2012, 2012 IEEE 14th International Symposium on High-Assurance Systems Engineering (HASE 2012), P74, DOI 10.1109/HASE.2012.38
   Banerjee S, 2013, PROC INT SYMP SOFTW, P208, DOI 10.1109/ISSRE.2013.6698920
   Bengio Y, 2003, J MACH LEARN RES, V3, P1137, DOI 10.1162/153244303322533223
   Berson Alex, 2004, Building Data Mining Application for CRM
   Chen N, 2012, IEEE INT CONF AUTOM, P140, DOI 10.1145/2351676.2351697
   Chen X, 2015, PROC CVPR IEEE, P2422, DOI 10.1109/CVPR.2015.7298856
   Cliff N., 2014, ORDINAL METHODS BEHA
   Cui Q, 2017, P INT COMP SOFTW APP, P75, DOI 10.1109/COMPSAC.2017.265
   Cui Qiang, 2017, PROC 29 INT C SOFTW, V17, P1
   Feng Y, 2016, IEEE INT CONF AUTOM, P202, DOI 10.1145/2970276.2970367
   Feng Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P225, DOI 10.1145/2786805.2786862
   Gao Ruizhi, 2018, EMPIR SOFTW ENG, V24, P1
   Gómez M, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P88, DOI [10.1109/MobileSoft.2016.033, 10.1145/2897073.2897088]
   Gomide VHM., 2014, INT J COMPUTER SCI I, V5, P575
   Hindle A, 2016, EMPIR SOFTW ENG, V21, P368, DOI 10.1007/s10664-015-9387-3
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Jiang H., 2018, TOIT 2018
   Liu D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P492, DOI 10.1109/SANER.2018.8330246
   Manjunath BS, 2001, IEEE T CIRC SYST VID, V11, P703, DOI 10.1109/76.927424
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Musson R, 2013, IEEE SOFTWARE, V30, P38, DOI 10.1109/MS.2013.67
   Oliva A, 2001, INT J COMPUT VISION, V42, P145, DOI 10.1023/A:1011139631724
   Prifti T., 2011, P 7 INT C PRED MOD S, V8, P1
   Rocha H, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P46, DOI 10.1109/SANER.2016.87
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Sureka A, 2010, ASIA PAC SOFWR ENG, P366, DOI 10.1109/APSEC.2010.49
   Tang J, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1105, DOI 10.1145/3097983.3098166
   Tian Y, 2012, EUR CON SFTWR MTNCE, P385, DOI 10.1109/CSMR.2012.48
   Vinyals O, 2017, IEEE T PATTERN ANAL, V39, P652, DOI 10.1109/TPAMI.2016.2587640
   Wang J., 2016, ESEM 16
   Wang JJ, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P83, DOI 10.1109/ICSE-SEIP.2017.8
   Wang JJ, 2016, IEEE INT CONF AUTOM, P190, DOI 10.1145/2970276.2970300
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Witten I. H., 2005, DATA MINING PRACTICA
   Xie M, 2017, PROC INT SYMP SOFTW, P316, DOI 10.1109/ISSRE.2017.25
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Yang XL, 2016, PROC INT SYMP SOFTW, P127, DOI 10.1109/ISSRE.2016.33
   Zhang X, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P752, DOI 10.1145/2889160.2892659
NR 44
TC 36
Z9 41
U1 0
U2 17
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2019
VL 110
BP 139
EP 155
DI 10.1016/j.infsof.2019.03.003
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HU1RI
UT WOS:000465049100011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mohammadi, S
   Izadkhah, H
AF Mohammadi, Sina
   Izadkhah, Habib
TI A new algorithm for software clustering considering the knowledge of
   dependency between artifacts in the source code
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software maintenance; Clustering algorithms; Software architecture;
   Software comprehension; Software evolution
ID MODULARIZATION
AB Context Software systems evolve over time to meet the new requirements of users. These new requirements, usually, are not reflected in the original documents of these software systems. Therefore, the new version of a software system deviates from the original and documented architecture. This way, it will be more difficult to understand it after a while and it will be difficult to make new changes conveniently. Clustering techniques are used to extract the architecture of a software system in order to understand it. An artifact dependency graph (ADG) is often used for clustering, which is extracted from a source code. In the literature, some hierarchical and search-based clustering methods have been presented to extract the software architecture. Hierarchical algorithms have reasonable search time; however, they are not able to find a good architecture. In contrast, search-based algorithms are often better in this regard; however, their time and space limitations make them useless in practice for large-scale software systems. Both hierarchical and search-based clustering methods overlook the existing knowledge in an ADG for clustering.
   Objective: To overcome the limitations of the existing clustering methods, this paper presents a new deterministic clustering algorithm named Neighborhood tree algorithm.
   Method: The new algorithm creates a neighborhood tree using available knowledge in an ADG and uses this tree for clustering.
   Results: Our initial results indicate that the algorithm is better able to extract an acceptable architecture in a reasonable time, compared with hierarchical and search-based algorithms.
   Conclusions: The proposed clustering algorithm is expected to greatly assist software engineers in extracting meaningful and understandable subsystems from a source code.
C1 [Mohammadi, Sina; Izadkhah, Habib] Univ Tabriz, Fac Math Sci, Dept Comp Sci, Tabriz, Iran.
C3 University of Tabriz
RP Izadkhah, H (corresponding author), Univ Tabriz, Fac Math Sci, Dept Comp Sci, Tabriz, Iran.
EM izadkhah@tabrizu.ac.ir
RI Izadkhah, Habib/X-9462-2019
CR Amarjeet, 2017, COMPUT LANG SYST STR, V47, P153, DOI 10.1016/j.cl.2016.09.003
   Beck F, 2013, EMPIR SOFTW ENG, V18, P970, DOI 10.1007/s10664-012-9225-9
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Garcia J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P901, DOI 10.1109/ICSE.2013.6606639
   Huang JH, 2016, INFORM SCIENCES, V342, P96, DOI 10.1016/j.ins.2016.01.030
   Isazadeh A., 2017, Source code modularization: theory and techniques
   Maqbool O., 2007, IEEE T SOFTW ENG, V33
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Parsa S, 2005, J RES PRACT INF TECH, V37, P127
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Wen Z, 2004, PROG COMPREHEN, P194, DOI 10.1109/WPC.2004.1311061
NR 11
TC 23
Z9 24
U1 0
U2 9
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2019
VL 105
BP 252
EP 256
DI 10.1016/j.infsof.2018.09.001
PG 5
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HD5RF
UT WOS:000452586900014
DA 2024-07-18
ER

PT J
AU Ma, LH
   Wu, P
   Chen, TY
AF Ma, Linhai
   Wu, Peng
   Chen, Tsong Yueh
TI Diversity driven adaptive test generation for concurrent data structures
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Concurrent data structures; Test case diversity; Test case generation;
   Active testing; Adaptive random testing
ID LINEARIZABILITY
AB Context Testing concurrent data structures remains a notoriously challenging task, due to the nondeterminism of multi-threaded tests and the exponential explosion on the number of thread schedules.
   Objective: We propose an automated approach to generate a series of concurrent test cases in an adaptive manner, i.e., the next test cases are generated with the guarantee to discover the thread schedules that have not yet been activated by the previous test cases.
   Method Two diversity metrics are presented to induce such adaptive test cases from a static and a dynamic perspective, respectively. The static metric enforces the diversity in the program structures of the test cases; while the dynamic one enforces the diversity in their capabilities of exposing untested thread schedules. We implement three adaptive test generation approaches for C/C + + concurrent data structures, based on the stateof-the-art active testing engine Maple.
   Results: We then report an empirical study with 9 real-world C/C + + concurrent data structures, which demonstrates the efficiency of our test generation approaches in terms of the number of thread schedules discovered, as well as the time and the number of tests required for testing a concurrent data structure.
   Conclusion: Hence, by using diverse test cases derived from the static and dynamic perspectives, our adaptive test generation approaches can deliver a more efficient coverage of the thread schedules of the concurrent data structure under test.
C1 [Ma, Linhai; Wu, Peng] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
   [Ma, Linhai; Wu, Peng] Univ Chinese Acad Sci, Beijing, Peoples R China.
   [Chen, Tsong Yueh] Swinburne Univ Technol, Dept Comp Sci & Software Engn, Hawthorn, Vic, Australia.
   [Ma, Linhai] Univ Miami, Dept Comp Sci, Coral Gables, FL 33124 USA.
C3 Chinese Academy of Sciences; Institute of Software, CAS; Chinese Academy
   of Sciences; University of Chinese Academy of Sciences, CAS; Swinburne
   University of Technology; University of Miami
RP Wu, P (corresponding author), Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
EM l.ma@miami.edu; wp@ios.ac.cn; tychen@swin.edu.au
RI WU, Peng/B-7650-2008
OI Chen, Tsong/0000-0003-3578-0994; wu, peng/0000-0002-4931-0566
FU National Key Basic Research Program of China [2014CB340701]; National
   Key Research and Development Program of China [2017YFB0801900];
   CAS-INRIA Joint Research Program [GJHZ1844]; National Natural Science
   Foundation of China [61100069]
FX We thank the anonymous referees for their valuable comments. This work
   is partially supported by the National Key Basic Research Program of
   China under the Grant No. 2014CB340701, the National Key Research and
   Development Program of China under the Grant No. 2017YFB0801900, the
   CAS-INRIA Joint Research Program under the Grant No. GJHZ1844 and the
   National Natural Science Foundation of China under the Grant No.
   61100069.
CR Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 2011, ART MULTIPROCESSOR P
   [Anonymous], 2013, Shared-Memory Synchronization
   [Anonymous], 1996, LNCS, DOI DOI 10.1007/3-540-60761-7
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Barus AC, 2016, IEEE T COMPUT, V65, P3509, DOI 10.1109/TC.2016.2547380
   Burckhardt S, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P167
   Chen J., 2016, IEEE T RELIAB, V66, P373
   Chen TY, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-015-5314-x
   Chen TY, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363107
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   CHEN TY, 1994, IEEE T SOFTWARE ENG, V20, P977, DOI 10.1109/32.368132
   Choudhary A, 2017, PROC INT CONF SOFTW, P266, DOI 10.1109/ICSE.2017.32
   Edelstein O, 2002, IBM SYST J, V41, P111, DOI 10.1147/sj.411.0111
   Fiedor J, 2015, SOFTW TEST VERIF REL, V25, P272, DOI 10.1002/stvr.1546
   Flanagan C, 2005, ACM SIGPLAN NOTICES, V40, P110, DOI 10.1145/1047659.1040315
   Gibbons PB, 1997, SIAM J COMPUT, V26, P1208, DOI 10.1137/S0097539794279614
   Godefroid P., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P174, DOI 10.1145/263699.263717
   Heller S., 2005, LNCS, P3, DOI [10.1007/11795490_, DOI 10.1007/11795490]
   Hendler Danny, 2004, SPAA 2004, P206, DOI [10.1145/1007912.1007944, DOI 10.1145/1007912.1007944]
   Herlihy M, 2007, LECT NOTES COMPUT SC, V4474, P124
   HERLIHY MP, 1990, ACM T PROGR LANG SYS, V12, P463, DOI 10.1145/78969.78972
   Hong S., 2012, ADV MATER SCI ENG, V2012, P12
   Krena B., 2012, RV, P177, DOI DOI 10.1007/978-3-642-29860-8
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Luk C.-K., 2018, INFORM SOFTWARE TECH, V103, P162
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Michael M. M., 1996, Proceedings of the Fifteenth Annual ACM Symposium on Principles of Distributed Computing, P267, DOI 10.1145/248052.248106
   Musuvathi M., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, P267
   Musuvathi M, 2007, LECT NOTES COMPUT SC, V4407, P15, DOI 10.1007/978-3-540-71410-1_2
   Navarro G, 2001, ACM COMPUT SURV, V33, P31, DOI 10.1145/375360.375365
   Peierls T., 2005, JAVA CONCURRENCY PRA
   Popovic M, 2010, INFORM SOFTWARE TECH, V52, P697, DOI 10.1016/j.infsof.2010.03.001
   Pradel M, 2012, ACM SIGPLAN NOTICES, V47, P521, DOI 10.1145/2345156.2254126
   Sen K, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P11, DOI 10.1145/1375581.1375584
   WAGNER RA, 1974, J ACM, V21, P168, DOI 10.1145/321796.321811
   Yu JJ, 2012, PROCEEDINGS OF THE ASME TURBO EXPO 2012, VOL 7, PTS A AND B, P485, DOI 10.1145/2398857.2384651
   Yue H, 2015, ASIA PAC SOFWR ENG, P246, DOI 10.1109/APSEC.2015.34
   Zhang W, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P179
   Zhang ZY, 2017, INT J SOFTW ENG KNOW, V27, P1483, DOI 10.1142/S0218194017400071
NR 42
TC 5
Z9 7
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2018
VL 103
BP 162
EP 173
DI 10.1016/j.infsof.2018.07.001
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GU9ZY
UT WOS:000445717000012
DA 2024-07-18
ER

PT J
AU Freire, A
   Perkusich, M
   Saraiva, R
   Almeida, H
   Perkusich, A
AF Freire, Arthur
   Perkusich, Mirko
   Saraiva, Renata
   Almeida, Hyggo
   Perkusich, Angelo
TI A Bayesian networks-based approach to assess and improve the teamwork
   quality of agile teams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Teamwork; Agile teams; Bayesian network; Assessment; Measurement;
   Improvement
ID CRITICAL SUCCESS FACTORS; SOFTWARE-DEVELOPMENT; PROJECTS; PEOPLE; MODEL
AB CONTEXT: According to the agile principles and values, as well as recent research articles, teamwork factors are critical to achieve success in agile projects. However, teamwork does not automatically arise. There are some existing instruments with the purpose of assessing the teamwork quality based on Structural Equation Modeling (i.e., empirically derived) and Radar Plots, but they may not be useful in a concrete situation because these techniques are not advised for prediction and diagnosis purposes. OBJECTIVE: Analytically derive a Bayesian network model based on a literature review and a practitioner's knowledge; and to assess its practical utility through a case study. METHOD: To build the model, we executed a top-down approach using data collected through a literature review and a domain practitioner. We assessed the model with a case study executed in three Scrum teams. RESULTS: Given the context of the case study, the model assists agile teams on assessing teamwork quality and identifying improvement opportunities, is easy to learn, and the cost-benefit for using it with the proposed procedure is positive. CONCLUSION: We concluded that we achieved promising results with the presented solution. However, it needs more evaluation and validation to generalize the obtained results.
C1 [Freire, Arthur; Saraiva, Renata; Almeida, Hyggo] Univ Fed Campina Grande, Dept Comp & Syst, Campina Grande, PB, Brazil.
   [Perkusich, Mirko] Fed Inst Paraiba, Monteiro, PB, Brazil.
   [Perkusich, Angelo] Univ Fed Campina Grande, Dept Elect Engn, Campina Grande, PB, Brazil.
C3 Universidade Federal de Campina Grande; Instituto Federal da Paraiba
   (IFPB); Universidade Federal de Campina Grande
RP Freire, A (corresponding author), Univ Fed Campina Grande, Dept Comp & Syst, Campina Grande, PB, Brazil.
EM arthurfreire@copin.ufcg.edu.br; mirko.perkusich@ifpb.edu.br;
   renatams@copin.ufcg.edu.br; hyggo@dsc.ufcg.edu.br;
   perkusic@dee.ufcg.edu.br
RI Perkusich, Angelo/I-2447-2013; de Almeida, Hyggo Oliveira/H-8167-2013;
   Perkusich, Angelo/O-1203-2018; Perkusich, Mirko/HKN-2606-2023
OI Perkusich, Angelo/0000-0002-7377-1258; Almeida,
   Hyggo/0000-0002-2808-8169
CR Aaen I., 2001, Scandinavian Journal of Information Systems, V13, P123
   Amengual E., 2009, SOFTWARE PROCESS IMP, P106
   Amengual E, 2010, COMM COM INF SC, V99, P37
   Amengual-Alcover Esperanca, 2009, UPGRADE: The European Journal for the Informatics Professional, V10, P26
   Anderson RD, 2004, EUR J OPER RES, V156, P92, DOI 10.1016/S0377-2217(02)00904-9
   [Anonymous], TETRAD
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], 1995, HDB BRAIN THEORY NEU
   Bai CG, 2005, J SYST SOFTWARE, V77, P103, DOI 10.1016/j.jss.2004.11.034
   Beck K., 2011, MANIFESTO AGILE SOFT
   Ben-Gal I., 2008, Bayesian Networks, DOI DOI 10.1002/9780470061572.EQR089
   Boehm B., 2003, BALANCING AGILITY DI
   Bustamante S.R., 2011, AGILE
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Fenton NE, 2007, IEEE T KNOWL DATA EN, V19, P1420, DOI 10.1109/TKDE.2007.1068
   Fontana RM, 2014, J SYST SOFTWARE, V97, P140, DOI 10.1016/j.jss.2014.07.030
   Freire AS, 2015, 2015 29TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P191, DOI 10.1109/SBES.2015.29
   Friedman N, 1997, MACH LEARN, V29, P131, DOI 10.1023/A:1007465528199
   Gandomani TJ, 2015, J SYST SOFTWARE, V107, P204, DOI 10.1016/j.jss.2015.06.006
   Gupta S., 2007, BAYESIAN NETWORK TEC, P103
   Gurram C., 2013, THESIS
   Haraldsen L.M.R., 2012, THESIS
   Hearty P, 2009, IEEE T SOFTWARE ENG, V35, P124, DOI 10.1109/TSE.2008.76
   Hoegl M, 2001, ORGAN SCI, V12, P435, DOI 10.1287/orsc.12.4.435.10635
   Johansson AI, 2013, THESIS
   Katzenbach J.R. Smith., 1993, The wisdom of teams: Creating the high-performance organization
   KOZAK Y., 2013, THESIS
   Kumar M.P., 2014, SIMPLE WAY MEASURE P
   Lalsing V., 2012, INT J SOFTWARE ENG A, V3, P117
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Lindsjorn Y, 2016, J SYST SOFTWARE, V122, P274, DOI 10.1016/j.jss.2016.09.028
   Melo C., 2011, Proceedings of the 2011 Agile Conference, P57, DOI 10.1109/AGILE.2011.35
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Moe NB, 2009, LECT NOTES BUS INF P, V31, P114
   Molokken-Ostvold K, 2008, J SYST SOFTWARE, V81, P2106, DOI 10.1016/j.jss.2008.03.058
   MULLEN B, 1994, PSYCHOL BULL, V115, P210, DOI 10.1037/0033-2909.115.2.210
   Perkusich M, 2015, EXPERT SYST APPL, V42, P437, DOI 10.1016/j.eswa.2014.08.015
   Perkusich Mirko., 2013, SAC'13: Proceedings of the 28th Annual ACM Symposium on Applied Computing, page, P1037
   Qumer A, 2008, J SYST SOFTWARE, V81, P1899, DOI 10.1016/j.jss.2007.12.806
   Ringstad M.A., 2011, P 18 EUR C EUROSPI 2, P167, DOI [10.1007/978-3-642-22206-1_15, DOI 10.1007/978-3-642-22206-1_15]
   Rodríguez A, 2016, EXPERT SYST APPL, V45, P273, DOI 10.1016/j.eswa.2015.09.056
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Salas E, 2005, SMALL GR RES, V36, P555, DOI 10.1177/1046496405277134
   Salo O., 2007, Software Process Improvement and Practice, V12, P81, DOI 10.1002/spip.305
   Schmidt C. T., 2014, P ICIS AISEL ATL GA
   Schulz T, 2013, EMPIR SOFTW ENG, V18, P435, DOI 10.1007/s10664-011-9175-7
   Stankovic D, 2013, J SYST SOFTWARE, V86, P1663, DOI 10.1016/j.jss.2013.02.027
   Stray V, 2016, J SYST SOFTWARE, V114, P101, DOI 10.1016/j.jss.2016.01.004
   Stray VG, 2011, LECT NOTES BUS INF P, V77, P146
   Taylor SJ., 1984, INTRO QUALITATIVE RE
   Tjornehoj G., 2012, INF SYST RES SEM SCA
   Verbert K, 2017, ENG APPL ARTIF INTEL, V60, P136, DOI 10.1016/j.engappai.2017.01.011
   Weimar E., 2013, P 17 INT C EVALUATIO, P212, DOI [DOI 10.1145/2460999.2461030, 10.1145/2460999.2461030]
   Whitworth E, 2007, AGILE 2007, PROCEEDINGS, P26, DOI 10.1109/AGILE.2007.60
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   Williams L., 2010, Proceedings of the 2010 Agile Conference (AGILE 2010), P3, DOI 10.1109/AGILE.2010.12
   Wood S, 2013, INFORM SOFTWARE TECH, V55, P660, DOI 10.1016/j.infsof.2012.10.002
NR 58
TC 16
Z9 19
U1 1
U2 26
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2018
VL 100
BP 119
EP 132
DI 10.1016/j.infsof.2018.04.004
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GJ1VN
UT WOS:000435056100008
DA 2024-07-18
ER

PT J
AU Xiao, Y
   Keung, J
   Bennin, KE
   Mi, Q
AF Xiao, Yan
   Keung, Jacky
   Bennin, Kwabena E.
   Mi, Qing
TI Machine translation-based bug localization technique for bridging
   lexical gap
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bug localization; Deep learning; Machine translation; Lexical mismatch
AB Context: The challenge of locating bugs in mostly large-scale software systems has led to the development of bug localization techniques. However, the lexical mismatch between bug reports and source codes degrades the performances of existing information retrieval or machine learning-based approaches.
   Objective: To bridge the lexical gap and improve the effectiveness of localizing buggy files by leveraging the extracted semantic information from bug reports and source code.
   Method: We present BugTranslator, a novel deep learning-based machine translation technique composed of an attention-based recurrent neural network (RNN) Encoder-Decoder with long short-term memory cells. One RNN encodes bug reports into several context vectors that are decoded by another RNN into code tokens of buggy files. The technique studies and adopts the relevance between the extracted semantic information from bug reports and source files.
   Results: The experimental results show that BugTranslator outperforms a current state-of-the-art word embedding technique on three open-source projects with higher MAP and MRR. The results show that BugTranslator can rank actual buggy files at the second or third places on average.
   Conclusion: BugTranslator distinguishes bug reports and source code into different symbolic classes and then extracts deep semantic similarity and relevance between bug reports and the corresponding buggy files to bridge the lexical gap at its source, thereby further improving the performance of bug localization.
C1 [Xiao, Yan; Keung, Jacky; Bennin, Kwabena E.; Mi, Qing] City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
C3 City University of Hong Kong
RP Xiao, Y (corresponding author), City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
EM yaruciao6-c@my.cityu.edu.hk; Jacky.Keung@cityu.edu.hk;
   kebennin2-c@my.cityu.edu.hk; Qing.Mi@my.cityu.edu.hk
RI Keung, Jacky/X-4693-2019; Keung, Jacky/ABA-7089-2020; Mi,
   Qing/GQI-1620-2022
OI Keung, Jacky/0000-0002-3803-9600; Mi, Qing/0000-0001-5063-3189; XIAO,
   Yan/0000-0002-2563-083X; Bennin, Kwabena/0000-0001-9140-9271
FU General Research Fund of the Research Grants Council of Hong Kong
   [11208017]; research funds of City University of Hong Kong [7004683]
FX This work is supported in part by the General Research Fund of the
   Research Grants Council of Hong Kong [No. 11208017], and the research
   funds of City University of Hong Kong [No. 7004683].
CR [Anonymous], P 25 INT C PROGR COM
   [Anonymous], 2014, INT C MACH LEARN ICM
   [Anonymous], P 2016 24 ACM SIGSOF
   [Anonymous], 2014, INT C LEARN REPR
   [Anonymous], PROC INT CONF SOFTW
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Li M, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P661, DOI 10.1145/2623330.2623612
   Sutskever I, 2014, ADV NEUR IN, V27
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 10
TC 23
Z9 28
U1 1
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2018
VL 99
BP 58
EP 61
DI 10.1016/j.infsof.2018.03.003
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GG5XA
UT WOS:000432767900005
DA 2024-07-18
ER

PT J
AU Teruel, MA
   Condori-Fernandez, N
   Navarro, E
   González, P
   Lago, P
AF Teruel, Miguel A.
   Condori-Fernandez, Nelly
   Navarro, Elena
   Gonzalez, Pascual
   Lago, Patricia
TI Assessing the impact of the awareness level on a co-operative game
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Co-operative game; Awareness; Gamespace Awareness; Face analysis
ID TOOL; SUPPORT
AB Context: When playing a co-operative game, being aware of your collaborators (where they are playing, what they are doing, the abilities they have, etc.) is essential for achieving the game's goals. This led to the definition of Gamespace Awareness in order to guide in the identification of the awareness needs in the form of a compilation of the awareness elements that a co-operative game should feature.
   Objective: Gamespace Awareness does not establish how much awareness information players must be provided with. This constitutes the main motivation for this work: to assess the impact of different levels of Gamespace Awareness elements on a co-operative game.
   Method: A multiplayer action game was developed that supports three different awareness configurations, each one featuring different awareness levels (high, medium and low). The impact of these awareness levels was measured as regards game score, time, players' happiness while playing, enjoyment and perceived usefulness. Several techniques such as subjective surveys and facial expression analysis were used to measure these factors.
   Results: The analysis of the results shows that the higher the awareness, the better the game score. However, the highest level of player happiness was not achieved with the most awareness-enabled configuration; we found that the players' enjoyment depends not only on their awareness level but also on their expertise level. Finally, the awareness elements related to the present and the future were the most useful, as could be expected in a multiplayer action game.
   Conclusions: The results showed that the medium level awareness obtained the best results. We therefore concluded that a certain level of awareness is necessary, but that excessive awareness could negatively affect the game experience.
C1 [Teruel, Miguel A.; Navarro, Elena; Gonzalez, Pascual] Univ Castilla La Mancha, Comp Syst Dept, LoU1SE Res Grp, Avda Espana S-N, Albacete 02071, Spain.
   [Condori-Fernandez, Nelly] Univ A Coruna, Dept Comp Sci, LBD Res Grp, Campus Elvina S-N, La Coruna 15071, Spain.
   [Condori-Fernandez, Nelly; Lago, Patricia] Vrije Univ Amsterdam, Dept Comp Sci, Software & Serv Res Grp, De Boelelaan 1081A, NL-1081 HV Amsterdam, Netherlands.
C3 Universidad de Castilla-La Mancha; Universidade da Coruna; Vrije
   Universiteit Amsterdam
RP Navarro, E (corresponding author), Univ Castilla La Mancha, Comp Syst Dept, LoU1SE Res Grp, Avda Espana S-N, Albacete 02071, Spain.
EM miguel@dsi.uclm.es; n.condori.fernandez@udc.es; Elena.Navarro@uclm.es;
   Pascual.Gonzalez@uclm.es; p.lago@vu.nl
RI Lago, Patricia/ABH-2308-2020; Navarro, Elena/I-7452-2013; González,
   Pascual/E-3693-2016; Martínez, Miguel Ángel Teruel/AAD-2356-2020
OI Lago, Patricia/0000-0002-2234-0845; Navarro, Elena/0000-0001-9496-6890;
   González, Pascual/0000-0003-3549-5712; Martínez, Miguel Ángel
   Teruel/0000-0003-0102-6918; Condori Fernandez, Nelly/0000-0002-1044-3871
FU Spanish Ministry of Economy and Competitiveness; EU FEDER funds
   [TIN2016-79100-R, TIN2015-72931-EXP]; Spanish Ministry of Education,
   Culture and Sports; FPU scholarship [AP2010-0259]
FX This research was funded by the Spanish Ministry of Economy and
   Competitiveness and by EU FEDER funds under project grants
   TIN2016-79100-R and TIN2015-72931-EXP. It was also funded by the Spanish
   Ministry of Education, Culture and Sports, with an FPU scholarship
   (AP2010-0259). We would like to thank Mojca Lovrencak and Marco Otte
   from VU, Roberto Valenti from Sightcorp, Jose Gomez de Lara and Manuel
   Gonzalez from Radical Graphics and Miguel Oliver from UCLM for their
   priceless support, as well as the volunteer participants for their
   contribution to the pilot and experiment.
CR Abdi H., 2010, Encycl Res Des
   Activision Publishing Inc, 2017, KILLCAM CALL DUT WIK
   Ampatzoglou A, 2010, INFORM SOFTWARE TECH, V52, P888, DOI 10.1016/j.infsof.2010.05.004
   [Anonymous], 2006, Proceedings of the 2006 20th anniversary conference on Computer supported cooperative work, DOI DOI 10.1145/1180875.1180898
   [Anonymous], 2006, Introduction to Probability
   [Anonymous], 1992, COMPUT SUPP COOP W J, DOI DOI 10.1007/BF00752449
   [Anonymous], 2015, ESS FACTS COMP VID G
   [Anonymous], 2004, Patterns in game design (game development series)
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   Bernhaupt R, 2015, HUM-COMPUT INT-SPRIN, P1, DOI 10.1007/978-3-319-15985-0_1
   Bevan N, 2015, LECT NOTES COMPUT SC, V9169, P143, DOI 10.1007/978-3-319-20901-2_13
   Beznosyk A., 2012, P 10 AS PAC C COMP H, P11, DOI [10.1145/2350046.2350051, DOI 10.1145/2350046.2350051]
   Bosse T, 2014, 2014 IEEE/WIC/ACM INTERNATIONAL JOINT CONFERENCES ON WEB INTELLIGENCE (WI) AND INTELLIGENT AGENT TECHNOLOGIES (IAT), VOL 3, P40, DOI 10.1109/WI-IAT.2014.148
   Brewer J, 2008, INT J HUM-COMPUT ST, V66, P963, DOI 10.1016/j.ijhcs.2008.03.003
   Brooke J, 1996, USABILITY EVALUATION, V189, P4
   Calderón A, 2015, COMPUT EDUC, V87, P396, DOI 10.1016/j.compedu.2015.07.011
   Caroux L, 2015, COMPUT HUM BEHAV, V48, P366, DOI 10.1016/j.chb.2015.01.066
   Chanel G, 2012, INTERACT COMPUT, V24, P306, DOI 10.1016/j.intcom.2012.04.012
   CHARISIS V, 2015, EMOACTIVITY EEG BASE, V9178, P29, DOI DOI 10.1007/978-3-319-20687-5_4
   Cockburn A, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2659796
   Collazos C. A., 2002, Proceedings of the IASTED International Conference Information and Knowledge Sharing, P13
   Collazos CA, 2007, LECT NOTES COMPUT SC, V4715, P56, DOI 10.1007/978-3-540-74812-0_5
   Csikszentmihalyi M., 1975, Beyond boredom and anxiety, DOI DOI 10.1037/10516-164
   Cusveller J, 2014, LECT NOTES COMPUT SC, V8395, P165, DOI 10.1007/978-3-319-05972-3_17
   Day W., 1998, OFFICIAL VIDEO GAME
   de Man J, 2014, LECT NOTES COMPUT SC, V8511, P729, DOI 10.1007/978-3-319-07230-2_69
   Desurvire H, 2009, LECT NOTES COMPUT SC, V5621, P557, DOI 10.1007/978-3-642-02774-1_60
   Deterding S., 2011, P C HUM FACT CHI 11, P2425, DOI [10.1145/1979742.1979575, DOI 10.1145/1979742.1979575, 10.1145/ 1979742.1979575]
   Dix A., 2000, ACM Transactions on Computer-Human Interaction, V7, P285, DOI 10.1145/355324.355325
   Djaouti Damien., 2011, HDB RES IMPROVING LE, P118
   Dourish Paul, 2006, P ACM C COMP SUPP CO, P299, DOI DOI 10.1145/1180875.1180921
   El-Nasr MS, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P253
   ENDSLEY MR, 1995, HUM FACTORS, V37, P32, DOI 10.1518/001872095779049543
   Ewalt D., 2015, FORBES
   Fabricatore C, 2002, HUM-COMPUT INTERACT, V17, P311, DOI 10.1207/S15327051HCI1704_1
   Farris P.W., 2010, Marketing Metrics: The Definitive Guide to Measuring Marketing Performance
   Field A, 2018, Discovering Statistics Using IBM SPSS Statistics, Vfifth
   Fuchslocher A., 2011, IEEE 1 INT C SER GAM, P1, DOI [10.1109/SeGAH.2011.6165463, DOI 10.1109/SEGAH.2011.6165463]
   García-Sánchez M, 2017, LECT NOTES COMPUT SC, V10586, P731, DOI 10.1007/978-3-319-67585-5_71
   Gutwin C., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P411, DOI 10.1023/A:1021271517844
   Hamari J, 2014, P ANN HICSS, P3025, DOI 10.1109/HICSS.2014.377
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Heni N, 2015, CAN CON EL COMP EN, P1243, DOI 10.1109/CCECE.2015.7129456
   Herzig P., 2012, Multikonferenz Wirtschaftsinformatik MKWI, P793
   ISO/DIS, 2015, 924111 ISODIS
   Johansen R., 1991, LEADING BUSINESS TEA
   Joho H., 2009, Proceedings of the ACM international conference on image and video retrieval, page, P31
   Kent S., 2001, ULTIMATE HIST VIDEO
   Khanal P, 2014, J BIOMED INFORM, V51, P49, DOI 10.1016/j.jbi.2014.04.005
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Luckey P., 2014, USD701206 Sl, Patent No. 701206
   Mekler ED, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P927, DOI 10.1145/2556288.2557078
   Menard M., 2014, GAME DEV UNITY UPDAT
   Nova N, 2007, MULTIMED TOOLS APPL, V32, P161, DOI 10.1007/s11042-006-0065-8
   Oculus, 2020, OCULUS RIFT
   Ogata H, 1996, INFORMATION INTELLIGENCE AND SYSTEMS, VOLS 1-4, P601, DOI 10.1109/ICSMC.1996.569860
   Paavilainen J., 2010, P INT ACAD C FUTURE, P56, DOI DOI 10.1145/1920778.1920787
   PINELLE D, 2008, SIGCHI C HUM FACT CO, P1453, DOI DOI 10.1145/1357054.1357282
   Polancic G, 2015, EMPIR SOFTW ENG, V20, P142, DOI 10.1007/s10664-013-9280-x
   Reuter C., 2014, DIGRA
   Rocha Jose Bernardo, 2008, GAME MECH COOPERATIV
   Rollings a., 2003, Game Architecture and Design
   Salah AA, 2011, COMPUTER ANALYSIS OF HUMAN BEHAVIOR, P1, DOI 10.1007/978-0-85729-994-9
   Scacchi Walt, 2010, First Monday, V15, DOI 10.5210/fm.v15i5.2965
   Schilit B., 1994, 1994 1 WORKSHOP MOBI, P85, DOI [DOI 10.1109/WMCSA.1994.16, 10.1109/WMCSA.1994.16]
   Southey F., 2005, P 1 AAAI C ART INT I, P123
   Teruel MA, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1858
   Teruel MA, 2016, INFORM SOFTWARE TECH, V74, P17, DOI 10.1016/j.infsof.2016.01.009
   Teruel MA, 2015, LECT NOTES COMPUT SC, V9107, P469, DOI 10.1007/978-3-319-18914-7_49
   Teruel MA, 2014, INFORM SOFTWARE TECH, V56, P922, DOI 10.1016/j.infsof.2014.02.009
   Teruel MA, 2012, INFORM SOFTWARE TECH, V54, P1215, DOI 10.1016/j.infsof.2012.06.001
   Toups ZacharyO., 2014, P 1 ACM SIGCHI ANN S, P257
   Tran MH, 2006, INFORM SOFTWARE TECH, V48, P1006, DOI 10.1016/j.infsof.2005.12.009
   Unity Technologies, 2015, TANKS TUT
   Unity Technologies, 2015, MULT NETW
   Vaddi Deepika., 2016, Proceedings of the 42Nd Graphics Interface Conference, GI'16, P41, DOI DOI 10.20380/GI2016.06
   Vaddi Deepika, 2015, P 2015 ANN S COMP HU, P721
   Valenti R, 2008, COGN TECHNOL, P159, DOI 10.1007/978-3-540-75171-7_7
   Vallejo V, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0175999
   von Wangenheim CG, 2009, EMPIR SOFTW ENG, V14, P418, DOI 10.1007/s10664-008-9092-6
   Watkins J, 2012, CONTINUUM-J MEDIA CU, V26, P665, DOI 10.1080/10304312.2012.706456
   Wrzesien M, 2010, COMPUT EDUC, V55, P178, DOI 10.1016/j.compedu.2010.01.003
   Zaidi R., 2015, ULTIMATE SAP USER GU
   Zhu M., 2014, LECT NOTES COMPUTER, V8517
NR 84
TC 4
Z9 4
U1 1
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2018
VL 98
BP 89
EP 116
DI 10.1016/j.infsof.2018.02.008
PG 28
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GD8LP
UT WOS:000430764200007
OA Green Published
DA 2024-07-18
ER

PT J
AU Hegedus, P
   Kádár, I
   Ferenc, R
   Gyimóthy, T
AF Hegedus, Peter
   Kadar, Istvan
   Ferenc, Rudolf
   Gyimothy, Tibor
TI Empirical evaluation of software maintainability based on a manually
   validated refactoring dataset
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code refactoring; Manually validated empirical dataset; Source code
   metrics; Software maintainability; Empirical study
ID CODE SMELLS; CLONES
AB Context: Refactoring is a technique for improving the internal structure of software systems. It has a solid theoretical background while being used in development practice also. However, we lack empirical research results on the real effect of code refactoring and its application.
   Objective: This paper presents a manually validated subset of a previously published dataset containing the refactorings extracted by the RefFinder tool, code metrics, and maintainability of 7 open-source systems. We found that RefFinder had around 27% overall average precision on the subject systems, thus our manually validated subset has substantial added value. Using the dataset, we studied several aspects of the refactored and non-refactored source code elements (classes and methods), like the differences in their maintainability and source code metrics.
   Method: We divided the source code elements into a group containing the refactored elements and a group with non-refactored elements. We analyzed the elements' characteristics in these groups using correlation analysis, Mann-Whitney U test and effect size measures.
   Results: Source code elements subjected to refactorings had significantly lower maintainability than elements not affected by refactorings. Moreover, refactored elements had significantly higher size related metrics, complexity, and coupling. Also these metrics changed more significantly in the refactored elements. The results are mostly in line with our previous findings on the not validated dataset, with the difference that clone metrics had no strong connection with refactoring.
   Conclusions: Compared to the preliminary analysis using a not validated dataset, the manually validated dataset led to more significant results, which suggests that developers find targets for refactorings based on some internal quality properties of the source code, like their size, complexity or coupling, but not clone related metrics as reported in our previous studies. They do not just use these properties for identifying targets, but also control them with refactorings.
C1 [Hegedus, Peter] MTA SZTE Res Grp Artificial Intelligence, Szeged, Hungary.
   [Kadar, Istvan; Ferenc, Rudolf; Gyimothy, Tibor] Univ Szeged, Szeged, Hungary.
C3 Szeged University
RP Ferenc, R (corresponding author), Univ Szeged, Szeged, Hungary.
EM hpeter@inf.u-szeged.hu; ikadar@inf.u-szeged.hu; ferenc@inf.u-szeged.hu;
   gyimothy@inf.u-szeged.hu
RI Hegedus, Peter/ABA-8580-2021; Gyimothy, Tibor/M-3705-2018; Ferenc,
   Rudolf/A-1317-2008
OI Hegedus, Peter/0000-0003-4592-6504; Gyimothy, Tibor/0000-0002-2123-7387;
   Ferenc, Rudolf/0000-0001-8897-7403
FU EU [GINOP-2.3.2-15-2016-00037]; Ministry of Human Capacities, Hungary
   [UNKP-17-4]
FX This research was supported by the EU-funded Hungarian national grant
   GINOP-2.3.2-15-2016-00037 titled "Internet of Living Things" and the
   UNKP-17-4 New National Excellence Program of the Ministry of Human
   Capacities, Hungary.
CR [Anonymous], 2007, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering
   [Anonymous], 2010, Proceedings of the International Conference on Software Maintenance (ICSM)
   Antoniol G, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P31, DOI 10.1109/IWPSE.2004.1334766
   Arcoverde R., 2011, WORKSH REF TOOLS, P33
   Bakota T., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P243, DOI 10.1109/ICSM.2011.6080791
   Bakota T, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P440, DOI 10.1109/CSMR-WCRE.2014.6747214
   Bakota T, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P316, DOI 10.1109/ICSM.2012.6405288
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Choi E., 2012, P AM SOC INFORM SCI, P1
   Choi E, 2014, IEICE T INF SYST, VE97D, P1244, DOI 10.1587/transinf.E97.D.1244
   Counsell S., 2015, P XP 15 WORKSH ACM N
   Demeyer S, 2000, ACM SIGPLAN NOTICES, V35, P166, DOI 10.1145/354222.353183
   Dudziak T., 2002, THESIS
   Fontana F.A., 2011, Proceedings of the 4th Workshop on Refactoring Tools, P37, DOI DOI 10.1145/1984732.1984741
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Ge X, 2012, PROC INT CONF SOFTW, P211, DOI 10.1109/ICSE.2012.6227192
   Ghannem A, 2014, J SOFTW-EVOL PROC, V26, P692, DOI 10.1002/smr.1644
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Hegedus P., 2013, ELECT COMMUN EASST, V60
   Hess M., 2004, Annual Meeting of the American Educational Research Association, P1
   Hogue M.I., 2014, ACM COMPUT RES REPOS
   Kadar I., 2016, P 12 INT C PRED MOD
   Kadar I., ASSESSMENT CODE REFA, P610
   Kádár I, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P599, DOI 10.1109/SANER.2016.42
   Kataoka Y, 2002, PROC IEEE INT CONF S, P576, DOI 10.1109/ICSM.2002.1167822
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Kim M., 2010, PROC 18 ACM SIGSOFT, P371, DOI [10.1145/1882291.1882353, DOI 10.1145/1882291.1882353]
   Kosker Y, 2009, EXPERT SYST APPL, V36, P10000, DOI 10.1016/j.eswa.2008.12.066
   Liu H, 2015, IEEE T SOFTWARE ENG, V41, P887, DOI 10.1109/TSE.2015.2427831
   Mahouachi Rim, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P126, DOI 10.1007/978-3-642-39742-4_11
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mäntylä M, 2003, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSM.2003.1235447
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Menzies T., 2015, The promise repository of empirical software engineering data
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Negara S, 2013, LECT NOTES COMPUT SC, V7920, P552, DOI 10.1007/978-3-642-39038-8_23
   Oman P., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P337, DOI 10.1109/ICSM.1992.242525
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Ratzinger J., 2008, Proceedings of the 2008 international working conference on Mining software repositories, P35, DOI [10.1145/1370750.1370759, DOI 10.1145/1370750.1370759]
   Silva D., 2016, CORR
   Soares G., 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P164, DOI 10.1109/SBES.2011.21
   Soares G, 2013, J SYST SOFTWARE, V86, P1006, DOI 10.1016/j.jss.2012.10.040
   Soetens QD, 2013, PROC IEEE INT CONF S, P384, DOI 10.1109/ICSM.2013.53
   Stevens R, 2013, EUR CON SFTWR MTNCE, P335, DOI 10.1109/CSMR.2013.44
   Szoke G, 2015, IEEE INT WORK C SO, P253, DOI 10.1109/SCAM.2015.7335422
   Tahvildari L, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P183, DOI 10.1109/CSMR.2003.1192426
   Tourwé T, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P91, DOI 10.1109/CSMR.2003.1192416
   Tsantalis N., 2013, C CTR ADV STUD COLL, P132, DOI [10.5555/2555523.2555539, DOI 10.5555/2555523.2555539]
   URGIA AM, 2012, P 16 EUR C SOFTW, P63, DOI DOI 10.1109/CSMR.2012.17
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Van Rysselberghe F, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P126, DOI 10.1109/IWPSE.2003.1231219
   Wang W, 2014, PROC IEEE INT CONF S, P331, DOI 10.1109/ICSME.2014.55
   Xing ZC, 2006, WORK CONF REVERSE EN, P263
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
NR 54
TC 23
Z9 25
U1 0
U2 14
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 313
EP 327
DI 10.1016/j.infsof.2017.11.012
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FX4EZ
UT WOS:000426026800023
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Al-Zubidy, A
   Carver, JC
   Hale, DP
   Hassler, EE
AF Al-Zubidy, Ahmed
   Carver, Jeffrey C.
   Hale, David P.
   Hassler, Edgar E.
TI Vision for SLR tooling infrastructure: Prioritizing value-added
   requirements
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic literature review; Empirical software engineering; Tooling
   infrastructure
ID SYSTEMATIC LITERATURE-REVIEWS; SOFTWARE
AB Context: Even with the increasing use of Systematic Literature Reviews (SLR) in software engineering (SE), there are still a number of barriers faced by SLR authors. These barriers increase the cost of conducting SLRs.
   Objective: For many of these barriers, appropriate tool support could reduce their impact. In this paper, we use interactions with the SLR community in SE to identify and prioritize a set of requirements for SLR tooling infrastructure.
   Method: This paper analyzes and combines the results from three studies on SLR process barriers and SLR tool requirements to produce a prioritized list of functional requirements for SLR tool support. Using this list of requirements, we perform a feature analysis of the current SLR support tools to identify requirements that are supported as well as identify the need for additional tooling infrastructure.
   Results: The analysis resulted in a list 112 detailed requirements (consolidated into a set of composite requirements) that SE community desires in SLR support tools. The requirements span all the phases of the SLR process. The results show that, while recent tools cover more of the requirements, there are a number of high-priority requirements that are not yet fully covered by any of the existing tools.
   Conclusion: The existing set of SLR tools do not cover all the requirements posed by the community. The list of requirements in this paper is useful for tool developers and researchers wishing to provide support to the SLR community with SE. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Al-Zubidy, Ahmed; Carver, Jeffrey C.; Hale, David P.] Univ Alabama, Tuscaloosa, AL 35487 USA.
   [Hassler, Edgar E.] Appalachian State Univ, Boone, NC 28608 USA.
C3 University of Alabama System; University of Alabama Tuscaloosa;
   University of North Carolina; Appalachian State University
RP Carver, JC (corresponding author), Univ Alabama, Tuscaloosa, AL 35487 USA.
EM carver@cs.ua.edu
RI Carver, Jeffrey/AAM-8202-2020; Carver, Jeffrey/AFP-1987-2022
OI Carver, Jeffrey/0000-0002-7824-9151; Carver, Jeffrey/0000-0002-7824-9151
FU United States National Science Foundation [NSF-1305395]
FX The authors would like to thank the workshop participants for their
   inputs. We acknowledge partial support from the United States National
   Science Foundation under grant NSF-1305395.
CR [Anonymous], 2004, TRSE0401 U KEEL NAT
   [Anonymous], 2012, Proceedings of the 2nd International Workshop on Evidential Assessment of software technologies
   Babar MA, 2009, INT SYMP EMP SOFTWAR, P347
   Barn B., 2014, SIRTOOL TOOL SUPPORT
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Carver Jeffrey C., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P203, DOI 10.1109/ESEM.2013.28
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   de Almeida Biolchini JC, 2007, ADV ENG INFORM, V21, P133, DOI 10.1016/j.aei.2006.11.006
   Dieste Oscar, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P215
   Fabbri Sandra., 2016, Proceedings of the 20th International Conference on Evaluation and Assessment in Software Engineering, P21
   Fernández-Sáez AM, 2010, ICSOFT 2010: PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 2, P157
   Grimán A, 2006, J SYST SOFTWARE, V79, P871, DOI 10.1016/j.jss.2005.12.015
   Hassler E, 2016, INFORM SOFTWARE TECH, V70, P122, DOI 10.1016/j.infsof.2015.10.011
   Hassler Edgar., 2014, 18th International Conference on Evaluation Assessment in Software Engineering, P31
   Hedberg H, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P45
   Hernandes Elis, 2012, CLEIej, V15, P3
   Imtiaz Salma, 2013, P 17 INT C EV ASS SO, P177
   Kitchenham B, 1997, COMPUT CONTROL ENG J, V8, P120, DOI 10.1049/cce:19970304
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   Kitchenham B. A., 1997, Software Engineering Notes, V22, P21, DOI 10.1145/263244.263251
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Marshall Christopher, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P296, DOI 10.1109/ESEM.2013.32
   Marshall C., 2015, Proceedings of the 19th international conference on evaluation and assessment in software engineering, P26
   Marshall Christopher., 2014, Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering, P13
   Molleri J.S., 2015, EASE 15 P 19 INT C E, P1, DOI DOI 10.1145/2745802.2745825
   Penzenstadler B., 2014, P 18 INT C EV ASS SO, P1
   Ramampiaro Heri., 2010, Collaborative Computing: Networking, Applications and Worksharing (CollaborateCom), 2010 6th International Conference on, P1
   Riaz M., 2010, 14 INT C EV ASS SOFT
NR 30
TC 14
Z9 15
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2017
VL 91
BP 72
EP 81
DI 10.1016/j.infsof.2017.06.007
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FG3DV
UT WOS:000410017900005
OA hybrid
DA 2024-07-18
ER

PT J
AU Kluza, K
   Nalepa, GJ
AF Kluza, Krzysztof
   Nalepa, Grzegorz J.
TI A method for generation and design of business processes with business
   rules
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Business process modeling; Business rules; Process with rules
   integration
ID PROCESS MODELS; PRODUCT STRUCTURE; INTEGRATION
AB Context: Business Processes provide a universal method of describing operational aspects of business. Business Rules, in turn, support declarative specification of business domain knowledge. Although there is a difference in abstraction levels between these both modeling techniques, rules can be complementary to processes. Rules can be efficiently used to specify process low-level logic, while processes can serve as a procedural specification of the workflow, including the inference control.
   Objective: One of the research problems in this area is supporting business analytics in the modeling of processes integrated with rules. Such a support can take advantage of new design method for such models.
   Method: We describe a model of procedural Business Process as well as the model and method of creating Attribute Relationship Diagrams. Based on these two representations, we provide a formalized model combining a process model with rules. Using these models, we introduce an algorithm that generates an executable process model along with decision table schemas for rules (rule templates for rule sets grouped in decision tables).
   Results: The paper provides an automated approach for generation of Business Process models from Attribute Relationship Diagrams. The approach was evaluated based on the selected benchmark cases, which were deployed and tested in the provided modeling and execution environment for such integrated models.
   Conclusion: The paper presents an efficient and formalized method for design of processes with rules that allows for generating BPMN models integrated with the rules from the Semantic Knowledge Engineering approach. Such a model can be treated as a structured rule base that provides explicit inference flow determined by the process control flow. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Kluza, Krzysztof; Nalepa, Grzegorz J.] AGH Univ Sci & Technol, Al A Mickiewicza 30, PL-30059 Krakow, Poland.
C3 AGH University of Krakow
RP Kluza, K (corresponding author), AGH Univ Sci & Technol, Al A Mickiewicza 30, PL-30059 Krakow, Poland.
EM kluza@agh.edu.pl
RI Nalepa, Grzegorz J./ABE-8339-2021; Kluza, Krzysztof/D-7659-2011
OI Nalepa, Grzegorz J./0000-0002-8182-4225; Kluza,
   Krzysztof/0000-0003-1876-9603
FU HiBuProBuRul Project - NCN (National Science Centre) resources for
   science [DEC-2011/03/N/ST6/00909]
FX The research presented in this paper was based on a part of the PhD
   thesis [65] of the first author and was supported by the HiBuProBuRul
   Project funded from NCN (National Science Centre) resources for science
   (no. DEC-2011/03/N/ST6/00909).
CR [Anonymous], 2013, Business process management, DOI DOI 10.1007/978-3-642-33143-5
   [Anonymous], 2012, Business Process Management: Concepts, Languages, Architectures
   Atzmueller M., 2009, FLAIRS 22 P 22 INT F, P414
   Batoulis K, 2016, LECT NOTES BUS INF P, V256, P418, DOI 10.1007/978-3-319-42887-1_34
   Batoulis K, 2015, LECT NOTES COMPUT SC, V9097, P349, DOI 10.1007/978-3-319-19069-3_22
   Bazhenova E, 2016, LECT NOTES BUS INF P, V256, P444, DOI 10.1007/978-3-319-42887-1_36
   Borrego D, 2015, INFORM SOFTWARE TECH, V62, P187, DOI 10.1016/j.infsof.2015.02.010
   Browne P., 2009, JBOSS DROOLS BUSINES
   Callahan S, 2006, J COMPUT INF SCI ENG, V6, P263, DOI 10.1115/1.2218361
   Caron F, 2013, IEEE INT ENTERP, P13, DOI 10.1109/EDOCW.2013.9
   Caron F, 2013, DECIS SUPPORT SYST, V54, P1357, DOI 10.1016/j.dss.2012.12.012
   Charfi A., 2004, ICSOC 04, P30
   Chiao C.M., 2013, CPSM ICSM, P1, DOI [10.1109/BIBE.2013.6701699, DOI 10.1109/BIBE.2013.6701699]
   Chiao CM, 2014, IEEE INT ENTERP, P410, DOI 10.1109/EDOCW.2014.69
   De Giacomo G, 2015, LECT NOTES COMPUT SC, V9097, P84, DOI 10.1007/978-3-319-19069-3_6
   De Roover W, 2011, LECT NOTES COMPUT SC, V7046, P591
   Di Bona D, 2011, UKSIM EURO SYMP COMP, P102, DOI 10.1109/EMS.2011.68
   Fahland D, 2010, LECT NOTES BUS INF P, V43, P477
   Forster E, 2006, IDEA BUSINESS PROCES, P1
   Friedrich Fabian, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P482, DOI 10.1007/978-3-642-21640-4_36
   GOEDERTIER S, 2005, P INT IEEE EDOC WORK, P67
   Goedertier S, 2015, ENTERP INF SYST-UK, V9, P161, DOI 10.1080/17517575.2013.830340
   Hohwiller J, 2011, LECT NOTES BUS INF P, V95, P136
   jBPM User Guide, 2011, JBPM TEAM JBOSS COMM
   Jiménez-Ramírez A, 2015, INFORM SOFTWARE TECH, V57, P571, DOI 10.1016/j.infsof.2014.06.006
   Kalenkova A.A., 2014, BUSINESS PROCESS MAN, P7
   Kluza K, 2015, THESIS
   Kluza K., 2015, ADV ICT BUSINESS IND, P57
   Kluza K., 2014, LNBIP, V171, P185, DOI [10.1007/978-3-319-06257-0, DOI 10.1007/978-3-319-06257-0]
   Kluza K, 2016, ACSIS-ANN COMPUT SCI, V8, P1359, DOI 10.15439/2016F324
   Kluza K, 2015, LECT NOTES BUS INF P, V202, P504, DOI 10.1007/978-3-319-15895-2_43
   Kluza K, 2013, FED CONF COMPUT SCI, P939
   Kluza K, 2012, LECT NOTES ARTIF INT, V7268, P573, DOI 10.1007/978-3-642-29350-4_68
   Knolmayer G, 2000, LECT NOTES COMPUT SC, V1806, P16
   Künzle V, 2011, J SOFTW MAINT EVOL-R, V23, P205, DOI 10.1002/smr.524
   Li Shen, 2012, Computer Integrated Manufacturing Systems, V18, P1136
   Li S, 2012, APPL MATH INFORM SCI, V6, P751
   Li YM, 2011, INT J ADV MANUF TECH, V55, P1149, DOI 10.1007/s00170-010-3130-4
   Ligeza A., 2011, DECISION MAKING MANU, V5, P57, DOI DOI 10.7494/DMMS.2011.5.1.57
   Lindsay A, 2003, INFORM SOFTWARE TECH, V45, P1015, DOI 10.1016/S0950-5849(03)00129-0
   Lübke D, 2008, REV: 2008 REQUIREMENTS ENGINEERING VISUALIZATION, P21, DOI 10.1109/REV.2008.8
   Milanovic M., 2009, P 13 IEEE INT C ENT, P59
   Moreno-Montes de Oca I, 2015, INFORM SOFTWARE TECH, V58, P187, DOI 10.1016/j.infsof.2014.07.011
   Mrasek R, 2015, LECT NOTES COMPUT SC, V9097, P382, DOI 10.1007/978-3-319-19069-3_24
   Nalepa Grzegorz J., 2008, 2008 International Multiconference on Computer Science and Information Technology, P207, DOI 10.1109/IMCSIT.2008.4747241
   Nalepa G. J., 2011, SEMANTIC KNOWLEDGE E
   Nalepa G. J., 2009, 012009 CSLTR AGH U S
   Nalepa G. J., 2014, LECT NOTES ARTIF INT, V8468, p[201, 548]
   Nalepa GJ, 2005, FRONT ARTIF INTEL AP, V130, P330
   Nalepa GJ, 2013, LECT NOTES ARTIF INT, V7895, P453, DOI 10.1007/978-3-642-38610-7_42
   Nalepa GJ, 2011, INT J ARTIF INTELL T, V20, P1107, DOI 10.1142/S0218213011000541
   Nalepa GJ, 2010, LECT NOTES ARTIF INT, V6114, P598, DOI 10.1007/978-3-642-13232-2_73
   Nalepa Grzegorz J, 2008, FLAIRS 21, P353
   Nawrocki J., 2006, BIS, P13
   Object Management Group (OMG), 2011, BMI20110304 OMG
   OMG, 2015, FORMAL20150901 OMG
   OMG, 2011, OMG Document Number: formal/ 2011-01-03
   OMG Decision Model and Notation. Betal, 2014, DTC20140201 OMG
   OMG Semantics of Business Vocabulary and Business Rules (SBVR), 2006, DTC060302 OMG
   OMG Unified Modeling language (OMG UML), 2009, FORMAL20090202 OMG
   Prescher J., 2014, P 4 INT S DATA DRIVE, P162
   Rademakers Tijs., 2012, Activiti in Action: Executable Business Processes in BPMN 2.0, V1st
   Reijers Hajo A., 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P307, DOI 10.1007/978-3-642-40176-3_26
   Reijers HA, 2003, J MANAGE INFORM SYST, V20, P229
   Reijers HA, 2002, J RES PRACT INF TECH, V34, P110
   Rozinat A, 2006, LECT NOTES COMPUT SC, V4102, P420
   Szpyrka M, 2011, STUD COMPUT INTELL, V382, P249
   van der Aa Han, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P275, DOI 10.1007/978-3-642-40176-3_23
   van der Aa H, 2016, LECT NOTES BUS INF P, V256, P405, DOI 10.1007/978-3-319-42887-1_33
   van der Aa H, 2016, COMPUT IND, V75, P162, DOI 10.1016/j.compind.2015.04.005
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van der Aalst WMP, 1999, COMPUT IND, V39, P97, DOI 10.1016/S0166-3615(99)00007-X
   van der Aalst WMP, 2001, PROCEEDINGS OF THE SIXTH INTERNATIONAL CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK IN DESIGN, P397, DOI 10.1109/CSCWD.2001.942292
   Vanderfeesten I, 2008, LECT NOTES COMPUT SC, V5074, P571
   Vanderfeesten I, 2010, LECT NOTES COMPUT SC, V6428, P665, DOI 10.1007/978-3-642-16961-8_91
   Vanderfeesten I, 2011, INFORM SYST, V36, P517, DOI 10.1016/j.is.2010.09.008
   Vanderfeesten I, 2008, LECT NOTES BUS INF P, V12, P187
   VANTHIENEN J, 1994, DATA KNOWL ENG, V13, P265, DOI 10.1016/0169-023X(94)00020-4
   Wang W, 2014, P 25 AUSTR C INF SYS
   Wang W. C., 2016, THESIS
   Wang W, 2016, LECT NOTES COMPUT SC, V9694, P51, DOI 10.1007/978-3-319-39696-5_4
   WEI W, 2017, J COMPUT INF SYST, P1, DOI DOI 10.1080/00949655.2017.1360298
   Wohed P, 2009, INFORM SOFTWARE TECH, V51, P1187, DOI 10.1016/j.infsof.2009.02.002
   Wu K, 2012, LECT NOTES COMPUTER, P525
NR 84
TC 11
Z9 12
U1 0
U2 27
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2017
VL 91
BP 123
EP 141
DI 10.1016/j.infsof.2017.07.001
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FG3DV
UT WOS:000410017900008
DA 2024-07-18
ER

PT J
AU Romano, S
   Fucci, D
   Scanniello, G
   Turhan, B
   Juristo, N
AF Romano, Simone
   Fucci, Davide
   Scanniello, Giuseppe
   Turhan, Burak
   Juristo, Natalia
TI Findings from a multi-method study on test-driven development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Ethnographically-informed study; Qualitative study; Test driven
   development
ID SOFTWARE MAINTENANCE; INFORMATION; EXPERIENCE
AB Context: Test-driven development (TDD) is an iterative software development practice where unit tests are defined before production code. A number of quantitative empirical investigations have been conducted about this practice. The results are contrasting and inconclusive. In addition, previous studies fail to analyze the values, beliefs, and assumptions that inform and shape TDD. Objective: We present a study designed, and conducted to understand the values, beliefs, and assumptions about TDD. Participants were novice and professional software developers.
   Method: We conducted an ethnographically-informed study with 14 novice software developers, i.e., graduate students in Computer Science at the University of Basilicata, and six professional software developers (with one to 10 years work experience). The participants worked on the implementation of a new feature for an existing software written in Java. We immersed ourselves in the context of our study. We collected qualitative information by means of audio recordings, contemporaneous field notes, and other kinds of artifacts. We collected quantitative data from the integrated development environment to support or refute the ethnography results.
   Results: The main insights of our study can be summarized as follows: (i) refactoring (one of the phases of TDD) is not performed as often as the process requires and it is considered less important than other phases, (ii) the most important phase is implementation, (iii) unit tests are almost never up-to-date, and (iv) participants first build in their mind a sort of model of the source code to be implemented and only then write test cases. The analysis of the quantitative data supported the following qualitative findings: (i), and (iv).
   Conclusions: Developers write quick-and-dirty production code to pass the tests, do not update their tests often, and ignore refactoring. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Romano, Simone; Scanniello, Giuseppe] Univ Basilicata, Viale Ateneo 10, Potenza, Italy.
   [Fucci, Davide; Turhan, Burak] Univ Oulu, M3S, Pentti Kaiteran Katu 1, Oulu, Finland.
   [Juristo, Natalia] Univ Politecn Madrid, Fac Informat, Campus Montegancedo, E-28660 Madrid, Spain.
C3 University of Basilicata; University of Oulu; Universidad Politecnica de
   Madrid
RP Romano, S (corresponding author), Univ Basilicata, Viale Ateneo 10, Potenza, Italy.
EM simone.romano@unibas.it; davide.fucci@oulu.fi;
   giuseppe.scanniello@unibas.it; Burak.Turhan@oulu.fi; natalia@fi.upm.es
RI Romano, Simone/ABD-6504-2020; Turhan, Burak/G-7400-2011; Romano,
   Simone/JVZ-6529-2024; Fucci, Davide/C-1463-2015
OI Romano, Simone/0000-0003-4880-3622; Turhan, Burak/0000-0003-1511-2163;
   Fucci, Davide/0000-0002-0679-4361; Scanniello,
   Giuseppe/0000-0003-0024-7508
FU Academy of Finland [278354]; Academy of Finland (AKA) [278354] Funding
   Source: Academy of Finland (AKA)
FX This research is supported in part by the Academy of Finland Project no.
   278354. We would like to acknowledge Dr. Lucas Layman and Dr. Hakan
   Erdogmus, who designed the task used in the study. We thank the students
   and the professional developers for their participation in our
   ethnographically-informed study.
CR [Anonymous], P 18 INT C EV ASS SO
   [Anonymous], 2010, MAKING SOFTWARE WHAT
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   Astels Dave, 2003, Test-Driven Development: A Practical Guide
   Astels David., 2002, PRACTICAL GUIDE EXTR
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Beck Kent L., 2003, Test Driven Development By Example
   Becker K, 2015, INFORM SOFTWARE TECH, V57, P494, DOI 10.1016/j.infsof.2014.06.003
   Begel Andrew, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P255
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   Beynon-Davies P, 1999, J INF TECHNOL-UK, V14, P107, DOI 10.1080/026839699344782
   BeynonDavies P, 1997, INFORM SOFTWARE TECH, V39, P531, DOI 10.1016/S0950-5849(97)00008-6
   Button G., 1996, Computer Supported Cooperative Work (CSCW), V5, P369, DOI 10.1007/BF00136711
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Carver JC, 2014, EMPIR SOFTW ENG, V19, P267, DOI 10.1007/s10664-013-9290-8
   Causevic A., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P337, DOI 10.1109/ICST.2011.19
   Crabtree A, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P879
   Feathers Michael, 2004, Working Effectively With Legacy Code: Work Effect Leg Code
   Fowler M., 2001, Software Development, V9, P28
   Fucci D, 2017, IEEE T SOFTWARE ENG, V43, P597, DOI 10.1109/TSE.2016.2616877
   Fucci D, 2015, INFORM SOFTWARE TECH, V68, P82, DOI 10.1016/j.infsof.2015.08.004
   Fucci D, 2014, EMPIR SOFTW ENG, V19, P277, DOI 10.1007/s10664-013-9259-7
   Fucci Davide., 2014, ACM INT C PROCEEDING, DOI DOI 10.1145/2601248.2601272
   Garlan David, 2010, DOCUMENTING SOFTWARE
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   Geras A, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P405, DOI 10.1109/METRIC.2004.1357925
   Gupta Atul, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P285
   Hammersley Martyn, 2007, Ethnography: Principles in practice, DOI DOI 10.4324/9780203944769
   Heikkila Ville T., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P85, DOI 10.1109/ESEM.2013.27
   Hilton M., 2016, AG PROC SOFTW ENG EX, P53, DOI DOI 10.1007/978-3-319-33515-5_5
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Kou HB, 2010, AUTOMAT SOFTW ENG, V17, P57, DOI 10.1007/s10515-009-0058-8
   Latorre R, 2014, IEEE T SOFTWARE ENG, V40, P381, DOI 10.1109/TSE.2013.2295827
   LITTMAN DC, 1987, J SYST SOFTWARE, V7, P341, DOI 10.1016/0164-1212(87)90033-1
   Marchenko A, 2009, LECT NOTES BUS INF P, V31, P13
   Martin D, 2007, PROC INT CONF SOFTW, P602
   Müller MM, 2007, EMPIR SOFTW ENG, V12, P593, DOI 10.1007/s10664-007-9048-2
   Müller MM, 2001, PROC INT CONF SOFTW, P537, DOI 10.1109/ICSE.2001.919128
   Munir H., 2014, INF SOFTW TECHNOL
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Pancur M, 2003, IEEE REGION 8 EUROCON 2003, VOL B, PROCEEDINGS, P83
   Passos C, 2012, INT SYMP EMP SOFTWAR, P9, DOI 10.1145/2372251.2372255
   Rafique Y, 2013, IEEE T SOFTWARE ENG, V39, P835, DOI 10.1109/TSE.2012.28
   Robinson H, 2007, INFORM SOFTWARE TECH, V49, P540, DOI 10.1016/j.infsof.2007.02.007
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Romano S, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915996
   Rooksby J, 2009, COMPUT SUPP COOP W J, V18, P559, DOI 10.1007/s10606-009-9098-7
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Scanniello G., 2013, P INT C SOFTW MAINT, P11
   Scanniello Giuseppe, 2016, P 31 ANN ACM S APPL, P1422
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Segal J., 2005, Proceedings of the 2005 workshop on Realising Evidence-Based Software Engineering, P1, DOI DOI 10.1145/1082983.1083176
   Shapiro D., 1994, Transcending Boundaries, CSCW '94. Proceedings of the Conference on Computer Supported Cooperative Work, P417, DOI 10.1145/192844.193064
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   Sharp H., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P491, DOI 10.1145/1810295.1810445
   Sharp H, 2000, IEEE SOFTWARE, V17, P40, DOI 10.1109/52.819967
   Sharp H, 2016, IEEE T SOFTWARE ENG, V42, P786, DOI 10.1109/TSE.2016.2519887
   Shull F, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.152
   Sim S. E., 1999, Fifth IEEE Workshop on Empirical Studies of Software Maintenance (WESS99). Theme: How to Wade Through the Mire of Evidence?, P66
   Singer Janice, 1997, Proceedings of the 1997 Conference of the Centre for Advanced Studies on Collaborative Research. CASCON '97, P21
   Siniaalto Maria, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P275
   Soetens Q. D., 2010, STUDYING EFFECT REFA
   Wohlin C., 2012, Experimentation in Software Engineering
   Zieliriski K., 2006, SOFTW ENG, V130, P113
NR 67
TC 13
Z9 14
U1 0
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2017
VL 89
BP 64
EP 77
DI 10.1016/j.infsof.2017.03.010
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EY3HD
UT WOS:000403861300005
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Hoda, R
   Salleh, N
   Grundy, J
   Tee, HM
AF Hoda, Rashina
   Salleh, Norsaremah
   Grundy, John
   Tee, Hui Mien
TI Systematic literature reviews in agile software development: A tertiary
   study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Agile software development; Tertiary study; Systematic literature
   reviews; Mapping study
ID CHALLENGES
AB Context A number of systematic literature reviews and mapping studies (SLRs) covering numerous primary research studies on various aspects of agile software development (ASD) exist.
   Objective: The aim of this paper is to provide an overview of the SLRs on ASD research topics for software engineering researchers and practitioners.
   Method: We followed the tertiary study guidelines by Kitchenham et al. to find SLRs published between late 1990s to December 2015.
   Results: We found 28 SLRs focusing on ten different ASD research areas: adoption, methods, practices, human and social aspects, CMMI, usability, global software engineering (GSE), organizational agility, embedded systems, and software product line engineering. The number of SLRs on ASD topics, similar to those on software engineering (SE) topics in general, is on the rise. A majority of the SLRs applied standardized guidelines and the quality of these SLRs on ASD topics was found to be slightly higher for journal publications than for conferences. While some individuals and institutions seem to lead this area, the spread of authors and institutions is wide. With respect to prior review recommendations, significant progress was noticed in the area of connecting agile to established domains such as usability, CMMI, and GSE; and considerable progress was observed in focusing on management-oriented approaches as Scrum and sustaining ASD in different contexts such as embedded systems.
   Conclusion: SLRs of ASD studies are on the rise and cover a variety of ASD aspects, ranging from early adoption issues to newer applications of ASD such as in product line engineering. ASD research can benefit from further primary and secondary studies on evaluating benefits and challenges of ASD methods, agile hybrids in large-scale setups, sustainability, motivation, teamwork, and project management; as well as a fresh review of empirical studies in ASD to cover the period post 2008. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Hoda, Rashina; Tee, Hui Mien] Univ Auckland, SEPTA Res Elect & Comp Engn, Bldg 903,368 Khyber Pass, Auckland 1023, New Zealand.
   [Salleh, Norsaremah] Int Islamic Univ Malaysia, Dept Comp Sci, Kuala Lumpur, Malaysia.
   [Grundy, John] Deakin Univ, Sch Informat Technol, Melbourne, Vic, Australia.
C3 University of Auckland; International Islamic University Malaysia;
   Deakin University
RP Hoda, R (corresponding author), Univ Auckland, SEPTA Res Elect & Comp Engn, Bldg 903,368 Khyber Pass, Auckland 1023, New Zealand.
EM r.hoda@auckland.ac.nz
RI Grundy, John/AAF-1716-2019; Salleh, Norsaremah/AFU-5066-2022; Grundy,
   John/I-6681-2012
OI Grundy, John/0000-0003-4928-7076; Salleh,
   Norsaremah/0000-0001-5625-7014; 
FU University of Auckland [3703888]
FX This study was supported by a FRDF-NS Fund (#3703888) from The
   University of Auckland.
CR Abrahamsson P., 2003, P INT C SOFTW ENG
   Abrahamsson P, 2009, EUR J INFORM SYST, V18, P281, DOI 10.1057/ejis.2009.27
   Albuquerque CO, 2012, LECT NOTES COMPUT SC, V7335, P576, DOI 10.1007/978-3-642-31137-6_44
   Alzoubi YI, 2016, INFORM MANAGE-AMSTER, V53, P22, DOI 10.1016/j.im.2015.08.003
   [Anonymous], 2001, AG MAN
   [Anonymous], 2016, DAT ATTR EFF
   [Anonymous], 2001, SOFTW DEV MAG
   [Anonymous], COCHRANE HDB SYSTEMA
   [Anonymous], 2014, INT C SOFTWARE PROCE, DOI DOI 10.1007/978-3-319-13036-1_16
   Augustine S., 2005, Managing agile projects, V1st
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Biolchini J., 2005, TRAVASSOS SYSTEMATIC
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brhel M, 2015, INFORM SOFTWARE TECH, V61, P163, DOI 10.1016/j.infsof.2015.01.004
   Campanelli AS, 2015, J SYST SOFTWARE, V110, P85, DOI 10.1016/j.jss.2015.08.035
   Causevic A., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P337, DOI 10.1109/ICST.2011.19
   Chuang SW, 2014, J SYST SOFTWARE, V93, P84, DOI 10.1016/j.jss.2014.03.006
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   COHEN D, 2004, ADV SOFTWARE ENG, V62
   Conboy K, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767753
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   da Silva TS, 2015, LECT NOTES COMPUT SC, V9159, P86, DOI 10.1007/978-3-319-21413-9_7
   de C., 2012, P 38 EUR C SOFTW ENG
   Díaz J, 2011, SOFTWARE PRACT EXPER, V41, P921, DOI 10.1002/spe.1087
   Dingsoyr T, 2008, AGILE 2008, PROCEEDINGS, P83, DOI 10.1109/Agile.2008.50
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Gregory P, 2015, LECT NOTES BUS INF P, V212, P64, DOI 10.1007/978-3-319-18612-2_6
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Hanssen G. K., 2011, 2011 Sixth IEEE International Conference on Global Software Engineering Workshop, P17, DOI 10.1109/ICGSE-W.2011.12
   Hellmann TD, 2013, 2013 AGILE CONFERENCE (AGILE), P32, DOI 10.1109/AGILE.2013.10
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Hossain E, 2009, INT CONF GLOBAL SOFT, P175, DOI 10.1109/ICGSE.2009.25
   Hummel M, 2013, BUS INFORM SYST ENG+, V5, P343, DOI 10.1007/s12599-013-0282-4
   Inayat I., 2014, COMPUT HUM BEHAY
   Jalali S, 2012, J SOFTW-EVOL PROC, V24, P643, DOI 10.1002/smr.561
   Jurca G, 2014, 2014 AGILE CONFERENCE (AGILE), P24, DOI 10.1109/AGILE.2014.17
   Kaisti M, 2013, EURASIP J EMBED SYST, DOI 10.1186/1687-3963-2013-15
   Kitchenham B., PROCEDURES PERFORMIN
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V3, P1
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kupiainen E, 2015, INFORM SOFTWARE TECH, V62, P143, DOI 10.1016/j.infsof.2015.02.005
   Magdaleno AM, 2012, J SYST SOFTWARE, V85, P351, DOI 10.1016/j.jss.2011.08.028
   Matalonga S, 2013, INT J SOFTW ENG KNOW, V23, P1289, DOI 10.1142/S021819401350040X
   Mellon C., BRIEF HIST CMMI
   Melo C.d. O., 2013, Journal of the Brazilian Computer Society, V19, P523
   Paredes J, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P157, DOI 10.1109/VISSOFT.2014.32
   Petersen K., P 12 INT C EV, P71
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Rohunen A, 2010, LECT NOTES COMPUT SC, V6156, P77, DOI 10.1007/978-3-642-13792-1_8
   Royce W.W., 1970, IEEE WESCON
   Salah D., 2014, P 18 INT C EV ASS SO, P1
   Salleh N, 2011, IEEE T SOFTWARE ENG, V37, P509, DOI 10.1109/TSE.2010.59
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Sfetsos P, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P44, DOI 10.1109/QUATIC.2010.17
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   Silva da Silva T., 2011, Proceedings of the 2011 Agile Conference, P77, DOI 10.1109/AGILE.2011.24
   Silva FS, 2015, INFORM SOFTWARE TECH, V58, P20, DOI 10.1016/j.infsof.2014.09.012
   Stavru S, 2014, J SYST SOFTWARE, V94, P87, DOI 10.1016/j.jss.2014.03.041
   Tapanainen T, 2008, PROCEEDINGS OF THE 2ND EUROPEAN CONFERENCE ON INFORMATION MANAGEMENT AND EVALUATION, P425
   Usman M., 2014, PROMISE '14: Proceedings of the 10th International Conference on Predictive Models in Software Engineering, page, P82
   Webster J, 2002, MIS QUART, V26, pXIII
   Whitworth E, 2007, AGILE 2007, PROCEEDINGS, P26, DOI 10.1109/AGILE.2007.60
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   Wohlin C, 2013, IEEE-ACM INT WKSP CO, P43, DOI 10.1109/CESI.2013.6618469
   [No title captured]
NR 71
TC 100
Z9 100
U1 5
U2 141
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2017
VL 85
BP 60
EP 70
DI 10.1016/j.infsof.2017.01.007
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EP7JG
UT WOS:000397553500004
DA 2024-07-18
ER

PT J
AU Amarjeet
   Chhabra, JK
AF Amarjeet
   Chhabra, Jitender Kumar
TI Improving modular structure of software system using structural and
   lexical dependency
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Remodularization; Search-based software engineering; Multi-objective
   optimization
ID COUPLING MEASUREMENT; REFACTORING OPPORTUNITIES; INFORMATION; CODE;
   OPTIMIZATION; CONTEXT
AB Context A software system's structure often degrades due to repetitive maintenance. To make a sustainable evolution of such systems, it becomes mandatory to improve their modular structure after a certain time. Many remodularization approaches Were proposed to improve the modular structure of software systems. Most of the existing approaches rely on structural or lexical dependencies. However, there is a lack of research that distinguishes different types of structural (e.g., inheritance, method calls, references, etc.) or lexical (Name of classes, methods, variables, etc.) dependencies, but assumes that they are equivalent, which is illogical from a software developer's point of view.
   Objective: In this paper, we propose an approach that considers various types of structural as well as lexical dependencies along with their relative importance to remodularize the Object-Oriented (00) systems. The main goal of the paper is to generate remodularization solutions that can reflect the developers' perspective (as visible in the well-modularized software system) of remodularization, which is highly desirable in software evolution.
   Method: The paper computes coupling strength among classes using different weights (computed on basis of well-modularized software system) in terms of various mechanisms of structural and lexical dependencies. Software remodularization problem is formulated as a single and multi-objective optimization problem and solved using Genetic Algorithnis (GA). Based on the different types of structural and lexical dependencies and as per their un-weighted/weighted variants, we have designed following 24 coupling schemes: structural-based (i.e., SBUW, SBW, SAUW, SAW, STFUW, STFW, STFIDFUW, and STFIDFW), lexical based (i.e., LBUW, LBW, LAUW, LAW, LTFUW, LTFW, LTFIDFUW, and LTFIDFW), and combined structural lexical based (i.e., SLBUW, SLBW, SLAUW, SLAW, SLTFUW, SLTFW, SLTFIDFUW, and SLTFIDFW). Values obtained through these coupling schemes are used in coupling and cohesion objective function of the GA. Along with this objective, some supportive objective functions such as MCI and MSI have been used to drive the optimization process towards a good quality modularization solution.
   Results: We assess the effectiveness of our proposed remodularization approach over eight real-world object-oriented software systems in terms of original design of the experimented software systems and modularization decisions provided by the developers. Results indicate that TFIDF based weighted variants (i.e. STFIDFW, LTFIDFW, and SLTFIDFW) of each broad three categories outperformed rest of variants within each category. However, TFIDF weighted variant in the third broad category (i.e., SLTFIDFW) outperformed all others.
   Conclusion: Our combined lexical-structural approach (SLTFIDFW) considering various types of dependencies along with their relative weights performs well and results into better remodularization compared to rest of considered alternates. It also shows significant improvement over techniques based on only lexical or structural information. Thus this approach can be very useful to improve the quality of the software whose remodularization quality deteriorates beyond accepted level. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Amarjeet; Chhabra, Jitender Kumar] Natl Inst Technol, Dept Comp Engn, Kurukshetra 136119, Haryana, India.
C3 National Institute of Technology (NIT System); National Institute of
   Technology Kurukshetra
RP Amarjeet (corresponding author), Natl Inst Technol, Dept Comp Engn, Kurukshetra 136119, Haryana, India.
EM amarjeetnitkkr@gmail.com; jitenderchhabra@gmail.com
RI Prajapati, Amarjeet/AAD-4953-2020; Chhabra, Jitender Kumar/A-1026-2016
OI Prajapati, Amarjeet/0000-0003-1466-9023; Chhabra, Jitender
   Kumar/0000-0002-2257-0982
CR Abdeen H., 2011, 2011 18th Working Conference on Reverse Engineering, P394, DOI 10.1109/WCRE.2011.55
   Abdeen H, 2013, WORK CONF REVERSE EN, P212, DOI 10.1109/WCRE.2013.6671296
   Abdeen H, 2009, WORK CONF REVERSE EN, P103, DOI 10.1109/WCRE.2009.13
   Abreu FB, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P47, DOI 10.1109/CSMR.2001.914968
   Amarjeet, 2015, PROCEDIA COMPUT SCI, V54, P380, DOI 10.1016/j.procs.2015.06.044
   Amarjeet J. K. Chhabra, 2016, COMPUT LANG SYST STR, V21
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   [Anonymous], 2008, EM ALGORITHM EXTENSI
   [Anonymous], 1992, ADAPTATION NATURAL A, DOI DOI 10.7551/MITPRESS/1090.001.0001
   [Anonymous], P 6 WORK C REV ENG
   [Anonymous], 2001, 7 IEEE INT SOFTWARE, DOI [10.1109/metric.2001.915530, DOI 10.1109/METRIC.2001.915530]
   Anquetil N, 2011, EUR CON SFTWR MTNCE, P279, DOI 10.1109/CSMR.2011.34
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Atkinson DC, 2005, 12TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P663, DOI 10.1109/APSEC.2005.76
   Barros MD, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1205, DOI 10.1145/2330163.2330330
   Barros MD, 2015, INFORM SOFTWARE TECH, V57, P684, DOI 10.1016/j.infsof.2014.07.015
   Bavota Gabriele, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P75, DOI 10.1007/978-3-642-33119-0_7
   Bavota G., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P195, DOI 10.1109/WCRE.2010.29
   Bavota G., 2013, RECOMMEND SYST SOFTW, P387
   Bavota G, 2014, EMPIR SOFTW ENG, V19, P1617, DOI 10.1007/s10664-013-9256-x
   Bavota G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P692, DOI 10.1109/ICSE.2013.6606615
   Bavota G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559935
   Bavota G, 2013, EMPIR SOFTW ENG, V18, P901, DOI 10.1007/s10664-012-9226-8
   Bavota G, 2011, J SYST SOFTWARE, V84, P397, DOI 10.1016/j.jss.2010.11.918
   Beck F., 2011, P ESEC FSE 11
   Briand L, 1997, PROC INT CONF SOFTW, P412, DOI 10.1145/253228.253367
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Brito e Abreu F., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P13, DOI 10.1109/CSMR.2000.827300
   Chhabra JK, 2004, INFORM SOFTWARE TECH, V46, P689, DOI 10.1016/j.infsof.2004.01.001
   Chhabra JK, 2003, INFORM SOFTWARE TECH, V45, P539, DOI [10.1016/SO950-5849(03)00033-8, 10.1016/S0950-5849(03)00033-8]
   Chong CY, 2015, J SYST SOFTWARE, V110, P28, DOI 10.1016/j.jss.2015.08.014
   Corazza A, 2016, EMPIR SOFTW ENG, V21, P72, DOI 10.1007/s10664-014-9347-3
   Corazza A, 2011, EUR CON SFTWR MTNCE, P35, DOI 10.1109/CSMR.2011.8
   Corazza A, 2010, EUR CON SFTWR MTNCE, P88, DOI 10.1109/CSMR.2010.36
   Cotilla-Sanchez E, 2013, IEEE T POWER SYST, V28, P4979, DOI 10.1109/TPWRS.2013.2263886
   De Lucia A, 2008, PROC IEEE INT CONF S, P27, DOI 10.1109/ICSM.2008.4658051
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Devroye L., 1986, Non-Uniform Random Variate Generation
   Di Penta M, 2005, J SYST SOFTWARE, V77, P225, DOI 10.1016/j.jss.2004.03.033
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Erdemir U, 2014, J SYST SOFTWARE, V97, P156, DOI 10.1016/j.jss.2014.07.038
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Gupta V., 2011, J BRAZ COMPUT SOC, V18, P251
   Gupta V, 2009, J COMPUT SCI TECH-CH, V24, P273, DOI 10.1007/s11390-009-9223-6
   Harman M., 2002, GEN EV COMP C GECCO, P1351
   Hasheminejad SMH, 2015, INFORM SOFTWARE TECH, V57, P329, DOI 10.1016/j.infsof.2014.05.013
   Hitz M., 2005, P INT S APPL CORP CO, V1
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Letouzey JL, 2012, IEEE SOFTWARE, V29, P44, DOI 10.1109/MS.2012.129
   Maffort C., 2015, MINING ARCHITECTURAL, P1
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Moses L.E., 1986, THINK EXPLAIN STAT
   O'Keeffe M., 2016, P EUR C SOFTW MAINT, P249
   Olszak A, 2012, SCI COMPUT PROGRAM, V77, P131, DOI 10.1016/j.scico.2010.10.007
   Ouni A, 2015, J SYST SOFTWARE, V105, P18, DOI 10.1016/j.jss.2015.03.040
   Patel C, 2009, EUR CON SFTWR MTNCE, P27, DOI 10.1109/CSMR.2009.62
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Prajapati A., 2015, J KING SAUD U COMPUT
   Ramírez A, 2015, INFORM SCIENCES, V305, P234, DOI 10.1016/j.ins.2015.01.017
   Risi M., 2011, FORM ASP COMPUT, V24, P307
   Saeidi AM, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P429, DOI 10.1109/SANER.2015.7081853
   Scanniello Giuseppe, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P180, DOI 10.1109/ICPC.2010.17
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Serban G., 2007, 22nd Int. Symp. on Computer and Information Sciences (ISCIS), P1
   Takagi H, 2001, P IEEE, V89, P1275, DOI 10.1109/5.949485
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
   Wu JW, 2005, PROC IEEE INT CONF S, P525
   Xu Rui, 2010, IEEE Rev Biomed Eng, V3, P120, DOI 10.1109/RBME.2010.2083647
   Yates R. B., 1999, MODERN INFORM RETRIE
NR 76
TC 47
Z9 47
U1 0
U2 19
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2017
VL 82
BP 96
EP 120
DI 10.1016/j.infsof.2016.09.011
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED9CE
UT WOS:000389167000006
DA 2024-07-18
ER

PT J
AU Awad, A
   Zaki, NM
   Di Francescomarino, C
AF Awad, Ahmed
   Zaki, Nesma M.
   Di Francescomarino, Chiara
TI Analyzing and repairing overlapping work items in process logs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Process logs; Humans work patterns; Performance measurement; Business
   processes; Log analysis
ID PERFORMANCE; MODELS
AB Context In real life logs, it often happens that some human resources appear to have more than one task active concurrently, thus resulting in human multitasking. However, tasks that require some intellectual effort cannot be executed in parallel in real life. This misalignment between what actually happens and what is registered in the logs, however, is not reflected in the output of the different log-based performance measuring approaches, thus compromising the quality of the computed metrics.
   Objective: We introduce a novel approach to rewrite events in process execution logs for multitasking human resources. The approach is based on two typical human work patterns, the queuing and stacking patterns. The rewrite aims at serializing multi tasks for the same resource based on the work pattern detected. Thus, possibly better performance measures can be obtained.
   Method: We defined a quantitative approach to detect multitasking human performers and resolve them by serialization. The approach is prototyped and evaluated on a set of real-life software development process logs.
   Results: Our results show that the proposed approach contributes to find better results when log based performance analysis techniques are applied to the repaired logs in comparison to the original logs.
   Conclusions: The work shows that based on the human work patterns, stacking or queuing, logs can be enhanced, so as to be possibly closer to what happened in the reality and to allow for more accurate performance measures. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Awad, Ahmed; Zaki, Nesma M.] Cairo Univ, Fac Comp & Informat, Giza, Egypt.
   [Di Francescomarino, Chiara] Fdn Bruno Kessler, Trento, Italy.
C3 Egyptian Knowledge Bank (EKB); Cairo University; Fondazione Bruno
   Kessler
RP Awad, A (corresponding author), Cairo Univ, Fac Comp & Informat, Giza, Egypt.
EM a.gaafar@fci-cu.edu.eg; n.mostafa@fci-cu.edu.eg; dfmchiara@fbk.eu
RI Awad, Ahmed/C-8350-2018
OI Awad, Ahmed/0000-0003-1879-1026
CR Adriansyah A., 2009, THESIS
   ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   [Anonymous], 2005, P SIGCHI C HUM FACT, DOI DOI 10.1145/1054972.1055017
   [Anonymous], 2013, INCIDENT MANAGEMENT
   [Anonymous], LNBIP
   [Anonymous], 2015, REAL LOGS USED EVALU
   [Anonymous], 2007, THESIS
   Barabási AL, 2005, NATURE, V435, P207, DOI 10.1038/nature03459
   Begicheva A.K., 2015, [Моделирование и анализ информационных систем, Modelirovanie i analiz informatsionnykh sistem], V22, P392, DOI 10.18255/1818-1015-2015-3-392-403
   Bertoli Piergiorgio, 2013, AI*IA 2013: Advances in Artificial Intelligence. XIIIth International Conference of the Italian Association for Artificial Intelligence. Proceedings: LNCS 8249, P469, DOI 10.1007/978-3-319-03524-6_40
   Di Francescomarino C, 2015, LECT NOTES COMPUT SC, V9097, P314, DOI 10.1007/978-3-319-19069-3_20
   Dux PE, 2009, NEURON, V63, P127, DOI 10.1016/j.neuron.2009.06.005
   Fahland D, 2012, LECT NOTES COMPUT SC, V7481, P229, DOI 10.1007/978-3-642-32885-5_19
   Konopka M, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON CONTEXT FOR SOFTWARE DEVELOPMENT, P13, DOI 10.1109/CSD.2015.10
   Nakatumba J., 2013, Resource-aware business process management: analysis and support
   Nakatumba J, 2010, LECT NOTES BUS INF P, V43, P69
   OConaill B., 1995, C COMP HUM FACT COMP, P262, DOI [10.1145/223355.223665., DOI 10.1145/223355.223665, 10.1145/223355.223665]
   Parmenter D., 2010, Key performance indicators: Developing, implementing and using winning kpis
   Popova V, 2011, APPL INTELL, V34, P226, DOI 10.1007/s10489-009-0192-9
   Rogge-Solti A, 2013, LECT NOTES BUS INF P, V165, P129
   Rogge-Solti A, 2013, LECT NOTES COMPUT SC, V8186, P705, DOI 10.1007/978-3-642-41033-8_89
   Rubinstein JS, 2001, J EXP PSYCHOL HUMAN, V27, P763, DOI 10.1037//0096-1523.27.4.763
   Russell N, 2005, LECT NOTES COMPUT SC, V3520, P216
   Suriadi S., 2014, TECHNICAL REPORT
   van der Aalst W, 2012, WIRES DATA MIN KNOWL, V2, P182, DOI 10.1002/widm.1045
   van der Aalst WMP, 2002, LECT NOTES COMPUT SC, V2480, P45
   van Dongen BF, 2010, LECT NOTES BUS INF P, V43, P158
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zaki N.M., 2015, AICCSA 2015, V2015
   Zaki N.M., 2015, APIEL PROTOTYPE
NR 30
TC 5
Z9 5
U1 1
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2016
VL 80
BP 110
EP 123
DI 10.1016/j.infsof.2016.08.010
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EA2GM
UT WOS:000386410800007
DA 2024-07-18
ER

PT J
AU Gong, DW
   Zhang, C
   Tian, T
   Li, Z
AF Gong, Dunwei
   Zhang, Chen
   Tian, Tian
   Li, Zheng
TI Reducing scheduling sequences of message-passing parallel programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Message-passing parallel program; Reduction of
   scheduling sequences; Statement coverage; Equivalent class
ID MODEL
AB Context: Message-passing parallel programs are commonly used parallel programs. Various scheduling sequences contained in these programs, however, increase the difficulty of testing them. Therefore, reducing scheduling sequences by using appropriate approaches can greatly improve the efficiency of testing these programs.
   Objective: This paper focuses on the problem of reducing scheduling sequences of message-passing parallel programs, and presents a novel approach to reducing scheduling sequences.
   Method: In this approach, scheduling sequences that affect the target statement are first determined based on the relation between a scheduling sequence and the execution of the target statement. Then, these scheduling sequences are divided into a number of equivalent classes according to the execution of the target statement. Finally, for each scheduling sequence in the same equivalent class, the values of the two proposed indexes are calculated, and the scheduling sequence with the minimal comprehensive value is selected as the one after reduction.
   Results: To evaluate the performance of the proposed approach, it is applied to test 12 typical message passing parallel programs. The experimental results show that the proposed approach reduces 63% scheduling sequences on average. And compared with the method without reduction, and the method with randomly selecting scheduling sequences, the proposed approach shortens 67% and 52% execution time of a program for covering the target statement on average, respectively.
   Conclusion: The proposed approach can greatly reduce scheduling sequences, and shorten execution time of a program for covering the target statement, hence improving the efficiency of testing the program. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Gong, Dunwei; Zhang, Chen] China Univ Min & Technol, Sch Informat & Elect Engn, Xuzhou 221116, Jiangsu, Peoples R China.
   [Gong, Dunwei] LanZhou Univ Technol, Sch Elect Engn & Informat Engn, Lanzhou 730000, Gansu, Peoples R China.
   [Tian, Tian] Shandong Jianzhu Univ, Sch Comp Sci & Technol, Jinan 250101, Shandong, Peoples R China.
   [Li, Zheng] Beijing Univ Chem Technol, Coll Informat Sci & Technol, Beijing 100029, Peoples R China.
C3 China University of Mining & Technology; Lanzhou University of
   Technology; Shandong Jianzhu University; Beijing University of Chemical
   Technology
RP Gong, DW (corresponding author), China Univ Min & Technol, Sch Informat & Elect Engn, Xuzhou 221116, Jiangsu, Peoples R China.; Gong, DW (corresponding author), LanZhou Univ Technol, Sch Elect Engn & Informat Engn, Lanzhou 730000, Gansu, Peoples R China.
EM 340355960@qq.com
RI Li, Zheng/L-8594-2015
OI Li, Zheng/0000-0002-3938-7033
FU National Natural Science Foundation of China [61375067, 61503220]
FX This work is jointly supported by National Natural Science Foundation of
   China with grant No. 61375067 and No. 61503220.
CR Alexeyev A. A., 1995, Proceedings of the the 3rd International Specialist Workshop on Nonlinear Dynamics of Electronic Systems. NDES '95, P95, DOI 10.1145/215399.215427
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 1990, Software testing techniques {
   Carver RH, 2010, CONCURR COMP-PRACT E, V22, P2445, DOI 10.1002/cpe.1573
   Chen G., 2011, PARALLEL COMPUTING S
   CHEN GL, 2004, PARALLEL ALGORITHM P
   Chen QC, 2009, LECT NOTES COMPUT SC, V5503, P425
   Cheng J., 1993, Automated and Algorithmic Debugging. First International Workshop, AADEBUG '93 Proceedings, P223, DOI 10.1007/BFb0019411
   Christakis M., 2011, DETECTION ASYNCHRONO, P5
   Cormen T H., 1996, ACM Computing Surveys (CSUR), V28, P208, DOI DOI 10.1145/242224.242490
   CULLER D, 1993, SIGPLAN NOTICES, V28, P1, DOI 10.1145/173284.155333
   Debbarma M., 2012, 2012 INT C COMP COMM, P1
   Du Z.H, 2001, PARALLEL PROGRAMMING
   Ferguson R, 1996, INFORM SOFTWARE TECH, V38, P343, DOI 10.1016/0950-5849(95)01064-5
   Ferrer J, 2013, INFORM SOFTWARE TECH, V55, P2125, DOI 10.1016/j.infsof.2013.07.007
   Flanagan C, 2005, ACM SIGPLAN NOTICES, V40, P110, DOI 10.1145/1047659.1040315
   Gwan-Hwan Hwang, 2012, 2012 IEEE Sixth International Symposium on Theoretical Aspects of Software Engineering (TASE 2012), P263, DOI 10.1109/TASE.2012.21
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hambrusch S. E., 1994, Proceedings. Sixth IEEE Symposium on Parallel and Distributed Processing (Cat. No.94TH0675-9), P544, DOI 10.1109/SPDP.1994.346124
   Ino F, 2001, ACM SIGPLAN NOTICES, V36, P133, DOI 10.1145/568014.379592
   Krammer B., 2006, CORRECTNESS CHECKING, P105
   Lei Y, 2006, IEEE T SOFTWARE ENG, V32, P382, DOI 10.1109/TSE.2006.56
   [廖名学 LIAO Mingxue], 2008, [电子学报, Acta Electronica Sinica], V36, P402
   Liu Hui, 2005, Journal of University of Electronic Science and Technology of China, V34, P229
   MA LP, 2000, STAT DATA STANDARDIZ, P34
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mi-Young Park, 2007, Advances in Grid and Pervasive Computing. Second International Conference, GPC 2007. Proceedings (Lecture Notes in Computer Science Vol.4459), P322
   Miné A, 2011, LECT NOTES COMPUT SC, V6602, P398, DOI 10.1007/978-3-642-19718-5_21
   Moritz C. A., 1998, Performance Evaluation Review, V26, P254, DOI 10.1145/277858.277933
   Munson J., 2003, Software engineering measurement
   NEJMEH BA, 1988, COMMUN ACM, V31, P188, DOI 10.1145/42372.42379
   OTTENSTEIN KJ, 1984, SIGPLAN NOTICES, V19, P177, DOI 10.1145/390011.808263
   Pan D., 2009, THESIS
   Papadakis M, 2012, INFORM SOFTWARE TECH, V54, P915, DOI 10.1016/j.infsof.2012.02.004
   Schimmel J, 2013, 2013 8TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST (AST), P40, DOI 10.1109/IWAST.2013.6595789
   Sen A, 2010, INT HIGH LEVEL DESIG, P75, DOI 10.1109/HLDVT.2010.5496659
   Shivaprasad S., 2013, INT J COMPUT APPL, V67, P41
   Siegel SF, 2011, ACM SIGPLAN NOTICES, V46, P309, DOI 10.1145/2038037.1941603
   Souza SRS, 2008, CONCURR COMP-PRACT E, V20, P1893, DOI 10.1002/cpe.1297
   Souza S.R.S., 2011, P WORKSH PAR DISTR S, P1
   Thakur R, 2005, INT J HIGH PERFORM C, V19, P49, DOI 10.1177/1094342005051521
   Tian T, 2014, AUT SOFTW ENG, V22, P1
   Tian T., 2014, J ZHEJIANG U ENG SCI, V5, P22
   Vakkalanka S, 2008, LECT NOTES COMPUT SC, V5205, P248, DOI 10.1007/978-3-540-87475-1_34
   Vetter JereyS., 2000, Proceedings Supercomputing 2000, November 4-10, 2000, Dallas, Texas, USA. IEEE Computer Society, P51
   Yang C.-S. D., 1998, Software Engineering Notes, V23, P153, DOI 10.1145/271775.271804
   Yang CSD, 2003, SOFTW TEST VERIF REL, V13, P3, DOI 10.1002/stvr.262
   Zhong Caimao., 2014, THESIS
NR 48
TC 10
Z9 12
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2016
VL 80
BP 217
EP 230
DI 10.1016/j.infsof.2016.09.003
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EA2GM
UT WOS:000386410800013
DA 2024-07-18
ER

PT J
AU Rodrigues, I
   Ribeiro, M
   Medeiros, F
   Borba, P
   Fonseca, B
   Gheyi, R
AF Rodrigues, Iran
   Ribeiro, Marcio
   Medeiros, Flavio
   Borba, Paulo
   Fonseca, Baldoino
   Gheyi, Rohit
TI Assessing fine-grained feature dependencies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Preprocessor; Software family; Feature dependency
AB Context: Maintaining software families is not a trivial task. Developers commonly introduce bugs when they do not consider existing dependencies among features. When such implementations share program elements, such as variables and functions, inadvertently using these elements may result in bugs. In this context, previous work focuses only on the occurrence of intraprocedural dependencies, that is, when features share program elements within a function. But at the same time, we still lack studies investigating dependencies that transcend the boundaries of a function, since these cases might cause bugs as well.
   Objective: This work assesses to what extent feature dependencies exist in actual software families, answering research questions regarding the occurrence of intraprocedural, global, and interprocedural dependencies and their characteristics.
   Method: We perform an empirical study covering 40 software families of different domains and sizes. We use a variability-aware parser to analyze families source code while retaining all variability information.
   Results: Intraprocedural and interprocedural feature dependencies are common in the families we analyze: more than half of functions with preprocessor directives have intraprocedural dependencies, while over a quarter of all functions have interprocedural dependencies. The median depth of interprocedural dependencies is 9.
   Conclusion: Given these dependencies are rather common, there is a need for tools and techniques to raise developers awareness in order to minimize or avoid problems when maintaining code in the presence of such dependencies. Problems regarding interprocedural dependencies with high depths might be harder to detect and fix. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Rodrigues, Iran; Ribeiro, Marcio; Fonseca, Baldoino] Univ Fed Alagoas, Maceio, Brazil.
   [Borba, Paulo] Univ Fed Pernambuco, Recife, PE, Brazil.
   [Medeiros, Flavio; Gheyi, Rohit] Univ Fed Campina Grande, Campina Grande, Brazil.
C3 Universidade Federal de Alagoas; Universidade Federal de Pernambuco;
   Universidade Federal de Campina Grande
RP Rodrigues, I (corresponding author), Univ Fed Alagoas, Maceio, Brazil.
EM irgj@ic.ufal.br; marcio@ic.ufal.br; flaviomedeiros@copin.ufcg.edu.br;
   phmb@cin.ufpe.br; baldoino@ic.ufal.br; rohit@dsc.ufcg.edu.br
RI Fonseca, Baldoino/JUV-2819-2023; Borba, Paulo/C-5617-2013; Ribeiro,
   Marcio/C-8356-2017
OI Fonseca, Baldoino/0000-0002-0730-0319; Borba, Paulo/0000-0002-0381-2843;
   Ribeiro, Marcio/0000-0002-4293-4261; Gheyi, Rohit/0000-0002-5562-4449
FU CNPq [460883/2014-3, 573964/2008-4, 477943/2013-6, 306610/2013-2,
   APQ-1037-1.03/08]; CAPES [175956]; project DEVASSES (European Union
   Seventh Framework Programme) [PIRSES-GA-2013-612569]
FX This work has been supported by CNPq 460883/2014-3, 573964/2008-4
   (INES), 477943/2013-6, 306610/2013-2, and APQ-1037-1.03/08, CAPES
   175956, project DEVASSES (European Union Seventh Framework Programme,
   agreement PIRSES-GA-2013-612569).
CR Abal I., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, ASE '14, P421
   [Anonymous], SOFTWARE SYSTEMS MOD
   [Anonymous], 2013, P INT C GEN PROGR CO
   [Anonymous], P 14 INT C GEN PROGR
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Apel Sven., 2013, P 5 INT WORKSHOP FEA, P1, DOI [10.1145/2528265.2528267, DOI 10.1145/2528265.2528267]
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Cafeo B. B. P., 2012, 2012 26th Brazilian Symposium on Software Engineering (SBES), P141, DOI 10.1109/SBES.2012.23
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Ernst MD, 2002, IEEE T SOFTWARE ENG, V28, P1146, DOI 10.1109/TSE.2002.1158288
   Favre J. M., 1995, 9 EUR WORKSH SOFTW M
   Feigenspan J, 2013, EMPIR SOFTW ENG, V18, P699, DOI 10.1007/s10664-012-9208-x
   Garrido A., 2005, P INT C SOFTW MAINT
   Gazzillo P, 2012, ACM SIGPLAN NOTICES, V47, P323, DOI 10.1145/2345156.2254103
   Hunsen C., 2015, J EMPIR SOFTW ENG
   Kampstra P., 2008, Journal of Statistical Software, V28, P1, DOI [10.18637/jss.v028.c01, DOI 10.18637/JSS.V028.C01, 10.18637/jss.v028.c01.papers3://publication/uuid/692988CE-7E10-498E-96EC-E7A0CE3620A3]
   Kastner C., 2011, P ACM SIGPLAN OBJ OR
   Kenner A., 2010, P 2 INT WORKSH FEAT, P25, DOI DOI 10.1145/1868688.1868693
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Krone M., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P49, DOI 10.1109/ICSE.1994.296765
   Liebig Jorg, 2011, AOSD 11
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Maletic J. I., 2004, "Fourth International Workshop on Adoption-Centric Software Engineering (ACSE 2004)" W6S Workshop - 26th International Conference on Software Engineering, P80, DOI 10.1049/ic:20040255
   Medeiros Flavio, 2015, DAGSTUHL ARTIFACTS S, V1, DOI [10.4230/DARTS.1.1.7, DOI 10.4230/DARTS.1.1.7]
   Melo J, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P3, DOI 10.1145/2866614.2866615
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Prehofer C, 1997, LECT NOTES COMPUT SC, V1241, P419
   Queiroz F., 2012, P 6 LAT AM WORKSH AS
   Ribeiro M., 2010, ONW 2010 AFF ACM SIG, P11, DOI DOI 10.1145/1869542.1869545
   Ribeiro M., 2012, COMPANION VOLUME 11, P23
   Ribeiro M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P989, DOI 10.1145/2568225.2568289
   Ribeiro M, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P23
   RYDER BG, 1979, IEEE T SOFTWARE ENG, V5, P216, DOI 10.1109/TSE.1979.234183
   SPENCER H, 1992, PROCEEDINGS OF THE SUMMER 1992 USENIX CONFERENCE, P185
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Thaker Sahil., 2007, P 6 INT C GENERATIVE, P95
   Vandervieren E., 2004, COMPSTAT 2004 P COMP, P1933
   Wohlin C., 2012, Experimentation in Software Engineering
   Wulf William, 1973, ACM Sigplan notices, V8, P28, DOI [10.1145/953353.953355, DOI 10.1145/953353.953355]
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 40
TC 8
Z9 8
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2016
VL 78
BP 27
EP 52
DI 10.1016/j.infsof.2016.05.006
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR0YZ
UT WOS:000379634100002
DA 2024-07-18
ER

PT J
AU Pourali, P
   Toeroe, M
   Khendek, F
AF Pourali, Parsa
   Toeroe, Maria
   Khendek, Ferhat
TI Pattern based configuration generation for highly available COTS
   components based systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE High availability; Service Availability Forum; Availability Management
   Framework; Configurations generation; Configuration design patterns;
   Availability analysis
AB Context: Service availability is an important quality factor that distinguishes between providers. High availability is achieved when the service is available at least 99.999% of the time. The Service Availability Forum has defined several middleware services, among them the Availability Management Framework (AMF) aims at ensuring the high availability of services provided by applications under its control. AMF requires a configuration. The design of an AMF configuration is complex and error prone. For improving the quality of such configurations, an automated generation technique has been proposed in the literature. However, this technique may generate several configurations among which some may not meet the required level of availability. Therefore, the generated configurations are evaluated using availability analysis tools to select an appropriate one for deployment.
   Objective: Instead of generating configurations, analyze them and select one that meets the required level of availability if any, we target directly configurations that are estimated to satisfy the required level of availability.
   Method: We investigated the different aspects/attributes of an AMF configuration that may affect service recovery when a failure happens to come up with configuration design patterns and integrate them into an enhanced configuration generation technique.
   Results: A set of configuration design patterns and two lightweight methods for availability estimation have been defined. These configuration design patterns and analysis methods are embedded into an enhanced configuration generation technique to target only the configurations that are estimated to satisfy the required level of availability or the configuration that is the closest to the required level of availability when it is not possible to meet the requirements.
   Conclusion: We conclude it is possible to target directly the best configurations in terms of estimated availability using configuration design patterns and estimation methods. The enhanced configuration generation technique is less resource and time consuming than related approaches. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Pourali, Parsa] Univ Waterloo, Elect & Comp Engn, Waterloo, ON N2L 3G1, Canada.
   [Toeroe, Maria] Ericsson Canada Inc, Montreal, PQ, Canada.
   [Khendek, Ferhat] Concordia Univ, Elect & Comp Engn, Montreal, PQ, Canada.
C3 University of Waterloo; Ericsson; Concordia University - Canada
RP Khendek, F (corresponding author), Concordia Univ, Elect & Comp Engn, Montreal, PQ, Canada.
EM ppourali@uwaterloo.ca; Maria.Toeroe@ericsson.com;
   ferhat.khendek@concordia.ca
OI Khendek, Ferhat/0000-0002-3337-9841
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Ericsson [IRCPJ 425135 - 10]
FX This work has been partially supported by the Natural Sciences and
   Engineering Research Council of Canada (NSERC) and Ericsson (grant no.
   IRCPJ 425135 - 10).
CR Abbasipour M., 2014, P 15 INT C INF REUS
   [Anonymous], 1998, IMPR SYST AV, P1
   [Anonymous], 1992, RELIABILITY EVALUATI
   Chung L., 2012, P INT WORKSH REQ PAT
   Delac G, 2015, IEEE T DEPEND SECURE, V12, P136, DOI 10.1109/TDSC.2014.2327971
   eventhelix, SYST REL AV
   Febrero F, 2016, INFORM SOFTWARE TECH, V70, P18, DOI 10.1016/j.infsof.2015.09.006
   GERMAN R, 1995, PERFORM EVALUATION, V24, P69, DOI [10.1016/0166-5316(95)00010-U, 10.1109/PNPM.1995.524333]
   Immonen A, 2008, SOFTW SYST MODEL, V7, P49, DOI 10.1007/s10270-006-0040-x
   Janakiraman G, 2003, P 1 WORKSH DES SELF
   Kanso Ali, 2013, System Analysis and Modeling: Theory and Practice. 7th International Workshop, SAM 2012. Revised Selected Papers, P229, DOI 10.1007/978-3-642-36757-1_14
   Kanso A, 2013, CONCURR COMP-PRACT E, V25, P265, DOI 10.1002/cpe.2805
   Kanso A., 2012, THESIS CONCORDIA U
   Kanso A, 2014, COMPUTING, V96, P975, DOI 10.1007/s00607-013-0361-x
   KIMURA M, 1995, MATH COMPUT MODEL, V22, P149, DOI 10.1016/0895-7177(95)00191-4
   Littlewood B., 1973, Applied Statistics, V22, P332, DOI 10.2307/2346781
   Marsan M., 1987, PETRI NETS DETERMINI, V226
   Pourali Parsa, 2014, 2014 Ninth International Conference on Availability, Reliability and Security (ARES). Proceedings, P104, DOI 10.1109/ARES.2014.20
   SAForum (Service Availability Forum), 2011, APPL INT SPEC SOFTW
   Salehi Pejman, 2012, THESIS CONCORDIA U
   Service Availability Forum, 2011, APPL INT SPEC AV MAN
   Toeroe M., 2012, Service Availability: Principles and Practice, VFirst
   Wang DZ, 2005, LECT NOTES COMPUT SC, V3694, P107
   Xie W, 2003, 2003 IEEE INTERNATIONAL CONFERENCE ON COMMUNICATIONS, VOLS 1-5, P1796
   Zimmermann A., 2012, 2012 6th International ICST Conference on Performance Evaluation Methodologies and Tools (VALUETOOLS 2012). Proceedings, P54, DOI 10.4108/icst.valuetools.2012.250263
NR 25
TC 3
Z9 3
U1 1
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2016
VL 74
BP 143
EP 159
DI 10.1016/j.infsof.2016.02.008
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DJ7BX
UT WOS:000374368000010
DA 2024-07-18
ER

PT J
AU de la Vara, JL
   Ruiz, A
   Attwood, K
   Espinoza, H
   Panesar-Walawege, RK
   López, A
   del Río, I
   Kelly, T
AF Luis de la Vara, Jose
   Ruiz, Alejandra
   Attwood, Katrina
   Espinoza, Huascar
   Panesar-Walawege, Rajwinder Kaur
   Lopez, Angel
   del Rio, Idoya
   Kelly, Tim
TI Model-based specification of safety compliance needs for critical
   systems: A holistic generic metamodel
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Safety-critical system; Safety standard; Safety compliance; Safety
   assurance; Safety certification; Reference assurance framework
ID TOOL-SUPPORT; TRACEABILITY; CERTIFICATION; STANDARDS
AB Context: Many critical systems must comply with safety standards as a way of providing assurance that they do not pose undue risks to people, property, or the environment. Safety compliance is a very demanding activity, as the standards can consist of hundreds of pages and practitioners typically have to show the fulfilment of thousands of safety-related criteria. Furthermore, the text of the standards can be ambiguous, inconsistent, and hard to understand, making it difficult to determine how to effectively structure and manage safety compliance information. These issues become even more challenging when a system is intended to be reused in another application domain with different applicable standards.
   Objective: This paper aims to resolve these issues by providing a metamodel for the specification of safety compliance needs for critical systems.
   Method: The metamodel is holistic and generic, and abstracts common concepts for demonstrating safety compliance from different standards and application domains. Its application results in the specification of "reference assurance frameworks" for safety-critical systems, which correspond to a model of the safety criteria of a given standard. For validating the metamodel with safety standards, parts of several standards have been modelled by both academic and industry personnel, and other standards have been analysed. We further augment this with feedback from practitioners, including feedback during a workshop.
   Results: The results from the validation show that the metamodel can be used to specify safety compliance needs for aerospace, automotive, avionics, defence, healthcare, machinery, maritime, oil and gas, process industry, railway, and robotics. Practitioners consider that the metamodel can meet their needs and find benefits in its use.
   Conclusion: The metamodel supports the specification of safety compliance needs for most critical computer-based and software-intensive systems. The resulting models can provide an effective means of structuring and managing safety compliance information. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Luis de la Vara, Jose] Univ Carlos III Madrid, Dept Comp Sci, Avda Univ 30, Madrid 28911, Spain.
   [Ruiz, Alejandra; Espinoza, Huascar; Lopez, Angel; del Rio, Idoya] Tecnalia, ICT European Software Inst, Parque Tecnol Ed 700, E-48160 Derio, Spain.
   [Attwood, Katrina; Kelly, Tim] Univ York, Dept Comp Sci, York YO10 5GH, N Yorkshire, England.
   [Panesar-Walawege, Rajwinder Kaur] Meta Zen Consulting, Unit 50-12165,75 Ave, Surrey, BC V3W 0W7, Canada.
C3 Universidad Carlos III de Madrid; University of York - UK
RP de la Vara, JL (corresponding author), Univ Carlos III Madrid, Dept Comp Sci, Avda Univ 30, Madrid 28911, Spain.
EM jvara@inf.uc3m.es; alejandra.ruiz@tecnalia.com;
   katrina.attwood@york.ac.uk; huascar.espinoza@tecnalia.com;
   rajwinder.panesar@gmail.com; angel.lopez@tecnalia.com;
   idoya.delrio@tecnalia.com; tim.kelly@york.ac.uk
RI de la Vara, Jose Luis/A-7678-2018
OI de la Vara, Jose Luis/0000-0003-1813-398X; Lopez Carrera,
   Angel/0000-0001-5396-7168; del Rio del Rio, Idoya/0000-0001-6164-9426;
   Ruiz, PhD Alejandra/0000-0001-7464-6291
FU FP7 programme [289011]
FX The research leading to this paper has received funding from the FP7
   programme under grant agreement no. 289011 (OPENCOSS). The authors also
   thank those OPENCOSS partners who provided input for and feedback on the
   metamodel for reference assurance frameworks and on the models created.
CR Adedjourna M., 2012, THESIS
   Alexander R., 2010, 5 SEAS DTC TECHN C
   Ankrum TS, 2005, Ninth IEEE International Symposium on High-Assurance Systems Engineering, P99, DOI 10.1109/HASE.2005.20
   Baufreton P., 2010, 5 INT C EMB REAL TIM
   Biggs G., 2014, SOFTW SYST IN PRESS
   Briand L, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559978
   Chung PWH, 2008, KNOWL-BASED SYST, V21, P332, DOI 10.1016/j.knosys.2007.11.002
   Cyra L, 2011, COMPUT STAND INTER, V33, P80, DOI 10.1016/j.csi.2010.03.007
   de la Vara Jose Luis, 2012, Computer Safety, Reliability,and Security. Proceedings of SAFECOMP 2012 Workshops: Sassur, ASCoMS, DESEC4LCCI, ERCIM/EWICS, IWDE, P64, DOI 10.1007/978-3-642-33675-1_6
   de la Vara J.L., 2014, 201418 SIM RES LAB
   de la Vara JL, 2013, LECT NOTES COMPUT SC, V8107, P69, DOI 10.1007/978-3-642-41533-3_5
   Douglas B.P., 2009, REAL TIME AGILITY HA
   eDiana Project, 2010, DEL D6 3 B SPEC CERT
   Falessi D, 2012, IEEE SOFTWARE, V29, P64, DOI 10.1109/MS.2011.116
   Ferrari Alessio, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P34, DOI 10.1007/978-3-642-37422-7_3
   Gallina B., 2014, Software Engineering Research, Management and Applications, P215
   Graydon P, 2012, IEEE SOFTWARE, V29, P50, DOI 10.1109/MS.2012.26
   Gribov V., 2013, IEEE 18 C EM TECHN F
   Habli I., 19 INT S SOFTW REL E, P7
   Holloway C.M., 2015, 23 SAF CRIT SYST S S
   Holloway CM., 2013, 31 INT SYST SAF C IS
   Katta V., 2011, 2 COMPL SYST DES MAN
   Krammer M, 2011, EUROMICRO CONF PROC, P302, DOI 10.1109/SEAA.2011.53
   Kuschnerus D., 2012, EMBEDDED REAL TIME S
   Luo YP, 2015, ADV INTELL SYST COMP, V366, P339, DOI 10.1007/978-3-319-08422-0_50
   Mäder P, 2013, IEEE SOFTWARE, V30, P58, DOI 10.1109/MS.2013.60
   Mayr A, 2011, 18TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON ENGINEERING OF COMPUTER BASED SYSTEMS (ECBS 2011), P97, DOI 10.1109/ECBS.2011.8
   McCaffery F, 2010, J SOFTW MAINT EVOL-R, V22, P255, DOI 10.1002/spip.439
   Muller J.R., 2009, INT RAILW SAF C IRSC
   Nair Sunil, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P309, DOI 10.1007/978-3-319-05843-6_23
   Nair S, 2015, INFORM SOFTWARE TECH, V60, P1, DOI 10.1016/j.infsof.2014.12.002
   Nair S, 2014, INFORM SOFTWARE TECH, V56, P689, DOI 10.1016/j.infsof.2014.03.001
   Nejati S, 2012, INFORM SOFTWARE TECH, V54, P569, DOI 10.1016/j.infsof.2012.01.005
   Olivé A, 2007, CONCEPTUAL MODELLING IN INFORMATION SYSTEMS ENGINEERING, P319, DOI 10.1007/978-3-540-72677-7_20
   OMG, 2014, SYST MOD LANG SYSML
   OMG, 2015, STRUCT ASS CAS MET S
   OPENCOSS project, 2013, DEL 4 6 IMPL REF FRA
   OPENCOSS project, 2013, DEL D4 4 COMM CERT L
   OPENCOSS project, 2015, DEL 1 4 IMPL US CAS
   Panesar-Walawege RK, 2013, INFORM SOFTWARE TECH, V55, P836, DOI 10.1016/j.infsof.2012.11.009
   Panesar-Walawege RK, 2011, LECT NOTES COMPUT SC, V6998, P362, DOI 10.1007/978-3-642-24606-7_27
   Papadopoulos Y, 1999, RELIAB ENG SYST SAFE, V63, P47, DOI 10.1016/S0951-8320(98)00015-5
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Porres I, 2013, LECT NOTES COMPUT SC, V7983, P268, DOI 10.1007/978-3-642-39259-7_22
   Regan G, 2013, COMPUT STAND INTER, V36, P3, DOI 10.1016/j.csi.2013.07.012
   Rempel P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P943, DOI 10.1145/2568225.2568290
   Rupanov V, 2014, SCI COMPUT PROGRAM, V90, P161, DOI 10.1016/j.scico.2013.10.005
   Sannier Nicolas, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P135, DOI 10.1007/978-3-319-05843-6_11
   Sojer D., 2011, 2011 6th IEEE International Symposium on Industrial Embedded Systems (SIES), P59, DOI 10.1109/SIES.2011.5953680
   Stallbaum H., 2010, Proceedings 2010 Workshop on Model-Driven Engineering, Verification, and Validation (MoDeVVa 2010), P25, DOI 10.1109/MoDeVVa.2010.21
   Uusitalo E.J., IEEE 7 INT WORKSH RE, P2
   Verhulst Eric, 2012, Computer Safety, Reliability,and Security. Proceedings of SAFECOMP 2012 Workshops: Sassur, ASCoMS, DESEC4LCCI, ERCIM/EWICS, IWDE, P92, DOI 10.1007/978-3-642-33675-1_8
   Wohlin C., 2012, Experimentation in Software Engineering
   Wu J, 2015, SOFTWARE PRACT EXPER, V45, P893, DOI 10.1002/spe.2281
   Yaping Luo, 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P192, DOI 10.1007/978-3-642-38977-1_13
   Zeller M, 2014, LECT NOTES COMPUT SC, V8696, P396, DOI 10.1007/978-3-319-10557-4_43
   Zoughbi G, 2011, SOFTW SYST MODEL, V10, P337, DOI 10.1007/s10270-010-0164-x
NR 57
TC 33
Z9 35
U1 0
U2 14
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2016
VL 72
BP 16
EP 30
DI 10.1016/j.infsof.2015.11.008
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DX9HP
UT WOS:000384704500002
DA 2024-07-18
ER

PT J
AU Trkman, M
   Mendling, J
   Krisper, M
AF Trkman, Marina
   Mendling, Jan
   Krisper, Marjan
TI Using business process models to better understand the dependencies
   among user stories
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE User story; Execution order dependency; Integration dependency; Context;
   Experiment
ID ONTOLOGY; QUALITY; SYSTEMS
AB Context: Agile software development projects often manage user requirements with models that are called user stories. Every good user story has to be independent, negotiable, valuable, estimable, small, and testable. A proper understanding of a user story also requires an understanding of its dependencies. The lack of explicit representation of such dependencies presumably leads to missing information regarding the context of a user story.
   Objective: We propose a method that facilitates better understanding of execution order and integration dependencies of user stories by making use of business process models. The method associates user stories with the corresponding business process model activity element.
   Method: We adopted a situational method engineering approach to define our proposed method. In order to provide understanding of proposed method's constructs we used ontological concepts. Our method associates a user story to an activity element. In this way, the business process model can be used to infer information about the execution order and integration dependencies of the user story. We defined three levels of association granularity: a user story can be more abstract, approximately equal to, or more detailed than its associated business process model activity element. In our experiment we evaluate each of these three levels.
   Results: Our experiment uses a between-subject design. We applied comprehension, problem-solving and recall tasks to evaluate the hypotheses. The statistical results provide support for all of the hypotheses. Accordingly, there appears to be significantly greater understanding of the execution order and integration dependencies of user stories when associated business process models are available.
   Conclusions: We addressed a problem which arises from managing user stories in software development projects and focuses on the missing context of a user story. Our method contributes to the discipline of conceptual modeling in agile development. Our experiment provides empirical insight into requirement dependencies. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Trkman, Marina; Krisper, Marjan] Univ Ljubljana, Fac Comp & Informat Sci, SI-1001 Ljubljana, Slovenia.
   [Mendling, Jan] WU Vienna Univ Econ & Business, Dept Informat Syst & Operat, Inst Informat Business, A-1020 Vienna, Austria.
C3 University of Ljubljana; Vienna University of Economics & Business
RP Trkman, M (corresponding author), Univ Ljubljana, Fac Comp & Informat Sci, Vecna Pot 113, SI-1001 Ljubljana, Slovenia.
EM marina.trkman@gmail.com; jan.mendling@wu.ac.at;
   marjan.krisper@fri.uni-lj.si
RI Trkman, Marina/G-3517-2010
OI Trkman, Marina/0000-0003-0277-5822
CR [Anonymous], REQUIREMENTS PRIORIT
   [Anonymous], INT J INFORM MANAGE
   [Anonymous], AGILE SOFTWARE FEVEL
   [Anonymous], CATALOGING INDEXING
   [Anonymous], P AUSTR C INF SYST Q
   [Anonymous], AGILE MODELING EFFEC
   [Anonymous], ADDISON WESLEY SIGNA
   [Anonymous], FUNDAMENTALS BUSINES
   [Anonymous], INT J COMPUTER APPL
   [Anonymous], 2000, COCKBURN HIGHSMITH S
   [Anonymous], BUSINESS INFORM PROC
   [Anonymous], MULTIMEDIA LEARNING
   [Anonymous], BUSINESS PROCESS DRI
   [Anonymous], XP SERIES
   [Anonymous], 2000, Kluwer international series in software engineering
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], FACULTY ORG INFORM
   [Anonymous], 2014, LECT NOTES BUSINESS
   [Anonymous], QUALITY FRAMEWORK AG
   [Anonymous], LECT NOTES BUSINESS
   [Anonymous], 2009, P 17 EUR C INF SYST
   [Anonymous], IFIP T A
   Avison D., 2006, Information Systems Development: Methodologies, Techniques and Tools, V4th, P645
   Bajec M, 2007, INFORM SOFTWARE TECH, V49, P345, DOI 10.1016/j.infsof.2006.05.007
   BATRA D, 1990, COMMUN ACM, V33, P126, DOI 10.1145/75577.75579
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   Bera P, 2014, INFORM SYST RES, V25, P401, DOI 10.1287/isre.2014.0515
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Cervone H. F., 2006, OCLC Systems & Services, V22, P256, DOI 10.1108/10650750610706970
   Cohn M, 2004, LECT NOTES COMPUT SC, V3134, P208
   Daneva M, 2013, J SYST SOFTWARE, V86, P1333, DOI 10.1016/j.jss.2012.12.046
   DaSilva CM, 2014, LONG RANGE PLANN, V47, P379, DOI 10.1016/j.lrp.2013.08.004
   Davies I, 2006, DATA KNOWL ENG, V58, P358, DOI 10.1016/j.datak.2005.07.007
   Decker B, 2007, IEEE SOFTWARE, V24, P28, DOI 10.1109/MS.2007.60
   Dijkman R, 2012, COMPUT IND, V63, P91, DOI 10.1016/j.compind.2011.12.003
   Dreiling A, 2008, DECIS SUPPORT SYST, V45, P189, DOI 10.1016/j.dss.2007.02.007
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Erl T, 2005, SERVICE ORIENTED ARC
   Field A., 2009, Discovering statistics with SPSS, V3rd
   Gemino A, 2004, REQUIR ENG, V9, P248, DOI 10.1007/s00766-004-0204-6
   Juan Li, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P62, DOI 10.1049/ic.2012.0009
   Kulshreshtha V, 2012, INT J COMPUT APPL T, V45, P28, DOI 10.1504/IJCAT.2012.050130
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   Leopold H, 2016, IEEE SOFTWARE, V33, P26, DOI 10.1109/MS.2015.81
   Leopold H, 2014, IEEE T SOFTWARE ENG, V40, P818, DOI 10.1109/TSE.2014.2327044
   Lin JY, 2014, ASIAPAC SIGN INFO PR
   Liu DR, 2004, DECIS SUPPORT SYST, V38, P399, DOI 10.1016/S0167-9236(03)00116-7
   Lohmann N, 2009, LECT NOTES COMPUT SC, V5460, P46
   LOUCOPOULOS P, 1995, INT J COOP INF SYST, V4, P45, DOI 10.1142/S0218843095000032
   Lübke D, 2008, REV: 2008 REQUIREMENTS ENGINEERING VISUALIZATION, P21, DOI 10.1109/REV.2008.8
   Maes A, 2007, DATA KNOWL ENG, V63, P701, DOI 10.1016/j.datak.2007.04.008
   Mahnic V, 2012, J SYST SOFTWARE, V85, P2086, DOI 10.1016/j.jss.2012.04.005
   Martinet AlainCharles., 2013, Epistemologie des sciences de gestion, P1
   Mendling J, 2010, INFORM SYST, V35, P467, DOI 10.1016/j.is.2009.03.009
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Mendling J, 2012, DECIS SUPPORT SYST, V53, P195, DOI 10.1016/j.dss.2011.12.013
   Milicic Ana, 2014, International Journal of Product Lifecycle Management, V7, P3, DOI 10.1504/IJPLM.2014.065456
   Ottensooser A, 2012, J SYST SOFTWARE, V85, P596, DOI 10.1016/j.jss.2011.09.023
   Paasivaara M., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P174, DOI 10.1109/ICGSE.2012.41
   Patton J., 2014, USER STORY MAPPING D
   Pivk A, 2013, TECHNOL ECON DEV ECO, V19, P237, DOI 10.3846/20294913.2013.796501
   Racheva Z., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P147, DOI 10.1109/RE.2010.27
   Recker J, 2013, EUR J INFORM SYST, V22, P673, DOI 10.1057/ejis.2012.50
   Reijers HA, 2011, IEEE T SYST MAN CY A, V41, P449, DOI 10.1109/TSMCA.2010.2087017
   Saghafi A, 2014, P ANN HICSS, P4609, DOI 10.1109/HICSS.2014.567
   Shanks G, 2003, COMMUN ACM, V46, P85, DOI 10.1145/944217.944244
   Strode DE, 2016, INFORM SYST FRONT, V18, P23, DOI 10.1007/s10796-015-9574-1
   Tam ASM, 2001, IND MANAGE DATA SYST, V101, P144, DOI 10.1108/02635570110390107
   Trkman P, 2011, BUS INFORM SYST ENG+, V3, P211, DOI 10.1007/s12599-011-0168-2
   Wagstrom P, 2006, COMMUN ACM, V49, P55, DOI 10.1145/1164394.1164420
   Wand Y, 1993, INFORM SYST J, V3, P217, DOI 10.1111/j.1365-2575.1993.tb00127.x
   Wand Y, 1996, INFORM SOFTWARE TECH, V38, P281, DOI 10.1016/0950-5849(95)01052-1
   Wieringa Roelf J., 2014, Design science methodology for information systems and software engineering, DOI DOI 10.1007/978-3-662-43839-8
   YuQing Yan, 2012, Journal of Software, V7, P544, DOI 10.4304/jsw.7.3.544-550
   Zhang YY, 2013, INFORM SOFTWARE TECH, V55, P126, DOI 10.1016/j.infsof.2012.03.007
NR 75
TC 33
Z9 38
U1 2
U2 43
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2016
VL 71
BP 58
EP 76
DI 10.1016/j.infsof.2015.10.006
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DB0RW
UT WOS:000368216200003
DA 2024-07-18
ER

PT J
AU Hassler, E
   Carver, JC
   Hale, D
   Al-Zubidy, A
AF Hassler, Edgar
   Carver, Jeffrey C.
   Hale, David
   Al-Zubidy, Ahmed
TI Identification of SLR tool needs - results of a community workshop
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic literature review; Community workshops; Research
   infrastructure; Tool features
AB Context With the increasing popularity of the Systematic Literature Review (SLR) process, there is also an increasing need for tool support. Objective:The goal of this work was to consult the software engineering researchers who conduct SLRs to identify and prioritize the necessary SLR tool features. Method: To gather information required to address this goal, we invited SLR authors to participate in an interactive 2 h workshop structured around the Nominal Group Technique. Results: The workshop outcomes indicated that Search & Selection and Collaboration are the two highest priority tool features. The results also showed that most of the high-priority features are not well-supported in current tools. Conclusion: These results support and extend the results of prior work. SLR tool authors can use these findings to guide future development efforts. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Hassler, Edgar; Hale, David] Univ Alabama, Dept Informat Syst Stat & Management Sci, Tuscaloosa, AL 35401 USA.
   [Carver, Jeffrey C.; Al-Zubidy, Ahmed] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
C3 University of Alabama System; University of Alabama Tuscaloosa;
   University of Alabama System; University of Alabama Tuscaloosa
RP Carver, JC (corresponding author), Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
EM ehassler@cba.ua.edu; carver@cs.ua.edu; dhale@ua.edu;
   aalzubidy@crimson.ua.edu
RI Carver, Jeffrey/AAM-8202-2020; Carver, Jeffrey/AFP-1987-2022
OI Carver, Jeffrey/0000-0002-7824-9151; Carver,
   Jeffrey/0000-0002-7824-9151; /0000-0003-1922-1869
FU U.S. National Science Foundation [1305395]; Direct For Computer & Info
   Scie & Enginr; Division Of Computer and Network Systems [1305395]
   Funding Source: National Science Foundation
FX This material is based upon work supported by the U.S. National Science
   Foundation under Grant no. 1305395. The authors are grateful to all
   involved in these studies, particularly the workshop participants for
   their insights and cooperation, and the EASE 2014 organizers for
   allowing us to conduct the workshop.
CR [Anonymous], 2012, Proceedings of the 2nd International Workshop on Evidential Assessment of software technologies
   Barn Balbir S., 2014, 16th International Conference on Enterprise Information Systems (ICEIS 2014). Proceedings, P440
   Carver Jeffrey C., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P203, DOI 10.1109/ESEM.2013.28
   Cruzes Daniela, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P491
   Cruzes Daniela, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P235
   Delbecq A., 1975, GROUP TECHNIQUES PRO
   Felizardo K. R., 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P174, DOI 10.1109/SBES.2011.9
   Felizardo K.R., 2010, Proc. of EASE, V10, P1
   Felizardo KR, 2012, INFORM SOFTWARE TECH, V54, P1079, DOI 10.1016/j.infsof.2012.04.003
   Felizardo KR, 2011, INT SYMP EMP SOFTWAR, P77, DOI 10.1109/ESEM.2011.16
   Fernández-Sáez AM, 2010, ICSOFT 2010: PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 2, P157
   Ghafari M., 2012, International Journal of Software Engineering Applications, V3, P13, DOI DOI 10.5121/IJSEA.2012.3202
   Hassler E., 2014, P 18 INT C EV ASS SO, P267
   Imtiaz Salma, 2013, P 17 INT C EV ASS SO, P177
   Kitchenham B., 2007, 2007001 KEEL U DURH
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Marshall Christopher, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P296, DOI 10.1109/ESEM.2013.32
   Marshall C., 2015, P INT C EV ASS SOFTW, P26
   Marshall C, 2014, P 18 INT C EV ASS SO, P1, DOI DOI 10.1145/2601248.2601270
   Tomassetti Federico, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P31, DOI 10.1049/ic.2011.0004
   Torres J. A. S., 2012, Proceedings of the 12th International Conference on Computational Science and Its Applications (ICCSA 2012), P108, DOI 10.1109/ICCSA.2012.27
   Yueming Sun, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P171, DOI 10.1049/ic.2012.0022
NR 22
TC 26
Z9 29
U1 1
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2016
VL 70
BP 122
EP 129
DI 10.1016/j.infsof.2015.10.011
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA3LC
UT WOS:000367697600009
OA hybrid
DA 2024-07-18
ER

PT J
AU Srikanth, H
   Hettiarachchi, C
   Do, H
AF Srikanth, Hema
   Hettiarachchi, Charitha
   Do, Hyunsook
TI Requirements based test prioritization using risk factors: An industrial
   study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; System testing; Test prioritization; Cloud
   application; SaaS
ID SOFTWARE
AB Context Software testing is an expensive and time-consuming process. Software engineering teams are often forced to terminate their testing efforts due to budgetary and time constraints, which inevitably lead to long term issues with quality and customer satisfaction. Test case prioritization (TCP) has shown to improve test effectiveness.
   Objective: The results of our prior work on requirements-based test prioritization showed improved rate of fault detection on industrial projects; the customer priority (CP) and the fault proneness (FP) were the biggest contributing factors to test effectiveness. The objective of this paper is to further investigate these two factors and apply prioritization based on these factors in a different domain: an enterprise level cloud application. We aim to provide an effective prioritization scheme that practitioners can implement with minimum effort. The other objective is to compare the results and the benefits of these two factors with two risk-based prioritization approaches that extract risks from the system requirements categories.
   Method: Our approach involved analyzing and assigning values to each requirement based on two important factors, CP and FP, so that the test cases for high-value requirements are prioritized earlier for execution. We also proposed two requirements-based TCP approaches that use risk information of the system.
   Results: Our results indicate that the use of CP and FP can improve the effectiveness of TCP. The results also show that the risk-based prioritization can be effective in improving the TCP.
   Conclusion: We performed an experiment on an enterprise cloud application to measure the fault detection rate of different test suites that are prioritized based on CP, FP, and risks. The results depict that all approaches outperform the random prioritization approach, which is prevalent in the industry. Furthermore, the proposed approaches can easily be used in the industry to address the schedule and budget constraints at the testing phase. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Srikanth, Hema] IBM Prod Strategy, Waltham, MA USA.
   [Hettiarachchi, Charitha] N Dakota State Univ, Comp Sci, Fargo, ND 58105 USA.
   [Do, Hyunsook] Univ N Texas, Comp Sci & Engn, Denton, TX 76203 USA.
C3 North Dakota State University Fargo; University of North Texas System;
   University of North Texas Denton
RP Do, H (corresponding author), Univ N Texas, Comp Sci & Engn, Denton, TX 76203 USA.
EM srikanth_h@us.ibm.com; charitha.hettiarachc@ndsu.edu;
   hyunsook.do@unt.edu
RI Hettiarachchi, Charitha/HRC-8530-2023
FU NSF CAREER Award [CCF-1564238]
FX We would like to thank IBM for their contributions to the research. This
   work was supported, in part, by NSF CAREER Award CCF-1564238 to
   University of North Texas. The authors wish to thank Sean Banerjee for
   his contributions to this paper.
CR Amland S, 2000, J SYST SOFTWARE, V53, P287, DOI 10.1016/S0164-1212(00)00019-4
   [Anonymous], 1990, IEEE STANDARD 610 12
   [Anonymous], 1999, 5 INT C EUROSTAR 99
   [Anonymous], 2008, AST, DOI DOI 10.1145/1370042.1370057
   [Anonymous], 2000, P C FUT SOFTW ENG IC, DOI DOI 10.1145/336512.336532
   [Anonymous], C CTR ADV STUD COLL
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], INT C SOFTW MAINT OX
   [Anonymous], 2007, P MEREP07 PALM MALL
   [Anonymous], APPROACHES COMBINED
   [Anonymous], ACM INT S SOFTW TEST
   Bach J, 1999, COMPUTER, V32, P113
   Boehm B, 2003, COMPUTER, V36, P33, DOI 10.1109/MC.2003.1185215
   Boehm B.W., 2003, SIGSOFT Software Engineering Notes, V28, P1
   Craig R.D., 2002, SYSTEMATIC SOFTWARE
   Do H, 2010, IEEE T SOFTWARE ENG, V36, P593, DOI 10.1109/TSE.2010.58
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Felderer M, 2014, INT J SOFTW TOOLS TE, V16, P559, DOI 10.1007/s10009-014-0332-3
   Ghaisas S, 2013, IEEE-ACM INT WKSP CO, P37, DOI 10.1109/CESI.2013.6618468
   Granda MF, 2014, 2014 IEEE 1ST INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING AND TESTING (RET), P39, DOI 10.1109/RET.2014.6908678
   Hettiarachchi C, 2014, INT CONF SOFTW SECUR, P157, DOI 10.1109/SERE.2014.29
   Kaner Cem., 2002, LESSONS LEARNED SOFT
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Krishnamoorthi R, 2009, INFORM SOFTWARE TECH, V51, P799, DOI 10.1016/j.infsof.2008.08.007
   Li Q, 2012, J SOFTW-EVOL PROC, V24, P783, DOI 10.1002/smr.512
   Moisiadis F, 2000, 37TH INTERNATIONAL CONFERENCE ON TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS, PROCEEDINGS, P108
   Musa J., 1999, SOFTWARE RELIABILITY
   Musa JD, 1996, COMPUTER, V29, P61, DOI 10.1109/2.544239
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Sarmiento E, 2014, 2014 IEEE 1ST INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING AND TESTING (RET), P32, DOI 10.1109/RET.2014.6908677
   Srikanth Hema, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P61, DOI 10.1109/ISSRE.2009.26
   Srikanth H., 2005, INT S EMP SOFTW ENG
   Srikanth H, 2014, SOFTW TEST VERIF REL, V24, P320, DOI 10.1002/stvr.1500
   Srikanth H, 2012, J SYST SOFTWARE, V85, P1176, DOI 10.1016/j.jss.2012.01.007
   Tahat LH, 2001, P INT COMP SOFTW APP, P489, DOI 10.1109/CMPSAC.2001.960658
   Vouk MA, 2003, WILEY SER PROB STAT, P205
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoon M., 2012, J SOFTWARE ENG APPL, V5, P823
NR 42
TC 36
Z9 37
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2016
VL 69
BP 71
EP 83
DI 10.1016/j.infsof.2015.09.002
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CW5RA
UT WOS:000365053100005
OA hybrid
DA 2024-07-18
ER

PT J
AU Abdeen, H
   Bali, K
   Sahraoui, H
   Dufour, B
AF Abdeen, Hani
   Bali, Khaled
   Sahraoui, Houari
   Dufour, Bruno
TI Learning dependency-based change impact predictors using independent
   change histories
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 40th Euromicro Conference on Software Engineering and Advanced
   Applications (SEAA)
CY AUG 27-29, 2014
CL Univ Verona, Dept Comp Sci, Verona, ITALY
SP Elsevier Informat & Software Technol Journal, EDALab s r l, Euromicro
HO Univ Verona, Dept Comp Sci
DE Change impact analysis; Impact set prediction; Change history analysis;
   Change impact graph; Software maintenance
ID BAYESIAN NETWORK
AB Context: Recent studies showed that combining present data, which are derived from the current software version, with past data, which are derived from previous software versions, can improve the accuracy of change impact predictions. However, for a specific program, existing combined techniques can rely only on version history of that program, if available, and the prediction results depend on the variety of available change impact examples.
   Objective: We propose a hybrid probabilistic approach that predicts the change impact for a software entity using, as training data, existing version histories of whatever software systems.
   Method: Change-impact predictors are learned from past change impact graphs (CIGs), extracted from the version history, along with their associations with different influencing factors of change propagation. The learning examples in CIGs are not specific to the software entities that are covered in those examples, and the change propagation influencing factors are structural and conceptual dependencies between software entities. Once our predictors are trained, they can predict change impacts regardless of the version history of the software under-analysis. We evaluate our approach using four systems in two scenarios. First, we use as training data the CIGs extracted from previous versions of the system under-analysis. Second, for each analyzed system, we use only the training data extracted from the other systems.
   Results: Our approach produces accurate predictions in terms of both precision and recall. Moreover, when training our classifiers with a large variety of CIGs extracted from the change histories of different projects, the recall scores of predicted impact sets were significantly improved.
   Conclusion: Our approach produces accurate predictions for new classes without recorded change histories, as well as for old classes. For the systems considered in our evaluation, once our approach is trained with a variety of CIGs it can predict change impacts with good recall scores. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Abdeen, Hani; Bali, Khaled; Sahraoui, Houari; Dufour, Bruno] Univ Montreal, DIRO, Montreal, PQ H3C 3J7, Canada.
C3 Universite de Montreal
RP Abdeen, H (corresponding author), Univ Montreal, DIRO, Montreal, PQ H3C 3J7, Canada.
EM hani.abdeen@gmail.com; balikhal@iro.umontreal.ca;
   sahraouh@iro.umontreal.ca; dufour@iro.umontreal.ca
CR Abdi MK, 2009, P INT COMP SOFTW APP, P234, DOI 10.1109/COMPSAC.2009.38
   [Anonymous], P INT C PROGR COMPR
   Beszedes A, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P103
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Breech B, 2006, PROC IEEE INT CONF S, P55
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Canfora Gerardo., 2010, P IEEE INT C SOFTWAR, P1
   Chaumun MA, 2002, SCI COMPUT PROGRAM, V45, P155, DOI 10.1016/S0167-6423(02)00058-8
   Chaumun MA, 2002, ADVANCES IN SOFTWARE ENGINEERING, P197
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Gethers M, 2012, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2012.6227172
   Guéhéneuc YG, 2004, ACM SIGPLAN NOTICES, V39, P301, DOI 10.1145/1035292.1029002
   Hassaine S., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P53, DOI 10.1109/ICSM.2011.6080772
   Hassan AE, 2004, PROC IEEE INT CONF S, P284, DOI 10.1109/ICSM.2004.1357812
   Huang L, 2007, SERA 2007: 5TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT, AND APPLICATIONS, PROCEEDINGS, P374, DOI 10.1109/SERA.2007.46
   John G. H., 1995, Uncertainty in Artificial Intelligence. Proceedings of the Eleventh Conference (1995), P338
   Kagdi H., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P119, DOI 10.1109/WCRE.2010.21
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kagdi H, 2013, EMPIR SOFTW ENG, V18, P933, DOI 10.1007/s10664-012-9233-9
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   Onisko A, 2001, INT J APPROX REASON, V27, P165, DOI 10.1016/S0888-613X(01)00039-1
   Orso A, 2004, PROC INT CONF SOFTW, P491, DOI 10.1109/ICSE.2004.1317471
   Pearl J., 1988, PROBABILISTIC REASON
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Ren X, 2006, IEEE T SOFTWARE ENG, V32, P718, DOI 10.1109/TSE.2006.90
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Singhal A., 2001, IEEE DATA ENG B, V24, P35
   Vallee-Rai R., 1999, CASCON 1999, P125
   van Koten C, 2006, INFORM SOFTWARE TECH, V48, P59, DOI 10.1016/j.infsof.2005.03.002
   Wong S, 2009, PROC IEEE INT CONF S, P467, DOI 10.1109/ICSM.2009.5306277
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zhang N., 1997, Proceedings of the 13th Annual Conference on Uncertainty in Artificial Intelligence (UAI-97), P481
   Zhou Y, 2008, WORK CONF REVERSE EN, P27, DOI 10.1109/WCRE.2008.39
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 36
TC 11
Z9 12
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2015
VL 67
BP 220
EP 235
DI 10.1016/j.infsof.2015.07.007
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA CT2AO
UT WOS:000362604600013
DA 2024-07-18
ER

PT J
AU Parolia, N
   Chen, JV
   Jiang, JJ
   Klein, G
AF Parolia, Neeraj
   Chen, Jengchung Victor
   Jiang, James J.
   Klein, Gary
TI Conflict resolution effectiveness on the implementation efficiency and
   achievement of business objectives in IT programs: A study of IT vendors
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Conflict resolution; Program management; Constructive controversy;
   Trust; Interpersonal cooperation
ID MANAGEMENT; PERFORMANCE; PRODUCT; TEAMS; TRUST; COORDINATION;
   COOPERATION; EXPERIENCES; STRATEGIES; PROJECTS
AB Context: The information technology (IT) field presents a unique context for the management of multiple projects because of the variety of stakeholders involved, the complexity of interdependencies among projects, and the frequent use of external vendors. In practice, IT vendors typically employ advanced project governance techniques such as program management to work effectively with the numbers and variety of clients while still pursuing the benefits of a single oversight. These structural features lend themselves to conflict across teams with individual requirements. However, little research exists on program management, much less in the IT context, that represents conflict across IT project teams.
   Objective: In this study, the effectiveness of conflict resolution on the implementation efficiency and fulfillment of business objectives is studied through the lens of constructive controversy theories. A number of hypotheses are derived by tailoring the constructive conflict resolution concepts to IT context and making a comprehensive literature review to identify the mediator and dependent variables. A model is developed to consider the management of conflict across multiple projects combined into a single program.
   Method: A quantitative questionnaire related to the program environment was developed for five variables to include conflict resolution, cognition-based trust, interpersonal cooperation, business objectives and implementation efficiency. The hypotheses were tested by performing a survey study, where a number of well-established measures in the literature were used. 92 paired responses from program teams in 38 organizations located in India were obtained and represent a variety of individual characteristics, and program sizes.
   Results: This study identified the composite role of constructive conflict resolution and cognition-based trust in improving interpersonal cooperation. The impacts of constructive conflict resolution on business objectives were not fully mediated by cognition-based trust and interpersonal cooperation, although implementation efficiency is fully mediated.
   Conclusion: The management of conflict promotes trust and interpersonal cooperation necessary to improve the efficient completion of the program and benefits to the organization. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Parolia, Neeraj] Towson Univ, Dept E Business & Technol Management, Towson, MD USA.
   [Chen, Jengchung Victor] Natl Cheng Kung Univ, Inst Int Management, Tainan 70101, Taiwan.
   [Jiang, James J.] Natl Taiwan Univ, Dept Business Adm, Taipei, Taiwan.
   [Klein, Gary] Univ Colorado, Coll Business Adm, Colorado Springs, CO 80907 USA.
C3 University System of Maryland; Towson University; National Cheng Kung
   University; National Taiwan University; University of Colorado System;
   University of Colorado at Colorado Springs
RP Chen, JV (corresponding author), Natl Cheng Kung Univ, Inst Int Management, Tainan 70101, Taiwan.
EM victor@mail.ncku.edu.tw
RI Jiang, James/JPK-7730-2023; 江, 俊毅/N-6899-2018; Chen, Victor/T-9177-2018
OI Chen, Victor/0000-0002-5247-3139
CR Andersen PH, 2006, IND MARKET MANAG, V35, P522, DOI 10.1016/j.indmarman.2004.10.010
   [Anonymous], 2007, MAN SUCC PROGR
   BAGOZZI RP, 1991, ADMIN SCI QUART, V36, P421, DOI 10.2307/2393203
   BARKI H, 1994, MIS QUART, V18, P59, DOI 10.2307/249610
   Barki H, 2001, MIS QUART, V25, P195, DOI 10.2307/3250929
   Behfar KJ, 2008, J APPL PSYCHOL, V93, P170, DOI 10.1037/0021-9010.93.1.170
   Bencsik A., 2007, Problems and Perspectives in Management, V5, P51
   Bennett J.K., 1994, Training, V31, P41
   Binder J., 2016, GLOBAL PROJECT MANAG
   Brown J., 2007, HDB PROGRAM MANAGEME
   Chang KH, 2010, IND MARKET MANAG, V39, P287, DOI 10.1016/j.indmarman.2008.10.003
   Chen CC, 2006, HUM SYST MANAGE, V25, P185
   Chen CC, 1998, ACAD MANAGE REV, V23, P285, DOI 10.2307/259375
   Crawford J. K., 2001, PROJECT MANAGEMENT B
   CROSBY LA, 1990, J MARKETING, V54, P68, DOI 10.2307/1251817
   De Vilbiss C.E., 2005, Leadership and Management in Engineering, V5, P87, DOI [10.1061/(ASCE)1532- 6748(2005)5:4(87, DOI 10.1061/(ASCE)1532-6748(2005)5:4(87]
   de Vries MFRK, 2005, ACAD MANAGE EXEC, V19, P61
   Dillman D. A., 2005, FIELD METHOD, V17, P30, DOI DOI 10.1177/1525822X04269550
   Elbanna A, 2010, J STRATEGIC INF SYST, V19, P39, DOI 10.1016/j.jsis.2010.02.005
   Englund RL, 1999, J PROD INNOVAT MANAG, V16, P52, DOI 10.1016/S0737-6782(98)00046-0
   Epner M., 2001, CUTTER CONSORT SOURC, V2
   Erdem F., 2003, TEAM PERFORM MANAG, V9, P131, DOI DOI 10.1108/13527590310493846
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   Franken A, 2009, CALIF MANAGE REV, V51, P49, DOI 10.2307/41166493
   FRAZIER GL, 1991, J MARKETING, V55, P52, DOI 10.2307/1252203
   Ghiselli E.E., 1981, Measurement theory for the behavioral sciences
   Ghobadi S, 2010, LECT NOTES BUS INF P, V47, P12
   Gierra J., 2004, MANAGING IT OUTSOURC
   Gill J, 2003, LONG RANGE PLANN, V36, P543, DOI 10.1016/j.lrp.2003.08.008
   Gold AH, 2001, J MANAGE INFORM SYST, V18, P185, DOI 10.1080/07421222.2001.11045669
   Gopal A, 2010, INFORM SYST RES, V21, P960, DOI 10.1287/isre.1080.0205
   Görög M, 2011, PROJ MANAG J, V42, P17, DOI 10.1002/pmj.20222
   Greer LL, 2008, SMALL GR RES, V39, P278, DOI 10.1177/1046496408317793
   Guttman HM, 1999, MANAG REV, V88, P49
   Hantos P, 2000, IEEE SOFTWARE, V17, P48, DOI 10.1109/52.819968
   Hempel PS, 2009, J ORGAN BEHAV, V30, P41, DOI 10.1002/job.540
   Holste J.S., 2005, Academy of Management Annual Meeting Proceedings, pB1, DOI [DOI 10.5465/AMBPP.2005.18779269, 10.5465/AMBPP.2005.18779269]
   Huang Y., 2003, INT J LOGISTICS, V6, P277
   Hulland J, 1999, STRATEGIC MANAGE J, V20, P195, DOI 10.1002/(SICI)1097-0266(199902)20:2<195::AID-SMJ13>3.3.CO;2-Z
   Jehn KA, 1997, ADMIN SCI QUART, V42, P530, DOI 10.2307/2393737
   Johnson D. W, 2006, HDB CONFLICT RESOLUT
   JOHNSON DW, 1981, J EDUC PSYCHOL, V73, P444, DOI 10.1037/0022-0663.73.3.444
   Johnson DW, 1998, SOC PSYCH A, V4, P9
   Kazanjian RK, 2000, J ENG TECHNOL MANAGE, V17, P273, DOI 10.1016/S0923-4748(00)00026-6
   Kerlinger F.N., 2000, Foundations of behavioral research, V4th
   Khamooshi H, 2009, IEEE T ENG MANAGE, V56, P171, DOI 10.1109/TEM.2008.927818
   Lechler T, 2001, SMALL BUS ECON, V16, P263, DOI 10.1023/A:1011167519304
   Linberg KR, 1999, J SYST SOFTWARE, V49, P177, DOI 10.1016/S0164-1212(99)00094-1
   Liu JYC, 2009, J COMPUT INFORM SYST, V49, P98
   Lohmoeller J.B., 1989, LATENT VARIABLE PATH
   Madsen S.R., 2005, HUMAN RESOURCES DEV, V16, P213, DOI https://doi.org/10.1002/hrdq.1134
   March J.G., 1958, ORGANIZATIONS
   MCALLISTER DJ, 1995, ACAD MANAGE J, V38, P24, DOI 10.5465/256727
   Mehta A, 2006, J LABOR RES, V27, P323, DOI 10.1007/s12122-006-1026-8
   MESSICK S, 1980, AM PSYCHOL, V35, P1012, DOI 10.1037/0003-066X.35.11.1012
   Milosevic D., 2007, PROGRAM MANAGEMENT I
   Miranda E, 2003, ART H TECH M PRO DEV, P1
   Montoya-Weiss MM, 2001, ACAD MANAGE J, V44, P1251, DOI 10.5465/3069399
   Oakland JS, 1997, TOTAL QUAL MANAGE, V8, pS31
   Partington D., 2007, International Journal of Project Management, V25, P41, DOI 10.1016/j.ijproman.2006.06.002
   PONDY LR, 1967, ADMIN SCI QUART, V12, P296, DOI 10.2307/2391553
   Porter TW, 1996, INT J CONFL MANAGE, V7, P361, DOI 10.1108/eb022787
   Preacher K.J., 2006, CALCULATION SOBEL TE
   Reiss G., 2006, GOWER HDB PROGRAMME
   Schmidt T., 2009, Strategic project management made simple: Practical tools for leaders and teams
   Seyr S., 2010, IACM 23 ANN C
   Sharifi S, 2002, INT J OPER PROD MAN, V22, P656, DOI 10.1108/01443570210427677
   Sherif K, 2006, MIS QUART, V30, P339
   Smith HJ, 2001, J MANAGE INFORM SYST, V18, P189, DOI 10.1080/07421222.2001.11045677
   Stern LouisW., 1996, MARKETING CHANNELS, V5th
   Tang Z., 2006, IT ENABLED STRATEGIC
   Thiry M., 2010, PROGRAM MANAGEMENT
   Tsai WP, 1998, ACAD MANAGE J, V41, P464, DOI 10.5465/257085
   Wang Y., 2003, Journal of Managerial Psychology, V18, P541
   Wideman R.M., 2004, MANAGEMENT FRAMEWORK
   Wurst K.M., 2001, PORTL INT C MAN ENG
   Zucker L. G., 1986, RES ORGAN BEHAV, V8, P53, DOI DOI 10.1023/A
NR 77
TC 11
Z9 11
U1 0
U2 32
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2015
VL 66
BP 30
EP 39
DI 10.1016/j.infsof.2015.05.001
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA CN8OG
UT WOS:000358699900003
DA 2024-07-18
ER

PT J
AU Romero, HL
   Dijkman, RM
   Grefen, PWPJ
   van Weele, AJ
   de Jong, A
AF Romero, H. L.
   Dijkman, R. M.
   Grefen, P. W. P. J.
   van Weele, A. J.
   de Jong, A.
TI Measures of process harmonization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Harmonization; Business process; Hierarchical measurement model; Partial
   least squares
ID NONRESPONSE BIAS; BUSINESS PROCESS; PLS-SEM; STANDARDIZATION;
   PERFORMANCE; ABSENCE; IMPACT; MIS
AB Context: Many large organizations juggle an application portfolio that contains different applications that fulfill similar tasks in the organization. In an effort to reduce operating costs, they are attempting to consolidate such applications. Before consolidating applications, the work that is done with these applications must be harmonized. This is also known as process harmonization.
   Objective: The increased interest in process harmonization calls for measures to quantify the extent to which processes have been harmonized. These measures should also uncover the factors that are of interest when harmonizing processes. Currently, such measures do not exist. Therefore, this study develops and validates a measurement model to quantify the level of process harmonization in an organization.
   Method: The measurement model was developed by means of a literature study and structured interviews. Subsequently, it was validated through a survey, using factor analysis and correlations with known related constructs. Results: As a result, a valid and reliable measurement model was developed. The factors that are found to constitute process harmonization are: the technical design of the business process and its data, the resources that execute the process, and the information systems that are used in the process. In addition, strong correlations were found between process harmonization and process standardization and between process complexity and process harmonization.
   Conclusion: The measurement model can be used by practitioners, because it shows them the factors that must be taken into account when harmonizing processes, and because it provides them with a means to quantify the extent to which they succeeded in harmonizing their processes. At the same time, it can be used by researchers to conduct further empirical research in the area of process harmonization. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Romero, H. L.; Dijkman, R. M.; Grefen, P. W. P. J.; van Weele, A. J.] Eindhoven Univ Technol, Sch Ind Engn, NL-5600 MB Eindhoven, Netherlands.
   [de Jong, A.] Aston Univ, Aston Business Sch, Birmingham B4 7ET, W Midlands, England.
C3 Eindhoven University of Technology; Aston University
RP Dijkman, RM (corresponding author), Eindhoven Univ Technol, Sch Ind Engn, POB 513, NL-5600 MB Eindhoven, Netherlands.
RI Grefen, Paul W.P.J./C-2174-2014; Dijkman, Remco/P-4281-2019
OI Dijkman, Remco/0000-0003-4083-0036; de Jong, Ad/0000-0002-3016-5354
CR [Anonymous], 1999, SAP R 3 BUSINESS BLU
   [Anonymous], 1981, Journal of Marketing Research, DOI [10.2307/3151312, DOI 10.2307/3151312, DOI 10.1177/002224378101800104]
   [Anonymous], IEEE P 42 HAW INT C
   ARMSTRONG JS, 1977, J MARKETING RES, V14, P396, DOI 10.2307/3150783
   Becker JM, 2012, LONG RANGE PLANN, V45, P359, DOI 10.1016/j.lrp.2012.10.001
   Beimborn D., 2009, Proceedings of the 42nd Hawaii International Conference on System Sciences, P1
   Bollen K.A., 1998, Structural equation models
   CHURCHILL GA, 1979, J MARKETING RES, V16, P64, DOI 10.2307/3150876
   Collins D, 2003, QUAL LIFE RES, V12, P229, DOI 10.1023/A:1023254226592
   Conway JM, 2003, ORGAN RES METHODS, V6, P147, DOI 10.1177/1094428103251541
   Couper MP, 2001, PUBLIC OPIN QUART, V65, P230, DOI 10.1086/322199
   Crawford SD, 2001, SOC SCI COMPUT REV, V19, P146, DOI 10.1177/089443930101900202
   DESS GG, 1984, STRATEGIC MANAGE J, V5, P265, DOI 10.1002/smj.4250050306
   Dijkman R, 2011, INFORM SYST, V36, P498, DOI 10.1016/j.is.2010.09.006
   Dillman D.A., 2011, Mail and Internet surveys: The tailored design method-2007 Update with new Internet, visual, and mixed-mode guide
   Ebert Christof., 2005, Best Practices in Software Measurement
   Edwards JR, 2001, ORGAN RES METHODS, V4, P265, DOI 10.1177/109442810143005
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Etter JF, 1997, J CLIN EPIDEMIOL, V50, P1123, DOI 10.1016/S0895-4356(97)00166-2
   Fernandez J., 2010, HDB RES COMPLEX DYNA, P368
   Foster LA., 1997, P INF PROF INF PROF
   Hair JF, 2010, Multivariate data analysis
   HAMBRICK DC, 1993, STRATEGIC MANAGE J, V14, P401, DOI 10.1002/smj.4250140602
   HAMMER M, 1990, HARVARD BUS REV, V68, P104
   Hufgard A, 2011, COMM COM INF SC, V213, P155
   Küster JM, 2008, LECT NOTES COMPUT SC, V5240, P244, DOI 10.1007/978-3-540-85758-7_19
   Lohmoller J.-B., 1989, Latent Variable Path Modeling with Partial Least Squares, DOI DOI 10.1007/978-3-642-52512-4_5
   MacKenzie SB, 2011, MIS QUART, V35, P293
   Münstermann B, 2010, BUS PROCESS MANAG J, V16, P29, DOI 10.1108/14637151011017930
   Muenstermann B, 2010, MANAG RES REV, V33, P924, DOI 10.1108/01409171011070332
   Richen A., 2005, BPTRENDS NEWSLETTER, P5
   Riempp Gerold, 2007, Information Systems and e-Business Management, V5, P359, DOI 10.1007/s10257-007-0052-2
   Ringle CM, 2012, MIS QUART, V36, pIII
   Romero H., 2014, THESIS EINDHOVEN U T
   Ross J.W., 2006, Enterprise architecture as strategy: Creating a foundation for business execution
   Rozinat A, 2008, INFORM SYST, V33, P64, DOI 10.1016/j.is.2007.07.001
   Schack M., 2010, Proc. of the IEEE European Conference on Antennas and Propagation (EuCAP), P1, DOI [10.5167/uzh-36069, DOI 10.1177/0963662510387559]
   Schäfermeyer M, 2012, BUS INFORM SYST ENG+, V4, P261, DOI 10.1007/s12599-012-0224-6
   Sedera D., 2007, P AMCIS ASS INF SYST
   SHEIKH K, 1981, J EPIDEMIOL COMMUN H, V35, P293, DOI 10.1136/jech.35.4.293
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Tourangeau R, 2000, PSYCHOL SURVEY RESPO
   Tregear R, 2010, INT HANDB INFORM SYS, P307, DOI 10.1007/978-3-642-01982-1_15
   Wüllenweber K, 2008, INFORM SYST FRONT, V10, P211, DOI 10.1007/s10796-008-9063-x
NR 44
TC 10
Z9 12
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2015
VL 63
BP 31
EP 43
DI 10.1016/j.infsof.2015.03.004
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH6LV
UT WOS:000354149000003
OA Green Accepted, Green Published
DA 2024-07-18
ER

PT J
AU Jeffery, R
   Staples, M
   Andronick, J
   Klein, G
   Murray, T
AF Jeffery, Ross
   Staples, Mark
   Andronick, June
   Klein, Gerwin
   Murray, Toby
TI An empirical research agenda for understanding formal methods
   productivity
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical software engineering; Productivity; GQM; Formal methods;
   Formal verification; Proof Engineering
ID SPECIFICATION; MYTHS
AB Context: Formal methods, and particularly formal verification, is becoming more feasible to use in the engineering of large highly dependable software-based systems, but so far has had little rigorous empirical study. Its artefacts and activities are different to those of conventional software engineering, and the nature and drivers of productivity for formal methods are not yet understood.
   Objective: To develop a research agenda for the empirical study of productivity in software projects using formal methods and in particular formal verification. To this end we aim to identify research questions about productivity in formal methods, and survey existing literature on these questions to establish face validity of these questions. And further we aim to identify metrics and data sources relevant to these questions.
   Method: We define a space of GQM goals as an investigative framework, focusing on productivity from the perspective of managers of projects using formal methods. We then derive questions for these goals using Easterbrook et al.'s (2008) taxonomy of research questions. To establish face validity, we document the literature to date that reflects on these questions and then explore possible metrics related to these questions. Extensive use is made of literature concerning the L4.verified project completed within NICTA, as it is one of the few projects to achieve code-level formal verification for a large-scale industrially deployed software system.
   Results: We identify more than thirty research questions on the topic in need of investigation. These questions arise not just out of the new type of project context, but also because of the different artefacts and activities in formal methods projects. Prior literature supports the need for research on the questions in our catalogue, but as yet provides little evidence about them. Metrics are identified that would be needed to investigate the questions. Thus although it is obvious that at the highest level concepts such as size, effort, rework and so on are common to all software projects, in the case of formal methods, measurement at the micro level for these concepts will exhibit significant differences.
   Conclusions: Empirical software engineering for formal methods is a large open research field. For the empirical software engineering community our paper provides a view into the entities and research questions in this domain. For the formal methods community we identify some of the benefits that empirical studies could bring to the effective management of large formal methods projects, and list some basic metrics and data sources that could support empirical studies. Understanding productivity is important in its own right for efficient software engineering practice, but can also support future research on cost-effectiveness of formal methods, and on the emerging field of Proof Engineering. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Jeffery, Ross] Univ New S Wales, Sydney, NSW 2052, Australia.
C3 University of New South Wales Sydney
RP Jeffery, R (corresponding author), Univ New S Wales, Sydney, NSW 2052, Australia.
EM ross.jeffery@nicta.com.au
OI Klein, Gerwin/0000-0001-8883-0559
FU Australian Government through the Department of Communications;
   Australian Research Council through the ICT Centre of Excellence Program
FX NICTA is funded by the Australian Government through the Department of
   Communications and the Australian Research Council through the ICT
   Centre of Excellence Program.
CR Andronick J, 2012, PROC INT CONF SOFTW, P1002, DOI 10.1109/ICSE.2012.6227120
   [Anonymous], 2007, Software for Dependable Systems: Sufficient Evidence?
   [Anonymous], 2000, Proceedings of the Conference on the Future of Software Engineering, DOI [10.1145/336512.336546, DOI 10.1145/336512.336546]
   [Anonymous], 1983, NASA C PUBLICATION, V2377
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Bloomfield R. E., 2000, FORMAL METHODS DIFFU
   Bollin A, 2012, ELECTRON PROC THEOR, P33
   Bowen J. P., 1997, P COMPSAC 97
   Bowen J. P., 2012, 10 COMMANDMENTS FORM, P40
   Bowen J. P., 1994, IEEE COMPUT, V28, P56
   BOWEN JP, 1995, IEEE SOFTWARE, V12, P34, DOI 10.1109/52.391826
   BUSH ME, 1990, J SYST SOFTWARE, V12, P223, DOI 10.1016/0164-1212(90)90043-L
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   Cock D, 2008, LECT NOTES COMPUT SC, V5170, P167, DOI 10.1007/978-3-540-71067-7_16
   CRAIGEN D, 1993, INT SURVEY IND APPL, V2
   Degani A., 2013, The Oxford Handbook of Cognitive Engineering, P433
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Fenton N. E., 1989, SOFTWARE METICS MEAS, P27
   Fitzgerald J. S., 1995, WORKSH FORM METH APP
   Forrester E., 2006, PROCESS RES FRAMEWOR
   GERHART S, 1993, PROC INT CONF SOFTW, P24, DOI 10.1109/ICSE.1993.346058
   Ghezzi C., 2013, PERSPECTIVES FUTURE, P31
   Gorschek T, 2014, J SYST SOFTWARE, V95, P176, DOI 10.1016/j.jss.2014.03.082
   Gregor S, 2006, MIS QUART, V30, P611
   HALL A, 1990, IEEE SOFTWARE, V7, P11, DOI 10.1109/52.57887
   He Zhang, 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P3, DOI 10.1109/ICSSP.2012.6225979
   Holzmann G. J., 2001, PASTE 01
   Iliasov A, 2010, LECT NOTES COMPUT SC, V5977, P174, DOI 10.1007/978-3-642-11811-1_14
   KEMMERER RA, 1990, IEEE SOFTWARE, V7, P37, DOI 10.1109/52.57891
   King S, 2000, IEEE T SOFTWARE ENG, V26, P675, DOI 10.1109/32.879807
   Kitchenham B.A., 2001, Preliminary Guidelines for Empirical Research in Software Engineering
   Klein G, 2014, ACM T COMPUT SYST, V32, DOI 10.1145/2560537
   Klein G, 2009, SADHANA-ACAD P ENG S, V34, P27, DOI 10.1007/s12046-009-0002-4
   Lai R, 2003, IEEE T SOFTWARE ENG, V29, P46, DOI 10.1109/TSE.2003.1166588
   Larsen PG, 1996, IEEE SOFTWARE, V13, P48, DOI 10.1109/52.493020
   Liu ZM, 2008, LECT NOTES COMPUT SC, V4171, P31
   Mashkoor A, 2011, ASIA PAC SOFWR ENG, P57, DOI [10.1109/APSC.2011.48, 10.1109/APSEC.2011.48]
   MCMILLAN KL, 1994, ACM IEEE D, P314
   Meltzoff Julian., 1998, Critical Thinking About Research: Psychology and Related Fields
   Mendonca MG, 1998, IBM SYST J, V37, P484, DOI 10.1147/sj.374.0484
   Olszewska M., 2010, CONQUEST 2010 20 22
   Park R. E., 1996, CMUSE96HB002
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Sobel AEK, 2002, IEEE T SOFTWARE ENG, V28, P308, DOI 10.1109/32.991322
   Staples M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1257, DOI 10.1109/ICSE.2013.6606692
   Stidolph DC, 2003, LECT NOTES COMPUT SC, V2805, P170
   Van Solingen Rini, 1999, The Goal/ Question/ Metric Method: a practical guide for quality improvement of software development
   Vinter R, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P216, DOI 10.1109/METRIC.1998.731248
   Winwood S., LNCS, V5674, P500
   Woodcock J, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592436
NR 51
TC 11
Z9 13
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2015
VL 60
BP 102
EP 112
DI 10.1016/j.infsof.2014.11.005
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CB6IC
UT WOS:000349729700006
DA 2024-07-18
ER

PT J
AU Moreno-Montes de Oca, I
   Snoeck, M
   Reijers, HA
   Rodríguez-Morffi, A
AF Moreno-Montes de Oca, Isel
   Snoeck, Monique
   Reijers, Hajo A.
   Rodriguez-Morffi, Abel
TI A systematic literature review of studies on business process modeling
   quality
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic literature review; Business process modeling; Modeling
   quality
ID POTENTIAL PITFALLS; COMPLEXITY; PREDICTION; SCIENCE; DESIGN
AB Context: Business process modeling is an essential part of understanding and redesigning the activities that a typical enterprise uses to achieve its business goals. The quality of a business process model has a significant impact on the development of any enterprise and IT support for that process.
   Objective: Since the insights on what constitutes modeling quality are constantly evolving, it is unclear whether research on business process modeling quality already covers all major aspects of modeling quality. Therefore, the objective of this research is to determine the state of the art on business process modeling quality: What aspects of process modeling quality have been addressed until now and which gaps remain to be covered?
   Method: We performed a systematic literature review of peer reviewed articles as published between 2000 and August 2013 on business process modeling quality. To analyze the contributions of the papers we use the Formal Concept Analysis technique.
   Results: We found 72 studies addressing quality aspects of business process models. These studies were classified into different dimensions: addressed model quality type, research goal, research method, and type of research result. Our findings suggest that there is no generally accepted framework of model quality types. Most research focuses on empirical and pragmatic quality aspects, specifically with respect to improving the understandability or readability of models. Among the various research methods, experimentation is the most popular one. The results from published research most often take the form of intangible knowledge.
   Conclusion: We believe there is a lack of an encompassing and generally accepted definition of business process modeling quality. This evidences the need for the development of a broader quality framework capable of dealing with the different aspects of business process modeling quality. Different dimensions of business process quality and of the process of modeling still require further research. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Moreno-Montes de Oca, Isel; Rodriguez-Morffi, Abel] Cent Univ Marta Abreu Villas UCLV, Fac Math Phys & Comp Sci, Santa Clara, VC, Cuba.
   [Snoeck, Monique] Catholic Univ Leuven KU Leuven, Fac Business & Econ, B-3000 Leuven, Belgium.
   [Reijers, Hajo A.] Eindhoven Univ Technol TUe, Dept Math & Comp Sci, Eindhoven, Netherlands.
C3 Universidad Central "Marta Abreu" de Las Villas; KU Leuven; Eindhoven
   University of Technology
RP Moreno-Montes de Oca, I (corresponding author), Cent Univ Marta Abreu Villas UCLV, Fac Math Phys & Comp Sci, Carretera Camajuani km 5 1-2, Santa Clara, VC, Cuba.
EM Isel@uclv.edu.cu; Monique.Snoeck@kuleuven.be; H.A.Reijers@tue.nl;
   ARM@uclv.edu.cu
RI Snoeck, Monique/H-7771-2018
OI Snoeck, Monique/0000-0002-3824-3214; Rodriguez Morffi,
   Abel/0000-0002-6683-3115
FU VLIR-UOS program
FX The authors thank VLIR-UOS program for the sponsorship of this research.
   We also thank Karel Dejaeger and Pieter Hens for the valuable help
   offered during the development of the article, and the anonymous
   reviewers for their insightful comments which helped to improve this
   paper.
CR Aguilar-Savén RS, 2004, INT J PROD ECON, V90, P129, DOI 10.1016/S0925-5273(03)00102-6
   Aldin L, 2011, ENTERP INF SYST-UK, V5, P359, DOI 10.1080/17517575.2011.557443
   [Anonymous], 2013, Business process management, DOI DOI 10.1007/978-3-642-33143-5
   Arkilic IG, 2013, LECT NOTES BUS INF P, V132, P89
   Becker J, 2000, LECT NOTES COMPUT SC, V1806, P30
   Biazzo Stefano., 2000, Business Process Management Journal, V6, P99
   Born M, 2009, ADVANCED TECHNOLOGIES AND TECHNIQUES FOR ENTERPRISE INFORMATION SYSTEMS, P17
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   Genero M, 2011, J DATABASE MANAGE, V22, P46, DOI 10.4018/jdm.2011070103
   Gruhn V, 2007, SCI COMPUT PROGRAM, V65, P4, DOI 10.1016/j.scico.2006.08.003
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   ISO, 2000, 90002000 ISO
   ISO/IEC, 2001, Software engineering-Product quality-Part 1: Quality model
   Kitchenham B.A., 2007, GUIDELINES PERFORMIN, V5, P6
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Krogstie J, 2006, EUR J INFORM SYST, V15, P91, DOI 10.1057/palgrave.ejis.3000598
   La Rosa M, 2011, IEEE T IND INFORM, V7, P614, DOI 10.1109/TII.2011.2166795
   La Rosa M, 2011, IEEE T IND INFORM, V7, P255, DOI 10.1109/TII.2011.2124467
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   MARCH ST, 1995, DECIS SUPPORT SYST, V15, P251, DOI 10.1016/0167-9236(94)00041-2
   Mendling J, 2008, DATA KNOWL ENG, V64, P312, DOI 10.1016/j.datak.2007.06.019
   Mendling J, 2010, INFORM SYST, V35, P467, DOI 10.1016/j.is.2009.03.009
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Mendling J., 2007, INT C ADV INF SYST E
   Mendling J, 2007, LECT NOTES COMPUT SC, V4714, P48
   Mendling J, 2012, J SYST SOFTWARE, V85, P1188, DOI 10.1016/j.jss.2012.01.017
   Mendling J, 2009, LECT NOTES COMPUT SC, V5460, P208
   Mendling J, 2008, LECT NOTES BUS INF P, V6, P1
   Mendling J, 2010, INT J INF SYST MODEL, V1, P40, DOI 10.4018/jismd.2010040103
   Moody D., 2003, ER 2002, P380
   Moody DL, 2005, DATA KNOWL ENG, V55, P243, DOI 10.1016/j.datak.2004.12.005
   Nelson HJ, 2012, SOFTWARE QUAL J, V20, P201, DOI 10.1007/s11219-011-9136-9
   O'Neill P, 1999, TECHNOVATION, V19, P571, DOI 10.1016/S0166-4972(99)00059-0
   Reggio G., 2011, 2011 First International Workshop on Empirical Requirements Engineering, P61, DOI 10.1109/EmpiRE.2011.6046257
   Reijers HA, 2011, INFORM SYST, V36, P881, DOI 10.1016/j.is.2011.03.003
   Reijers HA, 2011, DECIS SUPPORT SYST, V51, P339, DOI 10.1016/j.dss.2010.12.013
   Reijers HA, 2010, INT HANDB INFORM SYS, P167, DOI 10.1007/978-3-642-00416-2_8
   Rosemann M, 2006, BUS PROCESS MANAG J, V12, P249, DOI 10.1108/14637150610657567
   Rosemann M, 2006, BUS PROCESS MANAG J, V12, P377, DOI 10.1108/14637150610668024
   González LS, 2010, BUS PROCESS MANAG J, V16, P114, DOI 10.1108/14637151011017976
   Sánchez-González L, 2012, INFORM SOFTWARE TECH, V54, P1159, DOI 10.1016/j.infsof.2012.05.001
   Sánchez-González L, 2010, LECT NOTES COMPUT SC, V6412, P458, DOI 10.1007/978-3-642-16373-9_35
   Schenk K. D., 1998, Journal of Management Information Systems, V15, P9
   Schrepfer M, 2009, LECT NOTES BUS INF P, V39, P161
   WAND Y, 1990, IEEE T SOFTWARE ENG, V16, P1282, DOI 10.1109/32.60316
   Weber B, 2011, COMPUT IND, V62, P467, DOI 10.1016/j.compind.2010.12.012
   Wille R, 2005, LECT NOTES ARTIF INT, V3626, P1
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 49
TC 64
Z9 72
U1 5
U2 63
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 187
EP 205
DI 10.1016/j.infsof.2014.07.011
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800011
OA Green Published, Green Accepted
DA 2024-07-18
ER

PT J
AU Kang, JS
   Park, HS
AF Kang, Jeong Seok
   Park, Hong Seong
TI Automatic generation algorithm of expected results for testing of
   component-based software system
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Component-based software system; Composite component; Automatic expected
   result generation; I/O relationship analysis
ID FRAMEWORK
AB Context: A component-based software (CBS) system is a typical example of a composite component, which is composed of two or more atomic components. In the test of a CBS system, it is necessary to automatically generate expected results because they are compared with the actual results.
   Objective: This paper proposes an automatic generation algorithm of expected results for the testing of a CBS system.
   Method: The algorithm analyzes Input/Output (I/O) relationships of a CBS system to identify inputs that influence its outputs. Then, the algorithm uses test cases of atomic components for each input and automatically generates expected results. To evaluate the proposed approach, we compare the proposed approach with the other I/O relationship based approach via two case studies which are the CBS systems for guide robot. The comparison shows the effectiveness of our approach.
   Results: To verify effectiveness of the proposed approach, we measure the cost of manual generation of expected results for each case study. The costs are from 0.001 to 0.015 in the first case study, and are from 0.590 to 0.998 in the second case study.
   Conclusion: This proposed approach reduces the time-consuming and error-prone task which manually generates expected results for the testing of a CBS system. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Kang, Jeong Seok; Park, Hong Seong] Kangwon Natl Univ, Dept Elect & Telecommun Engn, Chunchon, South Korea.
C3 Kangwon National University
RP Park, HS (corresponding author), 5 Engn Bldg 517,1 Kangwondaehak Gil, Chunchon 200701, Gangwon Do, South Korea.
EM jskang1982@gmail.com; hspark@kangwon.ac.kr
FU Ministry of Trade, Industry and Technology
FX This paper is supported by the Ministry of Trade, Industry and
   Technology.
CR Ando N., 2005, 2005 IEEE/RSJ International Conference on Intelligent Robots and Systems, P3933
   [Anonymous], 2009, ICRA WORKSH OP SOURC
   [Anonymous], INT J SOFTW ENG APPL
   [Anonymous], P 22 IEEE ACM INT C
   Barbosa DL, 2007, INT J SOFTW ENG KNOW, V17, P339, DOI 10.1142/S0218194007003276
   Brooks A., 2005, 2005 IEEE/RSJ International Conference on Intelligent Robots and Systems, P163
   Brugali D, 2010, IEEE ROBOT AUTOM MAG, V17, P100, DOI 10.1109/MRA.2010.935798
   Brugali D, 2009, IEEE ROBOT AUTOM MAG, V16, P84, DOI 10.1109/MRA.2009.934837
   Bruyninckx H, 2001, IEEE INT CONF ROBOT, P2523, DOI 10.1109/ROBOT.2001.933002
   Chen TY, 2003, INFORM SOFTWARE TECH, V45, P1, DOI 10.1016/S0950-5849(02)00129-5
   Edwards SH, 2001, SOFTW TEST VERIF REL, V11, P97, DOI 10.1002/stvr.224
   Gao J., 2003, TESTING QUALITY ASSU
   Han S, 2012, IEEE T AUTOM SCI ENG, V9, P467, DOI 10.1109/TASE.2012.2193568
   Hoffman D., 1999, Software Testing, Verification and Reliability, V9, P3, DOI 10.1002/(SICI)1099-1689(199903)9:1<3::AID-STVR169>3.0.CO;2-Z
   Jeong-Seok Kang, 2011, 2011 8th International Conference on Ubiquitous Robots and Ambient Intelligence (URAI 2011), P647, DOI 10.1109/URAI.2011.6145901
   Kang JS, 2012, UBICOMP'12: PROCEEDINGS OF THE 2012 ACM INTERNATIONAL CONFERENCE ON UBIQUITOUS COMPUTING, P852
   Last M, 2004, INT J SOFTW ENG KNOW, V14, P369, DOI 10.1142/S0218194004001737
   Last M, 2004, S MACH PERC, V56, P21
   Majumdar R, 2007, PROC INT CONF SOFTW, P416
   Marijan D, 2009, IEEE CIRCUITS AND SYSTEMS INTERNATIONAL CONFERENCE ON TESTING AND DIAGNOSIS, P100
   Memon A, 2005, J SOFTW MAINT EVOL-R, V17, P27, DOI 10.1002/smr.305
   Memon A. M., 2000, Software Engineering Notes, V25, P30, DOI 10.1145/357474.355050
   Memon AM, 2004, S MACH PERC, V56, P51
   Momotko M., 2004, Foundations of Computing and Decision Sciences, V29, P133
   MURPHY C, 2009, P 18 INT S SOFTW TES, P189
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Peters Dennis., 1994, Proceedings of the 1994 ACM SIGSOFT international symposium on Software testing and analysis, ISSTA'94, P58
   Peters DK, 1998, IEEE T SOFTWARE ENG, V24, P161, DOI 10.1109/32.667877
   Richardson D. J., 1992, International Conference on Software Engineering, P105, DOI 10.1145/143062.143100
   Schroeder PJ, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P139, DOI 10.1109/ASE.2002.1115005
   Segura S, 2011, INFORM SOFTWARE TECH, V53, P245, DOI 10.1016/j.infsof.2010.11.002
   Shahamiri SR, 2012, AUTOMAT SOFTW ENG, V19, P303, DOI 10.1007/s10515-011-0094-z
   Shahamiri SR, 2011, INFORM SOFTWARE TECH, V53, P774, DOI 10.1016/j.infsof.2011.02.006
   Shahamiri SR, 2010, INT CONF COMP SCI, P30, DOI 10.1109/ICCSIT.2010.5563989
   Shukla R., 2005, Proceedings. 12th Asia-Pacific Software Engineering Conference
   Stocks P, 1996, IEEE T SOFTWARE ENG, V22, P777, DOI 10.1109/32.553698
   Wu Y, 2001, IEEE INT C ENG COMP, P222, DOI 10.1109/ICECCS.2001.930181
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Yilmaz C, 2014, IEEE T SOFTWARE ENG, V40, P43, DOI 10.1109/TSE.2013.53
   Yoon I.-C., 2008, P INT S SOFTWARE TES, P63, DOI DOI 10.1145/1390630.1390640
   Yoon I, 2013, INFORM SOFTWARE TECH, V55, P445, DOI 10.1016/j.infsof.2012.09.010
   Yoon Ilchul., 2011, Proceedings of CBSE '11, P119
NR 42
TC 3
Z9 3
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 1
EP 20
DI 10.1016/j.infsof.2014.08.001
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500001
DA 2024-07-18
ER

PT J
AU Goknil, A
   Kurtev, I
   van den Berg, K
   Spijkerman, W
AF Goknil, Arda
   Kurtev, Ivan
   van den Berg, Klaas
   Spijkerman, Wietze
TI Change impact analysis for requirements: A metamodeling approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements metamodel; Change impact analysis; Proposing and
   propagating changes
ID MODEL; TRACEABILITY; SPECIFICATION; ARCHITECTURE; VALIDATION; MANAGEMENT
AB Context: Following the evolution of the business needs, the requirements of software systems change continuously and new requirements emerge frequently. Requirements documents are often textual artifacts with structure not explicitly given. When a change in a requirements document is introduced, the requirements engineer may have to manually analyze all the requirements for a single change. This may result in neglecting the actual impact of a change. Consequently, the cost of implementing a change may become several times higher than expected.
   Objective: In this paper, we aim at improving change impact analysis in requirements by using formal semantics of requirements relations and requirements change types.
   Method: In our previous work we present a requirements metamodel with commonly used requirements relation types and their semantics formalized in first-order logic. In this paper the classification of requirements changes based on structure of a textual requirement is provided with formal semantics. The formalization of requirements relations and changes is used for propagating proposed changes and consistency checking of proposed changes in requirements models. The tool support for change impact analysis in requirements models is an extension of our Tool for Requirements Inferencing and Consistency Checking (TRIC).
   Results: The described approach for change impact analysis helps in the elimination of some false positive impacts in change propagation, and enables consistency checking of changes.
   Conclusion: We illustrate our approach in an example which shows that the formal semantics of requirements relations and change classification enables change alternatives to be proposed semi-automatically, the reduction of some false positive impacts and contradicting changes in requirements to be determined. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Goknil, Arda] Univ Luxembourg, SnT Ctr, Luxembourg, Luxembourg.
   [Kurtev, Ivan] Nspyre, NL-5652 AM Eindhoven, Netherlands.
   [van den Berg, Klaas; Spijkerman, Wietze] Univ Twente, Software Engn Grp, NL-7500 AE Enschede, Netherlands.
C3 University of Luxembourg; University of Twente
RP Goknil, A (corresponding author), Univ Luxembourg, SnT Ctr, Luxembourg, Luxembourg.
EM arda.goknil@uni.lu; ivan.kurtev@nspyre.nl; vdberg.nl@gmail.com;
   weedz@frummel.org
RI Van den Berg, Klaas/AAU-8601-2021
OI Kurtev, Ivan/0009-0003-3783-405X
FU NWO; National Research Fund, Luxembourg [FNR/P10/03]
FX This work has been carried out when the first author was carrying his
   PhD work at the University of Twente. The work has been supported by NWO
   (www.nwo.nl) in the jacquard Programme and by the National Research
   Fund, Luxembourg (FNR/P10/03).
CR Ackermann C, 2006, 30th Annual IEEE/NASA Software Engineering Workshop, Proceedings, P66
   AIZENBUDRESHEF N, 2005, ECMDA TW 05, P7
   [Anonymous], 2002, WER
   [Anonymous], 2009, Requirements Engineering: From System Goals to UML Models to Software
   Arora Chetan, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P35, DOI 10.1109/ESEM.2013.13
   Baudry B, 2007, IEEE INT ENTERP DIST, P459, DOI 10.1109/EDOC.2007.15
   Bohner SA, 2004, 28TH ANNUAL NASA GODDARD SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P143
   Bohner SA, 2003, 27TH ANNUAL NASA GODDARD/IEEE SOFTWARE ENGINEERING WORKSHOP - PROCEEDINGS, P175, DOI 10.1109/SEW.2002.1199468
   Bohner SA, 2002, PROC IEEE INT CONF S, P263, DOI 10.1109/ICSM.2002.1167777
   Briand LC, 2006, J SYST SOFTWARE, V79, P339, DOI 10.1016/j.jss.2005.05.001
   Briand LC, 2003, PROC IEEE INT CONF S, P256, DOI 10.1109/ICSM.2003.1235428
   Brottier E, 2007, IEEE INT ENTERP DIST, P390, DOI 10.1109/EDOC.2007.44
   Buckley J, 2005, J SOFTW MAINT EVOL-R, V17, P309, DOI 10.1002/smr.319
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   Cerón R, 2005, LECT NOTES COMPUT SC, V3547, P173
   Chen CY, 2009, J SYST SOFTWARE, V82, P2051, DOI 10.1016/j.jss.2009.06.052
   Cleland-Huang J, 2005, PROC INT CONF SOFTW, P362
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Dahlstedt ÅG, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P95, DOI 10.1007/3-540-28244-0_5
   Dam H. K., 2010, P 26 IEEE INT C SOFT, P1
   Dam KH, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P309
   dos Santos Soares Michel, 2008, Journal of Software, V3, P57
   Egyed Alexander, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P99, DOI 10.1109/ASE.2008.20
   Egyed A., 2006, 28th International Conference on Software Engineering Proceedings, P381, DOI 10.1145/1134285.1134339
   Egyed A, 2007, PROC INT CONF SOFTW, P292
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   Escalona MJ, 2008, IEEE T SOFTWARE ENG, V34, P377, DOI 10.1109/TSE.2008.27
   Fleischer R, 2003, LECT NOTES COMPUT SC, V2647, P120
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Goknil Arda, 2013, 2013 17th IEEE International Enterprise Distributed Object Computing Conference (EDOC 2013), P159, DOI 10.1109/EDOC.2013.26
   Goknil A., 2011, THESIS U TWENTE ENSC
   Goknil A., 2008, EUR C MOD DRIV ARCH, V5095, P311
   Goknil A, 2014, J SYST SOFTWARE, V88, P112, DOI 10.1016/j.jss.2013.10.006
   Goknil A, 2011, SOFTW SYST MODEL, V10, P31, DOI 10.1007/s10270-009-0142-3
   Goknil Arda, 2010, ECMFA TW 2010, P39
   Goknil Arda, 2008, ECMDA TRAC WORKSH EC, P59
   Goknil Arda, 2009, ECMDA TW 09, P17
   Groher I, 2010, LECT NOTES COMPUT SC, V6395, P123
   Harker S., 1993, P IEEE INT S REQUIRE, P266, DOI DOI 10.1109/ISRE.1993.324847
   Hassine J, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P81, DOI 10.1109/IWPSE.2005.8
   Heaven W., 2004, IEE Proceedings-Software, V151, P10, DOI 10.1049/ip-sen:20040297
   Cheng HX, 2007, Sixth Wuhan International Conference on E-Business, Vols 1-4, P135
   Huth MichaelR. A., 2000, LOGIC COMPUTER SCI M
   IBRAHIM S, 2005, ASIAN J INF TECHNOL, V4, P329
   *JENA, SEM WEB FRAM JAVA
   Jönsson P, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P117, DOI 10.1007/3-540-28244-0_6
   Kitchenham BA, 1999, J SOFTW MAINT-RES PR, V11, P365, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<365::AID-SMR200>3.0.CO;2-W
   Koch N, 2003, LECT NOTES COMPUT SC, V2722, P497
   Lai W., 2009, P ICSE09 WORKSH MOD
   Lai W., 2009, THESIS U TORONTO TOR
   Lam W, 1998, EUROMICRO CONF PROC, P779, DOI 10.1109/EURMIC.1998.708102
   Lee J, 1998, IEEE T KNOWL DATA EN, V10, P551, DOI 10.1109/69.706056
   Lee WT, 2010, INT J INTELL SYST, V25, P878, DOI 10.1002/int.20443
   Lock S., 2001, THESIS LANCASTER U
   LOCK S, 1999, AUSTR J INFORM SYSTE, V6, P38
   LOCK S, 1999, P 4 AUSTR C REQ ENG, P29
   Meyer JJC, 1998, SPRING INT SER ENG C, P71
   Molina F, 2008, LECT NOTES COMPUT SC, V5176, P122, DOI 10.1007/978-3-540-85200-1_14
   Molina F, 2010, INT J INTELL SYST, V25, P757, DOI 10.1002/int.20430
   Molina F, 2009, ADV ENG SOFTW, V40, P1306, DOI 10.1016/j.advengsoft.2009.01.018
   Monperrus M, 2013, SOFTWARE QUAL J, V21, P3, DOI 10.1007/s11219-011-9163-6
   Moon M, 2005, IEEE T SOFTWARE ENG, V31, P551, DOI 10.1109/TSE.2005.76
   Mylopoulos J, 1999, COMMUN ACM, V42, P31, DOI 10.1145/291469.293165
   Navarro E, 2006, J COMPUT INFORM SYST, V46, P67, DOI 10.1080/08874417.2006.11645925
   Nentwich C, 2003, PROC INT CONF SOFTW, P455, DOI 10.1109/ICSE.2003.1201223
   Noppen J, 2007, LECT NOTES COMPUT SC, V4542, P247
   Nurmuliani N, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P240
   O'Neal J.S., 2003, THESIS LOUISIANA STA
   O'Neal JS, 2001, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.2001.972729
   Pohl K., 1996, Requirements engineering: An overview
   Rashid A., 2003, AOSD 2003 P 2 INT C, P11
   Robinson WN, 2003, ACM COMPUT SURV, V35, P132, DOI 10.1145/857076.857079
   Sánchez O, 2009, J UNIVERS COMPUT SCI, V15, P2957
   Spijkerman W., 2010, THESIS U TWENTE ENSC
   Supakkul S, 2005, THIRD ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGMENT AND APPLICATIONS, PROCEEDINGS, P112, DOI 10.1109/SERA.2005.19
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   SWANSON EB, 1995, J SOFTW MAINT-RES PR, V7, P303, DOI 10.1002/smr.4360070503
   SWEBOOK, SWEBOOK GUID SOFTW E
   Turver R. J., 1994, Journal of Software Maintenance: Research and Practice, V6, P35, DOI 10.1002/smr.4360060104
   van Domburg R. S. A., 2009, THESIS U TWENTE ENSC
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   Veldhuis J.W., 2009, THESIS U TWENTE ENSC
   Vicente-Chicote C, 2007, J OBJECT TECHNOL, V6, P437, DOI 10.5381/jot.2007.6.9.a22
   VOGEL R, 2006, 2 WORKSH COD CENTR M
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
   Zhang H, 2014, INFORM SOFTWARE TECH, V56, P40, DOI 10.1016/j.infsof.2013.07.001
NR 88
TC 34
Z9 42
U1 1
U2 28
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2014
VL 56
IS 8
BP 950
EP 972
DI 10.1016/j.infsof.2014.03.002
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AI9OL
UT WOS:000337261800008
OA Green Published
DA 2024-07-18
ER

PT J
AU Drury-Grogan, ML
AF Drury-Grogan, Meghann L.
TI Performance on agile teams: Relating iteration objectives and critical
   decisions to project management success factors
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Team performance; Project management success factors; Iteration
   objectives; Team objectives; Agile software development
AB Context: While project management success factors have long been established via the golden triangle, little is known about how project iteration objectives and critical decisions relate to these success factors. It seems logical that teams' iteration objectives would reflect project management success factors, but this may not always be the case. If not, how are teams' objectives for iterations differing from the golden triangle of project management success factors?
   Objective: This study identifies iteration objectives and the critical decisions that relate to the golden triangle of project management success factors in agile software development teams working in two-week iterations.
   Method: The author conducted semi-structured interviews with members across three different agile software development teams using a hybrid of XP and Scrum agile methodologies. Iteration Planning and Retrospective meetings were also observed. Interview data was transcribed, coded and reviewed by the researcher and two independently trained research assistants. Data analysis involved organizing the data to identify iteration objectives and critical decisions to identify whether they relate to project management success factors.
   Results: Agile teams discussed four categories of iteration objectives: Functionality, Schedule, Quality and Team Satisfaction. Two of these objectives map directly to two aspects of the golden triangle: schedule and quality. The agile teams' critical decisions were also examined to understand the types of decisions the teams would have made differently to ensure success, which resulted in four categories of such decisions: Quality, Dividing Work, Iteration Amendments and Team Satisfaction.
   Conclusion: This research has contributed to the software development and project management literature by examining iteration objectives on agile teams and how they relate to the golden triangle of project management success factors to see whether these teams incorporate the golden triangle factors in their objectives and whether they include additional objectives in their iterations. What's more, this research identified four critical decisions related to the golden triangle. These findings provide important insight to the continuing effort to better assess project management success, particularly for agile teams. (C) 2013 Elsevier B.V. All rights reserved.
C1 Fordham Univ, Gabelli Sch Business Commun & Media Management, New York, NY 10019 USA.
C3 Fordham University
RP Drury-Grogan, ML (corresponding author), Fordham Univ, Gabelli Sch Business Commun & Media Management, 5 Columbus Circle,11th Floor,Suite 11-08, New York, NY 10019 USA.
EM mdrury@fordham.edu
OI Drury-Grogan, Meghann/0000-0002-8442-5844
CR Agarwal N., 2006, International Journal of Project Management, V24, P358, DOI 10.1016/j.ijproman.2005.11.009
   ALLEMAN G., 2002, STORY MANAGING PROJE
   [Anonymous], CHAOS SUMM 2009 REP
   [Anonymous], 2013, GUIDE PROJECT MANAGE
   [Anonymous], P HUM FACT SOC 30 AN
   [Anonymous], 2004, XP Ser
   [Anonymous], 2006, EUROPEAN J INFORM SY
   [Anonymous], 1999, QUALITATIVE DATA ANA
   [Anonymous], PROJECT MANAGEMENT Q
   [Anonymous], 1986, HARVARD BUSINESS REV
   [Anonymous], PMI COMMUNITY POST
   [Anonymous], BRIT STANDARD PROJEC
   [Anonymous], 2 INT C SOFTW ENG AD
   [Anonymous], MACWORLD AUG
   [Anonymous], PERCEIVED VALUE POTE
   [Anonymous], GALLUP BUSINESS J
   [Anonymous], 2012, MCKINSEY Q
   Augustine S, 2005, COMMUN ACM, V48, P85, DOI 10.1145/1101779.1101781
   Augustine S., 2005, Managing agile projects, V1st
   Baker B., 1983, PROJECT MANAGEMENT H
   Ballard G, 2003, BUILD RES INF, V31, P119, DOI 10.1080/09613210301997
   Beck K., 2001, P 39 INT C EXHIBITIO
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Ceschi M, 2005, IEEE SOFTWARE, V22, P21, DOI 10.1109/MS.2005.75
   Cockburn A., 2002, AGILE SOFTWARE DEV
   Cooke-Davies T., 2002, International Journal of Project Management, V20, P185
   Corbin J., 2008, QUAL RES, DOI DOI 10.4135/9781452230153.N10
   DE WIT A., 1988, INT J PROJ MANAG, V6, P164, DOI DOI 10.1016/0263-7863(88)90043-9
   Derby Esther., 2006, AGILE RETROSPECTIVES
   Drury M, 2012, J SYST SOFTWARE, V85, P1239, DOI 10.1016/j.jss.2012.01.058
   Drury-Grogan ML, 2013, INT J INF TECH DECIS, V12, P1097, DOI 10.1142/S0219622013400105
   EwusiMensah K, 1997, COMMUN ACM, V40, P74, DOI 10.1145/260750.260775
   Fowler M., 2001, Software Development, V9, P28
   Haas K.B., 2007, PM World Today, V9, P1
   Hackman JR., 1990, Groups That Work (and Those That Dont): Creating Conditions for Effective Teamwork
   Ika LA, 2009, PROJ MANAG J, V40, P6, DOI 10.1002/pmj.20137
   Karlsen JT, 2005, INT J INF TECH DECIS, V4, P525, DOI 10.1142/S0219622005001738
   Kendra K., 2004, PROJ MANAG J, V35, P30, DOI DOI 10.1177%2F875697280403500104
   KLEIN GA, 1989, IEEE T SYST MAN CYB, V19, P462, DOI 10.1109/21.31053
   Lindstrom L, 2004, INFORM SYST MANAGE, V21, P41, DOI 10.1201/1078/44432.21.3.20040601/82476.7
   Lipshitz R, 2001, J BEHAV DECIS MAKING, V14, P331, DOI 10.1002/bdm.381
   Lyytinen K., 1987, CRITICAL ISSUES INFO, P3
   MIERITZ L., 2012, GARTNER SURVEY SHOWS
   Munns A. K., 1996, International Journal of Project Management, V14, P81, DOI [10.1016/0263-7863(95)00057-7, DOI 10.1016/0263-7863(95)00057-7]
   Myers M. D., 2009, Qualitative Research in Business Management
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Okoli Chitu, 2012, International Journal of Information Technology and Management, V11, P153, DOI 10.1504/IJITM.2012.044071
   Pettigrew AM, 1990, ORGAN SCI, V1, P267, DOI 10.1287/orsc.1.3.267
   Pinto J.K., 1988, PROJ MANAG J, V19, P67
   PINTO JK, 1990, J MANAGE STUD, V27, P305, DOI 10.1111/j.1467-6486.1990.tb00249.x
   Pollack J., 2006, International Journal of Project Management, V24, P175, DOI 10.1016/j.ijproman.2005.10.005
   Rivard S, 2009, PROJ MANAG J, V40, P20, DOI 10.1002/pmj.20143
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Soderlund J., 2004, International Journal of Project Management, V22, P183, DOI 10.1016/S0263-7863(03)00070-X
   Thomas Graeme, 2008, International Journal of Project Management, V26, P733, DOI 10.1016/j.ijproman.2008.06.003
   Turner J.R., 2008, Handbook Of Project-Based Management
   Turner J.R., 1999, International Journal of Project Management, V17, P329
   Westerveld E., 2003, International Journal of Project Management, V21, P411, DOI 10.1016/S0263-7863(02)00112-6
   White D., 2002, International Journal of Project Management, V20, DOI [10.1016/S0263-7863(00)00029-6, DOI 10.1016/S0263-7863(00)00029-6]
   Yin R.K., 2014, Applications of case study research, V2nd
NR 61
TC 45
Z9 73
U1 3
U2 150
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2014
VL 56
IS 5
BP 506
EP 515
DI 10.1016/j.infsof.2013.11.003
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AG6RB
UT WOS:000335545000005
DA 2024-07-18
ER

PT J
AU Finlay, J
   Pears, R
   Connor, AM
AF Finlay, Jacqui
   Pears, Russel
   Connor, Andy M.
TI Data stream mining for predicting software build outcomes using source
   code metrics
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Data stream mining; Concept drift detection; Hoeffding tree; Jazz;
   Software metrics; Software repositories
ID MODEL
AB Context: Software development projects involve the use of a wide range of tools to produce a software artifact. Software repositories such as source control systems have become a focus for emergent research because they are a source of rich information regarding software development projects. The mining of such repositories is becoming increasingly common with a view to gaining a deeper understanding of the development process.
   Objective: This paper explores the concepts of representing a software development project as a process that results in the creation of a data stream. It also describes the extraction of metrics from the jazz repository and the application of data stream mining techniques to identify useful metrics for predicting build success or failure.
   Method: This research is a systematic study using the Hoeffding Tree classification method used in conjunction with the Adaptive Sliding Window (ADWIN) method for detecting concept drift by applying the Massive Online Analysis (MOA) tool.
   Results: The results indicate that only a relatively small number of the available measures considered have any significance for predicting the outcome of a build over time. These significant measures are identified and the implication of the results discussed, particularly the relative difficulty of being able to predict failed builds. The Hoeffding Tree approach is shown to produce a more stable and robust model than traditional data mining approaches.
   Conclusion: Overall prediction accuracies of 75% have been achieved through the use of the Hoeffding Tree classification method. Despite this high overall accuracy, there is greater difficulty in predicting failure than success. The emergence of a stable classification tree is limited by the lack of data but overall the approach shows promise in terms of informing software development activities in order to minimize the chance of failure. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Finlay, Jacqui; Pears, Russel; Connor, Andy M.] Auckland Univ Technol, Auckland, New Zealand.
C3 Auckland University of Technology
RP Connor, AM (corresponding author), Auckland Univ Technol, Auckland, New Zealand.
EM andrew.connor@aut.ac.nz
FU BuildIT consortium
FX Our thanks go to IBM for providing access to the Jazz repository and the
   BuildIT consortium that has funded this research. We also like to thank
   Professor Stephen MacDonell from Auckland University of Technology for
   providing valuable expertise regarding software metrics.
CR [Anonymous], IEEE TRANSMISSION DI
   [Anonymous], DATA MINING KNOWLEDG
   [Anonymous], 2000, Data Mining: Practical Machine Learning Tools and Techniques with Java Implementations
   Baena-Garcia M., 2006, ECML PKDD 2006 WORKS
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bifet A., 2009, ACM SIGKDD Explor. Newsl, V11, P55, DOI [DOI 10.1145/1656274.1656287, 10.1145/1656274.1656287]
   Bifet A, 2011, LECT NOTES ARTIF INT, V6913, P617, DOI 10.1007/978-3-642-23808-6_41
   Buse Raymond PL, 2010, P FSE SDP WORKSHOP F, P77
   Canfora Gerardo, 2005, SOFTW METR 2005 11 I
   Chau DH, 2006, LECT NOTES ARTIF INT, V4213, P103
   Connor A.M., 2010, ARPN J SYSTEMS SOFTW, V1, P194
   Connor A.M., 2011, INT J INFORM COMMUNI, V1, P177
   Denaro Giovanni., 2002, P IEEE INT C SOFTWAR, P361
   Di Penta M., 2012, EM TRENDS SOFTW METR
   Fayyad U, 1996, AI MAG, V17, P37
   Ferreira KAM, 2012, J SYST SOFTWARE, V85, P244, DOI 10.1016/j.jss.2011.05.044
   Finlay J., 2011, SOFTW ENG RES MAN AP
   Finlay J., 2013, MULTIMETRIC PREDICTI
   Gao KH, 2011, SOFTWARE PRACT EXPER, V41, P579, DOI 10.1002/spe.1043
   Giger Emanuel, 2011, P 8 WORK C MIN SOFTW, P83, DOI DOI 10.1145/1985441.1985456
   Gil Y., 2011, P 3 ACM SIGPLAN WORK
   Halkidi M, 2011, INTELL DATA ANAL, V15, P413, DOI 10.3233/IDA-2010-0475
   Hassan A.E, 2010, Proceedings of the FSE/SDP workshop on Future of Software Engineering Research, P161
   Herzig K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P159, DOI 10.1109/MSR.2009.5069495
   HOEFFDING W, 1963, J AM STAT ASSOC, V58, P13, DOI 10.2307/2282952
   Hulten G., 2001, KDD-2001. Proceedings of the Seventh ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P97, DOI 10.1145/502512.502529
   Keivanloo I., 2012, MIN SOFTW REP MSR 20
   Krishnan S, 2011, P 7 INT C PRED MOD S
   Li L., 2011, EMP SOFTW ENG MEAS E
   Manduchi G, 2002, INFORM SOFTWARE TECH, V44, P593, DOI 10.1016/S0950-5849(02)00079-4
   MARKOV Z., 2006, SIGCSE B, V38, P367
   MENZIES T, 2004, P 1 INT WORKSH MIN S
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   MOHA N, 2006, AUT SOFTW ENG 2006 A
   Moser R, 2008, LECT NOTES COMPUT SC, V5089, P360, DOI 10.1007/978-3-540-69566-0_29
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nisbet R., 2009, HDB STAT ANAL DATA M
   Park H, 2008, EXPERT SYST APPL, V35, P929, DOI 10.1016/j.eswa.2007.08.001
   Pfahringer B, 2008, LECT NOTES ARTIF INT, V5012, P296, DOI 10.1007/978-3-540-68125-0_27
   Phyu T.N., 2009, P INT MULTICONFERENC
   Ratzinger J., 2007, EMP SOFTW ENG MEAS 2
   Rodriguez D., 2012, 2012 1 INT WORKSH RE
   Ruhe G, 2002, LECT NOTES COMPUT SC, V2640, P104
   Sager T., 2006, P 2006 INT WORKSHOP, P65, DOI DOI 10.1145/1137983.1138000
   Vandecruys O, 2008, J SYST SOFTWARE, V81, P823, DOI 10.1016/j.jss.2007.07.034
   Vasilescu B., 2011, P 2 INT WORKSH EM TR
   Weiss C., 2007, MSR 07 P 4 INT WORKS
   Wolf Timo, 2008, Software Process: Improvement and Practice, V13, P493, DOI 10.1002/spip.401
   Wolf T, 2009, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2009.5070503
   Wu X., 2009, The top ten algorithms in data mining, V9
   Xie T., 2007, SOFTW ENG COMP 2007
   Xie T, 2009, COMPUTER, V42, P55, DOI 10.1109/MC.2009.256
   Zimmermann T, 2009, P 7 JOINT M EUR SOFT
NR 54
TC 25
Z9 30
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2014
VL 56
IS 2
BP 183
EP 198
DI 10.1016/j.infsof.2013.09.001
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 285TN
UT WOS:000329418000005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hadar, I
   Reinhartz-Berger, I
   Kuflik, T
   Perini, A
   Ricca, F
   Susi, A
AF Hadar, Irit
   Reinhartz-Berger, Iris
   Kuflik, Tsvi
   Perini, Anna
   Ricca, Filippo
   Susi, Angelo
TI Comparing the comprehensibility of requirements models expressed in Use
   Case and Tropos: Results from a family of experiments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical studies; Controlled experiment; Requirements models; Model
   comprehension; UML use case; Tropos
ID EMPIRICAL-ASSESSMENT; UML; QUALITY; GOAL
AB Context: Over the years, several modeling languages for requirements have been proposed. These languages employ different conceptual approaches, including scenario-based and goal-oriented ones. Empirical studies providing evidence about requirements model comprehensibility are rare, especially when addressing languages that belong to different modeling approaches.
   Objective: This work aims to compare the comprehensibility of requirements models expressed in different but comparable modeling approaches from a requirements analysts' perspective. In particular, in this paper we compare the comprehensibility of requirements models expressed in two visual modeling languages: Use Case, which is scenario-based, and Tropos, which exploits goal-oriented modeling. We further compare the effort required for comprehending the different models, and the derived productivity in each case.
   Method: Requirements model comprehensibility is measured here in the context of three types of tasks that analysts usually perform, namely mapping between textual description and the model elements, reading and understanding the model irrespectively of the original textual description, and modifying the model. This experimental evaluation has been conducted within a family of controlled experiments aiming at comparing the comprehensibility of Use Case and Tropos requirements models. Three runs of the experiment were performed, including a first experiment and two replications, involving 79 subjects overall (all of which were information systems students). The data for each experiment was separately analyzed, followed by a meta-analysis of the three experiments.
   Results: The experimental results show that Tropos models seem to be more comprehensible with respect to the three types of requirements analysis tasks, although more time consuming than Use Case models.
   Conclusions: Measuring model comprehensibility by means of controlled experiments is feasible and provides a basis for comparing Tropos and Use Case models, although these languages belong to different modeling approaches. Specifically, Tropos outperformed Use Case in terms of comprehensibility, but required more effort leading to a similar productivity of the two languages. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Hadar, Irit; Reinhartz-Berger, Iris; Kuflik, Tsvi] Univ Haifa, Dept Informat Syst, IL-31905 Haifa, Israel.
   [Perini, Anna; Susi, Angelo] Ctr Informat Technol CIT Irst FBK, I-38123 Povo, Trento, Italy.
   [Ricca, Filippo] Univ Genoa, Dipartimento Interscuola Informat Bioingn Robot &, I-16146 Genoa, Italy.
C3 University of Haifa; Fondazione Bruno Kessler; FBK-ICT - Center for
   Information & Communication Technology; University of Genoa
RP Hadar, I (corresponding author), Univ Haifa, Dept Informat Syst, IL-31905 Haifa, Israel.
EM hadari@is.haifa.ac.il; iris@is.haifa.ac.il; tsvikak@is.haifa.ac.il;
   perini@fbk.eu; filippo.ricca@disi.unige.it; susi@fbk.eu
RI Kuflik, Tsvi/M-5115-2014; Ricca, Filippo/ABB-3276-2020
OI Kuflik, Tsvi/0000-0003-0096-4240; 
CR Agarwal R., 1996, J MANAGE INFORM SYST, P137
   Agarwal R., IEEE T SOFTWARE ENG, V25
   Amyot D, 2003, COMPUT NETW, V42, P285, DOI 10.1016/S1389-1286(03)00244-5
   Anda B., 2000, P 13 EUR C OBJ OR PR, P402
   Andrich R., 2010, ACUBE USER CTR GOAL
   [Anonymous], J AIS
   [Anonymous], 2005, SEKE 2005
   Aranda Jorge., 2007, P INT WORKSHOP MODEL, P7
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Booch G., 2005, The Unified Modeling Language User Guide
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   Castro J, 2002, INFORM SYST, V27, P365, DOI 10.1016/S0306-4379(02)00012-1
   Cohen J., 1988, STAT POWER ANAL BEHA
   Dahan M., 2012, REQUIR ENG, P1
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   De Lucia A, 2010, EMPIR SOFTW ENG, V15, P455, DOI 10.1007/s10664-009-9127-7
   De Lucia A, 2008, INT C PROGRAM COMPRE, P93, DOI 10.1109/ICPC.2008.26
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Dobing B, 2006, COMMUN ACM, V49, P109, DOI 10.1145/1125944.1125949
   Falessi D., 2007, INT C SOFTW DAT TECH
   Gemino A, 2005, DATA KNOWL ENG, V55, P301, DOI 10.1016/j.datak.2004.12.009
   Gemino A, 2004, REQUIR ENG, V9, P248, DOI 10.1007/s00766-004-0204-6
   Gemino A, 2004, REQUIR ENG, V9, P153, DOI 10.1007/s00766-003-0182-0
   Gemino A., J DATA BASE MANAGEME, V20
   Genero M, 2011, J DATABASE MANAGE, V22, P46, DOI 10.4018/jdm.2011070103
   Glass G. V., 1976, ED RES, V5, P3, DOI [DOI 10.3102/0013189X005010003, 10.2307/1174772ISSN0536-1036, 10.3102/0013189x005010003]
   Hadar I., 2004, Journal of Object Technolgoy, V1, P143, DOI [10.5381/jot.2004.3.1.a3, DOI 10.5381/JOT.2004.3.1.A3]
   Hadar I., 2010, P 25 S APPL COMP ACM
   Hedges L. V., 1984, STAT METHODS METAANA, V24, P25, DOI [DOI 10.1002/EV.1376, 10.1016/C2009-0-03396-0, DOI 10.1016/C2009-0-03396-0, 10.1002/ev.1376]
   Iversen G.R., 1987, ANAL VARIANCE
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Khatri V, 2006, INFORM SYST RES, V17, P81, DOI 10.1287/isre.1060.0081
   Kim M, 2007, DATA KNOWL ENG, V61, P417, DOI 10.1016/j.datak.2006.06.009
   KIM YG, 1995, COMMUN ACM, V38, P103, DOI 10.1145/203241.203265
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   Moody DL, 2005, DATA KNOWL ENG, V55, P243, DOI 10.1016/j.datak.2004.12.005
   Morandini M., 2011, CEUR P 5 INT I WORKS
   Mylopoulos J., 1992, Conceptual Modelling Databases and CASE: An Integrated View of Information Systems Development, P49
   Mylopoulos J., 2001, LNCS, V2185, P422
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Peleg M, 2000, IEEE T SOFTWARE ENG, V26, P742, DOI 10.1109/32.879812
   Phalp KT, 2007, SOFTWARE QUAL J, V15, P383, DOI 10.1007/s11219-007-9023-6
   Razali R, 2006, PROC WRLD ACAD SCI E, V16, P338
   Reinhartz-Berger I, 2005, EMPIR SOFTW ENG, V10, P57, DOI 10.1023/B:EMSE.0000048323.40484.e0
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Rolland C, 1998, IEEE T SOFTWARE ENG, V24, P1055, DOI 10.1109/32.738339
   Rolland C, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P74, DOI 10.1109/ISRE.1999.777987
   Shanks G., 2003, P 11 EUR C INF SYST
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Siau K, 2004, J DATABASE MANAGE, V15, P73, DOI 10.4018/jdm.2004010103
   Siau K, 2011, INFORM SYST J, V21, P249, DOI 10.1111/j.1365-2575.2007.00255.x
   Staron M, 2006, J SYST SOFTWARE, V79, P727, DOI 10.1016/j.jss.2005.09.014
   Susi A, 2005, INFORM-J COMPUT INFO, V29, P401
   Sutcliffe A, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P320
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Torchiano M, 2010, IET SOFTW, V4, P15, DOI 10.1049/iet-sen.2009.0015
   van Lamsweerde A, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P4
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C., 1998, IEEE TCSE SOFTWA SPR, P7
   Yu E., 1995, MODELING STRATEGIC R
NR 64
TC 31
Z9 32
U1 2
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2013
VL 55
IS 10
BP 1823
EP 1843
DI 10.1016/j.infsof.2013.05.003
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 203MT
UT WOS:000323298000011
DA 2024-07-18
ER

PT J
AU Farré, C
   Queralt, A
   Rull, G
   Teniente, E
   Urpí, T
AF Farre, Carles
   Queralt, Anna
   Rull, Guillem
   Teniente, Ernest
   Urpi, Toni
TI Automated reasoning on UML conceptual schemas with derived information
   and queries
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Automated reasoning; Conceptual modelling; UML; OCL; Derived attributes
   and derived roles; Queries
ID CONSTRAINTS
AB Context: It is critical to ensure the quality of a software system in the initial stages of development, and several approaches have been proposed to ensure that a conceptual schema correctly describes the user's requirements.
   Objective: The main goal of this paper is to perform automated reasoning on UML schemas containing arbitrary constraints, derived roles, derived attributes and queries, all of which must be specified by OCL expressions.
   Method: The UML/OCL schema is encoded in a first order logic formalisation, and an existing reasoning procedure is used to check whether the schema satisfies a set of desirable properties. Due to the undecidability of reasoning in highly expressive schemas, such as those considered here, we also provide a set of conditions that, if satisfied by the schema, ensure that all properties can be checked in a finite period of time.
   Results: This paper extends our previous work on reasoning on UML conceptual schemas with OCL constraints by considering derived attributes and roles that can participate in the definition of other constraints, queries and derivation rules. Queries formalised in OCL can also be validated to check their satisfiability and to detect possible equivalences between them. We also provide a set of conditions that ensure finite reasoning when they are satisfied by the schema under consideration.
   Conclusion: This approach improves upon previous work by allowing automated reasoning for more expressive UML/OCL conceptual schemas than those considered so far. (c) 2013 Elsevier B.V. All rights reserved.
C1 [Farre, Carles; Rull, Guillem; Teniente, Ernest; Urpi, Toni] Univ Politecn Catalunya BarcelonaTech, Dept Serv & Informat Syst Engn, E-08034 Barcelona, Catalonia, Spain.
   [Queralt, Anna] Barcelona Supercomp Ctr, E-08034 Barcelona, Spain.
C3 Universitat Politecnica de Catalunya; Universitat Politecnica de
   Catalunya; Barcelona Supercomputer Center (BSC-CNS)
RP Queralt, A (corresponding author), Barcelona Supercomp Ctr, Nexus 2 Bldg,C Jordi Girona 29, E-08034 Barcelona, Spain.
EM farre@essi.upc.edu; anna.queralt@bsc.es; grull@essi.upc.edu;
   teniente@essi.upc.edu; urpi@essi.upc.edu
RI Farré, Carles/ABG-2966-2020; Farré, Carles/A-4062-2008; Teniente,
   Ernest/L-4313-2014; Queralt, Anna/X-2265-2019
OI Farré, Carles/0000-0001-5814-3782; Farré, Carles/0000-0001-5814-3782;
   Queralt, Anna/0000-0003-2782-2955
FU Ministerio de Ciencia y Tecnologia [TIN2011-24747, TIN2008-00444]; Grupo
   Consolidado; FEDER funds
FX We would like to thank Albert Tort for his collaboration, and also the
   anonymous referees for their useful comments. This work has been partly
   supported by Ministerio de Ciencia y Tecnologia under TIN2011-24747 and
   TIN2008-00444, Grupo Consolidado, and the FEDER funds.
CR Abiteboul S, 1995, FDN DATABASES
   Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], 1977, STOC
   [Anonymous], 2004, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development
   [Anonymous], 1989, Principles of Database and Knowledge-Base Systems
   Berardi D, 2005, ARTIF INTELL, V168, P70, DOI 10.1016/j.artint.2005.05.003
   Cadoli M, 2007, LECT NOTES COMPUT SC, V4733, P36
   Chaudhuri S., 1993, Optimization of real conjunctive queries, DOI 10.1145/153850.153856
   CHIRKOVA R, 2009, ENCY DATABASE SYSTEM, P2249
   Chirkova R, 2009, PODS'09: PROCEEDINGS OF THE TWENTY-EIGHTH ACM SIGMOD-SIGACT-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P217, DOI 10.1145/1559795.1559829
   Clark K. L., 1978, Logic and data bases, P293
   COHEN S, 2006, PODS, P70
   DeHaan D, 2009, PODS'09: PROCEEDINGS OF THE TWENTY-EIGHTH ACM SIGMOD-SIGACT-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P207, DOI 10.1145/1559795.1559828
   Deutsch A, 2002, LECT NOTES COMPUT SC, V2397, P21
   Engel K., 2002, Foundations of Information and Knowledge Systems. Second International Symposium, FoIKS 2002. Proceedings (Lecture Notes in Computer Science Vol.2284), P268
   Fagin R, 2005, THEOR COMPUT SCI, V336, P89, DOI 10.1016/j.tcs.2004.10.033
   Farré C, 2005, DATA KNOWL ENG, V53, P163, DOI 10.1016/j.datak.2004.08.002
   Farré C, 2004, LECT NOTES COMPUT SC, V3180, P77
   FARRE C, 2008, DBTEST, P9
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   Halevy AY, 2001, J ACM, V48, P971, DOI 10.1145/502102.502104
   Hartmann S., 1998, Conceptual Modeling - ER'98. 17th International Conference on Conceptual Modeling. Proceedings, P150
   HULL R, 1987, COMPUT SURV, V19, P201, DOI 10.1145/45072.45073
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Kaneiwa K, 2006, LECT NOTES COMPUT SC, V3861, P219
   LENZERINI M, 1990, INFORM SYST, V15, P453, DOI 10.1016/0306-4379(90)90048-T
   Lloyd J. W., 2012, Foundations of Logic Programming
   McGuinness DL, 1998, AI EDAM, V12, P333, DOI 10.1017/S089006049812406X
   *MIT SOFTW DES GRO, 2011, ALL AN
   Olive A, 1996, INFORM SYST, V21, P167, DOI 10.1016/0306-4379(96)00010-5
   OLIVE A, 2007, CONCEPTUAL MODELING, V1, P1
   Queralt A, 2012, DATA KNOWL ENG, V73, P1, DOI 10.1016/j.datak.2011.09.004
   Queralt A, 2010, LECT NOTES COMPUT SC, V6412, P438, DOI 10.1007/978-3-642-16373-9_32
   Rull G, 2008, LECT NOTES COMPUT SC, V5181, P660, DOI 10.1007/978-3-540-85654-2_56
   SAGIV Y, 1980, J ACM, V27, P633, DOI 10.1145/322217.322221
   THALHEIM B, 2000, ENTITY RELATIONSHIP, V1, P1
   Zhang XB, 1997, IEEE T KNOWL DATA EN, V9, P894, DOI 10.1109/69.649315
NR 37
TC 6
Z9 6
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2013
VL 55
IS 9
BP 1529
EP 1550
DI 10.1016/j.infsof.2013.02.010
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 174PU
UT WOS:000321168700001
DA 2024-07-18
ER

PT J
AU Zhang, H
   Babar, MA
AF Zhang, He
   Babar, Muhammad Ali
TI Systematic reviews in software engineering: An empirical investigation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic (literature) reviews; Evidence-based software engineering;
   Research methodology; Methodology adoption; Mixed-methods research;
   Tertiary study
AB Background: Systematic Literature Reviews (SLRs) have gained significant popularity among Software Engineering (SE) researchers since 2004. Several researchers have also been working on improving the scientific and methodological infrastructure to support SLRs in SE. We argue that there is also an apparent and essential need for evidence-based body of knowledge about different aspects of the adoption of SLRs in SE.
   Objective: The main objective of this research is to empirically investigate the adoption, value, and use of SLRs in SE research from various perspectives.
   Method: We used mixed-methods approach (systematically integrating tertiary literature review, semi-structured interviews and questionnaire-based survey) as it is based on a combination of complementary research methods which are expected to compensate each others' limitations.
   Results: A large majority of the participants are convinced of the value of using a rigourous and systematic methodology for literature reviews in SE research. However, there are concerns about the required time and resources for SLRs. One of the most important motivators for performing SLRs is new findings and inception of innovative ideas for further research. The reported SLRs are more influential compared to the traditional literature reviews in terms of number of citations. One of the main challenges of conducting SLRs is drawing a balance between methodological rigour and required effort.
   Conclusions: SLR has become a popular research methodology for conducting literature review and evidence aggregation in SE. There is an overall positive perception about this relatively new methodology to SE research. The findings provide interesting insights into different aspects of SLRs. We expect that the findings can provide valuable information to readers about what can be expected from conducting SLRs and the potential impact of such reviews. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Zhang, He] Univ New S Wales, Sydney, NSW 2052, Australia.
   [Babar, Muhammad Ali] IT Univ Copenhagen, Copenhagen, Denmark.
C3 University of New South Wales Sydney; IT University Copenhagen
RP Zhang, H (corresponding author), Univ New S Wales, Sydney, NSW 2052, Australia.
EM dr.hezhang@gmail.com; maba@itu.dk
RI ZHANG, HE/E-5977-2012
CR Allen IE, 1999, JAMA-J AM MED ASSOC, V282, P634, DOI 10.1001/jama.282.7.634
   [Anonymous], ACM SIGSOFT SOFTWARE
   [Anonymous], 5 INT S EMP SOFTW EN
   [Anonymous], 14 INT C EV ASS SOFT
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], HUMAN RESOURCES DEV
   [Anonymous], TECHNICAL REPORT
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 3 INT S EMP SOFTW EN
   [Anonymous], 2004, TRSE0401
   [Anonymous], INT C SOFTW ENG FUT
   BIOLCHINI J, 2005, TECHNICAL REPORT
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Creswell J. W., 2013, RES DESIGN QUALITATI
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Haugset B, 2008, AGILE 2008, PROCEEDINGS, P27, DOI 10.1109/Agile.2008.82
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Littell J.H., 2008, Systematic reviews and metanalysis
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Walsh M., 2001, RES MADE REAL GUIDE
   Wood M, 1999, J SYST SOFTWARE, V48, P13, DOI 10.1016/S0164-1212(99)00042-4
   Zannier C., 2006, 28th International Conference on Software Engineering Proceedings, P341, DOI 10.1145/1134285.1134333
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 37
TC 72
Z9 75
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2013
VL 55
IS 7
BP 1341
EP 1354
DI 10.1016/j.infsof.2012.09.008
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 161UD
UT WOS:000320217900014
DA 2024-07-18
ER

PT J
AU Bollati, VA
   Vara, JM
   Jiménez, A
   Marcos, E
AF Andrea Bollati, Veronica
   Manuel Vara, Juan
   Jimenez, Alvaro
   Marcos, Esperanza
TI Applying MDE to the (semi-)automatic development of model
   transformations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model transformations; Model-driven development; Design tools and
   techniques
AB Context: Model transformations play a key role in any software development project based on Model-Driven Engineering principles. However, despite the inherent complexity of developing model transformations, little attention has been paid to the application of MDE principles to the development of model transformations.
   Objective: In order to: (a) address the inherent complexity of model transformation development and (b) alleviate the problem of the diversity of the languages that are available for model transformation, this paper proposes the application of MDE principles to the development of model transformations. In particular, we have adopted the idea of handling model transformations as transformation models in order to be able to model, transform and generate model transformations.
   Method: The proposal follows an MDA-based approach that entails the modeling of model transformations at different abstraction levels and the connection of these models by means of model transformations. It has been empirically validated by conducting a set of case studies following a systematic research methodology.
   Results: The proposal was supported by the introduction of MeTAGeM, a methodological and technical framework for the model-driven development of model transformations that bundles a set of Domain-Specific Languages for modeling model transformations with a set of model transformations in order to bridge these languages and (semi-)automate model transformations development.
   Conclusion: This paper serves to show that a semi-automatic development process for model transformations is not only desirable but feasible. This process, based on MDE principles, helps to ease the task of developing model transformations and to alleviate interoperability issues between model transformation languages. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Andrea Bollati, Veronica; Manuel Vara, Juan; Jimenez, Alvaro; Marcos, Esperanza] Rey Juan Carlos Univ, Dept Comp Languages & Syst 2, Kybele Res Grp, Madrid 28933, Spain.
C3 Universidad Rey Juan Carlos
RP Bollati, VA (corresponding author), Rey Juan Carlos Univ, Dept Comp Languages & Syst 2, Kybele Res Grp, Madrid 28933, Spain.
EM veronica.bollati@urjc.es; juanmanuel.vara@urjc.es;
   alvaro.jimenez@urjc.es; esperanza.marcos@urjc.es
RI Vara, Juan Manuel/K-6774-2014; Martinez, Esperanza Marcos/JCE-5935-2023;
   Martinez, Esperanza Marcos/AAS-8564-2021
OI Vara, Juan Manuel/0000-0002-8637-6580; Marcos,
   Esperanza/0000-0003-2666-9995
FU Spanish Ministry of Science and Innovation; MASAI [TIN-2011-22617]
FX This research was carried out in the framework of the MASAI
   (TIN-2011-22617) project, financed by the Spanish Ministry of Science
   and Innovation. The authors wish to thank David Granada for his valuable
   contributions during the implementation tasks.
CR Allilaire F., 2007, FAMILIES PERSONS SIM
   Amelunxen C., 2006, P 2 EUR C MOD DRIV A
   [Anonymous], 2008, MED QVT
   [Anonymous], 1995, MYTHICAL MAN MONTH
   [Anonymous], 2003, P 1 BIENN C INN DAT
   Atzeni P, 2005, PROC INT CONF DATA, P1111
   Atzeni P, 2006, LECT NOTES COMPUT SC, V3896, P368
   Bézivin J, 2006, LECT NOTES COMPUT SC, V3844, P120
   Bézivin J, 2003, LECT NOTES COMPUT SC, V2863, P175
   Bezivin J., 2004, UPGRADE: The European Journal for the Informatics Professional, V5
   Bezivin J., 2006, P 8 IFIP INT C FORM
   Bollati V.A., 2011, THESIS U RJ CARLOS
   Bollati V.A., 2012, P 20120 S APPL COMP, P865
   Brun Cedric, 2008, UPGRADE, The European Journal for the Informatics Professional, V9, P29
   Brunner HH, 2010, INT ITG WORKS SMART, P1, DOI 10.1109/WSA.2010.5456379
   Budinsky F., 2008, Eclipse Modeling Framework, V2nd Revised
   Buttner F., 2006, P 9 INT C MOD DRIV E
   Cabot J, 2007, SCI COMPUT PROGRAM, V68, P179, DOI 10.1016/j.scico.2007.05.001
   Cabot J, 2010, INFORM SYST, V35, P417, DOI 10.1016/j.is.2008.12.002
   Cabot J, 2010, J SYST SOFTWARE, V83, P283, DOI 10.1016/j.jss.2009.08.012
   Cicchetti A., 2008, P 12 INT IEEE ENT DI
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Davis J., 2003, P COMP 18 ANN ACM SI, P82
   De Castro V, 2011, INFORM SOFTWARE TECH, V53, P87, DOI 10.1016/j.infsof.2010.09.002
   de Lara J., 2004, SOFTWARE SYSTEMS MOD, V3, P194, DOI [DOI 10.1007/S10270-003-0047-5, 10.1007/s10270-003-0047-5]
   Del Fabro MD, 2009, SOFTW SYST MODEL, V8, P305, DOI 10.1007/s10270-008-0094-z
   Didonet Del Fabro M., 2007, THESIS U NANTES NANT
   Efftinge S., 2008, BEST PRACTICES MODEL
   Guerra E., SOFTWARE SYSTEMS MOD
   Jouault F., 2006, 5 INT C GEN PROGR CO, P249, DOI DOI 10.1145/1173706.1173744
   Jouault F., CLASS RELATIONAL ATL
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Jouault F, 2007, SCI COMPUT PROGRAM, V68, P114, DOI 10.1016/j.scico.2007.05.005
   Kilster J.M., 3621 RZ IBM RES
   Koch N., 2006, P WORKSH 6 INT C WEB, V155
   Kolovos Dimitrios S., 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P356, DOI 10.1109/ICST.2008.23
   Kolovos D.S., 2008, P 1 INT C MOD TRANSF
   Kurtev I., 2007, P 3 INT S APPL GRAPH
   Kusel A., 2009, P DOCT S MODELS 2009
   Langer P., 2011, P 49 INT C OBJ MOD C, V6705, P52
   Lano Kevin, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P47, DOI 10.1007/978-3-642-21732-6_4
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Miller J., 2001, TECHNICAL PERSPECTIV
   Muller P.A., 2006, P MOD DRIV ENG LANG
   OMG, FORMAL080403 OMG
   Pérez-Castillo R, 2012, J SYST SOFTWARE, V85, P1370, DOI 10.1016/j.jss.2012.01.022
   Rodríguez A, 2010, INFORM SOFTWARE TECH, V52, P945, DOI 10.1016/j.infsof.2010.03.015
   Rose L.M., 2011, P 13 INT C MOD DRI 1, P61
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sanchez Cuadrado Jesus, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P62, DOI 10.1007/978-3-642-21732-6_5
   Sanchez Cuadrado J., 2008, P 1 INT C THEOR PRAC
   Sanchez Cuadrado J., 2006, P EUR C MOD DRIV ARC
   Cuadrado JS, 2009, LECT NOTES COMPUT SC, V5421, P273, DOI 10.1007/978-3-642-01648-6_29
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Tisi M, 2009, LECT NOTES COMPUT SC, V5562, P18, DOI 10.1007/978-3-642-02674-4_3
   Tolvanen J., 2003, 18 ANN ACM SIGPLAN C
   Tratt L., 2005, Software and Systems Modeling, V4, P112, DOI [DOI 10.1007/S10270-004-0070-1, 10.1007/s10270-004-0070-1]
   Vara J.M., 2009, P INT C MOD TRANSF I
   Vara J.M., 2005, International Journal of Web Services Practices, V1, P1
   Vara J.M., 2008, P INT C EMB REAL TIM
   Vara J.M., 2009, INT J COMPUTER APPL, V39, P245
   Vara JM, 2012, J SYST SOFTWARE, V85, P2368, DOI 10.1016/j.jss.2012.04.080
   Vignaga A., 2007, TRDCC20071
   Vignaga A., 2009, Metrics for measuring atl model transformations
   Vignaga A., 2007, P MOD DRIV ENG LANG
   Völter M, 2011, IEEE SOFTWARE, V28, P20, DOI 10.1109/MS.2011.139
   Wimmer M, 2009, LECT NOTES BUS INF P, V20, P315
   Winkler S., 2009, Software and Systems Modeling, V9, P529
NR 71
TC 31
Z9 32
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2013
VL 55
IS 4
BP 699
EP 718
DI 10.1016/j.infsof.2012.11.004
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 111NE
UT WOS:000316527200005
DA 2024-07-18
ER

PT J
AU de Gea, JMC
   Nicolás, J
   Alemán, JLF
   Toval, A
   Ebert, C
   Vizcaíno, A
AF Carrillo de Gea, Juan M.
   Nicolas, Joaquin
   Fernandez Aleman, Jose L.
   Toval, Ambrosio
   Ebert, Christof
   Vizcaino, Aurora
TI Requirements engineering tools: Capabilities, survey and assessment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements engineering tools; Survey; ISO/IEC TR 24766:2009
ID AGREEMENT
AB Context: There is a significant number of requirements engineering (RE) tools with different features and prices. However, existing RE tool lists do not provide detailed information about the features of the tools that they catalogue. It would therefore be interesting for both practitioners and tool developers to be aware of the state-of-the-art as regards RE tools.
   Objective: This paper presents the results of a survey answered by RE tool vendors. The purpose of the survey was to gain an insight into how current RE tools support the RE process by means of concrete capabilities, and to what degree.
   Method: The ISO/IEC TR 24766:2009 is a framework for assessing RE tools' capabilities. A 146-item questionnaire based principally on the features covered by this international guideline was sent to major tool vendors worldwide. A descriptive statistical study was then carried out to provide comparability, and bivariate correlation tests were also applied to measure the association between different variables. A sample of the tools was subjected to neutral assessment and an interrater reliability analysis was performed to ensure the reliability of the results.
   Results: The 38 participants sent back their answers. Most tools are delivered under a proprietary license, and their licenses are not free. A growing number of them facilitate Web access. Moreover, requirements elicitation exemplifies the best supported category of features in this study, whereas requirements modeling and management are the most badly supported categories.
   Conclusion: The RE process seems to be well covered by current RE tools, but there is still a certain margin for amelioration, principally with regard to requirements modeling, open data model and data integration features. These subjects represent areas for improvement for RE tool developers. Practitioners might also obtain useful ideas from the study to be taken into account when selecting an appropriate RE tool to be successfully applied to their work. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Carrillo de Gea, Juan M.; Nicolas, Joaquin; Fernandez Aleman, Jose L.; Toval, Ambrosio] Univ Murcia, Software Engn Res Grp, Murcia, Spain.
   [Ebert, Christof] Vector Consulting Serv, Stuttgart, Germany.
   [Vizcaino, Aurora] Univ Castilla La Mancha, Alarcos Res Grp, E-13071 Ciudad Real, Spain.
C3 University of Murcia; Universidad de Castilla-La Mancha
RP de Gea, JMC (corresponding author), Univ Murcia, Software Engn Res Grp, Murcia, Spain.
EM jmcdg1@um.es; jnr@um.es; aleman@um.es; atoval@um.es;
   christof.ebert@vector.com; aurora.vizcaino@uclm.es
RI Ebert, Christof/JXM-5500-2024; Nicolás Ros, Joaquín/C-6321-2015; Toval,
   Ambrosio/P-1180-2014; Fernández-Alemán, José Luis/H-5256-2019; Vizcaíno,
   Aurora/D-4452-2011; Carrillo de Gea, Juan Manuel/P-1224-2014
OI Nicolás Ros, Joaquín/0000-0003-1760-3804; Toval,
   Ambrosio/0000-0002-8273-5937; Fernández-Alemán, José
   Luis/0000-0002-0176-450X; Vizcaíno, Aurora/0000-0002-2072-5581; Carrillo
   de Gea, Juan Manuel/0000-0002-3320-622X
FU PEGASO/PANGEA Project [TIN2009-13718-C02-02]; ORIGIN Integrated Project
   [IDI-2010043 (1-5)]; ENGLOBAS Project [PII2I09-0147-8235]
FX Grateful thanks are owed to the 38 participants of the survey for their
   invaluable help in this study. This work has been funded by the
   PEGASO/PANGEA Project (TIN2009-13718-C02-02), the ORIGIN Integrated
   Project (IDI-2010043 (1-5)) and the ENGLOBAS Project
   (PII2I09-0147-8235).
CR Alenjung B, 2008, LECT NOTES COMPUT SC, V5025, P52, DOI 10.1007/978-3-540-69062-7_5
   Altman D.G., 1991, TEXTS STAT SCI SERIE
   [Anonymous], 2009, 247662009 ISOIEC JTC
   [Anonymous], 2008, 141022008 ISOIEC JTC
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Beuche D, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P84, DOI 10.1109/SPLINE.2007.15
   de Gea JMC, 2011, IEEE SOFTWARE, V28, P86
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Dougherty J., 1995, Machine Learning. Proceedings of the Twelfth International Conference on Machine Learning, P194
   Draper S., 2011, HAWTHORNE PYGMALION
   Fleiss J.L., 2013, Statistical Methods for Rates and Proportions
   Giorgini P, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P451, DOI 10.1109/RE.2005.67
   Gotel O, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P365, DOI 10.1109/RE.2009.49
   Gregoriades A, 2005, IEEE T SOFTWARE ENG, V31, P392, DOI 10.1109/TSE.2005.59
   Haas LM, 2002, IBM SYST J, V41, P578, DOI 10.1147/sj.414.0578
   Hall RJ, 2008, AUTOMAT SOFTW ENG, V15, P113, DOI 10.1007/s10515-008-0026-8
   Hamann R. J., 2001, Systems Engineering, V4, P169, DOI 10.1002/sys.1014
   Heindl M, 2006, EUROMICRO CONF PROC, P266, DOI 10.1109/EUROMICRO.2006.64
   Hoffmann M, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P301
   Jiang L, 2007, P INT COMP SOFTW APP, P319
   Johansson B, 2010, P 25 ACM S APPL COMP, P169, DOI [10.1145/1774088.1774123, DOI 10.1145/1774088.1774123]
   Jorgensen M., 2002, EMPIR SOFTW ENG, V7, P9, DOI [DOI 10.1023/A:1014866909191, 10.1023/A:1014866909191]
   Kääriäinen J, 2004, EUROMICRO CONF PROC, P342, DOI 10.1109/EURMIC.2004.1333389
   Kitchenham B., 1996, DESMET: A method for evaluating Software Engineering methods and tools
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lanubile F, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.39
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Maiden N, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P29
   Mellado D, 2007, COMPUT STAND INTER, V29, P244, DOI 10.1016/j.csi.2006.04.002
   Monteiro MR, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P253, DOI 10.1109/RE.2009.7
   Myers B., 1998, 20041068 USGS
   Nakatani T, 2006, IEEE INT CONF AUTOM, P378
   OMG, 2011, REQ INT FORM REQLF V
   Ott L., 2010, INTRO STAT METHODS D, P56
   Portillo-Rodriguez J., 2010, IEEE SOFTWARE, V27, P10
   Schmid K, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P113
   Schmid R., 2000, 20041068 USGS
   Seyff N, 2004, PROC INT CONF SOFTW, P713, DOI 10.1109/ICSE.2004.1317501
   Staron M, 2009, INFORM SOFTWARE TECH, V51, P721, DOI 10.1016/j.infsof.2008.10.001
   Toval A, 2008, COMPUT SYST SCI ENG, V23, P373
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Youngki Hong, 2010, Proceedings 8th ACIS International Conference on Software Engineering Research, Management and Applications (SERA 2010), P248, DOI 10.1109/SERA.2010.39
   Zowghi D, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P19, DOI 10.1007/3-540-28244-0_2
NR 45
TC 52
Z9 62
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2012
VL 54
IS 10
BP 1142
EP 1157
DI 10.1016/j.infsof.2012.04.005
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 983QK
UT WOS:000307133600007
DA 2024-07-18
ER

PT J
AU Lee, J
   Lee, SJ
   Chen, HM
   Wu, CL
AF Lee, Jonathan
   Lee, Shin-Jie
   Chen, Hsi-Min
   Wu, Chia-Ling
TI Composing web services enacted by autonomous agents through
   agent-centric contract net protocol
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Autonomous agents; Web service composition; Agent organization; Dynamic
   role binding; Reputation model
ID BINDING
AB Context: Agents are considered as one of the fundamental technologies underlying open and dynamic systems that are largely enabled by the semantic web and web services. Recently, there is a trend to introduce the notion of autonomy empowered by agents into web services. However, it has been argued that the characteristics of autonomy will make agents become available intermittently and behave variedly over time, which therefore increase the complexity on devising mechanisms for composing services enacted by autonomous agents.
   Objective: In this work, we propose an extension to Contract Net protocol, called Agent-centric Contract Net Protocol (ACNP), as a negotiation mechanism with three key features for composing web services enacted by autonomous agents.
   Method: (1) A matchmaking mechanism embedded in a middle agent (as a service matchmaker) for discovering web services that are available intermittently is presented based on the concept of agent roles; (2) A selection algorithm based on risk-enabled reputation model (REAL) embedded in a manager agent (as a service composer) is introduced to serve a basis for selecting web services with variant performance; and (3) A negotiation mechanism between a manager agent and contractor agents (as atomic services) is devised and enables both a service composer and the atomic services to request, refuse or agree on adapting changes of services.
   Results: The problem of assembling a computer is discussed in this paper.
   Conclusion: It is increasingly recognised that web services would become more autonomous by introducing diverse agent technologies to better constitute more complex systems in open and dynamic environments. As web service technologies are best exploited by composite services, it is imperative to devise mechanisms for composing services of autonomy. (c) 2012 Elsevier B.V. All rights reserved.
C1 [Lee, Jonathan; Lee, Shin-Jie; Chen, Hsi-Min; Wu, Chia-Ling] Natl Cent Univ, Dept Comp Sci & Informat Engn, Jhongli 320, Taiwan.
C3 National Central University
RP Lee, SJ (corresponding author), Natl Cent Univ, Dept Comp Sci & Informat Engn, Jhongli 320, Taiwan.
EM yjlee@selab.csie.ncu.edu.tw; jielee@selab.csie.ncu.edu.tw;
   seeme@selab.csie.ncu.edu.tw; wucl@selab.csie.ncu.edu.tw
RI Lee, Shin-Jie/B-9646-2009
FU National Science Council (Taiwan) [NSC 97-2221-E-008-039-MY3, NSC
   100-2631-H-008-006]
FX This research was sponsored by National Science Council (Taiwan) under
   the grant NSC 97-2221-E-008-039-MY3 and the grant NSC
   100-2631-H-008-006.
CR Andrews T., 2003, INERT1989 ROC
   [Anonymous], 2002, FIPA CONTR NET INT P
   [Anonymous], 2004, Web Semantics: Science, Services and Agents on the World Wide Web
   [Anonymous], 2005, WEB SERV MOD ONT WSM
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   BALBO F, 2009, WEB INTELLIGENCE, P422
   Berardi D, 2003, LECT NOTES COMPUT SC, V2910, P43
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Buhler P. A., 2005, Information Technology & Management, V6, P61, DOI 10.1007/s10799-004-7775-2
   Canfora G, 2008, J SYST SOFTWARE, V81, P1754, DOI 10.1016/j.jss.2007.12.792
   Charif-Djebbar Y., 2006, P 2006 IEEE WIC ACM
   Curbera F, 2003, COMMUN ACM, V46, P29, DOI 10.1145/944217.944234
   ESSI WSML Working Group Members, 2008, WEB SERV MOD LANG WS
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   *FDN INT PHYS AG, 2002, FIPA COMM ACT LIB SP
   Foundation for Intelligent Physical Agents, 2002, FIPA ACL SPEC
   Fu X., 2004, P 13 INT C WORLD WID, P621
   García-Sánchez F, 2009, EXPERT SYST APPL, V36, P3167, DOI 10.1016/j.eswa.2008.01.037
   Gerede CE, 2005, P IEEE I C SERV COMP, P103
   Harney John, 2008, IEEE Transactions on Services Computing, V1, P169, DOI 10.1109/TSC.2008.11
   Huhns MN, 2002, IEEE INTERNET COMPUT, V6, P93, DOI 10.1109/MIC.2002.1020332
   Jennings NR, 2000, ARTIF INTELL, V117, P277, DOI 10.1016/S0004-3702(99)00107-1
   Kim I.-C., 2006, LECT NOTES COMPUTER, V4277, P422
   Lecue F., 2009, P 7 IEEE EUR C WEB S
   Lee J, 2004, FUZZY SET SYST, V144, P105, DOI 10.1016/j.fss.2003.10.016
   Lee J, 2003, IEEE T SYST MAN CY B, V33, P214, DOI 10.1109/TSMCB.2003.810446
   Lee J., 2011, SERVICE LIFE CYCLE T
   Lee J, 2008, INT J SOFTW ENG KNOW, V18, P199, DOI 10.1142/S0218194008003635
   Lee J, 2008, IEEE SYS MAN CYBERN, P636, DOI 10.1109/ICSMC.2008.4811349
   Lee J, 2008, IEEE SYS MAN CYBERN, P619, DOI 10.1109/ICSMC.2008.4811346
   Luck M., 2004, ARTECH H COMP SEC LI
   Marconi A, 2006, LECT NOTES COMPUT SC, V4294, P459
   Maximilien E.M., 2004, 2 INT C SERVICE ORIE, P212
   Mehandjiev N, 2009, LECT NOTES COMPUT SC, V5900, P205, DOI 10.1007/978-3-642-10383-4_14
   Munroe S, 2006, KNOWL ENG REV, V21, P345, DOI 10.1017/S0269888906001020
   Nitzsche J, 2007, LECT NOTES COMPUT SC, V4805, P179
   Object Management Group UML (Unified Modeling Language), 2009, UML UN MOD LANG
   Odell J. J., 2001, Agent-Oriented Software Engineering. First International Workshop, AOSE 2000. Revised Papers (Lecture Notes in Computer Science Vol.1957), P121
   OWL Web Ontology Language Overview, 2004, W3C RECOMMENDATION
   Paolucci M., 2004, 1 INT SEM WEB SERV S
   Papazoglou MP, 2003, COMMUN ACM, V46, P25, DOI 10.1145/944217.944233
   Payne TR, 2008, IEEE INTELL SYST, V23, P12, DOI 10.1109/MIS.2008.37
   Pistore M., 2005, P 19 INT JOINT C ART, P1252
   Ramchurn SD, 2004, KNOWL ENG REV, V19, P1, DOI 10.1017/S0269888904000116
   Sabater J., 2002, P 1 INT JOINT C AUT, P1104
   San-Yih Hwang, 2008, IEEE Transactions on Services Computing, V1, P104, DOI 10.1109/TSC.2008.2
   SMITH RG, 1980, IEEE T COMPUT, V29, P1104, DOI 10.1109/TC.1980.1675516
   *W3C MEMB SUBM, 2004, OWL S SEM MARK WEB S
   W3C Member Submission Semantic Web Services Language (SWSL), 2005, SEM WEB SERV LANG SW
   Yan J, 2007, FUTURE GENER COMP SY, V23, P748, DOI 10.1016/j.future.2007.02.004
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
NR 51
TC 17
Z9 18
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2012
VL 54
IS 9
BP 951
EP 967
DI 10.1016/j.infsof.2012.03.001
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 977BP
UT WOS:000306631700003
DA 2024-07-18
ER

PT J
AU Sampath, S
   Bryce, RC
AF Sampath, Sreedevi
   Bryce, Renee C.
TI Improving the effectiveness of test suite reduction for
   user-session-based testing of web applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Test suite prioritization; Test suite reduction; Ordering reduced
   suites; Web application testing; User-session-based testing
ID TEST-CASE PRIORITIZATION; COVERAGE
AB Context: Test suite reduction is the problem of creating and executing a set of test cases that are smaller in size but equivalent in effectiveness to an original test suite. However, reduced suites can still be large and executing all the tests in a reduced test suite can be time consuming.
   Objective: We propose ordering the tests in a reduced suite to increase its rate of fault detection. The ordered reduced test suite can be executed in time constrained situations, where, even if test execution is stopped early, the best test cases from the reduced suite will already be executed.
   Method: In this paper, we present several approaches to order reduced test suites using experimentally verified prioritization criteria for the domain of web applications. We conduct an empirical study with three subject applications and user-session-based test cases to demonstrate how ordered reduced test suites often make a practical contribution. To enable comparison between test suites of different sizes, we develop Mod_APFD_C, a modification of the traditional prioritization effectiveness measure.
   Results: We find that by ordering the reduced suites, we create test suites that are more effective than unordered reduced suites. In each of our subject applications, there is at least one ordered reduced suite that outperforms the best unordered reduced suite and the best prioritized original suite.
   Conclusions: Our results show that when a tester does not have enough time to execute the entire reduced suite, executing an ordered reduced suite often improves the rate of fault detection. By coupling the underlying system's characteristics with observations from our study on the criteria that produce the best ordered reduced suites, a tester can order their reduced test suites to obtain increased testing effectiveness. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Sampath, Sreedevi] Univ Maryland Baltimore Cty, Dept Informat Syst, Baltimore, MD 21250 USA.
   [Bryce, Renee C.] Utah State Univ, Dept Comp Sci, Logan, UT 84322 USA.
C3 University System of Maryland; University of Maryland Baltimore County;
   Utah System of Higher Education; Utah State University
RP Sampath, S (corresponding author), Univ Maryland Baltimore Cty, Dept Informat Syst, Baltimore, MD 21250 USA.
EM sampath@umbc.edu; Renee.Bryce@usu.edu
FU NIST [70NANB10H048]
FX This research is supported by NIST Grant No. 70NANB10H048. Reference to
   commercial products or trademarks does not imply endorsement by NIST,
   nor that such products are necessarily best suited to any purpose. Our
   tool, CPUT: Combinatorial-based Prioritization for User-session-based
   Testing, provides functionality to prioritize test suites such as those
   in this paper [28].
CR Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Bertolino A., 2010, INT C TEST SOFTW SYS, P13
   Birkhoff G., 1940, LATTICE THEORY AM MA, V5
   Black J, 2004, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2004.1317433
   Bryce RC, 2011, IEEE T SOFTWARE ENG, V37, P48, DOI 10.1109/TSE.2010.12
   Do H., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering (SIGSOFT '08/FSE-16), P71
   Do Hyunsook., 2006, P ACM SIGSOFT INT S, P141, DOI DOI 10.1145/1181775.1181793
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P187, DOI 10.1109/TSE.2005.36
   Elbaum S, 2004, SOFTWARE QUAL J, V12, P185, DOI 10.1023/B:SQJO.0000034708.84524.22
   Elbaum S, 2003, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.2003.1201187
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Heimdahl MPE, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P176, DOI 10.1109/ASE.2004.1342735
   Hsu HY, 2009, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2009.5070541
   Jeffrey D, 2005, PROC IEEE INT CONF S, P549
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Lin JW, 2009, INFORM SOFTWARE TECH, V51, P679, DOI 10.1016/j.infsof.2008.11.004
   Liu WL, 2007, INT C COMP AID DES C, P252
   McMaster S, 2008, IEEE T SOFTWARE ENG, V34, P99, DOI 10.1109/TSE.2007.70756
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Rothermel G, 2004, ACM T SOFTW ENG METH, V13, P277, DOI 10.1145/1027092.1027093
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Sampath S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P132, DOI 10.1109/ASE.2004.1342731
   Sampath S., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P574, DOI 10.1109/ICSM.2011.6080833
   Sampath S., 2008, INT C SOFTW TEST VER, P141
   Sampath S, 2007, IEEE T SOFTWARE ENG, V33, P643, DOI 10.1109/TSE.2007.70723
   Sampath S, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P266
   Sprenkle S, 2005, PROC IEEE INT CONF S, P587
   Sprenkle S, 2007, INT S SOFTW REL ENG, P253
   Sprenkle Sara., 2005, AUTOMAT SOFTW ENG, P253, DOI DOI 10.1145/1101908.1101947
   WONG WE, 1995, PROC INT CONF SOFTW, P41, DOI 10.1145/225014.225018
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Yoo S, 2010, J SYST SOFTWARE, V83, P689, DOI 10.1016/j.jss.2009.11.706
NR 37
TC 18
Z9 21
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2012
VL 54
IS 7
BP 724
EP 738
DI 10.1016/j.infsof.2012.01.007
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 946WG
UT WOS:000304387600005
DA 2024-07-18
ER

PT J
AU Mondéjar, R
   García-López, P
   Pairot, C
   Pamies-Juarez, L
AF Mondejar, Ruben
   Garcia-Lopez, Pedro
   Pairot, Caries
   Pamies-Juarez, Lluis
TI Damon: A distributed AOP middleware for large-scale scenarios
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Distributed AOP; Middleware; Composition; Peer-to-peer; ADL
AB Context: The development of distributed applications in large-scale environments has always been a complex task. In order to guarantee non-functional properties like scalability or availability, developers are usually faced with the same problems over and over again. These problems can be separated in distributed concerns, as for example, distribution, load-balancing or replication, just to name a few. Nevertheless, none of the current solutions in adaptive middleware area, like Aspect-Oriented Programming (AOP), is capable of implementing these distributed concerns transparently.
   Objective: In this article, we present a distributed AOP middleware for large-scale development, called Damon. Its main goal is to implement true distributed aspects, which enables the use of distributed concerns in applications that were not specifically designed for distributed or large-scale scenarios.
   Method: Our middleware comprises two main layers: a distributed composition model and a scalable deployment platform. The distributed composition model envisages separation of distributed aspects, taking the necessary features from component models, like distribution facilities and connectors, and from computational reflection, like introspection and meta-levels. This recursive and fully distributed model provides its own Architecture Description Language (ADL), and thus allows low dependency and high cohesion among distributed aspects. Additionally, our model is built on top of a deployment platform where distributed aspects are disseminated and activated in individual or grouped hosts. This platform benefits from peer-to-peer and dynamic AOP substrates to implement its services in a decentralized, decoupled, and efficient way.
   Results: Therefore, our middleware solution reduces the complexity of distributed application development, managing separated functionalities, and enabling necessary services like transparent reconfiguration and deployment at runtime. Finally, we have implemented a functional prototype and we conducted several experiments using the PlanetLab testbed. Conclusion: Our distributed AOP approach fulfills the large-scale scenarios requirements, and represents a solid building block for future distributed transparent infrastructures. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Mondejar, Ruben; Garcia-Lopez, Pedro; Pairot, Caries; Pamies-Juarez, Lluis] Univ Rovira & Virgili, Dept Comp Engn & Math, Tarragona 43007, Spain.
C3 Universitat Rovira i Virgili
RP Mondéjar, R (corresponding author), Univ Rovira & Virgili, Dept Comp Engn & Math, Tarragona 43007, Spain.
EM ruben.mondejar@urv.cat; pedro.garcia@urv.cat; carles.pairot@urv.cat;
   lluis.pamies@urv.cat
RI Pamies-Juarez, Lluis/X-1387-2019; Garcia Lopez, Pedro/Q-5153-2018
OI Garcia Lopez, Pedro/0000-0002-9848-1492
FU Spanish Ministry of Science and Innovation [TIN2010-20140-C03-03]
FX This work has been partially funded by the Spanish Ministry of Science
   and Innovation through project DELFIN TIN2010-20140-C03-03.
CR Abdellatif T, 2004, LECT NOTES COMPUT SC, V3291, P1571
   Antony I., 2001, LECT NOTES COMPUTER, P329, DOI DOI 10.1007/3-540-45518-3_18
   Bruneton E, 2006, SOFTWARE PRACT EXPER, V36, P1257, DOI 10.1002/spe.767
   Chitchyan I.S.R., 2004, P AOSD 04 DYN ASP WO, P23
   Dabek R, 2003, LECT NOTES COMPUT SC, V2735, P33
   Daniel Luis., 2006, AOSD 06, P51
   Griswold WG, 2006, IEEE SOFTWARE, V23, P51, DOI 10.1109/MS.2006.24
   Kiczales G., 1998, P EUR C OBJ OR PROGR, P48
   Kiczales G., 1991, The Art of the Metaobject Protocol
   Ktari Salma., 2007, MUM 07 P 6 INT C MOB, P90, DOI DOI 10.1145/1329469.1329481
   Lagaisse B, 2006, LECT NOTES COMPUT SC, V4290, P42
   McAffer J., 1995, Proceeding. Fourth International Workshop on Object-Orientation in Operating Systems (IWOOOS '95) (Cat. No.95TH8120), P232, DOI 10.1109/IWOOS.1995.470549
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Monclejar R., 2006, P 6 INT WORKSH SOFTW, P23
   Mondejar R., 2009, 24 ANN ACM S APPL CO
   Mondejar R., 2011, FUTURE GENERATION CO
   Neuman B.C., 1994, CHAPTER SCALE DISTRI, P463
   Nishizawa M., 2004, PROC 3 INT C AOSD LA, P7, DOI DOI 10.1145/976270.976274
   Oster G, 2010, COMPUT NETW, V54, P1939, DOI 10.1016/j.comnet.2010.03.019
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Pawlak R, 2004, SOFTWARE PRACT EXPER, V34, P1119, DOI 10.1002/spe.605
   Robert S., 2005, SEM, P76
   Soares S, 2002, ACM SIGPLAN NOTICES, V37, P174, DOI 10.1145/583854.582437
   Stoica I, 2003, IEEE ACM T NETWORK, V11, P17, DOI 10.1109/TNET.2002.808407
   Surajbali B., 2010, 9 AOSD WORKSH ASP CO
   Tanenbaum A.S., 2006, DISTRIBUTED SYSTEMS
   Tanter É, 2006, LECT NOTES COMPUT SC, V4025, P316
NR 27
TC 4
Z9 5
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2012
VL 54
IS 3
BP 317
EP 330
DI 10.1016/j.infsof.2011.10.004
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 898KM
UT WOS:000300741300007
DA 2024-07-18
ER

PT J
AU Al Dallal, J
AF Al Dallal, Jehad
TI Improving the applicability of object-oriented class cohesion metrics
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Metric applicability; Object-oriented software quality; Object-oriented
   class cohesion; Fault prediction
ID QUALITY; SUITE
AB Context: Class cohesion is an important object-oriented quality attribute. It refers to the degree of relatedness between the methods and attributes of a class. Several metrics have been proposed to measure the extent to which the class members are related. Most of these metrics have undefined values for a relatively high percentage of classes, which limits their applicability. The classes that have undefined values lack methods, attributes, or parameter types, or they include only a single method.
   Objective: We improve the applicability of the class cohesion metrics by defining their values for such special classes. In addition, we theoretically and empirically validate the improved metrics.
   Method: We theoretically examine whether the defined values satisfy the key cohesion properties. In addition, we empirically validate the metrics before and after the improvements to test whether the defined values improve the ability of the metrics to evaluate class cohesion. We also explore the correlation between the metrics and the presence of faulty classes to indirectly determine the strength or weakness of the metrics in indicating class quality.
   Results: The results show that our assigned values for the undefined cases do not violate the key cohesion properties and considerably improve the ability of the metrics to explain the presence of faulty classes and may therefore improve their ability to indicate the quality of the class design.
   Conclusions: Having the class cohesion metrics defined for all possible cases improves the applicability of the metrics and potentially increases their precision in indicating class quality. (C) 2011 Published by Elsevier B.V.
C1 Kuwait Univ, Dept Informat Sci, Safat 13060, Kuwait.
C3 Kuwait University
RP Al Dallal, J (corresponding author), Kuwait Univ, Dept Informat Sci, POB 5969, Safat 13060, Kuwait.
EM jehad@ku.edu.kw
RI Al Dallal, Jehad/HTL-9247-2023
OI Al Dallal, Jehad/0000-0003-3679-4351
FU Kuwait University [WI04/08]
FX The authors would like to acknowledge the support of this work by Kuwait
   University Research Grant WI04/08. In addition, the authors would like
   to thank Walid Bahsow for developing the class cohesion measuring tool
   and Saqiba Sulman for assisting in collecting the cohesion results.
CR Abdi H., 2007, Encyclopedia of measurement and statistics, DOI DOI 10.4135/9781412952644.N299
   Aggarwal KK, 2007, J OBJECT TECHNOL, V6, P127, DOI 10.5381/jot.2007.6.10.a5
   Al Dallal J, 2009, IET SOFTW, V3, P46, DOI 10.1049/iet-sen:20080054
   Al Dallal J., 2010, INT J COMPUTER SCI, V4, P45
   Al Dallal J, 2010, INFORM SOFTWARE TECH, V52, P1346, DOI 10.1016/j.infsof.2010.08.006
   Al Dallal J, 2007, PROC WRLD ACAD SCI E, V25, P448
   [Anonymous], ILLUSION
   [Anonymous], OPENBRAVO
   [Anonymous], ACM SIGSOFT SOFTWARE
   [Anonymous], INFORM SOFTWAR UNPUB
   [Anonymous], P 10 WSEAS INT C SOF
   [Anonymous], IEEE T SOFT IN PRESS
   [Anonymous], INT C COMP SYST TECH
   [Anonymous], INT J INFORM TECHNOL
   [Anonymous], 9 PANH C INF THESS G
   [Anonymous], JABREF
   [Anonymous], GANTTPROJECT
   [Anonymous], INT C SOFTW ENG P 20
   [Anonymous], P 8 WSEAS INT C SOFT
   [Anonymous], ACM T SOFTW IN PRESS
   [Anonymous], 2006, INT J INF THEOR APPL
   [Anonymous], P 1995 S SOFTW REUS
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Badri L., 2004, J OBJECT TECHNOL, V3, P145
   Bansiya J, 1999, J OBJECT-ORIENT PROG, V11, P47
   Bieman JM, 1998, IEEE T SOFTWARE ENG, V24, P111, DOI 10.1109/32.666825
   BIEMAN JM, 1994, IEEE T SOFTWARE ENG, V20, P644, DOI 10.1109/32.310673
   Bonja C., 2006, ACM SE 44 P 44 ANN S, P91
   Briand L. C., 2001, Empirical Software Engineering, V6, P11, DOI 10.1023/A:1009815306478
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2002, ADV COMPUT, V56, P97, DOI 10.1016/S0065-2458(02)80005-5
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P722, DOI 10.1109/32.815329
   Chae HS, 2000, SOFTWARE PRACT EXPER, V30, P1405, DOI 10.1002/1097-024X(200010)30:12<1405::AID-SPE330>3.0.CO;2-3
   Chen ZQ, 2002, PROC IEEE INT CONF S, P377, DOI 10.1109/ICSM.2002.1167794
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   Counsell S, 2006, ACM T SOFTW ENG METH, V15, P123, DOI 10.1145/1131421.1131422
   Emerson T. J., 1984, Proceedings of the 7th International Conference on Software Engineering (cat. no. 84CH2011-5), P294
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Hitz M., 1995, International Symposium on Applied Corporate Computing, P25
   Hosmer W., 2000, Applied Logistic Regression, VSecond
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   LAKHOTIA A, 1993, PROC INT CONF SOFTW, P35, DOI 10.1109/ICSE.1993.346057
   Li W., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P52, DOI 10.1109/METRIC.1993.263801
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Meyers TM, 2007, ACM T SOFTW ENG METH, V17, DOI 10.1145/1314493.1314495
   Olson D.L., 2008, ADV DATA MINING TECH, DOI https://doi.org/10.1007/978-3-540-76917-0
   Ott L. M., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P71, DOI 10.1109/METRIC.1993.263799
   Samoladas I, 2008, INT FED INFO PROC, V275, P237
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Spinellis D, 2009, ELECTRON NOTES THEOR, V233, P5, DOI 10.1016/j.entcs.2009.02.058
   TROY DA, 1981, J SYST SOFTWARE, V2, P113, DOI 10.1016/0164-1212(81)90031-5
   Wang JM, 2005, INFORM SOFTWARE TECH, V47, P167, DOI 10.1016/j.infsof.2004.07.001
   Yourdon E., 1979, STRUCTURED DESIGN
   Zhou YM, 2002, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.2002.1167746
NR 59
TC 19
Z9 20
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2011
VL 53
IS 9
SI SI
BP 914
EP 928
DI 10.1016/j.infsof.2011.03.004
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 795DC
UT WOS:000292950700002
DA 2024-07-18
ER

PT J
AU Omoronyia, I
   Sindre, G
   Stålhane, T
AF Omoronyia, Inah
   Sindre, Guttorm
   Stalhane, Tor
TI Exploring a Bayesian and linear approach to requirements traceability
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements traceability; Maintenance; Collaborative work
ID NETWORK
AB Context: For large software projects it is important to have some traceability between artefacts from different phases (e.g.requirements, designs, code), and between artefacts and the involved developers. However, if the capturing of traceability information during the project is felt as laborious to developers, they will often be sloppy in registering the relevant traceability links so that the information is incomplete. This makes automated tool-based collection of traceability links a tempting alternative, but this has the opposite challenge of generating too many potential trace relationships, not all of which are equally relevant.
   Objective: This paper evaluates how to rank such auto-generated trace relationships.
   Method: We present two approaches for such a ranking: a Bayesian technique and a linear inference technique. Both techniques depend on the interaction event trails left behind by collaborating developers while working within a development tool.
   Results: The outcome of a preliminary study suggest the advantage of the linear approach, we also explore the challenges and potentials of the two techniques.
   Conclusion: The advantage of the two techniques is that they can be used to provide traceability insights that are contextual and would have been much more difficult to capture manually. We also present some key lessons learnt during this research. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Omoronyia, Inah] Univ Limerick, Lero Irish Software Engn Res Ctr, Limerick, Ireland.
   [Sindre, Guttorm; Stalhane, Tor] NTNU, Dept Comp & Informat Sci, Trondheim, Norway.
C3 University of Limerick; Norwegian University of Science & Technology
   (NTNU)
RP Omoronyia, I (corresponding author), Univ Limerick, Lero Irish Software Engn Res Ctr, Limerick, Ireland.
EM inah.omoronyia@lero.ie; Guttorm.Sindre@idi.ntnu.no;
   Tor.Stalhane@idi.ntnu.no
OI Sindre, Guttorm/0000-0001-5739-8265
FU Science Foundation Ireland [03/CE2/I303-1]
FX This work was supported, in part, by Science Foundation Ireland Grant
   03/CE2/I303-1 to Lero - the Irish Software Engineering Research Centre
   (http://www.lero.ie).
CR Anda B, 2006, EMPIR SOFTW ENG, V11, P555, DOI 10.1007/s10664-006-9020-6
   [Anonymous], 2021, Bayesian Data Analysis
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   ANTONIOL G, 2000, WCRE, P240
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Briand LC, 2009, INFORM SOFTWARE TECH, V51, P512, DOI 10.1016/j.infsof.2008.06.002
   Dahll G, 2000, NUCL ENG DES, V195, P307, DOI 10.1016/S0029-5493(99)00213-7
   De Lucia A, 2009, EMPIR SOFTW ENG, V14, P57, DOI 10.1007/s10664-008-9090-8
   Dechter R., 1997, Constraints, V2, P51, DOI 10.1023/A:1009796922698
   Di Penta M, 2002, PROG COMPREHEN, P207, DOI 10.1109/WPC.2002.1021342
   Fritz T., 2007, ESEC-FSE '07: Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering September 2007, P341, DOI [10.1145/ 1287624.1287673, DOI 10.1145/1287624.1287673]
   Gagliardi Cozman F., 2000, WORKSH PROB REAS ART, P27
   Gall H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13
   German DM, 2006, EMPIR SOFTW ENG, V11, P369, DOI 10.1007/s10664-006-9004-6
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   GRECHANIK M., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P95
   Gutwin C., 2004, Computer Supported Cooperative Work Conference Proceedings, P72, DOI 10.1145/1031607.1031621
   Gutwin C., 1996, People and Computers XI. Proceedings of HCI '96, P281
   KAGDI H, 2009, P 17 IEEE INT C PROG
   KERSTEN M, 2007, THESIS U BRITISH COL
   Koch K.R., 2007, Introduction to Bayesian Statistics, V2nd
   Mader Patrick, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P49, DOI 10.1109/ASE.2008.15
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   McDonald D.W., 2000, CSCW 00, P231, DOI [DOI 10.1145/358916.3589941, 10.1145/358916.358994, DOI 10.1145/358916.358994]
   MINTO S, 2007, MSR 07, P5
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Montironi R, 1996, HUM PATHOL, V27, P396, DOI 10.1016/S0046-8177(96)90114-8
   Myung IJ, 2003, J MATH PSYCHOL, V47, P90, DOI 10.1016/S0022-2496(02)00028-7
   OMORONYIA I, 2008, THESIS U STRATHCLYDE
   Ornoronyia I, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P204
   POSHYVANYK D, 2007, P ACM INT S GRAND CH, P27
   Stein C., 2005, Journal of Computer Sciences, V1, P137, DOI 10.3844/jcssp.2005.137.144
   THOMAS J, 1976, P 2 INT C SOFTW ENG, P407
   Wallace D., 1996, Special Publication (NIST SP)
   Zhang NL, 1996, J ARTIF INTELL RES, V5, P301, DOI 10.1613/jair.305
   Zou LJ, 2006, WORK CONF REVERSE EN, P71
NR 37
TC 8
Z9 11
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2011
VL 53
IS 8
SI SI
BP 851
EP 871
DI 10.1016/j.infsof.2011.03.001
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 784RQ
UT WOS:000292176300004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chen, CC
   Liu, JYC
   Chen, HG
AF Chen, Charlie C.
   Liu, Julie Yu-Chih
   Chen, Houn-Gee
TI Discriminative effect of user influence and user responsibility on
   information system development processes and project management
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE User influence; User responsibility; Organizational technology learning;
   Project control; User-developer interaction; Project performance
ID PARTICIPATION; DESIGN; PERFORMANCE; EVOLUTION; RISKS
AB Context: User participation in information system (IS) development has received much research attention. However, prior empirical research regarding the effect of user participation on IS success is inconclusive. This might be because previous studies overlook the effect of the particular components of user participation and other possible mediating factors.
   Objective: The objective of this study is to empirically examine how user influence and user responsibility affect IS project performance. We inspect whether user influence and user responsibility improve the quality of the IS development process and in turn leads to project success, or if they have a direct positive influence on project success.
   Method: We conducted a survey of 151 IS project managers in order to understand the impact of user influence and user responsibility on IS project performance. Regression analysis was conducted to assess the relationship among user influence, user responsibility, organizational technology learning, project control, user-developer interaction, and IS project management performance.
   Results: This study shows that user responsibility and user influence have a positive effect on project performance through the promotion of IS development processes as mediators, including organizational technology learning, project control, and user-IS interaction.
   Conclusion: Our results suggest that user responsibility and user influence respectively play an important role in indirectly and directly impacting project management performance. Results of the analysis imply that organizations and project managers should use both user participation and user influence to improve processes performance, and in turn, increase project success. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Liu, Julie Yu-Chih] Yuan Ze Univ, Dept Informat Management, Chungli 320, Taiwan.
   [Chen, Charlie C.] Appalachian State Univ, Dept Comp Informat Syst, Boone, NC 28607 USA.
   [Chen, Houn-Gee] Natl Taiwan Univ, Dept Business Adm, Taipei 10617, Taiwan.
C3 Yuan Ze University; University of North Carolina; Appalachian State
   University; National Taiwan University
RP Liu, JYC (corresponding author), Yuan Ze Univ, Dept Informat Management, 135 Yuan Tung Rd, Chungli 320, Taiwan.
EM chench@appstate.edu; imyuchih@saturn.yzu.edu.tw; hgchen@ntu.edu.tw
OI Liu, Julie Yu-Chih/0000-0002-0456-2858
FU National Science Council [98-2410-H-002-072-MY2, 98-2410-H-155-022-MY2]
FX The research is partially funded by grants from National Science
   Council, Taiwan under the Project Nos. 98-2410-H-002-072-MY2 and
   98-2410-H-155-022-MY2.
CR Anderson J.C., 1999, UNDERSTANDING CREATI
   ANDERSON JC, 1988, PSYCHOL BULL, V103, P411, DOI 10.1037/0033-2909.103.3.411
   [Anonymous], 1989, Software risk management tutorial
   Argyris C., 1996, Organizational Learning II Theory, Method, and Practice
   Augustine S, 2005, COMMUN ACM, V48, P85, DOI 10.1145/1101779.1101781
   Bagozzi R.P., 1983, ACAD MARKETING SCI, V16, P74
   BARKI H, 1989, MIS QUART, V13, P53, DOI 10.2307/248700
   BEATH CM, 1994, INFORM SYST RES, V5, P350, DOI 10.1287/isre.5.4.350
   Beck P, 2006, J SYST SOFTWARE, V79, P1025, DOI 10.1016/j.jss.2005.11.210
   Chin W. W., 2003, PLS GRAPH MANUAL VER
   Chin WW, 2003, INFORM SYST RES, V14, P189, DOI 10.1287/isre.14.2.189.16018
   Chin WW, 1998, MIS QUART, V22, pVII
   Cooprider J. G., 1990, Journal of Management Information Systems, V7, P67
   de Ven Van, 1992, ORGAN SCI, V3, P32
   EISENHARDT KM, 1995, ADMIN SCI QUART, V40, P84, DOI 10.2307/2393701
   Emery CR, 2009, BUS PROCESS MANAG J, V15, P93, DOI 10.1108/14637150910931488
   Gallivan MJ, 2003, INFORM SYST J, V13, P37, DOI 10.1046/j.1365-2575.2003.00138.x
   Gorschek T, 2007, INFORM SOFTWARE TECH, V49, P790, DOI 10.1016/j.infsof.2006.09.003
   Hair JF, 2010, Multivariate data analysis
   Hamza SEA, 2009, BUS PROCESS MANAG J, V15, P358, DOI 10.1108/14637150910960611
   Harris MA., 2009, Communications of the Association for Information Systems, V24, P1
   HARTWICK J, 1994, MANAGE SCI, V40, P440, DOI 10.1287/mnsc.40.4.440
   HENDERSON JC, 1992, MANAGE SCI, V38, P757, DOI 10.1287/mnsc.38.6.757
   Hulland J, 1999, STRATEGIC MANAGE J, V20, P195, DOI 10.1002/(SICI)1097-0266(199902)20:2<195::AID-SMJ13>3.3.CO;2-Z
   Jiang J, 2000, J SYST SOFTWARE, V52, P3, DOI 10.1016/S0164-1212(99)00128-4
   Jiang J, 2007, INF RESOUR MANAG J, V20, P32, DOI 10.4018/irmj.2007070103
   Jiang JJ, 2006, J ASSOC INF SYST, V7, P68, DOI 10.17705/1jais.00082
   Jones GR, 1998, ACAD MANAGE REV, V23, P531, DOI 10.2307/259293
   Keil M, 2008, J SYST SOFTWARE, V81, P908, DOI 10.1016/j.jss.2007.07.035
   Kendall K.E., 2005, Systems Analysis and Design, V6th
   Kirsch L.J., 1996, ACCOUNTING MANAGEMEN, V6, P221, DOI DOI 10.1016/S0959-8022(96)90015-6
   Liu L, 2009, J INF TECHNOL, V24, P46, DOI 10.1057/jit.2009.2
   Majchrzak A, 2005, MIS QUART, V29, P653
   Markus M.L., 2004, J ASSOC INF SYST, V5, P514, DOI DOI 10.17705/1JAIS.00057
   MAYER RC, 1995, ACAD MANAGE REV, V20, P709, DOI 10.2307/258792
   MCFARLAN FW, 1981, HARVARD BUS REV, V59, P142
   MCKEEN JD, 1994, MIS QUART, V18, P427, DOI 10.2307/249523
   Mehta P., 2008, COST ENG, V50, P34
   Merisalo-Rantanen H, 2009, COMMUN ASSOC INF SYS, V24, P719
   NIDUMOLU S, 1995, INFORM SYST RES, V6, P191, DOI 10.1287/isre.6.3.191
   Nidumolu S. R., 1996, Journal of Management Information Systems, V13, P77
   Njaa D., 2008, INTERN AUD, V65, P31
   Pawlowski SD, 2004, MIS QUART, V28, P645, DOI 10.2307/25148658
   Peterson D. K., 2003, Journal of Global Information Management, V11, P19, DOI 10.4018/jgim.2003070102
   Ravichandran T, 1999, J MANAGE INFORM SYST, V16, P119, DOI 10.1080/07421222.1999.11518259
   ROBEY D, 1989, MANAGE SCI, V35, P1172, DOI 10.1287/mnsc.35.10.1172
   Rozenes S., 2006, PROJ MANAG J, V37, P5, DOI [DOI 10.1177/875697280603700402, 10.1177/875697280603700402]
   Sabherwal R, 2006, MANAGE SCI, V52, P1849, DOI 10.1287/mnsc.1060.0583
   Sivo SA, 2006, J ASSOC INF SYST, V7, P351, DOI 10.17705/1jais.00093
   Stein E. W., 1996, Journal of Management Information Systems, V13, P115
   Templeton GF, 2002, J MANAGE INFORM SYST, V19, P175, DOI 10.1080/07421222.2002.11045727
   Tesch D, 2009, INT J PROJ MANAG, V27, P657, DOI 10.1016/j.ijproman.2009.01.002
   Vandenbosch B., 1995, Journal of Management Information Systems, V12, P99
   Wagner EL, 2007, J ASSOC INF SYST, V8, P508, DOI 10.17705/1jais.00142
   Wang ETG, 2008, INFORM MANAGE-AMSTER, V45, P438, DOI 10.1016/j.im.2008.05.003
   Wang ETG, 2006, INFORM SOFTWARE TECH, V48, P214, DOI 10.1016/j.infsof.2005.04.003
   Wasko MM, 2005, MIS QUART, V29, P35, DOI 10.2307/25148667
NR 57
TC 12
Z9 16
U1 0
U2 27
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2011
VL 53
IS 2
BP 149
EP 158
DI 10.1016/j.infsof.2010.10.001
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 701IX
UT WOS:000285812700003
DA 2024-07-18
ER

PT J
AU Tosun, A
   Bener, A
   Turhan, B
   Menzies, T
AF Tosun, Ayse
   Bener, Ayse
   Turhan, Burak
   Menzies, Tim
TI Practical considerations in deploying statistical methods for defect
   prediction: A case study within the Turkish telecommunications industry
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Conference on Predictor Models in Software Engineering (PROMISE 2009)
CY 2009
CL ICSE, Vancouver, CANADA
HO ICSE
DE Software defect prediction; Experience report; Naive Bayes; Static code
   attributes
AB Context: Building defect prediction models in large organizations has many challenges due to limited resources and tight schedules in the software development lifecycle. It is not easy to collect data, utilize any type of algorithm and build a permanent model at once. We have conducted a study in a large telecommunications company in Turkey to employ a software measurement program and to predict pre-release defects. Based on our prior publication, we have shared our experience in terms of the project steps (i.e. challenges and opportunities). We have further introduced new techniques that improve our earlier results.
   Objective: In our previous work, we have built similar predictors using data representative for US software development. Our task here was to check if those predictors were specific solely to US organizations or to a broader class of software.
   Method: We have presented our approach and results in the form of an experience report. Specifically, we have made use of different techniques for improving the information content of the software data and the performance of a Naive Bayes classifier in the prediction model that is locally tuned for the company. We have increased the information content of the software data by using module dependency data and improved the performance by adjusting the hyper-parameter (decision threshold) of the Naive Bayes classifier. We have reported and discussed our results in terms of defect detection rates and false alarms. We also carried out a cost-benefit analysis to show that our approach can be efficiently put into practice.
   Results: Our general result is that general defect predictors, which exist across a wide range of software (in both US and Turkish organizations), are present. Our specific results indicate that concerning the organization subject to this study, the use of version history information along with code metrics decreased false alarms by 22%, the use of dependencies between modules further reduced false alarms by 8%, and the decision threshold optimization for the Naive Bayes classifier using code metrics and version history information further improved false alarms by 30% in comparison to a prediction using only code metrics and a default decision threshold.
   Conclusion: Implementing statistical techniques and machine learning on a real life scenario is a difficult yet possible task. Using simple statistical and algorithmic techniques produces an average detection rate of 88%. Although using dependency data improves our results, it is difficult to collect and analyze such data in general. Therefore, we would recommend optimizing the hyper-parameter of the proposed technique, Naive Bayes, to calibrate the defect prediction model rather than employing more complex classifiers. We also recommend that researchers who explore statistical and algorithmic methods for defect prediction should spend less time on their algorithms and more time on studying the pragmatic considerations of large organizations. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Tosun, Ayse; Bener, Ayse] Bogazici Univ, Dept Comp Engn, Software Res Lab Softlab, Istanbul, Turkey.
   [Turhan, Burak] Univ Oulu, Dept Informat Proc Sci, Oulu, Finland.
   [Menzies, Tim] W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
C3 Bogazici University; University of Oulu; West Virginia University
RP Tosun, A (corresponding author), Bogazici Univ, Dept Comp Engn, Software Res Lab Softlab, Istanbul, Turkey.
EM ayse.tosun@boun.edu.tr; bener@boun.edu.tr; burak.turhan@oulu.fi;
   tim@menzies.us
RI Turhan, Burak/G-7400-2011; Menzies, Tim/X-7680-2019; Basar,
   Ayse/ABF-9265-2020; Tosun, Ayse/B-4794-2014
OI Turhan, Burak/0000-0003-1511-2163; Menzies, Tim/0000-0002-5040-3196;
   Basar, Ayse/0000-0003-4934-8326; Tosun, Ayse/0000-0003-1859-7872
CR ADRION WR, 1982, COMPUT SURV, V14, P159, DOI 10.1145/356876.356879
   [Anonymous], 2007, The promise repository of empirical software engineering data
   ARISHOLM E, 2006, P ISESE 06, P1
   BASILI V, 2002, P 24 INT C SOFTW ENG, P2002
   *BOG U, 2009, PREST
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Dart S., 1991, Proceedings of the 3rd International Workshop on Software Configuration Management, P1, DOI 10.1145/111062.111063
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fenton N, 2008, EMPIR SOFTW ENG, V13, P499, DOI 10.1007/s10664-008-9072-x
   Halstead H., 1977, ELEMENTS SOFTWARE SC
   Heeger D., 1998, SIGNAL DETECTION THE
   *IEEE STAND ASS, 2007, IEEE STAND GLOSS SOF
   Kocaguneli E., 2009, P INT C SOFTW ENG KN
   KORU G, 2007, IEEE SOFTWARE, P23
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Maloof A.M., 2003, WORKSH LEARN IMB DAT
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Menzies T., 2008, P PROMISE 2008 WORKS
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Nagappan N., 2006, P INT S SOFTW REL EN
   NAGAPPAN N, 2008, P INT C SOFTW ENG GE
   *NASA WVU 4 5 FAC, 2004, METR PROGR
   Ngo-The A, 2009, IEEE T SOFTWARE ENG, V35, P109, DOI 10.1109/TSE.2008.80
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Provost F., 2000, P AAAI 2000 WORKSH I, V68, P1, DOI DOI 10.1109/SOCPAR.2011
   Salleh N, 2009, INT SYMP EMP SOFTWAR, P214, DOI 10.1109/ESEM.2009.5315997
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   TOSUN A, 2008, P 19 INT S SOFTW REL
   TOSUN A, 2009, P 20 INT S EMP SOFTW
   Tosun Aye, 2009, P 5 INT C PRED MOD S
   Tosun A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P318
   TURBAN B, 2008, P 34 EUROMICRO SOFTW, P191
   TURHAN B, 2008, P 1 INT WORKSH DEF L, P26
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Turhan B, 2009, DATA KNOWL ENG, V68, P278, DOI 10.1016/j.datak.2008.10.005
NR 36
TC 52
Z9 57
U1 1
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2010
VL 52
IS 11
SI SI
BP 1242
EP 1257
DI 10.1016/j.infsof.2010.06.006
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 663RL
UT WOS:000282905700009
DA 2024-07-18
ER

PT J
AU Garrigós, I
   Gomez, J
   Houben, GJ
AF Garrigos, Irene
   Gomez, Jaime
   Houben, Geert-Jan
TI Specification of personalization in web application design
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Personalization; Web engineering; Reusability; Rule language
AB Personalization of websites has become an important issue in Web modeling methods due to their big and heterogeneous audience. However, due to the existence of too many notations to represent the same design concepts in different methodologies, personalization specifications cannot be used out of the scope of a single tool or method. Moreover, in some cases, personalization is not defined as a separate aspect, being difficult to maintain and update. This paper tackles the aforementioned problems presenting a generic modeling technique to facilitate the specification of the personalization. Personalization specifications can be reused across different websites and different development environments. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Garrigos, Irene; Gomez, Jaime] Univ Alicante, Software & Comp Syst Dept, E-03080 Alicante, Spain.
   [Houben, Geert-Jan] Delft Univ Technol, NL-2600 GA Delft, Netherlands.
C3 Universitat d'Alacant; Delft University of Technology
RP Garrigós, I (corresponding author), Univ Alicante, Software & Comp Syst Dept, Apartado Correos 99, E-03080 Alicante, Spain.
EM igarrigos@dlsi.ua.es; jgomez@dlsi.ua.es; g.j.p.m.houben@tudelft.nl
RI Ortega, Jaime Gomez/Z-1214-2019; Garrigos, Irene/HGE-8463-2022; Houben,
   Geert-Jan/C-3934-2008; Garrigos, Irene/R-6595-2018
OI Ortega, Jaime Gomez/0000-0003-0168-0338; Houben,
   Geert-Jan/0000-0001-6827-9739; Garrigos, Irene/0000-0001-5869-5245
FU Spanish Ministry of Education and Science [TIN2007-67078]
FX This work has been partially supported by the ESPIA (TIN2007-67078)
   project from the Spanish Ministry of Education and Science.
CR Brickley D., 2004, RDF VOCABULARY DESCR
   CASTELEYN S, 2003, P 18 ACM S APPL COMP, P1222
   CASTELEYN S, 2005, DESIGNER SPECIFIED S
   Ceri S, 2006, COMPUT NETW, V50, P1533, DOI 10.1016/j.comnet.2005.10.013
   Cingil I, 2000, COMMUN ACM, V43, P136, DOI 10.1145/345124.345168
   GARRIGOS I, 2005, P WORKSH WEB INF SYS, P40
   Gomez J., 2001, IEEE Multimedia, V8, P26, DOI 10.1109/93.917969
   KAPPEL G, 2002, P 2 INT WORKSH WEB O
   Kim W., 2002, Journal of Object Technology, V1, P29
   KOCH N, 2001, THESIS LUDWIGMAXIMIL
   Li JY, 2007, P INT COMP SOFTW APP, P399
   MCCLURE C, 2001, SOFTWARE REUSE STAND
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Rossi G., 2001, P 10 INT C WORLD WID, P275
   Schwabe D, 1998, THEOR PRACT OBJ SYST, V4, P207, DOI 10.1002/(SICI)1096-9942(1998)4:4<207::AID-TAPO2>3.0.CO;2-2
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   Vdovjak R., 2003, Journal of Web Engineering, V2, P3
   UML 2 0 OCL SPECIFIC
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 32
TC 13
Z9 13
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2010
VL 52
IS 9
BP 991
EP 1010
DI 10.1016/j.infsof.2010.04.001
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 629QL
UT WOS:000280214700008
DA 2024-07-18
ER

PT J
AU Bottoni, P
   Guerra, E
   de Lara, J
AF Bottoni, Paolo
   Guerra, Esther
   de Lara, Juan
TI A language-independent and formal approach to pattern-based modelling
   with support for composition and analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Pattern formalization; Pattern-based modelling; Pattern composition;
   Pattern conflicts
ID DESIGN; SPECIFICATION
AB Context: Patterns are used in different disciplines as a way to record expert knowledge for problem solving in specific areas. Their systematic use in Software Engineering promotes quality, standardization, reusability and maintainability of software artefacts. The full realisation of their power is however hindered by the lack of a standard formalization of the notion of pattern.
   Objective: Our goal is to provide a language-independent formalization of the notion of pattern, so that it allows its application to different modelling languages and tools, as well as generic methods to enable pattern discovery, instantiation, composition, and conflict analysis.
   Method: For this purpose, we present a new visual and formal, language-independent approach to the specification of patterns. The approach is formulated in a general way, based on graphs and category theory, and allows the specification of patterns in terms of (nested) variable submodels, constraints on their allowed variance, and inter-pattern synchronization across several diagrams (e.g. class and sequence diagrams for UML design patterns).
   Results: We provide a formal notion of pattern satisfaction by models and propose mechanisms to suggest model transformations so that models become consistent with the patterns. We define methods for pattern composition, and conflict analysis. We illustrate our proposal on UML design patterns, and discuss its generality and applicability on different types of patterns, e.g. workflow patterns, enterprise integration patterns and interaction patterns.
   Conclusion: The approach has proven to be powerful enough to formalize patterns from different domains, providing methods to analyse conflicts and dependencies that usually are expressed only in textual form. Its language independence makes it suitable for integration in meta-modelling tools and for use in Model-Driven Engineering. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Bottoni, Paolo] Univ Roma La Sapienza, Dept Comp Sci, Rome, Italy.
   [Guerra, Esther] Univ Carlos III Madrid, Dept Comp Sci, E-28903 Getafe, Spain.
   [de Lara, Juan] Univ Autonoma Madrid, Polytech Sch, E-28049 Madrid, Spain.
C3 Sapienza University Rome; Universidad Carlos III de Madrid; Autonomous
   University of Madrid
RP Guerra, E (corresponding author), Univ Carlos III Madrid, Dpto Informat, Avda Univ 30, Madrid 28911, Spain.
EM bottoni@di.uniroma1.it; eguerra@inf.uc3m.es; Juan.deLara@uam.es
RI Bottoni, Paolo/AAE-5789-2020; Guerra, Esther/B-4977-2014; de Lara,
   Juan/B-5422-2014
OI Bottoni, Paolo/0000-0003-4662-2019; Guerra, Esther/0000-0002-2818-2278;
   de Lara, Juan/0000-0001-9425-6362
CR Alexander C., 1977, PATTERN LANGUAGE TOW
   [Anonymous], ADDISON WESLEY SIGNA
   ARLOW J, 2004, ADDISON WESLEY OBJEC
   ARNOUT K, 2006, INNOVATIONS SYSTEMS, V2, P65
   Bayley I, 2008, INT CONF QUAL SOFTW, P27, DOI 10.1109/QSIC.2008.32
   Bergmann G., 2008, Proceedings of 3rd International Workshop on Graph and Model Transformation (GRaMoT 2008). 30th International Conference on Software Engineering, P25, DOI [10.1145/1402947.1402953, DOI 10.1145/1402947.1402953]
   BEZIVIN J, 2005, P EWMT 2005
   BOTTONI P, 2010, ARXIV10033338V1
   Bottoni P, 2009, LECT NOTES COMPUT SC, V5503, P278
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   Dong J, 2007, IEEE T SOFTWARE ENG, V33, P433, DOI 10.1109/TSE.2007.1012
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Ehrig H, 2006, FUND INFORM, V74, P135
   France RB, 2004, IEEE T SOFTWARE ENG, V30, P193, DOI 10.1109/TSE.2004.1271174
   Gamma Erich., 1994, DESIGN PATTERNS
   Guéhéneuc YG, 2001, TOOLS, V39, P296, DOI 10.1109/TOOLS.2001.941682
   Guerra E, 2007, SOFTW SYST MODEL, V6, P317, DOI 10.1007/s10270-007-0051-2
   Guerra E, 2006, LECT NOTES COMPUT SC, V4178, P351
   Hohpe Gregor, 2004, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions
   Hruby P., 2006, Model-Driven Design Using Business Patterns
   Kampffmeyer H, 2007, LECT NOTES COMPUT SC, V4735, P211
   Kim SK, 2009, FORM ASP COMPUT, V21, P397, DOI 10.1007/s00165-008-0090-7
   Lauder A., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P114, DOI 10.1007/BFb0054089
   LINDQVIST J, 2007, ECEASST, P6
   Mac Lane S, 1998, GRAD TEXT M, V5
   Mak JKH, 2004, PROC INT CONF SOFTW, P252, DOI 10.1109/ICSE.2004.1317447
   Maplesden D., 2007, Design pattern formalization techniques, P20
   Niere J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P338, DOI 10.1109/ICSE.2002.1007980
   RADERMACHER A, 1999, LNCS, V1779, P111
   Taibi T, 2003, INFORM SOFTWARE TECH, V45, P157, DOI 10.1016/S0950-5849(02)000195-7
   Tidwell Jenifer, 2006, Designing interfaces-Patterns for effective interaction design
   Tourwe T., 2003, ENTCS, V72
   ULLMANN JR, 1976, J ACM, V23, P31, DOI 10.1145/321921.321925
   *USIXML, 2007, USIXML US INT EXT MA
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Yacoub SherifM., 2001, UML 2001 UNIFIED MOD, P149, DOI DOI 10.1007/3-540-45441-1_12
   Zhao C, 2007, J VISUAL LANG COMPUT, V18, P378, DOI 10.1016/j.jvlc.2007.07.004
NR 37
TC 14
Z9 14
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2010
VL 52
IS 8
BP 821
EP 844
DI 10.1016/j.infsof.2010.03.005
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 614DI
UT WOS:000279035100004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Nikula, U
   Jurvanen, C
   Gotel, O
   Gause, DC
AF Nikula, Uolevi
   Jurvanen, Christian
   Gotel, Orlena
   Gause, Donald C.
TI Empirical validation of the Classic Change Curve on a software
   technology change project
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Organisational change; Technology change; Classic Change Curve;
   Technology S-curve; Change resistance; Organisational performance
ID PROCESS IMPROVEMENT; PRACTITIONERS; ORGANIZATIONS; MOTIVATORS; SYSTEMS;
   RISK
AB Context: New processes, tools, and practices are being introduced into software companies at an increasing rate. With each new advance in technology, software managers need to consider not only whether it is time to change the technologies currently used, but also whether an evolutionary change is sufficient or a revolutionary change is required.
   Objective: In this paper, we approach this dilemma from the organizational and technology research points of view to see whether they can help software companies in initiating and managing technology change. In particular, we explore the fit of the technology S-curve, the Classic Change Curve, and a technological change framework to a software technology change project and examine the insights that such frameworks can bring.
   Method: The descriptive case study described in this paper summarizes a software technology change project in which a 30-year old legacy information system running on a mainframe was replaced by a network server system at the same time as the individual-centric development practices were replaced with organization-centric ones. The study is based on a review of the company's annual reports, in conjunction with other archival documents, five interviews and collaboration with a key stakeholder in the company.
   Results: Analyses of the collected data suggest that software technology change follows the general change research findings as characterized by the technology S-curve and the Classic Change Curve. Further, that such frameworks present critical questions for management to address when embarking on and then running such projects.
   Conclusions: We describe how understanding why a software technology change project is started, the way in which it unfolds, and how different factors affect it, are essential tools for project leaders in preparing for change projects and for keeping them under control. Moreover, we show how it is equally important to understand how software technology change can work as a catalyst in revitalizing a stagnated organization, facilitating other changes and thereby helping an organization to redefine its role in the marketplace. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Nikula, Uolevi] Lappeenranta Univ Technol, Dept Informat Technol, FI-53851 Lappeenranta, Finland.
   [Jurvanen, Christian] Agr Data Proc Ctr Ltd, FI-01301 Vantaa, Finland.
   [Gause, Donald C.] SUNY Binghamton, Thomas J Watson Sch Engn & Appl Sci, Binghamton, NY 13902 USA.
C3 Lappeenranta-Lahti University of Technology LUT; State University of New
   York (SUNY) System; State University of New York (SUNY) Binghamton
RP Nikula, U (corresponding author), Lappeenranta Univ Technol, Dept Informat Technol, POB 20, FI-53851 Lappeenranta, Finland.
EM uolevi.nikula@lut.fi; christian.jurvanen@mloy.fi; olly@gotel.net;
   dgause@stny.rr.com
CR Adolph WS, 1996, IEEE SOFTWARE, V13, P41, DOI 10.1109/52.493019
   Allison I, 2007, INFORM SOFTWARE TECH, V49, P668, DOI 10.1016/j.infsof.2007.02.003
   [Anonymous], 1995, The Capability Maturity Model: Guidelines for Improving the Software Process
   [Anonymous], 2009, CHAOS REP
   [Anonymous], 1998, Software process improvement
   [Anonymous], 1995, Diffusion of innovations
   [Anonymous], 1952, GROUP DECISION SOCIA
   [Anonymous], 2008, GUID PROJ MAN BOD KN
   [Anonymous], 1990, J EC PERSPECTIVES
   [Anonymous], 2008, SOFTWARE PROCESS IMP, DOI DOI 10.1002/SPIP.380
   APPLEGATE LM, 1994, TRANSFORMING ORG INF
   Atkinson AA, 1997, SLOAN MANAGE REV, V38, P25
   Baddoo N, 2003, J SYST SOFTWARE, V66, P23, DOI 10.1016/S0164-1212(02)00060-2
   Baddoo N, 2002, J SYST SOFTWARE, V62, P85, DOI 10.1016/S0164-1212(01)00125-X
   Beecham S, 2003, EMPIR SOFTW ENG, V8, P7, DOI 10.1023/A:1021764731148
   BENNETT K, 1995, IEEE SOFTWARE, V12, P19, DOI 10.1109/52.363157
   Bianchi A, 2003, IEEE T SOFTWARE ENG, V29, P225, DOI 10.1109/TSE.2003.1183932
   Bisbal J, 1999, IEEE SOFTWARE, V16, P103, DOI 10.1109/52.795108
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Boehm BW., 1981, Software Engineering Economics
   BOWER JL, 1995, HARVARD BUS REV, V73, P43
   Brodie M., 1995, MIGRATING LEGACY SYS
   Christensen C.M., 1992, Production and Operations Management, V1, P334, DOI [DOI 10.1111/J.1937-5956.1992.TB00001.X, 10.1111/j.1937-5956.1992.tb00001.x]
   Christensen ClaytonM., 1992, PROD OPER MANAG, V1, P358, DOI DOI 10.1111/J.1937-5956.1992.TB00002.X
   Christensen CM, 2000, HARVARD BUS REV, V78, P66
   Christensen TE, 2008, REV ACCOUNT STUD, V13, P319, DOI 10.1007/s11142-008-9074-3
   COCH L, 1948, HUMAN RELATIONS, V1
   Colosimo M, 2009, INFORM SOFTWARE TECH, V51, P433, DOI 10.1016/j.infsof.2008.05.012
   Dangle KC, 2005, IEEE SOFTWARE, V22, P68, DOI 10.1109/MS.2005.162
   De Lucia A, 2008, SOFTWARE PRACT EXPER, V38, P1333, DOI 10.1002/spe.870
   Deal T.E., 1982, CORPORATE CULTURES
   Dibbern J., 2004, Data Base for Advances in Information Systems, V35, P6, DOI 10.1145/1035233.1035236
   Dingsoyr T, 2005, INFORM SOFTWARE TECH, V47, P293, DOI 10.1016/j.infsof.2004.08.008
   Elrod PD, 2002, J ORGAN CHANGE MANAG, V15, P273, DOI 10.1108/09534810210429309
   Foster R., 1986, INNOVATION ATTACKERS
   Frangos SA, 1998, MICROPROCESS MICROSY, V21, P605, DOI 10.1016/S0141-9331(98)00062-3
   Gause D.C., 1989, EXPLORING REQUIREMEN
   Glass R.L., 1998, Software Runaways: Lessons learned from massive software project failures
   Hall T, 2008, IEEE SOFTWARE, V25, P92, DOI 10.1109/MS.2008.105
   Harvey T.R., 1990, CHECKLIST CHANGE PRA
   HENDERSON RM, 1990, ADMIN SCI QUART, V35, P9, DOI 10.2307/2393549
   Hopkins R., 2008, Eating the it elephant: Moving from greenfield to brownfield
   Huotari Maija-Leena., 2001, INFORM RES, V6
   *INT INN, 2009, MOOR LAW
   Jones C, 1996, COMPUTER, V29, P95, DOI 10.1109/2.481498
   K├a┬╝bler-Ross E., 1969, DEATH DYING
   Kautz K., 1998, Software Process Improvement and Practice, V4, P209, DOI 10.1002/(SICI)1099-1670(199812)4:4<209::AID-SPIP105>3.0.CO;2-8
   Keil M, 1998, COMMUN ACM, V41, P76, DOI 10.1145/287831.287843
   KILROE D, 2005, ENG MANAGEMENT J, V6, P31
   *KPMG, 1995, SOFT WORLD, V26, P3
   Laporte C. Y., 1998, Software Process Improvement and Practice, V4, P187, DOI 10.1002/(SICI)1099-1670(199812)4:4<187::AID-SPIP108>3.0.CO;2-F
   Mariotti J., 1996, IND WEEK, V245, P30
   Mathiassen L, 2005, IEEE SOFTWARE, V22, P84, DOI 10.1109/MS.2005.159
   Maurer R., 1996, WALLS RESISTANCE
   Menninger W.W., 1975, Business and Society in Change
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   NIKULA U, 2009, 11 INT WORKSH LEARN, P7
   NIKULA U, 2004, THESIS LAPPEENRANTA
   Nikula U, 2009, IEEE AUS SOFT ENGR, P267, DOI 10.1109/ASWEC.2009.44
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Procaccino JD, 2005, J SYST SOFTWARE, V78, P194, DOI 10.1016/j.jss.2004.12.011
   Rainer A, 2003, J SYST SOFTWARE, V66, P7, DOI 10.1016/S0164-1212(02)00059-6
   ROCKART JF, 1979, HARVARD BUS REV, V57, P81
   Ropponen J, 2000, IEEE T SOFTWARE ENG, V26, P98, DOI 10.1109/32.841112
   Sandberg AB, 2008, IEEE SOFTWARE, V25, P84, DOI 10.1109/MS.2008.151
   Sauer C, 2007, COMMUN ACM, V50, P79, DOI 10.1145/1297797.1297801
   Schein E.H., 2006, Organizational Culture and Leadership
   Schneider D.M., 1998, MANAG REV, V87, P41
   *SCI SOFTW DEV ATL, 2009, KNOWL WORKB
   Slaughter SA, 1996, COMMUN ACM, V39, P47, DOI 10.1145/233977.233994
   SNEED HM, 1995, IEEE SOFTWARE, V12, P24, DOI 10.1109/52.363168
   Stelzer D., 1998, Software Process Improvement and Practice, V4, P227, DOI 10.1002/(SICI)1099-1670(199812)4:4<227::AID-SPIP106>3.0.CO;2-1
   STELZER D, 2003, INFORM SYSTEMS INNOV, P297
   van Solingen R, 2004, IEEE SOFTWARE, V21, P32, DOI 10.1109/MS.2004.1293070
   WICKBERG H, 1997, ISCN 97, P1
   WISE TA, 1966, FORTUNE, V74, P118
   Yin R.K., 2011, Qualitative research from start to finish
NR 77
TC 13
Z9 15
U1 1
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2010
VL 52
IS 6
BP 680
EP 696
DI 10.1016/j.infsof.2010.02.004
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 602PE
UT WOS:000278150500008
DA 2024-07-18
ER

PT J
AU Casamayor, A
   Godoy, D
   Campo, M
AF Casamayor, Agustin
   Godoy, Daniela
   Campo, Marcelo
TI Identification of non-functional requirements in textual specifications:
   A semi-supervised learning approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Non-functional requirements; Requirement classification; Semi-supervised
   text learning
ID CLASSIFICATION; ELICITATION
AB Context: Early detection of non-functional requirements (NFRs) is crucial in the evaluation of architectural alternatives starting from initial design decisions. The application of supervised text categorization strategies for requirements expressed in natural language has been proposed in several works as a method to help analysts in the detection and classification of NFRs concerning different aspects of software. However, a significant number of pre-categorized requirements are needed to train supervised text classifiers, which implies that analysts have to manually assign categories to numerous requirements before being able of accurately classifying the remaining ones.
   Objective: We propose a semi-supervised text categorization approach for the automatic identification and classification of non-functional requirements. Therefore, a small number of requirements, possibly identified by the requirement team during the elicitation process, enable learning an initial classifier for NFRs, which could successively identify the type of further requirements in an iterative process. The goal of the approach is the integration into a recommender system to assist requirement analysts and software designers in the architectural design process.
   Method: Detection and classification of NFRs is performed using semi-supervised learning techniques. Classification is based on a reduced number of categorized requirements by taking advantage of the knowledge provided by uncategorized ones, as well as certain properties of text. The learning method also exploits feedback from users to enhance classification performance.
   Results: The semi-supervised approach resulted in accuracy rates above 70%, considerably higher than the results obtained with supervised methods using standard collections of documents.
   Conclusion: Empirical evidence showed that semi-supervision requires less human effort in labeling requirements than fully supervised methods, and can be further improved based on feedback provided by analysts. Our approach outperforms previous supervised classification proposals and can be further enhanced by exploiting feedback provided by analysts. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Casamayor, Agustin] UNICEN Univ, ISISTAN Res Inst, Tandil, Bs As, Argentina.
   Natl Council Sci & Tech Res, CONICET, Bs As, Argentina.
RP Casamayor, A (corresponding author), UNICEN Univ, ISISTAN Res Inst, Campus Univ,Paraje Arroyo Seco,B7001BBO, Tandil, Bs As, Argentina.
EM acasamay@exa.unicen.edu.ar
RI Godoy, Daniela/W-2190-2017
OI Godoy, Daniela/0000-0002-5185-4570; Campo, Marcelo/0000-0002-3555-835X
CR Adomavicius G, 2005, IEEE T KNOWL DATA EN, V17, P734, DOI 10.1109/TKDE.2005.99
   Al Balushi TH, 2007, LECT NOTES COMPUT SC, V4542, P306
   [Anonymous], 1997, ACT ICM 97 P 14 INT
   [Anonymous], 1998, LEARNING TEXT CATEGO
   CASAMAYOR A, 2009, P 10 ARG S ART INT A
   CASTROHERRERA C, 2009, ACM S APPL COMP
   Chapelle O., 2006, SEMISUPERVISED LEARN
   Cleland-Huang J, 2007, REQUIR ENG, V12, P103, DOI 10.1007/s00766-007-0045-1
   Cleland-Huang Jane., 2008, ULSSIS 08, P3, DOI DOI 10.1145/1370700.1370702
   CLELANDHUANG J, 2006, P 14 IEEE INT REQ EN, P36
   Cybulski JL, 1998, 1998 ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P128, DOI 10.1109/APSEC.1998.733606
   Cysneiros LM, 2004, IEEE T SOFTWARE ENG, V30, P328, DOI 10.1109/TSE.2004.10
   Dag JNO, 2005, IEEE SOFTWARE, V22, P32, DOI 10.1109/MS.2005.1
   DEMPSTER AP, 1977, J ROY STAT SOC B MET, V39, P1, DOI 10.1111/j.2517-6161.1977.tb01600.x
   DORR J, 2003, P INT WORKSH REQ ENG, P23
   Eyheramendy S., 2002, INT WORKSH ART INT S, P93
   Fantechi A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P157, DOI 10.1109/ICRE.2002.1048518
   Fernández-Carriba S, 2004, LATERALITY, V9, P1, DOI 10.1080/13576500342000095
   Gervasi V, 2005, ACM T SOFTW ENG METH, V14, P277, DOI 10.1145/1072997.1072999
   Gervasi V, 2002, SOFTWARE PRACT EXPER, V32, P113, DOI 10.1002/spc.430
   Happel H.-J., 2008, P 2008 INT WORKSHOP, P11
   Jalaji A., 2006, MAKING SENSE TEXT ID
   JINGBAI T, 2008, P IEEE INT WORKSH SE, P1
   Kaiya H, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P112
   Kitapci H, 2006, P 4 INT WORKSH COMP, P48, DOI DOI 10.1109/CERE.2006.8
   Ko Y, 2000, P 12 INT C SOFTW ENG, P334
   Ko Y, 2007, INFORM SOFTWARE TECH, V49, P1128, DOI 10.1016/j.infsof.2006.11.007
   Kowalski G., 2000, INFORM STORAGE RETRI, V2nd
   Lieberman H, 2001, COMMUN ACM, V44, P69, DOI 10.1145/381641.381661
   Liu Bing., 2006, Web Data Mining: Exploring Hyperlinks, Contents, and Usage Data (Data- Centric Systems and Applications)
   Mich L, 2004, REQUIR ENG, V9, P40, DOI 10.1007/s00766-003-0179-8
   Miller C.A., 2003, HUM DIMENS WILDL, V8, P263, DOI [10.1080/716100421, DOI 10.1080/716100421]
   Nigam K, 2000, MACH LEARN, V39, P103, DOI 10.1023/A:1007692713085
   Ormandjieva O., 2007, 4 INT WORKSH SOFTW Q, P39
   PALMER JD, 1992, INFORM DECIS TECHNOL, V18, P283
   Park S, 2000, INFORM SOFTWARE TECH, V42, P429, DOI 10.1016/S0950-5849(99)00102-0
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Resnick P., 1994, P ACM C COMP SUPP CO, P175
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Schafer J., 2001, DATA MIN KNOWL DISC, V5, P115, DOI DOI 10.1023/A:1009804230409
   Sebastiani F, 2002, ACM COMPUT SURV, V34, P1, DOI 10.1145/505282.505283
   Steele A, 2006, P 1 INT WORKSH MULT, P3
   Yiming Yang, 1999, Information Retrieval, V1, P69, DOI 10.1023/A:1009982220290
NR 44
TC 92
Z9 111
U1 1
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2010
VL 52
IS 4
BP 436
EP 445
DI 10.1016/j.infsof.2009.10.010
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 576CL
UT WOS:000276121400006
DA 2024-07-18
ER

PT J
AU Mendling, J
   Reijers, HA
   van der Aalst, WMP
AF Mendling, J.
   Reijers, H. A.
   van der Aalst, W. M. P.
TI Seven process modeling guidelines (7PMG)
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Business process modeling; Model quality; Guidelines
ID CONTROL-FLOW; QUALITY; MANAGEMENT; ERRORS; EPCS
AB Business process modeling is heavily applied in practice, but important quality issues have not been addressed thoroughly by research. A notorious problem is the low level of modeling competence that many casual modelers in process documentation projects have. Existing approaches towards model quality might be of benefit, but they suffer from at least one of the following problems. On the one hand, frameworks like SEQUAL and the Guidelines of Modeling are too abstract to be applicable for novices and non-experts in practice. On the other hand, there are collections of pragmatic hints that lack a sound research foundation. In this paper, we analyze existing research on relationships between model structure on the one hand and error probability and understanding on the other hand. As a synthesis we propose a set of seven process modeling guidelines (7PMG). Each of these guidelines builds on strong empirical insights, yet they are formulated to be intuitive to practitioners. Furthermore, we analyze how the guidelines are prioritized by industry experts. In this regard, the seven guidelines have the potential to serve as an important tool of knowledge transfer from academia into modeling practice. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Mendling, J.] Humboldt Univ, D-10099 Berlin, Germany.
   [Reijers, H. A.; van der Aalst, W. M. P.] Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
C3 Humboldt University of Berlin; Eindhoven University of Technology
RP Mendling, J (corresponding author), Humboldt Univ, Unter Linden 6, D-10099 Berlin, Germany.
EM jan.mendling@wiwi.hu-berlin.de; h.a.reijers@tue.nl;
   w.m.p.v.d.aalst@tue.nl
RI van der Aalst, Wil/G-1248-2011
OI van der Aalst, Wil/0000-0002-0955-6940; Mendling,
   Jan/0000-0002-7260-524X
CR Agarwal R, 2003, COMMUN ACM, V46, P248, DOI 10.1145/903893.903944
   [Anonymous], ACM COMPUT SURV
   [Anonymous], 1991, 9126 ISOIEC
   Bandara W, 2005, EUR J INFORM SYST, V14, P347, DOI 10.1057/palgrave.ejis.3000546
   Becker J, 2000, LECT NOTES COMPUT SC, V1806, P30
   Canfora G, 2005, J SYST SOFTWARE, V77, P113, DOI 10.1016/j.jss.2004.11.007
   Cardoso J, 2006, P IEEE I C SERV COMP, P167, DOI 10.1109/SCC.2006.82
   CURTIS B, 1992, COMMUN ACM, V35, P75, DOI 10.1145/130994.130998
   DANDEKAR A, 1997, SOFTWARE PROCESS IMP, V3, P87
   Davies I, 2006, DATA KNOWL ENG, V58, P358, DOI 10.1016/j.datak.2005.07.007
   GEORGAKOPOULOS D, 1995, DISTRIB PARALLEL DAT, V3, P119, DOI 10.1007/BF01277643
   GLABBEEK R, 1996, J ACM, V43, P555
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Gruhn V, 2007, SCI COMPUT PROGRAM, V65, P4, DOI 10.1016/j.scico.2006.08.003
   Guceglioglu AS, 2005, LECT NOTES COMPUT SC, V3649, P374, DOI 10.1007/11538394_26
   Gulla JA, 2000, 4TH INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ICRE.2000.855569
   Hung RYY, 2006, TOTAL QUAL MANAG BUS, V17, P21, DOI 10.1080/14783360500249836
   Jablonski S., 1996, WORKFLOW MANAGEMENT
   Keller G., 1992, Semantische Prozessmodellierung auf der Grundlage Ereignisgesteuerter Prozessketten (EPK) Veroffentlichungen des Instituts fur Wirtschaftsinformatik - Heft 98
   Kindler E, 2006, DATA KNOWL ENG, V56, P23, DOI 10.1016/j.datak.2005.02.005
   Koubarakis M, 2002, INFORM SYST, V27, P299, DOI 10.1016/S0306-4379(01)00055-2
   Krogstie J, 2006, EUR J INFORM SYST, V15, P91, DOI 10.1057/palgrave.ejis.3000598
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Malone, 2003, ORG BUSINESS KNOWLED
   Mendling J, 2008, DATA KNOWL ENG, V64, P312, DOI 10.1016/j.datak.2007.06.019
   MENDLING J, 2007, THESIS VIENNA U EC B
   MENDLING J, ACTIVITY LABELING PR
   Mendling J., 2006, BPM-06-08, BPM Center Report
   Mendling J, 2007, LECT NOTES COMPUT SC, V4803, P113
   Mendling J, 2007, LECT NOTES COMPUT SC, V4714, P48
   Mendling J, 2008, LECT NOTES BUS INF P, V6, P1
   Moody DL, 2005, DATA KNOWL ENG, V55, P243, DOI 10.1016/j.datak.2004.12.005
   Moody DL, 2002, LECT NOTES COMPUT SC, V2503, P380
   Recker J.C., 2006, Proceedings of the 18th International Conference on Advanced Information Systems Engineering, Workshops and Doctoral Consortium, P521
   Recker J.C., 2007, P 18 AUSTR C INF SYS, P356
   Reijers HA, 2009, DATA KNOWL ENG, V68, P221, DOI 10.1016/j.datak.2008.09.004
   Rosemann M, 2006, BUS PROCESS MANAG J, V12, P249, DOI 10.1108/14637150610657567
   Rosemann M, 2006, LECT NOTES COMPUT SC, V4001, P447, DOI 10.1007/11767138_30
   Russo CWR, 1997, QUAL PROG, V30, P51
   Sadiq SW, 2005, INFORM SYST, V30, P349, DOI 10.1016/j.is.2004.05.002
   Sarshar K, 2005, LECT NOTES COMPUT SC, V3649, P434, DOI 10.1007/11538394_36
   Scheer A.-W., 2000, ARIS BUSINESS PROCES
   Sharp A, 2001, ART H COMP SCI LIBR, P3
   SILVER B, 2008, 10 TIPS EFFECTIVE PR
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Vanderfeesten I, 2008, COMPUT IND, V59, P420, DOI 10.1016/j.compind.2007.12.007
   Vanhatalo J, 2007, LECT NOTES COMPUT SC, V4749, P43
   Vanhatalo J, 2009, DATA KNOWL ENG, V68, P793, DOI 10.1016/j.datak.2009.02.015
   Wand Y, 2002, INFORM SYST RES, V13, P363, DOI 10.1287/isre.13.4.363.69
   Weber B, 2008, DATA KNOWL ENG, V66, P438, DOI 10.1016/j.datak.2008.05.001
   Whitley KN, 1997, J VISUAL LANG COMPUT, V8, P109, DOI 10.1006/jvlc.1996.0030
   ZISMAN MD, 1978, PATTERN DIRECTED INF, P53
NR 52
TC 326
Z9 357
U1 3
U2 45
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2010
VL 52
IS 2
BP 127
EP 136
DI 10.1016/j.infsof.2009.08.004
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 540WW
UT WOS:000273372400001
DA 2024-07-18
ER

PT J
AU Weiglhofer, M
   Fraser, G
   Wotawa, F
AF Weiglhofer, Martin
   Fraser, Gordon
   Wotawa, Franz
TI Using coverage to automate and improve test purpose based testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Coverage criteria; Test purposes; LOTOS; TGV; Model-based testing
ID GENERATION; LOTOS
AB Test purposes have been presented as a solution to avoid the state space explosion when selecting test cases from formal models. Although such techniques work very well with regard to the speed of the test derivation, they leave the tester with one important task that influences the quality of the overall testing process: test purposes have to be formulated manually. In this paper. we present an approach that assists a test engineer with test purpose design in two ways: it allows automatic generation of coverage based test suites and can be used to automatically exercise those aspects of the system that are missed by handcrafted test purposes. We consider coverage of LOTOS specifications, and show how labeled transition systems derived from such specifications have to be extended in order to allow the application of logical coverage criteria to LOTOS specifications. We then show how existing tools can be used to efficiently derive test cases and suggest how to use the coverage information to minimize test suites while generating them. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Weiglhofer, Martin; Fraser, Gordon; Wotawa, Franz] Graz Univ Technol, Inst Software Technol, A-8010 Graz, Austria.
C3 Graz University of Technology
RP Weiglhofer, M (corresponding author), Graz Univ Technol, Inst Software Technol, A-8010 Graz, Austria.
EM weiglhofer@ist.tugraz.at; fraser@ist.tugraz.at; wotawa@ist.tugraz.at
OI Wotawa, Franz/0000-0002-0462-2283
FU Austrian Federal Ministry of Economics; province of Styria; Steirische
   Wirtschaftsforderungsgesellschaft mbH
FX The research herein is partially conducted within the competence network
   Softnet Austria (www.soft-net.at) and funded by the Austrian Federal
   Ministry of Economics (bm:wa), the province of Styria, the Steirische
   Wirtschaftsforderungsgesellschaft mbH. (SFG), and the city of Vienna in
   terms of the center for innovation and technology (ZIT).
CR Aichernig BK, 2006, LECT NOTES COMPUT SC, V3922, P324
   AICHERNIG BK, 2007, P 5 IEEE INT C SOFTW, P215, DOI DOI 10.1109/SEFM.2007.29
   AMMANN P, 2003, P 14 INT S SOFTW REL, V99
   Ammann Paul, 2008, Introduction to software testing, V1st
   Amyot D, 2005, COMPUT NETW, V49, P643, DOI 10.1016/j.comnet.2005.05.006
   AMYOT D, 2000, P 13 INT C TEST COMM, P19
   [Anonymous], 1989, 8807 ISO
   [Anonymous], VERIFICATION RELIABI
   BELINFANTE A, 1999, 12 INT WORKSH TEST C, V147, P179
   BOLOGNESI T, 1987, COMPUT NETWORKS ISDN, V14, P25, DOI 10.1016/0169-7552(87)90085-7
   BOTINCAN M, 2007, P 9 INT C TEL, P131
   CAMPBELL C, 2005, MSRTR200559 MICR RES
   CHEUNG TY, 1993, TWELFTH ANNUAL INTERNATIONAL PHOENIX CONFERENCE ON COMPUTERS AND COMMUNICATIONS, P245, DOI 10.1109/PCCC.1993.344457
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   da Silva DA, 2006, ELECTRON NOTES THEOR, V164, P29, DOI 10.1016/j.entcs.2006.09.004
   DUBOUSQUET L, 2000, IFIP C P, V176, P221
   EHRIG H, 1983, P 2 WORKSH DAT TYP
   FRASER G, 2008, P 8 INT C QUAL SOFTW, P199, DOI DOI 10.1109/QSIC.2008.41
   Gargantini A, 2001, J UNIVERS COMPUT SCI, V7, P1050
   GRABOWSKI J, 1993, P 6 SDL FOR, P253
   Grieskamp W, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P72
   HEERINK L, 2000, P 13 INT C TEST COMM, V176, P211
   HENNIGER O, 2003, 3 INT WORKSH FORM AP, V2931, P178
   HONG HS, 2002, 8 INT C TOOLS ALG CO, P151
   Jard C., 2005, International Journal on Software Tools for Technology Transfer, V7, P297, DOI 10.1007/s10009-004-0153-x
   Milner R., 1980, CALCULUS COMMUNICATI, V92
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   PEISCHL B, 2007, MOD BAS TEST WORKSH, P421
   PRETSCHNER A, 2004, MODEL BASED TESTING, V281
   Rayadurgam S, 2001, EIGHTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P83, DOI 10.1109/ECBS.2001.922409
   ROSENBERG J, 2002, 3261 RFC IETF
   Terpstra R., 1996, TESTING THEORY PRACT
   Tretmans J, 1996, SOFTWARE-CONC TOOL, V17, P103
   Tretmans J., 2008, LNCS, V4949, P1, DOI DOI 10.1007/978-3-540-78917-8_
   Tretmans J., 2003, P 1 EUR C MOD DRIV S, P13
   VANDERSCHOOT H, 1995, COMPUT NETWORKS ISDN, V27, P1111, DOI 10.1016/0169-7552(94)00005-E
   WEIGLHOFER M, 2006, SNATR20061P1 COMP NE
   WEIGLHOFER M, 2008, P 3 INT C EV NOV APP, P115
NR 38
TC 7
Z9 9
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2009
VL 51
IS 11
SI SI
BP 1601
EP 1617
DI 10.1016/j.infsof.2009.06.008
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 504LW
UT WOS:000270619300011
DA 2024-07-18
ER

PT J
AU Trujillo, J
   Soler, E
   Fernández-Medina, E
   Piattini, M
AF Trujillo, Juan
   Soler, Emilio
   Fernandez-Medina, Eduardo
   Piattini, Mario
TI An engineering process for developing Secure Data Warehouses
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Data Warehouses; Security requirements engineering; Access control;
   i(center dot)
ID ACCESS-CONTROL; EXTENSION; MODEL
AB We present a new approach for the elicitation and development security requirements in the entire Data Warehouse (DWs) life cycle, which we have called a Secure Engineering process for DAta WArehouses (SEDAWA). Whilst many methods for the requirements analysis phase of the DWs have been proposed, the elicitation of security requirements as non-functional requirements has not received sufficient attention. Hence, in this paper we propose a methodology for the DW design based on Model Driven Architecture (MDA) and the standard Software Process Engineering Metamodel Specification (SPEM) from the Object Management Group (OMG). We define four phases comprising of several activities and steps, an d five disciplines which cover the whole DW design. Our methodology adapts the i* framework to be used under MDA and the SPEM approaches in order to elicit and develop security requirements for DWs. The benefits of our proposal are shown through an example related to the management of the pharmacies consortium business. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Fernandez-Medina, Eduardo; Piattini, Mario] Univ Castilla La Mancha, ALARCOS Res Grp, Informat Syst & Technol Dept, UCLM Res & Dev Inst, E-13071 Ciudad Real, Spain.
   [Trujillo, Juan] Univ Alicante, LUCENTIA Res Grp, Dept Software & Comp Syst, Alicante 03690, Spain.
   [Soler, Emilio] Univ Matanzas, Dept Comp Sci, Matanzas, Cuba.
C3 Universidad de Castilla-La Mancha; Universitat d'Alacant
RP Fernández-Medina, E (corresponding author), Univ Castilla La Mancha, ALARCOS Res Grp, Informat Syst & Technol Dept, UCLM Res & Dev Inst, Paseo Univ 4, E-13071 Ciudad Real, Spain.
EM eduardo.fdezmedina@uclm.es
RI Piattini, Mario/F-6271-2013; Trujillo, Juan/L-7079-2014;
   Fernandez-Medina, Eduardo/D-4648-2011
OI Piattini, Mario/0000-0002-7212-8279; Trujillo, Juan/0000-0003-0139-6724;
   Soler, Emilio/0000-0003-4003-6502; Fernandez-Medina,
   Eduardo/0000-0003-2553-9320
CR Abelló A, 2001, LECT NOTES COMPUT SC, V2113, P668
   [Anonymous], 2013, The Data Warehouse Toolkit: The Defi nitive Guide to Dimensional Modeling
   [Anonymous], 2003, Rational Unified Process Made Easy: A Practitioner's Guide to the RUP
   [Anonymous], 2000, P INT SCH FDN SEC AN
   [Anonymous], MDA GUIDE VERSION 1
   CAVERO JM, 2001, P 3 INT C ENT INF SY, P138
   Crook R, 2003, INFORM SOFTWARE TECH, V45, P979, DOI 10.1016/S0950-5849(03)00097-1
   Devanbu P.T., 2000, The Future of Software Engineering, Proceedings 22nd International Conference on Software Engineering (ICSE 2000), P227
   ESSMAYR W, 2001, WORKSH SEC DISTR DAT, P9
   Fernández-Medina E, 2007, INFORM SYST, V32, P826, DOI 10.1016/j.is.2006.07.003
   Fernández-Medina E, 2006, DECIS SUPPORT SYST, V42, P1270, DOI 10.1016/j.dss.2005.10.008
   Ferraiolo DF, 2003, ARTECH H COMP SEC LI
   FREEMAN JF, 1993, P 8 ANN C COMP ASS P, P61
   Giorgini Paolo., 2005, DOLAP 05, P47
   Golfarelli M., 1998, P 1 ACM INT WORKSHOP, P3
   He Q., 2003, Proc. of REFSQ, V3, P137
   HE Q, 2005, THESIS N CAROLINA ST
   Jajodia S., 1992, P 2 EUR S RES COMP S, P307
   Katic N, 1998, NINTH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P300, DOI 10.1109/DEXA.1998.707417
   Kimball R., 1998, The data warehouse lifecycle toolkit: expert methods for designing, developing, and deploying data warehouses
   Kirkgoze R, 1997, EIGHTH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P619, DOI 10.1109/DEXA.1997.617386
   Koch M, 2002, LECT NOTES COMPUT SC, V2303, P223
   LUJAN S, 2003, P 5 INT WORKSH DES M
   LUJAN S, 2004, P 3 INT C ADV INF SY, P20
   Luján-Mora S, 2006, DATA KNOWL ENG, V59, P725, DOI 10.1016/j.datak.2005.11.004
   MAZON J, 2005, P 1 INT WORKSH REQ E, P44
   Mazón JN, 2008, DECIS SUPPORT SYST, V45, P41, DOI 10.1016/j.dss.2006.12.003
   Mazón JN, 2007, LECT NOTES COMPUT SC, V4802, P255
   MEAD NR, 2005, CMUSEI2005TR009 TR
   MOFFETT JD, 2004, CORE SECURITY REQUIR, V23, P1
   MOODY D, 2000, P 3 INT WORKSH DES M, P110
   Mouratidis H, 2003, LECT NOTES COMPUT SC, V2681, P63
   Object Management Group (OMG), 2008, MOF Model to Text Transformation Language; Version 1.0, Document Formal/2008-01-16
   *OMG, 2005, SOFTW SYST PROC ENG
   *OMG, 2006, UML INFR SPEC V2 0
   *OMG, 2005, MOF 2 0 QVT FIN AD S
   Paim FRS, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P75
   Perry W.E., 2006, EFFECTIVE METHODS SO, VThird
   PRAKASH N, 2006, LNCS, V3288, P205
   Priebe T., 2000, Proceedings of Third ACM International Workshop on Data Warehousing and OLAP (DOLAP 2000), November 10, 2000, P33
   Priebe Torsten., 2001, P 20 INT C CONCEPTUA, P311
   Rizzi S., 2006, DOLAP '06, P3, DOI [10.1145/1183512.1183515, DOI 10.1145/1183512.1183515]
   Rosenthal A., 2000, Proceedings of the International Workshop on Design and Management of Data Warehouses (DMDW'2000), P1
   Saltor F, 2002, HETEROGENEOUS INFORMATION EXCHANGE AND ORGANIZATIONAL HUBS, P123
   Schneier B, 1999, DR DOBBS J, V24, P21
   Sloman M, 2002, IEEE NETWORK, V16, P10, DOI 10.1109/65.993218
   Soler E, 2008, COMPUT STAND INTER, V30, P341, DOI 10.1016/j.csi.2008.03.002
   Soler E, 2007, ARES 2007: SECOND INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P644
   Soler E, 2007, ARES 2007: SECOND INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P294
   Villarroel R, 2006, J RES PRACT INF TECH, V38, P31
   Winter R., 2003, P 36 HAW INT C SYST
   YU ESK, 1996, THESIS U TORONTO CAN
NR 52
TC 22
Z9 24
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2009
VL 51
IS 6
BP 1033
EP 1051
DI 10.1016/j.infsof.2008.12.003
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 435BX
UT WOS:000265319400006
DA 2024-07-18
ER

PT J
AU Briand, LC
   Labiche, Y
   Yue, T
AF Briand, Lionel C.
   Labiche, Yvan
   Yue, Tao
TI Automated traceability analysis for UML model refinements
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE UML; OCL; Impact analysis; Traceability link; Refinement
ID IMPACT ANALYSIS
AB During iterative, UML-based software development, various UML diagrams, modeling the same system at different levels of abstraction are developed. These models must remain consistent when changes are performed. In this context, we refine the notion of impact analysis and distinguish horizontal impact analysis-that focuses on changes and impacts at one level of abstraction-from vertical impact analysis-that focuses on changes at one level of abstraction and their impacts on another level. Vertical impact analysis requires that some traceability links be established between model elements at the two levels of abstraction. We propose a traceability analysis approach for UML 2.0 class diagrams which is based on a careful formalization of changes to those models, refinements which are composed of those changes. and traceability links corresponding to refinements. We show how actual refinements and corresponding traceability links are formalized using the OCL Tool support and a case study are also described. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Labiche, Yvan; Yue, Tao] Carleton Univ, Software Qual Engn Lab, Ottawa, ON K1S 5B6, Canada.
   [Briand, Lionel C.] Univ Oslo, Simula Res Lab, Lysaker, Norway.
C3 Carleton University; University of Oslo
RP Briand, LC (corresponding author), Univ Oslo, Simula Res Lab, POB 134, Lysaker, Norway.
EM briand@simula.no; labiche@sce.carleton.ca; tyue@sce.carleton.ca
RI yue, tao/H-6783-2013
OI Yue, Tao/0000-0003-3262-5577; Labiche, Yvan/0000-0001-8880-4836
FU CITO; IBM-Rational; NSERC
FX This work is supported by CITO and IBM-Rational. Lionel and Yvan were
   further supported by NSERC grants.
CR Aizenbud-Reshef N, 2006, IBM SYST J, V45, P515, DOI 10.1147/sj.453.0515
   [Anonymous], UML 2 0 SUP SPEC
   [Anonymous], P INT DES PROC TECHN
   [Anonymous], UML2 EMF BAS UML 2 0
   [Anonymous], UML 2 0 SUP SPEC
   [Anonymous], 2004, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development
   [Anonymous], 2003, Rational Unified Process Made Easy: A Practitioner's Guide to the RUP
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Arnold Robert S., 1996, Software Change Impact Analysis
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Bohner SA, 2002, PROC IEEE INT CONF S, P263, DOI 10.1109/ICSM.2002.1167777
   Briand LC, 2006, J SYST SOFTWARE, V79, P339, DOI 10.1016/j.jss.2005.05.001
   BRIAND LC, 2006, SCE0606 CARL U
   BRUEGGE B, ARENA
   Bruegge B., 2009, OBJECT ORIENTED SOFT
   D'Souza D., 1998, OBJECTS COMPONENTS F
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   *ECL FDN, ECL MOD FRAM
   Egyed A, 2002, ACM T SOFTW ENG METH, V11, P449, DOI 10.1145/606612.606616
   EGYED A, 2004, LECT NOTES COMPUTER, V2984
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   GOAER OL, 2007, EVOL 2007
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   HNATKOWSKA B, 2003, P WORKSH CONS PROBL
   *IBM RAT, 2005, RAT SOFTW ARCH
   Ivkovic I, 2004, PROC IEEE INT CONF S, P252, DOI 10.1109/ICSM.2004.1357809
   Judson Sr, 2004, IEEE INT C ENG COMP, P128, DOI 10.1109/ICECCS.2004.1310911
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   KUNG D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P202, DOI 10.1109/ICSM.1994.336774
   LETELIER P, 2002, P INT WORKSH TRAC EM
   LETKEMAN K, 2005, COMPARING MERGING 3
   Li LF, 1996, PROCEEDINGS OF INTERNATIONAL WORKSHOP ON CSCW IN DESIGN, P171, DOI 10.1109/ICSM.1996.565004
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T., 2000, Automated Software Engineering, V7, P39, DOI 10.1023/A:1008765200695
   Murta LGP, 2006, IEEE INT CONF AUTOM, P135
   OMG, 2003, Tech. rep. ptc/03-08-02
   PONS C, 2005, P ACM IEEE INT C MOD
   PONS C, 2004, P WORKSH SOFTW MOD E
   PORRES I, 2005, SOFTWARE SYSTEMS MOD, V4, P368, DOI DOI 10.1007/S10270-005-0088-Z
   Selic B., 1998, Languages, Compilers, and Tools for Embedded Systems. ACM SIGPLAN Workshop LCTES'98. Proceedings, P250, DOI 10.1007/BFb0057795
   SHEN W, 2002, P WORKSH CONS PROBL
   Tang A, 2007, J SYST SOFTWARE, V80, P127, DOI 10.1016/j.jss.2006.04.004
   Van Der Straeten R, 2007, SOFTW SYST MODEL, V6, P139, DOI 10.1007/s10270-006-0025-9
   Van Gorp P, 2004, EIGHTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P123, DOI 10.1109/EDOC.2004.1342510
   VAN GORP P, 2005, P INT WORKSH GRAPH M
   von Knethen A, 2003, PROC IEEE INT CONF S, P246, DOI 10.1109/ICSM.2003.1235427
   XING Z, 2006, P 13 WORK C REV ENG
   XING Z, 2005, 20 INT C AUT SOFTW E, V14, P127
   [No title captured]
NR 49
TC 22
Z9 27
U1 1
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 512
EP 527
DI 10.1016/j.infsof.2008.06.002
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 386YX
UT WOS:000261919900020
DA 2024-07-18
ER

PT J
AU Gashi, I
   Popov, P
   Stankovic, V
AF Gashi, Ilir
   Popov, Peter
   Stankovic, Vladimir
TI Uncertainty explicit assessment of off-the-shelf software: A Bayesian
   approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE COTS component assessment; Reliability and performance assessment;
   Bayesian inference
AB Assessment of software COTS components is an essential part of component-based software development. Poorly chosen components may lead to solutions of low quality and that are difficult to maintain. The assessment may be based on incomplete knowledge about the COTS component itself and other aspects (e.g. vendor's credentials, etc.), which may affect the decision of selecting COTS component(s). We argue in favor of assessment methods in which uncertainty is explicitly represented ('uncertainty explicit' methods) using probability distributions. We provide details of a Bayesian model, which can be used to capture the uncertainties in the simultaneous assessment of two attributes, thus, also capturing the dependencies that might exist between them. We also provide empirical data from the use of this method for the assessment of off-the-shelf database servers which illustrate the advantages of 'uncertainty explicit' methods over conventional methods of COTS component assessment which assume that at the end of the assessment the values of the attributes become known with certainty. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Gashi, Ilir; Popov, Peter; Stankovic, Vladimir] City Univ London, Ctr Software Reliabil, London EC1V 0HB, England.
C3 City University London
RP Gashi, I (corresponding author), City Univ London, Ctr Software Reliabil, Northampton Sq, London EC1V 0HB, England.
EM I.Gashi@city.ac.uk; ptp@csr.city.ac.uk; V.Stankovic@city.ac.uk
RI Stankovic, Vladimir/L-6584-2016
OI Stankovic, Vladimir/0000-0002-1075-2420; Stankovic,
   Vladimir/0000-0002-8740-6526; Popov, Peter/0000-0002-3434-5272; Gashi,
   Ilir/0000-0002-8017-3184
CR ABTS C, 2001, P ESCOM 2001 APR, P1
   ADAMS EN, 1984, IBM J RES DEV, V28, P2, DOI 10.1147/rd.281.0002
   Alves Carina, 2001, 15 BRAZ S SOFTW ENG
   Andrews Tony., 2003, Business process execution language for web services
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], 20 ANN SOFTW ENG WOR
   [Anonymous], P 1 INT C COTS BAS S
   *AP SOFTW FDN, 2008, AB AP HTTP SERV BENC
   BERTOA MF, 2002, P 6 ECOOP WORKSH QUA, P54
   Boehm B, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P8, DOI 10.1109/ISESE.2003.1237960
   BROCKLEHURST S, 1990, IEEE T SOFTWARE ENG, V16, P458, DOI 10.1109/32.54297
   BURGUES X, 2002, P 1 INT C COTS BAS S, P54
   Chanudaud S, 2000, POSITIF, P97, DOI 10.1109/ICDSN.2000.857521
   DEAN J, 2000, EVALUATION METHOD CO
   ECKHARDT DE, 1991, IEEE T SOFTWARE ENG, V17, P692, DOI 10.1109/32.83905
   ECKHARDT DE, 1985, IEEE T SOFTWARE ENG, V11, P1511, DOI 10.1109/TSE.1985.231895
   Gashi E, 2004, 2004 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P389
   Gashi I, 2004, LECT NOTES COMPUT SC, V3069, P191
   Gashi I, 2007, IEEE T DEPEND SECURE, V4, P280, DOI 10.1109/TDSC.2007.70208
   *GNOM, 2008, BETADIST
   Gray Jim, 1987, 6 INT C REL DISTR DA
   GREGOR S, 2002, P ICCBSS FEB 2002 OR, P132
   HAMLET D, 1990, IEEE T SOFTWARE ENG, V16, P1402, DOI 10.1109/32.62448
   IEEE/ANSI, 1993, 8301993 IEEEANSI
   *INT STAND ORG, 2001, ISOIEC912612001 1
   JEANRENAUD J, 1994, SOFTWARE QUALITY MAN, V2, P55
   JOHNSON NL, 1972, WILEY SERIES PROBABI, V4, P333
   Kaplan Wilfred., 1984, Advanced calculus, Vthird
   KNIGHT JC, 1986, IEEE T SOFTWARE ENG, V12, P96, DOI 10.1109/TSE.1986.6312924
   KUNDA D, 1999, P 4 UKAIS C U YORK E
   LEWIS P, 2000, LESSONS LEARNED DEV
   Likert R., 1932, ARCH PSYCHOL, V22, P55
   LITTLEWOOD B, 1989, IEEE T SOFTWARE ENG, V15, P1596, DOI 10.1109/32.58771
   Littlewood B, 1997, IEEE T SOFTWARE ENG, V23, P673, DOI 10.1109/32.637384
   LITTLEWOOD B, 2000, P 19 INT C COMP SAF, P294
   Maiden NA, 1998, IEEE SOFTWARE, V15, P46, DOI 10.1109/52.663784
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   NCUBE C, 1999, INT WORKSH COMP BAS
   OCHS M, 2001, P 7 INT SOFTW METR S, P285
   Patterson D., 2002, RECOVERY ORIENTED CO
   PHILLIPS BC, 2002, J DEFENCE SOFTWARE E
   POPOV P, 2002, SAFECOMP 2002, P139
   PORT D, 2004, P ICCBSS 2004, P183
   RUHE G, 2002, WEB WEB SERVICES DAT, P34
   Stankovic V, 2006, SYM REL DIST SYST, P391
   TORCHIANO M, 2003, P INT C COTS BAS SOF, P219
   *TPC, 2004, TPC ON LIN T PROC BE
   Tran V, 1997, P A REL MAI, P361, DOI 10.1109/RAMS.1997.571734
   WEYUKER EJ, 1991, IEEE T SOFTWARE ENG, V17, P703, DOI 10.1109/32.83906
   WRIGHT D, 1994, 135 PDCS2 CIT U CTR
NR 50
TC 5
Z9 5
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 497
EP 511
DI 10.1016/j.infsof.2008.06.003
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 386YX
UT WOS:000261919900019
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Díaz, O
   Irastorza, A
   Cuadrado, JS
   Alonso, LM
AF Diaz, Oscar
   Irastorza, Arantza
   Sanchez Cuadrado, Jesus
   Alonso, Luis M.
TI From page-centric to portlet-centric Web development: Easing the
   transition using MDD
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Portlets; Model-driven development; Service-oriented architecture; Web
   portals
ID MODEL
AB Portlet syndication is the next wave following the successful use of content syndication in current portals. Portlets can be regarded as Web components, and the portal as the component container where portlets are aggregated to provide higher-order applications. This perspective requires a departure from how current Web portals are envisaged. The portal is no longer perceived as a set of pages but as an integrated set of Web components that are now delivered through the portal. From this perspective, the portal page now acts as a mere conduit for portlets. Page and page navigation dilute in favor of portlet and portlet orchestration. However, the mapping from portlet orchestration (design time) to page navigation (implementation time) is too tedious and error prone. For instance, the fact that the same portlet can be placed in distinct pages produces code clones that are repeated along the pages that contain this portlet. This redundancy substantiates in the first place the effort to move to model-driven development. This work uses the eXo platform as the target PSM, and the PIM is based on Hypermedia Model Based on Statecharts. The paper shows how this approach accounts for portal validation/verification to be conducted earlier at the PIM level, and streamlines both design and implementation of eXo portals. A running example is used throughout the paper. (c) 2007 Elsevier B.V. All rights reserved.
C1 [Diaz, Oscar; Irastorza, Arantza; Alonso, Luis M.] Univ Basque Country, ONEKIN Res Grp, Dept Comp Languages & Syst, San Sebastian 20080, Spain.
   [Sanchez Cuadrado, Jesus] Univ Murcia, GTS Res Grp, Dept Comp Sci & Syst, E-30100 Murcia, Spain.
C3 University of Basque Country; University of Murcia
RP Irastorza, A (corresponding author), Univ Basque Country, ONEKIN Res Grp, Dept Comp Languages & Syst, Lardizabal Pasealekua 1,POB 649, San Sebastian 20080, Spain.
EM oscar.diaz@ehu.es; arantza.irastorza@ehu.es; jesusc@um.es;
   jipalgol@ehu.es
RI Diaz, Oscar/T-7269-2019; Sanchez Cuadrado, Jesus/L-2365-2013
OI Diaz, Oscar/0000-0003-1334-4761; Sanchez Cuadrado,
   Jesus/0000-0001-9755-5616; IRASTORZA GONI, MARIA
   ARANZAZU/0000-0003-1048-8807
FU Spanish Ministry of Science Education; European Social Fund
   [TIC2005-05610]; Seneca Foundation (Murcia, Spain) [05645/PI/07]
FX This work was co-supported, on the one hand, by the Spanish Ministry of
   Science & Education, and the European Social Fund under contract
   TIC2005-05610, and on the other hand, by Seneca Foundation (Murcia,
   Spain) with the Grant 05645/PI/07.
CR [Anonymous], WORKSH GEN TECHN CON
   [Anonymous], CONCEPTUAL MODELING
   [Anonymous], 1 INT SEM WEB C
   Brambilla M, 2006, ACM T SOFTW ENG METH, V15, P360, DOI 10.1145/1178625.1178627
   Casati F, 2001, INFORM SYST, V26, P143, DOI 10.1016/S0306-4379(01)00014-X
   Ceri S, 2002, IEEE INTERNET COMPUT, V6, P20, DOI 10.1109/MIC.2002.1020321
   De Oliveira MCF, 2001, ACM T INFORM SYST, V19, P28, DOI 10.1145/366836.366869
   Díaz O, 2004, J UNIVERS COMPUT SCI, V10, P454
   Fraternali P, 2000, ACM T INFORM SYST, V18, P323, DOI 10.1145/358108.358110
   Gitzel R, 2007, SCI COMPUT PROGRAM, V66, P105, DOI 10.1016/j.scico.2006.09.001
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   KOCH N, 2001, 1 INT WORKSH WEB OR
   Manolescu I., 2005, ACM Transactions on Internet Technology, V5, P439, DOI 10.1145/1084772.1084773
   OMG, 2003, MDA GUID VERS 1 0 1
   *OMG, 2005, MOF QVT FIN AD SPEC
   OMG Object Management Group, 2007, SOFTW PROC ENG MET V
   Sánchez Cuadrado J, 2006, LECT NOTES COMPUT SC, V4066, P158
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Sirin E., 2003, Proc. Web Services: Modeling, P17
   Thomas D., 2004, PROGRAMMING RUBY PRA, V2
   Yu J., 2007, Proceedings of the 16th international conference on World Wide Web, P923
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 43
TC 0
Z9 3
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2008
VL 50
IS 12
BP 1210
EP 1231
DI 10.1016/j.infsof.2007.11.006
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 358CS
UT WOS:000259894800003
DA 2024-07-18
ER

PT J
AU Dybå, T
   Dingsoyr, T
AF Dyba, Tore
   Dingsoyr, Torgeir
TI Empirical studies of agile software development:: A systematic review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE empirical software engineering; evidence-based software engineering;
   systematic review; research synthesis; agile software development; XP;
   extreme programming; scrum
ID METHODOLOGIES
AB Agile software development represents a major departure from traditional, plan-based approaches to software engineering. A systematic review of empirical studies of agile software development up to and including 2005 was conducted. The search strategy identified 1996 studies, of which 36 were identified as empirical studies. The studies were grouped into four themes: introduction and adoption, human and social factors, perceptions on agile methods, and comparative studies. The review investigates what is currently known about the benefits and limitations of, and the strength of evidence for, agile methods. Implications for research and practice are presented. The main implication for research is a need for more and better empirical studies of agile software development within a common research agenda. For the industrial readership, the review provides a map of findings, according to topic, that can be compared for relevance to their own settings and situations. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Dyba, Tore; Dingsoyr, Torgeir] SINTEF, ICT, NO-7465 Trondheim, Norway.
C3 SINTEF
RP Dybå, T (corresponding author), SINTEF, ICT, SP Andersensv 15B, NO-7465 Trondheim, Norway.
EM tore.dyba@sintef.no; torgeir.dingsoyr@sintef.no
RI Dingsøyr, Torgeir/J-5862-2012; ONeill, Susan/B-1761-2010; Dingsøyr,
   Torgeir/AAJ-7360-2020
OI Dingsøyr, Torgeir/0000-0003-0725-345X; Dingsøyr,
   Torgeir/0000-0003-0725-345X
CR ABRAHAMSSON P, 2003, P 25 INT C SOFTW ENG
   Abrahamsson P., 2002, Agile Software Development Methods: Review and Analysis
   Ackoff R. L., 1999, ACKOFFS BEST HIS CLA, P104
   Agerfalk P.J., 2006, COMMUN ACM, V49, P27
   ANDERSON A, 1998, DISTRIB COMPUT, P24
   [Anonymous], 1995, The Capability Maturity Model: Guidelines for Improving the Software Process
   [Anonymous], BIOMETRICS
   Aoyama M, 1998, IEEE SOFTWARE, V15, P56, DOI 10.1109/52.730844
   Avison D, 1999, COMMUN ACM, V42, P94, DOI 10.1145/291469.291479
   Beck K., 2000, EXTREME PROGRAMMING
   Boehm B., 2003, BALANCING AGILITY DI
   Britten Nicky, 2002, J Health Serv Res Policy, V7, P209, DOI 10.1258/135581902320432732
   Checkland P.Scholes., 1990, SOFT SYSTEMS METHODO
   Cockburn A, 2000, IEEE SOFTWARE, V17, P64, DOI 10.1109/52.854070
   Cockburn A., 2004, Crystal clear: A human-powered methodology for small teams: A human-powered methodology for small teams
   COHEN D, 2004, ADV SOFTWARE ENG, V62
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   CONBOY K, 2004, P XP AG UN SPR VERL
   Delamothe T, 2004, BMJ-BRIT MED J, V328, P1, DOI 10.1136/bmj.328.7430.1
   Dittrich Y, 2007, INFORM SOFTWARE TECH, V49, P531, DOI 10.1016/j.infsof.2007.02.009
   Dybå T, 2000, IEEE SOFTWARE, V17, P82, DOI 10.1109/52.877872
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dyba T., 2007, Proc. of the First Int. Symp. on Empirical Software Engineering and Measurement, P225
   Dybå T, 2007, IEEE SOFTWARE, V24, P12, DOI 10.1109/MS.2007.158
   Edmondson AC, 2007, ACAD MANAGE REV, V32, P1155, DOI 10.5465/AMR.2007.26586086
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Erickson J, 2005, J DATABASE MANAGE, V16, P88, DOI 10.4018/jdm.2005100105
   Gilb T, 2005, COMPETITIVE ENGINEERING: A HANDBOOK FOR SYSTEMS ENGINEERING, REQUIREMENTS ENGINEERING, AND SOFTWARE ENGINEERING USING PLANGUAGE, P1, DOI 10.1016/B978-075066507-0/50005-2
   Greenhalgh T., 2001, READ PAPER, V2nd
   Gunasekaran A, 1999, INT J PROD ECON, V62, P87, DOI 10.1016/S0925-5273(98)00222-9
   Higgins JPT., 2008, COCHRANE HDB SYSTEMA, DOI DOI 10.1002/9780470712184
   HOST M, 2007, P 1 INT S EMP SOFTW, P479
   Humphrey W., 2005, PSP: A self - improvement process for software engineers
   KEEFER G, 2003, EXTREME PROGRAMMING
   Khan K, 2001, CRD Report 4, V2nd
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   KITCHENHAM BA, 2007, GUIDELINES PEFORMING
   Krutchen P., 2003, RATIONAL UNIFIED PRO
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   McAvoy J, 2007, INFORM SOFTWARE TECH, V49, P552, DOI 10.1016/j.infsof.2007.02.012
   McBreen P., 2003, QUESTIONING EXTREME
   Merisalo-Rantanen H, 2005, J DATABASE MANAGE, V16, P41, DOI 10.4018/jdm.2005100103
   Meso P, 2006, INFORM SYST MANAGE, V23, P19, DOI 10.1201/1078.10580530/46108.23.3.20060601/93704.3
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   NERUR S, 2005, COMMUN ACM, P72
   Nerur S, 2007, COMMUN ACM, V50, P79, DOI 10.1145/1226736.1226739
   Noblit G. W., 1988, Meta-Ethnography: Synthesizing Qualitative Studies
   Ohno T, 1988, Toyota Production System: Beyond Large-Scale Production
   Palmer S.R., 2002, PRACTICAL GUIDE FEAT
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Rajlich V, 2006, COMMUN ACM, V49, P67, DOI 10.1145/1145287.1145289
   Riemenschneider CK, 2002, IEEE T SOFTWARE ENG, V28, P1135, DOI 10.1109/TSE.2002.1158287
   Sanchez LM, 2001, INT J PROD RES, V39, P3561, DOI 10.1080/00207540110068790
   Schwaber K., 2001, Agile software development with scrum
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Stapleton Jennifer., 2003, DSDM: Business focused development
   Stephens Matt, 2003, Extreme Programming Refactored: The XP
   Strauss A., 1990, BASICS QUALITATIVE R
   Takeuchi H., 1986, Harvard business review, V64, P137
   Turk D, 2005, J DATABASE MANAGE, V16, P62, DOI 10.4018/jdm.2005100104
   Wenger E., 1998, Communities of practice: learning, meaning, and identity, DOI [10.1017/CBO9780511803932, DOI 10.1017/CBO9780511803932]
   Williams L, 2003, COMPUTER, V36, P39, DOI 10.1109/MC.2003.1204373
   Womack J., 2006, The machine that changed the world
   2005, N AM EUROPEAN ENTERP
NR 66
TC 1231
Z9 1370
U1 46
U2 668
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2008
VL 50
IS 9-10
BP 833
EP 859
DI 10.1016/j.infsof.2008.01.006
PG 27
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 324PG
UT WOS:000257529900001
DA 2024-07-18
ER

PT J
AU Choi, S
   Kim, H
   Jang, H
   Kim, J
   Kim, SM
   Song, J
   Lee, YJ
AF Choi, Seunglak
   Kim, Hangkyu
   Jang, Hyukjae
   Kim, Jungsook
   Kim, Su Myeon
   Song, Junehwa
   Lee, Yoon-Joon
TI A framework for ensuring consistency of Web Services Transactions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE web services; transaction model; transaction management protocol;
   consistency
AB For efficiently managing Web Services (WS) transactions which are executed across multiple loosely-coupled autonomous organizations, isolation is commonly relaxed. A Web service operation of a transaction releases locks on its resources once its jobs are completed without waiting for the completions of other operations. However, those early unlocked resources can be seen by other transactions, which can spoil data integrity and cause incorrect outcomes. Existing WS transaction standards do not consider this problem. In this paper, we propose a mechanism to ensure the consistent executions of isolation-relaxing WS transactions. The mechanism effectively detects inconsistent states of transactions with a notion of an end-state dependency and recovers them to consistent states. We also propose a new Web services Transaction Dependency management Protocol (WTDP). WTDP helps organizations manage the WS transactions easily without data inconsistency. WTDP is designed to be compliant with a representative WS transaction standard, the Web Services Transactions specifications, for easy integration into existing WS transaction systems. We prototyped a WTDP-based WS transaction management system to validate our protocol. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Choi, Seunglak; Kim, Hangkyu; Jang, Hyukjae; Song, Junehwa; Lee, Yoon-Joon] Korea Adv Inst Sci & Technol, Taejon 305701, South Korea.
   [Kim, Jungsook] Elect & Telecommun Res Inst, Taejon 305606, South Korea.
   [Kim, Su Myeon] Samsung Adv Inst Technol, Younggin Si, Gyunggi Do, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST); Electronics &
   Telecommunications Research Institute - Korea (ETRI); Samsung
RP Choi, S (corresponding author), Korea Adv Inst Sci & Technol, 371-1 Gusseong Dong, Taejon 305701, South Korea.
EM slchoi@dbserver.kaist.ac.kr; hkkim@dbserver.kaist.ac.kr;
   hjjang@nclab.kaist.ac.kr; jungsook96@etri.re.kr; sumyunkim@samsung.com;
   junesong@nclab.kaist.ac.kr; yjlee@dbserver.kaist.ac.kr
RI Song, Junehwa/C-1575-2011; JANG, HYUKJAE/IWV-0026-2023; Lee, Yoon
   Joon/C-1881-2011; Song, Junehwa/CAJ-3787-2022
OI Song, Junehwa/0000-0002-7941-6636
CR AKKIRAJU R, 2001, P OOPLSA 2001 WORKSH
   *ARJ TECHN LTS FUJ, 2003, WEB SERV COMP APPL F
   Biswas D, 2005, LECT NOTES COMPUT SC, V3387, P69
   CURBERA F, 2001, P OOPLSA 2001 WORKSH
   Dalal S, 2003, IEEE INTERNET COMPUT, V7, P30, DOI 10.1109/MIC.2003.1167337
   ELIOT J, 1985, MOSS NESTED T APPROA
   ELMAGARMID K, 1990, P 16 VLDB C, P507
   Garcia-Molina H., 1987, ACM SIGMOD Record, P249, DOI DOI 10.1145/38714.38742
   *IBM MICR BEA, 2005, WEB SERV T SPEC
   MEHROTRA S, 1992, INT CON DISTR COMP S, P56, DOI 10.1109/ICDCS.1992.235055
   MIKALSEN T, 2002, DSN 2002
   NARAYANAN S, 2002, P WWW C HON HAW US
   *OASIS, 2005, BUS T PROT
   Papazoglou MP, 2003, WORLD WIDE WEB, V6, P49, DOI 10.1023/A:1022308532661
   PIERCE M, 2002, P IEEE ACM SC2002 C, P16
   Reuter A, 1993, T PROCESSING CONCEPT
   SCHMIT BA, 2005, P 1 IEEE INT WORKSH
   TSUR S, 2001, P 27 VLDB C ROM IT
   WEIKUM G, 1992, DATABASE T MODELS AD, P515
   ZHANG M, 1994, P ACM SIGMOD C, P67
   DEFINITION VENDOR MA
NR 21
TC 15
Z9 17
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2008
VL 50
IS 7-8
BP 684
EP 696
DI 10.1016/j.infsof.2007.07.001
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 305KT
UT WOS:000256178000006
DA 2024-07-18
ER

PT J
AU Laleau, R
   Polack, F
AF Laleau, Regine
   Polack, Fiona
TI Using formal metamodels to check consistency of functional views in
   information systems specification
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE information system design; unified modelling language notation;
   metamodel; formal notation
ID UML
AB UML notations require adaptation for applications such as Information Systems (IS). Thus we have defined IS-UML. The purpose of this article is twofold. First, we propose an extension to this language to deal with functional aspects of IS. We use two views to specify IS transactions: the first one is defined as a combination of behavioural UML diagrams (collaboration and state diagrams), and the second one is based on the definition of specific classes of an extended class diagram. The final objective of the article is to consider consistency issues between the various diagrams of an IS-UML specification. In common with other UML languages, we use a metamodel to define IS-UML. We use class diagrams to summarize the metamodel structure and a formal language, B, for the full metamodel. This allows us to formally express consistency checks and mapping rules between specific metamodel concepts. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Laleau, Regine] Univ Paris Est, IUT Fontainebleau, Res Lab LACL, F-77300 Fontainebleau, France.
   [Polack, Fiona] Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
C3 Universite Paris-Est-Creteil-Val-de-Marne (UPEC); University of York -
   UK
RP Laleau, R (corresponding author), Univ Paris Est, IUT Fontainebleau, Res Lab LACL, Route Forestiere Hurtault, F-77300 Fontainebleau, France.
EM laleau@univ-paris12.fr; fiona@cs.york.ac.uk
RI Laleau, Regine/ABA-9759-2021
OI Laleau, Regine/0000-0002-2019-4936
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   ABRIAL JR, 2003, LNCS, V2758
   BADEAU F, 2005, LNCS, V3455
   DUPUY S, 2000, LNCS, V1789
   HALL A, 1990, LNCS, V428
   Kim S., 1999, LNCS, V1723
   Laleau R, 2001, INFORM SOFTWARE TECH, V43, P693, DOI 10.1016/S0950-5849(01)00178-1
   LALEAU R, 2000, ASE 15 IEEE C AUT SO
   LALEAU R, 2002, THESIS CEDRIC LAB FR
   LALEAU R, 2002, LNCS, V2272
   LALEAU R, 2000, ICEIS2000
   LALEAU R, 2001, LNCS, V2068
   LEDANG H, 2001, 16 IEEE INT C AUT SO
   MAMMAR A, 2006, INFORM SOFTWARE TECH, V48
   MAMMAR A, 2003, LNCS, V2805
   Mammar A, 2006, J DATABASE MANAGE, V17, P70, DOI 10.4018/jdm.2006100104
   MARCANO R, 2002, CRITICAL SYSTEMS DEV, P155
   NGUYEN HP, 1998, THESIS CNAM
   *OBJ MAN GROUP, 2001, AD20010804 OBJ MAN G
   PAIGE RF, 2004, 15 IEEE INT S SOFTW
   PAIGE RF, 2007, ACM T SOFTWARE ENG M, V16
   Rumbaugh James, 1999, UML Reference Manual
   Snook C, 2006, ACM T SOFTW ENG METH, V15, P92, DOI 10.1145/1125808.1125811
   Treharne H., 2002, LNCS, V2391
   WARMER J, 2003, GETTING YOUR MODELS
   2006, MOF CORE SPECIFICATI
NR 26
TC 7
Z9 9
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2008
VL 50
IS 7-8
BP 797
EP 814
DI 10.1016/j.infsof.2007.10.007
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 305KT
UT WOS:000256178000014
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Mykkänen, JA
   Tuomainen, MP
AF Mykkaenen, J. A.
   Tuomainen, M. P.
TI An evaluation and selection framework for interoperability standards
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE interoperability; standards; evaluation; application integration
AB There is a wide range of standards available for the integration and interoperability of applications and information systems, both on domain-specific and domain-neutral levels. The evaluation and selection of interoperability standards are necessary in the application development and integration projects, when there is a need to assess the usefulness of existing models or to find open solutions. In addition, standards have to be evaluated when recommendations are made for a given domain or when their quality is examined. The evaluation of the scope and other aspects of interoperability standards is usually performed against project-specific requirements, but generic frameworks can be used for supporting the evaluation. In this article, we present a conceptual framework which has been developed for the systematic evaluation of interoperability standards. We also present an overview of a process for the evaluation of interoperability standards. We illustrate the use of these models with practical experience and examples. (C) 2006 Elsevier B.V. All rights reserved.
C1 [Mykkaenen, J. A.; Tuomainen, M. P.] Univ Kuopio, IT Serv Ctr, HIS Res & Dev Unit, FI-70211 Kuopio, Finland.
C3 University of Eastern Finland
RP Mykkänen, JA (corresponding author), Univ Kuopio, IT Serv Ctr, HIS Res & Dev Unit, FI-70211 Kuopio, Finland.
EM juha.mykkanen@uku.fi
CR [Anonymous], 2000, GUID PROJ MAN BOD KN
   BEALE T, 2004, HLTH INFORM STANDARD
   BERNARD T, 2004, CMUSEI2004TR001
   BHATTACHARYA J, 2002, MIDDLEWARE TECHNOLOG
   Boehm B., 2006, Systems Engineering, V9, P1, DOI 10.1002/sys.20044
   BOHLE T, 2002, 8 EPSO
   *CEN CENLEC, 1991, MIT04
   Chen M, 2003, INT J HUM-COMPUT ST, V58, P259, DOI 10.1016/S1071-5819(02)00140-4
   COOPER J, 2002, CMUSEITR010
   DICKINSON G, 2004, HL7 EHR SYSTEM FUNCT
   Feng P, 2003, STANDARDIZATION AND INNOVATION IN INFORMATION TECHNOLOGY, PROCEEDINGS, P99
   Feurer R, 2000, INFORM SYST MANAGE, V17, P23, DOI 10.1201/1078/43190.17.1.20000101/31211.4
   GAYNOR M, 2001, P 34 HAWAII INT C SY, P5012
   Guarino N, 2000, LECT NOTES ARTIF INT, V1937, P97
   Herzum P., 2000, BUSINESS COMPONENT F
   *HL7, 2006, HL7 VERS 3 BALL DOM
   *IEEE, 1992, REF MOD COMP SYST TO, P1175
   *IEEE, 1998, 1003231998 IEEE
   *ISO IEC, 2005, INT CLASS STAND
   *ISO IEC, 1995, REF MOD OP DISTR PRO
   *ISO TC215, 2005, 171192005E ISOTR
   Kitchenham B. A., 1996, SIGSOFT Software Engineering Notes, V21, P11, DOI 10.1145/381790.381795
   Kitchenham B.A., 1997, ACM SIGSOFT Software Engineering Notes, V22, P16, DOI DOI 10.1145/251880.251912
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   KUSTER M, 2003, CEN ISSS REP RECOMEN
   LENZ R, 2005, P MED INF EUR, P385
   LINTHICUM D, 2003, LEVERAGING HERITAGE
   MICK R, 2005, EVALUATING INTEROPER
   MOORE G, 1991, CROSSING CHASM MARKE, P9
   MYKKANEN J, 2005, TIETOJARJESTELMIEN S
   Rogers E. M., 1995, Diffusion of Innovation Theory, P25, DOI https://doi.org/10.1007/978-3-642-79868-92
   ROSEMANN M, 2003, INFORM SYSTEM FDN CO, P153
   SODERSTROM E, 2003, P 1 ANN C SYST INTEG, P1
   SOWA J, 1993, IBM SYST J, V53, P193
   SWANN P, 2000, EC STANDARDIZATIION
   Timmermans S, 1997, SOC STUD SCI, V27, P273, DOI 10.1177/030631297027002003
   TOLK A, 2004, 2004 FALL SIM INT WO, P748
   TURUNEN P, 2001, THESIS TURKU U EC BU
   VANDEKAA G, 2005, CONCEPTUAL FRAMEWORK
   vanHeijst G, 1997, INT J HUM-COMPUT ST, V46, P183, DOI 10.1006/ijhc.1996.0090
   VERCOULEN F, 1998, NIBORRM199806
NR 41
TC 40
Z9 48
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2008
VL 50
IS 3
BP 176
EP 197
DI 10.1016/j.infsof.2006.12.001
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 254UI
UT WOS:000252613100003
DA 2024-07-18
ER

PT J
AU Abu Maria, K
   Abu Zitar, R
AF Abu Maria, Khulood
   Abu Zitar, Raed
TI Emotional agents: A modeling and an application
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE agent; emotions; behavior; personality
AB This paper proposes modeling of artificial emotions through agents based on symbolic approach. The symbolic approach utilizes symbolic emotional rule-based systems (rule base that generated emotions) with continuous interactions with environment and an internal "thinking" machinery that comes as a result of series of inferences, evaluation, evolution processes, adaptation, learning, and emotions. We build two models for agent based systems; one is supported with artificial emotions and the other one without emotions. We use both in solving a bench mark problem; "The Orphanage Care Problem". The two systems are simulated and results are compared. Our study shows that systems with proper model of emotions can perform in many cases better than systems without emotions. We try to shed the light here on how artificial emotions can be modeled in a simple rule-based agent systems and if emotions as they exist in "real intelligence" can be helpful for "artificial intelligence". Agent architectures are presented as a generic blueprint on which the design of agents can be based. Our focus is on the functional design, including flow of information and control. With this information provided, the generic blueprints of architectures should not be difficult to implement agents, thus putting these theoretical models into practice. We build the agents using this architecture, and many experiments and analysis are shown. (c) 2006 Elsevier B.V. All rights reserved.
C1 Philadelphia Univ, Coll Informat Technol, Amman, Jordan.
   AABFS, Coll Informat Technol, Amman, Jordan.
C3 Philadelphia University Jordan
RP Abu Zitar, R (corresponding author), Philadelphia Univ, Coll Informat Technol, Amman, Jordan.
EM rzitar@yahoo.com
RI Abu Zitar, Raed/AAA-6120-2022; Abu Maria, Khulood/S-7395-2018
OI Abu Zitar, Raed/0000-0003-2693-2132; 
CR [Anonymous], 1996, The Emotional Brain
   [Anonymous], 1989, LEARNING DELAYED REW
   [Anonymous], 2005, SOCIAL DIALOGUE EMBO, DOI [DOI 10.1007/1-4020-3933-6_2, 10.1007/1-4020-3933-6_2]
   [Anonymous], P 16 EUR M CYB SYST
   [Anonymous], 2005, VISIONS MIND ARCHITE
   AVILAGARCIA O, 2005, IN PRESS P AG WANT M
   BATES J, 1994, COMMUN ACM, V37, P122, DOI 10.1145/176789.176803
   Doya K, 2002, NEURAL NETWORKS, V15, P495, DOI 10.1016/S0893-6080(02)00044-8
   El-Nasr MS, 2000, AUTON AGENT MULTI-AG, V3, P219, DOI 10.1023/A:1010030809960
   ELNASR M, 1998, P AAAI FALL S
   Evans D, 2002, BRIT J PHILOS SCI, V53, P497, DOI 10.1093/bjps/53.4.497
   Fellous JM, 1999, NEUROSCIENTIST, V5, P283, DOI 10.1177/107385849900500514
   FRANKLIN S, 1996, TAXONOMY AUTONOMOUS, V3
   GRATCH J, 2001, P 5 INT C AUT AG AG
   Gratch J., 2000, P 9 C COMP GEN FORC, P1
   Kort B, 2001, IEEE INTERNATIONAL CONFERENCE ON ADVANCED LEARNING TECHNOLOGIES, PROCEEDINGS, P43, DOI 10.1109/ICALT.2001.943850
   MCCAULEY L, 1998, ARCHITECTURE EMOTION
   NEMANI SS, 2001, AGENTS ALGEBRA EMOTI
   Nilsson Nils., 2001, Electronic Transactions on Artificial Intelligence, V5, P99
   Ortony A., 1988, COGNITIVE STRUCTURE
   PIOTR J, 2001, P 8 INT C US MOD UM
   Ruttkay Z., 2004, From Brows to Trust: Evaluating Embodied Conversational Agents
   SCHEUTZ M, 2004, P AAAI
   TOMLINSON B, 2001, B BLUMBERG ALPHA WOL
   TRUNK GR, 1998, COMPUTER MODELS EMOT
   Ushida H, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P62
NR 26
TC 35
Z9 38
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2007
VL 49
IS 7
BP 695
EP 716
DI 10.1016/j.infsof.2006.08.002
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 179MV
UT WOS:000247294900001
DA 2024-07-18
ER

PT J
AU Coleman, G
   O'Connor, R
AF Coleman, Gerry
   O'Connor, Rory
TI Using grounded theory to understand software process improvement: A
   study of Irish software product companies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software engineering; software process improvement; qualitative research
   methods; grounded theory
ID QUALITATIVE RESEARCH
AB Software process improvement (SPI) aims to understand the software process as it is used within an organisation and thus drive the implementation of changes to that process to achieve specific goals such as increasing development speed, achieving higher product quality or reducing costs. Accordingly, SPI researchers must be equipped with the methodologies and tools to enable them to look within organisations and understand the state of practice with respect to software process and process improvement initiatives, in addition to investigating the relevant literature. Having examined a number of potentially suitable research methodologies, we have chosen Grounded Theory as a Suitable approach to determine what was happening in actual practice in relation to software process and SPI, using the indigenous Irish software product industry as a test-bed. The outcome of this study is a theory, grounded in the field data, that explains when and why SPI is undertaken by the software industry. The objective of this paper is to describe both the selection and usage of grounded theory in this Study and evaluate its effectiveness as a research methodology for software process researchers. Accordingly, this paper will focus on the selection and usage of grounded theory, rather than results of the SPI study itself. (C) 2007 Elsevier B.V. All rights reserved.
C1 Dublin City Univ, Sch Comp, Dublin 9, Ireland.
   Dundalk Inst Technol, Dept Comp, Dundalk, Co Louth, Ireland.
C3 Dublin City University; Dundalk Institute of Technology
RP O'Connor, R (corresponding author), Dublin City Univ, Sch Comp, Dublin 9, Ireland.
EM gerry.coleman@dkit.ie; roconnor@computing.dcu.ie
OI O'Connor, Rory/0000-0001-9253-0313
CR [Anonymous], 2001, How to research
   [Anonymous], 2001, Using Grounded Theory in Nursing
   [Anonymous], 1987, Educational researcher, DOI [10.3102/0013189X016007016, DOI 10.3102/0013189X016007016]
   [Anonymous], 2003, CMMI guidlines for process integration and product improvement
   Avison D, 1999, COMMUN ACM, V42, P94, DOI 10.1145/291469.291479
   Baskerville R., 1999, ACCOUNTING MANAGEMEN, V9, P1, DOI 10.1016/S0959-8022(98)00017-4
   Bertelsen OW, 1997, IEEE SOFTWARE, V14, P87, DOI 10.1109/MS.1997.636682
   Bryman A., 2001, SOCIAL RES METHODS
   BUCHMAN C, 1996, P 29 ANN HAW INT C S, V1, P673
   Burns R.B., 2000, Introduction to research methods, V4th
   Burrell G, 1979, SOCIOLOGICAL PARADIG
   Burt R. S., 2005, BROKERAGE CLOSURE IN
   Carvalho L, 2005, INFORM SOFTWARE TECH, V47, P113, DOI 10.1016/j.infsof.2004.06.005
   Carver J., 2003, J BRAZILIAN COMPUTER
   Creswell J. W., 2013, RES DESIGN QUALITATI
   DASKALANTONAKIS MK, 1994, IEEE SOFTWARE, V11, P17, DOI 10.1109/52.300079
   DION R, 1993, IEEE SOFTWARE, V10, P28, DOI 10.1109/52.219618
   ELEMAM K, 1998, SPICE THEORY PRACTIC
   Fitzgerald B, 1998, INFORM MANAGE-AMSTER, V34, P317, DOI 10.1016/S0378-7206(98)00072-X
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Goede R., 2003, P 2003 ANN RES C S A, P208
   Goulding C., 1999, GROUNDED THEORY SOME
   Goulding C., 2002, GROUNDED THEORY PRAC
   Hansen B.H., 2005, P 38 ANN HAW INT C S
   Herbsleb J, 1997, COMMUN ACM, V40, P30, DOI 10.1145/255656.255692
   Hevner AR, 2003, COMPUTER, V36, P111, DOI 10.1109/MC.2003.1244541
   HUMPHREY WS, 1991, IEEE SOFTWARE, V8, P11, DOI 10.1109/52.300031
   LEE AS, 1997, P INFORM SYSTEMS QUA
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   MUHR T, 1997, ATLAS TI USERS MANUA
   Myers MD, 1997, MIS QUART, V21, P241, DOI 10.2307/249422
   ORLIKOWSKI WJ, 1993, MIS QUART, V17, P309, DOI 10.2307/249774
   POWER N, 2002, THESIS DUBLIN CITY U
   Quinn M., 1987, How to use qualitative methods in evaluation
   QURESHI S, 2005, P 38 ANN HAW INT C S
   Ragin Charles., 1994, Constructing Social Research
   Reichardt C.S., 1979, Qualitative and quantitative methods in evaluation research, P7
   Sarker S., 2001, Data Base for Advances in Information Systems, V32, P38
   Saunders M.N. K., 1996, RES METHODS BUSINESS
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Seaman CB, 1997, PROC INT CONF SOFTW, P96, DOI 10.1145/253228.253248
   SILVA L, 1997, P INF SYST QUAL RES
   Strauss A., 1990, BASICS QUALITATIVE R
   Yin R., 1994, CASE STUDY RES DESIG
NR 45
TC 101
Z9 120
U1 1
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2007
VL 49
IS 6
BP 654
EP 667
DI 10.1016/j.infsof.2007.02.011
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 169NU
UT WOS:000246599700010
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Di Lucca, GA
   Fasolino, AR
AF Di Lucca, Giuseppe A.
   Fasolino, Anna Rita
TI Testing Web-based applications: The state of the art and future trends
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Web engineering; Web application testing; software testing
AB Software testing is a difficult task and testing Web-based applications may be even more difficult, due to the peculiarities of such applications. In the last years, several problems in the field of Web-based applications testing have been addressed by research work, and several methods and techniques have been defined and used to test Web-based applications effectively. This paper will present the main differences between Web-based applications and traditional ones, how these differences impact the testing of the former ones, and some relevant contributions in the field of Web application testing developed in recent years. The focus is mainly on testing the functionality of a Web-based application, even if some discussion about the testing of non-functional requirements is provided too. Some indications about future trends in Web application testing are also outlined in the paper. (C) 2006 Elsevier B.V. All rights reserved.
C1 Univ Sannio, RCOST Res Ctr Software Technol, I-82100 Benevento, Italy.
   Univ Naples Federico II, Dipartimento Informat & Sistemist, I-80125 Naples, Italy.
C3 University of Sannio; University of Naples Federico II
RP Di Lucca, GA (corresponding author), Univ Sannio, RCOST Res Ctr Software Technol, Via Traiano 1, I-82100 Benevento, Italy.
EM dilucca@unisannio.it; fasolino@unina.it
RI Fasolino, Anna Rita/V-4582-2019
OI Fasolino, Anna Rita/0000-0001-7116-019X; Di Lucca,
   Giuseppe/0000-0003-3632-0156
CR ANDREWS AA, 2005, TESTING WEB APPL MOD, V4
   [Anonymous], 2005, WEB CONTENT ACCESSIB
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   BANGIO A, 2000, P 9 INT C WWW WWW9 A, P137
   Conallen J., 2000, BUILDING WEB APPL UM
   Di Lucca GA, 2005, WSE 2005: SEVENTH IEEE INTERNATIONAL SYMPOSIUM ON WEB SITE EVOLUTION, PROCEEDINGS, P87
   Di Lucca GA, 2004, J SOFTW MAINT EVOL-R, V16, P71, DOI 10.1002/smr.281
   Di Lucca GA, 2003, FIFTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION THEME: ARCHITECTURE, PROCEEDINGS, P74, DOI 10.1109/WSE.2003.1234011
   Di Lucca GA, 2002, PROG COMPREHEN, P261, DOI 10.1109/WPC.2002.1021347
   Di Lucca GA, 2002, P INT COMP SOFTW APP, P481, DOI 10.1109/CMPSAC.2002.1045051
   Di Lucca GA, 2002, PROC IEEE INT CONF S, P310, DOI 10.1109/ICSM.2002.1167787
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P187, DOI 10.1109/TSE.2005.36
   Elbaum S, 2003, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.2003.1201187
   Gomez J., 2001, IEEE Multimedia, V8, P26, DOI 10.1109/93.917969
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Hieatt E, 2002, IEEE SOFTWARE, V19, P60, DOI 10.1109/52.991333
   HOWER R, 2005, WEB SITE TEST TOOLS
   *IEEE, 1990, SOFTW ENG STAND COLL
   Isakowitz T, 1997, P ANN HICSS, P177, DOI 10.1109/HICSS.1997.665523
   Kallepalli C, 2001, IEEE T SOFTWARE ENG, V27, P1023, DOI 10.1109/32.965342
   Liu CH, 2000, FIRST ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P7, DOI 10.1109/APAQ.2000.883773
   Nguyen H.Q., 2000, Testing Applications on the Web: Test Planning for Internet Based Systems
   Qi Y, 2005, P INT COMP SOFTW APP, P45
   Ricca F, 2005, WSE 2005: Seventh IEEE International Symposium on Web Site Evolution, Proceedings, P63
   Ricca F, 2001, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2001.919078
   RICCA F, 2004, P 6 IEEE WORKSH WEB, P11
   Sampath S, 2004, PROC IEEE INT CONF S, P104, DOI 10.1109/ICSM.2004.1357795
   Sampath S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P132, DOI 10.1109/ASE.2004.1342731
   Schwabe D, 2002, IEEE INTERNET COMPUT, V6, P34, DOI 10.1109/4236.991441
NR 29
TC 69
Z9 90
U1 1
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2006
VL 48
IS 12
BP 1172
EP 1186
DI 10.1016/j.infsof.2006.06.006
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 115XY
UT WOS:000242768300005
DA 2024-07-18
ER

PT J
AU Tomaszewski, P
   Lundberg, L
AF Tomaszewski, Piotr
   Lundberg, Lars
TI The increase of productivity over time - an industrial case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE development environments; productivity; maturity; learning; improvement
ID SOFTWARE-DEVELOPMENT PRODUCTIVITY; OBJECT-ORIENTED SOFTWARE; TECHNOLOGY
   ADOPTION; LEARNING-CURVE; METRICS SUITE; DESIGN
AB Introducing new and specialized technology is often seen as a way of meeting increasing non-functional requirements. An example of such a technology is a software platform that provides high performance and availability. The novelty of such a platform and lack of related experience and competence among the staff may affect initial development productivity. The competence problems should disappear with time. In this paper, we present a study, which we conducted at Ericsson. The purpose of the study was to assess the impact of experience and maturity on productivity in software development on the specialized platform. We quantify the impact by comparing productivity of two projects. One represents an initial development stage while the other represents a subsequent and thus more matured development stage. Both projects resulted in large commercial products. We reveal a factor of four difference in productivity. The difference was caused by a higher code delivery rate and a lower number of code lines per functionality in the latter project. We assess the impact of both these issues on productivity and explain their nature. Based on our findings, we suggest a number of improvement suggestions and guidelines for the process of introducing a new technology. (c) 2006 Elsevier B.V. All rights reserved.
C1 Blekinge Inst Technol, Sch Engn, S-37225 Ronneby, Sweden.
C3 Blekinge Institute Technology
RP Tomaszewski, P (corresponding author), Blekinge Inst Technol, Sch Engn, Box 520, S-37225 Ronneby, Sweden.
EM piotr.tomaszewski@bth.se; lars.lundberg@bth.se
OI Tomaszewski, Piotr/0000-0001-7877-2121
CR ADLER PS, 1991, MANAGE SCI, V37, P267, DOI 10.1287/mnsc.37.3.267
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BENTON KH, 1994, P 11 TRON PROJ INT S, P65
   Biffl S, 2003, IEEE T SOFTWARE ENG, V29, P385, DOI 10.1109/TSE.2003.1199069
   Blackburn J. D., 1996, Integrated Manufacturing Systems, V7, P60, DOI 10.1108/09576069610111918
   Blackburn JD, 1996, IEEE T SOFTWARE ENG, V22, P875, DOI 10.1109/32.553636
   Boehm BW., 1981, Software Engineering Economics
   *BOST CONS GROUP, 1972, PERSP EXP TECHN REP
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   Chambers C, 2004, EUR J OPER RES, V152, P226, DOI 10.1016/S0377-2217(02)00651-3
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Conway R., 1959, J IND ENGINEERING, V10, P39
   Edmondson AC, 2003, DECISION SCI, V34, P197, DOI 10.1111/1540-5915.02316
   FISHER W, 1998, P 1998 INT S TECHN S, P11698
   Gascoyne S, 2000, ELECTRON ENG, V72, P65
   Graham I., 1995, MIGRATING OBJECT TEC
   Hantos P, 2000, IEEE SOFTWARE, V17, P48, DOI 10.1109/52.819968
   Harrison R, 2000, J SYST SOFTWARE, V52, P173, DOI 10.1016/S0164-1212(99)00144-2
   HARVEY J, 1992, IEEE T ENG MANAGE, V39, P352, DOI 10.1109/17.165417
   HendersonSellers B, 1996, OBJECT ORIENTED SYST, V3, P143
   Huggett M, 2001, J MONETARY ECON, V48, P173, DOI 10.1016/S0304-3932(01)00065-4
   Hughes RT, 1996, INFORM SOFTWARE TECH, V38, P67, DOI 10.1016/0950-5849(95)01045-9
   *IEEE, 1993, 10451992 2EEE, P2
   JEWETT D, 1991, 21 INT S FAULT TOL C, P521
   LEGATSKI TW, 2000, COMPETIVENESS REV, V10, P80
   LI X, 2001, 10 INT WORKSH NEW AP, P44
   Maxwell KD, 1996, IEEE T SOFTWARE ENG, V22, P706, DOI 10.1109/32.544349
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   RUSSELL GW, 1991, IEEE SOFTWARE, V8, P25, DOI 10.1109/52.62929
   Saaty TL., 2001, INT SERIES OPERATION
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P987, DOI 10.1109/32.965339
   Tomaszewski P, 2005, INFORM SOFTWARE TECH, V47, P257, DOI 10.1016/j.infsof.2004.08.007
   Vaneman WK, 2001, TECHNOLOGY MANAGEMENT IN THE KNOWLEDGE ERA, P375, DOI 10.1109/PICMET.2001.952037
   VANGENUCHTEN M, 1991, IEEE T SOFTWARE ENG, V17, P582, DOI 10.1109/32.87283
   Wang FK, 2001, OMEGA-INT J MANAGE S, V29, P491, DOI 10.1016/S0305-0483(01)00039-1
   Wright TP, 1936, J. Astronaut. Sci., V3, P122, DOI [10.2514/8.155, DOI 10.2514/8.155]
   Yu W. D., 1991, Proceedings of the Fifteenth Annual International Computer Software and Applications Conference (Cat. No.91CH3023-9), P558, DOI 10.1109/CMPSAC.1991.170239
   Zangwill W. I., 2000, International Transactions in Operational Research, V7, P595, DOI 10.1111/j.1475-3995.2000.tb00219.x
NR 41
TC 7
Z9 7
U1 1
U2 8
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2006
VL 48
IS 9
BP 915
EP 927
DI 10.1016/j.infsof.2005.12.004
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 073OC
UT WOS:000239751500013
DA 2024-07-18
ER

PT J
AU Stikkel, G
AF Stikkel, G
TI Dynamic model for the system testing process
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software project management; software metrics; effort estimation;
   software project control
ID SOFTWARE-RELIABILITY
AB The approach for estimating and controlling the software testing effort presented in this paper is based on the theory of dynamical systems. The system testing process is modeled by a dynamical system to better understand its behaviour and to assist project and test managers in planning and tracking effort needs.
   The proposed model is based on worktime effort measurement and has been applied on three industrial software development projects data. In comparison to other models of the literature the worktime based system testing model describes the behaviour of the process more adequately. Consequently, decisions about the duration of system testing can be supported. Previous models from reliability modelling were selected for comparison. However, the emphasis here is placed on industrial experience on effort tracking and control. (C) 2005 Elsevier B.V. All rights reserved.
C1 Ericsson Telecommun Hungary, Software Engn Grp, H-1117 Budapest, Hungary.
C3 Ericsson
RP Stikkel, G (corresponding author), Ericsson Telecommun Hungary, Software Engn Grp, Irinyi St 13-17, H-1117 Budapest, Hungary.
EM gabor.stikkel@ericsson.com
CR ABDELHAMID TK, 1989, IEEE T SOFTWARE ENG, V15, P109, DOI 10.1109/32.21738
   ABU G, 2005, 38 HAW INT C SYST SC
   Cai KY, 2004, ELEVENTH ANNUAL INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P77
   Cai KY, 2002, INFORM SOFTWARE TECH, V44, P841, DOI 10.1016/S0950-5849(02)00108-8
   CALZOLARI F, 2001, INFORMATION SOFTWARE, P43477
   Cangussu JW, 2002, IEEE T SOFTWARE ENG, V28, P782, DOI 10.1109/TSE.2002.1027800
   Kuo SY, 2001, IEEE T RELIAB, V50, P310, DOI 10.1109/24.974129
   LYU MR, 2002, SOFTWARE RELIABILITY, P1611
   MIRANDA E, 1998, IEEE C SOFTWARE RELI
   Satoh D, 2000, IEICE T INF SYST, VE83D, P1508
   Satoh D, 2002, JPN J IND APPL MATH, V19, P39, DOI 10.1007/BF03167447
   STIKKEL G, 2003, HIRADASTECHNIKA HUNG, V11, P36
   YAMADA S, 1994, IEICE T FUND ELECTR, VE77A, P109
NR 13
TC 3
Z9 3
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2006
VL 48
IS 7
BP 578
EP 585
DI 10.1016/j.infsof.2005.06.003
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 049QQ
UT WOS:000238031900012
DA 2024-07-18
ER

PT J
AU Mansour, N
   Houri, M
AF Mansour, N
   Houri, M
TI Testing web applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE coverage testing; data flow testing; event flow testing; dependence
   graphs; mutation testing; web applications
ID DATA GENERATION
AB Traditional testing techniques are not adequate for web-based applications, since they miss their additional features such as their multi-tier nature, hyperlink-based structure, and event-driven feature. Limited work has been done on testing web applications. In this paper, we propose new techniques for white box testing of web applications developed in the NET environment with emphasis on their event-driven feature. We extend recent work on modeling of web applications by enhancing previous dependence graphs and proposing an event-based dependence graph model. We apply data flow testing techniques to these dependence graphs and propose an event flow testing technique. Also, we present a few coverage testing approaches for web applications. Further, we propose mutation testing operators for evaluating the adequacy of web application tests. (c) 2005 Elsevier B.V. All rights reserved.
C1 Lebanese Amer Univ, Div Math & Comp Sci, Beirut 11208, Lebanon.
C3 Lebanese American University
RP Lebanese Amer Univ, Div Math & Comp Sci, Mme Curie St, Beirut 11208, Lebanon.
EM nmansour@lau.edu.lb; mhouri@idm.net.lb
CR [Anonymous], 1990, Software testing techniques {
   Di Lucca GA, 2002, PROC IEEE INT CONF S, P310, DOI 10.1109/ICSM.2002.1167787
   Elbaum S, 2003, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.2003.1201187
   GABRYS BJ, 2001, OBJECTIVES DRIVEN AP
   HOWDEN WE, 1986, IEEE T SOFTWARE ENG, V12, P997, DOI 10.1109/TSE.1986.6313016
   JIA X, 2002, RIGOROUS AUTOMATIC T
   KIM S, 2000, NET OBJECTDAYS 2000
   Liu CH, 2001, INT J SOFTW ENG KNOW, V11, P157, DOI 10.1142/S0218194001000499
   LYONSMITH J, 2002, ASP NET DO LIST APPL
   Ma YS, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P352, DOI 10.1109/ISSRE.2002.1173287
   Mansour N, 2004, SOFTWARE QUAL J, V12, P121, DOI 10.1023/B:SQJO.0000024059.72478.4e
   MATHUR A, 1994, ENCY SOFTWARE ENG
   *MICROSOFT, 2002, INTR MICR ASP NET
   Offutt AJ, 1999, SOFTWARE PRACT EXPER, V29, P167, DOI 10.1002/(SICI)1097-024X(199902)29:2<167::AID-SPE225>3.0.CO;2-V
   OFFUTT AJ, 2000, MUTATION 2000 MUTATI, P45
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Reisig W., 2012, Petri nets: an introduction, V4
   Ricca F, 2001, PROC IEEE INT CONF S, P148, DOI 10.1109/ICSM.2001.972725
   Ricca F, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P123, DOI 10.1109/SCAM.2002.1134112
   Ricca F, 2001, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2001.919078
   WU Y, 2002, ISETR0208 GMU
NR 21
TC 11
Z9 12
U1 0
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2006
VL 48
IS 1
BP 31
EP 42
DI 10.1016/j.infsof.2005.02.007
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 999OB
UT WOS:000234397900003
DA 2024-07-18
ER

PT J
AU Lawrence, R
AF Lawrence, R
TI The space efficiency of XML
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE XML; relational database; character-separated files; data exchange;
   space efficiency
AB XML is the future language for data exchange, and support for XML has been extensive. Although XML has numerous benefits including self-describing data, improved readability, and standardization, there are always tradeoffs in the introduction of new technologies that replace existing systems. The tradeoff of XML versus other data exchange languages is improved readability and descriptiveness versus space efficiency. There has been limited work on examining the space efficiency of XML. This paper compares XML to other data exchange formats. Experiments are performed to measure the overhead in XML files and determine the amount of space used for data, schema, and overhead in a typical XML document. (C) 2004 Elsevier B.V. All rights reserved.
C1 Univ Iowa, Dept Comp Sci, IDEA Lab, Iowa City, IA 52242 USA.
C3 University of Iowa
RP Lawrence, R (corresponding author), Univ Iowa, Dept Comp Sci, IDEA Lab, 201L MacLean Hall, Iowa City, IA 52242 USA.
EM ramon-lawrence@uiowa.edu
CR [Anonymous], VLDB
   Crockford Douglas., JAVASCRIPT OBJECT NO
   DUMBILL E, EXPLORING ALTERNATIV
   Lee D., 2002, Proceedings of the Eleventh International Conference on Information and Knowledge Management. CIKM 2002, P282, DOI 10.1145/584792.584840
   Newman D., 1998, UCI REPOSITORY MACHI
   RADHAKRISHNAN S, SPEED WEB DELIVERY H
   SHANMUGASUNDARA.J, 2000, VLDB, P65
   Tolani Pankaj., 2002, ICDE
NR 8
TC 14
Z9 22
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 1
PY 2004
VL 46
IS 11
BP 753
EP 759
DI 10.1016/j.infsof.2004.02.003
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 827LP
UT WOS:000221901600005
DA 2024-07-18
ER

PT J
AU Kaczmarek, J
   Kucharski, M
AF Kaczmarek, J
   Kucharski, M
TI Size and effort estimation for applications written in Java
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software size estimation; Java; object oriented
ID FUNCTION POINTS
AB The paper presents a methodology for estimation of software size and effort at early stages of software development. The research concentrates on the size estimation problem, which seems to be the weakest element of cost estimation. The methodology concerns the object-oriented technology and the Java language.
   Authors review current techniques of size and cost estimation to identify their strengths and weaknesses. The paper describes statistical characteristics of class and method sizes for programs written in Java. The analysis of nearly one million lines of code lead to the conclusion that the average class size and the average method size is independent from application size. This feature is useful in calculating the final application size if the number of classes is known or could be estimated during software development.
   The paper contains definitions of three simple models of size estimation that are based on class and method sizes. The presented approach may be easily applied as it uses data that is typically produced during early stages of software development. The experimental model was theoretically verified and analysed. Further, an independent set of applications written in Java was used to verify the correctness of the acquired equations and models. Statistical characteristics were acquired and analysed with the use of a dedicated tool that was implemented as a part of the research. (C) 2004 Elsevier B.V. All rights reserved.
C1 Gdansk Univ Technol, Dept Appl Informat, PL-80952 Gdansk, Poland.
C3 Fahrenheit Universities; Gdansk University of Technology
RP Gdansk Univ Technol, Dept Appl Informat, Narutowicza 11-12, PL-80952 Gdansk, Poland.
EM mkuchar@eti.pg.gda.pl
RI Kucharski, Maciej/R-8807-2016; Kaczmarek, Jerzy/D-5257-2011; Kucharski,
   Maciej/JPK-6065-2023
OI Kucharski, Maciej/0000-0001-6250-1415; Kucharski,
   Maciej/0000-0001-6250-1415
CR Abran A, 1996, IEEE T SOFTWARE ENG, V22, P895, DOI 10.1109/32.553638
   ABTS CM, 1998, INTEGRATION COST MOD, P98
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 1977, TREATISE BASIC PHILO
   BETTERIDGE R, 1992, INFORM SOFTWARE TECH, V34, P655, DOI 10.1016/0950-5849(92)90070-6
   BOEHM B, 1997, SOFTWARE COST ESTIMA
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Boehm BW., 1981, Software Engineering Economics
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   *BRIT COMP SOC, 2000, COMP B UK
   BROWN AM, 1998, CORADMO COSSEMO DRIV
   BUNGE M, 1977, TREATISE BASIC PHILO, V2
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   COBRYN C, 1999, COMMUN ACM, V42, P29
   Ebrahimi NB, 1999, IEEE T SOFTWARE ENG, V25, P136, DOI 10.1109/32.748922
   Harrison R, 1998, IEEE T SOFTWARE ENG, V24, P491, DOI 10.1109/32.689404
   Humphrey W S, 1995, A discipline for software engineering
   JEFFERY DR, 1993, IEEE T SOFTWARE ENG, V19, P529, DOI 10.1109/32.232016
   JEFFERY DR, 1999, IEEE T SOFTWARE ENG, V16, P64
   JENSON RL, 1991, J SYST SOFTWARE, V15, P107, DOI 10.1016/0164-1212(91)90048-B
   KACZMAREK J, 1999, P ESCOM SCOPE99 HERS
   KEMERER CF, 1992, IEEE T SOFTWARE ENG, V18, P1011, DOI 10.1109/32.177370
   KERMERER CF, 1987, COMMUN ACM, V30, P416
   LARANJEIRA LA, 1990, IEEE T SOFTWARE ENG, V16, P510, DOI 10.1109/32.52774
   PARK RE, 1992, SEI92TR20
   Putnam L., 1992, MEASURES EXCELLENCE
   Shoval P, 1997, INFORM SOFTWARE TECH, V39, P855, DOI 10.1016/S0950-5849(97)00009-8
   SUBRAMANIAN GH, 1993, J SYST SOFTWARE, V21, P187, DOI 10.1016/0164-1212(93)90041-U
   SUBRAMANIAN GH, 1995, J SYST SOFTWARE, V31, P135, DOI 10.1016/0164-1212(94)00093-3
   Symons C.R.:., 1991, Software Sizing and Estimating: Mk II FPA
   SYMONS CR, 1988, IEEE T SOFTWARE ENG, V14, P2, DOI 10.1109/32.4618
   *U SO CAL, 1998, COCOMO II MOD DEF
NR 35
TC 17
Z9 18
U1 1
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL 1
PY 2004
VL 46
IS 9
BP 589
EP 601
DI 10.1016/j.infsof.2003.11.001
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 823DD
UT WOS:000221589000003
DA 2024-07-18
ER

PT J
AU McChesney, IR
   Gallagher, S
AF McChesney, IR
   Gallagher, S
TI Communication and co-ordination practices in software engineering
   projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software engineering; communication; co-ordination; software process;
   software project management; human factors
ID COLLECTIVE MIND; COOPERATION; ALLOCATION
AB In this paper we report on the investigation, description and analysis of communication and co-ordination practices in software engineering projects. We argue that existing models of the software process do not adequately address the situated, day-to-day practices in which software engineers collectively engage, yet it is through these practices that effective co-ordination is achieved. Drawing on concepts from organizational theory, we describe an approach for studying co-ordination activity in software engineering and the application of this approach to two real-world software projects. We describe key co-ordination issues in these projects and discuss their implications for software engineering practice. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Ulster, Fac Engn, Sch Comp & Math, Newtownabbey BT37 0QB, North Ireland.
   Queens Univ Belfast, Sch Management & Econ, Div Management & Informat Syst, Belfast BT7 1NN, Antrim, North Ireland.
C3 Ulster University; Queens University Belfast
RP Univ Ulster, Fac Engn, Sch Comp & Math, Shore Rd, Newtownabbey BT37 0QB, North Ireland.
EM ir.mcchesney@ulster.ac.uk; s.gallagher@qub.ac.uk
OI McChesney, Ian/0000-0002-5202-5360
CR [Anonymous], 1993, STRUCTURE 5 DESIGNIN
   BACH J, 1995, IEEE SOFTWARE, V12, P96, DOI 10.1109/52.368273
   BAKER FT, 1972, IBM SYST J, V11, P56, DOI 10.1147/sj.111.0056
   Bandinelli S, 1996, IEEE T SOFTWARE ENG, V22, P841, DOI 10.1109/32.553634
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Button G., 1996, Computer Supported Cooperative Work (CSCW), V5, P369, DOI 10.1007/BF00136711
   BUTTON G, 1995, PRACTICES WORK ORDER, P159
   CALLOWAY LJ, 1995, J INFORMATION SYSTEM, V5, P79
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   CLARK HH, 1992, AREANS LANGUAGE USE
   Crowston K, 1998, IBM SYST J, V37, P227, DOI 10.1147/sj.372.0227
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   de Leede J, 1999, J BUS ETHICS, V21, P203, DOI 10.1023/A:1006254728319
   Drummond H., 1999, International Journal of Project Management, V17, P11, DOI 10.1016/S0263-7863(97)00074-4
   FITZGERALD B, 1994, P 2 C INF SYST METH, P371
   FOWLER M, 2003, NEW METHODOLOGY
   GREENWOOD RM, 1995, LECT NOTES COMPUTER, V913, P209
   HERBSLEB JD, 1999, ARCH COORDINATION DI, V6, P63
   HOWARD A, 1996, P 4 C BRIT COMP SOC, P95
   *IEEE COMP SOC, GUID SOFTW ENG BOD K
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Klein M, 1998, LECT NOTES COMPUT SC, V1364, P161, DOI 10.1007/BFb0027105
   Malone TW, 1999, MANAGE SCI, V45, P425, DOI 10.1287/mnsc.45.3.425
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   MCCHESNEY IR, 1997, SOFTW QUAL J, V6, P425
   Miles MB., 1994, Qualiative data analysis, V2nd
   ONEILL E, 2001, USER DEV COOPERATION
   ORLIKOWSKI WJ, 1994, ADMIN SCI QUART, V39, P541, DOI 10.2307/2393771
   Rognin L, 2000, INT J HUM-COMPUT ST, V52, P357, DOI 10.1006/ijhc.1999.0293
   SACHS P, 1995, COMMUN ACM, V38, P36, DOI 10.1145/223248.223258
   Schmidt K., 1996, Computer Supported Cooperative Work (CSCW), V5, P155, DOI 10.1007/BF00133655
   *SOFTW ENG I, 2002, CMMI SOFTW ENG VERS
   SOMMERVILLE I, 1996, SOFTWARE PROCESS TRE, P89
   Waterson P. E., 1997, International Journal of Human-Computer Studies, V46, P79, DOI 10.1006/ijhc.1996.0084
   WEICK KE, 1993, ADMIN SCI QUART, V38, P357, DOI 10.2307/2393372
   WHITE BA, 2000, SOFTWARE CONFIGURATI
   YATES J, 1992, ACAD MANAGE REV, V17, P299, DOI 10.2307/258774
   *YOURD INC, 1993, YOURD SYST METH
NR 39
TC 36
Z9 50
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 1
PY 2004
VL 46
IS 7
BP 473
EP 489
DI 10.1016/j.infsof.2003.10.001
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 809AM
UT WOS:000220609600005
DA 2024-07-18
ER

PT J
AU Traoré, I
   Aredo, D
   Ye, H
AF Traoré, I
   Aredo, D
   Ye, H
TI An integrated framework for formal development of open distributed
   systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 18th ACM Symposium on Applied Computing
CY MAR 09-12, 2003
CL MELBOURNE, FL
SP ACM
DE formal methods; open distributed systems; unified modeling language;
   prototype verification system; multi-formalism; object-orientated
   programming
AB This paper contributes to the discussion on issues related to the formal development of open distributed systems (ODSs). Deficiencies of traditional formal notations in this setting are highlighted. We argue that there is no single formalism exhibiting all the features required to capture properties of ODSs. As a solution, we propose an integrated development framework that involves two notations: the Unified Modeling Language and the Prototype Verification System. We discuss the motivation for the choice of these notations, provide an overview of a CASE tool we have developed to support the proposed framework, and present a case study to demonstrate usability of our approach. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Victoria, Dept Elect & Comp Engn, Victoria, BC V8W 3P6, Canada.
   Norwegian Comp Ctr, N-0314 Oslo, Norway.
C3 University of Victoria
EM itraore@ece.uvic.ca
CR [Anonymous], 1995, 13941995 IEEE
   DAHL OJ, 1998, 261 RMODP U OSL DEP
   EVANS A, 1998, UML CLASS DIAGRAMS F
   *ISO IEC, 1995, JTC1SC21WG7 ISOIEC
   LIU YGM, 2002, THESIS U VICTORIA VI
   *OMG, 1999, OMG UN MOD LANG SPEC
   Owre S, 1999, PVS LANGUAGE REFEREN
   Warmer J., 1999, AW OBJ TECHNOL S
NR 8
TC 1
Z9 2
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 15
PY 2004
VL 46
IS 5
BP 281
EP 286
DI 10.1016/j.infsof.2003.09.012
PG 6
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 778FU
UT WOS:000189229500002
DA 2024-07-18
ER

PT J
AU Pfahl, D
   Laitenberger, O
   Ruhe, G
   Dorsch, J
   Krivobokova, T
AF Pfahl, D
   Laitenberger, O
   Ruhe, G
   Dorsch, J
   Krivobokova, T
TI Evaluating the learning effectiveness of using simulations in software
   project management education: results from a twice replicated experiment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE COCOMO; learning effectiveness; replicated experiment; software project
   management education; system dynamics simulation
AB The increasing demand for software project managers in industry requires strategies for the development of management-related knowledge and skills of the current and future software workforce. Although several educational approaches help to develop the necessary skills in a university setting, few empirical studies are currently available to characterise and compare their effects.
   This paper presents the results of a twice replicated experiment that evaluates the learning effectiveness of using a process simulation model for educating computer science students in software project management. While the experimental group applied a System Dynamics simulation model, the control group used the well-known COCOMO model as a predictive tool for project planning.
   The results of each empirical study indicate that students using the simulation model gain a better understanding about typical behaviour patterns of software development projects. The combination of the results from the initial experiment and the two replications with meta-analysis techniques corroborates this finding. Additional analysis shows that the observed effect can mainly be attributed to the use of the simulation model in combination with a web-based role-play scenario. This finding is strongly supported by information gathered from the debriefing questionnaires of subjects in the experimental group. They consistently rated the simulation-based role-play scenario as a very useful approach for learning about issues in software project management. (C) 2003 Elsevier B.V. All rights reserved.
C1 Fraunhofer IESE, D-67661 Kaiserslautern, Germany.
   Droege & Comp, D-80538 Munich, Germany.
   Univ Calgary, Calgary, AB, Canada.
   Accenture, D-61476 Kronberg, Germany.
   Univ Bielefeld, D-33615 Bielefeld, Germany.
C3 University of Calgary; Accenture; University of Bielefeld
RP Fraunhofer IESE, Sauerwiesen 6, D-67661 Kaiserslautern, Germany.
EM pfahl@iese.fhg.de; oliver_laitenberger@droege.de; ruhe@ucalgary.ca;
   joerg.dorsch@accenture.com; tkrivobokova@wiwi.uni-bielefeld.de
RI Pfahl, Dietmar Alfred Paul Kurt/H-3084-2015
OI Pfahl, Dietmar Alfred Paul Kurt/0000-0003-2400-501X; Krivobokova,
   Tatyana/0000-0002-6389-2312
CR Abdel-Hamid T., 1991, SOFTWARE PROJECT DYN
   [Anonymous], P 7 INT S SOFTW METR
   [Anonymous], 1971, Principles of systems
   BOEHM B, 1987, IEEE SOFTWARE, V4, P84
   BOEHM BW, 2000, SOFTWARE COST ESTIMA, pR2
   Boehm BW., 1981, Software Engineering Economics
   Cohen J., 1988, STAT POWER ANAL BEHA
   Drappa A, 1999, J SYST SOFTWARE, V46, P113, DOI 10.1016/S0164-1212(99)00005-9
   GRAHAM AK, 1992, EUR J OPER RES, V59, P151, DOI 10.1016/0377-2217(92)90012-X
   HARRIS MJ, 1985, PSYCHOL BULL, V97, P363, DOI 10.1037/0033-2909.97.3.363
   HEDGES LV, 1982, PSYCHOL BULL, V92, P490, DOI 10.1037/0033-2909.92.2.490
   Hunter J.E., 1982, Meta-analysis: Cumulating research findings across studies
   Judd C.M., 1991, Research methods in social relations, V6th
   KELLNER MI, 1989, P 22 ANN HAW INT C S
   LANE DC, 1995, J OPER RES SOC, V46, P604, DOI 10.2307/2584534
   Likert R., 1932, Arch. Psychol., V22, P44, DOI DOI 10.4135/9781412961288.N454
   Lin CY, 1997, J SYST SOFTWARE, V38, P263, DOI 10.1016/S0164-1212(96)00156-2
   LIN CY, 1993, AM PROGRAM, P33
   Lipsey M.W., 1990, DESIGN SENSITIVITY
   MADACHY R, 1999, P 2 SOFTW PROC SIM M
   MILLING P, 1995, Z BETRIEBSWIRT, V3, P93
   MORECROFT JDW, 1988, EUR J OPER RES, V35, P301, DOI 10.1016/0377-2217(88)90221-4
   Pfahl D, 2001, J SYST SOFTWARE, V59, P283, DOI 10.1016/S0164-1212(01)00069-3
   PFAHL D, 2001, THESIS STUTTGART, V8
   RICHARDS GP, 1981, INTRO SYSTEMS DYNAMI
   Sheskin D.J., 1997, HDB PARAMETRIC NONPA
   SMITH BJ, 1993, AM PROGRAM, P10
   VENNIX JAM, 1990, THESIS U NIJMEGEN
   WILDT AR, 1978, PAPER SERIES QUANTIT, V7
   WOLF FM, 1978, SAGE U PAPER SERIES, V7
NR 30
TC 48
Z9 53
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB 1
PY 2004
VL 46
IS 2
BP 127
EP 147
DI 10.1016/S0950-5849(03)00115-0
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 763PD
UT WOS:000188094000005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chatzigeorgiou, A
   Antoniadis, G
AF Chatzigeorgiou, A
   Antoniadis, G
TI Efficient management of inspections in software development projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software engineering; inspections; planning; software quality; software
   project management
ID SUPPORT
AB During the last two decades a universal agreement has been established on the fact that software inspections play a fundamental role in improving software quality. The number of software organizations that have incorporated formal reviews in their development process is constantly increasing and the belief that efficient inspections can not only detect defects but also reduce cycle time and lower costs is spreading. However, despite the importance of the inspections in a software development project, scheduling of inspections has not been given the necessary attention so far. As a result, inspections tend to accumulate towards internal project deadlines, possibly leading to excess overtime costs, quality degradation and difficulties in meeting milestones. In this paper, data from a major telecommunications software project is analyzed in an effort to illustrate the problems that can arise from inefficient planning of inspections and their related activities. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Macedonia, Dept Appl Informat, Thessaloniki 54006, Greece.
   INTRACOM SA, Thessaloniki, Greece.
C3 University of Macedonia
RP Chatzigeorgiou, A (corresponding author), Univ Macedonia, Dept Appl Informat, 156 Egnatia Str, Thessaloniki 54006, Greece.
RI Chatzigeorgiou, Alexandros/AAL-6077-2021
CR ACKERMAN AF, 1989, IEEE SOFTWARE, V6, P31, DOI 10.1109/52.28121
   [Anonymous], 1988, Principles of software engineering management
   [Anonymous], 1998, SOFTWARE PROJECT MAN
   [Anonymous], QUASIEXPERIEMENTATIO
   BARNARD J, 1994, IEEE SOFTWARE, V11, P59, DOI 10.1109/52.268958
   FAGAN M, 1976, IBM SYST J, V3, P219
   Gilb Tom, 1993, Software inspections
   Johnson P. M., 1998, Empirical Software Engineering, V3, P9, DOI 10.1023/A:1009787822215
   Johnson PM, 1998, COMMUN ACM, V41, P49, DOI 10.1145/269012.269020
   MCCANN RT, 2001, J DEFENSE SOFTWARE E, V14, P9
   ONEIL D, 2001, PEER REV ENCY SOFTWA
   ONeill D, 1997, IEEE SOFTWARE, V14, P18, DOI 10.1109/52.566420
   Perry DE, 2002, IEEE T SOFTWARE ENG, V28, P695, DOI 10.1109/TSE.2002.1019483
   PORTER A, 1995, P 3 ACM SIGSOFT S FD
   PORTER AA, 1995, IEEE T SOFTWARE ENG, V21, P563, DOI 10.1109/32.391380
   PORTER AA, 1996, ADV COMPUT, V42, P40
   Pressman R., 1997, SOFTWARE ENG
   Reese C.O., 2000, Design and methods, V3, P101
   Sommerville I., 1996, Software Engineering, V5th
   SYLAIDIS V, 2000, P 2 INT C PROD FOC S
   Tyran CK, 2002, COMMUN ACM, V45, P87, DOI 10.1145/567498.567504
   van Genuchten M, 2001, IEEE SOFTWARE, V18, P60, DOI 10.1109/52.922727
   VOTTA LG, 1993, P 1 ACM S FDN SOFTW
   Wild R., 1995, PRODUCTION OPERATION, Vfifth
NR 24
TC 5
Z9 5
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL 15
PY 2003
VL 45
IS 10
BP 671
EP 680
DI 10.1016/S0950-5849(03)00074-0
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 715NN
UT WOS:000184978800004
DA 2024-07-18
ER

PT J
AU Chhabra, JK
   Aggarwal, KK
   Singh, Y
AF Chhabra, JK
   Aggarwal, KK
   Singh, Y
TI Code and data spatial complexity: two important software
   understandability measures
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE code spatial complexity; data spatial complexity; understandability;
   software metrics; psychological complexity
AB In order to maintain the software, the programmers need to understand the source code. The understandability of the source code depends upon the psychological complexity of the software, and it requires cognitive abilities to understand the source code. The individual needs to correlate the orientation and location of various entities with their processing, which requires spatial abilities. This paper presents two measures of spatial complexity, which are based on two important aspects of the program-code as well as data. The measures have been applied to 15 different software projects and results have been used to draw many conclusions. The validation of the results has been done with help of perfective maintenance data. Lower values of code as well as data spatial complexity denote better understandability of the source code. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Deemed Univ, Natl Inst Technol, Dept Comp Engn, Kurukshetra 136119, Haryana, India.
   GGS Indraprastha Univ, Sch Informat Technol, Delhi 110006, India.
C3 National Institute of Technology (NIT System); National Institute of
   Technology Kurukshetra; GGS Indraprastha University
RP Chhabra, JK (corresponding author), Deemed Univ, Natl Inst Technol, Dept Comp Engn, Kurukshetra 136119, Haryana, India.
RI Chhabra, Jitender Kumar/A-1026-2016
OI Chhabra, Jitender Kumar/0000-0002-2257-0982
CR Aggarwal KK, 2002, P A REL MAI, P235, DOI 10.1109/RAMS.2002.981648
   AGGARWAL KK, 2002, ACM SIGSOFT, V27, P63
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], SOFTWARE ENG ENG APP
   Baddeley A., 1997, Human Memory: Theory and Practice
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   CHHABRA JK, 2001, INFORMATION TECHNOLO, V10, P60
   DEMARCO T, 1982, CONTROLLING SOFTWARE
   Douce Christopher., 1999, Spatial measures of software complexity
   FENTON NF, 2002, SOFTWARE METRICS RIG
   LAITNEN K, 1996, ACM SIGSOFT, V21, P81
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   SINGH Y, 1998, ACM SIGSOFT, V23, P81
   TENNY T, 1988, IEEE T SOFTWARE ENG, V14, P1271, DOI 10.1109/32.6171
NR 14
TC 33
Z9 39
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 1
PY 2003
VL 45
IS 8
BP 539
EP 546
DI 10.1016/S0950-5849(03)00033-8
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 686WL
UT WOS:000183343900007
DA 2024-07-18
ER

PT J
AU Ünlü, H
   Kennouche, DE
   Soylu, GK
   Demirörs, O
AF Unlu, Huseyin
   Kennouche, Dhia Eddine
   Soylu, Gorkem Kiling
   Demirors, Onur
TI Microservice-based projects in agile world: A structured interview
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Microservices; Agile development; Effort estimation; Size measurement;
   Analysis; Design
AB Context: During the last decade, Microservice-based software architecture (MSSA) has been a preferred design paradigm for a growing number of companies. MSSA, specifically in the form of reactive systems, has substantial differences from the more conventional design paradigms, such as object-oriented analysis and design. Therefore, adaptation demands software organizations to transform their culture. However, there is a lack of research studies that explore common practices utilized by software companies that implement MSSAs.Objective: In this study, our goal is to get an insight into how practices such as an agile methodology, software analysis, design, test, size measurement, and effort estimation are performed in software projects which embrace the Microservice-based software architecture paradigm. Together with the identification of practices utilized for the MSSA paradigm, we aim to determine the challenges organizations face to adopt microservice-based software architectures.Method: We performed a structured interview with participants coming from 20 different organizations over different roles, domains, and countries to collect information on their views, experience, and the challenges faced.Results: Our results reveal that organizations find agile development compatible with microservices. In general, they continue to use traditional object-oriented modeling notations for analysis and design in an abstract way. They continue to use the same subjective size measurement and effort estimation approaches that they were using previously in traditional architectures. However, they face unique challenges in developing microservices.Conclusion: Although organizations face challenges, practitioners continue to use familiar techniques that they have been using for traditional architectures. The results provide a snapshot of the software industry that utilizes microservices.
C1 [Unlu, Huseyin; Kennouche, Dhia Eddine; Soylu, Gorkem Kiling; Demirors, Onur] Izmir Inst Technol, TR-35430 Urla, Izmir, Turkiye.
C3 Izmir Institute of Technology
RP Ünlü, H (corresponding author), Izmir Inst Technol, TR-35430 Urla, Izmir, Turkiye.
EM huseyinunlu@iyte.edu.tr
RI Kılınç Soylu, Görkem/ACF-5986-2022
OI Kılınç Soylu, Görkem/0000-0002-7047-0556; Kennouche, Dhia
   Eddine/0000-0003-2967-9531; Unlu, Huseyin/0000-0001-9906-6066
FU Scientific and Technological Research Council of Turkey (TUBITAK) [ARDEB
   1001, 121E389]
FX This research is supported by The Scientific and Technological Research
   Council of Turkey (TUBITAK) ARDEB 1001 [Project No. 121E389] program.
   The authors thank all the software professionals who contributed to this
   interview.
CR Abran A., 2016, P INT TRAIN S BRIST, P259
   Alami A, 2022, INFORM SOFTWARE TECH, V150, DOI 10.1016/j.infsof.2022.106959
   Auer F, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106600
   Azizyan G., 2011, Proceedings of the 2011 Agile Conference, P29, DOI 10.1109/AGILE.2011.30
   Barabino G., 2014, Agile Processes in Software Engineering and Extreme Programming, P234, DOI [10.1007/978-3-319-06862-6_16, DOI 10.1007/978-3-319-06862-6_16]
   Barroca L, 2018, INT J SYST ASSUR ENG, V9, P323, DOI 10.1007/s13198-015-0355-5
   Bogner J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P187, DOI 10.1109/ICSA-C.2019.00041
   Boner J., 2016, Reactive Microservices Architecture Design Principles for Distributed Systems
   Büyüközkan G, 2004, J INTELL MANUF, V15, P731, DOI 10.1023/B:JIMS.0000042660.77571.81
   Clemson T, 2023, Testing strategies in a microservice architecture
   Commeyne C., 2016, Software Measurements News, V21, P25
   cosmic-sizing, 2021, COSMIC Measurement Manual Version 5.0
   Di Francesco P, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P29, DOI 10.1109/ICSA.2018.00012
   Di Francesco P, 2019, J SYST SOFTWARE, V150, P77, DOI 10.1016/j.jss.2019.01.001
   Dole J., 2022, P 30 INT INF MAN TAL, P412
   Dragoni N., 2017, Microservices: Yesterday, Today and Tomorrow, DOI 10.1007/978-3-319-67425-4_12
   Fowler M., 2001, Software Development, V9, P28
   Fowler M, 2014, Unit Test
   Fowler M., 2021, Microservices
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Garousi V, 2015, J SYST SOFTWARE, V108, P148, DOI 10.1016/j.jss.2015.06.036
   Gencel C, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363106
   Ghofrani J., 2018, Challenges of Microservices Architecture: A Survey On the State of the Practice, P1
   Hacaloglu T., 2018, P 28 INT WORKSH SOFT
   Ivanchikj A, 2018, SOFTW SYST MODEL, V17, P1031, DOI 10.1007/s10270-016-0532-2
   Jorgensen M, 2009, IEEE SOFTWARE, V26, P14, DOI 10.1109/MS.2009.47
   Kilinc Soylu G, 2023, P 47 EUR C SOFTW ENG, P261, DOI [10.1109/SEAA60479.2023.00047, DOI 10.1109/SEAA60479.2023.00047]
   Larrucea X, 2018, IEEE SOFTWARE, V35, P96, DOI 10.1109/MS.2018.2141030
   Li SS, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.008
   Manole M., 2017, academy of economic studies, Econ. Inform., V17, P25
   Newman S., 2021, BUILDING MICROSERVIC
   Salm M, 2017, CONTRIB ECON, P41, DOI 10.1007/978-3-319-62671-0_3
   Sampaio AR, 2017, PROC IEEE INT CONF S, P539, DOI 10.1109/ICSME.2017.63
   standishgroup, 2020, Chaos 2020 Beyond Infinity.
   Taibi D, 2017, IEEE CLOUD COMPUT, V4, P22, DOI 10.1109/MCC.2017.4250931
   Tapia F, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10175797
   Thönes J, 2015, IEEE SOFTWARE, V32, P116, DOI 10.1109/MS.2015.11
   Ungan E, 2014, EUROMICRO CONF PROC, P77, DOI 10.1109/SEAA.2014.83
   Unlu H., 2023, P 49 EUR C SOFTW ENG
   Unlu H., 2022, P 48 EUR C SOFTW ENG, P239, DOI [10.1109/ SEAA56994.2022.00045, DOI 10.1109/SEAA56994.2022.00045]
   Ünlü H, 2022, TURK J ELECTR ENG CO, V30, P1187, DOI 10.55730/1300-0632.3843
   Unlu H, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P244, DOI 10.1109/SEAA53835.2021.00038
   Usman M., 2014, PROMISE '14: Proceedings of the 10th International Conference on Predictive Models in Software Engineering, page, P82
   Velepucha Victor, 2021, 2021 Second International Conference on Information Systems and Software Technologies (ICI2ST), P135, DOI 10.1109/ICI2ST51859.2021.00027
   Vural H, 2017, LECT NOTES COMPUT SC, V10409, P203, DOI 10.1007/978-3-319-62407-5_14
   Weinberg GeraldM., 1992, QUALITY SOFTWARE MAN, V1
   Wohlin C., 2012, Experimentation in Software Engineering
   Zhou X, 2021, IEEE T SOFTWARE ENG, V47, P243, DOI 10.1109/TSE.2018.2887384
   Zhou X, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111521
NR 49
TC 1
Z9 1
U1 3
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2024
VL 165
AR 107334
DI 10.1016/j.infsof.2023.107334
EA SEP 2023
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U7WX4
UT WOS:001086882000001
DA 2024-07-18
ER

PT J
AU Bouchoucha, R
   Ben Braiek, H
   Khomh, F
   Bouzidi, S
   Zaatour, R
AF Bouchoucha, Rached
   Ben Braiek, Houssem
   Khomh, Foutse
   Bouzidi, Sonia
   Zaatour, Rania
TI Robustness assessment of hyperspectral image CNNs using metamorphic
   testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Deep learning testing; Deep learning testing Metamorphic testing;
   Software testing; Remote sensing; Hyperspectral image classification
ID CLASSIFICATION
AB Remote sensing has proven its utility in many critical domains, such as medicine, military, and ecology. Recently, we have been witnessing a surge in the adoption of deep learning (DL) techniques by the remote sensing community. DL-based classifiers, such as convolutional neural networks (CNNs), have been reported to achieve impressive predictive performances reaching 99% of accuracy when applied to hyperspectral images (HSIs), a high-dimensional type of remote sensing data. However, these deep learners are known to be highly sensitive to even slight perturbations of their high-dimensional raw inputs. In real-world contexts, concerns can be raised about how robust they really are against corner-case scenarios. When HSI classifiers are applied in safety-critical applications, ensuring an adequate level of robustness is crucial to prevent unexpected system behaviors. Yet, there are few studies dealing with their robustness, nor are RGB-testing methods able to cover the HSI-specific challenges. This led us to propose a systematic testing method to assess the robustness of the CNNs trained to classify HSIs. First, we elaborate domain-specific metamorphic transformations that simulate naturally-occurring distortions of remote sensing HSIs. Then, we leverage metaheuristic search algorithms to optimize the fitness of synthetically-distorted inputs to stress the weaknesses of the on-testing CNN, while remaining in compliance with domain expert requirements, in order to preserve the semantic of the generated inputs. Relying on our metamorphic testing method, we assess the robustness of established and novel CNNs for HSI classification, and demonstrate their failure, on average, in 25% of the produced test cases. Furthermore, we fine-tuned the tested CNNs on training data augmented with these failure-revealing metamorphic transformations. Results show that the fined-tuning successfully fixed at least 90% of the CNN weaknesses, with less than 1% of degradation in the original predictive performance, outperforming the common iterative gradient-based adversarial attack, namely, Projected Gradient Descent (PGD).
C1 [Bouchoucha, Rached; Ben Braiek, Houssem; Khomh, Foutse] Polytech Montreal, Dept Comp Engn & Software Engn, Montreal, PQ H3T 1J4, Canada.
   [Bouzidi, Sonia; Zaatour, Rania] Natl Inst Appl Sci & Technol, Dept Comp Engn & Software Engn, Tunis 1080, Tunisia.
C3 Universite de Montreal; Polytechnique Montreal; Universite de Carthage
RP Bouchoucha, R (corresponding author), Polytech Montreal, Dept Comp Engn & Software Engn, Montreal, PQ H3T 1J4, Canada.
EM rached.bouchoucha@polymtl.ca; houssem.ben-braiek@polymtl.ca;
   foutse.khomh@polymtl.ca; sonia.bouzidi@insat.rnu.tn;
   rania.zaatour@fst.utm.tn
OI Bouchoucha, Rached/0000-0003-0629-0515
CR Agili H., 2014, GEOMATICA, V68, P331, DOI [10.5623/cig2014-407, DOI 10.5623/CIG2014-407]
   Al-amri S.S., 2010, arXiv
   Alzantot M, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'19), P1111, DOI 10.1145/3321707.3321749
   Audebert N, 2019, IEEE GEOSC REM SEN M, V7, P159, DOI 10.1109/MGRS.2019.2912563
   Ben Braiek H, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110542
   Braiek H.B., 2019, ARXIV
   Carlini N, 2017, Arxiv, DOI arXiv:1608.04644
   Chan A, 2022, IEEE T NEUR NET LEAR, V33, P6976, DOI 10.1109/TNNLS.2021.3072166
   Chen TY, 2020, Arxiv, DOI [arXiv:2002.12543, DOI 10.48550/ARXIV.2002.12543]
   Cover T., 1991, Wiley series in telecommunications, V1st
   D'Amour A, 2020, Arxiv, DOI arXiv:2011.03395
   Deng Y, 2021, 2021 IEEE/ACM 6TH INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2021), P32, DOI 10.1109/MET52542.2021.00012
   Dodge S, 2017, 2017 26TH INTERNATIONAL CONFERENCE ON COMPUTER COMMUNICATION AND NETWORKS (ICCCN 2017)
   Dong GW, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P292
   Dong YP, 2018, PROC CVPR IEEE, P9185, DOI 10.1109/CVPR.2018.00957
   Dua Y, 2020, OPT ENG, V59, DOI 10.1117/1.OE.59.9.090902
   Ford N, 2019, PR MACH LEARN RES, V97
   Geirhos R, 2018, Arxiv, DOI arXiv:1706.06969
   Gilmer J, 2018, Arxiv, DOI arXiv:1807.06732
   Gotlieb A, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P34, DOI 10.1109/CMPSAC.2003.1245319
   Govender M, 2007, WATER SA, V33, P145
   Hendrycks D, 2019, Arxiv, DOI arXiv:1903.12261
   Ho YC, 2002, J OPTIMIZ THEORY APP, V115, P549, DOI 10.1023/A:1021251113462
   Goodfellow IJ, 2015, Arxiv, DOI [arXiv:1412.6572, DOI 10.48550/ARXIV.1412.6572]
   Kim J, 2018, Arxiv, DOI arXiv:1808.08444
   KULLBACK S, 1987, AM STAT, V41, P340
   Lin D.G.X.B.C., 2008, J SE U, V4
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma PC, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P458
   Madry A, 2019, Arxiv, DOI arXiv:1706.06083
   Murphy Christian, 2010, Proc Int Workshop Autom Softw Test, V2010, P16
   Odena A, 2018, Arxiv, DOI arXiv:1807.10875
   Park S, 2021, IEEE ACCESS, V9, P66791, DOI 10.1109/ACCESS.2021.3076225
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Peng W., 2005, METAMORPHIC TESTING
   Roy SK, 2020, IEEE GEOSCI REMOTE S, V17, P277, DOI 10.1109/LGRS.2019.2918719
   RSMT, 2023, HSI TEST APPR
   Shafahi A, 2020, Arxiv, DOI arXiv:1809.02104
   Shi Y.Q., 2017, Image and Video Compression for Multimedia Engineering: Fundamentals, Algorithms, and Standards, VSecond
   Szegedy C, 2014, Arxiv, DOI [arXiv:1312.6199, DOI 10.1109/CVPR.2015.7298594]
   Thomos N, 2006, IEEE T IMAGE PROCESS, V15, P54, DOI 10.1109/TIP.2005.860338
   Tian YC, 2018, Arxiv, DOI arXiv:1708.08559
   Vasiljevic I, 2017, Arxiv, DOI arXiv:1611.05760
   Xiao CW, 2018, Arxiv, DOI arXiv:1801.02612
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Yang S, 2007, IEEE T INFORM THEORY, V53, P647, DOI 10.1109/TIT.2006.888998
   Zhang QX, 2019, IEEE ACCESS, V7, P158051, DOI 10.1109/ACCESS.2019.2948146
   Zhang ZY, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106701
   Zheng S, 2016, PROC CVPR IEEE, P4480, DOI 10.1109/CVPR.2016.485
   Zheng X., 2020, arXiv
   Zhong ZL, 2018, IEEE T GEOSCI REMOTE, V56, P847, DOI 10.1109/TGRS.2017.2755542
   Zhou Z.Q., 2004, P 8 INT S FUT SOFTW, P346
NR 52
TC 0
Z9 0
U1 1
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2023
VL 162
AR 107281
DI 10.1016/j.infsof.2023.107281
EA JUN 2023
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Q2NS3
UT WOS:001055940700001
DA 2024-07-18
ER

PT J
AU Zhang, L
   Miranskyy, A
   Rjaibi, W
   Stager, G
   Gray, M
   Peck, J
AF Zhang, Lei
   Miranskyy, Andriy
   Rjaibi, Walid
   Stager, Greg
   Gray, Michael
   Peck, John
TI Making existing software quantum safe: A case study on IBM Db2
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software evolution; Software engineering; Post-quantum cryptography
ID ADVANTAGE; SECURITY
AB Context: The software engineering community is facing challenges from quantum computers (QCs). In the era of quantum computing, Shor's algorithm running on QCs can break asymmetric encryption algorithms that classical computers practically cannot. Though the exact date when QCs will become "dangerous"for practical problems is unknown, the consensus is that this future is near. Thus, the software engineering community needs to start making software ready for quantum attacks and ensure quantum safety proactively.Objective: We argue that the problem of evolving existing software to quantum-safe software is very similar to the Y2K bug. Thus, we leverage some best practices from the Y2K bug and propose our roadmap, called 7E, which gives developers a structured way to prepare for quantum attacks. It is intended to help developers start planning for the creation of new software and the evolution of cryptography in existing software.Method: In this paper, we use a case study to validate the viability of 7E. Our software under study is the IBM Db2 database system. We upgrade the current cryptographic schemes to post-quantum cryptographic ones (using Kyber and Dilithium schemes) and report our findings and lessons learned.Results: We show that the 7E roadmap effectively plans the evolution of existing software security features towards quantum safety, but it does require minor revisions. We incorporate our experience with IBM Db2 into the revised 7E roadmap.Conclusion: The U.S. Department of Commerce's National Institute of Standards and Technology is finalizing the post-quantum cryptographic standard. The software engineering community needs to start getting prepared for the quantum advantage era. We hope that our experiential study with IBM Db2 and the 7E roadmap will help the community prepare existing software for quantum attacks in a structured manner.
C1 [Zhang, Lei; Miranskyy, Andriy] Toronto Metropolitan Univ, Dept Comp Sci, Toronto, ON, Canada.
   [Rjaibi, Walid; Stager, Greg] IBM Canada Lab, Markham, ON, Canada.
   [Gray, Michael] IBM Corp, Bundall, Qld, Australia.
   [Peck, John] IBM Corp, Austin, TX USA.
C3 Toronto Metropolitan University; International Business Machines (IBM);
   International Business Machines (IBM)
RP Zhang, L; Miranskyy, A (corresponding author), Toronto Metropolitan Univ, Dept Comp Sci, Toronto, ON, Canada.
EM leizhang@umbc.edu; avm@torontomu.ca
OI Zhang, Lei/0000-0001-9343-3654; Rjaibi, Walid/0000-0001-5008-6509
FU IBM Centre for Advanced Studies [1121]
FX & nbsp;We are grateful to IBM Centre for Advanced Studies (Project
   #1121) for financial support.
CR Albash T, 2017, PHYS REV LETT, V119, DOI 10.1103/PhysRevLett.119.110502
   Amazon, 2021, AM BRAK PRIC
   Amazon, 2019, INTR AM BRAK SERV EX
   [Anonymous], 2008, Applied software measurement: Global analysis of productivity and quality
   Arute F, 2019, NATURE, V574, P505, DOI 10.1038/s41586-019-1666-5
   Barends R, 2016, NATURE, V534, P222, DOI 10.1038/nature17658
   Baumhof A., 2019, DEAL QUANTUM COMPUTI
   Bernstein DJ, 2017, NATURE, V549, P188, DOI 10.1038/nature23461
   Bos J, 2018, 2018 3RD IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P 2018), P353, DOI 10.1109/EuroSP.2018.00032
   Buchmann Johannes A., 2016, The New Codebreakers Essays Dedicated to David Kahn on the Occasion of His 85th Birthday. LNCS 9100, P88, DOI 10.1007/978-3-662-49301-4_6
   C. Team, 2020, DIL
   C. Team, 2020, KYB
   Chakrabarti S, 2021, Arxiv, DOI arXiv:2012.03819
   Chao R, 2018, NPJ QUANTUM INFORM, V4, DOI 10.1038/s41534-018-0085-z
   Chen L, 2016, Report on Post-Quantum Cryptography, DOI [DOI 10.6028/NIST.IR.8105, 10.6028/nist.ir.8105]
   Choi C.Q., 2021, IEEE SPECTRUM
   Chow J., 2020, Quantum takes flight: Moving from laboratory demonstrations to building systems
   Chuang IL, 1998, PHYS REV LETT, V80, P3408, DOI 10.1103/PhysRevLett.80.3408
   Cybersecurity & Infrastructure Security Agency, 2022, PREP NEW CRYPT STAND
   D-Wave Systems Inc, 2020, D WAV ANN GEN AV 1 Q
   FEYNMAN RP, 1982, INT J THEOR PHYS, V21, P467, DOI 10.1007/BF02650179
   Fowler AG, 2012, PHYS REV A, V86, DOI 10.1103/PhysRevA.86.032324
   Gidney C, 2021, QUANTUM-AUSTRIA, V5, DOI 10.22331/q-2021-04-15-433
   Google LLC, 2018, GOOGL AI BLOG PREV B
   Google LLC, 2019, HTTPS ENCR WEB GOOGL
   Grover L. K., 1996, Proceedings of the Twenty-Eighth Annual ACM Symposium on the Theory of Computing, P212, DOI 10.1145/237814.237866
   Hebrawi B., 1993, OPEN SYSTEMS INTERCO
   Honeywell International Inc, 2021, QUANT COMP
   I. Corporation, 2021, IBM GLOB SEC KIT GSK
   I. Corporation, 2021, INTR GLOB SEC KIT IN
   IBM, 2021, DB2 11 5 IBM DOC
   IBM Corporation, 2020, IBMS ROADM SCAL QUAN
   IBM Corporation, 2021, IBM Q EXP
   IBM Corporation, 2017, IBM ANN COLL LEAD FO
   IBM Corporation, 2021, DISTR REL DAT ARCH I
   IBM Corporation, 2016, IBM NEWS ROOM 2016 0
   IBM Institute for Business Value, 2022, SEC QUANT COMP ER
   Johnson D., 2001, International Journal of Information Security, V1, P36, DOI 10.1007/s102070100002
   Johnson TH, 2014, EPJ QUANTUM TECHNOL, V1, DOI 10.1140/epjqt10
   Kandala A, 2017, NATURE, V549, P242, DOI 10.1038/nature23879
   Kiktenko EO, 2018, Arxiv, DOI arXiv:1705.09258
   Lubinski T., 2021, arXiv
   M. Corporation, 2021, QUANT COMP MICR
   Mavroeidis V, 2018, Arxiv, DOI arXiv:1804.00200
   Miranskyy A, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P29, DOI 10.1145/3377816.3381731
   Miranskyy A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P57, DOI 10.1109/ICSE-NIER.2019.00023
   Miranskyy Andriy, 2021, arXiv
   Mosca M, 2018, IEEE SECUR PRIV, V16, P38, DOI 10.1109/MSP.2018.3761723
   National Institute of Standards and Technology, 2021, POSTQUANTUM CRYPTOGR
   Rigetti & Co Inc, 2021, RIG COMP
   Rjaibi W., 2018, WIELDING DOUBLE EDGE
   Robert A, 2021, NPJ QUANTUM INFORM, V7, DOI 10.1038/s41534-021-00368-4
   Scarani V, 2009, REV MOD PHYS, V81, P1301, DOI 10.1103/RevModPhys.81.1301
   Sevilla J, 2020, Arxiv, DOI arXiv:2009.05045
   Shor PW, 1997, SIAM J COMPUT, V26, P1484, DOI 10.1137/S0036144598347011
   Silcoff S., 2021, ONCE PIONEER QUANTUM
   Song F, 2014, LECT NOTES COMPUT SC, V8772, P246, DOI 10.1007/978-3-319-11659-4_15
   techopedia, 2017, WHAT IS TECHN DEBT D
   Weibel A, 2020, ROUND 2 POSTQUANTUM
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Wright K, 2019, NAT COMMUN, V10, DOI 10.1038/s41467-019-13534-2
   Xanadu Quantum Technologies, 2020, XAN REL WORLDS 1 PHO
   Xanadu Quantum Technologies, 2021, CLOUD PLATF XAN
   Xanadu Quantum Technologies, 2021, XAN
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
   Zhang L, 2021, IEEE SOFTWARE, V38, P80, DOI 10.1109/MS.2020.2985321
   Zhong HS, 2020, SCIENCE, V370, P1460, DOI 10.1126/science.abe8770
NR 67
TC 1
Z9 1
U1 2
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2023
VL 161
AR 107249
DI 10.1016/j.infsof.2023.107249
EA MAY 2023
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA J9ZB9
UT WOS:001013124300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sigurleifsson, B
   Ahmed, N
   Verdet, A
   Hamdaqa, M
   Sabri, M
   Pelletier, I
AF Sigurleifsson, Benedikt
   Ahmed, Nafisa
   Verdet, Alexandre
   Hamdaqa, Mohammad
   Sabri, Mohamed
   Pelletier, Isael
TI An approach for modeling the operational requirements of FaaS
   applications for optimal deployment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE FaaS; Serverless computing; Edge computing; Cloud computing; Function
   placement; Function fusion
ID DECISION; STRATEGY
AB FaaS can extend cloud capabilities to local edge devices. They enable composing applications into workflows and distributing their processes between the edge and the cloud. When deploying a FaaS application, the key issue is to define the desired operational requirements and find a configuration that satisfies them. Both problems are complex and subjective as they differ from one application to another depending on the application structure, run-time model, and optimization requirements. We address these issues using a general multi-criteria optimization approach based on a fuzzy analytical hierarchy process (AHP). Firstly, the specialists intuitively specify their fuzzy privacy in terms of data locality, cost, and performance requirements. Then, a Fuzzy AHP model is constructed to compare and select the optimal workflow configuration that satisfies the requirements. The work is evaluated using a real FaaS application, where AWS Cloud and AWS Greengrass present the cloud and the edge. We assessed the ability of the proposed approach to retrieve the optimal configurations for various scenarios and compared the results to one of the state-of-the-art approaches. Unlike existing hard-coded approaches, our approach is intuitive, modular, extensible, and addresses more DevOps requirements.
C1 [Sigurleifsson, Benedikt; Hamdaqa, Mohammad] Reykjavik Univ, Dept Comp Sci, Reykjavik, Iceland.
   [Ahmed, Nafisa; Verdet, Alexandre; Hamdaqa, Mohammad] Polytech Montreal, Dept Software Engn, Montreal, PQ, Canada.
   [Sabri, Mohamed; Pelletier, Isael] Amazon Web Serv, Toronto, ON, Canada.
C3 Reykjavik University; Universite de Montreal; Polytechnique Montreal
RP Ahmed, N (corresponding author), Polytech Montreal, Dept Software Engn, Montreal, PQ, Canada.
EM nafisa.abdelmutalab-ali-ahmed@polymtl.ca
RI Hamdaqa, Mohammad/AAE-5007-2020
OI Hamdaqa, Mohammad/0000-0003-4927-2755
CR Acharya A, 2019, 2019 INTERNATIONAL CONFERENCE ON INTERNET OF THINGS (ITHINGS) AND IEEE GREEN COMPUTING AND COMMUNICATIONS (GREENCOM) AND IEEE CYBER, PHYSICAL AND SOCIAL COMPUTING (CPSCOM) AND IEEE SMART DATA (SMARTDATA), P1241, DOI 10.1109/iThings/GreenCom/CPSCom/SmartData.2019.00207
   Alkhalaileh M, 2020, J NETW COMPUT APPL, V167, DOI 10.1016/j.jnca.2020.102735
   Alsurdeh R., 2021, IEEE ACCESS
   amazon, 2019, AWS LAMBD DEV GUID
   amazon, 2019, AWS STEP FUNCT PRIC
   [Anonymous], 2019, MA thesis
   [Anonymous], 2018, IEEE C EV AD INT SYS
   [Anonymous], 2018, MULTIMEDIA TOOLS APP
   Aslam Masood, 2021, 2021 Digital Image Computing: Techniques and Applications (DICTA), P01, DOI 10.1109/DICTA52665.2021.9647409
   aws.amazon, 2019, AWS STEP FUNCT DEV G
   aws.amazon, 2019, AWS IOT GREENGR DEV
   Baldini I., 2017, RES ADV CLOUD COMPUT, P1, DOI DOI 10.1007/978-981-10-5026-8_1
   Caha J., 2018, INFORM FUZZYAHP PACK
   Chen SC, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21030779
   Chen WH, 2017, FUTURE GENER COMP SY, V74, P1, DOI 10.1016/j.future.2017.03.008
   Chopra N, 2013, 2013 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P840, DOI 10.1109/ICACCI.2013.6637285
   Codecrucks, 2022, WHAT IS FUZZ MEMB FU
   Das A, 2020, 2020 20TH IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND INTERNET COMPUTING (CCGRID 2020), P41, DOI 10.1109/CCGrid49817.2020.00-89
   Dong MG, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110405
   El Saddik A, 2018, IEEE MULTIMEDIA, V25, P87, DOI 10.1109/MMUL.2018.023121167
   Elgamal T, 2018, 2018 THIRD IEEE/ACM SYMPOSIUM ON EDGE COMPUTING (SEC), P300, DOI 10.1109/SEC.2018.00029
   Enea M., 2004, Fuzzy Optim. Decis. Mak, V3, P39, DOI [DOI 10.1023/B:FODM.0000013071.63614.3d, 10.1023/B:FODM.0000013071.63614.3d, DOI 10.1023/B:FODM.0000013071.63614.3D]
   Fang J., 2020, IEEE INTERNET THINGS
   Gill SS, 2019, J SYST SOFTWARE, V154, P125, DOI 10.1016/j.jss.2019.04.058
   github, 2017, WILD RYD
   google, 2019, GCP PRIC
   Jia ZP, 2021, ASPLOS XXVI: TWENTY-SIXTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P152, DOI 10.1145/3445814.3446701
   Kaur S, 2019, ARAB J SCI ENG, V44, P2867, DOI 10.1007/s13369-018-3614-3
   Krejcí J, 2017, FUZZY OPTIM DECIS MA, V16, P89, DOI 10.1007/s10700-016-9241-0
   Kshirsagar M., 2021, P 2021 CHI C HUM FAC, P1, DOI DOI 10.1145/3411764.3445610
   Lee SJ, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21248416
   Leivadeas A, 2019, FUTURE INTERNET, V11, DOI 10.3390/fi11030069
   Li XM, 2019, IEEE T IND INFORM, V15, P4225, DOI 10.1109/TII.2019.2899679
   Lima FR, 2014, APPL SOFT COMPUT, V21, P194, DOI 10.1016/j.asoc.2014.03.014
   Liu J, 2016, IEEE INT SYMP INFO, P1451, DOI 10.1109/ISIT.2016.7541539
   Manner J, 2018, INT CONF UTIL CLOUD, P181, DOI 10.1109/UCC-Companion.2018.00054
   McGrath G, 2017, IEEE INT CON DIS, P405, DOI 10.1109/ICDCSW.2017.36
   microsoft, 2019, AZ PRIC
   Saaty T. L, 1980, ANAL HIERARCHY PROCE, P324, DOI 10.21236/ADA214804
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   Shafiei H, 2021, Arxiv, DOI arXiv:1911.01296
   Shen JC, 2021, INT CON DISTR COMP S, P194, DOI 10.1109/ICDCS51616.2021.00027
   Sheng ZG, 2019, IEEE-CAA J AUTOMATIC, V6, P64, DOI 10.1109/JAS.2019.1911324
   Shi WS, 2016, IEEE INTERNET THINGS, V3, P637, DOI 10.1109/JIOT.2016.2579198
   Tang HL, 2019, COMPUT COMMUN, V134, P70, DOI 10.1016/j.comcom.2018.11.011
   Tata S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC), P220, DOI 10.1109/SCC.2017.35
   Tesfamariam S, 2006, STOCH ENV RES RISK A, V21, P35, DOI 10.1007/s00477-006-0042-9
   Pham XQ, 2016, ASIA-PAC NETW OPER M
   YAGER RR, 1980, FUZZY SET SYST, V4, P235, DOI 10.1016/0165-0114(80)90013-5
   Zhang GL, 2018, IEEE T IND INFORM, V14, P4642, DOI 10.1109/TII.2018.2843365
   Zhang Q., 2021, IEEE ACCESS
NR 51
TC 2
Z9 2
U1 1
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2023
VL 161
AR 107242
DI 10.1016/j.infsof.2023.107242
EA MAY 2023
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA J0OI3
UT WOS:001006681700001
DA 2024-07-18
ER

PT J
AU Sun, BC
   Gong, DW
   Yao, XJ
AF Sun, Baicai
   Gong, Dunwei
   Yao, Xiangjuan
TI Integrating DSGEO into test case generation for path coverage of MPI
   programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Path coverage of MPI programs; Test case generation; Expensive
   processes; Evolutionary optimization; Surrogate models
AB Context: When testing a Message-Passing Interface (MPI) program composed of multiple processes, the testing cost for each process is different, and those expensive processes restrict the testing efficiency of the entire MPI program.
   Objective: To overcome this limitation, this paper proposes an approach to integrating distributed-surrogate-guided evolutionary optimization (DSGEO) into test case generation for path coverage of MPI programs.
   Method: In the proposed approach, we first determine each expensive process and its input variables, and generate a sample set for the determined process, which is used to train a surrogate model. Then, the fitness components of a test case in those expensive processes are estimated by the corresponding surrogate models, and are then combined with the real fitness components of the test case in cheap processes to form the fitness estimation. Finally, we select a small number of test cases with good fitness estimations to execute the MPI program, and calculate their real fitness to guide the subsequent test case generation.
   Results: We use the proposed approach to seven benchmark MPI programs and compare with four state-of-the-art approaches. The experimental results show that the proposed approach can significantly decrease the cost for test case generation.
   Conclusion: The proposed approach is also applicable to more complex MPI programs, thus supporting the scalability of the proposed approach.
C1 [Sun, Baicai; Gong, Dunwei] China Univ Min & Technol, Sch Informat & Control Engn, Xuzhou 221116, Jiangsu, Peoples R China.
   [Sun, Baicai; Yao, Xiangjuan] China Univ Min & Technol, Sch Math, Xuzhou 221116, Jiangsu, Peoples R China.
C3 China University of Mining & Technology; China University of Mining &
   Technology
RP Gong, DW (corresponding author), China Univ Min & Technol, Sch Informat & Control Engn, Xuzhou 221116, Jiangsu, Peoples R China.; Yao, XJ (corresponding author), China Univ Min & Technol, Sch Math, Xuzhou 221116, Jiangsu, Peoples R China.
EM dwgong@vip.163.com; yaoxj@cumt.edu.cn
OI Sun, Baicai/0000-0001-6781-0866
FU China Postdoctoral Science Foun-dation [2022M713368]; Jiangsu Funding
   Program for Excel-lent Postdoctoral Talent; National Natural Science
   Foundation of China [62133015]
FX This paper is jointly supported by China Postdoctoral Science
   Foun-dation (Grant No. 2022M713368) , Jiangsu Funding Program for
   Excel-lent Postdoctoral Talent, and National Natural Science Foundation
   of China (Grant No. 62133015) .
CR [Anonymous], 2002, EUROPEAN PARALLEL VI
   [Anonymous], 2010, Introduction to high performance computing for scientists and engineers
   Aziz MW, 2019, INT ARAB J INF TECHN, V16, P415
   Aziz MW, 2015, LECT NOTES COMPUT SC, V9447, P211, DOI 10.1007/978-3-319-25945-1_13
   Davies T., 2011, P INT C SUP, P162, DOI DOI 10.1145/1995896.1995923
   de Michiel M, 2008, RTCSA 2008: 14TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS - PROCEEDINGS, P161, DOI 10.1109/RTCSA.2008.53
   Diaz S.D., 2019, ANAIS 20 S SISTEMAS, P406
   Gong DW, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3423132
   Gong DW, 2020, PARALLEL COMPUT, V97, DOI 10.1016/j.parco.2020.102665
   Gong DW, 2020, INFORM SOFTWARE TECH, V124, DOI 10.1016/j.infsof.2020.106318
   Gropp W, 1996, PARALLEL COMPUT, V22, P789, DOI 10.1016/0167-8191(96)00024-5
   Gropp WD, 2000, LECT NOTES COMPUT SC, V1908, P160
   Guo D, 2019, IEEE T CYBERNETICS, V49, P1012, DOI 10.1109/TCYB.2018.2794503
   Guoliang C, 2004, Parallel Algorithm Practice
   Hausen A.C., 2007, 8 IEEE LATIN AM TEST, P1
   Igel C, 2008, J MACH LEARN RES, V9, P993
   Intel M, Benchmarks User Guide
   Jin YC, 2019, IEEE T EVOLUT COMPUT, V23, P442, DOI 10.1109/TEVC.2018.2869001
   Jin YC, 2004, LECT NOTES COMPUT SC, V3102, P688
   Krena Bohuslav., 2010, PADTAD, P48
   Lantz E., 2008, Windows HPC Server, P48
   Li GH, 2019, IEEE C EVOL COMPUTAT, P1664, DOI [10.1109/cec.2019.8790310, 10.1109/CEC.2019.8790310]
   Li HB, 2019, PROCEEDINGS OF THE 28TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC '19), P193, DOI 10.1145/3302516.3307353
   Li HB, 2018, INT PARALL DISTRIB P, P865, DOI 10.1109/IPDPS.2018.00096
   Liao XF, 2020, CONCURR COMP-PRACT E, V32, DOI 10.1002/cpe.4173
   Lu J.J., 2011, Mathw. Soft Comput., V18, P55
   Luo JP, 2019, IEEE T CYBERNETICS, V49, P1708, DOI 10.1109/TCYB.2018.2811761
   Luo WJ, 2019, IEEE TETCI, V3, P137, DOI 10.1109/TETCI.2018.2872029
   Montes C, 2020, URBAN WATER J, V17, P154, DOI 10.1080/1573062X.2020.1748210
   Myers Glenford J, 2004, The art of software testing, V2
   Peng IB, 2017, ADV PARALLEL COMPUT, V30, P75, DOI 10.3233/978-1-61499-816-7-75
   Schaich D, 2015, COMPUT PHYS COMMUN, V190, P200, DOI 10.1016/j.cpc.2014.12.025
   Souza PSL, 2014, CONCURR COMP-PRACT E, V26, P21, DOI 10.1002/cpe.2937
   Souza SRS, 2008, CONCURR COMP-PRACT E, V20, P1893, DOI 10.1002/cpe.1297
   Sun BC, 2022, IEEE T SOFTWARE ENG, V48, P1336, DOI 10.1109/TSE.2020.3019406
   Sun BC, 2019, INFORM SOFTWARE TECH, V114, P190, DOI 10.1016/j.infsof.2019.07.002
   Tan Z, 2020, IEEE C EVOL COMPUTAT, DOI 10.1109/cec48606.2020.9185825
   Tong H, 2019, IEEE C EVOL COMPUTAT, P1996, DOI [10.1109/cec.2019.8789910, 10.1109/CEC.2019.8789910]
   Vetter JereyS., 2000, Proceedings Supercomputing 2000, November 4-10, 2000, Dallas, Texas, USA. IEEE Computer Society, P51
   Vilela RF, 2019, LECT NOTES COMPUT SC, V11664, P121, DOI 10.1007/978-3-030-27455-9_9
   Wang HD, 2019, IEEE T EVOLUT COMPUT, V23, P203, DOI 10.1109/TEVC.2018.2834881
   Wang HD, 2016, IEEE T EVOLUT COMPUT, V20, P939, DOI 10.1109/TEVC.2016.2555315
   Windisch A, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1121
   Xiao P, 2018, J SYST SOFTWARE, V143, P159, DOI 10.1016/j.jss.2018.05.029
   Yu HB, 2018, PROC IEEE ACM INT C, P527, DOI 10.1145/3183440.3190336
   Zhang H, 2018, 2018 INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND BIG DATA (ICAIBD), P26, DOI 10.1109/ICAIBD.2018.8396161
NR 46
TC 2
Z9 2
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2023
VL 153
AR 107068
DI 10.1016/j.infsof.2022.107068
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IA6Z3
UT WOS:001163652900001
DA 2024-07-18
ER

PT J
AU Al Khatib, SM
   Alkharabsheh, K
   Alawadi, S
AF Al Khatib, Sultan M.
   Alkharabsheh, Khalid
   Alawadi, Sadi
TI Selection of human evaluators for design smell detection using dragonfly
   optimization algorithm: An empirical study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software quality; Design smell detection; Dragonfly Algorithm;
   Search-based software engineering; Optimization; God class; Empirical
   study
ID CODE SMELLS; BAD
AB Context: Design smell detection is considered an efficient activity that decreases maintainability expenses and improves software quality. Human context plays an essential role in this domain.Objective: In this paper, we propose a search-based approach to optimize the selection of human evaluators for design smell detection.Method: For this purpose, Dragonfly Algorithm (DA) is employed to identify the optimal or near-optimal human evaluator's profiles. An online survey is designed and asks the evaluators to evaluate a sample of classes for the presence of god class design smell. The Kappa-Fleiss test has been used to validate the proposed approach. Results: The results show that the dragonfly optimization algorithm can be utilized effectively to decrease the efforts (time, cost ) of design smell detection concerning the identification of the number and the optimal or near-optimal profile of human experts required for the evaluation process.Conclusions: A Search-based approach can be effectively used for improving a god-class design smell detection. Consequently, this leads to minimizing the maintenance cost.
C1 [Al Khatib, Sultan M.; Alkharabsheh, Khalid] Al Balqa Appl Univ BAU, Prince Abdullah Bin Ghazi Fac Informat & Commun Te, Dept Software Engn, Al Salt 19117, Jordan.
   [Alawadi, Sadi] Uppsala Univ, Dept Informat Technol, S-75105 Uppsala, Sweden.
   [Alawadi, Sadi] Halmstad Univ, Ctr Appl Intelligent Syst Res, Sch Informat Technol, S-30118 Halmstad, Sweden.
C3 Al-Balqa Applied University; Uppsala University; Halmstad University
RP Alawadi, S (corresponding author), Uppsala Univ, Dept Informat Technol, S-75105 Uppsala, Sweden.
EM s.al-khatib@bau.edu.jo; khalidkh@bau.edu.jo; sadi.alawadi@it.uu.se
RI Al Khatib, Sultan M./AEO-2749-2022; Alkharabsheh, Khalid/HGB-7962-2022;
   alawadi, sadi/Q-8576-2016
OI Al Khatib, Sultan M./0000-0002-1468-4373; Alkharabsheh,
   Khalid/0000-0002-3182-418X; 
CR Al Khatib S., 2018, THESIS U E ANGILA
   Al Khatib Sultan M., 2021, 2021 International Conference on Information Technology (ICIT), P919, DOI 10.1109/ICIT52682.2021.9491767
   Al Khatib S.M., 2017, ACM SIGSOFT Softw. Eng. Notes, V41, P1
   Alkharabsheh k, 2022, REPLICATION PACKAGE
   Alkharabsheh K., 2016, JORNADAS INGENIERIA, P159
   Alkharabsheh K., 2019, INT C SOFTWARE ENG K, P361
   Alkharabsheh K., 2016, 21 JORNADAS INGENIER, P1
   Alkharabsheh K, 2021, 2021 IEEE JORDAN INTERNATIONAL JOINT CONFERENCE ON ELECTRICAL ENGINEERING AND INFORMATION TECHNOLOGY (JEEIT), P1, DOI 10.1109/JEEIT53412.2021.9634144
   Alkharabsheh K, 2022, INFORM SOFTWARE TECH, V143, DOI 10.1016/j.infsof.2021.106736
   Alkharabsheh K, 2021, IEEE ACCESS, V9, P145191, DOI 10.1109/ACCESS.2021.3123123
   Alkharabsheh K, 2021, SOFTWARE QUAL J, V29, P197, DOI 10.1007/s11219-021-09550-5
   Alkharabsheh K, 2019, SOFTWARE QUAL J, V27, P1069, DOI 10.1007/s11219-018-9424-8
   Anquetil N, 2019, PROC IEEE INT CONF S, P169, DOI 10.1109/ICSME.2019.00027
   Arcoverde R, 2013, 2013 27TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2013), P69, DOI 10.1109/SBES.2013.14
   Azadi U, 2018, PROC IEEE ACM INT C, P288, DOI 10.1145/3183440.3194974
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Chaudron MRV, 2014, EUROMICRO CONF PROC, P369, DOI 10.1109/SEAA.2014.82
   Choinzon M, 2006, FRONT ARTIF INTEL AP, V140, P61
   Draz MM, 2021, CMC-COMPUT MATER CON, V68, P1919, DOI 10.32604/cmc.2021.015586
   Fontana F. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P450, DOI 10.1109/ICSTW.2011.12
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   Fourati R, 2011, STUD COMPUT INTELL, V364, P17
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Ghannem Adnane., 2011, P C CTR ADV STUDIES, P175
   Gwet K, 2012, HDB INTERRATER RELIA, Vfourth, P73
   Hamid A., 2013, International Journal of Advanced Science and Technology, V60, P25
   Han XF, 2021, INT C PROGRAM COMPRE, P323, DOI 10.1109/ICPC52881.2021.00038
   Hassaine S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P343, DOI 10.1109/QUATIC.2010.61
   Henderson-Sellers B., 1996, Software Engineering Notes, V21, P89, DOI 10.1145/235969.235994
   Hitz M, 1996, IEEE T SOFTWARE ENG, V22, P267, DOI 10.1109/32.491650
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Kreimer J, 2005, ELECTRON NOTES THEOR, V141, P117, DOI 10.1016/j.entcs.2005.02.059
   Lanza M, 2007, Object-oriented Metrics in Practice: Using Software Metrics To Characterize, Evaluate, and Improve the Design of Object-oriented Systems
   Maneerat N., 2011, Proceedings of the Eighth International Joint Conference on Computer Science and Software Engineering (JCSSE 2011), P331, DOI 10.1109/JCSSE.2011.5930143
   Mäntylä MV, 2006, EMPIR SOFTW ENG, V11, P395, DOI 10.1007/s10664-006-9002-8
   Mäntylä MV, 2004, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSM.2004.1357825
   Marinescu C., 2005, IEEE INT C SOFTW MAI
   Martins Julio, 2021, SBES '21: Brazilian Symposium on Software Engineering, P54, DOI 10.1145/3474624.3474642
   Mihancea PF, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P92, DOI 10.1109/CSMR.2005.53
   Mirjalili S, 2016, NEURAL COMPUT APPL, V27, P1053, DOI 10.1007/s00521-015-1920-1
   Moha N., 2007, ACM SIGPLAN C OBJ OR, P949
   Moha N., 2007, ASE 07 2007 ACM IEEE, P527, DOI [10.1145/1321631.1321727, DOI 10.1145/1321631.1321727]
   Munro MJ, 2005, 2005 11th International Symposium on Software Metrics (METRICS), P124
   Oliveira R, 2020, INFORM SOFTWARE TECH, V120, DOI 10.1016/j.infsof.2019.106242
   Ouni A, 2017, IEEE T SERV COMPUT, V10, P603, DOI 10.1109/TSC.2015.2502595
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Perez F., 2011, THESIS SCH ENG VALLA
   Rasool G, 2015, J SOFTW-EVOL PROC, V27, P867, DOI 10.1002/smr.1737
   Santos Jose Amancio, 2013, P 17 INT C EV ASS SO, P48
   Shatnawi R, 2015, J SOFTW-EVOL PROC, V27, P95, DOI 10.1002/smr.1702
   Shizhe Fu, 2015, 2015 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM). Proceedings, P1, DOI 10.1109/ESEM.2015.7321194
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Soh Z, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P393, DOI 10.1109/SANER.2016.103
   Tahir A, 2020, INFORM SOFTWARE TECH, V125, DOI 10.1016/j.infsof.2020.106333
   Tahvildari L, 2004, J SOFTW MAINT EVOL-R, V16, P331, DOI 10.1002/smr.299
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   Vidal SA, 2016, AUTOMAT SOFTW ENG, V23, P501, DOI 10.1007/s10515-014-0175-x
   WHO, 2012, WORLD MALARIA REPORT 2012, P1
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
NR 60
TC 3
Z9 3
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2023
VL 155
AR 107120
DI 10.1016/j.infsof.2022.107120
EA DEC 2022
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7F4NK
UT WOS:000901826200009
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Casillo, F
   Deufemia, V
   Gravino, C
AF Casillo, Francesco
   Deufemia, Vincenzo
   Gravino, Carmine
TI Detecting privacy requirements from User Stories with NLP transfer
   learning models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE User Stories; Natural Language Processing; Deep learning; Transfer
   Learning
ID CONCEPTUAL MODELS; CLASS DIAGRAM; GENERATION
AB Context: To provide privacy-aware software systems, it is crucial to consider privacy from the very beginning of the development. However, developers do not have the expertise and the knowledge required to embed the legal and social requirements for data protection into software systems.Objective: We present an approach to decrease privacy risks during agile software development by automatically detecting privacy-related information in the context of user story requirements, a prominent notation in agile Requirement Engineering (RE).Methods: The proposed approach combines Natural Language Processing (NLP) and linguistic resources with deep learning algorithms to identify privacy aspects into User Stories. NLP technologies are used to extract information regarding the semantic and syntactic structure of the text. This information is then processed by a pre-trained convolutional neural network, which paved the way for the implementation of a Transfer Learning technique. We evaluate the proposed approach by performing an empirical study with a dataset of 1680 user stories.Results: The experimental results show that deep learning algorithms allow to obtain better predictions than those achieved with conventional (shallow) machine learning methods. Moreover, the application of Transfer Learning allows to considerably improve the accuracy of the predictions, ca. 10%.Conclusions: Our study contributes to encourage software engineering researchers in considering the opportunities to automate privacy detection in the early phase of design, by also exploiting transfer learning models.
C1 [Casillo, Francesco; Deufemia, Vincenzo; Gravino, Carmine] Univ Salerno, Dept Comp Sci, Fisciano SA, Via Giovanni Paolo II 132, I-84084 Fisciano, SA, Italy.
C3 University of Salerno
RP Gravino, C (corresponding author), Univ Salerno, Dept Comp Sci, Fisciano SA, Via Giovanni Paolo II 132, I-84084 Fisciano, SA, Italy.
EM fcasillo@unisa.it; deufemia@unisa.it; gravino@unisa.it
RI Deufemia, Vincenzo/M-3553-2016
OI Deufemia, Vincenzo/0000-0002-6711-3590; Casillo,
   Francesco/0000-0003-4869-8068; Gravino, Carmine/0000-0002-4394-9035
CR [Anonymous], 1997, Requirements engineering: a good practice guide
   Anthonysamy P, 2017, PROC INT CONF SOFTW, P13, DOI 10.1109/ICSE-SEIS.2017.3
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Barker K, 2009, LECT NOTES COMPUT SC, V5588, P42, DOI 10.1007/978-3-642-02843-4_7
   Cao L, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.1
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Dalpiaz F., 2018, **DATA OBJECT**, DOI 10.17632/7zbk8zsd8y.1
   Dalpiaz F, 2019, INFORM SOFTWARE TECH, V110, P3, DOI 10.1016/j.infsof.2018.12.007
   Di Vimercati SD, 2012, INT J UNCERTAIN FUZZ, V20, P793, DOI 10.1142/S0218488512400247
   Elallaoui M, 2018, PROCEDIA COMPUT SCI, V130, P42, DOI 10.1016/j.procs.2018.04.010
   Evans D., 1996, Annual Meeting on Association for Computational Linguistics, P17, DOI DOI 10.3115/981863.981866
   Fernández A, 2010, IEEE T EVOLUT COMPUT, V14, P913, DOI 10.1109/TEVC.2009.2039140
   Fernández DM, 2017, EMPIR SOFTW ENG, V22, P2298, DOI 10.1007/s10664-016-9451-7
   Gill AJ, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3227
   Gilson F, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P129, DOI 10.1109/ICSA-C.2019.00031
   Gilson F, 2018, 2018 25TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC), P61, DOI 10.1109/ASWEC.2018.00016
   Haneczok J, 2020, INFORM PROCESS MANAG, V57, DOI 10.1016/j.ipm.2020.102371
   Heck P., 2014, ARXIV14064692
   Japkowicz N., 2011, EVALUATING LEARNING, DOI [10.1017/CBO9780511921803, DOI 10.1017/CBO9780511921803]
   Jiménez S, 2019, 2019 7TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2019), P147, DOI 10.1109/CONISOFT.2019.00029
   Karaa WB, 2016, SOFTWARE PRACT EXPER, V46, P1443, DOI 10.1002/spe.2384
   Kocaguneli E, 2015, EMPIR SOFTW ENG, V20, P813, DOI 10.1007/s10664-014-9300-5
   Krishna R, 2019, IEEE T SOFTWARE ENG, V45, P1081, DOI 10.1109/TSE.2018.2821670
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P490, DOI 10.1109/RE.2017.82
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Li Q., 2020, ABS200800364
   Lucassen G, 2017, REQUIR ENG, V22, P339, DOI 10.1007/s00766-017-0270-1
   Lucassen G, 2016, LECT NOTES COMPUT SC, V9619, P205, DOI 10.1007/978-3-319-30282-9_14
   Lucassen G, 2015, INT REQUIR ENG CONF, P126, DOI 10.1109/RE.2015.7320415
   Luong M.-T., 2015, P 2015 C EMPIRICAL M, DOI DOI 10.18653/V1/D15-1166
   Mehdy Nuhil, 2019, Security and Privacy in New Computing Environments. Second EAI International Conference, SPNCE 2019. Proceedings. Lecture Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications Engineering (LNICST 284), P152, DOI 10.1007/978-3-030-21373-2_14
   Müter L, 2019, LECT NOTES COMPUT SC, V11412, P109, DOI 10.1007/978-3-030-15538-4_7
   Nasiri S, 2020, PROCEDIA COMPUT SCI, V170, P831, DOI 10.1016/j.procs.2020.03.148
   Neerbek J, 2017, PROC INT CONF DATA, P1399, DOI 10.1109/ICDE.2017.195
   Nguyen QL, 2009, 2009 ICSE WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P56, DOI 10.1109/MISE.2009.5069898
   Oleynik M, 2019, J AM MED INFORM ASSN, V26, P1247, DOI 10.1093/jamia/ocz149
   Paetsch F, 2003, TWELFTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P308
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Rane Prerana Pradeepkumar, 2017, Automatic generation of test cases for agile using natural language processing
   Riaz M, 2014, INT REQUIR ENG CONF, P183, DOI 10.1109/RE.2014.6912260
   Robeer M, 2016, INT REQUIR ENG CONF, P196, DOI 10.1109/RE.2016.40
   Salzberg SL, 1997, DATA MIN KNOWL DISC, V1, P317, DOI 10.1023/A:1009752403260
   Sheth S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P859, DOI 10.1145/2568225.2568244
   Silva P, 2020, IEEE CONF COMPUT, P972, DOI 10.1109/INFOCOMWKSHPS50562.2020.9162683
   Slankas J, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON NATURAL LANGUAGE ANALYSIS IN SOFTWARE ENGINEERING (NATURALISE), P9, DOI 10.1109/NAturaLiSE.2013.6611715
   Tesfay WB, 2019, 2019 SIXTH INTERNATIONAL CONFERENCE ON SOCIAL NETWORKS ANALYSIS, MANAGEMENT AND SECURITY (SNAMS), P53, DOI [10.1109/snams.2019.8931855, 10.1109/SNAMS.2019.8931855]
   Torrey L., 2010, IGI Global, P242, DOI 10.4018/978-1-60566-766-9.CH011
   Vasalou A, 2011, J AM SOC INF SCI TEC, V62, P2095, DOI 10.1002/asi.21610
   Villamizar H, 2019, INT REQUIR ENG CONF, P86, DOI 10.1109/RE.2019.00020
   Wasserstein RL, 2016, AM STAT, V70, P129
   Xu GS, 2019, INT CONF CYBER DIST, P474, DOI [10.1109/CyberC.2019.00087, 10.1109/cyberc.2019.00087]
NR 52
TC 9
Z9 10
U1 4
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2022
VL 146
AR 106853
DI 10.1016/j.infsof.2022.106853
EA FEB 2022
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0J8ZG
UT WOS:000780387700003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Melegati, J
   Guerra, E
   Wang, XF
AF Melegati, Jorge
   Guerra, Eduardo
   Wang, Xiaofeng
TI HyMap: Eliciting hypotheses in early-stage software startups using
   cognitive mapping
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Hypotheses engineering; Software startups; Experimentation; Hypotheses
   elicitation
ID DESIGN SCIENCE RESEARCH; SPECIAL-ISSUE; MODEL; EXPERIMENTATION;
   ELICITATION; ACCEPTANCE; FEEDBACK
AB Context: Software startups develop innovative, software-intensive products. Given the uncertainty associated with such an innovative context, experimentation, an approach based on validating assumptions about the software product through data obtained from diverse techniques, like A/B tests or interviews, is valuable for these companies. Relying on data rather than opinions reduces the chance of developing unnecessary products or features, improving the likelihood of success, especially in early development stages, when implementing unnecessary features represents a higher risk for companies' survival. Nevertheless, researchers have argued that the lack of clearly defined practices led to limited adoption of experimentation. Since the first step of the approach is to define hypotheses, testable statements about the software product features, based on which software development teams will create experiments, eliciting hypotheses is a natural first step to develop practices. Objective: We aim to develop a systematic technique for identifying hypotheses in early-stage software startups to support experimentation in these companies and, consequently, improve their software products. Methods: We followed a Design Science approach consisting of an artifact construction process, divided in three phases, and an evaluation within three startups. Results: We developed the HyMap, a hypotheses elicitation technique based on cognitive mapping. It consists of a process conducted by a facilitator using pre-defined questions, supported by a visual language to depict a cognitive map representing the founder's understanding of the product. Our evaluation showed that founders perceived the artifacts as clear, easy to use, and useful leading to hypotheses and facilitating their idea's visualization. Conclusion: From a theoretical perspective, our study provides a better understanding of the guidance founders use to develop their startups and, from a practical point of view, a technique to identify hypotheses in early-stage software startups.
C1 [Melegati, Jorge; Guerra, Eduardo; Wang, Xiaofeng] Free Univ Bozen Bolzano, Piazza Domenicani 3, Bolzano, Italy.
C3 Free University of Bozen-Bolzano
RP Melegati, J (corresponding author), Free Univ Bozen Bolzano, Piazza Domenicani 3, Bolzano, Italy.
EM jorge.melegati@unibz.it; eduardo.guerra@unibz.it; xiaofeng.wang@unibz.it
RI Melegati, Jorge/AAG-3925-2021
OI Melegati, Jorge/0000-0003-1303-4173; Guerra, Eduardo/0000-0001-5555-3487
CR Almeida LH, 2011, LECT NOTES ARTIF INT, V6954, P311, DOI 10.1007/978-3-642-24425-4_41
   [Anonymous], 2013, 4 STEPS EPIPHANY SUC
   [Anonymous], 2009, Business Model Generation
   Benfell A, 2021, REQUIR ENG, V26, P25, DOI 10.1007/s00766-020-00330-4
   Berg V, 2018, J SYST SOFTWARE, V144, P255, DOI 10.1016/j.jss.2018.06.043
   Bland D. J., 2019, TESTING BUSINESS IDE
   Bortolini RF, 2021, MANAGE DECIS, V59, P1765, DOI 10.1108/MD-07-2017-0663
   Bosch J., 2013, LEAN ENTERPRISE SOFT, V167, DOI [10.1007/978-3-642-44930-7_1, DOI 10.1007/978-3-642-44930-7_1]
   Bosch J., 2018, SIBW, P177
   Brannback M, 2009, Understanding the Entrepreneurial Mind: Opening the Black Box p, P75, DOI DOI 10.1007/978-1-4419-0443-0_5
   Cantamessa M, 2018, SUSTAINABILITY-BASEL, V10, DOI 10.3390/su10072346
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Descartes R., 2020, DISCOURSE METHOD
   EDEN C, 1988, EUR J OPER RES, V36, P1, DOI 10.1016/0377-2217(88)90002-1
   Engström E, 2020, EMPIR SOFTW ENG, V25, P2630, DOI 10.1007/s10664-020-09818-7
   Fabijan A, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.2113
   Fabijan A, 2017, PROC INT CONF SOFTW, P770, DOI 10.1109/ICSE.2017.76
   Fagerholm F, 2017, J SYST SOFTWARE, V123, P292, DOI 10.1016/j.jss.2016.03.034
   Frederiksen DL, 2017, INT ENTREP MANAG J, V13, P169, DOI 10.1007/s11365-016-0411-x
   Furnari S, 2015, ADV STRATEG MANAGE, V33, P207, DOI 10.1108/S0742-332220150000033025
   Giardino C, 2014, LECT NOTES BUS INF P, V182, P27
   Gregor S, 2013, MIS QUART, V37, P337, DOI 10.25300/MISQ/2013/37.2.01
   Gutbrod M, 2017, LECT NOTES COMPUT SC, V10611, P297, DOI 10.1007/978-3-319-69926-4_21
   Hardgrave BC, 2003, J MANAGE INFORM SYST, V20, P123
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Herrmann B. L., 2012, STARTUP ECOSYSTEM RE
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hodgkinson GP, 2004, ORGAN RES METHODS, V7, P3, DOI 10.1177/1094428103259556
   Kelly G, 2002, PSYCHOL PERSONAL CON
   Kerr WR, 2014, J ECON PERSPECT, V28, P25, DOI 10.1257/jep.28.3.25
   Klotins Eriks, 2019, Empirical Software Engineering, V24, P68, DOI 10.1007/s10664-018-9620-y
   Klotins E, 2021, IEEE T SOFTWARE ENG, V47, P498, DOI 10.1109/TSE.2019.2900213
   Lindgren E, 2016, INFORM SOFTWARE TECH, V77, P80, DOI 10.1016/j.infsof.2016.04.008
   March ST, 2008, MIS QUART, V32, P725
   Melegati J, 2022, IEEE T SOFTWARE ENG, V48, P1929, DOI 10.1109/TSE.2020.3042610
   Melegati J, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2020.106465
   Melegati J, 2020, LECT NOTES BUS INF P, V396, P18, DOI 10.1007/978-3-030-58858-8_2
   Melegati J, 2020, LECT NOTES BUS INF P, V383, P211, DOI 10.1007/978-3-030-49392-9_14
   Melegati J, 2019, 2019 IEEE/ACM JOINT 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING AND 1ST INTERNATIONAL WORKSHOP ON DATA-DRIVEN DECISIONS, EXPERIMENTATION AND EVOLUTION (RCOSE-DDREE 2019), P16, DOI 10.1109/RCoSE/DDrEE.2019.00011
   Miaskiewicz T, 2017, DES J, V20, P357, DOI 10.1080/14606925.2017.1301160
   Miles MB., 2014, QUALITATIVE DATA ANA, V3rd, P69
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Morschheuser B, 2018, INFORM SOFTWARE TECH, V95, P219, DOI 10.1016/j.infsof.2017.10.015
   Olsson HH, 2015, LECT NOTES BUS INF P, V210, P154, DOI 10.1007/978-3-319-19593-3_13
   Olsson HH, 2014, EUROMICRO CONF PROC, P9, DOI 10.1109/SEAA.2014.75
   Osterwalder A, 2005, COMMUN ASSOC INF SYS, V16
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Peffers K, 2018, EUR J INFORM SYST, V27, P129, DOI 10.1080/0960085X.2018.1458066
   Riemenschneider CK, 2002, IEEE T SOFTWARE ENG, V28, P1135, DOI 10.1109/TSE.2002.1158287
   Ries E, 2011, LEAN STARTUP TODAYS, P14
   Rogers E.M., 2010, DIFFUSION INNOVATION
   Rooksby J, 2006, RATIONAL MANAGEMENT IN SOFTWARE ENGINEERING, P137
   Ros R, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P35, DOI 10.1145/3194760.3194766
   Sedano T, 2020, IEEE SOFTWARE, V37, P58, DOI 10.1109/MS.2020.3013274
   Seppanen P., 2016, 2016 INT C ENG, P1, DOI 10.1109/ICE/ITMC39735.2016.9026055
   Unterkalmsteiner M, 2016, E-INFORMATICA, V10, P89, DOI 10.5277/e-Inf160105
   Wieringa Roel., 2009, Proceedings of the 4th international conference on design science research in information systems and technology, P8
   Williams L, 2003, COMPUTER, V36, P39, DOI 10.1109/MC.2003.1204373
   Yin R.K., 2011, Qualitative research from start to finish
   Zott C, 2011, J MANAGE, V37, P1019, DOI 10.1177/0149206311406265
NR 61
TC 5
Z9 5
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2022
VL 144
AR 106807
DI 10.1016/j.infsof.2021.106807
EA JAN 2022
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA YK3DU
UT WOS:000745098800014
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Vidoni, M
AF Vidoni, M.
TI A systematic process for Mining Software Repositories: Results from a
   systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Mining Software Repositories; Systematic literature review;
   Evidence-based software engineering; Guidelines
ID GITHUB; CLASSIFICATION; DEVELOPERS; PROJECTS; DATASET; FLOW
AB Context: Mining Software Repositories (MSR) is a growing area of Software Engineering (SE) research. Since their emergence in 2004, many investigations have analysed different aspects of these studies. However, there are no guidelines on how to conduct systematic MSR studies. There is a need to evaluate how MSR research is approached to provide a framework to do so systematically. Objective: To identify how MSR studies are conducted in terms of repository selection and data extraction. To uncover potential for improvement in directing systematic research and providing guidelines to do so. Method: A systematic literature review of MSR studies was conducted following the guidelines and template proposed by Mian et al. (which refines those provided by Kitchenham and Charters). These guidelines were extended and revised to provide a framework for systematic MSR studies. Results: MSR studies typically do not follow a systematic approach for repository selection, and many do not report selection or data extraction protocols. Furthermore, few manuscripts discuss threats to the study's validity due to the selection or data extraction steps followed. Conclusions: Although MSR studies are evidence-based research, they seldom follow a systematic process. Hence, there is a need for guidelines on how to conduct systematic MSR studies. New guidelines and a template have been proposed, consolidating related studies in the MSR field and strategies for systematic literature reviews.
C1 [Vidoni, M.] Australian Natl Univ, CECS Sch Comp, Canberra, ACT, Australia.
C3 Australian National University
RP Vidoni, M (corresponding author), Australian Natl Univ, CECS Sch Comp, Canberra, ACT, Australia.
EM melina.vidoni@anu.edu.au
RI Vidoni, Melina/H-9805-2019
OI Vidoni, Melina/0000-0002-4099-1430
CR Abate P, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P24, DOI 10.1109/MSR.2015.10
   Abu Bakar NSA, 2011, PROCD SOC BEHV, V27, P160, DOI 10.1016/j.sbspro.2011.10.594
   Abuhamad M, 2019, FUTURE GENER COMP SY, V95, P104, DOI 10.1016/j.future.2018.12.038
   Thompson CA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P281, DOI [10.1109/MSR.2016.036, 10.1145/2901739.2901779]
   Alqahtani SS, 2016, SCI COMPUT PROGRAM, V121, P153, DOI 10.1016/j.scico.2016.01.005
   Ampatzoglou A, 2013, ENTERTAIN COMPUT, V4, P131, DOI 10.1016/j.entcom.2012.10.002
   Anbalagan P, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P171, DOI 10.1109/MSR.2009.5069498
   [Anonymous], 2012, LECTURE NOTES COMPUT, DOI DOI 10.1007/978-3-642-27392-6_8
   [Anonymous], 2006, P 2006 INT WORKSHOP
   Asyrofi MH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P637, DOI [10.1109/SANER48275.2020.9054809, 10.1109/saner48275.2020.9054809]
   Badashian AS, 2016, 2016 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON CROWDSOURCING IN SOFTWARE ENGINEERING (CSI-SE), P15, DOI [10.1145/2897659.2897663, 10.1109/CSI-SE.2016.011]
   Bana R, 2018, INT CONF CONTEMP, P166
   Banerjee S, 2017, INFORM SOFTWARE TECH, V89, P1, DOI 10.1016/j.infsof.2016.09.006
   Batista NA, 2017, 2017 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE (WI 2017), P170, DOI 10.1145/3106426.3106480
   Bidoki Neda Hajiakhoond, 2020, Online Social Networks and Media, V16, P1, DOI 10.1016/j.osnem.2020.100070
   Bidoki Neda Hajiakhoond, 2018, 2018 5th International Conference on Computational Science and Computational Intelligence (CSCI), P1248, DOI 10.1109/CSCI46756.2018.00241
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Borle NC, 2018, EMPIR SOFTW ENG, V23, P1931, DOI 10.1007/s10664-017-9576-3
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Brisson S, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P59, DOI [10.1109/SANER48275.2020.9054834, 10.1109/saner48275.2020.9054834]
   Cai XY, 2016, P INT COMP SOFTW APP, P63, DOI 10.1109/COMPSAC.2016.124
   Capiluppi A, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110543
   Chaturvedi KK, 2013, PROCEEDINGS OF THE 2013 13TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND ITS APPLICATIONS (ICCSA 2013), P89, DOI 10.1109/ICCSA.2013.22
   Chatziasimidis F, 2015, 2015 6TH INTERNATIONAL CONFERENCE ON INFORMATION, INTELLIGENCE, SYSTEMS AND APPLICATIONS (IISA)
   Chatzidimitriou KC, 2018, IEEE WORK CONF MIN S, P42, DOI 10.1145/3196398.3196465
   Chen HC, 2019, J SYST SOFTWARE, V153, P45, DOI 10.1016/j.jss.2019.03.010
   Chong CY, 2019, COMM COM INF SC, V1077, P266, DOI 10.1007/978-3-030-29157-0_12
   Cito J, 2017, IEEE WORK CONF MIN S, P323, DOI 10.1109/MSR.2017.67
   Coelho J, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240501
   Cohen E, 2018, IEEE WORK CONF MIN S, P426, DOI 10.1145/3196398.3196436
   Czibula G, 2014, INFORM SCIENCES, V264, P260, DOI 10.1016/j.ins.2013.12.031
   D'Ambros M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, DOI 10.1109/ICSM.2011.6080839
   Dam HK, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P627, DOI 10.1109/ICSE.2015.209
   de la Torre G, 2018, IEEE WORK CONF MIN S, P492, DOI 10.1145/3196398.3196404
   de Souza LBL, 2013, IEEE WORK CONF MIN S, P217, DOI 10.1109/MSR.2013.6624030
   Decan A, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110573
   Decan A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P493, DOI 10.1109/SANER.2016.12
   deF, 2016, P 31 ANN ACM S APPL, P1472, DOI DOI 10.1145/2851613.2851786
   Destefanis G, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION), P14, DOI 10.1145/3194932.3194936
   Dong LM, 2017, ASIA PAC SOFWR ENG, P51, DOI 10.1109/APSEC.2017.11
   Dubey S. a., 2018, 2018 2 INT C TRENDS, P554
   Dwivedi AK, 2018, FRONT COMPUT SCI-CHI, V12, P908, DOI 10.1007/s11704-017-6424-y
   Dybå T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P149
   El Mezouar M, 2019, EMPIR SOFTW ENG, V24, P3790, DOI 10.1007/s10664-019-09700-1
   Farah G, 2013, COMPUT COLOMB CONF, P37
   Felderer M., 2018, 22 INT C EV ASS SOFT, P169
   Fontana FA, 2014, LECT NOTES BUS INF P, V199, P148
   Fu Y, 2015, INFORM SOFTWARE TECH, V57, P369, DOI 10.1016/j.infsof.2014.05.017
   Garcia I, 2020, COMPUT APPL ENG EDUC, V28, P1327, DOI 10.1002/cae.22304
   Gelman B, 2019, DATA BRIEF, V27, DOI 10.1016/j.dib.2019.104712
   German D. M., 2007, MIN SOFTW REP 2007 I, P24, DOI DOI 10.1109/MSR.2007.32
   Goeminne M, 2013, IEEE WORK CONF MIN S, P225, DOI 10.1109/MSR.2013.6624032
   Goeminne M, 2013, SCI COMPUT PROGRAM, V78, P971, DOI 10.1016/j.scico.2011.11.004
   Gousios G, 2017, PROC IEEE ACM INT C, P501, DOI 10.1109/ICSE-C.2017.164
   Goyal A, 2020, PROCEDIA COMPUT SCI, V167, P2070, DOI 10.1016/j.procs.2020.03.247
   Güemes-Peña D, 2018, PROG ARTIF INTELL, V7, P237, DOI 10.1007/s13748-018-0147-7
   Guidotti R, 2018, LECT NOTES COMPUT SC, V11176, P98, DOI 10.1007/978-3-030-04771-9_9
   Gupta M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P658, DOI 10.1145/2591062.2591080
   Härtel J, 2018, LECT NOTES COMPUT SC, V10890, P216, DOI 10.1007/978-3-319-92997-2_14
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Hassan F, 2017, PROC IEEE ACM INT C, P277, DOI 10.1109/ICSE-C.2017.114
   Hauff C, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P362, DOI 10.1109/MSR.2015.41
   Hayashi Junichi, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P502, DOI 10.1109/MSR.2019.00076
   Heinze Thomas S., 2020, Enterprise, Business-Process and Information Systems Modeling. 21st International Conference, BPMDS 2020, 25th International Conference, EMMSAD 2020. Held at CAiSE 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 387), P193, DOI 10.1007/978-3-030-49418-6_13
   Higo Y, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110571
   Howard A, 2017, IEEE WORK ADV ROBOT
   Hu Y, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-2897-7
   Jiang J, 2017, EMPIR SOFTW ENG, V22, P547, DOI 10.1007/s10664-016-9436-6
   Joshi Saket Dattatray, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P587, DOI 10.1109/MSR.2019.00088
   Kaczmarek JS, 2006, OPENING INFORMATION HORIZONS, P107
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Kamei Y., 2018, EMPIR SOFTW ENG, P1
   Kavaler D, 2019, EMPIR SOFTW ENG, V24, P3904, DOI 10.1007/s10664-019-09728-3
   Kawaguchi S, 2006, J SYST SOFTWARE, V79, P939, DOI 10.1016/j.jss.2005.06.044
   Keivanloo I., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P32, DOI 10.1109/MSR.2012.6224296
   Kiehn Max, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P58, DOI 10.1109/MSR.2019.00018
   Kikas R, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P291, DOI [10.1109/MSR.2016.038, 10.1145/2901739.2901751]
   Kikas R, 2015, LECT NOTES COMPUT SC, V9459, P295, DOI 10.1007/978-3-319-26844-6_22
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V3, P1
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kolovos Dimitris, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P155, DOI 10.1109/MSR.2019.00032
   Kolovos DS, 2015, OSS4MDE MODELS, P20
   Kotti Zoe, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P565, DOI 10.1109/MSR.2019.00085
   Kouroshfar E, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P246, DOI 10.1109/MSR.2015.30
   Kristiansen TB, 2019, BMJ-BRIT MED J, V367, DOI 10.1136/bmj.l6042
   Lamkanfi A, 2013, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2013.6624028
   Lazar A, 2014, P 11 WORK C MIN SOFT, P392, DOI [DOI 10.1145/2597073.2597128, 10.1145/2597073.2597128]
   Lee Roy Ka-Wei, 2017, Social Informatics. 9th International Conference, SocInfo 2017. Proceedings: LNCS 10540, P245, DOI 10.1007/978-3-319-67256-4_19
   Lee S, 2017, INT J INFORM MANAGE, V37, P431, DOI 10.1016/j.ijinfomgt.2017.05.006
   Leibzon W, 2016, PROCEEDINGS OF THE 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING ASONAM 2016, P1374, DOI 10.1109/ASONAM.2016.7752419
   Li N., 2010, 2010 2 INT WORKSHOP, P1, DOI 10.1109/IWISA.2010.5473578
   Linstead E, 2009, DATA MIN KNOWL DISC, V18, P300, DOI 10.1007/s10618-008-0118-x
   Ma YZ, 2017, 12TH CHINESE CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CHINESECSCW 2017), P165, DOI 10.1145/3127404.3127431
   Madeyski L, 2017, IEEE WORK CONF MIN S, P515, DOI 10.1109/MSR.2017.46
   Manes Saraj Singh, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P235, DOI 10.1109/MSR.2019.00047
   Maqsood J., 2017, P 2017 INT C MAN ENG, P145, DOI 10.1145/3034950.3034957
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Megdadi O, 2019, INFORM SOFTWARE TECH, V109, P80, DOI 10.1016/j.infsof.2019.01.008
   Mendes E, 2019, EUROMICRO CONF PROC, P355, DOI 10.1109/SEAA.2019.00061
   Meng XZ, 2013, PROC IEEE INT CONF S, P250, DOI 10.1109/ICSM.2013.36
   Mengerink JGM, 2019, EMPIR SOFTW ENG, V24, P1574, DOI 10.1007/s10664-018-9641-6
   Mian Paula, 2005, P 2 EXP SOFTW ENG LA, P1
   Mierle K., 2005, SIGSOFT Softw. Eng. Notes, V30, P1, DOI [10.1145/1082983.1083150, DOI 10.1145/1082983.1083150]
   Mizuno O., 2007, Proceedings of 4th International Workshop on Mining Software Repositories, P4
   Montandon Joao Eduardo, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P276, DOI 10.1109/MSR.2019.00054
   Mulder F., 2010, P JOINT ERCIM WORKSH, P23, DOI DOI 10.1145/1862372.1862381
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Muylaert W, 2017, IEEE WORK CONF MIN S, P503, DOI 10.1109/MSR.2017.40
   Nafi KW, 2020, J SYST SOFTWARE, V162, DOI 10.1016/j.jss.2019.110491
   Nagwani Naresh Kumar, 2010, Proceedings of the 2010 International Conference on Recent Trends in Information, Telecommunication and Computing (ITC 2010), P13, DOI 10.1109/ITC.2010.56
   Neamtiu J. F. I., 2005, P INT WORKSH MIN SOF, V30, P1, DOI [DOI 10.1145/1082983.1083143, 10.1145/1082983.1083143]
   Neelofar, 2012, 2012 Sixth International Conference on Complex, Intelligent, and Software Intensive Systems (CISIS), P414, DOI 10.1109/CISIS.2012.132
   Nguyen PT, 2020, SOFTWARE QUAL J, V28, P595, DOI 10.1007/s11219-019-09483-0
   Nguyen PT, 2018, EUROMICRO CONF PROC, P388, DOI 10.1109/SEAA.2018.00069
   Noten J, 2017, IEEE WORK CONF MIN S, P531, DOI 10.1109/MSR.2017.52
   Ohira M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P518, DOI 10.1109/MSR.2015.78
   Ortu M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P480, DOI [10.1145/2901739.2903505, 10.1109/MSR.2016.059]
   Ozer M, 2020, EXPERT SYST APPL, V151, DOI 10.1016/j.eswa.2020.113337
   Paixao KVR, 2017, IEEE WORK CONF MIN S, P479, DOI 10.1109/MSR.2017.33
   Parashar A, 2016, EVOL SYST-GER, V7, P117, DOI 10.1007/s12530-016-9151-y
   Peng G, 2019, DECIS SUPPORT SYST, V118, P83, DOI 10.1016/j.dss.2019.01.005
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petersen K, 2011, INT SYMP EMP SOFTWAR, P351, DOI 10.1109/ESEM.2011.46
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Prakash BVA, 2012, PROC TECH, V4, P384, DOI 10.1016/j.protcy.2012.05.059
   Prana GAA, 2019, EMPIR SOFTW ENG, V24, P1296, DOI 10.1007/s10664-018-9660-3
   Raemaekers S, 2017, J SYST SOFTWARE, V129, P140, DOI 10.1016/j.jss.2016.04.008
   Raemaekers S, 2013, IEEE WORK CONF MIN S, P221, DOI 10.1109/MSR.2013.6624031
   Rahman M.M., 2014, P 11 WORKING C MININ, P364, DOI DOI 10.1145/2597073.2597121
   Raja U, 2009, INFORM TECHNOL MANAG, V10, P235, DOI 10.1007/s10799-009-0062-5
   Ramachandran M, 2005, Proceedings of the 2005 IEEE International Conference on Information Reuse and Integration, P270
   Ramachandran M., 2012, Journal of Software Engineering and Applications, V5, p1 a, DOI DOI 10.4236/JSEA.2012.51001
   Robles G, 2017, IEEE WORK CONF MIN S, P519, DOI 10.1109/MSR.2017.48
   Saied MA, 2018, J SYST SOFTWARE, V145, P164, DOI 10.1016/j.jss.2018.08.032
   Santos A, 2018, XII BRAZILIAN SYMPOSIUM ON SOFTWARE COMPONENTS, ARCHITECTURES, AND REUSE (SBCARS), P83, DOI 10.1145/3267183.3267192
   Satltos JCS, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P303, DOI 10.1109/WICSA.2016.47
   Schermann G, 2018, IEEE WORK CONF MIN S, P26, DOI 10.1145/3196398.3196456
   Selby RW, 2005, IEEE T SOFTWARE ENG, V31, P495, DOI 10.1109/TSE.2005.69
   Shang WY, 2012, J SYST SOFTWARE, V85, P2195, DOI 10.1016/j.jss.2011.07.034
   Sicilia MA, 2017, PROCEDIA COMPUT SCI, V106, P54, DOI 10.1016/j.procs.2017.03.009
   Soll M, 2017, LECT NOTES ARTIF INT, V10505, P373, DOI 10.1007/978-3-319-67190-1_34
   Souza R., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P70, DOI 10.1109/MSR.2012.6224301
   Sprint G., 2019, J. Comput. Sci. Coll, V35, P76
   Sun XB, 2015, INFORM SOFTWARE TECH, V66, P1, DOI 10.1016/j.infsof.2015.05.003
   Tiwari NM, 2017, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2017.56
   Trautsch F, 2018, EMPIR SOFTW ENG, V23, P1036, DOI 10.1007/s10664-017-9537-x
   Tripathi A, 2015, 2015 IEEE 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN), P39, DOI 10.1109/SWAN.2015.7070489
   Trockman Asher, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P181, DOI 10.1109/MSR.2019.00036
   Vale G, 2020, EMPIR SOFTW ENG, V25, P402, DOI 10.1007/s10664-019-09774-x
   van Tonder Rijnard, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P186, DOI 10.1109/MSR.2019.00037
   Vandecruys O, 2008, J SYST SOFTWARE, V81, P823, DOI 10.1016/j.jss.2007.07.034
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Vendome C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P772, DOI 10.1109/ICSE.2015.245
   Vial G, 2019, DECIS SUPPORT SYST, V126, DOI 10.1016/j.dss.2019.113133
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Wang T, 2013, PROC IEEE INT CONF S, P240, DOI 10.1109/ICSM.2013.35
   WeiSSgerber Peter., 2007, MINING SOFTWARE REPO, P9
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Xia H., 2019, 2019 IEEE INT S DYNA, P1, DOI DOI 10.1109/ICIS46139.2019.8940236
   Yan Y, 2014, PROC IEEE INT CONF S, P471, DOI 10.1109/ICSME.2014.76
   Yang WC, 2013, ASIA PAC SOFWR ENG, P165, DOI 10.1109/APSEC.2013.133
   Yang X, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P460, DOI [10.1145/2901739.2903504, 10.1109/MSR.2016.054]
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Yu L., 2007, 4 INT WORKSHOP MININ, P8, DOI 10.1109/msr.2007.19
   Yu Y, 2018, IEEE WORK CONF MIN S, P22, DOI 10.1145/3196398.3196455
   Yu Yun-Chao., 2013, VLSI Test Symposium (VTS), 2013 IEEE 31st, P1, DOI DOI 10.1145/2532443.2532453
   Zaidman Andy, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P220, DOI 10.1109/ICST.2008.47
   Zhang T, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1553, DOI 10.1145/2695664.2695872
   Zhang Y, 2019, IEEE DATA MINING, P876, DOI 10.1109/ICDM.2019.00098
   Zhang Y, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P13, DOI 10.1109/SANER.2017.7884605
   Zhou C, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110572
   Zou WQ, 2019, EMPIR SOFTW ENG, V24, P3871, DOI 10.1007/s10664-019-09720-x
NR 177
TC 9
Z9 9
U1 2
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2022
VL 144
AR 106791
DI 10.1016/j.infsof.2021.106791
EA DEC 2021
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YK3DU
UT WOS:000745098800006
DA 2024-07-18
ER

PT J
AU Wang, Y
   Wu, HY
   Niu, XT
   Nie, CH
   Xu, JX
AF Wang, Yan
   Wu, Huayao
   Niu, Xintao
   Nie, Changhai
   Xu, Jiaxi
TI An Adaptive Penalty based Parallel Tabu Search for Constrained Covering
   Array Generation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Constrained covering array; Combinatorial testing; Tabu search; Adaptive
   penalty; Parallelization
ID BOUNDS
AB Context: The generation of the optimal constrained covering arrays is a key challenge in the research field of combinatorial testing, where a variety of Constrained Covering Array Generation (CCAG) algorithms have been developed. However, existing algorithms typically reuse constraint solver or forbidden tuple-based techniques to handle constraints, which might restrict their potentials on finding smaller arrays. Objective: This work dedicates to exploring more effective constraint handling techniques for CCAG, so that the sizes of constrained covering arrays can be further minimized. Methods: We propose a novel Adaptive Penalty based Parallel Tabu Search (APPTS) algorithm to address the CCAG problem. APPTS incorporates a penalty term into the fitness function to handle the constrained search space, and employs an adaptive penalty mechanism to dynamically adjust the penalty weight in different search phases. Moreover, APPTS adopts Java Parallel Stream to compute the fitness values of candidate solutions to speed up the generation process. Results: The performance of APPTS is evaluated against three alternative tabu search-based algorithms (with different penalty and parallelization mechanisms), and seven state-of-the-art algorithms for CCAG. The results demonstrate the superiority of APPTS over these existing algorithms. In particular, APPTS finds 22 new upper bounds on the sizes of 2-way and 3-way constrained covering arrays. Conclusion: The adaptive penalty mechanism provides an effective choice for handling constraints in CCAG, and the parallelization can help APPTS reduce the generation cost.
C1 [Wang, Yan; Wu, Huayao; Niu, Xintao; Nie, Changhai] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Wang, Yan; Xu, Jiaxi] Nanjing Xiaozhuang Univ, Sch Informat & Technol, Nanjing, Peoples R China.
C3 Nanjing University; Nanjing Xiaozhuang University
RP Wu, HY (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
EM hywu@nju.edu.cn
RI Nie, Changhai/IWM-7504-2023
FU National Key Research and Development Program of China [2018YFB1003800];
   National Natural Science Foundation of China [61902174, 62072226];
   Natural Science Foundation of Jiangsu Province, China [BK20190291]
FX This work was partially supported by the National Key Research and
   Development Program of China (2018YFB1003800), National Natural Science
   Foundation of China (61902174, 62072226), and Natural Science Foundation
   of Jiangsu Province, China (BK20190291).
CR Ahmed BS, 2017, IEEE ACCESS, V5, P25706, DOI 10.1109/ACCESS.2017.2771562
   [Anonymous], 1997, TABU SEARCH, DOI DOI 10.1007/978-1-4615-6089-0
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Coello CAC, 2002, COMPUT METHOD APPL M, V191, P1245, DOI 10.1016/S0045-7825(01)00323-1
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Cohen MB, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P413
   Coit D. W., 1996, INFORMS Journal of Computing, V8, P173, DOI 10.1287/ijoc.8.2.173
   Crossley W.A., 1997, AIAA 35 AEROSPACE SC, P97, DOI [10.2514/6.1997-83, DOI 10.2514/6.1997-83]
   Di Geronimo L., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P785, DOI 10.1109/ICST.2012.177
   Fu YJ, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106288
   Galinier P, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1288, DOI 10.1145/3071178.3071324
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Garvin BJ, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/SSBSE.2009.25
   Gonzalez-Hernandez L, 2015, INFORM SOFTWARE TECH, V59, P17, DOI 10.1016/j.infsof.2014.10.009
   Jia Y, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P540, DOI 10.1109/ICSE.2015.71
   Kampel L, 2019, THEOR COMPUT SCI, V800, P107, DOI 10.1016/j.tcs.2019.10.019
   Kuhn R, 2003, 27TH ANNUAL NASA GODDARD/IEEE SOFTWARE ENGINEERING WORKSHOP - PROCEEDINGS, P91, DOI 10.1109/SEW.2002.1199454
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Lin JK, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P212, DOI 10.1145/3338906.3338914
   Lin JK, 2015, IEEE INT CONF AUTOM, P494, DOI 10.1109/ASE.2015.61
   Lopez-Herrejon RE, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1255, DOI 10.1145/2576768.2598305
   Mercan H, 2019, IEEE T SOFTWARE ENG, V45, P1270, DOI 10.1109/TSE.2018.2837759
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Nurmela KJ, 2004, DISCRETE APPL MATH, V138, P143, DOI 10.1016/S0166-218X(03)00291-9
   Nyman L, 2016, IEEE ANN HIST COMPUT, V38, P84, DOI 10.1109/MAHC.2016.34
   Petke J, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P17, DOI 10.1109/SBST.2015.11
   [戚荣志 Qi Rongzhi], 2018, [计算机学报, Chinese Journal of Computers], V41, P1284
   Segall I., 2011, P 2011 INT S SOFTWAR, P254
   Walker RA, 2009, J STAT PLAN INFER, V139, P69, DOI 10.1016/j.jspi.2008.05.020
   Wu HY, 2021, IEEE T SOFTWARE ENG, V47, P2549, DOI 10.1109/TSE.2019.2955687
   Yamada A., 2015, 2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST), P1
   Yu L., 2015, P INT C WIR COMM SIG, P1
   Zamli KZ, 2016, APPL SOFT COMPUT, V44, P57, DOI 10.1016/j.asoc.2016.03.021
NR 34
TC 5
Z9 5
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2022
VL 143
AR 106768
DI 10.1016/j.infsof.2021.106768
EA NOV 2021
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XK9HO
UT WOS:000727767300006
DA 2024-07-18
ER

PT J
AU Tsilionis, K
   Wautelet, Y
AF Tsilionis, Konstantinos
   Wautelet, Yves
TI A model-driven framework to support strategic agility: Value-added
   perspective
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Strategic agility; IT governance; Strategic value; Model-driven
   development; Agile; Agility; i* framework; Scaled agile framework; SAFe;
   MoDrIGo; StratAMoDrIGo
ID INFORMATION-TECHNOLOGY; DYNAMIC CAPABILITIES; DECISION-MAKING; B-SCP;
   BUSINESS; GOVERNANCE; MANAGEMENT; ALIGNMENT; EVOLUTION
AB Context: The Covid-19 pandemic has shown the entire world that the habits of work, freedom, and consumption can change quickly and significantly for an undetermined amount of time. A dynamic environment as such, prompts organizations to move fast in order to leverage changing circumstances as sources of opportunity rather than deadly threats. Drastic changes in work organization, consumption habits, compliance, etc., may require firms to quickly adopt new technology delivering all sorts of added value. Objective: The development and adoption of new technology - structurally impacting the way the organization conducts its activities - requires a considerable amount of effort in a short time frame, thus rendering it a governance decision where the alignment of the technology's adoption and use to the long term strategy needs to be evaluated. The short time frame requiring fast response implies that agility should not remain a development or management/operational concept but should also be adopted onto the strategic layer. Method: Design Science Research (DSR) has been applied to build-up a framework supporting strategic agility in a model-driven fashion called Strategic Agile Model Driven IT Governance (StratAMoDrIGo). The relevance, rigor and design cycles of DSR have been applied and presented. Results: StratAMoDrIGo is based on the identification of sources of value for the organization's strategy, its stakeholders and the users of the implemented/adopted technology. Relevant concepts are consolidated in an ontology of which the application uses the NFR Model at strategic-level and the i* Strategic Rationale Model at management-level. The proposal is applied on the case of an hospital facing the Covid-19 pandemic. Conclusion: The value brought by strategic opportunities' adoption to the organization, stakeholders and users can be evaluated ex ante through conceptual models.
C1 [Tsilionis, Konstantinos; Wautelet, Yves] KULeuven, Leuven, Belgium.
C3 KU Leuven
RP Wautelet, Y (corresponding author), KULeuven, Leuven, Belgium.
EM yves.wautelet@kuleuven.be
RI Tsilionis, Konstantinos/JLL-5406-2023; Harrison, Dylan/AFP-8142-2022;
   Wautelet, Yves/N-2388-2018
OI Tsilionis, Konstantinos/0000-0001-9702-6941; Wautelet,
   Yves/0000-0002-6560-9787
CR Abbas N, 2008, LECT NOTES BUS INF P, V9, P94
   [Anonymous], 2012, COBIT 5: A business framework for the governance and management of enterprise IT
   [Anonymous], 2015, OMG UN MOD LANG OMG
   Babar A, 2008, INFORM SOFTWARE TECH, V50, P815, DOI 10.1016/j.infsof.2007.11.005
   Barney J. B., 1986, Management Science, V32, P1231, DOI 10.1287/mnsc.32.10.1231
   Bass L., 2015, DevOps:_A_software_architect's_perspective
   Bleistein SJ, 2006, INFORM SOFTWARE TECH, V48, P846, DOI 10.1016/j.infsof.2005.12.001
   Cheng TH, 2009, 2009 ICSE WORKSHOP ON SOFTWARE DEVELOPMENT GOVERNANCE, P29, DOI 10.1109/SDG.2009.5071334
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Denning Stephen, 2017, Strategy & Leadership, V45, P3, DOI 10.1108/SL-04-2017-0032
   Doz Y, 2020, HUM RESOUR MANAGE R, V30, DOI 10.1016/j.hrmr.2019.100693
   Forbes DP, 1999, ACAD MANAGE REV, V24, P489, DOI 10.2307/259138
   Fowler M., 2001, Software Development, V9, P28
   Freeman R.E., 2010, Strategic management: A stakeholder approach, DOI DOI 10.1017/CBO9781139192675
   Gordijn J, 2001, IEEE INTELL SYST, V16, P11, DOI 10.1109/5254.941353
   Gordijn J, 2002, INT WORKSH E BUS MOD
   Haesen R, 2008, LECT NOTES COMPUT SC, V5074, P375
   Hakansson H., 1989, SCAND J MANAG, V5, P187, DOI [10.1016/j.scaman.2006.10.005, DOI 10.1016/0956-5221(89)90026-2]
   Henderson J. C., 1999, IBM Systems Journal, V38, P472, DOI [10.1147/sj.382.0472, 10.1147/SJ.1999.5387096]
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hevner R., 2007, Scandinavian Journal of Information Systems, V19, P4
   Horkoff J, 2014, SOFTW SYST MODEL, V13, P1015, DOI 10.1007/s10270-012-0290-8
   ISO, 2015, 385002015 ISOIEC
   Ivan A, 2006, P 8 IEEE INT C ENT C, P1
   Johannesson P, 2010, INTENTIONAL PERSPECTIVES ON INFORMATION SYSTEMS ENGINEERING, P195, DOI 10.1007/978-3-642-12544-7_11
   Jung R, 2018, AGILE STRATEGIES IT
   Khurum M, 2013, J SOFTW-EVOL PROC, V25, P711, DOI 10.1002/smr.1560
   Kolp M, 2015, COMPUT HUM BEHAV, V51, P742, DOI 10.1016/j.chb.2014.11.094
   Lara P, 2016, LECT NOTES COMPUT SC, V9974, P122, DOI 10.1007/978-3-319-46397-1_10
   Lengnick-Hall C A., 2009, Resilience capacity and strategic agility: Prerequisites for thriving in a dynamic environment (39-69)
   Mendes E, 2018, SOFTWARE QUAL J, V26, P607, DOI 10.1007/s11219-017-9360-z
   Mike Uschold M.G. M. U. M. G., Ontologies: Principles, methods and applications
   Mylopoulos, 2011, SOCIAL MODELING REQU
   Olivé A, 2007, CONCEPTUAL MODELLING IN INFORMATION SYSTEMS ENGINEERING, P319, DOI 10.1007/978-3-540-72677-7_20
   OMG, 2013, Business process model and notation (BPMN 2.0)
   Osterwalder A., 2010, BUSINESS MODEL GENER, DOI DOI 10.1111/J.1540-5885.2012.00977_2.X
   Pant, 2018, P DOCTORAL CONSORTIU, P1
   Pedersen M., 2020, THESIS NORWEGIAN SCH
   Richard K., 2020, SAFE 5 0 DISTILLED A
   Samavi R, 2009, INF SYST E-BUS MANAG, V7, P171, DOI 10.1007/s10257-008-0079-z
   Sambamurthy V, 2003, MIS QUART, V27, P237
   Seidita Valeria, 2012, Multi-Agent Systems. 9th European Workshop, EUMAS 2011. Revised Selected Papers, P221, DOI 10.1007/978-3-642-34799-3_15
   Sousa HP, 2014, LECT NOTES COMPUT SC, V8824, P407, DOI 10.1007/978-3-319-12206-9_34
   Souza E, 2018, INFORM SOFTWARE TECH, V104, P179, DOI 10.1016/j.infsof.2018.08.001
   T.O. Group, 2017, ARCHIMATE 3 0 1 SPEC
   Tallon PP, 2013, J MANAGE INFORM SYST, V30, P141, DOI 10.2753/MIS0742-1222300306
   Teece D., 2003, HDB KNOWLEDGE MANAGE, P195, DOI [10.1007/978-3-540-24748-7_10, DOI 10.1007/978-3-540-24748-7_10]
   Teece D, 2016, CALIF MANAGE REV, V58, P13, DOI 10.1525/cmr.2016.58.4.13
   Teece DJ, 1997, STRATEGIC MANAGE J, V18, P509, DOI 10.1002/(SICI)1097-0266(199708)18:7<509::AID-SMJ882>3.0.CO;2-Z
   Thomas O, 2010, INF SYST E-BUS MANAG, V8, P67, DOI 10.1007/s10257-009-0110-z
   Tsilionis K, 2021, LECT NOTES BUS INF P, V415, P356, DOI 10.1007/978-3-030-75018-3_24
   Vlietland J, 2016, J SYST SOFTWARE, V113, P418, DOI 10.1016/j.jss.2015.11.010
   Wang YD, 2021, REQUIR ENG, V26, P301, DOI 10.1007/s00766-021-00346-4
   Wautelet Yves, 2016, 2016 IEEE Tenth International Conference on Research Challenges in Information Science (RCIS), P1, DOI 10.1109/RCIS.2016.7549299
   Wautelet Y, 2021, 23 IEEE C BUS INF CB, V2
   Wautelet Y, 2019, LECT NOTES COMPUT SC, V11915, P433, DOI 10.1007/978-3-030-35333-9_31
   Wautelet Y, 2019, J SYST SOFTWARE, V149, P462, DOI 10.1016/j.jss.2018.12.024
   Wautelet Y, 2018, J UNIVERS COMPUT SCI, V24, P975
   Wautelet Y, 2018, TELEMAT INFORM, V35, P854, DOI 10.1016/j.tele.2017.12.013
   Wautelet Y, 2018, LECT NOTES COMPUT SC, V10753, P209, DOI 10.1007/978-3-319-77243-1_13
   Wautelet Y, 2017, COMPUT LANG SYST STR, V50, P159, DOI 10.1016/j.cl.2017.06.007
   Wautelet Y, 2016, BEHAV INFORM TECHNOL, V35, P980, DOI 10.1080/0144929X.2016.1212095
   Wautelet Y, 2016, NEUROCOMPUTING, V182, P304, DOI 10.1016/j.neucom.2015.12.022
   Wautelet Y, 2014, LECT NOTES COMPUT SC, V8484, P211, DOI 10.1007/978-3-319-07881-6_15
   Wautelet Y, 2012, INT J INF SYST SUPPL, V5, P1, DOI 10.4018/jisscm.2012070101
   Weill P., 2004, IT governance: How top performers manage IT decision rights for superior results
   Wieringa RJ, 2006, REQUIR ENG, V11, P295, DOI 10.1007/s00766-006-0037-6
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Yu Eric., 2011, SOCIAL MODELING REQU, V11, P2011, DOI DOI 10.7551/MITPRESS/7549.003.0005
   Zollo M, 2002, ORGAN SCI, V13, P339, DOI 10.1287/orsc.13.3.339.2780
NR 71
TC 8
Z9 9
U1 8
U2 40
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2022
VL 141
AR 106734
DI 10.1016/j.infsof.2021.106734
EA OCT 2021
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA WD5OM
UT WOS:000704989700001
PM 36570028
OA Green Published
DA 2024-07-18
ER

PT J
AU Tong, Y
   Zhang, XF
AF Tong, Yao
   Zhang, Xiaofang
TI Crowdsourced test report prioritization considering bug severity
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Crowdsourced testing; Test report processing; Prioritization; Bug
   severity; Textual description
ID SOFTWARE; PRIORITY
AB In crowdsourced testing, a large number of test reports will be generated in a short time. How to efficiently inspect these reports becomes one of the critical steps in the testing process. In recent years, many automated techniques like clustering, classification, and prioritization have emerged to provide an automated inspection order over test reports. Even though these methods have achieved good performance, they did not consider the priority to image and text information. Simultaneously, existing prioritization approaches only focus on the rate of detecting faults but ignore the severity of the faults. In fact, bug severity is a vital indicator that the users provide to flag the criticality of a bug, so developers can then use it to set their priority for the resolution process. For these reasons, this paper presents a novel prioritization approach for crowdsourcing test reports. It extracts features from text and screenshot information of the test reports, uses the hash technique to index test reports, and finally designs a prioritization algorithm. To validate our approach, we conducted experiments on six industrial projects. The results and the hypotheses analysis show that our approach can detect all faults faster in a limited time and can prioritize reports that have higher severity faults compared with the existing methods.
C1 [Tong, Yao; Zhang, Xiaofang] Soochow Univ, Sch Comp Sci & Technol, Suzhou 215006, Peoples R China.
C3 Soochow University - China
RP Zhang, XF (corresponding author), Soochow Univ, Sch Comp Sci & Technol, Suzhou 215006, Peoples R China.
EM xfzhang@suda.edu.cn
RI Tong, Yao/KPY-1291-2024
OI Zhang, Xiaofang/0000-0002-8667-0456
FU National Natural Science Foundation of China [61772263, 61872177,
   61972289, 61832009]; National Key R&D Program of China [2018YFB1003901];
   Collaborative Innovation Center of Novel Software Technology and
   Industrialization, China; Priority Academic Program Develop-ment of
   Jiangsu Higher Education Institutions, China
FX This work is partially supported by the National Natural Science
   Foundation of China (61772263, 61872177, 61972289, 61832009) , National
   Key R&D Program of China (Grant No. 2018YFB1003901) , Collaborative
   Innovation Center of Novel Software Technology and Industrialization,
   China, and the Priority Academic Program Develop-ment of Jiangsu Higher
   Education Institutions, China.
CR Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   Arafeen MJ, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P312, DOI 10.1109/ICST.2013.12
   Chaturvedi K.K., 2012, 2012 CSI 6 INT C SOF, P1
   Chen SH, 2011, IEEE C EVOL COMPUTAT, P45, DOI 10.1145/1806799.1806811
   Dalal N, 2005, PROC CVPR IEEE, P886, DOI 10.1109/cvpr.2005.177
   Diab Mona., 2009, Proceedings of the Workshop on Multiword Expressions: Identification, Interpretation, Disambiguation and Applications, P17
   Fan X, 2003, 2003 INTERNATIONAL CONFERENCE ON MULTIMEDIA AND EXPO, VOL I, PROCEEDINGS, P53
   Fazzini M, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P141, DOI 10.1145/3213846.3213869
   Feng Y, 2016, IEEE INT CONF AUTOM, P202, DOI 10.1145/2970276.2970367
   Feng Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P225, DOI 10.1145/2786805.2786862
   Fu WH, 2017, IEICE T INF SYST, VE100D, P1218, DOI 10.1587/transinf.2016EDP7356
   Gionis A, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P518
   Gopalan Raj P., 2014, 23rd Australian Software Engineering Conference (ASWEC 2014), P104, DOI 10.1109/ASWEC.2014.31
   Guo SK, 2017, SYMMETRY-BASEL, V9, DOI 10.3390/sym9080161
   Hamdy A, 2019, INT J SOFTW ENG KNOW, V29, P897, DOI 10.1142/S0218194019500311
   Hao R, 2019, PROC INT CONF SOFTW, P900, DOI 10.1109/ICSE.2019.00096
   Herlocker JL, 2004, ACM T INFORM SYST, V22, P5, DOI 10.1145/963770.963772
   Hindle A, 2016, EMPIR SOFTW ENG, V21, P368, DOI 10.1007/s10664-015-9387-3
   Ilieva MG, 2005, LECT NOTES COMPUT SC, V3513, P392
   Jelihovschi E.G., 2014, TEMA (São Carlos), V15, P3
   Jiang H, 2018, ACM T INTERNET TECHN, V18, DOI 10.1145/3106164
   Lamkanfi A, 2011, EUR CON SFTWR MTNCE, P249, DOI 10.1109/CSMR.2011.31
   Lazar A., 2014, P 11 WORKING C MININ, P308
   Lazebnik S., COMPUTER VISION PATT, V2, P2169
   Ledru Y, 2009, IEEE INT CONF AUTOM, P510, DOI 10.1109/ASE.2009.23
   Liu D, 2022, IEEE T SOFTWARE ENG, V48, P1290, DOI 10.1109/TSE.2020.3017514
   Liu WJ, 2018, INT J SOFTW ENG KNOW, V28, P537, DOI 10.1142/S0218194018500158
   Mao K, 2017, J SYST SOFTWARE, V126, P57, DOI 10.1016/j.jss.2016.09.015
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Nowak E, 2006, LECT NOTES COMPUT SC, V3954, P490
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rubner Y, 2000, INT J COMPUT VISION, V40, P99, DOI 10.1023/A:1026543900054
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   SHANNON CE, 1948, BELL SYST TECH J, V27, P623, DOI 10.1002/j.1538-7305.1948.tb00917.x
   Shutova Ekaterina., 2010, P 23 INT C COMP LING, P1002
   Slaney M, 2012, P IEEE, V100, P2604, DOI 10.1109/JPROC.2012.2193849
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Sureka A, 2010, ASIA PAC SOFWR ENG, P366, DOI 10.1109/APSEC.2010.49
   Tao DP, 2013, IEEE T MULTIMEDIA, V15, P833, DOI 10.1109/TMM.2013.2238909
   Tian Y, 2013, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2013.31
   Wang JJ, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962584
   Wang JJ, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P83, DOI 10.1109/ICSE-SEIP.2017.8
   Wang JJ, 2016, IEEE INT CONF AUTOM, P190, DOI 10.1145/2970276.2970300
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Wilcoxon Frank, 1992, BREAKTHROUGHS STAT, P196, DOI [DOI 10.1007/978-1-4612-4380-9_16, 10.1007/978-1-4612-4380-9_16, DOI 10.1007/978-1-4612-4380-9]
   Yang CZ, 2012, ASIA PAC SOFWR ENG, P240, DOI 10.1109/APSEC.2012.144
   Yang Y., 2019, INT C DAT MIN BIG DA, P135
   Yu L, 2010, LECT NOTES ARTIF INT, V6441, P356, DOI 10.1007/978-3-642-17313-4_35
   Zhang T, 2019, IEEE SOFTWARE, V36, P63, DOI 10.1109/MS.2017.377142400
   Zhang Xiao-Fang, 2018, Journal of Software, V29, P69, DOI 10.13328/j.cnki.jos.005377
NR 51
TC 4
Z9 4
U1 2
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2021
VL 139
AR 106668
DI 10.1016/j.infsof.2021.106668
EA JUN 2021
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA US8LY
UT WOS:000697678300013
DA 2024-07-18
ER

PT J
AU Zou, QY
   Lu, L
   Yang, ZY
   Gu, XW
   Qiu, SJ
AF Zou, Quanyi
   Lu, Lu
   Yang, Zhanyu
   Gu, Xiaowei
   Qiu, Shaojian
TI Joint feature representation learning and progressive distribution
   matching for cross-project defect prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Domain adaption; Cross project defect prediction; Feature
   representation; Progressive distribution matching
ID ADAPTATION; CLASSIFIERS; MODEL
AB Context: Cross-Project Defect Prediction (CPDP) aims to leverage the knowledge from label-rich source software projects to promote tasks in a label-poor target software project. Existing CPDP methods have two major flaws. One is that previous CPDP methods only consider global feature representation and ignores local relationship between instances in the same category from different projects, resulting in ambiguous predictions near the decision boundary. The other one is that CPDP methods based on pseudo-labels assume that the conditional distribution can be well matched at one stroke, when instances of target project are correctly annotated pseudo labels. However, due to the great gap between projects, the pseudo-labels seriously deviate from the real labels.
   Objective: To address above issues, this paper proposed a novel CPDP method named Joint Feature Representation with Double Marginalized Denoising Autoencoders (DMDA_JFR).
   Method: Our method mainly includes two parts: joint feature representation learning and progressive distribution matching. We utilize two novel autoencoders to jointly learn the global and local feature representations simultaneously. To achieve progressive distribution matching, we introduce a repetitious pseudo-labels strategy, which makes it possible that distributions are matched after each stack layer learning rather than in one stroke.
   Results: The effectiveness of the proposed method was evaluated through experiments conducted on 10 open-source projects, including 29 software releases from PROMISE repository. Overall, experimental results show that our proposed method outperformed several state-of-the-art baseline CPDP methods.
   Conclusions: It can be concluded that (1) joint deep representations are promising for CPDP compared with only considering global feature representation methods, (2) progressive distribution matching is more effective for adapting probability distributions in CPDP compared with existing CPDP methods based on pseudo-labels.
C1 [Zou, Quanyi; Gu, Xiaowei] South China Univ Technol, Sch Software Engn, Guangzhou 510006, Peoples R China.
   [Lu, Lu; Yang, Zhanyu] South China Univ Technol, Sch Comp Sci & Engn, Guangzhou 510006, Peoples R China.
   [Qiu, Shaojian] South China Agr Univ, Coll Math & Informat, Guangzhou 510642, Peoples R China.
C3 South China University of Technology; South China University of
   Technology; South China Agricultural University
RP Lu, L (corresponding author), South China Univ Technol, Sch Comp Sci & Engn, Guangzhou 510006, Peoples R China.
EM zouquanyi2010@163.com; lul@scut.edu.cn; yangzhanyu@hotmail.com;
   amyxwgu@163.com; qiushaojian@outlook.com
OI Zou, Quan-Yi/0000-0001-6543-2224; Qiu, Shaojian/0000-0002-4138-2514
FU National Natural Science Foundation of China [61370103]; Guangzhou
   Produce & Research Fund, PR China [201902020004]
FX We thank J. Nam and H. Tong for providing us the source code of TCA and
   KSETE, respectively. The authors would like to thank the editor and
   reviewers for their valuable comments to improve the quality of this
   paper. This work was supported in part by the National Natural Science
   Foundation of China under grant no. 61370103, and the Guangzhou Produce
   & Research Fund, PR China under grant no. 201902020004.
CR [Anonymous], 2016, P INT JOINT C ARTIFI
   [Anonymous], INT C MACH LEARN
   [Anonymous], 2012, P 29 INT C MACH LEAR
   Benni KE, 2018, IEEE T SOFTWARE ENG, V44, P534, DOI 10.1109/TSE.2017.2731766
   Blitzer J., 2008, ADV NEURAL INFORM PR, P129, DOI DOI 10.5555/2981562.2981579
   Bousmalis K, 2017, PROC CVPR IEEE, P95, DOI 10.1109/CVPR.2017.18
   Bowes D, 2018, SOFTWARE QUAL J, V26, P525, DOI 10.1007/s11219-016-9353-3
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   Chen X, 2019, INFORM SOFTWARE TECH, V106, P161, DOI 10.1016/j.infsof.2018.10.003
   Cheng M, 2016, INT J SOFTW ENG KNOW, V26, P1571, DOI 10.1142/S0218194016710017
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Deng JH, 2020, IET SOFTW, V14, P443, DOI 10.1049/iet-sen.2019.0149
   Feng S, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106432
   Ganin Y, 2015, PR MACH LEARN RES, V37, P1180
   Gong LN, 2020, IEEE T RELIAB, V69, P40, DOI 10.1109/TR.2019.2895462
   Gretton A, 2012, J MACH LEARN RES, V13, P723
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Hoffman J, 2017, ADV COMPUT VIS PATT, P173, DOI 10.1007/978-3-319-58347-1_9
   Hosseini S, 2018, INFORM SOFTWARE TECH, V95, P296, DOI 10.1016/j.infsof.2017.06.004
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jureczko M., 2010, P 6 INT C PRED MOD S, P12
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Li ZQ, 2018, AUTOMAT SOFTW ENG, V25, P201, DOI 10.1007/s10515-017-0220-7
   Limsettho N, 2018, INFORM SOFTWARE TECH, V100, P87, DOI 10.1016/j.infsof.2018.04.001
   Liu C, 2019, INFORM SOFTWARE TECH, V107, P125, DOI 10.1016/j.infsof.2018.11.005
   Long MS, 2019, IEEE T PATTERN ANAL, V41, P3071, DOI 10.1109/TPAMI.2018.2868685
   López-Martín C, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110592
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Majd A, 2020, EXPERT SYST APPL, V147, DOI 10.1016/j.eswa.2019.113156
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Oquab M, 2014, PROC CVPR IEEE, P1717, DOI 10.1109/CVPR.2014.222
   Özakinci R, 2018, J SYST SOFTWARE, V144, P216, DOI 10.1016/j.jss.2018.06.025
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Qiu SJ, 2019, IET SOFTW, V13, P393, DOI 10.1049/iet-sen.2018.5131
   Qiu SJ, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9132660
   Ruihua Chang, 2011, Journal of Software, V6, P2114, DOI 10.4304/jsw.6.11.2114-2120
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Shao YX, 2020, KNOWL-BASED SYST, V196, DOI 10.1016/j.knosys.2020.105742
   Shao YX, 2018, EXPERT SYST APPL, V114, P237, DOI 10.1016/j.eswa.2018.07.042
   Si S, 2010, IEEE T KNOWL DATA EN, V22, P929, DOI 10.1109/TKDE.2009.126
   Teng WX, 2020, IEEE GEOSCI REMOTE S, V17, P789, DOI 10.1109/LGRS.2019.2931305
   Tong HN, 2021, IEEE T SOFTWARE ENG, V47, P1886, DOI 10.1109/TSE.2019.2939303
   Tong HN, 2018, INFORM SOFTWARE TECH, V96, P94, DOI 10.1016/j.infsof.2017.11.008
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wei PF, 2019, IEEE T NEUR NET LEAR, V30, P1321, DOI 10.1109/TNNLS.2018.2868709
   Wu F, 2018, IEEE T RELIAB, V67, P581, DOI 10.1109/TR.2018.2804922
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xu Z, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110402
   Xu Z, 2019, J COMPUT SCI TECH-CH, V34, P1039, DOI 10.1007/s11390-019-1959-z
   Xu Z, 2019, INFORM SOFTWARE TECH, V106, P182, DOI 10.1016/j.infsof.2018.10.004
   Yang S, 2020, EXPERT SYST APPL, V160, DOI 10.1016/j.eswa.2020.113635
   Yu Q, 2017, J SYST SOFTWARE, V132, P366, DOI 10.1016/j.jss.2017.06.070
   Yu Q, 2016, 2016 INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2016), P90, DOI 10.1109/SATE.2016.22
   Zhao XL, 2016, APPL SOFT COMPUT, V48, P151, DOI 10.1016/j.asoc.2016.07.016
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zhu K, 2020, IET SOFTW, V14, P185, DOI 10.1049/iet-sen.2019.0278
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 64
TC 21
Z9 22
U1 3
U2 28
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2021
VL 137
AR 106588
DI 10.1016/j.infsof.2021.106588
EA APR 2021
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SQ8FQ
UT WOS:000660586400008
DA 2024-07-18
ER

PT J
AU Baldassarre, MT
   Lenarduzzi, V
   Romano, S
   Saarimäki, N
AF Baldassarre, Maria Teresa
   Lenarduzzi, Valentina
   Romano, Simone
   Saarimaki, Nyyti
TI On the diffuseness of technical debt items and accuracy of remediation
   time when using SonarQube
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technical debt; Remediation time; Effort estimation; Sonarqube; Case
   study
ID MULTIPLE COMPARISONS; CODE SMELLS; SOFTWARE; BAD
AB Context. Among the static analysis tools available, SonarQube is one of the most used. SonarQube detects Technical Debt (TD) items-i.e., violations of coding rules-and then estimates TD as the time needed to remedy TD items. However, practitioners are still skeptical about the accuracy of remediation time estimated by the tool. Objective. In this paper, we analyze both diffuseness of TD items and accuracy of remediation time, estimated by SonarQube, to fix TD items on a set of 21 open-source Java projects. Method. We designed and conducted a case study where we asked 81 junior developers to fix TD items and reduce the TD of 21 projects. Results. We observed that TD items are diffused in the analyzed projects and most items are code smells. Moreover, the results point out that the remediation time estimated by SonarQube is inaccurate and, as compared to the actual time spent to fix TD items, is in most cases overestimated. Conclusions. The results of our study are promising for practitioners and researchers. The former can make more aware decisions during project execution and resource management, the latter can use this study as a starting point for improving TD estimation models.
C1 [Baldassarre, Maria Teresa; Romano, Simone] Univ Bari, Bari, Italy.
   [Lenarduzzi, Valentina] LUT Univ, Lappeenranta, Finland.
   [Saarimaki, Nyyti] Tampere Univ, Tampere, Finland.
C3 Universita degli Studi di Bari Aldo Moro; Lappeenranta-Lahti University
   of Technology LUT; Tampere University
RP Saarimäki, N (corresponding author), Tampere Univ, Tampere, Finland.
EM mariateresa.baldassarre@uniba.it; valentina.lenarduzzi@lut.fi;
   simone.romano@uniba.it; nyyti.saarimaki@tuni.fi
RI Romano, Simone/JVZ-6529-2024
OI Romano, Simone/0000-0003-4880-3622; Lenarduzzi,
   Valentina/0000-0003-0511-5133; Saarimaki, Nyyti/0000-0001-5538-8557
CR Aldaeej A, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P67, DOI 10.1145/3194164.3194177
   Althouse AD, 2016, ANN THORAC SURG, V101, P1644, DOI 10.1016/j.athoracsur.2015.11.024
   [Anonymous], 2009, CASE STUDY RES DESIG
   Ardimento P, 2008, J INF KNOWL MANAG, V7, P197, DOI 10.1142/S0219649208002081
   Avgeriou P., 2016, DAGSTUHL REP, V6
   Baldassarre M. T., 2013, P 17 INT C EV ASS SO, P144, DOI [10.1145/2460999.2461020, DOI 10.1145/2460999.2461020]
   Baldassarre MT, 2009, WOSQ: 2009 ICSE WORKSHOP ON SOFTWARE QUALITY, P59, DOI 10.1109/WOSQ.2009.5071558
   Baldassarre MT, 2003, PROC IEEE INT CONF S, P105, DOI 10.1109/ICSM.2003.1235411
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Besker T, 2018, PROC IEEE INT CONF S, P415, DOI 10.1109/ICSME.2018.00051
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Caivano D, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P288, DOI 10.1109/CSMR.2005.20
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   CONTE SD, 1985, ADV COMPUT, V24, P1, DOI 10.1016/S0065-2458(08)60364-2
   Cunningham W., 1992, OOPSLA 92
   Digkas G, 2017, LECT NOTES COMPUT SC, V10475, P51, DOI 10.1007/978-3-319-65831-5_4
   DUNN OJ, 1964, TECHNOMETRICS, V6, P241, DOI 10.2307/1266041
   Falessi D, 2017, INT SYMP EMP SOFTWAR, P78, DOI 10.1109/ESEM.2017.14
   Feise Ronald J, 2002, BMC Med Res Methodol, V2, P8, DOI 10.1186/1471-2288-2-8
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   JORGENSEN M, 1995, IEEE T SOFTWARE ENG, V21, P674, DOI 10.1109/32.403791
   Lenarduzzi Valentina, 2020, Proceedings of 6th International Conference in Software Engineering for Defence Applications (SEDA 2018). Advances in Intelligent Systems and Computing (AISC 925), P165, DOI 10.1007/978-3-030-14687-0_15
   Lenarduzzi V., 2017, 11 EUR C INF SYST
   Lenarduzzi V, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110750
   Lenarduzzi V, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P37, DOI 10.1145/3340482.3342747
   Lenarduzzi V, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P501, DOI [10.1109/SANER48275.2020.9054821, 10.1109/saner48275.2020.9054821]
   Lenarduzzi V, 2017, PROC IEEE ACM INT C, P146, DOI 10.1109/ICSE-C.2017.122
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Martini A, 2015, INFORM SOFTWARE TECH, V67, P237, DOI 10.1016/j.infsof.2015.07.005
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Nugroho A, 2011, P 2 WORKSH MAN TECHN, P1
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Pardo C., 2010, ACM INT C PROCEEDING, P51, DOI DOI 10.1145/1961258.1961271
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Runeson P, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ISSRE.2003.1251026
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saarimäki N, 2019, EUROMICRO CONF PROC, P317, DOI 10.1109/SEAA.2019.00055
   Saarimäki N, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P98, DOI 10.1109/TechDebt.2019.00028
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   Taibi D, 2017, INFORM SOFTWARE TECH, V92, P223, DOI 10.1016/j.infsof.2017.08.008
   Tollin F.A.F. I., 2017, EASE 17, P61
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Vassallo C., 2019, EMPIR SOFTW ENG, P139
   Vassallo C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P38, DOI 10.1109/SANER.2018.8330195
   Vaucher S, 2009, WORK CONF REVERSE EN, P145, DOI 10.1109/WCRE.2009.23
   Wohlin C., 2012, Experimentation in Software Engineering
   Zazworka N, 2014, SOFTWARE QUAL J, V22, P403, DOI 10.1007/s11219-013-9200-8
NR 50
TC 24
Z9 25
U1 1
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2020
VL 128
AR 106377
DI 10.1016/j.infsof.2020.106377
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NZ0FW
UT WOS:000576767100010
DA 2024-07-18
ER

PT J
AU Geraldi, RT
   Reinehr, S
   Malucelli, A
AF Geraldi, Ricardo Theis
   Reinehr, Sheila
   Malucelli, Andreia
TI Software product line applied to the internet of things: A systematic
   literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Internet of things; Software product line; Variability management;
   Product family engineering; Families of systems
ID IOT; VARIABILITY; SERVICE; QUALITY; MODELS
AB Context: Internet of Things (IoT) is a promising paradigm due to the growing number of devices that may be connected, defined as "things". Managing these "things" is still considered a challenge. One way to overcome this challenge may be by adopting the software product line (SPL) paradigm and the variability management (VM) activity. SPL engineering consists of mechanisms that provide identification, representation, and traceability, which may be helpful to "things" management supported by VM organizational and technical activities.
   Objective: This research aims to investigate how SPL engineering has been applied along with the IoT paradigm, as well as how VM is being carried out.
   Method: A systematic literature review (SLR) was conducted considering papers available until March 2019. This systematic review identified 1039 papers. After eliminating the duplicated titles and the ones not related to the review, 112 papers remained. The number of papers was narrowed to 56 after applying the exclusion criteria.
   Results: The results provide evidence on the diversity of proposed SPLs used to specify approaches for managing IoT systems. However, most SPLs and research developed for IoT lack a systematic and detailed specification to ensure their quality, as well as tailoring guidelines for further use.
C1 [Geraldi, Ricardo Theis; Reinehr, Sheila; Malucelli, Andreia] Pontificia Univ Catolica Parana PUCPR, Grad Program Comp Sci PPGIa, Curitiba, Parana, Brazil.
C3 Pontificia Universidade Catolica do Parana
RP Malucelli, A (corresponding author), Pontificia Univ Catolica Parana PUCPR, Grad Program Comp Sci PPGIa, Curitiba, Parana, Brazil.
EM ricardo.geraldi@ppgia.pucpr.br; sheila.reinehr@pucpr.br;
   malu@ppgia.pucpr.br
RI Reinehr, Sheila/J-6613-2013
OI Reinehr, Sheila/0000-0001-9430-7713; Theis Geraldi,
   Ricardo/0000-0002-6167-4792
FU Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior - Brasil
   (CAPES) [001]
FX This study was financed in part by the Coordenacao de Aperfeicoamento de
   Pessoal de Nivel Superior - Brasil (CAPES) - Finance Code 001.
CR Abbas Asad, 2017, Journal of Theoretical and Applied Information Technology, V95, P1300
   Abbas A, 2018, IEEE ACCESS, V6, P12228, DOI 10.1109/ACCESS.2018.2806944
   Abbas A, 2017, IEEE ACCESS, V5, P3971, DOI 10.1109/ACCESS.2017.2680470
   Amja AM, 2016, 2016 SIXTH INTERNATIONAL CONFERENCE ON INNOVATIVE COMPUTING TECHNOLOGY (INTECH), P15, DOI 10.1109/INTECH.2016.7845015
   Anon F, 2014, 2014 IEEE International Conference (iThings) - 2014 IEEE International Conference on Green Computing and Communications (GreenCom) - 2014 IEEE International Conference on Cyber-Physical-Social Computing (CPS), P132, DOI 10.1109/iThings.2014.28
   [Anonymous], 2013, SYSTEMS SOFTWARE VAR, DOI DOI 10.1007/978-3-642-36583-6_12
   [Anonymous], 2017, P 7 INT S BUSINESS M
   [Anonymous], 2017, INT C EM TECHN DEV C, DOI DOI 10.1007/978-3-319-67837-5_6
   [Anonymous], 2017, J COMPUT SCI
   [Anonymous], 2012, P 16 INT SOFTW PROD
   [Anonymous], SYMMETRY BASEL
   [Anonymous], P EUR C SERV CLOUD C
   [Anonymous], P INT C SOFTW PROD L
   [Anonymous], 2018, TELKOMNIKA
   [Anonymous], P AS PAC SOFTW ENG C
   [Anonymous], 2016, 2016 12 IEEE ASME IN
   [Anonymous], P INT C MOD ENG SOFT
   [Anonymous], P 2 WORKSH SOC HUM E, DOI DOI 10.1145/3098322.3098323
   [Anonymous], CEUR WORKSHOP P
   Ayala Inmaculada, 2014, Ubiquitous Computing and Ambient Intelligence. Personalisation and User Adapted Services. 8th International Conference, UCAmI 2014. Proceedings: LNCS 8867, P304, DOI 10.1007/978-3-319-13102-3_51
   Ayala I, 2016, ADV INTELL SYST, V473, P263, DOI 10.1007/978-3-319-40159-1_22
   Ayala I, 2016, LECT NOTES ARTIF INT, V9872, P155, DOI 10.1007/978-3-319-45889-2_12
   Ayala I, 2015, SENSORS-BASEL, V15, P15640, DOI 10.3390/s150715640
   Baresi L, 2012, COMPUTER, V45, P42, DOI 10.1109/MC.2012.289
   Barney S, 2012, INFORM SOFTWARE TECH, V54, P651, DOI 10.1016/j.infsof.2012.01.008
   Bosch J, 2015, IEEE SOFTWARE, V32, P44, DOI 10.1109/MS.2015.74
   Buyya R., 2016, Internet of Things: Principles and Paradigms, DOI [10.1016/C2015-0-04135-1, DOI 10.1016/C2015-0-04135-1]
   Capilla R., 2013, SYSTEMS SOFTWARE VAR
   Cecchinel C, 2016, ASIA PAC SOFWR ENG, P329, DOI [10.1109/APSEC.2016.15, 10.1109/APSEC.2016.053]
   Cetina C, 2009, COMPUTER, V42, P37, DOI 10.1109/MC.2009.309
   Chen L., 2009, P 13 INT SOFTWARE PR, P81
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Clements P., 2002, Software product lines
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Damiani Ferruccio, 2017, Integrated Formal Methods. 13th International Conference, IFM 2017. Proceedings: LNCS 10510, P111, DOI 10.1007/978-3-319-66845-1_8
   DeFranco J, 2017, INNOV SYST SOFTW ENG, V13, P81, DOI 10.1007/s11334-017-0301-6
   Di Cola S, 2016, L N INST COMP SCI SO, V169, P419, DOI 10.1007/978-3-319-47063-4_43
   dos Santos EL, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI), P31, DOI [10.1109/1R1.2018.00013, 10.1109/IRI.2018.00013]
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Gamez N, 2013, INFORM SOFTWARE TECH, V55, P563, DOI 10.1016/j.infsof.2012.06.012
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Guinea AS, 2016, J SYST SOFTWARE, V118, P251, DOI 10.1016/j.jss.2016.05.024
   Jazayeri B, 2017, LECT NOTES COMPUT SC, V10601, P573, DOI 10.1007/978-3-319-69035-3_42
   Kang K. C., 1990, Technical Report
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B., 2007, ENGINEERING, V45, P1051
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kneer F, 2016, COMM COM INF SC, V639, P732, DOI 10.1007/978-3-319-46254-7_59
   Köksal Ö, 2019, PRECIS AGRIC, V20, P926, DOI 10.1007/s11119-018-09624-8
   Krupitzer C, 2015, PERVASIVE MOB COMPUT, V17, P184, DOI 10.1016/j.pmcj.2014.09.009
   Lee I, 2015, BUS HORIZONS, V58, P431, DOI 10.1016/j.bushor.2015.03.008
   Lee J, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P131
   Logre I, 2014, LECT NOTES COMPUT SC, V8569, P101
   Marimuthu C, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON INTERNET OF THINGS (ITHINGS) AND IEEE GREEN COMPUTING AND COMMUNICATIONS (GREENCOM) AND IEEE CYBER, PHYSICAL AND SOCIAL COMPUTING (CPSCOM) AND IEEE SMART DATA (SMARTDATA), P773, DOI 10.1109/iThings-GreenCom-CPSCom-SmartData.2016.163
   Mauro J, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P41, DOI 10.1145/2866614.2866620
   McGee ET, 2016, PROCEEDINGS OF 2016 IEEE/ACM 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P115, DOI [10.1145/2897053.2897062, 10.1109/SEAMS.2016.021]
   Mens K, 2017, IEEE SOFTWARE, V34, P58, DOI 10.1109/MS.2017.4121225
   Miorandi D, 2012, AD HOC NETW, V10, P1497, DOI 10.1016/j.adhoc.2012.02.016
   Mohabbati B, 2013, INFORM SOFTWARE TECH, V55, P1845, DOI 10.1016/j.infsof.2013.05.006
   Moritani BI, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P107, DOI 10.1145/3109729.3109743
   Munoz DJ, 2017, 11TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2017) - COMPANION VOLUME, P205, DOI 10.1145/3129790.3129818
   Munoz DJ, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P131, DOI 10.1145/3109729.3109744
   Neskovic S, 2015, COMPUT SCI INF SYST, V12, P961, DOI 10.2298/CSIS141031035N
   Pessoa L, 2017, INFORM SOFTWARE TECH, V86, P54, DOI 10.1016/j.infsof.2017.02.002
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Sharif N, 2018, J OCUL PHARMACOL TH, V34, P1, DOI 10.1089/jop.2017.29037.int
   Sinnhofer AD, 2018, LECT NOTES BUS INF P, V309, P67, DOI 10.1007/978-3-319-78428-1_4
   Smiari P, 2018, EUROMICRO CONF PROC, P111, DOI 10.1109/SEAA.2018.00027
   Suri K, 2018, LECT NOTES COMPUT SC, V10969, P119, DOI 10.1007/978-3-319-94376-3_8
   Thurimella AK, 2012, INFORM SOFTWARE TECH, V54, P933, DOI 10.1016/j.infsof.2012.02.005
   Tomlein M, 2016, 2016 IEEE 4TH INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD (FICLOUD 2016), P9, DOI 10.1109/FiCloud.2016.10
   Tomlein M, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P247, DOI 10.1109/WICSA.2016.17
   van der Linden F. J., 2007, Software Product Lines in Action: the Best Industrial Practice in Product Line Engineering
   Venckauskas A, 2016, SECUR COMMUN NETW, V9, P3324, DOI 10.1002/sec.1537
   Venckauskas A, 2016, SENSORS-BASEL, V16, DOI 10.3390/s16050670
   Weckesser M, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P98, DOI 10.1145/3233027.3233030
   White BJ, 2017, COGN SCI TECHNOL, P1, DOI 10.1007/978-981-10-0213-7_1
   Whitmore A, 2015, INFORM SYST FRONT, V17, P261, DOI 10.1007/s10796-014-9489-2
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Yang GZ, 2015, 2015 12TH INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS AND KNOWLEDGE DISCOVERY (FSKD), P1607, DOI 10.1109/FSKD.2015.7382185
NR 82
TC 11
Z9 11
U1 0
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2020
VL 124
AR 106293
DI 10.1016/j.infsof.2020.106293
PG 30
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LP3MD
UT WOS:000534222000001
DA 2024-07-18
ER

PT J
AU Yuan, W
   Lu, S
   Sun, HL
   Liu, XD
AF Yuan, Wei
   Lu, Shan
   Sun, Hailong
   Liu, Xudong
TI How are distributed bugs diagnosed and fixed through system logs?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software bug analysis; Distributed systems; Issue reports; System logs
AB Context Distributed systems are the backbone of today's computing ecosystems. Debugging distributed bugs is crucial and challenging. There are still many unknowns about debugging real-world distributed bugs, especially through system logs.
   Objective: This paper aims to provide a comprehensive study of how system logs can help diagnose and fix distributed bugs in practice.
   Method: The study was carried out with three core research questions (RQs): How to identify failures in distributed bugs through logs? How to find and utilize bug-related log entries to figure out the root causes? How are distributed bugs fixed and how are logs and patches related? To answer these questions, we studied 106 real-world distributed bugs randomly sampled from five widely used distributed systems, and manually checked the bug report, the log, the patch, the source code and other related information for each of these bugs.
   Results: Seven findings are observed and the main findings include: (1) For only about half of the distributed bugs, the failures are indicated by FATAL or ERROR log entries. FATAL are not always fatal, and INFO could be fatal. (2) For more than half of the studied bugs, root-cause diagnosis relies on log entries that are not part of the failure symptoms. (3) One third of the studied bugs are fixed by eliminating end symptoms instead of root causes. Finally, a distributed bug dataset with the in-depth analysis has been released to the research community.
   Conclusion: The findings in our study reveal the characteristics of distributed bugs, the differences from debugging single-machine system bugs, and the usages and limitations of existing logs. Our study also provides guidance and opportunities for future research on distributed bug diagnosis, fixing, and log analysis and enhancement.
C1 [Yuan, Wei; Sun, Hailong; Liu, Xudong] Beihang Univ, Sch Comp Sci & Engn, SKLSDE Lab, Beijing 100191, Peoples R China.
   [Yuan, Wei; Lu, Shan] Univ Chicago, Chicago, IL 60637 USA.
   [Yuan, Wei; Sun, Hailong; Liu, Xudong] Beijing Adv Innovat Ctr Big Data & Brain Comp, Beijing 100191, Peoples R China.
C3 Beihang University; University of Chicago
RP Sun, HL (corresponding author), Beihang Univ, Sch Comp Sci & Engn, SKLSDE Lab, Beijing 100191, Peoples R China.
EM cindyyuanwei@buaa.edu.cn; shanlu@uchicago.edu; sunhl@buaa.edu.cn;
   liuxd@act.buaa.edu.cn
RI liu, xudong/HJG-8137-2022; Luo, Shan/JEP-7010-2023
OI Yuan, Wei/0000-0002-8709-8252
FU National Key Research and Development Program of China [2016YFB1000804];
   National Natural Science Foundation [61932007, 61972013, 61702024,
   61421003]
FX We would like to thank the anonymous reviewers for their insightful
   feedback and comments. This work was supported partly by National Key
   Research and Development Program of China under Grant No.
   2016YFB1000804, partly by National Natural Science Foundation under
   Grant No. (61932007, 61972013, 61702024, 61421003).
CR [Anonymous], 2018, CLOUD IMPACTS US EC
   [Anonymous], 2014, P 2014 INT S SOFTWAR, DOI DOI 10.1145/2610384.2610386
   [Anonymous], KEYNOTE FROM LADIS
   [Anonymous], P INT C ARCH SUPP PR
   [Anonymous], WORKSH HOT TOP CLOUD
   [Anonymous], TECH REP
   [Anonymous], P S OP SYST DES IMPL
   Bailis P, 2017, COMMUN ACM, V60, P46, DOI 10.1145/3052942
   Beschastnikh I, 2016, COMMUN ACM, V59, P32, DOI 10.1145/2909480
   Bodík P, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P111
   Bold N, 2019, IEEE ACCESS, V7, P164194, DOI 10.1109/ACCESS.2019.2952157
   Chen M, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P36, DOI 10.1109/ICAC.2004.1301345
   Chhajed S., 2015, Learning ELK stack
   Chmiel R., 2004, SIGCSE Bulletin, V36, P17, DOI 10.1145/1028174.971310
   Dai T, 2018, INT CONF CLOUD ENG, P1, DOI 10.1109/IC2E.2018.00022
   Ding Rui, 2015, P 2015 USENIX TECHN, P139
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   Gao Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P539, DOI 10.1145/3236024.3236030
   Gunawi H. S., 2014, P ACM S CLOUD COMP S, P1
   He SL, 2016, PROC INT SYMP SOFTW, P207, DOI 10.1109/ISSRE.2016.21
   Laprie Jean-Claude., 1995, Proceedings of the Twenty-Fifth International Conference on Fault-tolerant Computing, FTCS'95, P42
   Leesatapornwongsa T, 2016, ACM SIGPLAN NOTICES, V51, P517, DOI 10.1145/2954679.2872374
   Liang YL, 2007, IEEE DATA MINING, P583, DOI 10.1109/ICDM.2007.46
   Lin QW, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P102, DOI 10.1145/2889160.2889232
   Liu Xuezheng., 2008, Proceedings of the 5th USENIX Symposium on Networked Systems Design and Implementation, NSDI'08, P423
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Mesbahi MR, 2017, 2017 3RD INTERNATIONAL CONFERENCE ON WEB RESEARCH (ICWR), P56, DOI 10.1109/ICWR.2017.7959305
   Moreno L, 2014, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME.2014.37
   Nagaraj K, 2012, P 9 USENIX C NETW SY, P353
   Shang WY, 2012, PROC INT CONF SOFTW, P1583, DOI 10.1109/ICSE.2012.6227031
   Sinha S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P153
   Stearley Jon, 2010, SLAML
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Xu TY, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P619
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yang S.Q., 2010, USENIX ANN TECHN C A, P1
   Yuan D, 2010, ACM SIGPLAN NOTICES, V45, P143, DOI 10.1145/1735971.1736038
   Yuan Ding, 2014, 11 USENIX S OPERATIN, P249
   Zhang YL, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P19, DOI [10.1145/3132747.3132768, 10.1109/SP.2017.12]
   Zhao X., 2014, 11 USENIX S OP SYST, P629
   Zhao X, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P603
NR 42
TC 4
Z9 4
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2020
VL 119
AR 106234
DI 10.1016/j.infsof.2019.106234
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KL2WU
UT WOS:000513290100004
DA 2024-07-18
ER

PT J
AU Menzies, T
   Shepperd, M
AF Menzies, Tim
   Shepperd, Martin
TI "Bad smells" in software analytics papers
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID STATISTICAL POWER; PRACTICAL GUIDE; SIZE; REPLICATION; CONFIDENCE;
   SELECTION; ACCURACY; TESTS; BIAS
AB Context There has been a rapid growth in the use of data analytics to underpin evidence-based software engineering. However the combination of complex techniques, diverse reporting standards and poorly understood underlying phenomena are causing some concern as to the reliability of studies.
   Objective: Our goal is to provide guidance for producers and consumers of software analytics studies (computational experiments and correlation studies).
   Method: We propose using "bad smells", i.e., surface indications of deeper problems and popular in the agile software community and consider how they may be manifest in software analytics studies.
   Results: We list 12 "bad smells" in software analytics papers (and show their impact by examples).
   Conclusions: We believe the metaphor of bad smell is a useful device. Therefore we encourage more debate on what contributes to the validity of software analytics studies (so we expect our list will mature over time).
C1 [Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   [Shepperd, Martin] Brunel Univ, Dept Comp Sci, BSEL, London UB8 3PH, England.
C3 North Carolina State University; Brunel University
RP Menzies, T (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM timm@ieee.org
RI Shepperd, Martin/F-9683-2013; Menzies, Tim/X-7680-2019
OI Shepperd, Martin/0000-0003-1874-6145; Menzies, Tim/0000-0002-5040-3196
CR Aarts AA, 2015, SCIENCE, V349, DOI 10.1126/science.aac4716
   Agrawal Amritanshu, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE). Proceedings, P1050, DOI 10.1145/3180155.3180197
   Agrawal A, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P245, DOI 10.1145/3183519.3183549
   Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   [Anonymous], 2022, Introduction to robust estimation and hypothesis testing
   [Anonymous], 2011, CIDR
   [Anonymous], P 17 INT C EV ASS SO
   [Anonymous], 1997, Randomization, Bootstrap and Monte Carlo Methods in Biology
   [Anonymous], IEEE Transactions on Software Engineering
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Beck K., 1999, REFACTORING IMPROVIN, V1, P75
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   Bender R, 2001, J CLIN EPIDEMIOL, V54, P343, DOI 10.1016/S0895-4356(00)00314-0
   Benjamini Y, 2001, ANN STAT, V29, P1165
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   BLAIR RC, 1985, PSYCHOL BULL, V97, P119, DOI 10.1037/0033-2909.97.1.119
   Booth A., 1997, HLTH LIB REV, V14, P157
   Borenstein M., 2009, INTRO METAANALYSIS
   Budgen D, 2011, EMPIR SOFTW ENG, V16, P244, DOI 10.1007/s10664-010-9139-3
   Button KS, 2013, NAT REV NEUROSCI, V14, P365, DOI 10.1038/nrn3475
   Carpenter J, 2000, STAT MED, V19, P1141, DOI 10.1002/(SICI)1097-0258(20000515)19:9<1141::AID-SIM479>3.0.CO;2-F
   CARVER RP, 1993, J EXP EDUC, V61, P287, DOI 10.1080/00220973.1993.10806591
   Cawley GC, 2010, J MACH LEARN RES, V11, P2079
   Chen ZH, 2005, IEEE SOFTWARE, V22, P38, DOI 10.1109/MS.2005.151
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Cohen J., 1988, STAT POWER ANAL BEHA
   Colquhoun D, 2014, ROY SOC OPEN SCI, V1, DOI 10.1098/rsos.140216
   COURTNEY RE, 1993, SOFTWARE ENG J, V8, P5, DOI 10.1049/sej.1993.0002
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   De Veaux RD, 2005, STAT SCI, V20, P231, DOI 10.1214/088342305000000269
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Earp BD, 2015, FRONT PSYCHOL, V6, DOI 10.3389/fpsyg.2015.00621
   Efron B., 1993, MONO STAT APPL PROBA
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Erceg-Hurn DM, 2008, AM PSYCHOL, V63, P591, DOI 10.1037/0003-066X.63.7.591
   Fu W., 2017, CORR, P1
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Gelman A., 2013, Bayesian Data Analysis, V3 ed
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Goodman SN, 2016, SCI TRANSL MED, V8, DOI 10.1126/scitranslmed.aaf5027
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hawkins DM, 2004, J CHEM INF COMP SCI, V44, P1, DOI 10.1021/ci0342472
   Healy, 2018, DATA VISUALIZATION P
   Hoaglin D. C., 1983, Understanding Robust and Exploratory Data Analysis
   HOLTE RC, 1993, MACH LEARN, V11, P63, DOI 10.1023/A:1022631118932
   Huang Q., 2017, POWER FALSE DISCOVER
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Ioannidis JPA, 2005, PLOS MED, V2, P696, DOI 10.1371/journal.pmed.0020124
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Johnson P., 2012, IEEE Software, V29, P94, DOI 10.1109/MS.2012.127
   Jorgensen M, 2016, J SYST SOFTWARE, V116, P133, DOI 10.1016/j.jss.2015.03.065
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham BA, 2008, IET SOFTW, V2, P37, DOI 10.1049/iet-sen:20070044
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Ko AJ, 2015, EMPIR SOFTW ENG, V20, P110, DOI 10.1007/s10664-013-9279-3
   Krishna Rahul, 2017, 2018 IEEE/ACM 40th International Conference on Software Engineering: Software Engineering in Practice Track (ICSE-SEIP). Proceedings, P306, DOI 10.1145/3183519.3183548
   Krishna R., SIMPLER TRANSFER LEA
   Krishna R, 2016, 2016 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON BIG DATA SOFTWARE ENGINEERING (BIGDSE 2016), P65, DOI [10.1109/BIGDSE.2016.019, 10.1145/2896825.2896836]
   Lakens D, 2017, SOC PSYCHOL PERS SCI, V8, P355, DOI 10.1177/1948550617697177
   Lakens D, 2014, PERSPECT PSYCHOL SCI, V9, P278, DOI 10.1177/1745691614528520
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liebchen G., 2016, P 12 INT C PRED MOD
   Liebchen G., 2008, DATA SETS DATA QUALI
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Loken E, 2017, SCIENCE, V355, P584, DOI 10.1126/science.aal3618
   Madeyski L, 2017, J INTELL FUZZY SYST, V32, P1509, DOI 10.3233/JIFS-169146
   Maxwell SE, 2008, ANNU REV PSYCHOL, V59, P537, DOI 10.1146/annurev.psych.59.103006.093735
   McClelland GH, 2000, AM PSYCHOL, V55, P963, DOI 10.1037/0003-066X.55.8.963
   Menzies T., 2012, EDITORIAL SPECIAL IS
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Munafò MR, 2017, NAT HUM BEHAV, V1, DOI 10.1038/s41562-016-0021
   Myatt G., 2009, MAKING SENSE DATA
   Nair V., 2018, MSR 18
   Nickerson R. S., 1998, REV GEN PSYCHOL, V2, P175, DOI DOI 10.1037/1089-2680.2.2.175
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Rosli MM, 2013, ASIA PAC SOFWR ENG, P116, DOI 10.1109/APSEC.2013.26
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saltelli A, 2000, STAT SCI, V15, P377, DOI 10.1214/ss/1009213004
   Sarkar A, 2015, IEEE INT CONF AUTOM, P342, DOI 10.1109/ASE.2015.45
   Sayyad AS, 2013, INT WORK REAL ARTIF, P21, DOI 10.1109/RAISE.2013.6615200
   Schmidt F.L., 2014, METHODS META ANAL CO, V3rd
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Simmons JP, 2011, PSYCHOL SCI, V22, P1359, DOI 10.1177/0956797611417632
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Smaldino PE, 2016, ROY SOC OPEN SCI, V3, DOI 10.1098/rsos.160384
   Snoek J., 2012, Advances in Neural Information Processing Systems, V25, DOI DOI 10.48550/ARXIV.1206.2944
   Spence JR, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0162874
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Stol KJ, 2013, 2013 2ND SEMAT WORKSHOP ON A GENERAL THEORY OF SOFTWARE ENGINEERING (GTSE), P5, DOI 10.1109/GTSE.2013.6613863
   Storn R., 1997, J GLOBAL OPTIM, V11, P341, DOI [DOI 10.1023/A:1008202821328, 10.1023/A:1008202821328]
   Szucs D, 2017, PLOS BIOL, V15, DOI 10.1371/journal.pbio.2000797
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Theisen C, 2017, PROC IEEE ACM INT C, P402, DOI 10.1109/ICSE-C.2017.51
   Van Aken D, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1009, DOI 10.1145/3035918.3064029
   Whigham PA, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2738037
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
   Zimmerman DW, 1998, J EXP EDUC, V67, P55, DOI 10.1080/00220979809598344
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 113
TC 22
Z9 22
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2019
VL 112
BP 35
EP 47
DI 10.1016/j.infsof.2019.04.005
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA IA9TG
UT WOS:000469899100003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Shippey, T
   Bowes, D
   Hall, T
AF Shippey, Thomas
   Bowes, David
   Hall, Tracy
TI Automatically identifying code features for software defect prediction:
   Using AST N-grams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID FAULTS; SYSTEM
AB Context Identifying defects in code early is important. A wide range of static code metrics have been evaluated as potential defect indicators. Most of these metrics offer only high level insights and focus on particular pre-selected features of the code. None of the currently used metrics clearly performs best in defect prediction.
   Objective: We use Abstract Syntax Tree (AST) n-grams to identify features of defective Java code that improve defect prediction performance.
   Method: Our approach is bottom-up and does not rely on pre-selecting any specific features of code. We use non-parametric testing to determine relationships between AST n-grams and faults in both open source and commercial systems. We build defect prediction models using three machine learning techniques.
   Results: We show that AST n-grams are very significantly related to faults in some systems, with very large effect sizes. The occurrence of some frequently occurring AST n-grams in a method can mean that the method is up to three times more likely to contain a fault. AST n-grams can have a large effect on the performance of defect prediction models.
   Conclusions: We suggest that AST n-grams offer developers a promising approach to identifying potentially defective code.
C1 [Shippey, Thomas] Univ Hertfordshire, Hatfield, Herts, England.
   [Bowes, David] Univ Cent Lancashire, Preston, Lancs, England.
   [Hall, Tracy] Univ Lancaster, Lancaster, England.
C3 University of Hertfordshire; University of Central Lancashire; Lancaster
   University
RP Hall, T (corresponding author), Univ Lancaster, Lancaster, England.
EM t.shippey@herts.ac.uk; dbowes@uclan.ac.uk; t.hall3@lancaster.ac.uk
OI Bowes, David/0000-0001-7014-2811; Hall, Tracy/0000-0002-2728-9014
FU UK's Engineering and Physical Sciences Research Council [EP/L011751/1];
   EPSRC [EP/L011751/1] Funding Source: UKRI
FX This work was partly funded by a grant from the UK's Engineering and
   Physical Sciences Research Council under grant number: EP/L011751/1. We
   would like to thank our collaborator for allowing us to use their source
   code, defect repository and version control systems.
CR Abebe S. L., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P235, DOI 10.1109/WCRE.2012.33
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P472, DOI 10.1145/2635868.2635901
   [Anonymous], 2010, 1152009 IEEE, P1, DOI [DOI 10.1109/IEEESTD.2010.5439063, 10.1109/IEEESTD.2010.5439063]
   [Anonymous], 2007, 6th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), DOI DOI 10.1145/1287624.1287632
   [Anonymous], 15 CREST OP WORKSH
   [Anonymous], 2007, P 4 INT WORKSH MIN S
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   ARNAOUDOVA V., 2010, Proceedings of the International Conference on Software Maintenance (ICSM) - ERA Track, P1
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Baxter I.D., 1998, CLONE DETECTION USIN
   Bell R., 2006, Proc. 2006 International Symposium on Software Testing and Analysis, P61
   Binkley D, 2009, J SYST SOFTWARE, V82, P1793, DOI 10.1016/j.jss.2009.06.036
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bowes David., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P330, DOI DOI 10.1145/2931037.2931039
   Butler S, 2009, WORK CONF REVERSE EN, P31, DOI 10.1109/WCRE.2009.50
   CORNFIELD J, 1951, J NATL CANCER I, V11, P1269
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2009, WORK CONF REVERSE EN, P135, DOI 10.1109/WCRE.2009.19
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Demsar J., 2008, WORKSH EV METH MACH
   Destefanis  G., 2012, P 27 ANN ACM S APPL, P1251
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Gil J, 2005, ACM SIGPLAN NOTICES, V40, P97, DOI 10.1145/1103845.1094819
   Göde N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P311, DOI 10.1145/1985793.1985836
   Gray David, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P96, DOI 10.1049/ic.2011.0012
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Nguyen HA, 2013, IEEE INT CONF AUTOM, P180, DOI 10.1109/ASE.2013.6693078
   Juergens E., 2009, DO CODE CLONES MATTE
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Khoshgoftaar T. M., 2010, 2010 Proceedings of 22nd International Conference on Tools with Artificial Intelligence (ICTAI 2010), P137, DOI 10.1109/ICTAI.2010.27
   Khoshgoftaar TM, 2004, EMPIR SOFTW ENG, V9, P229, DOI 10.1023/B:EMSE.0000027781.18360.9b
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Krinke J, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P57, DOI 10.1109/SCAM.2008.14
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Pascarella L, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P592, DOI 10.1109/SANER.2018.8330264
   Pradel M., 2017, TECHNICAL REPORT
   Rahman Foyzur, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P72, DOI 10.1109/MSR.2010.5463343
   Ratzinger J., 2008, Proceedings of the 2008 international working conference on Mining software repositories, P35, DOI [10.1145/1370750.1370759, DOI 10.1145/1370750.1370759]
   Raza A, 2006, LECT NOTES COMPUT SC, V4006, P71
   Romano J., 2006, P ANN M SO ASS I RES
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Roy C. K, 2007, QUEEN'S UNIVERSITY, V115
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Scott S, 1999, MACHINE LEARNING, PROCEEDINGS, P379
   Selim G. M. K., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P13, DOI 10.1109/WCRE.2010.11
   Shippey T, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962620
   Shivaji S, 2009, IEEE INT CONF AUTOM, P600, DOI 10.1109/ASE.2009.76
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Turban B., 2009, EMPIR SOFTW ENG, V14, P540
   Wahler V, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P128
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Weyuker EJ, 2010, EMPIR SOFTW ENG, V15, P277, DOI 10.1007/s10664-009-9111-2
   Williams C, 2008, P 2008 WORKSHOP DEFE, P32
   Zeller A., 2011, FAILURE IS 4 LETT WO
   Zhang HY, 2009, PROC IEEE INT CONF S, P274, DOI 10.1109/ICSM.2009.5306304
   Zhang M., 2011, J SOFT MAINT EVOL, V23
   Zhou YM, 2010, J SYST SOFTWARE, V83, P660, DOI 10.1016/j.jss.2009.11.704
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann T., 2007, P ICSE 2007 WORK 3 I, DOI [10.1109/PROMISE.2007.10, DOI 10.1109/PROMISE.2007.10]
   Zuse H., 1990, SOFTWARE COMPLEXITY
NR 81
TC 55
Z9 56
U1 0
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2019
VL 106
BP 142
EP 160
DI 10.1016/j.infsof.2018.10.001
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HF6XJ
UT WOS:000454381300009
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Ruohonen, J
   Rauti, S
   Hyrynsalmi, S
   Leppanen, V
AF Ruohonen, Jukka
   Rauti, Sampsa
   Hyrynsalmi, Sami
   Leppanen, Ville
TI A case study on software vulnerability coordination
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Vulnerability; Open source; Coordination; Social network; CVE; CWE;
   CVSS; NVD; MITRE; NIST
ID NETWORK STRUCTURE; MODELS; COLLABORATION; PROJECTS; IMPACT
AB Context Coordination is a fundamental tenet of software engineering. Coordination is required also for identifying discovered and disclosed software vulnerabilities with Common Vulnerabilities and Exposures (CVEs). Motivated by recent practical challenges, this paper examines the coordination of CVEs for open source projects through a public mailing list.
   Objective: The paper observes the historical time delays between the assignment of CVEs on a mailing list and the later appearance of these in the National Vulnerability Database (NVD). Drawing from research on software engineering coordination, software vulnerabilities, and bug tracking, the delays are modeled through three dimensions: social networks and communication practices, tracking infrastructures, and the technical characteristics of the CVEs coordinated.
   Method: Given a period between 2008 and 2016, a sample of over five thousand CVEs is used to model the delays with nearly fifty explanatory metrics. Regression analysis is used for the modeling.
   Results: The results show that the CVE coordination delays are affected by different abstractions for noise and prerequisite constraints. These abstractions convey effects from the social network and infrastructure dimensions. Particularly strong effect sizes are observed for annual and monthly control metrics, a control metric for weekends, the degrees of the nodes in the CVE coordination networks, and the number of references given in NVD for the CVEs archived. Smaller but visible effects are present for metrics measuring the entropy of the emails exchanged, traces to bug tracking systems, and other related aspects. The empirical signals are weaker for the technical characteristics.
   Conclusion: Software vulnerability and CVE coordination exhibit all typical traits of software engineering coordination in general. The coordination perspective elaborated and the case studied open new avenues for further empirical inquiries as well as practical improvements for the contemporary CVE coordination.
C1 [Ruohonen, Jukka; Rauti, Sampsa; Hyrynsalmi, Sami; Leppanen, Ville] Univ Turku, Dept Future Technol, FI-20014 Turun, Finland.
   [Hyrynsalmi, Sami] Tampere Univ Technol, Pori Dept, POB 300, FI-28101 Pori, Finland.
C3 University of Turku; Tampere University
RP Ruohonen, J (corresponding author), Univ Turku, Dept Future Technol, FI-20014 Turun, Finland.
EM juanruo@utu.fi
RI Hyrynsalmi, Sami/U-6315-2017; Ruohonen, Jukka/AFB-9028-2022
OI Hyrynsalmi, Sami/0000-0002-5073-3750; Ruohonen,
   Jukka/0000-0001-5147-3084; Leppanen, Ville/0000-0001-5296-677X
CR Ablon L., 2017, ZERO DAYS 1000 NIGHT
   Adams B, 2016, EMPIR SOFTW ENG, V21, P960, DOI 10.1007/s10664-015-9371-y
   Alhamzawi R, 2012, STAT MODEL, V12, P279, DOI 10.1177/1471082X1101200304
   Allodi L, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1483, DOI 10.1145/3133956.3133960
   Allodi L, 2017, LECT NOTES COMPUT SC, V10646, P23, DOI 10.1007/978-3-319-70004-5_2
   Allodi L, 2014, ACM T INFORM SYST SE, V17, DOI 10.1145/2630069
   [Anonymous], PLEAS WELC K SEIFR C
   [Anonymous], CVE REQ MANT 1 1 4 R
   [Anonymous], CWE VIEW WEAKN OR US
   [Anonymous], APPL COMPUT INF
   [Anonymous], COMM WEAKN EN
   [Anonymous], COMPL GUID COMM VULN
   [Anonymous], IEEE T SOFTWARE ENG
   [Anonymous], P INT S OP COLL OPEN
   [Anonymous], P 10 EUR C SOFTW ARC
   [Anonymous], CVE ID SYNT CHANG
   [Anonymous], CVE HOWTO
   [Anonymous], FWD CVE REQ SAMS AND
   [Anonymous], 2018, P 17 ANN WORKSH EC I
   [Anonymous], COMM VULN SCOR SYST
   [Anonymous], MOST VULNERABILITIES
   [Anonymous], MITRE IS ADD DAT INT
   [Anonymous], COMPUT EC
   [Anonymous], P 27 INT WORKSH SOFT
   [Anonymous], RE LIN DISTR SUBSCR
   [Anonymous], FREQ ASK QUEST
   [Anonymous], IEEE T BIG DATA
   [Anonymous], IEEE T DEPENDABLE SE
   [Anonymous], QUANUEG QUANTILE REG
   [Anonymous], P 16 WORKSH EC INF S
   [Anonymous], 2008, HICSS 08 P PROCEEDIN, DOI DOI 10.1109/HICSS.2008.58
   Arora A, 2010, INF ECON POLICY, V22, P164, DOI 10.1016/j.infoecopol.2009.10.002
   Bettenburg N, 2015, EMPIR SOFTW ENG, V20, P294, DOI 10.1007/s10664-013-9292-6
   Bettenburg N, 2013, EMPIR SOFTW ENG, V18, P375, DOI 10.1007/s10664-012-9205-0
   Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   Bilge L., 2012, CCS 12, P833, DOI [10.1145/2382196.2382284, DOI 10.1145/2382196.2382284]
   Bird C., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P568, DOI 10.1109/ICSM.2011.6080832
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   Blincoe K, 2015, IEEE T SOFTWARE ENG, V41, P969, DOI 10.1109/TSE.2015.2431680
   Bozorgi M., 2010, Proceedings of of 16th International Conference of on Knowledge discovery and data mining, P105
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Christen P., 2012, DATA MATCHING CONCEP, DOI DOI 10.1007/978-3-642-31164-2
   Christey S., 2013, BlackHat
   Christey S., 2002, Responsible Vulnerability Disclosure Process
   Conaldi G, 2013, SOC NETWORKS, V35, P237, DOI 10.1016/j.socnet.2012.12.003
   Conaldi G, 2012, ORGAN RES METHODS, V15, P385, DOI 10.1177/1094428111430541
   CONWAY ME, 1968, DATAMATION, V14, P28
   Crowston K., 2006, Knowledge Technology & Policy, V18, P65, DOI 10.1007/s12130-006-1004-8
   Crowston K, 2017, J INTERNET SERV APPL, V8, DOI 10.1186/s13174-017-0061-4
   da Costa DA, 2018, EMPIR SOFTW ENG, V23, P334, DOI 10.1007/s10664-017-9520-6
   DASH S, 2018, IEEE 24 NAT C COMM N, P1, DOI DOI 10.1109/NCC.2018.8599940
   Dehghani M, 2012, 2012 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM), P1132, DOI 10.1109/ASONAM.2012.195
   Eyolfson J., 2011, WORKING C MINING SOF, P153, DOI DOI 10.1145/1985441.1985464
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Giacalone M, 2018, QUAL QUANT, V52, P1831, DOI 10.1007/s11135-017-0571-y
   Goseva-Popstojanova K, 2015, INFORM SOFTWARE TECH, V68, P18, DOI 10.1016/j.infsof.2015.08.002
   Guanting Tang, 2014, Knowledge and Information Systems, V41, P1, DOI 10.1007/s10115-013-0658-2
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Howison J, 2014, MIS QUART, V38, P29, DOI 10.25300/MISQ/2014/38.1.02
   Joh H, 2017, INT J INF SECUR, V16, P673, DOI 10.1007/s10207-016-0345-x
   Johnson P, 2016, COMPUT SECUR, V62, P278, DOI 10.1016/j.cose.2016.08.004
   Johnson P, 2016, INFORM SOFTWARE TECH, V70, P181, DOI 10.1016/j.infsof.2015.06.001
   Johnston R, 2018, RELIAB ENG SYST SAFE, V176, P52, DOI 10.1016/j.ress.2018.03.024
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Koenker R, 2001, J ECON PERSPECT, V15, P143, DOI 10.1038/s41592-019-0406-y
   KOENKER R, 1982, ECONOMETRICA, V50, P43, DOI 10.2307/1912528
   Koenker R, 1999, J AM STAT ASSOC, V94, P1296, DOI 10.2307/2669943
   Kuhn M, 2008, J STAT SOFTW, V28, P1, DOI 10.18637/jss.v028.i05
   Kuk G, 2006, MANAGE SCI, V52, P1031, DOI 10.1287/mnsc.1060.0551
   Kula RG, 2010, LECT NOTES COMPUT SC, V6156, P32, DOI 10.1007/978-3-642-13792-1_5
   Laszka A, 2016, LECT NOTES COMPUT SC, V9879, P161, DOI 10.1007/978-3-319-45741-3_9
   Lee CY, 2018, APPL SOFT COMPUT, V68, P961, DOI 10.1016/j.asoc.2017.04.055
   Lee G, 2013, IEEE T SOFTWARE ENG, V39, P1753, DOI 10.1109/TSE.2013.40
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Licorish SA, 2014, INFORM SOFTWARE TECH, V56, P1578, DOI 10.1016/j.infsof.2014.02.004
   Linares -Vasquez M., 2017, IEEEACM 14 INT C MIN, P1
   Lubarski P, 2012, 2012 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM), P86, DOI 10.1109/ASONAM.2012.24
   Lütkepohl H, 2007, J ECONOMETRICS, V136, P319, DOI 10.1016/j.jeconom.2005.11.014
   MacKinnon J. G., 1985, J ECON, V29
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   Sierra JM, 2018, INFORM SOFTWARE TECH, V94, P111, DOI 10.1016/j.infsof.2017.10.004
   McChesney IR, 1997, SOFTWARE QUAL J, V6, P235, DOI 10.1023/A:1018568220273
   McQueen MA, 2009, System Sciences, P1, DOI 10.1109/HICSS.2009.186
   Meneely A., 2010, P 4 ACM INT S EMP SO
   Nguyen VietHung., 2013, P 8 ACM SIGSAC S INF, P493
   Nia R., 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P201, DOI 10.1109/MSR.2010.5463342
   Paasivaara M., 2003, Software Process Improvement and Practice, V8, P183, DOI 10.1002/spip.187
   Parraguez P, 2015, IEEE T ENG MANAGE, V62, P604, DOI 10.1109/TEM.2015.2469680
   Poo-Caamaño G, 2017, J INTERNET SERV APPL, V8, DOI 10.1186/s13174-017-0063-2
   Ring T, 2015, COMPUT FRAUD SECUR, P12
   Rodriguez-Perez G, 2017, INT WORKS EMERG TREN, P29, DOI 10.1109/WETSoM.2017.6
   Ruohonen Jukka, 2016, 2016 IEEE Tenth International Conference on Research Challenges in Information Science (RCIS), P1, DOI 10.1109/RCIS.2016.7549301
   Ruohonen J, 2017, INT WORKSHOP DATABAS, P93, DOI 10.1109/DEXA.2017.35
   Ruohonen J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY (CIT), P253, DOI 10.1109/CIT.2017.55
   Ruohonen J, 2017, COMPUT SCI INF SYST, V14, P537, DOI 10.2298/CSIS161010010R
   Ruohonen J, 2015, COMPUT SECUR, V55, P1, DOI 10.1016/j.cose.2015.07.001
   Sabottke C, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P1041
   Schmid MR, 2015, DIGIT INVEST, V14, pS116, DOI 10.1016/j.diin.2015.05.012
   Schoch D, 2017, SOC NETWORKS, V50, P46, DOI 10.1016/j.socnet.2017.03.010
   SLIWERSKI J, 2005, P 2005 INT WORKSH MI, P1, DOI DOI 10.1145/1083142.1083147
   Stevanovic M, 2017, INT J INF SECUR, V16, P115, DOI 10.1007/s10207-016-0331-3
   Syed R, 2018, COMPUT HUM BEHAV, V80, P207, DOI 10.1016/j.chb.2017.11.024
   Temizkan O, 2012, J MANAGE INFORM SYST, V28, P305, DOI 10.2753/MIS0742-1222280411
   Tian Y, 2016, EMPIR SOFTW ENG, V21, P2298, DOI 10.1007/s10664-015-9409-1
   Toral SL, 2010, INFORM SOFTWARE TECH, V52, P296, DOI 10.1016/j.infsof.2009.10.007
   Toral SL, 2009, BEHAV INFORM TECHNOL, V28, P405, DOI 10.1080/01449290903121394
   Tsipenyuk K, 2005, IEEE SECUR PRIV, V3, P81, DOI 10.1109/MSP.2005.159
   Wang QN, 2014, 2014 INTERNATIONAL CONFERENCE ON DATA SCIENCE AND ADVANCED ANALYTICS (DSAA), P470, DOI 10.1109/DSAA.2014.7058114
   Wijayasekara D, 2012, C HUM SYST INTERACT, P89, DOI 10.1109/HSI.2012.22
   Wohlin C., 2012, Experimentation in Software Engineering
   Wolf T, 2009, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2009.5070503
   Wolf T, 2009, IEEE SOFTWARE, V26, P58, DOI 10.1109/MS.2009.16
   Wu Y., 2005, SIGIR 2005. Proceedings of the Twenty-Eighth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P665, DOI 10.1145/1076034.1076180
   Wu Yan., 2010, Proceedings of the 2010 ICSE Workshop on Software Engineering for Secure Systems, P22
   Younis A, 2016, IFIP ADV INF COMM TE, V471, P62, DOI 10.1007/978-3-319-33630-5_5
   Zanetti MS, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P49, DOI 10.1109/CHASE.2013.6614731
   Zanetti MS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1032, DOI 10.1109/ICSE.2013.6606653
   Zangerle E, 2013, SOC NETW ANAL MIN, V3, P889, DOI 10.1007/s13278-013-0108-x
   Zeileis A., 2004, J STAT SOFTW, V11, P1, DOI DOI 10.18637/JSS.V011.I10
   Zhou B, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P507, DOI 10.1109/ISSRE.2015.7381843
NR 122
TC 10
Z9 12
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2018
VL 103
BP 239
EP 257
DI 10.1016/j.infsof.2018.06.005
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GU9ZY
UT WOS:000445717000019
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Soares, DM
   de Lima, ML
   Plastino, A
   Murta, L
AF Soares, Daricelio M.
   de Lima Junior, Manoel L.
   Plastino, Alexandre
   Murta, Leonardo
TI What factors influence the reviewer assignment to pull requests?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Pull request; Reviewer assignment; Association rules
AB Context: When external contributors want to collaborate with an open-source project, they can send a pull request to the project core team. Subsequently, a core team member is assigned to review the pull request. Recently, some techniques for recommending reviewers to analyze pull requests were proposed. However, they replicate previous (not always desired) patterns and do not provide the rationale behind the recommendation.
   Objective: This paper aims at understanding the factors that influence on assigning reviewers to pull requests and evaluating the extent of this influence.
   Method: To reach this goal, we mined association rules from 22,523 pull requests belonging to 3 projects hosted on GitHub. In addition to showing such patterns, we also present a qualitative analysis that explains why the patterns arose.
   Results: In summary our results indicate that (i) some reviewers always analyze smaller pull requests, with few commits and few files; (ii) some reviewers frequently (up to 58% of the times) analyze pull requests filed by inexperienced requesters; (iii) some reviewers have more chances (up to 25 times) to analyze pull requests filed by requesters of their acquaintance; and (iv) some reviewers have more chances (up to 20 times) to analyze pull requests containing files that they have recently changed.
   Conclusion: In particular, the results allow for the following conclusions: (i) factors such as number of commits and files in the pull request may influence the reviewers assignment; (ii) factors regarding the requester profile may influence on reviewer allocation; (iii) the social relationship between requester and reviewer exert influence on pull request evaluation, that is, when the reviewer knows the requester, his or her chances of evaluating such contributions may increase; and (iv) factors such as ownership and locality of pull request artifacts are important predictors for the reviewer. Furthermore, we point out that, besides identifying influence factors related to pull request reviewer, the adopted approach allowed us to quantify the extent of that influence via support, confidence, and lift metrics.
C1 [Soares, Daricelio M.; de Lima Junior, Manoel L.] Univ Fed Acre, Rio Branco, AC, Brazil.
   [Soares, Daricelio M.; de Lima Junior, Manoel L.; Plastino, Alexandre; Murta, Leonardo] Fluminense Fed Univ, Niteroi, RJ, Brazil.
C3 Universidade Federal do Acre (UFAC); Universidade Federal Fluminense
RP Soares, DM (corresponding author), Univ Fed Acre, Rio Branco, AC, Brazil.; Soares, DM (corresponding author), Fluminense Fed Univ, Niteroi, RJ, Brazil.
EM daricelio@ufac.br; limeira@ufac.br; plastino@ic.uff.br;
   leomurta@ic.uff.br
RI Murta, Luiz/F-2010-2010; Lima Júnior, Manoel Limeira de/O-2981-2018;
   Plastino, Alexandre/AAS-1355-2020
OI Murta, Luiz/0000-0002-2197-6008; Lima Júnior, Manoel Limeira
   de/0000-0003-3621-6084; Plastino, Alexandre/0000-0003-4039-0915
FU CNPq [305569/2014-7, 308369/2015-7]; CAPES; FAPERJ [E-26/201.523/2014]
FX We would like to thank CNPq (305569/2014-7, 308369/2015-7), CAPES, and
   FAPERJ (E-26/201.523/2014) for the financial support.
CR Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2009, PRO GIT, P107
   DASILVA NUNES, 2016, WEKAPAR TUNA EXTENSA
   de Lima ML, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1567, DOI 10.1145/2695664.2695884
   Fayyad U, 1996, AI MAG, V17, P37
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Han J, 2012, MOR KAUF D, P1
   Jiang J, 2015, J COMPUT SCI TECH-CH, V30, P998, DOI 10.1007/s11390-015-1577-3
   Rahman MM, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P222, DOI 10.1145/2889160.2889244
   Soares D. M., 2015, P 30 ACM SIGAPP S AP, P6, DOI [10.1145/2695664.2695856, DOI 10.1145/2695664.2695856]
   Soares DM, 2015, 2015 IEEE 14TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P960, DOI 10.1109/ICMLA.2015.41
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Tong Hanghang, 2006, P 12 ACM SIGKDD INT
   Witten IH, 2011, MOR KAUF D, P1
   Ying HC, 2016, 2016 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON CROWDSOURCING IN SOFTWARE ENGINEERING (CSI-SE), P29, DOI [10.1145/2897659.2897660, 10.1109/CSI-SE.2016.013]
   Yu Y, 2016, EURASIP J AUDIO SPEE, DOI 10.1186/s13636-016-0085-x
   Yu Y, 2014, PROC IEEE INT CONF S, P609, DOI 10.1109/ICSME.2014.107
NR 19
TC 19
Z9 20
U1 1
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2018
VL 98
BP 32
EP 43
DI 10.1016/j.infsof.2018.01.015
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GD8LP
UT WOS:000430764200003
DA 2024-07-18
ER

PT J
AU Cayola, L
   Macías, JA
AF Cayola, Luis
   Macias, Jose A.
TI Systematic guidance on usability methods in user-centered software
   development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Usability; User-centered development; Method recommendation;
   User-centered project management; Software quality; CASE tool
ID INTERACTION DESIGN; THINKING ALOUD; WEB; REQUIREMENTS
AB Context: In order to ensure usability, it is necessary to schedule activities and methods to be applied throughout different stages of the development process. There exists a substantial number of usability methods to be applied in user-centered software development. However, the application of each usability method largely depends on specific constraints that should be closely considered. Even so, these constraints are not always known beforehand, remaining unidentified or under uncertainty at early stages of the project.
   Objective: This paper presents an approach to automatically recommend 43 usability methods depending on the project's stage and constraints. Our approach deals with uncertainty to recommend usability methods regardless of the completeness of the information available, which makes it suitable for enhancing initial scheduling. Besides, a supporting tool intended to schedule and guide on usability methods is presented in order to systematize the recommendation mechanism.
   Method: To validate our approach, we present two application scenarios demonstrating the suitability of the mechanism, including also an expert analysis to observe the recommendation appropriateness in terms of recommendation gap. Also, a user testing was accomplished to evaluate the usability of the approach with key users.
   Results: A low recommendation gap was observed (<2.5%) and, according to the results obtained in the user testing, high percentage values for usefulness (82.38%) and satisfaction (87.89%) were obtained. The user evaluation also reported high values concerning other dimensions such as ease of use (89.00%) and ease of learning (92.38%).
   Conclusions: Results obtained helped answer main research questions, demonstrating that it is possible to create a mechanism to recommend usability methods according to a software project's constraints, even under uncertainty, and also affirm that it is possible to systemize the recommendations with a scheduling tool being satisfactory for key stakeholders, denoting acceptable levels of recommendation appropriateness, usefulness, and overall usability.
C1 [Cayola, Luis; Macias, Jose A.] Univ Autonoma Madrid, Escuela Politecn Super, Tomas y Valiente 11, E-28049 Madrid, Spain.
C3 Autonomous University of Madrid
RP Macías, JA (corresponding author), Univ Autonoma Madrid, Escuela Politecn Super, Tomas y Valiente 11, E-28049 Madrid, Spain.
EM luis.cayola@estudiante.uam.es; j.macias@uam.es
RI Macias, Jose Antonio/B-5397-2014
OI Macias, Jose Antonio/0000-0001-5071-0076
FU Spanish Government [TIN2014-52129-R]; Madrid Research Council
   [S2013/ICE-2715]
FX This work was partially supported by the Spanish Government (grant
   number TIN2014-52129-R); and the Madrid Research Council (grant number
   S2013/ICE-2715).
CR Annett J., 2004, HDB TASK ANAL HUMAN, P67, DOI DOI 10.1007/978-3-662-44811-3_9
   [Anonymous], 2002, Usability Engineering: Scenario-based Development of Human-Computer Interaction
   [Anonymous], 2017, CARD SORT
   [Anonymous], 169822002 ISOTR
   [Anonymous], 2013, MEASURING USER EXPER
   [Anonymous], 1998, Contextual design: defining customer-centered systems
   [Anonymous], 1994, Human-Computer Interaction
   [Anonymous], 2017, US INT DES PATT
   Macías JA, 2012, IEEE T SYST MAN CY C, V42, P1365, DOI 10.1109/TSMCC.2012.2187052
   Babbar S, 2002, INT J OPER PROD MAN, V22, P1071, DOI 10.1108/01443570210446315
   Bevan N., 2012, USABILITY PLANNER
   Bevan N., 2003, USABILITY NET
   Borchers J., 2001, PATTERN APPROACH INT
   Boren MT, 2000, IEEE T PROF COMMUN, V43, P261, DOI 10.1109/47.867942
   Castro A. D., 2016, ICPS ACM INT C P SEO
   Constantine L. L., 1999, SOFTWARE FOR USE PRA
   Constantine LL, 2001, AW OBJ TECHNOL S, P245
   Cooper A., 2003, FACE 2 0 ESSENTIAL I
   Dekker SWA, 2003, IEEE INTELL SYST, V18, P74, DOI 10.1109/MIS.2003.1193660
   Diaper D., 2003, HDB TASK ANAL HUMAN
   Dix A., 2004, Human-computer interaction
   Dumas J.S., 1999, PRACTICAL GUIDE USAB
   Fernandez A, 2011, INFORM SOFTWARE TECH, V53, P789, DOI 10.1016/j.infsof.2011.02.007
   Ferre X., 2003, P ICSE 2003 WORKSH B
   Fischer H., 2013, P 2 INT C DES US EXP
   Goknil A, 2014, INFORM SOFTWARE TECH, V56, P950, DOI 10.1016/j.infsof.2014.03.002
   Haikara J, 2007, LECT NOTES COMPUT SC, V4536, P153
   Hammersley Martyn, 2007, Ethnography: Principles in practice, DOI DOI 10.4324/9780203944769
   Hasan L. A., 2015, IPAC 15 P INT C INT
   Hix D., 1993, Developing User Interfaces: Ensuring Usability through Product Process
   Holzinger A, 2005, COMMUN ACM, V48, P71, DOI 10.1145/1039539.1039541
   Hornbaek K., 2002, ACM Transactions on Computer-Human Interaction, V9, P362, DOI 10.1145/586081.586086
   Horrocks J., 1999, CONSTRUCTING USER IN
   Hwang W, 2010, COMMUN ACM, V53, P130, DOI 10.1145/1735223.1735255
   Ivory MY, 2001, ACM COMPUT SURV, V33, P470, DOI 10.1145/503112.503114
   Le T, 2014, J BIOMED INFORM, V49, P198, DOI 10.1016/j.jbi.2014.02.011
   Leavitt M.O., 2007, Research-Based Web Design and Usability Guidelines
   LeRouge C, 2013, INT J MED INFORM, V82, pE251, DOI 10.1016/j.ijmedinf.2011.03.006
   Lewis C., 1997, HDB HUMAN COMPUTER I, P717, DOI DOI 10.1016/B978-044481862-1.50096-0
   Lund A. M., 2001, Usability User Exp. Newsl. STC Usability SIG, V8, P1
   Macías JA, 2007, INTERACT COMPUT, V19, P563, DOI 10.1016/j.intcom.2007.01.006
   Macias JoseA., 2009, New Trends on Human-Computer Interaction: Research, Development, and Tools, and Methods
   Mayhew D.J., 1999, USABILITY ENG LIFECY
   Melo P, 2015, UNIVERSAL ACCESS INF, V14, P215, DOI 10.1007/s10209-013-0341-0
   Navarre D, 2009, ACM T COMPUT-HUM INT, V16, DOI 10.1145/1614390.1614393
   Nguyen L, 2009, INFORM SOFTWARE TECH, V51, P655, DOI 10.1016/j.infsof.2008.09.002
   NIELSEN J, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P206
   Nielsen J., 1994, Heuristic evaluation
   Nielsen J., 2006, Prioritizing web usability
   Nielsen J., 1995, How to Conduct a Heuristic Evaluation
   Perlman G., 2015, USER INTERFACE USABI
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Robertson J., 2001, INFORM DESIGN USING
   Rojas LA, 2013, SCI COMPUT PROGRAM, V78, P2282, DOI 10.1016/j.scico.2012.07.020
   Sauro J., 2017, MEASURINGU
   Sauro J., 2010, PRACTICAL GUIDE MEAS
   Sauro J., 2009, P SIGCHI C HUM FACT, P1599, DOI [10.1145/1518701.1518946, DOI 10.1145/1518701.1518946]
   Schuhmacher M, 2014, WSDM'14: PROCEEDINGS OF THE 7TH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P543, DOI 10.1145/2556195.2556250
   Seffah A, 2004, COMMUN ACM, V47, P71, DOI 10.1145/1035134.1035136
   Serrat O., 2017, Knowledge solutions pp, P1077
   Sharp Helen, 2007, Interaction Design: Beyond Human Computer Interaction, V2
   Shneiderman B., 2010, DESIGNING USER INTER
   Snyder C., 2003, Paper Prototyping: The Fast and Easy Way to Design and Refne User Interfaces, VIllustrated
   Tullis T., 2002, US PROF ASS C
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
   User Experience Professionals' Association, 2012, US BOD KNOWL
   Van Der Lugt R., 2002, CREAT INNOV MANAG, V11, P43
   Van Waes L, 2000, IEEE T PROF COMMUN, V43, P279, DOI 10.1109/47.867944
   WASSERMAN AI, 1985, IEEE T SOFTWARE ENG, V11, P699, DOI 10.1109/TSE.1985.232519
   Wilkinson CR, 2014, DESIGN STUD, V35, P614, DOI 10.1016/j.destud.2014.06.001
   Wixon D., 1996, FIELD METHODS CASEBO
   Yahya S., 2014, CAPTURING SECURITY R, P16
NR 72
TC 32
Z9 33
U1 0
U2 23
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2018
VL 97
BP 163
EP 175
DI 10.1016/j.infsof.2018.01.010
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GA0MR
UT WOS:000428008600012
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Licorish, SA
   MacDonell, SG
AF Licorish, Sherlock A.
   MacDonell, Stephen G.
TI Exploring the links between software development task type, team
   attitudes and task completion performance: Insights from the Jazz
   repository
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Task type; Team attitudes; Task completion performance; Software project
   management; Empirical software engineering; Repository mining; Jazz
   repository
ID LANGUAGE USE; COMMUNICATION; PERSONALITY; PRODUCTIVITY; SATISFACTION;
   CONFLICT; IMPACT; COLLABORATION; ACCEPTANCE; DIVERSITY
AB Context In seeking to better understand the impact of various human factors involved in software development, and how teams' attitudes relate to their performance, increasing attention is being given to the study of team related artefacts. In particular, researchers have conducted numerous studies on a range of team communication channels to explore links between developers' language use and the incidence of software bugs in the products they delivered. Comparatively limited attention has been paid, however, to the full range of software tasks that are commonly performed during the development and delivery of software systems, in spite of compelling evidence pointing to the need to understand teams' attitudes more widely.
   Objective: We were therefore motivated to study the relationships between task type and team attitudes, and how attitudes expressed in teams' communications might be related to their task completion performance when undertaking a range of activities.
   Method: Our investigation involved artefacts from 474 IBM Jazz practitioners assembled in 149 teams working on around 30,000 software development tasks over a three-year period. We applied linguistic analysis, standard statistical techniques and directed content analysis to address our research objective.
   Results: Our evidence revealed that teams expressed different attitudes when working on various forms of software tasks, and they were particularly emotional when working to remedy defects. That said, teams' expression of attitudes was not found to be a strong predictor of their task completion performance.
   Conclusion: Efforts aimed at reducing bug incidence may positively limit teams' emotional disposition when resolving bugs, thereby reducing the otherwise high demand for emotionally stable members. In addition, in environments where teams work closely together to develop software such as in Agile contexts, attitudes are likely to have a bearing on how they function as a group.
C1 [Licorish, Sherlock A.; MacDonell, Stephen G.] Univ Otago, Dept Informat Sci, POB 56, Dunedin 9054, New Zealand.
C3 University of Otago
RP Licorish, SA (corresponding author), Univ Otago, Dept Informat Sci, POB 56, Dunedin 9054, New Zealand.
EM sherlock.licorish@otago.ac.nz; stephen.macdonell@otago.ac.nz
RI MacDonell, Stephen G./AAI-1579-2019
OI MacDonell, Stephen G./0000-0002-2231-6941
CR Abrahamsson P, 2003, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2003.1201204
   Abreu R, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P153
   Acuña ST, 2009, INFORM SOFTWARE TECH, V51, P627, DOI 10.1016/j.infsof.2008.08.006
   Alipour A, 2013, IEEE WORK CONF MIN S, P183, DOI 10.1109/MSR.2013.6624026
   André M, 2011, INFORM SOFTWARE TECH, V53, P259, DOI 10.1016/j.infsof.2010.11.011
   [Anonymous], 2009, ROCK MINER ANAL, DOI DOI 10.1007/S00343-009-9267-Z
   [Anonymous], INF MANAGE
   [Anonymous], 1996 NAT CONV ASS ED
   [Anonymous], 2013, OXFORD ENGLISH DICT
   [Anonymous], 2002, Research in the Schools
   [Anonymous], 5 INT S EMP SOFTW EN
   [Anonymous], 24 AUSTR C INF SYT A
   [Anonymous], 2010, P 19 INT C WORLD WID
   [Anonymous], MANIFESTO AGILE SOFT
   [Anonymous], 2016 23 AS PAC SOFTW
   [Anonymous], 2015 IEEE ACM 8 INT
   [Anonymous], 1981, HUMAN FACTORS SOFTWA
   [Anonymous], 1969, CONTENT ANAL SOCIAL
   [Anonymous], P 32 ACM IEEE INT C
   [Anonymous], 2014, 18 INT C EVALUATION
   [Anonymous], P 9 IEEE WORK C MIN
   [Anonymous], ENG COMPUTER BASED S
   [Anonymous], DEFENSE TECHNICAL IN
   [Anonymous], BUSINESS CREDIT
   [Anonymous], 1983, Media for interactive communication
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Bales R.F., 1953, WORKING PAPERS THEOR, P111
   Beck K., 2000, EXTREME PROGRAMMING
   Benne KD, 1948, J SOC ISSUES, V4, P41, DOI 10.1111/j.1540-4560.1948.tb01783.x
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   CARTER L, 1950, J ABNORM SOC PSYCH, V45, P350, DOI 10.1037/h0053834
   Cataldo M., 2012, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P3081, DOI DOI 10.1145/2207676.2208722
   Cataldo M, 2008, CSCW: 2008 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, CONFERENCE PROCEEDINGS, P579
   Chin G., 2004, Agile Project Management: How to Succeed in the Face of Changing Project Requirements
   Cohen J., 1988, STAT POWER ANAL BEHA
   Costa JMR, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3151
   Damian D, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P81
   DAVIS JH, 1976, ANN REV PSYCHOL, V27
   De Dreu CKW, 2003, J APPL PSYCHOL, V88, P741, DOI 10.1037/0021-9010.88.4.741
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   DITTES JE, 1956, J ABNORM SOC PSYCH, V53, P100, DOI 10.1037/h0047855
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Ehrlich K., 2012, P ACM 2012 C COMPUTE, P945, DOI DOI 10.1145/2145204.2145345
   Ehrlich K., 2014, Proccedings of the Computer Supported Cooperative Work, P733, DOI [10.1145/2531602.2531671, DOI 10.1145/2531602.2531671]
   Espinosa J. A., 2006, Information Technology & People, V19, P345, DOI 10.1108/09593840610718036
   Espinosa JA, 2007, ORGAN SCI, V18, P613, DOI 10.1287/orsc.1070.0297
   Frost R, 2007, IEEE SOFTWARE, V24, P114, DOI 10.1109/MS.2007.170
   Gachechiladze D, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P11, DOI 10.1109/ICSE-NIER.2017.18
   GILES H, 1993, AM BEHAV SCI, V36, P262, DOI 10.1177/0002764293036003002
   Gonzales AL, 2010, COMMUN RES, V37, P3, DOI 10.1177/0093650209351468
   Gorla N, 2004, COMMUN ACM, V47, P79, DOI 10.1145/990680.990684
   GRAESSER AC, 1994, AM EDUC RES J, V31, P104, DOI 10.2307/1163269
   Graziotin D., 2017, P 21 INT C EVALUATIO, P324, DOI [DOI 10.1145/3084226.3084242, 10.1145/3084226.3084242]
   Graziotin D, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P42, DOI 10.1109/SEmotion.2017.5
   Grisé ML, 1999, J MANAGE INFORM SYST, V16, P157, DOI 10.1080/07421222.1999.11518260
   Guzman E, 2013, P 2013 9 JOINT M FDN, P671, DOI 10.1145/2491411.2494578
   Hackman J.R., 1975, Advances in experimental social psychology, V8, P47, DOI [DOI 10.1016/S0065-2601(08)60248-8, 10.1016/S0065-2601(08)60248-8]
   HACKMAN JR, 1968, J EXP SOC PSYCHOL, V4, P162, DOI 10.1016/0022-1031(68)90040-1
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Hare AP, 2010, SMALL GR RES, V41, P106, DOI 10.1177/1046496409359503
   HATANO G, 1991, PERSPECTIVES ON SOCIALLY SHARED COGNITION, P331, DOI 10.1037/10096-014
   Hazzan O., 2009, Agile software engineering
   Henri F., 1992, Collaborative Learning Through Computer Conferencing: the Najaden Papers. Proceedings of the NATO Advanced Research Workshop, P117
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   HERBSLEB JD, 1995, HUM-COMPUT INTERACT, V10, P249, DOI 10.1207/s15327051hci1002&3_4
   Herbsleb JD, 2001, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.2001.919083
   Hindle A., 2011, P 8 WORK C MIN SOFTW, P163, DOI DOI 10.1145/1985441.1985466
   Howison J, 2006, INT FED INFO PROC, V203, P319
   Hsieh HF, 2005, QUAL HEALTH RES, V15, P1277, DOI 10.1177/1049732305276687
   Jaanu T, 2012, INT SYMP EMP SOFTWAR, P231, DOI 10.1145/2372251.2372293
   Jurado F, 2015, J SYST SOFTWARE, V104, P82, DOI 10.1016/j.jss.2015.02.055
   KIRCHLER E, 1986, J PERS SOC PSYCHOL, V51, P83, DOI 10.1037/0022-3514.51.1.83
   Kumar V., 2006, Introduction to Data Mining
   Kurapati N, 2012, LECT NOTES BUS INF P, V111, P16
   Larose D. T., 2005, Discovering knowledge in data
   Lewin K., 1953, Group dynamics: Research and theory, P287
   Liang TP, 2012, INT J PROJ MANAG, V30, P731, DOI 10.1016/j.ijproman.2011.11.006
   Licorish SA, 2015, INFORM SOFTWARE TECH, V64, P113, DOI 10.1016/j.infsof.2015.02.004
   Licorish SA, 2014, INFORM SOFTWARE TECH, V56, P1578, DOI 10.1016/j.infsof.2014.02.004
   Licorish Sherlock A., 2013, P C EV ASS SOFTW ENG, P228
   Mairesse F, 2007, J ARTIF INTELL RES, V30, P457, DOI 10.1613/jair.2349
   Mäntylä M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P247, DOI [10.1109/MSR.2016.033, 10.1145/2901739.2901752]
   Mäntylä MV, 2017, IEEE WORK CONF MIN S, P198, DOI 10.1109/MSR.2017.47
   McGrath J.E., 1984, GROUPS INTERACTION P
   McGrath J.E., 1966, SMALL GROUP RES SYNT
   Melo CD, 2013, INFORM SOFTWARE TECH, V55, P412, DOI 10.1016/j.infsof.2012.09.004
   Mills T.M., 1964, GROUP TRANSFORMATION
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Nguyen T, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P45, DOI 10.1109/ICGSE.2008.39
   Olaniran BA, 1996, BEHAV INFORM TECHNOL, V15, P24, DOI 10.1080/014492996120373
   Ortu M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P303, DOI 10.1109/MSR.2015.35
   Pennebaker J. W., 2007, Linguistic inquiry and word count (LIWC2007)
   Pennebaker JW, 2003, ANNU REV PSYCHOL, V54, P547, DOI 10.1146/annurev.psych.54.101601.145041
   Pennebaker JW, 1999, J PERS SOC PSYCHOL, V77, P1296, DOI 10.1037/0022-3514.77.6.1296
   PEPINSKY PN, 1958, J ABNORM SOC PSYCH, V57, P47, DOI 10.1037/h0046491
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Rigby P. C., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories (MSR '07), P23, DOI [10.1109/MSR.2007.35, DOI 10.1109/MSR.2007.35]
   SCHNURR PP, 1992, J PERS ASSESS, V58, P311, DOI 10.1207/s15327752jpa5802_10
   Schutz W.C., 1958, FIRO: A three-dimensional theory of interpersonal behavior
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Sethi R, 2001, J MARKETING RES, V38, P73, DOI 10.1509/jmkr.38.1.73.18833
   Sfetsos P, 2006, LECT NOTES COMPUT SC, V4044, P43
   Slater P.E., 1966, Microcosm: Structural, Psychological and Religious Evolution in Groups
   Sommerville I., 1997, Software Engineering
   SPENCE DP, 1978, SOC SCI MED-MED SOC, V12, P141, DOI 10.1016/0271-7123(78)90042-1
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   TAYLOR MA, 1994, J NERV MENT DIS, V182, P319, DOI 10.1097/00005053-199406000-00002
   Thelen HerbertA., 1956, STATE SOCIAL SCI
   Tjosvold D, 2008, J ORGAN BEHAV, V29, P19, DOI 10.1002/job.473
   Tort A, 2011, DATA KNOWL ENG, V70, P1088, DOI 10.1016/j.datak.2011.07.006
   Trimmer KJ, 2002, J COMPUT INFORM SYST, V42, P7
   TUCKMAN BW, 1965, PSYCHOL BULL, V63, P384, DOI 10.1037/h0022100
   Welbourne TM, 2001, INT J HUM RESOUR MAN, V12, P652
   Wolf T, 2009, IEEE SOFTWARE, V26, P58, DOI 10.1109/MS.2009.16
NR 117
TC 10
Z9 10
U1 0
U2 36
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2018
VL 97
BP 10
EP 25
DI 10.1016/j.infsof.2017.12.005
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GA0MR
UT WOS:000428008600002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tong, HN
   Liu, B
   Wang, SH
AF Tong, Haonan
   Liu, Bin
   Wang, Shihai
TI Software defect prediction using stacked denoising autoencoders and
   two-stage ensemble learning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software defect prediction; Stacked denoising autoencoders; Ensemble
   learning; Software metrics; Deep learning
ID FAULT-PRONENESS; NEURAL-NETWORKS; EMPIRICAL-ANALYSIS; CLASSIFICATION;
   ALGORITHM; QUALITY; MODULARIZATION; REDUCTION; METRICS; FOREST
AB Context: Software defect prediction (SDP) plays an important role in allocating testing resources reasonably, reducing testing costs, and ensuring software quality. However, software metrics used for SDP are almost entirely traditional features compared with deep representations (DPs) from deep learning. Although stacked denoising autoencoders (SDAEs) are powerful for feature learning and have been successfully applied in other fields, to the best of our knowledge, it has not been investigated in the field of SDP. Meanwhile, class-imbalance is still a pressing problem needing to be addressed.
   Objective: In this paper, we propose a novel SDP approach, SDAEsTSE, which takes advantages of SDAEs and ensemble learning, namely the proposed two-stage ensemble (TSE).
   Method: Our method mainly includes two phases: the deep learning phase and two-stage ensemble (TSE) phase. We first use SDAEs to extract the DPs from the traditional software metrics, and then a novel ensemble learning approach, TSE, is proposed to address the class-imbalance problem.
   Results: Experiments are performed on 12 NASA datasets to demonstrate the effectiveness of DPs, the proposed TSE, and SDAEsTSE, respectively. The performance is evaluated in terms of F-measure, the area under the curve (AUC), and Matthews correlation coefficient (MCC). Generally, DPs, TSE, and SDAEsTSE contribute to significantly higher performance compared with corresponding traditional metrics, classic ensemble methods, and benchmark SDP models.
   Conclusions: It can be concluded that (1) deep representations are promising for SDP compared with traditional software metrics, (2) TSE is more effective for addressing the class-imbalance problem in SDP compared with classic ensemble learning methods, and (3) the proposed SDAEsTSE is significantly effective for SDP.
C1 [Tong, Haonan; Liu, Bin; Wang, Shihai] Beihang Univ, Sch Reliabil & Syst Engn, Beijing 100083, Peoples R China.
   [Tong, Haonan; Liu, Bin; Wang, Shihai] Sci & Technol Reliabil & Environm Engn Lab, Beijing, Peoples R China.
C3 Beihang University
RP Wang, SH (corresponding author), Beihang Univ, Sch Reliabil & Syst Engn, Beijing 100083, Peoples R China.; Wang, SH (corresponding author), Sci & Technol Reliabil & Environm Engn Lab, Beijing, Peoples R China.
EM tonghaonan@buaa.edu.cn; liubin@buaa.edu.cn; wangshihai@buaa.edu.cn
FU Major State Basic Research Development Program of China (973 Program)
   [2014CB744904]
FX This research was supported by the Major State Basic Research
   Development Program of China (973 Program) (No.2014CB744904). We would
   like to thank the editors and anonymous reviewers for their constructive
   comments and suggestions for the improvement of this paper. All the
   results of our analysis can be downloaded from
   https://github.com/THN-BUAA/SDAEsTSE.
CR Abaei G, 2015, KNOWL-BASED SYST, V74, P28, DOI 10.1016/j.knosys.2014.10.017
   Aman H, 2015, IEICE T INF SYST, VE98D, P2218, DOI 10.1587/transinf.2015EDP7107
   [Anonymous], 1995, 11 C UNC ART INT SAN, DOI DOI 10.1109/TGRS.2004.834800
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   Arar ÖF, 2015, APPL SOFT COMPUT, V33, P263, DOI 10.1016/j.asoc.2015.04.045
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bengio Y., 2007, Advances in neural information processing systems, P153, DOI DOI 10.7551/MITPRESS/7503.003.0024
   Bicer M. S., 2015, 21 INT C INF SOFTW T
   Biçer S, 2016, APPL SOFT COMPUT, V49, P1078, DOI 10.1016/j.asoc.2016.05.038
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Bowes D., 2016, INT S SOFTW TEST AN
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Chatterjee S, 2016, SOFT COMPUT, V20, P4023, DOI 10.1007/s00500-015-1738-x
   Chawla NV, 2003, LECT NOTES ARTIF INT, V2838, P107, DOI 10.1007/978-3-540-39804-2_12
   Chen JQ, 2014, INT CONF SOFTW SECUR, P20, DOI 10.1109/SERE.2014.15
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Czibula G, 2014, INFORM SCIENCES, V264, P260, DOI 10.1016/j.ins.2013.12.031
   Dejaeger K, 2013, IEEE T SOFTWARE ENG, V39, P237, DOI 10.1109/TSE.2012.20
   Dittman D. J., 2015, 2015 IEEE INT C INF
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Freund Y., 2001, P THEGHTH INT WORKSH
   Freund Y., 1996, INT C MACHINE LEARNI, P148
   Gao KH, 2014, INT J SOFTW ENG KNOW, V24, P1229, DOI 10.1142/S0218194014400105
   Gashler M., 2008, DECISION TREE ENSEMB
   Gray D., 2011, 15 ANN C EV ASS SOFT
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Halstead M.H., 1977, OPERATING PROGRAMMIN
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   Hinton G, 2012, IEEE SIGNAL PROC MAG, V29, P82, DOI 10.1109/MSP.2012.2205597
   Hinton GE, 2006, NEURAL COMPUT, V18, P1527, DOI 10.1162/neco.2006.18.7.1527
   Hu QH, 2016, RENEW ENERG, V85, P83, DOI 10.1016/j.renene.2015.06.034
   Jin C, 2015, APPL SOFT COMPUT, V35, P717, DOI 10.1016/j.asoc.2015.07.006
   Jing X.Y., 2014, P 36 INT C SOFTW ENG
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kanmani S, 2007, INFORM SOFTWARE TECH, V49, P483, DOI 10.1016/j.infsof.2006.07.005
   Karpathy A, 2014, PROC CVPR IEEE, P1725, DOI 10.1109/CVPR.2014.223
   Kaur A, 2016, ADV INTELL SYST, V433, P81, DOI 10.1007/978-81-322-2755-7_10
   Khoshgoftaar TM, 2014, INFORM SYST FRONT, V16, P801, DOI 10.1007/s10796-013-9430-0
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   LECESSIE S, 1992, APPL STAT-J ROY ST C, V41, P191
   Lee T, 2016, P IEEE INT FREQ CONT, P9
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li BW, 2014, P INT COMP SOFTW APP, P406, DOI 10.1109/COMPSAC.2014.64
   Li WW, 2016, KNOWL-BASED SYST, V91, P263, DOI 10.1016/j.knosys.2015.09.035
   Liu MX, 2014, IEEE T RELIAB, V63, P676, DOI 10.1109/TR.2014.2316951
   Ma BJ, 2014, INT J SOFTW ENG KNOW, V24, P61, DOI 10.1142/S021819401450003X
   Ma WWY, 2016, INFORM SOFTWARE TECH, V69, P50, DOI 10.1016/j.infsof.2015.09.001
   Ma Y., 2014, J APPL MATH, V2014, P201
   Ma Y, 2014, J INTELL FUZZY SYST, V27, P2473, DOI 10.3233/IFS-141220
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Mahmoodzadeh Zahra, 2015, 2015 IEEE Power & Energy Society General Meeting, P1, DOI 10.1109/PESGM.2015.7286219
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Menzies Tim., 2012, PROMISE REPOSITORY E
   Moeyersoms J, 2015, J SYST SOFTWARE, V100, P80, DOI 10.1016/j.jss.2014.10.032
   Moody J. E., 2009, ADV NEURAL INFORM PR
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Petrovic JE, 2017, POLICY FUTURES EDUC, V15, P817, DOI 10.1177/1478210316681204
   Quinlan J.R., 1993, C4.5: Programs for Machine Learning, VVolume 1, P302, DOI [10.1016/S0019-9958(62)90649-6, DOI 10.1016/S0019-9958(62)90649-6]
   Rathore S. Singh, 2015, P 2015 INT C SOFT CO
   Ricky MY, 2016, PROCEEDINGS 2016 IEEE SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING SOSE 2016, P307, DOI 10.1109/SOSE.2016.25
   Rokach L, 2010, ARTIF INTELL REV, V33, P1, DOI 10.1007/s10462-009-9124-7
   Ryu D, 2016, APPL SOFT COMPUT, V49, P1062, DOI 10.1016/j.asoc.2016.04.009
   Sarkar S, 2008, IEEE T SOFTWARE ENG, V34, P700, DOI 10.1109/TSE.2008.43
   Sasidharan R, 2014, ADV INTELL SYST, V246, P107, DOI 10.1007/978-81-322-1680-3_12
   Sayyad Shirabad J., 2005, The PROMISE Repository of Software Engineering Databases
   Seliya N, 2011, WIRES DATA MIN KNOWL, V1, P448, DOI 10.1002/widm.38
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Siers MJ, 2015, INFORM SYST, V51, P62, DOI 10.1016/j.is.2015.02.006
   Singh VB, 2013, LECT NOTES COMPUT SC, V7972, P408, DOI 10.1007/978-3-642-39643-4_30
   Soleimani A, 2014, 2014 IRANIAN CONFERENCE ON INTELLIGENT SYSTEMS (ICIS)
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Su C, 2015, INTELL DATA ANAL, V19, P1409, DOI 10.3233/IDA-150789
   Tan P. N., 2005, Introduction to Data Mining
   Vashisht V., 2016, British Journal of Mathematics Computer Science, V16, P1
   Vezhnevets A, 2007, LECT NOTES ARTIF INT, V4701, P430
   Vincent P, 2010, J MACH LEARN RES, V11, P3371
   Vincent Pascal, 2008, P 25 INT C MACHINE L, DOI DOI 10.1145/1390156.1390294
   Wang S., 2016, 2016 IEEE ACM 38 IEE
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Weigend A., 1993, P 1993 CONN MOD SUMM
   Weyuker EJ, 2010, EMPIR SOFTW ENG, V15, P277, DOI 10.1007/s10664-009-9111-2
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Witten IH, 2011, MOR KAUF D, P61, DOI 10.1016/B978-0-12-374856-0.00003-1
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Yadav HB, 2015, INFORM SOFTWARE TECH, V63, P44, DOI 10.1016/j.infsof.2015.03.001
   Yang X., 2015, P 2015 IEEE INT C SO
   Yang XX, 2015, IEEE T RELIAB, V64, P234, DOI 10.1109/TR.2014.2370891
   Yoonseop Kang, 2013, Neural Information Processing. 20th International Conference, ICONIP 2013. Proceedings: LNCS 8228, P241, DOI 10.1007/978-3-642-42051-1_31
   You G., 2016, INT C SOFTW ENG KNOW
   Zhang F., 2014, EMPIR SOFTW ENG, V21, P182
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang Z. W., 2016, AUTOMAT SOFTW ENG, V24, P1
   Zhao YY, 2017, AUTOMAT SOFTW ENG, V24, P393, DOI 10.1007/s10515-016-0198-6
   Zhao YY, 2015, INFORM SOFTWARE TECH, V57, P186, DOI 10.1016/j.infsof.2014.09.006
   Zheng J, 2010, EXPERT SYST APPL, V37, P4537, DOI 10.1016/j.eswa.2009.12.056
NR 110
TC 103
Z9 105
U1 2
U2 64
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2018
VL 96
BP 94
EP 111
DI 10.1016/j.infsof.2017.11.008
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FW8GG
UT WOS:000425567200007
DA 2024-07-18
ER

PT J
AU Arcelli, D
   Cortellessa, V
   Di Pompeo, D
AF Arcelli, Davide
   Cortellessa, Vittorio
   Di Pompeo, Daniele
TI Performance-driven software model refactoring
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model-driven engineering; UML; Software refactoring; Performance
   engineering; Performance antipattems
ID ANTIPATTERNS
AB Context: Software refactoring is a common practice aimed at addressing requirements or fixing bugs during the software development. While refactoring related to functional requirements has been widely studied in the last few years, non-functional-driven refactoring is still critical, mostly because non-functional characteristics of software are hard to assess and appropriate refactoring actions can be difficult to identify. In the context of performance, which is the focus of this paper, antipattems represent effective instruments to tackle this issue, because they document common mistakes leading to performance problems as well as their solutions.
   Objective: In order to effectively reuse the knowledge beyond performance antipattems, automation is required to detect and remove them. In this paper we introduce a framework that enables, in an unique tool context, the refactoring of software models driven by performance antipattem detection and removal.
   Method: We have implemented, within the EPSILON platform, detection rules and refactoring actions on UML models for a set of well-known performance antipattems. By exploiting the EPSILON languages to check properties and apply refactoring on models, we enable three types of refactoring sessions.
   Results: We experiment our framework on a Botanical Garden Management System to show, on one side, that antipattems can effectively drive software refactoring towards models that satisfy performance requirements and, on the other side, that the automation introduced by EPSILON-based sessions enables to inspect multiple paths and to propose a variety of solutions.
   Conclusion: This work demonstrates that automation in performance-driven software model refactoring can be beneficial, and that performance antipattems can be powerful instruments in the hands of software engineers for detecting (and solving) performance problems usually hidden to traditional bottleneck analysis. This work also opens the road to the integration of well-known techniques for software refactoring driven by functional requirements with novel techniques addressing non-functional requirements like performance.
C1 [Arcelli, Davide; Cortellessa, Vittorio; Di Pompeo, Daniele] Univ Aquila, Laquila, Italy.
C3 University of L'Aquila
RP Cortellessa, V (corresponding author), Univ Aquila, Laquila, Italy.
EM davide.arcelli@univaq.it; vittorio.cortellessa@univaq.it;
   daniele.dipompeo@graduate.univaq.it
RI Di Pompeo, Daniele/P-2984-2018; Arcelli, Davide/AAH-5569-2020
OI Di Pompeo, Daniele/0000-0003-2041-7375; Arcelli,
   Davide/0000-0002-8919-9831
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Anderson P., 2002, ENTERPRISE JAVABEANS
   Arcelli D, 2012, P 8 INT ACM SIGSOFT, P33, DOI 10.1145/2304696.2304704
   Arcelli D., 2015, 3 INT WORKSH GLOB MO, P42
   Arcelli D., 2016, 1 INT WORKSH SOFTW R, P25
   Arcelli D., 2014, ELECT COMMUN EASST, V59
   Arcelli D., 2013, 1 WORKSH PATT PROM A
   Arcelli D, 2013, ELECTRON P THEOR COM, P33, DOI 10.4204/EPTCS.108.3
   Arcelli D, 2015, LECT NOTES COMPUT SC, V9033, P149, DOI 10.1007/978-3-662-46675-9_10
   Arendt T, 2013, AUTOMAT SOFTW ENG, V20, P141, DOI 10.1007/s10515-012-0114-7
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Bertoli M, 2006, INT CONF QUANT EVAL, P119
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Casale Giuliano, 2008, 2008 16th Euromicro Conference on Parallel, Distributed and Network-based Processing - PDP '08, P183, DOI 10.1109/PDP.2008.80
   Cortellessa V., 2010, 13 INT C FUND APPR S, P368
   Cortellessa V., 2013, 10 EUR WORKSH COMP P, P1
   Cortellessa V, 2014, SOFTW SYST MODEL, V13, P391, DOI 10.1007/s10270-012-0246-z
   Cortellessa V, 2011, MODEL-BASED SOFTWARE PERFORMANCE ANALYSIS, P1, DOI 10.1007/978-3-642-13621-4
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Di Marco A, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P37, DOI 10.1109/WICSA.2004.1310688
   Diaz-Pace A, 2008, LECT NOTES COMPUT SC, V5281, P171, DOI 10.1007/978-3-540-87879-7_11
   Fourati R, 2011, STUD COMPUT INTELL, V364, P17
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gerard S., 2008, IFAC Proceedings Volumes, V41, P6909, DOI [10.3182/20080706-5-KR-1001.01171, DOI 10.3182/20080706-5-KR-1001.01171]
   Grunske L, 2005, MODEL-DRIVEN SOFTWARE DEVELOPMENT, P91, DOI 10.1007/3-540-28554-7_5
   Kolovos D., 2010, EPSILON BOOK STRUCTU
   Koziolek Anne, 2011, JOINT ACM SIGSOFT C, P33
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Lerman C., 2000, SOFTW DEV, V8, P46
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P473, DOI 10.1007/s11219-015-9284-4
   Martens A., 2010, P 1 JOINT WOSP SIPEW, P105, DOI [DOI 10.1145/1712605.1712624, 10.1145]
   Mens T, 2007, SOFTW SYST MODEL, V6, P269, DOI 10.1007/s10270-006-0044-6
   Misbhauddin M, 2015, EMPIR SOFTW ENG, V20, P206, DOI 10.1007/s10664-013-9283-7
   Parsons T., 2008, J OBJECT TECHNOL, P1
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Smith C., 2001, 27 INT C COMP MEAS G, P797
   Smith C. U., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P127, DOI 10.1145/350391.350420
   Smith C.U., 2002, 28 INT COMP MEAS GRO, P667
   Smith Connie U., 2003, 29 INT C COMP MEAS G, P717
   Smith ConnieU., 2001, PERFORMANCE SOLUTION
   Spinner S, 2015, PERFORM EVALUATION, V92, P51, DOI 10.1016/j.peva.2015.07.005
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Steinberg D, 2008, EMF ECLIPSE MODELLIN
   Trubiani C., 2014, ICPE 14, P75
   Wert A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P552, DOI 10.1109/ICSE.2013.6606601
   Wert Alexander., 2014, Proceedings of the 10th International ACM Sigsoft Conference on Quality of Software Architectures, P3
   Wohlin C., 2012, Experimentation in Software Engineering
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
   Xu J, 2012, PERFORM EVALUATION, V69, P525, DOI 10.1016/j.peva.2009.11.003
NR 50
TC 23
Z9 24
U1 2
U2 14
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 366
EP 397
DI 10.1016/j.infsof.2017.09.006
PG 32
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FX4EZ
UT WOS:000426026800027
DA 2024-07-18
ER

PT J
AU Penzenstadler, B
AF Penzenstadler, Birgit
TI Sustainability analysis and ease of learning in artifact-based
   requirements engineering: The newest member of the family of studies
   (It's a girl!)
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Sustainability; Requirements engineering; Analysis; Empirical study;
   Family of studies; Evaluation research; Artifact orientation
ID SOCIOLOGY; KNOWLEDGE; SCIENCE
AB Context: Artifact-based requirements engineering promises to deliver results of high quality while allowing for flexibility in the development process and the project settings. Tailored for analyzing sustainability, it can offer tangible insights on potential benefits and risks of a system under development. However, as of now there is still relatively little empirical evidence available that would prove this quality, flexibility, and insight potential. Previous studies, specifically on the first two characteristics, differ in their socio-economic contexts and make the findings hard to generalize.
   Objective: Our goal is to investigate the advantages and limitations in the application of artifact-based requirements engineering by new, inexperienced requirements engineers to extend our family of studies. In addition, the secondary goal is to evaluate the suitability of the sustainability analysis artifact for a sustainability analysis of the system planned for development.
   Method: We report on a new member in a family of studies with 20 participants for evaluating artifact models in a sustainability application context. We use a graduate block course as case. Our data collection is performed via survey at the end of the course, based on the same instrument used in previous studies, and extended with a new section on evaluating the suitability of a particular artifact for sustainability analysis.
   Results: Both from the quantitative and the qualitative feedback, the results indicate that the students have benefitted from the artifact-based approach to analyzing sustainability in requirements engineering. Usability, syntactic and semantic quality were all rated high and the rationales were positive, as was the feedback on the sustainability analysis artifact.
   Conclusion: The results contribute to a reliable database on artifact-oriented requirements engineering and strengthen our confidence in the general benefits of artifact-orientation. Relating the old and new data provides some more insight into the trajectory of the wider transfer of artifact-based requirements engineering into practice.
C1 [Penzenstadler, Birgit] Calif State Univ Long Beach, Long Beach, CA 90840 USA.
C3 California State University System; California State University Long
   Beach
RP Penzenstadler, B (corresponding author), Calif State Univ Long Beach, Long Beach, CA 90840 USA.
EM birgit.penzenstadler@csulb.edu
RI Harrison, Dylan/AFP-8142-2022; Penzenstadler, Birgit S/B-1582-2015
OI Penzenstadler, Birgit S/0000-0002-5771-0455
CR Alexander I, 2004, IEEE SOFTWARE, V21, P23, DOI 10.1109/MS.2004.1259199
   Alharthi A.D., 2017, ARXIV170106433
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 2017, IEEE SOFTWARE
   Anton AI, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P136, DOI 10.1109/ICRE.1996.491438
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Baumann H., 2004, HITCH HIKERS GUIDE L
   Becker C, 2014, ARXIV14106968
   Becker C, 2016, IEEE SOFTWARE, V33, P56, DOI 10.1109/MS.2015.158
   Becker C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P467, DOI 10.1109/ICSE.2015.179
   BERENBACH B, 2009, SOFTWARE SYSTEMS REQ
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Chitchyan R., 2015, INT WORKSH REQ ENG S
   Chitchyan R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P501, DOI 10.1109/ICSE.2015.183
   Cockburn A., 1998, TEMPLATE USE CASE SC
   Condori-Fernandez N, 2009, INT SYMP EMP SOFTWAR, P503
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ehrenfeld JR, 2005, MIT SLOAN MANAGE REV, V46, P23
   FENTON N, 1994, IEEE SOFTWARE, V11, P86, DOI 10.1109/52.300094
   Fernández DM, 2013, LECT NOTES COMPUT SC, V7983, P108, DOI 10.1007/978-3-642-39259-7_11
   Fernández DM, 2010, LECT NOTES COMPUT SC, V6395, P183
   Glinz M, 2007, IEEE SOFTWARE, V24, P18, DOI 10.1109/MS.2007.42
   HAMILTON K, 2006, LEARNING UML 2 0, P286
   Hilty LM, 2015, ADV INTELL SYST, V310, P3, DOI 10.1007/978-3-319-09228-7_1
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Kulkarni UR, 2006, J MANAGE INFORM SYST, V23, P309, DOI 10.2753/MIS0742-1222230311
   MAHAUX M, 2011, INT WORK C REQ ENG, V6606, P19
   Mendez D., 2014, REQUIR ENG J
   Mendez Fernandez Daniel, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P104, DOI 10.1049/ic.2011.0013
   Monk A., 1998, INTERACTIONS, V5, P21, DOI [10.1145/274430.274434, DOI 10.1145/274430.274434, https://doi.org/10.1145/274430.274434]
   Mussbacher G, 2014, IEEE INT WORKSH MODE, P7, DOI 10.1109/MoDRE.2014.6890821
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Osterwalder A., 2010, BUSINESS MODEL GENER, DOI DOI 10.1111/J.1540-5885.2012.00977_2.X
   Penzenstadler B., 2014, 3 INT WORKSH REQ ENG
   Penzenstadler B., 2013, INT WORKSH REPL EMP
   Penzenstadler B., 2017, QUESTIONNAIRE RAW DA
   Penzenstadler B., LNCS
   Penzenstadler B., 2016, REQUIREMENTS ENG SUS
   Penzenstadler B., 2013, INT S EMP SOFTW ENG
   Penzenstadler B., 2013, 2 INT WORKSH GREEN S
   Penzenstadler B, 2015, 2015 IEEE/ACM FOURTH INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P36, DOI 10.1109/GREENS.2015.13
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Petersen K., 2014, P 2014 INT WORKSH LO, P55
   PINCH TJ, 1984, SOC STUD SCI, V14, P399, DOI 10.1177/030631284014003004
   Revelle W, 2017, PSYCH PROCEDURES PSY
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   United Nations World Commission on Environment and Developmentknown as the Brundtland Commission Report of the World Commission on Environment and Development, 1987, UN C
   Upward A., 2013, TECHNICAL REPORT
   Venters C.C., 2017, IEEE INT C SOFTW ENG
   Wohlin C., 2012, Experimentation in Software Engineering
   Woods DD, 1998, ERGONOMICS, V41, P168, DOI 10.1080/001401398187215
   Zave P, 1997, ACM COMPUT SURV, V29, P315, DOI 10.1145/267580.267581
NR 55
TC 2
Z9 2
U1 1
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 130
EP 146
DI 10.1016/j.infsof.2017.11.011
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FX4EZ
UT WOS:000426026800010
DA 2024-07-18
ER

PT J
AU Dikici, A
   Turetken, O
   Demirors, O
AF Dikici, Ahmet
   Turetken, Oktay
   Demirors, Onur
TI Factors influencing the understandability of process models: A
   systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Business process model; Understandability; Comprehension; Process model
   understandability; Systematic literature review
ID USER ACCEPTANCE; QUALITY; INFORMATION; GRAMMARS
AB Context: Process models are key in facilitating communication in organizations and in designing process aware information systems. Organizations are facing increasingly larger and more complex processes, which pose difficulties to the understandability of process models. The literature reports several factors that are considered to influence the understandability of process models. However, these studies typically focus on testing of a limited set of factors. A work that collects, abstracts and synthesizes an in-depth summary of the current literature will help in developing the research in this field.
   Objective: We conducted a systematic literature review (SLR) focusing on the empirical studies in the existing literature in order to better understand the state of the research on process model understandability, and identify the gaps and opportunities for future research.
   Method: We searched the studies between the years 1995 and 2015 in established electronic libraries. Out of 1066 publications retrieved initially, we selected 45 publications for thorough analysis. We identified, analyzed and categorized factors that are considered to influence the understandability of process models as studied in the literature using empirical methods. We also analyzed the indicators that are used to quantify process model understandability.
   Results: Our analysis identifies several gaps in the field, as well as issues of inconsistent findings regarding the effect of some factors, unbalanced emphasis on certain indicators, and methodological concerns.
   Conclusions: The existing research calls for comprehensive empirical studies to contribute to a better understanding of the factors of process model understandability. Our study is a comprehensive source for researchers working on the understandability of process models and related fields, and a useful guide for practitioners aiming to generate understandable process models. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Dikici, Ahmet] TUBITAK BILGEM Software Technol Res Inst, Ankara, Turkey.
   [Turetken, Oktay] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Demirors, Onur] Izmir Inst Technol, Dept Comp Engn, Izmir, Turkey.
   [Demirors, Onur] Univ New South Wales, Sch Comp Sci & Engn, Sydney, NSW, Australia.
C3 Turkiye Bilimsel ve Teknolojik Arastirma Kurumu (TUBITAK); Eindhoven
   University of Technology; Izmir Institute of Technology; University of
   New South Wales Sydney
RP Dikici, A (corresponding author), TUBITAK BILGEM Software Technol Res Inst, Ankara, Turkey.
EM ahmet.dikici@tubitak.gov.tr; o.turetken@tue.nl; demirorso@gmail.com
RI Turetken, Oktay/AAA-3441-2020; Turetken, Oktay/H-1667-2015
OI Turetken, Oktay/0000-0003-3798-0439; Demirors, Onur/0000-0001-6601-3937
CR [Anonymous], 2013, Business process management, DOI DOI 10.1007/978-3-642-33143-5
   [Anonymous], 2015, OMG Unified Modeling Language, DOI DOI 10.1007/S002870050092
   [Anonymous], INT C BUS PROC MAN
   [Anonymous], 2015, LNBIP, DOI DOI 10.1007/978-3-319-19237-613
   Bandara W, 2005, EUR J INFORM SYST, V14, P347, DOI 10.1057/palgrave.ejis.3000546
   Becker J, 2000, LECT NOTES COMPUT SC, V1806, P30
   Bennedsen J., 2006, SIGCSE Bulletin, V38, P39, DOI 10.1145/1138403.1138430
   Burton-Jones A, 2009, J ASSOC INF SYST, V10, P495
   Burton-Jones A, 2008, J ASSOC INF SYST, V9, P748, DOI 10.17705/1jais.00179
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Felder RM, 2005, J ENG EDUC, V94, P57, DOI 10.1002/j.2168-9830.2005.tb00829.x
   FELDER RM, 1988, ENG EDUC, V78, P674
   Figl K., 2013, ECIS 2013, P180
   Gassen JB, 2015, LECT NOTES BUS INF P, V215, P69, DOI 10.1007/978-3-319-19243-7_6
   Gemino A, 2004, REQUIR ENG, V9, P248, DOI 10.1007/s00766-004-0204-6
   Glezer C, 2005, INFORM SOFTWARE TECH, V47, P675, DOI 10.1016/j.infsof.2005.01.003
   Guceglioglu AS, 2005, LECT NOTES COMPUT SC, V3792, P118
   Guceglioglu AS, 2005, LECT NOTES COMPUT SC, V3649, P374, DOI 10.1007/11538394_26
   Harmon P., 2014, STATE BUSINESS PROCE, V2014
   Houy Constantin, 2012, Conceptual Modeling. Proceedings 31st International Conference, ER 2012, P64, DOI 10.1007/978-3-642-34002-4_5
   Houy C., 2014, PROC 22 EUROPEAN C I
   Kam CD, 2007, POLIT BEHAV, V29, P415, DOI 10.1007/s11109-007-9037-6
   KANFER R, 1994, J APPL PSYCHOL, V79, P826, DOI 10.1037/0021-9010.79.6.826
   Karagoz N., 2011, CONCEPTUAL MODELING, DOI [10.1201/9781439810385-c7, DOI 10.1201/9781439810385-C7]
   Kember D, 2004, BRIT J EDUC PSYCHOL, V74, P261, DOI 10.1348/000709904773839879
   Kilic O., 2011, ADV DYN STATIC MEDIA
   Kirschner PA, 2002, LEARN INSTR, V12, P1, DOI 10.1016/S0959-4752(01)00014-7
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   LAKHOTIA A, 1993, J SYST SOFTWARE, V23, P269, DOI 10.1016/0164-1212(93)90101-3
   Laue R, 2010, INF SYST E-BUS MANAG, V8, P287, DOI 10.1007/s10257-009-0120-x
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Mayer R. E., 2020, Multimedia Learning, V3rd
   Mendling J, 2008, DATA KNOWL ENG, V64, P312, DOI 10.1016/j.datak.2007.06.019
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Mendling J, 2007, LECT NOTES COMPUT SC, V4714, P48
   Mendling J, 2012, DECIS SUPPORT SYST, V53, P195, DOI 10.1016/j.dss.2011.12.013
   Mendling J, 2009, LECT NOTES COMPUT SC, V5460, P208
   Moody D.L., 2003, ECIS, P1311
   Moody DL, 2004, LECT NOTES COMPUT SC, V3255, P129
   Moreno-Montes de Oca I, 2015, INFORM SOFTWARE TECH, V58, P187, DOI 10.1016/j.infsof.2014.07.011
   Nelson HJ, 2012, SOFTWARE QUAL J, V20, P201, DOI 10.1007/s11219-011-9136-9
   Nigam A, 2003, IBM SYST J, V42, P428, DOI 10.1147/sj.423.0428
   Overhage S, 2012, BUS INFORM SYST ENG+, V4, P229, DOI 10.1007/s12599-012-0230-8
   Pinggera, 2014, PROCESS PROCESS MODE
   Recker J, 2016, BUS INFORM SYST ENG+, V58, P55, DOI 10.1007/s12599-015-0411-3
   Recker J, 2011, MIS QUART, V35, P57
   Recker J, 2010, EUR J INFORM SYST, V19, P76, DOI 10.1057/ejis.2010.5
   Recker J, 2009, J ASSOC INF SYST, V10, P333, DOI 10.17705/1jais.00193
   Reijers HA, 2008, LECT NOTES COMPUT SC, V5240, P20, DOI 10.1007/978-3-540-85758-7_5
   Reijers HA, 2011, INFORM SYST, V36, P881, DOI 10.1016/j.is.2011.03.003
   Reijers H. A., 2010, 16 AM C INF SYST, P12
   Reijers HA, 2011, IEEE T SYST MAN CY A, V41, P449, DOI 10.1109/TSMCA.2010.2087017
   Reijers HA, 2010, INT HANDB INFORM SYS, P167, DOI 10.1007/978-3-642-00416-2_8
   Rolón E, 2009, LECT NOTES BUS INF P, V29, P58
   Rosemann M, 2006, BUS PROCESS MANAG J, V12, P249, DOI 10.1108/14637150610657567
   González LS, 2010, BUS PROCESS MANAG J, V16, P114, DOI 10.1108/14637151011017976
   Schrepfer M., 2010, MODELING GUIDELINES
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Sweller J., 1994, Learning and instruction, P295, DOI DOI 10.1016/0959-4752(94)90003-5
   Turetken O., 2013, CCIS, V360, P34, DOI [10.1007/978- 3- 642-36754-0, DOI 10.1007/978-3-642-36754-0]
   Turetken O, 2011, INFORM MANAGE-AMSTER, V48, P235, DOI 10.1016/j.im.2011.06.001
   van der Aalst WMP, 2006, LECT NOTES COMPUT SC, V4184, P1
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Webster J, 2002, MIS QUART, V26, pXIII
   WINN W, 1993, CONTEMP EDUC PSYCHOL, V18, P162, DOI 10.1006/ceps.1993.1016
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Zugal S., 2012, P 2 EDITION INT WORK, DOI DOI 10.1145/2424563.2424571
   Zugal S, 2012, LECT NOTES BUS INF P, V113, P167
NR 68
TC 53
Z9 54
U1 1
U2 27
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2018
VL 93
BP 112
EP 129
DI 10.1016/j.infsof.2017.09.001
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FM3BC
UT WOS:000414878200008
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Tausan, N
   Markkula, J
   Kuvaja, P
   Oivo, M
AF Tausan, Nebojsa
   Markkula, Jouni
   Kuvaja, Pasi
   Oivo, Markku
TI Choreography in the embedded systems domain: A systematic literature
   review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Choreography; Service-oriented architecture; Embedded systems;
   Systematic literature review
AB Context: Software companies that develop their products on a basis of service-oriented architecture can expect various improvements as a result of choreography. Current choreography practices, however, are not yet used extensively in the embedded systems domain even though service-oriented architecture is increasingly used in this domain.
   Objective: The objective of this study is to identify current features of the use of choreography in the embedded systems domain for practitioners and researchers by systematically analysing current developments in the scientific literature, strategies for choreography adaption, choreography specification and execution types, and implicit assumptions about choreography.
   Method: To fulfil this objective, a systematic literature review of scientific publications that focus on the use of choreography in the embedded systems domain was carried out. After a systematic screening of 6823 publications, 48 were selected as primary studies and analysed using thematic synthesis.
   Results: The main results of the study showed that there are differences in how choreography is used in embedded and non-embedded systems domain. In the embedded systems domain, it is used to capture the service interactions of a single organisation, while, for example, in the enterprise systems domain it captures the service interactions among multiple organisations. Additionally, the results indicate that the use of choreography can lead to improvements in system performance and that the languages that are used for choreography modelling in the embedded systems domain are insufficiently expressive to capture the complexities that are typical in this domain.
   Conclusion: The selection of the key information resources and the identified gaps in the existing literature offer researchers a foundation for further investigations and contribute to the advancement of the use of choreography in the embedded systems domain. The study results facilitate the work of practitioners by allowing them to make informed decisions about the applicability of choreography in their organisations. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Tausan, Nebojsa; Markkula, Jouni; Kuvaja, Pasi; Oivo, Markku] Univ Oulu, Res Unit M3S, POB 3000, Oulu, Finland.
C3 University of Oulu
RP Tausan, N (corresponding author), Univ Oulu, Res Unit M3S, POB 3000, Oulu, Finland.
EM nebojsa.tausan@oulu.fi
RI Taušan, Nebojša/S-1995-2016; Markkula, Jouni/D-1355-2014
OI Taušan, Nebojša/0000-0001-9663-7951; 
FU Tekes the Finnish Funding Agency for Innovation
FX This study is part of AMALTHEA and DIGILE - N4S (Need for Speed)
   projects. Both projects are funded by Tekes the Finnish Funding Agency
   for Innovation. The authors are also grateful to Professor June Verner
   for providing guidance and constructive feedback and to Qianhui Zhong
   for helping during the realisation of the search protocol.
CR Ahmed T, 2014, LECT NOTES COMPUT SC, V8831, P429, DOI 10.1007/978-3-662-45391-9_33
   [Anonymous], 2011, P 8 MIDDL DOCT S, DOI DOI 10.1145/2088960.2088971
   [Anonymous], 2005, Enterprise SOA: service-oriented architecture best practices
   [Anonymous], 2012, Business Process Management: Concepts, Languages, Architectures
   Becker A., 2009, P EUR C INF SYST ECI
   Bocchi Laura, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P1059, DOI 10.1109/COMPSAC.2008.228
   BPMN, 2011, BUS PROC MOD NOT VER
   Cambronero ME, 2006, SCW 2006: IEEE SERVICES COMPUTING WORKSHOPS, PROCEEDINGS, P131
   Cândido G, 2009, ENG APPL ARTIF INTEL, V22, P939, DOI 10.1016/j.engappai.2008.10.020
   Cannata A., 2008, MANUFACTURING IND EN
   Herrera EC, 2013, 2013 SEVENTH INTERNATIONAL CONFERENCE ON INNOVATIVE MOBILE AND INTERNET SERVICES IN UBIQUITOUS COMPUTING (IMIS 2013), P416, DOI 10.1109/IMIS.2013.154
   Chan Pat, 2008, 2008 IEEE Aerospace Conference Proceedings, P1
   Cherrier S., 2011, Proceedings of the 2011 IEEE International Conference on Internet of Things and 4th IEEE International Conference on Cyber, Physical and Social Computing (iThings/CPSCom 2011), P16, DOI 10.1109/iThings/CPSCom.2011.33
   Cherrier S, 2015, 2015 IEEE 2ND WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P256, DOI 10.1109/WF-IoT.2015.7389062
   Cherrier S, 2014, 2014 IEEE WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P532, DOI 10.1109/WF-IoT.2014.6803224
   Cherrier S, 2014, MOBILE NETW APPL, V19, P18, DOI 10.1007/s11036-013-0481-8
   Cherrier S, 2013, IEEE ICC, P3006, DOI 10.1109/ICC.2013.6655001
   Cherrier S, 2012, 2012 IEEE SYMPOSIUM ON COMPUTERS AND COMMUNICATIONS (ISCC), P411, DOI 10.1109/ISCC.2012.6249331
   CHOReOS, 2010, CHOREOS LARG SCAL CH
   CHOReVOLUTION, 2015, AUT SYNTH DYN SEC CH
   Ciancia V, 2011, LECT NOTES COMPUT SC, V6582, P326, DOI 10.1007/978-3-642-20401-2_15
   Ciancia V, 2010, SCI COMPUT PROGRAM, V75, P848, DOI 10.1016/j.scico.2010.02.009
   Cortes-Cornax M, 2013, LECT NOTES COMPUT SC, V8186, P343, DOI 10.1007/978-3-642-41033-8_44
   Cottenier T., 2005, WORKSH BUILD SOFTW P
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dar K, 2015, PERVASIVE MOB COMPUT, V20, P145, DOI 10.1016/j.pmcj.2014.11.005
   de Souza VASM, 2005, LECT NOTES COMPUT SC, V3826, P465
   Delamer IM, 2006, 20TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS, VOL 2, PROCEEDINGS, P573
   Delamer IM, 2006, IEEE INT CONF ROBOT, P681, DOI 10.1109/ROBOT.2006.1641789
   DESOUZA VAS, 2006, J SOFTWARE, V1, P1
   Dijkman R, 2004, INT J COOP INF SYST, V13, P337, DOI 10.1142/S0218843004001012
   Duhart C, 2016, INT J WIREL INF NETW, V23, P173, DOI 10.1007/s10776-016-0316-1
   Ebert C, 2009, COMPUTER, V42, P42, DOI 10.1109/MC.2009.118
   EMF, 2014, ECL MOD FRAM PROJ
   Fernandez-Llatas Carlos, 2010, 2010 Proceedings of the International Workshop on Semantic Sensor Web (SSW 2010) in conjunction with IC3K 2010, P32
   Ferrari G, 2006, LECT NOTES COMPUT SC, V4229, P46
   Ganssle J., 2003, Embedded Systems Dictionary
   Homann U, 2004, COMMUN ACM, V47, P34, DOI 10.1145/986213.986234
   Honda K, 2011, LECT NOTES COMPUT SC, V6536, P55, DOI 10.1007/978-3-642-19056-8_4
   Hu JP, 2014, 2014 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC 2014), P243, DOI 10.1109/SCC.2014.40
   Hu R, 2013, LECT NOTES COMPUT SC, V8174, P130, DOI 10.1007/978-3-642-40787-1_8
   IMC-AESOP European Commission, 2015, CORDIS PROJ RES SERV
   Jie G., 2009, P 5 INT C WIR COMM N, P1, DOI DOI 10.1109/WICOM.2009.5303617
   Jordan Diane., 2007, Web services business process execution language version 2.0. OASIS standard, V11, P11
   Karnouskos Stamatis, 2010, IECON 2010 - 36th Annual Conference of IEEE Industrial Electronics, P1385, DOI 10.1109/IECON.2010.5675482
   Kattepur A, 2013, LECT NOTES COMPUT SC, V8274, P23, DOI 10.1007/978-3-642-45005-1_3
   Kaur N, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON INDUSTRIAL TECHNOLOGY (ICIT), P2964, DOI 10.1109/ICIT.2015.7125535
   Kavantzas N., 2005, W3C candidate recommendation, P9
   Kirkham T., 2008, 2008 6th IEEE International Conference on Industrial Informatics (INDIN), P1419, DOI 10.1109/INDIN.2008.4618326
   Kitchenham B., 2007, ENGINEERING, V45, P1051
   Kothmayr T., 2014, P 2014 IEEE EM TECHN, P1, DOI 10:1109=ETFA:2014:7005260
   Kothmayr T., 2015, P 20 C EM TECHN FACT, P1, DOI [10.1109/ETFA.2015.7301434, DOI 10.1109/ETFA.2015.7301434]
   Leitao P., 2015, COMPUT IND, V81, P11
   Leite LAF, 2013, SERV ORIENTED COMPUT, V7, P199, DOI 10.1007/s11761-012-0125-z
   Lescevica M, 2013, PROCEDIA COMPUT SCI, V26, P51, DOI 10.1016/j.procs.2013.12.007
   Liggesmeyer P, 2009, IEEE SOFTWARE, V26, P19, DOI 10.1109/MS.2009.80
   MacKenzie C. M., 2006, REFERENCE MODEL SERV, P18
   March Verdi, 2013, Service-Oriented Computing - ICSOC 2012 Workshops. ICSOC 2012 International Workshops: ASC, DISA, PAASC, SCEB, SeMaPS, WESOA and Satellite Events. Revised Selected Papers, P59
   Menkens C, 2011, J INTERNET SERV APPL, V2, P95, DOI 10.1007/s13174-011-0028-9
   Mersch H, 2010, IEEE IND ELEC
   Minor J., 2012, ICONS 2012 7 INT C S, P88
   Mostarda L, 2010, INT CON ADV INFO NET, P166, DOI 10.1109/AINA.2010.100
   Nicolás J, 2009, INFORM SOFTWARE TECH, V51, P1291, DOI 10.1016/j.infsof.2009.04.001
   Pedraza G, 2009, LECT NOTES COMPUT SC, V5543, P75, DOI 10.1007/978-3-642-01680-6_9
   Peltz C, 2003, COMPUTER, V36, P46, DOI 10.1109/MC.2003.1236471
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Phaithoonbuathong P., 2008, Second IEEE International Conference on Digital Ecosystems and Technologies (IEEE DEST 2008), P288, DOI 10.1109/DEST.2008.4635176
   PLANTCockpit, 2013, PLASNTCOCKPIT SERV O
   QSR International, 2014, NVIVO 10 RES SOFTW A
   Ramis B, 2013, IEEE INTL CONF IND I, P212, DOI 10.1109/INDIN.2013.6622884
   Rossebo JEY, 2008, ARES 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON AVAILABILITY, SECURITY AND RELIABILITY, P597, DOI 10.1109/ARES.2008.43
   Rossebo JEY, 2008, LECT NOTES COMPUT SC, V5301, P520, DOI 10.1007/978-3-540-87875-9_37
   Sadok E. F., 2005, P IEEE INSTR MEAS TE, P554
   Schelp J., 2009, Proceeding of the 42nd Hawaii International Conference on System Sciences, P1
   Scholz A, 2009, IEEE INTL CONF IND I, P599, DOI 10.1109/INDIN.2009.5195871
   Schulte Stefan, 2008, Second IEEE International Conference on Digital Ecosystems and Technologies (IEEE DEST 2008), P155, DOI 10.1109/DEST.2008.4635153
   Sen R, 2008, LECT NOTES COMPUT SC, V5052, P280, DOI 10.1007/978-3-540-68265-3_18
   SENSORIA, 2005, SOFTW ENG SERV OR OV
   Starke G, 2013, 2013 IEEE INTERNATIONAL CONFERENCE ON INDUSTRIAL TECHNOLOGY (ICIT), P1982, DOI 10.1109/ICIT.2013.6505982
   Tausan N., 2013, P 8 INT C SOFTW ENG, P184
   VAALID, 2008, ACC US VAL FRAM AAL
   Wohlin C., 2014, P 8 ACM IEEE INT S E, V46, P1, DOI [10.1145/2652524.2652559, DOI 10.1145/2652524.2652559]
   Zayati A, 2012, J INTELL MANUF, V23, P125, DOI 10.1007/s10845-010-0401-8
   Zhuoyao Zhang, 2008, 2008 11th IEEE International Conference on Communication Technology (ICCT 2008), P592, DOI 10.1109/ICCT.2008.4716138
NR 85
TC 10
Z9 11
U1 0
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2017
VL 91
BP 82
EP 101
DI 10.1016/j.infsof.2017.06.008
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FG3DV
UT WOS:000410017900006
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Martínez-Fernández, S
   Ayala, CP
   Franch, X
   Marques, HM
AF Martinez-Fernandez, Silverio
   Ayala, Claudia P.
   Franch, Xavier
   Martins Marques, Helena
TI Benefits and drawbacks of software reference architectures: A case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architecture; Reference architecture; Empirical software
   engineering; Case study; Benefits; Drawbacks
ID DESIGN
AB Context: Software Reference Architectures (SRAs) play a fundamental role for organizations whose business greatly depends on the efficient development and maintenance of complex software applications. However, little is known about the real value and risks associated with SRAs in industrial practice.
   Objective: To investigate the current industrial practice of SRAs in a single company from the perspective of different stakeholders.
   Method: An exploratory case study that investigates the benefits and drawbacks perceived by relevant stakeholders in nine SRAs designed by a multinational software consulting company.
   Results: The study shows the perceptions of different stakeholders regarding the benefits and drawbacks of SRAs (e.g., both SRA designers and users agree that they benefit from reduced development costs; on the contrary, only application builders strongly highlighted the extra learning curve as a drawback associated with mastering SRAs). Furthermore, some of the SRA benefits and drawbacks commonly highlighted in the literature were remarkably not mentioned as a benefit of SRAs (e.g., the use of best practices). Likewise, other aspects arose that are not usually discussed in the literature, such as higher time-to-market for applications when their dependencies on the SRA are managed inappropriately.
   Conclusions: This study aims to help practitioners and researchers to better understand real SRAs projects and the contexts where these benefits and drawbacks appeared, as well as some SRA improvement strategies. This would contribute to strengthening the evidence regarding SRAs and support practitioners in making better informed decisions about the expected SRA benefits and drawbacks. Furthermore, we make available the instruments used in this study and the anonymized data gathered to motivate others to provide similar evidence to help mature SRA research and practice. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Martinez-Fernandez, Silverio] Fraunhofer Inst Expt Software Engn, Fraunhofer Pl 1, D-67663 Kaiserslautern, Germany.
   [Martinez-Fernandez, Silverio; Ayala, Claudia P.; Franch, Xavier] UPC, Grp Software & Serv Engn GESSI, BarcelonaTech, Jordi Girona 1-3,Omega Bldg, Barcelona, Catalonia, Spain.
   [Martins Marques, Helena] Everis, Diagonal 605, Barcelona, Spain.
C3 Fraunhofer Gesellschaft; Universitat Politecnica de Catalunya
RP Martínez-Fernández, S (corresponding author), Fraunhofer Inst Expt Software Engn, Fraunhofer Pl 1, D-67663 Kaiserslautern, Germany.
EM Silverio.Martinez@iese.fraunhofer.de
RI Martínez-Fernández, Silverio/P-5615-2014; Franch, Xavier/A-8588-2008
OI Martínez-Fernández, Silverio/0000-0001-9928-133X; 
FU ERCIM Fellowship Programme; Spanish grant [FPU12/00690]; Catedra evens
   contract
FX This work has been supported by the ERCIM Fellowship Programme, the
   Spanish grant FPU12/00690, and the Catedra evens contract. We thank all
   participants of the case study. We also thank Samuil Angelov, Matthias
   Galster, and Elisa Nakagawa, who gave feedback about the comparison
   between SRAs and PLAs.
CR Angelov Samuil, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P17, DOI 10.1007/978-3-642-39031-9_2
   Angelov S, 2012, INFORM SOFTWARE TECH, V54, P417, DOI 10.1016/j.infsof.2011.11.009
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2011, SOA REF ARCH
   AUTOSAR, 2013, ATZEXTRA WORLDW, V18, P5
   Ayala C, 2011, J SYST SOFTWARE, V84, P620, DOI 10.1016/j.jss.2010.10.019
   Ballard C., 2014, INFORM GOVERNANCE PR
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Brand S., 2014, ACCENTURE HAS BUSINE
   Cloutier R, 2010, SYSTEMS ENG, V13, P14, DOI 10.1002/sys.20129
   Cruzes DS, 2015, EMPIR SOFTW ENG, V20, P1634, DOI 10.1007/s10664-014-9326-8
   Deelstra S, 2005, J SYST SOFTWARE, V74, P173, DOI 10.1016/j.jss.2003.11.012
   Dillon W.R., 1984, MULTIVARIATE ANAL ME
   Dobrica L, 2011, ANAL CROSS DOMAIN RE
   Eklund U., 2012, WICSA ECSA, P104
   EKLUND U, 2005, SIGSOFT SOFTW ENG NO, V30, P1
   Gallagher B.P., 2000, Using the Architecture Tradeoff Analysis Method to Evaluate a Reference Architecture: A Case Study
   Galster M., 2011, JOINT ACM SIGSOFT C, P153, DOI DOI 10.1145/2000259.2000285
   Galster M, 2015, COBRA'15 PROCEEDINGS OF THE 1ST INTERNATIONAL WORKSHOP ON EXPLORING COMPONENT-BASED TECHNIQUES FOR CONSTRUCTING REFERENCE ARCHITECTURES, P5, DOI 10.1145/2755567.2755570
   Galster M, 2013, INFORM SOFTWARE TECH, V55, P428, DOI 10.1016/j.infsof.2012.09.011
   Graaf B, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P354, DOI 10.1109/CSMR.2005.28
   Grosskurth A, 2005, PROC IEEE INT CONF S, P661
   Henning M., 2006, RISE FALL CORBA
   Herold S., 2013, CHECKING CONFORMANCE
   Kruchten P.., 2004, RATIONAL UNIFIED PRO
   Martinez-Fernandez Silverio, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P307, DOI 10.1007/978-3-642-39031-9_26
   Martinez-Fernandez Silverio, 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P97, DOI 10.1007/978-3-642-38977-1_7
   Martinez-Fernandez S., 2014, ARTIFACTS SOFTWARE R
   Martinez-Fernandez S., 2014, J SOFTW ENG RES DEV, V2
   Martínez-Fernández S, 2015, INT SYMP EMP SOFTWAR, P154, DOI 10.1109/ESEM.2015.7321184
   Martinez -Fernandez Silverio, 2014, Proceedings of the 2nd International Workshop on Conducting Empirical Studies in Industry, P15, DOI [10.1115/2593690.2593696, DOI 10.1115/2593690.2593696]
   Mazzini Silvia, 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P113, DOI 10.1007/978-3-642-38977-1_8
   dos Santos PSM, 2013, ELECTRON NOTES THEOR, V292, P95, DOI 10.1016/j.entcs.2013.02.008
   Meier J., 2009, Microsoft Application Architecture Guide
   Muller G., 2009, RES REFERENCE ARCHIT
   Murer S., 2013, IEEE SOFTWARE, P9
   Nakagawa EY, 2011, LECT NOTES COMPUT SC, V6903, P207, DOI 10.1007/978-3-642-23798-0_22
   NASA, 2012, ESDS REF ARCH DEC SU
   Northrop L.M., 2007, FRAMEWORK SOFTWARE P
   Pääkkönen P, 2015, BIG DATA RES, V2, P166, DOI 10.1016/j.bdr.2015.01.001
   Reed Paul., 2002, Reference Architecture: The best of best practices
   Oliveira LBR, 2011, LECT NOTES COMPUT SC, V6903, P405, DOI 10.1007/978-3-642-23798-0_42
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sandberg AB, 2011, IEEE SOFTWARE, V28, P74, DOI 10.1109/MS.2011.49
   Scott D., 2012, GARTNER HYPE CYCLE R
   Seddon PB, 2012, EUR J INFORM SYST, V21, P6, DOI 10.1057/ejis.2011.9
   Weyrich M, 2016, IEEE SOFTWARE, V33, P112, DOI 10.1109/MS.2016.20
NR 47
TC 11
Z9 13
U1 0
U2 9
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2017
VL 88
BP 37
EP 52
DI 10.1016/j.infsof.2017.03.011
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW2TI
UT WOS:000402348500003
OA Green Published
DA 2024-07-18
ER

PT J
AU Ouni, A
   Kula, RG
   Kessentini, M
   Ishio, T
   German, DM
   Inoue, K
AF Ouni, Ali
   Kula, Raula Gaikovina
   Kessentini, Marouane
   Ishio, Takashi
   German, Daniel M.
   Inoue, Katsuro
TI Search-based software library recommendation using multi-objective
   optimization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Search-based software engineering; Software library; Software reuse;
   Multi-objective optimization
ID GENETIC ALGORITHM; API USAGE; CONTEXT
AB Context: Software library reuse has significantly increased the productivity of software developers, reduced time-to-market and improved software quality and reusability. However, with the growing number of reusable software libraries in code repositories, finding and adopting a relevant software library becomes a fastidious and complex task for developers.
   Objective: In this paper, we propose a novel approach called LibFinder to prevent missed reuse opportunities during software maintenance and evolution. The goal is to provide a decision support for developers to easily find "useful" third-party libraries to the implementation of their software systems.
   Method: To this end, we used the non-dominated sorting genetic algorithm (NSGA-II), a multi-objective search-based algorithm, to find a trade-off between three objectives : 1) maximizing co-usage between a candidate library and the actual libraries used by a given system, 2) maximizing the semantic similarity between a candidate library and the source code of the system, and 3) minimizing the number of recommended libraries.
   Results: We evaluated our approach on 6083 different libraries from Maven Central super repository that were used by 32,760 client systems Obtained from Github super repository. Our results show that our approach outperforms three other existing search techniques and a state-of-the art approach, not based on heuristic search, and succeeds in recommending useful libraries at an accuracy score of 92%, precision of 51% and recall of 68%, while finding the best trade-off between the three considered objectives. Furthermore, we evaluate the usefulness of our approach in practice through an empirical study on two industrial Java systems with developers. Results show that the top 10 recommended libraries was rated by the original developers with an average of 3.25 out of 5.
   Conclusion: This study suggests that (1) library usage history collected from different client systems and (2) library semantics/content embodied in library identifiers should be balanced together for an efficient library recommendation technique. (C) 2016 Elsevier By. All rights reserved.
C1 [Ouni, Ali; Kula, Raula Gaikovina; Ishio, Takashi; Inoue, Katsuro] Osaka Univ, IST, Dept Comp Sci, Osaka, Japan.
   [Ouni, Ali] UAE Univ, Dept Comp Sci & Software Engn, Al Ain, U Arab Emirates.
   [Kessentini, Marouane] Univ Michigan, Dept Comp & Informat Sci, Ann Arbor, MI 48109 USA.
   [German, Daniel M.] Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
C3 Osaka University; United Arab Emirates University; University of
   Michigan System; University of Michigan; University of Victoria
RP Ouni, A (corresponding author), Osaka Univ, IST, Dept Comp Sci, Osaka, Japan.; Ouni, A (corresponding author), UAE Univ, Dept Comp Sci & Software Engn, Al Ain, U Arab Emirates.
EM ouniaali@gmail.com
RI Kula, Raula/AAD-6079-2019; Ouni, Ali/Y-8280-2019
OI Kula, Raula/0000-0003-2324-0608; Ouni, Ali/0000-0003-4708-0362; Ishio,
   Takashi/0000-0003-4106-699X
FU Japan Society for the Promotion of Science [JP25220003]; Ford-University
   of Michigan alliance Program
FX The authors would like to thank all the particpants of our study. This
   work was supported by Japan Society for the Promotion of Science,
   Grant-in-Aid for Scientific Research (S) Collecting, Analyzing, and
   Evaluating Software Assets for Effective Reuse (Grant Number
   JP25220003), and by the Ford-University of Michigan alliance Program.
CR Adomavicius G, 2005, IEEE T KNOWL DATA EN, V17, P734, DOI 10.1109/TKDE.2005.99
   [Anonymous], 2003, Modernizing Legacy Systems: Software Technologies, Engineering Processes,and Business Practices
   [Anonymous], 2011, INTRO RECOMMENDER SY
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Avazpour I, 2014, Recomm Syst Softw Eng, P245
   Bajracharya S.K., 2010, P 18 ACM SIGSOFT INT, P157, DOI 10.1145/1882291.1882316
   Boehm BW., 1981, Software Engineering Economics
   Canfora G, 2015, SOFTW TEST VERIF REL, V25, P426, DOI 10.1002/stvr.1570
   Chan W., 2012, PROC ACM SIGSOFT 20, P1, DOI DOI 10.1145/2393596.2393606
   CHISNALL PM, 1993, J MARKET RES SOC, V35, P392
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cruz J, 2013, 2013 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P2229
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2001, WIL INT S SYS OPT
   Eiben AE, 2011, SWARM EVOL COMPUT, V1, P19, DOI 10.1016/j.swevo.2011.02.001
   Felfernig A, 2011, RECOMMENDER SYSTEMS HANDBOOK, P187, DOI 10.1007/978-0-387-85820-3_6
   Ferrucci F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P462, DOI 10.1109/ICSE.2013.6606592
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   FONSECA C, 2005, 3 INT C EV MULT OPT, V216
   Guo JM, 2011, J SYST SOFTWARE, V84, P2208, DOI 10.1016/j.jss.2011.06.026
   Harman M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P5, DOI 10.1145/2648511.2648513
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P1, DOI 10.1145/2593929.2600116
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Heinemann L, 2012, EUR CON SFTWR MTNCE, P31, DOI 10.1109/CSMR.2012.14
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P400, DOI 10.1145/2591062.2591108
   Ishio T., 2016, IEEE WORK C MIN SOFT
   Ishizaki K., 2011, P WORKSH PAR DISTR S, P35, DOI [10.1145/2002962.2002970, DOI 10.1145/2002962.2002970]
   Juergens E, 2010, EUR CON SFTWR MTNCE, P78, DOI 10.1109/CSMR.2010.33
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   KARLSSON EA, 1995, SOFTWARE REUSE HOLIS
   Karnopp DC., 1963, Automatica, V1, P111, DOI [DOI 10.1016/0005-1098(63)90018-9, 10.1016/0005-1098(63)90018-9]
   Kawaguchi S, 2006, J SYST SOFTWARE, V79, P939, DOI 10.1016/j.jss.2005.06.044
   Kawrykow D, 2009, IEEE INT CONF AUTOM, P111, DOI 10.1109/ASE.2009.62
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Kula RG, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P520, DOI 10.1109/SANER.2015.7081869
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Li H, 2009, IEEE T EVOLUT COMPUT, V13, P284, DOI 10.1109/TEVC.2008.925798
   Li J, 2011, ADV INTEL SOFT COMPU, V124, P459
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   LIM WC, 1994, IEEE SOFTWARE, V11, P23, DOI 10.1109/52.311048
   Lopez-Herrejon RE, 2015, INFORM SOFTWARE TECH, V61, P33, DOI 10.1016/j.infsof.2015.01.008
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   McCarey F, 2005, ARTIF INTELL REV, V24, P253, DOI 10.1007/s10462-005-9012-8
   McMillan C, 2012, PROC INT CONF SOFTW, P848, DOI 10.1109/ICSE.2012.6227134
   Minim L.L., 2013, ACM T SOFTW ENG METH, V22
   Muller J., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P15, DOI 10.1109/SPLC.2011.18
   Ouni A., 2014, THESIS
   Ouni A., 2016, IEEE INT C SOFTW MAI
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Ouni A, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P91, DOI 10.1109/ICWS.2016.20
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Patanamon T., 2015, 22 IEEE INT C SOFTW
   Raemaekers S., 2014, SEMANTIC VERSIONING
   Saied MA, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P23, DOI 10.1109/SANER.2015.7081812
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Schäfer M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P71, DOI 10.1145/1985793.1985804
   Sommerville I., 2001, SOFTWARE ENG, V6
   Thung F, 2013, IEEE INT CONF AUTOM, P290, DOI 10.1109/ASE.2013.6693088
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Tsunoda M., 2005, 17 INT C SOFTW ENG K, P491
   Uddin G, 2012, PROC INT CONF SOFTW, P804, DOI 10.1109/ICSE.2012.6227138
   Van Veldhuizen DA, 2000, IEEE C EVOL COMPUTAT, P204, DOI 10.1109/CEC.2000.870296
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Yoo S., AMORTISED OPTIMISATI, P31
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 73
TC 56
Z9 58
U1 0
U2 30
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2017
VL 83
BP 55
EP 75
DI 10.1016/j.infsof.2016.11.007
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ1YO
UT WOS:000393006700004
DA 2024-07-18
ER

EF