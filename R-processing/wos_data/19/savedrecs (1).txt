FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Kardasis, P
   Loucopoulos, P
AF Kardasis, P
   Loucopoulos, P
TI Expressing and organising business rules
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE business rules; event-condition-action paradigm; repository; rule
   management
AB Business rules represent projections of organisations' constraints and ways of working on their supporting information systems. Therefore, their collection, expression, structuring and organisation should be central activities within information systems analysis. The work presented in this paper concerns the definition of a repository schema for managing business rules, taking into account the objectives (a) to facilitate the rule collection process, (b) to assist the transition from analysis to design and implementation of the information system, and (c) to support business change once the new system has been delivered. These objectives are achieved through the enhancement of the rule repository schema with information on the logistics of the collection process and references to underlying enterprise informational and behavioural knowledge models. The proposed schema and way of working are demonstrated through a number of examples, which are derived from an industrial project concerning electronic procurement in the construction sector. (C) 2003 Elsevier B.V. All rights reserved.
C1 UMIST, Dept Computat, Manchester M60 1QD, Lancs, England.
   Deloitte & Touche Consulting, Athens 15231, Greece.
C3 University of Manchester; Deloitte Touche Tohmatsu Limited
RP UMIST, Dept Computat, POB 88, Manchester M60 1QD, Lancs, England.
EM panos_kardasis@hotmail.com; pl@co.umist.ac.uk
RI Loucopoulos, Pericles/O-4423-2019
OI Loucopoulos, Pericles/0000-0003-1395-5001
CR AMGHAR Y, 2000, USING BUSINESS RULES, V11, P3
   Assche F.V., 1988, KNOWLEDGE BASED SYST, V1
   Dayal U., 1988, 3RD P INT C DAT KNOW, P150
   Eriksson H., 2000, Business modelling with UML
   GOTTESDIENER E, 1997, APPL DEV TRENDS, V4
   HALLE BV, 1994, DATABASE PROGRA  OCT
   HALPIN T, 1995, CONCEPTUAL SCHEMA RE
   HAY D, 1997, GUIDE
   Herbst H, 1996, INFORM SYST, V21, P147, DOI 10.1016/0306-4379(96)00009-9
   Herbst H., 1996, THESIS
   Iivari J., 1991, European Journal of Information Systems, V1, P249, DOI 10.1057/ejis.1991.47
   KARDASIS P, 2000, DEXA 2000 DOME INT W, P818
   KARDASIS P, 2003, P 6 INT C BUS INF SY, P239
   Kavakli V, 1999, INFORM SYST, V24, P187, DOI 10.1016/S0306-4379(99)00015-0
   KRAMMER MI, 1997, DISTRIBUTED COMP MAY, P1997
   Loucopoulos P, 2000, INFORMATION SYSTEMS ENGINEERING, P67
   LOUCOPOULOS P, 1997, INT S PAST PRES FUT, P123
   Loucopoulos P., 1995, INT J INTELLIGENT CO, V4
   Martin J., 1998, OBJECT ORIENTED METH
   MCMENAMIN S, 1984, ESSENTIAL SYSTEM ANA
   MENS K, 1998, ECOOP 98
   MORIARTY T, 1993, DATABASE PROGRAM FEB
   Mylopoulos J, 1998, INFORM SYST, V23, P127, DOI 10.1016/S0306-4379(98)00005-2
   NUSIEBEH B, 1994, IEEE T SOFTWARE ENG, V20
   Prekas N., 2000, REQUIREMENTS ENG J, V5
   ROBINSON K, 1994, OBJECT ORIENTED SSAD
   ROLLAND C, 2003, 17 INT C EL DISTR BA
   ROSCA D, 1995, 10 KNOWL BAS SOFTW E
   Rosca D., 1996, SOFTW ENG SOFTW ENG
   Ross R.G., 1998, PUTTING BUSINESS RUL
   Ross R.G., 1997, DATA BASE NEWSLETTER
   Snoeck M., 2000, INT WORKSH ENT DOM E
   Wangler B., 1999, 9 EUR JAP C INF MOD
   Zaniolo C., 1997, ADV DATABASE SYSTEMS
   [No title captured]
NR 35
TC 36
Z9 41
U1 0
U2 8
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 1
PY 2004
VL 46
IS 11
BP 701
EP 718
DI 10.1016/j.infsof.2003.12.003
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 827LP
UT WOS:000221901600001
DA 2024-07-18
ER

PT J
AU Xing, DS
   Shen, JY
AF Xing, DS
   Shen, JY
TI Efficient data mining for web navigation patterns
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE preferred navigation patterns; preference; web usage mining; web log;
   E-business
AB The concept of preference is proposed on the analysis of the present algorithms for mining user navigation patterns. It is based on the following hypothesis: if there are many different selections to leave a page, those selections that occur more frequently and the next page is viewed longer reveal user interest and preference. Representing user navigation interest and intention accurately by comparing relatively access ratio and the average of relatively access ratio of viewing time and selective intention, preference can be used for mining user navigation pattern instead of confidence. The higher preference, the more prefer to choose the selection. According to the conception, we propose two efficient algorithms based on the concept, UAM and PNT, which are developed for mining user preferred navigation patterns. Considering the structure of Web site, UAM can get user access preferred path by the page-page transition probabilities statistics of all users behaviours. PNT looks far into the past to correctly discriminate the different behavioral modes of the different users. Experiments show accuracy and scalability of the algorithms. It is suitable for applications in E-business, such as to optimize Web site or to design personalized service. (C) 2003 Elsevier B.V. All rights reserved.
C1 Xi An Jiao Tong Univ, Sch Elect & Informat Engn, Inst Comp Software, Xian 710049, Peoples R China.
C3 Xi'an Jiaotong University
RP Xing, DS (corresponding author), Xi An Jiao Tong Univ, Sch Elect & Informat Engn, Inst Comp Software, Xian 710049, Peoples R China.
EM dsxing@hotmail.com
CR Agrawal R., 1995, P 11 INT C DAT ENG
   Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   Borges J, 2000, LECT NOTES COMPUT SC, V1836, P92
   Chen MS, 1998, IEEE T KNOWL DATA EN, V10, P209, DOI 10.1109/69.683753
   COOLEY R, 1999, J KNOWLEDGE INFORMAT, V1
   Han J., 2000, P ACM SIGMOD INT C M, P1
   Han J, 2000, P 2000 ACM SIGMOD IN, P1, DOI DOI 10.1145/342009.335372
   Mannila H, 1997, DATA MIN KNOWL DISC, V1, P259, DOI 10.1023/A:1009748302351
   NANOPOULOS A, 2000, P E EUR C ADV DAT IN, P215
   PALIOURAS G, 1998, COMPUT SCI, V1513, P367
   Park JS, 1997, IEEE T KNOWL DATA EN, V9, P813, DOI 10.1109/69.634757
   PERKOWITZ M, 2000, ARTIFICIAL INTELL, V118
   Spiliopoulou M, 1999, COMPUT SYST SCI ENG, V14, P113
   SULLIVAN T, 1997, P 3 C HUM FACT WEB D
   Tauscher L, 1997, INT J HUM-COMPUT ST, V47, P97, DOI 10.1006/ijhc.1997.0125
   Xiao YQ, 2001, DATA KNOWL ENG, V39, P191, DOI 10.1016/S0169-023X(01)00039-8
   ZAIANE O, 1998, P ADV DIG LIB C ADL, P144
NR 17
TC 29
Z9 33
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN 1
PY 2004
VL 46
IS 1
BP 55
EP 63
DI 10.1016/S0950-5849(03)00109-5
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 762HG
UT WOS:000187965600004
DA 2024-07-18
ER

PT J
AU Mund, GB
   Mall, R
   Sarkar, S
AF Mund, GB
   Mall, R
   Sarkar, S
TI Computation of intraprocedural dynamic program slices
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE program slicing; static slicing; dynamic slicing; program debugging;
   control flow graph; program dependence graph; unstructured program
   dependence graph
ID UNSTRUCTURED PROGRAMS; DEPENDENCE GRAPH; MAINTENANCE; STATEMENTS
AB Dynamic slicing algorithms are used in interactive applications such as program debugging and testing. Therefore, these algorithms need to be very efficient. In this context, we propose three intraprocedural dynamic slicing algorithms which are more space and time efficient than the existing algorithms. Two of the proposed algorithms compute precise dynamic slices of structured programs using Program Dependence Graph as an intermediate representation. To compute precise dynamic slices of unstructured programs, we introduce the concepts of jump dependence and Unstructured Program Dependence Graph. The third algorithm uses Unstructured Program Dependence Graph as the intermediate program representation, and computes precise dynamic slices of unstructured programs. We show that each of our proposed algorithms is more space and time efficient than the existing algorithms. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Indian Inst Technol, Dept Comp Sci & Engn, Kharagpur 721302, W Bengal, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Kharagpur
RP Indian Inst Technol, Dept Comp Sci & Engn, Kharagpur 721302, W Bengal, India.
EM mund@cse.iitkgp.ernet.in; rajib@cse.iitkgp.ernet.in;
   sudeshna@cse.iitkgp.ernet.in
RI Sarkar, Sudeshna/AAZ-5851-2020
OI Sarkar, Sudeshna/0000-0003-3439-4282
CR AGRAWAL H, 1993, SOFTWARE PRACT EXPER, V23, P589, DOI 10.1002/spe.4380230603
   AGRAWAL H, 1994, SIGPLAN NOTICES, V29, P302, DOI 10.1145/773473.178456
   AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   Agrawal H., 1992, THESIS PURDUE U
   Agrawal H., 1991, P ACM 4 S TESTING AN, P60
   [Anonymous], 1992, APPL MATH COMPUTER S
   BALL T, 1993, LECTURE NOTES COMPUT, V749, P206, DOI DOI 10.1007/BFB0019410
   BERGERETTI JF, 1985, ACM T PROGR LANG SYS, V7, P37, DOI 10.1145/2363.2366
   Beszédes A, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P105, DOI 10.1109/CSMR.2001.914974
   Binkley D, 1998, INFORM SOFTWARE TECH, V40, P583, DOI 10.1016/S0950-5849(98)00085-8
   Binkley D., 1996, Advances in Computers, V43, P1
   CHOI JD, 1994, ACM T PROGR LANG SYS, V16, P1097, DOI 10.1145/183432.183438
   CHOI JD, 1989, THESIS U WISCONSIN M
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   GOPAL R, 1991, PROCEEDINGS - CONFERENCE ON SOFTWARE MAINTENANCE 1991, P191, DOI 10.1109/ICSM.1991.160329
   Goswami D, 2002, INFORM PROCESS LETT, V81, P111, DOI 10.1016/S0020-0190(01)00202-2
   Harman M, 1998, J SOFTW MAINT-RES PR, V10, P415, DOI 10.1002/(SICI)1096-908X(199811/12)10:6<415::AID-SMR180>3.0.CO;2-Z
   Harman M, 1998, INFORM SOFTWARE TECH, V40, P577, DOI 10.1016/S0950-5849(98)00084-6
   HARMAN M, 2001, SOFTWARE FOCUS, V2, P85
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Huynh D., 1997, P ISACC, P73
   Hwang J. C., 1988, Proceedings COMPSAC 88: The Twelfth International Computer Software and Applications Conference (Cat. No.88CH2611-2), P220, DOI 10.1109/CMPSAC.1988.17176
   JIANG JY, 1991, PROCEEDINGS - CONFERENCE ON SOFTWARE MAINTENANCE 1991, P182, DOI 10.1109/ICSM.1991.160328
   KAMKAR M, 1992, LECT NOTES COMPUT SC, V631, P370
   Kamkar M, 1998, INFORM SOFTWARE TECH, V40, P637, DOI 10.1016/S0950-5849(98)00088-3
   KAMKAR M, 1993, MICROPROC MICROPROG, V38, P625, DOI 10.1016/0165-6074(93)90203-W
   Kamkar M, 1993, THESIS LINKOPING U S
   Kamkar Mariam., 1993, ICSM '93: Proceedings of the Conference on Software Maintenance, P386
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Korel B, 1997, IEEE T SOFTWARE ENG, V23, P17, DOI 10.1109/32.581327
   Korel B, 1998, INFORM SOFTWARE TECH, V40, P647, DOI 10.1016/S0950-5849(98)00089-5
   KOREL B, 1990, J SYST SOFTWARE, V13, P187, DOI 10.1016/0164-1212(90)90094-3
   Korel B., 1994, P INT S SOFTWARE TES, P66
   KUMAR S, 2002, P FASE GREN FRANC AP
   LUCIA AD, 1996, P 4 IEEE WORKSH PROG
   LUCIA AD, 2001, IEEE P WORKSH SOURC, P142
   Lyle J.R., 1984, Ph.D. thesis
   MALL R, 1999, FUNDAMENTALS SOFTWAR
   Mund GB, 2002, INFORM SOFTWARE TECH, V44, P123, DOI 10.1016/S0950-5849(01)00224-5
   Ott LM, 1998, INFORM SOFTWARE TECH, V40, P691, DOI 10.1016/S0950-5849(98)00092-5
   OTTENSTEIN KJ, 1984, SIGPLAN NOTICES, V19, P177, DOI 10.1145/390011.808263
   PODGURSKI A, 1990, IEEE T SOFTWARE ENG, V16, P965, DOI 10.1109/32.58784
   Reps T, 1998, INFORM SOFTWARE TECH, V40, P701, DOI 10.1016/S0950-5849(98)00093-7
   SHAHMEHRI N, 1991, GEN ALGORITHMIC DEBU
   SHIMOMURA T, 1992, J IPS JAPAN, V9, P1078
   TIP F, 1995, J PROGRAM LANG, V3, P121
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
NR 49
TC 14
Z9 15
U1 1
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 1
PY 2003
VL 45
IS 8
BP 499
EP 512
DI 10.1016/S0950-5849(03)00029-6
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 686WL
UT WOS:000183343900004
DA 2024-07-18
ER

PT J
AU Barboni, M
   Bertolino, A
   De Angelis, G
AF Barboni, Morena
   Bertolino, Antonia
   De Angelis, Guglielmo
TI Flakiness goes live: Insights from an In Vivo testing simulation study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Flaky test; Intermittent failure; Field testing; In Vivo testing;
   Software testing
ID SOFTWARE
AB Context: Test flakiness is a topmost concern in software test automation. While conducting pre-deployment testing, those tests that are flagged as flaky are put aside for being either repaired or discarded.Objective: We hypothesise that some flaky tests could provide useful insights if run in the field, i.e., they could help identify failures that manifest themselves sporadically during In House testing, but are later experienced in operation.Method: We present the first simulation study to investigate the behaviour of flaky tests when moved to the field. The work compares the behaviour of known flaky tests from an open-source library when executed in the development environment vs. when executed in a simulation of the field. Results: Our experimentation over 52 test methods labelled as flaky provides a first confirmation that moving from the development environment to the field, the behaviour of tests changes. In particular, the failure frequency of intermittently failing tests can increase, and we could also identify few cases of field failures that would have been hardly detected during In House testing due to the numerous combinations of inputs and states. In most cases, such flakiness was rooted in the design of the test method itself, however we could also identify an actual bug.Conclusion: The results of our study suggest that the identification of an intermittently failing behaviour could be a valuable hint for a test engineer, and hence flaky tests should not be dismissed right away.
C1 [Barboni, Morena; De Angelis, Guglielmo] IASI CNR, Rome, Italy.
   [Bertolino, Antonia] ISTI CNR, Pisa, Italy.
   [Barboni, Morena] Univ Camerino, Camerino, Italy.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Analisi dei
   Sistemi ed Informatica "Antonio Ruberti" (IASI-CNR); Consiglio Nazionale
   delle Ricerche (CNR); Istituto di Scienza e Tecnologie dell'Informazione
   "Alessandro Faedo" (ISTI-CNR); University of Camerino
RP De Angelis, G (corresponding author), IASI CNR, Rome, Italy.
EM morena.barboni@unicam.it; antonia.bertolino@isti.cnr.it;
   guglielmo.deangelis@iasi.cnr.it
RI Bertolino, Antonia/ABD-6837-2020; Barboni, Morena/KFR-7183-2024
OI Bertolino, Antonia/0000-0001-8749-1356; Barboni,
   Morena/0000-0002-1281-4058
FU Italian MIUR PRIN 2017 Project: SISMA [201752ENYB]; Italian Research
   Group: INdAM-GNCS
FX This paper has been supported by the Italian MIUR PRIN 2017 Project:
   SISMA (Contract 201752ENYB) , and partially by the Italian Research
   Group: INdAM-GNCS.
CR Alshammari A, 2021, PROC INT CONF SOFTW, P1572, DOI 10.1109/ICSE43902.2021.00140
   Barboni M., 2022, Tech. Rep, DOI [10.32079/ISTI-TR-2022/007, DOI 10.32079/ISTI-TR-2022/007]
   Barboni Morena, 2021, Quality of Information and Communications Technology, P29
   Basiri A, 2016, IEEE SOFTWARE, V33, P35, DOI 10.1109/MS.2016.60
   Bertolino A, 2023, SOFTW TEST VERIF REL, V33, DOI 10.1002/stvr.1857
   Bertolino A, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3447240
   Bertolino A, 2020, IEEE INT CONF SOFTW, P454, DOI 10.1109/ICST46399.2020.00061
   Bertolino A, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2298
   Cavezza DG, 2014, PROC INT SYMP SOFTW, P267, DOI 10.1109/ISSRE.2014.19
   Cordy M, 2022, PROC INT CONF SOFTW, P982, DOI 10.1145/3510003.3510194
   Cotroneo D, 2016, J SYST SOFTWARE, V113, P27, DOI 10.1016/j.jss.2015.11.021
   Cotroneo D, 2013, PROC INT SYMP SOFTW, P178, DOI 10.1109/ISSRE.2013.6698917
   Eck M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P830, DOI 10.1145/3338906.3338945
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P312, DOI 10.1109/TSE.2005.50
   Fowler M., 2011, Martin Fowler Pers. Blog
   Gazzola L, 2017, PROC INT SYMP SOFTW, P67, DOI 10.1109/ISSRE.2017.10
   Habchi S, 2022, IEEE INT CONF SOFTW, P244, DOI 10.1109/ICST53961.2022.00034
   Kohavi R, 2017, ENCY MACHINE LEARNIN, V7, P922, DOI [10.1007/978-1-4899-7687-1_891, DOI 10.1007/978-1-4899-7687-1_891]
   Kowalczyk E, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P110, DOI 10.1145/3377813.3381370
   Lam W, 2020, PROC INT SYMP SOFTW, P403, DOI 10.1109/ISSRE5003.2020.00045
   Lam W, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P101, DOI 10.1145/3293882.3330570
   Lam W, 2019, IEEE INT CONF SOFTW, P312, DOI 10.1109/ICST.2019.00038
   Machalica M., 2020, How do you test your tests?
   Massol Vincent, 2004, Junit in action
   Morán J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P73, DOI 10.1109/QRS.2017.17
   Murphy C, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P111, DOI 10.1109/ICST.2009.18
   Parry O, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10307-w
   Parry O, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3476105
   Parry O, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P253, DOI [10.1145/3510457.3513037, 10.1109/ICSE-SEIP55303.2022.9793965]
   Raine J., 2020, Reducing flaky builds by 18x
   Rwemalika R, 2019, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME.2019.00019
   Shi A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P545, DOI 10.1145/3338906.3338925
   Shi A, 2016, IEEE INT CONF SOFTW, P80, DOI 10.1109/ICST.2016.40
   Silva D, 2020, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME46990.2020.00037
   Strandberg Per Erik, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P337, DOI 10.1145/3395363.3397359
   Tahir A, 2023, J SYST SOFTWARE, V206, DOI 10.1016/j.jss.2023.111837
NR 36
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2024
VL 167
AR 107373
DI 10.1016/j.infsof.2023.107373
EA DEC 2023
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EQ6M5
UT WOS:001140429000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Robles, G
   Chaudron, MRV
   Jolak, R
   Hebig, R
AF Robles, Gregorio
   Chaudron, Michel R. V.
   Jolak, Rodi
   Hebig, Regina
TI A reflection on the impact of model mining from GitHub
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Modeling; UML; Mining software repositories; Empirical research
AB Context: Since 1998, the ACM/IEEE 25th International Conference on Model Driven Engineering Languages and Systems (MODELS) has been studying all aspects surrounding modeling in software engineering, from languages and methods to tools and applications. In order to enable empirical studies, the MODELS community developed a need for having examples of models, especially of models used in real software development projects. Such models may be used for a range of purposes, but mostly related to domain analysis and software design (at various levels of abstraction). However, finding such models was very difficult. The most used ones had their origin in academic books or student projects, which addressed "artificial"applications, i.e., were not base on real-case scenarios. To address this issue, the authors of this reflection paper, members of the modeling and of the mining software repositories fields, came together with the aim of creating a dataset with an abundance of modeling projects by mining GitHub. As a scoping of our effort we targeted models represented using the UML notation because this is the lingua franca in practice for software modeling. As a result, almost 100k models from 22k projects were made publicly available, known as the Lindholmen dataset.Objective: In this paper, we analyze the impact of our research, and compare this to what we envisioned in 2016. We draw practical lessons gained from this effort, reflect on the perils and pitfalls of the dataset, and point out promising avenues of research.Method: We base our reflection on the systematic analysis of recent research literature, and especially those papers citing our dataset and its associated publications.Results: What we envisioned in the original research when making the dataset available has to a major extent not come true; however, fellow researchers have found alternative uses of the dataset.Conclusions: By understanding the possibilities and shortcomings of the current dataset, we aim to offer the research community i) future research avenues of how the data can be used; and ii) raise awareness of the limitations, not only to point out threats to validity of research, but also to encourage fellow researchers to find ideas to overcome them. Our reflections can also be helpful to researchers who want to perform similar mining efforts.
C1 [Robles, Gregorio] Univ Rey Juan Carlos, Madrid, Spain.
   [Chaudron, Michel R. V.] TU Eindhoven, Eindhoven, Netherlands.
   [Jolak, Rodi] RISE Res Inst Sweden, Gothenburg, Sweden.
   [Hebig, Regina] Univ Rostock, Rostock, Germany.
C3 Universidad Rey Juan Carlos; Eindhoven University of Technology; RISE
   Research Institutes of Sweden; University of Rostock
RP Robles, G (corresponding author), Univ Rey Juan Carlos, Madrid, Spain.
EM gregorio.robles@urjc.es
RI Robles, Gregorio/I-2507-2012
OI Robles, Gregorio/0000-0002-1442-6761; Jolak, Rodi/0000-0001-5656-9253
FU Spanish Ministry of Science and Innovation [PID2022-139551NB-I0]
FX The work of G. Robles has been supported in part by the Spanish Ministry
   of Science and Innovation (PID2022-139551NB-I0).
CR Akdur D, 2018, J SYST ARCHITECT, V91, P62, DOI 10.1016/j.sysarc.2018.09.007
   [Anonymous], 2010, Graphs Dataset
   Boyatzis R., 1998, Transferring qualitative information", V1st
   Chen Fangwei, Cdtc: Automatically establishing the trace links between class diagrams in design phase and source code
   de Oliveira Barbosa Matheus, 2020, SBCARS '20: Proceedings of the 14th Brazilian Symposium on Software Components, Architectures, and Reuse, P111, DOI 10.1145/3425269.3425282
   German DM, 2016, EMPIR SOFTW ENG, V21, P260, DOI 10.1007/s10664-014-9356-2
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hebig R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P173, DOI 10.1145/2976767.2976778
   Heijstek W, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P113, DOI 10.1109/SEAA.2009.70
   López JAH, 2022, ACM/IEEE 25TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, MODELS 2022 COMPANION, P66, DOI 10.1145/3550356.3559096
   Karasneh B.H.A., 2016, Ph.D. thesis
   Karasneh Bilal, 2013, EESSMOD MODELS, P61
   Khelladi DE, 2019, PROCEEDINGS OF THE 12TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '19), P113, DOI 10.1145/3357766.3359546
   Kretschmer R, 2021, SOFTW SYST MODEL, V20, P539, DOI 10.1007/s10270-020-00823-4
   Lange CFJ, 2006, IEEE SOFTWARE, V23, P40, DOI 10.1109/MS.2006.50
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Osman MH, 2018, EUROMICRO CONF PROC, P396, DOI 10.1109/SEAA.2018.00070
   Robles G, 2017, IEEE WORK CONF MIN S, P519, DOI 10.1109/MSR.2017.48
   Shcherban S, 2021, INT J SOFTW ENG KNOW, V31, P1683, DOI 10.1142/S0218194021400179
   Storrle Harald, 2014, PSRC MODELS, P36
   Tavares JF, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2021), P102, DOI 10.1109/ASEW52652.2021.00030
   Truong Ho-Quang, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P399, DOI 10.1109/APSEC.2014.65
NR 22
TC 0
Z9 0
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107317
DI 10.1016/j.infsof.2023.107317
EA AUG 2023
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S0BG6
UT WOS:001067905200001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Tomer, G
   Mishra, SK
AF Tomer, Gunjan
   Mishra, Sushanta Kumar
TI Work and career-related features of technology: A grounded theory study
   of software professionals
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software professionals; Managing career; Features of technology; Person
   -technology fit; Grounded theory
ID INFORMATION-TECHNOLOGY; PERSON-ORGANIZATION; USER ACCEPTANCE; FAMILY
   CONFLICT; JOB; TURNOVER; ANTECEDENTS; FIT; TECHNOSTRESS; EXHAUSTION
AB For software professionals, work and technology are inseparable. Their work and careers are intertwined with different features of technology. For instance, features such as uncertainty and market dominance influence the career prospects of Software professionals. Despite the criticality of technology in professionals' lives, studies exploring technology features that influence Software professionals' work and life are, at best, limited. Based on an exploratory approach, we found that Software professionals evaluate technology based on their perceptions and career expectations. The positive or negative evaluation captures the perceived fit/match between their expectations, preferences from technology, and the features of a given technology. Based on the findings, we conceptualized technology from the career perspective of software professionals. We highlighted the implications of the fit/match between the software professionals' preferences and the features/characteristics of a given technology.
C1 [Tomer, Gunjan] Indian Inst Management, Decis Sci & Informat Syst, Nagpur, India.
   [Mishra, Sushanta Kumar] Indian Inst Management, Org Behav & Human Resource Management, Bangalore, India.
C3 Indian Institute of Management (IIM System); Indian Institute of
   Management Nagpur; Indian Institute of Management (IIM System); Indian
   Institute of Management Bangalore
RP Tomer, G (corresponding author), Indian Inst Management, Decis Sci & Informat Syst, Nagpur, India.
EM sushantam@iimb.ac.in
RI Mishra, Sushanta Kumar/G-2125-2016
OI Mishra, Sushanta Kumar/0000-0003-0253-1908
CR Ahuja MK, 2007, MIS QUART, V31, P1
   Aiman-Smith L, 2002, ACAD MANAGE J, V45, P421, DOI 10.5465/3069356
   Armstrong DJ, 2015, MIS QUART, V39, P713, DOI 10.25300/MISQ/2015/39.3.10
   Ayyagari R, 2011, MIS QUART, V35, P831
   Brooks NG, 2019, COMMUN ASSOC INF SYS, V44, P600, DOI 10.17705/1CAIS.04429
   Brown SA, 2012, INFORM SYST RES, V23, P474, DOI 10.1287/isre.1110.0357
   Buhari MM, 2020, INT J HUM CAP INF TE, V11, P37, DOI 10.4018/IJHCITP.2020070103
   Carlson JR, 2017, COMPUT HUM BEHAV, V77, P317, DOI 10.1016/j.chb.2017.09.009
   Chang CLH, 2011, EUR J INFORM SYST, V20, P103, DOI 10.1057/ejis.2010.54
   Chen Z, 2009, J VOCAT BEHAV, V74, P82, DOI 10.1016/j.jvb.2008.10.009
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fendt J, 2008, ORGAN RES METHODS, V11, P430, DOI 10.1177/1094428106297812
   FRENCH JRP, 1974, COPING ADAPTATION
   Gaudioso F, 2017, COMPUT HUM BEHAV, V69, P189, DOI 10.1016/j.chb.2016.12.041
   GINZBERG MJ, 1988, COMMUN ACM, V31, P586, DOI 10.1145/42411.42422
   Glaser B, 1967, Discovery of grounded theory strategies for qualitative research, DOI [10.4324/9780203793206, DOI 10.4324/9780203793206]
   GOODHUE DL, 1995, MIS QUART, V19, P213, DOI 10.2307/249689
   Greenblatt E, 2002, ORGAN DYN, V31, P177, DOI 10.1016/S0090-2616(02)00100-6
   Gregor S, 2006, MIS QUART, V30, P611
   Guzman Indira R., 2008, Data Base for Advances in Information Systems, V39, P33, DOI 10.1145/1341971.1341976
   Hsu MK, 2003, INFORM MANAGE-AMSTER, V40, P361, DOI 10.1016/S0378-7206(02)00018-6
   IGBARIA M, 1991, MIS QUART, V15, P151, DOI 10.2307/249376
   Jiang JJ, 2020, IEEE T ENG MANAGE, V67, P30, DOI 10.1109/TEM.2018.2870085
   Jiang JJ, 2010, INTEGR SER INFORM SY, V28, P355, DOI 10.1007/978-1-4419-6108-2_18
   Johnson M, 2010, J WORKPLACE LEARN, V22, P180, DOI 10.1108/13665621011028620
   Joia LA, 2017, INFORM SYST J, V27, P31, DOI 10.1111/isj.12087
   Joseph D, 2007, MIS QUART, V31, P547
   Joseph D, 2015, INFORM SYST RES, V26, P145, DOI 10.1287/isre.2014.0558
   King WR, 2008, MIS QUART, V32, P205
   Kotlarsky J, 2005, EUR J INFORM SYST, V14, P37, DOI 10.1057/palgrave.ejis.3000520
   Kristof-Brown AL, 2005, PERS PSYCHOL, V58, P281, DOI 10.1111/j.1744-6570.2005.00672.x
   Lacity MC, 2008, INFORM SYST FRONT, V10, P225, DOI 10.1007/s10796-007-9062-3
   Lankton NK, 2016, INFORM SYST RES, V27, P197, DOI 10.1287/isre.2015.0611
   Lee JC, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110545
   Leonardi PM, 2011, MIS QUART, V35, P147
   Lin CP, 2020, INT J HUM RESOUR MAN, V31, P760, DOI 10.1080/09585192.2017.1380061
   Lo J, 2015, INFORM SYST FRONT, V17, P387, DOI 10.1007/s10796-013-9408-y
   Mahmood S, 2017, INFORM SOFTWARE TECH, V91, P102, DOI 10.1016/j.infsof.2017.06.009
   Markus ML, 2008, J ASSOC INF SYST, V9, P609
   Moquin R, 2019, INFORM SYST MANAGE, V36, P111, DOI 10.1080/10580530.2019.1587574
   NELSON DL, 1990, MIS QUART, V14, P79, DOI 10.2307/249311
   OREILLY CA, 1991, ACAD MANAGE J, V34, P487, DOI 10.5465/256404
   Orlikowski WJ, 2001, INFORM SYST RES, V12, P121, DOI 10.1287/isre.12.2.121.9700
   PAZY A, 1994, HUM RELAT, V47, P1167, DOI 10.1177/001872679404701002
   Pratt MG, 2006, ACAD MANAGE J, V49, P235, DOI 10.5465/AMJ.2006.20786060
   Ravishankar MN, 2013, EUR J INFORM SYST, V22, P387, DOI 10.1057/ejis.2012.32
   Sarker S, 2010, EUR J INFORM SYST, V19, P209, DOI 10.1057/ejis.2010.20
   Sharma GG, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110442
   Shih SP, 2013, INFORM MANAGE-AMSTER, V50, P582, DOI 10.1016/j.im.2013.08.003
   Shih SP, 2011, COMPUT HUM BEHAV, V27, P2301, DOI 10.1016/j.chb.2011.07.009
   Sonnentag S, 1995, BEHAV INFORM TECHNOL, V14, P289, DOI 10.1080/01449299508914648
   Soon Ang, 2004, Data Base for Advances in Information Systems, V35, P11, DOI 10.1145/1017114.1017118
   Speier C, 2002, J MARKETING, V66, P98, DOI 10.1509/jmkg.66.3.98.18510
   Suddaby R, 2006, ACAD MANAGE J, V49, P633, DOI 10.5465/AMJ.2006.22083020
   Tarafdar M, 2007, J MANAGE INFORM SYST, V24, P301, DOI 10.2753/MIS0742-1222240109
   Thatcher JB, 2002, MIS QUART, V26, P381, DOI 10.2307/4132314
   Tomer G., 2020, CAREER DYNAMICS GLOB
   Tomer G., 2019, Australasian Journal of Information Systems, V23, P1, DOI DOI 10.3127/AJIS.V23I0.1761
   Tomer G, 2022, INT J INFORM MANAGE, V66, DOI 10.1016/j.ijinfomgt.2022.102518
   Urquhart C, 2010, INFORM SYST J, V20, P357, DOI 10.1111/j.1365-2575.2009.00328.x
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Volkoff O, 2013, MIS QUART, V37, P819, DOI 10.25300/MISQ/2013/37.3.07
   Wimble M, 2022, J COMPUT INFORM SYST, V62, P349, DOI 10.1080/08874417.2020.1830004
   Young DK, 2023, INFORM TECHNOL PEOPL, V36, P1270, DOI 10.1108/ITP-08-2020-0572
   Zammuto RF, 2007, ORGAN SCI, V18, P749, DOI 10.1287/orsc.1070.0307
NR 66
TC 2
Z9 2
U1 2
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107301
DI 10.1016/j.infsof.2023.107301
EA AUG 2023
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R5BW4
UT WOS:001064511800001
DA 2024-07-18
ER

PT J
AU Hao, JW
   Luo, SL
   Pan, LM
AF Hao, Jingwei
   Luo, Senlin
   Pan, Limin
TI A novel vulnerability severity assessment method for source code based
   on a graph neural network
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Vulnerability severity assessment; Source code; Vulnerability property
   graph; Function call graph
ID PREDICTION
AB Context: Vulnerability severity assessment is an important part of vulnerability management that can help se-curity personnel determine the priority of vulnerability repair work.Objective: Aiming at the problems of low evaluation efficiency and poor timeliness in the existing method, a vulnerability severity evaluation method combining a function call graph and vulnerability attribute graph is proposed.Method: This method constructs a function call graph centered on vulnerable functions and uses the call rela-tionship between vulnerable functions and sensitive API functions to reflect the severity of the damage of the vulnerable functions. The graph attention neural network algorithm is used to mine the key vulnerability characteristics in the function call graph and the vulnerability attribute graph to realize the assessment of vulnerability severity. Results: The ablation experiment results showed that the combined vulnerability attribute graph and function call graph had higher evaluation accuracy than the vulnerability attribute graph or function call graph alone, which increased by 6.85% and 32.90%, respectively. Compared with other existing methods, our method has achieved a better evaluation effect, and the evaluation accuracy has increased by 10%.Conclusion: The vulnerability severity assessment method incorporating function call graphs and vulnerability property graphs demonstrates an enhancement in the ability to represent the severity of vulnerabilities and increases the efficiency of vulnerability severity evaluation through elimination of the requirement for manual analysis.
C1 [Hao, Jingwei; Luo, Senlin; Pan, Limin] Beijing Inst Technol, Informat Syst & Secur & Countermeasures Expt Ctr, Beijing, Peoples R China.
C3 Beijing Institute of Technology
RP Hao, JW (corresponding author), Beijing Inst Technol, Informat Syst & Secur & Countermeasures Expt Ctr, Beijing, Peoples R China.
EM hjwbit@163.com
FU Information Security Software Project (2020) of the Ministry of Industry
   and Information Technology, PR China [CEIEC-2020-ZM02-0134]
FX This work is supported in part by the Information Security Software
   Project (2020) of the Ministry of Industry and Information Technology,
   PR China under Grant CEIEC-2020-ZM02-0134.
CR [Anonymous], 2021, Software Assurance Reference Dataset (SARD) Manual-nist.gov
   Bani-Salameh Hani, 2021, E INFORM SOFTW ENG J, V15
   Chen HP, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P6503
   Cheng X, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3436877
   CVE security vulnerability database, 2021, SEC VULN EXPL REF MO
   Fang S, 2021, IEEE T RELIAB, V70, P563, DOI 10.1109/TR.2021.3074412
   Han ZB, 2017, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSME.2017.52
   Jacobs J, 2020, J CYBERSECURITY, V6, DOI 10.1093/cybsec/tyaa015
   Jindal R, 2017, INT J SYST ASSUR ENG, V8, P334, DOI 10.1007/s13198-016-0438-y
   Kukkar A, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19132964
   Kumari Madhu, 2018, International Journal of Open Source Software and Processes, V9, P20, DOI 10.4018/IJOSSP.2018100102
   Kumari M, 2018, INT C INT SYST DES A
   Miyamoto D, 2015, 2015 4TH INTERNATIONAL WORKSHOP ON BUILDING ANALYSIS DATASETS AND GATHERING EXPERIENCE RETURNS FOR SECURITY (BADGERS), P67, DOI [10.1109/BADGERS.2015.018, 10.1109/BADGERS.2015.12]
   Nakagawa S, 2019, IEICE T INF SYST, VE102D, P1679, DOI 10.1587/transinf.2018OFL0006
   National Vulnerability Database (NVD), 2021, ABOUT US
   Ognawala Saahil., 2018, International Workshop on Machine Learning and Software Engineering in Symbiosis, P16
   Pourasghar B, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2020.106469
   Sahin SE, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P244, DOI 10.1145/3319008.3319033
   Spanos Georgios, 2017, Pan-Hellenic conference on informatics, P1
   Tan YS, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110567
   Toloudis D, 2016, LECT NOTES BUS INF P, V249, P231, DOI 10.1007/978-3-319-39564-7_22
   Umer Q, 2020, IEEE T RELIAB, V69, P1341, DOI 10.1109/TR.2019.2959624
   Wang HT, 2021, IEEE T INF FOREN SEC, V16, P1943, DOI 10.1109/TIFS.2020.3044773
   Zhou YQ, 2019, ADV NEUR IN, V32
NR 24
TC 2
Z9 2
U1 1
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2023
VL 161
AR 107247
DI 10.1016/j.infsof.2023.107247
EA MAY 2023
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA J6MC2
UT WOS:001010728700001
DA 2024-07-18
ER

PT J
AU Hrusto, A
   Engström, E
   Runeson, P
AF Hrusto, Adha
   Engstrom, Emelie
   Runeson, Per
TI Towards optimization of anomaly detection in DevOps
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Microservices; DevOps; Anomaly detection; Deep learning
AB Context: DevOps has recently become a mainstream solution for bridging the gaps between development (Dev) and operations (Ops) enabling cross-functional collaboration. The DevOps concept of continuous monitoring may bring a lot of benefits to development teams such as early detection of run-time errors and various performance anomalies. Objective: We aim to explore deep learning (DL) solutions for detection of anomalous systems behavior based on collected monitoring data that consists of applications' and systems' performance metrics. Moreover, we specifically address a shortage of approaches for evaluating DL models without any ground truth data. Methods: We perform a case study in a real DevOps environment, following the principles of the design science paradigm. The research activities span from practice to theory and from problem to solution domain, including problem conceptualization, solution design, instantiation, and empirical validation. Results: We proposed and implemented a cloud solution for DL model deployment and evaluation empowered by feedback from the development team. The labeled data generated through the feedback was used for evaluation of current and training of new DL models in several iterations. The overall results showed that reconstruction-based models such as autoencoders, are quite robust to any parameter modification and are among the preferred for anomaly detection in multivariate monitoring data. Conclusion: Leveraging raw monitoring data and DL-inspired solutions, DevOps teams may get critical insights into the software and its operation. In our case, this proved to be an efficient way of discovering early signs of production failures.
C1 [Hrusto, Adha; Engstrom, Emelie; Runeson, Per] Lund Univ, Dept Comp Sci, Box 118, SE-22100 Lund, Sweden.
   [Hrusto, Adha] Syst Verificat Sweden AB, Hyllie Stationstorg 31, SE-21532 Malmo, Sweden.
C3 Lund University
RP Hrusto, A (corresponding author), Lund Univ, Dept Comp Sci, Box 118, SE-22100 Lund, Sweden.
EM adha.hrusto@cs.lth.se
RI Engström, Emelie/AAG-7808-2019
OI Engström, Emelie/0000-0001-6736-9425; Runeson, Per/0000-0003-2795-4851;
   Hrusto, Adha/0000-0002-4575-1460
CR Ahmad S, 2017, NEUROCOMPUTING, V262, P134, DOI 10.1016/j.neucom.2017.04.070
   Alnafessah A, 2021, IEEE ACCESS, V9, P44476, DOI 10.1109/ACCESS.2021.3064867
   Ang Zhang, 2021, 2021 IEEE 5th Information Technology, Networking, Electronic and Automation Control Conference (ITNEC), P571, DOI 10.1109/ITNEC52019.2021.9587207
   Apicella A, 2021, NEURAL NETWORKS, V138, P14, DOI 10.1016/j.neunet.2021.01.026
   Bashar MA, 2020, 2020 IEEE SYMPOSIUM SERIES ON COMPUTATIONAL INTELLIGENCE (SSCI), P1778, DOI [10.1109/SSCI47803.2020.9308512, 10.1109/ssci47803.2020.9308512]
   Blázquez-García A, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3444690
   Borges OT, 2021, ICEIS: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P224, DOI 10.5220/0010429402240231
   Calheiros RN, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.4169
   Chevrot A., 2021, ARXIV
   Choi K, 2021, IEEE ACCESS, V9, P120043, DOI 10.1109/ACCESS.2021.3107975
   Cinque M, 2019, IEEE INT SYMP SOFTW, P122, DOI 10.1109/ISSREW.2019.00060
   Cook AA, 2020, IEEE INTERNET THINGS, V7, P6481, DOI 10.1109/JIOT.2019.2958185
   Ding N, 2019, COMPUT ELECTR ENG, V79, DOI 10.1016/j.compeleceng.2019.106458
   El-Shafai W, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11146446
   Gall M, 2022, EUR J INFORM SYST, V31, P548, DOI 10.1080/0960085X.2021.1997100
   Geiger A, 2020, IEEE INT CONF BIG DA, P33, DOI 10.1109/BigData50022.2020.9378139
   Hagemann Tanja, 2020, AICCC 2020: 2020 3rd Artificial Intelligence and Cloud Computing Conference, P83, DOI 10.1145/3442536.3442550
   Hrusto A., 2021, SN COMPUT SCI, V2, P447, DOI [10.1007/s42979-021-00826-y, DOI 10.1007/S42979-021-00826-Y]
   Hrusto A, 2022, 10TH IEEE/ACM INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS AND SOFTWARE ECOSYSTEMS (SESOS 2022), P13, DOI 10.1145/3528229.3529382
   Hsieh RJ, 2019, IEEE INT CONF SERV, P90, DOI 10.1109/SOCA.2019.00021
   Islam MS, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P150, DOI 10.1109/ICSE-SEIP52600.2021.00024
   Islam MS, 2020, IEEE INT CONF CLOUD, P1, DOI 10.1109/CLOUD49709.2020.00008
   Jiang WQ, 2019, IEEE ACCESS, V7, P143608, DOI 10.1109/ACCESS.2019.2944689
   Kannari PR, 2022, THEOR COMPUT SCI, V931, P56, DOI 10.1016/j.tcs.2022.07.030
   Karadayi Y, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10155191
   Karagiannidis GK, 2007, IEEE COMMUN LETT, V11, P644, DOI 10.1109/LCOMM.2007.070470
   Khoshnevisan F., 2020, ABS200714254 CORR
   Kieu T, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2725
   Kumar A, 2020, INT CONF PERVAS COMP, DOI 10.1109/percomworkshops48775.2020.9156127
   Lee CK, 2021, IEEE ACCESS, V9, P73201, DOI 10.1109/ACCESS.2021.3078553
   Li D., 2019, arXiv, DOI 10.48550/arXiv.1901.04997
   Lindemann B, 2021, COMPUT IND, V131, DOI 10.1016/j.compind.2021.103498
   Liu JW, 2019, J PHYS CONF SER, V1187, DOI 10.1088/1742-6596/1187/4/042111
   Liu SR, 2019, IEEE INT SYMP PARAL, P1244, DOI 10.1109/ISPA-BDCloud-SustainCom-SocialCom48970.2019.00177
   Long Z, 2021, MEASUREMENT, V170, DOI 10.1016/j.measurement.2020.108718
   Lwakatare LE, 2015, LECT NOTES BUS INF P, V212, P212, DOI 10.1007/978-3-319-18612-2_19
   Maleki S, 2021, APPL SOFT COMPUT, V108, DOI 10.1016/j.asoc.2021.107443
   Mullick SS, 2018, IEEE T NEUR NET LEAR, V29, P5713, DOI 10.1109/TNNLS.2018.2812279
   Munir M, 2019, IEEE ACCESS, V7, P1991, DOI 10.1109/ACCESS.2018.2886457
   Pourmajidi William, 2017, P 27 ANN INT C COMP, P259
   Ruff L, 2021, P IEEE, V109, P756, DOI 10.1109/JPROC.2021.3052449
   Runeson Per, 2020, Contemporary Empirical Methods in Software Engineering, P127, DOI [DOI 10.1007/978-3-030-32489-6_5, DOI 10.1007/978-3-030-32489-65]
   Shen L, 2020, P ADV NEURAL INFORM, V33, P13016
   Taherkhani A, 2020, NEUROCOMPUTING, V404, P351, DOI 10.1016/j.neucom.2020.03.064
   Throner S, 2021, IEEE INT SYMP SERV O, P134, DOI 10.1109/SOSE52839.2021.00020
   Waseem M, 2021, J SYST SOFTWARE, V182, DOI 10.1016/j.jss.2021.111061
   Williams BM, 2003, J TRANSP ENG, V129, P664, DOI 10.1061/(ASCE)0733-947X(2003)129:6(664)
   Ying Jiang, 2020, 2020 International Conference on Intelligent Transportation, Big Data & Smart City (ICITBS). Proceedings, P791, DOI 10.1109/ICITBS49701.2020.00173
   Yoon J., 2019, ADV NEURAL INFORM PR, V32
   Zhang CX, 2018, Arxiv, DOI [arXiv:1811.08055, 10.1609/aaai.v33i01.33011409, DOI 10.1609/AAAI.V33I01.33011409]
   Zhang CX, 2019, AAAI CONF ARTIF INTE, P1409
   Zhang YX, 2023, IEEE T KNOWL DATA EN, V35, P2118, DOI 10.1109/TKDE.2021.3102110
   Zhao H, 2020, Arxiv, DOI arXiv:2009.02040
   Zhao PH, 2021, IEEE ACCESS, V9, P109025, DOI 10.1109/ACCESS.2021.3101844
NR 54
TC 0
Z9 0
U1 2
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2023
VL 160
AR 107241
DI 10.1016/j.infsof.2023.107241
EA MAY 2023
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H8UO9
UT WOS:000998649200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Zhao, Y
   Liu, SN
   Zhang, QJ
   Ge, XT
   Liu, J
AF Zhao, Yuan
   Liu, Sining
   Zhang, Quanjun
   Ge, Xiuting
   Liu, Jia
TI Test case classification via few-shot learning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Test case classification; Few-shot learning; Attention mechanism
ID TEXT CLASSIFICATION; MACHINE
AB Context: Crowdsourced testing can reduce testing costs and improve testing efficiency. However, crowdsourced testing generates massive test cases, requiring testers to select high-quality test cases for execution. Conse-quently, crowdsourced test cases require much effort to perform labeling due to the costly manual labor and domain knowledge.Objective: Existing methods usually fail to consider the crowdsourced testing scenario's inadequate and imbalanced data issues. We aim to effectively and efficiently classify many crowdsourced test cases for developers to alleviate manual efforts. Method: In this paper, we propose a test case classification approach based on few-shot learning and test case augmentation to address the limitations mentioned above. The proposed approach generates new test cases by the large pre-trained masked language model and extracts embedding representation by training word embedding models. Then a Bidirectional Long Short-Term Memory (BiLSTM)-based classifier is designed to perform test case classification by extracting the in-depth features. Besides, we also apply the attention mechanism to assign high weights to words that represent the test case category by lexicon matching. Results: To verify the effectiveness of the classification framework, we select 1659 test cases from three crowdsourced testing projects to conduct in-usability evaluation experiments. The experimental results show that the proposed approach has a higher accuracy and precision rate than existing classification methods.Conclusion: It can be concluded that (1) the proposed approach is an effective test case classification technique for crowdsourced testing; (2) the proposed approach is practical to help developers select high-quality test cases quickly and effectively.
C1 [Zhao, Yuan; Liu, Sining; Zhang, Quanjun; Ge, Xiuting; Liu, Jia] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
C3 Nanjing University
RP Liu, J (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
EM zhaoyuan@smail.nju.edu.cn; jialiu@nju.edu.cn;
   quanjun.zhang@smail.nju.edu.cn; dg20320002@smail.nju.edu.cn;
   jialiu@nju.edu.cn
OI Zhang, Quanjun/0000-0002-2495-3805; zhao, yuan/0000-0003-1980-6277
FU National Natural Science Foundation of China [62272220, 62141215];
   Innovative Research Foundation of Ship General Performance, China
   [25422207]; Science, Technology, and Innovation Commission of Shenzhen
   Municipality, China [CJGJZD20200617103001003]
FX The authors would like to thank the anonymous reviewers for their
   insightful comments. This work is supported partially by National
   Natural Science Foundation of China (62272220, 62141215) , Innovative
   Research Foundation of Ship General Performance, China (25422207) , and
   Science, Technology, and Innovation Commission of Shenzhen Municipality,
   China (CJGJZD20200617103001003) .
CR Aggarwal CharuC., 2012, MINING TEXT DATA, DOI [10.1007/978-1-4614-3223-4_6, DOI 10.1007/978-1-4614-3223-4_6]
   Almeida M, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P45, DOI 10.1145/3178876.3186035
   Belli F., 2006, P 2 WORKSH MUT AN, P9
   Benaim S, 2018, ADV NEUR IN, V31
   Che WX, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P42
   Do C.B., 2005, ADV NEURAL INF PROCE, V18
   Dolstra E, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P332, DOI 10.1109/ICST.2013.44
   Fang CR, 2014, SOFTWARE QUAL J, V22, P335, DOI 10.1007/s11219-013-9224-0
   Fang CR, 2012, SCI CHINA INFORM SCI, V55, P2826, DOI 10.1007/s11432-012-4746-9
   Fei-Fei L, 2003, NINTH IEEE INTERNATIONAL CONFERENCE ON COMPUTER VISION, VOLS I AND II, PROCEEDINGS, P1134, DOI 10.1109/ICCV.2003.1238476
   Gao TY, 2019, AAAI CONF ARTIF INTE, P6407
   Gardlo B, 2014, IEEE ICC, P1070, DOI 10.1109/ICC.2014.6883463
   Goodfellow I, 2020, COMMUN ACM, V63, P139, DOI 10.1145/3422622
   Grandini M, 2020, Arxiv, DOI [arXiv:2008.05756, DOI 10.48550/ARXIV.2008.05756, 10.48550/arXiv.2008.05756]
   Hoffman J, 2014, Arxiv, DOI arXiv:1312.6204
   Hossfeld T, 2014, IEEE T MULTIMEDIA, V16, P541, DOI 10.1109/TMM.2013.2291663
   Hou YT, 2018, Arxiv, DOI arXiv:1807.01554
   JasonWei Kai, 2019, arXiv, DOI DOI 10.48550/ARXIV.1901.11196
   Kadhim AI, 2019, ARTIF INTELL REV, V52, P273, DOI 10.1007/s10462-018-09677-1
   Khan A.I., 2016, P 2016 7 IEEE ANN IN, P1
   Kobayashi S, 2018, Arxiv, DOI [arXiv:1805.06201, DOI 10.48550/ARXIV.1805.06201]
   Koch G., 2015, ICML DEEP LEARNING W, V2
   Komarov S., 2013, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P207, DOI DOI 10.1145/2470654.2470684
   Kowsari K, 2019, INFORMATION, V10, DOI 10.3390/info10040150
   Kozerawski J, 2018, PROC CVPR IEEE, P3446, DOI 10.1109/CVPR.2018.00363
   Lee JH, 2021, AAAI CONF ARTIF INTE, V35, P13189
   Lei K, 2020, NEUROCOMPUTING, V391, P65, DOI 10.1016/j.neucom.2020.01.091
   Liu B, 2018, PROC CVPR IEEE, P9090, DOI 10.1109/CVPR.2018.00947
   Liu D., 2020, IEEE Transactions on Software Engineering
   Liu G, 2019, NEUROCOMPUTING, V337, P325, DOI 10.1016/j.neucom.2019.01.078
   Lu XH, 2006, J AM MED INFORM ASSN, V13, P526, DOI 10.1197/jamia.M2051
   Ma J., 2020, J PHYS C SER, V1651, DOI DOI 10.1088/1742-6596/1651/1/012039
   Melville P, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1275
   Miller EG, 2000, PROC CVPR IEEE, P464, DOI 10.1109/CVPR.2000.855856
   Minaee S, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3439726
   Miyato T, 2021, Arxiv, DOI arXiv:1605.07725
   Pfister T, 2014, LECT NOTES COMPUT SC, V8694, P814, DOI 10.1007/978-3-319-10599-4_52
   Qi H, 2018, PROC CVPR IEEE, P5822, DOI 10.1109/CVPR.2018.00610
   Shafiabady N, 2016, NEUROCOMPUTING, V211, P4, DOI 10.1016/j.neucom.2015.10.137
   Shyam P., 2017, P INT C MACH LEARN, P3173
   Snell J, 2017, ADV NEUR IN, V30
   Su J., 2020, Tech. rep
   Sun SL, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P476
   Swearngin A., 2019, P 2019 ACM C HUMAN F, P1
   Tsai WT, 2014, IEEE INTERNET COMPUT, V18, P78, DOI 10.1109/MIC.2014.46
   Wang G, 2014, DECIS SUPPORT SYST, V57, P77, DOI 10.1016/j.dss.2013.08.002
   Wang PF, 2019, INT CON DISTR COMP S, P1971, DOI 10.1109/ICDCS.2019.00195
   Wang YQ, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3386252
   Wei Xiaona, 2019, Journal of Computer Applications, V39, P2558, DOI 10.11772/j.issn.1001-9081.2019030450
   Wong W. E., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P230, DOI 10.1109/ISSRE.1994.341379
   WONG WE, 1995, PROC INT CONF SOFTW, P41, DOI 10.1145/225014.225018
   Yu M, 2018, Arxiv, DOI arXiv:1805.07513
   Zhang QJ, 2022, J SYST SOFTWARE, V192, DOI 10.1016/j.jss.2022.111419
   Zhang T, 2017, 2017 11TH IEEE SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE), P75, DOI 10.1109/SOSE.2017.28
   Zhang TY, 2018, AAAI CONF ARTIF INTE, P6053
   Zhang X, 2015, ADV NEUR IN, V28
   Zhang YB, 2018, LECT NOTES COMPUT SC, V11212, P241, DOI 10.1007/978-3-030-01237-3_15
   Zhao R, 2018, 18TH ACM INTERNATIONAL CONFERENCE ON INTELLIGENT VIRTUAL AGENTS (IVA'18), P239, DOI 10.1145/3267851.3267880
NR 58
TC 1
Z9 1
U1 5
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2023
VL 160
AR 107228
DI 10.1016/j.infsof.2023.107228
EA APR 2023
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA G3CA7
UT WOS:000987965900001
DA 2024-07-18
ER

PT J
AU Mahaju, S
   Carver, JC
   Bradshaw, GL
AF Mahaju, Sweta
   Carver, Jeffrey C.
   Bradshaw, Gary L.
TI Human error management in requirements engineering: Should we fix the
   people, the processes, or the environment?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Human error; Cognitive psychology; Error prevention; Error mitigation;
   Requirements engineering
ID SOFTWARE REQUIREMENTS
AB Context: Software development is a human-centric activity and hence vulnerable to human error. Human errors are errors in the human thought process. To ensure software quality, it is important for practitioners to understand how to manage these human errors. Organizations often introduce changes into the requirements engineering process to either prevent human errors from occurring or to mitigate the harm caused when those errors do occur. While there are studies on human error management in other disciplines, research on the prevention and mitigation of human errors in software engineering, and requirements engineering specifically, are limited. The current studies in software engineering do not provide strong results about the types of changes that are most effective in requirements engineering.Objective: The goal of this paper is to develop a taxonomy of human error prevention and mitigation strategies based on data gathered from requirements engineering professionals.Methods: We performed a qualitative analysis of data from two practitioner surveys on requirements engineering practices to identify and classify strategies for the prevention and mitigation of human errors. Results: We organized the human error management strategies into a taxonomy based on whether the changes primarily affect People, Processes, or the Environment. Inside each of these high-level categories, we further organized the strategies into low-level classes. The results show more than 50% of the reported strategies require a change in Process, 23% require a change in Environment, 21% require a change in People, with the remaining 5% too ambiguous to classify. In addition, more than 50% of the strategies focus on Management activities of requirements engineering.Conclusion: The Human Error Management Taxonomy provides a systematic classification and organization of strategies for prevention and mitigation of human errors in requirements engineering. This systematic organization provides a foundation upon which research can build.
C1 [Mahaju, Sweta] Middle Tennessee State Univ, Dept Comp Sci, Murfreesboro, TN USA.
   [Carver, Jeffrey C.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
   [Bradshaw, Gary L.] Mississippi State Univ, Dept Psychol, Starkville, MS USA.
C3 Middle Tennessee State University; University of Alabama System;
   University of Alabama Tuscaloosa; Mississippi State University
RP Carver, JC (corresponding author), Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
EM Sweta.Mahaju@mtsu.edu; carver@cs.ua.edu; glb2@psychology.msstate.edu
OI Carver, Jeffrey/0000-0002-7824-9151
FU United States National Science Foundation [1421006]
FX This work was partially supported by a grant from the United States
   National Science Foundation (1421006) .
CR Anu V, 2018, INFORM SOFTWARE TECH, V103, P112, DOI 10.1016/j.infsof.2018.06.011
   Askarinejadamiri Z, 2017, INT J ADV COMPUT SC, V8, P227
   Back J, 2007, PEOPLE AND COMPUTERS XX - ENGAGE, P151, DOI 10.1007/978-1-84628-664-3_12
   Fernández DM, 2017, EMPIR SOFTW ENG, V22, P2298, DOI 10.1007/s10664-016-9451-7
   Firesmith D, 2007, J OBJECT TECHNOL, V6, P17, DOI 10.5381/jot.2007.6.1.c2
   Gosbee J, 2003, QUAL SAF HEALTH CARE, V12, P119, DOI 10.1136/qhc.12.2.119
   Hendrick HalW., 2002, P KONGRES NASIONAL 1, P14
   Hu WH, 2018, EMPIR SOFTW ENG, V23, P3768, DOI 10.1007/s10664-018-9623-8
   Huang AFQ, 2012, PROCEEDINGS 18TH ISSAT INTERNATIONAL CONFERENCE ON RELIABILITY & QUALITY IN DESIGN, P44
   Huang F., 2016, 2016 IEEEACM COOPERA, P108
   Huang FQ, 2017, CHINESE J AERONAUT, V30, P1054, DOI 10.1016/j.cja.2017.03.005
   Kellogg KM, 2017, BMJ QUAL SAF, V26, P381, DOI 10.1136/bmjqs-2016-005991
   Kitchenham Barbara., 2010, P 2010 ACM IEEE INT, P1
   Kotonya G., 1998, Requirements engineering: processes and techniques
   Lanubile F, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P114, DOI 10.1109/METRIC.1998.731236
   Parviainen Paivi., 2003, REQUIREMENTS ENG INV
   Reason J., 1991, HUMAN ERROR
   Lopes MERF, 2013, INFORM SCIENCES, V250, P142, DOI 10.1016/j.ins.2013.07.010
   Viller S., 1997, TECH REP TECHNICAL R
   Walia Gursimran S., 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P81, DOI 10.1109/ISSRE.2010.41
   Walia GS, 2009, INFORM SOFTWARE TECH, V51, P1087, DOI 10.1016/j.infsof.2009.01.004
   Wu AW, 2008, JAMA-J AM MED ASSOC, V299, P685, DOI 10.1001/jama.299.6.685
NR 22
TC 2
Z9 2
U1 5
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2023
VL 160
AR 107223
DI 10.1016/j.infsof.2023.107223
EA APR 2023
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA G5NZ1
UT WOS:000989634000001
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Zheng, W
   Deng, PR
   Gui, K
   Wu, XX
AF Zheng, Wei
   Deng, Peiran
   Gui, Kui
   Wu, Xiaoxue
TI An Abstract Syntax Tree based static fuzzing mutation for vulnerability
   evolution analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Static fuzzy mutation; Abstract Syntax Tree; Potential evolution paths;
   Concurrent Use After Free; Multi-threaded programs
AB Context: Zero-day vulnerabilities are highly destructive and sudden. However, traditional static and dynamic testing methods cannot efficiently detect them. Objective: In this paper, a static fuzzy mutation method for program code is studied. This method can improve the efficiency of mutation sample generation according to the vulnerability evolution law, thus promoting the development of zero-day vulnerability detection methods based on deep learning techniques. Method: A static fuzzy mutation method based on the Abstract Syntax Tree (AST) is proposed. Under the guidance of software vulnerability evolution law, potential evolution paths that threaten program security are detected, and mutation samples containing vulnerabilities are generated at the syntax tree level based on the paths. To verify the effectiveness of static fuzzy mutation based on ASTs, this paper starts with Concurrent Use After Free (CUAF) homologous vulnerability. It uses multi-threaded programs to perform vulnerability feature statement insertion processing to infer the optimal mutation operator execution sequence corresponding to CUAF vulnerabilities triggered by data competition. The Linux kernel code is used to verify whether it can effectively reduce the number of invalid mutation samples. Results: In this paper, we filter the code fragments in the Linux kernel public code containing CUAF vulnerability fix commits and perform static fuzzy mutation on the fix versions of the vulnerabilities to reproduce the vulnerabilities of this type triggered by these code fragments on the timeline. We compare the process with the execution of the random mutation operator in traditional detection methods horizontally and improve the efficiency by 42.4% on average. Conclusion: The static fuzzy mutation based on the AST is effective in stages. When this method is explored in more vulnerability-type evolution laws, it is expected to promote the development of the zero-day vulnerability active detection technology framework.
C1 [Zheng, Wei; Deng, Peiran; Gui, Kui] Northwestern Polytech Univ, Sch Software, Xian, Peoples R China.
   [Wu, Xiaoxue] Yangzhou Univ, Coll Informat Engn, Yangzhou, Peoples R China.
C3 Northwestern Polytechnical University; Yangzhou University
RP Wu, XX (corresponding author), Yangzhou Univ, Coll Informat Engn, Yangzhou, Peoples R China.
EM wzheng@nwpu.edu.cn; dengpeiran@mail.nwpu.edu.cn;
   guikui@mail.nwpu.edu.cn; xiaoxuewu@yzu.edu.cn
FU National Key R&D Program of China [2020YFC0833105Z1]; National Natural
   Science Foundation of China; Key R&D Program in Shaanxi Province
   [62141208]; National Natural Science Foundation of China special project
   capability-based construction method and execution mechanisms for
   ubiquitous operating systems;  [62202414];  [2023-YBGY-262]
FX This research is supported by the National Key R&D Program of China
   (2020YFC0833105Z1) , the National Natural Science Foundation of China
   special project capability-based construction method and execution
   mechanisms for ubiquitous operating systems (62141208) and the National
   Natural Science Foundation of China (62202414) and the 2023 Key R&D
   Program in Shaanxi Province (2023-YBGY-262) .
CR Harer JA, 2018, Arxiv, DOI [arXiv:1803.04497, 10.48550/arXiv.1803.04497]
   Arora V, 2016, CONCURR COMP-PRACT E, V28, P1572, DOI 10.1002/cpe.3711
   Belli F., 2006, Proc. 2nd Workshop Mutation Analysis, P9, DOI 10.1109/MUTATION.2006.2
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Christakis M, 2011, LECT NOTES COMPUT SC, V6539, P5, DOI 10.1007/978-3-642-18378-2_3
   Delamaro M., 2001, XV Simposio Brasileiro de Engenharia de Software, P272
   Gan ST, 2018, P IEEE S SECUR PRIV, P679, DOI 10.1109/SP.2018.00040
   Grieco G, 2016, CODASPY'16: PROCEEDINGS OF THE SIXTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY, P85, DOI 10.1145/2857705.2857720
   Hovsepyan A., 2012, P 4 INT WORKSH SEC M, P7
   Huang Xiaowei, 2021, J COMPUT ENG, DOI 10.19678/j.issn.1000-3428.0060389
   Jefferson Offutt A., 1996, MUTATION OPERATORS A
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Li JY, 2012, PROC INT CONF SOFTW, P310, DOI 10.1109/ICSE.2012.6227183
   Li YK, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P533, DOI 10.1145/3338906.3338975
   Li YK, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P627, DOI 10.1145/3106237.3106295
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, Arxiv, DOI arXiv:1801.01681
   Liu Jian, 2018, SOFTW J, V29, P42, DOI [10.13328/j.cnki.jos.005320, DOI 10.13328/J.CNKI.JOS.005320]
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   Pang YL, 2015, 2015 IEEE 14TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P543, DOI 10.1109/ICMLA.2015.99
   Parihar Mithelesh, 2019, INT J RES, V6, P649
   Phan Nam FL, 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE'10, (New York, NY, USA), P447
   Nguyen QV, 2014, ADV INTELL SYST, V282, P157, DOI 10.1007/978-3-319-06569-4_12
   Rao Lei, 2021, INT J PERFORM ENG, V17, DOI [10.23940/ijpe.21.11.p1.907917, DOI 10.23940/IJPE.21.11.P1.907917]
   Rawat S, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23404
   [任泽众 Ren Zezhong], 2021, [计算机研究与发展, Journal of Computer Research and Development], V58, P944
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Shen Wei-Jun, 2018, Journal of Software, V29, P1230, DOI 10.13328/j.cnki.jos.005503
   Su Siao-Hong, 2015, J COMPUT SCI-NETH, V38, P19
   [苏小红 Su Xiaohong], 2015, [计算机学报, Chinese Journal of Computers], V38, P2215
   Tian Tian, 2020, Explos. Mater, V48, P2267, DOI 10.3969/j.issn.0372-2112.2020.11.025
   Tu TF, 2019, TWENTY-FOURTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXIV), P865, DOI 10.1145/3297858.3304069
   Veggalam S, 2016, LECT NOTES COMPUT SC, V9878, P581, DOI 10.1007/978-3-319-45744-4_29
   Wang HJ, 2020, PROC INT CONF SOFTW, P999, DOI 10.1145/3377811.3380386
   Wang JJ, 2017, P IEEE S SECUR PRIV, P579, DOI 10.1109/SP.2017.23
   Wang JJ, 2019, PROC INT CONF SOFTW, P724, DOI 10.1109/ICSE.2019.00081
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Zhang J, 2014, PROC INT SYMP SOFTW, P277, DOI 10.1109/ISSRE.2014.27
   Zhang L., 2012, Proceedings of the 2012 International Symposium on Software Testing and Analysis, ISSTA 2012, P331, DOI [10.1145/2338965.2336793, DOI 10.1145/2338965.2336793]
   Zheng H, 2010, 2ND IEEE INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER CONTROL (ICACC 2010), VOL. 2, P431, DOI 10.1109/ICACC.2010.5486640
   Zheng W, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111245
   Zheng W, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110659
   [郑炜 Zheng Wei], 2020, [软件学报, Journal of Software], V31, P1294
   Zhou Y., 2019, ADV NEURAL INFORM PR, V32, DOI [10.48550/arXiv.1909.03496, DOI 10.48550/ARXIV.1909.03496]
NR 44
TC 30
Z9 30
U1 2
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2023
VL 158
AR 107194
DI 10.1016/j.infsof.2023.107194
EA MAR 2023
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA A6CO8
UT WOS:000955983800001
HC Y
HP N
DA 2024-07-18
ER

PT J
AU Gómez-Abajo, P
   Cañizares, PC
   Núñez, A
   Guerra, E
   de Lara, J
AF Gomez-Abajo, Pablo
   Canizares, Pablo C.
   Nunez, Alberto
   Guerra, Esther
   de Lara, Juan
TI Automated engineering of domain-specific metamorphic testing
   environments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Metamorphic testing; Model-driven engineering; Domain-specific
   languages; Cloud computing; Simulation
ID VALIDATION; CLOUD
AB Context: Testing is essential to improve the correctness of software systems. Metamorphic testing (MT) is an approach especially suited when the system under test lacks oracles, or they are expensive to compute. However, building an MT environment for a particular domain (e.g., cloud simulation, model transformation, machine learning) requires substantial effort.Objective: Our goal is to facilitate the construction of MT environments for specific domains.Method: We propose a model-driven engineering approach to automate the construction of MT environments. Starting from a meta-model capturing the domain concepts, and a description of the domain execution environment, our approach produces an MT environment featuring comprehensive support for the MT process. This includes the definition of domain-specific metamorphic relations, their evaluation, detailed reporting of the testing results, and the automated search-based generation of follow-up test cases. Results: Our method is supported by an extensible platform for Eclipse, called Gotten. We demonstrate its effectiveness by creating an MT environment for simulation-based testing of data centres and comparing with existing tools; its suitability to conduct MT processes by replicating previous experiments; and its generality by building another MT environment for video streaming APIs.Conclusion: Gotten is the first platform targeted at reducing the development effort of domain-specific MT environments. The environments created with Gotten facilitate the specification of metamorphic relations, their evaluation, and the generation of new test cases.
C1 [Gomez-Abajo, Pablo; Canizares, Pablo C.; Guerra, Esther; de Lara, Juan] Univ Autonoma Madrid, Modelling & Software Engn Res Grp, Madrid, Spain.
   [Nunez, Alberto] Univ Complutense Madrid, Formal Anal & Design Software Syst Res Grp, Madrid, Spain.
C3 Autonomous University of Madrid; Complutense University of Madrid
RP de Lara, J (corresponding author), Univ Autonoma Madrid, Modelling & Software Engn Res Grp, Madrid, Spain.
EM Pablo.GomezA@uam.es; Pablo.Cerro@uam.es; Alberto.Nunez@pdi.ucm.es;
   Esther.Guerra@uam.es; Juan.deLara@uam.es
RI Guerra, Esther/B-4977-2014; Cañizares, Pablo Cerro/Q-6082-2018;
   Gómez-Abajo, Pablo/S-3860-2016; de Lara, Juan/B-5422-2014; Nunez
   Covarrubias, Alberto/G-8259-2015
OI Cañizares, Pablo Cerro/0000-0002-2084-1558; Gómez-Abajo,
   Pablo/0000-0002-8319-4829; Nunez Covarrubias,
   Alberto/0000-0001-8613-746X
FU Madrid government, Spain; Spanish Ministry of Science [P2018/TCS-4314];
   Madrid region, Spain [S2018/TCS-4339, PR65/19-22452]; Complutense
   University;  [PID2021-122270OB-I00]
FX Work supported by the Madrid government, Spain and the Complutense
   University (grant PR65/19-22452), the Spanish Ministry of Science
   (PID2021-122270OB-I00), and the Madrid region, Spain (P2018/TCS-4314,
   S2018/TCS-4339) .
CR Almendros-Jiménez JM, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106631
   Alpernas Kalev, 2020, Onward! 2020: Proceedings of the 2020 ACM SIGPLAN International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software, P146, DOI 10.1145/3426428.3426921
   [Anonymous], 2017, ENG MODELING LANGUAG
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Asyrofi M. H., 2021, IEEE Transactions on Software Engineering
   Bill R, 2019, SOFTW SYST MODEL, V18, P1017, DOI 10.1007/s10270-017-0644-3
   Boussaa M, 2020, SOFTW TEST VERIF REL, V30, DOI 10.1002/stvr.1721
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Calheiros RN, 2011, SOFTWARE PRACT EXPER, V41, P23, DOI 10.1002/spe.995
   Canizares Pablo C., 2021, SLE 2021: Proceedings of the 14th ACM SIGPLAN International Conference on Software Language Engineering, P49, DOI 10.1145/3486608.3486904
   Cañizares PC, 2020, J SYST SOFTWARE, V163, DOI 10.1016/j.jss.2020.110522
   Cao D., 2021, SEKE
   Chang-ai Sun, 2016, International Journal of High Performance Computing and Networking, V9, P104
   Chang-ai Sun, 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P283, DOI 10.1109/ICWS.2011.65
   Chen T.Y., 1998, Metamorphic testing: a new approach for generating next test cases
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Clarisó R, 2016, J SYST SOFTWARE, V116, P113, DOI 10.1016/j.jss.2015.08.017
   Du KK, 2020, LECT NOTES COMPUT SC, V12028, P299, DOI 10.1007/978-3-030-41418-4_20
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   FogMET, 2021, US
   Gotlieb A, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P34, DOI 10.1109/CMPSAC.2003.1245319
   Hadiwijaya R.I., 2015, OLYMPIADS INFORM, V9, P75
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   He X, 2018, INFORM SOFTWARE TECH, V104, P109, DOI 10.1016/j.infsof.2018.07.010
   Jiang M., 2014, SEKE, P94
   Kecskemeti G, 2015, SIMUL MODEL PRACT TH, V58, P188, DOI 10.1016/j.simpat.2015.05.009
   Lin XY, 2020, COMPUT SCI ENG, V22, P78, DOI 10.1109/MCSE.2018.2880577
   Ma PC, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P458
   Mansur MN, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P639, DOI 10.1145/3468264.3468573
   Núñez A, 2022, EXPERT SYST APPL, V187, DOI 10.1016/j.eswa.2021.115955
   Nunez A, 2021, IEEE T RELIAB, V70, P261, DOI 10.1109/TR.2020.3011512
   Object Management Group, 2014, UML 2 4 OCL SPEC
   Ouarnoughi H, 2016, OPER SYST REV, V50, P27, DOI 10.1145/3041710.3041715
   Przigoda N, 2018, COMPUT LANG SYST STR, V54, P512, DOI 10.1016/j.cl.2017.11.002
   Riese F., 2021, VISI SOC, P1
   Segura S, 2020, IEEE SOFTWARE, V37, P46, DOI 10.1109/MS.2018.2875968
   Segura S, 2018, IEEE T SOFTWARE ENG, V44, P1083, DOI 10.1109/TSE.2017.2764464
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Sharma A, 2019, IEEE INT CONF SOFTW, P125, DOI 10.1109/ICST.2019.00022
   Spieker H, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110574
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Voelter M., 2013, DSI ENG DESIGNING IM
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Xtext, 2022, ABOUT US
   Yang Y, 2021, WATER RESOUR RES, V57, DOI 10.1029/2020WR029471
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang ZY, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106701
   Zheng X., 2020, arXiv
   Zhou Kaiyang., 2021, Domain generalization: A survey
NR 51
TC 1
Z9 1
U1 1
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2023
VL 157
AR 107164
DI 10.1016/j.infsof.2023.107164
EA FEB 2023
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8X5DB
UT WOS:000932031900001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Alfayez, R
   Winn, R
   Alwehaibi, W
   Venson, E
   Boehm, B
AF Alfayez, Reem
   Winn, Robert
   Alwehaibi, Wesam
   Venson, Elaine
   Boehm, Barry
TI How SonarQube-identified technical debt is prioritized: An exploratory
   case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technical debt; SonarQube; Technical debt prioritization; Software; Case
   study
AB Context: Repaying all technical debt (TD) in a system may be unviable, as there is typically a shortage of resources allocated for TD repayment activities. Therefore, TD prioritization is essential to best allocate such limited resources. Fortunately, one can utilize a static code analysis tool, such as SonarQube, to aid in expediting the TD prioritization process.Objective: Given that SonarQube is one of the most utilized tools in the context of TD, this exploratory case study seeks to explore how SonarQube-identified TD items are perceived and prioritized for repayment.Methods: The study was designed, replicated, and conducted in four companies and a master's level course, with a total of 89 participants. The participants were requested to select TD items to include for repayment under a resources constraint.Results: The results revealed that the overwhelming majority of participants prioritized TD by factoring in a TD item's value and cost, a smaller number prioritized higher value TD items, and only one participant prioritized lower cost TD items. Furthermore, it was revealed that the value of a TD item is subjective and context-dependent, and the majority of participants perceive the cost estimations provided by SonarQube for repaying TD items to be reliable and trustworthy when prioritizing TD.Conclusion: Based on the results, one can conclude that there is no silver bullet TD prioritization approach that addresses all of a developer's objectives and needs. New TD prioritization approaches should be designed without concentrating on a specific prioritization perspective and should be independent of value estimation methods.
C1 [Alfayez, Reem] King Saud Univ, Coll Comp & Informat Sci, Riyadh, Saudi Arabia.
   [Winn, Robert; Alwehaibi, Wesam; Venson, Elaine; Boehm, Barry] Univ Southern Calif, Ctr Syst & Software Engn, Los Angeles, CA USA.
C3 King Saud University; University of Southern California
RP Alfayez, R (corresponding author), King Saud Univ, Coll Comp & Informat Sci, Riyadh, Saudi Arabia.
EM reealfayez@ksu.edu.sa
RI Alfayez, Reem/KJL-9125-2024
OI Alfayez, Reem/0000-0001-6782-247X; Venson, Elaine/0000-0002-7607-5936
FU U.S. De-partment of Defense through the Systems Engineering Research
   Center (SERC) [H98230-08-D-0171]
FX Acknowledgments This material is based upon work supported in part by
   the U.S. De-partment of Defense through the Systems Engineering Research
   Center (SERC) under Contract H98230-08-D-0171. SERC is a federally
   funded University Affiliated Research Center managed by Stevens
   Institute of Technology.
CR Alfayez R, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT, TECHDEBT, P1, DOI 10.1145/3387906.3388630
   Allman E, 2012, COMMUN ACM, V55, P50, DOI 10.1145/2160718.2160733
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   [Anonymous], 2020, SON RUL
   [Anonymous], 2020, TECHNICAL DEBT
   [Anonymous], 2011, WARD EXPL DEBT MET
   [Anonymous], 2019, SON WEB API
   Avgeriou P, 2021, IEEE SOFTWARE, V38, P61, DOI 10.1109/MS.2020.3024958
   Baldassarre MT, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106377
   Biffl S., 2006, Value-Based Software Engineering
   Bomfim MM, 2017, COMM COM INF SC, V680, P60, DOI 10.1007/978-3-319-55907-0_6
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, P121
   Campbell G., 2013, SONARQUBE IN ACTION
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   CAST, 2020, PROD HLTH DASHB
   Chen C, 2017, PROC IEEE ACM INT C, P377, DOI 10.1109/ICSE-C.2017.75
   Clancy T, 2014, STANDISH GROUP CHAOS, P8
   Codabux Z, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P8, DOI 10.1109/MTD.2013.6608672
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Curtis B, 2012, IEEE SOFTWARE, V29, P34, DOI 10.1109/MS.2012.156
   Digkas G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P153, DOI 10.1109/SANER.2018.8330205
   Fontana FA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P282, DOI 10.1109/ICSAW.2017.16
   Gama E., 2019, TECHNICAL DEBTS STAT, DOI [10.1145/3364641.3364668, DOI 10.1145/3364641.3364668]
   Guo YP, 2016, EMPIR SOFTW ENG, V21, P159, DOI 10.1007/s10664-014-9351-7
   He J, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1518
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Jackson S.L., 2015, Research methods and statistics: A critical thinking approach, V5th
   Kiuwan, 2020, US
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lenarduzzi V., 2020, INT S EMP SOFTW ENG
   Lenarduzzi V, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110827
   Lenarduzzi V, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P501, DOI [10.1109/SANER48275.2020.9054821, 10.1109/saner48275.2020.9054821]
   Letouzey JL, 2012, IEEE SOFTWARE, V29, P44, DOI 10.1109/MS.2012.129
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Martini A, 2018, LECT NOTES COMPUT SC, V11048, P320, DOI 10.1007/978-3-030-00761-4_21
   Martini A, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P422, DOI 10.1109/SEAA.2015.78
   Martini A, 2014, EUROMICRO CONF PROC, P85, DOI 10.1109/SEAA.2014.65
   McConnell S., 2006, Software Estimation: Demystifying the Black Art
   Nord R. L., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P91, DOI 10.1109/WICSA-ECSA.212.17
   Oman P., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P337, DOI 10.1109/ICSM.1992.242525
   Pina D, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P206, DOI 10.1109/SEAA53835.2021.00034
   Plösch R, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P95, DOI 10.1145/3194164.3194172
   Ralph P, 2021, Arxiv, DOI arXiv:2010.03525
   Ribeiro LF, 2016, PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 1 (ICEIS), P572, DOI 10.5220/0005914605720579
   Rios N, 2020, EMPIR SOFTW ENG, V25, P3216, DOI 10.1007/s10664-020-09832-9
   Rubin Kenneth S., 2012, Essential Scrum: A practical guide to the most popular Agile process, V1st
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Saarimäki N, 2019, EUROMICRO CONF PROC, P317, DOI 10.1109/SEAA.2019.00055
   SonarQube, 2020, US
   Sterling Chris., 2010, Managing Software Debt: Building for Inevitable Change (paperback) (Agile Software Development)
   Tan J, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT, TECHDEBT, P11, DOI 10.1145/3387906.3388621
   Tan J, 2022, INFORM SOFTWARE TECH, V143, DOI 10.1016/j.infsof.2021.106738
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Wong K.C., 2013, GCMS 13
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Yuepu Guo, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P528, DOI 10.1109/ICSM.2011.6080824
   Zazworka N., 2011, P 2 WORKSH MAN TECHN, P39
NR 58
TC 1
Z9 1
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2023
VL 156
AR 107147
DI 10.1016/j.infsof.2023.107147
EA JAN 2023
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8J5LL
UT WOS:000922456900001
OA Bronze
DA 2024-07-18
ER

PT J
AU Sun, WS
   Zhang, QJ
   Fang, CR
   Chen, YC
   Wang, XY
   Wang, ZY
AF Sun, Weisong
   Zhang, Quanjun
   Fang, Chunrong
   Chen, Yuchen
   Wang, Xingya
   Wang, Ziyuan
TI Test case recommendation based on balanced distance of test targets
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Test case recommendation; Test target; Balanced distance
ID SOFTWARE; COVERAGE
AB Context: Unit testing has been widely regarded as an effective technique to ensure software quality. Writing unit test cases is time-consuming and requires developers to have abundant knowledge and experience. Automated test case generation, a promising technology for liberating developers and improving test efficiency, currently performs not satisfactory in real-world projects. As a complement, test case recommendation (TCR) has been receiving the attention of researchers. TCR can improve the efficiency of test case writing by recommending test case code to developers for their reference and reuse. The overarching idea of TCR techniques is that two similar test targets can reuse each other's test cases.
   Objective: Existing TCR techniques either fail to recommend relevant test cases for a given test target or are vulnerable to the mismatch of test target signatures. Our objective is to effectively and robustly recommend relevant test cases for test targets given by developers.
   Method: In this paper, we propose a novel TCR technique that measures the similarity of test targets based on a balanced distance. The balanced distance integrates the distances on code snippets and comments, making the measurement of test target similarity more accurate and robust. In particular, we take the distance on control flows into account to compensate for the shortcomings in measuring the similarity only based on the literal text of code snippets. As a proof-of-concept application, we implement a test case recommender named BDTCR.
   Results: We construct a test case corpus containing more than 13,000 test cases collected from GitHub. Based on this corpus, we conduct comprehensive experiments to evaluate the effectiveness and usefulness of BDTCR. The experimental results show that BDTCR can effectively recommend relevant test cases and outperform the state-of-the-art techniques.
   Conclusion: It can be concluded that (1) BDTCR is an effective TCR technique; (2) BDTCR is a robust TCR technique that can effectively resist the interference of the mismatch of test target signatures; (3) BDTCR is practical to help developers write test cases quickly and effectively.
C1 [Sun, Weisong; Zhang, Quanjun; Fang, Chunrong; Chen, Yuchen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
   [Wang, Xingya] Nanjing Tech Univ, Sch Comp Sci & Technol, Nanjing 211816, Peoples R China.
   [Wang, Xingya] Army Engn Univ PLA, Command & Control Engn Coll, Nanjing 210008, Peoples R China.
   [Wang, Ziyuan] Nanjing Univ Posts & Telecommun, Sch Comp Sci & Technol, Nanjing 210023, Peoples R China.
C3 Nanjing University; Nanjing Tech University; Army Engineering University
   of PLA; Nanjing University of Posts & Telecommunications
RP Fang, CR (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.; Wang, XY (corresponding author), Nanjing Tech Univ, Sch Comp Sci & Technol, Nanjing 211816, Peoples R China.; Wang, XY (corresponding author), Army Engn Univ PLA, Command & Control Engn Coll, Nanjing 210008, Peoples R China.; Wang, ZY (corresponding author), Nanjing Univ Posts & Telecommun, Sch Comp Sci & Technol, Nanjing 210023, Peoples R China.
EM weisongsun@smail.nju.edu.cn; quanjun.zhang@smail.nju.edu.cn;
   fangchunrong@nju.edu.cn; yuc.chen@outlook.com; xingyawang@outlook.com;
   wangziyuan@njupt.edu.cn
RI Sun, Weisong/AAU-9503-2020; Wang, Ziyuan/GSE-4594-2022; Wang,
   Xingya/J-5857-2014; Fang, Chunrong/GPW-9872-2022
OI Fang, Chunrong/0000-0002-9930-7111; Wang, Xingya/0000-0002-7331-4831
FU National Natural Science Foundation of China [61932012, 62141215];
   Science, Technology and Innovation Commission of Shenzhen Municipality,
   China [CJGJZD20200617103001003]
FX The authors would like to thank the anonymous reviewers for insightful
   comments. This research is partially supported by the National Natural
   Science Foundation of China (61932012, 62141215) and Science, Technology
   and Innovation Commission of Shenzhen Municipality, China
   (CJGJZD20200617103001003).
CR Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 2010, P 32 ACMIEEE INT C S
   Arcuri A, 2018, EMPIR SOFTW ENG, V23, P1959, DOI 10.1007/s10664-017-9570-9
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Burke E.M., 2003, JAVA EXTREME PROGRAM
   Chae DK, 2013, PROCEEDINGS OF THE 22ND ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM'13), P1577, DOI 10.1145/2505515.2507848
   Chan PPF, 2014, INT CONF QUAL SOFTW, P95, DOI 10.1109/QSIC.2014.28
   Chekam TT, 2017, PROC INT CONF SOFTW, P597, DOI 10.1109/ICSE.2017.61
   Cordio S., 2021, ASSERTJ FLUENT ASSER
   Cordy JR, 2011, CONF PROC INT SYMP C, P219, DOI 10.1109/ICPC.2011.26
   Daka E, 2014, PROC INT SYMP SOFTW, P201, DOI 10.1109/ISSRE.2014.11
   Demoney M, 1997, JAVA CODE CONVENTION
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Enoiu E, 2017, IEEE INT CONF SOFTW, P412, DOI 10.1109/ICST.2017.44
   Erfani M, 2013, 2013 IEEE 37TH ANNUAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE WORKSHOPS (COMPSACW), P65, DOI 10.1109/COMPSACW.2013.11
   Fang C., 2020, P 29 ACM SIGSOFT INT, P516, DOI 10.1145/3395363.3397362
   Feng Y, 2016, IEEE INT CONF AUTOM, P202, DOI 10.1145/2970276.2970367
   Fraser G, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699688
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Fry Z.P., 2012, INT S SOFTWARE TESTI, P177, DOI 10.1145/04000800.2336775
   G. team, 2021, TRUTH FLUENT ASS JAV
   Google, 2021, GOOGL JAV STYL GUID
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Hu X, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P611
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Janjic W, 2013, 2013 8TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST (AST), P100, DOI 10.1109/IWAST.2013.6595799
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Johnson J. H., 1993, Proceedings CASCON '93, P171
   Keivanloo I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P664, DOI 10.1145/2568225.2568292
   Kim K., 2018, P 40 INT C SOFTWARE
   Kochhar Pavneet Singh, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P215, DOI 10.1109/APSEC.2014.42
   Kochhar PS, 2013, INT CONF QUAL SOFTW, P103, DOI 10.1109/QSIC.2013.57
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Kuhn HW, 2005, NAV RES LOG, V52, P7, DOI 10.1002/nav.20053
   Lee J, 2012, IET SOFTW, V6, P275, DOI 10.1049/iet-sen.2011.0066
   Li X, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P690, DOI 10.1145/2950290.2950341
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   Machado P, 2010, LECT NOTES COMPUT SC, V6153, P59
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Mao K, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P347, DOI 10.1109/SOSE.2015.46
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Nie LM, 2016, IEEE T SERV COMPUT, V9, P771, DOI 10.1109/TSC.2016.2560165
   Novak M, 2019, ACM T COMPUT EDUC, V19, DOI 10.1145/3313290
   Oracle, 2021, JAV TM TUT DEF METH
   Oracle, 2021, WRIT DOC COMM JAV TO
   P.S. Foundation, 2021, DIFFL HELP COMP DELT
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Pham R, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P890, DOI 10.1145/2786805.2803202
   Pham R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P30, DOI 10.1145/2635868.2635925
   Planning S, 2002, The economic impacts of inadequate infrastructure for software testing
   Poirierl Y, 2021, WHAT ARE MOST POPULA
   Popescu A.-M., 2007, NATURAL LANGUAGE PRO, P9, DOI DOI 10.1007/978-1-84628-754-1_2
   Qusef A, 2010, PROC IEEE INT CONF S
   Raghothaman M, 2016, PROC INT CONF SOFTW, P357, DOI 10.1145/2884781.2884808
   Ragkhitwetsagul C, 2018, EMPIR SOFTW ENG, V23, P2464, DOI 10.1007/s10664-017-9564-7
   Ruixiang Qian, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P573, DOI 10.1145/3395363.3404370
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Sakti A, 2015, IEEE T SOFTWARE ENG, V41, P294, DOI 10.1109/TSE.2014.2363479
   Serra Domenico, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P121, DOI 10.1109/MSR.2019.00028
   Shamshiri S, 2018, IEEE INT CONF SOFTW, P250, DOI 10.1109/ICST.2018.00033
   Shuai J, 2020, INT C PROGRAM COMPRE, P196, DOI 10.1145/3387904.3389269
   Shutova Ekaterina., 2010, P 23 INT C COMP LING, P1002
   Silavong F., CORR
   Sun W., 2022, P 44 INT C SOFTWARE, P1
   Sun W., 2013, Proceedings of the 28th Symposium on Applied Computing, SAC '13, P1074
   Sun WS, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET), P110, DOI 10.1109/ICSE-SEET.2019.00020
   TIOBE, 2021, TIOBE IND JAN 2021
   van Bladel B, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P492, DOI [10.1109/SANER48275.2020.9054798, 10.1109/saner48275.2020.9054798]
   Wang JJ, 2021, IEEE T SOFTWARE ENG, V47, P1259, DOI 10.1109/TSE.2019.2918520
   Wang JJ, 2020, PROC INT CONF SOFTW, P1535, DOI 10.1145/3377811.3380380
   Wang XY, 2019, COMPUTER, V52, P61, DOI 10.1109/MC.2019.2905533
   Watson C, 2020, PROC INT CONF SOFTW, P1398, DOI 10.1145/3377811.3380429
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Wise M. J., 1996, SIGCSE Bulletin, V28, P130, DOI 10.1145/236462.236525
   Xie T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P904, DOI 10.1145/2889160.2891056
   Xu L, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P342, DOI 10.1109/SANER50967.2021.00039
   Yang Q, 2009, COMPUT J, V52, P589, DOI 10.1093/comjnl/bxm021
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Zhai J, 2020, PROC INT CONF SOFTW, P1359, DOI 10.1145/3377811.3380427
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhao G, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/3236024.3236068
   Zhu CQ, 2020, IEEE INT CONF AUTOM, P1302, DOI 10.1145/3324884.3415296
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 89
TC 1
Z9 1
U1 2
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2022
VL 150
AR 106994
DI 10.1016/j.infsof.2022.106994
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4P3BJ
UT WOS:000855271700006
DA 2024-07-18
ER

PT J
AU Rzig, DE
   Hassan, F
   Kessentini, M
AF Rzig, Dhia Elhaq
   Hassan, Foyzul
   Kessentini, Marouane
TI An empirical study on ML DevOps adoption trends, efforts, and benefits
   analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Machine learning; DevOps
AB Context: Machine Learning (ML), including Deep Learning(DL), based systems, have become ubiquitous in today's solutions to many real-world problems. ML-based approaches are being applied to solve complex problems such as autonomous driving, recommendation systems, etc.Objective: To improve the quality and deliverability of ML-based applications, the software development community is adopting state-of-the-art DevOps practices within them. However, we currently lack knowledge about the DevOps adoption trends, maintenance efforts and benefits among ML-based projects, and this work attempts to remedy this knowledge-gap.Methods: In this research work, we conducted a large-scale empirical analysis on 4031 ML projects, including 1116 ML Tools and 2915 ML Applied projects to quantify DevOps adoption, maintenance effort and benefits. To characterize the development behaviors, we performed configuration-script-analysis and commit-change -analysis on DevOps configuration files. To compare the characteristics of ML DevOps to those of traditional software projects, we performed the same analysis on 4076 non-ML projects. Results: Our analysis identified that ML projects, more specifically ML-Applied projects, have a slower, lower, and less efficient adoption of DevOps tools in general. DevOps configuration files in ML-Applied projects tended to experience more frequent changes than ML-Tool projects and were less likely to occur in conjunction with build and bug fixes. It's also evident that adopting DevOps in ML projects correlates with an increase in development productivity, code quality, and a decrease in bug resolution time, especially in ML-Applied projects which have the most to gain by adopting these tools.Conclusion: We identified the characteristics and improvement scopes of ML DevOps, such as the slower adoption of DevOps in certain ML projects, and the need for automatic configuration synchronization tools for these projects. We also identified the improvements the productivity of ML teams and projects associated with DevOps adoption, including better code quality, more frequent code sharing and integration and faster issue resolution.
C1 [Rzig, Dhia Elhaq; Hassan, Foyzul] Univ Michigan Dearborn, Comp & Informat Sci Dept, Dearborn, MI 48128 USA.
   [Kessentini, Marouane] Oakland Univ, Sch Engn & Comp Sci, Rochester, MI USA.
C3 University of Michigan System; University of Michigan Dearborn; Oakland
   University
RP Rzig, DE (corresponding author), Univ Michigan Dearborn, Comp & Informat Sci Dept, Dearborn, MI 48128 USA.
EM dhiarzig@umich.edu; foyzul@umich.edu; kessentini@oakland.edu
OI Hassan, Foyzul/0000-0003-4543-282X; Rzig, Dhia Elhaq/0000-0002-2757-9257
FU UofM-Dearborn Research Support, USA; NSF Award, USA [NSF-2152819]
FX Acknowledgments The UofM-Dearborn authors are supported in part by
   UofM-Dearborn Research Support, USA and NSF Award, USA NSF-2152819.
CR A.H. L. N.J. S. V. J. V. K., 2015, BAS INTR DEVOPS TOOL
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   [Anonymous], 2020, AMAZON SAGEMAKER
   [Anonymous], GRAPHQL GITHUB
   [Anonymous], 2020, 7 DEVOPS TIPS FASTER
   [Anonymous], GITPYTHON DEV GITPYT
   [Anonymous], Replication package of this study
   [Anonymous], 2014, P 8 ACMIEEE INT S EM
   [Anonymous], Code quality and code security - sonarqube
   [Anonymous], 2020, ALGORITHM BEATS YOUR
   Arpteg A, 2018, EUROMICRO CONF PROC, P50, DOI 10.1109/SEAA.2018.00018
   Bernardo JH, 2018, IEEE WORK CONF MIN S, P131, DOI 10.1145/3196398.3196421
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Brown Allana S.M., 2020, 2020 STATE DEVOPS RE
   Bucena I., 2017, BIR WORKSHOPS
   Chen A, 2020, P 2010 IEEE INT C CO, P1
   Chen CY, 2015, IEEE I CONF COMP VIS, P2722, DOI 10.1109/ICCV.2015.312
   Docker, 2020, US
   Erich F, 2014, LECT NOTES COMPUT SC, V8892, P277, DOI 10.1007/978-3-319-13835-0_21
   Evans data corporation, 2019, GLOD DEV POP DEM STU
   Fan G., 2020, P 29 ACM SIGSOFT INT
   Fursin G., 2020, CODEREEF OPEN PLATFO
   Gamblin T, 2015, PROCEEDINGS OF SC15: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/2807591.2807623
   Ghantous G.B., 2017, PACIS 2017 Proc, P96
   Github, GITH LING
   Gonzalez D, 2020, IEEE WORK CONF MIN S, P431, DOI 10.1145/3379597.3387473
   Hassan F, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1078, DOI 10.1145/3180155.3180181
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Hoste K, 2012, 2012 SC COMPANION: HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS (SCC), P572, DOI 10.1109/SC.Companion.2012.81
   Jabbari R, 2016, PROCEEDINGS OF THE XP2016 SCIENTIFIC WORKSHOPS, DOI 10.1145/2962695.2962707
   Jiang YJ, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P45, DOI 10.1109/MSR.2015.12
   Karamitsos I, 2020, INFORMATION, V11, DOI 10.3390/info11070363
   Karlas B, 2020, KDD '20: PROCEEDINGS OF THE 26TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P2407, DOI 10.1145/3394486.3403290
   Katz J., 2020, LIB IO OPEN SOURCE R, DOI [10.5281/zenodo.3626071, DOI 10.5281/ZENODO.3626071]
   Keselman HJ, 1998, REV EDUC RES, V68, P350, DOI 10.2307/1170601
   Kim Hae-Young, 2014, Restor Dent Endod, V39, P74, DOI 10.5395/rde.2014.39.1.74
   Kubernetes, 2020, About us
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Liu SQ, 2014, I S BIOMED IMAGING, P1015, DOI 10.1109/ISBI.2014.6868045
   Lubsen Z, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P151, DOI 10.1109/MSR.2009.5069493
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Luz WP, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240299
   Lwakatare LE, 2020, INT CONF SOFTW, P216
   Lwakatare LE, 2019, LECT NOTES BUS INF P, V355, P227, DOI 10.1007/978-3-030-19034-7_14
   Lwakatare LE, 2019, INFORM SOFTWARE TECH, V114, P217, DOI 10.1016/j.infsof.2019.06.010
   Martin DH, 2016, INT WORKS EMERG TREN, P50, DOI [10.1145/2897695.2897703, 10.1109/WETSoM.2016.016]
   McIntosh S, 2012, EMPIR SOFTW ENG, V17, P578, DOI 10.1007/s10664-011-9169-5
   McIntosh S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P141, DOI 10.1145/1985793.1985813
   Mhaskar HN, 2017, Arxiv, DOI arXiv:1707.05828
   Nahar N., 2022, ARXIV211010234
   de França BBN, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P53, DOI 10.1145/2973839.2973845
   PyGithub, PYGITHUB PYGITHUB
   Rafi Saima, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P413, DOI 10.1145/3383219.3383278
   Rahman A, 2018, PROCEEDINGS OF THE 4TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN'18), P8, DOI 10.1145/3278142.3278149
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Renggli C, 2019, PROC VLDB ENDOW, V12, P1962, DOI 10.14778/3352063.3352110
   Robles Gregorio., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P222
   Rousseeuw PJ, 2011, WIRES DATA MIN KNOWL, V1, P73, DOI 10.1002/widm.2
   Rutherford A, 2011, ANOVA and ANCOVA: a GLM approach, DOI DOI 10.1002/9781118491683
   Seo H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P724, DOI 10.1145/2568225.2568255
   Shukla R.M., 2021, IEEE ASIA PACIFIC C, P1
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Teixeira D, 2020, INT J HUM CAP INF TE, V11, P1, DOI 10.4018/IJHCITP.2020070101
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Vassallo C, 2018, IEEE INT CONF AUTOM, P790, DOI 10.1145/3238147.3240729
   Wright HK, 2013, PROC IEEE INT CONF S, P548, DOI 10.1109/ICSM.2013.93
   Wu H, 2016, PROC IEEE INT CONF S, P32, DOI 10.1109/ICSME.2016.87
   Yin LK, 2020, IEEE INT CONF AUTOM, P697, DOI 10.1145/3324884.3416640
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zaharia Matei, 2018, IEEE Data Eng. Bull., V41, P39, DOI DOI 10.1145/3399579.3399867
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
NR 72
TC 5
Z9 5
U1 1
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2022
VL 152
AR 107037
DI 10.1016/j.infsof.2022.107037
EA AUG 2022
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5A3AF
UT WOS:000862761900004
DA 2024-07-18
ER

PT J
AU Yang, YL
   He, TX
   Xia, ZL
   Feng, Y
AF Yang, Yilin
   He, Tianxing
   Xia, Zhilong
   Feng, Yang
TI A comprehensive empirical study on bug characteristics of deep learning
   frameworks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bug characteristics; Deep learning framework; Empirical study; Bug
   detection
ID DIABETIC-RETINOPATHY; MODELS
AB Context: Deep Learning (DL) frameworks enable developers to build DNN models without learning the underlying algorithms and models. While some of these DL-based software systems have been deployed in safety-critical areas, such as self-driving cars and medical diagnostics, for DL frameworks, characterizing their bugs and thus helping researchers to design specific quality assurance techniques become desperately needed.
   Objective: Our research aims to characterize bugs typical of DL frameworks at the source code level for an in-depth analysis of bug symptoms, root causes, and bug fixes. In this way, we hope to provide insights for researchers to design automatic quality assurance techniques, such as automatic repair techniques and fault location techniques, applicable to DL frameworks and DL-based software systems.
   Method: We started by summarizing the DL framework reference architecture and proposing the DL framework bug taxonomy. Then, we mined 1,127 DL framework bug reports from eight popular DL frameworks and labeled the bug types, root causes, and symptoms. Finally, we discussed the bug characteristics and explored how developers could possibly deal with these bugs.
   Results: Our main findings are: (i) DNN model building bugs and general type bugs accounted for one-third of the total defects. (ii) DNN model building bugs are more prone to algorithm logic constraints, internal API errors, and data/numerical errors. (iii) Fifteen bug-fixing patterns are summarized, providing reference for common DL framework bug repair and future research on the development of automatic DL framework bug detection tools.
   Conclusion: By analyzing the bug-fixing changes, we characterize the occurrences, root causes, symptoms, and fixing of these bugs. The study results have provided researchers with insights into how to ensure DL framework quality and presented actionable suggestions for DL framework developers to improve their code quality.
C1 [Yang, Yilin; He, Tianxing; Xia, Zhilong; Feng, Yang] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
C3 Nanjing University
RP Feng, Y (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
EM yilin.yang@smail.nju.edu.cn; fengyang@nju.edu.cn
FU National Natural Science Foundation of China [62002158, 61832009,
   61932012]; Science, Technology and Innovation Commission of Shenzhen
   Municipality [CJGJZD20200617103001003]
FX We would like to thank anonymous reviewers for their insightful and
   constructive comments. This project was partially funded by the National
   Natural Science Foundation of China under Grant Nos. 62002158, 61832009,
   and 61932012, and the Science, Technology and Innovation Commission of
   Shenzhen Municipality (No. CJGJZD20200617103001003).
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Amodei Dario, 2016, CONCRETE PROBLEMS AI
   [Anonymous], 2007, GIBBSLDA AC C IMPLEM
   [Anonymous], 2016, ARXIV
   [Anonymous], 2017, DEEPLEARNING4J OPEN
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bojarski Mariusz, 2016, arXiv
   Buduma N, 2017, Fundamentals of deep learning: designing next-generation machine intelligence algorithms
   Chaudhuri S, 2007, ACM T DATABASE SYST, V32, DOI 10.1145/1242524.1242526
   Chen Tianqi, 2015, ARXIV
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Chetlur S., 2014, ARXIV14100759
   Chollet F., 2018, DEEP LEARNING WITH R
   Collobert R., 2002, Torch: a modular machine learning software library
   Cosentino V, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P137, DOI [10.1109/MSR.2016.023, 10.1145/2901739.2901776]
   Cotroneo D, 2019, PROC INT SYMP SOFTW, P334, DOI 10.1109/ISSRE.2019.00041
   Dagenais B., 2010, Proc. of the ICSE 10, P275, DOI DOI 10.1145/1806799.1806842
   Di Franco A, 2017, IEEE INT CONF AUTOM, P509, DOI 10.1109/ASE.2017.8115662
   Dongmei Zhang, 2012, 2012 9th International Conference on Fuzzy Systems and Knowledge Discovery, P1309, DOI 10.1109/FSKD.2012.6233871
   Feng Y., 2020, P 29 ACM SIGSOFT INT, P177, DOI DOI 10.1145/3395363.3397357
   FLEISS JL, 1973, EDUC PSYCHOL MEAS, V33, P613, DOI 10.1177/001316447303300309
   Gao YJ, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1342, DOI 10.1145/3368089.3417050
   Gao Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P539, DOI 10.1145/3236024.3236030
   Goffi A., 2016, P 25 INT S SOFTW TES, P213, DOI DOI 10.1145/2931037.2931061
   Grosskurth A, 2005, PROC IEEE INT CONF S, P661
   Gulshan V, 2016, JAMA-J AM MED ASSOC, V316, P2402, DOI 10.1001/jama.2016.17216
   Guo PJ, 2011, P ACM 2011 C COMP SU, P395, DOI [10.1145/1958824.1958887., DOI 10.1145/1958824.1958887]
   Hallgren Kevin A, 2012, Tutor Quant Methods Psychol, V8, P23
   Han JX, 2019, P INT COMP SOFTW APP, P21, DOI 10.1109/COMPSAC.2019.00013
   Hapke Hannes, 2020, Building Machine Learning Pipelines: Automating Model Life Cycles with TensorFlow
   Hassan AE, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P150, DOI 10.1109/WCRE.2000.891462
   Hata H, 2021, PROC INT CONF SOFTW, P773, DOI 10.1109/ICSE43902.2021.00076
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Huval B., 2015, ARXIV
   Islam MJ, 2020, PROC INT CONF SOFTW, P1135, DOI 10.1145/3377811.3380378
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jia L, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110935
   Jia YQ, 2014, PROCEEDINGS OF THE 2014 ACM CONFERENCE ON MULTIMEDIA (MM'14), P675, DOI 10.1145/2647868.2654889
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Katz G, 2017, LECT NOTES COMPUT SC, V10426, P97, DOI 10.1007/978-3-319-63387-9_5
   Koopman P, 2016, SAE INT J TRANSP SAF, V4, P15, DOI 10.4271/2016-01-0128
   Koutsoukos D, 2021, PROC VLDB ENDOW, V14, P1797, DOI 10.14778/3467861.3467869
   Kunft A, 2019, PROC VLDB ENDOW, V12, P1553, DOI 10.14778/3342263.3342633
   Li GP, 2017, SC'17: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/3126908.3126964
   Li MZ, 2021, IEEE T PARALL DISTR, V32, P708, DOI 10.1109/TPDS.2020.3030548
   Li Z, 2006, P 1 WORKSH ARCH SYST, P25, DOI DOI 10.1145/1181309.1181314
   Nguyen L, 2017, PROCEEDINGS OF THE 16TH WORKSHOP ON HOT TOPICS IN OPERATING SYSTEMS (HOTOS 2017), P88, DOI 10.1145/3102980.3102995
   Looks M., 2017, ARXIV
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Ma Y., 2019, FRONT DATA COMPUT, V1, P105, DOI [DOI 10.11871/JFDC, DOI 10.11871/JFDC.ISSN.2096.742X.2019.01.011]
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Maetschke S., 2017, ARXIV
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   Mirhoseini A., 2020, ARXIV
   Murphy-Hill E, 2015, IEEE T SOFTWARE ENG, V41, P65, DOI 10.1109/TSE.2014.2357438
   Noda K, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P612, DOI [10.1109/saner48275.2020.9054829, 10.1109/SANER48275.2020.9054829]
   Paszke A, 2019, ADV NEUR IN, V32
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Pickerill P, 2020, EMPIR SOFTW ENG, V25, P2897, DOI 10.1007/s10664-020-09825-8
   pluskid, PLUSKID MOCHA PLUSKI
   Quo QY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P822, DOI 10.1109/ASE.2019.00080
   Qureshi I, 2011, ORGAN RES METHODS, V14, P208, DOI 10.1177/1094428110375002
   Saha S, 2019, PROC INT CONF SOFTW, P13, DOI 10.1109/ICSE.2019.00020
   Seaman C, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P149
   Seide F, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2135, DOI 10.1145/2939672.2945397
   Shi SH, 2018, 2018 16TH IEEE INT CONF ON DEPENDABLE, AUTONOM AND SECURE COMP, 16TH IEEE INT CONF ON PERVAS INTELLIGENCE AND COMP, 4TH IEEE INT CONF ON BIG DATA INTELLIGENCE AND COMP, 3RD IEEE CYBER SCI AND TECHNOL CONGRESS (DASC/PICOM/DATACOM/CYBERSCITECH), P949, DOI 10.1109/DASC/PiCom/DataCom/CyberSciTec.2018.000-4
   SHROUT PE, 1979, PSYCHOL BULL, V86, P420, DOI 10.1037/0033-2909.86.2.420
   Steinmacher I, 2015, INFORM SOFTWARE TECH, V59, P67, DOI 10.1016/j.infsof.2014.11.001
   Sun XB, 2017, ASIA PAC SOFWR ENG, P348, DOI 10.1109/APSEC.2017.41
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   TensorFlow, TENSORBOARD VIS KIT
   Thung F., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P271, DOI 10.1109/ISSRE.2012.22
   Thung F, 2013, WORK CONF REVERSE EN, P92, DOI 10.1109/WCRE.2013.6671284
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tokui S., 2015, P WORKSH MACH LEARN
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wan ZY, 2017, IEEE WORK CONF MIN S, P413, DOI 10.1109/MSR.2017.59
   Wang ZD, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3387111
   Weimer W, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1330017.1330019
   Wong TY, 2016, JAMA-J AM MED ASSOC, V316, P2366, DOI 10.1001/jama.2016.17563
   Wongsuphasawat K, 2018, IEEE T VIS COMPUT GR, V24, P1, DOI 10.1109/TVCG.2017.2744878
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Yi-Wei Chen, 2020, ACM SIGKDD Explorations Newsletter, V22, P35, DOI 10.1145/3447556.3447567
   Zhang XF, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P400, DOI 10.1145/3460319.3464843
   Zhang YH, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P826, DOI 10.1145/3368089.3409720
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
   Zhou Y., 2020, Advances in Neural Information Processing Systems (NeurIPS), V33, P13844
NR 93
TC 6
Z9 6
U1 6
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2022
VL 151
AR 107004
DI 10.1016/j.infsof.2022.107004
EA JUL 2022
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V5BX
UT WOS:000859493100004
DA 2024-07-18
ER

PT J
AU Lamprakos, CP
   Marantos, C
   Siavvas, M
   Papadopoulos, L
   Tsintzira, AA
   Ampatzoglou, A
   Chatzigeorgiou, A
   Kehagias, D
   Soudris, D
AF Lamprakos, Christos P.
   Marantos, Charalampos
   Siavvas, Miltiadis
   Papadopoulos, Lazaros
   Tsintzira, Angeliki-Agathi
   Ampatzoglou, Apostolos
   Chatzigeorgiou, Alexander
   Kehagias, Dionysios
   Soudris, Dimitrios
TI Translating quality-driven code change selection to an instance of
   multiple-criteria decision making
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Decision support; Software quality; Multiple-criteria decision making
AB Context: The definition and assessment of software quality have not converged to a single specification. Each team may formulate its own notion of quality and tools and methodologies for measuring it. Software quality can be improved via code changes, most often as part of a software maintenance loop.Objective: This manuscript contributes towards providing decision support for code change selection given a) a set of preferences on a software product's qualities and b) a pool of heterogeneous code changes to select from.Method: We formulate the problem as an instance of Multiple-Criteria Decision Making, for which we provide both an abstract flavor and a prototype implementation. Our prototype targets energy efficiency, technical debt and dependability.Results: This prototype achieved inconsistent results, in the sense of not always recommending changes reflecting the decision maker's preferences. Encouraged from some positive cases and cognizant of our prototype's shortcomings, we propose directions for future research.Conclusion: This paper should thus be viewed as an imperfect first step towards quality-driven, code change-centered decision support and, simultaneously, as a curious yet pragmatic enough gaze on the road ahead.
C1 [Lamprakos, Christos P.; Marantos, Charalampos; Papadopoulos, Lazaros; Soudris, Dimitrios] Natl Tech Univ Athens, Sch Elect & Comp Engn, Athens, Greece.
   [Siavvas, Miltiadis; Kehagias, Dionysios] Ctr Res & Technol Hellas, Thessaloniki, Greece.
   [Tsintzira, Angeliki-Agathi; Ampatzoglou, Apostolos; Chatzigeorgiou, Alexander] Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
C3 National Technical University of Athens; Centre for Research &
   Technology Hellas; University of Macedonia
RP Lamprakos, CP (corresponding author), Natl Tech Univ Athens, Sch Elect & Comp Engn, Athens, Greece.
EM cplamprakos@microlab.ntua.gr; hmarantos@microlab.ntua.gr;
   siavvasm@iti.gr; lpapadop@microlab.ntua.gr;
   angeliki.agathi.tsintzira@gmail.com; ampatzoglou@uom.edu.gr;
   achat@uom.edu.gr; diok@iti.gr; dsoudris@microlab.ntua.gr
RI Soudris, Dimitrios/I-5252-2014; Chatzigeorgiou,
   Alexandros/AAL-6077-2021; Kehagias, Dionysios/H-9091-2016
OI Marantos, Charalampos/0000-0002-6007-8147; Soudris,
   Dimitrios/0000-0002-6930-6847; Kehagias, Dionysios/0000-0002-6912-3493;
   Lamprakos, Christos/0000-0002-3370-857X; Chatzigeorgiou,
   Alexander/0000-0002-5381-8418
FU European Union [780572 SDK4ED]
FX This research was partially funded by the European Union's Horizon 2020
   research and innovation programme under grant agreement No 780572 SDK4ED
   (www.sdk4ed.eu).
CR [Anonymous], 2000, APPL OPTIMIZAT
   Basili V.R., 1992, Software Modeling and Measurement: The Goal/Question/Metric Paradigm
   Che SA, 2009, I S WORKL CHAR PROC, P44, DOI 10.1109/IISWC.2009.5306797
   Chen JF, 2017, PROC IEEE INT CONF S, P341, DOI 10.1109/ICSME.2017.13
   Chung L, 2009, LECT NOTES COMPUT SC, V5600, P363, DOI 10.1007/978-3-642-02463-4_19
   Guo S, 2017, KNOWL-BASED SYST, V121, P23, DOI 10.1016/j.knosys.2017.01.010
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Ouni A, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1843
   Ruhe G, 2002, LECT NOTES COMPUT SC, V2640, P104
   Shatnawi R., 2011, Internat. J. Software Eng. Applicat., P127
NR 10
TC 2
Z9 2
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2022
VL 145
AR 106851
DI 10.1016/j.infsof.2022.106851
EA FEB 2022
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0J9PR
UT WOS:000780430800007
DA 2024-07-18
ER

PT J
AU Tung, LN
   Tran, HV
   Le, KN
   Hung, PN
AF Lam Nguyen Tung
   Hoang-Viet Tran
   Khoi Nguyen Le
   Pham Ngoc Hung
TI An automated test data generation method for void pointers and function
   pointers in C/C plus plus libraries and embedded projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Automated test data generation; Concolic testing; Symbolic execution;
   Void pointer; Function pointer; VFP verification
ID SYMBOLIC EXECUTION; CHECKING; CRASH
AB Automated test data generation for unit testing C/C++ functions using concolic methods is well-known for improving software quality while reducing human testing effort. However, there have been only a few researches related to generating test data for void pointers and function pointers which are commonly used in C/C++ libraries and embedded projects. This paper proposes a concolic-based method named VFP (Void and Function Pointers test data generation) to generate test data for void pointers and function pointers. The key idea of VFP method is to preprocess the source code of the project under test to find all possible types of void pointers and references of function pointers. These types and references are used in the initial test data generating phase of the concolic testing method. VFP method is implemented in VFP verification tool to test on various C/C++ libraries and embedded projects. The experimental results show that VFP significantly improves the coverage of the generated test data in comparison with existing methods.
C1 [Lam Nguyen Tung; Hoang-Viet Tran; Khoi Nguyen Le; Pham Ngoc Hung] Vietnam Natl Univ Hanoi, Univ Engn & Technol, E3 Bldg,144 Xuan Thuy, Hanoi, Vietnam.
C3 Vietnam National University Hanoi
RP Hung, PN (corresponding author), Vietnam Natl Univ Hanoi, Univ Engn & Technol, E3 Bldg,144 Xuan Thuy, Hanoi, Vietnam.
EM tunglam@vnu.edu.vn; thv@vnu.edu.vn; khoi.n.le@vnu.edu.vn;
   hungpn@vnu.edu.vn
OI Ngoc Hung, Pham/0000-0002-5584-5823
CR Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   Ball T., 2003, MSRTR200386, P14
   Beyer D, 2004, PROC INT CONF SOFTW, P326, DOI 10.1109/ICSE.2004.1317455
   BIRD DL, 1983, IBM SYST J, V22, P229, DOI 10.1147/sj.223.0229
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   Buckle G., 1998, Industrial Perspectives of Safety-critical Systems, P150, DOI [10.1007/978-1-4471-1534-211, DOI 10.1007/978-1-4471-1534-211]
   Burnim Jacob, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P443, DOI 10.1109/ASE.2008.69
   Cadar C, 2005, LECT NOTES COMPUT SC, V3639, P2
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Cadar C, 2008, ACM T INFORM SYST SE, V12, DOI 10.1145/1455518.1455522
   Chen YH, 2020, P IEEE S SECUR PRIV, P1580, DOI 10.1109/SP40000.2020.00002
   Chess B., 2007, Secure programming with static analysis
   Copeland L., 2003, A practitioner's guide to software testing
   Csallner C, 2005, PROC INT CONF SOFTW, P422
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Dijkstra EW., 1959, NUMER MATH, V1, P269, DOI [10.1007/BF01386390, DOI 10.1007/BF01386390]
   Duc-Anh Nguyen, 2019, International Journal of Software Engineering and Knowledge Engineering, V29, P1279, DOI 10.1142/S0218194019500402
   Elkarablieh B, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129
   Forrester JE, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE 4TH UNSENIX WINDOWS SYSTEMS SYMPOSIUM, P59
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P., P NETW DISTRIBUTEDSY
   Godefroid P, 2007, ACM SIGPLAN NOTICES, V42, P47, DOI 10.1145/1190215.1190226
   Grieskamp W., 2002, Software Engineering Notes, V27, P112, DOI 10.1145/566171.566190
   Kannavara R, 2015, PROC NAECON IEEE NAT, P374, DOI 10.1109/NAECON.2015.7443099
   Kim Y, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P151, DOI 10.1109/ICSE-SEIP.2019.00024
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kuznetzov V., 2018, CONTINUING ARMS RACE, P81
   Larson E, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 12TH USENIX SECURITY SYMPOSIUM, P121
   Liu S, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2359, DOI 10.1145/3133956.3134066
   Majumdar R, 2007, PROC INT CONF SOFTW, P416
   Moonzoo Kim, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P340, DOI 10.1109/ICST.2012.114
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Nagarakatte S, 2009, ACM SIGPLAN NOTICES, V44, P245, DOI 10.1145/1543135.1542504
   Nam MJ, 2019, 35TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSA), P612, DOI 10.1145/3359789.3359799
   Offutt A. J., 1996, SIGSOFT Software Engineering Notes, V21, P195, DOI [10.1145/229000.226317, 10.1145/226295.226317]
   Pacheco C, 2005, LECT NOTES COMPUT SC, V3586, P504
   Pasareanu CS, 2019, ADV COMPUT, V113, P289, DOI 10.1016/bs.adcom.2018.10.004
   Sen K, 2007, P 22 IEEE ACM INT C, P571, DOI DOI 10.1145/1321631.1321746
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Sen K, 2011, LECT NOTES COMPUT SC, V6695, P3
   Sun T, 2009, INT CONF QUAL SOFTW, P353, DOI 10.1109/QSIC.2009.53
   Visser W., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1013886.1007526
   Wang XY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P291, DOI 10.1145/3180155.3180177
   Wang Z, 2009, THIRD INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, PROCEEDINGS, P155, DOI 10.1109/TASE.2009.10
   Ward N. J., 1989, Safety of Computer Control Systems 1989 (SAFECOMP'89) Proceedings of the IFAC/IFIP Workshop, P91
   WICHMANN BA, 1995, SOFTWARE ENG J, V10, P69, DOI 10.1049/sej.1995.0010
   Williams N, 2005, LECT NOTES COMPUT SC, V3463, P281
   Xie T, 2005, LECT NOTES COMPUT SC, V3440, P365
   Xie T, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P196
NR 50
TC 1
Z9 1
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2022
VL 145
AR 106821
DI 10.1016/j.infsof.2022.106821
EA JAN 2022
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0J9PR
UT WOS:000780430800006
DA 2024-07-18
ER

PT J
AU Choma, J
   Guerra, EM
   da Silva, TS
   Zaina, LM
AF Choma, Joelma
   Guerra, Eduardo M.
   da Silva, Tiago S.
   Zaina, Luciana M.
TI An approach to explore sequential interactions in cognitive activities
   of software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Cognitive activities; Distributed cognition;
   Resources model; Sequential analysis
AB Context : The study of cognitive aspects around software activities can provide valuable insights to improve software engineering practices. Objective: This paper presents an approach based on distributed cognition and sequential analysis to explore cognitive activities in the software development context by analyzing the interactions between software practitioners and the resources used to support them. Method: We conducted nine laboratory-based observation sessions to record qualitative audio/video data of interactions between the study participants and at-hand resources during the planning and managing of software analytics tasks. Results: The interaction strategies of the resources model included 21 emergent actions, and the sequential analysis revealed two different patterns of interaction over time. Conclusion: Our approach has been useful for evaluating how well an artifact works to support a team in software analytics activities. Furthermore, it can be applied to explore and discover interaction patterns in different software activities.
C1 [Choma, Joelma] Natl Inst Space Res, Sao Jose Dos Campos, Brazil.
   [Guerra, Eduardo M.] Free Univ Bozen Bolzano, Bolzano, Italy.
   [da Silva, Tiago S.] Univ Fed Sao Paulo, Sao Jose Dos Campos, Brazil.
   [Zaina, Luciana M.] Univ Fed Sao Carlos, Sorocaba, Brazil.
C3 Instituto Nacional de Pesquisas Espaciais (INPE); Free University of
   Bozen-Bolzano; Universidade Federal de Sao Paulo (UNIFESP); Universidade
   Federal de Sao Carlos
RP Choma, J (corresponding author), Natl Inst Space Res, Sao Jose Dos Campos, Brazil.
EM jh.choma@hotmail.com; guerraem@gmail.com; silvadasilva@unifesp.br;
   lzaina@ufscar.br
RI Choma, Joh/KCZ-1386-2024
OI Guerra, Eduardo/0000-0001-5555-3487
FU CAPES - Brazil [001]; CNPq, Brazil [313312/2019-2]
FX This work is supported by CAPES - Brazil-Finance Code 001, and grant
   313312/2019-2 (CNPq, Brazil) .
CR [Anonymous], 1997, OBSERVING INTERACTIO
   d'Astous P, 2002, INFORM SOFTWARE TECH, V44, P639, DOI 10.1016/S0950-5849(02)00081-2
   Dubochet G., 2009, Proceedings of the 21st Working Conference on the Psychology of Programmers Interest Group, P174
   Eden J, 2007, CC2007-CREATIVITY AND COGNITION 2007 SEEDING CREATIVITY: TOOLS, MEDIA, AND ENVIRONMENTS, P283
   Hollan J., 2000, ACM Transactions on Computer-Human Interaction, V7, P174, DOI 10.1145/353485.353487
   Hutchins E., 1995, COGNITION WILD
   OLSON GM, 1994, HUM-COMPUT INTERACT, V9, P427, DOI 10.1207/s15327051hci0903&4_6
   Pohl M, 2016, INT J HUM-COMPUT ST, V96, P54, DOI 10.1016/j.ijhcs.2016.07.006
   Sharp H, 2012, LECT NOTES BUS INF P, V111, P62
   Wright PC, 2000, HUM-COMPUT INTERACT, V15, P1, DOI 10.1207/S15327051HCI1501_01
NR 10
TC 0
Z9 0
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2022
VL 141
AR 106730
DI 10.1016/j.infsof.2021.106730
EA SEP 2021
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UZ1RK
UT WOS:000701988700007
DA 2024-07-18
ER

PT J
AU Zorzetti, M
   Signoretti, I
   Salerno, L
   Marczak, S
   Bastos, R
AF Zorzetti, Maximilian
   Signoretti, Ingrid
   Salerno, Larissa
   Marczak, Sabrina
   Bastos, Ricardo
TI Improving Agile Software Development using User-Centered Design and Lean
   Startup
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile Software Development; Extreme Programming; User-Centered Design;
   Lean Startup; Case study
ID PRODUCT; EXPERIMENTATION; MODEL
AB Context: Agile methods have limitations concerning problem understanding and solution finding, which can cause organizations to push misguided products and accrue waste. Some authors suggest combining agile methods with discovery-oriented approaches to overcome this, with notable candidates being User-Centered Design (UCD) and Lean Startup, a combination of which there is yet not a demonstrated, comprehensive study on how it works. Objective: To characterize a development approach combination of Agile Software Development, UCD, and Lean Startup; exposing how the three approaches can be intertwined in a single development process and how they affect development. Method: We conducted a case study with two industry software development teams that use this combined approach, investigating them through interviews, observation, focus groups, and a workshop during a nine-month period in which they were stationed in a custom-built development lab. Results: The teams are made up of user advocates, business advocates, and solution builders; while their development approach emphasizes experimentation by making heavy use of build-measure-learn cycles. The combined approach promotes a problem-oriented mindset, encouraging team members to work together and engage with the entire development process, actively discovering stakeholders needs and how to fulfill them. Each of its approaches provide a unique contribution to the development process: UCD fosters empathy with stakeholders and enables teams to better understand the problem they are tasked with solving; Lean Startup introduces experimentation as the guiding force of development; and Extreme Programming (the teams' agile method) provides support to experimentation and achieving technical excellence. Conclusion: The combined approach pushes teams to think critically throughout the development effort. Our practical example provides insight on its essence and might inspire industry practitioners to seek a similar development approach based on the same precepts.
C1 [Zorzetti, Maximilian; Signoretti, Ingrid; Salerno, Larissa; Marczak, Sabrina; Bastos, Ricardo] Pontificia Univ Catolica Rio Grande do Sul, Sch Technol, 6681 Ipiranga Ave,Bldg 32,Room 504, Porto Alegre, RS, Brazil.
C3 Pontificia Universidade Catolica Do Rio Grande Do Sul
RP Marczak, S (corresponding author), Pontificia Univ Catolica Rio Grande do Sul, Sch Technol, 6681 Ipiranga Ave,Bldg 32,Room 504, Porto Alegre, RS, Brazil.
EM maximilian.zorzetti@acad.pucrs.br; ingrid.manfrim@acad.pucrs.br;
   larissa.salerno@acad.pucrs.br; sabrina.marczak@pucrs.br; bastos@pucrs.br
OI Zorzetti, Maximilian/0000-0001-5255-6295
FU CNPq, Brazil [307177/2018-1]
FX We acknowledge that this research is sponsored by Dell Brazil using
   incentives of the Brazilian Informatics Law (Law no. 8.2.48, year 1991)
   . Sabrina Marczak thanks the financial support by CNPq, Brazil (grant
   no. 307177/2018-1) .
CR Abras C., 2004, Encyclopedia of Human-Computer Interaction, P445, DOI [10.3233/WOR-2010-1109, DOI 10.3233/WOR-2010-1109]
   [Anonymous], 2013, Lean UX: Applying Lean Principles to Improve User Experience
   Barry E. J., 2002, Information Technology & Management, V3, P113, DOI 10.1023/A:1013168927238
   Bastos R., 2019, AGILE METHODS, V1106, P25, DOI [10.1007/978-3- 030- 36701-5_3, DOI 10.1007/978-3-030-36701-53]
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   Brown T, 2008, HARVARD BUS REV, V86, P84
   Bastarrica MC, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268918
   Dobrigkeit F, 2017, INT CONF ENG DES, P319
   Fagerholm F, 2017, J SYST SOFTWARE, V123, P292, DOI 10.1016/j.jss.2016.03.034
   Fowler M., 2001, Software Development, V9, P28
   Gregory P, 2016, INFORM SOFTWARE TECH, V77, P92, DOI 10.1016/j.infsof.2016.04.006
   Griffin A, 1997, J PROD INNOVAT MANAG, V14, P429
   Grossman-Kahn B., 2012, LEADING DESIGN, P815
   Gutbrod M, 2017, LECT NOTES COMPUT SC, V10611, P297, DOI 10.1007/978-3-319-69926-4_21
   IDEO, 2015, FIELD GUID HUM CENTR
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Lindberg T, 2011, UNDERST INNOV, P3, DOI 10.1007/978-3-642-13757-0_1
   Lindgren E, 2016, INFORM SOFTWARE TECH, V77, P80, DOI 10.1016/j.infsof.2016.04.008
   Moralles C, 2020, COMM COM INF SC, V1251, P220, DOI 10.1007/978-3-030-56441-4_16
   Norman D.A., 1986, USER CTR SYSTEM DESI, DOI 10.1201/b15703
   Norman Don, 2013, The design of everyday things
   Obendorf H., 2008, Proc. Conference on Human Factors in Computing Systems (CHI '08), P2159
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Ries E, 2011, The Lean Startup
   Riordan CM, 2005, HUM RESOUR MANAGE-US, V44, P471, DOI 10.1002/hrm.20085
   Salah D., 2014, P 18 INT C EV ASS SO, P1, DOI 10.1145/2601248.2601276
   Salah D, 2015, PROCEEDINGS OF THE 20TH EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (EUROPLOP 2015), DOI 10.1145/2855321.2855341
   SCHON EM, 2017, P INT C AG SOFTW DEV, P37, DOI DOI 10.1007/978-3-319-57633-6_3
   Schwaber K., 2011, SCRUM GUIDE, V21
   Signoretti I., 2020, THESIS U RIO GRANDE
   SIGNORETTI I, 2020, P INT C AG SOFTW DEV, P39, DOI DOI 10.1007/978-3-030-49392-9_3
   Signoretti I, 2019, INT SYMP EMP SOFTWAR, P213
   Signoretti I, 2020, LECT NOTES COMPUT SC, V12562, P125, DOI 10.1007/978-3-030-64148-1_8
   Teece DJ, 1998, CALIF MANAGE REV, V40, P55, DOI 10.2307/41165943
   Tessem B, 2014, INFORM SOFTWARE TECH, V56, P873, DOI 10.1016/j.infsof.2014.02.005
   Vargas Bruna Prauchner, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P330, DOI 10.1145/3383219.3383257
   Veganti R, 1997, R&D MANAGE, V27, P377, DOI 10.1111/1467-9310.00072
   Vilkki K, 2010, LECT NOTES BUS INF, V65, P44, DOI 10.1007/978-3-642-16416-3_6
   Vredenburg K., 2002, Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2002, P471, DOI 10.1145/503376.503460
   Ximenes BH, 2015, LECT NOTES COMPUT SC, V9186, P356, DOI 10.1007/978-3-319-20886-2_34
   Yaman SG, 2017, J SYST SOFTWARE, V133, P195, DOI 10.1016/j.jss.2017.07.009
   Yilmaz Murat, 2015, ACM SIGSOFT Software Engineering Notes, V40, DOI 10.1145/2693208.2693239
   Yin R. K., 2017, CASE STUDY RES DESIG
   Zorzetti M, 2020, LECT NOTES COMPUT SC, V12562, P142, DOI 10.1007/978-3-030-64148-1_9
NR 44
TC 15
Z9 15
U1 8
U2 47
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2022
VL 141
AR 106718
DI 10.1016/j.infsof.2021.106718
EA SEP 2021
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UZ1RK
UT WOS:000701988700008
OA Green Published
DA 2024-07-18
ER

PT J
AU Ramírez-Mora, SL
   Oktaba, H
   Gómez-Adorno, H
   Sierra, G
AF Ramirez-Mora, Sandra L.
   Oktaba, Hanna
   Gomez-Adorno, Helena
   Sierra, Gerardo
TI Exploring the communication functions of comments during bug fixing in
   Open Source Software projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Open Source Software development; Issue Tracking System; Bug fixing;
   Machine learning; Communication function; Corrective maintenance
AB Context: Bug fixing is a frequent and important task in Open Source Software (OSS) development and involves the communication of messages, which can serve for multiple purposes and affect the efficiency and effectiveness of corrective software activities.
   Objective: This work is aimed at studying the communication functions of bug comments and their associations with fast and complete bug fixing in OSS development.
   Method: Over 500K comments and 89K bugs of 100 OSS projects were extracted from three Issue Tracking Systems. Six thousand comments were manually tagged to create a corpus of communication functions. The extracted comments were automatically tagged using machine learning algorithms and the corpus of communication functions. Statistical and correlation analyses were performed and the most frequent comments communicated during fast and successful bug fixing were identified.
   Results: Significant differences in the distribution of comments of fixed and not fixed bugs were found. Variations in the distribution of comments of bugs with different fixing time were also found. Referential comments that provided objective information were found to be the most frequent messages. Results showed that the percentages of conative and emotive comments are greater when bugs are resolved without the requested fixes and when fixes are implemented in a long time.
   Conclusion: Associations between communication functions and bug fixing exist. The results of this work could be used to improve corrective tasks in OSS development and some other specific linguistic aspects should be studied in detail in OSS communities.
C1 [Ramirez-Mora, Sandra L.] Univ Nacl Autonoma Mexico, Posgrad Ciencia & Ingn Computac, Mexico City, DF, Mexico.
   [Oktaba, Hanna] Univ Nacl Autonoma Mexico, Fac Ciencias, Mexico City, DF, Mexico.
   [Gomez-Adorno, Helena] Univ Nacl Autonoma Mexico, Inst Invest Matemat Aplicadas & Sistemas, Mexico City, DF, Mexico.
   [Sierra, Gerardo] Univ Nacl Autonoma Mexico, Inst Ingn, Mexico City, DF, Mexico.
C3 Universidad Nacional Autonoma de Mexico; Universidad Nacional Autonoma
   de Mexico; Universidad Nacional Autonoma de Mexico; Universidad Nacional
   Autonoma de Mexico
RP Ramírez-Mora, SL (corresponding author), Univ Nacl Autonoma Mexico, Posgrad Ciencia & Ingn Computac, Mexico City, DF, Mexico.
EM sandra.ramirez@ciencias.unam.mx
RI Gómez Adorno, Helena/GLS-3588-2022
OI Gómez Adorno, Helena/0000-0002-6966-9912; Oktaba,
   Hanna/0000-0003-2852-4490
FU Consejo Nacional de Ciencia y Tecnologia (CoNaCyT), Mexico
FX This work was supported by the scholarship program of Consejo Nacional
   de Ciencia y Tecnologia (CoNaCyT), Mexico.
CR Aberdour M, 2007, IEEE SOFTWARE, V24, P58, DOI 10.1109/MS.2007.2
   Akkermans H, 2002, EUR J INFORM SYST, V11, P35, DOI 10.1057/palgrave/ejis/3000418
   Anh N., 2011, Proceedings of the 7th International Conference on Predictive Models in Software Engineering, P1
   [Anonymous], 2001, System Sciences
   Bhattacharya P, 2013, EUR CON SFTWR MTNCE, P133, DOI 10.1109/CSMR.2013.23
   Breu S, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P301
   Butler T, 2003, INFORM SYST J, V13, P209, DOI 10.1046/j.1365-2575.2003.00151.x
   Butler T., 2001, Journal of End User Computing, V13, P12, DOI 10.4018/joeuc.2001010102
   Destefanis G, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION), P14, DOI 10.1145/3194932.3194936
   Destefanis G, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.73
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   Gomes LAF, 2019, INFORM SOFTWARE TECH, V115, P58, DOI 10.1016/j.infsof.2019.07.009
   Garreta R, 2013, J MACH LEARN RES
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Graziotin D, 2018, J SYST SOFTWARE, V140, P32, DOI 10.1016/j.jss.2018.02.041
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Hartwick J, 2001, IEEE T PROF COMMUN, V44, P21, DOI 10.1109/47.911130
   Jakobson R, 1963, POINTS
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Karim MR, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2184
   Kolmogorov A., 1933, Giorn Dell'inst Ital Degli Att, V4, P83, DOI DOI 10.12691/AJAMS-1-1-2
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Laurent A.M., 2008, UNDERSTANDING OPEN S, P4
   Levine SS, 2014, ORGAN SCI, V25, P1414, DOI 10.1287/orsc.2013.0872
   Licorish SA, 2018, INFORM SOFTWARE TECH, V97, P10, DOI 10.1016/j.infsof.2017.12.005
   Licorish SA, 2014, INFORM SOFTWARE TECH, V56, P1578, DOI 10.1016/j.infsof.2014.02.004
   Littlejohn S.W., 2009, ENCY COMMUNICATION T, V1
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Mäntylä M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P247, DOI [10.1109/MSR.2016.033, 10.1145/2901739.2901752]
   McLeod L, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978803
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Murgia A, 2014, 10 INT C PRED MOD SO
   Murgia A, 2018, EMPIR SOFTW ENG, V23, P521, DOI 10.1007/s10664-017-9526-0
   Myers J.L., 2010, DEVELOPING FUNDAMENT
   Noyori Y, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P280, DOI 10.1109/QRS.2019.00044
   Ortu M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P303, DOI 10.1109/MSR.2015.35
   Panichella S., 2019, ABS190402414 CORR
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Porru Simone, 2016, P 12 INT C PRED MOD, DOI [10.1145/2972958.2972959, DOI 10.1145/2972958.2972959, 10.1145/2972958. 2972959]
   Rajaraman Anand, 2011, Mining of Massive Datasets
   Ramirez-Mora S.L., 2021, **DATA OBJECT**, DOI [10.17632/xfzv59fht2.1, DOI 10.17632/XFZV59FHT2.1]
   Ramírez-Mora SL, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110663
   Ramírez-Mora SL, 2017, 2017 5TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2017), P44, DOI 10.1109/CONISOFT.2017.00013
   Reynolds CJ, 2011, J MED INTERNET RES, V13, P176, DOI 10.2196/jmir.1521
   Saha RK, 2015, INFORM SOFTWARE TECH, V65, P114, DOI 10.1016/j.infsof.2015.03.002
   Sawyer S, 1998, IBM SYST J, V37, P552, DOI 10.1147/sj.374.0552
   Schramm W., 1954, The Process and Effects of Mass Communication, P3
   Schrape J.-F, 2019, COCREATION RESHAPING, P117, DOI [10.1007/978-3-319-97788-1_10, DOI 10.1007/978-3-319-97788-1_10]
   Sharma M, 2014, LECT NOTES COMPUT SC, V8583, P227, DOI 10.1007/978-3-319-09156-3_17
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Valdivia-Garcia H, 2018, J SYST SOFTWARE, V143, P44, DOI 10.1016/j.jss.2018.03.053
   Wu HC, 2008, ACM T INFORM SYST, V26, DOI 10.1145/1361684.1361686
   Xia X, 2015, INFORM SOFTWARE TECH, V61, P93, DOI 10.1016/j.infsof.2014.12.006
   Zhao Y, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962591
NR 55
TC 3
Z9 3
U1 2
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2021
VL 136
AR 106584
DI 10.1016/j.infsof.2021.106584
EA APR 2021
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SJ2MZ
UT WOS:000655363900012
DA 2024-07-18
ER

PT J
AU Clark, AG
   Walkinshaw, N
   Hierons, RM
AF Clark, Andrew G.
   Walkinshaw, Neil
   Hierons, Robert M.
TI Test case generation for agent-based models: A systematic literature
   review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Agent-based modelling; Multi-agent systems; Software testing; Test case
   generation; Systematic literature review
ID GENETIC ALGORITHM; PETRI NETS; SOFTWARE; SPECIFICATION
AB Context: Agent-based models play an important role in simulating complex emergent phenomena and supporting critical decisions. In this context, a software fault may result in poorly informed decisions that lead to disastrous consequences. The ability to rigorously test these models is therefore essential. Objective: Our objective is to summarise the state-of-the-art techniques for test case generation in agent-based models and identify future research directions. Method: We have conducted a systematic literature review in which we pose five research questions related to the key aspects of test case generation in agent-based models: What are the information artifacts used to generate tests? How are these tests generated? How is a verdict assigned to a generated test? How is the adequacy of a generated test suite measured? What level of abstraction of an agent-based model is targeted by a generated test? Results: Out of the 464 initial search results, we identified 24 primary publications. Based on these primary publications, we formed a taxonomy to summarise the state-of-the-art techniques for test case generation in agent-based models. Our results show that whilst the majority of techniques are effective for testing functional requirements at the agent and integration levels of abstraction, there are comparatively few techniques capable of testing society-level behaviour. Furthermore, the majority of techniques cannot test non-functional requirements or ?soft goals?. Conclusions: This paper reports insights into the key developments and open challenges concerning test case generation in agent-based models that may be of interest to both researchers and practitioners. In particular, we identify the need for test case generation techniques that focus on societal and non-functional behaviour, and a more thorough evaluation using realistic case studies that feature challenging properties associated with a typical agent-based model.
C1 [Clark, Andrew G.; Walkinshaw, Neil; Hierons, Robert M.] Univ Sheffield, Sheffield, S Yorkshire, England.
C3 University of Sheffield
RP Clark, AG (corresponding author), Univ Sheffield, Sheffield, S Yorkshire, England.
EM agclark2@sheffield.ac.uk; n.walkinshaw@sheffield.ac.uk;
   r.hierons@sheffield.ac.uk
RI Walkinshaw, Neil/AHA-2966-2022
OI Walkinshaw, Neil/0000-0003-2134-6548; Clark, Andrew/0000-0002-6830-0566;
   Hierons, Robert/0000-0002-4771-1446
FU EPSRC, United Kingdom CITCOM [EP/T030526/1]; EPSRC [EP/T030526/1]
   Funding Source: UKRI
FX Walkinshaw and Hierons are funded by the EPSRC, United Kingdom CITCOM
   grant EP/T030526/1.
CR Abu Bakar N, 2018, APPL INTELL, V48, P1251, DOI 10.1007/s10489-017-1112-z
   Adlemo A, 2019, JOWO 2019 JOINT ONT, V2518
   Adra Salem F., 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P151, DOI 10.1109/ICSTW.2010.9
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], 1962, Schriften des IIM
   [Anonymous], 2020, COVID 19 COVIDSIM MO
   [Anonymous], 1974, PURE APPL MATH, DOI DOI 10.1016/S0079-8169(08)60880-6
   [Anonymous], 2007, ONTOLOGY MATCHING
   [Anonymous], 2010, P 2010 ACM S APPL CO
   [Anonymous], 2011, 10 INT C AUTONOMOUS
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   Arnold KF, 2019, INT J EPIDEMIOL, V48, P243, DOI 10.1093/ije/dyy260
   Arora PK, 2018, ARAB J SCI ENG, V43, P447, DOI 10.1007/s13369-017-2796-4
   Babac MB, 2014, NEUROCOMPUTING, V146, P230, DOI 10.1016/j.neucom.2014.04.060
   Bailey N.T, 1975, The Mathematical Theory of Infectious Diseases and Its Applications
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bauer B., AGENT UML FORMALISM
   Blanes D, 2009, LECT NOTES COMPUT SC, V5788, P510, DOI 10.1007/978-3-642-04394-9_62
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Calero C., 2006, Ontologies for software engineering and software technology
   Cavarra A, 2011, FORM ASP COMPUT, V23, P21, DOI 10.1007/s00165-009-0134-7
   Chao DD, 2015, SOC SCI MED, V147, P280, DOI 10.1016/j.socscimed.2015.08.041
   Chatterjee N, 2020, TRANSPARENCY REPRODU
   CHENG KT, 1993, ACM IEEE D, P86
   Chi Keen Low, 1999, Autonomous Agents and Multi-Agent Systems, V2, P311, DOI 10.1023/A:1010011219782
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Claessen K, 2011, ACM SIGPLAN NOTICES, V46, P53, DOI 10.1145/1988042.1988046
   Clavel M, 2002, THEOR COMPUT SCI, V285, P187, DOI 10.1016/S0304-3975(01)00359-0
   Coelho Roberta, 2007, 2007 IEEE International Conference on Software Maintenance, P425, DOI 10.1109/ICSM.2007.4362655
   Collins C.T, 2001, P XPUNIVERSE, V238
   Crooks A.T., 2011, agent-based models of geographical systems, P85, DOI DOI 10.1007/978-90-481-8927-45
   Davis L., 1991, Handbook of Genetic Algorithms
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Dehimi NE, 2019, 2019 4TH INTERNATIONAL CONFERENCE ON NETWORKING AND ADVANCED SYSTEMS (ICNAS 2019), P7, DOI 10.1109/icnas.2019.8807874
   Dehimi NE, 2015, ENG APPL ARTIF INTEL, V46, P232, DOI 10.1016/j.engappai.2015.09.013
   Dikenelli O., 2006, AGENT ORIENTED SOFTW, P156
   Eleftherakis G., 2011, 2011 Federated Conference on Computer Science and Information Systems (FedCSIS), P561
   Epstein J. M., 1996, Growing Artificial Societies: Social Science from the Bottom Up
   Fagiolo Giorgio, 2019, Computer Simulation Validation: Fundamental Concepts, Methodological Frameworks, and Philosophical Perspectives, P763, DOI [DOI 10.1007/978, DOI 10.1007/978-3, 10.1007/978-]
   Fink G., 1997, Software Engineering Notes, V22, P74, DOI 10.1145/263244.263267
   Flaxman S, 2020, NATURE, V584, P257, DOI 10.1038/s41586-020-2405-7
   FREEDMAN RS, 1991, IEEE T SOFTWARE ENG, V17, P553, DOI 10.1109/32.87281
   Frias-Martinez E., 2011, Proceedings of the 2011 IEEE Third International Conference on Privacy, Security, Risk and Trust and IEEE Third International Conference on Social Computing (PASSAT/SocialCom 2011), P57, DOI 10.1109/PASSAT/SocialCom.2011.142
   Friedman G., 2002, Software Engineering Notes, V27, P134, DOI 10.1145/566171.566192
   Gerber C., 1999, HOLONIC MULTIAGENT S
   Gill A., 1962, Introduction to the Theory of Finite-State Machines
   Godefroid P, 2012, COMMUN ACM, V55, P40, DOI 10.1145/2093548.2093564
   Godefroid Patrice, 2008, Network and Distributed Systems Security
   Goldstein J., 1999, EMERGENCE, V1, P49, DOI [10.1207/s15327000em0101_4, DOI 10.1207/S15327000EM0101_4]
   Haddad S., 1999, Application and Theory of Petri Nets 1999. 20th International Conference, ICATPN'99. Proceedings (Lecture Notes in Computer Science Vol.1639), P228
   Hamlet R., 2002, ENCY SOFTW ENG
   Harrold MJ, 2001, ACM SIGPLAN NOTICES, V36, P312, DOI 10.1145/504311.504305
   Heckel R, 2005, ELECTRON NOTES THEOR, V116, P145, DOI 10.1016/j.entcs.2004.02.073
   Houhamdi Zina, 2011, Journal of Computer Sciences, V7, P690, DOI 10.3844/jcssp.2011.690.697
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jorgensen P.C., 2018, Software Testing: A Craftsman's Approach
   Juneidi S. J., 2010, International Journal of Modelling and Simulation, V30, P1, DOI 10.2316/Journal.205.2010.1.205-4306
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kalaji A, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P230, DOI 10.1109/ICST.2009.29
   Kalboussi Sabrine, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P245, DOI 10.1007/978-3-642-39742-4_19
   Kanewala U, 2014, INFORM SOFTWARE TECH, V56, P1219, DOI 10.1016/j.infsof.2014.05.006
   Kerr CC., 2020, medRxiv
   Keyes KM, 2017, AM J EPIDEMIOL, V186, P146, DOI 10.1093/aje/kwx090
   Kissoum Y, 2008, I C COMP SYST APPLIC, P785, DOI 10.1109/AICCSA.2008.4493616
   Kissoum Y, 2007, I C COMP SYST APPLIC, P76, DOI 10.1109/AICCSA.2007.370867
   Kitchenham B., 2007, Joint Report
   Korel B, 1996, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.1996.493403
   Laycock G.T., 1993, THESIS CITESEER
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Leitner Andreas, 2007, P THE 6 JOINT M EURO, P425
   Liu AQ, 2020, J BANK FINANC, V112, DOI 10.1016/j.jbankfin.2017.08.008
   Luck M., 2005, AGENT TECHNOLOGY COM
   Mathur A. P., 1994, Software Testing, Verification and Reliability, V4, P9, DOI 10.1002/stvr.4370040104
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   MESEGUER J, 1992, THEOR COMPUT SCI, V96, P73, DOI 10.1016/0304-3975(92)90182-F
   Mokhati Farid, 2013, 2013 Science and Information Conference (SAI), P485
   Moser T, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P478
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Nguyen C.D., 2008, P 7 INT C AUTONOMOUS, V3, P1315
   Nguyen CD, 2012, AUTON AGENT MULTI-AG, V25, P260, DOI 10.1007/s10458-011-9175-4
   Nguyen CD, 2011, LECT NOTES COMPUT SC, V6038, P180
   Nguyen D.C., 2008, AAMAS, P1669
   Office for Budget Responsibility, 2020, CORONAVIRUS ANAL
   Padgham L, 2002, LECT NOTES COMPUT SC, V2585, P174
   Padgham L., 2005, DEV INTELLIGENT AGEN, V13
   Padgham L, 2009, AGENT ORIENTED SOFTW, P66, DOI DOI 10.1007/978-3-642-19208-1_5
   Padgham L, 2013, IEEE T SOFTWARE ENG, V39, P1230, DOI 10.1109/TSE.2013.10
   Padgham L, 2009, LECT NOTES COMPUT SC, V5386, P116, DOI 10.1007/978-3-642-01338-6_9
   Panovska-Griffiths J., 2020, medRxiv
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Peres J., 2005, SOFTWARE ENG AGENT O
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   PETERSON JL, 1977, COMPUT SURV, V9, P223, DOI 10.1145/356698.356702
   Platt D, 2020, J ECON DYN CONTROL, V113, DOI 10.1016/j.jedc.2020.103859
   Prasanna M., 2005, ACAD OPEN INTERNET J, V15
   Ramler R., 2006, P 2006 INT WORKSHOP, P85, DOI DOI 10.1145/1138929.1138946
   Rao A. S., 1995, ICMAS-95 Proceedings. First International Conference on Multi-Agent Systems, P312
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Russell S., 2009, Artificial intelligence
   Sakellariou I, 2015, LECT NOTES ARTIF INT, V9494, P37, DOI 10.1007/978-3-319-27947-3_3
   Scholl H. J., 2001, Proceedings of the 34th Annual Hawaii International Conference on System Sciences, DOI 10.1109/HICSS.2001.926296
   Shahir HY., 2012, SEC INFO, V1, P4, DOI [10.1186/2190-8532-1-4, DOI 10.1186/2190-8532-1-4]
   Shehory O., 2001, Proceedings of the Fifth International Conference on Autonomous Agents, P624, DOI 10.1145/375735.376473
   Siebers P.O., 2019, **DROPPED REF** **DROPPED REF**, P1
   Smith B., 2012, The furniture of the world, P47, DOI DOI 10.1163/9789401207799_005
   Squazzoni F, 2020, JASSS-J ARTIF SOC S, V23, DOI 10.18564/jasss.4298
   Staats M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P391, DOI 10.1145/1985793.1985847
   Szatmári Z, 2011, ICINCO 2011: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON INFORMATICS IN CONTROL, AUTOMATION AND ROBOTICS, VOL 2, P217
   Gonçalves EJT, 2015, J SYST SOFTWARE, V108, P77, DOI 10.1016/j.jss.2015.06.008
   Thaler J, 2019, PROCEEDINGS OF THE 2019 SUMMER SIMULATION CONFERENCE (SUMMERSIM '19)
   Tonella P, 2008, INT WORKSHOP AGENT O, P187
   Tracy M, 2018, ANNU REV PUBL HEALTH, V39, P77, DOI 10.1146/annurev-publhealth-040617-014317
   WHITLEY D, 1994, STAT COMPUT, V4, P65, DOI 10.1007/BF00175354
   WOLFRAM S, 1983, REV MOD PHYS, V55, P601, DOI 10.1103/RevModPhys.55.601
   Wynants L, 2020, BMJ-BRIT MED J, V369, DOI 10.1136/bmj.m1328
   Zheng M., 2005, Proceedings. 12th Asia-Pacific Software Engineering Conference
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 118
TC 9
Z9 9
U1 1
U2 32
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2021
VL 135
AR 106567
DI 10.1016/j.infsof.2021.106567
EA MAR 2021
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA RQ5WO
UT WOS:000642489200007
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Porter, J
   Menascé, DA
   Gomaa, H
AF Porter, Jason
   Menasce, Daniel A.
   Gomaa, Hassan
TI A decentralized approach for discovering runtime software architectural
   models of distributed software systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architecture; Distributed software architecture discovery;
   Gossiping; Message tracing
AB Context: Runtime software architectural models of self-adaptive systems are needed for making adaptation decisions in architecture-based self-adaptive systems. However, when these systems are distributed and highly dynamic, there is an added need to discover the system's software architecture model at runtime. Current methods of runtime architecture discovery use a centralized approach, in which the process is carried out from a single location. These methods are inadequate for large distributed software systems because they do not scale up well and have a single point of failure.
   Objective and Method: This paper describes DeSARM (Decentralized Software Architecture discoveRy Mechanism), a completely decentralized and automated approach, based on gossiping and message tracing, for runtime discovery of software architecture models of distributed software systems. DeSARM is able to identify at runtime important architectural characteristics such as components and connectors, in addition to synchronous and asynchronous communication patterns. Furthermore, through its use of gossiping, DeSARM exhibits the properties of scalability, global consistency among participating nodes, and resiliency to failures. This paper demonstrates DeSARM's properties and answers key research questions through experimentation with software architectures of varying sizes and complexities executing within a computer cluster.
   Results: DeSARM enables the decentralized discovery of runtime software architectural models of distributed software systems while exhibiting the properties of scalability, global consistency among participating nodes and resiliency to failures. Scalability is achieved through DeSARM's ability to successfully discover software architectures of increasing sizes and complexities executing across node counts of increasing sizes. Global consistency among participating nodes is achieved by each node within the system discovering the complete software architecture independently but in coordination with each other. Finally, resiliency to failures is achieved by DeSARM successfully discovering the software architecture of the system in the presence of component failures.
C1 [Porter, Jason] Univ North Georgia, Dept Comp Sci & Informat Syst, Dahlonega, GA 30597 USA.
   [Menasce, Daniel A.; Gomaa, Hassan] George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
C3 University of North Georgia; George Mason University
RP Porter, J (corresponding author), Univ North Georgia, Dept Comp Sci & Informat Syst, Dahlonega, GA 30597 USA.
EM jason.porter@ung.edu; menasce@gmu.edu; hgomaa@gmu.edu
OI Menasce, Daniel/0000-0002-4085-6212
FU AFOSR, USA [FA9550-16-1-0030]
FX This work was partially supported by the AFOSR, USA grant
   FA9550-16-1-0030. It also utilizes contributions made by Emad Albassam
   to the RASS research project.
CR Albassam E., 2016, P 11 INT JOINT C SOF
   Albassam E., 2017, 14 IEEE INT C AUT CO
   Aldred B.K., 2003, Patent, Patent No. [6, 654, 805, 6654805]
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   [Anonymous], 2010, P 7 INT C AUT COMP I, DOI DOI 10.1145/1809049.1809084
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   Anquetil N, 1999, J SOFTW MAINT-RES PR, V11, P201, DOI 10.1002/(SICI)1096-908X(199905/06)11:3<201::AID-SMR192>3.0.CO;2-1
   Antoniol G, 2004, PROG COMPREHEN, P120, DOI 10.1109/WPC.2004.1311054
   Aziz A., 2015, Patent, Patent No. [9, 106, 694, 9106694]
   Bojic D., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P23, DOI 10.1109/CSMR.2000.827302
   Corazza A, 2011, EUR CON SFTWR MTNCE, P35, DOI 10.1109/CSMR.2011.8
   Corazza A, 2010, EUR CON SFTWR MTNCE, P88, DOI 10.1109/CSMR.2010.36
   DannyWeyns Bradley, 2013, Revised Selected and Invited Papers, P76, DOI [10.1007/978-3-642-35813-5_4, DOI 10.1007/978-3-642-35813-5_4]
   Esfahani N, 2016, ACM T AUTON ADAP SYS, V10, DOI 10.1145/2856035
   Gang Huang, 2006, Automated Software Engineering, V13, P257, DOI 10.1007/s10515-006-7738-4
   Garcia J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P552, DOI 10.1109/ASE.2011.6100123
   Gomaa H., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P11, DOI 10.1109/SEAMS.2012.6224386
   Gomaa H, 2011, SOFTWARE MODELING AND DESIGN: UML, USE CASES, PATTERNS, AND SOFTWARE ARCHITECTURES, P1, DOI 10.1017/CBO9780511779183
   Gomaa H., 2010, P 2010 ACM S APPL CO, P462
   HARRIS DR, 1995, PROC INT CONF SOFTW, P186, DOI 10.1145/225014.225032
   Holt RC, 2006, SCI COMPUT PROGRAM, V60, P149, DOI 10.1016/j.scico.2005.10.003
   Israr T, 2007, J SYST SOFTWARE, V80, P474, DOI 10.1016/j.jss.2006.07.019
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kermarrec Anne-Marie, 2007, Operating Systems Review, V41, P2, DOI 10.1145/1317379.1317381
   Kim M, 2009, IEEE ROBOT AUTOM MAG, V16, P34, DOI 10.1109/MRA.2008.931636
   Koschke R., 2009, Software Engineering, P140, DOI DOI 10.1007/978-3-540-95888-8
   Koutra D., 2011, P EC INF C
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Langelier G., 2005, Proc. IEEE/ACM Automated Software Engineering, P214
   Lethbridge T.C., 2004, Electronic Notes in Theoretical Computer Science, V94, P7
   Lungu M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P183
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Medvidovic N., 2010, P 32 ACM IEEE INT C, V2, P471
   Menasce D., RASS: Resilient Autonomic Software Systems
   Mendonca N.C., 2001, SWARM FOR 8 WROK C R
   Minseong Kim, 2006, 28th International Conference on Software Engineering Proceedings, P534
   Misra J., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P113, DOI 10.1109/WCRE.2012.21
   Murphy G. C., 1995, SIGSOFT Software Engineering Notes, V20, P18, DOI 10.1145/222132.222136
   Naseem R, 2011, EUR CON SFTWR MTNCE, P45, DOI 10.1109/CSMR.2011.9
   Pinzger M, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P170, DOI 10.1109/WCRE.2002.1173075
   Pinzger M, 2002, PROG COMPREHEN, P53, DOI 10.1109/WPC.2002.1021318
   Pinzger M, 2005, ELECTRON NOTES THEOR, V127, P183, DOI 10.1016/j.entcs.2004.08.043
   Porter J., 2018, 9 ACM SPEC INT C PER
   Porter J., 2016, 11 INT WORKSH MOD RU
   Prakash G., 2013, Patent, Patent No. [8, 566, 938, 8566938]
   Prakash G., 2016, Patent, Patent No. [9, 501, 746, 9501746]
   Qingshan L., 2005, 12 WORKSH C REV ENG, P10
   Riva C, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P47, DOI 10.1109/CSMR.2002.995789
   Riva C, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P161, DOI 10.1109/WCRE.2002.1173074
   Sartipi K, 2003, PROC IEEE INT CONF S, P293, DOI 10.1109/ICSM.2003.1235434
   Sartipi K, 2001, PROG COMPREHEN, P115, DOI 10.1109/WPC.2001.921721
   Sartipi K, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P259, DOI 10.1109/WCRE.2007.10
   Schmerl B, 2006, IEEE T SOFTWARE ENG, V32, P454, DOI 10.1109/TSE.2006.66
   Seong M.J., 2000, Patent, Patent No. [6, 016, 558, 6016558]
   Siff M, 1999, IEEE T SOFTWARE ENG, V25, P749, DOI 10.1109/32.824377
   Singh A., 2018, Patent, Patent No. [10, 050, 998, 10050998]
   Sundaram Vinai, 2013, 43 ANN IEEE IFIP INT, P1
   Tzerpos V, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P258
   Vasconcelos A., 2004, BRAZ S SOFTW ENG
   Weyns Danny, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P249, DOI 10.1007/978-3-642-39031-9_22
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
   Wu XM, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P90
   Yeh AS, 1997, PROC INT CONF SOFTW, P184, DOI 10.1145/253228.253265
NR 66
TC 0
Z9 0
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2021
VL 131
AR 106476
DI 10.1016/j.infsof.2020.106476
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LB
UT WOS:000614250000003
OA Bronze
DA 2024-07-18
ER

PT J
AU Singjai, A
   Simhandl, G
   Zdun, U
AF Singjai, Apitchaka
   Simhandl, Georg
   Zdun, Uwe
TI On the practitioners' understanding of coupling smells - A grey
   literature based Grounded-Theory study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Grey literature; Grounded theory; Design smells; Code smells; Coupling
   smells; Software design quality; Code quality
ID BAD SMELLS; CODE; IDENTIFICATION
AB Context: Code and design smells, such as the coupling smells examined in this article, are widely studied. Existing empirical studies reveal gaps between the scientific theory and practice, not yet explained by the scientific literature. Only basic coupling smell detection approaches and metrics seem to have been transferred to practice so far.
   Objective: This article aims to study the current practitioner?s understanding of coupling smells.
   Method: Based on grey literature sources containing practitioner views on coupling smells, we performed a Grounded Theory (GT) study. We used UML-based modeling to precisely encode our findings and performed a rigorous analysis of our codes and models.
   Results: Our results are defining factors of coupling smells, as well as smell impacts, trade-offs, relationships to other smells, relationships to practices and patterns, and fix options as perceived by practitioners. We further identified gaps in the understanding of coupling smells between science and practice, and derived opportunities and challenges for future scientific work. Conclusions: Five lessons are presented as opportunities and challenges for future research. Our results can help scientists to get a better understanding of practitioner concerns, and practitioners to get an overview of the current perception of other practitioners on coupling smells.
C1 [Singjai, Apitchaka; Simhandl, Georg; Zdun, Uwe] Univ Vienna, Fac Comp Sci, Res Grp Software Architecture, Vienna, Austria.
C3 University of Vienna
RP Singjai, A (corresponding author), Univ Vienna, Fac Comp Sci, Res Grp Software Architecture, Vienna, Austria.
EM apitchaka.singjai@univie.ac.at; georg.simhandl@univie.ac.at;
   uwe.zdun@univie.ac.at
RI Zdun, Uwe/AFR-2161-2022
CR [Anonymous], 1999, REFACTORING IMPROVIN
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   de F Carneiro Glauco, 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P128, DOI 10.1109/SBES.2010.21
   Dipongkor AK, 2018, 2018 JOINT 7TH INTERNATIONAL CONFERENCE ON INFORMATICS, ELECTRONICS & VISION (ICIEV) AND 2018 2ND INTERNATIONAL CONFERENCE ON IMAGING, VISION & PATTERN RECOGNITION (ICIVPR), P76, DOI 10.1109/ICIEV.2018.8641069
   El Malki A, 2019, LECT NOTES COMPUT SC, V11681, P3, DOI 10.1007/978-3-030-29983-5_1
   Evans E., 2003, Domain-Driven Design
   Fard AM, 2013, IEEE INT WORK C SO, P116, DOI 10.1109/SCAM.2013.6648192
   Fokaefs Marios, 2007, 2007 IEEE International Conference on Software Maintenance, P519, DOI 10.1109/ICSM.2007.4362679
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P803, DOI 10.1109/ICSE.2015.256
   Fontana FA, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE ARCHITECTURE AND METRICS (SAM), P1, DOI 10.1109/SAM.2015.8
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garcia J, 2009, EUR CON SFTWR MTNCE, P255, DOI 10.1109/CSMR.2009.59
   Garousi V., 2019, BENEFITTING GREY LIT
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Hagstrom C., 2015, Abstracts of the 23rd Cochrane Colloquium. Cochrane database systematic reviews supplements, P1
   Johnson R. B., 2019, ED RES QUANTITATIVE
   Kenny M, 2015, QUAL REP, V20, P1270
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Liu H, 2018, IEEE INT CONF AUTOM, P385, DOI 10.1145/3238147.3238166
   Mäntylä M, 2003, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSM.2003.1235447
   Mäntylä MV, 2006, EMPIR SOFTW ENG, V11, P395, DOI 10.1007/s10664-006-9002-8
   Mäntylä MV, 2004, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSM.2004.1357825
   Marinescu C, 2006, INT C PROGRAM COMPRE, P169, DOI 10.1109/ICPC.2006.27
   Martinez-Guerra R., 2006, Proceedings of the 45th IEEE Conference on Decision and Control (IEEE Cat. No. 06CH37770)
   Ntentos E, 2019, LECT NOTES COMPUT SC, V11681, P20, DOI 10.1007/978-3-030-29983-5_2
   Palomba F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P482, DOI 10.1109/MSR.2015.69
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Piasecki J, 2018, SCI ENG ETHICS, V24, P809, DOI 10.1007/s11948-017-0010-4
   Rahmani-Andebili M, 2019, IEEE T SYST MAN CY-S, V49, P697, DOI 10.1109/TSMC.2017.2690622
   Rainer A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2197
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Sabir F, 2019, SOFTWARE PRACT EXPER, V49, P3, DOI 10.1002/spe.2639
   Sales V, 2013, WORK CONF REVERSE EN, P232, DOI 10.1109/WCRE.2013.6671298
   Singjai A., 2021, **DATA OBJECT**, DOI [10.5281/zenodo.4476077, DOI 10.5281/ZENODO.4476077]
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Taibi D, 2018, IEEE SOFTWARE, V35, P56, DOI 10.1109/MS.2018.2141031
   Terra R, 2018, J SYST SOFTWARE, V138, P19, DOI 10.1016/j.jss.2017.11.073
   Tsantalis N, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P4, DOI 10.1109/SANER.2018.8330192
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Vidal S, 2016, P BRAZ SYMP SOFTW, P41, DOI 10.1109/SBCARS.2016.11
   Yamashita A, 2013, INFORM SOFTWARE TECH, V55, P2223, DOI 10.1016/j.infsof.2013.08.002
   Yuepu Guo, 2010, 2010 32nd International Conference on Software Engineering (ICSE), P167, DOI 10.1145/1810295.1810321
   Zdun U., LNCS, P73, DOI [10.1007/978-3-030-03596-9_5, DOI 10.1007/978-3-030-03596-9_5]
   Zdun U, 2019, P IEEE I C SERV COMP, P141, DOI 10.1109/SCC.2019.00033
   Zieris Franz, 2014, Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, DOI [10.1145/2652524.2652529, DOI 10.1145/2652524.2652529]
NR 50
TC 8
Z9 8
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2021
VL 134
AR 106539
DI 10.1016/j.infsof.2021.106539
EA FEB 2021
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RD3ON
UT WOS:000633391900002
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Tahir, A
   Dietrich, J
   Counsell, S
   Licorish, S
   Yamashita, A
AF Tahir, Amjed
   Dietrich, Jens
   Counsell, Steve
   Licorish, Sherlock
   Yamashita, Aiko
TI A large scale study on how developers discuss code smells and
   anti-pattern in Stack Exchange sites
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code smells; Anti-patterns; Mining software repositories; Stack exchange
ID SOFTWARE; IMPACT; BAD
AB Context: In this paper, we investigate how developers discuss code smells and anti-patterns across three technical Stack Exchange sites. Understanding developers perceptions of these issues is important to inform and align future research efforts and direct tools vendors to design tailored tools that best suit developers.
   Method: we mined three Stack Exchange sites and used quantitative and qualitative methods to analyse more than 4000 posts that discuss code smells and anti-patterns.
   Results: results showed that developers often asked their peers to smell their code, thus utilising those sites as an informal, crowd-based code smell/anti-pattern detector. The majority of questions (556) asked were focused on smells like Duplicated Code, Spaghetti Code, God and Data Classes. In terms of languages, most of discussions centred around popular languages such as C# (772 posts), JavaScript (720) and Java (699), however greater support is available for Java compared to other languages (especially modern languages such as Swift and Kotlin). We also found that developers often discuss the downsides of implementing specific design patterns and 'flag' them as potential anti-patterns to be avoided. Some well-defined smells and anti-patterns are discussed as potentially being acceptable practice in certain scenarios. In general, developers actively seek to consider trade-offs to decide whether to use a design pattern, an anti-pattern or not.
   Conclusion: our results suggest that there is a need for: 1) more context and domain sensitive evaluations of code smells and anti-patterns, 2) better guidelines for making trade-offs when applying design patterns or eliminating smells/anti-patterns in industry, and 3) a unified, constantly updated, catalog of smells and anti-patterns. We conjecture that the crowd-based detection approach considers contextual factors and thus tend to be more trusted by developers than automated detection tools.
C1 [Tahir, Amjed] Massey Univ, Sch Fundamental Sci, Palmerston North, New Zealand.
   [Dietrich, Jens] Victoria Univ Wellington, Sch Engn & Comp Sci, Wellington, New Zealand.
   [Counsell, Steve] Brunel Univ, Dept Comp Sci, Uxbridge, Middx, England.
   [Licorish, Sherlock] Univ Otago, Dept Informat Sci, Dunedin, New Zealand.
   [Yamashita, Aiko] Oslo Metropolitan Univ, Dept Comp Sci, Oslo, Norway.
C3 Massey University; Victoria University Wellington; Brunel University;
   University of Otago; Oslo Metropolitan University (OsloMet)
RP Tahir, A (corresponding author), Massey Univ, Sch Fundamental Sci, Palmerston North, New Zealand.
EM a.tahir@massey.ac.nz
OI Tahir, Amjed/0000-0001-9454-1366; Licorish,
   Sherlock/0000-0001-7318-2421; Dietrich, Jens/0000-0001-9019-6550
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   Alkharabsheh K, 2019, SOFTWARE QUAL J, V27, P1069, DOI 10.1007/s11219-018-9424-8
   Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   BAJAJ K, 2014, 11 WORK C MIN SOFTW
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   BAVOTA G, 2014, ARE TEST SMELLS REAL, V20
   Braun V, 2021, QUAL RES PSYCHOL, V18, P328, DOI 10.1080/14780887.2020.1769238
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   CHOI E, 2015, 2015 IEEE 9 INT WORK
   DIETRICH J, 2012, P 35 AUSTR COMP SCI, V122
   DIETRICH J, 2019, P 16 INT C MIN SOFTW
   Distefano D, 2019, COMMUN ACM, V62, P62, DOI 10.1145/3338112
   Dou WS, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P848, DOI 10.1145/2568225.2568316
   Fontana FA, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P609, DOI 10.1109/SANER.2016.84
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Fukushima M, 2013, I S BIOMED IMAGING, P1002
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   GARCIA J, 2009, 13 EUR C SOFTW MAINT
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Hermans F, 2015, EMPIR SOFTW ENG, V20, P549, DOI 10.1007/s10664-013-9296-2
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Linares-Vasquez M., 2014, 22 INT C PROGR COMPR
   LIU H, 2018, P 25 AS PAC SOFTW EN
   Mäntylä MV, 2006, EMPIR SOFTW ENG, V11, P395, DOI 10.1007/s10664-006-9002-8
   Martin R.C., 2006, Agile Principles, Patterns, and Practices in C#
   Martini A, 2018, LECT NOTES COMPUT SC, V11048, P320, DOI 10.1007/978-3-030-00761-4_21
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Nadi S, 2016, PROC INT CONF SOFTW, P935, DOI 10.1145/2884781.2884790
   Norvig Peter, 2009, Beautiful data, P219
   Novielli N, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P33, DOI 10.1145/2804381.2804387
   PAL A, 2012, P 6 INT AAAI C WEBL, P274, DOI DOI 10.1609/ICWSM.V6I1.14262
   Palomba F, 2018, IEEE T SOFTWARE ENG
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   PETRILLO F, 2016, SERVICE ORIENTED COM
   Pinto G., 2014, P 11 WORK C MIN SOFT, P22
   PINTO G, 2014, P 11 WORK C MIN SOFT
   Rasool G, 2015, J SOFTW-EVOL PROC, V27, P867, DOI 10.1002/smr.1737
   REBOUCAS M, 2016, 23 INT C SOFTW AN EV
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   SALASZARATE GMD, 2015, SCI COMPUT PROGRAM, V102
   Sinha VS, 2013, IEEE WORK CONF MIN S, P77, DOI 10.1109/MSR.2013.6624010
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   SOH Z, 2016, 23 INT C SOFTW AN EV
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   TAHIR A, 2016, 23 AS PAC SOFTW ENG
   Tahir A, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239243
   TAIBI D, 2017, INF SOFTW TECHNOL, V92
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   TUFANO M, 2015, 37 INT C SOFTW ENG
   TUSHAR S, 2018, J SYST SOFTWARE, V138, P158
   Wang SJ, 2013, PROCEEDINGS OF THE 2013 INTERNATIONAL CONFERENCE ON MATERIAL SCIENCE AND ENVIRONMENTAL ENGINEERING (MSEE 2013), P28
   Yamashita A., 2013, J SYSTEMS SOFTWARE
   YAMASHITA A, 2016, 1 INT WORKSH TECHN D
   Yamashita A, 2014, EMPIR SOFTW ENG, V19, P1111, DOI 10.1007/s10664-013-9250-3
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
NR 61
TC 23
Z9 23
U1 1
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2020
VL 125
AR 106333
DI 10.1016/j.infsof.2020.106333
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LT0FE
UT WOS:000536752100006
DA 2024-07-18
ER

PT J
AU Kaur, A
   Kaur, K
AF Kaur, Anureet
   Kaur, Kulwant
TI Investigation on test effort estimation of mobile applications:
   Systematic literature review and survey
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Mobile applications; Test effort estimation; Software engineering;
   Systematic literature review (SLR); Survey
ID SOFTWARE; DECISION
AB Context: In the last few years, the exigency of mobile devices has proliferated to prodigious heights. The process of developing the mobile software/application proceeds amidst testing phase to verify the correctness of the mobile app. The estimation of testing plays a vital role in the effective completion of testing.
   Objective: To identify how estimation of test effort for mobile applications is distinct from other software via published literature and from mobile software organizations. Second is to recognize different issues in adapting traditional test estimation methods to the mobile domain and if suggestions from survey results could be helpful in providing an improved test estimation model for mobile applications.
   Method: A systematic literature review is conducted followed by a survey through an online questionnaire filled from experienced mobile application developers and testers.
   Results: The results from SLR cover identification of mobile app specific characteristics and reports test effort estimation techniques in the mobile domain. Findings from survey corroborate that a) Function Point/Test Point Analysis is highly adapted traditional test estimation technique to mobile domain; b) Challenges like uncertain requirements, no tool support for test estimation, complexity in testing, client miscommunication etc. are reported; c)Suggestions to improve test estimation process include proper test planning, adoption of agile methodology, healthier communication among client, developer, and tester etc.; d) On the basis of responses, Analytical Hierarchical Process (AHP) identifies "Diverse Devices and OS" along with "Type of App" as highly influential mobile app characteristic on the test estimation process.
   Conclusion: Results conclude that the importance of identified mobile app characteristics from SLR cannot be ignored in the estimation process of mobile software testing. There might be a possibility to improve existing test estimation techniques for mobile apps by giving weight to mobile app specific characteristics and by considering suggestions from experienced developers and testers.
C1 [Kaur, Anureet] IK Gujral Punjab Tech Univ, Kapurthala, India.
   [Kaur, Kulwant] Apeejay Inst Management Tech Campus, Sch IT, Jalandhar, Punjab, India.
C3 I. K. Gujral Punjab Technical University
RP Kaur, A (corresponding author), 60,Kabir Pk,Opp Guru Nanak Dev Univ, Amritsar, Punjab, India.
EM anumahal@gmail.com; kulwantkaur@apjimtc.org
RI Kaur, Anureet/GXF-6472-2022
OI Kaur, Anureet/0000-0002-8698-1633
CR Abhishek Chintala, 2010, Journal of Software Engineering and Applications, V3, P331, DOI 10.4236/jsea.2010.34038
   Ahmad N, 2018, INFORM SOFTWARE TECH, V94, P130, DOI 10.1016/j.infsof.2017.10.005
   Akanmu S., 2012, P 1 INT C BEH SOC SC, P1
   Amalfitano D., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P252, DOI 10.1109/ICSTW.2011.77
   [Anonymous], MOBILE TESTING SOFTW
   [Anonymous], 2015, COMPUTER SCI INFORM, DOI DOI 10.5121/CSIT.2015.50403
   [Anonymous], 2006, Central European Journal of Operations Research, DOI [10.1007/s10100-006-0012-9, DOI 10.1007/S10100-006-0012-9]
   Aranha E., 2009, International Journal of Computers & Applications, V31, P167, DOI 10.2316/Journal.202.2009.3.202-2964
   Aranha Eduardo, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P107
   Arumugam Chamundeswari, 2015, Journal of Software, V10, P713, DOI 10.17706/jsw.10.6.713-729
   Arzensek B., 2014, CEUR WORKSH P, P1
   Bhattacharyya A., 2016, P 7 INT WORK AUT TES, P16
   Blagojevic B, 2016, FUND INFORM, V144, P383, DOI 10.3233/FI-2016-1342
   Boja C, 2009, REC ADV COMPUT ENG, P88
   Cao G., 2012, SOFTWARE TESTING STR, DOI [10.5772/38105, DOI 10.5772/38105]
   Charland A, 2011, COMMUN ACM, V54, P49, DOI 10.1145/1941487.1941504
   Chen G., 2000, SU VEY CONTEXT AWARE
   Chia-Chi Teng, 2010, Proceedings of the Seventh International Conference on Information Technology: New Generations (ITNG 2010), P471, DOI 10.1109/ITNG.2010.249
   Ciman M, 2017, PERVASIVE MOB COMPUT, V39, P214, DOI 10.1016/j.pmcj.2016.10.004
   Corral L, 2015, COMPUTING, V97, P1001, DOI 10.1007/s00607-014-0395-8
   Costa P, 2014, 2014 9TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P66, DOI 10.1109/QUATIC.2014.16
   Dalmasso I, 2013, INT WIREL COMMUN, P323, DOI 10.1109/IWCMC.2013.6583580
   de Souza L.S., 2014, INT J STW ENG APPL, V5, P63, DOI DOI 10.5121/IJSEA.2014.5405
   de Souza LS, 2014, LECT NOTES COMPUT SC, V8583, P63, DOI 10.1007/978-3-319-09156-3_5
   Di Nucci D, 2017, PROC IEEE ACM INT C, P3, DOI 10.1109/ICSE-C.2017.18
   Farto GD, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P184, DOI 10.1145/3131151.3131160
   Flora Harleen K., 2014, International Journal of Information Technology and Computer Science, V6, P21, DOI 10.5815/ijitcs.2014.11.03
   Franke D., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P241, DOI 10.1109/ICST.2012.104
   Garousi V, 2018, INFORM SOFTWARE TECH, V104, P14, DOI 10.1016/j.infsof.2018.06.016
   Giessmann A., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P1363, DOI 10.1109/HICSS.2012.435
   Goth B.R., 2015, TESTING TECHNIQUES M
   Holl K, 2016, 15TH INTERNATIONAL CONFERENCE ON MOBILE AND UBIQUITOUS MULTIMEDIA (MUM 2016), P101, DOI 10.1145/3012709.3012718
   Holl K, 2016, PROCEDIA COMPUT SCI, V94, P33, DOI 10.1016/j.procs.2016.08.009
   Ickin S, 2012, IEEE COMMUN MAG, V50, P48, DOI 10.1109/MCOM.2012.6178833
   Islam S, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON INDUSTRIAL ENGINEERING AND ENGINEERING MANAGEMENT (IEEM), P204, DOI 10.1109/IEEM.2016.7797865
   Jayakumar K. R., 2013, J. Softw. Eng. Appl., V6, P47
   Karanik M, 2016, APPL MATH COMPUT, V279, P103, DOI 10.1016/j.amc.2016.01.008
   Kim H. K., 2012, MOBILE APPL SOFTWARE, DOI [10.1007/978-3-642-35270-6_22, DOI 10.1007/978-3-642-35270-6_22]
   Kim H, 2009, 2009 THIRD IEEE INTERNATIONAL CONFERENCE ON SECURE SOFTWARE INTEGRATION AND RELIABILITY IMPROVEMENT, PROCEEDINGS, P171, DOI 10.1109/SSIRI.2009.28
   Kirubakaran B, 2013, 2013 INTERNATIONAL CONFERENCE ON PATTERN RECOGNITION, INFORMATICS AND MEDICAL ENGINEERING (PRIME)
   Kitchenham B., 2007, 2007001 EBSE
   Dantas VLL, 2009, 2009 24TH INTERNATIONAL SYMPOSIUM ON COMPUTER AND INFORMATION SCIENCES, P553
   Liu Z., 2014, MOBIWIS 2014 MOB WEB, DOI [10.1007/978-3-319-10359-4, DOI 10.1007/978-3-319-10359-4]
   Lu L, 2012, WOR CONG SOFTW ENG, P37, DOI 10.1109/WCSE.2012.15
   Mahmud DM, 2015, 2015 9TH MALAYSIAN SOFTWARE ENGINEERING CONFERENCE (MYSEC2015), P161, DOI 10.1109/MySEC.2015.7475214
   Muccini H., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P29, DOI 10.1109/IWAST.2012.6228987
   Nageswaran S., 2001, P 14 INT INT SOFTW Q
   Nidagundi P, 2017, PROCEEDINGS OF THE 2017 12TH INTERNATIONAL SCIENTIFIC AND TECHNICAL CONFERENCE ON COMPUTER SCIENCES AND INFORMATION TECHNOLOGIES (CSIT 2017), VOL. 1, P171, DOI 10.1109/STC-CSIT.2017.8098761
   Nitze A, 2015, IEEE ICST WORKSHOP
   Parvez Abu Wahid Md Masud, 2013, 2013 International Conference on Information Technology and Electrical Engineering (ICITEE), P113, DOI 10.1109/ICITEED.2013.6676222
   Ramanathan R, 2006, COMPUT OPER RES, V33, P1289, DOI 10.1016/j.cor.2004.09.020
   Saaty T.L., 1980, Agricultural Economics Review
   Saaty ThomasL., 2012, Models, Methods, V175, DOI [DOI 10.1007/978-1-4614-3597-6, 10.1007/978-1-4614-3597-6_2]
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   Salmre Ivo., 2005, Writing mobile code: Essential software engineering for building mobile applications
   Sehra SK, 2017, INFORM SOFTWARE TECH, V91, P1, DOI 10.1016/j.infsof.2017.06.002
   Shaout Adnan, 2014, International Journal of Computer and Information Technology, V3, P966
   Sharma A., 2013, CSI Trans. ICT, V1, P51
   Silva DB, 2018, INFORM SOFTWARE TECH, V101, P32, DOI 10.1016/j.infsof.2018.05.006
   Souza P. P., 2010, TAILORING TEST POINT
   Srivastava P.R., 2015, INT J SOFTW ENG TECH, V1, P145
   Srivastava PR, 2014, INT J BIO-INSPIR COM, V6, P57, DOI 10.1504/IJBIC.2014.059966
   Srivastava PR, 2012, INT J BIO-INSPIR COM, V4, P278, DOI 10.1504/IJBIC.2012.049888
   Umuhoza E, 2016, LECT NOTES COMPUT SC, V9847, P93, DOI 10.1007/978-3-319-44215-0_8
   Vaupel S, 2018, SOFTW SYST MODEL, V17, P35, DOI 10.1007/s10270-016-0559-4
   Velasquez M., 2013, INT J OPERATIONS RES, V10, P56
   Vilkomir S, 2014, IEEE ICST WORKSHOP, P78, DOI 10.1109/ICSTW.2014.9
   Vithani T., 2014, P INT MULTICONFERENC, P596
   Wadhwani V, 2008, COMM COM INF SC, V20, P64
   Wasserman A.I., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research, P397, DOI [DOI 10.1145/1882362.1882443, 10.1145/1882362.1882443]
   Zapata-Jaramillo Carlos Mario, 2014, Dyna rev.fac.nac.minas, V81, P132, DOI 10.15446/dyna.v81n186.39753
   Zein S., 2015, INTELL SOFTW METHODO, DOI [10.1007/978-3-319-22689-7_3, DOI 10.1007/978-3-319-22689-7_3]
   Zein S, 2016, J SYST SOFTWARE, V117, P334, DOI 10.1016/j.jss.2016.03.065
   Zhang DS, 2005, INT J HUM-COMPUT INT, V18, P293, DOI 10.1207/s15327590ijhc1803_3
   Zhang T, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P179, DOI 10.1109/SOSE.2015.35
NR 75
TC 12
Z9 13
U1 1
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2019
VL 110
BP 56
EP 77
DI 10.1016/j.infsof.2019.02.003
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HU1RI
UT WOS:000465049100005
DA 2024-07-18
ER

PT J
AU Rahman, A
   Mandavi-Hezaveh, R
   Williams, L
AF Rahman, Akond
   Mandavi-Hezaveh, Rezvan
   Williams, Laurie
TI A systematic mapping study of infrastructure as code research
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Devops; Configuration as code; Configuration script; Continuous
   deployment; Infrastructure as code; Software engineering; Systematic
   mapping study
ID SOFTWARE; DEPLOYMENT; AGREEMENT; DESIGN
AB Context: Infrastructure as code (IaC) is the practice to automatically configure system dependencies and to provision local and remote instances. Practitioners consider IaC as a fundamental pillar to implement DevOps practices, which helps them to rapidly deliver software and services to end-users. Information technology (IT) organizations, such as GitHub, Mozilla, Facebook, Google and Netflix have adopted IaC. A systematic mapping study on existing IaC research can help researchers to identify potential research areas related to IaC, for example defects and security flaws that may occur in IaC scripts.
   Objective: The objective of this paper is to help researchers identify research areas related to infrastructure as code (IaC) by conducting a systematic mapping study of IaC-related research.
   Method We conduct our research study by searching five scholar databases. We collect a set of 31,498 publications by using seven search strings. By systematically applying inclusion and exclusion criteria, which includes removing duplicates and removing non-English and non peer-reviewed publications, we identify 32 publications related to IaC. We identify topics addressed in these publications by applying qualitative analysis.
   Results: We identify four topics studied in IaC-related publications: (i) framework/tool for infrastructure as code; (ii) adoption of infrastructure as code; (iii) empirical study related to infrastructure as code; and (iv) testing in infrastructure as code. According to our analysis, 50.0% of the studied 32 publications propose a framework or tool to implement the practice of IaC or extend the functionality of an existing IaC tool.
   Conclusion: Our findings suggest that framework or tools is a well-studied topic in IaC research. As defects and security flaws can have serious consequences for the deployment and development environments in DevOps, we observe the need for research studies that will study defects and security flaws for IaC.
C1 [Rahman, Akond; Mandavi-Hezaveh, Rezvan; Williams, Laurie] North Carolina State Univ, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Rahman, A (corresponding author), North Carolina State Univ, Raleigh, NC 27695 USA.
EM aarahman@ncsu.edu
RI Rahman, Akond/ACX-4478-2022
OI Rahman, Akond/0000-0002-5056-757X
FU Science of Security Lablet at the North Carolina State University
FX Our project is partially funded by the Science of Security Lablet at the
   North Carolina State University. We thank all the reviewers for their
   valuable feedback. We also thank the members of the RealSearch group.
CR Alshuqayran N, 2016, IEEE INT CONF SERV, P44, DOI 10.1109/SOCA.2016.15
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], 2015, CODING MANUAL QUALIT
   [Anonymous], 2015, DESALIN WATER TREAT
   B da Silva F.Q., 2010, Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, p33:1, DOI DOI 10.1145/1852786.1852830
   Baset S, 2017, MIDDLEWARE'17: PROCEEDINGS OF THE 2017 INTERNATIONAL MIDDLEWARE CONFERENCE (INDUSTRIAL TRACK), P29, DOI 10.1145/3154448.3154453
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Burcham Morgan, 2017, P HOT TOP SCI SEC S, P13, DOI [10.1145/3055305.3055307, DOI 10.1145/3055305.3055307]
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Condori-Fernandez Nelly, 2009, 2009 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM), P502, DOI 10.1109/ESEM.2009.5314232
   de Gouw S, 2015, LECT NOTES COMPUT SC, V9306, P49, DOI 10.1007/978-3-319-24072-5_4
   Dolstra E, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON RELEASE ENGINEERING (RELENG), P17, DOI 10.1109/RELENG.2013.6607691
   Elberzhager F, 2012, INFORM SOFTWARE TECH, V54, P1092, DOI 10.1016/j.infsof.2012.04.007
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Hanappi O, 2016, ACM SIGPLAN NOTICES, V51, P328, DOI 10.1145/3022671.2984000
   Httermann Michael, 2012, DevOps for developers, V1
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Hummer W.etal., 2013, ProceedingsDemo:38; PosterTrackofACM/IFIP/USENIXInternationalMiddlewareConference.MiddlewareDPT '13, p4:1, DOI DOI 10.1145/2541614.2541632
   Ikeshita Katsuhiko, 2017, Tests and Proofs. 11th International Conference, TAP 2017, held as part of STAF 2017. Proceedings: LNCS 10375, P98, DOI 10.1007/978-3-319-61467-0_6
   Jabbari R, 2016, PROCEEDINGS OF THE XP2016 SCIENTIFIC WORKSHOPS, DOI 10.1145/2962695.2962707
   Jalali S., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P45, DOI 10.1109/ICGSE.2010.14
   Jiang YJ, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P45, DOI 10.1109/MSR.2015.12
   Kissel R., 2011, GLOSSARY KEY INFORM
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham B, 2013, IEEE T SOFTWARE ENG, V39, P1002, DOI 10.1109/TSE.2012.76
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kosar T, 2016, INFORM SOFTWARE TECH, V71, P77, DOI 10.1016/j.infsof.2015.11.001
   Krum Spencer, 2013, PROPUPPET, Vsecond
   Kuhrmann M, 2017, EMPIR SOFTW ENG, V22, P2852, DOI 10.1007/s10664-016-9492-y
   Labs  P., 2017, PUPP DOC
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   McGraw  G., 2018, BUILDING SECURITY IN
   Miglierina M, 2017, ICPE'17: COMPANION OF THE 2017 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, P145, DOI 10.1145/3053600.3053629
   Morris K., 2016, INFRASTRUCTURE AS CO
   Novais RL, 2013, INFORM SOFTWARE TECH, V55, P1860, DOI 10.1016/j.infsof.2013.05.008
   Pahl C, 2016, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, VOL 1 (CLOSER), P137, DOI 10.5220/0005785501370146
   Parnin C, 2017, IEEE SOFTWARE, V34, P86, DOI 10.1109/MS.2017.86
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Portillo-Rodríguez J, 2012, INFORM SOFTWARE TECH, V54, P663, DOI 10.1016/j.infsof.2012.02.006
   Rahman AAU, 2016, INTERNATIONAL WORKSHOP ON CONTINUOUS SOFTWARE EVOLUTION AND DELIVERY, CSED 2016, P70, DOI [10.1109/CSED.2016.021, 10.1145/2896941.2896946]
   Riaz M, 2015, INFORM SOFTWARE TECH, V65, P14, DOI 10.1016/j.infsof.2015.04.002
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   Sandobalin  J., 2017, ADV METHODS TOOLS MA
   Seriai A, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P60, DOI 10.1109/VISSOFT.2014.19
   Shambaugh R, 2016, ACM SIGPLAN NOTICES, V51, P416, DOI [10.1145/2908080.2908083, 10.1145/2980983.2908083]
   Sharma T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P189, DOI [10.1109/MSR.2016.028, 10.1145/2901739.2901761]
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Weiss A, 2017, IEEE INT CONF AUTOM, P625, DOI 10.1109/ASE.2017.8115673
   Wettinger J, 2014, LECT NOTES COMPUT SC, V8745, P108, DOI 10.1007/978-3-662-44879-3_8
   Wohlin C., 2012, Experimentation in Software Engineering
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Yang Q, 2009, COMPUT J, V52, P589, DOI 10.1093/comjnl/bxm021
   Yusifoglu VG, 2015, INFORM SOFTWARE TECH, V58, P123, DOI 10.1016/j.infsof.2014.06.009
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 58
TC 56
Z9 65
U1 7
U2 39
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2019
VL 108
BP 65
EP 77
DI 10.1016/j.infsof.2018.12.004
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HM3IE
UT WOS:000459366200004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ali, N
   Cai, HP
   Hamou-Lhadj, A
   Hassine, J
AF Ali, Nasir
   Cai, Haipeng
   Hamou-Lhadj, Abdelwahab
   Hassine, Jameleddine
TI Exploiting Parts-of-Speech for effective automated requirements
   traceability
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements traceability (RT); Parts of Speech (POS); Information
   retrieval (IR); Trace links
ID DESIGN-CODE TRACEABILITY; DOCUMENTATION; LINKS
AB Context: Requirement traceability (RT) is defined as the ability to describe and follow the life of a requirement. RT helps developers ensure that relevant requirements are implemented and that the source code is consistent with its requirement with respect to a set of traceability links called trace links. Previous work leverages Parts Of Speech (POS) tagging of software artifacts to recover trace links among them. These studies work on the premise that discarding one or more POS tags results in an improved accuracy of Information Retrieval (IR) techniques.
   Objective: First, we show empirically that excluding one or more POS tags could negatively impact the accuracy of existing IR-based traceability approaches, namely the Vector Space Model (VSM) and the Jensen Shannon Model (JSM). Second, we propose a method that improves the accuracy of IR-based traceability approaches.
   Method: We developed an approach, called ConPOS, to recover trace links using constraint-based pruning. ConPOS uses major POS categories and applies constraints to the recovered trace links for pruning as a filtering process to significantly improve the effectiveness of IR-based techniques. We conducted an experiment to provide evidence that removing POSs does not improve the accuracy of IR techniques. Furthermore, we conducted two empirical studies to evaluate the effectiveness of ConPOS in recovering trace links compared to existing peer RT approaches.
   Results: The results of the first empirical study show that removing one or more POS negatively impacts the accuracy of VSM and JSM. Furthermore, the results from the other empirical studies show that ConPOS provides 11%-107%, 8%-64%, and 15%-170% higher precision, recall, and mean average precision (MAP) than VSM and JSM.
   Conclusion: We showed that ConPos outperforms existing IR-based RT approaches that discard some POS tags from the input documents.
C1 [Ali, Nasir] Univ Memphis, Dept Comp Sci, Memphis, TN 38152 USA.
   [Cai, Haipeng] Washington State Univ, Sch Elect Engn & Comp Sci, Pullman, WA 99164 USA.
   [Hamou-Lhadj, Abdelwahab] Concordia Univ, Elect & Comp Engn Dept, Montreal, PQ, Canada.
   [Hassine, Jameleddine] King Fand Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran, Saudi Arabia.
C3 University of Memphis; Washington State University; Concordia University
   - Canada; King Fahd University of Petroleum & Minerals
RP Hamou-Lhadj, A (corresponding author), Concordia Univ, Elect & Comp Engn Dept, Montreal, PQ, Canada.
EM cnali@memphis.edu; hcai@eecs.wsu.edu; abdelw@ece.concordia.ca;
   jhassine@kfupm.edu.sa
RI Cai, Haipeng/K-7802-2015; Hassine, Jameleddine/E-5940-2015
OI Cai, Haipeng/0000-0002-5224-9970; Hamou-Lhadj,
   Abdelwahab/0000-0002-3319-5006
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   Abebe Surafel Lemma, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P156, DOI 10.1109/ICPC.2010.29
   Ali N., 2011, 2011 18th Working Conference on Reverse Engineering, P45, DOI 10.1109/WCRE.2011.16
   Ali N., 2011, SOFTWARE SYSTEMS TRA
   Ali N., 2010, TECHNICAL REPORT
   Ali N, 2013, IEEE T SOFTWARE ENG, V39, P725, DOI 10.1109/TSE.2012.71
   Ali N, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P191, DOI 10.1109/ICSM.2012.6405271
   [Anonymous], 2015, REQUIR ENG, DOI [DOI 10.1007/S00766-013-0199-Y, 10.1007/s00766-013-0199-y]
   [Anonymous], 1997, An Algorithm for Suffix Stripping, page
   [Anonymous], P 2003 C N AM CHAPT
   [Anonymous], 2007, P CIKM
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G, 2001, SCI COMPUT PROGRAM, V40, P213, DOI 10.1016/S0167-6423(01)00016-8
   Antoniol G, 2000, ANN SOFTW ENG, V9, P35, DOI 10.1023/A:1018916522804
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Borg Markus, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P243, DOI 10.1109/ESEM.2013.39
   Borg M, 2014, EMPIR SOFTW ENG, V19, P1565, DOI 10.1007/s10664-013-9255-y
   Capobianco G, 2013, J SOFTW-EVOL PROC, V25, P743, DOI 10.1002/smr.1564
   Capobianco G, 2009, WORK CONF REVERSE EN, P195, DOI 10.1109/WCRE.2009.14
   Capobianco G, 2009, INT C PROGRAM COMPRE, P148, DOI 10.1109/ICPC.2009.5090038
   Cha S.-H., 2007, Int. J. Math. Models Methods Appl. Sci., V1, P300
   Chowdhury A, 1998, TECHNICAL REPORT
   Cleland-Huang Jane, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P179, DOI 10.1007/978-3-642-28714-5_16
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   Diaz D, 2013, CONF PROC INT SYMP C, P123, DOI 10.1109/ICPC.2013.6613840
   Dit B, 2011, CONF PROC INT SYMP C, P11, DOI 10.1109/ICPC.2011.47
   EROL B., 2006, Proceedings of the 14th annual ACM international conference on Multimedia, P231
   Etzkorn L. H., 1999, NAT LANG ENG, V5, P219
   Evans D., 1996, Annual Meeting on Association for Computational Linguistics, P17, DOI DOI 10.3115/981863.981866
   Falessi D, 2013, IEEE T SOFTWARE ENG, V39, P18, DOI 10.1109/TSE.2011.122
   Fry ZP, 2008, IET SOFTW, V2, P27, DOI 10.1049/iet-sen:20070112
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Gimenez J., P 4 INT C LANG RES E, P43
   Gorschek T, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P405, DOI 10.1007/3-540-28244-0_18
   Gotel O., 2012, SOFTWARE SYSTEMS TRA, P3, DOI [DOI 10.1007/978-1-4471-2239-5_1, 10.1007/978-1-4471-2239-5_1]
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   GRECHANIK M., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P95
   Gupta S, 2013, CONF PROC INT SYMP C, P3, DOI 10.1109/ICPC.2013.6613828
   Hayes JH, 2008, WORK CONF REVERSE EN, P165, DOI 10.1109/WCRE.2008.36
   Hill E, 2014, EMPIR SOFTW ENG, V19, P1754, DOI 10.1007/s10664-013-9261-0
   Hill J., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P297, DOI 10.1109/RE.2010.42
   Hoff T., 2008, C CODING STANDARD
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Juristo N., 2010, BASICS SOFTWARE ENG
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kowalski G., 2010, INFORM RETRIEVAL ARC
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Lioma C, 2009, LECT NOTES COMPUT SC, V5478, P412, DOI 10.1007/978-3-642-00958-7_37
   Mahmoud Anas, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P246, DOI 10.1109/COMPSAC.2010.29
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   McMillan C, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P41, DOI 10.1109/TEFSE.2009.5069582
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Shokripour R, 2015, J SYST SOFTWARE, V102, P109, DOI 10.1016/j.jss.2014.12.049
   Sun YH, 2004, PROCEEDINGS OF THE 2004 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND CYBERNETICS, VOLS 1-7, P1692
   Voorhees EM, 2000, INFORM PROCESS MANAG, V36, P697, DOI 10.1016/S0306-4573(00)00010-8
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zamani S, 2014, INFORM SOFTWARE TECH, V56, P991, DOI 10.1016/j.infsof.2014.03.007
   Zhao W, 2006, ACM T SOFTW ENG METH, V15, P195, DOI 10.1145/1131421.1131424
   Zou XC, 2006, P INT COMP SOFTW APP, P265
NR 61
TC 17
Z9 22
U1 2
U2 8
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2019
VL 106
BP 126
EP 141
DI 10.1016/j.infsof.2018.09.009
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HF6XJ
UT WOS:000454381300008
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Segura, S
   Troya, J
   Durán, A
   Ruiz-Cortés, A
AF Segura, Sergio
   Troya, Javier
   Duran, Amador
   Ruiz-Cortes, Antonio
TI Performance metamorphic testing: A Proof of concept
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Metamorphic testing; Performance testing; Search-based testing
AB Context: Performance testing is a challenging task mainly due to the lack of test oracles, i.e. mechanisms to decide whether the performance of a program is acceptable or not because of a bug. Metamorphic testing enables the generation of test cases in the absence of an oracle by exploiting the so-called metamorphic relations between the inputs and outputs of multiple executions of the program under test. In the last two decades, metamorphic testing has been successfully used to detect functional faults in different domains. However, its applicability to performance testing remains unexplored.
   Objective: We propose the application of metamorphic testing to reveal performance failures. Method: We define Performance Metamorphic Relations (PMRs) as expected relations between performance measurements of multiple executions of the program under test. These relations can be turned into assertions for the automated detection of performance bugs, removing the need for complex benchmarks and domain experts guidance. As a further benefit, PMRs can be turned into fitness functions to guide search-based techniques on the generation of test data.
   Results: The feasibility of the approach is illustrated through an experimental proof of concept in the context of the automated analysis of feature models.
   Conclusion: The results confirm the potential of metamorphic testing, in combination with search-based techniques, to automate the detection of performance bugs.
C1 [Segura, Sergio; Troya, Javier; Duran, Amador; Ruiz-Cortes, Antonio] Univ Seville, Dept Lenguajes & Sistemas, Informat, Seville, Spain.
C3 University of Sevilla
RP Segura, S (corresponding author), Univ Seville, Dept Lenguajes & Sistemas, Informat, Seville, Spain.
EM sergiosegura@us.es
RI Segura, Sergio/A-9615-2011; Cortés, Antonio Ruiz/B-9056-2008; Troya,
   Javier/B-6951-2017; Durán, Amador/O-4248-2014
OI Segura, Sergio/0000-0001-8816-6213; Cortés, Antonio
   Ruiz/0000-0001-9827-1834; Troya, Javier/0000-0002-1314-9694; Durán,
   Amador/0000-0003-3630-5511
FU Spanish Government under CICYT project BELI [TIN2015-70560-R];
   Excellence Network SEBASENet [TIN2015-71841-REDT]; Andalusian Government
   project COPAS [P12-TIC-1867]
FX This work has been supported by the Spanish Government under CICYT
   project BELI (TIN2015-70560-R), the Excellence Network SEBASENet
   (TIN2015-71841-REDT), and the Andalusian Government project COPAS
   (P12-TIC-1867).
CR Banerjee A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P588, DOI 10.1145/2635868.2635871
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Chen T. Y., 2018, ACM COMPUT SURV, V51, DOI [10.3145/31435614:1-4:27, DOI 10.3145/31435614:1-4:27]
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Nistor A, 2013, IEEE WORK CONF MIN S, P237, DOI 10.1109/MSR.2013.6624035
   Segura S, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P7, DOI 10.1109/ICSE-NIER.2017.16
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Segura S, 2014, EXPERT SYST APPL, V41, P3975, DOI 10.1016/j.eswa.2013.12.028
NR 10
TC 16
Z9 16
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2018
VL 98
BP 1
EP 4
DI 10.1016/j.infsof.2018.01.013
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GD8LP
UT WOS:000430764200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chen, Y
   Peng, L
   Avgeriou, P
AF Chen, Yang
   Peng, Liang
   Avgeriou, Paris
TI Assumptions and their management in software development: A systematic
   mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software development; Assumption; Assumptions management; Systematic
   mapping study
ID TRACEABILITY; VERIFICATION; ARCHITECTURE
AB Context Assumptions are constantly made by stakeholders or generated automatically in software development. However, there is a lack of systematic analysis and comprehensive understanding of the research and practice regarding assumptions and their management.
   Objective: This work aims to explore and analyze the state of the art on assumptions and their management in software development.
   Method: A systematic mapping study that covers the literature from January 2001 to December 2015 on assumptions and their management in software development.
   Results: 134 studies were included: (1) The studies were published in 94 venues, which indicates that assumptions and their management has been a broad topic in software engineering. (2) Only 21 studies defined the assumption concept. (3) Most assumptions are made for or related to the artifacts in requirements engineering and software design, which demonstrates that assumptions should be managed from the early phases of software development. (4) Much effort has been put on Assumptions Making, Description, and Evaluation. Assumptions Maintenance received moderate attention. More than half of the tools identified aim to support assume-guarantee reasoning. For the other tools, most of them can be used to support Assumptions Description. (5) All the identified types of stakeholders are involved in Assumptions Making, followed by Evaluation and Description. Stakeholders involved in requirements engineering, software design, and software construction play a central role in assumptions management. (6) The main challenge is the difficulty of performing assumptions management activities in software development. (7) The identified assumptions management approaches, tools, benefits, and lessons learned are limited to their specific contexts (e.g., context of use). (8) Most of the negative consequences are caused by invalid or implicit assumptions.
   Conclusions: This work provides researchers and practitioners with a reflection of the past fifteen years of research and practice on assumptions and their management in software development.
C1 [Chen, Yang; Peng, Liang] Wuhan Univ, Sch Comp Sci, State Key Lab Software Engn, Wuhan 430072, Hubei, Peoples R China.
   [Chen, Yang; Avgeriou, Paris] Univ Groningen, Dept Math & Comp Sci, Nijerzborgh 9, NL-9747 AG Groningen, Netherlands.
C3 Wuhan University; University of Groningen
RP Peng, L (corresponding author), Wuhan Univ, Sch Comp Sci, State Key Lab Software Engn, Wuhan 430072, Hubei, Peoples R China.
EM liangp@whu.edu.cn
RI peng, liang/HKE-0294-2023
OI Liang, Peng/0000-0002-2056-5346
FU NSFC [61472286]; University of Groningen
FX This work is partially sponsored by the NSFC under Grant No. 61472286
   and the Ubbo Emmius scholarship program by the University of Groningen.
   The authors wish to thank Zhuang Xiong, Tianqing Liu, Julien van der
   Land, and Stephan Boomker for their study search and selection effort in
   this work. We would also like to thank Christian Manteuffel for
   reviewing an earlier version of the paper.
CR ABADI M, 1995, ACM T PROGR LANG SYS, V17, P507, DOI 10.1145/203095.201069
   Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   Ali MS, 2010, INFORM SOFTWARE TECH, V52, P871, DOI 10.1016/j.infsof.2010.05.003
   [Anonymous], 2003, Rational Unified Process Made Easy: A Practitioner's Guide to the RUP
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Bazaz A, 2006, DASC 2006: 2ND IEEE INTERNATIONAL SYMPOSIUM ON DEPENDABLE, AUTONOMIC AND SECURE COMPUTING, PROCEEDINGS, P95
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Chaki S, 2008, FORM METHOD SYST DES, V32, P235, DOI 10.1007/s10703-008-0053-x
   Chen L., 2010, P 14 INT C EV ASS SO, P135
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5795, P468, DOI 10.1007/978-3-642-04425-0_36
   Cobleigh JM, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1348250.1348253
   CORBATO FJ, 1991, COMMUN ACM, V34, P72, DOI 10.1145/114669.114686
   de la Rive C., 2005, J SYST SOFTW, V79, P1324
   Denney E, 2009, IEEE INT CONF AUTOM, P560, DOI 10.1109/ASE.2009.71
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Garlan D, 2009, IEEE SOFTWARE, V26, P66, DOI 10.1109/MS.2009.86
   Giannakopoulou D., 2005, Automated Software Engineering, V12, P297, DOI 10.1007/s10515-005-2641-y
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Haley CB, 2006, REQUIR ENG, V11, P138, DOI 10.1007/s00766-005-0023-4
   Humphrey W.S., 1995, SEI SERIES SOFTWARE
   Kitchenham Barbara, 2007, P 28 INT C SOFTW ENG
   Lago P, 2005, PROC INT CONF SOFTW, P206
   Lago P, 2004, LECT NOTES COMPUT SC, V3154, P214
   Lehman MM, 2001, ANN SOFTW ENG, V11, P15, DOI 10.1023/A:1012535017876
   Lewis G.A., CMUSEI2004TN021
   Liu JYC, 2011, INT J PROJ MANAG, V29, P547, DOI 10.1016/j.ijproman.2010.04.007
   Mamun M.A.A., 2011, P 2 AN VIRT INT CYB, P7
   MISRA J, 1981, IEEE T SOFTWARE ENG, V7, P417, DOI 10.1109/TSE.1981.230844
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Roeller R, 2006, J SYST SOFTWARE, V79, P552, DOI 10.1016/j.jss.2005.10.017
   Seater R, 2007, REQUIR ENG, V12, P77, DOI 10.1007/s00766-007-0048-y
   Steingruebl A, 2009, IEEE SECUR PRIV, V7, P84, DOI 10.1109/MSP.2009.107
   Tang A, 2007, J SYST SOFTWARE, V80, P918, DOI 10.1016/j.jss.2006.08.040
   Van Landuyt D., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P329, DOI 10.1109/WICSA-ECSA.212.55
   Van Landuyt D, 2014, LECT NOTES COMPUT SC, V8411, P170
   Whittle J, 2010, REQUIR ENG, V15, P177, DOI 10.1007/s00766-010-0101-0
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Yang C., 2014, P 26 INT C SOFTW ENG, P308
   Yang C., ASSUMPTIONS THEIR MA
   Yang C, 2017, LECT NOTES COMPUT SC, V10475, P191, DOI 10.1007/978-3-319-65831-5_14
   Yang C, 2017, J SYST SOFTWARE, V134, P190, DOI 10.1016/j.jss.2017.09.007
   Yang C, 2016, J SYST SOFTWARE, V111, P157, DOI 10.1016/j.jss.2015.09.028
   Yang C, 2016, J SYST SOFTWARE, V113, P362, DOI 10.1016/j.jss.2015.12.016
   Ziv H., 1997, TECHNICAL REPORT
NR 44
TC 9
Z9 38
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2018
VL 94
BP 82
EP 110
DI 10.1016/j.infsof.2017.10.003
PG 29
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FO6WE
UT WOS:000417009000006
OA Green Published
DA 2024-07-18
ER

PT J
AU Phillips, DM
   Mazzuchi, TA
   Sarkani, S
AF Phillips, Dewanne M.
   Mazzuchi, Thomas A.
   Sarkani, Shahram
TI An architecture, system engineering, and acquisition approach for space
   system software resiliency
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software; Architecture; Resiliency; Systems engineering; Life cycle;
   Vulnerabilities; Threats; Cybersecurity
AB Context Software-intensive space systems can harbor defects and vulnerabilities that may enable external adversaries or malicious insiders to disrupt or disable system functions, risking mission compromise or loss. Mitigating this risk demands a sustained focus on the security and resiliency of the system architecture including software, hardware, and other components.
   Objective: In this paper we offer methodical approaches for improving space system resiliency through software architecture design, system engineering, and increased software security, thereby reducing the risk of latent software defects and vulnerabilities.
   Method: We conducted a systematic review of existing architectural practices, standards, security and coding practices, various threats, defects, and vulnerabilities that impact space systems from hundreds of relevant publications and interviews of subject matter experts. We expanded on the system-level body of knowledge for resiliency and identified a new software architecture framework and acquisition methodology to improve the resiliency of space systems from a software perspective with an emphasis on the early phases of the systems engineering life cycle. This methodology involves seven steps: 1) Define technical resiliency requirements, la) Identify standards/policy for software resiliency, 2) Develop a request for proposal (RFP)/statement of work (SOW) for resilient space systems software, 3) Define software resiliency goals for space systems, 4) Establish software resiliency quality attributes, 5) Perform architectural tradeoffs and identify risks, 6) Conduct architecture assessments as part of the procurement process, and 7) Ascertain space system software architecture resiliency metrics.
   Results: Data illustrates that software vulnerabilities can lead to opportunities for malicious cyber activities, which could degrade the space mission capability for its user community. Reducing the number of vulnerabilities by improving architecture and software system engineering practices can contribute to making space systems more resilient.
   Conclusion: Since cyber-attacks [1] are enabled by shortfalls in software, robust software engineering practices and an architectural design are foundational to resiliency, which is a quality that allows the system to take a hit to a critical component and recover in a known, bounded, and generally acceptable period of time. To achieve software resiliency for space systems, acquirers and suppliers must identify relevant factors and systems engineering practices to apply across the life cycle, in software requirements analysis, architecture development, design, implementation, verification and validation, and maintenance phases.
C1 [Phillips, Dewanne M.; Mazzuchi, Thomas A.; Sarkani, Shahram] George Washington Univ, Sch Engn & Appl Sci Engn Management & Syst Engn, Washington, DC 20052 USA.
C3 George Washington University
RP Phillips, DM (corresponding author), George Washington Univ, Sch Engn & Appl Sci Engn Management & Syst Engn, Washington, DC 20052 USA.
EM dewanne@gwu.edu
CR Alexander J., 2013, Cyber Resilience Assessment Framework
   [Anonymous], 1999, The Guardian
   [Anonymous], 2011, Special Publication 800-39, Managing Information Security Risk Organization, Mission, and Information System View
   [Anonymous], 2000, ATAM: Method for Architecture Evaluation
   [Anonymous], 2013, EGYPT JAMMING JAZEER
   [Anonymous], 2013, 270022013 ISOIEC
   [Anonymous], 2000, IEEE STD, V1471-2000, P1
   [Anonymous], 420102011 ISO IEC IE
   [Anonymous], 2010, Cert Resilience Management Model
   [Anonymous], 2010, Quadrennial Defense Review Report
   [Anonymous], 2010, Special Publication 800-37, Guide for Applying the Risk Management Framework to Federal Information Systems A Security Life Cycle Approach
   Barbacci M., 2003, QUALITY ATTRIBUTE WO, VThird
   BKCASE, 2017, SYST ENG BOD KNOWL S
   Black P., 2011, Special Publication 500-268 v1.1: Source Code Security Analysis Tool Functional Specification Version 1.1
   Bodeau D., 2011, CYBER RESILIENCY ENG
   Brown M., 2011, 2011 CWE SANS TOP 25
   Carter A., 2012, DoD Operations Security (OPSEC) Program
   Carter A., 2015, DEP DEFENSE CYBER ST
   CNSS, 2012, 1253 CNSSI
   CNSS, 2014, 1200 CNSSI
   CNSS, 2012, 12 CNSSP
   Coley S., 2014, Common Weakness Enumeration
   Committee on National Security Systems, 2010, 4009 CNSS
   DAU, 2013, DEF ACQ GUID PROGR P
   DoD, 2015, 500002 DEP DEF INSTR
   DoD, 2015, FACT SHEET RES SPAC
   DoD, 2015, CYBERSECURITY
   DoD, 2015, RISK MAN FRAM RMF DO
   DoD, 2016, 853001 DODI
   DoD, 2012, 520044 DODI
   DoD, 2015, DOD PROGR MAN GUID I
   DoD,, 2003, 85002 DEP DEF INSTR
   DoD, 2011, MEM DOD EX AG SPAC S
   DSB, 2012, FIN REP DEF SCI BOAR
   Dukes C., 2015, 4009 CNSSI
   Ellison RobertJ., 2010, Survivability Analysis Framework
   Epstein K., 2008, NETWORK SECURITY BRE
   Feiler PeterH., 2012, RELIABILITY VALIDATI
   Friedman Herbert A., 2006, Psychological Operations during the Israel-Lebanon War, p14.08
   Fritz J., 2013, Culture Mandala: The Bulletin of the Centre for East-West Cultural and Economic Studies (Centre for East-West Cultural and Economic Studies), V10, P21
   Gates Robert M., 2011, National Security Space Strategy
   Gokhale SS, 2007, IEEE T DEPEND SECURE, V4, P32, DOI 10.1109/TDSC.2007.4
   Goldman H., 2010, Building Secure, Resilient Architectures for Cyber Mission Assurance
   Grau L., 2001, GPS Signals Jammed During Tank Trials
   Hilburn T., 2013, SOFTWARE ASSURANCE C
   Hooks I., 2001, Customer centered products: Creating successful products through smart requirements management
   International Organization for Standardization, 2009, 27004 ISO IEC
   ISACA, 2016, INF SEC ASS RISK MAN
   ISO/IEC, 2013, 27001 ISO IEC
   Jaramillo Cesar., 2012, Space Security Index 2012
   Kendall F., 2015, Critical Program Information (CPI) Identification and Protection Within Research, Development, Test, and Evaluation (RDTE)
   Leffingwell D., 2007, Managing Software Requirements: A Unified Approach
   Loverro D., 2015, Space Domain Mission Assurance: A Resilience Taxonomy
   Madana B., 2004, METHOD MODELING QUAN, P167
   MCCONNELL S, 1996, RAPID DEV TAMING WIL
   Merkow M., 2010, Secure and Resilient Software Development
   Min I., 2016, The Architecture Design and Evaluation Process: A Decision Support Framework for Conducting and Evaluating Architecture Studies, P1
   National Institute of Standards and Technology (NIST), 2012, NIST SPECIAL PUBLICA
   NIST, 2013, SEC PRIV CONTR FED I
   NIST, 2015, SUPPL CHAIN RISK MAN
   Obama B., 2013, PRESIDENTIAL POLICY
   OIG, 2012, NASA CYB EX AG INF S
   Passeri P., 2015, 2015 CYBER ATTACKS S
   Pawlikowski E., 2012, STRAT STUD Q
   Phillips D., 2016, BUILDING RESILIENT S, P3
   Richards M.G., 2008, AM I AERONAUT ASTRON
   Roby C., 2010, 520513 DEP DEF INSTR
   Rooker JW., 2008, SATELLITE VULNERABIL
   Ross R., 2016, Special Publication 800-160, Systems Security Engineering Considerations for a Multidisciplinary Approach in the Engineering of Trustworthy Secure Systems
   Ross Ron, 2016, NIST SPECIAL PUBLICA, V1
   Santamarta R., 2014, WAKEUP CALL SATCOM S
   SCHNEIDEWIND NF, 1992, IEEE SOFTWARE, V9, P28, DOI 10.1109/52.143099
   Seacord R., 2013, Secure Coding in C and C++, V2nd
   Soares M., 2009, WIRED MAG
   Steinberger J.A., 2008, SURVEY SATELLITE COM
   Steinbruner J., 2010, Letter Report from the Committee on Deterring Cyberattacks: Informing Strategies and Developing Options for U.S. Policy
   Sterbenz JPG, 2010, COMPUT NETW, V54, P1245, DOI 10.1016/j.comnet.2010.03.005
   Synder D., 2007, SUSTAINING AIR FORCE
   Waller M., 2003, IRAN CUBA ZAP US SAT
   Wilgenbusch R., 2013, Joint Forces Quarterly, P56
   Willke B., 2014, Homeland Security
   Wong Wilson., 2010, Military Space Power: A Guide to the Issues
   Zhang R, 2015, IEEE T WIREL COMMUN, V14, P5588, DOI 10.1109/TWC.2015.2439688
NR 83
TC 13
Z9 21
U1 1
U2 24
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2018
VL 94
BP 150
EP 164
DI 10.1016/j.infsof.2017.10.006
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FO6WE
UT WOS:000417009000009
DA 2024-07-18
ER

PT J
AU Shrivastava, SV
   Rathod, U
AF Shrivastava, Suprika Vasudeva
   Rathod, Urvashi
TI A risk management framework for distributed agile projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Distributed Agile Development (DAD); Agile Software Development;
   Distributed Software Development (DSD); Risk factor classification; Risk
   management framework in distributed agile development
ID SOFTWARE-DEVELOPMENT; VALIDITY; SCRUM
AB Context: Distributed agile development (DAD) approach has been adopted by the software companies for cost and time benefits. However, it causes significant challenges considering the contradicting nature of the agile and distributed development.
   Objective: The objective of this study is to develop a risk management framework that comprises the perceived risks in DAD projects, their causes and the methods used in industry for managing those risks. Method: This work is an extension of an exploratory study, wherein, DAD practitioners reported the risks they face in projects and the methods they use for managing those risks. The identified risks were further categorized based on their relevance to different aspects of DAD projects. In this extension, industry practitioners ranked the risks for their impact on DAD projects and rated the methods for the frequency of their use in projects. As the number of risks under each category was large for ranking, they were grouped under the risk areas within each category. The ranking of risk categories, risk areas and risk factors for their impact on DAD projects manifests their importance. The framework includes ranked risks, their causes and the risk management approaches. It was partially implemented in live projects in three different companies and was found to be beneficial.
   Results: The perceived impact of the risk categories, 'Group Awareness', 'External Stakeholder Collaboration' and 'Software Development Life Cycle' on DAD projects has been found to be high and caused by the properties of Distributed Software Development (DSD). The partial validation of the framework in three companies reported the elimination of majority of risk factors and/or reduction in their impact. Conclusion: DAD projects provide significant benefits but hold substantial risks due to the contradiction between distributed development and agile practices. The reported framework could effectively minimize the DAD risks in practice. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Shrivastava, Suprika Vasudeva] Deakin Univ, Fac Business & Law, Deakin Business Sch, Dept Informat Syst & Business Analyt, Geelong Waterfront Campus, Geelong, Vic 3217, Australia.
   [Rathod, Urvashi] Symbiosis Int Univ, Symbiosis Ctr Res & Innovat, Pune 412115, Maharashtra, India.
C3 Deakin University; Symbiosis International University
RP Shrivastava, SV (corresponding author), Deakin Univ, Fac Business & Law, Deakin Business Sch, Dept Informat Syst & Business Analyt, Geelong Waterfront Campus, Geelong, Vic 3217, Australia.
EM suprikashrvt@gmail.com; urvashi.srathod@gmail.com
RI Research and Innovation, Symbiosis Centre for/AAE-3217-2019; Rathod,
   Urvashi/R-9303-2016
OI Rathod, Urvashi/0000-0002-9555-1045
FU Project Management Institute Educational Foundation, PMIEF (USA)
FX We would like to thank all the participants from the corporate who
   participated in the interview session and gave their valuable inputs for
   this research work. This work has been funded by Project Management
   Institute Educational Foundation, PMIEF (USA).
CR [Anonymous], 10 ANN ST AG SURV
   [Anonymous], P 39 ANN HAW INT C S
   [Anonymous], 1964, NEW PERSPECTIVES ORG
   [Anonymous], IEEE T SOFTW ENG
   [Anonymous], IEEE SOFTW
   [Anonymous], J ENG TECH MANAGE
   [Anonymous], AG C AGILE 2007
   [Anonymous], ADV SOFTW ENG
   [Anonymous], DICCIPLINED AGILE DE
   [Anonymous], P AGILE 2008 C 4 8 T
   [Anonymous], P AGILE 2008 C
   [Anonymous], P 2010 5 IEEE INT C
   [Anonymous], P AG C AGILE
   [Anonymous], PRACTICES SCALING LE
   [Anonymous], P INT C INF NETW TEC
   [Anonymous], P PROF 2014 IN PRESS
   Babinet E, 2008, AGILE 2008, PROCEEDINGS, P401, DOI 10.1109/Agile.2008.58
   Boehm B, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.129
   Cohn Mike., 2010, SUCCEEDING AGILE SOF
   Cooper D.R., 2013, Business research methods, V12th
   Cusumano M, 2008, COMMUN ACM, V51, P15, DOI 10.1145/1314215.1314218
   Dorairaj S, 2011, LECT NOTES BUS INF P, V77, P102
   Drummond B, 2008, AGILE 2008, PROCEEDINGS, P315, DOI 10.1109/Agile.2008.21
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Gibbons J.D., 1993, NONPARAMETRIC STAT I, V90
   GLASER BG, 1965, SOC PROBL, V12, P436, DOI 10.1525/sp.1965.12.4.03a00070
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Holmström H, 2006, INFORM SYST MANAGE, V23, P7, DOI 10.1201/1078.10580530/46108.23.3.20060601/93703.2
   Hossain E, 2009, ASIA PAC SOFWR ENG, P457, DOI 10.1109/APSEC.2009.56
   Jalali S., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P45, DOI 10.1109/ICGSE.2010.14
   Khan N.Sikes., 2014, IT under pressure: McKinsey Global Survey results
   Khan SU, 2011, J SYST SOFTWARE, V84, P686, DOI 10.1016/j.jss.2010.12.010
   Krishna S, 2004, COMMUN ACM, V47, P62, DOI 10.1145/975817.975818
   Kvam PH, 2007, NONPARAMETRIC STATISTICS WITH APPLICATIONS TO SCIENCE AND ENGINEERING, P1, DOI 10.1002/9780470168707
   Leedy P.D., 2001, PRACTICAL RES PLANNI, V7th
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   Misra SC, 2009, J SYST SOFTWARE, V82, P1869, DOI 10.1016/j.jss.2009.05.052
   Mudumba V., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P219, DOI 10.1109/ICGSE.2010.33
   Paasivaara M, 2009, INT CONF GLOBAL SOFT, P195, DOI 10.1109/ICGSE.2009.27
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Ramesh B, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1164394.1164418
   Rothman J, 2013, IEEE SOFTWARE, V30, P7, DOI 10.1109/MS.2013.33
   Sarker S, 2004, EUR J INFORM SYST, V13, P3, DOI 10.1057/palgrave.ejis.3000485
   Schmidt R, 2001, J MANAGE INFORM SYST, V17, P5, DOI 10.1080/07421222.2001.11045662
   Shrivastava SV, 2015, INFORM SOFTWARE TECH, V58, P373, DOI 10.1016/j.infsof.2014.07.007
   Sureshchandra K, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P217, DOI 10.1109/ICGSE.2008.25
   Therrien E, 2008, AGILE 2008, PROCEEDINGS, P368, DOI 10.1109/Agile.2008.9
   Vax M, 2008, AGILE 2008, PROCEEDINGS, P310, DOI 10.1109/Agile.2008.44
   Verner JM, 2014, INFORM SOFTWARE TECH, V56, P54, DOI 10.1016/j.infsof.2013.06.005
   Westen D, 2003, J PERS SOC PSYCHOL, V84, P608, DOI 10.1037/0022-3514.84.3.608
   Yap M, 2005, AGILE 2005, Proceedings, P218, DOI 10.1109/ADC.2005.26
   Zeis C., 2001, J ECON SOC MEAS, V27, P25
NR 53
TC 41
Z9 47
U1 6
U2 100
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2017
VL 85
BP 1
EP 15
DI 10.1016/j.infsof.2016.12.005
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EP7JG
UT WOS:000397553500001
OA Bronze
DA 2024-07-18
ER

PT J
AU Laukkanen, E
   Itkonen, J
   Lassenius, C
AF Laukkanen, Eero
   Itkonen, Juha
   Lassenius, Casper
TI Problems, causes and solutions when adopting continuous delivery-A
   systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Continuous integration; Continuous delivery; Continuous deployment;
   Systematic literature review
ID CONTINUOUS INTEGRATION; AGREEMENT
AB Context: Continuous delivery is a software development discipline in which software is always kept releasable. The literature contains instructions on how to adopt continuous delivery, but the adoption has been challenging in practice.
   Objective: In this study, a systematic literature review is conducted to survey the faced problems when adopting continuous delivery. In addition, we identify causes for and solutions to the problems.
   Method: By searching five major bibliographic databases, we identified 293 articles related to continuous delivery. We selected 30 of them for further analysis based on them containing empirical evidence of adoption of continuous delivery, and focus on practice instead of only tooling. We analyzed the selected articles qualitatively and extracted problems, causes and solutions. The problems and solutions were thematically synthesized into seven themes: build design, system design, integration, testing, release, human and organizational and resource.
   Results: We identified a total of 40 problems, 28 causal relationships and 29 solutions related to adoption of continuous delivery. Testing and integration problems were reported most often, while the most critical reported problems were related to testing and system design. Causally, system design and testing were most connected to other themes. Solutions in the system design, resource and human and organizational themes had the most significant impact on the other themes. The system design and build design themes had the least reported solutions.
   Conclusions: When adopting continuous delivery, problems related to system design are common, critical and little studied. The found problems, causes and solutions can be used to solve problems when adopting continuous delivery in practice. (C) 2016 The Authors. Published by Elsevier B.V.
C1 [Laukkanen, Eero; Itkonen, Juha; Lassenius, Casper] Aalto Univ, Dept Comp Sci, POB 15400, FI-00076 Aalto, Finland.
   [Lassenius, Casper] MIT, Sloan Sch Management, Cambridge, MA 02139 USA.
C3 Aalto University; Massachusetts Institute of Technology (MIT)
RP Laukkanen, E (corresponding author), Aalto Univ, Dept Comp Sci, POB 15400, FI-00076 Aalto, Finland.
EM eero.laukkanen@aalto.fi; juha.itkonen@aalto.fi;
   casper.lassenius@aalto.fi
RI Lassenius, Casper C/A-4339-2013; Itkonen, Juha/E-8360-2012
OI Itkonen, Juha/0000-0001-9084-495X; Laukkanen, Eero/0000-0003-1622-0473
FU TEKES as part of the Need for Speed research program of DIMECC (Finnish
   Strategic Center for Science, Technology and Innovation in the field of
   ICT and digital business)
FX This work was supported by TEKES as part of the Need for Speed research
   program of DIMECC (Finnish Strategic Center for Science, Technology and
   Innovation in the field of ICT and digital business).
CR Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   [Anonymous], 2014, ATLAS TI
   [Anonymous], 2009, CONTINUOUS DEPLOYMEN
   Beck K., 2000, EXTREME PROGRAMMING
   Claps GG, 2015, INFORM SOFTWARE TECH, V57, P21, DOI 10.1016/j.infsof.2014.07.009
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Csikszentmihalyi M., 1991, Flow: The psychology of optimal experience, P41
   Debbiche A, 2014, LECT NOTES COMPUT SC, V8892, P17, DOI 10.1007/978-3-319-13835-0_2
   Eck A., 2014, 20 AM C INF SYST 201
   Fowler M., 2006, Continuous integration
   Fowler M., 2013, Continuous Delivery
   García-Díaz V, 2010, ADV INTEL SOFT COMPU, V79, P459
   Garousi V, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916008
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Kitchenham B., 2007, 2007001 EBSE
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lehtinen TOA, 2014, INFORM SOFTWARE TECH, V56, P623, DOI 10.1016/j.infsof.2014.01.015
   Mäntylä MV, 2015, EMPIR SOFTW ENG, V20, P1384, DOI 10.1007/s10664-014-9338-4
   Meyer M, 2014, IEEE SOFTWARE, V31, P14, DOI 10.1109/MS.2014.58
   Olsson HH, 2012, EUROMICRO CONF PROC, P392, DOI 10.1109/SEAA.2012.54
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   Ståhl D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P54, DOI 10.1145/2591062.2591186
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Stahl Daniel, 2013, P 2013 12 IASTED INT, P736
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
NR 28
TC 65
Z9 72
U1 0
U2 32
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2017
VL 82
BP 55
EP 79
DI 10.1016/j.infsof.2016.10.001
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED9CE
UT WOS:000389167000004
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Lindström, B
   Offutt, J
   Sundmark, D
   Andler, SF
   Pettersson, P
AF Lindstrom, Birgitta
   Offutt, Jeff
   Sundmark, Daniel
   Andler, Sten F.
   Pettersson, Paul
TI Using mutation to design tests for aspect-oriented models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model-based testing; Aspect-oriented model; Mutation testing
ID PROGRAMS
AB Context: Testing for properties such as robustness or security is complicated because their concerns are often repeated in many locations and muddled with the normal code. Such "cross-cutting concerns" include things like interrupt events, exception handling, and security protocols. Aspect-oriented (AO) modeling allows, developers to model the cross-cutting behavior independently of the normal behavior, thus supporting model-based testing of cross-cutting concerns. However, mutation operators defined for AO programs (source code) are usually not applicable to AO models (AGMs) and operators defined for models do not target the AO features.
   Objective: We present a method to design abstract tests at the aspect-oriented model level. We define mutation operators for aspect-oriented models and evaluate the generated mutants for an example system.
   Method: AOMs are mutated with novel operators that specifically target the AO modeling features. Test traces killing these mutant models are then generated. The generated and selected traces are abstract tests that can be transformed to concrete black-box tests and run on the implementation level, to evaluate the behavior of the woven cross-cutting concerns (combined aspect and base models).
   Results: This paper is a significant extension of our paper at Mutation 2015. We present a complete fault model, additional mutation operators, and a thorough analysis of the mutants generated for an example system.
   Conclusions: The analysis shows that some mutants are stillborn (syntactically illegal) but none is equivalent (exhibiting the same behavior as the original model). Additionally, our AOM-specific mutation operators can be combined with pre-existing operators to mutate code or models without any overlap. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Lindstrom, Birgitta; Andler, Sten F.] Univ Skovde, Skovde, Sweden.
   [Offutt, Jeff] George Mason Univ, Fairfax, VA 22030 USA.
   [Sundmark, Daniel] Swedish Inst Comp Sci, Kista, Sweden.
   [Pettersson, Paul] Malardalen Univ, Vasteras, Sweden.
C3 University of Skovde; George Mason University; Malardalen University
RP Lindström, B (corresponding author), Univ Skovde, Skovde, Sweden.
EM birgitta.lindstrom@his.se
FU Knowledge Foundation (KKS) [20130085]
FX This work was funded by The Knowledge Foundation (KKS) through the
   project 20130085 Testing of Critical System Characteristics (TOCSYC).
CR Agrawal H., 1989, Design of mutant operators for the C programming language
   Ali S, 2012, SOFTW SYST MODEL, V11, P633, DOI 10.1007/s10270-011-0206-z
   Ali S, 2011, LECT NOTES COMPUT SC, V6981, P108, DOI 10.1007/978-3-642-24485-8_9
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], DESIGN MUTANT OPERAT
   [Anonymous], 10 INT WORKSH ASP OR
   [Anonymous], P 2 INT C SOFTW ENG
   [Anonymous], SOFTWARE TOOLS TECHN
   [Anonymous], P 2 WORKSH MUT AN MU
   [Anonymous], 2015, P IEEE INT ULTR S IU
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   [Anonymous], 2015, 2015 IEEE 8 INT C SO, DOI DOI 10.1109/ICST.2015.7102627
   Batth SS, 2007, LECT NOTES COMPUT SC, V4574, P50
   Bengtsson J., 2004, LECT NOTES CONCURREN
   Bsekken J.S., 2006, CANDIDATE FAULT MODE, P169
   Colyer A., 2004, Eclipse aspectj: aspect-oriented programming with aspectj and the eclipse aspectj development tools
   Cottenier T, 2007, J OBJECT TECHNOL, V6, P51, DOI 10.5381/jot.2007.6.7.a3
   De Souza S.D.R.S., 2000, P 33 ANN HAW INT C S
   Delamare R, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P376, DOI 10.1109/ICST.2009.41
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Di Nardo D., 2015, ICST'15, P1
   Fabbri S. C. P. F., 1996, Formal Description Techniques VIII. Proceedings of the IFIP TC6 Eighth International Conference on Formal Description Techniques, P329
   Ferrari Fabiano Cutigi, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P52, DOI 10.1109/ICST.2008.37
   Fuentes L, 2007, J OBJECT TECHNOL, V6, P109, DOI 10.5381/jot.2007.6.7.a5
   Hameed Kashif, 2010, Journal of Software Engineering and Applications, V3, P303, DOI 10.4236/jsea.2010.34036
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Hessel Anders, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P77, DOI 10.1007/978-3-540-78917-8_3
   Hessel A., 2003, LNCS, P136
   Hierons RM, 2009, J SYST SOFTWARE, V82, P1804, DOI 10.1016/j.jss.2009.06.030
   Jackson A., 2006, P IMDT WORKSH CONJ E, V6
   Jürjens J, 2005, LECT NOTES COMPUT SC, V3655, P42
   Kansomkeat Supaporn., 2003, Proceedings of the 2003 annual research conference of the South African institute of computer scientists and information technologists on Enablement through technology, P296
   Kim S., 2000, Proc. Net. ObjectDays, P9
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Lemos O.A. L., 2006, P 2 WORKSHOP TESTING, P33
   Li JH, 2009, PROCEEDINGS OF THE SECOND INTERNATIONAL SYMPOSIUM ON ELECTRONIC COMMERCE AND SECURITY, VOL I, P620, DOI 10.1109/ISECS.2009.158
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Ma YS, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P352, DOI 10.1109/ISSRE.2002.1173287
   Mortensen M., 2005, WORKSH TEST ASP OR P
   Mücke T, 2004, LECT NOTES COMPUT SC, V2978, P128
   Nilsson R., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P306, DOI 10.1109/CMPSAC.2004.1342848
   Nouh M., 2010, Proceedings of the 2010 Conference of the Center for Advanced Studies on Collaborative Research, P139
   Pérez J, 2008, INFORM SOFTWARE TECH, V50, P969, DOI 10.1016/j.infsof.2007.08.007
   Peterson J.L., 1981, Petri Net Theory and the Modeling of Systems
   Pinto Ferraz Fabbri S. C., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P220, DOI 10.1109/ISSRE.1994.341378
   Reddy YR, 2006, LECT NOTES COMPUT SC, V3880, P75
   Springintveld J, 2001, THEOR COMPUT SCI, V254, P225, DOI 10.1016/S0304-3975(99)00134-6
   Trakhtenbrot M, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P151, DOI 10.1109/TAIC.PART.2007.23
   Wedyan F, 2012, INFORM SOFTWARE TECH, V54, P900, DOI 10.1016/j.infsof.2011.12.001
   Whittle J, 2008, LECT NOTES COMPUT SC, V5002, P16
   Xu DX, 2008, INT J SOFTW ENG KNOW, V18, P413, DOI 10.1142/S0218194008003672
   Xu DX, 2012, SOFTW TEST VERIF REL, V22, P267, DOI 10.1002/stvr.440
NR 55
TC 6
Z9 6
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2017
VL 81
SI SI
BP 112
EP 130
DI 10.1016/j.infsof.2016.04.007
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EB8IH
UT WOS:000387634200009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Agh, H
   Ramsin, R
AF Agh, Halimeh
   Ramsin, Raman
TI A pattern-based model-driven approach for situational method engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software development methodology; Situational method engineering;
   Model-driven development; Process modeling; Pattern-based model
   transformation
ID REQUIREMENTS
AB Context: Constructing bespoke software development methodologies for specific project situations has become a crucial need, giving rise to Situational Method Engineering (SME). Compared with Software Engineering, SME has a long way to go yet; SME approaches are especially deficient as to support for modeling, portability, and automation. Model-Driven Development (MDD) has been effectively used for addressing these issues in Software Engineering, and is also considered a promising approach for resolving them in SME.
   Objective: This paper aims to address the shortcomings of existing SME approaches by introducing a novel MDD approach, specifically intended for SME purposes, that uses a pattern-based approach for model transformation.
   Method: Developing a MDD approach for SME requires that a modeling framework, consisting of modeling levels, be defined for modeling software development methodologies. Transformation patterns should also be specified for converting the models from one level to the next. A process should then be defined for applying the framework and transformations patterns to real SME projects. The resulting MDD approach requires proper evaluation to demonstrate its applicability.
   Results: A framework and a semi-automated process have been proposed that adapt pattern-based model transformation techniques for application to the methodology models used in SME. The transformation patterns have been implemented in the Medini-QVT model transformation tool, along with two supplementary method bases: one for mapping the situational factors of SME projects to requirements, and the other for mapping the requirements to method fragments. The method engineer can produce the methodology models by using the method bases and executing the transformation patterns via the tool.
   Conclusion: The validity of the proposed approach has been assessed based on special evaluation criteria, and also through application to a real-world project. Evaluation results indicate that the proposed approach addresses the deficiencies of existing approaches, and satisfies the practicality requirements of SME approaches. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Agh, Halimeh; Ramsin, Raman] Sharif Univ Technol, Dept Comp Engn, Azadi Ave, Tehran, Iran.
C3 Sharif University of Technology
RP Ramsin, R (corresponding author), Sharif Univ Technol, Dept Comp Engn, Azadi Ave, Tehran, Iran.
EM agh@ce.sharif.edu
RI Ramsin, Raman/G-8455-2017
OI Ramsin, Raman/0000-0003-1996-9906
CR Abad ZSH, 2010, ASIA PAC SOFWR ENG, P326, DOI 10.1109/APSEC.2010.45
   Alegria Hurtado., 2011, Proc. of the 2011 International Conference on Software and Systems Process, P43
   Ambler S W., 1998, Process patterns. Building large-scale systems using object technology
   Amroune M., 2012, INT J COMPUTER APPL, V44, P14, DOI [10.5120/6298-8504, DOI 10.5120/6298-8504]
   [Anonymous], UNIVERSAL J COMPUTER
   [Anonymous], 24744 ISOIEC
   [Anonymous], MDA GUIDE VERSION 1
   Appukuttan B.K., 2003, P MET MDA, P110
   Asadi Mohsen, 2010, Proceedings 8th ACIS International Conference on Software Engineering Research, Management and Applications (SERA 2010), P190, DOI 10.1109/SERA.2010.32
   Asadi M, 2009, STUD COMPUT INTELL, V253, P277, DOI 10.1007/978-3-642-05441-9_24
   Babanezhad R., 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P477, DOI 10.1109/COMPSAC.2010.55
   Barreto A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P15, DOI 10.1109/QUATIC.2010.19
   Bendjenna H., 2012, P INT C ED APPL SCI, P167
   Bendraou R, 2005, LECT NOTES COMPUT SC, V3713, P17, DOI 10.1007/11557432_3
   Bendraou R, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P390, DOI 10.1109/ASPEC.2007.60
   Bendraou R, 2010, IEEE T SOFTWARE ENG, V36, P662, DOI 10.1109/TSE.2009.85
   Bezivin J., 2005, P MET S, P1
   Biglari B, 2012, FRONT ARTIF INTEL AP, V246, P73, DOI 10.3233/978-1-61499-125-0-73
   BRAGANCA A, 2008, P 12 INT SOFTW PROD, P329, DOI DOI 10.1109/SPLC.2008.41
   Brahe S, 2007, LECT NOTES COMPUT SC, V4652, P166
   Breton E, 2001, P INT COMP SOFTW APP, P225, DOI 10.1109/CMPSAC.2001.960620
   Cervera M, 2012, INT J INF SYST MODEL, V3, P86, DOI 10.4018/jismd.2012100105
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   D'Ambrogio A., 2005, P ACM 5 INT WORKSHOP, P75, DOI DOI 10.1145/1071021.1071029
   Deneckere R., 2001, THESIS
   Duddy K, 2003, SEVENTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P174, DOI 10.1109/EDOC.2003.1233847
   Firesmith D.G., 2002, OPEN PROCESS FRAMEWO
   Graham I., 1997, OPEN PROCESS SPECIFI
   Gupta D., 2001, Requirements Engineering, V6, P135, DOI 10.1007/s007660170001
   Henderson-Sellers B., 2014, Situational method engineering, DOI DOI 10.1007/978-3-642-41467-1
   Henderson-Sellers B, 2010, J UNIVERS COMPUT SCI, V16, P424
   Hesari S., 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P208, DOI 10.1109/COMPSAC.2010.69
   Iacob Maria-Eugenia., 2008, ENTERPRISE DISTRIBUT, P1
   ISO/IEC, 2010, 247442007 ISOIEC
   Jafarinezhad O, 2012, P INT COMP SOFTW APP, P279, DOI 10.1109/COMPSAC.2012.39
   Jantzen J., 2007, Foundations of Fuzzy Control, DOI [10.1002/9780470061176, DOI 10.1002/9780470061176]
   Karlsson F, 2004, INFORM SOFTWARE TECH, V46, P619, DOI 10.1016/j.infsof.2003.12.004
   KAROW M, 2006, P 12 AM C INF SYST A, P3913
   Khaari Massood, 2010, Proceedings of the 2010 17th IEEE International Conference and Workshops on Engineering of Computer-Based Systems (ECBS 2010), P241, DOI 10.1109/ECBS.2010.33
   Kornyshova E, 2007, INT FED INFO PROC, V244, P64
   Kouroshfar E, 2009, LECT NOTES COMPUT SC, V5582, P54, DOI 10.1007/978-3-642-02414-6_4
   Livermore Jeffrey A., 2008, Journal of Software, V3, P31, DOI 10.4304/jsw.3.4.31-36
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mirbel I, 2006, REQUIR ENG, V11, P58, DOI 10.1007/s00766-005-0019-0
   Mitchell RK, 1997, ACAD MANAGE REV, V22, P853, DOI 10.2307/259247
   Niknafs A, 2008, LECT NOTES COMPUT SC, V5074, P525
   Orejas F, 2009, LECT NOTES COMPUT SC, V5728, P383, DOI 10.1007/978-3-642-03741-2_26
   Precup RE, 2011, COMPUT IND, V62, P213, DOI 10.1016/j.compind.2010.10.001
   Punter T, 1996, INFORM SOFTWARE TECH, V38, P295, DOI 10.1016/0950-5849(95)01087-4
   Ralyté J, 2003, LECT NOTES COMPUT SC, V2681, P95
   Sadiq M, 2014, INT J SYST ASSUR ENG, V5, P711, DOI 10.1007/s13198-014-0236-3
   Sardinha A., 2010, INF SCI TECHNOL B AC, V2, P56
   Schuppenies R., 2002, SOFTWARE PROCESS ENG
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P908, DOI 10.1109/32.730542
   Vicente-Chicote C, 2007, J OBJECT TECHNOL, V6, P437, DOI 10.5381/jot.2007.6.9.a22
   Volter M., 2013, MODEL DRIVEN SOFTWAR
   Yue T, 2011, REQUIR ENG, V16, P75, DOI 10.1007/s00766-010-0111-y
   Zohrevand Z, 2011, ASIA PAC SOFWR ENG, P122, DOI 10.1109/APSEC.2011.55
NR 58
TC 7
Z9 7
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2016
VL 78
BP 95
EP 120
DI 10.1016/j.infsof.2016.05.010
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR0YZ
UT WOS:000379634100006
DA 2024-07-18
ER

PT J
AU Martins, LEG
   Gorschek, T
AF Martins, Luiz Eduardo G.
   Gorschek, Tony
TI Requirements engineering for safety-critical systems: A systematic
   literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Safety requirements; Safety-critical systems; Hazard; Accident;
   Systematic literature review; Requirements engineering
ID SOFTWARE; CERTIFICATION; TECHNOLOGY
AB Context: Safety-Critical Systems (SCS) are becoming increasingly present in our society. A considerable amount of research effort has been invested into improving the SCS requirements engineering process as it is critical to the successful development of SCS and, in particular, the engineering of safety aspects.
   Objective: This article aims to investigate which approaches have been proposed to elicit, model, specify and validate safety requirements in the context of SCS, as well as to what extent such approaches have been validated in industrial settings. The paper will also investigate how the usability and usefulness of the reported approaches have been explored, and to what extent they enable requirements communication among the development project/team actors in the development of SCS.
   Method: We conducted a systematic literature review by selecting 151 papers published between 1983 and 2014. The research methodology to conduct the SLR was based on the guidelines proposed by Kitchenham and Biolchini.
   Results: The results of this systematic review should encourage further research into the design of studies to improve the requirements engineering for SCS, particularly to enable the communication of the safety requirements among the project team actors, and the adoption of other models for hazard and accident models. The presented results point to the need for more industry-oriented studies, particularly with more participation of practitioners in the validation of new approaches.
   Conclusion: The most relevant findings from this review and their implications for further research are as follows: integration between requirements engineering and safety engineering areas; dominance of the traditional approaches; early mortality of new approaches; need for industry validation; lack of evidence for the usefulness and usability of most approaches; and the lack of studies that investigate how to improve the communication process throughout the lifecycle. Based on the findings, we suggest a research agenda to the community of researchers and advices to SCS practitioners. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Martins, Luiz Eduardo G.] Univ Fed Sao Paulo, Dept Sci & Technol, Sao Jose Dos Campos, Brazil.
   [Gorschek, Tony] Blekinge Inst Technol, Software Engn Res Lab, Karlskrona, Sweden.
C3 Universidade Federal de Sao Paulo (UNIFESP); Blekinge Institute
   Technology
RP Martins, LEG (corresponding author), Univ Fed Sao Paulo, Dept Sci & Technol, Sao Jose Dos Campos, Brazil.
EM legmartins@unifesp.br; tony.gorschek@bth.se
RI Martins, Luiz/AAL-7679-2020
FU Federal University of Sao Paulo (UNIFESP); Brazilian research agency
   CNPq - Conselho Nacional de Desenvolvimento Cientifico e Tecnologico
   [249059/2013-04]
FX This work was partially funded by the Federal University of Sao Paulo
   (UNIFESP), and the Brazilian research agency CNPq - Conselho Nacional de
   Desenvolvimento Cientifico e Tecnologico - under grant agreement no.
   249059/2013-04.
CR Abrial J. -R., 2006, 28th International Conference on Software Engineering Proceedings, P761, DOI 10.1145/1134285.1134406
   Allenby K, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P228
   Andersen BS, 2011, COMMUN ACM, V54, P52, DOI [10.1145/2001269.2001286, 10.1145/2016036.2024356]
   [Anonymous], 2003, Diffusion of Innovations
   [Anonymous], P AM CONTR C
   [Anonymous], P 26 ANN NASA GODD S
   [Anonymous], 2005, ENGINEERING
   BELLIO R, 2005, P 1 INT WORK, P1
   BJARNASON E, 2011, 19 INT REQ ENG C, P37
   Cant T., 2004, P 10 AUSTR WORKSH SA, V56, P85
   DAVIS FD, 1993, INT J MAN MACH STUD, V38, P475, DOI 10.1006/imms.1993.1022
   Firesmith D, 2005, J OBJECT TECHNOL, V4, P27, DOI 10.5381/jot.2005.4.1.c3
   Fricker S, 2007, LECT NOTES COMPUT SC, V4542, P144
   Fricker S, 2010, IEEE SOFTWARE, V27, P72, DOI 10.1109/MS.2010.44
   HALL A, 1990, IEEE SOFTWARE, V7, P11, DOI 10.1109/52.57887
   Hatcliff J, 2009, ELECTRON NOTES THEOR, V238, P11, DOI 10.1016/j.entcs.2009.09.002
   Heimdahl MPE, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P137, DOI 10.1109/FOSE.2007.18
   Heitmeyer C.L., 2004, ELECTRON NOTES THEOR, V108, P11
   Holland Corey, 2011, 2011 INT JOINT C BIO, P1, DOI [DOI 10.1109/IJCB.2011.6117536, 10.1109/IJCB.2011.6117536.]
   Ivarsson M., TECHNOLOGY
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Ivarsson M, 2009, REQUIR ENG, V14, P155, DOI 10.1007/s00766-009-0080-1
   Johnson C, 2002, SAFETY SCI, V40, P835, DOI 10.1016/S0925-7535(01)00086-8
   Jones, 2014, P FUT SOFTW ENG, P182, DOI DOI 10.1145/2593882.2593895
   Kitchenham B, 1997, COMPUT CONTROL ENG J, V8, P120, DOI 10.1049/cce:19970304
   Kitchenham B., 2007, EBSE200701 KEEL U U
   Kitchenham B. A., 1996, SIGSOFT Software Engineering Notes, V21, P11, DOI 10.1145/381790.381795
   Kopec D., 2007, SIGCSE Bulletin, V39, P180, DOI 10.1145/1272848.1272905
   Kornecki A, 2009, INNOV SYST SOFTW ENG, V5, P149, DOI 10.1007/s11334-009-0088-1
   lankoulova I., 2011, 6 INT C RES CHALL IN, P1
   Legris P, 2003, INFORM MANAGE-AMSTER, V40, P191, DOI 10.1016/S0378-7206(01)00143-4
   Leveson N.G., 1995, Safeware: System Safety and Computers
   Leveson NG, 2011, ENG SYST, P1
   LEVESON NG, 1995, COMMUN ACM, V38, P146, DOI 10.1145/219717.219816
   Lewycky P., 1987, HAZARD PREV, P6
   Lutz R., 2000, FOSE 2000 FUTURE SOF, P215
   Medikonda B.S., 2009, SIGSOFT SOFTW ENG NO, V34, P1
   Mellado D, 2010, COMPUT STAND INTER, V32, P153, DOI 10.1016/j.csi.2010.01.006
   Nair S, 2015, INFORM SOFTWARE TECH, V60, P1, DOI 10.1016/j.infsof.2014.12.002
   Nair S, 2014, INFORM SOFTWARE TECH, V56, P689, DOI 10.1016/j.infsof.2014.03.001
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Rodríguez-Dapena P, 1999, IEEE SOFTWARE, V16, P31, DOI 10.1109/52.776946
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saracevic T., 1995, SIGIR Forum, P138
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   van Lamsweerde A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P5, DOI 10.1109/ICSE.2000.870392
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yahya S, 2013, IEEE CONF OPEN SYST, P190, DOI 10.1109/ICOS.2013.6735072
   Zelkowitz MV, 1997, INFORM SOFTWARE TECH, V39, P735, DOI 10.1016/S0950-5849(97)00025-6
NR 50
TC 41
Z9 51
U1 0
U2 39
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2016
VL 75
BP 71
EP 89
DI 10.1016/j.infsof.2016.04.002
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DN1QI
UT WOS:000376840100006
DA 2024-07-18
ER

PT J
AU Xi, W
   Xu, C
   Yang, WH
   Ma, XX
   Yu, P
   Lu, J
AF Xi, Wang
   Xu, Chang
   Yang, Wenhua
   Ma, Xiaoxing
   Yu, Ping
   Lu, Jian
TI Suppressing detection of inconsistency hazards with pattern learning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 21st Asia-Pacific Software Engineering Conference (APSEC)
CY DEC 01-04, 2014
CL Jeju, SOUTH KOREA
DE Context inconsistency; Inconsistency hazard; Pattern learning
ID MIDDLEWARE
AB Context: Inconsistency detection and resolution is critical for context-aware applications to ensure their normal execution. Contexts, which refer to pieces of environmental information used by applications, are checked against consistency constraints for potential errors. However, not all detected inconsistencies are caused by real context problems. Instead, they might be triggered by improper checking timing. Such inconsistencies are ephemeral and usually harmless. Their detection and resolution is unnecessary, and may even be detrimental. We name them inconsistency hazards.
   Objective: Inconsistency hazards should be prevented from being detected or resolved, but it is not straightforward since their occurrences resemble real inconsistencies. In this article, we present SHAP, a pattern learning based approach to suppressing the detection of such hazards automatically.
   Method: Our key insight is that detection of inconsistency hazards is subject to certain patterns of context changes. Although such patterns can be difficult to specify manually, they may be learned effectively with data mining techniques. With these patterns, we can reasonably schedule inconsistency detections.
   Results: The experimental results show that SHAP can effectively suppress the detection of most inconsistency hazards (over 90%) with negligible overhead.
   Conclusions: Comparing with other approaches, our approach can effectively suppress the detection of inconsistency hazards, and at the same time allow real inconsistencies to be detected and resolved timely. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Xi, Wang; Xu, Chang; Yang, Wenhua; Ma, Xiaoxing; Yu, Ping; Lu, Jian] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210008, Jiangsu, Peoples R China.
   [Xi, Wang; Xu, Chang; Yang, Wenhua; Ma, Xiaoxing; Yu, Ping; Lu, Jian] Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210008, Jiangsu, Peoples R China.
C3 Nanjing University; Nanjing University
RP Xu, C (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210008, Jiangsu, Peoples R China.; Xu, C (corresponding author), Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210008, Jiangsu, Peoples R China.
EM changxu@nju.edu.cn
RI Yu, Ping/C-7879-2019; Ma, Xiaoxing/K-4290-2012; xi, wang/HIZ-7736-2022;
   Ma, Xiaoxing/X-6505-2018
OI Ma, Xiaoxing/0000-0001-7970-1384
CR [Anonymous], DATABASE SYSTEM IMPL
   Chang X., 2005, Proceedings of the 10th European software engineering conference held jointly with 13th ACM SIGSOFT international symposium on Foundations of software engineering (ESEC/FSE-13). ACM, New York, NY, P336, DOI DOI 10.1145/1095430.1081759
   Chen CH, 2011, INT CONF PERVAS COMP, P10, DOI 10.1109/PERCOM.2011.5767574
   Cheng H, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P141
   Chetan S, 2005, CONSUM COMM NETWORK, P223
   Coulouris G.F., 2005, Distributed Systems: Concepts and Design
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   EICHELBE.EB, 1965, IBM J RES DEV, V9, P90, DOI 10.1147/rd.92.0090
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hwa-You Hsu, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P439, DOI 10.1109/ASE.2008.68
   Julien C, 2006, IEEE T SOFTWARE ENG, V32, P281, DOI 10.1109/TSE.2006.47
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   Lo D, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P557
   Michele S., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering (SIGSOFT '08/FSE-16). ACM, New York, NY, P261, DOI DOI 10.1145/1453101.1453136
   Murphy AL, 2006, ACM T SOFTW ENG METH, V15, P279, DOI 10.1145/1151695.1151698
   Probost F., 2011, P INT C SOFT COMP PA, P435
   Rao J., 2006, VLDB, P175
   Raychoudhury V, 2013, PERVASIVE MOB COMPUT, V9, P177, DOI 10.1016/j.pmcj.2012.08.006
   Sama M, 2010, IEEE T SOFTWARE ENG, V36, P644, DOI 10.1109/TSE.2010.35
   Sui J., 2014, P 21 AS PAC SOFTW EN, P342
   Tse T. H., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P458, DOI 10.1109/CMPSAC.2004.1342879
   UNGER SH, 1995, IEEE T COMPUT, V44, P754, DOI 10.1109/12.391185
   Wu XD, 2008, KNOWL INF SYST, V14, P1, DOI 10.1007/s10115-007-0114-2
   Xi W., 2014, P 21 AS PAC SOFTW EN, P414
   Xi Wang, 2014, Journal of Frontiers of Computer Science and Technology, V8, P427, DOI 10.3778/j.issn.1673-9418.1311013
   Xie HW, 2014, UBICOMP'14: PROCEEDINGS OF THE 2014 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P243, DOI 10.1145/2632048.2632057
   Xie HW, 2013, 2013 IEEE 10TH INTERNATIONAL CONFERENCE ON AND 10TH INTERNATIONAL CONFERENCE ON AUTONOMIC AND TRUSTED COMPUTING (UIC/ATC) UBIQUITOUS INTELLIGENCE AND COMPUTING, P224, DOI 10.1109/UIC-ATC.2013.104
   Xu C., 2015, IEEE T SOFT IN PRESS
   Xu C, 2012, J SYST SOFTWARE, V85, P2812, DOI 10.1016/j.jss.2012.04.078
   Xu C, 2010, ACM T SOFTW ENG METH, V19, DOI 10.1145/1656250.1656253
   Xu Chen, 2013, Science China, Information Sciences, V56, DOI 10.1007/s11432-012-4679-3
   Yang WH, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-015-5300-3
NR 32
TC 2
Z9 2
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2016
VL 74
BP 219
EP 229
DI 10.1016/j.infsof.2015.08.003
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DJ7BX
UT WOS:000374368000016
DA 2024-07-18
ER

PT J
AU Ujhelyi, Z
   Szoke, G
   Horváth, A
   Csiszár, NI
   Vidács, L
   Varró, D
   Ferenc, R
AF Ujhelyi, Zoltan
   Szoke, Gabor
   Horvath, Akos
   Csiszar, Norbert Istvan
   Vidacs, Laszlo
   Varro, Daniel
   Ferenc, Rudolf
TI Performance comparison of query-based techniques for anti-pattern
   detection
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Anti-patterns; Refactoring; Performance measurements; Columbus;
   EMF-IncQuery; OCL
AB Context: Program queries play an important role in several software evolution tasks like program comprehension, impact analysis, or the automated identification of anti-patterns for complex refactoring operations. A central artifact of these tasks is the reverse engineered program model built up from the source code (usually an Abstract Semantic Graph, ASG), which is traditionally post-processed by dedicated, hand-coded queries.
   Objective: Our paper investigates the costs and benefits of using the popular industrial Eclipse Modeling Framework (EMF) as an underlying representation of program models processed by four different general-purpose model query techniques based on native Java code, OCL evaluation and (incremental) graph pattern matching.
   Method: We provide in-depth comparison of these techniques on the source code of 28 Java projects using anti-pattern queries taken from refactoring operations in different usage profiles.
   Results: Our results show that general purpose model queries can outperform hand-coded queries by 2-3 orders of magnitude, with the trade-off of an increased in memory consumption and model load time of up to an order of magnitude.
   Conclusion: The measurement results of usage profiles can be used as guidelines for selecting the appropriate query technologies in concrete scenarios. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Ujhelyi, Zoltan; Horvath, Akos; Varro, Daniel] Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, H-1117 Budapest, Hungary.
   [Szoke, Gabor; Csiszar, Norbert Istvan; Ferenc, Rudolf] Univ Szeged, Dept Software Engn, H-6720 Szeged, Hungary.
   [Szoke, Gabor] Refactoring 2011 Kft, H-6722 Szeged, Hungary.
   [Vidacs, Laszlo] Univ Szeged, MTA SZTE Res Grp Artificial Intelligence, H-6720 Szeged, Hungary.
C3 Budapest University of Technology & Economics; Szeged University; Szeged
   University
RP Ujhelyi, Z (corresponding author), Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Magyar Tudosok Krt 2, H-1117 Budapest, Hungary.
EM ujhelyiz@mit.bme.hu; kancsuki@inf.u-szeged.hu; ahorvath@mit.bme.hu;
   csiszar.norbert.istvan@stud.u-szeged.hu; lac@inf.u-szeged.hu;
   varro@mit.bme.hu; ferenc@int.u-szeged.hu
RI Varro, Daniel/G-8963-2012; Ujhelyi, Zoltán/G-8627-2012; Vidács,
   László/M-3028-2018; Ferenc, Rudolf/A-1317-2008; Varro,
   Daniel/C-5447-2015
OI Ujhelyi, Zoltán/0000-0002-2091-6441; Ferenc, Rudolf/0000-0001-8897-7403;
   Varro, Daniel/0000-0002-8790-252X
FU Hungarian National Grant [GOP-1.2.1-11-2011-0002]; CERTIMOT Project
   [ERC_HU-09-1-2010-0003]; EU [ICT-611125, ICT-609666]
FX This paper was partially supported by the Hungarian National Grant
   GOP-1.2.1-11-2011-0002, the CERTIMOT Project (ERC_HU-09-1-2010-0003) and
   the EU FP7 STREP Projects MONDO (ICT-611125) and REPARA (ICT-609666).
CR Arendt  T., 2012, P 5 WORKSH REF TOOLS, P8, DOI DOI 10.1145/2328876.2328878
   ATL, 2014, ATLAS TRANSF LANG
   Bergmann Gabor, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P167, DOI 10.1007/978-3-642-21732-6_12
   Bergmann G., 2008, Proceedings of 3rd International Workshop on Graph and Model Transformation (GRaMoT 2008). 30th International Conference on Software Engineering, P25, DOI [10.1145/1402947.1402953, DOI 10.1145/1402947.1402953]
   Bergmann G., 2013, THESIS BUDAPEST U TE
   Cabot J., 2006, P MOD SIZ METR WORKS
   Ceiss R, 2006, LECT NOTES COMPUT SC, V4178, P383
   De Roover Coen, 2011, P 9 INT C PRINCIPLES, P71, DOI [10.1145/2093157.2093168, DOI 10.1145/2093157.2093168]
   Demeyer S, 1999, LECT NOTES COMPUT SC, V1723, P630
   Drools, 2014, DROOLS DROOLS BUSINE
   Ducasse S, 2009, SOFTW SYST MODEL, V8, P5, DOI 10.1007/s10270-008-0081-4
   Eclipse OCL Project, 2014, ECL OCL PROJ
   Pagán JE, 2014, INFORM SOFTWARE TECH, V56, P586, DOI 10.1016/j.infsof.2014.01.005
   Ferenc R, 2002, PROC IEEE INT CONF S, P172, DOI 10.1109/ICSM.2002.1167764
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   FrontEndART Software Ltd, 2014, SOURCEMETER MOD FAUL
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Ghamarian A., 2011, ELECT COMMUN EASST, V32
   Hajiyev E, 2006, LECT NOTES COMPUT SC, V4067, P2
   Hamann L, 2012, EUR CON SFTWR MTNCE, P549, DOI 10.1109/CSMR.2012.73
   Hearnden D, 2006, LECT NOTES COMPUT SC, V4199, P321
   Heidenreich F, 2010, LECT NOTES COMPUT SC, V5969, P374
   Horn T, 2011, ELECTRON PROC THEOR, P17, DOI 10.4204/EPTCS.74.3
   Horvath Akos, 2010, International Journal on Software Tools for Technology Transfer, V12, P211, DOI 10.1007/s10009-010-0149-7
   Izsó B, 2013, IEEE INT CONF AUTOM, P421, DOI 10.1109/ASE.2013.6693100
   Klint P., 2009, P 9 IEEE INT WORK C, P168, DOI DOI 10.1109/SCAM.2009.28
   Mens T, 2005, J SOFTW MAINT EVOL-R, V17, P247, DOI 10.1002/smr.316
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Nickel U., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P742, DOI 10.1109/ICSE.2000.870485
   Niere J., 2002, P 24 INT C SOFTW ENG, P348
   OMG, 2012, OBJ CONSTR LANG SPEC
   Perez Javier, 2010, International Journal on Software Tools for Technology Transfer, V12, P183, DOI 10.1007/s10009-010-0153-y
   PMD, 2014, PMD CHECK
   Schrettner Lajos., 2010, P 8 INT C PRINCIPLES, P148
   Seifert M., 2008, ELECT COMMUN EASST, V15
   Speicher D., 2007, P 1 WORKSH REF TOOLS, P17
   Szärnyas G, 2014, LECT NOTES COMPUT SC, V8767, P653, DOI 10.1007/978-3-319-11653-2_40
   Szoke G, 2014, IEEE INT WORK C SO, P95, DOI 10.1109/SCAM.2014.18
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   Ujhelyi Z, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P293, DOI 10.1109/CSMR-WCRE.2014.6747181
   Varro Gergely, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P224, DOI 10.1007/978-3-642-30476-7_15
   Vidács L, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P75, DOI 10.1109/CSMR.2004.1281408
   Vidacs Laszlo, 2009, Proceedings of the 4th International Conference on Software and Data Technologies, P232
NR 43
TC 10
Z9 11
U1 0
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2015
VL 65
BP 147
EP 165
DI 10.1016/j.infsof.2015.01.003
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CK3IP
UT WOS:000356110100010
OA Green Published
DA 2024-07-18
ER

PT J
AU Cardozo, N
   González, S
   Mens, K
   Van Der Straeten, R
   Vallejos, J
   D'Hondt, T
AF Cardozo, Nicolas
   Gonzalez, Sebastian
   Mens, Kim
   Van Der Straeten, Ragnhild
   Vallejos, Jorge
   D'Hondt, Theo
TI Semantics for consistent activation in context-oriented systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Context-oriented programming; Self-adaptiveness; Program semantics;
   Petri nets; Dynamic behavior adaptation
ID PETRI NETS
AB Context: Context-oriented programming languages provide dedicated programming abstractions to define behavioral adaptations and means to combine those adaptations dynamically according to sensed context changes. Some of these languages feature programming abstractions to explicitly define interaction dependencies among contexts. However, the semantics of context activation and the meaning of dependency relations have been described only informally, which in some cases has led to incorrect specifications, faulty implementations and inconsistent system behavior.
   Objective: With the aim of avoiding faulty implementations and inconsistencies during system execution, this paper proposes both a formal and run-time model of contexts, context activation and context interaction.
   Method: As a formal and computational basis, we introduce context Petri nets, a model based on Petri nets, which we found to match closely the structure of contexts in context-oriented systems. The operational semantics of Petri nets permits the modeling of run-time context activations. Existing Petri net analyses allow us to reason about system properties. As validation, we carried out small and medium-sized case studies.
   Results: In the cases explored, context Petri nets served effectively as underlying run-time model to ensure that declared context interaction constraints remain consistent during context manipulation. Moreover, context Petri nets enabled us to analyze certain properties regarding the activation state of particular contexts.
   Conclusion: Context Petri nets thus proved to be appropriate to encode and manage the semantics of context activation, both formally and computationally, so as to preserve the consistency of context-oriented systems. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Cardozo, Nicolas; Gonzalez, Sebastian; Mens, Kim] Catholic Univ Louvain, ICTEAM, B-1348 Louvain La Neuve, Belgium.
   [Cardozo, Nicolas; Van Der Straeten, Ragnhild; Vallejos, Jorge; D'Hondt, Theo] Vrije Univ Brussel, Software Languages Lab, B-1050 Brussels, Belgium.
C3 Universite Catholique Louvain; Vrije Universiteit Brussel
RP Cardozo, N (corresponding author), Catholic Univ Louvain, ICTEAM, Pl St Barbe 2, B-1348 Louvain La Neuve, Belgium.
EM cardozon@tcd.ie; s.gonzalez@uclouvain.be; kim.mens@uclouvain.be;
   rvdstrae@vub.ac.be; jvallejo@vub.ac.be; tjdhondt@vub.ac.be
OI Mens, Kim/0000-0003-0303-1630; Cardozo, Nicolas/0000-0002-1094-9952
FU ICT Impulse Programme of the Brussels Institute for Research and
   Innovation
FX This work has been supported by the ICT Impulse Programme of the
   Brussels Institute for Research and Innovation. We thank the anonymous
   reviewers for their comments on earlier versions of this paper.
CR Aotani Tomoyuki, 2011, P 3 CONT OR PROGR WO
   Bause F, 1996, ACTA INFORM, V33, P669, DOI 10.1007/s002360050065
   BERRY G, 1992, SCI COMPUT PROGRAM, V19, P87, DOI 10.1016/0167-6423(92)90005-V
   BEST E, 1992, THEOR COMPUT SCI, V96, P175, DOI 10.1016/0304-3975(92)90184-H
   Biberstein O., 1997, LECT NOTES COMPUTER, P73
   Busi N, 2002, THEOR COMPUT SCI, V275, P127, DOI 10.1016/S0304-3975(01)00127-X
   Cardoso N., 2012, 17th Conference on Emerging Technologies Factory Automation ETFA, P1
   Cardozo N., 2012, CEUR WORKSHOP P, V851, P156
   Cardozo N., 2013, THESIS U CATHOLIQUE
   Clarke D., 2009, International Workshop on Context-Oriented Programming, P1
   Costanza P., 2005, P DYN LANG S DLS 05, P1
   Costanza P., 2008, INT SOFTW PROD LIN C, P9
   Desmet B, 2007, LECT NOTES ARTIF INT, V4635, P178
   Eshuis R, 2003, LECT NOTES COMPUT SC, V2679, P296
   Fahland D., 2009, 7 INT C BUS PROC MAN, V5701, P278
   Gonzalez S., 2007, P DYN LANG S, P77
   GONZALEZ S, 2008, THESIS U CATHOLIQUE
   Gonzalez S., 2011, P INT C SOFTW LANG E
   Hinz S, 2005, LECT NOTES COMPUT SC, V3649, P220, DOI 10.1007/11538394_15
   Jensen K, 2009, COLOURED PETRI NETS: MODELLING AND VALIDATION OF CONCURRENT SYSTEMS, P1, DOI 10.1007/b95112
   Kamina T., 2012, P INT WORKSH CONT OR
   Kamina T., 2011, P 10 INT C ASP OR SO, P253, DOI DOI 10.1145/1960275.1960305
   Mazurkiewicz A., 1988, COMPOSITIONAL SEMANT, P307
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Muschevici R., 2010, SPLC WORKSH LANC U, V2, P99
   PETERSON JL, 1977, COMPUT SURV, V9, P223, DOI 10.1145/356698.356702
   Poncelet T., 2012, THESIS U CATHOLIQUE
   Reinhardt K, 2008, ELECTRON NOTES THEOR, V223, P239, DOI 10.1016/j.entcs.2008.12.042
   Salvaneschi G., 2012, J SYST SOFTW
   Salvaneschi G., 2012, J SYST SOFTW, V85
   Salvaneschi Guido, 2012, AOSD 12 P 11 ANN INT, P191, DOI [10.1145/2162049.2162072, DOI 10.1145/2162049.2162072]
   Schippers Hans, 2010, P 2 INT WORKSHOP CON, P1
   Schmidt K, 2000, LECT NOTES COMPUT SC, V1825, P465
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
NR 34
TC 7
Z9 7
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 71
EP 94
DI 10.1016/j.infsof.2014.10.002
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800005
DA 2024-07-18
ER

PT J
AU Parizi, RM
   Ghani, AAA
   Lee, SP
AF Parizi, Reza Meimandi
   Ghani, Abdul Azim Abdul
   Lee, Sai Peck
TI Automated test generation technique for aspectual features in AspectJ
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Automated test generation; Testing tool; AspectJ;
   Empirical study
ID ORIENTED APPROACH; SOFTWARE; MUTATION; TOOL; USAGE; AOP
AB Context: Aspect-oriented programming (AOP) has been promoted as a means for handling the modularization of software systems by raising the abstraction level and reducing the scattering and tangling of crosscutting concerns. Studies from literature have shown the usefulness and application of AOP across various fields of research and domains. Despite this, research shows that AOP is currently used in a cautious way due to its natural impact on testability and maintainability.
   Objective: To realize the benefits of AOP and to increase its adoption, aspects developed using AOP should be subjected to automated testing. Automated testing, as one of the most pressing needs of the software industry to reduce both effort and costs in assuring correctness, is a delicate issue in testing aspect-oriented programs that still requires advancement and has a way to go before maturity.
   Method: Previous attempts and studies in automated test generation process for aspect-oriented programs have been very limited. This paper proposes a rigorous automated test generation technique, called RAMBUTANS, with its tool support based on guided random testing for the AspectJ programs.
   Results: The paper reports the results of a thorough empirical study of 9 AspectJ benchmark programs, including non-trivial and larger software, by means of mutation analysis to compare RAMBUTANS and the four existing automated AOP testing approaches for testing aspects in terms of fault detection effectiveness and test effort efficiency. The results of the experiment and statistical tests supplemented by effect size measures presented evidence of the effectiveness and efficiency of the proposed technique at 99% confidence level (i.e. p < 0.01).
   Conclusion: The study showed that the resulting randomized tests were reasonably good for AOP testing, thus the proposed technique could be worth using as an effective and efficient AOP-specific automated test generation technique. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Parizi, Reza Meimandi] Taylors Univ, Sch Comp & IT, Subang Jaya 47500, Selangor, Malaysia.
   [Ghani, Abdul Azim Abdul] Univ Putra Malaysia, Fac Comp Sci & Informat Technol, Dept Software Engn & Informat Syst, Serdang 43400, Malaysia.
   [Lee, Sai Peck] Univ Malaya, Fac Comp Sci & Informat Technol, Dept Software Engn, Kuala Lumpur 50603, Malaysia.
C3 Taylor's University; Universiti Putra Malaysia; Universiti Malaya
RP Parizi, RM (corresponding author), Taylors Univ, Sch Comp & IT, Subang Jaya 47500, Selangor, Malaysia.
EM rezameimandi.parizi@taylors.edu.my; azim@upm.edu.my; saipeck@um.edu.my
RI Parizi, Reza/AAF-3813-2019; Lee, Sai Peck/B-8841-2010
OI Lee, Sai Peck/0000-0002-4551-430X
FU High Impact Research Grant - Ministry of Education, Malaysia
   [UM.C/625/1/HIR/MOHE/FCSIT/13]; Fundamental Research Grant
   [FRGS/212010/SG/UPM/01/2]
FX This work is carried out within the framework of the research project
   supported by High Impact Research Grant with reference
   UM.C/625/1/HIR/MOHE/FCSIT/13, funded by the Ministry of Education,
   Malaysia. A.A.A. Ghani's work is supported in part by Fundamental
   Research Grant FRGS/212010/SG/UPM/01/2.
CR Alexander R. T., CS41052003 COL STAT
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Amar B, 2010, IEEE INT ENTERP DIST, P143, DOI 10.1109/EDOC.2010.12
   Ammann Paul, 2008, Introduction to software testing, V1st
   Anbalagan Prasanth, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P239, DOI 10.1109/ISSRE.2008.58
   ANDREWS J.H., 2006, Proceedings of the 1st international workshop on Random testing, P36, DOI [10.1145/1145735.1145741, DOI 10.1145/1145735.1145741]
   Andrews JH, 2011, IEEE T SOFTWARE ENG, V37, P80, DOI 10.1109/TSE.2010.46
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], ASPECTJ DOCUMENTATIO
   [Anonymous], JBOSS FRAMEWORK
   [Anonymous], 1994, Encyclopedia of software Engineering
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   Babu C., 2009, ACM SIGSOFT SOFTWARE, V34, P1
   Baekken J.S., 2006, P 2 WORKSHOP TESTING, P1
   Bækken JS, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P169
   BAEKKEN JS, 2006, THESIS WASHINGTON ST
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   Ciupa I., 2008, THESIS ETH ZURICH SW
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   Claessen K, 2000, ACM SIGPLAN NOTICES, V35, P268, DOI 10.1145/357766.351266
   Cleland-Huang J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P39
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Delamare R, 2011, SOFTW TEST VERIF REL, V21, P215, DOI 10.1002/stvr.458
   Delamare R, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P376, DOI 10.1109/ICST.2009.41
   Delamare R, 2009, IEEE ICST WORKSHOP, P200, DOI 10.1109/ICSTW.2009.41
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Derderian K, 2004, LECT NOTES COMPUT SC, V3103, P1429
   Driver C, 2010, ACM T EMBED COMPUT S, V10, DOI 10.1145/1880050.1880057
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Ferrari F., 2010, P 32 ACMIEEE INT C S, V1, P65
   Ferrari F. C., 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P50, DOI 10.1109/SBES.2010.11
   Ferrari Fabiano Cutigi, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P52, DOI 10.1109/ICST.2008.37
   Ferrari FC, 2013, SCI COMPUT PROGRAM, V78, P1639, DOI 10.1016/j.scico.2013.02.011
   Ferrari Fabiano Cutigi., 2010, Proceedings of the 5th Workshop on Automation of Software Test, AST '10, P51
   Filman RobertE., 2005, ASPECT ORIENTED SOFT, P21
   Garcia A., 2006, ACM SIGSOFT SOFTWARE, V31
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Harman M, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P185
   Hassoun Y., 2004, P 8 EUR WORK C SOFTW
   Hoffman K., 2008, P 30 INT C SOFTW ENG
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jixin Geng, 2010, Proceedings of the 2010 International Conference on Educational and Information Technology (ICEIT 2010), P298, DOI 10.1109/ICEIT.2010.5607704
   Johnson R., 2007, SPRING JAVA J2EE APP
   Jorgensen M, 2011, IEEE T SOFTWARE ENG, V37, P695, DOI 10.1109/TSE.2010.78
   Kallel S, 2007, LECT NOTES COMPUT SC, V4467, P211
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   KICZALES G, 2002, Patent No. 6467086
   KICZALES G, 1996, ACM COMPUTING SURVEY, V28
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kumar N, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P197
   Laddad R., 2003, ASPECTJ ACTION PRACT
   Lemos OAL, 2011, INFORM SCIENCES, V181, P2721, DOI 10.1016/j.ins.2010.06.003
   Leavens GaryT., 1998, PRELIMINARY DESIGN J
   Lee JS, 2004, INFORM SOFTWARE TECH, V46, P81, DOI 10.1016/S0950-5849(03)00111-3
   Lemos O.A. L., 2006, P 2 WORKSHOP TESTING, P33
   Lin Y, 2009, IEEE INT CONF AUTOM, P221, DOI 10.1109/ASE.2009.13
   Linehan E, 2012, J SYST ARCHITECT, V58, P195, DOI 10.1016/j.sysarc.2011.02.001
   Lopez-Martinez C., 2005, Part I - Tutorial on Radar Polarimetry, P1
   McEachen N., 2005, P 4 INT C ASPECT ORI, P192
   McMinn P, 2012, IEEE T SOFTWARE ENG, V38, P453, DOI 10.1109/TSE.2011.18
   Metsa J., 2013, SOFTW QUAL J, P1
   Meyer B, 2007, LECT NOTES COMPUT SC, V4362, P114
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Munoz F, 2013, INFORM SOFTWARE TECH, V55, P252, DOI 10.1016/j.infsof.2012.08.003
   Munoz F, 2009, PROC IEEE INT CONF S, P137, DOI 10.1109/ICSM.2009.5306300
   Nakagawa EY, 2011, J SYST SOFTWARE, V84, P1670, DOI 10.1016/j.jss.2011.04.052
   Offutt A.J., 1996, SUBSUMPTION CONDITIO, P10
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   Offutt J, 2011, INFORM SOFTWARE TECH, V53, P1098, DOI 10.1016/j.infsof.2011.03.007
   Oriat C, 2005, LECT NOTES COMPUT SC, V3712, P242
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Parasoft Jtest, PARASOFT JTEST
   Parizi R.M., 2010, P ANN INT C SOFTW EN
   Parizi RM, 2011, INFORM SOFTWARE TECH, V53, P1062, DOI 10.1016/j.infsof.2011.05.004
   Rashid A, 2010, COMPUTER, V43, P19, DOI 10.1109/MC.2010.30
   Sinha A, 2006, EMPIR SOFTW ENG, V11, P173, DOI 10.1007/s10664-006-6401-9
   Soares S, 2006, SOFTWARE PRACT EXPER, V36, P711, DOI 10.1002/spe.715
   Steimann F, 2006, ACM SIGPLAN NOTICES, V41, P481, DOI 10.1145/1167515.1167514
   Stoerzer M, 2005, PROC IEEE INT CONF S, P653
   Stoiber R., 2007, P 2 INT WORKSH REQ E, P1
   The AspectJ Team, 2012, ASPECTJ PROGR GUID
   TSOUKALAS MZ, 1993, IEEE T SOFTWARE ENG, V19, P687, DOI 10.1109/32.238569
   Voelter M, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P233, DOI 10.1109/SPLINE.2007.23
   Wang Y, 2007, P INT COMP SOFTW APP, P5
   WAPPLER S, 2008, THESIS TU BERLIN
   Wedyan F, 2012, INFORM SOFTWARE TECH, V54, P900, DOI 10.1016/j.infsof.2011.12.001
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Xie T, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P196
   Xie T., 2005, P 1 WORKSH TEST ASP, P1
   Xie T., 2006, AOSD '06, P190
   Xie T, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P179
   Yamada K, 2006, ELECTRON NOTES THEOR, V163, P45, DOI 10.1016/j.entcs.2006.07.002
   Yamamoto Y, 2005, P AS PAC MICR C P DE, P1
   Yoonsik Cheon, 2007, 2007 International Conference on Software Engineering Theory and Practice (SEPT-07), P112
   Zhang S, 2007, P INT COMP SOFTW APP, P431
   Zhang Sai., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, P353, DOI 10.1145/2001420.2001463
   Zhao JJ, 2003, LECT NOTES COMPUT SC, V2621, P150
NR 100
TC 4
Z9 5
U1 0
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 463
EP 493
DI 10.1016/j.infsof.2014.05.020
PG 31
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500027
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Zamani, S
   Lee, SP
   Shokripour, R
   Anvik, J
AF Zamani, Sima
   Lee, Sai Peck
   Shokripour, Rarnin
   Anvik, John
TI A noun-based approach to feature location using time-aware
   term-weighting
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Feature location; Software change request; Time-metadata;
   Term-weighting; Noun usage
ID INFORMATION-RETRIEVAL; SOURCE CODE; EXECUTION
AB Context: Feature location aims to identify the source code location corresponding to the implementation of a software feature. Many existing feature location methods apply text retrieval to determine the relevancy of the features to the text data extracted from the software repositories. One of the preprocessing activities in text retrieval is term-weighting, which is used to adjust the importance of a term within a document or corpus. Common term-weighting techniques may not be optimal to deal with text data from software repositories due to the origin of term-weighting techniques from a natural language context.
   Objective: This paper describes how the consideration of when the terms were used in the repositories, under the condition of weighting only the noun terms, can improve a feature location approach.
   Method: We propose a feature location approach using a new term-weighting technique that takes into account how recently a term has been used in the repositories. In this approach, only the noun terms are weighted to reduce the dataset volume and avoid dealing with dimensionality reduction.
   Results: An empirical evaluation of the approach on four open-source projects reveals improvements to the accuracy, effectiveness and performance up to 50%, 17%, and 13%, respectively, when compared to the commonly-used Vector Space Model approach. The comparison of the proposed term-weighting technique with the Term Frequency-Inverse Document Frequency technique shows accuracy, effectiveness, and performance improvements as much as 15%, 10%, and 40%, respectively. The investigation of using only noun terms, instead of using all terms, in the proposed approach also indicates improvements up to 28%, 21%, and 58% on accuracy, effectiveness, and performance, respectively.
   Conclusion: In general, the use of time in the weighting of terms, along with the use of only the noun terms, makes significant improvements to a feature location approach that relies on textual information. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Zamani, Sima; Lee, Sai Peck; Shokripour, Rarnin] Univ Malaya, Fac Comp Sci & Informat Technol, Kuala Lumpur, Malaysia.
   [Anvik, John] Cent Washington Univ, Dept Comp Sci, Ellensburg, WA USA.
C3 Universiti Malaya; Central Washington University
RP Zamani, S (corresponding author), Univ Malaya, Fac Comp Sci & Informat Technol, Kuala Lumpur, Malaysia.
EM s.zamani@siswa.um.edu.my
RI Anvik, John/AAO-5290-2020; Lee, Sai Peck/B-8841-2010
OI Anvik, John/0000-0002-6912-1754; Lee, Sai Peck/0000-0002-4551-430X
FU High Impact Research Grant - Ministry of Education, Malaysia
   [UM.C/625/1/HIR/MOHE/FCSIT/13]
FX This work was carried out within the framework of a research project
   supported by the High Impact Research Grant with reference
   UM.C/625/1/HIR/MOHE/FCSIT/13, funded by the Ministry of Education,
   Malaysia. We would like to thank Reza M. Parizi for his helpful comments
   on improving the earlier versions of this paper; and the TraceLab
   Team<SUP>19</SUP> for their support in using their framework.
CR Abebe Surafel Lemma, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P156, DOI 10.1109/ICPC.2010.29
   [Anonymous], 2012, Dimensionality reduction and topic modeling: From latent semantic indexing to latent dirichlet allocation and beyond, DOI [DOI 10.1007/978-1-4614-3223-4_5, 10.1007/978-1-4614-3223-4_52,4, DOI 10.1007/978-1-4614-3223-4_52,4]
   [Anonymous], 2008, INTRO INFORM RETRIEV, DOI DOI 10.1017/CBO9780511809071
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bassett B., 2013, P 35 ACM IEEE INT C
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Biggers L, 2012, EMPIR SOFTW ENG, P1
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Briand LC, 2009, INFORM SOFTWARE TECH, V51, P512, DOI 10.1016/j.infsof.2008.06.002
   Butler S, 2011, LECT NOTES COMPUT SC, V6813, P130, DOI 10.1007/978-3-642-22655-7_7
   Capobianco G, 2013, J SOFTW-EVOL PROC, V25, P743, DOI 10.1002/smr.1564
   Capobianco G, 2009, INT C PROGRAM COMPRE, P148, DOI 10.1109/ICPC.2009.5090038
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   Cleary B, 2009, EMPIR SOFTW ENG, V14, P93, DOI 10.1007/s10664-008-9095-3
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Corley C.S., 2011, P 6 INT WORKSHOP TRA, P31
   Cunningham H, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P168
   Dias Jr L.D., 2012, INT J SOFTW ENG APPL, V3
   Dit B., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P203
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dit B, 2013, EMPIR SOFTW ENG, V18, P277, DOI 10.1007/s10664-011-9194-4
   Eisenberg AD, 2005, PROC IEEE INT CONF S, P337
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   Gómez VU, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P79
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Hill E, 2009, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2009.5070524
   Kagdi H, 2012, J SOFTW-EVOL PROC, V24, P3, DOI 10.1002/smr.530
   Kagdi H, 2007, INT C PROGRAM COMPRE, P145
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Mader Patrick, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P49, DOI 10.1109/ASE.2008.15
   Mäder P, 2012, J SYST SOFTWARE, V85, P2205, DOI 10.1016/j.jss.2011.10.023
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Marcus A., 2013, Software Engineering: International Summer Schools, ISSSE 2009-2011, Salerno, Italy. Revised Tutorial Lectures, V7171, P126
   Omoronyia I, 2011, INFORM SOFTWARE TECH, V53, P851, DOI 10.1016/j.infsof.2011.03.001
   Petrenko M, 2013, INFORM SOFTWARE TECH, V55, P651, DOI 10.1016/j.infsof.2012.09.013
   Petrenko M, 2008, INT C PROGRAM COMPRE, P13, DOI 10.1109/ICPC.2008.14
   POSHYVANYK D, 2006, 14 IEEE INT C PROGR
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Ratanotayanon S., 2010, ASE, P341
   Ratiu D, 2007, INT C PROGRAM COMPRE, P91
   Romano J., 2006, ANN M FLORIDA ASS IN
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   Sarawagi S, 2007, FOUND TRENDS DATABAS, V1, P261, DOI 10.1561/1500000003
   Shepherd David, 2007, P 6 INT C ASP OR SOF, P212
   Shokripour R, 2013, IEEE WORK CONF MIN S, P2, DOI 10.1109/MSR.2013.6623997
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Sisman B., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P50, DOI 10.1109/MSR.2012.6224299
   Voinea L., 2006, MSR 06 P 2006 INT WO, P33
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   Wohlin C., 2012, Experimentation in Software Engineering
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 60
TC 23
Z9 26
U1 0
U2 15
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2014
VL 56
IS 8
BP 991
EP 1011
DI 10.1016/j.infsof.2014.03.007
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AI9OL
UT WOS:000337261800010
DA 2024-07-18
ER

PT J
AU Elberzhager, F
   Münch, J
   Assrnann, D
AF Elberzhager, Frank
   Munch, Jurgen
   Assrnann, Danilo
TI Analyzing the relationships between inspections and testing to provide a
   software testing focus
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Inspection; Testing; Integration; F-measure; Case study
AB Context: Quality assurance effort, especially testing effort, is frequently a major cost factor during software development. Consequently, one major goal is often to reduce testing effort. One promising way to improve the effectiveness and efficiency of software quality assurance is the use of data from early defect detection activities to provide a software testing focus. Studies indicate that using a combination of early defect data and other product data to focus testing activities outperforms the use of other product data only. One of the key challenges is that the use of data from early defect detection activities (such as inspections) to focus testing requires a thorough understanding of the relationships between these early defect detection activities and testing. An aggravating factor is that these relationships are highly context-specific and need to be evaluated for concrete environments.
   Objective: The underlying goal of this paper is to help companies get a better understanding of these relationships for their own environment, and to provide them with a methodology for finding relationships in their own environments. Method: This article compares three different strategies for evaluating assumed relationships between inspections and testing. We compare a confidence counter, different quality classes, and the F-measure including precision and recall.
   Results: One result of this case-study-based comparison is that evaluations based on the aggregated Fmeasures are more suitable for industry environments than evaluations based on a confidence counter. Moreover, they provide more detailed insights about the validity of the relationships.
   Conclusion: We have confirmed that inspection results are suitable data for controlling testing activities. Evaluated knowledge about relationships between inspections and testing can be used in the integrated inspection and testing approach In(2)Test to focus testing activities. Product data can be used in addition. However, the assumptions have to be evaluated in each new context. (C) 2014 Elsevier B.V. All rights reserved,
C1 [Elberzhager, Frank] Fraunhofer Inst Expt Software Engn IESE, D-67663 Kaiserslautern, Germany.
   [Munch, Jurgen] Univ Helsinki, FIN-00014 Helsinki, Finland.
   [Assrnann, Danilo] Vector Informat GmbH, D-70499 Stuttgart, Germany.
C3 Fraunhofer Gesellschaft; University of Helsinki
RP Elberzhager, F (corresponding author), Fraunhofer Inst Expt Software Engn IESE, Fraunhofer Pl 1, D-67663 Kaiserslautern, Germany.
EM frank.elberzhager@iese.fraunhofer.de; juergen.muench@cs.helsinki.fi;
   danilo.assmann@vector.com
RI Münch, Jürgen/ABC-2316-2020
OI Münch, Jürgen/0000-0003-0327-8094
FU Stiftung RheinlandPfalz fur Innovation Project "Qua litats-KIT" [925];
   ARTEMIS Project "MBAT" [269335]
FX Parts of this work have been funded by the Stiftung RheinlandPfalz fur
   Innovation Project "Qua litats-KIT" (Grant: 925) and the ARTEMIS Project
   "MBAT" (Grant: 269335). We would also like to thank Sonnhild Namingha
   for proofreading.
CR [Anonymous], 2000, P C FUT SOFTW ENG IC, DOI DOI 10.1145/336512.336532
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Aurum A, 2002, SOFTW TEST VERIF REL, V12, P133, DOI 10.1002/stvr.243
   BARNARD J, 1994, IEEE SOFTWARE, V11, P59, DOI 10.1109/52.268958
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   El Emam K, 2000, J SYST SOFTWARE, V54, P119, DOI 10.1016/S0164-1212(00)00032-7
   Elberzhager F., 2011, Proceedings of the 2011 International Conference on on Software and Systems Process (ICSSP '11), P3, DOI DOI 10.1145/1987875.1987880
   Elberzhager F., 2010, 21 INT S SOFTW REL E, P263
   Elberzhager F, 2012, EUROMICRO CONF PROC, P406, DOI 10.1109/SEAA.2012.30
   Elberzhager F, 2012, INFORM SOFTWARE TECH, V54, P1092, DOI 10.1016/j.infsof.2012.04.007
   Elberzhager F, 2012, INFORM SOFTWARE TECH, V54, P1, DOI 10.1016/j.infsof.2011.06.003
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fenton N, 2007, INFORM SOFTWARE TECH, V49, P32, DOI 10.1016/j.infsof.2006.09.001
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hamill M, 2009, IEEE T SOFTWARE ENG, V35, P484, DOI 10.1109/TSE.2009.3
   Juristo N, 2006, IEEE SOFTWARE, V23, P19, DOI 10.1109/MS.2006.104
   Karolak D.W., 1996, SOFTWARE ENG RISK MA
   Klas M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P119, DOI 10.1145/1810295.1810313
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nasser Valeh H., 2009, Proceedings 21st International Conference on Software Engineering & Knowledge Engineering (SEKE 2009), P312
   Pressman R., 2009, Software Engineering: A Practitioner's Approach, V7th
   Prowell S.J., 1999, SEI S SOFTW
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
NR 23
TC 4
Z9 5
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2014
VL 56
IS 7
BP 793
EP 806
DI 10.1016/j.infsof.2014.02.007
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH3FW
UT WOS:000336010100006
DA 2024-07-18
ER

PT J
AU Bae, JH
   Chae, HS
   Chang, CK
AF Bae, Jung Ho
   Chae, Heung Seok
   Chang, Carl K.
TI A metric towards evaluating understandability of state machines: An
   empirical study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Metrics/measurement; State machines; Understandability
AB Context: State machines are widely used to describe the dynamic behavior of objects, components, and systems. As a communication tool between various stakeholders, it is essential that state machines be easily and correctly comprehensible. Poorly understood state machines can lead to misunderstandings and communication overhead, thus adversely affecting the quality of the final product. Nevertheless, there is a lack of measurement research for state machines.
   Objective: In this paper, we propose a metric, called SUM, to evaluate the understandability of state machines. SUM is defined on the basis of cohesion and coupling concepts.
   Method: To validate SUM as a state machine understandability indicator, we performed an empirical study using five systems. We constructed five different state machines for each system, resulting in a total of 25 state machines being prepared. Two aspects of understandability, efficiency (UEff) and correctness (UCor), were obtained from 40 participants for the state machines. We then performed correlation and consistency analyses between the SUMs and the measured understandability values.
   Results: The results of the correlation analysis indicated that SUM was significantly correlated with UEff (p = 0.003) and UCor (p = 0.027). The consistency analysis results indicated that SUM was positively correlated with UEff in four of the systems and UCor in all five systems.
   Conclusion: These results confirm the possibility that SUM can be a useful understandability indicator for SMs. We believe that the proposed metric can be used as a guideline to construct quality state machines. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Bae, Jung Ho; Chae, Heung Seok] Pusan Natl Univ, Dept Comp Sci & Engn, Pusan, South Korea.
   [Chang, Carl K.] Iowa State Univ, Dept Comp Sci, Ames, IA USA.
C3 Pusan National University; Iowa State University
RP Chae, HS (corresponding author), Pusan Natl Univ, Dept Comp Sci & Engn, Pusan, South Korea.
EM jhbae83@pusan.ac.kr; hschae@pusan.ac.kr; chang@iastate.edu
OI , Heung-Seok/0000-0002-6644-9500
FU National Research Foundation of Korea; Korean Government
   [NRF-2010-013-D00065]
FX This work was supported by the National Research Foundation of Korea
   Grant funded by the Korean Government (NRF-2010-013-D00065).
CR [Anonymous], APPL MULTIPLE REGRES
   [Anonymous], 1994, TECHNICAL REPORT
   Cruz-Lemus JA, 2005, METRICS FOR SOFTWARE CONCEPTUAL MODELS, P237, DOI 10.1142/9781860946066_0007
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Bae J.H., 2012, TECHNICAL REPORT
   Basili V.R., 1992, Software Modeling and Measurement: The Goal/Question/Metric Paradigm
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BASILI VR, 1990, IEEE SOFTWARE, V7, P19, DOI 10.1109/52.43045
   Beckert B., 1998, KEY APPROACH
   Binder R.V., 2000, AW OBJ TECHNOL S
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Boger M., 2002, P INT C EXTR PROGR F, P77
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Budd T.A., 1990, INTRO OBJECT ORIENTE
   Carrington D, 2000, SOFTW TEST VERIF REL, V10, P111, DOI 10.1002/1099-1689(200006)10:2<111::AID-STVR204>3.0.CO;2-P
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P439, DOI 10.1109/ICSE.2000.870434
   CORBI TA, 1989, IBM SYST J, V28, P294, DOI 10.1147/sj.282.0294
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Cruz-Lemus JA, 2005, LECT NOTES COMPUT SC, V3713, P113, DOI 10.1007/11557432_9
   Cruz-Lemus JA, 2011, INFORM SOFTWARE TECH, V53, P1391, DOI 10.1016/j.infsof.2011.07.002
   Cruz-Lemus JA, 2010, INFORM SCIENCES, V180, P2209, DOI 10.1016/j.ins.2010.01.026
   De Lucia A, 2010, EMPIR SOFTW ENG, V15, P455, DOI 10.1007/s10664-009-9127-7
   Derr K.W., 1995, APPL OMT PRACTICAL S
   Derrick J, 2008, LECT NOTES COMPUT SC, V5238, P280
   Dick J., 1993, FME'93: Industrial-Strength Formal Methods. First International Symposium of Formal Methods Europe Proceedings, P268, DOI 10.1007/BFb0024651
   Eichelberger H, 2009, INFORM SOFTWARE TECH, V51, P1686, DOI 10.1016/j.infsof.2009.04.008
   Endres A., 1975, SIGPLAN Notices, V10, P327, DOI 10.1145/390016.808455
   Fjeldstad R.K., 1979, P GUIDE, V48
   Genero M., 2002, P 6 ECOOP WORKSH QUA
   Gomaa H., 2004, Designing Software Product Lines with UML: From Use Cases to PatternBased Software Architectures
   HendersonSellers B, 1996, OBJECT ORIENTED SYST, V3, P143
   Hierons R. M., 1997, Software Testing, Verification and Reliability, V7, P19, DOI 10.1002/(SICI)1099-1689(199703)7:1<19::AID-STVR124>3.0.CO;2-N
   Hitz M., 1995, PROC INT S APPL CORP
   Holt R., 1987, Empirical studies of programmers, P33
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Jung Ho Bae, 2009, 2009 16th Annual IEEE International Conference and Workshop on the Engineering of Computer Based Systems (ECBS 2009), P323, DOI 10.1109/ECBS.2009.36
   King P., 2000, P 25 UK PERF ENG WOR
   Knor R., 1998, Development and Evolution of Software Architectures for Product Families. Second International ESPRIT ARES Workshop Proceedings, P97
   Lam VSW, 2004, 11TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P337, DOI 10.1109/ECBS.2004.1316717
   Lemon Krystle, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P156
   Ma YL, 2010, J SYST SOFTWARE, V83, P143, DOI 10.1016/j.jss.2009.07.047
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Meyer B., 1988, Object-Oriented Software Construction
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Mouchawrab S, 2011, IEEE T SOFTWARE ENG, V37, P161, DOI 10.1109/TSE.2010.32
   NAGELKERKE NJD, 1991, BIOMETRIKA, V78, P691, DOI 10.1093/biomet/78.3.691
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   Nugroho A, 2009, INFORM SOFTWARE TECH, V51, P1670, DOI 10.1016/j.infsof.2009.04.007
   OMG, 2003, Tech. rep. ptc/03-08-02
   Pearson ES, 1931, J AM STAT ASSOC, V26, P128, DOI 10.2307/2277761
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Smith G., 1997, P FME 97 IND BEN FOR
   Sun J, 2005, IEEE INT C ENG COMP, P96
   Sun J, 2006, IEEE T SOFTWARE ENG, V32, P349, DOI 10.1109/TSE.2006.55
   WEST CH, 1978, IEEE T COMMUN, V26, P1271, DOI 10.1109/TCOM.1978.1094201
   Wohlin C., 2012, Experimentation in Software Engineering
NR 59
TC 1
Z9 1
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2013
VL 55
IS 12
BP 2172
EP 2190
DI 10.1016/j.infsof.2013.07.011
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 242QW
UT WOS:000326258100007
DA 2024-07-18
ER

PT J
AU Shar, LK
   Tan, HBK
AF Shar, Lwin Khin
   Tan, Hee Beng Kuan
TI Predicting SQL injection and cross site scripting vulnerabilities
   through mining input sanitization patterns
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Vulnerability prediction; Data mining; Web application vulnerability;
   Input sanitization; Static code attributes; Empirical study
ID DEFECT PREDICTION; SOFTWARE; METRICS
AB Context: SQL injection (SQLI) and cross site scripting (XSS) are the two most common and serious web application vulnerabilities for the past decade. To mitigate these two security threats, many vulnerability detection approaches based on static and dynamic taint analysis techniques have been proposed. Alternatively, there are also vulnerability prediction approaches based on machine learning techniques, which showed that static code attributes such as code complexity measures are cheap and useful predictors. However, current prediction approaches target general vulnerabilities. And most of these approaches locate vulnerable code only at software component or file levels. Some approaches also involve process attributes that are often difficult to measure.
   Objective: This paper aims to provide an alternative or complementary solution to existing taint analyzers by proposing static code attributes that can be used to predict specific program statements, rather than software components, which are likely to be vulnerable to SQLI or XSS.
   Method: From the observations of input sanitization code that are commonly implemented in web applications to avoid SQLI and XSS vulnerabilities, in this paper, we propose a set of static code attributes that characterize such code patterns. We then build vulnerability prediction models from the historical information that reflect proposed static attributes and known vulnerability data to predict SQLI and XSS vulnerabilities.
   Results: We developed a prototype tool called PhpMinerI for data collection and used it to evaluate our models on eight open source web applications. Our best model achieved an averaged result of 93% recall and 11% false alarm rate in predicting SQLI vulnerabilities, and 78% recall and 6% false alarm rate in predicting XSS vulnerabilities.
   Conclusion: The experiment results show that our proposed vulnerability predictors are useful and effective at predicting SQLI and XSS vulnerabilities. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Shar, Lwin Khin; Tan, Hee Beng Kuan] Nanyang Technol Univ, Sch Elect & Elect Engn, Singapore 639798, Singapore.
C3 Nanyang Technological University
RP Shar, LK (corresponding author), Nanyang Technol Univ, Sch Elect & Elect Engn, Block S2,Nanyang Ave, Singapore 639798, Singapore.
EM shar0035@ntu.edu.sg; ibktan@ntu.edu.sg
OI Shar, Lwin Khin/0000-0001-5130-0407
CR Alpaydin E, 2004, INTRO MACHINE LEARNI
   Anley C., 2002, ADV SQL INJECTION SQ
   [Anonymous], 2005, Data mining: Practical machine learning tools and techniques
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   FAGERLAND MW, CONT CLIN TRIALS, V30
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Fisher Douglas., 1992, Proceedings of the ninth international workshop on Machine learning, P163
   FOGIE S, 2007, XSS EXPLOITS CROSS S, P395
   Gao KH, 2011, SOFTWARE PRACT EXPER, V41, P579, DOI 10.1002/spe.1043
   Gegick Michael., 2008, QOP 08, P31, DOI DOI 10.1145/1456362.1456370
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Jovanovic N, 2006, P IEEE S SECUR PRIV, P258, DOI 10.1109/SP.2006.29
   Kiezun A., 2009, PROC INT S SOFTWARE, P105
   Kiezun A, 2009, PROC INT CONF SOFTW, P199, DOI 10.1109/ICSE.2009.5070521
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Livshits VB, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P271
   Martin M.C., 2008, USENIX SECURITY S, P31
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mende Thilo., 2010, P 6 INT C PREDICTIVE, P5
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   SCHNEIDEWIND NF, 1992, IEEE T SOFTWARE ENG, V18, P410, DOI 10.1109/32.135774
   Sen K, 2006, LECT NOTES COMPUT SC, V4144, P419
   SHAR LK, P 35 INT C SOFTW ENG
   Shar LK, 2012, PROC INT CONF SOFTW, P1293, DOI 10.1109/ICSE.2012.6227096
   Shar LK, 2012, INFORM SOFTWARE TECH, V54, P467, DOI 10.1016/j.infsof.2011.12.006
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Thomas S, 2009, INFORM SOFTWARE TECH, V51, P589, DOI 10.1016/j.infsof.2008.08.002
   Tosun A., 2009, P 5 INT C PRED MOD S, P1, DOI DOI 10.1145/1540438.1540446
   Tosun A., 2010, P 22 INN APPL ART IN
   Walden J, 2009, INT SYMP EMP SOFTWAR, P546
   Wassermann G., 2008, P 2008 INT S SOFTW T, P249, DOI DOI 10.1145/1390630.1390661
   Xie YC, 2006, USENIX Association Proceedings of the 15th USENIX Security Symposium, P179
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 39
TC 55
Z9 60
U1 2
U2 67
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2013
VL 55
IS 10
BP 1767
EP 1780
DI 10.1016/j.infsof.2013.04.002
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 203MT
UT WOS:000323298000007
OA Green Published
DA 2024-07-18
ER

PT J
AU Hanenberg, S
   Endrikat, S
AF Hanenberg, Stefan
   Endrikat, Stefan
TI Aspect-orientation is a rewarding investment into future code changes -
   As long as the aspects hardly change
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT IEEE 19th International Conference on Program Comprehension (ICPC)
CY JUN 22-24, 2011
CL Kingston, CANADA
SP IEEE, Queens Univ, RIM, Comp Associates, Univ Saskatchewan, Reverse engn Forum
DE Aspect-oriented programming; Development time; Empirical study;
   Maintenance; Human-factors
ID IMPACT; EXPERIMENTATION
AB Context: Aspect-Oriented Programming (AOP) is often described as a technique which improves the resulting software's modularity. However, previous experiments seem to indicate that AOP is a technique which potentially increases the development or maintenance time. A possible reason why previous experiments were not able to show such a benefit is that those experiments did not consider situations where AOP has its strength: situations where aspects change.
   Objectives: Our objective is to analyze whether initial higher development times caused by aspect-oriented programming can be compensated by frequent changes on the aspect code.
   Method: This study is an empirical study with 15 subjects based on a within-subject design (repeated measurement) using two randomized groups. The measurement is development time until programming tasks completion. Additionally, an exploratory study is performed which analyzed (a) in separation out- and under-performing subjects with respect to development time, (b) the possible influence of the lines of code, (c) the possible influence of the number of advice and pointcuts, and finally (d) the possible impact of if-statements in the aspect-oriented solutions.
   Results: The experiment shows that frequent changes in the crosscutting code which do not change the aspect's underlying structure compensate an initial higher development time for those concerns. But it also shows that changes, which do alter the concern's structure again, result in higher development times when using AOP. Furthermore, the paper shows that the results are similar for out- and under-performing subjects in the experiment. Finally it shows that if changes are required in an aspect's structure, subjects tend to perform such structural changes in a non-uniform way.
   Conclusion: AOP is a potential rewarding investment into future code changes - but it has risks. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Hanenberg, Stefan; Endrikat, Stefan] Univ Duisburg Essen, Dept Comp Sci & Business Informat Syst, D-45127 Essen, Germany.
C3 University of Duisburg Essen
RP Hanenberg, S (corresponding author), Univ Duisburg Essen, Dept Comp Sci & Business Informat Syst, D-45127 Essen, Germany.
EM stefan.hanenberg@icb.uni-due.de; stefan.endrikat@stud.uni-due.de
CR [Anonymous], 1983, SOFTWARE PRODUCTIVIT
   [Anonymous], 3 SWED C SOFTW ENG R
   [Anonymous], 1980, Winthrop computer systems series
   Bartsch M, 2008, SOFTWARE QUAL J, V16, P23, DOI 10.1007/s11219-007-9022-7
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Basili VR, 1996, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.1996.493439
   Boehm BW., 1981, Software Engineering Economics
   Bortz J., 2005, Statistik fur Human- und Sozialwissenschaftler
   BROOKS RE, 1980, COMMUN ACM, V23, P207, DOI 10.1145/358841.358847
   Burrows R, 2011, CONF PROC INT SYMP C, P131, DOI 10.1109/ICPC.2011.30
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Carver JC, 2011, 2011 24TH IEEE-CS CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING (CSEET), P169, DOI 10.1109/CSEET.2011.5876084
   CLEMENT A, 2003, ECOOP WORKSH AN ASP
   Coelho R, 2008, LECT NOTES COMPUT SC, V5142, P207, DOI 10.1007/978-3-540-70592-5_10
   Endrikat S, 2011, CONF PROC INT SYMP C, P51, DOI 10.1109/ICPC.2011.46
   Feigenspan J., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P73
   FILMAN R, 2005, ASPECT ORIENTED SOFT
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Greenwood P, 2007, LECT NOTES COMPUT SC, V4609, P176
   Gybels Kris., 2003, P 2 INT C ASPECT ORI, P60
   HANENBERG S., 2011, 2 WORKSH EMP EV SOFT
   Hanenberg S, 2010, ACM SIGPLAN NOTICES, V45, P933, DOI 10.1145/1932682.1869536
   Hanenberg S, 2009, INT SYMP EMP SOFTWAR, P156, DOI 10.1109/ESEM.2009.5316028
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Hovsepyan A., 2010, P 9 INT C ASP OR SOF, P85
   Hovsepyan A, 2011, INT SYMP EMP SOFTWAR, P315, DOI 10.1109/ESEM.2011.40
   Josupeit-Walter M., 2010, WORKSH EMP EV SOFTW
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales Gregor., 2001, Proceedings of the 15th European Conference on Object-Oriented Programming, P327
   Kitchenham B., 2006, INT S EMPIRICAL SOFT, P38, DOI DOI 10.1145/1159733.1159742
   Kleinschmager S., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P153
   Kleinschmager S., 2011, Proceedings of the 3rd ACM SIGPLAN Workshop on Evaluation and Usability of Programming Languages and Tools, P15, DOI [10.1145/2089155, DOI 10.1145/2089155]
   Laddad R., 2003, ASPECTJ ACTION PRACT
   Madeyski L, 2007, IET SOFTW, V1, P180, DOI 10.1049/iet-sen:20060071
   McConnell Steve., 2010, Making Software: What Really Works, and Why We Believe It, P567
   Prechelt L., 2001, KONTROLLIERTE EXPT S
   Runeson P, 2003, P 7 INT C EMP ASS EV
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Steimann F, 2006, ACM SIGPLAN NOTICES, V41, P481, DOI 10.1145/1167515.1167514
   Stein D, 2011, CONF PROC INT SYMP C, P141, DOI 10.1109/ICPC.2011.9
   Stuchlik A, 2012, ACM SIGPLAN NOTICES, V47, P97, DOI 10.1145/2168696.2047861
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Tichy WF, 1998, COMPUTER, V31, P32, DOI 10.1109/2.675631
   TICHY WF, 1995, J SYST SOFTWARE, V28, P9, DOI 10.1016/0164-1212(94)00111-Y
   Tonella P, 2005, IEEE T SOFTWARE ENG, V31, P819, DOI 10.1109/TSE.2005.115
   Walker R. J., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P120, DOI 10.1109/ICSE.1999.841001
   Walsh W.B., 1995, TESTS ASSESSMENT
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
NR 51
TC 3
Z9 3
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2013
VL 55
IS 4
BP 722
EP 740
DI 10.1016/j.infsof.2012.09.005
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 111NE
UT WOS:000316527200007
DA 2024-07-18
ER

PT J
AU Ahmed, MA
   Ahmad, I
   AlGhamdi, JS
AF Ahmed, Moataz A.
   Ahmad, Irfan
   AlGhamdi, Jarallah S.
TI Probabilistic size proxy for software effort prediction: A framework
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Effort prediction; Size proxy; Probabilistic error; Uncertainty
ID FUNCTION-POINT ANALYSIS; MODEL
AB Software effort prediction is an important and challenging activity that takes place during the early stages of software development, where costing is needed. Software size estimate is one of the most popular inputs for software effort prediction models. Accordingly, providing a size estimate with good accuracy early in the lifecycle is very important; it is equally challenging too. Estimates that are computed early in the development lifecycle, when it is needed the most, are typically associated with uncertainty. However, none of the prominent software effort prediction techniques or software size metrics addresses this issue satisfactorily. In this paper, we propose a framework for developing probabilistic size proxies for software effort prediction using information from conceptual UML models created early in the software development lifecycle. The framework accounts for uncertainty in software size and effort prediction by providing the estimate as a probability density function instead of a certain value. We conducted a case study using open source datasets and the results were encouraging. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Ahmed, Moataz A.; Ahmad, Irfan; AlGhamdi, Jarallah S.] King Fahd Univ Petr & Minerals, Dhahran 31261, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals
RP Ahmed, MA (corresponding author), King Fahd Univ Petr & Minerals, Dhahran 31261, Saudi Arabia.
EM moataz@kfupm.edu.sa; irfanics@kfupm.edu.sa; jaralla@kfupm.edu.sa
RI Ahmad, Irfan/D-7254-2015
OI Ahmad, Irfan/0000-0001-8311-1731; Ahmed, Moataz/0000-0003-0042-8819
CR Ahmad I., 2008, THESIS KING FAHD U P
   Ahmed M., 2008, J INFORM SOFTWARE TE, V51, P640
   Ahmed MA, 2005, INFORM SOFTWARE TECH, V47, P31, DOI 10.1016/j.infsof.2004.05.004
   Ahmed MA, 2011, J SYST ARCHITECT, V57, P474, DOI 10.1016/j.sysarc.2010.06.004
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Anda B., 2002, EASE 2002 EMP ASS SO
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 2002, Metrics and Models in Software Quality Engineering
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], P 5 INT S EMP SOFTW
   [Anonymous], 2014, Software engineering: a practitioner's approach
   Armour PG, 2004, COMMUN ACM, V47, P21, DOI 10.1145/971617.971635
   Banker R., 1992, J MANAGE INFORM SYST, V8, P127
   Boehm B, 2000, ANN SOFTW ENG, V10, P177, DOI 10.1023/A:1018991717352
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   Boehm BW., 1981, Software Engineering Economics
   Bollen K.A., 1985, SOCIOL METHOD RES, V13, P510
   Braz MR, 2006, P INT COMP SOFTW APP, P221
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   Carbone M., 2002, 6 ECOOP WORKSH QUANT
   Ceddia J., 6 AUSTR COMP ED C AC, V30, P33
   Costagliola G, 2005, IEEE T SOFTWARE ENG, V31, P52, DOI 10.1109/TSE.2005.5
   Cuadrado-Gallego JJ, 2006, J SYST SOFTWARE, V79, P353, DOI 10.1016/j.jss.2005.04.040
   Fenton N., 2000, INT C SOFTWARE ENG, P357, DOI DOI 10.1145/336512.336588
   Fetcke T., 1997, P TECHNOLOGY OBJECT
   Furulund KM, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P342
   Gill N.S., 2005, ACM SIGSOFT SOFTWARE, V29
   Grimstad S., 2006, International Symposium on Empirical Software Engineering, V58, DOI DOI 10.1145/1159733.1159745
   Hamdan K., 2009, 2009 IEEE Symposium on Industrial Electronics & Applications (ISIEA 2009), P985, DOI 10.1109/ISIEA.2009.5356306
   Hastings TE, 2001, IEEE T SOFTWARE ENG, V27, P337, DOI 10.1109/32.917523
   Ibarra Gustavo Bestetti, 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P178, DOI 10.1109/SBES.2010.22
   JAIN R, 1991, TECHNIQUES EXPT DESI
   Jorgensen M, 2005, IEEE SOFTWARE, V22, P57, DOI 10.1109/MS.2005.73
   Jorgensen M, 2004, INFORM SOFTWARE TECH, V46, P3, DOI 10.1016/S0950-5349(03)00093-4
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kanmani S, 2007, ICCTA 2007: INTERNATIONAL CONFERENCE ON COMPUTING: THEORY AND APPLICATIONS, PROCEEDINGS, P261
   Karner G., 1993, Objectory Systems
   Kelley K, 2003, PSYCHOL METHODS, V8, P305, DOI 10.1037/1082-989X.8.3.305
   Kirsopp C., 2002, GEN EV COMP C GECCO
   Kocaguneli E, 2010, EUROMICRO CONF PROC, P323, DOI 10.1109/SEAA.2010.19
   Li J., 2007, J EMPIRICAL SOFTWARE, V12
   MILLER DE, 1973, MEAS EVAL GUID, V6, P157, DOI 10.1080/00256307.1973.12022590
   Minkiewicz A.F., 1997, ASM 97 ATL OCT
   Morris P., 1998, IFPUG FALL C ORL FLO
   Muzaffar Z., J INFORM SOFTWARE TE, V52, P92
   Nisar MW, 2008, FIFTH INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS AND KNOWLEDGE DISCOVERY, VOL 1, PROCEEDINGS, P421, DOI 10.1109/FSKD.2008.370
   Park H, 2008, EXPERT SYST APPL, V35, P929, DOI 10.1016/j.eswa.2007.08.001
   Park R.E., 1992, TECHNICAL REPORT
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   Pfleeger ShariLawrence., 2005, SOFTWARE COST ESTIMA
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Russell S., 2016, Artificial intelligence a modern approach
   Saliu MO, 2004, NAFIPS 2004: ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, VOLS 1AND 2, P16
   SALIU MO, 2004, SOFT COMPUTING SOFTW
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shukla KK, 2000, INFORM SOFTWARE TECH, V42, P701, DOI 10.1016/S0950-5849(00)00114-2
   Stutzke R., 1999, INT WORKSH SOFTW MEA
   SYMONS CR, 1988, IEEE T SOFTWARE ENG, V14, P2, DOI 10.1109/32.4618
   Uemura T, 2001, J SOFTW MAINT EVOL-R, V13, P223, DOI 10.1002/smr.231
   Wong J, 2009, WOSQ: 2009 ICSE WORKSHOP ON SOFTWARE QUALITY, P51, DOI 10.1109/WOSQ.2009.5071557
   Xia W, 2008, INFORM SOFTWARE TECH, V50, P670, DOI 10.1016/j.infsof.2007.07.004
   Yau C., 1994, Proceedings of the 1994 Second Australian and New Zealand Conference on Intelligent Information Systems (Cat. No.94TH8019), P189, DOI 10.1109/ANZIIS.1994.396923
NR 63
TC 9
Z9 9
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2013
VL 55
IS 2
BP 241
EP 251
DI 10.1016/j.infsof.2012.08.001
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 060EO
UT WOS:000312759500005
DA 2024-07-18
ER

PT J
AU McMinn, P
AF McMinn, Phil
TI An identification of program factors that impact crossover performance
   in evolutionary test input generation for the branch coverage of C
   programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 2nd International Symposium on Search Based Software Engineering
CY 2010
CL Benevento, ITALY
DE Evolutionary Testing; Search-Based Test Data Generation; Crossover
   operator performance
ID TESTABILITY
AB Context: Genetic Algorithms are a popular search-based optimisation technique for automatically generating test inputs for structural coverage of a program, but there has been little work investigating the class of programs for which they will perform well.
   Objective: This paper presents and evaluates a series of program factors that are hypothesised to affect the performance of crossover, a key search operator in Genetic Algorithms, when searching for inputs that cover the branching structure of a C function.
   Method: Each program factor is evaluated with example programs using Genetic Algorithms with and without crossover. Experiments are also performed to test whether crossover is acting as macro-mutation operator rather than usefully recombining the component parts of input vectors when searching for test data.
   Results: The results show that crossover has an impact for each of the program factors studied.
   Conclusion: It is concluded crossover plays an increasingly important role for programs with large, multidimensional input spaces, where the target structure's input condition breaks down into independent sub-problems for which solutions may be sought in parallel. Furthermore, it is found that crossover can be inhibited when the program under test is unstructured or involves nested conditional statements; and when intermediate variables are used in branching conditions, as opposed to direct input values. (C) 2012 Elsevier B.V. All rights reserved.
C1 Univ Sheffield, Sheffield S1 4DP, S Yorkshire, England.
C3 University of Sheffield
RP McMinn, P (corresponding author), Univ Sheffield, 211 Portobello, Sheffield S1 4DP, S Yorkshire, England.
EM p.mcminn@sheffield.ac.uk
FU EPSRC [EP/G009600/1] Funding Source: UKRI
CR Arcuri Andrea, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P205, DOI 10.1109/ICST.2010.17
   BAKER JE, 1987, P 2 INT C GEN ALG TH
   Baresel A, 2003, LECT NOTES COMPUT SC, V2724, P2442
   Baresel A., 2004, P INT S SOFTW TEST A, P43
   Baresel Andre., 2002, Proceedings of the Genetic and Evolutionary Computation Conference, GECCO '02, P1329
   Bottaci L., 2002, P GENETIC EVOLUTIONA, P1337
   Falkenauer E., 1998, Genetic algorithms and grouping problems, chichester
   FORREST S, 1993, FOUNDATIONS OF GENETIC ALGORITHMS 2, P109
   Goldberg D. E., 1989, GENETIC ALGORITHMS S
   Harman M, 2004, IEEE T SOFTWARE ENG, V30, P3, DOI 10.1109/TSE.2004.1265732
   Harman Mark, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P320, DOI 10.1007/978-3-540-78917-8_11
   HARMAN M., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P155, DOI DOI 10.1145/1287624.1287647
   Harman M., 2002, P GENETIC EVOLUTIONA, P1359
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Harman Mark., 2007, Proceedings of the 2007 International Symposium on Software Testing and Analysis. ISSTA'07, P73, DOI [DOI 10.1145/1273463.1273475, http://doi.acm.org/10.1145/1273463.1273475]
   Hierons RM, 2005, COMPUT J, V48, P421, DOI 10.1093/comjnl/bxh093
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   Jansen T, 2005, DISCRETE APPL MATH, V149, P111, DOI 10.1016/j.dam.2004.02.019
   Jones T., 1995, P 6 INT C GENETIC AL, P73
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Lakhotia K, 2010, J SYST SOFTWARE, V83, P2379, DOI 10.1016/j.jss.2010.07.026
   Lakhotia Kiran., 2008, Proceedings of the Annual Conference on Genetic and Evolution- ary Computation (GECCO), P1759, DOI [10.1145/1389095.1389435, DOI 10.1145/1389095.1389435]
   Lammermann F, 2004, LECT NOTES COMPUT SC, V3103, P1350
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McMinn P, 2003, LECT NOTES COMPUT SC, V2724, P2488
   McMinn P., 2011, P 2 INT S SEARCH BAS, P9
   McMinn P., 2005, P 3 UK SOFTWARE TEST, P165
   McMinn P, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1525880.1525884
   Mitchell M., 1992, Toward a Practice of Autonomous Systems. Proceedings of the First European Conference on Artificial Life, P245
   Mühlenbein H, 1993, EVOL COMPUT, V1, P25, DOI 10.1162/evco.1993.1.1.25
   Richter JN, 2008, LECT NOTES COMPUT SC, V5199, P92, DOI 10.1007/978-3-540-87700-4_10
   Tracey N, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/ASE.1998.732680
   Watson RA, 1998, LECT NOTES COMPUT SC, V1498, P97, DOI 10.1007/BFb0056853
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   WHITLEY D, 1989, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P116
   XANTHAKIS S., 1992, 5th Int. Conference on Software Engineering and its Applications, P625
NR 36
TC 4
Z9 7
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2013
VL 55
IS 1
BP 153
EP 172
DI 10.1016/j.infsof.2012.03.010
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 036GA
UT WOS:000311013200009
DA 2024-07-18
ER

PT J
AU Domínguez-Mayo, FJ
   Escalona, MJ
   Mejías, M
   Ross, M
   Staples, G
AF Dominguez-Mayo, F. J.
   Escalona, M. J.
   Mejias, M.
   Ross, M.
   Staples, G.
TI Quality evaluation for Model-Driven Web Engineering methodologies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Standards; Metrics/measurement; Methodologies;
   Quality analysis and evaluation; Software quality/SQA
AB Context: There are lots of approaches or methodologies in the Model-Driven Web Engineering (MDWE) context to develop Web Applications without reaching a consensus on the use of standards and scarcity of both, practical experience and tool support.
   Objective: Model-Driven Web Engineering (MDWE) methodologies are constantly evolving. Moreover, Quality is a very important factor to identify within a methodology as it defines processes, techniques and artifacts to develop Web Applications. For this reason, when analyzing a methodology, it is not only necessary to evaluate quality, but also to find out how to improve it. The main goal of this paper is to develop a set of Quality Characteristics and Sub-Characteristics for MDWE approaches based on ISO/IEC standards.
   Method: From the software products context, some widely standards proposed, such as ISO/IEC 9126 or ISO/IEC 25000, suggest a Quality Model for software products, although up to now, there are no standard methods to assess quality on MDWE methodologies. Such methodologies can be organized into Properties, thus, a methodology has artifacts, processes and techniques. Then, each item is evaluated through a set of appropriate Quality Characteristics, depending on its nature. This paper proposes to evaluate a methodology as a product itself.
   Results: This paper recommends a set of Quality Characteristics and Sub-Characteristics based on these standards in order to evaluate MDWE methodologies quality. Additionally, it defines an agile way to relate these Quality Sub-Characteristics to Properties with the sole purpose of not only analyzing, but also assessing and improving MDWE methodologies.
   Conclusions: The application of these Quality Characteristics and Sub-Characteristics could promote efficiency in methodologies since this kind of assessment enhances both the understanding of strengths and weaknesses of approaches. (c) 2012 Elsevier B.V. All rights reserved.
C1 [Dominguez-Mayo, F. J.; Escalona, M. J.; Mejias, M.] Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
   [Ross, M.] Southampton Solent Univ, Fac Maritme & Technol, Southampton, Hants, England.
C3 University of Sevilla; Solent University
RP Domínguez-Mayo, FJ (corresponding author), Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
EM fjdominguez@us.es; mjescalona@us.es; risoto@us.es;
   margaret.ross@solent.ac.uk
RI Mayo, Francisco José Domínguez/A-8121-2009; Mejias-Risoto,
   Manuel/N-8708-2014; Escalona, María José/G-3900-2010
OI Mayo, Francisco José Domínguez/0000-0003-3502-8858; Mejias-Risoto,
   Manuel/0000-0002-0353-6391; Escalona, María José/0000-0002-6435-1497
FU Project QSimTest [TIN2007-67843-006_03]; Tempros Project of the
   Ministerio de Educacion y Ciencia, Spain [TIN2010-20057-C03-02]
FX This research has been supported by the Project QSimTest
   (TIN2007-67843-006_03) and by the Tempros Project of the Ministerio de
   Educacion y Ciencia, (TIN2010-20057-C03-02), Spain.
CR ABRAN A, 2005, METRICS NEWS J SOFTW, V10, P35
   Alcer, FED NAC AS LUCH ENF
   [Anonymous], 2001, 912612001 ISOIEC
   [Anonymous], 1550412004 ISOIEC
   [Anonymous], 250002005 ISOIEC
   [Anonymous], 610121990 IEEE
   [Anonymous], 2006, 25021 SC7 ISOIEC DTR
   [Anonymous], 122072008 ISOIEC
   Azuma M., 2001, ESCOM EUR SOFTW CONT, P337
   Basili V., 1989, IEEE T SOFTWARE ENG, V14, P758
   Becker P, 2010, LECT NOTES COMPUT SC, V6385s, P102, DOI 10.1007/978-3-642-16985-4_10
   C.P. Team, 2006, CMMI DEV VERSION 1 2
   Calero C, 2005, ONLINE INFORM REV, V29, P227, DOI 10.1108/14684520510607560
   Domínguez-Mayo FJ, 2012, COMPUT STAND INTER, V34, P396, DOI 10.1016/j.csi.2012.01.004
   Dominguez-Mayo F.J., 2010, P 18 INT C SOFTW QUA, P171
   Dominguez-Mayo F. J., 2011, 19 INT C SOFTW QUAL, P55
   Dominguez-Mayo F. J., 2011, QUALITY ISSUES MODEL, P295
   Escalona M.J., 2004, J WEB ENG, V2, P193
   Escalona MJ, 2008, IEEE T SOFTWARE ENG, V34, P377, DOI 10.1109/TSE.2008.27
   Heitlager I., 2007, 6 INT C QUAL INF COM
   Herrera M, 2010, LECT NOTES COMPUT SC, V6385s, P91, DOI 10.1007/978-3-642-16985-4_9
   Hoyle D., 2009, ISO 9000 QUALITY SYS, V6th
   ISO, 1991, 9126 ISOIEC IS
   *ISO IEC, 1459811999 ISOIEC
   ISO/IEC, 2004, 91264 ISOIEC TR
   *ISO IEC, 2003, 91262 ISOIEC TR
   *ISO IEC, 2003, 91263 ISOIEC TR
   Melia S., 2008, ICWE 08 P 8 INT C WE
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5002, P275
   Olsina L., 2001, Web engineerng. Managing diversity and complexity of web application development, P266
   Olsina L., 2002, APPL QUALITY WEBQEM, P20
   Plosch R., 2010, INT C QUAL INF COMM, P198
   Preciado J.C., 2008, ICWE 08 P 2008 8 INT
   Punter T, 2004, SOFTWARE QUAL J, V12, P137, DOI 10.1023/B:SQJO.0000024060.32026.a2
   SAATY TL, 1983, MATH COMPUT SIMULAT, V25, P105, DOI 10.1016/0378-4754(83)90072-1
   Schwinger W, 2008, INT J WEB INF SYST, V4, P234, DOI 10.1108/17440080810901089
NR 36
TC 22
Z9 22
U1 0
U2 17
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2012
VL 54
IS 11
BP 1265
EP 1282
DI 10.1016/j.infsof.2012.06.007
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 000LJ
UT WOS:000308387500009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ghanam, Y
   Maurer, F
   Abrahamsson, P
AF Ghanam, Yaser
   Maurer, Frank
   Abrahamsson, Pekka
TI Making the leap to a software platform strategy: Issues and challenges
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software platform; Software reuse; Platform challenges; Ethnographic
   study; Grounded Theory
ID PRODUCT; REUSE
AB Context: While there are many success stories of achieving high reuse and improved quality using software platforms, there is a need to investigate the issues and challenges organizations face when transitioning to a software platform strategy.
   Objective: This case study provides a comprehensive taxonomy of the challenges faced when a medium-scale organization decided to adopt software platforms. The study also reveals how new trends in software engineering (i.e. agile methods, distributed development, and flat management structures) interplayed with the chosen platform strategy.
   Method: We used an ethnographic approach to collect data by spending time at a medium-scale company in Scandinavia. We conducted 16 in-depth interviews with representatives of eight different teams, three of which were working on three separate platforms. The collected data was analyzed using Grounded Theory.
   Results: The findings identify four classes of challenges, namely: business challenges, organizational challenges, technical challenges, and people challenges. The article explains how these findings can be used to help researchers and practitioners identify practical solutions and required tool support.
   Conclusion: The organization's decision to adopt a software platform strategy introduced a number of challenges. These challenges need to be understood and addressed in order to reap the benefits of reuse. Researchers need to further investigate issues such as supportive organizational structures for platform development, the role of agile methods in software platforms, tool support for testing and continuous integration in the platform context, and reuse recommendation systems. (c) 2012 Elsevier B.V. All rights reserved.
C1 [Ghanam, Yaser; Maurer, Frank] Univ Calgary, Dept Comp Sci, Calgary, AB T2N 1N4, Canada.
   [Abrahamsson, Pekka] Univ Helsinki, Dept Comp Sci, Helsinki 00014, Finland.
C3 University of Calgary; University of Helsinki
RP Ghanam, Y (corresponding author), Univ Calgary, Dept Comp Sci, 2500 Univ Dr NW, Calgary, AB T2N 1N4, Canada.
EM yghanam@gmail.com; frank.maurer@ucalgary.ca;
   pekka.abrahamsson@cs.helsinki.fi
RI Abrahamsson, Pekka/A-5559-2018
OI Abrahamsson, Pekka/0000-0002-4360-2226; Maurer,
   Frank/0000-0002-0240-715X
FU Alberta Innovates Technology Futures
FX This work is part of a broader research funded by Alberta Innovates
   Technology Futures.
CR Ambler S., 2008, AGILE ADOPTION SURVE
   [Anonymous], HEWLETT PACKARD J
   [Anonymous], 2007, Scaling Software Agility: Best Practices for Large Enterprises
   [Anonymous], 13 INT SOFTW PROD LI
   [Anonymous], 2001, SOFTW FOCUS
   [Anonymous], 2006, P 2006 INT WORKSH SO, DOI DOI 10.1109/IWSPM.2006.9
   Barnes B., 1988, Software reuse, P77
   Cusumano M.A., 1995, Microsoft secrets how the world's most powerful software company creates technology, shapes markets, and manages people
   Cusumano MA, 1999, COMMUN ACM, V42, P72, DOI 10.1145/317665.317678
   Dhungana D, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P327, DOI 10.1109/WICSA.2008.23
   Dittrich Y, 2007, INFORM SOFTWARE TECH, V49, P531, DOI 10.1016/j.infsof.2007.02.009
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   FRAKES WB, 1995, COMMUN ACM, V38, P75, DOI 10.1145/203241.203260
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Garlan D, 2009, IEEE SOFTWARE, V26, P66, DOI 10.1109/MS.2009.86
   Ghanam Y., 2010, P 14 INT SOFTW PROD
   Ghanam Y, 2010, LECT NOTES BUS INF, V48, P43
   Greenfield J., 2003, COMPANION OOPSLA
   Griss ML, 1997, PROCEEDINGS OF THE EIGHTH ISRAELI CONFERENCE ON COMPUTER SYSTEMS AND SOFTWARE ENGINEERING, P86, DOI 10.1109/ICCSSE.1997.599879
   Halman JIM, 2003, J PROD INNOVAT MANAG, V20, P149, DOI 10.1111/1540-5885.2002007
   Hammersley Martyn., 1983, ETHNOGRAPHY PRINCIPL
   Hanssen GK, 2008, J SYST SOFTWARE, V81, P843, DOI 10.1016/j.jss.2007.10.025
   Hetrick W. A., 2006, COMP 21 ACM SIGPLAN, P798, DOI DOI 10.1145/1176617.1176726
   Hummel O, 2007, LECT NOTES COMPUT SC, V4536, P28
   Jianhong M., 2006, MANUFACTURING MANAGE, V207, P996
   Jiao J, 2007, J INTELL MANUF, V18, P5, DOI 10.1007/s10845-007-0003-2
   JOOS R, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.311058
   JOYCE EJ, 1988, DATAMATION, V34, P97
   Kang Kyo, 1990, CMUSEI90TR021 SOFTW
   Kulandai R., 2011, EUROPEAN J SCI RES, V54, P458
   Larman C., 2009, SCALING LEARN AGILE
   Leitao AM, 2004, SOFTWARE QUAL J, V12, P361, DOI 10.1023/B:SQJO.0000039793.31052.72
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Lynex A, 1998, ANN SOFTW ENG, V5, P105, DOI 10.1023/A:1018928608749
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   McGrath M., 1995, Product Strategy for High-Technology Companies: How to Achieve Growth, Competitive Advantage, and Increased Profits
   MILI H, 1995, IEEE T SOFTWARE ENG, V21, P528, DOI 10.1109/32.391379
   Mohagheghi P., 2004, Doctoral Thesis
   Muffatto M, 1999, INT J PROD ECON, V60-1, P145, DOI 10.1016/S0925-5273(98)00173-X
   Muffatto M, 2000, TECHNOVATION, V20, P617, DOI 10.1016/S0166-4972(99)00178-9
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Raatikainen M., 2008, P 1 INT WORKSH SOFTW, P17, DOI DOI 10.1145/1370720.1370728
   Riegger F., 2010, THESIS U CALGARY HS
   Romberg T., 2007, 40 ANN HAW INT C SYS
   Schmid K, 2002, IEEE SOFTWARE, V19, P50, DOI 10.1109/MS.2002.1020287
   Schmid K, 2010, LECT NOTES COMPUT SC, V6287, P151, DOI 10.1007/978-3-642-15579-6_11
   Schmidt D., 1999, WHY SOFTWARE REUSE H
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Sommerville I., 1985, SOFTWARE ENG
   Sosa ME, 2004, MANAGE SCI, V50, P1674, DOI 10.1287/mnsc.1040.0289
   Strauss A. L., 1997, Grounded Theory in Practice
   Sundgren N., 1998, Product platform development: Managerial issues in manufacturing firms
   Tracz W., 1988, SOFTWARE REUSE MOTIV, P62
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
NR 55
TC 20
Z9 21
U1 1
U2 30
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2012
VL 54
IS 9
BP 968
EP 984
DI 10.1016/j.infsof.2012.03.005
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 977BP
UT WOS:000306631700004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Vijayasarathy, L
   Turk, D
AF Vijayasarathy, Leo
   Turk, Dan
TI Drivers of agile software development use: Dialectic interplay between
   benefits and hindrances
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile software development; Innovation adoption; Subjective norm;
   Training; Dialectic theory; Perceived hindrance
ID STRUCTURAL EQUATION MODELS; ORGANIZATIONAL CULTURE; SYSTEM-DEVELOPMENT;
   ACCEPTANCE; ADOPTION; TECHNOLOGY; INNOVATIONS; DIFFUSION; METHODOLOGIES
AB Context: Agile software development with its emphasis on producing working code through frequent releases, extensive client interactions and iterative development has emerged as an alternative to traditional plan-based software development methods. While a number of case studies have provided insights into the use and consequences of agile, few empirical studies have examined the factors that drive the adoption and use of agile.
   Objective: We draw on intention-based theories and a dialectic perspective to identify factors driving the use of agile practices among adopters of this software development methodology.
   Method: Data for the study was gathered through an anonymous online survey of software development professionals. We requested participation from members of a selected list of online discussion groups, and received 98 responses.
   Results: Our analyses reveal that subjective norm and training play a significant role in influencing software developers' use of agile processes and methods, while perceived benefits and perceived limitations are not primary drivers of agile use among adopters. Interestingly, perceived benefit emerges as a significant predictor of agile use only if adopters face hindrances to their agile practices.
   Conclusion: We conclude that research in the adoption of software development innovations should examine the effects of both enabling and detracting factors and the interactions between them. Since training, subjective norm, and the interplay between perceived benefits and perceived hindrances appear to be key factors influencing the adoption of agile methods, researchers can focus on how to (a) perform training on agile methods more effectively, (b) facilitate the dialog between developers and managers about perceived benefits and hindrances, and (c) capitalize on subjective norm to publicize the benefits of agile methods within an organization. Further, when managing the transition to new software development methods, we recommend that practitioners adapt their strategies and tactics contingent on the extent of perceived hindrances to the change. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Vijayasarathy, Leo; Turk, Dan] Colorado State Univ, Comp Informat Syst Dept, Ft Collins, CO 80523 USA.
C3 Colorado State University
RP Vijayasarathy, L (corresponding author), Colorado State Univ, Comp Informat Syst Dept, Ft Collins, CO 80523 USA.
EM Leo.Vijayasarathy@colostate.edu; Dan.Turk@colostate.edu
CR AJZEN I, 1991, ORGAN BEHAV HUM DEC, V50, P179, DOI 10.1016/0749-5978(91)90020-T
   Allen J, 2020, ARCHAEOL OCEAN, V55, P1, DOI 10.1002/arco.5207
   [Anonymous], 1989, LISREL 7 GUIDE PROGR
   Avison D. E., 2003, Communications of the ACM, V46, P79, DOI 10.1145/602421.602423
   Balijepally V, 2009, MIS QUART, V33, P91
   Beck K., 2001, Planning extreme programming
   Bipp T, 2008, INFORM SOFTWARE TECH, V50, P231, DOI 10.1016/j.infsof.2007.05.006
   Bledow R, 2009, IND ORGAN PSYCHOL-US, V2, P305, DOI 10.1111/j.1754-9434.2009.01154.x
   Boehm B, 2004, PROC INT CONF SOFTW, P718, DOI 10.1109/ICSE.2004.1317503
   Bridges W., 1991, MANAGING TRANSITIONS
   Bullock HE, 1994, STRUCT EQU MODELING, V1, P253, DOI 10.1080/10705519409539977
   Chan FKY, 2009, DECIS SUPPORT SYST, V46, P803, DOI 10.1016/j.dss.2008.11.009
   Chau PYK, 1996, INFORM MANAGE-AMSTER, V30, P269, DOI 10.1016/S0378-7206(96)01074-9
   Chin W.W., 1996, P 17 INT C INFORM SY, P21
   Chin WW, 1998, MIS QUART, V22, pVII
   Cho S, 2007, J INF TECHNOL, V22, P24, DOI 10.1057/palgrave.jit.2000088
   Cockburn A., 2002, AGILE SOFTWARE DEV
   Cohen J, 2003, APPL MULTIPLE REGRES, DOI DOI 10.4324/9780203774441
   DAVIS FD, 1989, MANAGE SCI, V35, P982, DOI 10.1287/mnsc.35.8.982
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Dietrich GB, 1997, IEEE T ENG MANAGE, V44, P390, DOI 10.1109/17.649869
   Drobka J, 2004, IEEE SOFTWARE, V21, P70, DOI 10.1109/MS.2004.47
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Fetscherin M, 2008, J ELECTRON COMMER RE, V9, P231
   FORNELL C, 1982, J MARKETING RES, V19, P440, DOI 10.2307/3151718
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   Fruhling A, 2006, J MANAGE INFORM SYST, V22, P39, DOI 10.2753/MIS0742-1222220403
   Gefen D, 2000, Communications of the Association for Information Systems, V4, P7, DOI [10.1016/j.emj.2021.07.010, DOI 10.1016/J.EMJ.2021.07.010, DOI 10.17705/1CAIS.00407]
   Green G.C., 2004, Journal of High Technology Management Research, V15, P123, DOI DOI 10.1016/J.HITECH.2003.10.001
   Green GC, 2000, IEEE SOFTWARE, V17, P96, DOI 10.1109/52.895175
   Grossman M, 2005, INFORM SOFTWARE TECH, V47, P383, DOI 10.1016/j.infsof.2004.09.005
   Hardgrave BC, 2003, IEEE T ENG MANAGE, V50, P322, DOI 10.1109/TEM.2003.817293
   Hardgrave BC, 2003, J MANAGE INFORM SYST, V20, P123
   Higgins SH, 1999, J BUS IND MARK, V14, P61, DOI 10.1108/08858629910254157
   Huang L, 2009, INFORM SOFTWARE TECH, V51, P182, DOI 10.1016/j.infsof.2008.03.007
   Iivari J, 1996, COMMUN ACM, V39, P94, DOI 10.1145/236156.236183
   Iivari J, 2007, MIS QUART, V31, P35
   Kacmar CJ, 2009, INF RESOUR MANAG J, V22, P16, DOI 10.4018/irmj.2009070102
   Khalifa M, 2000, IEEE T ENG MANAGE, V47, P360, DOI 10.1109/17.865904
   Kozar K. A., 1989, Journal of Management Information Systems, V5, P73
   LAANTI M, 2010, INFORM SOFTWARE TECH, DOI DOI 10.1016/J.INFSOF:2010.11.010
   LEONARDBARTON D, 1987, INTERFACES, V17, P6, DOI 10.1287/inte.17.3.6
   Mangalaraj G, 2009, EUR J INFORM SYST, V18, P344, DOI 10.1057/ejis.2009.23
   Mathieson K., 2001, Data Base for Advances in Information Systems, V32, P86
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Morris SA, 2004, IND MANAGE DATA SYST, V104, P129, DOI 10.1108/02635570410522099
   Nelson AC, 1996, INFORM MANAGE, V31, P193, DOI 10.1016/S0378-7206(96)01063-4
   ORLIKOWSKI WJ, 1993, MIS QUART, V17, P309, DOI 10.2307/249774
   Pawlowski S, 1999, ASSOCIATION FOR INFORMATION SYSTEMS - PROCEEDINGS OF THE FIFTH AMERICAS CONFERENCE ON INFORMATION SYSTEMS (AMCIS 1999), P791
   Prendergast R, 2006, CAMBRIDGE J ECON, V30, P253, DOI 10.1093/cje/bei052
   Rahim MM, 1998, INFORM SOFTWARE TECH, V39, P949, DOI 10.1016/S0950-5849(97)00052-9
   Rai A., 1996, Journal of Management Information Systems, V13, P205
   Riemenschneider CK, 2002, IEEE T SOFTWARE ENG, V28, P1135, DOI 10.1109/TSE.2002.1158287
   Ringle C.M., 2005, SMARTPLS 2 0 M3 BETA
   Roberts TL, 1998, IEEE T SOFTWARE ENG, V24, P640, DOI 10.1109/32.707699
   Robey D, 1999, INFORM SYST RES, V10, P167, DOI 10.1287/isre.10.2.167
   Robey D, 2002, J MANAGE INFORM SYST, V19, P17, DOI 10.1080/07421222.2002.11045713
   Rogers E. M., 1983, Diffusions of innovations, DOI DOI 10.1007/978-3-642-79868-9_2
   Sabherwal R, 2003, J INF TECHNOL-UK, V18, P69, DOI 10.1080/0268396032000101144
   Salo O, 2008, IET SOFTW, V2, P58, DOI 10.1049/iet-sen:20070038
   SAMBAMURTHY V, 1994, DECISION SCI, V25, P215, DOI 10.1111/j.1540-5915.1994.tb01840.x
   Schatz B, 2005, IEEE SOFTWARE, V22, P36, DOI 10.1109/MS.2005.74
   Sherif K, 2006, INT J INFORM MANAGE, V26, P70, DOI 10.1016/j.ijinfomgt.2005.08.007
   Sherif K, 2003, INFORM MANAGE-AMSTER, V41, P159, DOI 10.1016/S0378-7206(03)00045-4
   *SHIN TECHN, AG METH SURV RES
   Soh C, 2003, INT J HUM-COMPUT INT, V16, P81, DOI 10.1207/S15327590IJHC1601_6
   Staples DS, 1999, ORGAN SCI, V10, P758, DOI 10.1287/orsc.10.6.758
   Sultan F, 2000, IEEE T ENG MANAGE, V47, P106, DOI 10.1109/17.820730
   Tolfo C, 2008, J SYST SOFTWARE, V81, P1955, DOI 10.1016/j.jss.2008.01.014
   Turk D, 2005, J DATABASE MANAGE, V16, P62, DOI 10.4018/jdm.2005100104
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   ZMUD RW, 1984, MANAGE SCI, V30, P727, DOI 10.1287/mnsc.30.6.727
NR 72
TC 39
Z9 48
U1 1
U2 44
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2012
VL 54
IS 2
BP 137
EP 148
DI 10.1016/j.infsof.2011.08.003
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 864ES
UT WOS:000298220400001
DA 2024-07-18
ER

PT J
AU Breivold, HP
   Crnkovic, I
   Larsson, M
AF Breivold, Hongyu Pei
   Crnkovic, Ivica
   Larsson, Magnus
TI A systematic review of software architecture evolution research
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software evolvability; Systematic review; Software architecture;
   Architecture evolution; Architecture analysis; Evolvability analysis
AB Context: Software evolvability describes a software system's ability to easily accommodate future changes. It is a fundamental characteristic for making strategic decisions, and increasing economic value of software. For long-lived systems, there is a need to address evolvability explicitly during the entire software lifecycle in order to prolong the productive lifetime of software systems. For this reason, many research studies have been proposed in this area both by researchers and industry practitioners. These studies comprise a spectrum of particular techniques and practices, covering various activities in software lifecycle. However, no systematic review has been conducted previously to provide an extensive overview of software architecture evolvability research.
   Objective: In this work, we present such a systematic review of architecting for software evolvability. The objective of this review is to obtain an overview of the existing approaches in analyzing and improving software evolvability at architectural level, and investigate impacts on research and practice.
   Method: The identification of the primary studies in this review was based on a pre-defined search strategy and a multi-step selection process.
   Results: Based on research topics in these studies, we have identified five main categories of themes: (i) techniques supporting quality consideration during software architecture design, (ii) architectural quality evaluation, (iii) economic valuation, (iv) architectural knowledge management, and (v) modeling techniques. A comprehensive overview of these categories and related studies is presented.
   Conclusion: The findings of this review also reveal suggestions for further research and practice, such as (i) it is necessary to establish a theoretical foundation for software evolution research due to the fact that the expertise in this area is still built on the basis of case studies instead of generalized knowledge; (ii) it is necessary to combine appropriate techniques to address the multifaceted perspectives of software evolvability due to the fact that each technique has its specific focus and context for which it is appropriate in the entire software lifecycle. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Breivold, Hongyu Pei; Larsson, Magnus] ABB Corp Res, Ind Software Syst, S-72178 Vasteras, Sweden.
   [Crnkovic, Ivica] Malardalen Univ, S-72123 Vasteras, Sweden.
C3 ABB; Malardalen University
RP Breivold, HP (corresponding author), ABB Corp Res, Ind Software Syst, S-72178 Vasteras, Sweden.
EM hongyu.pei-breivold@se.abb.com; ivica.crnkovic@mdh.se;
   magnus.larsson@se.abb.com
OI Ivica, Crnkovic/0000-0002-5278-755X; Larsson, Magnus/0000-0002-6200-4125
CR [Anonymous], 2006, SOFTWARE EVOLUTION F
   [Anonymous], 2000, DESIGN RULES POWER M
   Avritzer A., 1999, Empirical Software Engineering, V4, P199, DOI 10.1023/A:1009826509846
   Bachmann F, 2004, LECT NOTES COMPUT SC, V3014, P66
   Bayer J, 1999, LECT NOTES COMPUT SC, V1687, P446, DOI 10.1145/318774.319262
   Bennett K, 1996, INFORM SOFTWARE TECH, V38, P673, DOI 10.1016/0950-5849(96)01116-0
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   BORNE I, 1999, EUR C OBJ OR PROGR
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   CAI Y, 2007, INT WORKSH SOFTW QUA
   CERVANTES H, 2004, 26 INT C SOFTW ENG
   Chung L., 2000, Non-functional Requirements in Software Engineering
   FALESSI D, 2008, INT WORKSH SHAR REUS
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garlan D., 2000, C FUT SOFTW ENG
   JIANG M, 2005, INT C INF REUS INT
   KANG KC, 1998, ANN SOFTWARE ENG, V5
   KANG KC, 1990, CMUSEI090TR21
   Kazman R, 1998, IEEE INT C ENG COMPL
   KIM DK, 2003, IEEE INT COMP SOFTW
   KITCHENHAM BA, 2004, TRSE0401NICTA KEEL U
   KRUCHTEN P, 2006, INT C QUAL SOFTW ARC
   LAND R, 2006, J INFORM SOFTWARE TE, V49, P419
   Lassing N, 2003, J SYST SOFTWARE, V65, P141, DOI 10.1016/S0164-1212(02)00056-0
   LEHMAN MM, 2000, WORKSH SOFTW ORG COE, P12
   Maccari A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P585, DOI 10.1109/ICSE.2002.1008003
   MACCARI A, 2002, LECT NOTES COMPUTER, V2290
   Matinlassi M, 2005, WORK IEEE IFIP C SOF
   MATTSSON M, 2006, INT C QUAL SOFTW ARC
   Medvidovic N., 1998, INT WORKSH PRINC SOF
   MENS T, 2003, SOFTWARE EVOLUTION
   Nehaniv C.L., 2007, INT WORKSH PRINC SOF
   Nord R.L., 2004, CMUSEI2004TN017
   Northrop Linda., 2006, Ultra-Large-Scale Systems
   OBrien L., 2007, INT WORKSH SYST DEV
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Redwine S, 1985, INT C SOFTW ENG
   ROWE D, 1998, INT C WORKSH ENG COM
   ROWE D, 1997, INT C WORKSH ENG COM, P24
   SCHMID K, 2005, 27 INT C SOFTW ENG
   SMITH D, 2002, LECT NOTES COMPUTER, V2379
   STOERMER C, 2001, WORK IEEE IFIP C SOF
   Sullivan K.J., 1999, RISK BOOKS, P215
   TONU SA, 2006, C SOFTW MAINT REENG
   van Gurp J, 2002, J SYST SOFTWARE, V61, P105, DOI 10.1016/S0164-1212(01)00152-2
   VANDERLINDEN F, 2004, LECT NOTES COMPUTER, V3154
   WANG G, 2004, 37 ANN HAW INT C SYS
   Weiderman N.H., 1997, Approaches to Legacy System Evolution
   Yu L, 2008, IT PROFESSIONAL, V10, P56
NR 51
TC 89
Z9 102
U1 0
U2 34
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2012
VL 54
IS 1
BP 16
EP 40
DI 10.1016/j.infsof.2011.06.002
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 859JA
UT WOS:000297871500002
DA 2024-07-18
ER

PT J
AU Boness, K
   Finkelstein, A
   Harrison, R
AF Boness, Kenneth
   Finkelstein, Anthony
   Harrison, Rachel
TI A method for assessing confidence in requirements analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements analysis; Confidence factors; Meta-level assessment
AB Context: During development managers, analysts and designers often need to know whether enough requirements analysis work has been done and whether or not it is safe to proceed to the design stage.
   Objective: This paper describes a new, simple and practical method for assessing our confidence in a set of requirements.
   Method: We identified four confidence factors and used a goal oriented framework with a simple ordinal scale to develop a method for assessing confidence. We illustrate the method and show how it has been applied to a real systems development project.
   Results: We show how assessing confidence in the requirements could have revealed problems in this project earlier and so saved both time and money.
   Conclusion: Our meta-level assessment of requirements provides a practical and pragmatic method that can prove useful to managers, analysts and designers who need to know when sufficient requirements analysis has been performed. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Harrison, Rachel] Oxford Brookes Univ, Dept Comp & Elect, Oxford OX33 1HX, England.
   [Boness, Kenneth] Univ Reading, Sch Syst Engn, Reading RG6 2AH, Berks, England.
   [Finkelstein, Anthony] UCL, Dept Comp Sci, London WC1E 6BT, England.
C3 Oxford Brookes University; University of Reading; University of London;
   University College London
RP Harrison, R (corresponding author), Oxford Brookes Univ, Dept Comp & Elect, Oxford OX33 1HX, England.
EM k.d.boness@reading.ac.uk; a.finkelstein@cs.ucl.ac.uk;
   rachel.harrison@brookes.ac.uk
CR [Anonymous], 1998, IEEE Standard 1233, P1
   [Anonymous], 16 INT C COMP SAF RE
   [Anonymous], 2005, Just enough requirements management: where software development meets marketing
   Boness K, 2008, IET SOFTW, V2, P46, DOI 10.1049/iet-sen:20070068
   BONESS K, 2011, THESIS U READING
   Boness K., 2007, International Conference on Software Engineering Advances (ICSEA 2007), P71
   Cockburn A., 2002, Writing Effective Use Cases
   Cornford SL, 2001, AEROSP CONF PROC, P441, DOI 10.1109/AERO.2001.931736
   DARIMONT R, 2003, RE 03 EXH TRACK INT
   Dewar J., 2002, ASSUMPTION BASED PLA
   DEWAR JA, 1992, RAND CORPORATION REP, V4172
   Hall JG, 2007, SEFM 2007: FIFTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P15, DOI 10.1109/SEFM.2007.31
   IEEE, 1998, IEEE, P1, DOI [10.1109/IEEESTD.1998.88286, DOI 10.1109/IEEESTD.1998.88286]
   Kelly T.P., 1998, THESIS
   KNAUSS E, 2009, LECT NOTES BUSINESS, V32, DOI DOI 10.1007/978-3-642-02152-7,2009
   Lehman MM, 2005, IEEE International Workshop on Software Evolvability, Proceedings, P3, DOI 10.1109/IWSE.2005.14
   MARCHANT J, 2006, C SOFTW MAINT REENG, P355
   Mason R.O., 1981, Challenging Strategic Planning Assumptions
   MYLOPOULOS J, 1992, IEEE T SOFTWARE ENG, V18, P483, DOI 10.1109/32.142871
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   *ODNI, 2007, IR NUCL INT CAP
   Ruhe G., 2002, Proceedings of the 14th International Conference on Software Engineering and Knowledge Engineering (SEKE'02), P159
   SIMON HA, 1960, SCI MANAGEMENT DECIS
   Toulmin S., 1958, The uses of argument
   Turner J.R., 1993, International Journal of Project Management, V11, P93, DOI [10.1016/0263-7863(93)90017-h, DOI 10.1016/0263-7863(93)90017-H]
   van Lamsweerde A, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P4
   van Lamsweerde A, 2000, IEEE T SOFTWARE ENG, V26, P978, DOI 10.1109/32.879820
   VANLAMSWEERDE, 1991, P AAAI SPRING S SERI, P59
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 29
TC 9
Z9 9
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2011
VL 53
IS 10
BP 1084
EP 1096
DI 10.1016/j.infsof.2011.05.003
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 801ER
UT WOS:000293421200004
DA 2024-07-18
ER

PT J
AU Choi, W
   Choe, KM
AF Choi, Woongsik
   Choe, Kwang-Moo
TI Cycle elimination for invocation graph-based context-sensitive pointer
   analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Context-sensitive pointer analysis; Constraint-based analysis; Cycle
   elimination; Binary decision diagram
AB Context: Pointer analysis is an important building block of optimizing compilers and program analyzers for C language. Various methods with precision and performance trade-offs have been proposed. Among them, cycle elimination has been successfully used to improve the scalability of context-insensitive pointer analyses without losing any precision.
   Objective: In this article, we present a new method on context-sensitive pointer analysis with an effective application of cycle elimination.
   Method: To obtain similar benefits of cycle elimination for context-sensitive analysis, we propose a novel constraint-based formulation that uses sets of contexts as annotations. Our method is not based on binary decision diagram (BDD). Instead, we directly use invocation graphs to represent context sets and apply a hash-consing technique to deal with the exponential blow-up of contexts.
   Result: Experimental results on C programs ranging from 20,000 to 290,000 lines show that applying cycle elimination to our new formulation results in 4.5 xspeedup over the previous BDD-based approach. Conclusion: We showed that cycle elimination is an effective method for improving the scalability of context-sensitive pointer analysis. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Choi, Woongsik; Choe, Kwang-Moo] Korea Adv Inst Sci & Technol, Dept Comp Sci, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Choi, W (corresponding author), Korea Adv Inst Sci & Technol, Dept Comp Sci, 373-1 Guseong Dong, Taejon 305701, South Korea.
EM wschoi@pllab.kaist.ac.kr; choe@kaist.ac.kr
RI Choe, Kwang-Moo/C-1883-2011
FU Korea Ministry of Education, Science and Technology (MEST)/National
   Research Foundation of Korea (NRF) [2010-0001714]
FX This work was supported by the Engineering Research Center of Excellence
   Program of Korea Ministry of Education, Science and Technology
   (MEST)/National Research Foundation of Korea (NRF) (Grant 2010-0001714).
CR ANDERSEN HR, 1999, LECT NOTES IT U COPE
   [Anonymous], 1994, Program Analysis and Specialization for the C Programming Language
   [Anonymous], BuDDy, a binary decision diagram package
   [Anonymous], PLDI 00
   [Anonymous], 1990, LICS, DOI DOI 10.1109/LICS.1990.113767
   [Anonymous], PLDI 98
   Avots D, 2005, PROC INT CONF SOFTW, P332
   Ball T., 2002, POPL 02, P1
   BRAVENBOER M, 2009, P 24 ANN ACM SIGPLAN, P243
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Ceri S., 1989, IEEE Transactions on Knowledge and Data Engineering, V1, P146, DOI 10.1109/69.43410
   Cimatti A., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P495
   CYTRON R, 1989, CONFERENCE RECORD OF THE SIXTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P25, DOI 10.1145/75277.75280
   EMAMI M, 1994, P ACM SIGPLAN 94 C P, P242
   Filliatre Jean-Christophe, 2006, ML, P12, DOI DOI 10.1145/1159876.1159880
   Hardekopf B, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P290, DOI 10.1145/1250734.1250767
   Heintze Nevin., 2001, PLDI 01, P254
   Hind M, 2001, ACM SIGPLAN NOTICES, P54
   HIND M, 2000, P INT S SOFTW TEST A, P113
   Kanamori A., 1994, MSRTR9412
   KODUMAL J, 2005, P 12 INT STAT AN S, P218
   Lhoták O, 2006, LECT NOTES COMPUT SC, V3923, P47
   MANEVICH R, 2002, P STAT AN S, P196
   Necula GC, 2002, LECT NOTES COMPUT SC, V2304, P213
   Pearce DJ, 2004, SOFTWARE QUAL J, V12, P311, DOI 10.1023/B:SQJO.0000039791.93071.a2
   PEARCE DJ, 2007, PROGRAMMING LANGUAGE, V30, P1
   Pereira FMQ, 2009, INT SYM CODE GENER, P126, DOI 10.1109/CGO.2009.9
   Shivers O. G., 1991, THESIS CARNEGIE MELL
   Steensgaard Bjarne., 1996, POINTS TO ANAL ALMOS, P32
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   TARJAN RE, 1975, J ACM, V22, P215, DOI 10.1145/321879.321884
   Whaley John., 2004, PROGRAMMING LANGUAGE, P131
   Xu G., 2008, ISSTA'08, P225, DOI DOI 10.1145/1390630.1390658
   ZHU J, 2004, P ACM SIGPLAN C PROG, P145
   Zhu JW, 2005, DES AUT CON, P831, DOI 10.1109/DAC.2005.193930
NR 35
TC 3
Z9 5
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2011
VL 53
IS 8
SI SI
BP 818
EP 833
DI 10.1016/j.infsof.2011.03.003
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 784RQ
UT WOS:000292176300002
DA 2024-07-18
ER

PT J
AU Khan, SU
   Niazi, M
   Ahmad, R
AF Khan, Siffat Ullah
   Niazi, Mahmood
   Ahmad, Rashid
TI Barriers in the selection of offshore software development outsourcing
   vendors: An exploratory study using a systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic literature review; Software development outsourcing; Vendors;
   Barriers
ID PROCESS IMPROVEMENT; TRUST
AB Context: Software development outsourcing is a contract-based relationship between client and vendor organisations in which a client contracts out all or part of its software development activities to a vendor, who provides agreed services for remuneration.
   Objective: The objective is to identify various barriers that have a negative impact on software outsourcing clients in the selection process of offshore software development outsourcing vendors.
   Method: We have performed a systematic literature review (SLR) process for the identification of barriers. We have performed all the SLR steps such as the protocol development, initial selection, final selection, quality assessment, data extraction and data synthesis.
   Results: We have identified barriers such as 'language and cultural barriers', 'country instability', 'lack of project management', 'lack of protection for intellectual property rights' and 'lack of technical capability' that generally have a negative impact on outsourcing clients. We have identified only one common frequently cited barrier in three types of organisations (i.e. small, medium and large) which is 'language and cultural barriers'. We did not identify any common frequently cited barrier in three continents (Asia, North America and Europe) and in two decades (1990-1999 and 2000-mid 2008). The results also reveal the similarities and differences in the barriers identified through different study strategies.
   Conclusions: Vendors should address frequently cited barriers such as 'language and cultural barriers', 'country instability', 'lack of project management', 'lack of protection for intellectual property rights' and 'lack of technical capability' in order to compete in the offshore outsourcing business. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Khan, Siffat Ullah; Niazi, Mahmood] Univ Keele, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
   [Niazi, Mahmood] King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran, Saudi Arabia.
   [Niazi, Mahmood] Int Islamic Univ, Dept Software Engn, Islamabad, Pakistan.
   [Ahmad, Rashid] Natl Univ Sci & Technol, Coll EME, Rawalpindi, Pakistan.
C3 Keele University; King Fahd University of Petroleum & Minerals;
   International Islamic University, Pakistan; National University of
   Sciences & Technology - Pakistan
RP Niazi, M (corresponding author), Univ Keele, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
EM s.khan@epsam.keele.ac.uk; mkniazi@cs.keele.ac.uk; rashid@ceme.edu.pk
RI Khan, Siffat Ullah/B-3309-2017; Niazi, Mahmood/C-8873-2015
OI Khan, Siffat Ullah/0000-0003-0339-7915; Niazi,
   Mahmood/0000-0001-7318-7644
FU University of Malakand, Pakistan; Higher Education Commission, Pakistan;
   National University of Science and Technology, Pakistan
FX We are thankful to University of Malakand, Pakistan and Higher Education
   Commission, Pakistan for sponsoring the PhD research studies under FDP
   scholarship. We extend our thanks to National University of Science and
   Technology, Pakistan for facilitating/sponsoring our research activities
   in Pakistan. We are also thankful to all our software engineering group
   members at Keele University UK, and especially to Professor Pearl
   Brereton, Dr Mark Turner, Clive Jefferies and John Butcher for providing
   assistance in the review process.
CR [Anonymous], 2008, SOFTWARE PROCESS IMP, DOI DOI 10.1002/SPIP.380
   AUBERT B, 2003, P 36 HAW INT C SYST
   Babar MA, 2007, J SYST SOFTWARE, V80, P1438, DOI [10.1016/j.jss.2006.10.038, 10.1016/j.jss.2006.12.038]
   BEULEN E, 2002, 35 HAW INT C SYST SC
   Bhatnagar SC, 1997, J INFORM TECHNOL, V12, P277, DOI 10.1080/026839697345008
   BRADSTREET D, 2007, DUN BRADSTREETS BARO
   BUSH AA, 2007, INFORM SOFT IN PRESS
   Cataldo M, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P71
   Costa C., 2010, 14 INT C EV ASS SOFT
   Damian D, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P81
   DANIELA D, 2007, INT C GLOB SOFTW ENG, P81
   Goo J, 2007, DECIS SUPPORT SYST, V42, P2107, DOI 10.1016/j.dss.2006.05.007
   Heeks R, 2001, IEEE SOFTWARE, V18, P54, DOI 10.1109/52.914744
   Holmstrom H, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ICGSE.2006.261210
   Hossain E, 2009, INT CONF GLOBAL SOFT, P175, DOI 10.1109/ICGSE.2009.25
   Huang SJ, 2008, INFORM MANAGE-AMSTER, V45, P175, DOI 10.1016/j.im.2008.02.001
   JABANGWE R, 2010, THESIS BLEKINGE I TE
   JIMENEZ M, 2009, CHALLENGES IMPROVEME
   Kakabadse A, 2005, THUNDERBIRD INT BUS, V47, P183, DOI 10.1002/tie.20048
   Kern T, 2000, J STRATEGIC INF SYST, V9, P321, DOI 10.1016/S0963-8687(00)00048-2
   KHAN N, 2003, P IEEE 36 HAW INT C
   Khan SU, 2009, 16 IEEE AS PAC SOFTW
   KHAN SU, 2008, TR0801 KEEL U SCH CO
   Kitchenham B., 2007, 2007001 EBSE KEELE U
   KOBAYASHIHILLAR.M, 2009, OFFSHORING MOVES TIM
   KOBITZSCH W, 2001, IEEE SOFTWARE    MAR, P78
   Lago P, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P249, DOI 10.1109/ICGSE.2008.26
   Martin B., 2000, An Introduction to Medical Statistics, Vthird
   McLaughlin L, 2003, IEEE SOFTWARE, V20, P104, DOI 10.1109/MS.2003.1231166
   Narayanaswarmy R., 2005, P 2005 ACM SIGMIS CP, P139
   Nauman AB, 2004, INMIC 2004: 8th International Multitopic Conference, Proceedings, P403
   NGUYEN P, 2006, EASE, P10
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   Niazi M, 2005, J SYST SOFTWARE, V74, P155, DOI 10.1016/j.jss.2003.10.017
   Nicholson B., 2001, INFORM ORGAN-UK, V11, P25, DOI DOI 10.1016/S0959-8022(00)00008-4
   Oza N. V., 2006, THESIS U HERTFORDSHI
   Oza NV, 2006, INFORM SOFTWARE TECH, V48, P345, DOI 10.1016/j.infsof.2005.09.011
   OZA NV, 2005, 4 INT OUTS C WASH DC
   Rainer A, 2002, J SYST SOFTWARE, V62, P71, DOI 10.1016/S0164-1212(01)00122-4
   Rajkumar T.M., 1997, STRATEGIC SOURCING I, P369
   Sabherwal R, 1999, COMMUN ACM, V42, P80, DOI 10.1145/293411.293485
   Sahay S., 2003, GLOBAL IT OUTSOURCIN
   SAKTHIVEL S, 2007, COMMUNICATION ACM, V50
   Shao BBM, 2007, COMMUN ACM, V50, P89, DOI 10.1145/1216016.1216026
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Stark J., 2006, INT C GLOBAL SOFTWAR, P12
   TERDIMAN R, 2002, GOING OFFSHORE GLOBA
   Trewin D., 2002, Small business in Australia (ABS catalogue no. 1321.0)
   Wallace L, 2004, INFORM MANAGE-AMSTER, V42, P115, DOI 10.1016/j.im.2003.12.007
   Zwikael O, 2007, J OPER MANAG, V25, P755, DOI 10.1016/j.jom.2006.12.001
NR 50
TC 102
Z9 108
U1 2
U2 34
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2011
VL 53
IS 7
BP 693
EP 706
DI 10.1016/j.infsof.2010.08.003
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 767DU
UT WOS:000290836300001
DA 2024-07-18
ER

PT J
AU Baskerville, R
   Pries-Heje, J
   Madsen, S
AF Baskerville, Richard
   Pries-Heje, Jan
   Madsen, Sabine
TI Post-agility: What follows a decade of agility?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile information systems development; Agility; Grounded theory
ID SOFTWARE-DEVELOPMENT; SYSTEMS; STATE
AB Context: Agile information systems development (ISD) has received much attention from both the practitioner and researcher community over the last 10-15 years. However, it is still unclear what precisely constitutes agile ISD.
   Objective: Based on four empirical studies conducted over a 10-year time period from 1999 to 2008 the objective of this paper is to show how the meaning and practice of agile ISD has evolved over time and on this basis to speculate about what comes next.
   Method: Four phases of research has been conducted, using a grounded theory approach. For each research phase qualitative interviews were held in American and/or Danish companies and a grounded theory was inductively discovered by careful data analysis. Subsequently, the four unique theories have been analyzed for common themes, and a global theory was identified across the empirical data.
   Results: In 1999 companies were developing software at high-speed in a desperate rush to be first-to-market. In 2001 a new high-speed/quick results development process had become established practice. In 2003 changes in the market created the need for a more balanced view on speed and quality, and in 2008 companies were successfully combining agile and plan-driven approaches to achieve the benefits of both. The studies reveal a two-stage pattern in which dramatic changes in the market causes disruption of established practices and process adaptations followed by consolidation of lessons learnt into a once again stable software development process.
   Conclusion: The cyclical history of punctuated process evolution makes it possible to distinguish pre-agility from current practices (agility), and on this basis, to speculate about post-agility: a possible next cycle of software process evolution concerned with proactively pursuing the dual goal of agility and alignment through a diversity of means. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Pries-Heje, Jan; Madsen, Sabine] Roskilde Univ, Dept Commun Business & IT, DK-4000 Roskilde, Denmark.
   [Baskerville, Richard] Georgia State Univ, Atlanta, GA 30302 USA.
C3 Roskilde University; University System of Georgia; Georgia State
   University
RP Madsen, S (corresponding author), Roskilde Univ, Dept Commun Business & IT, Univ Vej 1, DK-4000 Roskilde, Denmark.
EM Baskerville@acm.org; Janph@ruc.dk; Sabinem@ruc.dk
RI Baskerville, Richard/I-1103-2014
OI Baskerville, Richard/0000-0003-2860-5215
CR Abrahamsson P, 2009, EUR J INFORM SYST, V18, P281, DOI 10.1057/ejis.2009.27
   Ågerfalk PJ, 2009, INFORM SYST RES, V20, P317, DOI 10.1287/isre.1090.0244
   Austin RD, 2009, INFORM SYST RES, V20, P462, DOI 10.1287/isre.1090.0242
   AVISON D, 2006, FUTURE INFORM SYSTEM, P27
   Baskerville R, 2004, INFORM SYST J, V14, P237, DOI 10.1111/j.1365-2575.2004.00171.x
   Baskerville R, 2003, IEEE SOFTWARE, V20, P70, DOI 10.1109/MS.2003.1241369
   Baskerville R, 2001, INT FED INFO PROC, V66, P49
   BASKERVILLE R, 2002, P 10 EUR C INF SYST, P282
   Baskerville R, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P87, DOI 10.1007/978-3-642-12575-1_5
   Beck K., 2000, EXTREME PROGRAMMING
   Beck K., 2001, Planning extreme programming
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Boehm B.W., 2004, Balancing Agility and Discipline: A Guide for the Perplexed
   COCKBURN A, 2002, J DEFENCE SOFTWARE E
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Cox A, 2005, J INF SCI, V31, P527, DOI 10.1177/0165551505057016
   Crosby P.B., 1980, Quality is free: The art of making quality certain
   Cusumano M.A., 1995, Microsoft secrets how the world's most powerful software company creates technology, shapes markets, and manages people
   Cusumano MichaelA., 2000, Competing on Internet Time: Lessons from Netscape and Its Battle with Microsoft
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Fitzgerald B., 2002, Information systems development : methods in action
   Hunt SD, 2008, ORGAN STUD, V29, P1469, DOI 10.1177/0170840608099521
   Iansiti M, 1997, HARVARD BUS REV, V75, P108
   Jeffries R., 2001, EXTREME PROGRAMMING
   Levina N, 2005, MIS QUART, V29, P335
   March JG, 1991, ORGAN SCI, V2, P71, DOI 10.1287/orsc.2.1.71
   ORLIKOWSKI WJ, 1993, MIS QUART, V17, P309, DOI 10.2307/249774
   PRIESHEJE J, 2005, SCANDINAVIAN J INFOR, V16, P11
   Rising L, 2000, IEEE SOFTWARE, V17, P26, DOI 10.1109/52.854065
   Smith P.G., 1995, DEV PRODUCTS HALF TI
   STAR SL, 1989, SOC STUD SCI, V19, P387, DOI 10.1177/030631289019003001
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Truex D., 2000, Accounting, Management and Information Technologies, V10, P53, DOI 10.1016/S0959-8022(99)00009-0
   Urquhart C, 1997, INFORMATION SYSTEMS AND QUALITATIVE RESEARCH, P149
   URQUHART C, 2000, QUALITATIVE REPORT, V4
NR 35
TC 47
Z9 59
U1 1
U2 34
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2011
VL 53
IS 5
SI SI
BP 543
EP 555
DI 10.1016/j.infsof.2010.10.010
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 742DI
UT WOS:000288919900011
DA 2024-07-18
ER

PT J
AU Neto, PADS
   Machado, ID
   McGregor, JD
   de Almeida, ES
   Meira, SRD
AF da Mota Silveira Neto, Paulo Anselmo
   Machado, Ivan do Carmo
   McGregor, John D.
   de Almeida, Eduardo Santana
   de Lemos Meira, Silvio Romero
TI A systematic mapping study of software product lines testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software product lines; Software testing; Mapping study
AB Context: In software development, Testing is an important mechanism both to identify defects and assure that completed products work as specified. This is a common practice in single-system development, and continues to hold in Software Product Lines (SPL). Even though extensive research has been done in the SPL Testing field, it is necessary to assess the current state of research and practice, in order to provide practitioners with evidence that enable fostering its further development.
   Objective: This paper focuses on Testing in SPL and has the following goals: investigate state-of-the-art testing practices, synthesize available evidence, and identify gaps between required techniques and existing approaches, available in the literature.
   Method: A systematic mapping study was conducted with a set of nine research questions, in which 120 studies, dated from 1993 to 2009, were evaluated.
   Results: Although several aspects regarding testing have been covered by single-system development approaches, many cannot be directly applied in the SPL context due to specific issues. In addition, particular aspects regarding SPL are not covered by the existing SPL approaches, and when the aspects are covered, the literature just gives brief overviews. This scenario indicates that additional investigation, empirical and practical, should be performed.
   Conclusion: The results can help to understand the needs in SPL Testing, by identifying points that still require additional investigation, since important aspects regarding particular points of software product lines have not been addressed yet. (C) 2010 Elsevier B.V. All rights reserved.
C1 [da Mota Silveira Neto, Paulo Anselmo; Machado, Ivan do Carmo; de Almeida, Eduardo Santana; de Lemos Meira, Silvio Romero] RiSE Reuse Software Engn, Recife, PE, Brazil.
   [da Mota Silveira Neto, Paulo Anselmo; Machado, Ivan do Carmo; de Lemos Meira, Silvio Romero] Univ Fed Pernambuco, Informat Ctr, Recife, PE, Brazil.
   [de Almeida, Eduardo Santana] Univ Fed Bahia, Dept Comp Sci, Salvador, BA, Brazil.
   [McGregor, John D.] Clemson Univ, Dept Comp Sci, Clemson, SC USA.
C3 Universidade Federal de Pernambuco; Universidade Federal da Bahia;
   Clemson University
RP Neto, PADS (corresponding author), RiSE Reuse Software Engn, Recife, PE, Brazil.
EM pauloadmsn@gmail.com
RI Ines, INCT/J-9550-2013; Machado, Isabel C/I-6935-2012; Meira,
   Silvio/AAT-9381-2020; Machado, Ivan/AAC-1015-2020; Machado,
   Ivan/AAL-8021-2020; de Almeida, Eduardo/JJC-2493-2023; Silveira,
   Paulo/AFR-7826-2022; Machado, Ivan/E-7228-2013
OI Machado, Ivan/0000-0001-9027-2293; 
FU CNPq; FACEPE [573964/2008-4, APQ-1037-1.03/08]
FX This work was partially supported by the National Institute of Science
   and Technology for Software Engineering (INES<SUP>4</SUP>), funded by
   CNPq and FACEPE, grants 573964/2008-4 and APQ-1037-1.03/08.
CR Afzal Wasif, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P488
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Al Dallal Jehad, 2008, Journal of Software, V3, P11, DOI 10.4304/jsw.3.5.11-25
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], CMUSEI2001TR022
   [Anonymous], EASE 08
   [Anonymous], P 5 WORKSH PROD FAM, DOI [10.1007/978-3-540-24667-1\15, DOI 10.1007/978-3-540-24667-1]
   Bailey John, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P482
   BERTOLINO A, 2003, SOFTWARE PRODUCT FAM, P181
   BERTOLINO A, 2003, ACM SIGSOFT SOFTWARE, V28, P355
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   BEZERRA YM, 2009, ITNG 09, P1024
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   BUDGEN D, 2008, P PPIG 2008 LANC U, P195
   Chen L, 2009, SPLC 09
   Cohen M.B., 2006, P ISSTA 2006 WORKSHO, P53, DOI DOI 10.1145/1147249.1147257
   Condori-Fernandez N, 2009, INT SYMP EMP SOFTWAR, P503
   CONDRON C, 2004, SPLIT 04, P27
   DENGER C, 2006, INT S EMP SOFTW ENG, P184
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   EDWIN OO, 2007, THESIS BLEKINGE I TE
   Engström E, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P22
   Feng YK, 2007, P INT COMP SOFTW APP, P403
   GANESAN D, 2005, SPLIT 05
   GEPPERT B, 2004, ICSR, P35
   GOLDSMITH RF, 2002, SOFTWARE DEV, P45
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   HARROLD MJ, 1998, ROSATEA 98, P73
   HARTMANN J, 2004, SPLIT 04, P58
   Jaring M, 2008, SEVENTH INTERNATIONAL CONFERENCE ON COMPOSITION-BASED SOFTWARE SYSTEMS, PROCEEDINGS, P120, DOI 10.1109/ICCBSS.2008.9
   Jin-hua L., 2008, ISCSCT 08, P690
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Juristo N, 2006, IEEE SOFTWARE, V23, P72, DOI 10.1109/MS.2006.166
   Juristo N, 2006, IEEE SOFTWARE, V23, P19, DOI 10.1109/MS.2006.104
   Kamsties E., 2003, International Workshop on Software Product-Family Engineering, P6
   Kang S, 2007, 2007 CIT: 7TH IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY, PROCEEDINGS, P921
   Kauppinen R., 2003, THESIS U HELSINKI
   KAUPPINEN R, 2003, SPLST 03, P58
   KAUPPINEN R, 2004, SPLIT 04, P7
   Kishi T, 2006, COMMUN ACM, V49, P73, DOI 10.1145/1183236.1183270
   Kitchenham B., 2007, REV SOFTWARE ENG
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kolb R., 2006, Proceedings of the ISSTA 2006 Workshop on Role of Software Architecture for Testing and Analysis, P22
   Kolb R., 2003, CONQUEST 03, P81
   KOLB R, 2003, IESEF 03
   LAMANCHA MPB, 2009, AST 09, P10
   LI JJ, 2007, SPLIT 07, P73
   LI JJ, 2007, SPLIT 07
   Lisboa LB, 2010, INFORM SOFTWARE TECH, V52, P1, DOI 10.1016/j.infsof.2009.05.001
   McGregor J.D., 2004, SOFTWARE PRODUCT LIN, P45
   MCGREGOR JD, 2001, ICSE 01, P89
   MCGREGOR JD, 2002, ICSR 02, P345
   MORAES MBS, 2009, ESELAW 09
   Muccini H, 2003, ELECT NOTES THEORETI, V82
   MUCCINI H, 2005, WADS 2005, P1
   Muccini H, 2006, J SYST SOFTWARE, V79, P1379, DOI 10.1016/j.jss.2006.02.059
   NEBUT C, 2006, PFE 03, P447
   Needham D, 2006, PROC IEEE INT CONF S, P401
   Northrop L.M., 2007, FRAMEWORK SOFTWARE P
   OLIMPIEW E, 2005, SPLIT 05
   OLIMPIEW EM, 2005, A MOST, P1
   Olimpiew EM, 2009, LECT NOTES COMPUT SC, V5791, P76
   Lamancha BP, 2009, ICSOFT 2009: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 1, P23
   POHL K, 2005, SOFTWARE PRODUCT LIN, P149
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Pohl K, 2006, COMMUN ACM, V49, P78, DOI 10.1145/1183236.1183271
   Pretorius R, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P342
   REIS S, 2006, SPLIT 05
   Reis S, 2007, LECT NOTES COMPUT SC, V4422, P321
   REUYS A, 2005, CAISE 05, P519
   REUYS A, 2006, PFE 03, P479
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   SOUZA ED, 2008, ECSA 08, P50
   TEVANLINNA A, 2004, ACM SIGSOFT SOFTWARE, V29, P12, DOI DOI 10.1145/979743.979766
   WEISS DM, 2008, SPLC 08, P39
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   WUBBEKE A, 2008, SPLC 08, P361
   [曾晖 Zeng Hui], 2004, [光通信研究, Study on Optical Communications], P1
NR 84
TC 152
Z9 152
U1 0
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2011
VL 53
IS 5
SI SI
BP 407
EP 423
DI 10.1016/j.infsof.2010.12.003
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 742DI
UT WOS:000288919900001
OA hybrid
DA 2024-07-18
ER

PT J
AU André, M
   Baldoquín, MG
   Acuña, ST
AF Andre, Margarita
   Baldoquin, Maria G.
   Acuna, Silvia T.
TI Formal model for assigning human resources to teams in software projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Formal model; Human resources assignment; Software project team; Delphi
   method; Psychological tests
ID SYSTEMATIC-APPROACH; PERSONALITY; PERFORMANCE; COMPETENCES;
   PROFESSIONALS; ROLES
AB Context: Human resources play a critical role in software project success. However, people are still the least formalized factor in today's process models. Generally, people are assigned to roles and project teams are formed on the basis of project leaders' experience of people, constraints (e.g. availability) and skill requirements. Yet this process has to take multiple factors into account. Few works in the literature model this process. Most of these are informal proposals focusing on the individual assignment of people to project tasks and do not consider other aspects like team formation as a whole.
   Objective: In this paper we formulate a formal model for assigning human resources to software project teams. Additionally, we describe the key results of the knowledge management process enacted to output the elements of the model.
   Method: The model elements were identified using the Delphi expert consultation method and applying psychological tests. The proposed model was implemented in a software tool and validated on two software development organization assignment scenarios.
   Results: We built a formal model for the process of assigning human resources to software project teams. This model takes into account as many factors as possible and aids the assignment of individuals to project roles, as well as the formation of the team as a whole.
   We found that the rules that were identified to form software development project teams are useful. From the tests we found that model implementation was feasible (all the executions of the implemented problem-solving algorithms output feasible solutions in response times that can be considered as acceptable).
   Conclusion: Using the Delphi method we were able to propose software project roles and competences. Psychological tests and data mining tools identified useful rules for forming software project teams. These were used to build a formal model. This model was built into a tool that returns role assignments in acceptable response times. This decision support tool helps managers assign people to roles and to form teams. Using the tool, project leaders can flexibly evaluate different team make-ups, taking into account several factors, as well as different constraints and objectives. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Andre, Margarita; Baldoquin, Maria G.] Inst Super Politecn Jose Antonio Echeverria, Havana, Cuba.
   [Acuna, Silvia T.] Univ Autonoma Madrid, Dept Ingn Informat, E-28049 Madrid, Spain.
C3 Autonomous University of Madrid
RP André, M (corresponding author), Inst Super Politecn Jose Antonio Echeverria, Calle 114 11901 E-119 & 127,Marianao 15, Havana, Cuba.
EM mayi@ceis.cujae.edu.cu; gulnara@ind.cujae.edu.cu; silvia.acunna@unam.es
RI Acuña, Silvia/A-7395-2008
FU  [TIN2008-02081/TIN];  [S2009/TIC-1650];  [TIN2008-00555/TIN]
FX The research described in this paper was supported in part by projects
   TIN2008-02081/TIN, S2009/TIC-1650 and TIN2008-00555/TIN.
CR Acuña ST, 2008, EMPIR SOFTW ENG, V13, P401, DOI 10.1007/s10664-008-9074-8
   Acuña ST, 2009, INFORM SOFTWARE TECH, V51, P627, DOI 10.1016/j.infsof.2008.08.006
   Acuña ST, 2006, IEEE SOFTWARE, V23, P94, DOI 10.1109/MS.2006.47
   Acuña ST, 2004, SOFTWARE PRACT EXPER, V34, P675, DOI 10.1002/spe.586
   Amengual E, 2007, LECT NOTES COMPUT SC, V4589, P108
   [Anonymous], 100062003 ISO
   [Anonymous], 1998, MANAGING TECHNICAL P
   [Anonymous], 2004, GUID PROJ MAN BOD KN, V3rd
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Belbin R.M., 2004, Management teams: Why they succeed or fail, V2nd
   Boucher X, 2007, COMPUT IND, V58, P98, DOI 10.1016/j.compind.2006.09.004
   BRANDT C, 2006, THESIS JONKOPING U
   Briggs I., 1998, INTRO TYPE GUIDE UND
   Capretz LF, 2003, INT J HUM-COMPUT ST, V58, P207, DOI 10.1016/S1071-5819(02)00137-4
   Capretz LF, 2010, IT PROF, V12, P6, DOI 10.1109/MITP.2010.33
   *CAR SPAC, JOB PROF
   CATELL RB, 1993, 16 PERSONALITY FACTO
   Charette RN, 2005, IEEE SPECTRUM, V42, P42, DOI 10.1109/MSPEC.2005.1502528
   COCKBURN A, 2000, 4 INT MULTICONFERENC
   Colomo-Palacios R, 2010, INT J HUM CAP INF TE, V1, P31, DOI 10.4018/jhcitp.2010091103
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Curtis B., 2001, CMUSEI2001MM01
   CURTIS B, 1989, 11 INT C SOFTW ENG P
   DECARVALHO LR, 2003, THESIS U FEDERAL RIO
   DeMarco T, 1999, PEOPLEWARE PRODUCTIV
   DEVITO A, 2004, TECHNICAL REPORT SER, V837
   Gorla N, 2004, COMMUN ACM, V47, P79, DOI 10.1145/990680.990684
   Henry SM, 1999, J SYST SOFTWARE, V44, P241, DOI 10.1016/S0164-1212(98)10060-2
   Hillier F., 2004, Introduction to Operations Research, VSeventh
   Humphrey W S, 1995, A discipline for software engineering
   Humphrey WattsS., 2000, Introduction to the team software process
   Hunter M. G., 2004, J GLOB INF MANAG, V12, P1
   IEEE Computer Society, 2004, GUID SOFTW ENG BOD K
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   KARN J, 2006, THESIS U SHEFFIELD
   KLAUS P, 2001, THESIS VIRGINIA POLY
   LAKHANPAL B, 1993, INFORM SOFTWARE TECH, V35, P468, DOI 10.1016/0950-5849(93)90044-4
   Linstone A., 2002, DELPHI METHOD TECHNI
   McDonald S, 2007, COMMUN ACM, V50, P67
   Ngo-The A, 2008, SOFT COMPUT, V12, P95, DOI [10.1007/S00500-007-0219-2, 10.1007/s00500-007-0219-2]
   Otero LD, 2009, COMPUT IND ENG, V56, P1333, DOI 10.1016/j.cie.2008.08.002
   PESLAK AR, 2006, P 2006 ACM SIGMIS CP, P273
   PINKOWSKA M, 2006, P 14 INT INF MAN TAL
   Pyster AB, 2005, IEEE SOFTWARE, V22, P18, DOI 10.1109/MS.2005.137
   Rutherfoord R. H., 2001, SIGCSE Bulletin, V33, P73, DOI 10.1145/507758.377486
   Ryan R., 2007, MIS Q EXEC, V6, P67
   Sawyer S, 2001, INFORM SYST J, V11, P155, DOI 10.1046/j.1365-2575.2001.00100.x
   STEVENS KT, 2002, ANAL SOFTWARE TEAM U
   THOMAS R, 1999, P OOPSLA 99
   THOMSON C, 2007, P 3 S E EUR FORM MET, P141
   Trigo A, 2010, INT J HUM CAP INF TE, V1, P61, DOI 10.4018/jhcitp.2010091105
   Tsai HT, 2003, EUR J OPER RES, V151, P167, DOI 10.1016/S0377-2217(02)00600-8
   TURLEY RT, 1995, J SYST SOFTWARE, V28, P19, DOI 10.1016/0164-1212(94)00078-2
   *US BUR LAB STAT, 2002, OCC OUTL HDB
   Varvell T, 2004, J MANAGE ENG, V20, P141, DOI 10.1061/(ASCE)0742-597X(2004)20:4(141)
   Witten I. H., 2005, DATA MINING PRACTICA
   Yang HL, 2004, INFORM MANAGE-AMSTER, V41, P335, DOI 10.1016/S0378-7206(03)00078-8
   YELLEN RE, 1995, INFORM MANAGE, V28, P63, DOI 10.1016/0378-7206(94)00023-C
   Zhu HB, 2008, IEEE T SYST MAN CY C, V38, P377, DOI 10.1109/TSMCC.2008.919168
   Zhu HB, 2006, IEEE T SYST MAN CY A, V36, P1110, DOI 10.1109/TSMCA.2006.883170
   ZUSER W, 2003, P 16 C SOFTW ENG ED
NR 61
TC 45
Z9 52
U1 1
U2 28
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2011
VL 53
IS 3
BP 259
EP 275
DI 10.1016/j.infsof.2010.11.011
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 734PT
UT WOS:000288348500007
DA 2024-07-18
ER

PT J
AU Seo, J
   Choi, B
   Yang, S
AF Seo, Jooyoung
   Choi, Byoungju
   Yang, Suengwan
TI A profiling method by PCB hooking and its application for memory fault
   detection in embedded system operational test
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Operational test; Profiling method; PCB hooking; Runtime memory fault;
   Embedded system; Embedded software
AB Context: An operational test means a system test that examines whether or not all software or hardware components comply with the requirements given to a system which is deployed in an operational environment.
   Objective: It is a necessary lightweight-profiling method for embedded systems with severe resource restrictions to conduct operational testing.
   Method: We focus on the Process Control Block as the optimal location to monitor the execution of all processes. We propose a profiling method to collect the runtime execution information of the processes without interrupting the system's operational environment by hacking the Process Control Block information. Based on the proposed method applied to detect runtime memory faults, we develop the operational testing tool AMOS v1.0 which is currently being used in the automobile industry.
   Results: An industrial field study on 23 models of car-infotainment systems revealed a total 01 519 memory faults while only slowing down the system by 0.084-0132x. We conducted a comparative analysis on representative runtime memory fault detection tools. This analysis result shows our proposed method that has relatively low overhead meets the requirements for operational testing, while other methods failed to satisfy the operational test conditions.
   Conclusion: We conclude that a lightweight-profiling method for embedded system operational testing can be built around the Process Control Block. (c) 2010 Elsevier B.V. All rights reserved.
C1 [Seo, Jooyoung; Choi, Byoungju] Ewha Womans Univ, Dept Comp Sci & Engn, Seoul, South Korea.
C3 Ewha Womans University
RP Choi, B (corresponding author), Ewha Womans Univ, Dept Comp Sci & Engn, Seoul, South Korea.
EM bjchoi@ewha.ac.kr
FU Hyundai Kia Motors
FX The research was supported by the Hyundai Kia Motors from 2008 to 2009.
CR *A CO LTD, 2004, TECHN REP SQA EV MOD
   [Anonymous], 610121990 IEEE
   Bovet D.P., 2002, UNDERSTANDING LINUX, V2nd
   Broekman Bart., 2003, Testing embedded software
   CLAUSE J, 2007, P INT C AUT SOFTW EN, P283
   ERNST MD, 2003, P WODA 2003 PORTL OR, P6
   Hastings Reed., 1992, WINTER USENIX C, P125
   *IBM RAT SOFTW, TECHN REP DEV FAST R
   *IBM RAT SOFTW, 2010, PUR
   KAPFHAMMER GM, 2005, P 20 IEEE ACM INT C, P418
   Kumar Naveen., 2005, PASTE 05, P28, DOI DOI 10.1145/1108768.1108801
   LUECKE CR, 2006, J CONCURRENCY COMPUT, V18, P1855
   NETHERCOTE N, 2007, P ACM SIGPLAN SIGOPS
   Nethercote N., 2004, THESIS CAMBRIDGE
   Nethercote N, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P89, DOI 10.1145/1250734.1250746
   Pavlov S., 2008, WINDOWS EMBEDDED CE6
   Runeson P, 2003, J SOFTW MAINT EVOL-R, V15, P41, DOI 10.1002/smr.265
   Seward J., 2005, P USENIX 05 ANN TECH
   2010, HOOKING
   2010, SOFTWARE PROFILING
   2010, PCB PROCESS CONTROL
NR 21
TC 8
Z9 11
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2011
VL 53
IS 1
BP 106
EP 119
DI 10.1016/j.infsof.2010.09.003
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 692QV
UT WOS:000285171100009
DA 2024-07-18
ER

PT J
AU Chang, KC
   Sheu, TS
   Klein, G
   Jiang, JJ
AF Chang, Kuo-chung
   Sheu, Tsong Shin
   Klein, Gary
   Jiang, James J.
TI User commitment and collaboration: Motivational antecedents and project
   performance
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Extrinsic motivation; Relationship commitment; Collaboration; Project
   performance; Software development; Project teams
ID ORGANIZATIONAL COMMITMENT; MANAGEMENT RESEARCH; TEAM PERFORMANCE;
   SOFTWARE; VALIDITY; DESIGN; MODELS
AB Context: Prior research into the success of information system development projects views user commitment and collaboration as unrelated concepts in models that take either a perspective of mediators or one of processes. This perspective is limiting in that mediators and processes may interact during the course of an information system development project.
   Objective: In this work, we model both mediators and processes as important to project outcomes and propose that processes will also be impacted by affective mediators, specifically the behavioral mediator of user commitment and the project process of collaboration. The model also allows behavioral antecedents to be considered in relation to the mediation variable, specifically the ability of the users and the extrinsic motivators perceived by the users.
   Method: A questionnaire containing constructs of collaboration processes, user commitment, abilities, and extrinsic motivation are completed by users in a development project and project success is measured by the IS staff for a matching independent variable. 128 matching pairs were collected and the model analyzed using partial least squares regression.
   Results: Results indicate that the affective mediator can be influenced by the tested antecedents showing that IS project managers should be able to choose users with essential abilities and also establish sufficient rewards to employees, even those who may not be direct subordinates. Similarly, collaboration is still important to the success of a project, indicating that procedures to encourage collaboration be installed from the beginning of the project. However, commitment alone is sufficient to predict collaboration, meaning that motivation outside the processes in place may not be necessary to encourage collaboration between the users and IS staff.
   Conclusion: IS researchers should consider both process mediators and affective states in future work when considering the link between antecedent inputs of software projects to the success of outputs. IS managers should promote commitment among users beyond placing collaboration mechanisms in place. This might require project managers have more decision authority in the rewards provided to user participants. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Klein, Gary] Univ Colorado, Coll Business & Adm, Colorado Springs, CO 80918 USA.
   [Jiang, James J.] Australian Natl Univ, Res Sch Business, Canberra, ACT 0200, Australia.
   [Sheu, Tsong Shin] Nan Kai Univ Technol, Dept Ind Engn & Management, Caotun Township, Nantou, Taiwan.
   [Chang, Kuo-chung] Yuan Ze Univ, Dept Informat Management, Tao Yuan, Taiwan.
C3 University of Colorado System; University of Colorado at Colorado
   Springs; Australian National University; Nan Kai University Technology;
   Yuan Ze University
RP Klein, G (corresponding author), Univ Colorado, Coll Business & Adm, 1420 Austin Bluffs Pkwy, Colorado Springs, CO 80918 USA.
EM gklein@uccs.edu
RI Jiang, James/JPK-7730-2023; 江, 俊毅/N-6899-2018
CR AJZEN I, 1975, PSYCHOL BULL, V82, P261, DOI 10.1037/h0076477
   Amabile TM, 2001, ACAD MANAGE J, V44, P418, DOI 10.5465/3069464
   [Anonymous], 1994, ACAD MANAGE J
   [Anonymous], 1998, MIS Quarterly
   Arakji RY, 2007, J MANAGE INFORM SYST, V24, P195, DOI 10.2753/MIS0742-1222240208
   ARAM JD, 1976, MANAGE SCI, V22, P1127, DOI 10.1287/mnsc.22.10.1127
   BAGOZZI RP, 1991, ADMIN SCI QUART, V36, P421, DOI 10.2307/2393203
   Banker RD, 2006, INFORM SYST RES, V17, P352, DOI 10.1287/isre.1060.0104
   Barki H., 1993, Journal of Management Information Systems, V10, P203
   DAILEY RC, 1978, MANAGE SCI, V24, P1579
   Davenport Thomas., 2000, WORKING KNOWLEDGE
   Dennis AR, 2003, MIS QUART, V27, P289
   Dessler Gary., 1999, ACAD MANAGE EXEC, V13, P58
   Eby LT, 1999, J OCCUP ORGAN PSYCH, V72, P463, DOI 10.1348/096317999166798
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   GAERTNER K, 1989, HUM RELAT, V42, P973
   Guinan PJ, 1998, INFORM SYST RES, V9, P101, DOI 10.1287/isre.9.2.101
   Gundlach G. T., 1995, J MARKETING, V59, P78, DOI DOI 10.2307/1252016
   HACKMAN JR, 1976, ORGAN BEHAV HUM PERF, V16, P250, DOI 10.1016/0030-5073(76)90016-7
   Handy C., 1999, UNDERSTANDING ORG, V4th
   Hargadon AB, 1998, CALIF MANAGE REV, V40, P209, DOI 10.2307/41165951
   Hulland J, 1999, STRATEGIC MANAGE J, V20, P195, DOI 10.1002/(SICI)1097-0266(199902)20:2<195::AID-SMJ13>3.3.CO;2-Z
   Hunton JE, 1997, MANAGE SCI, V43, P797, DOI 10.1287/mnsc.43.6.797
   Ilgen DR, 2005, ANNU REV PSYCHOL, V56, P517, DOI 10.1146/annurev.psych.56.091103.070250
   Jiang J, 2000, J SYST SOFTWARE, V52, P3, DOI 10.1016/S0164-1212(99)00128-4
   Jiang JJ, 2006, J ASSOC INF SYST, V7, P68, DOI 10.17705/1jais.00082
   Jones MC, 1996, INFORM MANAGE-AMSTER, V31, P57, DOI 10.1016/S0378-7206(96)01068-3
   KELLEY SW, 1992, J BUS RES, V25, P197, DOI 10.1016/0148-2963(92)90029-B
   KLINE CJ, 1991, ACAD MANAGE J, V34, P194, DOI 10.5465/256307
   Kreitner R., 2009, Organizational behavior, V9th
   Liedtka J.M., 1996, Academy of Management Executives, V10, P20
   Marks MA, 2001, ACAD MANAGE REV, V26, P356, DOI 10.5465/AMR.2001.4845785
   Marshall E. M., 1995, MANAGE REV, V84, P13
   Mathieu J, 2008, J MANAGE, V34, P410, DOI 10.1177/0149206308316061
   McDonough EF, 2000, J PROD INNOVAT MANAG, V17, P221, DOI 10.1111/1540-5885.1730221
   McGrath J. E., 1964, A social psychological approach to the study of negotiation
   MESSICK S, 1980, AM PSYCHOL, V35, P1012, DOI 10.1037/0003-066X.35.11.1012
   MORGAN RM, 1994, J MARKETING, V58, P20, DOI 10.2307/1252308
   MORRIS JH, 1981, ACAD MANAGE J, V24, P512, DOI 10.5465/255572
   MOWDAY RT, 1979, J VOCAT BEHAV, V14, P224, DOI 10.1016/0001-8791(79)90072-1
   Palmatier RW, 2007, J MARKETING, V71, P172, DOI 10.1509/jmkg.71.4.172
   Ramlall Sunil., 2004, J AM ACAD BUSINESS, V5, P52
   Robbins S.P., 2013, Organizational behavior
   Schwarzer R, 1997, APPL PSYCHOL-INT REV, V46, P69, DOI 10.1111/j.1464-0597.1997.tb01096.x
   Shapira B, 2001, J AM SOC INF SCI TEC, V52, P879, DOI 10.1002/asi.1148
   Steers R.M., 1991, MOTIVATION WORK BEHA
   STEERS RM, 1977, ADMIN SCI QUART, V22, P46, DOI 10.2307/2391745
   Subramanian GH, 2007, J SYST SOFTWARE, V80, P616, DOI 10.1016/j.jss.2006.06.014
   TAN M, 1994, INFORM MANAGE, V26, P219, DOI 10.1016/0378-7206(94)90094-9
   Thatcher J. B., 2006, Data Base for Advances in Information Systems, V37, P133, DOI 10.1145/1161345.1161361
   WANG ETG, 2006, INFORM SOFTWARE TECH, V48, P244
   Weitz BartonA., 1995, J ACAD MARKET SCI, V23, P305, DOI DOI 10.1177/009207039502300411
NR 52
TC 26
Z9 32
U1 1
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2010
VL 52
IS 6
BP 672
EP 679
DI 10.1016/j.infsof.2010.02.003
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 602PE
UT WOS:000278150500007
DA 2024-07-18
ER

PT J
AU Hassouna, A
   Tahvildari, L
AF Hassouna, Alaa
   Tahvildari, Ladan
TI An effort prediction framework for software defect correction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software effort prediction; Case-based reasoning; Clustering; Software
   defect correction; Issue tracking system
AB This article tackles the problem of predicting effort (in person-hours) required to fix a software defect posted on an Issue Tracking System. The proposed method is inspired by the Nearest Neighbour Approach presented by the pioneering work of Weiss et al. (2007) [1]. We propose four enhancements to Weiss et al. (2007) [1]: Data Enrichment, Majority Voting, Adaptive Threshold and Binary Clustering. Data Enrichment infuses additional issue information into the similarity-scoring procedure, aiming to increase the accuracy of similarity scores. Majority Voting exploits the fact that many of the similar historical issues have repeating effort values, which are close to the actual. Adaptive Threshold automatically adjusts the similarity threshold to ensure that we obtain only the most similar matches. We use Binary Clustering if the similarity scores are very low, which might result in misleading predictions. This uses common properties of issues to form clusters (independent of the similarity scores) which are then used to produce the predictions. Numerical results are presented showing a noticeable improvement over the method proposed in Weiss et al. (2007) [1]. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Hassouna, Alaa; Tahvildari, Ladan] Univ Waterloo, EE&CE Dept, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Tahvildari, L (corresponding author), Univ Waterloo, EE&CE Dept, Waterloo, ON N2L 3G1, Canada.
EM ahassoun@uwaterloo.ca; ltahvild@uwaterloo.ca
CR [Anonymous], P 15 INT C MACH LEAR
   *AP SOFTW FDN, 2008, WELC LUC
   *ATL, 2008, JIRA BUG TRACK PROJ
   *ATL, 2008, JBOSS JIRA SYST DASH
   *ATL, 2008, SPRING PROJ ISS TRAC
   *ATL, 2008, AP SOFTW FDN JIRA SY
   *ATL, 2008, FLEX BUG ISS MAN SYS
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   EVANCO W, 1995, 6 ANN OR WORKSH SOFT, P75
   Evanco WM, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P114, DOI 10.1109/CSMR.2001.914975
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Frank E, 2000, MACH LEARN, V41, P5, DOI 10.1023/A:1007670802811
   Hastie T., 2001, ELEMENTS STAT LEARNI, DOI 10.1007/978-0-387-84858-7_2
   Hatcher E, 2004, ACTION SERIES
   IWATA K, 2006, P INT C COMP SCI APP, P40
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   MathWorks, 2008, MATL LANG TECHN COMP
   MENZIES T, 2004, NASA KC1 SOFTWARE DE
   *MYSQL AB, 2008, MYSQL WORLDS MOST PO
   PHANSALKAR A, 2006, P STAND PERF EV CORP
   *PHP GROUP, 2008, PHP HYP PREPR
   Quinlan J.R., 1993, C4 5 PROGRAMS MACHIN
   Ramírez JF, 2001, EXP ASTRON, V12, P163, DOI 10.1023/A:1021899116161
   Russell S., 2016, Artificial intelligence a modern approach
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Sherwood T, 2001, 2001 INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, PROCEEDINGS, P3, DOI 10.1109/PACT.2001.953283
   Song QB, 2006, IEEE T SOFTWARE ENG, V32, P69, DOI 10.1109/TSE.2006.1599417
   Sun J, 2006, LECT NOTES ARTIF INT, V4093, P947
   *SUN MICR INC, 2008, DEV RES JAV TECHN
   *TECHEXCEL, 2008, DEVTR DEF TRACK ISS
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Zeng H, 2004, P INT COMP SOFTW APP, P20
NR 33
TC 7
Z9 7
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2010
VL 52
IS 2
BP 197
EP 209
DI 10.1016/j.infsof.2009.10.003
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 540WW
UT WOS:000273372400006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pahl, C
   Giesecke, S
   Hasselbring, W
AF Pahl, Claus
   Giesecke, Simon
   Hasselbring, Wilhelm
TI Ontology-based modelling of architectural styles
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architecture modelling; Architecture ontology; Architectural
   style; Description logics
ID QUALITY
AB The conceptual modelling of software architectures is of central importance for the quality of a software system. A rich modelling language is required to integrate the different aspects of architecture modelling, Such as architectural styles, structural and behavioural modelling, into a coherent framework. Architectural styles are often neglected in software architectures We propose an ontological approach for architectural style modelling based oil description logic as an abstract, meta-level modelling instrument. We introduce a framework for style definition and style combination The application of the ontological framework in the form of an integration into existing architectural description notations is illustrated (C) 2009 Elsevier B.V. All rights reserved.
C1 [Pahl, Claus] Dublin City Univ, Sch Comp, Dublin 9, Ireland.
   [Giesecke, Simon] BTC Business Technol Consulting AG, D-10719 Berlin, Germany.
   [Hasselbring, Wilhelm] Univ Kiel, Software Engn Grp, D-24118 Kiel, Germany.
C3 Dublin City University; University of Kiel
RP Pahl, C (corresponding author), Dublin City Univ, Sch Comp, Dublin 9, Ireland.
EM Claus.Pahl@dcu.ie; SimonGiesecke@btc-ag.com; wha@informatik.uni-kiel.de
RI ; Hasselbring, Wilhelm/G-4794-2011
OI Pahl, Claus/0000-0002-9049-212X; Hasselbring,
   Wilhelm/0000-0001-6625-4335
CR Abowd G. D., 1995, ACM Transactions on Software Engineering and Methodology, V4, P319, DOI 10.1145/226241.226244
   Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   [Anonymous], 1991, P 12 INT JOINT C ART
   Baader F., 2003, DESCRIPTION LOGIC HD
   Bachmann F., 2002, CMUSEI2002TN001
   Baresi L, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P155, DOI 10.1109/WICSA.2004.1310699
   BARRETT R, 2006, INT C WEB ENG ICWE 0
   Canal C, 2001, SCI COMPUT PROGRAM, V41, P105, DOI 10.1016/S0167-6423(01)00002-8
   Clements P., 2003, SEI S SOFTW
   CORTELLESSA V, 2006, SAC 06, P1218
   GARLAN D, 2006, C RES PRACTICE INFOR, V69
   Giesecke S, 2007, ADV ENG INFORM, V21, P169, DOI 10.1016/j.aei.2006.11.002
   GLESECKE S, 2007, P WORK IEEE IFIP C S
   HIRSCH D, 2006, LNCS SERIES
   ISO/IEC, 2001, Software engineering-Product quality-Part 1: Quality model
   Jung HW, 2004, IEEE SOFTWARE, V21, P88, DOI 10.1109/MS.2004.1331309
   Kazman R, 2000, ANN SOFTW ENG, V9, P5, DOI 10.1023/A:1018964405965
   Kozen Dexter., 1990, Handbook of Theoretical Computer Science, P789
   MAGEE J, 1995, P 5 EUR SOFTW ENG C, V989, P137
   Medvidovic N, 1997, LECT NOTES COMPUT SC, V1301, P60, DOI 10.1145/267896.267903
   MERAYER DL, 1998, IEEE T SOFTWARE ENG, V24, P521
   *OBJ MAN GROUP, 2006, AD20060501 OMG
   Pahl C, 2005, LECT NOTES COMPUT SC, V3748, P88
   PAHL C, 2005, INT J WEB GRID SERV, V1, P287
   PAHL C, 2007, INT J SOFTW TOOLS TE, V9, P169
   Pahl C, 2007, LECT NOTES COMPUT SC, V4758, P60
   Roman D, 2005, APPL ONTOL, V1, P77
   SPITZNAGEL B, 1998, P 1998 C SOFW ENG KN
   Sycara Katia., 2003, WEB SEMANTICS SCI SE, V1, P27
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   WIEDERHOLD G, 1992, COMPUTER, V25, P38, DOI 10.1109/2.121508
NR 31
TC 23
Z9 30
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2009
VL 51
IS 12
BP 1739
EP 1749
DI 10.1016/j.infsof.2009.06.001
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 510ZR
UT WOS:000271133600008
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Walia, GS
   Carver, JC
AF Walia, Gursimran Singh
   Carver, Jeffrey C.
TI A systematic literature review to identify and classify software
   requirement errors
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic literature review; Human errors; Software quality
ID PROCESS IMPROVEMENT; ORGANIZATIONAL ERROR; FAILURE ANALYSIS; FAULT
   CONTENT; INSPECTIONS; DESIGN; METHODOLOGY; MAINTENANCE; PERSPECTIVE;
   COMPLEXITY
AB Most software quality research has focused on identifying faults (i.e., information is incorrectly recorded in an artifact). Because software still exhibits incorrect behavior, a different approach is needed. This paper presents a systematic literature review to develop taxonomy of errors (i.e., the sources of faults) that may occur during the requirements phase of software lifecycle. This taxonomy is designed to aid developers during the requirement inspection process and to improve overall software quality. The review identified 149 papers from the software engineering, psychology and human cognition literature that provide information about the sources of requirements faults. A major result of this paper is a categorization of the sources of faults into a formal taxonomy that provides a starting point for future research into error-based approaches to improving software quality. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Carver, Jeffrey C.] Univ Alabama, Tuscaloosa, AL 35487 USA.
   [Walia, Gursimran Singh] Mississippi State Univ, Dept Comp Sci & Engn, Mississippi State, MS 39762 USA.
C3 University of Alabama System; University of Alabama Tuscaloosa;
   Mississippi State University
RP Carver, JC (corresponding author), Univ Alabama, Box 870290,101 Houser Hall, Tuscaloosa, AL 35487 USA.
EM gw86@cse.msstate.edu; carver@cs.ua.edu
RI Carver, Jeffrey/AAM-8202-2020; Carver, Jeffrey/AFP-1987-2022
OI Carver, Jeffrey/0000-0002-7824-9151; Carver, Jeffrey/0000-0002-7824-9151
CR ACKERMAN AF, 1989, IEEE SOFTWARE, V6, P31, DOI 10.1109/52.28121
   ALLEN EB, 2003, MSU030429 DEP COMP S
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   Aurum A, 2002, SOFTW TEST VERIF REL, V12, P133, DOI 10.1002/stvr.243
   Bailey BP, 2006, COMPUT HUM BEHAV, V22, P685, DOI 10.1016/j.chb.2005.12.009
   BASILI V, 1994, IEEE SOFTWARE, V11, P58, DOI 10.1109/52.300090
   Basili V., 1981, P 5 INT C SOFTWARE E, P314
   Basili V. R., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P345
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Basili VR, 1997, J SYST SOFTWARE, V38, P3, DOI 10.1016/S0164-1212(97)00065-4
   BASILI VR, 1985, IEEE COMPUTER, V18
   Basu S, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P22, DOI 10.1109/ISSRE.1998.730765
   Batra D, 2007, REQUIR ENG, V12, P231, DOI 10.1007/s00766-006-0040-y
   Beecham S, 2005, J SYST SOFTWARE, V76, P251, DOI 10.1016/j.jss.2004.06.004
   Bell T E., 1976, Proceedings of the 2nd International Conference on Software Engineering, P61
   Benstead J. C., 1978, Proceedings of the First Conference of the Council of Australian Weed Science Societies held at National Science Centre, Parkville, Victoria, Australia, 12-14 April 1978, P87, DOI 10.1145/800283.811105
   Berling T, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P229
   Bernández B, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P257, DOI 10.1109/METRIC.2004.1357908
   BHANDARI I, 1994, IBM SYST J, V33, P182, DOI 10.1147/sj.331.0182
   BHANDARI I, 1993, IEEE T SOFTWARE ENG, V19, P1157, DOI 10.1109/32.249661
   Biffl S, 2001, PROC INT CONF SOFTW, P155, DOI 10.1109/ICSE.2001.919090
   Biolchini J., 2005, Systematic review in software engineering(05)
   BLACKBURN MR, 2001, TEST COMP SOFTW C, P25
   Blavier A, 2005, ERGONOMICS, V48, P758, DOI 10.1080/00140130500123670
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   BOVE T, 2002, DEV VALIDATION HUMAN, P234
   BOVE T, 2002, THESIS U ROSKILDE
   Browne GJ, 2002, INFORM MANAGE-AMSTER, V39, P625, DOI 10.1016/S0378-7206(02)00014-9
   Brykczynski B, 1999, ACM SIGSOFT SOFTWARE, V24, P82
   BUSE DK, 1999, P 1 WORKSH HUM ERR C
   Cacciabue PC, 1997, IEEE T SYST MAN CY A, V27, P325, DOI 10.1109/3468.568741
   Card DN, 1998, IEEE SOFTWARE, V15, P56, DOI 10.1109/52.646883
   Cheng B., 1996, Proceedings 1996 Australian Software Engineering Conference, P203, DOI 10.1109/ASWEC.1996.534137
   Chernak Y, 1996, IEEE T SOFTWARE ENG, V22, P866, DOI 10.1109/32.553635
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Ciolkowski M, 2003, IEEE SOFTWARE, V20, P46, DOI 10.1109/MS.2003.1241366
   Clark B., 2001, SOFTWARE ENG S, P1
   Coughlan J., 2002, Requirements Engineering, V7, P47, DOI 10.1007/s007660200004
   Cristopher W.J., 2002, J SYSTEM SOFTWARE, V62, P1
   de Oliveira KM, 2004, J SYST SOFTWARE, V72, P145, DOI 10.1016/S0164-1212(03)00233-4
   Debou C., 2000, Software Process Improvement and Practice, V5, P55, DOI 10.1002/(SICI)1099-1670(200003)5:1<55::AID-SPIP111>3.0.CO;2-X
   Dekker SWA, 2003, INT J AVIAT PSYCHOL, V13, P95, DOI 10.1207/S15327108IJAP1302_01
   Dhillon BS, 2006, J QUAL MAINT ENG, V12, P21, DOI 10.1108/13552510610654510
   Duncan GE, 1996, PEDIATR EXERC SCI, V8, P251, DOI 10.1123/pes.8.3.251
   Dyba T., 2005, EXPERIENCES UNDERTAK
   El Emam K, 2000, J SYST SOFTWARE, V54, P119, DOI 10.1016/S0164-1212(00)00032-7
   Endres A., 1975, IEEE Transactions on Software Engineering, VSE-1, P140, DOI 10.1109/TSE.1975.6312834
   Endres A., 2003, A Handbook of Software and Systems Engineering: Empirical Observations, Laws, and Theories
   Endsley M.R., 1999, P P HIGH CONSEQUENCE, P2
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fitts P.M., 1961, SELECTED PAPERS HUMA, P332
   Fitts P.M., 1961, P SELECTED PAPERS HU, P332
   Florac W.A., 1992, SOFTWARE QUALITY MEA
   FLORAC WA, 1992, CMUSEI92TR22 CARN ME
   Fredericks M., 1998, Using Defect Tracking and Analysis to Improve Software Quality
   FREIMUT B, 2005, P 11 IEEE INT SOFTW
   FUJII MS, 1978, ACM SIGMETRICS PERFO, V7, P27
   Fusaro P., 1997, Empirical Software Engineering, V2, P39, DOI 10.1023/A:1009742216007
   Gaitros D.A., 2004, J DEFENSE SOFTWARE E, V12, P21
   Galliers J., 1999, ACM Transactions on Computer-Human Interaction, V6, P341, DOI 10.1145/331490.331493
   Galliers J., 1998, ACM T COMPUT-HUM INT, V5, P756
   Grabowski M, 1996, IEEE T SYST MAN CY A, V26, P2, DOI 10.1109/3468.477856
   Grady RB, 1996, HEWLETT-PACKARD J, V47, P15
   Gray WD, 2000, COGNITIVE SCI, V24, P205, DOI 10.1207/s15516709cog2402_2
   Hall T., 2002, IEE Proceedings-Software, V149, P153, DOI 10.1049/ip-sen:20020694
   Hayes JH, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P49, DOI 10.1109/ISSRE.2003.1251030
   HAYES JH, 2005, 5 INT WORKSH REQ HIG
   HAYES JH, 2005, P 5 INT WORKSH REQ H
   Henningsson K, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P95
   Hobbs A, 2002, ERGONOMICS, V45, P290, DOI 10.1080/00140130110116100
   HOLLNAGEL E, 1994, HUMAN RELIABILITY AN
   HUANG JC, 2003, IEEE T SOFTWARE ENG, V29, P796
   Humphrey WS, 1996, IEEE SOFTWARE, V13, P77, DOI 10.1109/52.493023
   ISSAC A, 2002, HUMAN ERROR ATM TECH, P1
   ISSAC A, 2002, HRSHSP002REP03 EUR A
   Jacobs J, 2005, INFORM SOFTWARE TECH, V47, P399, DOI 10.1016/j.infsof.2004.09.006
   JAFFE MS, 1991, IEEE T SOFTWARE ENG, V17, P241, DOI 10.1109/32.75414
   Johnson C, 2002, SAFETY SCI, V40, P835, DOI 10.1016/S0925-7535(01)00086-8
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Joung W, 2006, APPL PSYCHOL-INT REV, V55, P282, DOI 10.1111/j.1464-0597.2006.00244.x
   KAN SH, 1994, IBM SYST J, V33, P4, DOI 10.1147/sj.331.0004
   Kantorowitz E., 1997, Requirements Engineering, V2, P152, DOI 10.1007/BF02802773
   KELLY D, 2000, P 2000 C CTR ADV STU
   KIRNER TG, 1997, P 15 ANN INT C COMP, P161
   KITCHENHAM B, 2006, P 10 INT C EV ASS SO
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   KNIGHT JC, 1993, COMMUN ACM, V36, P51, DOI 10.1145/163359.163366
   Ko AJ, 2005, J VISUAL LANG COMPUT, V16, P41, DOI 10.1016/j.jvlc.2004.08.003
   Ko AJ, 2003, 200S IEEE SYMPOSIUM ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, P7
   Kramer R., 1996, Technical Communication Quarterly, V5, P35
   KROGSTIE J, 1998, ACM SIGSOFT SOFTWARE, V23, P86, DOI DOI 10.1145/272263.272285
   Laitenberger O, 2000, J SYST SOFTWARE, V53, P183, DOI 10.1016/S0164-1212(00)00052-2
   Laitenberger O, 2000, J SYST SOFTWARE, V50, P5, DOI 10.1016/S0164-1212(99)00073-4
   LAITENBERGER O, 1999, INT C SOFTW ENG, P494
   Lanubile F, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P114, DOI 10.1109/METRIC.1998.731236
   LANUBILE F, 1996, ASSESSING DEFECT DET
   Lawrence C.P., 2004, J KNOWLEDGE MANAGEME, V10, P72
   Leszak M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P428, DOI 10.1109/ICSE.2000.870433
   Lutz R.R., 1993, 1993 P IEEE INT S RE, P126
   Lutz RR, 1997, ANN SOFTW ENG, V3, P459, DOI 10.1023/A:1018929719710
   Lutz RR, 1996, J SYST SOFTWARE, V34, P223, DOI 10.1016/0164-1212(95)00077-1
   LUTZ RR, 1992, P NASA TECHN 2002 C, P142
   MARTIN J, 1990, COMMUN ACM, V33, P225, DOI 10.1145/75577.75587
   Masuck C., 2005, J COMPUTING SCI COLL, V20, P239
   MAYS RG, 1990, IBM SYST J, V29, P4, DOI 10.1147/sj.291.0004
   MCGARRY F, 1994, SOFTWARE PROCESS IMP
   MENDIS KS, 1981, ASQC QUALITY C T, V35, P11
   Miller J., 1998, Empirical Software Engineering, V3, P37, DOI 10.1023/A:1009735805377
   Mohri Y., 1991, Proceedings of the Fifteenth Annual International Computer Software and Applications Conference (Cat. No.91CH3023-9), P591, DOI 10.1109/CMPSAC.1991.170244
   Munson JC, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P388, DOI 10.1109/ISSRE.2002.1173299
   NACHIAPPAN N, 2004, P IEEE INT S SOFTW R, P429
   Nakashima T, 1999, INFORM SOFTWARE TECH, V41, P1059, DOI 10.1016/S0950-5849(99)00049-X
   *NASA GSFC SOFTW E, 1994, SOFTW ENG LAB SOFTW
   NELMS CR, 1997, P IEEE 6 C HUM FACT, P7
   Nieves JM, 1998, IEEE T SYST MAN CY A, V28, P742, DOI 10.1109/3468.725347
   Norman D., 1988, PSYCHOL EVERY DAY TH
   NORMAN DA, 1983, COMMUN ACM, V26, P254, DOI 10.1145/2163.358092
   NORMAN DA, 1981, COMMUN ACM, V26, P254
   Paternò F, 2002, INT J HUM-COMPUT ST, V56, P225, DOI 10.1006/ijhc.2001.0523
   PATRICK F, 2004, P 15 INT S SOFTW REL, P451
   PFLEEGER S.L., 2006, Software Engineering, Theory and Practice
   Porter AA, 1997, IEEE SOFTWARE, V14, P99, DOI 10.1109/52.636690
   PORTER AA, 1995, IEEE T SOFTWARE ENG, V21, P563, DOI 10.1109/32.391380
   Prechelt L, 2001, IEEE SOFTWARE, V18, P56, DOI 10.1109/52.965803
   Reason J., 1990, Human error, DOI [10.1017/CBO9781139062367, DOI 10.1017/CBO9781139062367]
   Reinach S, 2006, ACCIDENT ANAL PREV, V38, P396, DOI 10.1016/j.aap.2005.10.013
   Robilliard PN, 1999, COMMUN ACM, V42, P87, DOI 10.1145/291469.291476
   Robinson WN, 1999, IEEE T SOFTWARE ENG, V25, P816, DOI 10.1109/32.824411
   Sabaliauskaite G, 2004, INFORM SOFTWARE TECH, V46, P875, DOI 10.1016/j.infsof.2004.03.004
   Sakthivel S., 1991, Journal of Information Technology, V6, P68, DOI 10.1057/jit.1991.12
   SANDAHL K, 1998, J EMPIRICAL SOFTWARE, V3, P327
   SASAO K, 1999, J RELIABILITY ENG SY, V65, P1
   Sawyer P, 1999, IEEE SOFTWARE, V16, P78, DOI 10.1109/52.754057
   Schneider G. M., 1992, ACM Transactions on Software Engineering and Methodology, V1, P188, DOI 10.1145/128894.128897
   SENDERS LW, 1991, HUMAN ERROR CAUSE PR
   Shappell SA, 1997, INT J AVIAT PSYCHOL, V7, P269, DOI 10.1207/s15327108ijap0704_2
   SHEN W, 2004, P 13 INT C INT AD SY, P203
   Shorrock ST, 2002, APPL ERGON, V33, P319, DOI 10.1016/S0003-6870(02)00010-8
   Shull F, 2000, COMPUTER, V33, P73, DOI 10.1109/2.869376
   Smith J, 2002, COMPUT CONTROL ENG J, V13, P109, DOI 10.1049/cce:20020301
   Sommerville I, 2001, Software Engineering
   Stanton NA, 1998, ERGONOMICS, V41, P1737, DOI 10.1080/001401398186162
   Stutzke MA, 2001, IEEE T RELIAB, V50, P184, DOI 10.1109/24.963126
   Sutcliff A. G., 1999, Requirements Engineering, V4, P134, DOI 10.1007/s007660050024
   Sutcliffe A, 1998, INT J HUM-COMPUT INT, V10, P381, DOI 10.1207/s15327590ijhc1004_5
   SUTCLIFFE A, 2004, REQUIREMENTS ENG J, V10, P95
   Swain A.D., 1983, Nuclear Power in India: A Comparative Analysis, DOI DOI 10.4324/9780429278303
   Thelin T, 2004, PROC INT CONF SOFTW, P263, DOI 10.1109/ICSE.2004.1317448
   Thelin T, 2004, EMPIR SOFTW ENG, V9, P77, DOI 10.1023/B:EMSE.0000013515.86806.d4
   Thelin T, 2000, J SYST SOFTWARE, V52, P139, DOI 10.1016/S0164-1212(99)00140-5
   Trevor C., 1994, HUMAN ERROR SOFTWARE
   VENKATASUBRAMAN.V, 2003, J COMPUTERS CHEM ENG, V27, P313
   Venkatsubramanian V, 2003, COMPUT CHEM ENG, V27, P293, DOI 10.1016/S0098-1354(02)00160-6
   Viller S., 1997, COOPERATIVE SYSTEMS
   VILLER S, 1997, CSEG81997 LANC U COM
   WALIA G, 2007, 18 IEEE INT S SOFTW
   Walia G.S., 2006, P IEEE S EMPIRICAL S, P336
   WALIA GS, 2006, IEEE S EMP SOFTW ENG, P336
   WALIA GS, 2007, MSU070404 DEP COMP S
   WALIA GS, 2006, THESIS COMPUTER SCI
   WEISS DM, 1979, J SYST SOFTWARE, V4, P289
   YAMAMURA T, 1989, IEEE GLOB TEL C 1989, P795
   Zage D, 2003, PROC INT CONF SOFTW, P570, DOI 10.1109/ICSE.2003.1201239
   Zhang XM, 2000, J SYST SOFTWARE, V50, P43, DOI 10.1016/S0164-1212(99)00075-8
NR 166
TC 96
Z9 112
U1 1
U2 27
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2009
VL 51
IS 7
SI SI
BP 1087
EP 1109
DI 10.1016/j.infsof.2009.01.004
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 456JD
UT WOS:000266840500001
DA 2024-07-18
ER

PT J
AU Lin, JW
   Huang, CY
AF Lin, Jun-Wei
   Huang, Chin-Yu
TI Analysis of test suite reduction with enhanced tie-breaking techniques
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Test suite reduction; Tie-breaking; Software testing; Test suite
   minimization; Fault detection effectiveness
ID MINIMIZATION; ALGORITHMS
AB Test suite minimization techniques try to remove redundant test cases of a test suite. However, reducing the size of a test suite might reduce its ability to reveal faults. In this paper, we present a novel approach for test suite reduction that uses an additional testing criterion to break the ties in the minimization process. We integrated the proposed approach with two existing algorithms and conducted experiments for evaluation. The experiment results show that our approach can improve the fault detection effectiveness of reduced suites with a negligible increase in the size of the suites. Besides, under specific conditions, the proposed approach can also accelerate the process of minimization. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Lin, Jun-Wei; Huang, Chin-Yu] Natl Tsing Hua Univ, Dept Comp Sci, Hsinchu 300, Taiwan.
C3 National Tsing Hua University
RP Huang, CY (corresponding author), Natl Tsing Hua Univ, Dept Comp Sci, 101,Sec 2,Kuang Fu Rd, Hsinchu 300, Taiwan.
EM cyhuang@cs.nthu.edu.tw
FU National Science Council, Taiwan [NSC 97-2221-E-007-052-MY3]
FX The work described in this paper was supported by the National Science
   Council, Taiwan under Grant NSC 97-2221-E-007-052-MY3.
CR [Anonymous], 2008, SOFTWARE ARTIFACT IN
   Black J, 2004, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2004.1317433
   Chen TY, 1996, INFORM PROCESS LETT, V60, P135, DOI 10.1016/S0020-0190(96)00135-4
   Chen TY, 1998, INFORM SOFTWARE TECH, V40, P777, DOI 10.1016/S0950-5849(98)00094-9
   Chen TY, 1998, INFORM SOFTWARE TECH, V40, P347, DOI 10.1016/S0950-5849(98)00050-0
   Chvatal V., 1979, Mathematics of Operations Research, V4, P233, DOI 10.1287/moor.4.3.233
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P774, DOI 10.1109/32.238581
   FRANKL PG, 1998, P 6 ACM SIGSOFT INT, P153
   Garey M. R., 1979, Computers and intractability. A guide to the theory of NP-completeness
   Goldberg D. E., 1989, GENETIC ALGORITHMS S
   Harder M, 2003, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2003.1201188
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Horgan J. R., 1992, Proceedings of the Second Symposium on Assessment of Quality Software Development Tools (Cat. No.92TH0415-0), P2, DOI 10.1109/AQSDT.1992.205829
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jeffrey D, 2005, PROC IEEE INT CONF S, P549
   Jeffrey D, 2007, IEEE T SOFTWARE ENG, V33, P108, DOI 10.1109/TSE.2007.18
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Keller G., 2003, STAT MANAGEMENT EC, V6th
   Leon D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P442, DOI 10.1109/ISSRE.2003.1251065
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   LIN JW, 2008, P 4 INT C MAN INN TE
   Mansour N, 1999, J SOFTW MAINT-RES PR, V11, P19, DOI 10.1002/(SICI)1096-908X(199901/02)11:1<19::AID-SMR182>3.0.CO;2-M
   Rothermel G, 1998, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.1998.738487
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Sampath Sreedevi., 2006, P 2006 WORKSHOP TEST, P23
   Srivastava A., 2002, Software Engineering Notes, V27, P97, DOI 10.1145/566171.566187
   Tallam Sriraman., 2005, PASTE 05, P35, DOI [10.1145/1108768.1108802, DOI 10.1145/1108768.1108802]
   Vokolos FI, 1998, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.1998.738488
   VONRONNE J, 1999, THESIS OREGON STATE
   Wong WE, 1998, SOFTWARE PRACT EXPER, V28, P347, DOI 10.1002/(SICI)1097-024X(19980410)28:4<347::AID-SPE145>3.0.CO;2-L
   WONG WE, 1995, PROC INT CONF SOFTW, P41, DOI 10.1145/225014.225018
   Zhong H, 2008, INFORM SOFTWARE TECH, V50, P534, DOI 10.1016/j.infsof.2007.06.003
NR 34
TC 47
Z9 49
U1 2
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2009
VL 51
IS 4
BP 679
EP 690
DI 10.1016/j.infsof.2008.11.004
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 409HA
UT WOS:000263495600001
DA 2024-07-18
ER

PT J
AU Sarma, M
   Mall, R
AF Sarma, M.
   Mall, R.
TI Automatic generation of test specifications for coverage of system state
   transitions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE System testing; UML; Test specification generation; State-based testing;
   Transition coverage
ID MODELS
AB Adequate system testing of present day application programs requires satisfactory coverage of system states and transitions. This can be achieved by using a system state model. However, the system state models are rarely constructed by system developers, as these are large and complex. The only state models that are constructed by the developers are those of individual objects. However test case generation for state-based system testing based on traversal of statecharts of individual objects appears to be infeasible. since system test cases would have to be specified in the form of scenario sequences rather than transitions on individual object statecharts. In this paper, we propose a novel approach to coverage of elementary transition paths of an automatically synthesized system state model. Our technique for coverage of elementary transition paths would also ensure coverage of all states and transitions of the system model. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Sarma, M.; Mall, R.] Indian Inst Technol, Dept Comp Sci & Engn, Kharagpur 721302, W Bengal, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Kharagpur
RP Sarma, M (corresponding author), Indian Inst Technol, Dept Comp Sci & Engn, Kharagpur 721302, W Bengal, India.
EM monalisas@cse.iitkgp.ernet.in; rajib@cse.iitkgp.ernet.in
RI Jaafar, Mohamad Farid/B-4563-2010
CR Abdurazik A, 2000, LECT NOTES COMPUT SC, V1939, P383
   ABDURAZIK A, 1999, P 2 INT C UN MOD LAN
   Ali S, 2007, INFORM SOFTWARE TECH, V49, P1087, DOI 10.1016/j.infsof.2006.11.002
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   BERTOLINO A, 2003, P 9 EUR SOFTW ENG C, P355
   BOOCH G, 1999, OBJECT TECHNOLOGY SE
   Briand L, 2002, UML BASED APPROACH S
   Briand LC, 2004, IEEE T SOFTWARE ENG, V30, P770, DOI 10.1109/TSE.2004.79
   BRIAND LC, 2005, J SOFTWARE SYSTEMS M, V4, P399
   CORMEN TH, 2002, INTRO ALGORITHMS EAS
   DICK J, 1993, P 1 INT S FORM METH, P268
   Fröhlich P, 2000, LECT NOTES COMPUT SC, V1850, P472
   HARTMANN J, 2005, J INNOVATIONS SYSTEM, P12
   HELKE S, 1997, LNCS, V1212, P52
   Hierons RM, 2001, INFORM SOFTWARE TECH, V43, P137, DOI 10.1016/S0950-5849(00)00145-2
   HIERONS RM, 1997, J SOFTWARE TESTING V, V7, P19
   KANSOMKEAT S, 2003, P SAICSIT 2003 ACM, P296
   Kim Y. G., 1999, IEE Proceedings-Software, V146, P187, DOI 10.1049/ip-sen:19990602
   *MAGICDRAW, MAGICDRAW UML
   Mall R., 2003, FUNDAMENTALS SOFTWAR
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   MINGSONG C, P 2006 INT WORKSH AU
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   OFFUTT J, 2003, VERIFICATION RELIABI, P25
   OMG, UN MOD LANG SPEC VER
   Pilone Dan., 2005, UML 20 NUTSHELL
   Riebisch M, 2003, LECT NOTES COMPUT SC, V2591, P394
   SARMA M, 2007, ACM SIGPLAN NOTI NOV
   WALTON GH, 1995, SOFTWARE PRACT EXPER, V25, P97, DOI 10.1002/spe.4380250106
NR 30
TC 10
Z9 11
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 418
EP 432
DI 10.1016/j.infsof.2008.05.002
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 386YX
UT WOS:000261919900014
DA 2024-07-18
ER

PT J
AU Pautasso, C
   Heinis, T
   Alonso, G
AF Pautasso, Cesare
   Heinis, Thomas
   Alonso, Gustavo
TI Autonomic resource provisioning for software business processes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE service oriented architectures; Web service composition; autonomic
   computing; distributed business process execution engines
ID WORKFLOW MANAGEMENT; SERVICES
AB Software development nowadays involves several levels of abstraction: starting from the programming of single objects, to their combination into components, to their publication as services and the overall architecture linking elements at each level. As a result, software engineering is dealing with a wider range of artifacts and concepts (i.e., in the context of this paper: services and business processes) than ever before. In this paper we explore the importance of having an adequate engine for executing business processes written as compositions of Web services. The paper shows that, independently of the composition language used, the overall scalability of the system is determined by how the run-time engine treats the process execution. This is particularly relevant at the service level because publishing a process through a Web service interface makes it accessible to an unpredictable and potentially very large number of clients. As a consequence, the process developer is confronted with the difficult question of resource provisioning. Determining the optimal configuration of the distributed engine that runs the process becomes sensitive both to the actual number of clients and to the kinds of processes to be executed. The main contribution of the paper is to show how resource provisioning for software business processes can be solved using autonomic computing techniques. The engine separates execution in two stages (navigation and dispatching) and uses a controller to allocate the node of a cluster of computers to each one of those stages as the workload changes. The controller can be configured with different policies that define how to reconfigure the system. To prove the feasibility of the concept, we have implemented the autonomic controller and evaluated its performance with an extensive set of experiments. (C) 2006 Elsevier B.V. All rights reserved.
C1 Swiss Fed Inst Technol, Dept Comp Sci, CH-8090 Zurich, Switzerland.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich
RP Pautasso, C (corresponding author), Swiss Fed Inst Technol, Dept Comp Sci, CH-8090 Zurich, Switzerland.
EM pautasso@inf.ethz.ch; heinist@inf.ethz.ch; alonso@inf.ethz.ch
CR Aiber S, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P206, DOI 10.1109/ICAC.2004.1301365
   Alonso G., 2003, Web services: Concepts, architectures and applications
   [Anonymous], P 5 VLDB WORKSH TECH
   ASSmann Uwe., 2003, INVASIVE SOFTWARE CO
   Bauer T, 1997, PROCEEDINGS OF THE SECOND IFCIS INTERNATIONAL CONFERENCE ON COOPERATIVE INFORMATION SYSTEMS - COOPIS'97, P99, DOI 10.1109/COOPIS.1997.613807
   Benatallah B, 2002, PROC INT CONF DATA, P297, DOI 10.1109/ICDE.2002.994738
   BREITGAND D, 2005, P 2 INT C AUT COMP S
   Buyya R, 2002, CONCURR COMP-PRACT E, V14, P1507, DOI 10.1002/cpe.690
   Casati F, 2001, INFORM SYST, V26, P143, DOI 10.1016/S0306-4379(01)00014-X
   CHAFLE G, 2004, P 13 INT WORLD WID W, P134
   CONSENS MP, 2005, SIGMOD C BALT US
   Elnaffar S, 2003, 14TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P651, DOI 10.1109/DEXA.2003.1232095
   Feitelson DG, 1997, LECT NOTES COMPUT SC, V1291, P1
   GEORGAKOPOULOS D, 1995, DISTRIB PARALLEL DAT, V3, P119, DOI 10.1007/BF01277643
   Gillmann M., 2002, P ACM SIGMOD INT C M, P228, DOI DOI 10.1145/564691.564718
   HARIZOPOULOS S, 2003, P 2003 CIDR C AS CA
   Heinis T, 2005, FIRST INTERNATIONAL CONFERENCE ON E-SCIENCE AND GRID COMPUTING, PROCEEDINGS, P328, DOI 10.1109/E-SCIENCE.2005.67
   HEINIS T, 2005, P 2 INT C AUT COMP S
   Heinl P., 1996, Proceedings. Seventh International Workshop on Database and Expert Systems Applications, P439, DOI 10.1109/DEXA.1996.558591
   Hellerstein Joseph L, 2004, Feedback control of computing systems
   HUNDLING J, ELECT MARKETS, V13
   *IBM, IBM SYST J, V42
   JIE LJ, 2001, P ACM S APPL COMP LO, P522
   Kephart JO, 2005, PROC INT CONF SOFTW, P15, DOI 10.1145/1062455.1062464
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   KHALAF R, IN PRESS IBM SYSTEMS, V45
   Leymann F, 2002, IBM SYST J, V41, P198, DOI 10.1147/sj.412.0198
   LEYMANN F, 2003, P INT C BUS PROC MAN, P123
   MARTINFLATIN JP, ACM COMMUNICATIONS, V49
   Norris J, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P198, DOI 10.1109/ICAC.2004.1301364
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Pautasso C, 2005, J VISUAL LANG COMPUT, V16, P119, DOI 10.1016/j.jvlc.2004.08.004
   Pautasso C, 2004, INT J ELECTRON COMM, V9, P107, DOI 10.1080/10864415.2005.11044328
   PAUTASSO C, JOPERA PROCESS SUPPO
   PAUTASSO C, 2005, P 3 INT C WEB SERV O
   Russell LW, 2003, IBM SYST J, V42, P77, DOI 10.1147/sj.421.0077
   Schulz KA, 2004, DATA KNOWL ENG, V51, P109, DOI 10.1016/j.datak.2004.03.008
   Shaw Mary., 2002, WOSS 02 P 1 WORKSHOP, P111, DOI [10.1145/582128.582152, DOI 10.1145/582128.582152]
   Shegalov G, 2001, VLDB J, V10, P91
   Shirazi B.A., 1995, Scheduling and Load Balancing in Parallel and Distributed Systems
   Szyperski C, 2003, PROC INT CONF SOFTW, P684, DOI 10.1109/ICSE.2003.1201255
   THESSIN T, ECLIPSE TEST PREFORM
   van der Aalst WMP, 1999, INFORM SYST, V24, P639, DOI 10.1016/S0306-4379(00)00003-X
   VANDERAALST WMP, 2001, P 13 INT C ADV INF S, P140
   Vidyasankar K, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P462, DOI 10.1109/ICWS.2004.1314771
   Vilalta R, 2002, IBM SYST J, V41, P461, DOI 10.1147/sj.413.0461
   WEIKUM G, 2002, P 8 INT C VER LARG D
   Whisnant K, 2003, IBM SYST J, V42, P45, DOI 10.1147/sj.421.0045
   Zhang L., 2002, P INT C SYSTEM SCI, DOI [DOI 10.1109/HICSS.2003.1174613, 10.1109/HICSS.2003.1174613]
NR 49
TC 8
Z9 12
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2007
VL 49
IS 1
BP 65
EP 80
DI 10.1016/j.infsof.2006.08.010
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 115AK
UT WOS:000242706600007
DA 2024-07-18
ER

PT J
AU Issa, A
   Odeh, M
   Coward, D
AF Issa, Ayman
   Odeh, Mohammed
   Coward, David
TI Using use case patterns to estimate reusability in software systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE use case patterns catalogue; software cost estimation; reusability
   estimation
AB The applicability of using use case patterns as a basis for software cost estimation in the early stages of software development is described. This required the construction of a use case patterns catalogue using a novel process. The catalogue has been analysed to estimate the potential reusability in different software applications. This has shown that 43% of system functions are generally application domain independent, whereas 57% are application domain dependent. Statistical tests showed that the level of specialisation in software systems could be as low as 20%, which supports the direction taken in this research to build a use case patterns catalogue as a basis for the development of use case based software cost estimation models. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ W England, Ctr Complex Cooperat Syst, Bristol BS16 1QY, Avon, England.
   Univ W England, Sch Comp Sci, CEMS Fac, Bristol BS16 1QY, Avon, England.
C3 University of West England; University of West England
RP Issa, A (corresponding author), Univ W England, Ctr Complex Cooperat Syst, Coldharbour Lane, Bristol BS16 1QY, Avon, England.
EM ayman2.issa@uwe.ac.uk
CR ACOSTA AE, 2004, J OBJECT TECHNOLOGY, V3, P75
   ADOLPH U, 2003, PATTERNS EFFECTIVE U
   Alexander C., 1977, PATTERN LANGUAGE TOW
   *AM PROD QUAL CTR, 2004, PROC CLASS FRAM
   Anda B, 2002, LECT NOTES COMPUT SC, V2559, P383
   [Anonymous], 1998, REQUIREMENTS ENG PRO
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   BIDDLE R, 2001, P KOALAPLOB NEWZ VIC, P1
   BJORNVIG G, PATTERNS ROEL USE CA
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Butler G, 1998, 1998 ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P94, DOI 10.1109/APSEC.1998.733596
   Coad P., 1992, Communications of the ACM, V35, P152, DOI 10.1145/130994.131006
   COAD P, 1997, OBJECT MODELS STRATE
   Cockburn A., 2001, Writing effective use cases
   *CRM CONT CTR, 2003, CROM GLOSS ONL
   DIAZ I, IN PRESS INFORM MANA
   Fowler M., 1997, ANAL PATTERNS REUSAB
   Fowler M., 2003, Patterns of Enterprise Application Architecture. A Martin Fowler signature book
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gerber S.B., 1997, SPSS GUIDE NEW STAT
   HOHMANN L, 1998, SOFTWARE DEV MAGAZIN
   *INT INC, 2003, INT BUS SOL PROD ONL
   *INT SOFTW, 2004, SALESBASE CRM BUS IN
   ISSA A, 2005, P IASTED INT C SOFT, P468
   ISSA A, 2005, UWECEMSCCS0003
   JACOBSON I, 1995, J OBJECT-ORIENT PROG, V8, P15
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Karner G., 1993, Resource Estimation for Objectory Projects
   KRUCHTEN P, 2002, RATIONAL UNIFIED PRO
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Lam W, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P6, DOI [10.1109/ISRE.1997.566834, 10.1007/BF02813029]
   Larman C., 2002, APPL UML PATTERNS, V2nd
   Larsen G, 1999, COMMUN ACM, V42, P38, DOI 10.1145/317665.317674
   Li LW, 2002, INT J SOFTW ENG KNOW, V12, P19, DOI 10.1142/S0218194002000810
   Malone, 2003, ORG BUSINESS KNOWLED
   METZ P, USE CASE MODEL REFAC
   *NETSUITE INC, 2004, NETCRM ONL
   Reifer D., 2004, Journal of Software Technology, V7, P3
   ROBERTS S, 1999, REQUIREMENTS PATTERN
   Rui K., 2003, P 25 AUSTRALASIAN CO, P301
   Saeki M., 1999, Proceedings Sixth Asia Pacific Software Engineering Conference (ASPEC'99) (Cat. No.PR00509), P309, DOI 10.1109/APSEC.1999.809617
   Schmidt D.C., 1996, COMMUN ACM, V39, P37, DOI DOI 10.1145/236156.236164
   SCHMIDT DC, 1995, COMMUN ACM, V38, P65, DOI 10.1145/226239.226255
   Seruca I, 2003, J SYST SOFTWARE, V67, P1, DOI 10.1016/s0164-1212(02)00083-3
   *SFER INT BAS SYST, 2001, SFER TOOLS LIB ONL
   SKASKIW C, 2001, IDEAS USE CASE PATTE
   SMITH J, 2001, RATIONAL SOFTWARE
NR 47
TC 11
Z9 11
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2006
VL 48
IS 9
BP 836
EP 845
DI 10.1016/j.infsof.2005.10.005
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 073OC
UT WOS:000239751500007
DA 2024-07-18
ER

PT J
AU Dybå, T
   Kampenes, VB
   Sjoberg, DIK
AF Dyba, Tore
   Kampenes, Vigdis By
   Sjoberg, Dag I. K.
TI A systematic review of statistical power in software engineering
   experiments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE empirical software engineering; controlled experiment; systematic
   review; statistical power; effect size
ID PSYCHOLOGICAL-RESEARCH; GUIDELINES
AB Statistical power is an inherent part of empirical studies that employ significance testing and is essential for the planning of studies, for the interpretation of study results, and for the validity of study conclusions. This paper reports a quantitative assessment of the statistical power of empirical software engineering research based on the 103 papers on controlled experiments (of a total of 5,453 papers) published in nine major software engineering journals and three conference proceedings in the decade 1993-2002. The results show that the statistical power of software engineering experiments falls substantially below accepted norms as well as the levels found in the related discipline of information systems research. Given this study's findings, additional attention must be directed to the adequacy of sample sizes and research designs to ensure acceptable levels of statistical power. Furthermore, the current reporting of significance tests should be enhanced by also reporting effect sizes and confidence intervals. (c) 2005 Elsevier B.V. All rights reserved.
C1 Simula Res Lab, NO-1325 Lysaker, Norway.
   SINTEF ICT, NO-7465 Trondheim, Norway.
C3 SINTEF
RP Dybå, T (corresponding author), Simula Res Lab, POB 134, NO-1325 Lysaker, Norway.
EM tore.dyba@sintef.no; vigdis@simula.no; dagsj@simula.no
CR [Anonymous], 1990, Design sensitivity: Statistical power for experimental research
   BAROUDI JJ, 1989, MIS QUART, V13, P87, DOI 10.2307/248704
   Borokowski S.C., 2001, Behavioral Research in Accounting, V13, P63
   BREWER JK, 1972, AM EDUC RES J, V9, P391
   Brock JKU, 2003, J INT BUS STUD, V34, P90, DOI 10.1057/palgrave.jibs.8400006
   Cashen LH, 2004, ORGAN RES METHODS, V7, P151, DOI 10.1177/1094428104263676
   CHASE LJ, 1975, SPEECH MONOGR, V42, P29
   CHASE LJ, 1976, J APPL PSYCHOL, V61, P234, DOI 10.1037/0021-9010.61.2.234
   ClarkCarter D, 1997, BRIT J PSYCHOL, V88, P71, DOI 10.1111/j.2044-8295.1997.tb02621.x
   Cohen B.H., 2001, EXPLAINING PSYCHOL S, V2nd
   COHEN J, 1962, J ABNORM PSYCHOL, V65, P145, DOI 10.1037/h0045186
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cook T.D., 1979, Quasi‐experimentation: design analysis issues for field setting
   Dyba T., 2000, Empirical Software Engineering, V5, P357, DOI 10.1023/A:1009800404137
   Ferguson TD, 1999, STRATEGIC MANAGE J, V20, P385, DOI 10.1002/(SICI)1097-0266(199904)20:4<385::AID-SMJ24>3.0.CO;2-X
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   HAYS WL, 1994, STAT
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kraemer H.C., 1987, STAT POWER ANAL RES
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Maxwell SE, 2004, PSYCHOL METHODS, V9, P147, DOI 10.1037/1082-989X.9.2.147
   MAZEN AM, 1987, ACAD MANAGE J, V30, P369, DOI 10.5465/256280
   McClelland GH, 2000, AM PSYCHOL, V55, P963, DOI 10.1037/0003-066X.55.8.963
   Miller J, 1997, INFORM SOFTWARE TECH, V39, P285, DOI 10.1016/S0950-5849(96)01139-1
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Miller J, 2004, J SYST SOFTWARE, V73, P183, DOI 10.1016/j.jss.2003.12.019
   Mone MA, 1996, PERS PSYCHOL, V49, P103, DOI 10.1111/j.1744-6570.1996.tb01793.x
   Neyman J, 1933, PHILOS T R SOC LOND, V231, P289, DOI 10.1098/rsta.1933.0009
   Neyman J, 1928, BIOMETRIKA, V20A, P175, DOI 10.2307/2331945
   NEYMAN J, 1952, BIIOMETRIKA A, V20, P263
   Nunnally JC, 1978, PSYCHOMETRIC THEORY, V2nd
   Ottenbacher KJ, 1996, AM STAT, V50, P271, DOI 10.2307/2684673
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   RADEMAKER JLW, 1999, MOL MICROBIAL ECOL S, V4, P1
   SAWYER AG, 1981, J MARKETING RES, V18, P275, DOI 10.2307/3150969
   SEDLMEIER P, 1989, PSYCHOL BULL, V105, P309, DOI 10.1037/0033-2909.105.2.309
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Spector P.E., 1992, SAGE U PAPER SERIES
   Wilkinson L, 1999, AM PSYCHOL, V54, P594, DOI 10.1037/0003-066X.54.8.594
   Yin R. K., 2015, CASE STUDY RES DESIG
   Zelkowitz MV, 1997, INFORM SOFTWARE TECH, V39, P735, DOI 10.1016/S0950-5849(97)00025-6
NR 44
TC 140
Z9 151
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2006
VL 48
IS 8
BP 745
EP 755
DI 10.1016/j.infsof.2005.08.009
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 056GS
UT WOS:000238510700010
DA 2024-07-18
ER

PT J
AU Guo, Q
   Hierons, RM
   Harman, M
   Derderian, K
AF Guo, Qiang
   Hierons, Robert M.
   Harman, Mark
   Derderian, Karnig
TI Improving test quality using robust unique input/output circuit
   sequences (UIOCs)
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE FSMs; conformance test; F-UIOs; B-UIOs; UIOCs; fault masking; test
   quality
ID DESIGN
AB In finite state machine (FSM) based testing, the problem of fault masking in the unique input/output (UIO) sequence may degrade the test performance of the UIO based methods. This paper investigates this problem and proposes the use of a new type of unique input/output circuit (UIOC) sequence for state verification, which may help to overcome the drawbacks that exist in the UIO based techniques. When constructing a UIOC, overlap and internal state observation schema are used to increase the robustness of a test sequence. Test quality is compared by using the forward UIO method (F-method), the backward UIO method (B-method) and the UIOC method (C-method) separately. Robustness of the UIOCs constructed by the algorithm given in this paper is also compared with those constructed by the algorithm given previously. Experimental results suggest that the C-method outperforms the F- and the B-methods and the UIOCs constructed by the algorithm given in this paper, are more robust than those constructed by other proposed algorithms. (c) 2005 Elsevier B.V. All rights reserved.
C1 Brunel Univ, Sch Informat Syst Comp & Math, Uxbridge UB8 3PH, Middx, England.
   Kings Coll London, Dept Comp, London WC2R 2LS, England.
C3 Brunel University; University of London; King's College London
RP Guo, Q (corresponding author), Brunel Univ, Sch Informat Syst Comp & Math, Uxbridge UB8 3PH, Middx, England.
EM qiang.guo@brunel.ac.uk; rob.hierons@brunel.ac.uk; mark@dcs.kcl.ac.uk;
   karnig.derderian@brunel.ac.uk
OI Harman, Mark/0000-0002-5864-4488; Hierons, Robert/0000-0002-4771-1446
CR AHO AV, 1991, IEEE T COMMUN, V39, P1604, DOI 10.1109/26.111442
   CHAN WYL, 1989, ACM SIGCOMM COMPUTER, V19, P283
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   GONENC G, 1970, IEEE T COMPUT, VC 19, P551, DOI 10.1109/T-C.1970.222975
   Guo Q, 2005, IEE PROC-SOFTW, V152, P127, DOI 10.1049/ip-sen:20045001
   Guo Q, 2004, LECT NOTES COMPUT SC, V2931, P164
   Hennie F.C., 1964, Proc. 5th Ann. Symp. Switch. Theory and Logical Design, P95
   Hierons RM, 2002, IEEE T COMPUT, V51, P1111, DOI 10.1109/TC.2002.1032630
   Hierons RM, 1997, COMPUT J, V40, P220, DOI 10.1093/comjnl/40.4.220
   Hierons RM, 1996, COMPUT J, V39, P325, DOI 10.1093/comjnl/39.4.325
   Kohavi Z., 1978, Switching and Finite Automata Theory, Vsecond
   LEE D, 1994, IEEE T COMPUT, V43, P306, DOI 10.1109/12.272431
   LOMBARDI F, 1992, IEEE T COMMUN, V40, P1288, DOI 10.1109/26.156632
   MILLER RE, 1993, IEEE ACM T NETWORKIN, V1
   NAIK K, 1995, P 8 IFIP INT WORKSH, P201
   Rezaki A, 1995, COMPUT COMMUN, V18, P911, DOI 10.1016/0140-3664(96)81589-1
   SHEN X, 1992, P 1992 ACM SIGAPP S, P75
   SHEN X, 1991, P ACM S APPL COMPUTI, P284
   SHEN YN, 1992, IEEE T COMMUN, V40, P1282, DOI 10.1109/26.156631
   SIDHU DP, 1989, IEEE T SOFTWARE ENG, V15, P413, DOI 10.1109/32.16602
   Ural H, 1997, IEEE T COMPUT, V46, P93, DOI 10.1109/12.559807
   YANG B, ACM SIGCOMM 90 COMMU, P118
NR 22
TC 7
Z9 7
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2006
VL 48
IS 8
BP 696
EP 707
DI 10.1016/j.infsof.2005.08.001
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 056GS
UT WOS:000238510700006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Stringfellow, C
   Amory, CD
   Potnuri, D
   Andrews, A
   Georg, M
AF Stringfellow, C.
   Amory, C. D.
   Potnuri, D.
   Andrews, A.
   Georg, M.
TI Comparison of software architecture reverse engineering methods
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software architecture; reverse engineering; maintainability
AB Problems related to interactions between components is a sign of problems with the software architecture of the system and are often costly to fix. Thus it is very desirable to identify potential architectural problems and track them across releases to see whether some relationships between components are repeatedly change-prone.
   This paper shows a study of combining two technologies for software architecture: architecture recovery and change dependency analysis based on version control information. More specifically, it describes a reverse engineering method to derive a change architecture from Revision Control System (RCS) change history. It compares this method to other reverse engineering methods used to derive software architectures using other types of data. These techniques are illustrated in a case study on a large commercial system consisting of over 800 KLOC of C, C + +, and microcode. The results show identifiable problems with a subset of the components and relationships between them, indicating systemic problems with the underlying architecture. (C) 2005 Elsevier B.V. All rights reserved.
C1 Midwestern State Univ, Dept Comp Sci, Wichita Falls, TX 76308 USA.
   Washington State Univ, Dept Elect Engn & Comp Sci, Pullman, WA 99164 USA.
   Washington Univ, Dept Comp Sci & Engn, St Louis, MO 63130 USA.
C3 Washington State University; Washington University (WUSTL)
RP Stringfellow, C (corresponding author), Midwestern State Univ, Dept Comp Sci, 3410 Taft Blvd, Wichita Falls, TX 76308 USA.
EM catherine.stringfellow@mwsu.edu; damory@hotmail.com;
   d_potnuri@yahoo.com; aandrews@eecs.wsu.edu; mgeorg@arl.wustl.edu
CR ALLEN R, 1994, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.1994.296767
   ASH D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P154, DOI 10.1109/ICSM.1994.336779
   Bowman I. T., 1998, PROC CTR ADV STUD C, P123
   Canfora G., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P200, DOI 10.1109/ICSM.1993.366942
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Eick SG, 2002, IEEE T SOFTWARE ENG, V28, P396, DOI 10.1109/TSE.2002.995435
   Feijs L, 1998, SOFTWARE PRACT EXPER, V28, P371, DOI 10.1002/(SICI)1097-024X(19980410)28:4<371::AID-SPE154>3.0.CO;2-1
   Fischer M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P90, DOI 10.1109/WCRE.2003.1287240
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fiutem R, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P319, DOI 10.1109/ICSM.1996.565035
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   GALL H, 1996, P 2 INT SOFTW ARCH W, P111
   Gefen D, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P134, DOI 10.1109/ICSM.1996.564998
   Girard JF, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P58, DOI 10.1109/ICSM.1997.624231
   Gorsuch RL., 1983, Factor analysis, V2
   Graves TL, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P267, DOI 10.1109/METRIC.1998.731253
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   HARRIS DR, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P252, DOI 10.1109/WCRE.1995.514713
   KHOSHGOFTAAR TM, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P58, DOI 10.1109/ICSM.1994.336789
   Khoshgoftaar TM, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P259, DOI 10.1109/ISSRE.2000.885877
   Khoshgoftaar TM, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P198, DOI 10.1109/ISSRE.2000.885872
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Krikhaar RL, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P4, DOI 10.1109/ICSM.1997.624225
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   MINSKY NH, 1985, P INT C SOFTW MAINT, P50
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Mockus A, 2001, IEEE SOFTWARE, V18, P30, DOI 10.1109/52.914737
   OHLSSON M, 1999, P IEEE AER C
   Ohlsson MC, 1998, PROC IEEE INT CONF S, P6, DOI 10.1109/ICSM.1998.738484
   OSTRAND T, 2003, P 7 IASTED INT C SOF, P228
   Schneidewind NF, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P127, DOI 10.1109/METRIC.1997.637173
   SHAW M, 1996, GARLAN SOFTWARE ARCH
   Stringfellow C, 2002, SOFTWARE QUAL J, V10, P299, DOI 10.1023/A:1022138004472
   STRINGFELLOW C, 2004, P 8 IASTED INT C SOF, P210
   TICHY WF, 1985, SOFTWARE PRACT EXPER, V15, P637, DOI 10.1002/spe.4380150703
   TILLEY SR, 1994, INT J SOFTW ENG KNOW, V4, P501, DOI 10.1142/S0218194094000246
   von Mayrhauser A., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P295, DOI 10.1109/ISSRE.1999.809335
   YEH AS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P227, DOI 10.1109/WCRE.1995.514711
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Younger EJ, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P255, DOI 10.1109/ICSM.1996.565014
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 42
TC 17
Z9 20
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2006
VL 48
IS 7
BP 484
EP 497
DI 10.1016/j.infsof.2005.05.007
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 049QQ
UT WOS:000238031900005
DA 2024-07-18
ER

PT J
AU Holland, CP
   Shaw, DR
   Kawalek, P
AF Holland, CP
   Shaw, DR
   Kawalek, P
TI BP's multi-enterprise asset management system
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE multi-enterprise system; oil and gas; business process management;
   Maximo
ID INFORMATION-SYSTEMS
AB BP is one of the largest energy companies in the world with 2003 revenues of $233 billion. In this paper, we analyse its use of an innovative,multi-enterprise asset management system' that supports and enables the asset management strategy of BP's exploration and production division on the UK continental shelf (UKCS). The analysis focuses on how BP connects its business processes with over 1500 suppliers to co-ordinate the maintenance, operation and repair of specialised exploration and production equipment. The systems strategy is novel because it takes the enterprise computing concept and implements it across organisational boundaries-hence the term 'multi-enterprise system'. This use of a shared system with all of its suppliers is distinctive from the most common way of connecting with economic partners which is to use shared data systems based on common data standards and communication technologies such as EDI and more recently XML-based systems within vertical industries such as RosettaNet. The design of the multi-enterprise system is based on a sophisticated business process management system called Maximo and this is used to illustrate the systems design aspect of the overall information system in the broader contexts of business strategy and information technology infrastructure. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ Manchester, Manchester Business Sch, Manchester M15 6PB, Lancs, England.
C3 University of Manchester
RP Univ Manchester, Manchester Business Sch, Manchester M15 6PB, Lancs, England.
EM chris.holland@mbs.ac.uk
RI Shaw, Duncan/M-3325-2014; Holland, Christopher/K-7337-2017
OI Holland, Christopher/0000-0002-1992-3679; Shaw,
   Duncan/0000-0002-5693-8052
CR *BP, 2004, MAX FULL CONT COP
   Curtis B., 1992, COMMUNICATIONS ACM, V35
   DAVENPORT TH, 1990, SLOAN MANAGE REV, V31, P11
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Falkenberg E.D., 1998, FRAMEWORK INFORM SYS
   Giaglis GM, 2001, INT J FLEX MANUF SYS, V13, P209, DOI 10.1023/A:1011139719773
   Green P, 2000, INFORM SYST, V25, P73, DOI 10.1016/S0306-4379(00)00010-7
   Hammer M., 1994, REENGINEERING CORPOR
   Holland CP, 1999, IEEE SOFTWARE, V16, P30, DOI 10.1109/52.765784
   JELASSI D, 1995, 6950091 INSEAD CEDEP
   KALAKOTA B, 2003, SERVICES BLUEPRINT R
   Kelly S, 2002, SYSTEMS ENGINEERING FOR BUSINESS PROCESS CHANGE, P241
   Liu K., 2000, SEMIOTICS INFORM SYS
   LOCKETT AG, 1990, UNPUB BP CHEM ORG CH
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   Mento A.J., 2001, Journal of Change Management, V3, P45
   MUMFORD E, 2000, REQUIR ENG, V5, P67
   Parsons J, 1996, MANAGE SCI, V42, P1437, DOI 10.1287/mnsc.42.10.1437
   PRAHALAD CK, 1990, HARVARD BUS REV, V68, P79
   SHANNON CE, 1948, BELL SYST TECH J, V27, P379, DOI 10.1002/j.1538-7305.1948.tb01338.x
   SHANNON CE, 1948, BELL SYST TECH J, V27, P623, DOI 10.1002/j.1538-7305.1948.tb00917.x
   SHAW DR, IN PRESS BUSINESS PR
   SHAW DR, 2004, SMART BUSINESS NETWO, P289
   SMITH H, 2003, WORKFLOW IS JUST PI
   Soh C, 2000, COMMUN ACM, V43, P47, DOI 10.1145/332051.332070
   Stamper R.K., 1987, CRITICAL ISSUES INFO
   Valiris G., 1999, BUS PROCESS MANAG J, V5, P65, DOI DOI 10.1108/14637159910249117
   van der Aalst WMP, 2003, LECT NOTES COMPUT SC, V2678, P1
   Wand Y, 2002, INFORM SYST RES, V13, P363, DOI 10.1287/isre.13.4.363.69
   Warboys B.C., 1999, Business information systems: A process approach
   Yin R., 2003, APPL SOCIAL RES SERI, V5
NR 31
TC 18
Z9 20
U1 1
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2005
VL 47
IS 15
BP 999
EP 1007
DI 10.1016/j.infsof.2005.09.006
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 998MH
UT WOS:000234322400005
DA 2024-07-18
ER

PT J
AU Glezer, C
   Last, M
   Nachmany, E
   Shoval, P
AF Glezer, C
   Last, M
   Nachmany, E
   Shoval, P
TI Quality and comprehension of UML interaction diagrams-an experimental
   comparison
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE collaboration diagrams; experiments; interaction diagrams; method/model
   evaluation; object-oriented analysis; sequence diagrams; software
   engineering; UML
ID DESIGN
AB UML (Unified Modeling Language) is a collection of somewhat overlapping modeling techniques, thus creating a difficulty in establishing practical guidelines for selecting the most suitable techniques for modeling 00 artifacts. This is true mainly with respect to two types of interaction diagrams: Sequence and collaboration. Attempts have been made to evaluate the comprehensibility of these diagram types for various types of applications, but they did not address the issue of quality of diagrams created by analysts. This article reports the findings from a controlled experiment where both the comprehensibility and quality of the interaction diagrams were investigated in two application domains: management information systems (MIS) and real-time (RT) systems.
   Our results indicate that collaboration diagrams are easier to comprehend than sequence diagrams in RT systems, but there is no difference in comprehension of the two diagram types in MIS. Irrespective of the diagram type, it is easier to comprehend interaction diagrams of MIS than of RT systems. With respect to diagram quality, in the case of MIS, analysts create collaboration diagrams of better quality than sequence diagrams, but there is no significant difference in quality of diagrams created in RT systems. Irrespective of the diagram type, more correct diagrams are created in MIS applications than in RT applications. (C) 2005 Elsevier B.V. All rights reserved.
C1 Ben Gurion Univ Negev, Dept Informat Syst Engn, IL-84105 Beer Sheva, Israel.
C3 Ben Gurion University
RP Ben Gurion Univ Negev, Dept Informat Syst Engn, IL-84105 Beer Sheva, Israel.
EM chanan@bgu.ac.il
RI Shoval, Peretz/F-1229-2012; LAST, MARK/F-1424-2012; Last,
   Mark/AAF-8443-2020
OI Shoval, Peretz/0000-0002-0183-2832; Glezer, Chanan/0000-0002-4356-1858
CR [Anonymous], 1990, DESIGNING OBJECT ORI
   Avison D. E., 1998, Information Technology & People, V11, P124, DOI 10.1108/09593849810218319
   Avison DE, 2003, COMMUN ACM, V46, P78, DOI 10.1145/602421.602423
   BAJAJ A, 2004, P CAISE IFIP8 1 INT, P297
   BATRA D, 1994, INT J HUM-COMPUT ST, V41, P481, DOI 10.1006/ijhc.1994.1070
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Hahn J., 1999, ACM Transactions on Computer-Human Interaction, V6, P181, DOI 10.1145/329693.329694
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   *ITU, 1994, INT TELCOMMUNICATION, V120
   Jacobsen I., 1992, OBJECT ORIENTED SOFT
   KABELI J, 2004, IN PRESS INFORMATION
   Kim J, 2000, INFORM SYST RES, V11, P284, DOI 10.1287/isre.11.3.284.12206
   KIM YG, 1995, COMMUN ACM, V38, P103, DOI 10.1145/203241.203265
   Maciaszek L., 2001, REQUIREMENTS ANAL SY
   MARTIN RC, 1998, ENG NOTEBOOK COL APR
   MARTIN RC, 1997, ENG NOTEBOOK COL NOV
   MCNEISH K, 2002, CODE             MAY, P18
   MCNEISH K, 2002, CODE             MAR, P64
   Miller I., 2003, MDA GUIDE VERSION 1
   Minium E., 1999, ELEMENTS STAT REASON
   NIJSSEN GM, 1981, P SPOT 2 C STOCKH
   *OMG, 2003, UML 1 5 CURR OFF VER
   Otero M. C., 2002, Empirical Software Engineering, V7, P27, DOI 10.1023/A:1014819010099
   Otero MC, 2004, INFORM SOFTWARE TECH, V46, P35, DOI 10.1016/S0950-5849(03)00108-3
   OYSTEIN H, 2001, LNCS, V2078, P38
   Peleg M, 2000, IEEE T SOFTWARE ENG, V26, P742, DOI 10.1109/32.879812
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   SHOVAL P, 1987, DATA BASE, V18, P30, DOI 10.1145/27544.27548
   Shoval P., 1994, Journal of Database Management, V5, P28
   Shoval P, 1997, DATA KNOWL ENG, V21, P297, DOI 10.1016/S0169-023X(97)88935-5
   STEVENS P, 1999, UML USING USING UML
   Topi H., 2002, Journal of Database Management, V13, P3, DOI 10.4018/jdm.2002040101
   Travassos GH, 1999, ACM SIGPLAN NOTICES, V34, P47, DOI 10.1145/320385.320389
   Wieringa R, 1998, ACM COMPUT SURV, V30, P459, DOI 10.1145/299917.299919
NR 34
TC 14
Z9 16
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL 1
PY 2005
VL 47
IS 10
BP 675
EP 692
DI 10.1016/j.infsof.2005.01.003
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 948IL
UT WOS:000230709200004
DA 2024-07-18
ER

PT J
AU Tiwana, A
AF Tiwana, A
TI An empirical study of the effect of knowledge integration on software
   development performance
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE knowledge managemen; knowledge integration; software development
   performance; software quality
ID SYSTEMS
AB Although the role of integrating application domain knowledge with technical knowledge is implicitly recognized in software engineering practice, no large scale study has attempted to validate this empirically in a field setting. In this paper, a large-scale empirical study of 232 software development projects in 232 software development organizations shows that higher integration of business application domain knowledge with technical knowledge during the software development process increases software development effectiveness, reduces defect density throughout the development trajectory, lowers warranty defects, and increases software development efficiency. The findings highlight the influence of knowledge integration on various dimensions of software development performance. (C) 2004 Elsevier B.V. All rights reserved.
C1 Emory Univ, Goizueta Business Sch, Atlanta, GA 30322 USA.
C3 Emory University
RP Emory Univ, Goizueta Business Sch, 1300 Clifton Rd, Atlanta, GA 30322 USA.
EM atiwana@bus.emory.edu
CR ADELSON B, 1985, IEEE T SOFTWARE ENG, V11, P1351, DOI 10.1109/TSE.1985.231883
   Armour PG, 2000, COMMUN ACM, V43, P19, DOI 10.1145/345124.345131
   BASILI VR, 1995, SLOAN MANAGE REV, V37, P55
   CAMPBELL DT, 1959, PSYCHOL BULL, V56, P81, DOI 10.1037/h0046016
   Chin WW, 1998, QUANT METH SER, P295
   Desouza KC, 2003, COMMUN ACM, V46, P99
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   KUMAR N, 1993, ACAD MANAGE J, V36, P1633, DOI 10.5465/256824
   MANN C, 2002, MIT TECHNOLOGY R JUL, P33
   Mookerjee VS, 2002, IEEE T SOFTWARE ENG, V28, P684, DOI 10.1109/TSE.2002.1019482
   Ramesh B, 2002, IEEE SOFTWARE, V19, P50, DOI 10.1109/MS.2002.1003454
   RAMESH B, 1992, IEEE T SOFTWARE ENG, V18, P498, DOI 10.1109/32.142872
   Robilliard PN, 1999, COMMUN ACM, V42, P87, DOI 10.1145/291469.291476
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   WALZ DB, 1993, COMMUN ACM, V36, P63, DOI 10.1145/163430.163447
   ZWEBEN SH, 1995, IEEE T SOFTWARE ENG, V21, P200, DOI 10.1109/32.372147
NR 17
TC 91
Z9 98
U1 0
U2 36
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT 1
PY 2004
VL 46
IS 13
BP 899
EP 906
DI 10.1016/j.infsof.2004.03.006
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 843UJ
UT WOS:000223111800004
DA 2024-07-18
ER

PT J
AU de Melo, ACV
   Moutinho, BM
AF de Melo, ACV
   Moutinho, BM
TI On the composition of Java frameworks control-flows
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 18th ACM Symposium on Applied Computing
CY MAR 09-12, 2003
CL MELBOURNE, FLORIDA
SP ACM
DE object oriented software; frameworks; control-flows composition;
   software reuse
AB Object oriented programming languages provide, in principle, mechanisms to enhance code reuse. As an effort of designing object oriented software, design patterns and frameworks are recognised as good techniques for reuse. Frameworks are of particular interest as design and code reuse are achieved. Despite of that, most frameworks were designed to be adapted to applications and not to be composed with other frameworks. As a result, problems such as control-flows composition, legacy components composition, frameworks gap, entities overlap and composition of frameworks behaviour arise. The present work is a study on the composition of Java frameworks control-flows, where a third framework is created from two existing ones. With this study, we have checked the potential problems that may appear as two control-flows are composed via message-passing. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Sao Paulo, Dept Comp Sci, BR-05508090 Sao Paulo, Brazil.
C3 Universidade de Sao Paulo
RP de Melo, ACV (corresponding author), Univ Sao Paulo, Dept Comp Sci, Rua Matao,1010,Cidade Univ, BR-05508090 Sao Paulo, Brazil.
EM acvm@ime.usp.br
RI de Melo, Ana C V/G-1527-2012
CR BOOCH G, 1994, DR DOBBS J, V19, P2
   FROEHLICH G, 1999, INFORMATION SYSTEMS, P6
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   KEEFER PD, 1994, THESIS U ILLINOIS
   MATTSON M, 1997, TOOLS USA
   MATTSON M, 1999, COMMUNICATIONS ACM, V42
   MOLIN P, 1997, APPLYING OBJECT ORIE
   PREE W, 1999, BUILDING APPL FRAMEW
   Schmidt D.C., 1996, PATTERN LANGUAGES PR
   SOUNDARAJAN N, 1997, UNDERSTANDING FRAMEW
NR 10
TC 3
Z9 3
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 15
PY 2004
VL 46
IS 5
BP 301
EP 307
DI 10.1016/j.infsof.2003.09.007
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Conference Proceedings Citation Index - Science (CPCI-S); Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 778FU
UT WOS:000189229500005
DA 2024-07-18
ER

PT J
AU Shinjo, Y
   Kubo, T
   Pu, C
AF Shinjo, Y
   Kubo, T
   Pu, C
TI Efficient mediators with closures for handling dynamic interfaces in an
   imperative language
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 18th ACM Symposium on Applied Computing
CY MAR 09-12, 2003
CL MELBOURNE, FL
SP ACM
DE mediators; intermediators; run-time specialization; dynamic code
   generation; user authentication; closures
AB Mediators are well-known software components in the construction of distributed systems and applications, with clear advantages when adding functionality to legacy code. However, mediators that must handle dynamic interfaces (i.e. those that may change at run-time such as callback functions) are not easy to build in most imperative languages such as C, due to the many variants implied by the dynamic interfaces. We call this kind of mediators intermediators. We propose a systematic implementation method based on the concept of closures to implement intermediators using the Tempo run-time specializer for C programs. To illustrate this method, we implemented a unified user authentication intermediator for Unix and Windows 2000 called GINA-IM. GINA-IM gets the password entries from a Unix NIS server and performs user authentication based on the Graphical Identification and Authentication (GINA) model of Windows 2000. The code of GINA-IM is a quarter of the code size of a conventional component written without our tools. GINA-IM is in production use at authors' university by two thousands of freshmen in class and several thousands of students daily. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Tsukuba, Inst Informat Sci & Elect, Tsukuba, Ibaraki 3058573, Japan.
   Georgia Inst Technol, Coll Comp, Atlanta, GA 30332 USA.
C3 University of Tsukuba; University System of Georgia; Georgia Institute
   of Technology
RP Univ Tsukuba, Inst Informat Sci & Elect, Tsukuba, Ibaraki 3058573, Japan.
EM yas@is.tsukuba.ac.jp; calton@cc.gatech.edu
RI Shinjo, Yasushi/W-1972-2019
CR ADALI S, 1996, P ACM SIGMOD INT C M, P137
   Breuel Thomas M., 1988, P USENIX C C, P293
   CONSEL C, 1996, LECT NOTES COMPUTER, V1110, P54
   CURRY TW, 1994, PROCEEDINGS OF THE SUMMER 1994 USENIX CONFERENCE, P267
   Goodheart B., 1994, The Magic Garden Explained: The Internals of UNIX System V Release 4: an Open Systems Design
   JONES MB, 1993, P 14 ACM S OP SYST P, P80
   KELSEY R, 1998, REVISED5 REPORT ALGO
   Muller G, 1998, INT CON DISTR COMP S, P240, DOI 10.1109/ICDCS.1998.679507
   Narasimhan P, 1999, COMPUTER, V32, P62, DOI 10.1109/2.774920
   Poletto M, 1999, ACM T PROGR LANG SYS, V21, P324, DOI 10.1145/316686.316697
   POSTEL J., 1985, RFC959
   SCHEIFLER RW, 1986, ACM T GRAPHIC, V5, P79, DOI 10.1145/22949.24053
   SHINJO Y, 2003, 18 ACM S APPL COMP S, P1147
   Stallman R., 1999, USING PORTING GNU CO
   WILLIAMS N, 1997, NISGINA NIS AUTHENTI
   YEE KP, 1995, SHODUOKA MEDIATOR SE
NR 16
TC 2
Z9 2
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 15
PY 2004
VL 46
IS 5
BP 351
EP 357
DI 10.1016/j.infsof.2003.09.013
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 778FU
UT WOS:000189229500012
DA 2024-07-18
ER

PT J
AU Gotzhein, R
AF Gotzhein, R
TI Consolidating and applying the SDL-pattern approach: a detailed case
   study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Concordia Prestigious Workshop on Communications Software Engineering
CY SEP 11-12, 2001
CL MONTREAL, CANADA
DE design methodology; protocol engineering; reuse; **SDL; MSC; UML; SDL
   patterns
ID SYSTEMS
AB This paper is on design methodology for communication systems. The SDL-pattern approach proposed recently is consolidated and applied rigorously and in detail to the design of a typical communication system on two levels of abstraction. The design is decomposed into a number of steps. each of which is carried out systematically, building on well-proven, generic pieces of solutions that have proven useful in previous projects. These generic solutions-termed SDL patterns-support reuse-driven design of communication systems, raise the vocabulary of protocol engineer to a problem-oriented level, assist the discovery and exploitation of commonalities, and lead to well-justified designs. The selection and use of SDL patterns is supported by a fine-grained incremental design process, the pattern definition takes advantage of formal design languages, and a set of heuristics addresses the decomposition of communication requirements. All these elements are presented and applied in detail to the design of a simple, but functionally complete communication system. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Kaiserslautern, Dept Comp Sci, D-67653 Kaiserslautern, Germany.
C3 University of Kaiserslautern
RP Gotzhein, R (corresponding author), Univ Kaiserslautern, Dept Comp Sci, Postfach 3049, D-67653 Kaiserslautern, Germany.
CR BRAEK R, 1998, P FORTE PSTV98 DORDR, P181
   Braek R., 1993, ENG REAL TIME SYSTEM
   CISOWSKI D, 1998, P 1 WORKSH SDL MSC S
   FELDMANN R, 2002, UNPUB
   FELDMANN R, 1999, 0399 U KAIS
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Geppert B, 1997, SDL '97 - TIME FOR TESTING, P523, DOI 10.1016/B978-044482816-3/50035-6
   GEPPERT B, 1998, FORMAL DESCRIPTION T, P197
   GEPPERT B, 2000, THESIS U KAISERSLAUT
   Gotzhein R, 1999, ANN TELECOMMUN, V54, P508
   GOTZHEIN R, 2001, SILICON SYSTEM DEV I
   Hogrefe D., 1992, Tech. Rep. IAM- 91-012
   Reed R, 1996, COMPUT NETWORKS ISDN, V28, P1685, DOI 10.1016/0169-7552(95)00126-3
   ROSSLER F, 1998, P 5 INT C SOFTW REUS
   RUMBAUGH R, 1999, UNIFIED MODELLING LA
   Schulzrinne H., 1996, Rtp: a transport protocol for real-time applications
   *TEL, 1998, TAU 3 4 SDT METH G 1
   *TEL, 2001, TAU 4 2 SDL SUIT
NR 18
TC 4
Z9 4
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG 15
PY 2003
VL 45
IS 11
BP 727
EP 741
DI 10.1016/S0950-5849(03)00069-7
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Conference Proceedings Citation Index - Science (CPCI-S); Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 720DG
UT WOS:000185245800004
DA 2024-07-18
ER

PT J
AU Matthews, C
AF Matthews, C
TI A formal specification for a fuzzy expert system
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT World Congress on Computational Intelligence (WCCI 2002)
CY MAY, 2002
CL HONOLULU, HAWAII
DE formal specification; fuzzy systems; Z; fuzzy logic toolkit
AB A fuzzy logic toolkit has been developed for the formal specification language Z. It permits the incorporation of fuzzy concepts into the language while retaining the precision of any Z specification. The toolkit provides the necessary operators, measures and modifiers for the definition and manipulation of fuzzy sets and relations. This paper illustrates how the toolkit can be used to specify a simple fuzzy expert system. The focus is on the specification of the rule base and the operations necessary for fuzzy inferencing. In particular the example illustrates the use of the fuzzy cartesian product and fuzzy set truncation operators and offers a generic definition for a centroid defuzzification function. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 La Trobe Univ, Sch Business & Technol, Dept Informat Technol, Bendigo, Vic 3552, Australia.
C3 La Trobe University
RP Matthews, C (corresponding author), La Trobe Univ, Sch Business & Technol, Dept Informat Technol, POB 199, Bendigo, Vic 3552, Australia.
CR [Anonymous], 1992, The Z Notation
   [Anonymous], 1988, POSSIBILITY THEORY
   [Anonymous], 2017, Fuzzy logic with engineering applications
   CLARKE EM, 1996, ACM COMPUT SURV, V28, P627
   Cox E., 1994, FUZZY SYSTEMS HDB
   GRAHAM I, 1991, FUZZY SET SYST, V40, P451, DOI 10.1016/0165-0114(91)90172-M
   Hayes I. J., 1993, SPECIFICATION CASE S
   JACKY J, 1997, PRACTICAL PROGRAMMIN
   Jang J-SR, 1997, IEEE T AUTOMAT CONTR, V42, P1482
   Kandel A., 1992, Fuzzy Expert Systems
   KLIR GJ, 1997, CONSENSUS FUZZINESS, P29
   MATTHEWS C, 2000, 1 INT C B Z US YORK
   MATTHEWS C, 1999, EXTENDED NOTATION RE, P38
   MATTHEWS C, 2000, P 7 AS PAC SOFTW ENG
   NICHOLS J, 1998, Z NOTATION VERSION 1
   Potter Ben., 1996, INTRO FORMAL SPECIFI, V2nd
   SAIEDIAN H, 1997, SOFTWARE REQUIREMENT, P336
   VALENTINE SH, 1995, P 7 INT C PUTT PRACT
   Viot G., 1993, AI Expert, V8, P26
   ZADEH LA, 1975, INFORM SCIENCES, V8, P199, DOI 10.1016/0020-0255(75)90046-8
   Zhang Q, 1998, J PRAGMATICS, V29, P13, DOI 10.1016/S0378-2166(97)00014-3
   [No title captured]
NR 22
TC 8
Z9 8
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY 1
PY 2003
VL 45
IS 7
BP 419
EP 429
DI 10.1016/S0950-5849(03)00013-2
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Conference Proceedings Citation Index - Science (CPCI-S); Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 680XC
UT WOS:000183004500004
DA 2024-07-18
ER

PT J
AU Owolabi, O
AF Owolabi, O
TI Empirical studies of some hashing functions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE hashing; hash function efficiency; collision resolution; probing;
   chaining
ID SETS
AB The best hash function for a particular data set can often be found by empirical studies. The studies reported here are aimed at discovering the most appropriate function for hashing Nigerian names. Five common hash functions-the division, multiplication, midsquare, radix conversion and random methods-along with two collision-handling techniques-linear probing and chaining-were initially tried out on three data sets, each consisting of about 1000 words. The first data set consists of Nigerian names, the second of English names, and the third of words with computing associations. The major finding is that the performance of these functions with the Nigerian names is comparable to those for the other data sets. Also, the superiority of the random and division methods over others is confirmed, even though the division method will often be preferred for its ease of computation. It is also demonstrated that chaining, as a technique for collision-handling, is to be preferred. The hash methods and collision-handling methods were further tested by using much larger data sets and long multiple word strings. These further tests confirmed the previous findings. (C) 2002 Elsevier Science B.V. All rights reserved.
C1 Univ Port Harcourt, Dept Math & Comp Sci, Port Harcourt, Nigeria.
C3 University of Port Harcourt
RP Owolabi, O (corresponding author), Univ Port Harcourt, Dept Math & Comp Sci, Port Harcourt, Nigeria.
CR BRAIN MD, 1989, SOFTWARE PRACT EXPER, V19, P967, DOI 10.1002/spe.4380191005
   CHANG CC, 1986, INFORM SCIENCES, V39, P187, DOI 10.1016/0020-0255(86)90033-2
   CORMACK GV, 1985, COMPUT J, V28, P54, DOI 10.1093/comjnl/28.1.54
   Knuth DonaldErvin., 1973, ART COMPUTER PROGRAM, V3, P506
   KOHONEN T, 1987, CONTENT ASSRESSABLE, P39
   LUM VY, 1973, COMMUN ACM, V16, P603, DOI 10.1145/362375.362385
   Maurer W. D., 1975, Computing Surveys, V7, P5, DOI 10.1145/356643.356645
   MILLER NE, 1987, FILE STRUCTURES USIN, P209
   MORRIS R, 1968, COMMUN ACM, V11, P38, DOI 10.1145/362851.362882
   SEBASTA RW, 1985, SIGPLAN NOTICES, V20, P47
   SPRUGNOLI R, 1977, COMMUN ACM, V20, P841, DOI 10.1145/359863.359887
   ULLMAN JD, 1972, J ACM, V19, P569, DOI 10.1145/321707.321722
NR 12
TC 1
Z9 3
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB 1
PY 2003
VL 45
IS 2
BP 109
EP 112
AR PII S0950-5849(02)00174-X
DI 10.1016/S0950-5849(02)00174-X
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 640QC
UT WOS:000180698600004
DA 2024-07-18
ER

PT J
AU Stamelos, I
   Angelis, L
   Dimou, P
   Sakellaris, E
AF Stamelos, I
   Angelis, L
   Dimou, P
   Sakellaris, E
TI On the use of Bayesian belief networks for the prediction of software
   productivity
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE cost estimation; Bayesian belief network; expert judgment; COCOMO
ID MODELS
AB In spite of numerous methods proposed, software cost estimation remains an open issue and in most situations expert judgment is still being used. In this paper, we propose the use of Bayesian belief networks (BBNs), already applied in other software engineering areas, to support expert judgment in software cost estimation. We briefly present BBNs and their advantages for expert opinion support and we propose their use for productivity estimation. We illustrate our approach by giving two examples, one based on the COCOMO81 cost factors and a second one, dealing with productivity in ERP system localization. (C) 2002 Elsevier Science B.V. All rights reserved.
C1 Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54006, Greece.
   Singular Int, Thessaloniki 54626, Greece.
C3 Aristotle University of Thessaloniki
RP Stamelos, I (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54006, Greece.
RI Stamelos, Ioannis/AAK-7207-2020
CR [Anonymous], 1990, Probabilistic reasoning in expert systems: theory and algorithms
   Boehm BW., 1981, Software Engineering Economics
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   *CTR SOFTW ENG, 1997, COCOMO 2 MOD DEF MAN
   Fenton NE, 1999, J SYST SOFTWARE, V47, P149, DOI 10.1016/S0164-1212(99)00035-7
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Hughes RT, 1996, INFORM SOFTWARE TECH, V38, P67, DOI 10.1016/0950-5849(95)01045-9
   *ISBSG, SOFTW PROJ DAT
   Kitchenham B, 1997, IEEE SOFTWARE, V14, P69, DOI 10.1109/52.589239
   Leibovici L, 2000, IEEE T KNOWL DATA EN, V12, P517, DOI 10.1109/69.868905
   Moses J, 2000, INFORM SOFTWARE TECH, V42, P533, DOI 10.1016/S0950-5849(00)00097-5
   MURPHY K, BAYESIAN NETWORK SOF
   Pearl J., 1988, PROBABILISTIC REASON
   ZIV H, 1997, P 1997 INT C SOFTW M
NR 14
TC 62
Z9 65
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN 1
PY 2003
VL 45
IS 1
BP 51
EP 60
AR PII S0950-5849(02)00163-5
DI 10.1016/S0950-5849(02)00163-5
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 633RD
UT WOS:000180295500007
DA 2024-07-18
ER

PT J
AU Zhao, XD
   Xu, XL
   Qi, LY
   Xia, XY
   Bilal, M
   Gong, WW
   Kou, HZ
AF Zhao, Xudong
   Xu, Xiaolong
   Qi, Lianyong
   Xia, Xiaoyu
   Bilal, Muhammad
   Gong, Wenwen
   Kou, Huaizhen
TI Unraveling quantum computing system architectures: An extensive survey
   of cutting-edge paradigms
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Quantum computing; Quantum software architecture; Quantum software
   engineering
ID TELEPORTATION; ENTANGLEMENT; COMPUTATION; CHALLENGE
AB Context: The convergence of physics and computer science in the realm of quantum computing systems has sparked a profound revolution within the computer industry. However, despite such promise, the existing focus on quantum software systems primarily centers on the generation of quantum source code, inadvertently overlooking the pivotal role of the overall software architecture. Objectives: In order to provide comprehensive guidance to researchers and practitioners engaged in quantum software development, employing an architecture -centered development model, an extensive literature review was conducted pertaining to existing research on quantum software architecture. The analysis encompasses a detailed examination of the characteristics exhibited by these studies and the identification of prospective challenges that lie ahead in the field of quantum software architecture. Methods: We have closely examined instances of quantum software engineering, quantum modeling languages, quantum design patterns, and quantum communication security to gain insights into the distinctive attributes associated with various software architecture approaches. Results: Our findings underscore the critical significance of prioritizing software architecture in the development of robust and efficient quantum software systems. Through the synthesis of these multifaceted aspects, both researchers and practitioners can devise quantum software solutions that are inherently architecturecentric. Conclusion: The software architecture of quantum computing systems plays a pivotal role in determining their ultimate success and usability. Given the ongoing advancements in quantum computing technology, the migration of traditional software architecture development methods to the domain of quantum software development holds significant importance.
C1 [Zhao, Xudong; Xu, Xiaolong] Nanjing Univ Informat Sci & Technol, Sch Software, Nanjing, Peoples R China.
   [Qi, Lianyong] China Univ Petr East China, Coll Comp Sci & Technol, Qingdao, Peoples R China.
   [Xu, Xiaolong] RMIT Univ, Sch Comp Technol, Melbourne, Vic, Australia.
   [Bilal, Muhammad] Univ Lancaster, Sch Comp & Commun, Lancaster LA1 4WA, England.
   [Gong, Wenwen] Tsinghua Univ, Dept Comp Sci & Technol, Beijing, Peoples R China.
   [Kou, Huaizhen] Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, Nanjing, Peoples R China.
C3 Nanjing University of Information Science & Technology; China University
   of Petroleum; Royal Melbourne Institute of Technology (RMIT); Lancaster
   University; Tsinghua University; Nanjing University of Science &
   Technology
RP Xu, XL (corresponding author), Nanjing Univ Informat Sci & Technol, Sch Software, Nanjing, Peoples R China.; Qi, LY (corresponding author), China Univ Petr East China, Coll Comp Sci & Technol, Qingdao, Peoples R China.; Xu, XL (corresponding author), RMIT Univ, Sch Comp Technol, Melbourne, Vic, Australia.
EM njuxlxu@gmail.com; lianyongqi@gmail.com
RI Zhao, Xudong/ISS-2871-2023; Qi, Lianyong/AAO-2681-2020
OI Zhao, Xudong/0000-0002-9638-4875; 
FU Nation College Students Inno-vation and Entrepreneurship Training
   Program [202310300039Z]
FX <B>Acknowledgments</B> This work was partially supported by Nation
   College Students Inno-vation and Entrepreneurship Training Program (NO.
   202310300039Z) .
CR Ahmad A, 2023, Arxiv, DOI arXiv:2303.14713
   Ajagekar A, 2022, KOREAN J CHEM ENG, V39, P811, DOI 10.1007/s11814-021-1027-6
   Akbar MA, 2023, AUTOMAT SOFTW ENG, V30, DOI 10.1007/s10515-023-00389-7
   Aleksandrowicz Gadi, 2019, Zenodo, DOI 10.5281/ZENODO.2562111
   Alexander C., 1977, PATTERN LANGUAGE TOW
   Anis Md Sajid, 2021, Qiskit/qiskit
   [Anonymous], 2012, Temporal Logic
   Barbosa Luis S., 2020, P IEEE ACM 42 INT C, P427, DOI DOI 10.1145/3387940.3392184
   BENNETT CH, 1992, PHYS REV LETT, V69, P2881, DOI 10.1103/PhysRevLett.69.2881
   BENNETT CH, 1993, PHYS REV LETT, V70, P1895, DOI 10.1103/PhysRevLett.70.1895
   Bose S, 1998, PHYS REV A, V57, P822, DOI 10.1103/PhysRevA.57.822
   Bruss D, 2004, PHYS REV LETT, V93, DOI 10.1103/PhysRevLett.93.210501
   BUSCHMANN F, 1996, PATTERN ORIENTED SOF, V1, P31
   Cacciapuoti AS, 2020, IEEE T COMMUN, V68, P3808, DOI 10.1109/TCOMM.2020.2978071
   Chen JP, 2021, NAT PHOTONICS, V15, P570, DOI 10.1038/s41566-021-00828-5
   Clark John, 2002, WORKSHOP GRAND CHALL
   Cozzolino D, 2019, ADV QUANTUM TECHNOL, V2, DOI 10.1002/qute.201900038
   Das N, 2023, Arxiv, DOI arXiv:2304.03201
   Das T, 2015, PHYS REV A, V92, DOI 10.1103/PhysRevA.92.052330
   de Leon NP, 2021, SCIENCE, V372, P253, DOI 10.1126/science.abb2823
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Fiaschi N, 2021, NAT PHOTONICS, V15, P817, DOI 10.1038/s41566-021-00866-z
   Fitzgerald B., 2014, P 1 INT WORKSH RAP C, P1, DOI DOI 10.1145/2593812.2593813
   Friedenthal S., 2014, A Practical Guide to SysML: the Systems Modeling Language, DOI DOI 10.1016/C2013-0-14457-1
   Fu X, 2016, PROCEEDINGS OF THE ACM INTERNATIONAL CONFERENCE ON COMPUTING FRONTIERS (CF'16), P323, DOI 10.1145/2903150.2906827
   Gallego-Madrid J, 2022, DIGIT COMMUN NETW, V8, P105, DOI 10.1016/j.dcan.2021.09.001
   Gill SS, 2022, SOFTWARE PRACT EXPER, V52, P66, DOI 10.1002/spe.3039
   Gisin N, 2007, NAT PHOTONICS, V1, P165, DOI 10.1038/nphoton.2007.22
   Bennett CH, 2020, Arxiv, DOI arXiv:2003.06557
   Hu LY, 2020, PHYS REV A, V102, DOI 10.1103/PhysRevA.102.012608
   Hu XM, 2020, PHYS REV LETT, V125, DOI 10.1103/PhysRevLett.125.230501
   Ihnatchenko S, 2021, Application of Prototype Design Pattern in Parallel Implementation of Finite Element Analysis Aystems
   Jacobson L., 2021, The unified modeling language reference manual
   Júnior AAC, 2019, LECT NOTES COMPUT SC, V11623, P17, DOI 10.1007/978-3-030-24308-1_2
   Khan AA, 2023, 2023 IEEE INTERNATIONAL CONFERENCE ON QUANTUM SOFTWARE, QSW, P9, DOI 10.1109/QSW59989.2023.00012
   Khan AA, 2023, J SYST SOFTWARE, V201, DOI 10.1016/j.jss.2023.111682
   Khan Arif Ali, 2022, Introduction to the special issue on managing software processes using soft computing techniques
   Kurpiers P, 2019, PHYS REV APPL, V12, DOI 10.1103/PhysRevApplied.12.044067
   Lan HB, 2008, ADV ENG SOFTW, V39, P526, DOI 10.1016/j.advengsoft.2007.03.014
   Leymann F, 2021, Arxiv, DOI arXiv:2103.04320
   Leymann F, 2019, LECT NOTES COMPUT SC, V11413, P218, DOI 10.1007/978-3-030-14082-3_19
   Li Q, 2012, PROCEEDINGS OF THE 2012 SECOND INTERNATIONAL CONFERENCE ON INSTRUMENTATION & MEASUREMENT, COMPUTER, COMMUNICATION AND CONTROL (IMCCC 2012), P272, DOI 10.1109/IMCCC.2012.68
   Li W, 2023, NAT PHOTONICS, V17, P416, DOI 10.1038/s41566-023-01166-4
   Li WJ, 2021, DIGIT COMMUN NETW, V7, P257, DOI 10.1016/j.dcan.2020.09.003
   Liao SK, 2017, NATURE, V549, P43, DOI 10.1038/nature23655
   Lipka-Bartosik P, 2021, PHYS REV LETT, V127, DOI 10.1103/PhysRevLett.127.080502
   Liu Y, 2023, PHYS REV LETT, V130, DOI 10.1103/PhysRevLett.130.210801
   Llewellyn D, 2020, NAT PHYS, V16, P148, DOI 10.1038/s41567-019-0727-x
   Luo YH, 2019, PHYS REV LETT, V123, DOI 10.1103/PhysRevLett.123.070505
   McCaskey AJ, 2018, SOFTWAREX, V7, P245, DOI 10.1016/j.softx.2018.07.007
   O'Brien TE, 2022, PHYS REV RES, V4, DOI 10.1103/PhysRevResearch.4.043210
   Pérez-Castillo R, 2022, COMPUTING, V104, P2375, DOI 10.1007/s00607-022-01091-4
   Pérez-Castillo R, 2021, 2021 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON QUANTUM SOFTWARE ENGINEERING (Q-SE 2021), P7, DOI 10.1109/Q-SE52541.2021.00009
   Perez-Delgado C. A., 2020, P IEEEACM 42 INT C S, P442, DOI DOI 10.1145/3387940.3392183
   Perez-Delgado Carlos A., 2022, Quantum Software Engineering, P103
   Piattini Mario, 2020, ACM SIGSOFT Software Engineering Notes, V45, P12, DOI 10.1145/3402127.3402131
   Pisano Vincenzo, 2022, Plugin-based workflow integration for qhana
   Pittaluga M, 2021, NAT PHOTONICS, V15, P530, DOI 10.1038/s41566-021-00811-0
   Reisig W., 2012, Petri nets: an introduction, V4
   Schaetz T, 2004, PHYS REV LETT, V93, DOI 10.1103/PhysRevLett.93.040505
   Shen Zhijie, 2022, 2022 IEEE 24th Int Conf on High Performance Computing & Communications; 8th Int Conf on Data Science & Systems; 20th Int Conf on Smart City; 8th Int Conf on Dependability in Sensor, Cloud & Big Data Systems & Application (HPCC/DSS/SmartCity/DependSys), P186, DOI 10.1109/HPCC-DSS-SmartCity-DependSys57074.2022.00057
   SHOR PW, 1994, AN S FDN CO, P124
   Situ HZ, 2014, INT J THEOR PHYS, V53, P1003, DOI 10.1007/s10773-013-1893-8
   Situ HZ, 2010, J PHYS A-MATH THEOR, V43, DOI 10.1088/1751-8113/43/5/055301
   Steane A, 1998, REP PROG PHYS, V61, P117, DOI 10.1088/0034-4885/61/2/002
   Stepney S, 2005, INT J PARALLEL EMERG, V20, P5, DOI 10.1080/17445760500033291
   Svore KM, 2006, COMPUTER, V39, P74, DOI 10.1109/MC.2006.4
   Svore K, 2018, RWDSL2018: PROCEEDINGS OF THE REAL WORLD DOMAIN SPECIFIC LANGUAGES WORKSHOP 2018, DOI 10.1145/3183895.3183901
   Rasool RU, 2023, FUTURE INTERNET, V15, DOI 10.3390/fi15030094
   Vagniluca I, 2020, PHYS REV APPL, V14, DOI 10.1103/PhysRevApplied.14.014051
   Vatan F, 2004, PHYS REV A, V69, DOI 10.1103/PhysRevA.69.032315
   Vedaie Seyed Shakib, 2022, arXiv
   von Rosing Mark., 2015, Business Process Model and Notation-BPMN
   Wan SH, 2020, MOBILE NETW APPL, V25, P743, DOI 10.1007/s11036-019-01445-x
   Wang S, 2022, NAT PHOTONICS, V16, P154, DOI 10.1038/s41566-021-00928-2
   Wang ZX, 2022, DIGIT COMMUN NETW, V8, P720, DOI 10.1016/j.dcan.2021.12.006
   Weder B, 2022, PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE (CLOSER), P38, DOI 10.5220/0011035100003200
   Weder B, 2021, ELECTRONICS-SWITZ, V10, DOI 10.3390/electronics10080984
   Weder B, 2020, INT CONF UTIL CLOUD, P279, DOI 10.1109/UCC48980.2020.00046
   Weedbrook C, 2012, REV MOD PHYS, V84, P621, DOI 10.1103/RevModPhys.84.621
   Williams BP, 2017, PHYS REV LETT, V118, DOI 10.1103/PhysRevLett.118.050501
   Wu JW, 2022, PHYS REV APPL, V17, DOI 10.1103/PhysRevApplied.17.064011
   Xu XL, 2019, FUTURE GENER COMP SY, V95, P522, DOI 10.1016/j.future.2018.12.055
   Yan Zheng, 2022, Blockchain-enabled technologies for cyber-physical systems and big data applications
   Zhang C, 2016, INT J QUANTUM INF, V14, DOI 10.1142/S0219749916500234
   Zhang J, 2022, IEEE T INTELL TRANSP, V23, P9370, DOI 10.1109/TITS.2021.3116960
   Zhang YC, 2020, PHYS REV LETT, V125, DOI 10.1103/PhysRevLett.125.010502
NR 87
TC 1
Z9 1
U1 3
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2024
VL 167
AR 107380
DI 10.1016/j.infsof.2023.107380
EA DEC 2023
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ON3H6
UT WOS:001207909900001
DA 2024-07-18
ER

PT J
AU Barba-González, C
   Caballero, I
   Varela-Vaca, AJ
   Cruz-Lemus, JA
   Gómez-López, MT
   Navas-Delgado, I
AF Barba-Gonzalez, Cristobal
   Caballero, Ismael
   Varela-Vaca, Angel Jesus
   Cruz-Lemus, Jose A.
   Gomez-Lopez, Maria Teresa
   Navas-Delgado, Ismael
TI BIGOWL4DQ: Ontology-driven approach for Big Data quality meta-modelling,
   selection and reasoning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Data quality evaluation and measurement; Data quality information model;
   Big Data; Ontology; Decision model and notation
ID SEMANTIC WEB; MANAGEMENT; RULES
AB Context: Data quality should be at the core of many Artificial Intelligence initiatives from the very first moment in which data is required for a successful analysis. Measurement and evaluation of the level of quality are crucial to determining whether data can be used for the tasks at hand. Conscientious of this importance, industry and academia have proposed several data quality measurements and assessment frameworks over the last two decades. Unfortunately, there is no common and shared vocabulary for data quality terms. Thus, it is difficult and time-consuming to integrate data quality analysis within a (Big) Data workflow for performing Artificial Intelligence tasks. One of the main reasons is that, except for a reduced number of proposals, the presented vocabularies are neither machine-readable nor processable, needing human processing to be incorporated. Objective: This paper proposes a unified data quality measurement and assessment information model. This model can be used in different environments and contexts to describe data quality measurement and evaluation concerns. Method: The model has been developed as an ontology to make it interoperable and machine-readable. For better interoperability and applicability, this ontology, BIGOWL4DQ, has been developed as an extension of a previously developed ontology for describing knowledge management in Big Data analytics. Conclusions: This extended ontology provides a data quality measurement and assessment framework required when designing Artificial Intelligence workflows and integrated reasoning capacities. Thus, BIGOWL4DQ can be used to describe Big Data analysis and assess the data quality before the analysis. Result: Our proposal has been validated with two use cases. First, the semantic proposal has been assessed using an academic use case. And second, a real-world case study within an Artificial Intelligence workflow has been conducted to endorse our work.
C1 [Barba-Gonzalez, Cristobal; Navas-Delgado, Ismael] Univ Malaga, KHAOS Res Grp, ITIS Software, Malaga 29071, Spain.
   [Caballero, Ismael; Cruz-Lemus, Jose A.] Univ Castilla La Mancha, Inst Technol & Informat Syst, Ciudad Real, Spain.
   [Varela-Vaca, Angel Jesus; Gomez-Lopez, Maria Teresa] Univ Seville, Dept Lenguajes & Sistemas Informat, IDEA Res Grp, Seville, Spain.
C3 Universidad de Malaga; Universidad de Castilla-La Mancha; University of
   Sevilla
RP Barba-González, C (corresponding author), Univ Malaga, KHAOS Res Grp, ITIS Software, Malaga 29071, Spain.
EM cbarba@uma.es; ismael.caballero@uclm.es; ajvarela@us.es;
   joseantonio.cruz@uclm.es; maytegomez@us.es; ismael@uma.es
RI Varela-Vaca, Angel Jesus/K-8149-2014; Navas-Delgado,
   Ismael/HZH-9635-2023; Navas-Delgado, Ismael/L-2838-2014; Caballero,
   Ismael/AAP-9746-2020
OI Varela-Vaca, Angel Jesus/0000-0001-9953-6005; Navas-Delgado,
   Ismael/0000-0001-7819-5416; Navas-Delgado, Ismael/0000-0001-7819-5416;
   Barba Gonzalez, Cristobal/0000-0002-8764-5076; Caballero,
   Ismael/0000-0002-5189-1427
FU MCIN/AEI [PID2020-112540RB-C41, PID2020-112540RB-C42,
   PID2020-112540RB-C44]; R&D projects METAMORFOSIS, Spain from Junta de
   Andalucia [US-1381375]; Consejeria de Educacion, Cultura y Deportes of
   the Junta de Comunidades de Castilla-La Mancha (Spain)
   [SBPLY/21/180501/000061]; Universidad de Malaga/CBUA
FX This publication is part of the R +D +d projects PID2020-112540RB-C41
   (AETHER-UMA), PID2020-112540RB-C42 (AETHER-UCLM) and
   PID2020-112540RB-C44 (AETHER-US): A smart data holistic approach for
   context-aware data analytics, all of which are funded by
   MCIN/AEI/10.13039/501100011033/. Also, it has been partially funded by
   the R&D projects METAMORFOSIS, Spain (US-1381375) from Junta de
   Andalucia, and ADAGIO, Alarcos' DAta Governance framework and systems
   generation, Spain (SBPLY/21/180501/000061), funded by the Consejeria de
   Educacion, Cultura y Deportes of the Junta de Comunidades de Castilla-La
   Mancha (Spain) and funding for open access charge: Universidad de
   Malaga/CBUA.
CR Albertoni R, 2021, SEMANT WEB, V12, P81, DOI 10.3233/SW-200382
   ALMEIDA R., 2016, Proceedings of the Ninth International C* Conference on Computer Science Software Engineering, P85
   [Anonymous], 2011, ICIQ
   Apache, 2018, Apache griffin
   Arruda N, 2019, PROCEEDINGS OF THE 21ST INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS (ICEIS), VOL 1, P399, DOI 10.5220/0007718803990406
   Barba-González C, 2019, EXPERT SYST APPL, V115, P543, DOI 10.1016/j.eswa.2018.08.026
   Batini C, 2016, DATA CENTRIC SYST AP, P1, DOI 10.1007/978-3-319-24106-7
   Batini C, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1541880.1541883
   BAUER F., 2011, Linked Open Data: The Essentials, V710, P21
   Benítez-Hidalgo A, 2021, KNOWL-BASED SYST, V232, DOI 10.1016/j.knosys.2021.107489
   Bertossi L, 2018, ACM J DATA INF QUAL, V9, DOI 10.1145/3148239
   Biard T, 2015, IFIP ADV INF COMM TE, V463, P489, DOI 10.1007/978-3-319-24141-8_45
   Caballero I., 2007, ICIQ, P393
   Caballero I, 2022, INFORM SYST, V109, DOI 10.1016/j.is.2022.102058
   Cai L., 2015, Data Science Journal, DOI DOI 10.5334/DSJ-2015-002
   Calvanese D, 2016, LECT NOTES COMPUT SC, V9850, P217, DOI 10.1007/978-3-319-45348-4_13
   Challa H, 2020, 2020 IEEE SEVENTH INTERNATIONAL WORKSHOP ON ARTIFICIAL INTELLIGENCE FOR REQUIREMENTS ENGINEERING (AIRE 2020), P61, DOI 10.1109/AIRE51212.2020.00016
   Chiang F, 2008, PROC VLDB ENDOW, V1, P1166, DOI 10.14778/1453856.1453980
   Cichy C, 2019, IEEE ACCESS, V7, P24634, DOI 10.1109/ACCESS.2019.2899751
   Corea C., 2019, BPM PHDDEMOS, P169
   Daraio C, 2016, SCIENTOMETRICS, V108, P441, DOI 10.1007/s11192-016-1913-6
   de Almeida WG, 2013, IBER CONF INF SYST
   de Haro-Olmo J, 2023, PeerJ Comput. Sci., V141
   Dean M., 2004, SWRL: a semantic web Rule Language combining OWL and RuleML
   Debattista J., 2014, LDOW, P1
   Even A., 2007, Data Base for Advances in Information Systems, V38, P75, DOI 10.1145/1240616.1240623
   Figl K, 2018, ENTERP MODELLING INF, V13, DOI 10.18417/emisa.13.2
   Fürber C, 2010, LECT NOTES BUS INF P, V47, P35
   Furber C., 2013, Handbook of Data Quality: Research and Practice, P141
   Furber C., 2011, ECIS 2011 Proceedings
   Furber C, 2011, P 1 INT WORKSHOP LIN, P1
   Garcia S, 2015, INTEL SYST REF LIBR, V72, P1, DOI 10.1007/978-3-319-10247-4
   Gasch CK, 2017, WATER RESOUR RES, V53, P10878, DOI 10.1002/2017WR021307
   Gasch CK, 2017, COMPUT ELECTRON AGR, V137, P29, DOI 10.1016/j.compag.2017.03.018
   Geisler S, 2016, ACM J DATA INF QUAL, V7, DOI 10.1145/2968332
   Gelernter J, 2016, ACM J DATA INF QUAL, V7, DOI 10.1145/2935751
   Grosof BN, 2004, INT J ELECTRON COMM, V8, P61, DOI 10.1080/10864415.2004.11044305
   Gu R, 2021, J PARALLEL DISTR COM, V156, P132, DOI 10.1016/j.jpdc.2021.05.012
   Gualo F, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110938
   Gupta N, 2021, KDD '21: PROCEEDINGS OF THE 27TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P4040, DOI 10.1145/3447548.3470817
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Horrocks I, 2005, J WEB SEMANT, V3, P23, DOI 10.1016/j.websem.2005.05.003
   I.O. for Standardization, 2016, Systems and Software Engineering: Systems and Software Quality Requirements and Evaluation (SQuaRE): Measurement of System and Software Product Quality
   Ilyas Ihab F., 2019, DATA CLEANING
   International Organization for Standardization, 2017, ISO/IEC 17025, DOI DOI 10.1109/IEEESTD.2015.7106438
   Jain A, 2020, KDD '20: PROCEEDINGS OF THE 26TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P3561, DOI 10.1145/3394486.3406477
   Janssen M, 2017, J BUS RES, V70, P338, DOI 10.1016/j.jbusres.2016.08.007
   Jerhamre E, 2022, SMART AGR TECHNOL, V2, DOI 10.1016/j.atech.2021.100026
   Johnson SG, 2016, APPL CLIN INFORM, V7, P69, DOI 10.4338/ACI-2015-08-RA-0107
   Johnson Steven G, 2015, AMIA Annu Symp Proc, V2015, P1937
   de Haro-Olmo FJ, 2021, COMPUT MATH METHODS, V3, DOI 10.1002/cmm4.1191
   Kawtar YD, 2022, International Journal of Intelligent Systems and Applications in Engineering, V10, P761
   Khan J.A., 2014, 2014 INT C ADV ENG T, P1
   Kluza K, 2019, LECT NOTES ARTIF INT, V11775, P787, DOI 10.1007/978-3-030-29551-6_69
   Liaw ST, 2013, INT J MED INFORM, V82, P10, DOI 10.1016/j.ijmedinf.2012.10.001
   Liu Y, 2020, FUTURE GENER COMP SY, V102, P53, DOI 10.1016/j.future.2019.07.063
   Mendes P.N., 2012, P 2012 JOINT EDBT IC, P116, DOI DOI 10.1145/2320765.2320803
   Mocnik FB, 2018, J SPAT INT SCI, P1, DOI 10.5311/JOSIS.2018.16.360
   Nayak A, 2021, Data Quality Assessment: An Ontological Approach
   Noy N. F., 2001, Ontology development 101: A guide to creating your first ontology
   Paschke A., 2016, Supplementary, V1620, P1
   Paton N, 2019, 21 INT WORKSHOP DESI, P1
   Pezoulas VC, 2019, COMPUT BIOL MED, V107, P270, DOI 10.1016/j.compbiomed.2019.03.001
   Poore J, 2018, SCIENCE, V360, P987, DOI 10.1126/science.aaq0216
   Rahm E., 2000, IEEE Data Eng. Bull, V23, P3, DOI [10.1145/1317331.1317341, DOI 10.1145/1317331.1317341]
   Reynares E, 2015, EXPERT SYST APPL, V42, P2680, DOI 10.1016/j.eswa.2014.11.012
   Ristoski P, 2016, J WEB SEMANT, V36, P1, DOI 10.1016/j.websem.2016.01.001
   Rosner F, 2015, Drunken data quality
   Schader C., 2016, Sustainability, V8, P1
   Schader C, 2019, ECOL INDIC, V106, DOI 10.1016/j.ecolind.2019.105503
   Schelter Sebastian, 2018, Deequ-data quality validation for machine learning pipelines
   Serra F., 2022, arXiv
   Shrivastava S, 2019, IEEE INT CONF BIG DA, P2913, DOI 10.1109/BigData47090.2019.9006187
   Souza Damires, 2008, ODBIS, P49
   Sundararaman A., 2011, 2011 3rd International Conference on Trendz in Information Sciences & Computing (TISC), P177, DOI 10.1109/TISC.2011.6169110
   United States Department of Agriculture, 2007, Data from: A field-scale sensor network data set for monitoring and modeling the spatial and temporal variation of soil moisture in a dryland agricultural field
   Valencia Parra A., 2019, ICIS 2019 4 INT C IN, P1
   Valencia Parra A, 2019, Master Universitario en Ingenieria Informatica, P1
   Valencia-Parra A, 2021, DECIS SUPPORT SYST, V141, DOI 10.1016/j.dss.2020.113450
   Wang RY, 1998, COMMUN ACM, V41, P58, DOI 10.1145/269012.269022
   Wang T., 2021, arXiv
   Wienand Dominik, 2014, The Semantic Web: Trends and Challenges. 11th International Conference (ESWC 2014). Proceedings: LNCS 8465, P504, DOI 10.1007/978-3-319-07443-6_34
   Wieringa R.J., 2014, Design Science Methodology: For Information Systems and Software Engineering, DOI DOI 10.1007/978-3-662-43839-8
   Woβ W, 2018, International Journal of Advanced Software Engineering (IJASE), V11, P400
   Yun W, 2021, INT J INTELL SYST, V36, P1686, DOI 10.1002/int.22357
   Zaveri A, 2016, SEMANT WEB, V7, P63, DOI 10.3233/SW-150175
   Zou Haochen, 2022, 2022 IEEE International Conference on Big Data (Big Data), P2699, DOI 10.1109/BigData55660.2022.10020564
NR 87
TC 0
Z9 0
U1 5
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2024
VL 167
AR 107378
DI 10.1016/j.infsof.2023.107378
EA NOV 2023
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DB8K4
UT WOS:001129662000001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Stancek, M
   Polasek, I
   Zalabai, T
   Vincur, J
   Jolak, R
   Chaudron, M
AF Stancek, Martin
   Polasek, Ivan
   Zalabai, Tibor
   Vincur, Juraj
   Jolak, Rodi
   Chaudron, Michel
TI Collaborative software design and modeling in virtual reality
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Virtual reality; Collaboration; Immersion; Software development;
   Software modeling
ID VISUALIZATION; REPRESENTATION
AB Context: Software engineering is becoming more and more distributed. Developers and other stakeholders are often located in different locations, departments, and countries and operating within different time zones. Most online software design and modeling tools are not adequate for distributed collaboration since they do not support awareness and lack features for effective communication.Objective: The aim of our research is to support distributed software design activities in Virtual Reality (VR).Method: Using design science research methodology, we design and evaluate a tool for collaborative design in VR. We evaluate the collaboration efficiency and recall of design information when using the VR software design environment compared to a non-VR software design environment. Moreover, we collect the perceptions and preferences of users to explore the opportunities and challenges that were incurred by using the VR software design environment. Results: We find that there is no significant difference in the efficiency and recall of design information when using the VR compared to the non-VR environment. Furthermore, we find that developers are more satisfied with collaboration in VR.Conclusion: The results of our research and similar studies show that working in VR is not yet faster or more efficient than working on standard desktops. It is very important to improve the interface in VR (gestures with haptics, keyboard and voice input), as confirmed by the difference in results between the first and second evaluation.
C1 [Stancek, Martin; Polasek, Ivan; Zalabai, Tibor] Gratex Int a s, Galvaniho 17-C, Bratislava 82104, Slovakia.
   [Polasek, Ivan; Vincur, Juraj] Comenius Univ, Fac Math Phys & Informat, Mlynska dolina F1, Bratislava 84248, Slovakia.
   [Jolak, Rodi] RISE Res Inst Sweden, Box 857, S-50115 Boras, Sweden.
   [Chaudron, Michel] Eindhoven Univ Technol, OL Vrouwestraat 1, NL-5612 AW Eindhoven, Netherlands.
C3 Comenius University Bratislava; RISE Research Institutes of Sweden;
   Eindhoven University of Technology
RP Polasek, I (corresponding author), Comenius Univ, Fac Math Phys & Informat, Mlynska dolina F1, Bratislava 84248, Slovakia.
EM ivan.polasek@fmph.uniba.sk
OI Chaudron, Michel/0000-0001-7517-6666; Jolak, Rodi/0000-0001-5656-9253
FU Gratex International; Faculty of Mathematics, Physics and Informatics
   Comenius University Bratislava; European Union [101079338]; Horizon
   Europe - Horizontal Pillar [101079338] Funding Source: Horizon Europe -
   Horizontal Pillar
FX We would like to thank Gratex International for providing the space and
   their developers for the experiments. We would also like to thank
   Faculty of Mathematics, Physics and Informatics Comenius University
   Bratislava for providing the facilities and Dr. Pavel Petro- vic for
   encouraging and supporting his students to participate in the
   experiments. This work has been carried out in the framework of the
   TERAIS project, a Horizon-Widera-2021 program of the European Union, GA
   no. 101079338.
CR Arciniegas-Mendez M, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P1049, DOI 10.1145/2998181.2998360
   Atienza R., 2020, Advanced Deep learning with tensorflow 2 and Keras
   Augereau O, 2022, 2022 IEEE CONFERENCE ON VIRTUAL REALITY AND 3D USER INTERFACES ABSTRACTS AND WORKSHOPS (VRW 2022), P54, DOI 10.1109/VRW55335.2022.00020
   Axellience, 2022, Genmymodel
   Badreddin O, 2018, LECT NOTES COMPUT SC, V11150, P219, DOI 10.1007/978-3-030-01042-3_13
   Bartl A, 2022, INT SYM MIX AUGMENT, P260, DOI 10.1109/ISMAR55827.2022.00041
   Batmaz AU, 2022, PROCEEDINGS OF THE 2022 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI' 22), DOI 10.1145/3491102.3502067
   Batmaz AU, 2019, 2019 26TH IEEE CONFERENCE ON VIRTUAL REALITY AND 3D USER INTERFACES (VR), P585, DOI [10.1109/vr.2019.8797975, 10.1109/VR.2019.8797975]
   Berg LP, 2017, VIRTUAL REAL-LONDON, V21, P1, DOI 10.1007/s10055-016-0293-9
   Berg LP, 2017, J COMPUT INF SCI ENG, V17, DOI 10.1115/1.4034267
   Borst CW, 2018, 25TH 2018 IEEE CONFERENCE ON VIRTUAL REALITY AND 3D USER INTERFACES (VR), P467, DOI 10.1109/VR.2018.8448286
   Brettschuh S, 2022, 2022 IEEE CONFERENCE ON VIRTUAL REALITY AND 3D USER INTERFACES ABSTRACTS AND WORKSHOPS (VRW 2022), P493, DOI 10.1109/VRW55335.2022.00112
   Brown R., 2010, P 16 AM C INF SYST S, P1
   Budgen D., 2013, Software Designers in Action: A Human-Centric Look at Design Work, P199
   Casey Ken, 2003, P 2 INT C PRINCIPLES, P63
   Cerny T, 2022, IEEE INT SYMP SERV O, P49, DOI 10.1109/SOSE55356.2022.00012
   Chen WQ, 2006, INTERACT LEARN ENVIR, V14, P233, DOI 10.1080/10494820600909165
   Chheang V, 2022, 2022 IEEE CONFERENCE ON VIRTUAL REALITY AND 3D USER INTERFACES ABSTRACTS AND WORKSHOPS (VRW 2022), P547, DOI 10.1109/VRW55335.2022.00129
   Coplien O.J., 2014, Agile Software Architecture
   Dourish P., 1992, CSCW '92. Sharing Perspectives. Proceedings of the Conference on Computer-Supported Cooperative Work, P107, DOI 10.1145/143457.143468
   Drawio, 2022, about us
   Elliott A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P547, DOI 10.1109/ICSE.2015.191
   Fabrianti Kusumasari T., 2011, Proceedings of the 2011 International Conference on Electrical Engineering and Informatics, V17, P1, DOI DOI 10.1109/ICEEI.2011.6021769
   Ferenc M, 2017, 2017 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2017), P99, DOI 10.1109/VISSOFT.2017.19
   Franzago M, 2018, IEEE T SOFTWARE ENG, V44, P1146, DOI 10.1109/TSE.2017.2755039
   Gerosa M.A., 2007, The 3C collaboration model, P637, DOI [10.4018/978-1-59904-000-4.ch097, DOI 10.4018/978-1-59904-000-4.CH097]
   Gregorovic L., 2015, P 15 INT C KNOWL TEC, DOI [10.1145/2809563.2809564, DOI 10.1145/2809563.2809564]
   Gutwin C., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P411, DOI 10.1023/A:1021271517844
   Hay L, 2017, DES SCI, V3, DOI 10.1017/dsj.2017.6
   Herpieh F, 2014, SYMP VIRTUAL AUGMENT, P118, DOI 10.1109/SVR.2014.36
   IBM rational software architect, 2022, About us
   Joachimczak M, 2022, 2022 IEEE CONFERENCE ON VIRTUAL REALITY AND 3D USER INTERFACES ABSTRACTS AND WORKSHOPS (VRW 2022), P847, DOI 10.1109/VRW55335.2022.00279
   Jolak R, 2020, EMPIR SOFTW ENG, V25, P4427, DOI 10.1007/s10664-020-09835-6
   Jolak R, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P213, DOI 10.1145/3239372.3239404
   Jolak R, 2018, IEEE SOFTWARE, V35, P40, DOI 10.1109/MS.2018.290100920
   Kennedy RS, 1993, The international journal of aviation psychology, V3, P203, DOI [DOI 10.1207/S15327108IJAP0303, 10.1207/s15327108ijap0303_3]
   Kucecka J, 2022, IEEE INT WORK VIS SO, P177, DOI 10.1109/VISSOFT55257.2022.00028
   Leitao Junior N., 2019, J. Converg. Inf. Technol., V14, P30, DOI DOI 10.5753/JSERD.2021.804
   Liu S, 2006, 2006 INTERNATIONAL CONFERENCE ON COLLABORATIVE COMPUTING: NETWORKING, APPLICATIONS AND WORKSHARING, P39
   LucidSoftwareInc, 2022, Lucidchart
   Luong T, 2022, INT SYM MIX AUGMENT, P307, DOI 10.1109/ISMAR55827.2022.00046
   Machuca MDB, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300437
   MacKenzie S., 2013, Human-Computer Interaction: An Empirical Research Perspective, DOI [10.1016/C2012-0-02819-0, DOI 10.1016/C2012-0-02819-0]
   Madaras M, 2018, COMPUT GRAPH FORUM, V37, P325, DOI 10.1111/cgf.13571
   Manjavacas A, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2266
   Merino L, 2018, J SYST SOFTWARE, V144, P165, DOI 10.1016/j.jss.2018.06.027
   Mikkelsen A, 2017, 9TH INTERNATIONAL CONFERENCE ON MANAGEMENT OF EMERGENT DIGITAL ECOSYSTEMS (MEDES 2017), P121, DOI 10.1145/3167020.3167039
   Navarcik M., 2005, ISIM' 05, P211
   Oberhauser R, 2021, LECT NOTES BUS INF P, V422, P40, DOI 10.1007/978-3-030-79976-2_3
   OMG, 2022, Unified modeling language specification version 2.5.1
   Oppezzo M, 2014, J EXP PSYCHOL LEARN, V40, P1142, DOI 10.1037/a0036577
   Peddemors AJH, 2003, LECT NOTES COMPUT SC, V2574, P325
   Polásek I, 2013, ACTA POLYTECH HUNG, V10, P173
   Ragkhitwetsagul C, 2022, 2022 29TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, APSEC, P507, DOI 10.1109/APSEC57359.2022.00072
   Ramkumar A, 2017, INT J HUM-COMPUT INT, V33, P123, DOI 10.1080/10447318.2016.1220729
   Reuter R., 2020, First insights to a comparative study of 2D and AR UML modeling
   Rodrigues CSC, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P451, DOI 10.1145/2889160.2889199
   Romano S, 2019, INFORM SOFTWARE TECH, V114, P92, DOI 10.1016/j.infsof.2019.06.007
   Rubio-Tamayo Jose Luis, 2017, Multimodal Technologies and Interaction, V1, DOI 10.3390/mti1040021
   Sauro Jef, 2011, A Practical Guide to the System Usability Scale: Background, Benchmarks, and Best Practices
   Sensalire M, 2009, IEEE INT WORK VIS SO, P19, DOI 10.1109/VISSOF.2009.5336431
   Soria AM, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P108, DOI 10.1145/3195836.3195860
   Sparx: Enterprise architect, 2022, Distributed teams and collaboration
   Störrle H, 2018, IEEE ACM INT WORKS M, P59, DOI 10.1145/3183440.3195025
   Stolc M, 2010, 2010 IEEE 8TH INTERNATIONAL SYMPOSIUM ON APPLIED MACHINE INTELLIGENCE AND INFORMATICS, P77
   Szpak A, 2022, 2022 IEEE CONFERENCE ON VIRTUAL REALITY AND 3D USER INTERFACES ABSTRACTS AND WORKSHOPS (VRW 2022), P524, DOI 10.1109/VRW55335.2022.00119
   Tory M, 2004, IEEE T VIS COMPUT GR, V10, P72, DOI 10.1109/TVCG.2004.1260759
   Vesin B, 2017, PROC IEEE ACM INT C, P7, DOI 10.1109/ICSE-C.2017.19
   visual-paradigm, 2022, Visual paradigm
   Weissker T, 2022, 2022 IEEE CONFERENCE ON VIRTUAL REALITY AND 3D USER INTERFACES ABSTRACTS AND WORKSHOPS (VRW 2022), P719, DOI 10.1109/VRW55335.2022.00215
   Wieringa R.J., 2014, Design Science Methodology: For Information Systems and Software Engineering, DOI DOI 10.1007/978-3-662-43839-8
   Yigitbas E, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P261, DOI 10.1109/MODELS50736.2021.00034
   Zenner A, 2020, IEEE T VIS COMPUT GR, V26, P2104, DOI 10.1109/TVCG.2020.2973476
NR 73
TC 0
Z9 0
U1 3
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2024
VL 166
AR 107369
DI 10.1016/j.infsof.2023.107369
EA NOV 2023
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG0K7
UT WOS:001123978200001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Takerngsaksiri, W
   Tantithamthavorn, C
   Li, YF
AF Takerngsaksiri, Wannita
   Tantithamthavorn, Chakkrit
   Li, Yuan-Fang
TI Syntax-aware on-the-fly code completion
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code completion; Multi-task learning
AB Context: Code completion aims to help improve developers' productivity by suggesting the next code tokens from a given context. Various approaches have been proposed to incorporate abstract syntax tree (AST) information for model training, ensuring that code completion is aware of the syntax of the programming languages. However, existing syntax-aware code completion approaches are not on-the-fly, as we found that for every two-thirds of characters that developers type, AST fails to be extracted because it requires the syntactically correct source code, limiting its practicality in real-world scenarios. On the other hand, existing on-the-fly code completion does not consider syntactic information yet. Objective: In this paper, we propose PyCoder to leverage token types, a kind of lightweight syntactic information, which is readily available and aligns with the natural order of source code. Method: Our PyCoder is trained in a multi-task training manner so that by learning the supporting task of predicting token types during the training phase, the models achieve better performance on predicting tokens and lines of code without the need for token types in the inference phase. Results: Comprehensive experiments show that PyCoder achieves the first rank on the CodeXGLUE leaderboard with an accuracy of 77.12% for the token-level predictions, which is 0.43%-24.25% more accurate than baselines. In addition, PyCoder achieves an exact match of 43.37% for the line-level predictions, which is 3.63%-84.73% more accurate than baselines. Conclusions: These results lead us to conclude that token type information (an alternative to syntactic information) that is rarely used in the past can greatly improve the performance of code completion approaches, without requiring the syntactically correct source code like AST-based approaches do. Our PyCoder is publicly available on HuggingFace and GitHub.
C1 [Takerngsaksiri, Wannita; Tantithamthavorn, Chakkrit; Li, Yuan-Fang] Monash Univ, Melbourne, Vic, Australia.
C3 Monash University
RP Tantithamthavorn, C (corresponding author), Monash Univ, Melbourne, Vic, Australia.
EM chakkrit@monash.edu
RI Li, Yuan-Fang/T-7532-2019; Takerngsaksiri, Wannita/JLM-6337-2023
OI Li, Yuan-Fang/0000-0003-4651-2821; 
FU Australian Research Council's Discovery Early Career Researcher Award
   (DECRA) [DE200100941]
FX <B>Acknowledgments</B> Chakkrit Tantithamthavorn was partly supported by
   the Australian Research Council's Discovery Early Career Researcher
   Award (DECRA) funding scheme (DE200100941) .
CR ACKLEY DH, 1985, COGNITIVE SCI, V9, P147
   Banerjee S., 2005, P WORKSHOP INTRINSIC, P65
   Brockschmidt M, 2019, Arxiv, DOI arXiv:1805.08490
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Drain D., 2021, 35 C NEUR INF PROC S
   Fang Liu, 2020, 2020 35th IEEE/ACM International Conference on Automated Software Engineering (ASE), P473, DOI 10.1145/3324884.3416591
   Fu M, 2023, IEEE T SOFTWARE ENG, V49, P611, DOI 10.1109/TSE.2022.3158252
   Golub G.H., 2013, Matrix Computations, DOI DOI 10.56021/9781421407944
   Guo DY, 2022, Arxiv, DOI arXiv:2203.03850
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Holtzman A, 2020, Arxiv, DOI arXiv:1904.09751
   Hou Daqing, 2010, P 2 INT WORKSHOP REC, P26
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Izadi Maliheh, 2022, arXiv
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Kim S, 2021, PROC INT CONF SOFTW, P150, DOI 10.1109/ICSE43902.2021.00026
   Kingma D. P., 2014, arXiv
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Li J., 2016, EMNLP, DOI [DOI 10.18653/V1/D16-1127.URL, 10.18653/v1/D16-1127, DOI 10.18653/V1/D16-1127]
   Li J, 2018, Arxiv, DOI arXiv:1711.09573
   Lin Chin-Yew, 2004, Text summarization branches out, P74, DOI DOI 10.2307/3105454
   Lin Chin-Yew, 2004, P 42 ANN M AOC COMP, P605, DOI [DOI 10.3115/.1218955.1219032, DOI 10.3115/1218955.1219032]
   Liu F, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10140-7
   Liu F, 2020, INT C PROGRAM COMPRE, P37, DOI 10.1145/3387904.3389261
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Paszke A, 2019, ADV NEUR IN, V32
   Phang J, 2018, ARXIV
   Radford A., 2019, LANGUAGE MODELS ARE
   Raffel C, 2020, J MACH LEARN RES, V21
   Raychev V, 2016, ACM SIGPLAN NOTICES, V51, P731, DOI 10.1145/3022671.2984041
   Robbes Romain, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P317, DOI 10.1109/ASE.2008.42
   Ruder S, 2017, Arxiv, DOI [arXiv:1706.05098, 10.48550/arXiv.1706.05098]
   Sener O, 2018, ADV NEUR IN, V31
   Sennrich R, 2016, Arxiv, DOI arXiv:1508.07909
   Svyatkovskiy A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1433, DOI 10.1145/3368089.3417058
   Svyatkovskiy A, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2727, DOI 10.1145/3292500.3330699
   Tabachnyk S.S.E. Maxim, 2022, MLenhanced code completion improves developer productivity
   Thongtanunam P., 2022, AutoTransform: Automated code transformation to support modern code review process
   V.S. Code, 2022, IntelliSense in visual studio code
   Vandenhende S, 2022, IEEE T PATTERN ANAL, V44, P3614, DOI 10.1109/TPAMI.2021.3054719
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang WH, 2020, Arxiv, DOI arXiv:2009.08603
   Wang YL, 2021, AAAI CONF ARTIF INTE, V35, P14015
   Wiseman S., 2017, P 2017 C EMPIRICAL M, P2253, DOI DOI 10.18653/V1/D17-1239
   Wolf T, 2020, Arxiv, DOI arXiv:1910.03771
NR 46
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2024
VL 165
AR 107336
DI 10.1016/j.infsof.2023.107336
EA OCT 2023
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X3PR0
UT WOS:001097612000001
OA hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Wang, XL
   Zhang, SL
AF Wang, Xiaolin
   Zhang, Sulan
TI Cluster-based adaptive test case prioritization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Test case prioritization; Clustering analysis; Requirement; Regression
   testing
AB In order to enhance the efficiency of regression testing, test case prioritization (TCP) has been widely implemented, wherein a higher priority test case is executed earlier. Traditional TCP methods focus on improving the prioritization algorithm's efficacy. However, the majority of TCP approaches are characterized by a predetermined sequence of test cases prior to execution. Once established, this sequence remains consistent throughout the entire test execution process. As a result, any execution information generated during current test execution (such as fault-detected information) is unavailable for use in current round of test case prioritization and can only be utilized in subsequent regression testing. To address the issue of lagging utilization of faultdetected information, a cluster-based adaptive test case prioritization approach is proposed, which adds the new adaptive adjustment content in pre-prioritization. First, a new clustering criterion is defined and designed, by which produces test-case clusters in advance. Second, an adaptive TCP algorithm is proposed, which utilizes fault-detected information to adaptively adjust the order of test cases during the execution process based on the test-case clusters. Finally, one open-source Java program and three industrial-grade Java programs were selected for empirical evaluation. The experimental results demonstrate that the proposed technique not only serves as an enhanced version of pre-prioritization to improve the performance of the corresponding pre-prioritization technique, but also functions as an independent approach that outperforms other TCP techniques, including cluster-based TCPs, and another adaptive TCP. Specifically, when step=2 is applied using our cluster-based adaptive TCP approach, the results are significantly better than those obtained with step=1. For instance, in CT-14, the median APFD improvement rate for step=2 reaches 17.08 %, which is substantially higher than that achieved with step=1 (5.48 %).
C1 [Wang, Xiaolin; Zhang, Sulan] Jiaxing Univ, Coll Informat Sci & Engn, Zhejiang 314001, Jiaxing, Peoples R China.
   [Wang, Xiaolin] Jiaxing Key Lab Smart Transportat, Zhejiang 314001, Jiaxing, Peoples R China.
   [Wang, Xiaolin] Univ Shanghai Sci & Technol, Business Sch, Shanghai 200093, Peoples R China.
   [Wang, Xiaolin] Jujiang Construct Grp Co Ltd, Zhejiang 314500, Jiaxing, Peoples R China.
C3 Jiaxing University; University of Shanghai for Science & Technology
RP Wang, XL (corresponding author), Jiaxing Univ, Coll Informat Sci & Engn, Zhejiang 314001, Jiaxing, Peoples R China.
EM wangxiaolin@zjxu.edu.cn
FU Natural Science Foundation of Zhe-jiang Province [LQ22F020004]
FX This work is supported by the Natural Science Foundation of Zhe-jiang
   Province under grant No. LQ22F020004.
CR Arafeen MJ, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P312, DOI 10.1109/ICST.2013.12
   Butool R, 2019, 2019 22ND IEEE INTERNATIONAL MULTI TOPIC CONFERENCE (INMIC), P191, DOI 10.1109/inmic48123.2019.9022761
   Chaudhary S, 2020, 2020 INTERNATIONAL CONFERENCE ON COMPUTATIONAL PERFORMANCE EVALUATION (COMPE-2020), P699, DOI 10.1109/ComPE49325.2020.9200083
   Chen JF, 2018, J SYST SOFTWARE, V135, P107, DOI 10.1016/j.jss.2017.09.031
   Dickinson W., 2001, Software Engineering Notes, V26, P246, DOI 10.1145/503271.503243
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Eghbali S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P242, DOI 10.1109/ICSE-Companion.2019.00095
   Elbaum S, 2004, SOFTWARE QUAL J, V12, P185, DOI 10.1023/B:SQJO.0000034708.84524.22
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   [范书平 Fan Shuping], 2022, [电子学报, Acta Electronica Sinica], V50, P149
   Hao D, 2013, P INT COMP SOFTW APP, P169, DOI 10.1109/COMPSAC.2013.31
   [何柳柳 He Liuliu], 2019, [软件学报, Journal of Software], V30, P1438
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Huang RB, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110712
   Huang XW, 2020, COMPUT SCI REV, V37, DOI 10.1016/j.cosrev.2020.100270
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   Leon D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P442, DOI 10.1109/ISSRE.2003.1251065
   Lima JAP, 2022, IEEE T SOFTWARE ENG, V48, P453, DOI 10.1109/TSE.2020.2992428
   Luo Q, 2018, PROC IEEE INT CONF S, P240, DOI 10.1109/ICSME.2018.00033
   Miranda B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P222, DOI 10.1145/3180155.3180210
   Mondal S, 2022, IEEE T SOFTWARE ENG, V48, P4060, DOI 10.1109/TSE.2021.3111169
   Mu Y.Z., 2022, Ruan Jian Xue Bao/J. Softw, V33, P2499
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Saraswat P, 2019, ADV INTELL SYST, V731, P507, DOI 10.1007/978-981-10-8848-3_48
   Srikanth H, 2014, SOFTW TEST VERIF REL, V24, P320, DOI 10.1002/stvr.1500
   Wang XL, 2016, INTERNATIONAL WORKSHOP ON CONTINUOUS SOFTWARE EVOLUTION AND DELIVERY, CSED 2016, P41, DOI [10.1145/2896941.2896949, 10.1109/CSED.2016.016]
   Yaraghi AS, 2023, IEEE T SOFTWARE ENG, V49, P1615, DOI 10.1109/TSE.2022.3184842
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
NR 34
TC 0
Z9 0
U1 5
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2024
VL 165
AR 107339
DI 10.1016/j.infsof.2023.107339
EA OCT 2023
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HK6R4
UT WOS:001159441100001
OA Bronze
DA 2024-07-18
ER

PT J
AU Gonzalez-Barahona, JM
   Robles, G
AF Gonzalez-Barahona, Jesus M.
   Robles, Gregorio
TI Revisiting the reproducibility of empirical software engineering studies
   based on data retrieved from development repositories
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Reproducible research; Mining software repositories; Reproducibility;
   Validation studies; Empirical software engineering
ID REPLICATION; KNOWLEDGE
AB Context: In 2012, our paper "On the reproducibility of empirical software engineering studies based on data retrieved from development repositories"was published. It proposed a method for assessing the reproducibility of studies based on mining software repositories (MSR studies). Since then, several approaches have happened with respect to the study of the reproducibility of this kind of studies.Objective: To revisit the proposals of that paper, analyzing to which extent they remain valid, and how they relate to current initiatives and studies on reproducibility and validation of research results in empirical software engineering.Method: We analyze the most relevant studies affecting assumptions or consequences of the approach of the original paper, and other initiatives related to the evaluation of replicability aspects of empirical software engineering studies. We compare the results of that analysis with the results of the original study, finding similarities and differences. We also run a reproducibility assessment study on current MSR papers. Based on the comparison, and the applicability of the method to current papers, we draw conclusions on the validity of the approach of the original paper.Main lessons learned: The method proposed in the original paper is still valid, and compares well with other more recent methods. It matches the results of relevant studies on reproducibility, and a systematic comparison with them shows that our approach is aligned with their proposals. Our method has practical use, and complements well the current major initiatives on the review of reproducibility artifacts. As a side result, we learn that the reproducibility of MSR studies has improved during the last decade.Vision: We propose to use our approach as a fundamental element of a more profound review of the reproducibility of MSR studies, and of the characterization of validation studies in this realm.
C1 [Gonzalez-Barahona, Jesus M.; Robles, Gregorio] Univ Rey Juan Carlos, Escuela Ingn Fuenlabrada, Madrid, Spain.
C3 Universidad Rey Juan Carlos
RP Gonzalez-Barahona, JM (corresponding author), Univ Rey Juan Carlos, Escuela Ingn Fuenlabrada, Madrid, Spain.
EM jesus.gonzalez.barahona@urjc.es
RI Robles, Gregorio/I-2507-2012; Gonzalez-Barahona, Jesus M./L-5646-2017
OI Robles, Gregorio/0000-0002-1442-6761; Gonzalez-Barahona, Jesus
   M./0000-0001-9682-460X
FU Government of Spain [PID2022- 139551NB-I00]
FX The research presented in this paper has been supported in part by the
   Government of Spain, through project "Dependentium" (PID2022-
   139551NB-I00) .
CR ACM, 2020, Artifact review and badging
   Ayala C, 2022, IEEE T SOFTWARE ENG, V48, P4229, DOI 10.1109/TSE.2021.3113558
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Di Cosmo Roberto, 2017, IPRES 2017, P1
   Dueñas S, 2021, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.601
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Fayyad U, 1996, COMMUN ACM, V39, P27, DOI 10.1145/240455.240464
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   González-Barahona JM, 2012, EMPIR SOFTW ENG, V17, P75, DOI 10.1007/s10664-011-9181-9
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Gousios G., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P384, DOI [DOI 10.1145/2597073.2597126, 10.1145/2597073]
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hemmati H, 2013, IEEE WORK CONF MIN S, P343, DOI 10.1109/MSR.2013.6624048
   Joint Committee for Guides in Metrology, 2012, International vocabulary of metrology, V200
   Krein Jonathan L., 2010, P 1 INT WORKSH REPL, P1
   LeVeque RJ, 2012, COMPUT SCI ENG, V14, P13, DOI 10.1109/MCSE.2012.38
   Liu C, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3477535
   Madeyski L, 2017, J INTELL FUZZY SYST, V32, P1509, DOI 10.3233/JIFS-169146
   Mitchell M, 2019, FAT*'19: PROCEEDINGS OF THE 2019 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P220, DOI 10.1145/3287560.3287596
   Omar S., 2010, P 1 INT WORKSH REPL
   Ralph P, 2021, Arxiv, DOI arXiv:2010.03525
   Robles Gregorio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P171, DOI 10.1109/MSR.2010.5463348
   Shepperd M, 2018, INFORM SOFTWARE TECH, V99, P120, DOI 10.1016/j.infsof.2018.01.006
   Trautsch F, 2018, EMPIR SOFTW ENG, V23, P1036, DOI 10.1007/s10664-017-9537-x
   Vegas S., 2006, International Symposium on Empirical Software Engineering, P28, DOI DOI 10.1145/1159733.1159741
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
   Xie T, 2009, COMPUTER, V42, P55, DOI 10.1109/MC.2009.256
   Yuxing Ma, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P143, DOI 10.1109/MSR.2019.00031
NR 29
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107318
DI 10.1016/j.infsof.2023.107318
EA AUG 2023
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA T3QW3
UT WOS:001077176000001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Huck-Fries, V
   Nothaft, F
   Wiesche, M
   Krcmar, H
AF Huck-Fries, Veronika
   Nothaft, Francisca
   Wiesche, Manuel
   Krcmar, Helmut
TI Job satisfaction in agile information systems development: A stakeholder
   perspective
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile information systems development; Software engineering; Internal
   stakeholder; Job satisfaction; Mixed-methods
ID LARGE-SCALE AGILE; SOFTWARE-DEVELOPMENT; SUCCESS FACTORS; PROJECT
   SUCCESS; TASK CHARACTERISTICS; WORK; DESIGN; RECOMMENDATIONS;
   PRACTITIONERS; PROFESSIONALS
AB Context: Agile information systems development (ISD) claims to increase employees' job satisfaction. While previous research acknowledged increased job satisfaction among team members such as software developers, less attention has been paid to stakeholders in agile ISD. Furthermore, we lack evidence about the role of review meetings between team members and stakeholders. Objective: With the aim to tackle those current shortcomings, we set out to gain a deeper understanding on how agile ISD practices affect internal stakeholders' job satisfaction (SJS). Method: Using a mixed methods approach, we identify predictors of SJS in an exploratory case study first. Second, we develop our theoretical model that was evaluated with a survey of agile ISD stakeholders. Results: Findings of conditional process analysis show that agile practices positively affect SJS via perceived meaningfulness and interaction frequency. Our results provide evidence that collaboration between team members and stakeholders is crucial for enhancing SJS. Conclusions: We conclude that agile ISD practices have a positive effect on SJS. These findings have several implications for theory and offer a foundation for future research on stakeholders in agile ISD. Practical implications refer to the establishment of agile practices, meaningfulness at work and awareness for agile transformations.
C1 [Huck-Fries, Veronika; Nothaft, Francisca; Krcmar, Helmut] Tech Univ Munich, Boltzmannstr 3, D-85748 Garching, Germany.
   [Wiesche, Manuel] TU Dortmund Univ, Martin Schmeisser Weg 12, D-44227 Dortmund, Germany.
C3 Technical University of Munich; Dortmund University of Technology
RP Huck-Fries, V (corresponding author), Tech Univ Munich, Boltzmannstr 3, D-85748 Garching, Germany.
EM veronika.huck-fries@tum.de
OI Wiesche, Manuel/0000-0003-0401-287X
CR Acuña ST, 2009, INFORM SOFTWARE TECH, V51, P627, DOI 10.1016/j.infsof.2008.08.006
   Ågren P, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10176-9
   Akman Ibrahim, 2021, 2021 6th International Conference on Computer Science and Engineering (UBMK), P654, DOI 10.1109/UBMK52708.2021.9558995
   Anderson NR, 1998, J ORGAN BEHAV, V19, P235, DOI 10.1002/(SICI)1099-1379(199805)19:3<235::AID-JOB837>3.0.CO;2-C
   [Anonymous], US
   [Anonymous], 2017, The scrum guide: the definitive guide to scrum
   [Anonymous], 2004, Agile and Iterative Development
   ARMSTRONG JS, 1977, J MARKETING RES, V14, P396, DOI 10.2307/3150783
   Bakker AB, 2007, J EDUC PSYCHOL, V99, P274, DOI 10.1037/0022-0663.99.2.274
   Balijepally V., 2014, P 20 AM C INF SYST S
   Balijepally V, 2009, MIS QUART, V33, P91
   Barrick MR, 2013, ACAD MANAGE REV, V38, P132, DOI 10.5465/amr.2010.0479
   Beck K., 2001, MANIF AGILE SOFTW DE
   Berntzen M, 2019, LECT NOTES BUS INF P, V355, P121, DOI 10.1007/978-3-030-19034-7_8
   Bogner A., 2014, Interviews mit Experten: Eine praxisorientierte Einfuhrung
   Boyd M, 2007, INFORM MANAGE-AMSTER, V44, P188, DOI 10.1016/j.im.2006.12.003
   Candatten F, 2013, AMCIS 2013 PROCEEDINGS
   Cao L, 2009, EUR J INFORM SYST, V18, P332, DOI 10.1057/ejis.2009.26
   Chen SJ, 2018, PERS REV, V47, P694, DOI 10.1108/PR-01-2017-0016
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cockburn A., 2007, Agile software development: the cooperative game
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Creswell J.W., 2008, ADV MIXED METHODS RE, P66, DOI DOI 10.4135/9780857024329
   Diegmann P, 2017, PROJ MANAG J, V48, P81, DOI 10.1177/875697281704800106
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Edison H, 2022, IEEE T SOFTWARE ENG, V48, P2709, DOI 10.1109/TSE.2021.3069039
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   Fay D, 2006, J OCCUP ORGAN PSYCH, V79, P553, DOI 10.1348/096317905X72128
   Fernández DM, 2017, EMPIR SOFTW ENG, V22, P2298, DOI 10.1007/s10664-016-9451-7
   Fortmann-Mueller L., 2018, ICIS 2018 P
   Fowler F. M, 2019, Navigating Hybrid Scrum Environments: Understanding the Essentials, Avoiding the Pitfalls
   Fruhling A, 2006, J MANAGE INFORM SYST, V22, P39, DOI 10.2753/MIS0742-1222220403
   Geldenhuys M, 2014, SA J IND PSYCHOL, V40, DOI 10.4102/sajip.v40i1.1098
   Ghobadi S, 2016, INFORM SYST J, V26, P95, DOI 10.1111/isj.12053
   Glaser J., 2009, Experteninterviews und qualitative Inhaltsanalyse: als Instrumente rekonstruierender Untersuchungen, V3rd
   Gupta S, 2019, J KNOWL MANAG, V23, P1782, DOI 10.1108/JKM-07-2018-0466
   Hackman J.R. e., 1980, Work redesign
   HACKMAN JR, 1976, ORGAN BEHAV HUM PERF, V16, P250, DOI 10.1016/0030-5073(76)90016-7
   Hadar I., 2010, MCIS 2010 P
   Hair JF, 2010, Multivariate data analysis
   Hayes A.F., 2019, ABOUT US
   Hayes A. F., 2017, A regression-based approach, DOI DOI 10.1111/JEDM.12050
   Helfferich Cornelia, 2011, QUALITAT QUALITATIVE, V4
   Hibbs Curt, 2009, The art of lean software development: a practical and incremental approach
   Highsmith J., 2002, Agile software development ecosystems
   Huck-Fries V., 2022, HAWAII INT C SYSTEM
   Huck-Fries V, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P7048
   Hughes DL, 2017, J ENTERP INF MANAG, V30, P142, DOI 10.1108/JEIM-01-2016-0029
   Hummel M, 2013, BUS INFORM SYST ENG+, V5, P343, DOI 10.1007/s12599-013-0282-4
   Hummel M, 2015, P ANN HICSS, P5045, DOI 10.1109/HICSS.2015.598
   HUSSY W., 2010, FORSCHUNGSMETHODEN P
   Ibrahim KSK, 2019, INT CONF ELECT ENG, P146, DOI [10.1109/iceei47359.2019.8988815, 10.1109/ICEEI47359.2019.8988815]
   Jentsch C, 2017, AMCIS 2017 PROCEEDINGS
   Joseph D, 2007, MIS QUART, V31, P547
   Joshi K, 2000, INFORM SYST J, V10, P323, DOI 10.1046/j.1365-2575.2000.00087.x
   Kakar A.K., 2013, SAIS PRODEEC
   Kakar A. K., 2012, DERIVING BUSINESS VA
   Karimi J, 2004, INFORM SYST RES, V15, P175, DOI 10.1287/isre.1040.0022
   Kniberg Henrik., 2010, Kanban and Scrum - Making the Most of Both
   Kudaravalli S, 2017, MIS QUART, V41, P43, DOI 10.25300/MISQ/2017/41.1.03
   Lai S.-T., 2021, INT C BROADBAND WIRE
   Lam CF, 2016, J APPL PSYCHOL, V101, P379, DOI 10.1037/apl0000071
   Larman C., 2016, Large-Scale Scrum: More with LeSS
   Lazar Jonathan., 2003, User frustration with technology in the workplace
   Lee G, 2010, MIS QUART, V34, P87
   Li E.Y., 2003, J ASS INFORM SYST, V4, P4
   Liere-Netheler K., 2017, C IRM 2017 P, P37
   Lindsjorn Y, 2016, J SYST SOFTWARE, V122, P274, DOI 10.1016/j.jss.2016.09.028
   Lindvall M, 2004, COMPUTER, V37, P26, DOI 10.1109/MC.2004.231
   Linhares GBR, 2012, INT J INF TECH DECIS, V11, P1065, DOI 10.1142/S0219622012400159
   Lorente L, 2018, INT J ENV RES PUB HE, V15, DOI 10.3390/ijerph15010127
   Maier T, 2019, TEAM PERFORM MANAG, V25, P419, DOI 10.1108/TPM-03-2019-0024
   Mann C, 2005, AGILE 2005, PROCEEDINGS, P70, DOI 10.1109/ADC.2005.1
   Martin A, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P111, DOI 10.1007/978-3-642-12575-1_6
   Martin Robert C, 2009, Clean Code: a Handbook of Agile Software Craftsmanship
   Maruping LM, 2009, INFORM SYST RES, V20, P377, DOI 10.1287/isre.1090.0238
   Melnik G, 2006, LECT NOTES COMPUT SC, V4044, P32
   Mendes L., 2019, 23 WORLD MULTICONFER
   Misra SC, 2009, J SYST SOFTWARE, V82, P1869, DOI 10.1016/j.jss.2009.05.052
   Molesky J., 2020, LEAN ENTERPRISE
   Moloto M., 2021, 2021 INT C ELECT COM
   Morris MG, 2010, MIS QUART, V34, P143
   Nosek JT, 1998, COMMUN ACM, V41, P105, DOI 10.1145/272287.272333
   Oldham GR, 2010, J ORGAN BEHAV, V31, P463, DOI 10.1002/job.678
   Pan SL, 2006, COMMUN ASSOC INF SYS, V18, P395
   Parker SK, 2022, APPL PSYCHOL-INT REV, V71, P1171, DOI 10.1111/apps.12241
   Parker SK, 2017, J APPL PSYCHOL, V102, P403, DOI 10.1037/apl0000106
   Pedrycz W, 2011, J SYST SOFTWARE, V84, P739, DOI 10.1016/j.jss.2010.12.018
   Pereira J, 2008, J SYST SOFTWARE, V81, P897, DOI 10.1016/j.jss.2007.07.032
   Podsakoff PM, 2012, ANNU REV PSYCHOL, V63, P539, DOI 10.1146/annurev-psych-120710-100452
   Podsakoff PM, 2003, J APPL PSYCHOL, V88, P879, DOI 10.1037/0021-9010.88.5.879
   Project Management Institute, 2022, PULS PROF 2021
   Prommegger B., 2021, P 2021 COMPUTERS PEO
   Prommegger B., 2020, CAREER DECISIONS YOU
   Prommegger B., 2019, AGILE ATTACHED IMPAC
   Przybilla L, 2021, COMMUN ASSOC INF SYS, V48, P177, DOI 10.17705/1CAIS.04823
   Przybilla L, 2018, SIGMIS-CPR'18: PROCEEDINGS OF THE 2018 ACM SIGMIS CONFERENCE ON COMPUTERS AND PEOPLE RESEARCH, P33, DOI 10.1145/3209626.3209703
   Ragu-Nathan TS, 2008, INFORM SYST RES, V19, P417, DOI 10.1287/isre.1070.0165
   Rezvani A, 2016, INT J PROJ MANAG, V34, P1112, DOI 10.1016/j.ijproman.2016.05.012
   Riemenschneider CK, 2021, MIS QUART, V45, P1149, DOI 10.25300/MISQ/2021/14626
   Rogelberg S.G., 2007, ENCY IND ORG PSYCHOL
   Rolland K., 2016, 39 INT C INF SYST
   Rutner PS, 2008, MIS QUART, V32, P635
   Sadler GR, 2010, NURS HEALTH SCI, V12, P369, DOI 10.1111/j.1442-2018.2010.00541.x
   Sarker S, 2018, INFORM SYST RES, V29, P103, DOI 10.1287/isre.2017.0734
   Scaled Agile, US
   Schön EM, 2017, COMPUT STAND INTER, V49, P79, DOI 10.1016/j.csi.2016.08.011
   Schwaber K., 2020, Scrum Guide
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Scrum I., US
   Serrador P, 2015, INT J PROJ MANAG, V33, P1040, DOI 10.1016/j.ijproman.2015.01.006
   Setor TK, 2022, J COMPUT INFORM SYST, V62, P186, DOI 10.1080/08874417.2020.1759160
   Sheffield J, 2013, INT J PROJ MANAG, V31, P459, DOI 10.1016/j.ijproman.2012.09.011
   Shi JQ, 2013, J APPL PSYCHOL, V98, P374, DOI 10.1037/a0031129
   Soane E, 2013, HUM RESOUR MANAGE-US, V52, P441, DOI 10.1002/hrm.21534
   Sommerville Ian, 2011, Software engineering
   Stelzmann E, 2010, COMM COM INF SC, V99, P245
   Stray V, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234178
   Sullivan J., 2009, INT C INF SYST ICIS, P103
   Sun WY, 2018, IEEE SOFTWARE, V35, P52, DOI 10.1109/MS.2018.1661333
   Sutherland J., 2001, Cutter IT Journal, V14, P5
   Tessem J, 2007, LECT NOTES COMPUT SC, V4536, P54
   Thatcher JB, 2002, J MANAGE INFORM SYST, V19, P231
   The LeSS Company B.V, US
   The LeSS Company B.V, 2023, US
   Tripp JF, 2016, J ASSOC INF SYST, V17, P267
   Tuomivaara S, 2017, INT J HUM-COMPUT INT, V33, P857, DOI 10.1080/10447318.2017.1294336
   Turja T., 2022, Eur. Manag. J.
   Venkatesh V, 2020, INFORM SYST J, V30, P733, DOI 10.1111/isj.12282
   Venkatesh V, 2016, J ASSOC INF SYST, V17, P435, DOI 10.17705/1jais.00433
   Venkatesh V, 2013, MIS QUART, V37, P21
   Vowels S. A., 2016, INFORM SYSTEMS IMPLE
   Wamba S.F., 2015, 21 AMERICAS C INFORM
   Williams L, 2003, COMPUTER, V36, P39, DOI 10.1109/MC.2003.1204373
   Williams LA, 2000, COMMUN ACM, V43, P108, DOI 10.1145/332833.332848
   Wood M, 2005, ORGAN RES METHODS, V8, P454, DOI 10.1177/1094428105280059
   Yin R., 1994, CASE STUDY RES DESIG
   Zviran M., 2003, COMMUN ASS INFORM SY, V12, P5
NR 142
TC 1
Z9 1
U1 2
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2023
VL 163
AR 107289
DI 10.1016/j.infsof.2023.107289
EA JUL 2023
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA P4AG2
UT WOS:001050083500001
DA 2024-07-18
ER

PT J
AU Chu, HT
   Zhang, PC
   Dong, H
   Xiao, Y
   Ji, SH
   Li, WR
AF Chu, Hanting
   Zhang, Pengcheng
   Dong, Hai
   Xiao, Yan
   Ji, Shunhui
   Li, Wenrui
TI A survey on smart contract vulnerabilities: Data sources, detection and
   repair
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Blockchains; Smart contracts; Vulnerability detection; Vulnerability
   repair; Information security
ID TOOLS
AB Smart contracts contain many built-in security features, such as non-immutability once being deployed and non-involvement of third parties for contract execution. These features reduce security risks and enhance users' trust towards smart contracts. However, smart contract security issues still persist, resulting in huge financial losses. Contract publishers cannot fully cover contract vulnerabilities through contract version updating. These security issues affect further development of blockchain technologies. So far, there are many related studies focusing on smart contract security issues and tend to discuss from a particular perspective (e.g., development cycle, vulnerability attack methods, security detection tools, etc.). However, smart contract security is a complicated issue that needs to be explored from a multi-dimensional perspective. In this paper, we explore smart contract security from the perspectives of vulnerability data sources, vulnerability detection, and vulnerability defense. We first analyze the existing security issues and challenges of smart contracts, investigate the existing vulnerability classification frameworks and common security vulnerabilities, followed by reviewing the existing contract vulnerability injection, detection, and repair methods. We then analyze the performance of existing security methods. Next, we summarize the current status of smart contract security-related research. Finally, we summarize the state of the art and future trends of smart contract security-related research. This paper aims to provide systematic knowledge and references to this research field.
C1 [Chu, Hanting; Zhang, Pengcheng; Ji, Shunhui] Hohai Univ, 8 Focheng West Rd, Nanjing, Peoples R China.
   [Dong, Hai] RMIT Univ, Sch Comp Technol, Melbourne, Australia.
   [Xiao, Yan] NUS Univ, Sch Comp, Singapore, Singapore.
   [Li, Wenrui] Nanjing XiaoZhuang Univ, Nanjing, Peoples R China.
C3 Hohai University; Royal Melbourne Institute of Technology (RMIT);
   Nanjing Xiaozhuang University
RP Li, WR (corresponding author), Nanjing XiaoZhuang Univ, Nanjing, Peoples R China.
EM htchu@hhu.edu.cn; pchzhang@hhu.edu.cn; hai.dong@rmit.edu.au;
   dcsxan@nus.edu.sg; shunhuiji@hhu.edu.cn; wenrui_li@163.com
RI Dong, Hai/E-9101-2010
OI Dong, Hai/0000-0002-7033-5688
FU National Natural Science Foundation of China [62272145]
FX This work is funded by the National Natural Science Foundation of China
   under Grant No.62272145 and No.U21B2016.
CR Alharby M, 2017, Arxiv, DOI [arXiv:1710.06372, 10.5121/csit.2017.71011, DOI 10.5121/CSIT.2017.71011]
   [Anonymous], EX SOL SEC ISS
   [Anonymous], ?About us"
   [Anonymous], COMP RES ED
   Anqi Wang, 2020, 2020 7th International Conference on Dependable Systems and Their Applications (DSA), P173, DOI 10.1109/DSA51864.2020.00031
   Antonopoulos Andreas M, 2018, Mastering Ethereum: Building Smart Contracts and DApps
   Ashizawa N., 2021, P 3 ACM INT S BLOCKC, P47
   Atzei N, 2017, LECT NOTES COMPUT SC, V10204, P164, DOI 10.1007/978-3-662-54455-6_8
   Bartoletti Massimo, 2017, Financial Cryptography and Data Security. FC 2017 International Workshops WAHC, BITCOIN, VOTING, WTSC, and TA. Revised Selected Papers: LNCS 10323, P494, DOI 10.1007/978-3-319-70278-0_31
   Ben-Sasson E, 2014, P IEEE S SECUR PRIV, P459, DOI 10.1109/SP.2014.36
   Cai J, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111550
   Chen HS, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3391195
   Chen T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P442, DOI 10.1109/SANER.2017.7884650
   Corbet S, 2018, FINANC RES LETT, V26, P81, DOI 10.1016/j.frl.2017.12.006
   DAML, US
   Delmolino K, 2016, LECT NOTES COMPUT SC, V9604, P79, DOI 10.1007/978-3-662-53357-4_6
   di Angelo M, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON DECENTRALIZED APPLICATIONS AND INFRASTRUCTURES (DAPPCON), P69, DOI 10.1109/DAPPCON.2019.00018
   Durieux T, 2020, PROC INT CONF SOFTW, P530, DOI 10.1145/3377811.3380364
   Echidna, ECH FAST SMART CONTR
   Eshghie M, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P305, DOI 10.1145/3463274.3463348
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   Fu ML, 2019, IEEE ACCESS, V7, P147327, DOI 10.1109/ACCESS.2019.2947146
   Fu Y, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1110, DOI 10.1145/3338906.3341175
   Ghaleb Asem, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P415, DOI 10.1145/3395363.3397385
   Gogineni Ajay K., 2020, IOP SciNotes, V1
   Gupta R, 2020, IEEE ACCESS, V8, P24746, DOI 10.1109/ACCESS.2020.2970576
   Harz D, 2018, Arxiv, DOI arXiv:1809.09805
   Huang J, 2022, SENSORS-BASEL, V22, DOI 10.3390/s22051829
   Huang YF, 2019, IEEE ACCESS, V7, P150184, DOI 10.1109/ACCESS.2019.2946988
   Huang YH, 2021, THE 12TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, INTERNETWARE 2020, P99, DOI 10.1145/3457913.3457920
   Hwang SJ, 2022, IEEE ACCESS, V10, P32595, DOI 10.1109/ACCESS.2022.3162065
   Ji R, 2020, IEEE INT C ENG COMP, P125, DOI 10.1109/ICECCS51672.2020.00022
   Jiang B, 2021, IEEE INT C S Q R S, P926, DOI 10.1109/QRS54544.2021.00102
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Jin H., 2021, COMPOS PART B-ENG
   Tann WJW, 2019, Arxiv, DOI arXiv:1811.06632
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Kaulartz M, 2016, COMPUTER RECHT, V32, P618, DOI DOI 10.9785/CR-2016-0923
   Kushwaha Satpal Singh, 2022, IEEE Access
   Liao JW, 2019, 2019 SIXTH INTERNATIONAL CONFERENCE ON INTERNET OF THINGS: SYSTEMS, MANAGEMENT AND SECURITY (IOTSMS), P458, DOI 10.1109/iotsms48152.2019.8939256
   Liu C, 2018, PROC IEEE ACM INT C, P65, DOI 10.1145/3183440.3183495
   Liu H, 2018, IEEE INT CONF AUTOM, P814, DOI 10.1145/3238147.3240728
   Liu YM, 2020, IEEE COMMUN SURV TUT, V22, P1392, DOI 10.1109/COMST.2020.2975911
   Liu Z, 2021, INT EL DEVICES MEET, DOI 10.1109/IEDM19574.2021.9720635
   Lutz O, 2021, Arxiv, DOI [arXiv:2103.12607, DOI 10.48550/ARXIV.2103.12607]
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Parizi RM, 2018, Arxiv, DOI arXiv:1809.02702
   Mehar MI, 2019, J CASES INF TECHNOL, V21, P19, DOI 10.4018/JCIT.2019010102
   Mi F., 2021, 2021 IEEE International Conference on Blockchain and Cryptocurrency (ICBC), P1
   Mossberg M, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1186, DOI 10.1109/ASE.2019.00133
   Mueller B., 2018, HITB SECCONF Amsterdam, V9, P54
   Nguyen Tai D., 2021, 2021 IEEE Symposium on Security and Privacy (SP), P1215, DOI 10.1109/SP40001.2021.00057
   Nguyen TD, 2020, PROC INT CONF SOFTW, P778, DOI 10.1145/3377811.3380334
   Nikolic I, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P653, DOI 10.1145/3274694.3274743
   Perez AJ, 2022, COMPUT SCI REV, V43, DOI 10.1016/j.cosrev.2021.100450
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Rodler M, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1289
   Sayeed S, 2020, IEEE ACCESS, V8, P24416, DOI 10.1109/ACCESS.2020.2970495
   SmartContractSecurity, SMART CONTR WEAKN CL
   Song JJ, 2019, LECT NOTES COMPUT SC, V11928, P433, DOI 10.1007/978-3-030-36938-5_26
   Staffs Keele, 2007, Tech. Rep.
   Surucu O., 2022, Disrupt. Technol. Inf. Sci. VI, V12117, P110
   Szabo N., 1997, First Monday, V2
   The China Computer Federation, US
   The NCC Group, US
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Torres CF, 2021, 2021 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P 2021), P103, DOI 10.1109/EuroSP51992.2021.00018
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Vacca A, 2021, J SYST SOFTWARE, V174, DOI 10.1016/j.jss.2020.110891
   Vujicic Dejan, 2018, 2018 17 INT S INFOTE, P1, DOI [DOI 10.1109/INFOTEH.2018.8345547, 10.1109/INFOTEH.2018.8345547]
   Vyper, US
   Wang S, 2019, IEEE T SYST MAN CY-S, V49, P2266, DOI 10.1109/TSMC.2019.2895123
   Wang W, 2021, IEEE T NETW SCI ENG, V8, P1133, DOI 10.1109/TNSE.2020.2968505
   Wang ZL, 2021, FRONT COMPUT SCI-CHI, V15, DOI 10.1007/s11704-020-9284-9
   Wöhrer M, 2018, 2018 IEEE 1ST INTERNATIONAL WORKSHOP ON BLOCKCHAIN ORIENTED SOFTWARE ENGINEERING (IWBOSE), P2, DOI 10.1109/IWBOSE.2018.8327565
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   Wu HJ, 2021, PROC INT SYMP SOFTW, P378, DOI 10.1109/ISSRE52982.2021.00047
   Wüstholz V, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1398, DOI 10.1145/3368089.3417064
   Ye JM, 2022, J SYST SOFTWARE, V192, DOI 10.1016/j.jss.2022.111410
   Yu RT, 2021, 2021 17TH INTERNATIONAL CONFERENCE ON MOBILITY, SENSING AND NETWORKING (MSN 2021), P412, DOI 10.1109/MSN53354.2021.00069
   Yu X., 2021, P 2021 10 MED C EMB, P1, DOI DOI 10.1109/MECO52532.2021.9460266
   Yu XL, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3402450
   [袁勇 Yuan Yong], 2016, [自动化学报, Acta Automatica Sinica], V42, P481
   Zhang PC, 2020, PROC IEEE INT CONF S, P139, DOI 10.1109/ICSME46990.2020.00023
   Zhang YJ, 2022, FUTURE INTERNET, V14, DOI 10.3390/fi14110326
   Zhang YY, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P23, DOI [10.1109/saner48275.2020.9054825, 10.1109/SANER48275.2020.9054825]
   Zhou E, 2018, INT CONF NEW TECHNOL
   Zhou K., 2021, P DAT MIN BIG DAT 1, P138
   Zhuang Y, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3283
NR 90
TC 10
Z9 11
U1 15
U2 55
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2023
VL 159
AR 107221
DI 10.1016/j.infsof.2023.107221
EA APR 2023
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA F4IW1
UT WOS:000982009800001
DA 2024-07-18
ER

PT J
AU Stradowski, S
   Madeyski, L
AF Stradowski, Szymon
   Madeyski, Lech
TI Industrial applications of software defect prediction using machine
   learning: A business-driven systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software defect prediction; Machine learning; Systematic literature
   review; Effort and cost minimisation; Real-world; Industry
AB Context: Machine learning software defect prediction is a promising field of software engineering, attracting a great deal of attention from the research community; however, its industry application tents to lag behind academic achievements.Objective: This study is part of a larger project focused on improving the quality and minimising the cost of software testing of the 5G system at Nokia, and aims to evaluate the business applicability of machine learning software defect prediction and gather lessons learnt.Methods: The systematic literature review was conducted on journal and conference papers published between 2015 and 2022 in popular online databases (ACM, IEEE, Springer, Scopus, Science Direct, and Google Scholar). A quasi-gold standard procedure was used to validate the search, and SEGRESS guidelines were used for transparency, reporting, and replicability.Results: We have selected and analysed 32 publications out of 397 found by our automatic search (and seven by snowballing). We have identified highly relevant evidence of methods, features, frameworks, and datasets used. However, we found a minimal emphasis on practical lessons learnt and cost consciousness - both vital from a business perspective.Conclusion: Even though the number of machine learning software defect prediction studies validated in the industry is increasing (and we were able to identify several excellent papers on studies performed in vivo), there is still not enough practical focus on the business aspects of the effort that would help bridge the gap between the needs of the industry and academic research.
C1 [Stradowski, Szymon] Nokia, Szybowcowa 2, PL-54206 Wroclaw, Dolnoslaskie, Poland.
   [Stradowski, Szymon; Madeyski, Lech] Wroclaw Univ Sci & Technol, Wyb Wyspianskiego 27, PL-50370 Wroclaw, Dolnoslaskie, Poland.
C3 Nokia Corporation; Wroclaw University of Science & Technology
RP Madeyski, L (corresponding author), Wroclaw Univ Sci & Technol, Wyb Wyspianskiego 27, PL-50370 Wroclaw, Dolnoslaskie, Poland.
EM lech.madeyski@pwr.edu.pl
RI Madeyski, Lech/D-4986-2012
OI Madeyski, Lech/0000-0003-3907-3357; Stradowski,
   Szymon/0000-0002-3532-3876
FU Polish Ministry of Education and Science ? [DWD/5/0178/2021]
FX Acknowledgements This research was financed by the Polish Ministry of
   Education and Science ?Implementation Doctorate? program (ID:
   DWD/5/0178/2021) .
CR Agrawal B, 2021, INT CON DISTR COMP S, P1110, DOI 10.1109/ICDCS51616.2021.00113
   Alan O, 2011, EXPERT SYST APPL, V38, P3440, DOI 10.1016/j.eswa.2010.08.130
   Altinger H, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P526, DOI 10.1109/SANER.2017.7884667
   Phan AV, 2017, PROC INT C TOOLS ART, P45, DOI 10.1109/ICTAI.2017.00019
   Phan AV, 2017, 2017 21ST ASIA PACIFIC SYMPOSIUM ON INTELLIGENT AND EVOLUTIONARY SYSTEMS (IES), P37, DOI 10.1109/IESYS.2017.8233558
   Arrieta A, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATION OF SOFTWARE TEST (AST 2021), P30, DOI 10.1109/AST52587.2021.00012
   Basili V., 1994, The Goal Question Metric Approach, P528
   Bhattacharyya A, 2018, INT CONF CLOUD COMP, P284, DOI 10.1109/CloudCom2018.2018.00062
   Bowes D, 2018, SOFTWARE QUAL J, V26, P525, DOI 10.1007/s11219-016-9353-3
   Bowes D, 2017, IEEE INT SYMP SOFTW, P44, DOI 10.1109/ISSREW.2017.11
   Briem J A, 2020, P IEEEACM 42 INT C S, P203
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Catal Cagatay., 2010, Electronic Engineering and Computing Technology, volume 60 of Lecture Notes in Electrical Engineering, V60, P189, DOI DOI 10.1007/978-90-481-8776-8_17
   Chen JJ, 2020, IEEE INT CONF AUTOM, P373, DOI 10.1145/3324884.3416624
   Cheng X, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3436877
   Chopra Rahul, 2022, APIT 2022: 2022 4th Asia Pacific Information Technology Conference, P176, DOI 10.1145/3512353.3512379
   Dhall S., 2013, CONFLUENCE 2013, P5, DOI [10.1049/cp.2013.2313, DOI 10.1049/CP.2013.2313]
   Dhanalaxmi B., 2017, Journal of Theoretical and Applied Information Technology, V95, P3403
   Dieste O, 2009, EMPIR SOFTW ENG, V14, P513, DOI 10.1007/s10664-008-9091-7
   dos Santos GE, 2020, IEEE INT WORK C SO, P98, DOI 10.1109/SCAM51674.2020.00016
   Du XN, 2019, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2019.00024
   Durelli VHS, 2019, IEEE T RELIAB, V68, P1189, DOI 10.1109/TR.2019.2892517
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Elsner D, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P491, DOI 10.1145/3460319.3464834
   Gadelha G, 2021, AUTOMAT SOFTW ENG, V28, DOI 10.1007/s10515-021-00287-w
   Garousi V, 2017, IEEE SOFTWARE, V34, P38, DOI 10.1109/MS.2017.3641116
   Gökçeoglu M, 2021, J SYST SOFTWARE, V179, DOI 10.1016/j.jss.2021.110993
   Gomes L., 2020, INFORM SOFTWARE TECH, V132, DOI [10.1016/j.infsof.2020.106508, DOI 10.1016/J.INFSOF.2020.106508]
   Grodzicka H., 2020, Data-Centr. Bus. Applicat.: Tow. Softw. Develop, P137, DOI DOI 10.1007/978-3-030-34706-2_8
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hoa Khanh Dam, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P46, DOI 10.1109/MSR.2019.00017
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Hryszko J, 2018, FOUND COMPUT DECIS S, V43, P7, DOI 10.1515/fcds-2018-0002
   Huanjing Wang, 2019, 2019 18th IEEE International Conference On Machine Learning And Applications (ICMLA), P1045, DOI 10.1109/ICMLA.2019.00176
   Jimenez M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P695, DOI 10.1145/3338906.3338941
   Jonsson L, 2016, EMPIR SOFTW ENG, V21, P1533, DOI 10.1007/s10664-015-9401-9
   Jureczko M, 2010, ACM INT C P SERIES, DOI [10.1145/1868328.1868342, DOI 10.1145/1868328.1868342]
   Kang J, 2021, SOFTWARE PRACT EXPER, V51, P748, DOI 10.1002/spe.2927
   Kawalerowicz Marcin, 2021, Advances and Trends in Artificial Intelligence. From Theory to Practice: 34th International Conference on Industrial, Engineering and Other Applications of Applied Intelligent Systems, IEA/AIE 2021, Proceedings. Lecture Notes in Computer Science. Lecture Notes in Artifical Intelligence (12799), P426, DOI 10.1007/978-3-030-79463-7_36
   Kawalerowicz M., 2021, LNCS, P412, DOI 10.1007/978-3-030-79463-7_35
   Khosrowjerdi H, 2018, IEEE INT CONF SOFTW, P297, DOI 10.1109/ICST.2018.00037
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kim Y, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3345628
   Kitchenham B., 2016, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B, 2023, IEEE T SOFTWARE ENG, V49, P872, DOI 10.1109/TSE.2022.3165938
   Kitchenham B, 2023, IEEE T SOFTWARE ENG, V49, P1273, DOI 10.1109/TSE.2022.3174092
   Lanza M, 2016, IEEE SOFTWARE, V33, P102, DOI 10.1109/MS.2016.156
   Son LH, 2019, SYMMETRY-BASEL, V11, DOI 10.3390/sym11020212
   Lewowski T., 2022, Develop. Informat. Knowl. Manage. Bus. Appl, V3, P285
   Li HY, 2019, LECT NOTES ARTIF INT, V11441, P212, DOI 10.1007/978-3-030-16142-2_17
   Li H, 2020, ISA T, V100, P198, DOI 10.1016/j.isatra.2019.11.020
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   Li ZQ, 2018, IET SOFTW, V12, P161, DOI 10.1049/iet-sen.2017.0148
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Madeyski L, 2017, J INTELL FUZZY SYST, V32, P1509, DOI 10.3233/JIFS-169146
   Madeyski L, 2014, FOUND COMPUT DECIS S, V39, P249, DOI 10.2478/fcds-2014-0014
   Malhotra R, 2018, J INF PROCESS SYST, V14, P751, DOI 10.3745/JIPS.04.0077
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Marijan D, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P123, DOI 10.1109/AITEST49225.2020.00025
   Meiliana, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON CYBERNETICS AND COMPUTATIONAL INTELLIGENCE (CYBERNETICSCOM), P19, DOI 10.1109/CYBERNETICSCOM.2017.8311708
   Melo C.S., 2019, INT C ENTERPRISE INF
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Pachouly J, 2022, ENG APPL ARTIF INTEL, V111, DOI 10.1016/j.engappai.2022.104773
   Perera A, 2020, IEEE INT CONF AUTOM, P448, DOI 10.1145/3324884.3416612
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Phillips J.J., 2003, RETURN INVESTMENT TR, V2nd
   Pradel M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276517
   Pradhan S, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P374, DOI 10.1109/QRS51102.2020.00056
   Pyzdek T., 2003, BLACK BELTS MANAGERS, DOI DOI 10.1036/0071415963
   Qin FY, 2019, IEEE T RELIAB, V68, P1134, DOI 10.1109/TR.2018.2864960
   Rana Rakesh, 2014, Proceedings of the 9th International Conference on Software Engineering and Applications ICSOFT-EA 2014, P383
   Rizwan M, 2019, IEEE ACCESS, V7, P82764, DOI 10.1109/ACCESS.2019.2923821
   Sarker Iqbal H, 2021, SN Comput Sci, V2, P160, DOI 10.1007/s42979-021-00592-x
   Sellik H, 2021, IEEE WORK CONF MIN S, P58, DOI 10.1109/MSR52588.2021.00019
   Sharif A, 2021, Arxiv, DOI arXiv:2110.07443
   She DD, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P737, DOI 10.1145/3368089.3409723
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shippey T, 2019, INFORM SOFTWARE TECH, V106, P142, DOI 10.1016/j.infsof.2018.10.001
   Stradowski S, 2023, INFORM SOFTWARE TECH, V155, DOI 10.1016/j.infsof.2022.107128
   Stradowski S, 2023, INFORM SOFTWARE TECH, V153, DOI 10.1016/j.infsof.2022.107067
   Tabassum S, 2020, PROC INT CONF SOFTW, P554, DOI 10.1145/3377811.3380403
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Wahono R. S., 2015, Journal of Software Engineering, V1, P1
   Wohlin C, 2014, 18 INT C EV ASS SOFT, P1, DOI DOI 10.1145/2601248.2601268
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
   Wolpert DH, 1996, NEURAL COMPUT, V8, P1341, DOI 10.1162/neco.1996.8.7.1341
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yu TT, 2019, IEEE T SOFTWARE ENG, V45, P558, DOI 10.1109/TSE.2018.2791521
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhang W, 2020, PROC IEEE INT CONF S, P727, DOI 10.1109/ICSME46990.2020.00082
   Zhao NW, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P315, DOI 10.1145/3368089.3409672
   Zheng WJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P352, DOI 10.1109/ASE.2019.00041
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
   Zong L., 2019, P 2019 3 INT C SOFTW, P6065, DOI [10.1145/3374549.3374553, DOI 10.1145/3374549.3374553]
NR 95
TC 3
Z9 3
U1 7
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2023
VL 159
AR 107192
DI 10.1016/j.infsof.2023.107192
EA MAR 2023
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA A0CK8
UT WOS:000951890300001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Palopak, Y
   Huang, SJ
   Ratnasari, W
AF Palopak, Yulianus
   Huang, Sun-Jen
   Ratnasari, Wiwit
TI Knowledge diffusion trajectories of agile software development research:
   A main path analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile software development; Agile methods; Main path analysis; Citation
   analysis; Key -route analysis; Knowledge diffusion
ID SCALE; EVOLUTION; NETWORK; MODEL; TEAM; METHODOLOGIES; STATE
AB Context: The dramatic growth of agile software development (ASD) research has resulted in a large number of diverse theoretical and empirical publications. The citation relationships among these publications indicate knowledge dissemination across and within academia or scientists. Objective: This study offers a comprehensive understanding of the ASD literature by exploring the knowledge diffusion path through the citation network of publications that have made significant contributions to its research development. Method: We employ a quantitative citation-based methodology, main path analysis (MPA), to examine the citation relationship of 1431 scientific articles published in the Web of Science (WoS) between 2001 and 2021 and visualize the MPA results using Pajek software. Results: Through citation analysis this study discovers knowledge diffusion trajectories of publications concerning ASD method. Our key results present 32 publications identified along the key-route main path as the most influential ones in the trajectories of ASD. There are three phases of ASD research development: introduction, evaluation, and deployment and expansion. Using the multiple-global main path, we further uncover the publication trends from a set of recent papers and reveal four sub-themes: tailoring of agile practices, large-scale agile context, challenges and success factors of large-scale organizations, and agile global software development. Conclusions: Although there was little academic interest in the initial phase, ASD-related publication and citation trends have consistently increased over time. The historical development of ASD methods was established in three distinct phases of publications in the domain. Each phase presents a narrative of agile methods' development with different focuses. The most recent trends of ASD publications tend to focus on the agile tailoring and scaling process in the global and distributed environment.
C1 [Palopak, Yulianus; Huang, Sun-Jen; Ratnasari, Wiwit] Natl Taiwan Univ Sci & Technol, Dept Informat Management, 43,Sect 4,Keelung Rd, Taipei 106335, Taiwan.
C3 National Taiwan University of Science & Technology
RP Huang, SJ (corresponding author), Natl Taiwan Univ Sci & Technol, Dept Informat Management, 43,Sect 4,Keelung Rd, Taipei 106335, Taiwan.
EM ypalopak@unai.edu; huangsj@mail.ntust.edu.tw; ratnasariwiwit@gmail.com
OI Palopak, Yulianus/0000-0003-4687-5227; Ratnasari,
   Wiwit/0000-0003-0217-9334
CR Abrahamsson P, 2003, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2003.1201204
   Abrahamsson P., 2002, Agile software development methods: Review and analysis, P478, DOI DOI 10.1076/CSED.12.3.167.8613
   Abrahamsson P, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P31, DOI 10.1007/978-3-642-12575-1_3
   Abrar MF, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2366
   Abrar MF, 2019, IEEE ACCESS, V7, P22660, DOI 10.1109/ACCESS.2019.2896212
   Acuña ST, 2009, INFORM SOFTWARE TECH, V51, P627, DOI 10.1016/j.infsof.2008.08.006
   Al-Saqqa Samar, 2020, International Journal of Interactive Mobile Technologies, V14, P246, DOI 10.3991/ijim.v14i11.13269
   Alzoubi Y, 2021, IEEE T PROF COMMUN, V64, P322, DOI 10.1109/TPC.2021.3110396
   [Anonymous], 2007, Scaling Software Agility: Best Practices for Large Enterprises
   Bass JM, 2016, INFORM SOFTWARE TECH, V75, P1, DOI 10.1016/j.infsof.2016.03.001
   Bass JM, 2015, EMPIR SOFTW ENG, V20, P1525, DOI 10.1007/s10664-014-9322-z
   Batagelj V., 1998, Connections, V21, P47
   Batagelj V., 2003, arXiv, DOI [10.48550/arXiv.cs/0309023, DOI 10.48550/ARXIV.CS/0309023]
   Batra D, 2020, INFORM SYST MANAGE, V37, P361, DOI 10.1080/10580530.2020.1821843
   Batra D, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110577
   Bekkers R, 2012, TECHNOL FORECAST SOC, V79, P1192, DOI 10.1016/j.techfore.2012.01.009
   Bick S, 2018, IEEE T SOFTWARE ENG, V44, P932, DOI 10.1109/TSE.2017.2730870
   Bindu N, 2019, GOV INFORM Q, V36, P385, DOI 10.1016/j.giq.2019.02.005
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Bowers J., 2002, Extreme Programming and Agile Methods - XP/Agile Universe 2002 Second XP Universe and First Agile Universe Conference. Proceedings (Lecture Notes in Computer Science Vol.2418), P100
   Brede N, 2018, IJISPM-INT J INF SYS, V6, P45, DOI 10.12821/ijispm060303
   Campanelli AS, 2015, J SYST SOFTWARE, V110, P85, DOI 10.1016/j.jss.2015.08.035
   Chen LC, 2020, J INTERNET TECHNOL, V21, P85, DOI 10.3966/160792642020012101009
   Chuang SW, 2014, J SYST SOFTWARE, V93, P84, DOI 10.1016/j.jss.2014.03.006
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Colicchia C, 2012, SUPPLY CHAIN MANAG, V17, P403, DOI 10.1108/13598541211246558
   Dantas E, 2018, INT J SOFTW ENG KNOW, V28, P1811, DOI 10.1142/S0218194018400302
   Dingsoyr T, 2002, LECT NOTES COMPUT SC, V2640, P4
   Dingsoyr Torgeir, 2013, Software Engineering Notes, V38, P33, DOI 10.1145/2507288.2507322
   Dingsoyr T, 2019, IEEE SOFTWARE, V36, P30, DOI 10.1109/MS.2018.2884884
   Dingsoyr T, 2018, PROJ MANAG J, V49, P64, DOI 10.1177/8756972818798980
   Dingsoyr T, 2018, EMPIR SOFTW ENG, V23, P490, DOI 10.1007/s10664-017-9524-2
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Erickson J, 2005, J DATABASE MANAGE, V16, P88, DOI 10.4018/jdm.2005100105
   Fernández-Diego M, 2020, IEEE ACCESS, V8, P166768, DOI 10.1109/ACCESS.2020.3021664
   Fowler M., 2001, Software Development, V9, P28
   Freudenberg S., 2010, PRACTITIONERS COMPUT
   Fu HL, 2019, IEEE T IND INFORM, V15, P6531, DOI 10.1109/TII.2019.2929414
   Gregory P, 2016, INFORM SOFTWARE TECH, V77, P92, DOI 10.1016/j.infsof.2016.04.006
   Heeager LT, 2018, INFORM SOFTWARE TECH, V103, P22, DOI 10.1016/j.infsof.2018.06.004
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Ho MHC, 2021, SCIENTOMETRICS, V126, P2391, DOI 10.1007/s11192-020-03835-5
   Hoda R, 2018, IEEE SOFTWARE, V35, P58, DOI 10.1109/MS.2018.290111318
   HUMMON NP, 1989, SOC NETWORKS, V11, P39, DOI 10.1016/0378-8733(89)90017-8
   Hwang BL, 2021, EDUC TECHNOL SOC, V24, P67
   Hwang S, 2019, TECHNOL FORECAST SOC, V143, P142, DOI 10.1016/j.techfore.2019.04.013
   Jorgensen M, 2019, IEEE SOFTWARE, V36, P39, DOI 10.1109/MS.2018.2884863
   Jung H, 2020, EXPERT SYST APPL, V162, DOI 10.1016/j.eswa.2020.113851
   Kähkönen T, 2004, LECT NOTES COMPUT SC, V3009, P378
   Kalenda M, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1954
   Keenan F, 2004, PROC INT CONF SOFTW, P45, DOI 10.1109/ICSE.2004.1317417
   Khan AA, 2021, APPL SOFT COMPUT, V102, DOI 10.1016/j.asoc.2021.107090
   Kiv S., 2021, EXPERT SYST APPL, V195, P2022, DOI [10.1016/j.eswa.2022.116520,no.Augustp.116520, DOI 10.1016/J.ESWA.2022.116520,NO.AUGUSTP.116520]
   Lai KK, 2021, J INFORMETR, V15, DOI 10.1016/j.joi.2021.101143
   Lee JC, 2022, INFORM TECHNOL PEOPL, V35, P1009, DOI 10.1108/ITP-02-2020-0063
   Liang HG, 2016, INFORM MANAGE-AMSTER, V53, P227, DOI 10.1016/j.im.2015.10.001
   Liu JS, 2019, SCIENTOMETRICS, V119, P379, DOI 10.1007/s11192-019-03034-x
   Liu JS, 2016, J ASSOC INF SCI TECH, V67, P465, DOI 10.1002/asi.23384
   Liu JS, 2013, OMEGA-INT J MANAGE S, V41, P3, DOI 10.1016/j.omega.2010.12.006
   Liu JS, 2012, J AM SOC INF SCI TEC, V63, P528, DOI 10.1002/asi.21692
   Lu LYY, 2016, TECHNOL FORECAST SOC, V103, P71, DOI 10.1016/j.techfore.2015.10.018
   Madsen DO, 2020, SOC SCI-BASEL, V9, DOI 10.3390/socsci9050069
   Marinho M, 2021, IEEE ACCESS, V9, P109671, DOI 10.1109/ACCESS.2021.3101963
   Meng XC, 2021, INT J ENV RES PUB HE, V18, DOI 10.3390/ijerph18030883
   Merisalo-Rantanen H, 2005, J DATABASE MANAGE, V16, P41, DOI 10.4018/jdm.2005100103
   Meyer PS, 1999, TECHNOL FORECAST SOC, V61, P247, DOI 10.1016/S0040-1625(99)00021-9
   Mishra A, 2021, INT J SYST ASSUR ENG, V12, P1420, DOI 10.1007/s13198-021-01350-1
   Misra S, 2012, INT J QUAL RELIAB MA, V29, P972, DOI 10.1108/02656711211272863
   Mnkandla E, 2005, LECT NOTES COMPUT SC, V3556, P259
   Moe N.B., 2021, FINDING SWEET SPOT O, V26
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Ríos JRM, 2021, 3C TECNOL, V10, P17, DOI 10.17993/3ctecno/2021.v10n2e38.17-45
   Mrvar A, 2016, COMPLEX ADAPT SYST M, V4, DOI 10.1186/s40294-016-0017-8
   Niederman F, 2018, PROJ MANAG J, V49, P3, DOI 10.1177/8756972818802713
   Noor H, 2021, INT J ADV COMPUT SC, V12, P550
   Pawlak R, 2021, E-MENTOR, P64
   Perkusich M, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106241
   Rejeb A., 2022, KNOWLEDGE DIFFUSION
   Rejeb A, 2022, SUSTAINABILITY-BASEL, V14, DOI 10.3390/su14010083
   Rodríguez P, 2019, ADV COMPUT, V113, P135, DOI 10.1016/bs.adcom.2018.03.014
   Santos PD, 2022, REQUIR ENG, V27, P117, DOI 10.1007/s00766-021-00363-3
   Shameem M, 2020, APPL SOFT COMPUT, V90, DOI 10.1016/j.asoc.2020.106122
   Silva FS, 2015, INFORM SOFTWARE TECH, V58, P20, DOI 10.1016/j.infsof.2014.09.012
   Silva FN, 2016, J INFORMETR, V10, P487, DOI 10.1016/j.joi.2016.03.008
   Smite D, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106612
   Stray V, 2022, SOFTWARE QUAL J, V30, P455, DOI 10.1007/s11219-021-09561-2
   Stray V, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110717
   Tang K, 2017, INT C ELECTR MACH SY
   Tripp JF, 2018, J COMPUT INFORM SYST, V58, P170, DOI 10.1080/08874417.2016.1220240
   van Waardenburg G, 2013, INFORM SOFTWARE TECH, V55, P2154, DOI 10.1016/j.infsof.2013.07.012
   Visconti M, 2004, LECT NOTES COMPUT SC, V3009, P431
   Wang NX, 2016, DECIS SUPPORT SYST, V86, P35, DOI 10.1016/j.dss.2016.03.006
   Wu HQ, 2020, PROJ MANAG J, V51, P242, DOI 10.1177/8756972819850232
   Xiao Y, 2014, J INFORMETR, V8, P594, DOI 10.1016/j.joi.2014.05.001
   Yoon S, 2021, J KNOWL MANAG, V25, P454, DOI 10.1108/JKM-01-2020-0030
   Yu DJ, 2022, SCIENTOMETRICS, V127, P4251, DOI 10.1007/s11192-022-04443-1
   Yu DJ, 2022, EDUC INF TECHNOL, V27, P7257, DOI 10.1007/s10639-021-10869-6
   Yu DJ, 2022, ENVIRON SCI POLLUT R, V29, P34119, DOI 10.1007/s11356-021-18026-9
   Yu DJ, 2021, J INFORMETR, V15, DOI 10.1016/j.joi.2021.101186
   Yu DJ, 2021, SCIENTOMETRICS, V126, P8491, DOI 10.1007/s11192-021-04105-8
   Yu DJ, 2021, INT J LOGIST MANAG, V32, P1315, DOI 10.1108/IJLM-05-2020-0207
   Yung JW, 1999, TECHNOL FORECAST SOC, V61, P273, DOI 10.1016/S0040-1625(99)00023-2
   Zeng F, 2020, SUSTAINABILITY-BASEL, V12, DOI 10.3390/su12083337
   Zhu XT, 2021, COMPUT IND ENG, V162, DOI 10.1016/j.cie.2021.107774
NR 105
TC 2
Z9 2
U1 5
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2023
VL 156
AR 107131
DI 10.1016/j.infsof.2022.107131
EA DEC 2022
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7D9AV
UT WOS:000900775800001
DA 2024-07-18
ER

PT J
AU Kalaee, A
   Parsa, S
   Fathi, N
AF Kalaee, Akram
   Parsa, Saeed
   Fathi, Negar
TI COSMOS: A comprehensive framework for automatically generating
   domain-oriented test suite
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Domain coverage; Test data generation; Complex data types; Constraint
   satisfaction solver
ID REDUCTION
AB Context: Coverage criteria are satisfied by at least one examination of the test target, while many faults are not revealed by one execution. However, despite executing the faulty statement, the test result is correct in certain circumstances. Such coincidentally passing test cases execute the faulty statement but do not cause failures. Objective: This paper introduces the new concept of domain solver. Domain solvers attempt to detect the domain of inputs rather than a single input satisfying a path constraint. Domain coverage is a new metric to evaluate the relative accuracy of the detected domains. The promising point is that the proposed approach similarly treats nonlinear and linear constraints.Method: Domain solver splits a path constraint into conjunctions of simple conditions comparing two expressions. Such a splitting simplifies the constraint-solving task to detect regions of the input space satisfying a comparison between two expressions. After finding a region, an improved version of an algorithm, update, is used to determine the domain of variables involved in the comparing expressions.Results: Our proposed approach, COSMOS, is implemented using the Roslyn compiler. We compared COSMOS with well-known constraint solvers using various linear/nonlinear constraints. The results show that COSMOS improves the number of supported data types involved in a constraint and solves100% of the instances in which the other solvers fail. Besides, COSMOS achieves the best relative accuracy of 84% compared to the existing domain-oriented test suite generation approaches. Moreover, our experiment results illustrate that COSMOS improves the fault-finding capability of other existing test coverage criteria by detecting coincidentally correct test cases.Conclusion: Combining domain coverage and compiler as a service makes a powerful constraint satisfaction method outperforming the existing constraint solvers regarding the number of solved linear/nonlinear con-straints. Augmenting other structural test coverage criteria with domain coverage reveals the coincidentally correct test cases.
C1 [Kalaee, Akram; Parsa, Saeed; Fathi, Negar] Iran Univ Sci & Technol, Sch Comp Engn, Tehran, Iran.
C3 Iran University Science & Technology
RP Parsa, S (corresponding author), Iran Univ Sci & Technol, Sch Comp Engn, Tehran, Iran.
EM prasa@iust.ac.ir
RI parsa, saeed/S-9536-2018
OI parsa, saeed/0000-0003-4381-2773; kalaee, Akram/0000-0002-8730-2911
CR Amiri-Chimeh S, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.045
   Ammann Paul, 2008, Introduction to software testing, V1st
   Anthony Capon J., 1991, Elementary Statistics for the Social Sciences: Study Guide
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Bidgoli AM, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110495
   Bock J, 2016, USING COMPILER API
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dekel O, 2012, J MACH LEARN RES, V13, P2655
   Durelli VHS, 2018, SCI COMPUT PROGRAM, V152, P99, DOI 10.1016/j.scico.2017.10.003
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   Feyzi F, 2018, J SYST SOFTWARE, V136, P39, DOI 10.1016/j.jss.2017.11.002
   Fraser G, 2015, SOFTW TEST VERIF REL, V25, P749, DOI 10.1002/stvr.1575
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Fuzzywuzzy, About us
   github, about us
   github, BOXED MUTMUT
   Gotlieb A, 2010, J SYST SOFTWARE, V83, P2618, DOI 10.1016/j.jss.2010.08.021
   Lee TH, 2008, COMPUT STRUCT, V86, P1463, DOI 10.1016/j.compstruc.2007.05.023
   Mao CY, 2014, NEURAL COMPUT APPL, V25, P199, DOI 10.1007/s00521-013-1474-z
   Nikravan E., 2019, SOFTW QUALITY J, P1
   Nikravan E, 2019, TURK J ELECTR ENG CO, V27, P2666, DOI 10.3906/elk-1801-18
   Nikravan E, 2019, INT J SOFTW TOOLS TE, V21, P351, DOI 10.1007/s10009-018-0493-6
   Offutt AJ, 1999, SOFTWARE PRACT EXPER, V29, P167, DOI 10.1002/(SICI)1097-024X(199902)29:2<167::AID-SPE225>3.0.CO;2-V
   Prud'homme C., 2017, TASC - LS2N CNRS UMR 6241
   Sicun Gao, 2013, Automated Deduction - CADE-24. 24th International Conference on Automated Deduction. Proceedings: LNCS 7898, P208, DOI 10.1007/978-3-642-38574-2_14
   smtlib.cs.uiowa.edu, US
   Souza M, 2011, LECT NOTES COMPUT SC, V6617, P359, DOI 10.1007/978-3-642-20398-5_26
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   webblaze.cs.berkeley.edu, US
   Yu Y, 2016, AAAI CONF ARTIF INTE, P2286
   z3string, US
NR 32
TC 0
Z9 0
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2023
VL 154
AR 107091
DI 10.1016/j.infsof.2022.107091
EA NOV 2022
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7D9DL
UT WOS:000900782600003
DA 2024-07-18
ER

PT J
AU Nourry, O
   Kashiwa, Y
   Kamei, Y
   Ubayashi, N
AF Nourry, Olivier
   Kashiwa, Yutaro
   Kamei, Yasutaka
   Ubayashi, Naoyasu
TI Does shortening the release cycle affect refactoring activities: A case
   study of the JDT Core, Platform SWT, and UI projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Release policy change; Refactoring; Release engineering
ID CODE
AB Context: Several large-scale companies such as Google and Netflix chose to adopt short release cycles (e.g., rapid releases) in recent years. Although this allows these companies to provide updates and features faster for their users, it also causes developers to have less time to dedicate to development activities other than feature development. Objective: In this paper, we investigate how refactoring activities were impacted by the adoption of shorter releases. Method: We extract all refactorings applied over a period of two years during traditional yearly releases and almost two years during shorter quarterly releases in three Eclipse projects. We then analyze both time periods' refactoring activities to understand how refactoring activities can be impacted by shortening the release cycles. Results: We observe reduced refactoring activities in one project and a decrease in more complex refactoring operations after shortening the release cycles. We also find that weekly efforts dedicated to refactoring activities was lower across all projects after shortening the release cycles. Conclusion: Shorter releases may impact software development tasks such as refactoring in unintended ways. Not applying specific types of refactoring may also affect the software's quality in the long term. Using this case study and past work on shorter releases, potential short release adopters can now better plan their transition to shorter releases knowing which areas of development may be affected.
C1 [Nourry, Olivier; Kashiwa, Yutaro; Kamei, Yasutaka; Ubayashi, Naoyasu] Kyushu Univ, Principles Software Engn & Programming Languages, Fukuoka, Japan.
C3 Kyushu University
RP Nourry, O (corresponding author), Kyushu Univ, Principles Software Engn & Programming Languages, Fukuoka, Japan.
EM oliviern@posl.ait.kyushu-u.ac.jp; kashiwa@ait.kyushu-u.ac.jp;
   kamei@ait.kyushu-u.ac.jp; ubayashi@ait.kyushu-u.ac.jp
OI Ubayashi, Naoyasu/0000-0003-1578-7195
FU Japan Society for the Promotion of Science [JP18H03222]
FX Japan Society for the Promotion of Science (International Joint Research
   Program with SNSF (Project "SENSOR") , Japan Society for the Promotion
   of Science (JP18H03222) .
CR [Anonymous], 2007, P 6 JOINT M EUR SOFT
   Arima R, 2018, INT C PROGRAM COMPRE, P316, DOI 10.1145/3196321.3196362
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Baysal O, 2011, P 8 WORK C MIN SOFTW, P238, DOI DOI 10.1145/1985441.1985481
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   da Silva ACBG, 2017, INFORMATION, V8, DOI 10.3390/info8030109
   Neto EC, 2019, INT SYMP EMP SOFTWAR, P94
   Claes M, 2017, IEEE WORK CONF MIN S, P243, DOI 10.1109/MSR.2017.3
   da Costa DA, 2018, EMPIR SOFTW ENG, V23, P835, DOI 10.1007/s10664-017-9548-7
   Dig D, 2005, PROC IEEE INT CONF S, P389
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   Do H, 2010, IEEE T SOFTWARE ENG, V36, P593, DOI 10.1109/TSE.2010.58
   Do Hyunsook., 2006, P ACM SIGSOFT INT S, P141, DOI DOI 10.1145/1181775.1181793
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Garrido Alejandra., 2002, Proceedings of IWPSE 2002, P6
   Ge X, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1095, DOI 10.1145/2568225.2568280
   Herbold S, 2009, 2009 FIRST INTERNATIONAL CONFERENCE ON ADVANCES IN SYSTEM TESTING AND VALIDATION LIFECYCLE, P104, DOI 10.1109/VALID.2009.12
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Iammarino M, 2019, PROC IEEE INT CONF S, P186, DOI 10.1109/ICSME.2019.00029
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Karus S, 2012, EUR CON SFTWR MTNCE, P203, DOI 10.1109/CSMR.2012.29
   Kerzazi N., 2014, P 8 ACM IEEE INT S E, P98
   Khomh F., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P179, DOI 10.1109/MSR.2012.6224279
   Khomh F, 2015, EMPIR SOFTW ENG, V20, P336, DOI 10.1007/s10664-014-9308-x
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Kim M., 2010, PROC 18 ACM SIGSOFT, P371, DOI [10.1145/1882291.1882353, DOI 10.1145/1882291.1882353]
   Kim M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/1985793.1985815
   Kula E, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P785, DOI 10.1145/3338906.3338978
   Lacerda G, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110610
   Lin B, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P594, DOI [10.1109/SANER.2019.8667992, 10.1109/saner.2019.8667992]
   Mäntylä MV, 2015, EMPIR SOFTW ENG, V20, P1384, DOI 10.1007/s10664-014-9338-4
   Mäntylä MV, 2013, PROC IEEE INT CONF S, P20, DOI 10.1109/ICSM.2013.13
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Michlmayr M, 2015, IEEE SOFTWARE, V32, P54
   Moser R, 2006, LECT NOTES COMPUT SC, V4039, P287
   Moser Raimund, 2007, CASE STUDY IMPACT RE
   Murphy-Hill E, 2009, PROC INT CONF SOFTW, P287, DOI 10.1109/ICSE.2009.5070529
   Palomba F, 2017, INT C PROGRAM COMPRE, P176, DOI 10.1109/ICPC.2017.38
   Peruma Anthony, 2018, P 2 INT W REF MONTP, P26, DOI DOI 10.1145/3242163.3242169
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Shihab E, 2013, INFORM SOFTWARE TECH, V55, P1981, DOI 10.1016/j.infsof.2013.06.002
   Silva D, 2017, IEEE WORK CONF MIN S, P269, DOI 10.1109/MSR.2017.14
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Sousa L., 2020, CHARACTERIZING IDENT
   Stroggylos K., 2007, P 5 INT WORKSH SOFTW, P10, DOI [10.1109/WOSQ.2007.11, DOI 10.1109/WOSQ.2007.11]
   Thongtanunam P, 2019, EMPIR SOFTW ENG, V24, P937, DOI 10.1007/s10664-018-9645-2
   Tonietto GN, 2019, J CONSUM RES, V45, P1085, DOI 10.1093/jcr/ucy043
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Vassallo C, 2019, SCI COMPUT PROGRAM, V180, P1, DOI 10.1016/j.scico.2019.05.002
   Vassallo C, 2018, PROC IEEE INT CONF S, P564, DOI 10.1109/ICSME.2018.00068
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wright HK, 2013, PROC IEEE INT CONF S, P548, DOI 10.1109/ICSM.2013.93
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
   Xing ZC, 2006, PROC IEEE INT CONF S, P458
NR 58
TC 0
Z9 0
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2021
VL 139
AR 106623
DI 10.1016/j.infsof.2021.106623
EA JUN 2021
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA US8LY
UT WOS:000697678300010
DA 2024-07-18
ER

PT J
AU Kifetew, FM
   Perini, A
   Susi, A
   Siena, A
   Muñante, D
   Morales-Ramirez, I
AF Kifetew, Fitsum Meshesha
   Perini, Anna
   Susi, Angelo
   Siena, Aberto
   Munante, Denisse
   Morales-Ramirez, Itzel
TI Automating user-feedback driven requirements prioritization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Automated user-feedback analysis; Automated requirements prioritization;
   Empirical study
AB Context: Feedback from end users of software applications is a valuable resource in understanding what users request, what they value, and what they dislike. Information derived from user-feedback can support software evolution activities, such as requirements prioritization. User-feedback analysis is still mostly performed manually by practitioners, despite growing research in automated analysis. Objective: We address two issues in automated user-feedback analysis: (i) most of the existing automated analysis approaches that exploit linguistic analysis assume that the vocabulary adopted by users (when expressing feedback) and developers (when formulating requirements) are the same; and (ii) user-feedback analysis techniques are usually experimentally evaluated only on some user-feedback dataset, not involving assessment by potential software developers. Method: We propose an approach, ReFeed, that computes, for each requirement, the set of related user feedback, and from such user-feedback extracts quantifiable properties which are relevant for prioritizing the requirement. The extracted properties are propagated to the related requirements, based on which ranks are computed for each requirement. ReFeed relies on domain knowledge, in the form of an ontology, helping mitigate the gap in the vocabulary of end users and developers. The effectiveness of ReFeed is evaluated on a realistic requirements prioritization scenario in two experiments involving graduate students from two different universities. Results: ReFeed is able to synthesize reasonable priorities for a given set of requirements based on properties derived from user-feedback. The implementation of ReFeed and related resources are publicly available. Conclusion: The results from our studies are encouraging in that using only three properties of user feedback, ReFeed is able to prioritize requirements with reasonable accuracy. Such automatically determined prioritization could serve as a good starting point for requirements experts involved in the task of prioritizing requirements Future studies could explore additional user-feedback properties to improve the effectiveness of computed priorities.
C1 [Kifetew, Fitsum Meshesha; Perini, Anna; Susi, Angelo; Siena, Aberto] Fdn Bruno Kessler, Trento, Italy.
   [Munante, Denisse] Inst Polytech Paris, Telecom SudParis, SAMOVAR, Paris, France.
   [Morales-Ramirez, Itzel] Inst Ingn UNAM, Mexico City, DF, Mexico.
C3 Fondazione Bruno Kessler; IMT - Institut Mines-Telecom; Institut
   Polytechnique de Paris; Telecom SudParis
RP Kifetew, FM (corresponding author), Fdn Bruno Kessler, Trento, Italy.
EM kifetew@fbk.eu; perini@fbk.eu; susi@fbk.eu; siena@fbk.eu;
   denisse_yessica.munante_arzapalo@telecom-sudparis.eu;
   imoralesr@iingen.unam.mx
RI Kifetew, Fitsum Meshesha/AFM-7847-2022; Munante, Denisse/ISA-1973-2023
OI Kifetew, Fitsum Meshesha/0000-0003-1860-8666; Munante,
   Denisse/0000-0003-2621-8342
FU H2020 SUPERSEDE project [644018]; H2020 - Industrial Leadership [644018]
   Funding Source: H2020 - Industrial Leadership
FX This work has been partially funded by the H2020 SUPERSEDE project,
   agreement number 644018. We would like to thank the students of the
   Universita' di Trento, the students of University of Hannover, and Prof.
   Kurt Schneider, for their participation in the empirical studies.
CR Al-Subaihin AA, 2021, IEEE T SOFTWARE ENG, V47, P300, DOI 10.1109/TSE.2019.2891715
   [Anonymous], 2011, Text Processing with GATE (Version 6)
   Austin JohnL., 1969, SPEECH ACTS ESSAY PH, DOI DOI 10.1017/CBO9781139173438
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   Busetta P, 2017, P INT COMP SOFTW APP, P180, DOI 10.1109/COMPSAC.2017.243
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Dabrowski J, 2020, LECT NOTES COMPUT SC, V12127, P401, DOI 10.1007/978-3-030-49435-3_25
   Dalpiaz F, 2019, LECT NOTES COMPUT SC, V11412, P55, DOI 10.1007/978-3-030-15538-4_4
   Di Sorbo A, 2017, PROC IEEE ACM INT C, P55, DOI 10.1109/ICSE-C.2017.5
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Dick J., 2017, REQUIR ENG, VFourth
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Genc-Nayebi N, 2017, J SYST SOFTWARE, V125, P207, DOI 10.1016/j.jss.2016.11.027
   Groen EC, 2017, IEEE SOFTWARE, V34, P44, DOI 10.1109/MS.2017.33
   Guzman E, 2019, INT REQUIR ENG CONF, P381, DOI 10.1109/RE.2019.00049
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Islam MR, 2018, J SYST SOFTWARE, V145, P125, DOI 10.1016/j.jss.2018.08.030
   Jha N, 2018, EMPIR SOFTW ENG, V23, P3734, DOI 10.1007/s10664-018-9605-x
   Johanssen JO, 2019, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2019.00026
   Keertipati S., 2016, Evaluation and Assessment in Software Engineering, page, P33
   Kuttal S.K., 2020, INT J COMPUT SCI INF, V18, P83
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Maalej W, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P289, DOI 10.1109/ICSE-SEIP.2019.00041
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Merten T, 2016, INT REQUIR ENG CONF, P166, DOI 10.1109/RE.2016.8
   Morales-Ramirez I, 2019, INFORM SYST, V86, P94, DOI 10.1016/j.is.2018.08.003
   Morales-Ramirez I, 2017, INT REQUIR ENG CONF, P424, DOI 10.1109/RE.2017.41
   Morales-Ramirez I, 2015, APPL ONTOL, V10, P297, DOI 10.3233/AO-150150
   Nayebi M., 2018, EMPIR SOFTW ENG, P1
   Nayebi M, 2019, IEEE T SOFTWARE ENG, V45, P839, DOI 10.1109/TSE.2018.2810895
   Noei E., 2019, P 29 ANN INT C COMP, P54
   Oriol M, 2018, INT REQUIR ENG CONF, P217, DOI 10.1109/RE.2018.00030
   Perini A, 2018, SIMBIG 2018, P13, DOI DOI 10.1007/978-3-030-11680-4
   Scalabrino S, 2019, IEEE T SOFTWARE ENG, V45, P68, DOI 10.1109/TSE.2017.2759112
   Tavakoli M, 2018, EXPERT SYST APPL, V113, P186, DOI 10.1016/j.eswa.2018.05.037
   Tizard J, 2020, INT REQUIR ENG CONF, P55, DOI 10.1109/RE48521.2020.00018
   Vierhauser M, 2019, 2019 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON SOFTWARE AND SYSTEMS TRACEABILITY (SST 2019), P3, DOI 10.1109/SST.2019.00010
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Wei LL, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P672, DOI 10.1145/3106237.3106294
   Wohlin C., 2012, Experimentation in Software Engineering
   Yadav A, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P572, DOI [10.1109/saner48275.2020.9054843, 10.1109/SANER48275.2020.9054843]
   Zhang JZ, 2019, INFORM SOFTWARE TECH, V108, P30, DOI 10.1016/j.infsof.2018.12.002
NR 46
TC 10
Z9 10
U1 4
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2021
VL 138
AR 106635
DI 10.1016/j.infsof.2021.106635
EA MAY 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TI1GV
UT WOS:000672531500009
DA 2024-07-18
ER

PT J
AU Cortellessa, V
   Di Pompeo, D
AF Cortellessa, Vittorio
   Di Pompeo, Daniele
TI Analyzing the sensitivity of multi-objective software architecture
   refactoring to configuration characteristics
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Search-based software engineering; Automated refactoring; Software
   quality; Multi-objective optimization; Genetic algorithms; Software
   performance engineering; Software performance antipatterns
ID MODEL; ANTIPATTERNS
AB Context: Software architecture refactoring can be induced by multiple reasons, such as satisfying new functional requirements or improving non-functional properties. Multi-objective optimization approaches have been widely used in the last few years to introduce automation in the refactoring process, and they have revealed their potential especially when quantifiable attributes are targeted. However, the effectiveness of such approaches can be heavily affected by configuration characteristics of the optimization algorithm, such as the composition of solutions.
   Objective: In this paper, we analyze the behavior of EASIER, which is an Evolutionary Approach for Software archItecturE Refactoring, while varying its configuration characteristics, with the objective of studying its potential to find near-optimal solutions under different configurations.
   Method: In particular, we use two different solution space inspection algorithms (i.e., NSGA & minus; II and SPEA2) while varying the genome length and the solution composition.
   Results: We have conducted our experiments on a specific case study modeled in ae milia ADL, on which we have shown the ability of EASIER to identify performance-critical elements in the software architecture where refactoring is worth to be applied. Beside this, from the comparison of multi-objective algorithms, NSGA & minus; II has revealed to outperform SPEA2 in most of cases, although the latter one is able to induce more diversity in the proposed solutions.
   Conclusion: Our results show that the EASIER thoroughly automated process for software architecture refactoring allows to identify configuration contexts of the evolutionary algorithm in which multi-objective optimization more effectively finds near-optimal Pareto solutions.
C1 [Cortellessa, Vittorio; Di Pompeo, Daniele] Univ Aquila, Dept Informat Engn Comp Sci & Math, Laquila, Italy.
C3 University of L'Aquila
RP Di Pompeo, D (corresponding author), Univ Aquila, Dept Informat Engn Comp Sci & Math, Laquila, Italy.
EM vittorio.cortellessa@univaq.it; daniele.dipompeo@univaq.it
RI Di Pompeo, Daniele/P-2984-2018
OI Di Pompeo, Daniele/0000-0003-2041-7375; Cortellessa,
   Vittorio/0000-0002-4507-464X
CR Aldini A, 2004, INT CONF QUANT EVAL, P336
   Aldini A., 2010, SPRINGER
   Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Aleti A, 2009, MOMPES: 2009 ICSE WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, P61, DOI 10.1109/MOMPES.2009.5069138
   Arcelli D., 2018, ICSA, P1
   Arcelli D, 2018, INFORM SOFTWARE TECH, V95, P366, DOI 10.1016/j.infsof.2017.09.006
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Beume N, 2007, EUR J OPER RES, V181, P1653, DOI 10.1016/j.ejor.2006.08.008
   Blum C, 2003, ACM COMPUT SURV, V35, P268, DOI 10.1145/937503.937505
   Bondarev E, 2006, LECT NOTES COMPUT SC, V4063, P254
   Cao YT, 2015, J STAT PLAN INFER, V160, P60, DOI 10.1016/j.jspi.2014.12.004
   Cardellini V, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P131, DOI 10.1145/1595696.1595718
   Cinneide Mel, 2000, 14 ECOOP, P129
   Cortellessa V., 2011, BERLIN
   De Sanctis M, 2017, INFORM SOFTWARE TECH, V83, P35, DOI 10.1016/j.infsof.2016.11.008
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Feiler P.H., 2012, ADDISON WESLEY
   Ghannem Adnane, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P96, DOI 10.1007/978-3-642-39742-4_9
   Griswold WG, 2015, IEEE SOFTWARE, V32, P30, DOI 10.1109/MS.2015.107
   Ishibuchi H, 2015, LECT NOTES COMPUT SC, V9019, P110, DOI 10.1007/978-3-319-15892-1_8
   Kessentini M, 2012, SOFTW SYST MODEL, V11, P209, DOI 10.1007/s10270-010-0175-7
   King RTFA., 2010, U MAURITIUS RES J, V16, P485
   Koziolek Anne, 2011, JOINT ACM SIGSOFT C, P33
   Lencz T, 2003, SCHIZOPHRENIA BULL, V29, P717, DOI 10.1093/oxfordjournals.schbul.a007041
   Li R, 2011, IEEE C EVOL COMPUTAT, P432
   Mahouachi Rim, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P126, DOI 10.1007/978-3-642-39742-4_11
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P473, DOI 10.1007/s11219-015-9284-4
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   Martens A., 2010, P 1 JOINT WOSP SIPEW, P105, DOI [DOI 10.1145/1712605.1712624, 10.1145]
   Martens A, 2010, LECT NOTES COMPUT SC, V6093, P84, DOI 10.1007/978-3-642-13821-8_8
   MEEDENIYA I, 2010, QOSA, V6093, P52
   Menasce D.A., 2010, WOSP SIPEW 10, P27
   Misbhauddin M, 2015, EMPIR SOFTW ENG, V20, P206, DOI 10.1007/s10664-013-9283-7
   Mohan M, 2016, J SYST SOFTWARE, V120, P183, DOI 10.1016/j.jss.2016.05.019
   Opdyke William F., 1992, THESIS
   Ouni A., 2015, PROC 1 N AM SEARCH B, P1
   Ouni A, 2017, IEEE T SERV COMPUT, V10, P603, DOI 10.1109/TSC.2015.2502595
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Rago A, 2017, XI BRAZILIAN SYMPOSIUM ON SOFTWARE COMPONENTS, ARCHITECTURES, AND REUSE (SBCARS 2017), DOI 10.1145/3132498.3132509
   Ramirez A., 2018, SYST SOFTW
   Ray M, 2014, INNOV SYST SOFTW ENG, V10, P261, DOI 10.1007/s11334-014-0234-2
   Rosenberg Florian, 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P97, DOI 10.1109/SCC.2010.58
   Tian Y, 2016, IEEE C EVOL COMPUTAT, P5222, DOI 10.1109/CEC.2016.7748352
   Wohlin C., 2012, Springer Science Business Media
   Zitzler E., 2001, TECHNOLOGY
NR 47
TC 7
Z9 7
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2021
VL 135
AR 106568
DI 10.1016/j.infsof.2021.106568
EA MAR 2021
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RQ5WO
UT WOS:000642489200001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Saputri, TRD
   Lee, SW
AF Saputri, Theresia Ratih Dewi
   Lee, Seok-Won
TI Integrated framework for incorporating sustainability design in software
   engineering life-cycle: An empirical study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Sustainability; Software engineering; Meta-model; Machine learning;
   Requirements; Feature model; Metrics and measurements
ID REQUIREMENTS; MODEL
AB Context: Owing to the critical role of software-intensive systems in society, software engineers have the accountability to consider sustainability as a goal while structuring a software system. However, there are no practical guidelines providing a tangible decomposition of the sustainability aspect. Moreover, there are limited quantifiable methods to support sustainable design and analysis.
   Objectives: The purpose of this study is to help software practitioners to take sustainability into account by providing systematic guidelines for the software engineering process. We propose a framework that presents a meta model to decompose sustainability requirements and an assessment approach to evaluate sustainability achievements.
   Method: This work presents an integrated framework that combines a goal-based approach, scenario-based approach, and feature modeling to gather sustainability related requirements and corresponding features. For sustainability assessment, software analysis and machine learning techniques are utilized to analyze software products based on sustainability metrics and criteria.
   Results and Conclusions: The empirical study conducted with participants from academia and industry revealed that the proposed framework improves participant's ability to consider sustainability aspect in their software engineering tasks through focusing on requirements, design, and evaluation. With the provided sustainability meta-model, the participants could extract more stakeholders, requirements, and features in shorter time. Moreover, the empirical study result also demonstrated that this study is capable to indicate specific scenarios that should be redesigned to improve the sustainability achievements level.
C1 [Saputri, Theresia Ratih Dewi; Lee, Seok-Won] Ajou Univ, Dept Software & Comp Engn, Suwon, South Korea.
   [Saputri, Theresia Ratih Dewi; Lee, Seok-Won] Ajou Univ, Dept Artificial Intelligence, Suwon, South Korea.
C3 Ajou University; Ajou University
RP Lee, SW (corresponding author), Ajou Univ, Dept Software & Comp Engn, Suwon, South Korea.
EM trdsaputri@ajou.ac.kr; leesw@ajou.ac.kr
RI Saputri, Theresia/AAQ-3792-2021
OI Saputri, Theresia/0000-0002-9234-2889
FU Basic Science Research Program through the National Research Foundation
   of Korea (NRF) - Ministry of Science and ICT [NRF-2020R1F1A1075605]
FX This research was supported by the Basic Science Research Program
   through the National Research Foundation of Korea (NRF) funded by the
   Ministry of Science and ICT (NRF-2020R1F1A1075605)
CR Aceituna D, 2014, INFORM SOFTWARE TECH, V56, P321, DOI 10.1016/j.infsof.2013.11.004
   Albertao F., 2010, Proceedings 2010 IEEE 7th International Conference on e-Business Engineering (ICEBE 2010), P369, DOI 10.1109/ICEBE.2010.26
   Alhusain S, 2013, 2013 13TH UK WORKSHOP ON COMPUTATIONAL INTELLIGENCE (UKCI), P244, DOI 10.1109/UKCI.2013.6651312
   Andrae A., 2017, NORDIC DIGITAL BUSIN
   [Anonymous], 2014, J OPEN RES STW
   Balde C.P., 2017, The Global e-Waste Monitor 2017: Quantities, Flows and Resources, DOI [DOI 10.1016/J.PROCI.2014.05.148, 10.1016/j.proci.2014.05.148]
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Becker C, 2016, IEEE SOFTWARE, V33, P56, DOI 10.1109/MS.2015.158
   BOEHM BW, 1984, IEEE SOFTWARE, V1, P75, DOI 10.1109/MS.1984.233702
   BUCKLESS FA, 1990, ACCOUNT REV, V65, P933
   Calero C, 2013, 2013 2ND INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P46, DOI 10.1109/GREENS.2013.6606421
   Chitchyan R, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P533, DOI 10.1145/2889160.2889217
   Crouch S, 2013, COMPUT SCI ENG, V15, P74, DOI 10.1109/MCSE.2013.133
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Dick M, 2010, IFIP ADV INF COMM TE, V328, P248
   Druskat S, 2018, P IEEE INT C E-SCI, P25, DOI 10.1109/eScience.2018.00014
   Duboc L, 2019, INT REQUIR ENG CONF, P6, DOI 10.1109/RE.2019.00013
   Le DM, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P176, DOI 10.1109/ICSA.2018.00027
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Fernandez N.C., 2019, 2019 6 INT C ICT SUS
   Hosseini Roya, CEUR WORKSHOP PROC, V1009, P60
   I. O. for Standardization, 2016, SYST SOFTW ENG SYST
   Johann T., 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P51, DOI 10.1109/GREENS.2012.6224256
   Jones N, 2018, NATURE, V561, P163, DOI 10.1038/d41586-018-06610-y
   Kern E., 2013, 1 INT C INFORM COMMU, P87
   Kienzle J., 2019, COMMUN ACM, P1
   Klein G., 2018, JFLEX USERS MANUAL
   Koomey J.G., 2007, ESTIMATING TOTAL POW
   Koziolek H., 2011, P JOINT ACM SIGSOFT, P3, DOI DOI 10.1145/2000259.2000263
   Lami G, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P53, DOI 10.1109/IWSM-MENSURA.2012.16
   Li D., 2014, P 3 INT WORKSHOP GRE, P46, DOI DOI 10.1145/2593743.2593750
   MacCallum RC, 1996, PSYCHOL METHODS, V1, P130, DOI 10.1037/1082-989X.1.2.130
   MacDonald Ross, 2018, Advances in Artificial Intelligence. 31st Canadian Conference on Artificial Intelligence, Canadian AI 2018. Proceedings: LNAI 10832, P331, DOI 10.1007/978-3-319-89656-4_35
   Mahaux M, 2011, LECT NOTES COMPUT SC, V6606, P19, DOI 10.1007/978-3-642-19858-8_3
   Manotas I, 2016, PROC INT CONF SOFTW, P237, DOI 10.1145/2884781.2884810
   McKnight P.E., 2010, CORSINI ENCY PSYCHOL, V3, P960, DOI [DOI 10.1002/9780470479216.CORPSY0524, 10.1002/9780470479216.corpsy0524]
   Molléri JS, 2019, INFORM SOFTWARE TECH, V105, P117, DOI 10.1016/j.infsof.2018.08.008
   Nakagawa EY, 2018, J SYST SOFTWARE, V140, P1, DOI 10.1016/j.jss.2018.02.044
   Naumann S, 2011, SUSTAIN COMPUT-INFOR, V1, P294, DOI 10.1016/j.suscom.2011.06.004
   Ozkaya I., 2018, DATA DRIVEN MANAGEME
   Padhy N, 2018, INT J KNOWL-BASED IN, V22, P261, DOI 10.3233/KES-180390
   Penzenstadler B, 2013, CONF SOFTW ENG EDUC, P1, DOI 10.1109/CSEET.2013.6595231
   Perini Anna, 2007, 5th International Workshop on Comparative Evaluation in Requirements Engineering (CERE 2007), P23, DOI 10.1109/CERE.2007.1
   Pospieszny P, 2018, J SYST SOFTWARE, V137, P184, DOI 10.1016/j.jss.2017.11.066
   Reinhartz-Berger I, 2020, REQUIR ENG, V25, P47, DOI 10.1007/s00766-018-0307-0
   Saaty TL, 2003, EUR J OPER RES, V145, P85, DOI 10.1016/S0377-2217(02)00227-8
   Saputri T.R.D., 2019, P 8 INT WORKSH REQ E
   Saputri TRD, 2020, INT J SOFTW ENG KNOW, V30, P67, DOI 10.1142/S0218194020500047
   Saputri TRD, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2254
   Sedgwick P., 2010, BMJ, V340, pc2673, DOI DOI 10.1136/BMJ.C2673
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Vasileiou K, 2018, BMC MED RES METHODOL, V18, DOI 10.1186/s12874-018-0594-7
   Yu Eric., 2011, SOCIAL MODELING REQU, V11, P2011, DOI DOI 10.7551/MITPRESS/7549.003.0005
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 54
TC 18
Z9 18
U1 1
U2 38
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2021
VL 129
AR 106407
DI 10.1016/j.infsof.2020.106407
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI7BA
UT WOS:000583428200003
DA 2024-07-18
ER

PT J
AU Mo, R
   Yin, Z
AF Mo, Ran
   Yin, Zhen
TI Exploring software bug-proneness based on evolutionary clique modeling
   and analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software design; Software bug-proneness; Mining repository; Co-change
   analysis
ID MINING VERSION HISTORIES
AB Context: Even if evolutionary coupling between files has been widely used for various studies, such as change impact analysis, defect prediction, and software design analysis etc., there has little work focusing on studying the linkage among evolutionary coupled files.
   Objective: In this paper, we propose a novel model, evolutionary clique (EClique), to characterize evolutionary coupled files as maintainable groups for bug fixes, analyze their bug-proneness and examine the possible causes of the bug-proneness.
   Methods: To identify ECliques from a project, we propose two history measures to reason about the evolutionary coupling between files, and create a novel clustering algorithm. Given the evolutionary coupling information, our clustering algorithm will automatically identify ECliques in a project.
   Results: We conduct analyses on 33,099 commits of ten open source projects to evaluate the usefulness of our EClique modeling and analysis approach: (1) The results show that files involved in an EClique are more likely to share similar design characteristics and change together for resolving bugs; (2) The results also show that the identified ECliques significantly contribute to a project's bug-proneness. Meanwhile, the majority of a project's bug-proneness can be captured by just a few ECliques which only contain a small portion of files; (3) Finally, we qualitatively demonstrate that bug-prone ECliques often exhibit design problems that propagate changes among files and can potentially be the causes of bug-proneness.
   Conclusion: To reduce the bug-proneness of a software project, practitioners should pay attention to the identified ECliques, and resolve design problems embedded in these ECliques.
C1 Sch Comp Sci, Wuhan, Peoples R China.
   Hubei Prov Key Lab Artificial Intelligence & Smar, Wuhan, Peoples R China.
   [Mo, Ran] Cent China Normal Univ, Wuhan, Peoples R China.
C3 Central China Normal University
RP Mo, R (corresponding author), Cent China Normal Univ, Wuhan, Peoples R China.
EM moran@mail.ccnu.edu.cn; yinzhen0906@126.com
FU Fundamental Research Funds for the Central Universities [CCNU19TD003]
FX This work was supported by the Fundamental Research Funds for the
   Central Universities (Grant number: CCNU19TD003).
CR [Anonymous], 2007, P INT WORKSH PRINC S
   Baldwin C. Y., 2000, Design Rules: The Power of Modularity, V1
   Beck F., 2011, P 19 ACM SIGSOFT S 1, P354
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Cordy JR, 2011, CONF PROC INT SYMP C, P219, DOI 10.1109/ICPC.2011.26
   D'Ambros M, 2009, WORK CONF REVERSE EN, P135, DOI 10.1109/WCRE.2009.19
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Gethers M., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P540, DOI 10.1109/ASE.2011.6100120
   Gethers M, 2012, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2012.6227172
   Hassaine S., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P53, DOI 10.1109/ICSM.2011.6080772
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Jiang QT, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1840
   Kagdi H, 2013, EMPIR SOFTW ENG, V18, P933, DOI 10.1007/s10664-012-9233-9
   Kirbas S., 2014, P 8 ACM IEEE INT S E
   Kirbas S, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1842
   Kouroshfar E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1450, DOI 10.1109/ICSE.2013.6606741
   LISKOV B, 1988, SIGPLAN NOTICES, V23, P17, DOI 10.1145/62139.62141
   LLOYD SP, 1982, IEEE T INFORM THEORY, V28, P129, DOI 10.1109/TIT.1982.1056489
   Mo R, 2021, IEEE T SOFTWARE ENG, V47, P1008, DOI 10.1109/TSE.2019.2910856
   Mo R, 2018, INT C PROGRAM COMPRE, P297, DOI 10.1145/3196321.3196346
   Mo R, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P51, DOI 10.1109/WICSA.2015.12
   Mondal M, 2015, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSM.2015.7332455
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Rokach L, 2005, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, P321, DOI 10.1007/0-387-25465-X_15
   Schwanke R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P891, DOI 10.1109/ICSE.2013.6606638
   SHARIR M, 1981, COMPUT MATH APPL, V7, P67, DOI 10.1016/0898-1221(81)90008-0
   Silva L.L., 2014, 13 INT C MOD MODULAR, P49, DOI [10.1145/2577080., DOI 10.1145/2577080]
   Silva LL, 2015, PROC IEEE INT CONF S, P21, DOI 10.1109/ICSM.2015.7332448
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Staron Miroslaw, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P325, DOI 10.1109/SEAA.2013.9
   Steff M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P213, DOI 10.1109/MSR.2012.6224283
   von Luxburg U, 2007, STAT COMPUT, V17, P395, DOI 10.1007/s11222-007-9033-z
   Wong S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P411, DOI 10.1145/1985793.1985850
   Xia X, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P311, DOI 10.1109/SANER.2015.7081841
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 41
TC 1
Z9 2
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2020
VL 128
AR 106380
DI 10.1016/j.infsof.2020.106380
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NZ0FW
UT WOS:000576767100003
DA 2024-07-18
ER

PT J
AU Lwakatare, LE
   Raj, A
   Crnkovic, I
   Bosch, J
   Olsson, HH
AF Lwakatare, Lucy Ellen
   Raj, Aiswarya
   Crnkovic, Ivica
   Bosch, Jan
   Olsson, Helena Holmstrom
TI Large-scale machine learning systems in real-world industrial settings:
   A review of challenges and solutions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Machine learning systems; Software engineering; Industrial settings;
   Challenges; Solutions; SLR
AB Background : Developing and maintaining large scale machine learning (ML) based software systems in an in-dustrial setting is challenging. There are no well-established development guidelines, but the literature contains reports on how companies develop and maintain deployed ML-based software systems.
   Objective : This study aims to survey the literature related to development and maintenance of large scale ML -based systems in industrial settings in order to provide a synthesis of the challenges that practitioners face. In addition, we identify solutions used to address some of these challenges.
   Method : A systematic literature review was conducted and we identified 72 papers related to development and maintenance of large scale ML-based software systems in industrial settings. The selected articles were qualita-tively analyzed by extracting challenges and solutions. The challenges and solutions were thematically synthe-sized into four quality attributes: adaptability, scalability, safety and privacy. The analysis was done in relation to ML workflow, i.e. data acquisition, training, evaluation, and deployment.
   Results : We identified a total of 23 challenges and 8 solutions related to development and maintenance of large scale ML-based software systems in industrial settings including six different domains. Challenges were most often reported in relation to adaptability and scalability. Safety and privacy challenges had the least reported solutions.
   Conclusion : The development and maintenance on large-scale ML-based systems in industrial settings introduce new challenges specific for ML, and for the known challenges characteristic for these types of systems, require new methods in overcoming the challenges. The identified challenges highlight important concerns in ML system development practice and the lack of solutions point to directions for future research.
C1 [Lwakatare, Lucy Ellen; Raj, Aiswarya; Crnkovic, Ivica; Bosch, Jan] Chalmers Univ Technol, Dept Comp Sci & Engn, Horselgagen 11, S-41296 Gothenburg, Sweden.
   [Olsson, Helena Holmstrom] Malmo Univ, Dept Comp Sci & Media Technol, Nordenskioldsgatan 1, S-21119 Malmo, Sweden.
C3 Chalmers University of Technology; Malmo University
RP Lwakatare, LE (corresponding author), Chalmers Univ Technol, Dept Comp Sci & Engn, Horselgagen 11, S-41296 Gothenburg, Sweden.
EM llucy@chalmers.se
RI Olsson, Helena H/H-2193-2014
OI Ivica, Crnkovic/0000-0002-5278-755X
CR Alberti M, 2018, INT CONF FRONT HAND, P423, DOI 10.1109/ICFHR-2018.2018.00080
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   [Anonymous], 2004, PROCEDURES PERFORMIN
   Axtell TW, 2018, PROC SPIE, V10635, DOI 10.1117/12.2309547
   Baylor D, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1387, DOI 10.1145/3097983.3098021
   Breck E., 2016, REL MACH LEARN WILD
   Briand LC, 2008, INT CONF QUAL SOFTW, P3, DOI 10.1109/QSIC.2008.29
   Cai ZH, 2014, SIGMOD'14: PROCEEDINGS OF THE 2014 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1371, DOI 10.1145/2588555.2593680
   Cheng H., 2016, P 1 WORKSH DEEP LEAR, P7, DOI [DOI 10.1145/2988450.2988454, 10.1145/2988450.2988454]
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dahlmeier D, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 2, P92, DOI 10.18653/v1/P17-2015
   Dove G, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P278, DOI 10.1145/3025453.3025739
   Durelli VHS, 2019, IEEE T RELIAB, V68, P1189, DOI 10.1109/TR.2019.2892517
   Felderer M., TESTING DATA INTENSI, P129, DOI [10.1007/978-3-030-25312-7_6., DOI 10.1007/978-3-030-25312-7_6]
   Feldt R, 2018, INT WORK REAL ARTIF, P35, DOI 10.1145/3194104.3194109
   Felizardo KR, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962630
   Garousi V, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916008
   Guo TY, 2016, CIKM'16: PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P2437, DOI 10.1145/2983323.2983327
   Hatcher WG, 2018, IEEE ACCESS, V6, P24411, DOI 10.1109/ACCESS.2018.2830661
   Hazelwood K, 2018, INT S HIGH PERF COMP, P620, DOI 10.1109/HPCA.2018.00059
   Hill C, 2016, S VIS LANG HUM CEN C, P162, DOI 10.1109/VLHCC.2016.7739680
   Ishikawa Fuyuki, 2019, 2019 IEEE/ACM Joint 7th International Workshop on Conducting Empirical Studies in Industry (CESI) and 6th International Workshop on Software Engineering Research and Industrial Practice (SER&IP). Proceedings, P2, DOI 10.1109/CESSER-IP.2019.00009
   Ji YJ, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P349, DOI 10.1145/3243734.3243757
   Jia YQ, 2014, PROCEEDINGS OF THE 2014 ACM CONFERENCE ON MULTIMEDIA (MM'14), P675, DOI 10.1145/2647868.2654889
   Kim M, 2018, IEEE T SOFTWARE ENG, V44, P1024, DOI 10.1109/TSE.2017.2754374
   Klaine PV, 2017, IEEE COMMUN SURV TUT, V19, P2392, DOI 10.1109/COMST.2017.2727878
   Lin SC, 2018, ACM SIGPLAN NOTICES, V53, P751, DOI [10.1145/3173162.3173191, 10.1145/3296957.3173191]
   Liu T, 2019, 24TH ASIA AND SOUTH PACIFIC DESIGN AUTOMATION CONFERENCE (ASP-DAC 2019), P506, DOI 10.1145/3287624.3288751
   Luckow A, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON BIG DATA (BIG DATA), P3759, DOI 10.1109/BigData.2016.7841045
   Lwakatare LE, 2019, LECT NOTES BUS INF P, V355, P227, DOI 10.1007/978-3-030-19034-7_14
   Masuda S, 2018, IEEE ICST WORKSHOP, P279, DOI 10.1109/ICSTW.2018.00061
   Murphy C., 2007, SEKE, V167, P52
   Nguyen G, 2019, ARTIF INTELL REV, V52, P77, DOI 10.1007/s10462-018-09679-z
   Ni Y, 2012, PROCEEDINGS OF THE 2012 INTERNATIONAL CONFERENCE ON MANAGEMENT INNOVATION AND PUBLIC POLICY (ICMIPP 2012), VOLS 1-6, P1879
   Nunes I, 2017, USER MODEL USER-ADAP, V27, P393, DOI 10.1007/s11257-017-9195-0
   Olsson HH, 2018, EUROMICRO CONF PROC, P17, DOI 10.1109/SEAA.2018.00012
   Perlich C, 2014, MACH LEARN, V95, P103, DOI 10.1007/s10994-013-5375-2
   Provost F, 1998, MACH LEARN, V30, P127, DOI 10.1023/A:1007442505281
   Rao Q, 2018, PROCEEDINGS 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR AI IN AUTONOMOUS SYSTEMS (SEFAIAS), P35, DOI 10.1145/3194085.3194087
   Renggli C., 2019, ARXIV190300278
   Saitta L, 1998, MACH LEARN, V30, P133, DOI 10.1023/A:1007448122119
   Sculley D., 2015, ADV NEURAL INF PROCE, P2503, DOI DOI 10.5555/2969442.2969519
   Sculley D., 2014, P 2014 NIPS 1 WORKSH
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tosun A., 2009, P 5 INT C PRED MOD S, P11
   Tsai W. T., 1988, 1988 IEEE Workshop on Languages for Automation: Symbiotic and Intelligent Robots (Cat. No.88CH2636-9), P2, DOI 10.1109/LFA.1988.24945
   Vartak M., 2016, P WORKSHOP HUMAN IN, P1, DOI [10.1145/2939502.2939516, DOI 10.1145/2939502.2939516]
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1857, DOI 10.1109/TSE.2019.2937083
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang K, 2017, CAMB MG MEC, P1, DOI [10.1007/s10586-017-1443-x, 10.1017/9781139024853, 10.1109/ICC.2017.7997360]
   Zinkevich M., 2017, Rules of machine learning: best practices for ML engineering
NR 52
TC 59
Z9 60
U1 4
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2020
VL 127
AR 106368
DI 10.1016/j.infsof.2020.106368
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NR0EE
UT WOS:000571236700012
DA 2024-07-18
ER

PT J
AU Yang, WH
   Pan, MX
   Zhou, Y
   Huang, ZQ
AF Yang, Wenhua
   Pan, Minxue
   Zhou, Yu
   Huang, Zhiqiu
TI Developer portraying: A quick approach to understanding developers on
   OSS platforms
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Developer portraits; OSS Platforms; Developer characterization;
   Collaborative software development; Code analysis
ID RECOMMENDATION
AB Context: Millions of software developers are using open-source software (OSS) platforms to host their code and collaborate with each other. They possess different programming skills, styles, and preferences, etc., and it is important to understand them for making collaborative decisions such as programming task assignment. Existing OSS platforms do not provide sufficient information about developers, and we need to spend significant effort in searching the OSS platforms for such information.
   Objective: Different than the basic developer information displayed on OSS platforms, we propose portraying developers as a quick approach for characterizing and understanding them. We discuss how to build developer portraits to make them concise yet informative.
   Method: We propose a mull-dimensional developer portrait model to specify the attributes of various aspects concerning software development about developers. Then, a method that leverages text analysis, web data analysis, and code analysis techniques is presented to analyze a developer's various sources of data on OSS platforms for constructing the portrait.
   Results: The constructed portraits can be vividly displayed on the web to help people quickly understand developers and make better decisions during collaborative software development. Case studies on two representative problems in the software engineering area-code recommendation and programming task assignment-are conducted, and the results show the improvement in recommendation and the potential for proper assignments when using our portraits.
   Conclusion: The developer portrait is an effective form to characterize developers. It can help people quickly understand the developers and can be applied to various applications in the software development process.
C1 [Yang, Wenhua; Zhou, Yu; Huang, Zhiqiu] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
   [Yang, Wenhua; Pan, Minxue] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Yang, Wenhua] Nanjing Univ, Collaborat Innovat Ctr Novel Software Technol & I, Nanjing, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics; Nanjing University;
   Nanjing University
RP Yang, WH (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.; Yang, WH (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.; Yang, WH (corresponding author), Nanjing Univ, Collaborat Innovat Ctr Novel Software Technol & I, Nanjing, Peoples R China.
EM ywh@nuaa.edu.cn; mxp@nju.edu.cn; zhouyu@nju.edu.cn; zqhuang@nuaa.edu.cn
RI Pan, Minxue/AIC-5169-2022
OI Zhou, Yu/0000-0002-3723-7584
FU National Key R&D Program of China [2018YFB1003900]; National Natural
   Science Foundation of China [61802179, 61972197, 61972193]; Natural
   Science Foundation of Jiangsu Province [BK20170809]
FX We thank Yuyu Zhang for his help in implementing the prototype. This
   work was supported in part by the National Key R&D Program of China (No.
   2018YFB1003900), the National Natural Science Foundation of China (Nos.
   61802179, 61972197, 61972193), and the Natural Science Foundation of
   Jiangsu Province (No. BK20170809).
CR Ai L, 2019, P INT COMP SOFTW APP, P27, DOI 10.1109/COMPSAC.2019.00014
   Allamanis M, 2018, IEEE T SOFTWARE ENG, V44, P651, DOI 10.1109/TSE.2018.2832048
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   Amor JuanJose., 2006, Proceedings of the 2006 International Workshop on Economics Driven Software Engineering Research, EDSER'06, P3
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2008, HICSS 08 P PROCEEDIN, DOI DOI 10.1109/HICSS.2008.58
   Bafatakis Nikolaos, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P210, DOI 10.1109/MSR.2019.00042
   Bajracharya S, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P111, DOI 10.1109/MSR.2009.5069489
   Carver JC, 2014, EMPIR SOFTW ENG, V19, P267, DOI 10.1007/s10664-013-9290-8
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Fenton TR, 2014, PERINATAL GROWTH AND NUTRITION, P3
   Hauff C, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P362, DOI 10.1109/MSR.2015.41
   Tran H, 2019, PROC INT CONF SOFTW, P1165, DOI 10.1109/ICSE.2019.00119
   Hoan AN, 2010, ACM SIGPLAN NOTICES, V45, P302, DOI 10.1145/1932682.1869486
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Jiang H, 2019, IEEE T SERV COMPUT, V12, P34, DOI 10.1109/TSC.2016.2592909
   Juristo N., 2010, BASICS SOFTWARE ENG
   Kernighan BrianW., 1982, ELEMENTS PROGRAMMING
   Krishnan R., 2007, ACM SIGSOFT SOFTW EN, V32, P5, DOI [10.1145/1281421.1281427, DOI 10.1145/1281421.1281427]
   Lee T, 2013, Int. J. Softw. Eng. Appl, V7, P413
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Niu HR, 2017, J SYST SOFTWARE, V129, P127, DOI 10.1016/j.jss.2016.07.026
   Ponzanelli L, 2017, PROC INT CONF SOFTW, P94, DOI 10.1109/ICSE.2017.17
   Qiaona Hong, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P323, DOI 10.1109/ICSM.2011.6080799
   Surian D., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P269, DOI 10.1109/WCRE.2010.38
   Vasilescu B, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3106237.3106289
   Wang JY, 2004, PROC INT CONF DATA, P79, DOI 10.1109/ICDE.2004.1319986
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Xuan JF, 2012, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2012.6227209
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
   Zou WQ, 2019, EMPIR SOFTW ENG, V24, P3871, DOI 10.1007/s10664-019-09720-x
NR 35
TC 4
Z9 5
U1 1
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2020
VL 125
AR 106336
DI 10.1016/j.infsof.2020.106336
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LT0FE
UT WOS:000536752100008
DA 2024-07-18
ER

PT J
AU Jiang, Y
   Lu, PC
   Su, XH
   Wang, TT
AF Jiang, Yuan
   Lu, Pengcheng
   Su, Xiaohong
   Wang, Tiantian
TI LTRWES: A new framework for security bug report detection
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Security bug report; Content-based filtering; Word embedding; Machine
   learning
ID CLASSIFICATION; PREDICTION
AB Context: Security bug reports (SBRs) usually contain security-related vulnerabilities in software products, which could be exploited by malicious attackers. Hence, it is important to identify SBRs quickly and accurately among bug reports (BRs) that have been disclosed in bug tracking systems. Although a few methods have been already proposed for the detection of SBRs, challenging issues still remain due to noisy samples, class imbalance and data scarcity.
   Object: This motivates us to reveal the potential challenges faced by the state-of-the-art SBRs prediction methods from the viewpoint of data filtering and representation. Furthermore, the purpose of this paper is also to provide a general framework and new solutions to solve these problems.
   Method: In this study, we propose a novel approach LTRWES that incorporates learning to rank and word embedding into the identification of SBRs. Unlike previous keyword-based approaches, LTRWES is a content-based data filtering and representation framework that has several desirable properties not shared in other methods. Firstly, it exploits ranking model to efficiently filter non-security bug reports (NSBRs) that have higher content similarity with respect to SBRs. Secondly, it applies word embedding technology to transform the rest of NSBRs, together with SBRs, into low-dimensional real-value vectors.
   Result: Experiment results on benchmark and large real-world datasets show that our proposed method outperforms the state-of-the-art method.
   Conclusion: Overall, the LTRWES is valid with high performance. It will help security engineers to identify SBRs from thousands of NSBRs more accurately than existing algorithms. Therefore, this will positively encourage the research and development of the content-based methods for security bug report detection.
C1 [Jiang, Yuan; Lu, Pengcheng; Su, Xiaohong; Wang, Tiantian] Harbin Inst Technol, Sch Comp Sci & Technol, Harbin, Heilongjiang, Peoples R China.
C3 Harbin Institute of Technology
RP Jiang, Y; Su, XH (corresponding author), Harbin Inst Technol, Sch Comp Sci & Technol, Harbin, Heilongjiang, Peoples R China.
EM jiangyuan@hit.edu.cn; pclu57@gmail.com; sxh@hit.edu.cn; sweetwtt@126.com
RI Jiang, Yuan/GZK-7222-2022
OI Jiang, Yuan/0000-0002-3052-1320
FU National Natural Science Foundation of China [61672191]; 13th Five-Year"
   National Science and Technology Major Project of China [2017YFC0702204]
FX This work was supported by the National Natural Science Foundation of
   China (Grant Nos.61672191) and "the 13th Five-Year" National Science and
   Technology Major Project of China (Grant No. 2017YFC0702204).
CR Lam AN, 2015, IEEE INT CONF AUTOM, P476, DOI 10.1109/ASE.2015.73
   [Anonymous], [No title captured]
   [Anonymous], 2017, CORR
   [Anonymous], [No title captured]
   [Anonymous], 1992, Springer Series in Statistics, DOI DOI 10.1007/978-1-4612-4380-9_16
   [Anonymous], 2015, J. Comput. Sci. Coll.
   Burges C., 2005, ICML, P89
   Dai XF, 2017, IEEE SOUTHEASTCON
   Deshmukh J, 2017, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME.2017.69
   Fumera G., 2002, Structural, Syntactic, and Statistical Pattern Recognition. Joint IAPR International Workshops SSPR 2002 and SPR 2002 (Lecture Notes in Computer Science Vol. 2396), P424
   Fumera G, 2005, IEEE T PATTERN ANAL, V27, P942, DOI 10.1109/TPAMI.2005.109
   Gegick Michael, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P11, DOI 10.1109/MSR.2010.5463340
   Glorot X., 2010, P INT C ART INT STAT, P249
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   Goseva-Popstojanova K, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P344, DOI 10.1109/QRS.2018.00047
   Ikonomakis M., 2005, WSEAS Transactions on Computers, V4, P966
   Japkowicz N., 2011, Evaluating Learning Algorithms A Classification Perspective, V211, P224, DOI DOI 10.1017/CBO9780511921803
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Lazar A, 2014, P 11 WORK C MIN SOFT, P392, DOI [DOI 10.1145/2597073.2597128, 10.1145/2597073.2597128]
   Liu TY, 2011, LEARNING TO RANK FOR INFORMATION RETRIEVAL, P1, DOI 10.1007/978-3-642-14267-3
   Ma Chenglong., 2015, Proceedings of NAACL-HLT, P33
   Mani S, 2019, PROCEEDINGS OF THE 6TH ACM IKDD CODS AND 24TH COMAD, P171, DOI 10.1145/3297001.3297023
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Mikolov T., 2013, INT C LEARN REPR SCO, DOI 10.48550/ARXIV.1301.3781
   Morrison P, 2018, PROC IEEE ACM INT C, P426, DOI 10.1145/3183440.3195040
   Ohira M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P518, DOI 10.1109/MSR.2015.78
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Robertson SE, 1997, J DOC, V53, P3, DOI 10.1108/EUM0000000007186
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   SEWELL M., 2008, Ensemble learning, V11
   Shanahan JG, 2003, LECT NOTES ARTIF INT, V2837, P361
   Su W., 2015, P INT C THEOR INF RE, P349, DOI 10.1145/2808194.2809481
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Taylor Michael, 2006, Proceedings of the 15th ACM international conference on Information and knowledge management, CIKM '06, P585
   Whitley E, 2002, CRIT CARE, V6, P509, DOI 10.1186/cc1820
   Wijayasekara D, 2014, IEEE IND ELEC, P3612, DOI 10.1109/IECON.2014.7049035
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Yang XL, 2016, P INT COMP SOFTW APP, P227, DOI 10.1109/COMPSAC.2016.67
   Ye X, 2016, IEEE T SOFTWARE ENG, V42, P379, DOI 10.1109/TSE.2015.2479232
   You GA, 2016, INT J SOFTW ENG KNOW, V26, P1511, DOI 10.1142/S0218194016400155
   Yuan Tian, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P215, DOI 10.1109/WCRE.2012.31
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
   Zhang T, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1553, DOI 10.1145/2695664.2695872
   Zhang T, 2016, J SYST SOFTWARE, V117, P166, DOI 10.1016/j.jss.2016.02.034
   Zou DQ, 2018, LECT NOTES COMPUT SC, V10946, P619, DOI 10.1007/978-3-319-93638-3_35
NR 46
TC 16
Z9 18
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2020
VL 124
AR 106314
DI 10.1016/j.infsof.2020.106314
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LP3MD
UT WOS:000534222000003
DA 2024-07-18
ER

PT J
AU Zhang, J
   Li, JY
AF Zhang, Jin
   Li, Jingyue
TI Testing and verification of neural-network-based safety-critical control
   software: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software testing and verification; Neural network; Safety-critical
   control software; Systematic literature review
ID CYBER-PHYSICAL SYSTEMS; CHALLENGES; VALIDATION; FRAMEWORK; SECURITY;
   FUTURE; MODEL
AB Context: Neural Network (NN) algorithms have been successfully adopted in a number of Safety-Critical Cyber-Physical Systems (SCCPSs). Testing and Verification (T&V) of NN-based control software in safety-critical domains are gaining interest and attention from both software engineering and safety engineering researchers and practitioners.
   Objective: With the increase in studies on the T&V of NN-based control software in safety-critical domains, it is important to systematically review the state-of-the-art T&V methodologies, to classify approaches and tools that are invented, and to identify challenges and gaps for future studies.
   Method: By searching the six most relevant digital libraries, we retrieved 950 papers on the T&V of NN-based Safety-Critical Control Software (SCCS). Then we filtered the papers based on the predefined inclusion and exclusion criteria and applied snowballing to identify new relevant papers.
   Results: To reach our result, we selected 83 primary papers published between 2011 and 2018, applied the thematic analysis approach for analyzing the data extracted from the selected papers, presented the classification of approaches, and identified challenges.
   Conclusion: The approaches were categorized into five high-order themes, namely, assuring robustness of NNs, improving the failure resilience of NNs, measuring and ensuring test completeness, assuring safety properties of NN-based control software, and improving the interpretability of NNs. From the industry perspective, improving the interpretability of NNs is a crucial need in safety-critical applications. We also investigated nine safety integrity properties within four major safety lifecycle phases to investigate the achievement level of T&V goals in IEC 61508-3. Results show that correctness, completeness, freedom from intrinsic faults, and fault tolerance have drawn most attention from the research community. However, little effort has been invested in achieving repeatability, and no reviewed study focused on precisely defined testing configuration or defense against common cause failure.
C1 [Zhang, Jin; Li, Jingyue] Norwegian Univ Sci & Technol, Comp Sci Dept, Trondheim, Norway.
   [Zhang, Jin] Southwest Jiaotong Univ, Sch Informat Sci & Technol, Chengdu, Peoples R China.
C3 Norwegian University of Science & Technology (NTNU); Southwest Jiaotong
   University
RP Li, JY (corresponding author), Norwegian Univ Sci & Technol, Comp Sci Dept, Trondheim, Norway.
EM jin.zhang@ntnu.no; jingyue.li@ntnu.no
OI Li, Jingyue/0000-0002-7958-391X
FU Safety, autonomy, remote control and operations of industrial transport
   systems (SAREPTA) project - Norwegian Research Council [267860];
   Management of safety and security risks for cyber-physical systems
   project - Norwegian University of Technolgy; Technical University of
   Denmark [IE-053-2017]
FX The authors would like to thank Weifeng Liu for commenting on and
   improving this paper. This work is supported by the Safety, autonomy,
   remote control and operations of industrial transport systems (SAREPTA)
   project, which is financed by the Norwegian Research Council with grant
   no. 267860. This work is also supported by the Management of safety and
   security risks for cyber-physical systems project, which is financed by
   the Norwegian University of Technolgy in collaboration with the
   Technical University of Denmark, grant no. IE-053-2017.
CR Adadi A, 2018, IEEE ACCESS, V6, P52138, DOI 10.1109/ACCESS.2018.2870052
   ADRION WR, 1982, COMPUT SURV, V14, P159, DOI 10.1145/356876.356879
   Nguyen A, 2015, PROC CVPR IEEE, P427, DOI 10.1109/CVPR.2015.7298640
   [Anonymous], ARXIV161107429
   [Anonymous], ARXIV170405396
   [Anonymous], 2003, The Oxford companion to the history of modern science
   [Anonymous], TECHNICAL REPORT
   [Anonymous], MOB SENS FUT
   [Anonymous], TECHNICAL REPORT
   [Anonymous], NVID DRIV SCAL PLATF
   [Anonymous], TECHNICAL REPORT
   [Anonymous], ARXIV170300410
   [Anonymous], YOUR TESL IS LEARN D
   [Anonymous], 2014, WORKSHOP INT C LEARN
   [Anonymous], IEC615082005
   [Anonymous], TECHNICAL REPORT
   [Anonymous], ARXIV170906662
   [Anonymous], ARXIV170700051
   [Anonymous], TESL VEH SAF REP
   [Anonymous], P 6 INT C EMB REAL T
   [Anonymous], NUCL EN SER INT AT E
   [Anonymous], MEDTR IN US LAUNCH W
   [Anonymous], AI MED DEV 3 EM IND
   [Anonymous], P INT C LEARN REPR 2
   [Anonymous], 2011, ISO 262622011
   [Anonymous], ARXIV180703571
   [Anonymous], ARXIV180105950
   [Anonymous], 2013, Computational Intelligence, DOI DOI 10.1007/978-1-4471-5013-8_5
   [Anonymous], ARXIV180304042
   [Anonymous], 2017, ARXIV170505264
   [Anonymous], PARTN INN ACC AUT BR
   [Anonymous], TECHNICAL REPORT
   [Anonymous], GOOGLE SUPERCHARGES
   [Anonymous], GOOGLE SELF DRIVING
   [Anonymous], ARXIV171003107
   [Anonymous], 2014, J3016 SAE
   Arpteg A, 2018, EUROMICRO CONF PROC, P50, DOI 10.1109/SEAA.2018.00018
   Ashmore R, 2018, LECT NOTES COMPUT SC, V11094, P393, DOI 10.1007/978-3-319-99229-7_33
   Aven T, 2007, RELIAB ENG SYST SAFE, V92, P745, DOI 10.1016/j.ress.2006.03.008
   Bach S, 2016, IEEE IMAGE PROC, P2271, DOI 10.1109/ICIP.2016.7532763
   Bach S, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0130140
   Barrett C.W., 2018, Handbook of Model Checking, P305, DOI DOI 10.1007/978-3-319-10575-8_11
   Bastani O, 2016, ADV NEUR IN, V29
   Bastani Osbert, 2017, ARXIV170609773
   Bojarski M, 2016, Arxiv, DOI [arXiv:1604.07316, 10.48550/arXiv.1604.07316]
   Borkar S, 2005, IEEE MICRO, V25, P10, DOI 10.1109/MM.2005.110
   Bose BK, 2007, IEEE T IND ELECTRON, V54, P14, DOI 10.1109/TIE.2006.888683
   Bose BK, 2017, P IEEE, V105, P2262, DOI 10.1109/JPROC.2017.2756596
   Bothe MK, 2013, EXPERT REV MED DEVIC, V10, P661, DOI 10.1586/17434440.2013.827515
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Che ZhengpingSanjay Purushotham., 2015, Distilling knowledge from deep networks with applications to healthcare domain
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dabkowski P., 2017, ADV NEUR IN, P6967
   Daftry S, 2016, 2016 IEEE/RSJ INTERNATIONAL CONFERENCE ON INTELLIGENT ROBOTS AND SYSTEMS (IROS 2016), P1743, DOI 10.1109/IROS.2016.7759279
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Dong YP, 2017, PROC CVPR IEEE, P975, DOI 10.1109/CVPR.2017.110
   dos Santos FF, 2017, I C DEPENDABLE SYST, P169, DOI 10.1109/DSN-W.2017.47
   Dosovitskiy A., 2017, P 1 ANN C ROB LEARN, P1, DOI DOI 10.48550/ARXIV.1711.03938
   Dreossi T, 2017, LECT NOTES COMPUT SC, V10227, P357, DOI 10.1007/978-3-319-57288-8_26
   Dutta S, 2017, Arxiv, DOI arXiv:1709.09130
   Ehlers R, 2017, LECT NOTES COMPUT SC, V10482, P269, DOI 10.1007/978-3-319-68167-2_19
   El Mhamdi E, 2017, SYM REL DIST SYST, P84, DOI 10.1109/SRDS.2017.21
   Falcini F, 2017, COMM COM INF SC, V770, P279, DOI 10.1007/978-3-319-67383-7_21
   Falcini F, 2017, IEEE INT SYMP SOFTW, P286, DOI 10.1109/ISSREW.2017.45
   Falcini F, 2017, IEEE SOFTWARE, V34, P56, DOI 10.1109/MS.2017.79
   Fong RC, 2017, IEEE I CONF COMP VIS, P3449, DOI 10.1109/ICCV.2017.371
   Frosst N., 2017, P 1 INT WORKSH COMPR, V2071
   Goodfellow I. J., 2015, 3 INT C LEARNING REP
   Gopinath Divya, 2017, ARXIV171000486
   Greenspan H, 2016, IEEE T MED IMAGING, V35, P1153, DOI 10.1109/TMI.2016.2553401
   Griessnig G, 2017, COMM COM INF SC, V748, P535, DOI 10.1007/978-3-319-64218-5_44
   Gu S, 2015, 3TH INT C LEARN REPR
   Guidotti R., 2018, ARXIV PREPRINT ARXIV
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Guo WB, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P364, DOI 10.1145/3243734.3243792
   Hains G., 2018, SYSTEMS C SYSCON 201, P1
   Hinton G, 2015, Arxiv, DOI arXiv:1503.02531
   Hohman F, 2019, IEEE T VIS COMPUT GR, V25, P2674, DOI 10.1109/TVCG.2018.2843369
   HOSKINS JC, 1992, COMPUT CHEM ENG, V16, P241, DOI 10.1016/0098-1354(92)80045-B
   Huang XW, 2017, LECT NOTES COMPUT SC, V10426, P3, DOI 10.1007/978-3-319-63387-9_1
   Humayed A, 2017, IEEE INTERNET THINGS, V4, P1802, DOI 10.1109/JIOT.2017.2703172
   Johnson T. T., 2017, ARXIV171208163
   Katz G, 2017, ELECTRON P THEOR COM, P19, DOI 10.4204/EPTCS.257.3
   Katz G, 2017, LECT NOTES COMPUT SC, V10426, P97, DOI 10.1007/978-3-319-63387-9_5
   Khan S, 2018, 2018 THIRD INTERNATIONAL CONFERENCE ON FOG AND MOBILE EDGE COMPUTING (FMEC), P283, DOI 10.1109/FMEC.2018.8364080
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kriaa S, 2015, RELIAB ENG SYST SAFE, V139, P156, DOI 10.1016/j.ress.2015.02.008
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Lee EA, 2015, SENSORS-BASEL, V15, P4837, DOI 10.3390/s150304837
   Leveson NG, 2011, ENG SYST, P1
   Levin S, 2018, The Guardian, V19
   Li GP, 2017, SC'17: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/3126908.3126964
   Li GP, 2016, SC '16: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, P240, DOI 10.1109/SC.2016.20
   Lillicrap, 2015, ARXIV150902971, P1
   Linsley D., 2018, ARXIV180508819
   Lundberg SM, 2017, ADV NEUR IN, V30
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Mahendran A, 2015, PROC CVPR IEEE, P5188, DOI 10.1109/CVPR.2015.7299155
   Mallozzi P, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR COGNITIVE SERVICES (SE4COG), P37, DOI 10.1145/3195555.3195558
   Marques-Silva JP, 1999, IEEE T COMPUT, V48, P506, DOI 10.1109/12.769433
   McCulloch W.S., 1943, B MATH BIOPHYS, V5, P115, DOI 10.1007/BF02478259
   Melis M, 2017, IEEE INT CONF COMP V, P751, DOI 10.1109/ICCVW.2017.94
   Metzen J.H., 2017, 5 INT C LEARN REPR I
   Miller Charlie., 2015, Car hacking: for poories
   Montavon G, 2017, PATTERN RECOGN, V65, P211, DOI 10.1016/j.patcog.2016.11.008
   Moskewicz MW, 2001, DES AUT CON, P530, DOI 10.1109/DAC.2001.935565
   Nguyen A., 2016, ADV NEURAL INFORM PR, P3387, DOI DOI 10.5555/3157382.3157477
   Nguyen PH, 2017, INFORM SOFTWARE TECH, V83, P116, DOI 10.1016/j.infsof.2016.11.004
   Novak T, 2008, IEEE INT C EMERG, P311, DOI 10.1109/ETFA.2008.4638412
   O'Kelly M, 2017, 2017 RESILIENCE WEEK (RWS), P90, DOI 10.1109/RWEEK.2017.8088654
   Papernot N, 2016, Arxiv, DOI arXiv:1511.04508
   Papernot N, 2016, 1ST IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY, P372, DOI 10.1109/EuroSP.2016.36
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pulina L, 2012, AI COMMUN, V25, P117, DOI 10.3233/AIC-2012-0525
   Pulina L, 2011, ANN MATH ARTIF INTEL, V62, P403, DOI 10.1007/s10472-011-9243-0
   PYMNTS. com, 2017, TECHNICAL REPORT
   Raj S, 2017, 2017 INTERNATIONAL CONFERENCE ON EMBEDDED SOFTWARE (EMSOFT), DOI 10.1145/3125503.3125568
   Rajkumar R, 2010, DES AUT CON, P731
   Rhazali K, 2018, IFAC PAPERSONLINE, V51, P31, DOI 10.1016/j.ifacol.2018.09.525
   Ribeiro S., 2018, AAAI Conf. Artif. Intell., V32, P1, DOI 10.1609/aaai.v32i1.11491
   Robertson G, 2011, J ELECTR COMPUT ENG, V2011, DOI 10.1155/2011/681786
   Rodvold D. M., 1999, IJCNN'99. International Joint Conference on Neural Networks. Proceedings (Cat. No.99CH36339), P3317, DOI 10.1109/IJCNN.1999.836192
   ROSENBLATT F, 1958, PSYCHOL REV, V65, P386, DOI 10.1037/h0042519
   Ross AS, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2662
   Rubaiyat AM, 2018, IEEE PAC RIM INT SYM, P54, DOI 10.1109/PRDC.2018.00016
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Santra A, 2017, ADV GEOSPAT TECH, P1, DOI 10.4018/978-1-5225-1814-3
   Scheibler K., 2015, MBMV, P30
   Schorn C, 2018, DES AUT TEST EUROPE, P979, DOI 10.23919/DATE.2018.8342151
   Shaham Uri, 2015, ARXIV151105432
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Shalev-Shwartz S., 2017, arXiv
   Shrikumar A, 2017, PR MACH LEARN RES, V70
   Smilkov D., 2017, ARXIV170603825
   Spielberg SPK, 2017, 2017 6TH INTERNATIONAL SYMPOSIUM ON ADVANCED CONTROL OF INDUSTRIAL PROCESSES (ADCONIP), P201, DOI 10.1109/ADCONIP.2017.7983780
   Stoneburner G, 2006, COMPUTER, V39, P96, DOI 10.1109/MC.2006.283
   Sundararajan M, 2017, PR MACH LEARN RES, V70
   Szegedy C, 2014, Arxiv, DOI [arXiv:1312.6199, DOI 10.1109/CVPR.2015.7298594]
   Tan S., 2018, Learning global additive explanations for neural nets using model distillation
   Taylor B, 2003, P SOC PHOTO-OPT INS, V5103, P8, DOI 10.1117/12.487527
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   van Gerven M., 2018, ARTIFICIAL NEURAL NE
   Vishnukumar HJ, 2017, PROCEEDINGS OF THE 2017 INTELLIGENT SYSTEMS CONFERENCE (INTELLISYS), P714, DOI 10.1109/IntelliSys.2017.8324372
   Wicker M, 2018, LECT NOTES COMPUT SC, V10805, P408, DOI 10.1007/978-3-319-89960-2_22
   Xiang WM, 2018, IEEE T NEUR NET LEAR, V29, P5777, DOI 10.1109/TNNLS.2018.2808470
   Xu WL, 2017, Arxiv, DOI [arXiv:1704.01155, 10.48550/arXiv.1704.01155]
   Yadron D., 2016, The Guardian
   Zeiler MD, 2014, LECT NOTES COMPUT SC, V8689, P818, DOI 10.1007/978-3-319-10590-1_53
   Zhabelova G, 2012, IEEE T IND ELECTRON, V59, P2351, DOI 10.1109/TIE.2011.2167891
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang Q, 2015, DES AUT TEST EUROPE, P701
   Zheng S, 2016, PROC CVPR IEEE, P4480, DOI 10.1109/CVPR.2016.485
   Zhou B, 2016, PROC CVPR IEEE, P2921, DOI 10.1109/CVPR.2016.319
NR 155
TC 17
Z9 18
U1 1
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2020
VL 123
AR 106296
DI 10.1016/j.infsof.2020.106296
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK1XD
UT WOS:000530651200015
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Mashhadi, MJ
   Siddiqui, TR
   Hemmati, H
   Loewen, H
AF Mashhadi, Mohammad Jafar
   Siddiqui, Taha R.
   Hemmati, Hadi
   Loewen, Howard
TI Interactive semi-automated specification mining for debugging: An
   experience report
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Specification mining; Debugging; Interview; Semi-automated; Case study
ID MODEL; SOFTWARE
AB Context: Specification mining techniques are typically used to extract the specification of a software in the absence of (up-to-date) specification documents. This is useful for program comprehension, testing, and anomaly detection. However, specification mining can also potentially be used for debugging, where a faulty behavior is abstracted to give developers a context about the bug and help them locating it.
   Objective: In this project, we investigate this idea in an industrial setting. We propose a very basic semi-automated specification mining approach for debugging and apply that on real reported issues from an Autopilot software system from our industry partner, MicroPilot Inc. The objective is to assess the feasibility and usefulness of the approach in a real-world setting.
   Method: The approach is developed as a prototype tool, working on C code, which accept a set of relevant state fields and functions, per issue, and generates an extended finite state machine that represents the faulty behavior, abstracted with respect to the relevant context (the selected fields and functions).
   Results: We qualitatively evaluate the approach by a set of interviews (including observational studies) with the company's developers on their real-world reported bugs. The results show that (a) our approach is feasible, (b) it can be automated to some extent, and (c) brings advantages over only using their code-level debugging tools. We also compared this approach with traditional fully automated state-merging algorithms and reported several issues when applying those techniques on a real-world debugging context.
   Conclusion: The main conclusion of this study is that the idea of an "interactive" specification mining rather than a fully automated mining tool is NOT impractical and indeed is useful for the debugging use case.
C1 [Mashhadi, Mohammad Jafar; Hemmati, Hadi] Univ Calgary, Dept Elect & Comp Engn, Calgary, AB, Canada.
   [Siddiqui, Taha R.] InfoMagnet Technol Corp, Winnipeg, MB, Canada.
   [Loewen, Howard] MicroPilot Inc, Winnipeg, MB, Canada.
C3 University of Calgary
RP Hemmati, H (corresponding author), Univ Calgary, Dept Elect & Comp Engn, Calgary, AB, Canada.
EM mohammadjafar.mashha@ucalgary.ca; trsiddiqui1989@gmail.com;
   hadi.hemmati@ucalgary.ca; hloewen@micropilot.com
FU Natural Sciences and Engineering Research Council of Canada
   [CRDPJ/515254-2017]
FX This work is partially supported by the Natural Sciences and Engineering
   Research Council of Canada [CRDPJ/515254-2017].
CR Ackermann C, 2010, LECT NOTES COMPUT SC, V6418, P1, DOI 10.1007/978-3-642-16612-9_1
   Al-Sharif Z. A., 2009, THESIS
   [Anonymous], 2013, JOINT M FDN SOFTW EN
   [Anonymous], 2010, P 26 IEEE INT C SOFT, DOI DOI 10.1109/ICSM.2010.5609576
   [Anonymous], 2007, ESEC FSE 2007
   [Anonymous], 2016, Effective Debugging: 66 Specific Ways to Debug Software and Systems
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Bohme G, 2017, ATMOSPHERIC ARCHITECTURES: THE AESTHETICS OF FELT SPACES, P1
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Cheng H, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P141
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Dallmeier V., 2010, P 19 INT S SOFTWARE, P85, DOI [DOI 10.1145/1831708.1831719, 10.1145/1831708.1831719]
   Dallmeier V., 2006, P 2006 INT WORKSH DY, P17, DOI DOI 10.1145/1138912.1138918
   Dallmeier V, 2009, IEEE INT CONF AUTOM, P550, DOI 10.1109/ASE.2009.15
   Damas C, 2005, IEEE T SOFTWARE ENG, V31, P1056, DOI 10.1109/TSE.2005.138
   Dupont P, 2008, APPL ARTIF INTELL, V22, P77, DOI 10.1080/08839510701853200
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Fraser G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P300, DOI 10.1109/ICST.2012.110
   Friedrich G, 1999, ARTIF INTELL, V111, P3, DOI 10.1016/S0004-3702(99)00034-X
   Goldstein M, 2017, PROC INT SYMP SOFTW, P282, DOI 10.1109/ISSRE.2017.14
   Guest G, 2006, FIELD METHOD, V18, P59, DOI 10.1177/1525822X05279903
   Hemmati H, 2017, IEEE SYS MAN CYBERN, P3608, DOI 10.1109/SMC.2017.8123192
   Hiebert D., 1999, EXUBERANT CTAGS
   Hwa-You Hsu, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P439, DOI 10.1109/ASE.2008.68
   Isenberg T, 2013, IEEE T VIS COMPUT GR, V19, P2818, DOI 10.1109/TVCG.2013.126
   Krka I., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P179, DOI 10.1145/1810295.1810324
   Lang K. J., 1998, Grammatical Inference. 4th International Colloquium, ICGI-98. Proceedings, P1, DOI 10.1007/BFb0054059
   Le TDB, 2015, IEEE INT CONF AUTOM, P115, DOI 10.1109/ASE.2015.83
   Lemieux C, 2015, IEEE INT CONF AUTOM, P81, DOI 10.1109/ASE.2015.71
   Lo D, 2011, CH CRC DATA MIN KNOW, P1
   Lo David, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P109, DOI 10.1109/ASE.2008.21
   Lo D, 2012, AUTOMAT SOFTW ENG, V19, P423, DOI 10.1007/s10515-012-0103-x
   Lo D, 2012, J SYST SOFTWARE, V85, P2063, DOI 10.1016/j.jss.2012.04.001
   Lo D, 2009, IEEE INT CONF AUTOM, P359, DOI 10.1109/ASE.2009.19
   Lo D, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P460
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Malik H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1012, DOI 10.1109/ICSE.2013.6606651
   Maoz S, 2009, COMPUTER, V42, P28, DOI 10.1109/MC.2009.336
   MATEIS C, FR ART INT, V54, P171
   Mayer W, 2007, ELECTRON NOTES THEOR, V174, P61, DOI 10.1016/j.entcs.2006.12.030
   Nielsen J., 1990, SIGCHI Bulletin, P249
   Parmar  P., 2016, INT J COMPUTER APPL, V154, P6, DOI DOI 10.5120/IJCA2016912206
   Pradel M, 2012, PROC INT CONF SOFTW, P288, DOI 10.1109/ICSE.2012.6227185
   Shamsuddin SM, 2015, 2015 International Conference on Science in Information Technology (ICSITech), P1, DOI 10.1109/ICSITech.2015.7407766
   Shang WY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P402, DOI 10.1109/ICSE.2013.6606586
   Shoham S, 2008, IEEE T SOFTWARE ENG, V34, P651, DOI 10.1109/TSE.2008.63
   Taylor Ramsay, 2012, Testing Software and Systems. 24th IFIP WG 6.1 International Conference (ICTSS 2012). Proceedings, P184, DOI 10.1007/978-3-642-34691-0_14
   VALDES A, RECENT ADV INTRUSION, V1907, P80
   VALDES A, LECT NOTES COMPUT SC, V1907, P80
   Walkinshaw Neil, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P248, DOI 10.1109/ASE.2008.35
   Walkinshaw N, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P209, DOI 10.1109/WCRE.2007.45
   Walkinshaw N, 2016, EMPIR SOFTW ENG, V21, P811, DOI 10.1007/s10664-015-9367-7
   Walkinshaw Neil, 2018, MODEL INFERENCE TOOL
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Xia X, 2016, PROC IEEE INT CONF S, P268, DOI 10.1109/ICSME.2016.67
   Xie XY, 2016, PROC INT CONF SOFTW, P808, DOI 10.1145/2884781.2884834
   Yan Xifeng, 2008, ACM SIGMOD INT C MAN, P433, DOI DOI 10.1145/1376616.1376662
   Ziadi T., 2014, P 29 ANN ACM S APPL, P1064
   Zuo Z., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis New York, NY, USA, P215
NR 60
TC 1
Z9 1
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2019
VL 113
BP 20
EP 38
DI 10.1016/j.infsof.2019.05.002
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IE1DW
UT WOS:000472127100002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rahman, A
   Williams, L
AF Rahman, Akond
   Williams, Laurie
TI Source code properties of defective infrastructure as code scripts
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Configuration as code; Continuous deployment; Defect prediction; Devops;
   Empirical study; Infrastructure as code; Puppet
ID CLASSIFICATION; PREDICTION; ATTRIBUTES; AGREEMENT
AB Context: In continuous deployment, software and services are rapidly deployed to end-users using an automated deployment pipeline. Defects in infrastructure as code (IaC) scripts can hinder the reliability of the automated deployment pipeline. We hypothesize that certain properties of IaC source code such as lines of code and hard-coded strings used as configuration values, show correlation with defective IaC scripts.
   Objective: The objective of this paper is to help practitioners in increasing the quality of infrastructure as code (IaC) scripts through an empirical study that identifies source code properties of defective IaC scripts.
   Methodology: We apply qualitative analysis on defect-related commits mined from open source software repositories to identify source code properties that correlate with defective IaC scripts. Next, we survey practitioners to assess the practitioner's agreement level with the identified properties. We also construct defect prediction models using the identified properties for 2439 scripts collected from four datasets.
   Results: We identify 10 source code properties that correlate with defective IaC scripts. Of the identified 10 properties we observe lines of code and hard-coded string i.e. putting strings as configuration values, to show the strongest correlation with defective IaC scripts. According to our survey analysis, majority of the practitioners show agreement for two properties: include, the property of executing external modules or scripts, and hard-coded string. Using the identified properties, our constructed defect prediction models show a precision of 0.70 similar to 0.78, and a recall of 0.54 similar to 0.67.
   Conclusion: Based on our findings, we recommend practitioners to allocate sufficient inspection and testing efforts on IaC scripts that include any of the identified 10 source code properties of IaC scripts.
C1 [Rahman, Akond; Williams, Laurie] North Carolina State Univ, 890 Oval Dr, Raleigh, NC 27606 USA.
C3 North Carolina State University
RP Rahman, A (corresponding author), North Carolina State Univ, 890 Oval Dr, Raleigh, NC 27606 USA.
EM aarahman@ncsu.edu
RI Rahman, Akond/ACX-4478-2022
OI Rahman, Akond/0000-0002-5056-757X
FU National Security Agency (NSA)'s Science of Security Lablet at the North
   Carolina State University
FX We thank the practitioners for responding to our e-mails related to
   defect categorization and survey analysis. We also thank the members of
   the RealSearch group for their valuable feedback. Our research paper is
   partially supported by the National Security Agency (NSA)'s Science of
   Security Lablet at the North Carolina State University.
CR Alali A, 2008, INT C PROGRAM COMPRE, P182, DOI 10.1109/ICPC.2008.24
   [Anonymous], 2010, 1152009 IEEE, P1, DOI [DOI 10.1109/IEEESTD.2010.5439063, 10.1109/IEEESTD.2010.5439063]
   [Anonymous], 1997, An Algorithm for Suffix Stripping, page
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Charmaz K., 2006, CONSTRUCTING GROUNDE, DOI DOI 10.7748/NR.13.4.84.S4
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Cito J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P393, DOI 10.1145/2786805.2786826
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cutler DR, 2007, ECOLOGY, V88, P2783, DOI 10.1890/07-0539.1
   Freedman D., 2005, Statistical Models: Theory and Practice, DOI 10.1017/cbo9781139165495
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Garland R., 1991, Marketing bulletin, V2, P66
   Genuer R, 2010, PATTERN RECOGN LETT, V31, P2225, DOI 10.1016/j.patrec.2010.03.014
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hanappi O, 2016, ACM SIGPLAN NOTICES, V51, P328, DOI 10.1145/3022671.2984000
   Harris ZS, 1954, WORD, V10, P146, DOI 10.1080/00437956.1954.11659520
   Henningsson K, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P95
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Hummer W.etal., 2013, ProceedingsDemo:38; PosterTrackofACM/IFIP/USENIXInternationalMiddlewareConference.MiddlewareDPT '13, p4:1, DOI DOI 10.1145/2541614.2541632
   Jiang YJ, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P45, DOI 10.1109/MSR.2015.12
   Labs P., 2017, PUPPET DOCUMENTATION
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   McCune J.T., 2011, Pro Puppet, V1st, P336, DOI DOI 10.1007/978-1-4302-3058-8
   Meneely A, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P453
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Misirli A. Tosun, 2011, WOSQ 11, P26, DOI [10.1145/2024587.2024595, DOI 10.1145/2024587.2024595]
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Pandit N. R., 1996, QUAL REP, V2, P1, DOI DOI 10.46743/2160-3715/1996.2054
   Parnin C, 2017, IEEE SOFTWARE, V34, P86, DOI 10.1109/MS.2017.86
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Rahman A., 2019, ICSE 19
   Rahman A, 2019, INFORM SOFTWARE TECH, V108, P65, DOI 10.1016/j.infsof.2018.12.004
   Rahman A, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P16, DOI 10.1145/3194760.3194769
   Rahman A, 2018, IEEE INT CONF SOFTW, P34, DOI 10.1109/ICST.2018.00014
   Rahman A, 2017, 2017 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P20, DOI 10.1109/RCoSE.2017.8
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Shambaugh R, 2016, ACM SIGPLAN NOTICES, V51, P416, DOI [10.1145/2908080.2908083, 10.1145/2980983.2908083]
   Sharma T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P189, DOI [10.1109/MSR.2016.028, 10.1145/2901739.2901761]
   Tan P. N., 2005, Introduction to Data Mining
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Ur Rahman AA, 2015, 2015 AGILE CONFERENCE, P1, DOI 10.1109/Agile.2015.12
   van der Bent E, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P164, DOI 10.1109/SANER.2018.8330206
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Weiss A, 2017, IEEE INT CONF AUTOM, P625, DOI 10.1109/ASE.2017.8115673
   Zhang F, 2017, IEEE T SOFTWARE ENG, V43, P476, DOI 10.1109/TSE.2016.2599161
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zheng J, 2006, IEEE T SOFTWARE ENG, V32, P240, DOI 10.1109/TSE.2006.38
NR 60
TC 27
Z9 29
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2019
VL 112
BP 148
EP 163
DI 10.1016/j.infsof.2019.04.013
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IA9TG
UT WOS:000469899100011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kim, HS
   Lee, SW
AF Kim, Hee-Soo
   Lee, Seok-Won
TI Dependability-enhanced unified modeling and simulation methodology for
   Critical Infrastructures
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Critical Infrastructure; Modelling and simulation; Dependability
   requirements; Quality model
ID REQUIREMENTS; FRAMEWORK
AB Context: Critical infrastructures (CIs) are mission-critical, large-scale systems that provide essential products and services for everyday life. Modeling and simulation (M&S) technique is one of useful methods for understanding the complex and emergent behavior of CIs. However, the several characteristics of CIs, such as interdependence, adaptability, dependability, etc., can disturb modelers' activities to develop the quality models for CIs. The quality of these models can affect the reliability of simulation results as well as the reusability of the models in further simulations.
   Objective: In this paper, we propose a M&S methodology that aims to improve the quality of CI models by means of focusing on dependability, which is one of important characteristics of CIs.
   Method: First, we propose a system to model and simulate CIs based on discrete event system specification, a belief-desire-intention model, and a role-oriented command hierarchy model. Next, we integrate several modeling methods, such as goal modeling, agent-based modeling, and object-oriented modeling, into a unified M&S methodology (UMAS) to seamlessly develop CI models from initial requirements to final modeling artifacts. Finally, we propose a dependability-enhanced UMAS (DUMAS) that can deal with the dependability of CI models.
   Results: In our case study of applying the DUMAS into the M&S of a smart grid, we show how the DUMAS reflects the characteristics of CIs on the overall modeling artifacts.
   Conclusion: The DUMAS provides a novel method that can improve the quality of CI models through elaborating on the activities of requirements engineering with regard to the dependability of CIs. Therefore, modelers can systematically develop quality models from requirements analysis to implementation in compliance with the DUMAS.
EM heemanz@gmail.com; leesw@ajou.ac.kr
OI Kim, Hee-Soo/0000-0001-6268-7256
FU Defense Acquisition Program Administration; Defense Industry Technology
   Center, Korea [UC160003D]; Basic Science Research Program through
   National Research Foundation of Korea - Ministry of Education
   [NRF-2017R1D1A1B03034279]
FX This work was supported by Defense Acquisition Program Administration
   and Defense Industry Technology Center under the contract UC160003D,
   Korea. Also, this work was supported by Basic Science Research Program
   through the National Research Foundation of Korea funded by the Ministry
   of Education (NRF-2017R1D1A1B03034279).
CR Ali R, 2010, REQUIR ENG, V15, P439, DOI 10.1007/s00766-010-0110-z
   [Anonymous], 2003, AAMAS 2003
   [Anonymous], 2000, ICSE 00, DOI DOI 10.1145/336512.336551
   Asnar Y, 2011, REQUIR ENG, V16, P101, DOI 10.1007/s00766-010-0112-x
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Bagheri E, 2007, CNSR 2007: PROCEEDINGS OF THE FIFTH ANNUAL CONFERENCE ON COMMUNICATION NETWORKS AND SERVICES RESEARCH, P335
   Bagheri E, 2010, INFORM SYST FRONT, V12, P115, DOI 10.1007/s10796-008-9127-y
   Basili V, 2004, IEEE SOFTWARE, V21, P19, DOI 10.1109/MS.2004.30
   Bastos L., 2005, SIGSOFT SOFTWARE ENG, V30, P1, DOI DOI 10.1145/1082983.1082980
   Bhamidipati S, 2016, EUR J TRANSP INFRAST, V16, P254
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Brumbelow Kelly., 2007, World Environmental and Water Resources Congress 2007, P1, DOI DOI 10.1061/40927(243)469
   Colman A. W., 2006, ROLE ORIENTED ADAPTI
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Dobson I., 2007, J NONLINEAR SCI, V17
   Donzelli P, 2006, J SYST SOFTWARE, V79, P107, DOI 10.1016/j.jss.2005.03.011
   Donzelli P, 2004, CIC '04: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON COMMUNICATIONS IN COMPUTING, P245
   Dudenhoeffer DD, 2006, PROCEEDINGS OF THE 2006 WINTER SIMULATION CONFERENCE, VOLS 1-5, P478, DOI 10.1109/WSC.2006.323119
   Eric S. Y., 1995, THESIS
   Eusgeld I, 2011, RELIAB ENG SYST SAFE, V96, P679, DOI 10.1016/j.ress.2010.12.010
   Eusgeld I, 2009, RELIAB ENG SYST SAFE, V94, P954, DOI 10.1016/j.ress.2008.10.011
   Ferber J., 2003, Agent-Oriented Software Engineering IV. 4th International Workshop, AOSE 2003. Revised Papers. (Lecture Notes in Comput. Sci. Vol.2935), P214
   Garro A., 2012, 2012 7th International Conference on System of Systems Engineering (SoSE 2012). Proceedings, P155, DOI 10.1109/SYSoSE.2012.6384175
   Grigoryev I., 2015, ANYLOGIC 7 3 DAY QUI, P7
   Johansson J, 2010, RELIAB ENG SYST SAFE, V95, P1335, DOI 10.1016/j.ress.2010.06.010
   Kim HS, 2013, INT J SIMUL MODEL, V12, P252, DOI 10.2507/IJSIMM12(4)4.249
   Knight JC, 2004, PROC INT CONF SOFTW, P730, DOI 10.1109/ICSE.2004.1317509
   Kota R., 2011, Tenth Int. Conf. Auton. Agents Multiagent Syst, P787, DOI DOI 10.5555/2031678.2031730
   Kruchten P., 2007, P 4 INT C INF SYST C, P327
   Lee J., 1994, UM PRS IMPLEMENTATIO, P842
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   O'Rourke T.D., 2007, Bridge-Washington-National Academy of Engineering, V37, P22
   Ouyang M, 2014, RELIAB ENG SYST SAFE, V121, P43, DOI 10.1016/j.ress.2013.06.040
   Permann M., 2007, P 2007 SPRING SIMULA, V1, P169
   Rinaldi S., 2004, 37 ANN HAW INT C SYS, P1
   Rinaldi SA, 2001, IEEE CONTR SYST MAG, V21, P11, DOI 10.1109/37.969131
   Shenoi S., 2008, CRITICAL INFRASTRUCT
   Tolk A, 2013, J SIMUL, V7, P69, DOI 10.1057/jos.2013.3
   Tolone W, 2008, INT FED INFO PROC, V290, P257
   Tundis A, 2017, MOD SIMUL ENG, V2017, DOI 10.1155/2017/1578043
   van Lamsweerde A, 2000, IEEE T SOFTWARE ENG, V26, P978, DOI 10.1109/32.879820
   Wolthusen S. D., 2007, Information Security Technical Report, V12, P44, DOI 10.1016/j.istr.2007.02.005
   Yin D.R. K., 2017, Case Study Research and Applications: Design and Methods
   Zeigler BP., 2000, Theory of Modeling and Simulation
NR 44
TC 2
Z9 3
U1 0
U2 10
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2018
VL 102
BP 175
EP 192
DI 10.1016/j.infsof.2018.06.002
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO6AL
UT WOS:000440116400011
DA 2024-07-18
ER

PT J
AU Papatheocharous, E
   Wnuk, K
   Petersen, K
   Sentilles, S
   Cicchetti, A
   Gorschek, T
   Shah, SMA
AF Papatheocharous, Efi
   Wnuk, Krzysztof
   Petersen, Kai
   Sentilles, Severine
   Cicchetti, Antonio
   Gorschek, Tony
   Shah, Syed Muhammad Ali
TI The GRADE taxonomy for supporting decision-making of asset selection in
   software-intensive system development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Decision-making; Taxonomy; Knowledge management
ID ARCHITECTURE; KNOWLEDGE; DOCUMENTATION; METHODOLOGY
AB Context The development of software-intensive systems includes many decisions involving various stakeholders with often conflicting interests and viewpoints.
   Objective: Decisions are rarely systematically documented and sporadically explored. This limits the opportunity for learning and improving on important decisions made in the development of software-intensive systems.
   Method: In this work, we enable support for the systematic documentation of decisions, improve their traceability and contribute to potentially improved decision-making in strategic, tactical and operational contexts.
   Results: We constructed a taxonomy for documentation supporting decision-making, called GRADE. GRADE was developed in a research project that required composition of a common dedicated language to make feasible the identification of new opportunities for better decision support and evaluation of multiple decision alternatives. The use of the taxonomy has been validated through thirty three decision cases from industry.
   Conclusion: This paper occupies this important yet greatly unexplored research gap by developing the GRADE taxonomy that serves as a common vocabulary to describe and classify decision-making with respect to architectural assets.
C1 [Wnuk, Krzysztof; Petersen, Kai; Gorschek, Tony] Blekinge Inst Technol, Karlskrona, Sweden.
   [Papatheocharous, Efi; Shah, Syed Muhammad Ali] SICS Swedish ICT AB, Kista, Sweden.
   [Sentilles, Severine; Cicchetti, Antonio] Malardalen Univ, Vasteras, Sweden.
C3 Blekinge Institute Technology; RISE Research Institutes of Sweden;
   Malardalen University
RP Papatheocharous, E (corresponding author), SICS Swedish ICT AB, Kista, Sweden.
EM efi.papatheocharous@ri.se; krzysztof.wnuk@bth.se; kai.petersen@bth.se;
   severine.sentilles@mdh.se; antonio.cicchetti@mdh.se;
   tony.gorschek@bth.se; syed.shah@sics.se
RI ; Cicchetti, Antonio/D-2375-2015
OI Petersen, Kai/0000-0002-1532-8223; Cicchetti,
   Antonio/0000-0003-0416-1787
FU Knowledge Foundation in Sweden [20140218]
FX The authors wish to thank for their input all the researchers, experts
   and the rest of the researchers working in the ORION project. This work
   was supported in part by a grant for the ORION project from The
   Knowledge Foundation reference number (20140218) in Sweden.
CR Angles R., 2012, Proceedings of the 2012 IEEE International Conference on Data Engineering Workshops (ICDEW 2012), P171, DOI 10.1109/ICDEW.2012.31
   [Anonymous], ROLE CONCEPT BASIS D
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2008, N4098CD250102 ISOIEC
   [Anonymous], 2013, 270022013 ISOIEC
   Aurum A, 2003, INFORM SOFTWARE TECH, V45, P945, DOI 10.1016/S0950-5849(03)00096-X
   Aurum A., 2013, MANAGING SOFTWARE EN
   Badampudi D, 2016, J SYST SOFTWARE, V121, P105, DOI 10.1016/j.jss.2016.07.027
   Bayona-Oré S, 2014, SOFTWARE QUAL J, V22, P21, DOI 10.1007/s11219-012-9190-y
   BLUM BI, 1994, COMMUN ACM, V37, P82, DOI 10.1145/188280.188377
   Capilla R, 2016, J SYST SOFTWARE, V116, P191, DOI 10.1016/j.jss.2015.08.054
   Capilla R, 2011, LECT NOTES COMPUT SC, V6903, P303, DOI 10.1007/978-3-642-23798-0_33
   Cicchetti A, 2016, PROCEEDINGS 2016 1ST INTERNATIONAL WORKSHOP ON DECISION MAKING IN SOFTWARE ARCHITECTURE, P22, DOI 10.1109/MARCH.2016.11
   de Boer RC, 2007, LECT NOTES COMPUT SC, V4880, P197
   Ding W, 2014, INFORM SOFTWARE TECH, V56, P545, DOI 10.1016/j.infsof.2014.01.008
   France R., 2006, Models in Software Engineering. Workshops and Symposia at MoDELS 2006. Reports and Revised Selected Papers (Lecture Notes in Computer Science Vol.4364), P311
   Glass RL, 2009, INFORM SOFTWARE TECH, V51, P68, DOI 10.1016/j.infsof.2008.09.015
   International Organization for Standardization, 2011, ISO/IEC/IEEE 42010:2011 Systems and Software Engineering-Architecture Description
   Jansen A, 2008, J SYST SOFTWARE, V81, P536, DOI 10.1016/j.jss.2007.08.025
   Khurum M, 2013, J SOFTW-EVOL PROC, V25, P711, DOI 10.1002/smr.1560
   Kruchten P., 2004, GRON WORKSH SOFTW VA, P54
   Kruchten P, 2006, LECT NOTES COMPUT SC, V4214, P43
   Kruchten P, 2009, IEEE SOFTWARE, V26, P36, DOI 10.1109/MS.2009.52
   LARSSON R, 1993, ACAD MANAGE J, V36, P1515, DOI 10.5465/256820
   Li ZY, 2013, INFORM SOFTWARE TECH, V55, P777, DOI 10.1016/j.infsof.2012.11.005
   Mayr Christine, 2008, Formal Methods for Components and Objects. 7th International Symposium, FMCO 2008. Revised Lectures, P1
   MCCORMICK WP, 1992, COMMUN STAT THEORY, V21, P51, DOI 10.1080/03610929208830764
   Milanovic N, 2008, LECT NOTES COMPUT SC, V5301, P416, DOI 10.1007/978-3-540-87875-9_30
   Morisset C, 2014, LECT NOTES COMPUT SC, V8743, P113, DOI 10.1007/978-3-319-11851-2_8
   Nowak Marcin, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P146, DOI 10.1007/978-3-642-39031-9_13
   Papatheocharous E, 2015, ACM INT C P SERIES, V07, DOI [10.1145/2797433.2797483, DOI 10.1145/2797433.2797483]
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Regnell B., CAN WE BEAT COMPLEXI, P123, DOI [10.1007/978-3-540-69062-711, DOI 10.1007/978-3-540-69062-711]
   Sawada A, 2011, ASIA PAC SOFWR ENG, P298, DOI [10.1109/APSC.2011.36, 10.1109/APSEC.2011.36]
   Smite D, 2014, EMPIR SOFTW ENG, V19, P105, DOI 10.1007/s10664-012-9217-9
   Smrithi Rekha V., 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P185, DOI 10.1109/WICSA.2014.15
   Tan JKH., 1998, HLTH DECISION SUPPOR
   Tang A, 2010, J SYST SOFTWARE, V83, P352, DOI 10.1016/j.jss.2009.08.032
   Tofan D, 2016, INFORM SOFTWARE TECH, V72, P31, DOI 10.1016/j.infsof.2015.12.002
   Trendowicz A., 2014, SOFTWARE PROJECT EFF, P277
   Unterkalmsteiner M, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2523088
   Usman M, 2017, INFORM SOFTWARE TECH, V85, P43, DOI 10.1016/j.infsof.2017.01.006
   Vailati E., 2017, VERY FAST INTRO DECI
   van der Linden F, 2004, LECT NOTES COMPUT SC, V3154, P110
   van Heesch U, 2012, J SYST SOFTWARE, V85, P795, DOI 10.1016/j.jss.2011.10.017
   Wohlin C., 2012, Experimentation in Software Engineering
NR 48
TC 8
Z9 9
U1 0
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2018
VL 100
BP 1
EP 17
DI 10.1016/j.infsof.2018.02.007
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GJ1VN
UT WOS:000435056100001
OA Green Published
DA 2024-07-18
ER

PT J
AU Mahmood, S
   Anwer, S
   Niazi, M
   Alshayeb, M
   Richardson, I
AF Mahmood, Sajjad
   Anwer, Sajid
   Niazi, Mahmood
   Alshayeb, Mohammad
   Richardson, Ita
TI Key factors that influence task allocation in global software
   development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical study; Systematic Literature Review; Global Software
   Development; Task Allocation
ID PROCESS IMPROVEMENT; MODEL; STATE
AB Context: Planning and managing task allocation in Global Software Development (GSD) projects is both critical and challenging. To date, a number of models that support task allocation have been proposed, including cost models and risk-based multi-criteria optimization models.
   Objective: The objective of this paper is to identify the factors that influence task allocation in the GSD project management context.
   Method: First, we implemented a formal Systematic Literature Review (SLR) approach and identified a set of factors that influence task allocation in GSD projects. Second, a questionnaire survey was developed based on the SLR, and we collected feedback from 62 industry practitioners.
   Results: The findings of this combined SLR and questionnaire survey indicate that site technical expertise, time zone difference, resource cost, task dependency, task size and vendor reliability are the key criteria for the distribution of work units in a GSD project. The results of the t-test show that there is no significant difference between the findings of the SLR and questionnaire survey. However, the industry study data indicates that resource cost and task dependency are more important to a centralized GSD project structure while task size is a key factor in a decentralized GSD project structure.
   Conclusion: GSD organizations should try to consider the identified task allocation factors when managing their global software development activities to better understand, plan and manage work distribution decisions. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Mahmood, Sajjad; Anwer, Sajid; Niazi, Mahmood; Alshayeb, Mohammad] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran, Saudi Arabia.
   [Richardson, Ita] Univ Limerick, Dept Comp Sci & Informat Syst, Lero Irish Software Res Ctr, Limerick, Ireland.
C3 King Fahd University of Petroleum & Minerals; University of Limerick
RP Mahmood, S (corresponding author), King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran, Saudi Arabia.
EM smahmood@kfupm.edu.sa; g201303950@kfupm.edu.sa; mkniazi@kfupm.edu.sa;
   alshayeb@kfupm.edu.sa; ita.richardson@lero.ie
RI Niazi, Mahmood/C-8873-2015; Alshayeb, Mohammad/B-5941-2015; Mahmood,
   Sajjad/B-2295-2010
OI Richardson, Ita/0000-0002-5493-2837; Alshayeb,
   Mohammad/0000-0001-7950-0099; Mahmood, Sajjad/0000-0001-5786-5118
FU Deanship of Scientific Research at King Fand University of Petroleum and
   Minerals, Saudi Arabia [IN131013]
FX The authors would like to acknowledge the support provided by the
   Deanship of Scientific Research at King Fand University of Petroleum and
   Minerals, Saudi Arabia, under Research Grant IN131013.
CR Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Agerfalk P.J., 2008, P INT C SOFTW PROC 2
   Alba E, 2007, INFORM SCIENCES, V177, P2380, DOI 10.1016/j.ins.2006.12.020
   [Anonymous], 2008, Software Process: Improvement and Practice, DOI DOI 10.1002/SPIP.378
   [Anonymous], 1990, BASICS GROUNDED THEO
   [Anonymous], 2015, CLIN PHYTOSCIENCE, DOI DOI 10.1186/S40816-015-0013-0
   [Anonymous], P 19 INT C EV ASS SO
   Bicacro E, 2012, 2012 9TH IEEE INTERNATIONAL SYMPOSIUM ON BIOMEDICAL IMAGING (ISBI), P134, DOI 10.1109/ISBI.2012.6235502
   Binder J., 2016, GLOBAL PROJECT MANAG
   Bradstreet D., 2000, Dun Bradstreet's Barometer of Global Outsourcing
   Carmel E, 2010, J MANAGE INFORM SYST, V27, P17, DOI 10.2753/MIS0742-1222270102
   Cataldo M, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P71
   Chen J, 2016, EMPIR SOFTW ENG, V21, P1397, DOI 10.1007/s10664-015-9390-8
   Coolican H., 2019, RES METHODS STAT PSY, V7th
   Cox K, 2009, IET SOFTW, V3, P339, DOI 10.1049/iet-sen.2008.0076
   Dermeval D, 2016, REQUIR ENG, V21, P405, DOI 10.1007/s00766-015-0222-6
   Deshpande S., 2013, P 8 INT C GLOB SOFTW
   Deshpande S, 2011, LECT NOTES BUS INF P, V91, P153
   Dietrich J, 2016, EMPIR SOFTW ENG, V21, P1371, DOI 10.1007/s10664-015-9389-1
   Dillman DA., 2014, INTERNET PHONE MAIL, V4th
   Ding W, 2014, INFORM SOFTWARE TECH, V56, P545, DOI 10.1016/j.infsof.2014.01.008
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Eye V., 2006, ANAL RATER AGREEMENT
   Flint, 2001, SOC RES UPDATE, P33, DOI DOI 10.1111/J.1442-2018.2010.00541.X
   Goldman S., 1999, P 8 IEEE INT WORKSH
   Gupta A, 2011, INFORM SYST FRONT, V13, P397, DOI 10.1007/s10796-009-9226-4
   Hanssen G. K., 2011, 2011 Sixth IEEE International Conference on Global Software Engineering Workshop, P17, DOI 10.1109/ICGSE-W.2011.12
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Islam Shareeful, 2009, 2009 Fourth IEEE International Conference on Global Software Engineering, P347, DOI 10.1109/ICGSE.2009.54
   Jalote P, 2006, J SYST SOFTWARE, V79, P904, DOI 10.1016/j.jss.2005.06.040
   Keil P., 2006, PROC 2006 INT WORKSH, P7
   Kern T, 2000, J STRATEGIC INF SYST, V9, P321, DOI 10.1016/S0963-8687(00)00048-2
   Khan SU, 2011, INFORM SOFTWARE TECH, V53, P693, DOI 10.1016/j.infsof.2010.08.003
   Khan SU, 2011, J SYST SOFTWARE, V84, P686, DOI 10.1016/j.jss.2010.12.010
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kneuper R, 2008, CMMI IMPROVING SOFTW
   Kotlarsky J., 2009, MANAGING COMPONENT B
   Kroll J, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING WORKSHOPS (ICGSEW 2013), P18, DOI 10.1109/ICGSEW.2013.10
   Lacity Mary C., 2009, Strategic Outsourcing, V2, P4, DOI 10.1108/17538290910935864
   Lamersdorf A., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P15, DOI 10.1109/ICGSE.2011.10
   Lamersdorf Ansgar, 2009, 2009 Fourth IEEE International Conference on Global Software Engineering, P322, DOI 10.1109/ICGSE.2009.50
   Lamersdorf A., 2010, Journal of the Brazilian Computer Society, V16, P97, DOI [DOI 10.1007/S13173-010-0010-6, 10.1007/s13173-010-0010-6]
   Lamersdorf A, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P109, DOI 10.1109/ICGSE.2008.15
   Lamersdorf A, 2012, J SOFTW-EVOL PROC, V24, P661, DOI 10.1002/smr.576
   Lamersdorf A, 2009, INT CONF GLOBAL SOFT, P41, DOI 10.1109/ICGSE.2009.12
   Lamersdorf A, 2009, LECT NOTES BUS INF P, V32, P332
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Mahdavi-Hezavehi S, 2013, INFORM SOFTWARE TECH, V55, P320, DOI 10.1016/j.infsof.2012.08.010
   Marques AB, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P21, DOI 10.1109/ICGSE.2013.12
   McLaughlin L, 2003, IEEE SOFTWARE, V20, P104, DOI 10.1109/MS.2003.1231166
   Milewski AE, 2007, EMPIR SOFTW ENG, V12, P311, DOI 10.1007/s10664-007-9036-6
   Mockus A, 2001, IEEE SOFTWARE, V18, P30, DOI 10.1109/52.914737
   Narendra N. C., 2012, Proceedings of the 2012 Annual SRII Global Conference (SRII), P470, DOI 10.1109/SRII.2012.58
   Niazi M, 2005, 14 INT C INF SYST DE, P731
   Niazi M, 2008, LECT NOTES COMPUT SC, V5089, P427, DOI 10.1007/978-3-540-69566-0_34
   Niazi M, 2007, LECT NOTES COMPUT SC, V4589, P118
   Niazi M, 2010, INFORM SOFTWARE TECH, V52, P1204, DOI 10.1016/j.infsof.2010.06.005
   P. M. Institute, 2014, PMI PROJ MAN BOOK KN
   Palomares C, 2017, EMPIR SOFTW ENG, V22, pCP3, DOI 10.1007/s10664-016-9485-x
   Pereira T.A. B., 2010, Proceedings of the 2nd International Workshop on Recommendation Systems for Software Engineering, P36
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Raduescu C., 2014, INFORM SYSTEM DEV, P487
   Rainer A, 2002, J SYST SOFTWARE, V62, P71, DOI 10.1016/S0164-1212(01)00122-4
   Seshagiri G, 2006, IEEE SOFTWARE, V23, P63
   Setamanit SO, 2006, LECT NOTES COMPUT SC, V3966, P274
   Sharma S, 2006, IEEE SOFTWARE, V23, P62, DOI 10.1109/MS.2006.138
   Solinski A, 2016, SOFTWARE QUAL J, V24, P447, DOI 10.1007/s11219-014-9253-3
   Spreen M., 1992, Bulletin Methodologie Sociologique, V36, P34, DOI [10.1177/075910639203600103, DOI 10.1177/075910639203600103]
   Stark J, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P12, DOI 10.1109/ICGSE.2006.261211
   Trewin D., 13210 AUSTR BUR STAT
   Verner J. M., 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P2, DOI 10.1049/ic.2012.0001
   Vogt W.P., 2011, Dictionary of Statistics Methodology: A Non-Technical Guide for the Social Sciences, V4th
   Wickramaarachchi D, 2013, IEEE INT ADV COMPUT, P1443
   Wohlin C., 2012, Experimentation in Software Engineering
   Yang Q, 2015, INT J PROJ MANAG, V33, P1464, DOI 10.1016/j.ijproman.2015.06.011
   Yilmaz M., 2012, A market based approach for resolving resource constrained task allocation problems in a software development process
   Zhou YX, 2017, INT J PROJ MANAG, V35, P1052, DOI 10.1016/j.ijproman.2017.04.001
NR 77
TC 46
Z9 47
U1 2
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2017
VL 91
BP 102
EP 122
DI 10.1016/j.infsof.2017.06.009
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FG3DV
UT WOS:000410017900007
DA 2024-07-18
ER

PT J
AU Abdalkareem, R
   Shihab, E
   Rilling, J
AF Abdalkareem, Rabe
   Shihab, Emad
   Rilling, Juergen
TI On code reuse from StackOverflow: An exploratory study on Android apps
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE StackOverflow; Mobile app; Code reuse
ID SOFTWARE CHANGES
AB Context: Source code reuse has been widely accepted as a fundamental activity in software development. Recent studies showed that StackOverflow has emerged as one of the most popular resources for code reuse. Therefore, a plethora of work proposed ways to optimally ask questions, search for answers and find relevant code on StackOverflow. However, little work studies the impact of code reuse from Stack Overflow.
   Objective: To better understand the impact of code reuse from StackOverflow, we perform an exploratory study focusing on code reuse from StackOverflow in the context of mobile apps. Specifically, we investigate how much, why, when, and who reuses code. Moreover, to understand the potential implications of code reuse, we examine the percentage of bugs in files that reuse StackOverflow code.
   Method: We perform our study on 22 open source Android apps. For each project, we mine their source code and use clone detection techniques to identify code that is reused from StackOverflow. We then apply different quantitative and qualitative methods to answer our research questions.
   Results: Our findings indicate that 1) the amount of reused StackOverflow code varies for different mobile apps, 2) feature additions and enhancements in apps are the main reasons for code reuse from StackOverflow, 3) mid-age and older apps reuse StackOverflow code mostly later on in their project lifetime and 4) that in smaller teams/apps, more experienced developers reuse code, whereas in larger teams/apps, the less experienced developers reuse code the most. Additionally, we found that the percentage of bugs is higher in files after reusing code from StackOverflow.
   Conclusion: Our results provide insights on the potential impact of code reuse from StackOverflow on mobile apps. Furthermore, these results can benefit the research community in developing new techniques and tools to facilitate and improve code reuse from StackOverflow. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Abdalkareem, Rabe; Shihab, Emad] Concordia Univ, Data Driven Anal Software DAS Lab, Montreal, PQ, Canada.
   [Rilling, Juergen] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
C3 Concordia University - Canada; Concordia University - Canada
RP Abdalkareem, R (corresponding author), Concordia Univ, Data Driven Anal Software DAS Lab, Montreal, PQ, Canada.
EM rab_abdu@encs.concordia.ca; eshihab@encs.concordia.ca;
   juergen.rilling@encs.concordia.ca
RI Abdalkareem, Rabe/AET-2496-2022; Abdalkareem, Rabe/IQV-8842-2023
OI Abdalkareem, Rabe/0000-0001-9914-5434; 
CR Abdalkareem R, 2017, IEEE SOFTWARE, V34, P53, DOI 10.1109/MS.2017.31
   [Anonymous], 2007, 541 QUEENS U KINGST
   Barua A., 2012, J ESME 12, V19, P619
   Barzilay O, 2014, INFORM SOFTWARE TECH, V56, P1613, DOI 10.1016/j.infsof.2014.02.013
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Chen K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P175, DOI 10.1145/2568225.2568286
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cordeiro J., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P85, DOI 10.1109/RSSE.2012.6233418
   Davies Julius., 2011, MSR, P183, DOI DOI 10.1145/1985441.1985468
   Eyolfson J., 2011, WORKING C MINING SOF, P153, DOI DOI 10.1145/1985441.1985464
   F-Droid, 2015, FREE OPEN SOURCE AND
   Fleiss J., 2003, STAT METHODS RATES P, P598, DOI DOI 10.1002/0471445428.CH18
   German DM, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P81, DOI 10.1109/MSR.2009.5069483
   Gui JP, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P100, DOI 10.1109/ICSE.2015.32
   Inoue K, 2012, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.2012.6227181
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kawamitsu N, 2014, IEEE INT WORK C SO, P305, DOI 10.1109/SCAM.2014.17
   Koschke Rainer, 2007, DAGST SEM P
   LIM WC, 1994, IEEE SOFTWARE, V11, P23, DOI 10.1109/52.311048
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Minelli R, 2013, EUR CON SFTWR MTNCE, P144, DOI 10.1109/CSMR.2013.24
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Mojica IJ, 2014, IEEE SOFTWARE, V31, P78, DOI 10.1109/MS.2013.142
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Rahman MM, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P194, DOI 10.1109/CSMR-WCRE.2014.6747170
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Ruiz I. J. M., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P113
   Sadowski C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P191, DOI 10.1145/2786805.2786855
   Sarro F, 2015, INT REQUIR ENG CONF, P76, DOI 10.1109/RE.2015.7320410
   Shihab E., 2012, P ACM SIGSOFT 20 INT
   Syer MD, 2011, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2011.25
   Syer MarkD., 2013, Proceedings of the 2013 Conference of the Center for Advanced Studies on Collaborative Research, CASCON '13, P283
   Wang T, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P107, DOI 10.1109/SOSE.2015.34
NR 35
TC 69
Z9 78
U1 1
U2 13
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2017
VL 88
BP 148
EP 158
DI 10.1016/j.infsof.2017.04.005
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW2TI
UT WOS:000402348500009
DA 2024-07-18
ER

PT J
AU Fittkau, F
   Krause, A
   Hasselbring, W
AF Fittkau, Florian
   Krause, Alexander
   Hasselbring, Wilhelm
TI Software landscape and application visualization for system
   comprehension with ExplorViz
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software visualization; Dynamic analysis; System comprehension
ID PROGRAM COMPREHENSION
AB Context: The number of software applications deployed in organizations is constantly increasing. Those applications-often several hundreds-form large software landscapes.
   Objective: The comprehension of such landscapes and their applications is often impeded by, for instance, architectural erosion, personnel turnover, or changing requirements. Therefore, an efficient and effective way to comprehend such software landscapes is required.
   Method: In our ExplorViz visualization, we introduce hierarchical abstractions aiming at solving system comprehension tasks fast and accurately for large software landscapes. Besides hierarchical visualization on the landscape level, ExplorViz provides multi-level visualization from the landscape to the level of individual applications. The 3D application-level visualization is empirically evaluated with a comparison to the Extravis approach, with physical models and in virtual reality. To evaluate ExplorViz, we conducted four controlled experiments. We provide packages containing all our experimental data to facilitate the verifiability, reproducibility, and further extensibility of our results.
   Results: We observed a statistical significant increase in task correctness of the hierarchical visualization compared to the flat visualization. The time spent did not show any significant differences. For the comparison with Extravis, we observed that solving program comprehension tasks using ExplorViz leads to a significant increase in correctness and in less or similar time spent. The physical models improved the team-based program comprehension process for specific tasks by initiating gesture-based interaction, but not for all tasks. The participants of our virtual reality experiment with ExplorViz rated the realized gestures for translation, rotation, and selection as highly usable. However, otir zooming gesture was less favored.
   Conclusion: The results backup our claim that our hierarchical and multi-level approach enhances the current state of the art in landscape and application visualization for better software system comprehension, including new forms of interaction with physical models and virtual reality. (C) 2016 The Authors. Published by Elsevier B.V.
C1 [Fittkau, Florian; Krause, Alexander; Hasselbring, Wilhelm] Univ Kiel, Software Engn Grp, D-24098 Kiel, Germany.
   [Fittkau, Florian] PPI AG, Wall 55, D-24103 Kiel, Germany.
C3 University of Kiel
RP Fittkau, F (corresponding author), Univ Kiel, Software Engn Grp, D-24098 Kiel, Germany.; Fittkau, F (corresponding author), PPI AG, Wall 55, D-24103 Kiel, Germany.
EM florian.fittkau@gmx.de; akr@informatik.uni-kiel.de;
   hasselbring@email.uni-kiel.de
RI Hasselbring, Wilhelm/G-4794-2011
OI Hasselbring, Wilhelm/0000-0001-6625-4335
CR Alam S, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P269, DOI 10.1109/WCRE.2007.26
   [Anonymous], THESIS
   [Anonymous], 1994, ACM SIGCHI B, DOI [DOI 10.1145/191642.191652, 10.1145/191642.191652]
   [Anonymous], 1980, Winthrop computer systems series
   Basili VR, 2007, LECT NOTES COMPUT SC, V4336, P33
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Boskovic M, 2009, LECT NOTES COMPUT SC, V5795, P62, DOI 10.1007/978-3-642-04425-0_6
   Brauer P.C., 2013, P INT C MAR DAT INF, V54, P29
   Briand LC, 2006, IEEE T SOFTWARE ENG, V32, P642, DOI 10.1109/TSE.2006.96
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Brown M.B., 1974, Journal of the American Statistical Association, V69, P364, DOI DOI 10.1137/1003016
   Campbell, 2002, EXPT QUASIEXPERIMENT
   Cornelissen B, 2007, INT C PROGRAM COMPRE, P49
   Cornelissen B, 2011, IEEE T SOFTWARE ENG, V37, P341, DOI 10.1109/TSE.2010.47
   Cornelissen B, 2009, INT C PROGRAM COMPRE, P100, DOI 10.1109/ICPC.2009.5090033
   Crick T., 2014, P 2 WORKSH SUST SOFT, P1
   De Pauw W, 2005, IBM SYST J, V44, P821, DOI 10.1147/sj.444.0821
   De Pauw W, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P125
   Delimarschi D., 2014, ICPC, P126
   Di Lucca GA, 2006, INT C PROGRAM COMPRE, P229, DOI 10.1109/ICPC.2006.23
   Di Penta M, 2007, INT C PROGRAM COMPRE, P281
   Elasselbring W., 2002, Handbook of Software Engineering and Knowledge Engineering, P289
   Elliott A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P547, DOI 10.1109/ICSE.2015.191
   Fittkau F., 2015, TECH REP, P1507
   Fittkau F., 2015, EXPT DATA HIERARCHIC, DOI [10.5281/zenodo.18853, DOI 10.5281/ZENODO.18853]
   Fittkau F., 2015, EXPT DATA COMPARING, DOI [10.5281/zenodo.11611, DOI 10.5281/ZENODO.11611]
   Fittkau F., 2015, EUROPEAN C INFORM SY, P1
   Fittkau F., 2015, EXPT DATA RES PERSPE, DOI [10.5281/zenodo.18378, DOI 10.5281/ZENODO.18378]
   Fittkau F., 2014, P 2014 EUROPEAN C SO, DOI [10.1145/2642803.2642831, DOI 10.1145/2642803.2642831]
   Fittkau F., 2015, EXPT DATA EXPLORING, DOI [10.5281/zenodo.23168, DOI 10.5281/ZENODO.23168]
   Fittkau F, 2015, 2015 IEEE 3RD WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P125, DOI 10.1109/VISSOFT.2015.7332422
   Fittkau F, 2015, 2015 IEEE 3RD WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P36, DOI 10.1109/VISSOFT.2015.7332413
   Fittkau F, 2015, 2015 IEEE 3RD WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P130, DOI 10.1109/VISSOFT.2015.7332423
   Fittkau F, 2015, LECT NOTES COMPUT SC, V9306, P80, DOI 10.1007/978-3-319-24072-5_6
   Fittkau F, 2015, INT C PROGRAM COMPRE, P266, DOI 10.1109/ICPC.2015.37
   Fittkau F, 2014, 2014 TENTH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC), P58, DOI 10.1109/EDCC.2014.12
   Fittkau Florian, 2013, Proc. IEEE Working Conf. on Softw. Vis, P1
   Goldin-Meadow S., 2005, HEARING GESTURE OUR
   Hadar I., 2004, Journal of Object Technolgoy, V1, P143, DOI [10.5381/jot.2004.3.1.a3, DOI 10.5381/JOT.2004.3.1.A3]
   Hasselbring W, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P133, DOI 10.1145/2851553.2858659
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Juristo N., 2010, BASICS SOFTWARE ENG
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Knight C, 2000, IEEE INFOR VIS, P198, DOI 10.1109/IV.2000.859756
   Knoche H., 2012, P 14 WORKSH ENG WSR, V32, P45
   Koschke R, 2003, J SOFTW MAINT EVOL-R, V15, P87, DOI 10.1002/smr.270
   Lange CFJ, 2007, INT C PROGRAM COMPRE, P221
   Likert R., 1932, ARCH PSYCHOL, V140, P53
   Maletic JI, 2001, PROG COMPREHEN, P26, DOI 10.1109/WPC.2001.921711
   Marcus A, 2005, PROG COMPREHEN, P307, DOI 10.1109/WPC.2005.34
   Marwede N, 2009, EUR CON SFTWR MTNCE, P47, DOI 10.1109/CSMR.2009.15
   OECHSLE R, 2002, P 2 PROGR VIS WORKSH, P118
   Oppezzo M, 2014, J EXP PSYCHOL LEARN, V40, P1142, DOI 10.1037/a0036577
   Pacione MJ, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2004.7
   Panas T, 2003, IEEE INFOR VIS, P314, DOI 10.1109/IV.2003.1217996
   Pearson A.V., 1972, Biometrica Tables for Statisticians
   Quante J, 2008, INT C PROGRAM COMPRE, P73, DOI 10.1109/ICPC.2008.15
   Rajlich V, 1997, PROG COMPREHEN, P160, DOI 10.1109/WPC.1997.601284
   Razali N. M., 2011, J. Stat. Model. and Anal., V2, P21, DOI DOI 10.1515/BILE-2015-0008
   Schulze CD, 2014, J VISUAL LANG COMPUT, V25, P89, DOI 10.1016/j.jvlc.2013.11.005
   Sensalire M, 2009, IEEE INT WORK VIS SO, P19, DOI 10.1109/VISSOF.2009.5336431
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shneiderman B, 1996, IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P336, DOI 10.1109/VL.1996.545307
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Souza R., 2012, P 2 BRAZ WORKSH SOFT, P17
   Storey MAD, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P12, DOI 10.1109/WCRE.1997.624572
   Teyseyre AR, 2009, IEEE T VIS COMPUT GR, V15, P87, DOI 10.1109/TVCG.2008.86
   Tjortjis C, 2002, P INT COMP SOFTW APP, P427, DOI 10.1109/CMPSAC.2002.1045039
   van Hoorn A., 2009, P WARM WORKSH WUP 20, P37
   Van Hoorn A., 2012, P 3 ACM SPEC INT C P, P247, DOI DOI 10.1145/2188286.2188326
   WARE C, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P37
   Ware C., 2005, Proceedings of the 2nd Symposium on Applied Perception in Graphics and Visualization (A Corona, Spain, August 26 - 28, V95, P51, DOI DOI 10.1145/1080402.1080411
   Wettel R, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P92, DOI 10.1109/VISSOF.2007.4290706
   Wettel R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P551, DOI 10.1145/1985793.1985868
   Wohlin C., 2012, Experimentation in Software Engineering
NR 75
TC 31
Z9 34
U1 1
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2017
VL 87
BP 259
EP 277
DI 10.1016/j.infsof.2016.07.004
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EV2QD
UT WOS:000401599300017
OA hybrid
DA 2024-07-18
ER

PT J
AU Jiang, J
   Yang, Y
   He, JH
   Blanc, X
   Zhang, L
AF Jiang, Jing
   Yang, Yun
   He, Jiahuan
   Blanc, Xavier
   Zhang, Li
TI Who should comment on this pull request? Analyzing attributes for more
   accurate commenter recommendation in pull-based development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Commenter recommendation; Reviewer recommendation; Attribute selection;
   Pull-based software development
AB Context: The pull-based software development helps developers make contributions flexibly and efficiently. Commenters freely discuss code changes and provide suggestions. Core members make decision of pull requests. Both commenters and core members are reviewers in the evaluation of pull requests. Since some popular projects receive many pull requests, commenters may not notice new pull requests in time, and even ignore appropriate pull requests.
   Objective: Our objective in this paper is to analyze attributes that affect the precision and recall of commenter prediction, and choose appropriate attributes to build commenter recommendation approach. Method: We collect 19,543 pull requests, 206,664 comments and 4817 commenters from 8 popular projects in GitHub. We build approaches based on different attributes, including activeness, text similarity, file similarity and social relation. We also build composite approaches, including time-based text similarity, time-based file similarity and time-based social relation. The time-based social relation approach is the state-of-the-art approach proposed by Yu et al. Then we compare precision and recall of different approaches.
   Results: We find that for 8 projects, the activeness based approach achieves the top-3 precision of 0.276, 0.386, 0.389, 0.516, 0.322, 0.572, 0.428, 0.402, and achieves the top-3 recall of 0.475, 0.593, 0.613, 0.66, 0.644, 0.791, 0.714, 0.65, which outperforms approaches based on text similarity, file similarity or social relation by a substantial margin. Moreover, the activeness based approach achieves better precision and recall than composite approaches. In comparison with the state-of-the-art approach, the activeness based approach improves the top-3 precision by 178.788%, 30.41%, 25.08%, 41.76%, 49.07%, 32.71%, 25.15%, 78.67%, and improves the top-3 recall by 196.875%, 36.32%, 29.05%, 46.02%, 43.43%, 27.79%, 25.483%, 79.06% for 8 projects.
   Conclusion: The activeness is the most important attribute in the commenter prediction. The activeness based approach can be used to improve the commenter recommendation in code review. (C) 2017 Published by Elsevier B.V.
C1 [Jiang, Jing; Yang, Yun; He, Jiahuan; Zhang, Li] Beihang Univ, State Key Lab Software Dev Environm, Beijing, Peoples R China.
   [Blanc, Xavier] Univ Bordeaux, LaBRI, UMR 5800, F-33400 Talence, France.
C3 Beihang University; Universite de Bordeaux; Centre National de la
   Recherche Scientifique (CNRS)
RP Zhang, L (corresponding author), Beihang Univ, State Key Lab Software Dev Environm, Beijing, Peoples R China.
EM jiangjing@buaa.edu.cn; ayonel@qq.com; lightbot.johnson@gmail.com;
   xavienblanc@labri.fr; lily@buaa.edu.cn
RI Zhang, Li/AAA-9787-2020; Wang, Jingjing/B-7476-2016
OI Wang, Jingjing/0000-0003-3170-8952
FU National Natural Science Foundation of China [61300006]; State Key
   Laboratory of Software Development Environment [SKLSDE-2015ZX-24];
   Beijing Natural Science Foundation [4163074]
FX This work is supported by National Natural Science Foundation of China
   under Grant No. 61300006, and the State Key Laboratory of Software
   Development Environment under Grant No. SKLSDE-2015ZX-24, and Beijing
   Natural Science Foundation under Grant No. 4163074.
CR Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   Bird C., 2007, P 4 INT WORKSH MIN S, P1
   Bird Christian, 2008, Proceedings of the 2008 ACM SIGSOFT Symposium on the Foundations of Software Engineering, P24
   Blincoe K, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P202, DOI 10.1109/MSR.2015.26
   Bosu A., 2012, Proceedings of the 4th ACM Workshop on Evaluation and Usability of Programming Language and Tools, P17, DOI [DOI 10.1145/2414721.2414726, 10.1145/2414721.]
   Cohen E, 2006, J ALGORITHMS, V59, P19, DOI 10.1016/j.jalgor.2005.01.006
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   de Lima ML, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1567, DOI 10.1145/2695664.2695884
   Dhillon IS, 2001, MACH LEARN, V42, P143, DOI 10.1023/A:1007612920971
   Foucault M., 2015, P OF FSE
   Gousios G, 2015, P 37 ICSE FLOR IT, P1
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Hellendoorn V. J., 2015, P 12 MSR FLOR IT
   Hossan J., 2014, P INT C EL ENG INF C, V14, P1, DOI DOI 10.1109/CCECE.2014.6900912
   Hu H, 2014, PROC INT SYMP SOFTW, P122, DOI 10.1109/ISSRE.2014.17
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Jiang J, 2015, J COMPUT SCI TECH-CH, V30, P998, DOI 10.1007/s11390-015-1577-3
   Jiang J, 2013, WORK CONF REVERSE EN, P132, DOI 10.1109/WCRE.2013.6671288
   Kagdi H, 2012, J SOFTW-EVOL PROC, V24, P3, DOI 10.1002/smr.530
   Kalliamvakou E., 2014, P MSR HYD IND
   Lee JB, 2013, ASIA PAC SOFWR ENG, P1, DOI 10.1109/APSEC.2013.103
   Linares-Vásquez M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P451, DOI 10.1109/ICSM.2012.6405306
   Liu H, 2012, IEEE T SOFTWARE ENG, V38, P220, DOI 10.1109/TSE.2011.9
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   Murphy G., 2004, P 16 INT C SOFTW ENG, P1
   Nurolahzade M, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P9
   Pangsakulyanont T, 2014, INT WORKSH EMPIR ENG, P49, DOI 10.1109/IWESEP.2014.11
   Rastogi Ayushi, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P31, DOI 10.1109/APSEC.2014.88
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Robles G, 2006, INT FED INFO PROC, V203, P273
   Sedgwick P, 2012, BRIT MED J, V345, DOI 10.1136/bmj.e7201
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Vasilescu B., 2015, P OF FSE
   Wang ZZ, 2015, PROCEEDINGS 2015 SECOND IEEE INTERNATIONAL CONFERENCE ON SPATIAL DATA MINING AND GEOGRAPHICAL KNOWLEDGE SERVICES (ICSDM 2015), P119, DOI 10.1109/ICSDM.2015.7298037
   Wu WJ, 2011, ASIA PAC SOFWR ENG, P389, DOI 10.1109/APSEC.2011.15
   Xia X., 2015, P ICSME BREM GERM
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Xuan Q, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P401, DOI 10.1145/2635868.2635914
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Yu Y, 2014, PROC IEEE INT CONF S, P609, DOI 10.1109/ICSME.2014.107
   Yue Yu, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P335, DOI 10.1109/APSEC.2014.57
   Zhang W.Q., 2014, Journal of Information Science, V57, P1, DOI DOI 10.1007/S11432-014-5221-6
NR 46
TC 52
Z9 61
U1 1
U2 10
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2017
VL 84
BP 48
EP 62
DI 10.1016/j.infsof.2016.10.006
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ5IV
UT WOS:000393252400004
DA 2024-07-18
ER

PT J
AU Wu, D
   Chen, L
   Zhou, YM
   Xu, BW
AF Wu, Di
   Chen, Lin
   Zhou, Yuming
   Xu, Baowen
TI An extensive empirical study on C plus plus concurrency constructs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Programming language; C plus; Concurrency; Empirical study
ID LARGE-SCALE; DESIGN
AB Context: Nowadays concurrent programming is in large demand. The inherent support for concurrency is therefore increasingly important in programming languages. As for C++, an abundance of standard con currency constructs have been supported since C++11. However, to date there is little work investigating how these constructs are actually used in developing real software.
   Objective: In this paper, we perform an extensive empirical study to investigate the actual adoption of C++ concurrency constructs in open-source applications, with the goal to provide useful information for language designers and practitioners to improve the design and use of concurrency constructs.
   Method: We first conduct a survey to understand the developers' perception of concurrency constructs. Then, we analyze 492 open-source concurrent applications, comprising 131 million lines of C++ code, to collect the data of the practical adoption of concurrency constructs. Finally, we perform statistical analysis on the collected data and get the quantitative analysis results.
   Results: Using the experimental data, we uncover many interesting findings with respect to the usage of concurrency constructs, the management of synchronization, the relationship between standard concurrency constructs and third-party concurrency constructs, and the difference of applications in using con currency constructs. For example, we find that: (1) thread-based constructs are significantly more often used to write concurrent programs than atomics-based constructs and task-based constructs; (2) lock based constructs are significantly more often used to manage synchronization than lock-free constructs and blocking constructs; (3) developers in most projects do not move from third-party concurrency constructs to standard concurrency constructs; and (4) small-size applications introduce concurrency constructs more intensively and more quickly than medium-size applications and large-size applications.
   Conclusions: This is the first extensive empirical study on C++ concurrency constructs. The results of this paper should be helpful for designing, teaching, and using C++ concurrency constructs. (c) 2016 Elsevier B.V. All rights reserved.
C1 [Wu, Di; Chen, Lin; Zhou, Yuming; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210046, Jiangsu, Peoples R China.
   [Wu, Di; Chen, Lin; Zhou, Yuming; Xu, Baowen] Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210046, Jiangsu, Peoples R China.
C3 Nanjing University; Nanjing University
RP Xu, BW (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210046, Jiangsu, Peoples R China.; Xu, BW (corresponding author), Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210046, Jiangsu, Peoples R China.
EM bwxu@nju.edu.cn
RI Wu, Di/HNP-3772-2023; wu, di/IYS-9217-2023; Xu, Baowen/IXW-4882-2023
OI Xu, Baowen/0000-0001-7743-1296
FU National Key Basic Research and Development Program of China
   [2014CB340702]; National Natural Science Foundation of China [91418202,
   61472175, 61472178, 61432001]; National Natural Science Foundation of
   Jiangsu Province [BK20130014]; Program B for Outstanding PhD Candidates
   of Nanjing University
FX We thank the respondents who spend their time participating in our
   survey. We also thank the editor and the anonymous reviewers for their
   constructive suggestions in improving the quality of this paper. This
   work is supported by the National Key Basic Research and Development
   Program of China (2014CB340702), the National Natural Science Foundation
   of China (91418202, 61472175, 61472178, 61432001), the National Natural
   Science Foundation of Jiangsu Province (BK20130014), and the Program B
   for Outstanding PhD Candidates of Nanjing University.
CR Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Batty M, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P55, DOI 10.1145/1926385.1926394
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Blanchette JC, 2011, PPDP 11 - PROCEEDINGS OF THE 2011 SYMPOSIUM ON PRINCIPLES AND PRACTICES OF DECLARATIVE PROGRAMMING, P113
   Blom S, 2013, IEEE INT C ENG COMP, P212, DOI 10.1109/ICECCS.2013.39
   Casalnuovo C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P755, DOI 10.1109/ICSE.2015.88
   Gu R, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P426, DOI 10.1145/2786805.2786815
   ISO/IEC, 2011, INF TECHN PROGR LANG
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Koru AG, 2005, IEEE T SOFTWARE ENG, V31, P625, DOI 10.1109/TSE.2005.89
   Ma WWY, 2016, INFORM SOFTWARE TECH, V69, P50, DOI 10.1016/j.infsof.2015.09.001
   Murphy-Hill E, 2015, IEEE T SOFTWARE ENG, V41, P65, DOI 10.1109/TSE.2014.2357438
   Nagappan M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P404, DOI 10.1145/2786805.2786834
   Nanz Sebastian, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P183, DOI 10.1109/ESEM.2013.10
   Nanz S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P778, DOI 10.1109/ICSE.2015.90
   Nanz S, 2013, INFORM SOFTWARE TECH, V55, P1304, DOI 10.1016/j.infsof.2012.08.013
   Norris B, 2013, ACM SIGPLAN NOTICES, V48, P131, DOI [10.1145/2509136.2509514, 10.1145/2544173.2509514]
   Okur S., 2012, P 20 INT S FDN SOFTW
   Parnin C, 2013, EMPIR SOFTW ENG, V18, P1047, DOI 10.1007/s10664-012-9236-6
   Pinto G, 2015, J SYST SOFTWARE, V106, P59, DOI 10.1016/j.jss.2015.04.064
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Stroustrup Bjarne, 2013, The C++ programming language
   Sutter H, 2005, DR DOBBS J, V30, P16
   Torres W., 2011, Proceedings of the compilation of the co-located workshops on DSM'11, TMC'11, AGERE!'11, AOOPES'11, NEAT'11, VMIL'11, P123, DOI DOI 10.1145/2095050.2095072
   Williams A., 2012, C CONCURRENCY ACTION
   Wu D., 2014, 26 INT C SOFTW ENG K, P144
   Wu D., 2015, P 2015 ACM IEEE INT, P144
   Yang YB, 2015, IEEE T SOFTWARE ENG, V41, P331, DOI 10.1109/TSE.2014.2370048
   Zhao YY, 2015, INFORM SOFTWARE TECH, V57, P186, DOI 10.1016/j.infsof.2014.09.006
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
NR 31
TC 6
Z9 6
U1 0
U2 15
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2016
VL 76
BP 1
EP 18
DI 10.1016/j.infsof.2016.04.004
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DO6VZ
UT WOS:000377922900001
DA 2024-07-18
ER

PT J
AU Yang, SK
   Man, TL
   Xu, JQ
   Zeng, FP
   Li, K
AF Yang, Shunkun
   Man, Tianlong
   Xu, Jiaqi
   Zeng, Fuping
   Li, Ke
TI RGA: A lightweight and effective regeneration genetic algorithm for
   coverage-oriented software test data generation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Testing data generation; GA; Regeneration strategy;
   Aging factor; Correlation analysis
AB Context: Genetic algorithm (GA) is an important intelligent method in the area of automatic software test data generation. However, existing GAs tend to get trapped in the local optimal solution, leading to population aging, which can significantly reduce the benefits of GA-based software testing and increase cost and effort. Although much attention has been focused on solving this problem by improving chromosome population, genetic operations, and genetic parameters adjustment, the applicability of most of the algorithms proposed is often narrow because of the complex operations involved and nondeterminism inherited from traditional GAs.
   Objectives: This paper. proposes a new algorithm called the regenerate genetic algorithm (RGA), which is based on a new simple, stable, and easy-to-implement regeneration strategy that involves judging the population aging process.
   Methods: We propose a new regeneration strategy called Regenerate Genetic Algorithm (RGA) that solves these problems easily and effectively. The proposed strategy defines population aging factors and process in order to determine the degree of population aging. Subsequently, when population aging has reached a certain limit, a population regeneration operation is triggered. In contrast to other improved methods, the proposed regeneration strategy for population aging easily achieves a stronger ability to jump out of the local optimal solution, thereby preventing population aging and effectively improving test coverage, without modifying any parameter of the original GA.
   Results: The proposed algorithm is experimentally evaluated by comparing it to the basic GA, Random Testing (RT) and several other methods in terms of both efficiency and effectiveness on the Siemens Suite of test programs and a more complex real program. The results obtained indicate that the proposed algorithm can effectively increase search efficiency, restrain population aging, increase test coverage, and reduce the number of test cases.
   Conclusion: RGA has better optimization ability than the conventional algorithms, especially for large-scale and highly complex programs. (c) 2016 The Authors. Published by Elsevier B.V.
C1 [Yang, Shunkun; Man, Tianlong; Xu, Jiaqi; Zeng, Fuping] Beihang Univ, Sch Reliabil & Syst Engn, 37 Xueyuan Rd, Beijing 100191, Peoples R China.
   [Li, Ke] Beihang Univ, Sch Aeronaut Sci & Engn, Fundamental Sci Ergon & Environm Control Lab, 37 Xueyuan Rd, Beijing 100191, Peoples R China.
C3 Beihang University; Beihang University
RP Yang, SK (corresponding author), Beihang Univ, Sch Reliabil & Syst Engn, 37 Xueyuan Rd, Beijing 100191, Peoples R China.
EM ysk@buaa.edu.cn
FU Aeronautics Science Foundation of China [2011ZD51055]; Science and
   Technology on Reliability and Environmental Engineering Laboratory
   [302,367]; National Pre-Research Foundation of China [51,319,080,201];
   YETP [1121]; JBKYYWF [30,367,201]
FX This research is partially supported by the Aeronautics Science
   Foundation of China (No. 2011ZD51055), Science and Technology on
   Reliability and Environmental Engineering Laboratory (No. 302,367), the
   National Pre-Research Foundation of China (No. 51,319,080,201), YETP
   (no. 1121), and JBKYYWF (No. 30,367,201). Parts of the experimental
   platform for this work used the GAlib genetic algorithm package written
   by Matthew Wall at the Massachusetts Institute of Technology
   (http://lancet.mit.edu/ga/). The authors would also like to express
   their thanks to the anonymous reviewers whose comments have helped to
   improve this paper considerably.
CR Aleti A, 2015, J SYST SOFTWARE, V103, P343, DOI 10.1016/j.jss.2014.11.035
   Alshraideh M, 2011, SOFTWARE QUAL J, V19, P489, DOI 10.1007/s11219-010-9117-4
   [Anonymous], 1995, THESIS
   [Anonymous], 2009, International Journal of software Engineering and its Applications
   [Anonymous], J ARTIF INTELL
   [Anonymous], 2011, INT J COMPUTER SCI I
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri A, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P113, DOI 10.1109/SSBSE.2009.16
   Bueno PMS, 2014, INFORM SCIENCES, V259, P490, DOI 10.1016/j.ins.2011.01.025
   Chen TY, 2006, LECT NOTES COMPUT SC, V4006, P155
   Chen TY, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-015-5314-x
   Chen Y, 2008, ICNC 2008: FOURTH INTERNATIONAL CONFERENCE ON NATURAL COMPUTATION, VOL 1, PROCEEDINGS, P566, DOI 10.1109/ICNC.2008.388
   Corsetti G., 2011, Financial Contagion: The Viral Threat to the Wealth of Nations, P11
   de Souza LS, 2013, EXPERT SYST APPL, V40, P4887, DOI 10.1016/j.eswa.2013.02.018
   Fraser G, 2015, J SYST SOFTWARE, V103, P311, DOI 10.1016/j.jss.2014.05.032
   Lee ZJ, 2008, APPL SOFT COMPUT, V8, P55, DOI 10.1016/j.asoc.2006.10.012
   Lehre PK, 2007, IEEE C EVOL COMPUTAT, P1882
   Lim TY, 2014, ARTIF INTELL REV, V41, P385, DOI 10.1007/s10462-012-9314-6
   Lin P, 2012, 2012 INTERNATIONAL CONFERENCE ON QUALITY, RELIABILITY, RISK, MAINTENANCE, AND SAFETY ENGINEERING (ICQR2MSE), P863, DOI 10.1109/ICQR2MSE.2012.6246363
   Lobo FG, 2007, STUD COMPUT INTELL, V54, P185
   Mala DJ, 2010, IET SOFTW, V4, P334, DOI 10.1049/iet-sen.2009.0079
   Malhotra R, 2013, INT J BIO-INSPIR COM, V5, P1
   Malhotra R, 2011, J INF PROCESS SYST, V7, P363, DOI 10.3745/JIPS.2011.7.2.363
   Marinakis Y, 2010, EXPERT SYST APPL, V37, P1446, DOI 10.1016/j.eswa.2009.06.085
   Miller J, 2006, INFORM SOFTWARE TECH, V48, P586, DOI 10.1016/j.infsof.2005.06.006
   Nguyen CD, 2012, AUTON AGENT MULTI-AG, V25, P260, DOI 10.1007/s10458-011-9175-4
   Orso A., 2014, P FUTURE SOFTWARE EN, P117, DOI [10.1145/2593882.2593885, DOI 10.1145/2593882.2593885]
   RAJU S, 2012, EUR J SCI RES, V74, P389
   Sengupta P., 2010, NATURE PROTOC, V2, P345
   Singh S., 2011, INT J SCI ENG RES, V3, P2231
   Srivastava P. R., 2012, INT J APPL EVOLUTION, V3, P62
   Suri B., 2011, International journal on computer science and engineering, V3, P1924
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P171, DOI 10.1002/stvr.435
   Yu HM, 2000, COMPUT CHEM ENG, V24, P2023, DOI 10.1016/S0098-1354(00)00601-3
NR 34
TC 13
Z9 13
U1 2
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2016
VL 76
BP 19
EP 30
DI 10.1016/j.infsof.2016.04.013
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DO6VZ
UT WOS:000377922900002
OA hybrid
DA 2024-07-18
ER

PT J
AU Wu, SY
   Wang, P
   Li, X
   Zhang, Y
AF Wu, Songyang
   Wang, Pan
   Li, Xun
   Zhang, Yong
TI Effective detection of android malware based on the usage of data flow
   APIs and machine learning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Android security; Malware detection; Privacy leakage
AB Context. Android has been ranked as the top smartphone platform nowadays. Studies show that Android malware have increased dramatically and that personal privacy theft has become a major form of attack in recent years. These critical security circumstances have generated a strong interest in developing systems that automatically detect malicious behaviour in Android applications (apps). However, most methods of detecting sensitive data leakage have certain shortcomings, including computational expensiveness and false positives.
   Objective. This study proposes an Android malware detecting system that provides highly accurate classification and efficient sensitive data transmission analysis.
   Method. The study adopts a machine learning approach that leverages the use of dataflow application program interfaces (APIs) as classification features to detect Android malware. We conduct a thorough analysis to extract dataflow-related API-level features and improve the k-nearest neighbour classification model. The dataflow-related API list is further optimized through machine learning, which enables us to improve considerably the efficiency of sensitive data transmission analysis, whereas analytical accuracy is approximated to that of the experiment using a full dataflow-related API list.
   Results. The proposed scheme is evaluated using 1160 benign and 1050 malicious samples. Results show that the system can achieve an accuracy rate of as high as 97.66% in detecting unknown Android malware. Our experiment of static dataflow analysis shows that more than 85% of sensitive data transmission paths can be determined using the refined API subset, whereas time of analysis decreases by nearly 40%.
   Conclusion. The usage of dataflow-related APIs is a valid feature for identifying Android malware. The proposed scheme provides an efficient approach to detecting Android malware and investigating privacy violations in malicious apps. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Wu, Songyang; Wang, Pan; Li, Xun; Zhang, Yong] Minist Publ Secur, Res Inst 3, Shanghai 201204, Peoples R China.
C3 Ministry of Public Security (China)
RP Zhang, Y (corresponding author), Minist Publ Secur, Res Inst 3, Shanghai 201204, Peoples R China.
EM zhangyonglab@yeah.net
FU National Natural Science Foundation of China [61402117]; Information
   Security Special Program of National Development and Reform Commission
   [FA GAI BAN GAO JI [2015]289]
FX This work was supported by the National Natural Science Foundation of
   China (No.61402117) and Information Security Special Program of National
   Development and Reform Commission (No. FA GAI BAN GAO JI [2015]289).
CR Aafer Y, 2013, L N INST COMP SCI SO, V127, P86
   AHA DW, 1991, MACH LEARN, V6, P37, DOI 10.1023/A:1022689900470
   [Anonymous], 2010, P USENIX S OP SYST D
   Arp D., 2014, P ANN S NETW DISTR S P ANN S NETW DISTR S
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Arzt S, 2013, LECT NOTES COMPUT SC, V8174, P364, DOI 10.1007/978-3-642-40787-1_26
   Arzt Steven, 2013, SuSi: A Tool for the Fully Automated Classification and Categorization of Android Sources and Sinks
   Bartkowiak A, 2012, FED CONF COMPUT SCI, P27
   Burguera I., 2011, P 1 ACM WORKSH SEC P, P15, DOI DOI 10.1145/2046614.2046619
   De Maesschalck R, 2000, CHEMOMETR INTELL LAB, V50, P1, DOI 10.1016/S0169-7439(99)00047-7
   Elish KO, 2015, COMPUT SECUR, V49, P255, DOI 10.1016/j.cose.2014.11.001
   Enck W, 2011, P 20 USENIX C SEC SE, P2
   Felt A. P., 2011, P 1 ACM WORKSH SEC P, P3, DOI DOI 10.1145/2046614.2046618
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Friedman N, 1997, MACH LEARN, V29, P131, DOI 10.1023/A:1007465528199
   Hornyack P, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P639
   Kohavi R., 1995, A Study of Cross-Validation and Bootstrap for Accuracy Estimation and Model Selection, V14
   La Polla M, 2013, IEEE COMMUN SURV TUT, V15, P446, DOI 10.1109/SURV.2012.013012.00028
   Lam Patrick, 2011, The Soot framework for Java program analysis: a retrospective
   Lanzi A, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P399, DOI 10.1145/1866307.1866353
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Neter J., 1996, APPL LINEAR STAT MOD, V81, P1126
   Peng Hao., 2012, P ACM C COMPUTER COM, P241
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Wei FG, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1329, DOI 10.1145/2660267.2660357
   Yang ZM, 2012, WOR CONG SOFTW ENG, P101, DOI 10.1109/WCSE.2012.26
   Yang Zhemin., 2013, P 20 ACM C COMPUTER, P1043, DOI [DOI 10.1145/2508859.2516676, 10.1145/2508859.2516676]
   Zhang M., 2014, Proceedings of the 9th ACM Symposium on Information, Computer and Communications Security, ASIA CCS '14, (New York, NY, USA), P259
   Zhou YJ, 2012, P IEEE S SECUR PRIV, P95, DOI 10.1109/SP.2012.16
NR 29
TC 65
Z9 74
U1 0
U2 75
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2016
VL 75
BP 17
EP 25
DI 10.1016/j.infsof.2016.03.004
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DN1QI
UT WOS:000376840100002
DA 2024-07-18
ER

PT J
AU Mitchell, SM
   Seamans, CB
AF Mitchell, Susan M.
   Seamans, Carolyn B.
TI Could removal of project-level knowledge flow obstacles contribute to
   software process improvement? A study of software engineer perceptions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software process; Software process improvement; SPI; Knowledge
   management; Knowledge flow (K-flow); Software engineering
ID MANAGEMENT
AB Context: Software process improvement (SPI) is one type of innovation often formulated to address problems such as uncontrollable costs, schedule overruns, and poor end product quality. This study investigates SPI through the application of knowledge management (MM) at the software project level, viewing MM, when applied in software development, as complementary to SPI.
   Objective: This study advances the use of MM in SPI by investigating impediments to the use and flow of knowledge within an individual software development project. Our proposition is that the removal of obstacles to project-level knowledge flow (K-flow) will enhance SPI. We investigate this proposition by exploring the problems associated with project K-flows as seen by software project team members.
   Method: We conducted a descriptive case study of an industrial software development project, in which we collected data concerning project knowledge sources and K-flows using semi-structured interviews. Using this data, we constructed a diagnostic project knowledge map (K-map). The K-map was analyzed to identify K-flow obstacles and potential solutions. Questionnaires based on these obstacles and solutions were formulated to probe software engineers' perceptions of the effect of the solutions on SPI.
   Results: Findings from participant questionnaires reveal that software engineers perceive that the removal or mitigation of project-level K-flow obstacles generally reduces the time to perform their work, helps them to meet their deadlines, and improves their work quality, thus resulting in SPI.
   Conclusions: This study provides support for the usefulness of project-level K-flow obstacle removal for SPI. It provides a unique project-level perspective, using input from the project's software engineers. It also explains and supports the use of K-mapping for the identification of project-level K-flow obstacles. With this approach, practitioners gain insight into SPI in "real time" as a project is executed. These insights may help to enhance their current and future SPI efforts. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Mitchell, Susan M.; Seamans, Carolyn B.] Univ Maryland Baltimore Cty, Dept Informat Syst, 1000 Hilltop Circle, Baltimore, MD 21250 USA.
C3 University System of Maryland; University of Maryland Baltimore County
RP Mitchell, SM (corresponding author), Univ Maryland Baltimore Cty, Dept Informat Syst, 1000 Hilltop Circle, Baltimore, MD 21250 USA.
EM susan.mitchell@comcast.net; cseaman@umbc.edu
CR [Anonymous], 2013, TOT QUAL MAN KEY BUS
   [Anonymous], 2012, ITIL 2011 GLANCE
   Arent J., 2000, 33 HAW INT C SYST SC
   Basili1 Victor R, 1994, Encyclopedia of Software Eng., V1, P469, DOI DOI 10.1002/0471028959.SOF110
   Bjornson FO, 2008, INFORM SOFTWARE TECH, V50, P1055, DOI 10.1016/j.infsof.2008.03.006
   Chrissis M B., 2011, CMMI: Guidelines for Process Integration and Product Improvement
   Cockburn A., 2006, AGILE SOFTWARE DEV C
   Curtis B., 2010, People CMM: A Framework for Human Capital Management
   Davenport T. H., 1998, Working Knowledge: How Organizations Manage What They Know
   DEBENHAM J, 1994, ROBOT CIM-INT MANUF, V11, P201, DOI 10.1016/0736-5845(94)90035-3
   Denzin N.K., 1978, RES ACT THEORETICAL
   Ehms K., 2002, Holistic development of knowledge management with KMMM
   Eppler MartinJ., 2006, INFORM VISUAL, V5, P202, DOI [DOI 10.1057/PALGRAVE.IVS.9500131, 10.1057/palgrave.ivs.9500131]
   Hansen B, 2004, INT J INFORM MANAGE, V24, P457, DOI 10.1016/j.ijinfomgt.2004.08.007
   Hansen BH, 2004, LECT NOTES COMPUT SC, V3281, P126
   Ishikawa Kaoru., 1986, Guide to Quality Control
   LANZARA GF, 1985, INFORM MANAGE, V8, P3, DOI 10.1016/0378-7206(85)90065-5
   Liebowitz J., 2008, MAKING CENTS OIL KNO
   Lincoln Y. S., 1985, NATURALISTIC INQUIRY
   Merriam S. B., 2015, Qualitative research: A guide to design and implementation
   Mitchell S.M., 2012, Software process improvement through the removal of project-level knowledge flow obstacles: The perceptions of software engineers
   Mitchell SM, 2012, PROC INT CONF SOFTW, P1265, DOI 10.1109/ICSE.2012.6227103
   Mitchell SM, 2011, INT SYMP EMP SOFTWAR, P347, DOI 10.1109/ESEM.2011.45
   Monk A., 1998, INTERACTIONS, V5, P21, DOI [10.1145/274430.274434, DOI 10.1145/274430.274434, https://doi.org/10.1145/274430.274434]
   Nissen M.E., 2002, COMMUN ASSOC INF SYS, V8, P251, DOI DOI 10.17705/1CAIS.00818
   Nissen M.E., 2006, Harnessing knowledge dynamics: principled organizational knowing, learning
   Nonaka I., 1995, The Knowledge-Creating Company How Japanese Companies Create the Dynamics of Information, DOI DOI 10.1016/0024-6301(96)81509-3
   Petrash G., 1996, KNOWL BAS LEAD C
   Platt L.E., 1996, COMPETING KNOWLEDG S
   Rodríguez-Elias OM, 2009, INT J SOFTW ENG KNOW, V19, P185, DOI 10.1142/S0218194009004155
   Royce W, 1970, IEEE WESCON LOS ANG
   Salo O, 2005, LECT NOTES ARTIF INT, V3782, P106
   Sommerville I., 2011, Software engineering
   Sy T., 2004, Journal of Management Development, V23, P437, DOI 10.1108/02621710410537056
   Taylor S. J., 2016, INTRO QUALITATIVE RE
   Wiig KM, 1997, EXPERT SYST APPL, V13, P1, DOI 10.1016/S0957-4174(97)00018-3
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 37
TC 14
Z9 14
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2016
VL 72
BP 151
EP 170
DI 10.1016/j.infsof.2015.12.007
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DX9HP
UT WOS:000384704500010
DA 2024-07-18
ER

PT J
AU Tofan, D
   Galster, M
   Lytra, I
   Avgeriou, P
   Zdun, U
   Fouche, MA
   de Boer, R
   Solms, F
AF Tofan, Dan
   Galster, Matthias
   Lytra, Ioanna
   Avgeriou, Paris
   Zdun, Uwe
   Fouche, Mark-Anthony
   de Boer, Remco
   Solms, Fritz
TI Empirical evaluation of a process to increase consensus in group
   architectural decision making
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architecture; Group architecture decisions; Decision making
ID MODEL; NEGOTIATION; SUPPORT
AB Context: Many software architectural decisions are group decisions rather than decisions made by individuals. Consensus in a group of decision makers increases the acceptance of a decision among decision makers and their confidence in that decision. Furthermore, going through the process of reaching consensus means that decision makers understand better the decision (including the decision topic, decision options, rationales, and potential outcomes). Little guidance exists on how to increase consensus in group architectural decision making.
   Objective: We evaluate how a newly proposed process (named GADGET) helps architects increase consensus when making group architectural decisions. Specifically, we investigate how well GADGET increases consensus in group architectural decision making, by understanding its practical applicability, and by comparing GADGET against group architectural decision making without using any prescribed approach.
   Method: We conducted two empirical studies. First, we conducted an exploratory case study to understand the practical applicability of GADGET in industry. We investigated whether there is a need to increase consensus, the effort and benefits of GADGET, and potential improvements for GADGET. Second, we conducted an experiment with 113 students from three universities to compare GADGET against group architectural decision making without using any prescribed approach.
   Results: GADGET helps decision makers increase their consensus, captures knowledge on architectural decisions, clarifies the different points of view of different decision makers on the decision, and increases the focus of the group discussions about a decision. From the experiment, we obtained causal evidence that GADGET increases consensus better than group architectural decision making without using any prescribed approach.
   Conclusions: There is a need to increase consensus in group architectural decisions. GADGET helps inexperienced architects increase consensus in group architectural decision making, and provides additional benefits, such as capturing rationale of decisions. Future work is needed to understand and improve other aspects of group architectural decision making. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Tofan, Dan; Avgeriou, Paris] Univ Groningen, Dept Math & Comp Sci, Groningen, Netherlands.
   [Galster, Matthias] Univ Canterbury, Dept Comp Sci & Software Engn, Christchurch, New Zealand.
   [Lytra, Ioanna; Zdun, Uwe] Univ Vienna, Fac Comp Sci, Vienna, Austria.
   [Fouche, Mark-Anthony; Solms, Fritz] Univ Pretoria, Dept Comp Sci, Pretoria, South Africa.
   [de Boer, Remco] XL&Knowledge, ArchiXL, Utrecht, Netherlands.
C3 University of Groningen; University of Canterbury; University of Vienna;
   University of Pretoria
RP Tofan, D (corresponding author), Univ Groningen, Dept Math & Comp Sci, Groningen, Netherlands.
EM d.c.tofan@rug.nl
RI Zdun, Uwe/AFR-2161-2022; de Boer, Remco/AAW-1179-2020
OI de Boer, Remco/0000-0002-9664-8500; Avgeriou, Paris/0000-0002-7101-0754
CR Al-Naeem T, 2005, PROC INT CONF SOFTW, P244
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 2011, Software designers, are you biased?, DOI 10.1145/1988676.1988678
   Babar MA, 2006, J SYST SOFTWARE, V79, P912, DOI 10.1016/j.jss.2005.06.043
   Berander P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P167
   Carver J. C., 2009, EMPIR SOFTW ENG, V15, P35
   DELBECQ AL, 1971, J APPL BEHAV SCI, V7, P466, DOI 10.1177/002188637100700404
   Falessi D., 2006, P 2006 ACMIEEE INT S, P134
   Galster M., 2012, P EV ASS SOFTW ENG
   Gaubatz P, 2015, J SYST SOFTWARE, V103, P128, DOI 10.1016/j.jss.2015.01.056
   Groher I, 2015, LECT NOTES COMPUT SC, V9278, P181, DOI 10.1007/978-3-319-23727-5_15
   Hardgrave BC, 2003, J MANAGE INFORM SYST, V20, P123
   Hassenzahl M, 2000, INT J HUM-COMPUT INT, V12, P441, DOI 10.1207/S15327590IJHC1203&4_13
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Herrera-Viedma E, 2005, IEEE T FUZZY SYST, V13, P644, DOI 10.1109/TFUZZ.2005.856561
   Herrera-Viedma E, 2002, IEEE T SYST MAN CY A, V32, P394, DOI 10.1109/TSMCA.2002.802821
   Ilartwig R.T., 2010, GROUP FACILITATION R, V10, P17
   Jankowicz D., 2003, EASY GUIDE REPERTORY
   Jansen A., 2007, WORKING IEEEIFIP C S, P4
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Kazman R, 2005, INFORM SOFTWARE TECH, V47, P511, DOI 10.1016/j.infsof.2004.10.001
   Kazman R, 2001, PROC INT CONF SOFTW, P297, DOI 10.1109/ICSE.2001.919103
   Kazman R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P54, DOI 10.1109/ICSE.1999.840995
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Kubickova M., 2011, ARE STUDENTS REAL PE
   Lai VS, 2002, EUR J OPER RES, V137, P134, DOI 10.1016/S0377-2217(01)00084-4
   Linstone HA, 2002, DELPHI METHOD TECHNI
   Miesbauer Cornelia, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P130, DOI 10.1007/978-3-642-39031-9_12
   Mohan K, 2007, DECIS SUPPORT SYST, V43, P968, DOI 10.1016/j.dss.2005.05.026
   Nakakawa A, 2010, LECT NOTES COMPUT SC, V6105, P538, DOI 10.1007/978-3-642-13335-0_40
   Nowak Marcin, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P146, DOI 10.1007/978-3-642-39031-9_13
   Osborn A. F., 1963, APPL IMAGINATION
   Rekha S., 2014, 11 WORK IEEE IFIP C
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   SCHWEIGER DM, 1986, ACAD MANAGE J, V29, P51, DOI 10.5465/255859
   Sousa K., 2006, IHC 2006, P91, DOI [10.1145/1298023.1298037, DOI 10.1145/1298023.1298037]
   Svahnberg M, 2004, INFORM SOFTWARE TECH, V46, P805, DOI 10.1016/j.infsof.2004.02.001
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Tang A, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P155, DOI 10.1007/978-3-642-02374-3_9
   Tastle WJ, 2007, INT J APPROX REASON, V45, P531, DOI 10.1016/j.ijar.2006.06.024
   Tofan Dan, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P192, DOI 10.1007/978-3-642-39031-9_17
   Tofan D., 2014, P 2014 EUR C SOFTW A, P1
   Tofan D, 2014, INT J SOFTW ENG KNOW, V24, P553, DOI 10.1142/S0218194014500211
   Tofan D, 2014, INFORM SOFTWARE TECH, V56, P850, DOI 10.1016/j.infsof.2014.03.009
   Tofan D, 2011, LECT NOTES COMPUT SC, V6903, P244, DOI 10.1007/978-3-642-23798-0_27
   Tofan D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P916, DOI 10.1145/1985793.1985944
   Tselios K., 2012, THESIS
   Venkatesh V, 2000, MANAGE SCI, V46, P186, DOI 10.1287/mnsc.46.2.186.11926
   Wojcik R., 2006, ATTRIBUTE DRIVEN DES
   Yin R.K., 2003, CASE STUDY RES DESIG
   Zannier C, 2007, INFORM SOFTWARE TECH, V49, P637, DOI 10.1016/j.infsof.2007.02.010
   Zimmermann O, 2011, IEEE SOFTWARE, V28, P64, DOI 10.1109/MS.2011.3
   Zimmermann O, 2009, J SYST SOFTWARE, V82, P1249, DOI 10.1016/j.jss.2009.01.039
NR 56
TC 14
Z9 14
U1 1
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2016
VL 72
BP 31
EP 47
DI 10.1016/j.infsof.2015.12.002
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DX9HP
UT WOS:000384704500003
OA Green Published
DA 2024-07-18
ER

PT J
AU Yadav, HB
   Yadav, DK
AF Yadav, Harikesh Bahadur
   Yadav, Dilip Kumar
TI A fuzzy logic based approach for phase-wise software defects prediction
   using software metrics
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software defect; Software defect density indicator; Software metrics;
   Fuzzy logic; Software reliability
AB Context: The software defect prediction during software development has recently attracted the attention of many researchers. The software defect density indicator prediction in each phase of software development life cycle (SDLC) is desirable for developing a reliable software product. Software defect prediction at the end of testing phase may not be more beneficial because the changes need to be performed in the previous phases of SDLC may require huge amount of money and effort to be spent in order to achieve target software quality. Therefore, phase-wise software defect density indicator prediction model is of great importance.
   Objective: In this paper, a fuzzy logic based phase-wise software defect prediction model is proposed using the top most reliability relevant metrics of the each phase of the SDLC.
   Method: In the proposed model, defect density indicator in requirement analysis, design, coding and testing phase is predicted using nine software metrics of these four phases. The defect density indicator metric predicted at the end of the each phase is also taken as an input to the next phase. Software metrics are assessed in linguistic terms and fuzzy inference system has been employed to develop the model.
   Results: The predictive accuracy of the proposed model is validated using twenty real software project data. Validation results are satisfactory. Measures based on the mean magnitude of relative error and balanced mean magnitude of relative error decrease significantly as the software project size increases.
   Conclusion: In this paper, a fuzzy logic based model is proposed for predicting software defect density indicator at each phase of the SDLC. The predicted defects of twenty different software projects are found very near to the actual defects detected during testing. The predicted defect density indicators are very helpful to analyze the defect severity in different artifacts of SDLC of a software project. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Yadav, Harikesh Bahadur; Yadav, Dilip Kumar] Natl Inst Technol, Dept Comp Applicat, Jamshedpur 831014, Bihar, India.
C3 National Institute of Technology (NIT System); National Institute of
   Technology Jamshedpur
RP Yadav, DK (corresponding author), Natl Inst Technol, Dept Comp Applicat, Jamshedpur 831014, Bihar, India.
EM yadavaharikesh@gmail.com; dkyadav1@gmail.com
RI KUMAR, DINESH/JTT-7703-2023; YADAV, DILIP KUMAR/AAC-5871-2019
OI YADAV, DILIP KUMAR/0000-0002-1334-7500; Yadav, Harikesh
   Bahadur/0000-0002-2605-0837
CR Agrawal M, 2007, IEEE T SOFTWARE ENG, V33, P145, DOI 10.1109/TSE.2007.29
   AGRESTI WW, 1992, IEEE T SOFTWARE ENG, V18, P988, DOI 10.1109/32.177368
   [Anonymous], FAULT TOL COMP 27 30
   [Anonymous], 2006, RELIABILITY ENG SERI
   [Anonymous], 2002, Metrics and Models in Software Quality Engineering
   [Anonymous], 10 INT SOFTW METR S
   [Anonymous], EARLY SOFTWARE RELIA
   [Anonymous], P 11 MINN WORKSH SOF
   [Anonymous], RLTR9295
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], 2010, ACM SIGSOFT SOFTWARE, DOI DOI 10.1145/1874391.1874403
   [Anonymous], P 13 MINN WORKSH SOF
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   [Anonymous], 2002, P 3 INT WORKSHOP SOF, DOI DOI 10.1145/584369.584415
   CAI KY, 1991, RELIAB ENG SYST SAFE, V32, P357, DOI 10.1016/0951-8320(91)90009-V
   Catal C, 2011, EXPERT SYST APPL, V38, P4626, DOI 10.1016/j.eswa.2010.10.024
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Dejaeger K, 2013, IEEE T SOFTWARE ENG, V39, P237, DOI 10.1109/TSE.2012.20
   Diaz M, 1997, IEEE SOFTWARE, V14, P75, DOI 10.1109/52.605934
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fenton N, 2008, EMPIR SOFTW ENG, V13, P499, DOI 10.1007/s10664-008-9072-x
   Fenton N, 2007, INFORM SOFTWARE TECH, V49, P32, DOI 10.1016/j.infsof.2006.09.001
   GAFFNEY JE, 1984, IEEE T SOFTWARE ENG, V10, P459, DOI 10.1109/TSE.1984.5010260
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   *IEEE, 1988, 98221988 IEEE
   Kaya M, 2003, IEEE INT CONF FUZZY, P881
   KHOSHGOFTAAR TM, 1990, IEEE J SEL AREA COMM, V8, P253, DOI 10.1109/49.46879
   Li M, 2003, IEEE T SOFTWARE ENG, V29, P811, DOI 10.1109/TSE.2003.1232286
   Li M, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P246, DOI 10.1109/ISSRE.2000.885876
   LIPOW M, 1982, IEEE T SOFTWARE ENG, V8, P437, DOI 10.1109/TSE.1982.235579
   Ma Y, 2014, INFORM PROCESS LETT, V114, P469, DOI 10.1016/j.ipl.2014.03.012
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mohanta S, 2011, INT J SYST ASSUR ENG, V2, P261, DOI 10.1007/s13198-011-0078-1
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   Neil M, 2000, KNOWL ENG REV, V15, P257, DOI 10.1017/S0269888900003039
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Pandey A.K., 2013, Early Software Reliability Prediction. A Fuzzy Logic Approach
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Ross T. J., 2009, Fuzzy logic with engineering applications, V3rd
   Smidts C, 1998, IEEE T RELIAB, V47, P268, DOI 10.1109/24.740500
   WITHROW C, 1990, IEEE SOFTWARE, V7, P26, DOI 10.1109/52.43046
   Wohlin C, 1998, PROC INT CONF SOFTW, P400, DOI 10.1109/ICSE.1998.671393
   Yadav D., 2012, International journal of performability engineering, V8, P399, DOI DOI 10.23940/IJPE.12.4.P399.MAG
   Yadav HB, 2017, INT J SYST ASSUR ENG, V8, P2097, DOI 10.1007/s13198-014-0325-3
   Yadav HB, 2014, ADV INTELLIGENT SYST, V259, P661
   Zedeh L. A., 1989, IEEE Transactions on Knowledge and Data Engineering, V1, P89, DOI 10.1109/69.43406
   Zhang XM, 2000, J SYST SOFTWARE, V50, P43, DOI 10.1016/S0164-1212(99)00075-8
NR 49
TC 65
Z9 71
U1 1
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2015
VL 63
BP 44
EP 57
DI 10.1016/j.infsof.2015.03.001
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH6LV
UT WOS:000354149000004
DA 2024-07-18
ER

PT J
AU Chen, L
   Fang, B
   Shang, ZW
   Tang, YY
AF Chen, Lin
   Fang, Bin
   Shang, Zhaowei
   Tang, Yuanyan
TI Negative samples reduction in cross-company software defects prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Cross-company defects prediction; Software fault prediction; Transfer
   learning
ID STATIC CODE ATTRIBUTES
AB Context: Software defect prediction has been widely studied based on various machine-learning algorithms. Previous studies usually focus on within-company defects prediction (WCDP), but lack of training data in the early stages of software testing limits the efficiency of WCDP in practice. Thus, recent research has largely examined the cross-company defects prediction (CCDP) as an alternative solution.
   Objective: However, the gap of different distributions between cross-company (CC) data and within-company (WC) data usually makes it difficult to build a high-quality CCDP model. In this paper, a novel algorithm named Double Transfer Boosting (DTB) is introduced to narrow this gap and improve the performance of CCDP by reducing negative samples in CC data.
   Method: The proposed DTB model integrates two levels of data transfer: first, the data gravitation method reshapes the whole distribution of CC data to fit WC data. Second, the transfer boosting method employs a small ratio of labeled WC data to eliminate negative instances in CC data.
   Results: The empirical evaluation was conducted based on 15 publicly available datasets. CCDP experiment results indicated that the proposed model achieved better overall performance than compared CCDP models. DTB was also compared to WCDP in two different situations. Statistical analysis suggested that DTB performed significantly better than WCDP models trained by limited samples and produced comparable results to WCDP with sufficient training data.
   Conclusions: DTB reforms the distribution of CC data from different levels to improve the performance of CCDP, and experimental results and analysis demonstrate that it could be an effective model for early software defects detection. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Chen, Lin; Fang, Bin; Shang, Zhaowei; Tang, Yuanyan] Chongqing Univ, Dept Comp Sci, Chongqing 400030, Peoples R China.
   [Tang, Yuanyan] Univ Macau, Fac Sci & Technol, Macau, Peoples R China.
C3 Chongqing University; University of Macau
RP Fang, B (corresponding author), Chongqing Univ, Dept Comp Sci, Chongqing 400030, Peoples R China.
EM chenlincqu@cqu.edu.cn; fb@cqu.edu.cn; szw@cqu.edu.cn; yytang@umac.mo
RI chen, lin/ACN-2583-2022
OI chen, lin/0000-0002-2290-1630
FU National Key Basic Research Program of China (973 program)
   [2013CB329103, 2013CB329100]; Program for Natural Science Foundation of
   China [61173130, 61173129, 91420102, 61472053, 91118005]; Natural
   Science Foundation of Chongqing [CSTC2010BB2217]
FX This paper is supported by National Key Basic Research Program of China
   (973 program 2013CB329103 of 2013CB329100), the Program for Natural
   Science Foundation of China (No. 61173130, No. 61173129, No. 91420102,
   No. 61472053, No. 91118005) and Natural Science Foundation of Chongqing
   (No. CSTC2010BB2217). The authors also would like to thank the anonymous
   reviewers for their constructive comments.
CR [Anonymous], AUTOMAT SOFTW ENG
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Catal C, 2011, EXPERT SYST APPL, V38, P4626, DOI 10.1016/j.eswa.2010.10.024
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Catal C, 2009, INFORM SCIENCES, V179, P1040, DOI 10.1016/j.ins.2008.12.001
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   COVER TM, 1967, IEEE T INFORM THEORY, V13, P21, DOI 10.1109/TIT.1967.1053964
   Dai Wenyuan, 2007, P 24 INT C MACHINE L, P193
   Drown DJ, 2009, IEEE T SYST MAN CY A, V39, P1097, DOI 10.1109/TSMCA.2009.2020804
   FAYYAD UM, 1993, IJCAI-93, VOLS 1 AND 2, P1022
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Gray David, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P129, DOI 10.1049/ic.2011.0016
   Haibo He, 2009, IEEE Transactions on Knowledge and Data Engineering, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Jureczko M., 2010, P 6 INT C PREDICTIVE
   Jureczko M., 2010, Model Methods Syst Dependability Oficyna Wydawnicza Politech Wroclawskiej, P69
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lewis D. D., 1998, Machine Learning: ECML-98. 10th European Conference on Machine Learning. Proceedings, P4, DOI 10.1007/BFb0026666
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies Tim., 2012, PROMISE REPOSITORY E
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Peng LZ, 2009, INFORM SCIENCES, V179, P809, DOI 10.1016/j.ins.2008.11.007
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Zhang F., 2014, P 11 WORK C MIN SOFT, P182, DOI [10.1145/2597073.2597078, DOI 10.1145/2597073.2597078]
   Zhimin He, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P45, DOI 10.1109/ESEM.2013.20
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 37
TC 115
Z9 130
U1 0
U2 31
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2015
VL 62
BP 67
EP 77
DI 10.1016/j.infsof.2015.01.014
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG3KL
UT WOS:000353179000004
DA 2024-07-18
ER

PT J
AU Ferrer, J
   Kruse, PM
   Chicano, F
   Alba, E
AF Ferrer, Javier
   Kruse, Peter M.
   Chicano, Francisco
   Alba, Enrique
TI Search based algorithms for test sequence generation in functional
   testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Functional testing; Classification Tree Method; Test sequence
   generation; Search Based Software Engineering; Genetic Algorithm; Ant
   Colony Optimization
AB Context: The generation of dynamic test sequences from a formal specification, complementing traditional testing methods in order to find errors in the source code.
   Objective: In this paper we extend one specific combinatorial test approach, the Classification Tree Method (CTM), with transition information to generate test sequences. Although we use CTM, this extension is also possible for any combinatorial testing method.
   Method: The generation of minimal test sequences that fulfill the demanded coverage criteria is an NP-hard problem. Therefore, search-based approaches are required to find such (near) optimal test sequences.
   Results: The experimental analysis compares the search-based technique with a greedy algorithm on a set of 12 hierarchical concurrent models of programs extracted from the literature. Our proposed search-based approaches (GTSG and ACOts) are able to generate test sequences by finding the shortest valid path to achieve full class (state) and transition coverage.
   Conclusion: The extended classification tree is useful for generating of test sequences. Moreover, the experimental analysis reveals that our search-based approaches are better than the greedy deterministic approach, especially in the most complex instances. All presented algorithms are actually integrated into a professional tool for functional testing. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Ferrer, Javier; Chicano, Francisco; Alba, Enrique] Univ Malaga, Dept Lenguajes & Ciencias Computac, E-29071 Malaga, Spain.
   [Kruse, Peter M.] Berner & Mattner Systemtech GmbH, Berlin, Germany.
C3 Universidad de Malaga
RP Ferrer, J (corresponding author), Univ Malaga, Dept Lenguajes & Ciencias Computac, E-29071 Malaga, Spain.
EM ferrer@lcc.uma.es; peter.kruse@berner-mattner.com; chicano@lcc.uma.es;
   eat@lcc.uma.es
RI Chicano, Francisco/I-5650-2015; Alba, Enrique/KCZ-2486-2024; Ferrer,
   Javier/A-2498-2011; Alba, Enrique/L-8604-2014
OI Chicano, Francisco/0000-0003-1259-2990; Ferrer,
   Javier/0000-0002-1074-0139; Alba, Enrique/0000-0002-5520-8875
FU Spanish Ministry of Economy and Competitiveness; FEDER [TIN2011-28194,
   BES-2012-055967]; VSB-Tech. Univ. of Ostrava, Universidad de Malaga,
   Andalucia Tech. [8.06/5.47.4142]; EU [ICT-257574]
FX This research is partially funded by the Spanish Ministry of Economy and
   Competitiveness and FEDER under contract TIN2011-28194 and fellowship
   BES-2012-055967. It is also partially funded by project 8.06/5.47.4142
   in collaboration with the VSB-Tech. Univ. of Ostrava, Universidad de
   Malaga, Andalucia Tech. and EU Grant ICT-257574 (FITTEST project).
CR Alba E., 2008, P 10 ANN C GEN EV CO, P1735
   Alba E, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1066
   [Anonymous], TECHNICAL REPORT
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Blum C, 2003, ACM COMPUT SURV, V35, P268, DOI 10.1145/937503.937505
   Burton S., 2001, FATES 01, P31
   Cohen M. B., 2006, Software Engineering Notes, V31, P1, DOI [DOI 10.1145/1218776.1218785, 10.1145/1218776.1218785]
   Conrad M., 2005, PERSPECTIVES MODEL B, P1
   Doerner K, 2003, LECT NOTES COMPUT SC, V2724, P2465
   Dorigo M, 2004, ANT COLONY OPTIMIZATION, P1
   Dustin E., 2002, EFFECTIVE SOFTWARE T
   Gargantini A, 2001, J UNIVERS COMPUT SCI, V7, P1050
   Geist D, 1996, LECT NOTES COMPUT SC, V1166, P143, DOI 10.1007/BFb0031805
   Grochtmann M., 1993, Software Testing, Verification and Reliability, V3, P63, DOI 10.1002/stvr.4370030203
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Heimdahl MPE, 2004, LECT NOTES COMPUT SC, V2931, P42
   Helke S., 2007, THESIS TU BERLIN
   Hierons RM, 2003, LECT NOTES COMPUT SC, V2651, P388
   IBM, 2013, IBM RHAPS EX
   Kaner C., 1997, IMPOSSIBILITY COMPLE
   Kruse P. M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P539, DOI 10.1109/ICST.2012.139
   Lehmann E., 2000, Proc. EuroStar, P1
   Lucas P.J., 1989, THESIS U ILLINOIS UR
   MathWorks T., 2008, MATL SIM STAT
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Mirosamek U., 2009, 2 ORTHOGONAL REGIONS
   Namin AS, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P57
   NIST, 2002, TECHNICAL REPORT
   Oh J, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1851
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Sagarna Ramon, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), DOI 10.1109/ICSTW.2008.34
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Torres-Jimenez J, 2012, INFORM SCIENCES, V185, P137, DOI 10.1016/j.ins.2011.09.020
   URAL H, 1992, COMPUT COMMUN, V15, P311, DOI 10.1016/0140-3664(92)90092-S
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vos T., 2012, SOFTW QUAL CHANGES
   Williams AW, 2001, ACS/IEEE INTERNATIONAL CONFERENCE ON COMPUTER SYSTEMS AND APPLICATIONS, PROCEEDINGS, P304, DOI 10.1109/AICCSA.2001.934001
NR 38
TC 20
Z9 20
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 419
EP 432
DI 10.1016/j.infsof.2014.07.014
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800025
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Grbac, TG
   Huljenic, D
AF Grbac, Tihana Galinac
   Huljenic, Darko
TI On the probability distribution of faults in complex software systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software fault distribution; Probability distribution; Non-linear
   regression; Complex software system; Empirical research
ID REPLICATED QUANTITATIVE-ANALYSIS; POWER-LAWS
AB Context: There are several empirical principles related to the distribution of faults in a software system (e.g. the Pareto principle) widely applied in practice and thoroughly studied in the software engineering research providing evidence in their favor. However, the knowledge of the underlying probability distribution of faults, that would enable a systematic approach and refinement of these principles, is still quite limited.
   Objective: In this paper we study the probability distribution of faults detected during verification in four consecutive releases of a large-scale complex software system for the telecommunication exchanges. This is the first such study analyzing closed software system, replicating two previous studies for open source software.
   Method: We take into consideration the Weibull, lognormal, double Pareto, Pareto, and Yule-Simon probability distributions, and investigate how well these distributions fit our empirical fault data using the non-linear regression.
   Results: The results indicate that the double Pareto distribution is the most likely choice for the underlying probability distribution. This is not consistent with the previous studies on open source software.
   Conclusion: The study shows that understanding the probability distribution of faults in complex software systems is more complicated than previously thought. Comparison with previous studies shows that the fault distribution strongly depends on the environment, and only further replications would make it possible to build up a general theory for a given context. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Grbac, Tihana Galinac] Univ Rijeka, HR-51000 Rijeka, Croatia.
   [Huljenic, Darko] Ericsson Nikola Tesla, HR-10000 Zagreb, Croatia.
C3 University of Rijeka; Ericsson
RP Grbac, TG (corresponding author), Univ Rijeka, Vukovarska 58, HR-51000 Rijeka, Croatia.
EM tihana.galinac@riteh.hr; darko.huljenic@ericsson.com
RI Huljenic, Darko/ADM-2763-2022; Grbac, Tihana Galinac/K-2439-2019;
   Galinac Grbac, Tihana/D-7048-2016; Grbac, Tihana Galinac/AAU-8704-2021
OI Galinac Grbac, Tihana/0000-0002-4351-4082; 
FU University of Rijeka [13.09.2.2.16]
FX The work presented in this paper is supported by the University of
   Rijeka research Grant 13.09.2.2.16.
CR Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], 1988, Nonlinear regression analysis and its applications
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Clauset A, 2009, SIAM REV, V51, P661, DOI 10.1137/070710111
   COMPTON BT, 1990, J SYST SOFTWARE, V12, P199, DOI 10.1016/0164-1212(90)90040-S
   Concas G., 2010, ADV SOFTWARE ENG, V2010
   Concas G, 2007, IEEE T SOFTWARE ENG, V33, P687, DOI [10.1109/TSE.2007.1019, 10.1109/TSE.2007.1016]
   Concas G, 2011, IEEE T SOFTWARE ENG, V37, P872, DOI 10.1109/TSE.2011.54
   Denaro G., P 24 INT C SOFTW ENG, P241
   English M., P 5 INT C PRED MOD S
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Grbac TG, 2013, IEEE T SOFTWARE ENG, V39, P462, DOI 10.1109/TSE.2012.46
   Hatton L, 2009, IEEE T SOFTWARE ENG, V35, P566, DOI 10.1109/TSE.2008.105
   Juran JM., 1974, Quality Control Handbook
   Kaaniche M., P 7 INT S SOFTW REL, P207
   Louridas P, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1391984.1391986
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Newman MEJ, 2005, CONTEMP PHYS, V46, P323, DOI 10.1080/00107510500052444
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Pareto V., 1897, Cours Economie Politique
   SIMON HA, 1955, BIOMETRIKA, V42, P425
   Stark CP, 2001, GEOPHYS RES LETT, V28, P1091, DOI 10.1029/2000GL008527
   Yule GU, 1925, PHILOS T R SOC LON B, V213, P21, DOI 10.1098/rstb.1925.0002
   Zhang HY, 2008, IEEE T SOFTWARE ENG, V34, P301, DOI 10.1109/TSE.2007.70771
NR 25
TC 15
Z9 16
U1 0
U2 11
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 250
EP 258
DI 10.1016/j.infsof.2014.06.014
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800014
DA 2024-07-18
ER

PT J
AU Mittas, N
   Mamalikidis, I
   Angelis, L
AF Mittas, Nikolaos
   Mamalikidis, Ioannis
   Angelis, Lefteris
TI A framework for comparing multiple cost estimation methods using an
   automated visualization toolkit
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software Cost Estimation; Prediction models; Graphical comparison; REC
   curves; Automated tools
ID ESTIMATION MODELS; SOFTWARE; REGRESSION; SIMULATION
AB Context: The importance of accurate predictions in Software Cost Estimation and the related challenging research problems, led to the introduction of a plethora of methodologies in literature. However, the wide variety of cost estimation methods, the techniques for improving them and the different measures of accuracy have caused new problems such as the inconsistent findings and the conclusion instability. Today, there is a confusion regarding the choice of the most appropriate method for a specific dataset and therefore a need for well-established statistical frameworks as well as for automated tools that will reinforce and lead a comprehensive experimentation and comparison process, based on the thorough study of the cost estimation errors.
   Objective: The purpose of this paper is to present a framework for visualization and statistical comparison of the errors of several cost estimation methods. It is based on an automated tool which can facilitate strategies for an intelligent decision-making.
   Method: A systematic procedure comprised of a series of steps corresponding to research questions is proposed. For each of the steps, StatREC, a Graphical User Interface statistical toolkit is utilized. StatREC was designed and developed to take as input a simple data matrix of predictions by multiple models and to provide a variety of graphical tools and statistical hypothesis tests for aiding the users to answer the questions and choose the appropriate model themselves.
   Results: The study of prediction errors by the proposed framework provides insight of several aspects related to prediction performance of different models. The systematic examination of candidate models by a series of research questions supports the user to make the final decision.
   Conclusion: Structured procedures based on automated tools like StatREC can efficiently be used for studying the error and comparing cost estimation models. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Mittas, Nikolaos; Angelis, Lefteris] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
   [Mamalikidis, Ioannis] Technol Educ Inst Kavala, Dept Elect Engn, Kavala 65404, Greece.
C3 Aristotle University of Thessaloniki
RP Angelis, L (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
EM lef@csd.auth.gr
RI Mittas, Nikolaos/AAL-6645-2021
OI Mittas, Nikolaos/0000-0003-3061-7864
CR [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], YOURDON PRESS COMPUT
   [Anonymous], 2002, Encyclopedia of Software Engineering, DOI DOI 10.1002/0471028959.SOF282
   [Anonymous], 2007, NASA93 DATASET
   [Anonymous], 1981, SIMULTANEOUS STAT IN
   Bi J., 2003, P 20 INT C MACH LEAR, P43
   Boehm B, 2000, ANN SOFTW ENG, V10, P177, DOI 10.1023/A:1018991717352
   Boehm BW., 1981, Software Engineering Economics
   Buglione L, 2011, IEEE SOFTWARE, V28, P91, DOI 10.1109/MS.2011.55
   Efron B., 1993, INTRO BOOTSTRAP, VVolume 914, DOI DOI 10.1007/978-1-4899-4541-9
   Egan J.P., 1975, SERIES COGNITION PER
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Good I., 2000, SPRINGER SERIES STAT
   HEEMSTRA FJ, 1992, INFORM SOFTWARE TECH, V34, P627, DOI 10.1016/0950-5849(92)90068-Z
   Jensen Randall., 1983, 5 ISPA C, P88
   Jones C., 1996, APPL SOFTWARE MEASUR
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kitchenham B, 2009, P 5 INT C PRED MOD S, P1, DOI DOI 10.1145/1540438.1540444
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   Midas N., 2012, P ACM 8 INT C PRED M, P39
   Mittas N., 2009, P 2 ART INT TECHN SO, P221
   Mittas N, 2008, J SYST SOFTWARE, V81, P616, DOI 10.1016/j.jss.2007.07.039
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Mittas N, 2012, EMPIR SOFTW ENG, V17, P34, DOI 10.1007/s10664-011-9177-5
   Mittas N, 2010, J SYST SOFTWARE, V83, P621, DOI 10.1016/j.jss.2009.10.044
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   Moore D.S., 2003, PRACTICE BUSINESS ST
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   R Development Core Team, 2011, R LANG ENV STAT COMP
   RAO CR, 2007, SPRINGER SERIES STAT
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shan Y, 2002, 2002 INTERNATIONAL CONFERENCE ON COMMUNICATIONS, CIRCUITS AND SYSTEMS AND WEST SINO EXPOSITION PROCEEDINGS, VOLS 1-4, P1108, DOI 10.1109/ICCCAS.2002.1178979
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Sheskin David, 2011, Handbook of Parametric and Nonparametric Statistical Procedures
   STAMELOS I, 2001, P 12 EUR SOFTW CONTR, P17
   Torgo L., 2005, P 11 ACM SIGKDD INT
NR 44
TC 24
Z9 24
U1 0
U2 8
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 310
EP 328
DI 10.1016/j.infsof.2014.05.010
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500018
DA 2024-07-18
ER

PT J
AU Sharif, KY
   English, M
   Ali, N
   Exton, C
   Collins, JJ
   Buckley, J
AF Sharif, Khaironi Y.
   English, Michael
   Ali, Nour
   Exton, Chris
   Collins, J. J.
   Buckley, Jim
TI An empirically-based characterization and quantification of information
   seeking through mailing lists during Open Source developers' software
   evolution
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Information seeking software maintenance; Open source software;
   Qualitative empirical study
ID PROGRAM COMPREHENSION; MAINTENANCE; GOVERNANCE; QUESTIONS
AB Context: Several authors have proposed information seeking as an appropriate perspective for studying software evolution. Empirical evidence in this area suggests that substantial time delays can accrue, due to the unavailability of required information, particularly when this information must travel across geographically distributed sites.
   Objective: As a first step in addressing the time delays that can occur in information seeking for distributed Open Source (OS) programmers during software evolution, this research characterizes the information seeking of OS developers through their mailing lists.
   Method: A longitudinal study that analyses 17 years of developer mailing list activity in total, over 6 different OS projects is performed, identifying the prevalent information types sought by developers, from a qualitative, grounded analysis of this data. Quantitative analysis of the number-of-responses and response time-lag is also performed.
   Results: The analysis shows that Open Source developers are particularly implementation centric and team focused in their use of mailing lists, mirroring similar findings that have been reported in the literature. However novel findings include the suggestion that OS developers often require support regarding the technology they use during development, that they refer to documentation fairly frequently and that they seek implementation-oriented specifics based on system design principles that they anticipate in advance. In addition, response analysis suggests a large variability in the response rates for different types of questions, and particularly that participants have difficulty ascertaining information on other developer's activities.
   Conclusion: The findings provide insights for those interested in supporting the information needs of OS developer communities: They suggest that the tools and techniques developed in support of co-located developers should be largely mirrored for these communities: that they should be implementation centric, and directed at illustrating "how" the system achieves its functional goals and states. Likewise they should be directed at determining the reason for system bugs: a type of question frequently posed by OS developers but less frequently responded to. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Sharif, Khaironi Y.] Univ Putra Malaysia, FSKTM, SERG, Serdang 43400, Malaysia.
   [English, Michael; Exton, Chris; Collins, J. J.; Buckley, Jim] Univ Limerick, Irish Software Engn Res Ctr LERO, Limerick, Ireland.
   [Ali, Nour] Brighton Univ, Sch Comp Engn & Math, Brighton, E Sussex, England.
C3 Universiti Putra Malaysia; University of Limerick; University of
   Brighton
RP English, M (corresponding author), Univ Limerick, Irish Software Engn Res Ctr LERO, Limerick, Ireland.
RI English, Michael/KIC-0937-2024; Collins, J.J. J/E-5574-2014
OI Buckley, Jim/0000-0001-6928-6746; Ali, Nour/0000-0002-0161-5600; Sharif,
   Khaironi Yatim/0000-0003-3894-1773
FU Science Foundation Ireland [10/CE/I1855]
FX This work was supported, in part, by Science Foundation Ireland Grant
   10/CE/I1855 to Lero - the Irish Software Engineering Research Centre
   (www.lero.ie).
CR [Anonymous], EVOLVING MODEL INFOR
   [Anonymous], P 29 INT C SOFTW ENG
   [Anonymous], 2005, Perspectives on free and open source software
   [Anonymous], 2005, Researching Information Systems and Computing
   Arcuri A., 2008, COMP 30 INT C SOFTW
   Black Duck Software Inc, 2014, ECL JAV DEV TOOLS JD
   Bogdan R.C., 1998, QUALITATIVE RES ED I
   Bonaccorsi A, 2003, RES POLICY, V32, P1243, DOI 10.1016/S0048-7333(03)00051-9
   BRADAC MG, 1994, IEEE T SOFTWARE ENG, V20, P774, DOI 10.1109/32.328994
   Buckley J., 2004, INT WORKSH SOFTW TEC
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Chesbrough H., 2006, OPEN INNOVATION RES
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Daniel S., 2009, Patterns of Evolution in Open Source Projects: A Categorization Schema and Implications
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   English M., 2009, P 5 INT C PRED MOD S
   Erdem A., 1998, 13 INT C AUT SOFTW E
   Feller J., 2002, Understanding Open Source Software development
   Fitzgerald B, 2004, COMPUTER, V37, P92, DOI 10.1109/MC.2004.38
   Fritz T., 2010, 32 ICSE 2010
   Gamalielsson J, 2014, J SYST SOFTWARE, V89, P128, DOI 10.1016/j.jss.2013.11.1077
   Gasperson T., 2009, IRAQ BACK SOLDIER US
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Good J., 1999, Programming Paradigms, Information Types and Graphical Representations: Empirical Investigations of Novice Program Comprehension
   Gutwin C., 2004, Computer Supported Cooperative Work Conference Proceedings, P72, DOI 10.1145/1031607.1031621
   Hangal S., 2009, P 31 INT C SOFTW ENG
   HARTMANN DP, 1977, J APPL BEHAV ANAL, V10, P103, DOI 10.1901/jaba.1977.10-103
   Harwood I.A., 2001, DEV SCENARIOS POSTME
   Jakarta, 2007, AP JAK PROJ
   Johnson WL, 1997, KNOWLEDGE-BASED SOFTWARE ENGINEERING, P53, DOI 10.1023/A:1008655629091
   Kingrey K.P., 2002, LIB PHILOS PRACT, V4
   Ko A.J., 2007, 29 INT C SOFTW ENG I
   Ko AJ, 2005, J VISUAL LANG COMPUT, V16, P41, DOI 10.1016/j.jvlc.2004.08.003
   Ko AJ, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1824760.1824761
   Koponen T., 2005, P 5 WORKSH OP SOURC
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   LaToza T.D., 2010, ACM IEEE 32 INT C SO
   LaToza Thomas D., 2007, P ESECFSE 2007 DUBR, P361, DOI [DOI 10.1145/1287624.1287675, 10.1145/1287624.1287675]
   LaToza ThomasD., 2010, EVALUATION USABILITY, p8:1
   LETOVSKY S, 1987, J SYST SOFTWARE, V7, P325, DOI 10.1016/0164-1212(87)90032-X
   Letovsky S., 1986, 1 WORKSH EMP STUD PR
   LIENTZ BP, 1978, COMMUN ACM, V21, P466, DOI 10.1145/359511.359522
   Liu W., 2005, WORKSH REBSE 2005
   Lucia A. Be, 1996, INT WORKSH PROGR COM
   Markus ML, 2007, J MANAG GOV, V11, P151, DOI 10.1007/s10997-007-9021-x
   Mayrhauser A.V., 1993, 6 INT C COMP AID SOF
   Midha V, 2012, DECIS SUPPORT SYST, V54, P23, DOI 10.1016/j.dss.2012.03.002
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Neill J., 2007, Qualitative versus quantitative research: Key points in a classic debate
   O'Brien M.P., 2001, 13 WORKSH PSYCH PROG
   O'Shea P.A., 2006, INVESTIGATION VIEWS
   OpenOffice, KEY OP SOURC BEST PR
   Pandit N.R., 1996, QUAL REP, P2
   Pennington N., 1987, Empirical Studies of Programmers: Second Workshop B2Empirical Studies of Programmers: Second Workshop
   Pirolli P, 1999, PSYCHOL REV, V106, P643, DOI 10.1037/0033-295X.106.4.643
   Prechelt L, 1998, INT J EMPIRICAL SOFT, P1
   Pressman R.S., 2000, SOFTWARE ENG PRACTIT
   Quilici A, 2000, SCI COMPUT PROGRAM, V36, P285, DOI 10.1016/S0167-6423(99)00039-8
   Raymond E. S., 1998, First Monday, V3
   Raymond E.S., 2001, The Cathedral the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary, P241
   Reid A., 2000, ENVIRON EDUC RES, V6, P66
   Rich C., 1990, PROGRAMMERS APPRENTI
   Riley R., 1996, Journal of Travel & Tourism Marketing, V5, P21, DOI 10.1300/J073v05n01_03
   Roehm T., 2011, 33 ICSE 2011
   Seaman C.B., 2002, INT C SOFTW MAINT IC
   Sharif K.Y., 2012, OPEN SOURCE PROGRAMM
   Sharif K.Y., 2008, 20 ANN WORKSH PSYC P
   Sharif K.Y., 2009, FURTHER OBSERVATION
   Sillito J., 2006, P 14 ACM SIGSOFT INT
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Silvia B., 2010, P 2010 ACM C COMP SU
   Sim S.E., 1998, SUPPORTING MULTIPLE
   Singer J., 1998, INT C SOFTW MAINT IC
   Singer J., 1998, 6 INT WORKSH PROGR C
   SOLOWAY E, 1984, IEEE T SOFTWARE ENG, V10, P595, DOI 10.1109/TSE.1984.5010283
   Sommerville I., 2004, Software Engineering
   Sousa M.J. Castro, 1998, INT C SOFTW MAINT BE
   Starke J., 2009, IEEE INT C SOFTW MAI
   Stol KJ, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2533685
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Thomas R.G.G., 2000, P WORK C ADV VIS INT
   Torvalds L., 2001, JUST FUN STORY ACCID
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Viseur R, 2012, INT J ADV COMPUT SC, V3, P117
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   WESTBROOK L, 1994, LIBR INFORM SCI RES, V16, P241, DOI 10.1016/0740-8188(94)90026-4
   Wiedenback S., 1991, INT J HUM COMPUT INT, P3
   Wilson C., 2007, C RES SERVICE REPORT
   Zayour I., 2001, 9 INT WORKSH PROGR C
NR 90
TC 17
Z9 18
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 77
EP 94
DI 10.1016/j.infsof.2014.09.003
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AU9YI
UT WOS:000345947500006
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Lin, CT
   Tang, KW
   Kapfhammer, GM
AF Lin, Chu-Ti
   Tang, Kai-Wei
   Kapfhammer, Gregory M.
TI Test suite reduction methods that decrease regression testing costs by
   identifying irreplaceable tests
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Regression testing; Test suite reduction; Code
   coverage; Test irreplaceability
ID TEST-CASE PRIORITIZATION; GENETIC ALGORITHM; SELECTION; MINIMIZATION
AB Context: In software development and maintenance, a software system may frequently be updated to meet rapidly changing user requirements. New test cases will be designed to ensure the correctness of new or modified functions, thus gradually increasing the test suite's size. Test suite reduction techniques aim to decrease the cost of regression testing by removing the redundant test cases from the test suite and then obtaining a representative set of test cases that still yield a high level of code coverage.
   Objective: Most of the existing reduction algorithms focus on decreasing the test suite's size. Yet, the differences in execution costs among test cases are usually significant and it may take a lot of execution time to run a test suite consisting of a few long-running test cases. This paper presents and empirically evaluates cost-aware algorithms that can produce the representative sets with lower execution costs.
   Method: We first use a cost-aware test case metric, called Irreplaceability, and its enhanced version, called Elrreplaceability, to evaluate the possibility that each test case can be replaced by others during test suite reduction. Furthermore, we construct a cost-aware framework that incorporates the concept of test irreplaceability into some well-known test suite reduction algorithms.
   Results: The effectiveness of the cost-aware framework is evaluated via the subject programs and test suites collected from the Software-artifact Infrastructure Repository - frequently chosen benchmarks for experimentally evaluating test suite reduction methods. The empirical results reveal that the presented algorithms produce representative sets that normally incur a low cost to yield a high level of test coverage.
   Conclusion: The presented techniques indeed enhance the capability of the traditional reduction algorithms to reduce the execution cost of a test suite. Especially for the additional Greedy algorithm, the presented techniques decrease the costs of the representative sets by 8.10-46.57%. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Lin, Chu-Ti] Natl Chiayi Univ, Dept Comp Sci & Informat Engn, Chiayi, Taiwan.
   [Tang, Kai-Wei] Inst Informat Ind, Cloud Syst Software Inst, Taipei, Taiwan.
   [Kapfhammer, Gregory M.] Allegheny Coll, Dept Comp Sci, Meadville, PA 16335 USA.
C3 National Chiayi University; Allegheny College
RP Lin, CT (corresponding author), Natl Chiayi Univ, Dept Comp Sci & Informat Engn, Chiayi, Taiwan.
EM chutilin@mail.ncyu.edu.tw
FU National Science Council Taiwan [NSC 100-2221-E-415-007-MY2, NSC
   102-2221-E-415-009]
FX This work was supported by the National Science Council Taiwan, under
   Grants NSC 100-2221-E-415-007-MY2 and NSC 102-2221-E-415-009.
CR Alspaugh S., 2007, P 1 ACM INT WORKSH E
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 2005, ACM SIGSOFT SOFTW EN
   Arcuri A., P ACM IEEE INT C SOF, P1
   Binkley D, 1997, IEEE T SOFTWARE ENG, V23, P498, DOI 10.1109/32.624306
   Bozkurt M, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1429
   Chen TY, 1998, INFORM SOFTWARE TECH, V40, P777, DOI 10.1016/S0950-5849(98)00094-9
   Chen TY, 1998, INFORM SOFTWARE TECH, V40, P347, DOI 10.1016/S0950-5849(98)00050-0
   Chung CG, 1997, J SYST SOFTWARE, V39, P145, DOI 10.1016/S0164-1212(96)00169-0
   Chvatal V., 1979, Mathematics of Operations Research, V4, P233, DOI 10.1287/moor.4.3.233
   Clark S. R., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P213, DOI 10.1109/ASE.2011.6100056
   Corral L, 2013, 2013 2ND INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P38, DOI 10.1109/GREENS.2013.6606420
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S., 2006, TRUNLCSE20060004 U N
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Haftmann F, 2007, VLDB J, V16, P145, DOI 10.1007/s00778-006-0028-8
   Hao Zhong, 2006, 28th International Conference on Software Engineering Proceedings, P636, DOI 10.1145/1134285.1134380
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Huang YC, 2012, J SYST SOFTWARE, V85, P626, DOI 10.1016/j.jss.2011.09.063
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jeffrey D, 2007, IEEE T SOFTWARE ENG, V33, P108, DOI 10.1109/TSE.2007.18
   Jiang B, 2012, INFORM SOFTWARE TECH, V54, P739, DOI 10.1016/j.infsof.2012.01.006
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Jourdan GV, 2006, LECT NOTES COMPUT SC, V4263, P1021
   Just R., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P612, DOI 10.1109/ASE.2011.6100138
   Kapfhammer Gregory M., 2008, 1st India Software Engineering Conference. ISEC 2008, P77
   Kapfhammer G. M., 2010, REGRESSION TESTING E
   Karp R, 1972, COMPLEXITY COMPUTER, V40, P85, DOI 10.1007/978-3-540-68279-08
   Kpodjedo S., 2009, P 1 INT S SEARCH BAS, P23
   Lee JG, 2000, INFORM SOFTWARE TECH, V42, P17, DOI 10.1016/S0950-5849(99)00052-X
   Leitner Andreas, 2007, 22 IEEE ACM INT C AU, P417, DOI 10.1145/1321631.1321698
   Lin CT, 2012, INT CONF GENET EVOL, P257, DOI 10.1109/ICGEC.2012.124
   Lin JW, 2009, INFORM SOFTWARE TECH, V51, P679, DOI 10.1016/j.infsof.2008.11.004
   Ma XY, 2005, IEEE SYS MAN CYBERN, P133
   McMaster S, 2008, IEEE T SOFTWARE ENG, V34, P99, DOI 10.1109/TSE.2007.70756
   Mücke T, 2006, INT FED INFO PROC, V227, P223
   Park H, 2008, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON INFORMATION SECURITY AND ASSURANCE, P32
   Prasanna M., 2005, ACAD OPEN INTERNET J, V15
   Rothermel G, 1998, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.1998.738487
   Smith A.M., 2009, P 2009 ACM S APPL CO, p[461, 467], DOI DOI 10.1145/1529282.1529382
   Sommerville I., 2010, SOFTWARE ENG
   Vokolos FI, 1998, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.1998.738488
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Yoo S, 2010, J SYST SOFTWARE, V83, P689, DOI 10.1016/j.jss.2009.11.706
   You D., 2011, P 2011 ACM S APPL CO, P1451
   Yu Y., 2008, P 30 ACM IEEE INT C, P210
   Zhang L, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P213
   Zhong H, 2008, INFORM SOFTWARE TECH, V50, P534, DOI 10.1016/j.infsof.2007.06.003
NR 53
TC 26
Z9 26
U1 1
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2014
VL 56
IS 10
BP 1322
EP 1344
DI 10.1016/j.infsof.2014.04.013
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AN8JO
UT WOS:000340850700010
DA 2024-07-18
ER

PT J
AU Rivero, JM
   Grigera, J
   Rossi, G
   Luna, ER
   Montero, F
   Gaedke, M
AF Matias Rivero, Jose
   Grigera, Julian
   Rossi, Gustavo
   Robles Luna, Esteban
   Montero, Francisco
   Gaedke, Martin
TI Mockup-Driven Development: Providing agile support for Model-Driven Web
   Engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mockups; User-Interface; Agile; Web Engineering; MDD
ID REQUIREMENTS; LANGUAGE
AB Context: Agile software development approaches are currently becoming the industry standard for Web Application development. On the other hand, Model-Driven Web Engineering (MDWE) methodologies are known to improve productivity when building this kind of applications. However, current MDWE methodologies tend to ignore important aspects of Web Applications development supported by agile processes, such as constant customer feedback or early design of user interfaces.
   Objective: In this paper we analyze the difficulties of supporting agile features in MDWE methodologies. Then, we propose an approach that eases the incorporation of well-known agile practices to MDWE.
   Method: We propose using User Interface prototypes (usually known as mockups) as a way to start the modeling process in the context of a mixed agile-MDWE process. To assist this process, we defined a lightweight metamodel that allows modeling features over mockups, interacting with end-users and generating MDWE models. Then, we conducted a statistical evaluation of both approaches (traditional vs. mockup-based modeling).
   Results: First we comment on how agile features can be added to MDWE processes using mockups. Then, we show by means of a quantitative study that the proposed approach is faster, less error-prone and still as complete as traditional MDWE processes.
   Conclusion: The use of mockups to guide the MDWE process helps in the reduction of the development cycle as well as in the incorporation of agile practices in the model-driven workflow. Complete MDWE models can be built and generated by using lightweight modeling over User Interface mockups, and this process suggests being more efficient, in terms of errors and effort, than traditional modeling in MDWE. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Matias Rivero, Jose; Grigera, Julian; Rossi, Gustavo; Robles Luna, Esteban] UNLP, Fac Informat, LIFIA, La Plata, Buenos Aires, Argentina.
   [Matias Rivero, Jose; Rossi, Gustavo] Consejo Nacl Invest Cient & Tecn, Res Inst, RA-1033 Buenos Aires, DF, Argentina.
   [Robles Luna, Esteban] CIC, Res Inst, Buenos Aires, DF, Argentina.
   [Montero, Francisco] UCLM, LoUISE Res Grp, Albacete, Spain.
   [Gaedke, Martin] Tech Univ Chemnitz, Chemnitz, Germany.
C3 National University of La Plata; Consejo Nacional de Investigaciones
   Cientificas y Tecnicas (CONICET); Universidad de Castilla-La Mancha;
   Technische Universitat Chemnitz
RP Rivero, JM (corresponding author), UNLP, Fac Informat, LIFIA, Calle 50 & 120, La Plata, Buenos Aires, Argentina.
EM mrivero@lifia.info.unlp.edu.ar; julian.grigera@lifia.info.unlp.edu.ar;
   gustavo@lifia.info.unlp.edu.ar; erobles@lifia.info.unlp.edu.ar;
   fmontero@dsi.uclm.es; martin.gaedke@informatik.tu-chemnitz.de
RI Rossi, Gustavo/AAE-4736-2020; montero, francisco/U-4830-2019; Gaedke,
   Martin/U-5991-2017
OI montero, francisco/0000-0002-0902-9681; Grigera,
   Julian/0000-0002-7962-4312; Gaedke, Martin/0000-0002-6729-2912
FU PROALAR DAAD - MINCYT [DA/11/11]
FX This project is partially supported by the PROALAR DAAD - MINCYT project
   DA/11/11.
CR Ambler SW, 2003, IEEE SOFTWARE, V20, P71, DOI 10.1109/MS.2003.1231156
   Basili V., 1994, The Goal Question Metric Approach, P528
   Benson E, 2013, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'13 COMPANION), P337
   Cao L, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.1
   Ceri S, 2002, IEEE INTERNET COMPUT, V6, P20, DOI 10.1109/MIC.2002.1020321
   Ceri S, 2000, COMPUT NETW, V33, P137, DOI 10.1016/S1389-1286(00)00040-2
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   da Silva PP, 2001, LECT NOTES COMPUT SC, V1946, P207
   Engelberg D, 2002, INT FED INFO PROC, V99, P203
   Ferreira J, 2007, AGILE 2007, PROCEEDINGS, P50, DOI 10.1109/AGILE.2007.8
   Guerrero-García J, 2009, LA-WEB: 2009 LATIN AMERICAN WEB CONGRESS, P36, DOI 10.1109/LA-WEB.2009.40
   Homrighausen A., 2002, Requirements Engineering, V7, P34, DOI 10.1007/s007660200003
   Koch N., 2008, UML BASED WEB ENG
   Kulak D., 2004, Use cases: requirements in context
   Limbourg Q, 2005, LECT NOTES COMPUT SC, V3425, P200
   Lin J., 2000, DENIM FINDING TIGHTE, P510
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Maguire M, 2001, INT J HUM-COMPUT ST, V55, P587, DOI 10.1006/ijhc.2001.0503
   Martin A, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P42
   Rivero JM, 2012, LECT NOTES BUS INF P, V107, P142
   Rivero JM, 2011, LECT NOTES COMPUT SC, V6997, P257, DOI 10.1007/978-3-642-24434-6_20
   Rivero JM, 2010, LECT NOTES COMPUT SC, V6385s, P13, DOI 10.1007/978-3-642-16985-4_2
   McCurdy M., 2006, Proceedings of the SIGCHI conference on Human Factors in computing systems, P1233, DOI DOI 10.1145/1124772.1124959
   Memmel T, 2008, J UNIVERS COMPUT SCI, V14, P3217
   Moore JM, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P360, DOI 10.1109/ASE.2003.1240338
   Mukasa KS, 2008, INT REQUIR ENG CONF, P327, DOI 10.1109/RE.2008.55
   Panach JI, 2008, J UNIVERS COMPUT SCI, V14, P1480
   Paterno F., 2003, The Handbook of Task Analysis for Human-Computer Interaction, P483
   Ramdoyal R, 2010, LECT NOTES COMPUT SC, V6051, P332, DOI 10.1007/978-3-642-13094-6_27
   Rashid A, 2006, 1 INT WORK MULT REQ, P6
   Ravid A., 2000, Requirements Engineering, V5, P225, DOI 10.1007/PL00010352
   Ricca F., 2010, 2010 ACM IEEE INT S
   Luna ER, 2011, REQUIR ENG, V16, P297, DOI 10.1007/s00766-011-0124-1
   Rossi G., 2008, WEB ENG MODELLING IM, P109
   Schneider K, 2007, LECT NOTES COMPUT SC, V4542, P160
   Sukaviriya N, 2007, LECT NOTES COMPUT SC, V4735, P226
   Sutherland Jeff., 2007, The Scrum papers: Nuts, Bolts
   Ton H, 2007, AGILE 2007, Proceedings, P279, DOI 10.1109/AGILE.2007.2
   Van Welie M., 2003, Interact 2003, P527
   Warfel T.Z., 2009, Prototyping: A practitioner's guide
   Wimmer M., 2007, P 3 INT WORK MOD WEB
   Zhang J, 2003, IC'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON INTERNET COMPUTING, VOLS 1 AND 2, P684
NR 42
TC 42
Z9 45
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2014
VL 56
IS 6
BP 670
EP 687
DI 10.1016/j.infsof.2014.01.011
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG5VH
UT WOS:000335486300007
OA Green Published
DA 2024-07-18
ER

PT J
AU Karpati, P
   Redda, Y
   Opdahl, AL
   Sindre, G
AF Karpati, Peter
   Redda, Yonathan
   Opdahl, Andreas L.
   Sindre, Guttorm
TI Comparing attack trees and misuse cases in an industrial setting
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Security requirements; Requirements modelling; Misuse cases; Attack
   trees; Industrial experiment
ID ELICITING SECURITY REQUIREMENTS; SOFTWARE SECURITY; ACTIVITY DIAGRAMS;
   RISK-MANAGEMENT; SAFETY; IDENTIFICATION; DESIGN; TROPOS
AB The last decade has seen an increasing focus on addressing security already during the earliest stages of system development, such as requirements determination. Attack trees and misuse cases are established techniques for representing security threats along with their potential mitigations. Previous work has compared attack trees and misuse cases in two experiments with students. The present paper instead presents an experiment where industrial practitioners perform the experimental tasks in their workplace. The industrial experiment confirms a central finding from the student experiments: that attack trees tend to help identifying more threats than misuse cases. It also presents a new result: that misuse cases tend to encourage identification of threats associated with earlier development stages than attack trees. The two techniques should therefore be considered complementary and should be used together in practical requirements work. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Karpati, Peter; Redda, Yonathan; Sindre, Guttorm] Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, NO-7491 Trondheim, Norway.
   [Opdahl, Andreas L.] Univ Bergen, Dept Informat Sci & Media Studies, NO-5020 Bergen, Norway.
C3 Norwegian University of Science & Technology (NTNU); University of
   Bergen
RP Opdahl, AL (corresponding author), Univ Bergen, Dept Informat Sci & Media Studies, POB 7802, NO-5020 Bergen, Norway.
EM Peter.Karpati@hrp.no; Yonathan.Redda@gmail.com; Andreas.Opdahl@uib.no;
   Guttorm.Sindre@idi.ntnu.no
RI Opdahl, Andreas Lothe/B-5508-2015
OI Opdahl, Andreas Lothe/0000-0002-3141-1385; Sindre,
   Guttorm/0000-0001-5739-8265
FU Norwegian Research Council [56]
FX This work was part of the ReqSec project [56] funded by the Norwegian
   Research Council.
CR Alexander I, 2003, IEEE SOFTWARE, V20, P58, DOI 10.1109/MS.2003.1159030
   [Anonymous], 1992, The Z Notation
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 2005, SECURITY PATTERNS IN
   Baca D, 2013, J SYST SOFTWARE, V86, P2411, DOI 10.1016/j.jss.2013.04.023
   Baca D, 2013, SOFTWARE PRACT EXPER, V43, P259, DOI 10.1002/spe.2109
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bistarelli S, 2006, FIRST INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P416, DOI 10.1109/ARES.2006.46
   BOSWELL A, 1995, IEEE T SOFTWARE ENG, V21, P63, DOI 10.1109/32.345822
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Buhr RJA, 1998, IEEE T SOFTWARE ENG, V24, P1131, DOI 10.1109/32.738343
   Buyens K, 2007, ARES 2007: SECOND INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P1034
   Chowdhury Mohammad Jabed Morshed, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P132, DOI 10.1007/978-3-642-28714-5_11
   Cohen J., 1988, STAT POWER ANAL BEHA
   Daramola O., 2012, OTM CONF INT C MOV M, P194, DOI [10.1007/978-3-642-33618-828, DOI 10.1007/978-3-642-33618-828]
   Darimont R, 1997, PROC INT CONF SOFTW, P612, DOI 10.1145/253228.253499
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Diallo M.H., 2006, P INT WORK C REQ ENG
   Dimitrakos T, 2003, INT FED INFO PROC, V105, P159
   Dubois E, 2010, INTENTIONAL PERSPECTIVES ON INFORMATION SYSTEMS ENGINEERING, P289, DOI 10.1007/978-3-642-12544-7_16
   Dunning D, 2003, CURR DIR PSYCHOL SCI, V12, P83, DOI 10.1111/1467-8721.01235
   Edge KS, 2006, MILCOM 2006, VOLS 1-7, P493
   Elahi G., 2012, THESIS U TORONTO
   Elahi G, 2010, REQUIR ENG, V15, P41, DOI 10.1007/s00766-009-0090-z
   Firesmith Donald., 2003, J OBJECT TECHNOL, V2, P53
   Gandotra V, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P407, DOI 10.1109/ICSEA.2009.65
   Gangemi A, 2002, LECT NOTES ARTIF INT, V2473, P166
   Gegick M., 2005, Proceedings of the 2005 workshop on Software engineering for secure systems building trustworthy applications, SESS '05, P1
   Giorgini P, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P167, DOI 10.1109/RE.2005.43
   GRANT DA, 1948, PSYCHOL BULL, V45, P427, DOI 10.1037/h0053912
   Hall A, 2002, IEEE SOFTWARE, V19, P18, DOI 10.1109/52.976937
   Herrmann A., 2011, P 1 INT WORKSH AL BU
   Hopkins W.G., 2001, NEW VIEW STAT
   Höst M, 2005, PROC INT CONF SOFTW, P470
   Houmb SH, 2010, REQUIR ENG, V15, P63, DOI 10.1007/s00766-009-0093-9
   Hussein M, 2006, 13TH ANNUAL IEEE INTERNATIONAL SYMPOSIUM AND WORKSHOP ON ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P279, DOI 10.1109/ECBS.2006.70
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Karpati P., 2011, 2011 Sixth International Conference on Availability, Reliability and Security, P507, DOI 10.1109/ARES.2011.77
   Karpati P., 2010, P 1 SEC C EUR
   Karpati P, 2010, ICSOFT 2010: PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 2, P92
   Karpati P, 2010, LECT NOTES COMPUT SC, V6182, P262, DOI 10.1007/978-3-642-14192-8_24
   Katta V, 2010, LECT NOTES BUS INF P, V68, P1
   Kewley DL, 2001, IEEE T SYST MAN CY A, V31, P331, DOI 10.1109/3468.935052
   Levin D, 2003, DARPA INFORMATION SURVIVABILITY CONFERENCE AND EXPOSITION, VOL I, PROCEEDINGS, P110, DOI 10.1109/DISCEX.2003.1194877
   Lin LC, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P354
   Liu L, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P151
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   Massacci F, 2011, LECT NOTES BUS INF P, V83, P622
   Matulevicius R, 2008, LECT NOTES COMPUT SC, V5074, P541
   Maurya S., 2009, WORKB P HACK, P59
   McDermott J., 1999, Proceedings 15th Annual Computer Security Applications Conference (ACSAC'99), P55, DOI 10.1109/CSAC.1999.816013
   Mouratidis H, 2010, INT J INTELL SYST, V25, P813, DOI 10.1002/int.20432
   Object Management Group Inc, UML R RES PAG
   Opdahl AL, 2009, INFORM SOFTWARE TECH, V51, P916, DOI 10.1016/j.infsof.2008.05.013
   Raspotnig C, 2012, LECT NOTES BUS INF P, V113, P347
   Raspotnig C, 2013, J SYST SOFTWARE, V86, P1124, DOI 10.1016/j.jss.2012.12.002
   Rodriguez A., 2005, P 3 INT WORKSH SEC I, P287
   Rodriguez A, 2006, LECT NOTES COMPUT SC, V4231, P32
   Roy A., 2010, Poverty capital: Microfinance and the making of development, P1, DOI DOI 10.1145/1852666.1852698
   Schmidt Holger, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P367, DOI 10.1007/978-3-642-21640-4_28
   Schneier B, 1999, DR DOBBS J, V24, P21
   Schneier B., 2000, Secrets and Lies: Digital Security in a Networked World
   Schoenfeld D.A., 2010, Statistical considerations for clinical trials and scientific experiments
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Sindre G., 2002, P 2 S REQ ENG INF SE
   SINDRE G, 2008, J INFORM PRIVACY SEC, V4, P3
   Sindre G, 2007, INT FED INFO PROC, V244, P252
   Sindre G, 2007, LECT NOTES COMPUT SC, V4542, P355
   Stålhane T, 2007, LECT NOTES COMPUT SC, V4801, P423
   Stalhane T, 2008, LECT NOTES COMPUT SC, V5301, P721, DOI 10.1007/978-3-540-87875-9_50
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Tondel IA, 2010, FIFTH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY: ARES 2010, PROCEEDINGS, P438, DOI 10.1109/ARES.2010.101
   Van Lamsweerde A., 2003, RHAS, V3, P49
   Wang J., 2011, INT J INFORM SECUR R, V1, P20, DOI DOI 10.20533/ijisr.2042.4639.2011.0003
   White S.A., 2008, 2008029 IBM COOP
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   Zonouz SA, 2009, I C DEPEND SYS NETWO, P439, DOI 10.1109/DSN.2009.5270307
NR 78
TC 14
Z9 17
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2014
VL 56
IS 3
BP 294
EP 308
DI 10.1016/j.infsof.2013.10.004
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA8NU
UT WOS:000331353000002
DA 2024-07-18
ER

PT J
AU Kroeger, TA
   Davidson, NJ
   Cook, SC
AF Kroeger, Trent A.
   Davidson, Neil J.
   Cook, Stephen C.
TI Understanding the characteristics of quality for software engineering
   processes: A Grounded Theory investigation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering processes; Quality attributes; Quality properties;
   Grounded Theory
ID PROCESS IMPROVEMENT; EXPERIENCES
AB Context: Software engineering organizations routinely define and implement processes to support, guide and control project execution. An assumption underlying this process-centric approach to business improvement is that the quality of the process will influence the quality, cost and time-to-release of the software produced. A critical question thus arises of what constitutes quality for software engineering processes.
   Objective: To identify criteria used by experienced practitioners to judge the quality of software engineering processes and to understand how knowledge of these criteria and their relationships may be useful for those undertaking software process improvement activities.
   Method: Interviews were conducted with 17 experienced software engineering practitioners from a range of geographies, roles and industry sectors. Published reports from 30 software process improvement case-studies were selected from multiple peer-reviewed software journals. A qualitative Grounded Theory-based methodology was employed to systematically analyze the collected data to synthesize a model of quality for software engineering processes.
   Results: The synthesized model suggests that practitioners perceive the overall quality of a software engineering process based on four quality attributes: suitability, usability, manageability and evolvability. Furthermore, these judgments are influenced by key properties related to the semantic content, structure, representation and enactment of that process. The model indicates that these attributes correspond to particular organizational perspectives and that these differing views may explain role-based conflicts in the judgement of process quality.
   Conclusion: Consensus exists amongst practitioners about which characteristics of software engineering process quality most influence project outcomes. The model presented provides a terminological framework that can facilitate precise discussion of software engineering process issues and a set of criteria that can support activities for software process definition, evaluation and improvement. The potential exists for further development of this model to facilitate optimization of process properties to match organizational needs. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Kroeger, Trent A.; Davidson, Neil J.; Cook, Stephen C.] Univ S Australia, Def & Syst Inst, Mawson Lakes, SA 5095, Australia.
C3 University of South Australia
RP Davidson, NJ (corresponding author), Univ S Australia, Def & Syst Inst, Mawson Lakes, SA 5095, Australia.
EM trent.kroeger@adelaide.edu.au; Neil.Davidson@unisa.edu.au
CR Aaen I., 2006, SOFTWARE FOCUS, V12, P267
   [Anonymous], P 3 INT S EMP SOFTW
   [Anonymous], 2008, STAT PAPERS SERIES M
   [Anonymous], 1992, CMUSEI92TR004
   [Anonymous], 2001, 912612001 ISOIEC
   [Anonymous], 2006, CMUSEI2011HB001
   ARLOW J, 1997, SOFTWARE PROCESS IMP, V3, P105
   Baddoo N, 2003, J SYST SOFTWARE, V66, P23, DOI 10.1016/S0164-1212(02)00060-2
   Baharom F., 2011, P 2011 INT C EL ENG
   BANDINELLI S, 1995, IEEE T SOFTWARE ENG, V21, P440, DOI 10.1109/32.387473
   Basili V., 2002, IEEE SOFTWARE, V11, P58
   Basili V.R., 1992, Software Modeling and Measurement: The Goal/Question/Metric Paradigm
   Batista J., 2000, Software Process Improvement and Practice, V5, P243, DOI 10.1002/1099-1670(200012)5:4<243::AID-SPIP126>3.0.CO;2-0
   BHANDARI I, 1993, IEEE T SOFTWARE ENG, V19, P1157, DOI 10.1109/32.249661
   Boehm B., 2006, P 28 INT C SOFTW ENG, P29
   Boehm B.W., 1978, Characteristics of Software Quality
   Brassard M., 1989, MEMORY JOGGER PLUS F
   Buede D.M., 2009, Wiley Series in Systems Engineering and Management, Vsecond
   Canfora G, 2006, SOFTWARE PRACT EXPER, V36, P283, DOI 10.1002/spe.697
   Checkland P., 1981, Systems thinking, systems practice, V10th ed
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   Coleman G, 2008, J SYST SOFTWARE, V81, P772, DOI 10.1016/j.jss.2007.07.027
   Crotty M., 1998, Phenomenology and nursing research
   De Lucia A, 2003, J SYST SOFTWARE, V65, P87, DOI 10.1016/S0164-1212(02)00051-1
   Deutsch M., 1988, Software Quality Engineering: A Total Technical and Management Approach
   Diaz M, 1997, IEEE SOFTWARE, V14, P75, DOI 10.1109/52.605934
   Díaz P, 2007, J SYST SOFTWARE, V80, P1375, DOI 10.1016/j.jss.2006.10.042
   Dingsoyr T, 2008, IEEE T SOFTWARE ENG, V34, P212, DOI 10.1109/TSE.2007.70767
   Dowson M., 1993, Second International Conference on the Software Process. Continuous Software Process Improvement (Cat. No.93TH0509-0), P54, DOI 10.1109/SPCON.1993.236822
   Dromey RG, 1996, IEEE SOFTWARE, V13, P33, DOI 10.1109/52.476284
   Elliott M, 2006, SOFTWARE QUAL J, V14, P53, DOI 10.1007/s11219-006-6001-3
   Emmerich W., 1991, P 6 INT WORKSH SOFTW, P184
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Gorschek T, 2004, SOFTWARE PRACT EXPER, V34, P1311, DOI 10.1002/spe.615
   Grenning J, 2001, IEEE SOFTWARE, V18, P27, DOI 10.1109/52.965799
   Guceglioglu A.S., 2011, P 11 INT C QUAL SOFT
   Guceglioglu AS, 2005, LECT NOTES COMPUT SC, V3792, P118
   Guzmon J. G., 2006, Software Process Improvement and Practice, V11, P261, DOI 10.1002/spip.270
   Haley TJ, 1996, IEEE SOFTWARE, V13, P33, DOI 10.1109/52.542292
   HENRY J, 1992, IEEE SOFTWARE, V9, P103, DOI 10.1109/52.168866
   HUMPHREY WS, 1988, IEEE SOFTWARE, V5, P73, DOI 10.1109/52.2014
   Jackson M.C., 2000, SYSTEMS APPROACHES M
   Kelly DP, 1999, COMPUTER, V32, P41, DOI 10.1109/2.796108
   Kroeger T., 2009, P 2009 AUSTR SOFTW E
   Leedy P.D., 2010, PRACTICAL RES PEAR
   Lonchamp J., 1993, Second International Conference on the Software Process. Continuous Software Process Improvement (Cat. No.93TH0509-0), P41, DOI 10.1109/SPCON.1993.236823
   McCall J., 1977, Factors in software quality, V1
   McGuire E., 1999, Software Process Improvement: Concepts and Practices
   Morisio M, 2002, J SYST SOFTWARE, V61, P189, DOI 10.1016/S0164-1212(01)00147-9
   Osterweil L., 1987, P 9 INT C SOFTW ENG, P13
   Pitterman B, 2000, IEEE SOFTWARE, V17, P89, DOI 10.1109/52.854074
   Polo M, 2002, SOFTWARE PRACT EXPER, V32, P1239, DOI 10.1002/spe.481
   Salo O., 2007, SOFTWARE PROCESS IMP, V12, P81
   Sargut KU, 2006, SOFTWARE QUAL J, V14, P135, DOI 10.1007/s11219-006-7599-x
   Schuppenies R., 2002, SOFTWARE PROCESS ENG
   Schwomeyer W. A., 2002, Systems Engineering, V5, P41, DOI 10.1002/sys.10005
   Shepard T., 1992, COMMUN ACM, V35, P44
   Sommerville I., 1996, HUMAN SOCIAL ORG INF
   SORUMGARD S, 1995, PROCEEDINGS OF THE 4TH SOFTWARE QUALITY CONFERENCE, VOLS 1 AND 2, P318
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Sweeney A, 1997, SOFTWARE QUAL J, V6, P265, DOI 10.1023/A:1018572321182
   Trienekens J, 2001, SOFTWARE QUAL J, V9, P269, DOI 10.1023/A:1013715203889
   Tyrrell S., 2000, Crossroads, V6, P22
   Van Loon H., 2004, PROCESS ASSESSMENT I
   Villalón JACM, 2002, SOFTWARE QUAL J, V10, P261, DOI 10.1023/A:1021638523413
   WOHLWEND H, 1994, IEEE T SOFTWARE ENG, V20, P833, DOI 10.1109/32.368125
   Young Ha Hwang, 2006, Systems Engineering, V9, P35, DOI 10.1002/sys.20041
NR 67
TC 16
Z9 19
U1 0
U2 30
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2014
VL 56
IS 2
BP 252
EP 271
DI 10.1016/j.infsof.2013.10.003
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 285TN
UT WOS:000329418000009
DA 2024-07-18
ER

PT J
AU Yu, ZX
   Bai, CG
   Cai, KY
AF Yu, Zhongxing
   Bai, Chenggang
   Cai, Kai-Yuan
TI Mutation-oriented test data augmentation for GUI software fault
   localization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Fault localization; GUI software; Mutation operator; Test data
   augmentation
AB Context: Fault localization lies at the heart of program debugging and often proceeds by contrasting the statistics of program constructs executed by passing and failing test cases. A vital issue here is how to obtain these "suitable" test cases. Techniques presented in the literature mostly assume the existence of a large test suite a priori. However, developers often encounter situations where a failure occurs, but where no or no appropriate test suite is available for use to localize the fault.
   Objective: This paper aims to alleviate this key limitation of traditional fault localization techniques for GUI software particularly, namely, it aims at enabling cost-effective fault localization process for GUI software in the described scenario.
   Method: To address this scenario, we propose a mutation-oriented test data augmentation technique, which actually is directed by the "similarity" criterion in GUI software's test case context towards the generation of test suite with excellent fault localization capabilities. More specifically, the technique mainly uses four proposed novel mutation operators to iteratively mutate some failing GUI test cases' event sequences to derive new test cases potentially useful to localize the specific encountered fault. We then compare the fault localization performance of the test suite generated using this technique with that of an original provided large event-pair adequate test suite on some GUI applications.
   Results: The results indicate that the proposed technique is capable of generating a test suite that has comparable, if not better, fault localization effectiveness to the event-pair adequate test suite, but it is much smaller and it is generated immediately once a failure is encountered by developers.
   Conclusion: It is concluded that the proposed technique can truly enable quick-start cost-effective fault localization process under the investigated all-too-common scenario, greatly alleviating one key limitation of traditional fault localization techniques and prompting the test-diagnose-repair cycle. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Yu, Zhongxing; Bai, Chenggang; Cai, Kai-Yuan] Beihang Univ, Sch Automat Sci & Elect Engn, Beijing 100191, Peoples R China.
C3 Beihang University
RP Yu, ZX (corresponding author), Beihang Univ, Sch Automat Sci & Elect Engn, Beijing 100191, Peoples R China.
EM yuzhongxing88@gmail.com; bcg@buaa.edu.cn; kycai@buaa.edu.cn
RI Yu, Zhongxing/AAH-1064-2019
FU National Natural Science Foundation of China [61272164]; Beijing Natural
   Science Foundation [4112033]
FX This work was supported in part by the National Natural Science
   Foundation of China (Grant No. 61272164) and the Beijing Natural Science
   Foundation (Grant No. 4112033). The authors thank the anonymous
   reviewers very much for their detailed and helpful comments.
CR Abraham R, 2009, IEEE T SOFTWARE ENG, V35, P94, DOI 10.1109/TSE.2008.73
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   AGRAWAL H, 1993, SOFTWARE PRACT EXPER, V23, P589, DOI 10.1002/spe.4380230603
   Alexander RT, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P341, DOI 10.1109/ISSRE.2002.1173285
   [Anonymous], THESIS U PITTSBURGH
   [Anonymous], 2011, P 8 EUR SOFTW ENG C, DOI DOI 10.1145/2025113.2025144
   [Anonymous], 2010, P ACM SIGSOFT INT S
   [Anonymous], 2005, ASE, DOI [10.1145/1101908.1101966, DOI 10.1145/1101908.1101966]
   [Anonymous], 2008, ISSTA
   Arlt S., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P301, DOI 10.1109/ISSRE.2012.25
   Artzi S, 2012, IEEE T SOFTWARE ENG, V38, P314, DOI 10.1109/TSE.2011.76
   Artzi Shay., 2010, P 32 ACMIEEE INT C S, P265
   Ayari K, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1074
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   DiGiuseppe N., 2011, P 20 INT S SOFTW TES, P210, DOI DOI 10.1145/2001420.2001446
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Domínguez-Jiménez JJ, 2011, INFORM SOFTWARE TECH, V53, P1108, DOI 10.1016/j.infsof.2011.03.008
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Gupta N., 2005, Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, New York, NY, USA: Association for Computing Machinery, ASE'05, P263, DOI 10.1145/1101908.1101948
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Jiang B, 2012, INFORM SOFTWARE TECH, V54, P739, DOI 10.1016/j.infsof.2012.01.006
   Jones J A., 2007, Debugging in parallel, P16
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liu C, 2006, IEEE T SOFTWARE ENG, V32, P831, DOI 10.1109/TSE.2006.105
   Liu MH, 2006, PROC IEEE INT CONF S, P113
   Masri Wes, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P165, DOI 10.1109/ICST.2010.22
   Masri Wes., 2009, Proceedings of the 2Nd International Workshop on Defects in Large Software Systems: Held in Conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2009), DEFECTS '09, P1
   Memon A. M., 2001, Software Engineering Notes, V26, P256, DOI 10.1145/503271.503244
   Memon AM, 2005, IEEE T SOFTWARE ENG, V31, P884, DOI 10.1109/TSE.2005.117
   Offutt A.J., 1988, Automatic Test Data Generation
   Offutt AJ, 1999, SOFTWARE PRACT EXPER, V29, P167, DOI 10.1002/(SICI)1097-024X(199902)29:2<167::AID-SPE225>3.0.CO;2-V
   Offutt J, 2011, INFORM SOFTWARE TECH, V53, P1098, DOI 10.1016/j.infsof.2011.03.007
   Papadakis M, 2012, INFORM SOFTWARE TECH, V54, P915, DOI 10.1016/j.infsof.2012.02.004
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Santelices Raul, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P218, DOI 10.1109/ASE.2008.32
   VESSEY I, 1985, INT J MAN MACH STUD, V23, P459, DOI 10.1016/S0020-7373(85)80054-7
   VOAS JM, 1992, IEEE T SOFTWARE ENG, V18, P717, DOI 10.1109/32.153381
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Wong W. Eric, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P27, DOI 10.1109/ISSRE.2008.15
   Wong W.E., INT J SOFTWARE ENG K, P19
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   YOO S, 2008, TR0804 KINGS COLL LO
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Yuan X, 2011, IEEE T SOFTWARE ENG, V37, P559, DOI 10.1109/TSE.2010.50
   Yuan X, 2010, INFORM SOFTWARE TECH, V52, P559, DOI 10.1016/j.infsof.2009.11.009
   Yuan X, 2010, IEEE T SOFTWARE ENG, V36, P81, DOI 10.1109/TSE.2009.68
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   Zhang XY, 2007, SOFTWARE PRACT EXPER, V37, P935, DOI 10.1002/spe.795
   Zhang ZY, 2010, J SYST SOFTWARE, V83, P174, DOI 10.1016/j.jss.2009.09.041
   Zhongxing Yu, 2011, Proceedings of the 2011 IEEE 13th International Symposium on High-Assurance Systems Engineering (HASE 2011), P325, DOI 10.1109/HASE.2011.29
NR 55
TC 10
Z9 11
U1 0
U2 28
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2013
VL 55
IS 12
BP 2076
EP 2098
DI 10.1016/j.infsof.2013.07.004
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 242QW
UT WOS:000326258100002
DA 2024-07-18
ER

PT J
AU Galster, M
   Avgeriou, P
   Tofan, D
AF Galster, Matthias
   Avgeriou, Paris
   Tofan, Dan
TI Constraints for the design of variability-intensive service-oriented
   reference architectures - An industrial case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Variability; Service-oriented architecture; SOA; Reference
   architectures; e-Government; Case study
ID FRAMEWORK
AB Context: Service-oriented architecture has become a widely used concept in software industry. However, we currently lack support for designing variability-intensive service-oriented systems. Such systems could be used in different environments, without the need to design them from scratch. To support the design of variability-intensive service-oriented systems, reference architectures that facilitate variability in instantiated service-oriented architectures can help.
   Objective: The design of variability-intensive service-oriented reference architectures is subject to specific constraints. Architects need to know these constraints when designing such reference architectures. Our objective is to identify these constraints.
   Method: An exploratory case study was performed in the context of local e-government in the Netherlands to study constraints from the perspective of (a) the users of a variability-intensive service-oriented system (municipalities that implement national laws), and (b) the implementing organizations (software vendors). We collected data through interviews with representatives from five organizations, document analyses and expert meetings.
   Results: We identified ten constraints (e.g., organizational constraints, integration-related constraints) which affect the process of designing reference architectures for variability-intensive service-oriented systems. Also, we identified how stakeholders are affected by these constraints, and how constraints are specific to the case study domain.
   Conclusions: Our results help design variability-intensive service-oriented reference architectures. Furthermore, our results can be used to define processes to design such reference architectures. (C) 2012 Elsevier By. All rights reserved.
C1 [Galster, Matthias; Avgeriou, Paris; Tofan, Dan] Univ Groningen, Dept Math & Comp Sci, NL-9700 AK Groningen, Netherlands.
C3 University of Groningen
RP Galster, M (corresponding author), Univ Groningen, Dept Math & Comp Sci, POB 407, NL-9700 AK Groningen, Netherlands.
EM mgalster@ieee.org; paris@cs.rug.nl; d.c.tofan@rug.nl
OI Tofan, Dan/0000-0001-9376-4576; Avgeriou, Paris/0000-0002-7101-0754
FU NWO SaS-LeG [638.000.000.07N07]
FX The authors thank all individuals and organizations that participated in
   the study. We also thank the anonymous reviewers for their valuable
   feedback. This research has been partially sponsored by NWO SaS-LeG,
   contract no. 638.000.000.07N07.
CR Abu-Matar M, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P468
   Aiello Marco, 2010, IEEE 34th Annual Computer Software and Applications Conference Workshops (COMPSACW 2010), P245, DOI 10.1109/COMPSACW.2010.50
   Anderson W, 2007, ICCBSS 2007: SIXTH INTERNATIONAL IEEE CONFERENCE ON COMMERCIAL-OFF-THE-SHELF (COTS)-BASED SOFTWARE SYSTEMS, PROCEEDINGS, P141
   Angelov S, 2008, J SYST SOFTWARE, V81, P1816, DOI 10.1016/j.jss.2008.02.023
   Angelov S, 2008, LECT NOTES COMPUT SC, V5292, P225, DOI 10.1007/978-3-540-88030-1_17
   Angelov S, 2012, INFORM SOFTWARE TECH, V54, P417, DOI 10.1016/j.infsof.2011.11.009
   Angelov S, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P141, DOI 10.1109/WICSA.2009.5290800
   [Anonymous], 2006, Technical Report
   [Anonymous], 1988, Qualitative research methods, DOI DOI 10.4135/9781412985000
   [Anonymous], REF ARCH SERV OR ARC
   [Anonymous], ADV DIGITAL GOVT TEC
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Boehmann T., 2003, 36 ANN HAW INT C SYS, p74b
   Bouguettaya A., 2004, PRACTICAL HDB INTERN, P1
   Bouguettaya A, 2011, IEEE T SERV COMPUT, V4, P3, DOI 10.1109/TSC.2010.36
   Bouma T.D., 2010, PROCESS ANAL REQUIRE, P131
   Choi H, 2009, 11TH INTERNATIONAL CONFERENCE ON ADVANCED COMMUNICATION TECHNOLOGY, VOLS I-III, PROCEEDINGS,, P284
   Cloutier R, 2010, SYSTEMS ENG, V13, P14, DOI 10.1002/sys.20129
   Cohen S., 2010, MANAGING VARIATION S
   Costagliola G., 2006, 6 INT C WEB ENG, P103
   Dodani MH, 2006, J OBJECT TECHNOL, V5, P41, DOI 10.5381/jot.2006.5.8.c5
   Erl T., 2009, DESIGN PATTERNS
   Fagri TorErlend., 2006, Software Product Lines, P275, DOI DOI 10.1007/978-3-540-33253-4_8
   Futo I, 2007, ITI, P419
   Galster M., 2011, 7 INT ACM SIGS C QUA
   Galster M., 2011, JOINT ACM SIGSOFT C, P153, DOI DOI 10.1145/2000259.2000285
   Galster M, 2008, IEEE CONGRESS ON SERVICES 2008, PT I, PROCEEDINGS, P399, DOI 10.1109/SERVICES-1.2008.62
   Galster M, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P171, DOI 10.1109/WICSA.2011.30
   Gerring J, 2007, CASE STUDY RESEARCH: PRINCIPLES AND PRACTICES, P1, DOI 10.2277/0521676568
   Gomaa H., 2005, P ACSIEEE 2005 INT C, P110
   Grosskurth A, 2005, PROC IEEE INT CONF S, P661
   GU Q, 2009, WORK IEEE IFIP C SOF, P289
   Gu Q, 2009, SERV ORIENTED COMPUT, V3, P171, DOI 10.1007/s11761-009-0046-7
   Hadaytullah, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P687, DOI 10.1109/ICWS.2009.92
   Haesen R, 2008, LECT NOTES COMPUT SC, V5074, P375
   Hafner M, 2009, J UNIVERS COMPUT SCI, V15, P2916
   High R., 2005, IBMS SOA FDN ARCHITE, P68
   Hilliard R., 2010, P 4 EUR C SOFTW ARCH, P312
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   Kazhamiakin R, 2010, LECT NOTES COMPUT SC, V6500, P117
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Lee J, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P275, DOI 10.1109/SPLC.2008.34
   Lee J, 2010, IEEE SOFTWARE, V27, P35, DOI 10.1109/MS.2010.30
   Leppaniemi Jari, 2009, PICMET '09 - 2009 Portland International Conference on Management of Engineering & Technology, P959, DOI 10.1109/PICMET.2009.5262023
   Medeiros F.M., 2009, P WORKSHOP SERVICE O, P1
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Muller G., 2010, REFERENCE ARCHITECTU, P1
   Nakagawa EY, 2011, LECT NOTES COMPUT SC, V6903, P207, DOI 10.1007/978-3-642-23798-0_22
   Nakamura E., 2009, The Chemistry of Organocopper Compounds, P1
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Peristeras V, 2009, SERV ORIENTED COMPUT, V3, P3, DOI 10.1007/s11761-009-0040-0
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Reiff-Marganiec S, 2008, LECT NOTES COMPUT SC, V5377, P134, DOI 10.1007/978-3-540-89897-9_12
   Robson C., 2002, Real World Research, V2nd
   de Oliveira LBR, 2010, LECT NOTES COMPUT SC, V6285, P360, DOI 10.1007/978-3-642-15114-9_29
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Segura S., 2007, 1 WORKSH SERV OR ARC, P1
   Sinnema M, 2006, LECT NOTES COMPUT SC, V4039, P101
   Soederstroem E., 2007, ENTERPRISE INTEROPER, P389
   Strauss A.L., 1990, BASICS QUALITATIVE R
   Stricker V., 2010, Towards the future internet- emerging trends from European research, P149, DOI DOI 10.3233/978-1-60750-539-6-149
   Sun CA, 2010, J SYST SOFTWARE, V83, P502, DOI 10.1016/j.jss.2009.10.011
   VANDENHEUVEL WJ, 2009, WORKSH PRINC ENG SER, P26
   Verner JM, 2009, INT CONF RES CHAL, P313, DOI 10.1109/RCIS.2009.5089295
   Vogel O., 2009, SOFTWARE ARCHITEKTUR
   Vogt P., 2005, DICTIONARY STAT METH
   Welke R, 2011, COMPUTER, V44, P61, DOI 10.1109/MC.2011.56
   Weston R., 2009, SAAS VENDOR SELECTIO, P12
   Winberg O., 2007, REFERENCE ARCHITECTU, P23
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
   Zheng QH, 2008, INT C COMP SUPP COOP, P1047
NR 73
TC 14
Z9 15
U1 0
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2013
VL 55
IS 2
BP 428
EP 441
DI 10.1016/j.infsof.2012.09.011
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 060EO
UT WOS:000312759500016
DA 2024-07-18
ER

PT J
AU Teruel, MA
   Navarro, E
   López-Jaquero, V
   Montero, F
   Jaen, J
   González, P
AF Teruel, Miguel A.
   Navarro, Elena
   Lopez-Jaquero, Victor
   Montero, Francisco
   Jaen, Javier
   Gonzalez, Pascual
TI Analyzing the understandability of Requirements Engineering languages
   for CSCW systems: A family of experiments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Collaborative systems; Awareness; Controlled experiment;
   Understandability; Requirements Engineering; Meta-analysis
ID SUPPORT
AB Context: A collaborative system is a special kind of software whose users can perform collaboration, communication and collaboration tasks. These systems usually have a high number of non-functional requirements, resulting from the users' need of being aware of other users with whom to collaborate, that is, the workspace awareness. Objective: This paper aims at evaluating two Requirements Engineering languages i* and CSRML (an extension of in order to determine which is the most suitable one to specify requirements of collaborative systems, taking into account their special characteristics regarding collaboration and awareness.
   Method: We performed a family of experiments comprising an original experiment and two replicas. They were performed by 30, 45 and 9 Computer Science students, respectively, from Spain and Argentina. These subjects filled in two understandability questionnaires once they analyzed the requirements models of two systems: an e-learning collaborative system and a conference review system with some collaborative aspects support. Both models were specified by using the evaluated languages.
   Results: The statistical analysis of the family of experiments showed that the understandability was higher for the models specified with CSRML than for those specified with i*, especially for collaborative aspects. This result was also confirmed by the meta-analysis conducted.
   Conclusions: CSRML surpasses i* when modeling collaborative systems requirements models due to the specific expressiveness introduced to represent collaboration between users and awareness and the new resorts to manage actors and roles. (c) 2012 Elsevier B.V. All rights reserved.
C1 [Teruel, Miguel A.; Navarro, Elena; Lopez-Jaquero, Victor; Montero, Francisco; Gonzalez, Pascual] Univ Castilla La Mancha, Comp Syst Dept, LoUISE Res Grp, Albacete 02071, Spain.
   [Jaen, Javier] Univ Politecn Valencia, Dept Sistemas Informat & Computac, ISSI, Valencia 46022, Spain.
C3 Universidad de Castilla-La Mancha; Universitat Politecnica de Valencia
RP Navarro, E (corresponding author), Univ Castilla La Mancha, Comp Syst Dept, LoUISE Res Grp, Avda Espana S-N, Albacete 02071, Spain.
EM miguel@dsi.uclm.es; enavarro@dsi.uclm.es; victor@dsi.uclm.es;
   fmontero@dsi.uclm.es; fjaen@dsic.upv.es; pgonzalez@dsi.uclm.es
RI montero, francisco/U-4830-2019; López-Jaquero, Víctor/AAE-2232-2022;
   Navarro, Elena/I-7452-2013; González, Pascual/E-3693-2016; Martínez,
   Miguel Ángel Teruel/AAD-2356-2020
OI montero, francisco/0000-0002-0902-9681; Navarro,
   Elena/0000-0001-9496-6890; González, Pascual/0000-0003-3549-5712;
   Martínez, Miguel Ángel Teruel/0000-0003-0102-6918; Jaen,
   Javier/0000-0002-8815-9643; Lopez Jaquero, Victor
   Manuel/0000-0003-2093-4065
FU Junta de Comunidades de Castilla-La Mancha [PEII09-0054-9581]; (DESACO)
   from the Spanish Government [TIN2008-06596-C02-01]
FX This work has been partially supported by the grant (PEII09-0054-9581)
   from the Junta de Comunidades de Castilla-La Mancha and by the grant
   (DESACO, TIN2008-06596-C02-01) from the Spanish Government. We would
   like to thank Leandro Antonelli (Software Engineering teacher at UNLP),
   Francisco Parreno (Statistics teacher at UCLM) and Oscar Dieste
   (Empirical Software Engineering expert at UPM) for their advices during
   the course of this study. We would also like to thank Symbia IT Corp.
   software engineers for their feedback to help us to improve the
   questionnaires.
CR Abrahao S, 2011, INFORM SCIENCES, V181, P3356, DOI 10.1016/j.ins.2011.04.005
   Al-Subaie H. S., 2006, 4 INT WORKSH COMP EV, P8, DOI DOI 10.1109/CERE.2006.3
   Anda B., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P402
   [Anonymous], 1991, Statistical principles in experimental design
   [Anonymous], 2005, ADDISON WESLEY OBJEC
   [Anonymous], 2006, COMPR MET
   [Anonymous], THESIS U GRANADA
   [Anonymous], 2006, Introduction to Probability
   [Anonymous], 1992, COMPUT SUPP COOP W J, DOI DOI 10.1007/BF00752449
   [Anonymous], 2001, StandardISO/IEC9126
   Babar MA, 2006, J SYST SOFTWARE, V79, P912, DOI 10.1016/j.jss.2005.06.043
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bereiter C., 2002, Education and Mind in the Knowledge Age
   Canfora G., 2006, P 2006 ACMIEEE INT S, P364
   Castro J., 2001, Advanced Information Systems Engineering. 13th International Conference, CAiSE 2001. Proceedings (Lecture Notes in Computer Science Vol.2068), P108
   CELKO J, 1983, SIGPLAN NOTICES, V18, P9, DOI 10.1145/948093.948094
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Cruz-Lemus JA, 2011, INFORM SOFTWARE TECH, V53, P1391, DOI 10.1016/j.infsof.2011.07.002
   Cruz-Lemus JA, 2010, INFORM SCIENCES, V180, P2209, DOI 10.1016/j.ins.2010.01.026
   Cruz-Lemus JA, 2009, EMPIR SOFTW ENG, V14, P685, DOI 10.1007/s10664-009-9106-z
   Cysneiros L.M., 2003, PERSPECTIVES SOFTWAR
   Damian D, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P149, DOI 10.1109/APSEC.2001.991471
   De Lucia A, 2006, INT C PROGRAM COMPRE, P307, DOI 10.1109/ICPC.2006.15
   Dieste Oscar, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P36, DOI 10.1049/ic.2011.0005
   Dourish P., 1992, CSCW '92. Sharing Perspectives. Proceedings of the Conference on Computer-Supported Cooperative Work, P107, DOI 10.1145/143457.143468
   Ellis C. A., 1991, Communications of the ACM, V34, P39, DOI 10.1145/99977.99987
   ESPANA S, 2009, 2009 17 IEEE INT REQ, P161, DOI DOI 10.1109/RE.2009.33
   FINKELSTEIN A, 1992, INT J SOFTW ENG KNOW, V2, P31, DOI 10.1142/S0218194092000038
   Google Inc, 2011, GOOGL DOUBLECLICK AD
   Google Inc, 2001, GOOGL DOCS
   Gross A, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P47, DOI 10.1109/RE.2009.30
   Gurevitch J., 2001, DESIGN ANAL ECOLOGIC, V2nd, P347
   Gutwin C., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P411, DOI 10.1023/A:1021271517844
   Gutwin C., 1996, P 1996 ACM C COMPUTE, P258, DOI DOI 10.1145/240080.240298
   Hedges LV., 2014, STAT METHODS META AN
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   IEEE Computer Society, 1998, 8301998 IEEE COMP SO
   Jan R, 2001, OBJ
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kamsties E, 2003, INFORM SOFTWARE TECH, V45, P955, DOI 10.1016/S0950-5849(03)00098-3
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   Karlsson L, 2007, EMPIR SOFTW ENG, V12, P3, DOI 10.1007/s10664-006-7240-4
   KIRK R.E., 1994, Experimental Design: Procedures for the Social Sciences
   Kitchenham B., 1993, Experimental Software Engineering Issues: Critical Assessment and Future Directions. International Workshop Proceedings, P121
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Mayer R. E., 2020, Multimedia Learning, V3rd
   Menzel I., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P15, DOI 10.1109/RE.2010.13
   Molina AI, 2008, J UNIVERS COMPUT SCI, V14, P1435
   Noguera M., 2006, Proceedings of the 2006 International Conference on Software Engineering Research and Practice and Conference on Programming Languages and Compilers SERP'06, P750
   Pancur M, 2011, INFORM SOFTWARE TECH, V53, P557, DOI 10.1016/j.infsof.2011.02.002
   Penichet VMR, 2009, ADV ENG SOFTW, V40, P1212, DOI 10.1016/j.advengsoft.2009.01.026
   Pinelle D., 2003, ACM Transactions on Computer-Human Interaction, V10, P281, DOI 10.1145/966930.966932
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Ricca F., 2010, ACM IEEE INT S EMP S, P7
   Ricca F, 2009, INFORM SOFTWARE TECH, V51, P270, DOI 10.1016/j.infsof.2008.01.007
   Sandahl K., 1998, Empirical Software Engineering, V3, P327, DOI 10.1023/A:1009724120285
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Teruel Miguel A., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P114, DOI 10.1049/ic.2011.0014
   Teruel M.A., 2011, DIAB11061 U CAST
   Teruel MA, 2011, ENASE 2011: PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P131
   Teruel MA, 2011, LECT NOTES COMPUT SC, V6998, P33, DOI 10.1007/978-3-642-24606-7_4
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   Nguyen V, 2011, INFORM SOFTWARE TECH, V53, P682, DOI 10.1016/j.infsof.2010.11.003
   Wainer J., 2007, J BRAZILIAN COMPUTER, V13, P27
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 66
TC 27
Z9 27
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2012
VL 54
IS 11
BP 1215
EP 1228
DI 10.1016/j.infsof.2012.06.001
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 000LJ
UT WOS:000308387500005
DA 2024-07-18
ER

PT J
AU Capra, E
   Francalanci, C
   Slaughter, SA
AF Capra, Eugenio
   Francalanci, Chiara
   Slaughter, Sandra A.
TI Is software "green"? Application development environments and energy
   efficiency in open source applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Green IT; Software energy efficiency; Software development application
   environment
ID POWER; PERFORMANCE; SYSTEMS; TIME
AB Context: The energy efficiency of IT systems, also referred to as Green IT, is attracting more and more attention. While several researchers have focused on the energy efficiency of hardware and embedded systems, the role of application software in IT energy consumption still needs investigation.
   Objective: This paper aims to define a methodology for measuring software energy efficiency and to understand the consequences of abstraction layers and application development environments for the energy efficiency of software applications.
   Method: We first develop a measure of energy efficiency that is appropriate for software applications. We then examine how the use of application development environments relates to this measure of energy efficiency for a sample of 63 open source software applications.
   Results: Our findings indicate that a greater use of application development environments - specifically, frameworks and external libraries - is more detrimental in terms of energy efficiency for larger applications than for smaller applications. We also find that different functional application types have distinctly different levels of energy efficiency, with text and image editing and gaming applications being the most energy inefficient due to their intense use of the processor.
   Conclusion: We conclude that different designs can have a significant impact on the energy efficiency of software applications. We have related the use of software application development environments to software energy efficiency suggesting that there may be a trade-off between development efficiency and energy efficiency. We propose new research to further investigate this topic. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Capra, Eugenio; Francalanci, Chiara] Politecn Milan, Dipartimento Elettron & Informaz, I-20133 Milan, Italy.
   [Slaughter, Sandra A.] Georgia Inst Technol, Coll Management, Atlanta, GA 30308 USA.
C3 Polytechnic University of Milan; University System of Georgia; Georgia
   Institute of Technology
RP Capra, E (corresponding author), Politecn Milan, Dipartimento Elettron & Informaz, Via Ponzio 34-5, I-20133 Milan, Italy.
EM capra@elet.polimi.it; francala@elet.polimi.it;
   Sandra.Slaughter@mgt.gatech.edu
FU Accenture Italia S.p.A
FX We thank Giulia Formenti, Stefano Gallazzi, and Gabriele Galli, former
   students, for their substantial contribution to this work. We thank
   Francesco Merlo for his invaluable suggestions in the early phases of
   the research. This research project has been partially supported by
   Accenture Italia S.p.A.
CR *ACEEE, ACEEE SMART SHAD GRE
   Albers S, 2007, ACM T ALGORITHMS, V3, DOI 10.1145/1290672.1290686
   [Anonymous], 1999, CATHEDRAL BAZAAR
   ARDAGNA D, 2002, ACM S APPL COMP, P1127
   Banker RD, 1998, MANAGE SCI, V44, P433, DOI 10.1287/mnsc.44.4.433
   Benini L, 2000, ACM T DES AUTOMAT EL, V5, P115, DOI 10.1145/335043.335044
   Bianchini R, 2004, COMPUTER, V37, P68, DOI 10.1109/MC.2004.217
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Capra E, 2010, EUR C INF SYST
   Capra E., 2009, EUR C INF SYST
   Capra E, 2008, INT FED INFO PROC, V275, P1
   Capra E, 2008, IEEE T SOFTWARE ENG, V34, P765, DOI 10.1109/TSE.2008.68
   Capra E, 2009, INT FED INFO PROC, V299, P225
   Chatzigeorgiou A, 2002, SOFTWARE QUAL J, V10, P355, DOI 10.1023/A:1022142105380
   Fornaciari W, 1998, IEEE T VLSI SYST, V6, P266, DOI 10.1109/92.678887
   FOWLER M, 1997, P INT C SOFTW ENG
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma Erich., 1994, DESIGN PATTERNS
   Greenfield J., 2003, OOPSLA 03 COMPANION, P16, DOI DOI 10.1145/949344.949348
   HOWISON J, 2004, P INT WORKSH MIN SOF, P7
   HUANG P, 2007, ACM T DES AUTOMAT EL, V12, P1
   *ISO IEC, 91262003 ISOIEC TR
   *ISO IEC, 250002005 ISOIEC TR
   JOSSELYIN S, 2006, WORLDWIDE REGIONAL S
   KAEFER G, 2001, INT S WEAR COMP
   Kandasamy N, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P54, DOI 10.1109/ICAC.2004.1301347
   Kozaczynski W, 1998, IEEE SOFTWARE, V15, P34, DOI 10.1109/MS.1998.714621
   KUMAR R, 2007, IMPORTANT POWER COOL
   Liu H, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P10
   MA A, 2001, WORKSH COMPL EFF DES
   MANN CC, 2002, WHY IS SOFTWARE SO B, V105
   MARTTIIN P, 1993, INFORM MANAGE, V25, P11, DOI 10.1016/0378-7206(93)90022-L
   Meier J.D., 2004, Improving. NET Application Performance and Scalability
   MICHIE D, 1968, NATURE, V218, P19, DOI 10.1038/218019a0
   Rabaey J.M., 1996, LOW POWER DESIGN MET
   SEO C, 2009, ESEC FSE WORKSH SPEC
   SEO C, 2008, INT S COMP BAS SOFTW
   SHANNON CE, 1951, BELL SYST TECH J, V30, P50, DOI 10.1002/j.1538-7305.1951.tb01366.x
   SHAW AC, 1989, IEEE T SOFTWARE ENG, V15, P875, DOI 10.1109/32.29487
   Sitaramanet M., 2001, P 2001 S SOFTW REUS, P3
   SIVASUBRAMANIAM A, 2002, INT PAR DISTR PROC S, V2, P176
   STANFORD E, 2008, 20 INT S POW SEM DEV
   Steffen B, 2007, COMPUTER, V40, P64, DOI 10.1109/MC.2007.386
   SZYPERSKI C, 1999, COMPONENT ORIENTED P
   Weyuker EJ, 2000, IEEE T SOFTWARE ENG, V26, P1147, DOI 10.1109/32.888628
   Zhu Y. K., 2004, P 13 INT C PAR ARCH
NR 46
TC 47
Z9 50
U1 1
U2 26
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2012
VL 54
IS 1
BP 60
EP 71
DI 10.1016/j.infsof.2011.07.005
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 859JA
UT WOS:000297871500004
DA 2024-07-18
ER

PT J
AU Kannabiran, G
   Sankaran, K
AF Kannabiran, G.
   Sankaran, K.
TI Determinants of software quality in offshore development - An empirical
   study of an Indian vendor
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Determinants; Quality attributes; Offshoring; Indian organizations
ID PROJECT PERFORMANCE; SYSTEMS-DEVELOPMENT; KNOWLEDGE; MANAGEMENT; MODEL;
   RISK; COORDINATION; USABILITY; MATTER; VIEW
AB Context: Cost advantage has been one of the primary drivers of successful offshoring engagements of Indian software and services companies. However, the emphasis has shifted to the ability of the vendors to provide high quality over cost advantage in delivering software products and services. Meeting high quality requirements of the clients is a challenge due to the very nature of development and delivery of software through offshoring.
   Objective: The objective of this research paper is to identify and evaluate the key determinants of quality in the case of software projects delivered through offshoring model.
   Method: A detailed survey was conducted among project managers/project leaders (leads) of a leading midsize Indian IT services company to evaluate the relationship of the determinants on the attributes of quality.
   Results: Out of six determinants, our research reveals requirements uncertainty has significant association with all the attributes of quality. While process maturity and trained personnel have moderate association, communication and control, knowledge transfer and integration and technical infrastructure have relatively low association on software quality attributes in the case of offshoring.
   Conclusion: It is concluded that the complexities in offshoring necessitates proper capturing of requirements. In addition high level of process maturity and availability of trained personnel to the project will help vendors to achieve software quality. The paper provides a set of implications for practice and directions for further research. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Kannabiran, G.; Sankaran, K.] Natl Inst Technol, Tiruchirappalli 620015, Tamil Nadu, India.
C3 National Institute of Technology (NIT System); National Institute of
   Technology Tiruchirappalli
RP Kannabiran, G (corresponding author), Natl Inst Technol, Tiruchirappalli 620015, Tamil Nadu, India.
EM Kb@nitt.edu
RI Kannabiran, Ganesan/ABB-3733-2021
CR ANDERSON JC, 1990, J MARKETING, V54, P42, DOI 10.2307/1252172
   Andreou AS, 2007, INFORM SOFTWARE TECH, V49, P122, DOI 10.1016/j.infsof.2006.03.007
   [Anonymous], J INFORM TECHNOLOGY
   [Anonymous], ICSE 05 ST LOUIS MIS
   [Anonymous], QUALITY SOFTWARE MAN
   [Anonymous], INFORM SYSTEMS OUTSO
   [Anonymous], WORK STUDY
   [Anonymous], IEEE T SOFTWARE ENG
   [Anonymous], ORG SCI
   [Anonymous], GLOBAL E COMMERCE EX
   [Anonymous], ELECT COMMERCE RES
   [Anonymous], J QUALITY ASSURANCE
   [Anonymous], 24 INT C INF SYST
   [Anonymous], P 2004 INT S EMP SOF
   [Anonymous], BENCHMARKING QUALITY
   [Anonymous], INDIAN MANAGEMENT
   [Anonymous], ANN QUAL C T ASQC MI
   [Anonymous], SLOAN MANAGEMENT SUM
   [Anonymous], MANAGEMENT SCI
   [Anonymous], SOFTWARE QUALITY J
   [Anonymous], INFORM SYSTEMS RES
   [Anonymous], IEEE T SOFTWARE FEB
   [Anonymous], IEEE T SOFTWARE ENG
   [Anonymous], SLOAN MANAGEMENT SUM
   [Anonymous], DECISION SCI
   [Anonymous], COMPUTER STANDARDS I
   [Anonymous], INFORM SOFTWARE TECH
   [Anonymous], ELECT J INFORM SYSTE
   [Anonymous], IEEE SOFTWARE MAY
   [Anonymous], INT REV COMPUTERS SO
   [Anonymous], SOFTWARE QUALITY J
   [Anonymous], IEEE SOFTWARE MAR
   Azar D, 2009, INFORM SOFTWARE TECH, V51, P1365, DOI 10.1016/j.infsof.2009.05.003
   Bahrami H, 1997, HUM RESOURCE MANAGE, V36, P23
   Barki H., 1993, Journal of Management Information Systems, V10, P203
   Behkamal B, 2009, INFORM SOFTWARE TECH, V51, P599, DOI 10.1016/j.infsof.2008.08.001
   Boehm B.W., 1978, Characteristics of Software Quality
   Bunse C, 1998, AUTOMATICA, V34, P23, DOI 10.1016/S0005-1098(97)00161-1
   Bygstad B, 2008, INTERACT COMPUT, V20, P375, DOI 10.1016/j.intcom.2007.12.001
   Carmel E., 2002, MIS Quarterly Executive, V1, P65
   Chen JC, 2009, J SYST SOFTWARE, V82, P981, DOI 10.1016/j.jss.2008.12.036
   Chinnaiyan R, 2010, INT J QUAL RELIAB MA, V27, P78, DOI 10.1108/02656711011009326
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Curtis B., 1995, PEOPLE CAPABILITY MA
   Davis GB, 2006, J ASSOC INF SYST, V7, P770, DOI 10.17705/1jais.00108
   DeLone WH, 2003, J MANAGE INFORM SYST, V19, P9, DOI 10.1080/07421222.2003.11045748
   Desouza KC, 2003, COMMUN ACM, V46, P99
   Ethiraj SK, 2005, STRATEGIC MANAGE J, V26, P25, DOI 10.1002/smj.433
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Gopal A., 2002, Communications of the ACM, V45, P193
   Gorla N, 1997, J SYST SOFTWARE, V36, P191, DOI 10.1016/0164-1212(95)00202-2
   Grant RM, 1996, ORGAN SCI, V7, P375, DOI 10.1287/orsc.7.4.375
   Grover V., 1996, Journal of Management Information Systems, V12, P89
   Han WM, 2007, J SYST SOFTWARE, V80, P42, DOI 10.1016/j.jss.2006.04.030
   HEIDE JB, 1992, J MARKETING, V56, P32, DOI 10.2307/1252040
   Hevner AR, 1997, INFORM SOFTWARE TECH, V39, P867, DOI 10.1016/S0950-5849(97)00050-5
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   Jae-Nam Lee, 1999, Journal of Management Information Systems, V15, P29, DOI 10.1557/JMR.2000.0009
   Jalote P., 2000, CMM PRACTICE
   Jones CR, 1998, INT J TECHNOL MANAGE, V16, P494, DOI 10.1504/IJTM.1998.002675
   Jones S, 2005, IEEE SOFTWARE, V22, P87, DOI 10.1109/MS.2005.80
   Jung HW, 2007, COMPUT STAND INTER, V29, P653, DOI 10.1016/j.csi.2007.03.004
   Juristo N, 2007, J SYST SOFTWARE, V80, P1506, DOI 10.1016/j.jss.2007.01.006
   KAN SH, 1994, IBM SYST J, V33, P4, DOI 10.1147/sj.331.0004
   KANTER RM, 1994, HARVARD BUS REV, V72, P96
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Krishnan MS, 2000, MANAGE SCI, V46, P745, DOI 10.1287/mnsc.46.6.745.11941
   LACITY MC, 1993, SLOAN MANAGE REV, V35, P73
   Luftman J, 2008, MIS Q EXEC, V7, P99
   Mc Call J. A., 1977, FACTORS SOFTWARE QUA, VI
   NIDUMOLU S, 1995, INFORM SYST RES, V6, P191, DOI 10.1287/isre.6.3.191
   Parnas DL, 2003, IEEE T SOFTWARE ENG, V29, P674, DOI 10.1109/TSE.2003.1223642
   Patnayakuni R, 2006, J ASSOC INF SYST, V7, P545, DOI 10.17705/1jais.00097
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Rajkumar TM, 2001, INFORM SYST MANAGE, V18, P63, DOI 10.1201/1078/43195.18.2.20010301/31279.10
   Rao T.V., 1999, HRD Audit
   Ravichandran T, 2000, MIS QUART, V24, P381, DOI 10.2307/3250967
   Robilliard PN, 1999, COMMUN ACM, V42, P87, DOI 10.1145/291469.291476
   Rothenberger MA, 2010, INFORM MANAGE-AMSTER, V47, P372, DOI 10.1016/j.im.2010.10.001
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   Sairamesh J, 2002, IBM SYST J, V41, P242, DOI 10.1147/sj.412.0242
   Shah S., 2004, OPTIMIZE MAGAZINE, P66
   Subramanian GH, 2007, J SYST SOFTWARE, V80, P616, DOI 10.1016/j.jss.2006.06.014
   Tian J, 2004, IEEE SOFTWARE, V21, P84, DOI 10.1109/MS.2004.1293078
   Verner JM, 2005, IEEE SOFTWARE, V22, P86, DOI 10.1109/MS.2005.12
   Verona G, 1999, ACAD MANAGE REV, V24, P132, DOI 10.2307/259041
   Wallace L, 2004, INFORM MANAGE-AMSTER, V42, P115, DOI 10.1016/j.im.2003.12.007
   WALZ DB, 1993, COMMUN ACM, V36, P63, DOI 10.1145/163430.163447
   Williams BJ, 2010, INFORM SOFTWARE TECH, V52, P31, DOI 10.1016/j.infsof.2009.07.002
   Wynekoop J. L., 2000, Information Technology & People, V13, P186, DOI 10.1108/09593840010377626
   Xenos M, 1997, INFORM SOFTWARE TECH, V39, P417, DOI 10.1016/S0950-5849(96)01154-8
   Yang YH, 2001, IND MANAGE DATA SYST, V101, P329, DOI 10.1108/EUM0000000005821
   Yin R.K., 2011, Qualitative research from start to finish
NR 93
TC 23
Z9 27
U1 0
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2011
VL 53
IS 11
BP 1199
EP 1208
DI 10.1016/j.infsof.2011.05.001
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 820CQ
UT WOS:000294883500003
DA 2024-07-18
ER

PT J
AU Baharom, S
   Shukur, Z
AF Baharom, Salmi
   Shukur, Zarina
TI An experimental assessment of module documentation-based testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Specification-based testing; Grey-box testing; Automated module testing;
   Mutation-testing
ID SPECIFICATION; IMPLEMENTATION; CHECKING
AB Context: Testing a module that has memory using the black-box approach has been found to be expensive and relatively ineffective. Instead, testing without knowledge of the specifications (white-box approach) may not be effective in showing whether a program has been properly implemented as stated in its specifications. We propose instead a grey-box approach called Module Documentation-based Testing or MD-Test, the heart of which is an automatic generation of the test oracle from the external and internal views of the module.
   Objective: This paper presents an empirical analysis and comparison of MD-Test against three existing testing tools.
   Method: The experiment was conducted using a mutation-testing approach, in two phases that assess the capability of MD-Test in general and its capability of evaluating test results in particular.
   Results: The results of the general assessment indicate that MD-Test is more effective than the other three tools under comparison, where it is able to detect all faults. The second phase of the experiment, which is significant to this study, compares the capabilities of MD-Test and JUnit-black using the test evaluation results. Likewise, an analysis of the test evaluation results shows that MD-Test is more effective and efficient, where MD-Test is able to detect at least the same number of faults as, or is at par with, the black-box approach.
   Conclusion: It is concluded that test evaluation using grey-box approach is more effective and efficient that the black-box approach when testing a module that has memory. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Baharom, Salmi] Univ Putra Malaysia, Fac Comp Sci & Informat Technol, Upm Serdang 43400, Selangor, Malaysia.
   [Shukur, Zarina] Univ Kebangsaan Malaysia, Fac Sci & Informat Technol, Ukm Bangi 43600, Selangor, Malaysia.
C3 Universiti Putra Malaysia; Universiti Kebangsaan Malaysia
RP Baharom, S (corresponding author), Univ Putra Malaysia, Fac Comp Sci & Informat Technol, Upm Serdang 43400, Selangor, Malaysia.
EM salmi@fsktm.upm.edu.my
OI Baharom, Salmi/0000-0001-5286-3738
CR ABDURAZIK A, 2000, P 6 IEEE INT C COMPL
   Andrews JH, 2003, IEEE T SOFTWARE ENG, V29, P634, DOI 10.1109/TSE.2003.1214327
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 1990, Software testing techniques {
   Antoy S, 2000, IEEE T SOFTWARE ENG, V26, P55, DOI 10.1109/32.825766
   Baharom Salmi, 2008, Journal of Computer Sciences, V4, P454, DOI 10.3844/jcssp.2008.454.462
   BAHAROM S, 2008, INT S INF TECHN 2008
   BAHAROM S, 2009, INT C EL ENG INF 200
   BAHAROM S, 2010, INT BUS INF MAN ASS
   BARESI L, 2008, TEST ORACLES
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   BOUGE L, 1986, J SYST SOFTWARE, V6, P343, DOI 10.1016/0164-1212(86)90004-X
   BRADBURY JS, 2005, P 6 ACM SIGPLAN SIGS
   BRADBURY JS, 2007, USING PROGRAM MUTATI, P141
   CHAPMAN D, 1982, COMMUN ACM, V25, P625, DOI 10.1145/358628.358642
   Cheon Y, 2002, LECT NOTES COMPUT SC, V2374, P231
   CHEON Y, 2007, 2007 INT C SOFTW ENG
   CHEON Y, 2007, INT C SOFTW ENG THEO
   CLERMONT M, 2005, SIGSOFT SOFTWARE ENG, V30, P1
   DAS R, 2004, INT C SOFTW TEST
   DOONG RK, 1994, ACM T SOFTW ENG METH, V3, P101
   EDWARD RS, 2000, MATH DISCRETE INTRO
   FENG X, 2008, P 2008 32 ANN IEEE I
   GANNON J, 1981, ACM T PROGR LANG SYS, V3, P211, DOI 10.1145/357139.357140
   GANNON JD, 1987, IEEE T SOFTWARE ENG, V13, P820, DOI 10.1109/TSE.1987.233493
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Hoare C. A. R., 1972, Acta Informatica, V1, P271, DOI 10.1007/BF00289507
   Huo Yan Chen, 1998, ACM Transactions on Software Engineering and Methodology, V7, P250, DOI 10.1145/287000.287004
   IPATE F, 2007, P TEST AC IND C PRAC
   LEAVEN GT, 2009, JAVA MODELLING LANGU
   LINZHANG W, 2004, P 11 ASI PAC SOFTW E
   Liu SY, 2008, J SYST SOFTWARE, V81, P234, DOI 10.1016/j.jss.2007.05.036
   LUCKHAM DC, 1987, ANNA LANGUAGE ANNOTA
   Machado PatriciaD. L., 2000, TESTING STRUCTURED A
   MAYER J, 2006, P 2006 ACM IEEE INT
   MOLLER KH, 1993, P IEEE 1 INT SOFTW M
   Moore I, 2001, 2 INT C EXTR PROGR F
   MUNGARA MB, 2003, COMPUTER SCI
   NAM DH, 2006, P WORLD AC SCI ENG T
   Namin A. Siami, 2008, P 30 INT C SOFTW ENG
   Nguyen HungQ., 2003, Testing Applications on the Web: Test Planning for Mobile and Internetbased Systems, V2nd
   Offutt A. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P5, DOI 10.1145/125489.125473
   Offutt A. J., 1989, SIGSOFT Software Engineering Notes, V14, P131, DOI 10.1145/75309.75324
   ORAIT C, 2009, DATA STRUCTURE
   PANZL DJ, 1978, COMPUTER, V11, P44, DOI 10.1109/C-M.1978.218138
   Parnas David L., 1992, Tabular representation of relations
   PARNAS DL, 1995, SCI COMPUT PROGRAM, V25, P41, DOI 10.1016/0167-6423(95)96871-J
   PARNAS DL, 1994, IEEE T SOFTWARE ENG, V20, P948, DOI 10.1109/32.368133
   PARNAS DL, 1983, COMMUN ACM, V26, P572, DOI 10.1145/358161.358168
   PARNAS DL, 1972, COMMUN ACM, V15, P330, DOI 10.1145/355602.361309
   PARNAS DL, 1993, IEEE T SOFTWARE ENG, V19, P856, DOI 10.1109/32.241769
   PEIFENG H, 2006, P 3 INT WORKSH SOFTW
   PETERS D, 1995, GENERATIONG TEST ORA
   Peters DK, 1998, IEEE T SOFTWARE ENG, V24, P161, DOI 10.1109/32.667877
   PRASETYA W, 2008, P 2008 INT C SOFTW T
   QUINN C, 2006, P INT C SOFTW ENG AD
   RICHARDSON DJ, 1994, P 1994 ACM SIGSOFT I
   ROSENBLUM D. S., 1992, P 14 INT C SOFTW ENG
   Schneider B., 2001, LONELYLAND
   Stocks P, 1996, IEEE T SOFTWARE ENG, V22, P777, DOI 10.1109/32.553698
   TAN RP, 2004, SIGSOFT SOFTWARE ENG, V29, P1
   TAO X, 2006, AUTOMAT SOFTW ENG, V13, P345
   Vilkomir SA, 2006, FORM ASP COMPUT, V18, P42, DOI 10.1007/s00165-005-0084-7
   WAGNER NR, 2005, 22132211 CS
NR 65
TC 5
Z9 6
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2011
VL 53
IS 7
BP 747
EP 760
DI 10.1016/j.infsof.2011.01.005
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 767DU
UT WOS:000290836300005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Szoke, A
AF Szoke, Akos
TI Conceptual scheduling model and optimized release scheduling for agile
   environments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile software development; Release planning; Planning metamodel
ID REQUIREMENTS; COST
AB Context: Release scheduling deals with the selection and assignment of deliverable features to a sequence of consecutive product deliveries while several constraints are fulfilled. Although agile software development represents a major approach to software engineering, there is no well-established conceptual definition and sound methodological support of agile release scheduling.
   Objective: To propose a solution, we present, (1) a conceptual model for agile scheduling, and (2) a novel multiple knapsack-based optimization model with (3) a branch-and-bound optimization algorithm for agile release scheduling.
   Method: To evaluate our model simulations were carried out seven real life and several generated data sets.
   Results: The developed algorithm strives to prevent resource overload and resource underload, and mitigates risks of delivery slippage.
   Conclusion: The results of the experiment suggest that this approach can provide optimized semi-automatic release schedule generations and more informed and established decisions utilizing what-if-analysis on the fly to tailor the best schedule for the specific project context. (C) 2011 Elsevier B.V. All rights reserved.
C1 Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, H-1521 Budapest, Hungary.
C3 Budapest University of Technology & Economics
RP Szoke, A (corresponding author), Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, Pazmany Peter Setany 1-D,IB 414, H-1521 Budapest, Hungary.
EM aszoke@mit.bme.hu
RI Szőke, Ákos/G-7170-2012
CR ABRAHAMSSON P, 2002, 478 VTT
   Ambler SW, 2006, DR DOBBS J, V31, P62
   ANDA B, 2001, LECT NOTES COMPUTER, P487
   [Anonymous], MANIFESTO AGILE SOFT
   [Anonymous], CRYSTAL REPORTS
   [Anonymous], 2004, XP Ser
   [Anonymous], 2003, Software requirements
   Aurum A, 2003, INFORM SOFTWARE TECH, V45, P945, DOI 10.1016/S0950-5849(03)00096-X
   Carlshamre P., 2002, Requirements Engineering, V7, P139, DOI 10.1007/s007660200010
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   Castro J, 2002, INFORM SYST, V27, P365, DOI 10.1016/S0306-4379(02)00012-1
   CHANG CK, 2001, GENETIC ALGORITHMS P, V11
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   *COD CORP, XPLANN
   Cohn M., 2005, Agile Estimating and Planning
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Diestel R., 2005, GRAPH THEORY
   DYBS T, 2008, INFORM SOFTW TECHNOL, V50, P833
   Fenton N, 2004, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE.2004.1317462
   FENTON NE, 1998, PFLEEGER SOFTWARE ME
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Hartmann A.K., 2009, A Practical Guide To Computer Simulation
   Hartmann S, 2000, J OPER RES SOC, V51, P1083
   Hericko M, 2008, INFORM SOFTWARE TECH, V50, P772, DOI 10.1016/j.infsof.2007.08.005
   *ILOG CORP, CPLEX
   Jalote PM., 2002, SOFTWARE PROJECT MAN
   Jung HW, 1998, IEEE SOFTWARE, V15, P74, DOI 10.1109/52.687950
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Karlsson J., 1996, ICRE, P110
   Kellerer H., 2004, Knapsack Problems. Springer Nature Book Archives Millennium, P317
   Layman L, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P32
   Layman L, 2006, J SYST ARCHITECT, V52, P654, DOI 10.1016/j.sysarc.2006.06.009
   Lee S, 2010, EMPIR SOFTW ENG, V15, P204, DOI 10.1007/s10664-009-9119-7
   Leffingwell D., 1999, MANAGING SOFTWARE RE, V1
   Li C, 2007, LECT NOTES COMPUT SC, V4542, P93
   Liaskos S, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P79
   Martello Silvano, 1990, Knapsack Problems: Algorithms and Computer Implementations
   Martinez W.L., 2004, EXPLORATORY DATA ANA
   *MICR CORP, MS SHAR POINT
   MOE NB, 2009, INFORM SOFTW TECHNOL, V480, P480
   *MULT LTD, MULT
   Ngo-The A, 2009, IEEE T SOFTWARE ENG, V35, P109, DOI 10.1109/TSE.2008.80
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   *OBJ MAN GROUP, UN MOD LANG VERS 2 0
   Palmer S.R., 2001, A Practical Guide to Feature-Driven Development, V1st
   *PAR DEC TECH INC, AIMMS
   Perini A, 2009, INFORM SOFTWARE TECH, V51, P1021, DOI 10.1016/j.infsof.2008.12.001
   Racheva Z, 2009, LECT NOTES BUS INF P, V32, P141
   *RALL SOFTW DEV CO, RALL
   Ruhe G, 2005, IEEE SOFTWARE, V22, P47, DOI 10.1109/MS.2005.164
   Ruhe G., 2002, Proceedings of the 14th International Conference on Software Engineering and Knowledge Engineering (SEKE'02), P159
   Saaty T.L., 1980, ANAL HIERARCHY PROCE
   Schwaber K., 2001, Agile software development with scrum
   STEVENS P, 2008, AGILE J
   Sutherland J, 2008, AGILE 2008, PROCEEDINGS, P339, DOI 10.1109/Agile.2008.92
   SZOKE A, 2010, ENASE 2008 2009 REVI, P133
   Szoke A, 2010, LECT NOTES COMPUT SC, V6156, P62, DOI 10.1007/978-3-642-13792-1_7
   Szoke A, 2009, LECT NOTES BUS INF P, V32, P156
   Szoke A, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P449, DOI 10.1109/SEAA.2008.18
   Tukel OI, 2006, EUR J OPER RES, V172, P401, DOI 10.1016/j.ejor.2004.10.019
   van den Akker M, 2008, INFORM SOFTWARE TECH, V50, P101, DOI 10.1016/j.infsof.2007.10.017
   *VERSIONONE CORP, 4 ANN SURV 2009
NR 62
TC 15
Z9 21
U1 4
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2011
VL 53
IS 6
SI SI
BP 574
EP 591
DI 10.1016/j.infsof.2011.01.008
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 762FS
UT WOS:000290460900002
DA 2024-07-18
ER

PT J
AU Zhang, H
   Babar, MA
   Tell, P
AF Zhang, He
   Babar, Muhammad All
   Tell, Paolo
TI Identifying relevant studies in software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Search strategy; Quasi-gold standard; Systematic literature review;
   Evidence-based software engineering
ID SYSTEMATIC REVIEWS
AB Context: Systematic literature review (SLR) has become an important research methodology in software engineering since the introduction of evidence-based software engineering (EBSE) in 2004. One critical step in applying this methodology is to design and execute appropriate and effective search strategy. This is a time-consuming and error-prone step, which needs to be carefully planned and implemented. There is an apparent need for a systematic approach to designing, executing, and evaluating a suitable search strategy for optimally retrieving the target literature from digital libraries.
   Objective: The main objective of the research reported in this paper is to improve the search step of undertaking SLRs in software engineering (SE) by devising and evaluating systematic and practical approaches to identifying relevant studies in SE.
   Method: We have systematically selected and analytically studied a large number of papers (SLRs) to understand the state-of-the-practice of search strategies in EBSE. Having identified the limitations of the current ad-hoc nature of search strategies used by SE researchers for SLRs, we have devised a systematic and evidence-based approach to developing and executing optimal search strategies in SLRs. The proposed approach incorporates the concept of 'quasi-gold standard' (QGS), which consists of collection of known studies, and corresponding 'quasi-sensitivity' into the search process for evaluating search performance.
   Results: We conducted two participant-observer case studies to demonstrate and evaluate the adoption of the proposed QGS-based systematic search approach in support of SLRs in SE research.
   Conclusion: We report their findings based on the case studies that the approach is able to improve the rigor of search process in an SLR, as well as it can serve as a supplement to the guidelines for SLRs in EBSE. We plan to further evaluate the proposed approach using a series of case studies on varying research topics in SE. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Zhang, He] Univ New S Wales, Natl ICT Australia, Sydney, NSW 2052, Australia.
   [Babar, Muhammad All; Tell, Paolo] IT Univ Copenhagen, Copenhagen, Denmark.
C3 University of New South Wales Sydney; NICTA; IT University Copenhagen
RP Zhang, H (corresponding author), Univ New S Wales, Natl ICT Australia, Sydney, NSW 2052, Australia.
EM he.zhang@nicta.com.au; maba@itu.dk; pate@itu.dk
RI ZHANG, HE/E-5977-2012
OI Tell, Paolo/0000-0001-7391-0046
FU Australian Government; Australian Research Council through the ICT
   Centre of Excellence
FX NICTA is funded by the Australian Government as represented by the
   Department of Broadband, Communications and the Digital Economy and the
   Australian Research Council through the ICT Centre of Excellence
   program.
CR ALIBABAR M, 2009, P 3 INT S EMP SOFTW, P346
   [Anonymous], 2010, P 14 INT C EV ASS SO
   *AUSTR RES COUNC, 2007, EXC RES AUSTR RANK C
   *AUSTR RES COUNC, 2007, EXC RES AUSTR RANK J
   *AUSTR RES COUNC, 2010, EXC RES AUSTR RANK C
   *AUSTR RES COUNC, 2010, EXC RES AUSTR RANK J
   Bai X, 2010, LECT NOTES COMPUT SC, V6195, P39, DOI 10.1007/978-3-642-14347-2_5
   BAILEY J, 2007, P 2 INT WORKSH REAL
   Biolchini J., 2005, Int. Sugar J.
   Boynton J, 1998, J INFORM SCI, V24, P137, DOI 10.1177/016555159802400301
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Budgen D, 2008, EMPIR SOFTW ENG, V13, P435, DOI 10.1007/s10664-008-9075-7
   DICKERSIN K, 1994, BMJ-BRIT MED J, V309, P1286, DOI 10.1136/bmj.309.6964.1286
   DIESTE O, 2007, P 1 INT S EMP SOFTW, P215
   Dieste O, 2009, EMPIR SOFTW ENG, V14, P513, DOI 10.1007/s10664-008-9091-7
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dyba T., 2007, Proc. of the First Int. Symp. on Empirical Software Engineering and Measurement, P225
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Grimstad S, 2006, INFORM SOFTWARE TECH, V48, P302, DOI 10.1016/j.infsof.2005.04.004
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kampenes VB, 2009, INFORM SOFTWARE TECH, V51, P71, DOI 10.1016/j.infsof.2008.04.006
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2009, INT SYMP EMP SOFTWAR, P337, DOI 10.1109/esem.2009.5314238
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   *PROV RES, 2010, SIMST V 2 5 WORDST V
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Skoglund M., 2009, P 13 INT C EV ASS SO
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   White VJ, 2001, J INFORM SCI, V27, P357, DOI 10.1177/016555150102700601
   Yin R.K., 2014, Applications of case study research, V2nd
   Zannier C., 2006, 28th International Conference on Software Engineering Proceedings, P341, DOI 10.1145/1134285.1134333
   ZHANG H, 2009, ADOPTING SYSTEMATIC
   Zhang H, 2010, LECT NOTES COMPUT SC, V6195, P309, DOI 10.1007/978-3-642-14347-2_27
NR 36
TC 304
Z9 331
U1 0
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2011
VL 53
IS 6
SI SI
BP 625
EP 637
DI 10.1016/j.infsof.2010.12.010
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 762FS
UT WOS:000290460900007
DA 2024-07-18
ER

PT J
AU Chen, LP
   Babar, MA
AF Chen, Lianping
   Babar, Muhammad Ali
TI A systematic review of evaluation of variability management approaches
   in software product lines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software product line; Variability management; Systematic literature
   reviews; Empirical studies
AB Context: Variability management (VM) is one of the most important activities of software product-line engineering (SPLE), which intends to develop software-intensive systems using platforms and mass customization. VM encompasses the activities of eliciting and representing variability in software artefacts, establishing and managing dependencies among different variabilities, and supporting the exploitation of the variabilities for building and evolving a family of software systems. Software product line (SPL) community has allocated huge amount of effort to develop various approaches to dealing with variability related challenges during the last two decade. Several dozens of VM approaches have been reported. However, there has been no systematic effort to study how the reported VM approaches have been evaluated.
   Objective: The objectives of this research are to review the status of evaluation of reported VM approaches and to synthesize the available evidence about the effects of the reported approaches.
   Method: We carried out a systematic literature review of the VM approaches in SPLE reported from 1990s until December 2007.
   Results: We selected 97 papers according to our inclusion and exclusion criteria. The selected papers appeared in 56 publication venues. We found that only a small number of the reviewed approaches had been evaluated using rigorous scientific methods. A detailed investigation of the reviewed studies employing empirical research methods revealed significant quality deficiencies in various aspects of the used quality assessment criteria. The synthesis of the available evidence showed that all studies, except one, reported only positive effects.
   Conclusion: The findings from this systematic review show that a large majority of the reported VM approaches have not been sufficiently evaluated using scientifically rigorous methods. The available evidence is sparse and the quality of the presented evidence is quite low. The findings highlight the areas in need of improvement, i.e., rigorous evaluation of VM approaches. However, the reported evidence is quite consistent across different studies. That means the proposed approaches may be very beneficial when they are applied properly in appropriate situations. Hence, it can be concluded that further investigations need to pay more attention to the contexts under which different approaches can be more beneficial. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Babar, Muhammad Ali] IT Univ Copenhagen, DK-2300 Copenhagen, Denmark.
   [Chen, Lianping] Univ Limerick, Limerick, Ireland.
C3 IT University Copenhagen; University of Limerick
RP Babar, MA (corresponding author), IT Univ Copenhagen, Rued Langgaards Vej 7, DK-2300 Copenhagen, Denmark.
EM lianping.chen@lero.ie; malibaba@itu.dk
CR ALIBABAR M, 2010, IEEE SOFTWARE, V27, P89
   Alves de Oliveira E., 2005, P 2005 C CTR ADV STU, P225
   [Anonymous], CRIT APPR SKILLS PRO
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   Ardis M, 2000, SOFTWARE PRACT EXPER, V30, P825, DOI 10.1002/(SICI)1097-024X(200006)30:7<825::AID-SPE322>3.0.CO;2-1
   Asikainen T, 2007, ADV ENG INFORM, V21, P23, DOI 10.1016/j.aei.2006.11.007
   Bachmann F, 2004, LECT NOTES COMPUT SC, V3014, P66
   Bachmann Felix., 2005, Variability in Software Product Lines
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Batory D, 2002, ACM T SOFTW ENG METH, V11, P191, DOI 10.1145/505145.505147
   Batory D, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P81, DOI 10.1109/ASE.2002.1114997
   Beuche D, 2004, SCI COMPUT PROGRAM, V53, P333, DOI 10.1016/j.scico.2003.04.005
   BOSCH J, 2002, LNCS, V2290, P303
   BOSCH LJ, 2000, DESIGN USE SOFTWARE
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   CARMEN Z, 2006, P 28 INT C SOFTW ENG, P341
   Chen L., 2009, P 13 INT SOFTWARE PR, P81
   [陈丽琼 CHEN Li-qiong], 2009, [高分子通报, Polymer Bulletin], P1
   Clements P., 2002, Software product lines
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   DENGER C, 2006, P 2006 ACM IEEE INT, P184
   Dixon-Woods Mary, 2005, J Health Serv Res Policy, V10, P45, DOI 10.1258/1355819052801804
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dyba T., 2007, Proc. of the First Int. Symp. on Empirical Software Engineering and Measurement, P225
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   ESTUBLIER J, 2005, P 10 EUR SOFTW ENG C, P316
   FELIX B, 2001, SIGSOFT SOFTW ENG NO, V26, P126
   FENTON N, 1994, IEEE SOFTWARE, V11, P86, DOI 10.1109/52.300094
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Harris RichardL., 2000, CRIT PERSPECT, P1
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Kampenes VB, 2009, INFORM SOFTWARE TECH, V51, P71, DOI 10.1016/j.infsof.2008.04.006
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kang Kyo C, 1990, Technical Report
   KITCHENHAM B, 2007, EBSE20071 UK
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   KRUEGER C, 2002, SOFTWARE PRODUCT LIN, P107
   Lee K, 2000, SPRINGER INT SER ENG, V576, P3
   Loesch F, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P151, DOI 10.1109/SPLINE.2007.31
   Moon M, 2005, IEEE T SOFTWARE ENG, V31, P551, DOI 10.1109/TSE.2005.76
   MUCCINI H, 2003, ELECT NOTES THEOR CO, V82, P109
   Muthig D., 2002, SOFTWARE PRODUCT LIN, P79
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Reis S, 2007, LECT NOTES COMPUT SC, V4422, P321
   Reuys A, 2005, LECT NOTES COMPUT SC, V3520, P519
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schmid K, 2004, SCI COMPUT PROGRAM, V53, P259, DOI 10.1016/j.scico.2003.04.002
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Sinnema M, 2008, J SYST SOFTWARE, V81, P584, DOI 10.1016/j.jss.2007.06.002
   Sinnema M, 2007, INFORM SOFTWARE TECH, V49, P717, DOI 10.1016/j.infsof.2006.08.001
   Sinnema M, 2006, LECT NOTES COMPUT SC, V4039, P101
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
   Yin RK, 2002, Applied Social Research Methods Series, V34
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
   Zhang WS, 2005, IEEE I C EMBED SOFTW, P66
   [No title captured]
NR 61
TC 142
Z9 150
U1 0
U2 25
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2011
VL 53
IS 4
SI SI
BP 344
EP 362
DI 10.1016/j.infsof.2010.12.006
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 739QK
UT WOS:000288732700005
OA Green Published
DA 2024-07-18
ER

PT J
AU Wagner, S
AF Wagner, Stefan
TI A Bayesian network approach to assess and predict software quality using
   activity-based quality models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Conference on Predictor Models in Software Engineering (PROMISE 2009)
CY 2009
CL ICSE, Vancouver, CANADA
HO ICSE
DE Activity-based quality model; Bayesian network; Quality assessment;
   Quality prediction
AB Context: Software quality is a complex concept. Therefore, assessing and predicting it is still challenging in practice as well as in research. Activity-based quality models break down this complex concept into concrete definitions, more precisely facts about the system, process, and environment as well as their impact on activities performed on and with the system. However, these models lack an operationalisation that would allow them to be used in assessment and prediction of quality. Bayesian networks have been shown to be a viable means for this task incorporating variables with uncertainty.
   Objective: The qualitative knowledge contained in activity-based quality models are an abundant basis for building Bayesian networks for quality assessment. This paper describes a four-step approach for deriving systematically a Bayesian network from an assessment goal and a quality model.
   Method: The four steps of the approach are explained in detail and with running examples. Furthermore, an initial evaluation is performed, in which data from NASA projects and an open source system is obtained. The approach is applied to this data and its applicability is analysed.
   Results: The approach is applicable to the data from the NASA projects and the open source system. However, the predictive results vary depending on the availability and quality of the data, especially the underlying general distributions.
   Conclusion: The approach is viable in a realistic context but needs further investigation in case studies in order to analyse its predictive validity. (C) 2010 Elsevier B.V. All rights reserved.
C1 Tech Univ Munich, Fak Informat, D-85748 Garching, Germany.
C3 Technical University of Munich
RP Wagner, S (corresponding author), Tech Univ Munich, Fak Informat, Boltzmannstr 3, D-85748 Garching, Germany.
EM wagnerst@in.tum.de
RI Wagner, Stefan/A-5200-2018
OI Wagner, Stefan/0000-0002-5256-8429
CR Alhazmi O, 2005, LECT NOTES COMPUT SC, V3654, P281
   Amasaki S, 2005, IEICE T INF SYST, VE88D, P1134, DOI 10.1093/ietisy/e88-d.6.1134
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2001, 91261 ISO
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   BEAVER JM, 2005, P 4 INT C MACH LEARN, P82
   BEAVER JM, 2006, THESIS U CENTRAL FLO
   DEISSENBOECK F, 2007, P 23 INT C SOFTW MAI
   DEISSENBOECK F, 2009, P 7 INT WORKSH SOFTW
   Deissenboeck F, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.129
   Fenton N., 2007, Managing Risk in the Modern World: Applications of Bayesian Networks
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fenton NE, 2007, IEEE T KNOWL DATA EN, V19, P1420, DOI 10.1109/TKDE.2007.1068
   ISO/IEC, 2006, 14764 ISOIEC
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   LINDVALL M, 2005, P 11 IEEE INT SOFTW
   *NASA 4 5 FAC, METR DAT PROGR
   NEIL M, 1996, SAFETY CRITICAL SYST, V8
   Pérez-Miñana E, 2006, SOFTW TEST VERIF REL, V16, P157, DOI 10.1002/stvr.353
   Schechter SE, 2005, IEEE SECUR PRIV, V3, P40, DOI 10.1109/MSP.2005.30
   WAGNER S, 2006, P 5 ACM IEEE INT S E
   WAGNER S, 2009, P 1 INT C PRED MOD S
   WAGNER S, 2007, P 5 INT WORKSH SOFTW
   WAGNER S, 2009, P 3 INT S EMP SOFTW
   WAGNER S, 2009, P QUAL ASS WEB QAW 2
   Winter S, 2008, LECT NOTES COMPUT SC, V4940, P106
NR 28
TC 22
Z9 24
U1 1
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2010
VL 52
IS 11
SI SI
BP 1230
EP 1241
DI 10.1016/j.infsof.2010.03.016
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 663RL
UT WOS:000282905700008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Godet-Bar, G
   Rieu, D
   Dupuy-Chessa, S
AF Godet-Bar, Guillaume
   Rieu, Dominique
   Dupuy-Chessa, Sophie
TI HCI and business practices in a collaborative method for augmented
   reality systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Information systems; Software engineering; Human-computer interaction;
   Augmented reality; Collaborative design; Evolution
AB Context. Every interactive system is composed of a functional core and a user interface However, the software engineering (SE) and human-computer interaction (HCI) communities do not share the same methods, models or tools. This usually induces a large work overhead when specialists from the two domains try to connect their applicative studies, especially when developing augmented reality systems that feature complex interaction cores
   Objective We present in this paper the essential activities and concepts of a development method integrating the SE and HCI development practices, from the specifications down to the design, as well as their application on a case study
   Method The efficiency of the method was tested in a qualitative study involving four pairs of SE and HCI experts in the design of an application for which an augmented reality interaction would provide better user performance than a classic interactive system The effectivity of the method was evaluated in a qualitative study comparing the quality of three implementations of the same application fragment (based on the same analysis model), using software engineering metrics
   Results The first evaluation confirmed the ease of use of our method and the relevance of our tools for guiding the design process, but raised concerns on the handling of conflicting collaborative activities. The second evaluation gave indications that the structure of the analysis model facilitates the implementation of quality software (in terms of coupling, stability and complexity)
   Conclusion It is concluded that our method enables design teams with different backgrounds in application development to collaborate for integrating augmented reality applications with information systems Areas of improvement are also described (C) 2009 Elsevier B V All rights reserved
C1 [Godet-Bar, Guillaume; Rieu, Dominique; Dupuy-Chessa, Sophie] Univ Grenoble, LIG, CNRS, F-38402 St Martin Dheres, France.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS)
RP Godet-Bar, G (corresponding author), Univ Grenoble, LIG, CNRS, 681 Rue Passerelle,BP 72, F-38402 St Martin Dheres, France.
CR [Anonymous], 2004, The rational unified process: an introduction
   [Anonymous], STAND GROUP REP
   BALME L, 2004, 2 EUR S AMB INT EUSA, P251
   Beck K., 2011, MANIFESTO AGILE SOFT
   Boehm B., 2003, BALANCING AGILITY DI
   Carroll John., 1997, HDB HUMAN COMPUTER I, P383, DOI DOI 10.1016/B978-044481862-1.50083-2
   CHALON R, 707 ARXIV
   CONSTANTINE L, 2003, P IFIP TC13 WORKSH C
   D'Souza DesmondF., 1998, COMPONENTS FRAMEWORK
   DAYTON T, 1998, BRIDGING USER NEEDS, P15
   Dubois E, 2003, INTERACT COMPUT, V15, P497, DOI 10.1016/S0953-5438(03)00037-7
   DUPUYCHESSA S, ENG MIXED REALITY
   Godet-Bar G, 2008, LECT NOTES COMPUT SC, V5074, P144
   Godet-Bar G, 2007, ICEIS 2007: PROCEEDINGS OF THE NINTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, P37
   GREBICI K, 2005, P INT C ENG DES ICED
   HASSINE I, 2002, SMC 02, V2
   JURAS D, 2006, REV GENIE LOGICIEL, P31
   Moody D., 2003, ECIS 2003 P
   NUNES DNJ, 2001, THESIS U MADEIRA
   Paterno F., 2003, The Handbook of Task Analysis for Human-Computer Interaction, P483
   RENEVIER P, 2004, THESIS U GRENOBLE GR
   ROBERTS D, 2005, HUMAN CTR SOFTWARE E, P201
   Rolland C., 1999, Requirements Engineering, V4, P169, DOI 10.1007/s007660050018
   Sebillotte S, 1995, INT J HUM-COMPUT INT, V7, P341, DOI 10.1080/10447319509526130
   *SEL BUS SOL INC, 2006, SEL PERSP AG PROC V
   SOUSA KS, 2006, S FAT HUM SIST COMP
   SUKAVIRIYA N, 2005, P WORKSH MOD DRIV DE
   Sutcliffe AG, 2005, HUM COM INT, V8, P71, DOI 10.1007/1-4020-4113-6_5
   Tarby J.C., 2003, HDB TASK ANAL HUMAN, P531
NR 29
TC 6
Z9 6
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2010
VL 52
IS 5
SI SI
BP 492
EP 505
DI 10.1016/j.infsof.2009.11.007
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 588XF
UT WOS:000277107200003
DA 2024-07-18
ER

PT J
AU Illes-Seifert, T
   Paech, B
AF Illes-Seifert, Timea
   Paech, Barbara
TI Exploring the relationship of a file's history and its fault-proneness:
   An empirical method and its application to open source programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical study; Software testing; Software history/evolution
ID SOFTWARE
AB Context The knowledge about particular characteristics of software that are indicators for defects is very valuable for testers because it helps them to focus the testing effort and to allocate their limited resources appropriately.
   Objective In this paper, we explore the relationship between several historical characteristics of files and their defect count.
   Method For this purpose, we propose an empirical approach that uses statistical procedures and visual representations of the data in order to determine indicators for a file's defect count We apply this approach to nine open source Java projects across different versions.
   Results Only 4 of 9 programs show moderate correlations between a file's defects in previous and in current releases in more than half of the analysed releases In contrast to our expectations, the oldest files represent the most fault-prone files. Additionally, late changes correlate with a file's defect count only partly The number of changes, the number of distinct authors performing changes to a file as well as the file's age are good indicators for a file's defect count in all projects.
   Conclusion: Our results show that a software's history is a good indicator for 1st quality We did not find one indicator that persists across all projects in an equal manner Nevertheless, there are several indicators that show significant strong correlations in nearly all projects DA (number of distinct authors) and FC (frequency of change). In practice, for each software, statistical analyses have to be performed in order to evaluate the best indicator(s) for a file's defect count (C) 2009 Elsevier B V All rights reserved
C1 [Illes-Seifert, Timea; Paech, Barbara] Heidelberg Univ, Inst Comp Sci, D-69120 Heidelberg, Germany.
C3 Ruprecht Karls University Heidelberg
RP Illes-Seifert, T (corresponding author), Heidelberg Univ, Inst Comp Sci, Neuenheimer Feld 326, D-69120 Heidelberg, Germany.
RI Paech, Barbara/AAI-5997-2020
CR [Anonymous], 2007, Proceedings of the 3rd International Workshop on Predictor Models in Software Engineering
   [Anonymous], 2002, P 2002 ACM SIGSOFT I
   [Anonymous], 2006, ISESE '06: Proceedings of the 5th International Symposium on Empirical Software Engineering. Volume II: Short Papers and Posters, DOI DOI 10.1145/1159733.1159739.
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bell R., 2006, Proc. 2006 International Symposium on Software Testing and Analysis, P61
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Demuth B, 2002, 15TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P241, DOI 10.1109/CSEE.2002.995216
   Denaro G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1109/ICSE.2002.1007972
   Denaro Giovanni., 2002, P IEEE INT C SOFTWAR, P361
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Gîrba T, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P2, DOI 10.1109/CSMR.2005.15
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   HATTON L, 2008, TAIC PART 2008
   *INT SOFTW TEST QU, 2005, ISTQB STAND GLOSS TE
   Khoshgoftaar TM, 1998, COMPUTER, V31, P66, DOI 10.1109/2.666844
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Layman L, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P206
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, P 28 INT C SOFTW ENG, P452, DOI DOI 10.1145/1134285.1134349
   OHLSSON M, 1999, P IEEE AER C
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pighin M, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P206, DOI 10.1109/ISESE.2003.1237979
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Seifert TimeaI., 2008, DEFECTS '08: Proceedings of the 2008 workshop on Defects in large software systems, P11, DOI [DOI 10.1145/1390817.1390821, 10.1145/1390817.1390821]
   SLIWERSKI J, 2005, P 2005 INT WORKSH MI, P1, DOI DOI 10.1145/1083142.1083147
   WEYUKER EJ, 2008, P 2008 WORKSH DEF LA, P27
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zimmermann T., 2008, PREDICTING BUGS HIST, P69, DOI [10.1007/978-3-540-76440-3_4, DOI 10.1007/978-3-540-76440-3_4]
NR 31
TC 28
Z9 33
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2010
VL 52
IS 5
SI SI
BP 539
EP 558
DI 10.1016/j.infsof.2009.11.010
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 588XF
UT WOS:000277107200007
DA 2024-07-18
ER

PT J
AU Ahmed, MF
   Gokhale, SS
AF Ahmed, Mohamed F.
   Gokhale, Swapna S.
TI Linux bugs: Life cycle, resolution and architectural analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Linux operating system; Reliability; Bugs analysis; Architectural
   analysis
AB Efforts to improve application reliability can be irrelevant if the reliability of the underlying operating system on which the application resides is not seriously considered. An important first step in improving the reliability of an operating system is to gain insights into why and how the bugs originate, contributions of the different modules to the bugs, their distribution across severities, the different ways in which the bugs may be resolved and the impact of bug severities on their resolution times. To acquire this insight, we conducted an extensive analysis of the publicly available bug data on the Linux kernel over a period of seven years. We also justify and explain the statistical bug occurrence trends observed from the data, using the architecture of the Linux kernel as an anchor. The statistical analysis of the Linux bug data suggests that the Linux kernel may draw significant benefits from the continual reliability improvement efforts of its developers. These efforts, however, are disproportionately targeted towards popular configurations and hardware platforms, due to which the reliability of these configurations may be better than those that are not commonly used. Thus. a key finding of our study is that it may be prudent to restrict to using common configurations and platforms when using open source systems such as Linux in applications with stringent reliability expectations. Finally, our study of the architectural properties of the bugs suggests that the dependence among the modules rather than the unreliabilities of the individual modules is the primary cause of the bugs and their impact on system reliability. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Ahmed, Mohamed F.; Gokhale, Swapna S.] Univ Connecticut, Dept Comp Sci & Engn, Storrs, CT 06269 USA.
C3 University of Connecticut
RP Ahmed, MF (corresponding author), Univ Connecticut, Dept Comp Sci & Engn, Storrs, CT 06269 USA.
EM Mohamed.Ahmed@engr.uconn.edu; ssg@engr.uconn.edu
CR Ahmed MF, 2008, INT CONF QUAL SOFTW, P396, DOI 10.1109/QSIC.2008.55
   Chou Andy., 2001, P 18 ACM S OPERATING, P73
   Corbet Jonathan, 2005, Linux device drivers, VThird
   El-Kadi Amr, 2008, International Journal of Computers and Their Applications, V15, P56
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Gokhale SS, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P353
   Gu WN, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P459
   Herder J. N., 2006, Operating Systems Review, V40, P80, DOI 10.1145/1151374.1151391
   Herder JN, 2006, EDCC 2006: SIXTH EUROPEAN DEPENDABLE COMPUTING CONFERENCE, PROCEEDINGS, P3
   JONES M, 2007, IBM DEV WORKS    JUN
   Koopman P, 1997, SYM REL DIST SYST, P72, DOI 10.1109/RELDIS.1997.632800
   Kuperman BA, 2005, COMMUN ACM, V48, P50, DOI 10.1145/1096000.1096004
   Love R., 2005, Linux Kernel Development
   Sommerville I., 2004, Software Engineering
   SWIFT M, 2003, P 6 S OP SYST DES IM, P1
   Swift MM, 2005, ACM T COMPUT SYST, V23, P77, DOI 10.1145/1047915.1047919
   Tanenbaum AS, 2006, COMPUTER, V39, P44, DOI 10.1109/MC.2006.156
   LINUX KERNELS OFFICI
NR 18
TC 5
Z9 7
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2009
VL 51
IS 11
SI SI
BP 1618
EP 1627
DI 10.1016/j.infsof.2009.06.004
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 504LW
UT WOS:000270619300012
DA 2024-07-18
ER

PT J
AU Wong, WE
   Restrepo, A
   Choi, B
AF Wong, W. Eric
   Restrepo, Andy
   Choi, Byoungju
TI Validation of SDL specifications using EFSM-based test generation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE SDL; EFSM (Extended Finite State Machine); Coverage testing; Dominator
   analysis; Hot spot; Constraint solver
ID FINITE-STATE MACHINES; SYSTEM
AB Existing methods for testing an SDL specification mainly allow for either black box simulation or conformance testing to verify that the behavior of an implementation matches its corresponding model. However, this relies on the potentially hazardous assumption that the model is completely correct. We propose a test generation method that can accomplish conformance verification as well as coverage criteria-driven white box testing of the specification itself. We first reformat a set of EFSMs equivalent to the processes in an SDL specification and identify "hot spots" - nodes or edges in the EFSM which should be prioritized during testing to effectively increase coverage. Then, we generate test sequences intended to cover selected hot spots; we address the possible infeasibility of such a test sequence by allowing for its rejection decided by a constraint solver and re-generation of an alternate test sequence to the hot spot. In this paper, we present our test generation method and tool, and provide case studies on five SDL processes demonstrating the effectiveness of our coverage-based test sequence selection. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Wong, W. Eric; Restrepo, Andy] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
   [Choi, Byoungju] Ewha Womans Univ, Dept Comp Sci & Engn, Seoul, South Korea.
C3 University of Texas System; University of Texas Dallas; Ewha Womans
   University
RP Wong, WE (corresponding author), Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
EM ewong@utdallas.edu
CR [Anonymous], P 10 ISSAT INT C REL
   [Anonymous], P INT C TRENDS COMM
   [Anonymous], P 21 ACM SIGPLAN SIG
   [Anonymous], P 5 INT C FORM DESCR
   [Anonymous], P 5 INT WORKSH FORM
   [Anonymous], P 4 SDL FOR LOSB POR
   [Anonymous], P IFIP TC 6 WORK C C
   Bourhfir C, 2001, COMPUT COMMUN, V24, P319, DOI 10.1016/S0140-3664(00)00220-6
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   Gansner ER, 2000, SOFTWARE PRACT EXPER, V30, P1203, DOI 10.1002/1097-024X(200009)30:11<1203::AID-SPE338>3.0.CO;2-N
   GOURAUD SD, 2005, 1400 CNRS U PARIS 11
   *GRAPHV, GRAPH VIS SOFTW AT T
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   LEE D, 1994, IEEE T COMPUT, V43, P306, DOI 10.1109/12.272431
   LUO G, 1994, IEEE T SOFTWARE ENG, V20, P72, DOI 10.1109/32.263756
   PARR TJ, 1995, SOFTWARE PRACT EXPER, V25, P789, DOI 10.1002/spe.4380250705
   TAN QM, 1996, P INT C COMM ICC DAL, P225
   *TEL INC, 2007, TEL TAU
   Ural H, 2000, COMPUT COMMUN, V23, P609, DOI 10.1016/S0140-3664(99)00227-3
   VONBOCHMANN G, 1997, P SDL FOR S EVR FRAN, P261
   Wong WE, 2008, INT J SOFTW ENG KNOW, V18, P803, DOI 10.1142/S0218194008003878
   Wong WE, 2003, COMPUT NETW, V42, P359, DOI 10.1016/S1389-1286(03)00248-2
   Zhang J, 2001, INT J SOFTW ENG KNOW, V11, P139, DOI 10.1142/S0218194001000487
NR 24
TC 9
Z9 9
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2009
VL 51
IS 11
SI SI
BP 1505
EP 1519
DI 10.1016/j.infsof.2009.06.005
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 504LW
UT WOS:000270619300003
DA 2024-07-18
ER

PT J
AU Zubcoff, J
   Pardillo, J
   Trujillo, J
AF Zubcoff, Jose
   Pardillo, Jesus
   Trujillo, Juan
TI A UML profile for the conceptual modelling of data-mining with
   time-series in data warehouses
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Conceptual modelling; Multidimensional modelling; Data-mining;
   Time-series; Data warehouses; UML profiles
AB Time-series analysis is a powerful technique to discover patterns and trends in temporal data. However, the lack of a conceptual model for this data-mining technique forces analysts to deal with unstructured data. These data are represented at a low-level of abstraction and their management is expensive, Most analysts face up to two main problems: (i) the cleansing of the huge amount of potentially-analysable data and (ii) the correct definition of the data-mining algorithms to be employed. Owing to the fact that analysts' interests are also hidden in this scenario, it is not only difficult to prepare data, but also to discover which data is the most promising. Since their appearance, data warehouses have, therefore, proved to be a powerful repository of historical data for data-mining purposes. Moreover, their foundational modelling paradigm, such as, multidimensional modelling, is very similar to the problem domain. In this article, we propose a unified modelling language (UML) extension through UML profiles for data-mining. Specifically, the UML profile presented allows us to specify time-series analysis on top of the multidimensional models of data warehouses. Our extension provides analysts with an intuitive notation for time-series analysis which is independent of any specific data-mining tool or algorithm. In order to show its feasibility and ease of use, we apply it to the analysis of fish-captures in Alicante. We believe that a coherent conceptual modelling framework for data-mining assures a better and easier knowledge-discovery process on top of data warehouses. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Zubcoff, Jose] Univ Alicante, Lucentia Res Grp, Dept Sea Sci & Appl Biol, Alicante 03690, Spain.
   [Pardillo, Jesus; Trujillo, Juan] Univ Alicante, Lucentia Res Grp, Dept Software & Comp Syst, Alicante 03690, Spain.
C3 Universitat d'Alacant; Universitat d'Alacant
RP Zubcoff, J (corresponding author), Univ Alicante, Lucentia Res Grp, Dept Sea Sci & Appl Biol, Alicante 03690, Spain.
EM Jose.Zubcoff@ua.es; jesuspv@dlsi.ua.es; jtrujillo@dlsi.ua.es
RI Zubcoff Vallejo, Jose/H-9279-2015; Trujillo, Juan/L-7079-2014; Zubcoff,
   Jose/F-8858-2016
OI Zubcoff Vallejo, Jose/0000-0002-9469-7747; Trujillo,
   Juan/0000-0003-0139-6724; 
CR Ali FM, 2004, INFORM SOFTWARE TECH, V46, P499, DOI 10.1016/S0950-5849(03)00089-2
   [Anonymous], ER
   [Anonymous], UN MOD LANG UML VERS
   [Anonymous], PRED MOD MARK LANG P
   [Anonymous], OBJ CONSTR LANG OCL
   [Anonymous], ER
   Becker K, 2005, INFORM SOFTWARE TECH, V47, P95, DOI 10.1016/j.infsof.2004.06.004
   Berner S, 1999, LECT NOTES COMPUT SC, V1723, P249
   Bernstein A, 2005, IEEE T KNOWL DATA EN, V17, P503, DOI 10.1109/TKDE.2005.67
   Bowerman B.L., 1993, Forecasting and Time Series an Applied Approach
   FENSTERMACHER KD, 2004, OOPSLA COMPANION, P88
   Frawley W. J., 1991, Knowledge discovery in databases, P1
   GONZALEZARANDA P, 2004, ICDM WORKSH FDM, P39
   HOFMANN M, 2003, ISICT 03, P103
   Inmon W.H., 1996, BUILDING DATA WAREHO, VSecond
   Inmon W. H., 1996, COMMUN ACM, V49, P83
   JOHANSEN S, 1991, ECONOMETRICA, V59, P1551, DOI 10.2307/2938278
   Luján-Mora S, 2004, LECT NOTES COMPUT SC, V3261, P14
   Lujan-Mora S., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P290
   Luján-Mora S, 2006, DATA KNOWL ENG, V59, P725, DOI 10.1016/j.datak.2005.11.004
   MEEK C, 2002, SDM
   *OBJ MAN GROUP, 2002, UML PROF CORBA VERS
   *OBJ MAN GROUP, 2005, UML TEST PROF VERS 1
   *OBJ MAN GROUP, 2003, COMM WAR MET CWM VER
   Pedersen TB, 2001, INFORM SYST, V26, P383, DOI 10.1016/S0306-4379(01)00023-0
   Pyle D., 1999, DATA PREPARATION DAT
   Rizzi S., 2004, PARMA
   RIZZI S, 2003, ER, P77
   Serrano M, 2007, INFORM SOFTWARE TECH, V49, P851, DOI 10.1016/j.infsof.2006.09.008
   Trujillo J, 2003, LECT NOTES COMPUT SC, V2813, P307
   Westphal CR., 1998, DATA MINING SOLUTION
   YAR M, 1990, INT J FORECASTING, V6, P127, DOI 10.1016/0169-2070(90)90103-I
   Zubcoff JJ, 2005, LECT NOTES COMPUT SC, V3589, P11, DOI 10.1007/11546849_2
   Zubcoff J, 2007, LECT NOTES COMPUT SC, V4654, P199
   Zubcoff J, 2007, DATA KNOWL ENG, V63, P44, DOI 10.1016/j.datak.2006.10.007
   Zubcoff J, 2006, LECT NOTES COMPUT SC, V4081, P566
NR 36
TC 18
Z9 19
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2009
VL 51
IS 6
BP 977
EP 992
DI 10.1016/j.infsof.2008.09.006
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 435BX
UT WOS:000265319400002
DA 2024-07-18
ER

PT J
AU Kitchenham, B
   Brereton, OP
   Budgen, D
   Turner, M
   Bailey, J
   Linkman, S
AF Kitchenham, Barbara
   Brereton, O. Pearl
   Budgen, David
   Turner, Mark
   Bailey, John
   Linkman, Stephen
TI Systematic literature reviews in software engineering - A systematic
   literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic literature review; Evidence-based software engineering;
   Tertiary study; Systematic review quality; Cost estimation
ID COMPUTER-SCIENCE
AB Background: In 2004 the concept of evidence-based software engineering (EBSE) was introduced at the ICSE04 conference.
   Aims: This study assesses the impact of systematic literature reviews (SLRs) which are the recommended EBSE method for aggregating evidence.
   Method: We used the standard systematic literature review method employing a manual search of 10 journals and 4 conference proceedings.
   Results: Of 20 relevant studies, eight addressed research trends rather than technique evaluation. Seven SLRs addressed cost estimation. The quality of SLRs was fair with only three scoring less than 2 out of 4.
   Conclusions: Currently, the topic areas covered by SLRs are limited. European researchers, particularly those at the Simula Laboratory appear to be the leading exponents of systematic literature reviews. The series of cost estimation SLRs demonstrate the potential value of EBSE for synthesising evidence and making it available to practitioners. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Kitchenham, Barbara; Brereton, O. Pearl; Turner, Mark; Linkman, Stephen] Keele Univ, Sch Comp Sci & Math, Software Engn Grp, Keele ST5 5BG, Staffs, England.
   [Budgen, David; Bailey, John] Univ Durham, Dept Comp Sci, Durham, England.
C3 Keele University; Durham University
RP Kitchenham, B (corresponding author), Keele Univ, Sch Comp Sci & Math, Software Engn Grp, Keele ST5 5BG, Staffs, England.
EM barbara@kitchenham.me.uk
RI Liu, Yan/K-4090-2019; ONeill, Susan/B-1761-2010; Kitchenham,
   Barbara/AAL-4311-2020; Liu, Yan/Z-1637-2018
OI Liu, Yan/0000-0003-3778-1325; Kitchenham, Barbara/0000-0002-6134-8460;
   Budgen, David/0000-0001-7143-0241
FU Engineering and Physical Sciences Research Council (EPSRC) EBSE Project
   [EP/C51839X/1]; EPSRC [EP/E046983/1, EP/E049184/1] Funding Source: UKRI
FX This research was funded by The Engineering and Physical Sciences
   Research Council (EPSRC) EBSE Project (EP/C51839X/1). Short, preliminary
   versions of this study were presented at the RE-BSE2 workshop at ICSE07
   and the EASE07 Conference at Keele University.
CR [Anonymous], 2005, P INT S EMP SOFTW EN
   BARCELOS RF, 2006, IB AM WORKSH REQ ENG
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Dyer M, 2005, INFORM SOFTWARE TECH, V47, P1, DOI 10.1016/j.infsof.2004.10.006
   Ezhov V.F., 2007, PNPI RAS
   GALIN D, 2005, IEEE INT C SOFTW SCI
   Galin D, 2006, IEEE SOFTWARE, V23, P81, DOI 10.1109/MS.2006.149
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Glass RL, 2004, COMMUN ACM, V47, P89, DOI 10.1145/990680.990686
   Grimstad S, 2006, INFORM SOFTWARE TECH, V48, P302, DOI 10.1016/j.infsof.2005.04.004
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Hayes W., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P143, DOI 10.1109/METRIC.1999.809735
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   JORGENSEN M, 2005, 11 IEEE INT SOFTW ME, P24
   Jorgensen M, 2007, INT J FORECASTING, V23, P449, DOI 10.1016/j.ijforecast.2007.05.008
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Juristo N, 2006, IEEE SOFTWARE, V23, P72, DOI 10.1109/MS.2006.166
   Kitchenham B., 2004, Procedures for undertaking systematic reviews
   Kitchenham B., 2007, EBSE200703
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   KITCHENHAM BA, 2006, P EMP ASS SOFTW ENG, P89
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Ma J, 2006, ACM COMPUT SURV, V38, DOI 10.1145/1132960.1132961
   MAHMOOD S, 2005, IET SOFTW, V1, P57
   Mendes E, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P481, DOI 10.1109/ISESE.2005.1541857
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Miller J., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P152, DOI 10.1109/METRIC.1999.809736
   Molokken-Ostvold K, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P208, DOI 10.1109/METRIC.2004.1357904
   Petersson H, 2004, J SYST SOFTWARE, V72, P249, DOI 10.1016/S0164-1212(03)00090-6
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   Ramesh V, 2004, J SYST SOFTWARE, V70, P165, DOI [10.1016/S0164-1212(03)00015-3, 10.1016/S0164-1212(03)00014-1]
   Runeson P, 2006, IEEE SOFTWARE, V23, P82, DOI 10.1109/MS.2006.89
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   TICHY WF, 1995, J SYST SOFTWARE, V28, P9, DOI 10.1016/0164-1212(94)00111-Y
   Torchiano M, 2004, IEEE SOFTWARE, V21, P88, DOI 10.1109/MS.2004.1270770
   TURNER M, 2008, P EASE 08 BRIT COMP
   ZANNIER C, 2006, SUCCESS EMPIRICAL ST, P341
   Zelkowitz MV, 1997, INFORM SOFTWARE TECH, V39, P735, DOI 10.1016/S0950-5849(97)00025-6
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
NR 42
TC 1991
Z9 2127
U1 42
U2 382
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2009
VL 51
IS 1
SI SI
BP 7
EP 15
DI 10.1016/j.infsof.2008.09.009
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 389FU
UT WOS:000262077500003
DA 2024-07-18
ER

PT J
AU Jiang, T
   Gold, N
   Harman, M
   Li, Z
AF Jiang, Tao
   Gold, Nicolas
   Harman, Mark
   Li, Zheng
TI Locating dependence structures using search-based slicing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Program slicing; Search-Based Software Engineering
ID SOFTWARE; ALGORITHMS
AB This paper introduces an approach to locating dependence structures in a program by searching the space of the powerset of the set of all possible program slices. The paper formulates this problem as a search-based software engineering problem. To evaluate the approach, the paper introduces an instance of a search-based slicing problem concerned with locating sets of slices that decompose a program into a set of covering slices that minimize inter-slice overlap. The paper reports the result of an empirical study of algorithm performance and result-similarity for Hill Climbing, Genetic, Random Search and Greedy Algorithms applied to a set of 12 C programs. (c) 2007 Elsevier B.V. All rights reserved.
C1 [Jiang, Tao; Gold, Nicolas; Harman, Mark; Li, Zheng] Kings Coll London, London WC2R 2LS, England.
C3 University of London; King's College London
RP Jiang, T (corresponding author), Kings Coll London, London WC2R 2LS, England.
EM tao.jiang@kcl.ac.uk
RI Li, Zheng/L-8594-2015
OI Li, Zheng/0000-0002-3938-7033; Harman, Mark/0000-0002-5864-4488
CR Aguilar-Ruiz JS, 2001, INFORM SOFTWARE TECH, V43, P875, DOI 10.1016/S0950-5849(01)00193-8
   [Anonymous], INT C SOFTW MAINT
   [Anonymous], 1997, APPROXIMATION ALGORI
   Antoniol G, 2005, PROC IEEE INT CONF S, P240
   Antoniol G, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P172, DOI 10.1109/METRIC.2004.1357901
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   BAKER B, 1995, WORK C REV ENG 1995
   Baresel A., 2004, Software Engineering Notes, V29, P108, DOI 10.1145/1013886.1007527
   BARESEL A, 2002, GECCO 2002, P1329
   BIEMAN JM, 1994, IEEE T SOFTWARE ENG, V20, P644, DOI 10.1109/32.310673
   Binkley D, 2005, PROC IEEE INT CONF S, P177
   Binkley D, 2004, IEEE T SOFTWARE ENG, V30, P715, DOI 10.1109/TSE.2004.78
   Binkley D, 1998, INFORM SOFTWARE TECH, V40, P583, DOI 10.1016/S0950-5849(98)00085-8
   Boehm B.W., 1976, ICSE 76, P592
   BOTTACI L, 2002, GECCO 2002, P1337
   Bouktif S, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1885
   BRIAND LC, 2002, SEKE, P43
   Briand LC, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1021
   Burgess CJ, 2001, INFORM SOFTWARE TECH, V43, P863, DOI 10.1016/S0950-5849(01)00192-6
   CANFORA G, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P424, DOI 10.1109/ICSM.1994.336752
   Canfora G, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1069
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   COHEN M, 2006, GECCO 2006 P 8 ANN C, V2, P1901
   Cooper KD, 1999, ACM SIGPLAN NOTICES, V34, P1, DOI 10.1145/315253.314414
   DeLucia A, 1996, FOURTH WORKSHOP ON PROGRAM COMPREHENSION, PROCEEDINGS, P9, DOI 10.1109/WPC.1996.501116
   Dolado JJ, 2000, IEEE T SOFTWARE ENG, V26, P1006, DOI 10.1109/32.879821
   DUCASSE S, 1999, INT C SOFTW MAINT
   Fatiregun D, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P3
   Fatiregun D, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P65
   Feige U, 2004, ALGORITHMICA, V40, P219, DOI 10.1007/s00453-004-1110-5
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   GALLAGHER KB, 1990, THESIS U MARYLAND CO
   GALLAGHER KB, 1992, P INT C SOFTW MAINT, P236
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   *GRAMM INC, 2002, COD SLIC SYST
   Guo Q, 2005, IEE PROC-SOFTW, V152, P127, DOI 10.1049/ip-sen:20045001
   Harman M, 2004, IEEE T SOFTWARE ENG, V30, P3, DOI 10.1109/TSE.2004.1265732
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M., 2002, GENETIC EVOLUTIONARY, P1351
   HORWITZ S, 1988, SIGPLAN NOTICES, V23, P35
   HORWITZ S, 1989, ACM T PROGR LANG SYS, V11, P345, DOI 10.1145/65979.65980
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   JOHNSON J, 1993, CASCON
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Khoshgoftaar TM, 2004, IEEE T EVOLUT COMPUT, V8, P593, DOI 10.1109/TEVC.2004.837108
   Kirsopp Colin., 2002, GECCO 02, P1367
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   KONTOGIANNIS K, 1996, AUTOMATED SOFTWARE E, V3
   Krinke J, 2002, PROC IEEE INT CONF S, P22, DOI 10.1109/ICSM.2002.1167744
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Lakhotia A, 1998, INFORM SOFTWARE TECH, V40, P677, DOI 10.1016/S0950-5849(98)00091-3
   LEON D, 2005, EMPIRICAL EVALUATION
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Longworth H. D., 1986, Proceedings 10th Anniversary COMSAC '86. The IEEE Computer Society's Tenth Annual International Computer Software and Applications Conference (Cat. No.86CH2356-4), P383
   Mahdavi K, 2003, PROC IEEE INT CONF S, P315, DOI 10.1109/ICSM.2003.1235437
   MAYRAND J, 1996, INT C SOFTW MAINT
   MCMINN P, 2006, INT S SOFTW TEST AN, P13, DOI DOI 10.1145/1146238.1146241
   Meyers TM, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P256, DOI 10.1109/WCRE.2004.34
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   MITCHELL BS, 2002, GECCO 2002, P1375
   Naeimi H, 2004, 2004 IEEE INTERNATIONAL CONFERENCE ON FIELD-PROGRAMMABLE TECHNOLOGY, PROCEEDINGS, P49
   O'Keeffe M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P247
   Ott L. M., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P71, DOI 10.1109/METRIC.1993.263799
   Ott L. M., 1989, Proceedings. 11th International Conference on Software Engineering (Cat. No.89CH2718-5), P198, DOI 10.1145/74587.74614
   Ott LM, 1998, INFORM SOFTWARE TECH, V40, P691, DOI 10.1016/S0950-5849(98)00092-5
   OTT LM, 1992, P 10 ANN SOFTW REL S, P16
   OTT LM, 1992, IEEE C SOFTW MAINT, P345
   RYSSELBERGH FV, 2003, P INT WORKSH EV LARG
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Seng O, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1045
   Tonella P, 2003, IEEE T SOFTWARE ENG, V29, P495, DOI 10.1109/TSE.2003.1205178
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   WEISER M, 1983, INFORM PROCESS LETT, V17, P129, DOI 10.1016/0020-0190(83)90052-2
   WHITLEY D, 1994, STAT COMPUT, V4, P65, DOI 10.1007/BF00175354
   Whitley D, 2001, INFORM SOFTWARE TECH, V43, P817, DOI 10.1016/S0950-5849(01)00188-4
NR 77
TC 8
Z9 9
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2008
VL 50
IS 12
BP 1189
EP 1209
DI 10.1016/j.infsof.2007.11.001
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 358CS
UT WOS:000259894800002
DA 2024-07-18
ER

PT J
AU Liu, KC
   Sun, LL
   Fu, Y
AF Liu, Kecheng
   Sun, Lily
   Fu, Yan
TI Ontological modelling of content management and provision
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE content management; personalised information provision; ontological
   modelling; semantic analysis; norms construction
ID INFORMATION REQUIREMENTS; KNOWLEDGE; ARTICULATION
AB Information provision to address the changing requirements can be best supported by content management. The Current information technology enables information to be stored and provided from various distributed sources. To identify and retrieve relevant information requires effective mechanisms for information discovery and assembly. This paper presents a method, which enables the design of such mechanisms, with a set of techniques for articulating and profiling users' requirements, formulating information provision specifications, realising management of information content in repositories, and facilitating response to the user's requirements dynamically during the process of knowledge construction. These functions are represented in an ontology which integrates the capability of the mechanisms. The ontological modelling in this paper has adopted semiotics principles with embedded norms to ensure coherent course of actions represented in these mechanisms. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Liu, Kecheng; Sun, Lily; Fu, Yan] Univ Reading, Informat Res Ctr, Reading, Berks, England.
   [Liu, Kecheng; Sun, Lily] Beijing Inst Technol, Sch Management & Econ, Beijing, Peoples R China.
C3 University of Reading; Beijing Institute of Technology
RP Fu, Y (corresponding author), Univ Reading, Informat Res Ctr, Reading, Berks, England.
CR Abrahamsson P, 2003, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2003.1201204
   ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   Ambler Scott W., 2004, The Object Primer: Agile Model-Driven Development with UML
   [Anonymous], M PROF INSTR DES TEC
   [Anonymous], 1968, ECOLOGICAL APPROACH
   [Anonymous], 1990, Building Large Knowledge-Based Systems: Representation and Inference in the CYC Project
   Borst WN., 1997, Construction of engineering ontologies for knowledge sharing and reuse"
   Bruner J., 1983, Child's talk. Learning to use language
   Brusilovsky P., 2003, International Journal of Artificial Intelligence in Education (IJAIED), V13, P159, DOI [DOI 10.5555/1434845.1434847, 10.5555/1434845.1434847]
   Cohen D, 2004, ADV COMPUT, V62, P1, DOI 10.1016/S0065-2458(03)62001-2
   Colomb RM, 2005, INFORM SOFTWARE TECH, V47, P775, DOI 10.1016/j.infsof.2004.12.002
   CONOLE G, 2002, J INTERACTIVE MEDIA, V7, P1
   CUNNINGHAM DJ, 1992, ED PSYCHOL REV, V14
   Daconta M.C., 2003, SEMANTIC WEB GUIDE F
   Davulcu H., 2004, P 13 INT WORLD WIDE, P144
   *DCMI, 2005, DCMI ABSTR MOD
   Debevoise Tom., 2005, BUSINESS PROCESS MAN
   Fernandez-Lopez M., 1999, IEEE INTELLIGENT SYS, V4, P37
   FU Y, 2006, P INT C ORG SEM INT
   GENESERETH MR, 1998, NCITST298004
   Gomez-Perez A., 2004, Ontological Engineering, V2nd, P1
   GOMEZPEREZ A, 2002, LECT NOTES COMPUTER, V2473
   Gruber TR, 1995, INT J HUM-COMPUT ST, V43, P907, DOI 10.1006/ijhc.1995.1081
   GRUNINGER M, 1995, IJCAI95 WORKSH BAS O, V6, P1
   Guarino N, 1998, FR ART INT, V46, P3
   Honebein RC., 1993, DESIGNING ENV CONSTR, P87, DOI DOI 10.1007/978-3-642-78069-1_5
   Huang HM, 2002, BRIT J EDUC TECHNOL, V33, P27, DOI 10.1111/1467-8535.00236
   *IEEE, 2003, STAND LEARN OBJ MET
   *IMS, 2003, IMS CONT PACK INF MO
   LISSILA O, 2001, KSL0102 STANF U
   LIU K, 2005, P 5 IEEE INT C ADV L
   LIU K, 2002, INT C TEACH ENGL TRA
   Liu K., 2000, SEMIOTICS INFORM SYS
   *LOM, 2004, IMS MET BEST PRACT G
   Maamar Z, 2006, INFORM SOFTWARE TECH, V48, P441, DOI 10.1016/j.infsof.2005.05.004
   Middleton SE, 2004, ACM T INFORM SYST, V22, P54, DOI 10.1145/963770.963773
   MIZOGUCHI R, 1995, TOWARDS VERY LARGE KNOWLEDGE BASES, P46
   Moens M., 1988, Computational Linguistics, V14, P15
   Pedersen S, 2003, ETR&D-EDUC TECH RES, V51, P57, DOI 10.1007/BF02504526
   Pederson S., 2004, J ED MULTIMEDIA HYPE, V13, P283
   Resnick Mitchel, 1994, Turtles, Termites and Traffic Jams: Explorations in Massively Parallel Microworlds
   *SCORM, 2004, SCORM CONT AGGR MOD
   Staab S, 2004, IEEE INTELL SYST, V19, P74, DOI 10.1109/MIS.2004.37
   Staab S, 2001, IEEE INTELL SYST APP, V16, P26, DOI 10.1109/5254.912382
   Stamper R, 2000, BEHAV INFORM TECHNOL, V19, P15, DOI 10.1080/014492900118768
   Stamper R.K., 1973, INFORM BUSINESS ADM
   STAMPER RK, 1997, P 1 INT WORKSH COMP
   Sun L, 2001, INFORM SOFTWARE TECH, V43, P247, DOI 10.1016/S0950-5849(00)00164-6
   Sun L, 2006, REQUIR ENG, V11, P279, DOI 10.1007/s00766-006-0031-z
   TANASESCU V, 2004, 1 AKT WORKSH SEM WEB
   Trausan-Matu S, 2002, LECT NOTES COMPUT SC, V2363, P259
   Uden L., 2001, Journal of Computing in Higher Education, V12, P34, DOI 10.1007/BF02940955
   vanHeijst G, 1997, INT J HUM-COMPUT ST, V46, P183, DOI 10.1006/ijhc.1996.0090
   VONGLASERSFELD E, 1995, CONSTRUCTIVISM IN EDUCATION, P3
   WHEATLEY GH, 1991, SCI EDUC, V75, P9, DOI 10.1002/sce.3730750103
NR 55
TC 11
Z9 11
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2008
VL 50
IS 11
BP 1155
EP 1164
DI 10.1016/j.infsof.2008.03.008
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 355LA
UT WOS:000259709200008
DA 2024-07-18
ER

PT J
AU Park, BJ
   Pedrycz, W
   Oh, SK
AF Park, Byoung-Jun
   Pedrycz, Witold
   Oh, Sung-Kwun
TI An approach to fuzzy granule-based hierarchical polynomial networks for
   empirical data modeling in software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE fuzzy granule-based hierarchical polynomial networks (FG-HPN); fuzzy
   granule; hierarchical polynomial networks; polynomial neural networks;
   genetic algorithms; evolutionary design; software engineering
ID NEUROFUZZY NETWORKS; NEURAL NETWORKS
AB Experimental software data capturing the essence of software projects (expressed e.g., in terms of their complexity and development time) have been a subject of intensive modeling. In this study, we introduce a new category of fuzzy granule-based hierarchical polynomial networks (FG-HPN) and discuss their comprehensive design methodology. The FG-HPN architecture benefits from the existence of highly synergistic linkages between fuzzy granules (referred here as granular information design phase of FG-HPN) and hierarchical polynomial networks (referred as network design phase of FG-HPN). We develop a rule-based fuzzy granules consisting of a number of "if-then" statements whose antecedents are formed in the input space and linked with the consequents (conclusion parts) formed in the output space. Hierarchical polynomial networks provide approximation of experimental data. In this framework, fuzzy granules contribute to the realization of the granular information design phase of the overall networks structure of the FG-HPN. The networks design phase is designed with the aid of genetically endowed hierarchical polynomial networks. The experiments reported in this study deal with well-known software data such as the NASA dataset concerning software cost estimation and the one describing software modules of the Medical Imaging System (MIS). In comparison with the previously discussed approaches, the proposed FG-HPN is more accurate and yield significant generalization abilities. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Park, Byoung-Jun] GM Tech Co Ltd, Technol Res Inst, Hwaseong Si, Gyeonggi Do, South Korea.
   [Pedrycz, Witold] Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB T6R 2G7, Canada.
   [Pedrycz, Witold] Polish Acad Sci, Inst Syst Sci, PL-00901 Warsaw, Poland.
   [Oh, Sung-Kwun] Univ Suwon, Dept Elect Engn, Hwaseong Si, Gyeonggi Do, South Korea.
C3 University of Alberta; Polish Academy of Sciences; Suwon University
RP Pedrycz, W (corresponding author), GM Tech Co Ltd, Technol Res Inst, Hwaseong Si, Gyeonggi Do, South Korea.
EM pedrycz@ee.ualberta.ca
CR [Anonymous], 1996, GENETIC ALGORITHMS D, DOI DOI 10.1007/978-3-662-03315-9_4
   [Anonymous], 1989, GENETIC ALGORITHMS S
   BAILEY JW, 1981, P 5 INT C SOFTW ENG, P107
   Bishop C. M., 1995, NEURAL NETWORKS PATT
   Boehm B., 1995, Annals of Software Engineering, V1, P57, DOI 10.1007/BF02249046
   BOEHM B, 1981, SOFTWARE ENG EC, P533
   Box G.E., 1978, Statistics for Experimenters, V664
   HOLLAND J, 1975, ADAPTATION NATURAL A
   IVAHNENKO AG, 1968, SOVIET AUTOMATIC CON, V13, P43
   Jones C., 1997, APPL SOFTWARE MEASUR
   Kearns M., 1997, Proceedings of the Tenth Annual Conference on Computational Learning Theory, P152, DOI 10.1145/267460.267491
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   LAND LPW, 1997, P EUR SOFTW ENG C FD, P294
   MICHAEL R, 1995, HDB SOFTWARE RELIABI
   Oh SK, 2004, MATH COMPUT MODEL, V40, P891, DOI 10.1016/j.mcm.2004.10.019
   Oh SK, 2004, FUZZY SET SYST, V145, P165, DOI 10.1016/j.fss.2003.10.009
   Oh SK, 2003, FUZZY SET SYST, V138, P399, DOI 10.1016/S0165-0114(02)00441-4
   OH SK, 2003, COMPUTERS ELECT ENG, V29, P653
   PAO YH, 1992, COMPUTER, V25, P76, DOI 10.1109/2.144401
   Park BJ, 2006, NEURAL COMPUT APPL, V15, P310, DOI 10.1007/S00521-006-0033-2
   PATRIKAR A, 1992, ELECTRON LETT, V28, P1109, DOI 10.1049/el:19920700
   Pedrycz W, 2001, NEUROCOMPUTING, V36, P205, DOI 10.1016/S0925-2312(00)00342-8
   Pedrycz W., 1998, Computational Intelligence: An Introduction
   Porter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P41, DOI 10.1145/268411.268421
   Rudin W., 1976, PRINCIPLES MATH ANAL
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shin M, 2000, IEEE T SOFTWARE ENG, V26, P567, DOI 10.1109/32.852743
NR 27
TC 2
Z9 2
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2008
VL 50
IS 9-10
BP 912
EP 923
DI 10.1016/j.infsof.2007.09.002
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 324PG
UT WOS:000257529900006
DA 2024-07-18
ER

PT J
AU Mittas, N
   Athanasiades, M
   Angelis, L
AF Mittas, Nikolaos
   Athanasiades, Marinos
   Angelis, Lefteris
TI Improving analogy-based software cost estimation by a resampling method
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software cost estimation; estimation by analogy; non-parametric
   regression; iterated bagging
ID REGRESSION
AB Estimation by analogy (EbA) is a well-known technique for software cost estimation. The popularity of the method is due to its straightforwardness and its intuitively appealing interpretation. However, in spite of the simplicity in application, the theoretical study of EbA is quite complicated. In this paper, we exploit the relation of EbA method to the nearest neighbor non-parametric regression in order to suggest a resampling procedure, known as iterated bagging, for reducing the prediction error. The improving effect of iterated bagging on EbA is validated using both artificial and real datasets from the literature, obtaining very promising results. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Mittas, Nikolaos; Athanasiades, Marinos; Angelis, Lefteris] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
C3 Aristotle University of Thessaloniki
RP Angelis, L (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
EM nmittas@csd.auth.gr; marathon@csd.auth.gr; lef@csd.auth.gr
RI Mittas, Nikolaos/AAL-6645-2021
OI Mittas, Nikolaos/0000-0003-3061-7864
CR Abran A, 1996, IEEE T SOFTWARE ENG, V22, P895, DOI 10.1109/32.553638
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 1988, BIOMETRICS
   [Anonymous], 1990, APPL NONPARAMETRIC R, DOI DOI 10.1017/CCOL0521382483
   [Anonymous], 2002, Applied Statistics for Software Managers
   Boehm BW., 1981, Software Engineering Economics
   Borra S, 2002, COMPUT STAT DATA AN, V38, P407, DOI 10.1016/S0167-9473(01)00068-8
   BREIMAN L, 1996, MACH LEARN, V24, P95
   BREIMAN L, 2001, MACH LEARNING, V45
   COVER TM, 1968, IEEE T INFORM THEORY, V14, P50, DOI 10.1109/TIT.1968.1054098
   Efron B., 1993, INTRO BOOTSTRAP CHAP
   HEEMSTRA FJ, 1992, INFORM SOFTWARE TECH, V34, P627, DOI 10.1016/0950-5849(92)90068-Z
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Sentas P, 2005, INFORM SOFTWARE TECH, V47, P17, DOI 10.1016/j.infsof.2004.05.001
   Shan Y, 2002, 2002 INTERNATIONAL CONFERENCE ON COMMUNICATIONS, CIRCUITS AND SYSTEMS AND WEST SINO EXPOSITION PROCEEDINGS, VOLS 1-4, P1108, DOI 10.1109/ICCCAS.2002.1178979
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   *SPLUS, 2001, SPLUS 6 WIND GUID ST
NR 20
TC 33
Z9 36
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2008
VL 50
IS 3
BP 221
EP 230
DI 10.1016/j.infsof.2007.04.001
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 254UI
UT WOS:000252613100005
DA 2024-07-18
ER

PT J
AU Bellifemine, F
   Caire, G
   Poggi, A
   Rimassa, G
AF Bellifemine, Fabio
   Caire, Giovanni
   Poggi, Agostino
   Rimassa, Giovanni
TI JADE: A software framework for developing multi-agent applications.
   Lessons learned
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE agent technology; open source software; distributed systems
ID SYSTEMS; FIPA
AB Since a number of years agent technology is considered one of the most innovative technologies for the development of distributed software systems. While not yet a mainstream approach in software engineering at large, a lot of work on agent technology has been done, many research results and applications have been presented, and some software products exists which have moved from the research community to the industrial community. One of these is JADE, a software framework that facilitates development of interoperable intelligent multi-agent systems and that is distributed under an Open Source License. JADE is a very mature product, used by a heterogeneous community of users both in research activities and in industrial applications. This paper presents JADE and its technological components together with a discussion of the possible reasons for its success and lessons learned from the somewhat detached perspective possible nine years after its inception. (c) 2007 Elsevier B.V. All rights reserved.
C1 [Bellifemine, Fabio; Caire, Giovanni] Telecom Italia, I-10148 Turin, Italy.
   [Caire, Giovanni] Univ Parma, Dipartimento Ingn Informaz, I-43100 Parma, Italy.
   [Rimassa, Giovanni] Univ Parma, Whitestein Technol, CH-8032 Zurich, Switzerland.
C3 Telecom Italia; University of Parma
RP Bellifemine, F (corresponding author), Telecom Italia, Via G Reiss Romoli 274, I-10148 Turin, Italy.
EM fabioluigi.bellifemine@telecomitalia.it;
   giovanni.caire@telecomitalia.it; poggi@ce.unipr.it; gri@whitestein.com
CR [Anonymous], 2007, Developing Multi-Agent Systems with JADE
   Bellifemine F, 2001, SOFTWARE PRACT EXPER, V31, P103, DOI 10.1002/1097-024X(200102)31:2<103::AID-SPE358>3.0.CO;2-O
   Beneventi A., 2004, WSEAS T INFORM SCI A, V1, P422
   Bergenti F, 2001, IEEE INTERNET COMPUT, V5, P20, DOI 10.1109/4236.939446
   BERGER M, 2002, WORKSH UB AG AAMAS 2
   Bloch Joshua., DESIGN GOOD API WHY
   Bordini RH, 2006, INFORM-J COMPUT INFO, V30, P33
   CALISTI M, 2004, APPL SOFTWARE AGENT, P199
   CHMIEL K, 2005, SCI PROGRAMMING, V2, P159
   COVINO G, 2007, INNOVATIVE NGN MANAG
   COWAN D, 2001, 2001 HP
   Dastani M, 2005, MU S ART SOC SIM ORG, V15, P39, DOI 10.1007/0-387-26350-0_2
   GAMMA E, 1995, ELEMENTS REUSABLE OB
   Helsinger A, 2004, IEEE SYS MAN CYBERN, P1910
   Hodík J, 2005, COMPUT SYST SCI ENG, V20, P357
   Lee H, 2007, IEEE PERVAS COMPUT, V6, P85, DOI 10.1109/MPRV.2007.42
   Rao AS., 1995, Proceedings of the first international conference on multi-agent systems, P312
   Ross R, 2005, LECT NOTES ARTIF INT, V3346, P66
   VBRA P, 2003, EXP SEARCH INNOVATIO, V3, P52
   Winikoff M, 2005, MU S ART SOC SIM ORG, V15, P175, DOI 10.1007/0-387-26350-0_7
   Zimmermann R, 2006, IN HAND I S, P157
NR 21
TC 171
Z9 184
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2008
VL 50
IS 1-2
BP 10
EP 21
DI 10.1016/j.infsof.2007.10.008
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 248ZT
UT WOS:000252196700004
DA 2024-07-18
ER

PT J
AU Alshayeb, M
   Li, W
AF Alshayeb, Mohammad
   Li, Wei
TI An empirical study of relationships among extreme programming
   engineering activities
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE extreme programming; design evolution; extreme programming engineering
   activities; empirical study
AB Extreme programming (XP) is an agile software process that promotes early and quick production of working code. In this paper, we investigated the relationship among three XP engineering activities: new design, refactoring, and error fix. We found that the more the new design performed to the system the less refactoring and error fix were performed. However, the refactoring and error fix efforts did not seem to be related. We also found that the error fix effort is related to number of days spent on each story, while new design is not. The relationship between the refactoring effort and number of days spent on each story was not conclusive. (C) 2006 Elsevier B.V. All rights reserved.
C1 King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran 31261, Saudi Arabia.
   Univ Alabama, Dept Comp Sci, Huntsville, AL 35899 USA.
C3 King Fahd University of Petroleum & Minerals; University of Alabama
   System; University of Alabama Huntsville
RP Alshayeb, M (corresponding author), King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran 31261, Saudi Arabia.
EM mohammad@alshayeb.com; wli@cs.uah.edu
RI Alshayeb, Mohammad/B-5941-2015
OI Alshayeb, Mohammad/0000-0001-7950-0099
CR Alshayeb M, 2005, J SYST SOFTWARE, V74, P269, DOI 10.1016/j.jss.2004.02.002
   Ambler Scott, 2002, Agile modeling: effective practices for extreme programming and the unified process
   [Anonymous], P 5 WORLD MULT SYST
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   BECK K, 1999, PLANNING EXTREME PRO
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Cockburn A., 2002, AGILE SOFTWARE DEV
   COCKBURN A, 2000, INT C EXTR PROGR
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Harrison R., 1998, Empirical Software Engineering, V3, P255, DOI 10.1023/A:1009784121652
   Jeffries R., 2000, EXTREME PROGRAMMING
   Li W, 1998, J OBJECT-ORIENT PROG, V11, P15
   LI W, 2000, P INT C ADV INFR EL
   Nosek JT, 1998, COMMUN ACM, V41, P105, DOI 10.1145/272287.272333
   Turk D., 2002, Proceedings of the Third International Conference on eXtreme Programming and Agile Processes in Software Engineering, P43
NR 15
TC 5
Z9 7
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2006
VL 48
IS 11
BP 1068
EP 1072
DI 10.1016/j.infsof.2006.01.005
PG 5
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 101CL
UT WOS:000241716400007
DA 2024-07-18
ER

PT J
AU Noh, SY
   Gadia, SK
AF Noh, Seo-Young
   Gadia, Shashi K.
TI A comparison of two approaches to utilizing XML in para metric databases
   for temporal data
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE parametric database; temporal database; database comparison; XML
   utilization
AB The parametric data model captures an object. in terms of a single tuple. This feature eliminates unnecessary self-join operations to combine tuples scattered in a temporal relation. Despite this advantage, this model is relatively difficult to implement on top of relational databases because the sizes of attributes are unfixed. Since data boundaries are not problematic in XML, XML can be an elegant solution to implement parametric databases for temporal data. There are two approaches to implementing parametric databases using XML: (1) a native XML database with XQuery engine, and (2) an XML storage with a temporal query language. To determine which approach is appropriate in parametric databases, we consider four questions: the effectiveness of XML in modeling temporal data, the applicability of XML query languages, the user-friendliness of the query languages, and system performances of two approaches. By evaluating the four questions, we show that the latter approach is more appropriate to utilizing XML in parametric databases. (c) 2005 Elsevier B.V. All rights reserved.
C1 Iowa State Univ, Dept Comp Sci, Ames, IA 50010 USA.
C3 Iowa State University
RP Noh, SY (corresponding author), Iowa State Univ, Dept Comp Sci, Ames, IA 50010 USA.
EM rsyoung@cs.iastate.edu
CR [Anonymous], 1995, The TSQL2 Temporal Query Language. Alphen aan den Rijn
   Barbosa D., 2002, P 5 INT WORKSH WEB D, P49
   BOURRET R, 2004, XML DATABASE PRODUCT
   Bourret R., 2005, XML DATABASES
   CAHMBERLIN DD, 2000, P 3 INT WORKSH WEB D, P53
   CAREY MJ, 2000, P 26 INT C VER LARG, P646
   CHEN CX, 2003, P 19 INT C DAT ENG B
   Clifford M, 1995, WORK COMP, P194
   Fernández M, 2000, COMPUT NETW, V33, P723, DOI 10.1016/S1389-1286(00)00061-X
   Gadia S.K., 1993, TEMPORAL DATABASES, P28
   GADIA SK, 1988, ACM T DATABASE SYST, V13, P418, DOI 10.1145/49346.50065
   Gadia SK., 1985, Proceedings of the 4th ACM SIGACT-SIGMOD Symposium on Principles of Database Systems, P51
   Gregersen H, 1999, IEEE T KNOWL DATA EN, V11, P464, DOI 10.1109/69.774104
   JENSEN CS, 1992, SIGMOD REC, V21, P35
   Kanne C., 2000, DATA ENG, P198
   Lorentzos NA, 1997, IEEE T KNOWL DATA EN, V9, P480, DOI 10.1109/69.599935
   Ma S., 2004, THESIS IOWA STATE U
   Noh SY, 2005, 12th International Symposium on Temporal Representation and Reasoning, Proceedings, P180
   NOH SY, 2004, P 2 INT C COMP SCI I, P321
   NOH SY, 2005, P INT ADV DAT C SAN, P64
   NORVAG K, 2003, ERSH MEM C, P520
   SCHMIDT A, ACM SIGMOD RECORD, V30
   Tansel AU, 1997, IEEE T KNOWL DATA EN, V9, P120, DOI 10.1109/69.567055
   TOMAN D, 1994, P 5 INT C DED OBJ OR, P103
   *TOOBIS, T12R3 TOOBIS
   WANG F, 2003, P 4 INT C WEB INF SY
   WANG F, 2004, P 23 INT C CONC MOD
   WOLFGANG M, 2004, OPEN SOURCE NATIVE D
   YANG J, 2000, P 2000 ACM SIGMOD IN
NR 29
TC 10
Z9 12
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2006
VL 48
IS 9
BP 807
EP 819
DI 10.1016/j.infsof.2005.10.002
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 073OC
UT WOS:000239751500005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hsu, CC
   Wu, IC
AF Hsu, Chien-Chih
   Wu, I. -Chen
TI An event-driven framework for inter-user communication applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE inter-user communication applications; event-driven programming;
   concurrent programming; framework; threads
AB This paper presents an event-driven framework for inter-user communication applications, such as Internet gaming or chatting, that require frequent communication among users. This paper addresses two major blocking problems for event-driven programming for inter-user communication applications, namely output blocking and request blocking. For the former, an output buffering mechanism is presented to solve this problem. For the latter, a service requesting mechanism with helper processes is presented to solve this problem. The above two mechanisms are incorporated into the framework presented in this paper to facilitate application development. In practice, this framework has been applied to online game development. (C) 2005 Elsevier B.V. All rights reserved.
C1 Natl Chiao Tung Univ, Dept Comp Sci & Informat Engn, Hsinchu 300, Taiwan.
C3 National Yang Ming Chiao Tung University
RP Wu, IC (corresponding author), Natl Chiao Tung Univ, Dept Comp Sci & Informat Engn, 1001 Ta Hsueh Rd, Hsinchu 300, Taiwan.
EM jjshie@csie.nctu.edu.tw; icwu@csie.nctu.edu.tw
RI Wu, I-Chen/AAB-2645-2021
OI Wu, I-Chen/0000-0003-2535-0587
CR [Anonymous], 1995, Design patterns for object-oriented software development
   [Anonymous], 1996, Pthreads Programming a POSIX Standard for Better Multiprocessing
   *APACHE SOFTW FDN, APACHE HTTP SERV PRO
   BALDINE I, DIVERT SOCKETS MINI
   *BLIZZ ENT INC, BLIZZ ENT WARCR 3
   BOLAND M, MATHOPD
   BOOCH G, 1998, UNIFIED MODELING LAN
   Chankhunthod A, 1996, PROCEEDINGS OF THE USENIX 1996 ANNUAL TECHNICAL CONFERENCE, P153
   COBBS A, DIVERT
   Comer D. E., 1996, INTERNETWORKING TCP, VIII
   Comer D. E., 2000, INTERNETWORKING TCP, V1
   *EFNET OR IRC NETW, EFNET CHAT NETW
   *EL ARTS INC, ORIGIN ULT ONL
   FAYAD ME, 1999, BUILD APPL FRAMEWORK
   Fisher Maydene., 2003, JDBC API TUTORIAL RE
   *FREEBSD COR TEAM, FREEBSD PROJ
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   *ICQ INC, ICQ COM
   McKusick Marshall Kirk, 1996, DESIGN IMPLEMENTATIO
   *MICR CORP, ACT SERV PAG
   *MICR CORP, MSDN THREAD STACK SI
   *MICR CORP, MSDN ODBC
   *MICR CORP, MSN MESS
   Microsoft Corp, INT INF SERV
   NIELSEN H, LIBWWW W3C SAMPLE CO
   *OP FDN, OP SOFTW MAN PAG
   Ousterhout J.K., 1996, 1996 USENIX TECHN C
   Pai VS, 1999, PROCEEDINGS OF THE 1999 USENIX ANNUAL TECHNICAL CONFERENCE, P199
   PHP Group, PHP HYP PREPR
   Richard Stevens W., 1998, UNIX NETWORK PROGRAM, V1
   Richard Stevens W., 1992, ADV PROGRAMMING UNIX
   Schmidt D., 2000, Pattern-Oriented Software Architecture, Patterns for Concurrent and Networked Objects, V2
   SCHMIDT DC, 1995, PATTERN LANGUAGES OF PROGRAM DESIGN, P529
   Srinivasan S, 1999, COMPUTER, V32, P24, DOI 10.1109/2.745717
   Stevens W, 1994, TCP IP ILLUSTRATED P, V1
   *SUN MICR INC, JAV PAG TECHN
   *SUN MICR INC, JDBC TECHN
   *THINKNEWIDEA INC, CYC GAM LEAG
   TRANTER J, 2003, EXPLORING SENDFILE S
   *VALV CORP, OFF COUNT STRIK WEB
   Welsh Matt., 2001, SIGOPS OPER SYST REV, V35, P230
   WESSELS D, SQUIB WEB PROXY CACH
   *YAH INC, YAH GAM
   *YAH INC, YAH CHAT
   *ZEUS TECHN LTD, ZEUS WEB SERV
NR 45
TC 4
Z9 4
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2006
VL 48
IS 7
BP 471
EP 483
DI 10.1016/j.infsof.2005.05.005
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 049QQ
UT WOS:000238031900004
DA 2024-07-18
ER

PT J
AU Oza, NV
   Hall, T
   Rainer, A
   Grey, S
AF Oza, Nilay V.
   Hall, Tracy
   Rainer, Austen
   Grey, Susan
TI Trust in software outsourcing relationships: An empirical investigation
   of Indian software companies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software outsourcing; trust; managing relationship; Indian software
   companies
AB This paper investigates trust in software outsourcing relationships. The study is based on an empirical investigation of eighteen high maturity software vendor companies based in India. Our analysis of the literature suggests that trust has received a lot of attention in all kinds of business relationships. This includes inter-company relationships, whether cooperative ventures or subcontracting relationships, and relationship among different parts of a single company. However, trust has been relatively under-explored in software outsourcing relationships. In this paper, we present a detailed empirical investigation of trust in commercial software outsourcing relationships. The investigation presents what vendor companies perceive about getting trust from client companies in outsourcing relationships. We present the results in two parts-(1) achieving trust initially in outsourcing relationships and (2) maintaining trust in ongoing outsourcing relationships. Our findings confirm that the critical factors to achieving trust initially in an outsourcing relationship include previous clients' reference and experience of vendor in outsourcing engagements. Critical factors identified for maintaining trust in an established outsourcing relationship include transparency, demonstrability, honesty, process followed and commitment. Our findings also suggest that trust is considered to be very fragile in outsourcing relationships. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ Hertfordshire, Sch Comp Sci, Hatfield AL10 9AB, Herts, England.
   Univ Hertfordshire, Sch Business, Hatfield AL10 9AB, Herts, England.
C3 University of Hertfordshire; University of Hertfordshire
RP Oza, NV (corresponding author), Univ Hertfordshire, Sch Comp Sci, Coll Lane, Hatfield AL10 9AB, Herts, England.
EM n.oza@herts.ac.uk; t.hall@herts.ac.uk; a.w.rainer@herts.ac.uk;
   s.grey@herts.ac.uk
RI Sawhney, Davinder/A-5736-2010
OI Hall, Tracy/0000-0002-2728-9014; Rainer, Austen/0000-0001-8868-263X
CR ANDERSON JC, 1990, J MARKETING, V54, P42, DOI 10.2307/1252172
   Bernard H.R., 2000, SOCIAL RES METHODS, V2nd
   Blau P., 1964, Exchange and power in social life, DOI DOI 10.4324/9780203792643
   BLIOS K, 1999, J MANAGE STUD, V36, P197
   Creed D., 1996, Trust in organizations: Frontiers of theory and research
   DEUTSCH M, 1962, NEBR S MOT NEBR U PR
   GAMBETTA D, 1990, TRUST, pCH13
   Gambetta Diego, 2000, Trust: Making and breaking cooperative relations, V2000, P213, DOI 10.2307/2234217
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Goede R., 2003, P 2003 ANN RES C S A, P208
   HALL M, 2002, HEALTH SERV RES, V37, P13
   Herriott R.E., 1983, EDUC RESEARCHER, V12, P14, DOI [10.2307/1175416, DOI 10.3102/0013189X012002014]
   Hollis Martin., 1998, TRUST REASON
   HUMPHREY W, 1990, MANAGING SOFTWARE PR, P412
   Kern T, 2000, J STRATEGIC INF SYST, V9, P321, DOI 10.1016/S0963-8687(00)00048-2
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Lander MC, 2004, INFORM MANAGE-AMSTER, V41, P509, DOI 10.1016/j.im.2003.10.001
   Loh L, 1992, INFORM SYST RES, V3, P334, DOI 10.1287/isre.3.4.334
   Luhman N., 1979, TRUST POWER
   Luo YD, 2002, J MANAGE, V28, P669, DOI 10.1016/S0149-2063(02)00161-7
   MARSH S, 1994, THESIS U STERLING
   MAYER RC, 1995, ACAD MANAGE REV, V20, P709, DOI 10.2307/258792
   MCGRATH G, 1999, P 10 AUSTR C INF SYS, P586
   Miles R.E., 1992, Causes of failure in network organizations
   MORGAN RM, 1994, J MARKETING, V58, P20, DOI 10.2307/1252308
   NEWCOMB TM, 1956, AM PSYCHOL, V11, P575, DOI 10.1037/h0046141
   OZA N, 2004, WISER, P67
   PALVIA PC, 1995, INFORM MANAGE, V29, P265, DOI 10.1016/0378-7206(95)00030-9
   PARKHE A, 1998, J WORLD BUSINESS, V33
   Patton M. Q, 2004, Qualitative research & evaluation methods, V4
   QURESHI S, 2005, P 38 HAW INT C SYST
   Sabherwal R, 1999, COMMUN ACM, V42, P80, DOI 10.1145/293411.293485
   STRAUSS AL, 1997, BASIC CONTENT ANAL
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Walsh M., 2001, RES MADE REAL
   Yin R.K., 2003, CASE STUDY RES DESIG
   YOO Y, 1997, J STRATEGIC INF SYST, P1
   Zviran M, 2001, J STRATEGIC INF SYST, V10, P313, DOI 10.1016/S0963-8687(01)00050-6
NR 38
TC 74
Z9 86
U1 1
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2006
VL 48
IS 5
BP 345
EP 354
DI 10.1016/j.infsof.2005.09.011
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 158EH
UT WOS:000245773500005
DA 2024-07-18
ER

PT J
AU Taweel, A
   Brereton, P
AF Taweel, A
   Brereton, P
TI Modelling software development across time zones
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE global software development; development across time zones; distributed
   software engineering
ID COMMUNICATION; ORGANIZATION
AB Economic factors and the World Wide Web are turning software usage and its development into global activities. Many benefits accrue from global development not least from the opportunity to reduce time-to-market through 'around the clock' working.
   This paper identified some of the factors and constraints that influence time-to-market when software is developed across time zones. It describes a model of the relationships between development time and the factors and overheads associated with such a pattern of work. The paper also reports on a small-scale empirical study of software development across time zones and presents some lessons learned and conclusions drawn from the theoretical and empirical work carried out. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ Keele, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
   Univ Manchester, Sch Comp Sci, Manchester M13 9PL, Lancs, England.
C3 Keele University; University of Manchester
RP Univ Keele, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
EM a.taweel@cs.man.ac.uk; o.p.brereton@keele.ac.uk
RI Taweel, Adel/G-4807-2013
OI Taweel, Adel/0000-0003-0240-9857
CR [Anonymous], 1995, Software Engineering
   ANTHES G, 2000, COMPUTERWORLD    JUN
   Brereton P, 1998, INFORM SOFTWARE TECH, V40, P221, DOI 10.1016/S0950-5849(98)00042-1
   Brooks Frederick P., 1995, The mythical man-month
   Carmel E., 1999, GLOBAL SOFTWARE TEAM
   DAFT RL, 1984, RES ORGAN BEHAV, V6, P191
   FOURNIER R, 2001, TEAMWORK KEY REMOTE
   French A, 1998, PROC IEEE INT CONF S, P146, DOI 10.1109/ICSM.1998.738503
   Gorton I, 1996, INFORM SOFTWARE TECH, V38, P647, DOI 10.1016/0950-5849(96)01099-3
   Herbsleb JD, 2001, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.2001.919083
   Hussein K., 1995, Proceedings of the Fourth Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises. WET ICE '95 (Cat. No.95TB8030), P154, DOI 10.1109/ENABL.1995.484559
   ISHAYA T, 1999, P 2 INT VONET WORKH, P140
   LAU F, 1999, TECHNICAL REPORT SER, V1
   Lipnack J., 1997, Virtual teams: Reaching across space, time, and organizations with technology
   MAITLAND C, 1997, P JOINT C CALG CAN G, V2, P338
   MAURER F, 1996, 5 INT C EN TECHN JUN
   NOHRIA N, 1992, NETWORKS ORG STRUCTU, P188
   PERRY DE, 1998, P SPI98
   Seaman CB, 1997, IBM SYST J, V36, P550, DOI 10.1147/sj.364.0550
   Taweel A., 2002, Informatica, V26, P333
   van der Smagt AGM, 1998, ASSOCIATION FOR INFORMATION SYSTEMS PROCEEDINGS OF THE AMERICAS CONFERENCE ON INFORMATION SYSTEMS, P574
   WILLIAMS L, IEEE SOFTWARE 2000
NR 22
TC 16
Z9 16
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2006
VL 48
IS 1
BP 1
EP 11
DI 10.1016/j.infsof.2004.02.006
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 999OB
UT WOS:000234397900001
DA 2024-07-18
ER

PT J
AU Salem, AM
   Rekab, K
   Whittaker, JA
AF Salem, AM
   Rekab, K
   Whittaker, JA
TI Prediction of software failures through logistic regression
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software testing; logistic regression; design of experiments
AB The quality of software has been a main concern since the inception of computer software. To be able to produce high quality software, software developers and software testers alike need continuous improvements in their developing and testing methodologies. These improvements should result in better coverage of the input domain, efficient test cases, and in spending fewer testing resources. In this paper we focus on an approach for generating efficient test cases based on the special properties of Design of Experiments and developing a logistic regression model of predicting test case outcomes. Design of Experiments will be utilized to efficiently minimize the number of test cases and the logistic regression model will be used to predict software failures. This approach, in turn, would provide the software tester with a model that reduces the number of test cases, predicts test case outcomes, reduces cost, and allows better forecast of release readiness. We demonstrate our approach using two case studies (TI Interactive software and Microsoft's Pocket PC operating system). (C) 2003 Elsevier B.V. All rights reserved.
C1 Calif State Univ Sacramento, Dept Comp Sci, Sacramento, CA 95819 USA.
   Florida Inst Technol, Dept Math Sci, Melbourne, FL 32901 USA.
   Florida Inst Technol, Dept Comp Sci, Melbourne, FL 32901 USA.
C3 California State University System; California State University
   Sacramento; Florida Institute of Technology; Florida Institute of
   Technology
RP Salem, AM (corresponding author), Calif State Univ Sacramento, Dept Comp Sci, Sacramento, CA 95819 USA.
EM salema@ecs.csus.edu
CR [Anonymous], 2014, Software engineering: a practitioner's approach
   BROWNLIE R, 1992, AT T TECHNICAL J, V71
   Cochran G W., 1957, Experimental Design
   DALAL SR, 1993, AUTOMATIC EFFICIENT
   KEMPTHORNE O, 1979, DESIGN AANL EXPT
   KHOSHGOFTAAR T, 1997, TRCSE9724 FLOR ATL U
   KHOSHGOFTAAR TM, 1996, P INT C SOFTW MAINT
   KHOSHGOFTAAR TM, 1996, IEEE SOFTWARE, V13
   Kleinbaum DavidG., 1978, APPL REGRESSION ANAL
   Lindgren BW., 1976, STAT THEORY, VThird
   Malaiya Y.K., 1994, P 5 INT S SOFTW REL
   Phadke M.S., 1995, QUALITY ENG USING RO
   PORTER AA, 1990, IEEE SOFTWARE, V7
   SEIDEN E, 1954, ANN MATH STAT, V25, P151, DOI 10.1214/aoms/1177728855
   TAGUCHI G, 1988, INTRO QUALITY ENG
NR 15
TC 17
Z9 19
U1 0
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 15
PY 2004
VL 46
IS 12
BP 781
EP 789
DI 10.1016/j.infsof.2003.10.008
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 840GZ
UT WOS:000222846600001
DA 2024-07-18
ER

PT J
AU Lin, JM
   Hong, ZW
   Fang, GM
   Jiau, HC
   Chu, WC
AF Lin, JM
   Hong, ZW
   Fang, GM
   Jiau, HC
   Chu, WC
TI Reengineering windows software applications into reusable CORBA objects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software reuse; software integration; CORBA; functional integration
   model
AB CORBA is becoming one of the most important middleware for supporting object-oriented and client/server paradigms in distributed computing systems. However, application systems based on CORBA are still scarce to date. One reason is that only few CORBA object services have been developed. To have a new CORBA application, a programmer must make the effort to design a program with a CORBA interface. In our previous work [Proceedings of the Sixth IEEE Computer Society Workshop on Future Trends of Distributed Computing Systems (1997) 2], a re-engineering approach was proposed to convert RPC-based programs into CORBA objects. This has successfully increased the development of CORBA applications. However, the source code is required in this approach. In many cases, software designers cannot acquire the source code. This prevents adapting existing PC software applications, particularly for Windows applications. Our study addresses this problem. A graphic factory temperature monitor system, which integrates MS-Excel under MS-Windows, was implemented to demonstrate the feasibility of our approach. (C) 2003 Elsevier B.V. All rights reserved.
C1 Feng Chia Univ, Dept Informat Engn, Taichung 40724, Taiwan.
   Natl Cheng Kung Univ, Dept Elect Engn, Tainan 70101, Taiwan.
   Tong Hai Univ, Dept Comp Sci & Informat Engn, Taichung, Taiwan.
C3 Feng Chia University; National Cheng Kung University
RP Feng Chia Univ, Dept Informat Engn, Taichung 40724, Taiwan.
EM jimmy@fcu.edu.tw
OI Hong, Zeng-Wei/0000-0002-5090-2788
CR ALBERT C, CMUSEI2002TR005
   [Anonymous], SEI MONOGRAPHS USE C
   Aversano L, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P148, DOI 10.1109/CSMR.2001.914979
   BALLURIO K, 2002, P 1 INT C COTS BAS S, P31
   BURGUES X, 2002, P 1 INT C COTS BAS S, P54
   Canfora G, 1998, PROG COMPREHEN, P136, DOI 10.1109/WPC.1998.693336
   *CARN MELL U SOFTW, COTS BAS SYST CBS MO
   Chappell D., 1996, Understanding ActiveX and OLE
   Cimitile A, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P59, DOI 10.1109/WCRE.1998.723176
   DeLucia A, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P122, DOI 10.1109/ICSM.1997.624238
   EWALD A, 1996, OBJECT MAGAZINE  OCT
   Lee SC, 2000, INTERNATIONAL SYMPOSIUM ON MULTIMEDIA SOFTWARE ENGINEERING, PROCEEDINGS, P289, DOI 10.1109/MMSE.2000.897225
   Lin JM, 1997, P INT COMP SOFTW APP, P402, DOI 10.1109/CMPSAC.1997.625023
   LIN JM, 1992, J SYST SOFTWARE, V18, P207, DOI 10.1016/0164-1212(92)90098-5
   Lin JM, 1998, P INT COMP SOFTW APP, P252, DOI 10.1109/CMPSAC.1998.716663
   LIN JM, 1992, P 1992 INT COMP S DE, P13
   MAIDEN N, 2002, P 1 INT C COTS BAS S, P151
   Neighbors JM, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P2, DOI 10.1109/WCRE.1996.558783
   *OBJ MAN GROUP, 1995, CORBA COMM OBJ REQ B
   *OMG, 1995, 95310 OMG
   PAN YC, 1997, P 8 WORKSH OBJ OR TE, P187
   RITCHIE DM, 1978, BELL SYSTEM TECH J 2, V57
   SERRANO M, 2000, P 13 INT C IND ENG A, P79
   SERRANO M, 2002, J SYST SOFTWARE, P37
   Serrano M. A., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P86, DOI 10.1109/ICSM.1999.792579
   WU JT, 2003, IN PRESS C INT DES P
NR 26
TC 11
Z9 12
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY 1
PY 2004
VL 46
IS 6
BP 403
EP 413
DI 10.1016/j.infsof.2003.08.003
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803OT
UT WOS:000220241100005
DA 2024-07-18
ER

PT J
AU Green, GC
AF Green, GC
TI The impact of cognitive complexity on project leadership performance
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE project management; project leaders; project integration; cognitive
   complexity
ID DIFFERENTIATION; INTEGRATION; PREDICTION; SUCCESS
AB In today's complex development environments, the ability to integrate project components has been found to be a key responsibility for project leaders. This paper reports results of a preliminary experiment examining the importance of cognitive differentiation and integration (i.e. cognitive complexity) to project leadership performance. Results from this preliminary study show the importance of cognitive complexity to success in project leadership. Surprisingly, results suggest that leaders with lower levels of cognitive differentiation abilities (less information fragmentation) perform better on project definition tasks. Results also suggest that higher levels of cognitive integrative ability are associated with higher performance in project definition tasks. To this end, we suggest ways to improve complex thinking in project leaders. This study is important to IS managers responsible for identifying and training project leaders, and researchers seeking to understand factors important to successful project leadership. (C) 2003 Elsevier B.V. All rights reserved.
C1 Baylor Univ, Hankamer Sch Business, Dept Informat Syst, Waco, TX 76798 USA.
C3 Baylor University
RP Green, GC (corresponding author), Baylor Univ, Hankamer Sch Business, Dept Informat Syst, POB 98005, Waco, TX 76798 USA.
EM gina_green@baylor.edu
CR [Anonymous], 1966, CLIN SOCIAL JUDGEMEN
   Baccarini D., 1996, International Journal of Project Management, V14, P201, DOI 10.1016/0263-7863(95)00093-3
   BARTUNEK J, 1988, HUMAN RESOURCE PLANN, V11, P12
   BARTUNEK J, 1983, ACAD MANAGE REV, P273
   Cleland DI., 1988, Project Management Handbook, V2nd
   Clift TB, 1999, J BUS RES, V45, P187, DOI 10.1016/S0148-2963(97)00227-0
   Fox TL, 1999, INFORM MANAGE, V36, P313, DOI 10.1016/S0378-7206(99)00025-7
   FRAME J, 1995, MANAGING PROJECTS OR
   Hauschildt J., 2000, Project Management Journal, V31, P23
   KHALIL D, 1989, INT J MAN MACH STUD, P219
   LEDERER AL, 1995, J SYST SOFTWARE, V31, P125, DOI 10.1016/0164-1212(94)00092-2
   MILLER D, 1993, ACAD MANAGE REV, V18, P116, DOI 10.2307/258825
   Morris P.W. G., 1998, PROJECT MANAGEMENT I
   NEIMEYER GJ, 1980, PERCEPT MOTOR SKILL, V50, P907, DOI 10.2466/pms.1980.50.3.907
   NEIMEYER RA, 1983, J PERS, V51, P185, DOI 10.1111/j.1467-6494.1983.tb00861.x
   NIDUMOLU S, 1995, INFORM SYST RES, V6, P191, DOI 10.1287/isre.6.3.191
   Nunnally JC, 1978, PSYCHOMETRIC THEORY
   PHAN DD, 1995, INFORM MANAGE, V28, P271, DOI 10.1016/0378-7206(94)00046-L
   Porter S.S., 2000, J PERSONAL SELLING S, V20, P15
   Procaccino JD, 2002, INFORM SOFTWARE TECH, V44, P53, DOI 10.1016/S0950-5849(01)00217-8
   Rappaport D. M., 1995, Business Communications Review, V25, P52
   SAARINEN T, 1990, INFORM MANAGE, V19, P183, DOI 10.1016/0378-7206(90)90004-2
   SCHRODER HM, 1967, HUMAN INFORMATION PR
   SHEETZ S, 2001, J SYST SOFTWARE, P163
   STABELL CB, 1978, ORGAN BEHAV HUM PERF, V22, P116, DOI 10.1016/0030-5073(78)90009-0
   THAMHAIN H, 1989, PROJ MAN I SEM S ATL, P652
   Turner J.R., 1996, INT J PROJ MANAG, V14, P1
   Verner JM, 1999, INFORM SOFTWARE TECH, V41, P1021, DOI 10.1016/S0950-5849(99)00077-4
   WALSH JP, 1995, ORGAN SCI, V6, P280, DOI 10.1287/orsc.6.3.280
   Wateridge J., 1997, International Journal of Project Management, V15, P283, DOI 10.1016/S0263-7863(96)00085-3
   WIDEMAN R, 1998, PROJECT RISK MANAGEM
   Yiu L., 2000, HUM RESOUR DEV Q, V11, P319
NR 32
TC 34
Z9 37
U1 0
U2 16
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 1
PY 2004
VL 46
IS 3
BP 165
EP 172
DI 10.1016/S0950-5849(03)00125-3
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 764WQ
UT WOS:000188229300002
DA 2024-07-18
ER

PT J
AU Li, BX
AF Li, BX
TI A technique to analyze information-flow in object-oriented programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE information-flow; program slicing; object-orientation
ID CONCURRENT JAVA PROGRAMS
AB Traditional information-flow analysis is mainly based on data-flow and control-flow equations. In object-oriented programs, because of the mechanisms such as encapsulation, inheritance, and polymorphism, information-flow analysis becomes quite complex and therefore it is not enough to analyze object-oriented information-flow using traditional techniques. Some new techniques are required in order to efficiently analyze the information-flow between basic components (such as statements, methods, classes or packages) in object-oriented programs. Based on object-oriented program slicing techniques, we discuss how to compute the amount of information-flow, the width of information-flow, the correlation coefficient between basic components as well as degree of coupling of a basic component can be computed. We also discuss some applications of the information-flow. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 NTNU, Dept Comp & Informat Sci, NO-7491 Trondheim, Norway.
   USTC, Dept Comp Sci & Technol, Hefei 210052, Peoples R China.
C3 Norwegian University of Science & Technology (NTNU); Chinese Academy of
   Sciences; University of Science & Technology of China, CAS
RP Li, BX (corresponding author), Lingshuiyuan S 7 101,Meiling Rd, Hefei 230052, Anhui Province, Peoples R China.
EM lbxin@mail.hf.ah.cn
CR CHEN JL, 1997, P APSEC 97 HONGK CHI, P395
   Chen ZQ, 2001, ACM SIGPLAN NOTICES, V36, P41, DOI 10.1145/375431.375420
   Chen ZQ, 2001, ACM SIGPLAN NOTICES, V36, P33, DOI 10.1145/375431.375418
   HARMAN M, 1997, IEEE ACM ICSE WORKSH, P26
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Larsen L, 1996, PROC INT CONF SOFTW, P495, DOI 10.1109/ICSE.1996.493444
   LI B, 2002, 2002 INT C SOFTW ENG
   LI B, 2000, THESIS NANJING U PEO
   LI B, 2001, TUCS TECHNICAL REPOR, V416
   Liang DL, 1998, PROC IEEE INT CONF S, P358, DOI 10.1109/ICSM.1998.738527
   LONGWORTH HD, 1985, THESIS MUT
   MALLOY BA, 1994, SIGPLAN NOTICES, V29, P38, DOI 10.1145/193209.193218
   OTHERMEL G, 1994, 2 ACM C FDN SOFTW EN, P11
   OTT LM, 1992, P 10 ANN SOFTW REL S, P16
   Steindl C., 1999, Ph.D. Thesis
   TIP F, 1995, J PROGRAM LANG, V3, P121
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   WEISER M, 1982, 5 INT C SOFTW ENG, P439
   ZHAO J, 1998, P 1998 INT COMP C TI
   Zhao JJ, 1999, INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR PARALLEL AND DISTRIBUTED SYSTEMS, PROCEEDINGS, P13, DOI 10.1109/PDSE.1999.779735
   Zhao JJ, 1999, PROG COMPREHEN, P126, DOI 10.1109/WPC.1999.777751
   [No title captured]
NR 22
TC 4
Z9 4
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 15
PY 2003
VL 45
IS 6
BP 305
EP 314
DI 10.1016/S0950-5849(02)00223-9
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 673GN
UT WOS:000182572500002
DA 2024-07-18
ER

PT J
AU Jung, P
   Lee, S
   Lee, U
AF Jung, Pilsu
   Lee, Seonah
   Lee, Uicheon
TI Automated code-based test case reuse for software product line testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software product line; Product family; Software testing; Test case
   reuse; Traceability
ID TEST SELECTION
AB Context: A software product line (SPL) grows in size as a new product is developed. A new product in an SPL should be tested extensively for quality assurance. For the efficient testing, previous studies suggested reusing the existing test cases of a product family. However, either their methods were not efficient because interventions from human experts, specifications, architecture and/or traceabilities for test cases were required. Objective: To address these limitations, we propose an Automated Code-based Test case reuse for SPLs (ActSPL). ActSPL automatically identifies reusable test cases for new products of a product family using source code and test cases. Method: ActSPL automatically constructs a hash-based traceability links between test cases and source code of a product family. Using the traceability links, ActSPL selects reusable test cases for a given new product from existing test cases of the product family. Results: We evaluated ActSPL in terms of the effectiveness and cost reduction of reusing test cases with five open source SPLs. The evaluation results showed that ActSPL, on average, achieved 100 % precision and 62 % recall. In addition, ActSPL, on average, saved 47.5 % of time required for testing a new product from scratch. Conclusion: Our study shows the feasibility of ActSPL reusing SPL test cases based on source code and test cases. Our results can be a basis for successive studies for automated code-based SPL testing.
C1 [Jung, Pilsu; Lee, Seonah; Lee, Uicheon] Gyeongsang Natl Univ, Dept Aerosp & Software Engn, Dept AI Convergence Engn, 501 Jinju-daero, Jinju Si, Gyeongsangnam D, South Korea.
   [Lee, Seonah] Gyeongsang Natl Univ, Dept Aerosp & Software Engn, 501 Jinju Daero, Jinju Si 52828, Gyeongsangnam D, South Korea.
C3 Gyeongsang National University; Gyeongsang National University
RP Lee, S (corresponding author), Gyeongsang Natl Univ, Dept Aerosp & Software Engn, 501 Jinju Daero, Jinju Si 52828, Gyeongsangnam D, South Korea.
EM saleese@gnu.ac.kr
FU Basic Science Research Program through the National Research Foundation
   of Korea (NRF) - Ministry of Education [NRF-2021R1A2C1094167,
   RS-2023-00209720]; Gyeongsang National University
FX This research was supported by Basic Science Research Program through
   the National Research Foundation of Korea (NRF) funded by the Ministry
   of Education (NRF-2021R1A2C1094167, RS-2023-00209720) . This work was
   supported by the research grant of the Gyeongsang National University in
   2022.
CR Alshammari A, 2021, PROC INT CONF SOFTW, P1572, DOI 10.1109/ICSE43902.2021.00140
   Anastasopoulos M., 2001, Software Engineering Notes, V26, P109, DOI 10.1145/379377.375269
   Angerer F, 2017, PROC IEEE INT CONF S, P148, DOI 10.1109/ICSME.2017.60
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 2005, Software product line engineering: Foundations, Principles and Techniques
   Bell J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P433, DOI 10.1145/3180155.3180164
   Benesty J., 2009, NOISE REDUCTION SPEE, P1, DOI [10.1007/978-3-642-00296-0_5, DOI 10.1007/978-3-642-00296-05]
   Bertolino A., 2006, Software Prod- uct Lines - Research Issues in Engineering and Management, P425, DOI DOI 10.1007/978-3-540-33253-4_
   Celik A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P809, DOI 10.1145/3106237.3106297
   Damiani F, 2017, SOFTW SYST MODEL, V16, P1223, DOI 10.1007/s10270-016-0516-2
   Dukaczewski M, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON PRODUCT LINE APPROACHES IN SOFTWARE ENGINEERING (PLEASE), P49, DOI 10.1109/PLEASE.2013.6608665
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gambi A, 2018, IEEE INT CONF SOFTW, P1, DOI 10.1109/ICST.2018.00011
   Gebizli CS, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C 2016), P278, DOI 10.1109/QRS-C.2016.42
   Gligoric M., 2015, P 2015 INT S SOFTWAR, P211, DOI 10.1145/2771783.2771784
   Jung P, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10238686
   Kifetew F, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2019), P15, DOI 10.1109/SBST.2019.00014
   Kim J, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P59, DOI 10.1145/3106195.3106201
   Lachmann R., 2015, P 19 INT C SOFTW PRO, P81
   Li XL, 2018, EMPIR SOFTW ENG, V23, P1, DOI 10.1007/s10664-016-9494-9
   Lity S, 2019, J SYST SOFTWARE, V147, P46, DOI 10.1016/j.jss.2018.09.090
   Lochau M, 2014, J SYST SOFTWARE, V91, P63, DOI 10.1016/j.jss.2013.11.1096
   Machado ID, 2014, INFORM SOFTWARE TECH, V56, P1183, DOI 10.1016/j.infsof.2014.04.002
   Meinicke J, 2016, IEEE INT CONF AUTOM, P483, DOI 10.1145/2970276.2970322
   Nebut C., 2006, Software Product Lines, P447
   Pacheco Carlos, 2007, COMPANION 22 ACM SIG, P815, DOI DOI 10.1145/1297846.1297902
   Parry O, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3476105
   Paterson D, 2019, IEEE INT CONF SOFTW, P346, DOI 10.1109/ICST.2019.00041
   Perscheid M., 2012, Proceedings of the Tenth International Conference on Creating, Connecting and Collaborating through Computing (C5 2012), P60, DOI 10.1109/C5.2012.7
   Petry KL, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110608
   Reuys A., 2006, Software Product Lines, P479
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Sakti A, 2015, IEEE T SOFTWARE ENG, V41, P294, DOI 10.1109/TSE.2014.2363479
   Schweikl S, 2022, 15TH SEARCH-BASED SOFTWARE TESTING WORKSHOP (SBST 2022), P33, DOI 10.1145/3526072.3527526
   Shi A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P545, DOI 10.1145/3338906.3338925
   Uzuncaova E, 2010, IEEE T SOFTWARE ENG, V36, P309, DOI 10.1109/TSE.2010.30
   Varshosaz Mahsa, 2015, Formal Methods and Software Engineering. 17th International Conference on Formal Engineering Methods (ICFEM 2015). Proceedings: LNCS 9407, P366, DOI 10.1007/978-3-319-25423-4_24
   Vasic M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P848, DOI 10.1145/3106237.3117763
   Wang S, 2017, SOFTW SYST MODEL, V16, P417, DOI 10.1007/s10270-015-0462-4
   Wang S, 2016, EMPIR SOFTW ENG, V21, P1586, DOI 10.1007/s10664-014-9345-5
   Xu Z., 2013, P 17 INT SOFTWARE PR, P52, DOI DOI 10.1145/2491627.2491650
   Yuhua Qi, 2013, 2013 IEEE 4th International Conference on Software Engineering and Service Science (ICSESS), P235, DOI 10.1109/ICSESS.2013.6615295
   Zhang LM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P199, DOI 10.1145/3180155.3180198
   Zhang PL, 2021, PROC INT CONF SOFTW, P50, DOI 10.1109/ICSE43902.2021.00018
   Zhu CG, 2019, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2019.00056
NR 45
TC 0
Z9 0
U1 8
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2024
VL 166
AR 107372
DI 10.1016/j.infsof.2023.107372
EA NOV 2023
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG2J3
UT WOS:001124030200001
DA 2024-07-18
ER

PT J
AU Somers, RJ
   Douthwaite, JA
   Wagg, DJ
   Walkinshaw, N
   Hierons, RM
AF Somers, Richard J.
   Douthwaite, James A.
   Wagg, David J.
   Walkinshaw, Neil
   Hierons, Robert M.
TI Digital-twin-based testing for cyber-physical systems: A systematic
   literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Digital twin; Cyber-physical system; Testing; Systematic literature
   review
ID BLACK-BOX; FAULT-DIAGNOSIS; GREY BOX; IDENTIFICATION; GUIDELINES
AB Context: Cyber-physical systems present a challenge to testers, bringing complexity and scale to safety-critical and collaborative environments. Digital twins enhance these systems through data-driven and simulation based models coupled to physical systems to provide visualisation, predict future states and communication. Due to the coupling between digital and physical worlds, digital twins provide a new perspective into cyber-physical system testing.Objective: The objectives of this study are to summarise the existing literature on digital-twin-based testing. We aim to uncover emerging areas of adoptions, the testing techniques used in these areas and identify future research areas.Method: We conducted a systematic literature review which answered the following research questions: What cyber-physical systems are digital twins currently being used to test? How are test oracles defined for cyber- physical systems? What is the distribution of white-box, black-box and grey-box modelling techniques used for digital twins in the context of testing? How are test cases defined and how does this affect test inputs?Results: We uncovered 26 relevant studies from 480 produced by searching with a curated search query. These studies showed an adoption of digital-twin-based testing following the introduction of digital twins in industry as well as the increasing accessibility of the technology. The oracles used in testing are the digital twin themselves and therefore rely on both system specification and data derivation. Cyber-physical systems are tested through passive testing techniques, as opposed to either active testing through test cases or predictive testing using digital twin prediction.Conclusions: This review uncovers the existing areas in which digital twins are used to test cyber-physical systems as well as outlining future research areas in the field. We outline how the infancy of digital twins has affected their wide variety of definitions, emerging specialised testing and modelling techniques as well as the current lack of predictive ability.
C1 [Somers, Richard J.; Walkinshaw, Neil; Hierons, Robert M.] Univ Sheffield, Dept Comp Sci, 211 Portobello, Sheffield S1 4DP, England.
   [Douthwaite, James A.] Univ Sheffield, Dept Automat Control & Syst Engn, Sheffield S1 3JD, England.
   [Wagg, David J.] Univ Sheffield, Dept Mech Engn, Dynam Res Grp, Sheffield, England.
C3 University of Sheffield; University of Sheffield; University of
   Sheffield
RP Somers, RJ (corresponding author), Univ Sheffield, Dept Comp Sci, 211 Portobello, Sheffield S1 4DP, England.
EM rsomers1@sheffield.ac.uk
RI Walkinshaw, Neil/AHA-2966-2022
OI Walkinshaw, Neil/0000-0003-2134-6548; Hierons,
   Robert/0000-0002-4771-1446; Wagg, David/0000-0002-7266-2105; Somers,
   Richard/0000-0002-1101-9722
FU Lloyd's Register Foundation; University of York; UKRI, United Kingdom
   [EP/V026801/2, EP/R006768/1, EP/T030526/1]; UKRI, United Kingdom CITCOM
   grant;  [EP/R025134/2]
FX James A. Douthwaite is supported by the Assuring Autonomy International
   Programme (AAIP grant CSI: Cobot) , a partnership between Lloyd's
   Register Foundation and the University of York, and from the UKRI
   project EP/V026747/1. David Wagg is funded by the UKRI, United Kingdom
   grant EP/R006768/1. Neil Walkinshaw and Rob M. Hierons are funded by the
   UKRI, United Kingdom CITCOM grant EP/T030526/1. Heirons is also funded
   by the UKRI, United Kingdom grants EP/R025134/2, EP/V026801/2. For the
   purpose of open access, the author has applied a Creative Commons
   Attribution (CC BY) 2 licence to any Author Accepted Manuscript version
   arising.
CR Abbas H, 2014, IEEE ANN INT CONF CY, P1
   Agarwal H, 2015, 2015 INTERNATIONAL CONFERENCE ON COMPUTING AND NETWORK COMMUNICATIONS (COCONET), P408, DOI 10.1109/CoCoNet.2015.7411218
   Amini A., 2019, PERVASIVEHEALTH PERV, P162
   [Anonymous], 2013, Software testing: A craftsman's approach
   Ansari S, 2021, IEEE ACCESS, V9, P17998, DOI 10.1109/ACCESS.2020.3020035
   Araujo H, 2018, SCI COMPUT PROGRAM, V162, P35, DOI 10.1016/j.scico.2017.07.002
   Bagheri B, 2015, IFAC PAPERSONLINE, V48, P1622, DOI 10.1016/j.ifacol.2015.06.318
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bevilacqua M, 2020, SUSTAINABILITY-BASEL, V12, DOI 10.3390/su12031088
   Bonney MS, 2022, DATA-CENTRIC ENG, V3, DOI 10.1017/dce.2022.1
   Cavalli AR, 2015, ANN TELECOMMUN, V70, P85, DOI 10.1007/s12243-015-0457-8
   Cintuglu MH, 2017, IEEE COMMUN SURV TUT, V19, P446, DOI 10.1109/COMST.2016.2627399
   Cioroaica E, 2019, IEEE INT SYMP SOFTW, P200, DOI 10.1109/ISSREW.2019.00072
   Correia D., 2022, International Journal of Technology Management & Sustainable Development, V21, P37
   Douthwaite JA, 2021, FRONT ROBOT AI, V8, DOI 10.3389/frobt.2021.758099
   Eckhart M, 2018, CPSS'18: PROCEEDINGS OF THE 4TH ACM WORKSHOP ON CYBER-PHYSICAL SYSTEM SECURITY, P61, DOI 10.1145/3198458.3198464
   Eckhart M, 2018, CPS-SPC'18: PROCEEDINGS OF THE 2018 WORKSHOP ON CYBER-PHYSICAL SYSTEMS SECURITY AND PRIVACY, P36, DOI 10.1145/3264888.3264892
   ElMaraghy W, 2012, CIRP ANN-MANUF TECHN, V61, P793, DOI 10.1016/j.cirp.2012.05.001
   Eyre Jonathan, 2021, Technical Report
   Fuller A, 2020, IEEE ACCESS, V8, P108952, DOI 10.1109/ACCESS.2020.2998358
   Gao C., 2021, P ACMIEEE 12 INT C C, P44, DOI DOI 10.1145/3450267.3450533
   Gao D., 2021, J PHYS C SERIES, V1983
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Grieves M W., 2005, Product lifecycle management: Driving the next generation of lean thinking
   Grigoropoulos N, 2020, IEEE ACM DIS SIM, P198, DOI 10.1109/ds-rt50469.2020.9213676
   Guo XR, 2015, IEEE T SOFTWARE ENG, V41, P986, DOI 10.1109/TSE.2015.2425392
   Henson CM, 2021, PROCEDIA MANUF, V53, P359, DOI 10.1016/j.promfg.2021.06.039
   Hsu YL, 2019, IN C IND ENG ENG MAN, P526, DOI [10.1109/IEEM44572.2019.8978614, 10.1109/ieem44572.2019.8978614]
   Jiawang Xiong, 2021, 2021 6th Asia Conference on Power and Electrical Engineering (ACPEE), P531, DOI 10.1109/ACPEE51499.2021.9437042
   Jones D, 2020, CIRP J MANUF SCI TEC, V29, P36, DOI 10.1016/j.cirpj.2020.02.002
   Kang S, 2019, J ENG-NY, V2019, DOI 10.1155/2019/2875236
   Khan ME, 2012, INT J ADV COMPUT SC, V3, P12
   Kitchenham B., 2007, 2007001 EBSE
   Koutsoubelias Manos, 2018, P IEEE SENS APPL S
   Kritzinger W, 2018, IFAC PAPERSONLINE, V51, P1016, DOI 10.1016/j.ifacol.2018.08.474
   Li JH, 2021, IFAC PAPERSONLINE, V54, P965, DOI 10.1016/j.ifacol.2021.08.115
   Li T, 2020, FRONT COMPUT SCI-CHI, V14, DOI 10.1007/s11704-019-8434-4
   Li WH, 2020, J ENERGY STORAGE, V30, DOI 10.1016/j.est.2020.101557
   Liu C., 2020, P ANN C PHM SOC 2020
   Loyola-González O, 2019, IEEE ACCESS, V7, P154096, DOI 10.1109/ACCESS.2019.2949286
   Lu QC, 2020, AUTOMAT CONSTR, V118, DOI 10.1016/j.autcon.2020.103277
   M.S.C. International, 1999, GICS GLOBAL IND CLAS
   Maclay D, 1997, IEE REVIEW, V43, P109, DOI 10.1049/ir:19970312
   Martín-Lopo MM, 2019, SIMUL MODEL PRACT TH, V94, P177, DOI 10.1016/j.simpat.2019.02.007
   Milano F, 2010, POWER SYST, P1, DOI 10.1007/978-3-642-13669-6
   Milton M, 2020, IEEE T POWER ELECTR, V35, P9850, DOI 10.1109/TPEL.2020.2971775
   Negri E, 2020, J MANUF SYST, V56, P58, DOI 10.1016/j.jmsy.2020.05.007
   Peng CC, 2022, IEEE SYST J, V16, P3060, DOI 10.1109/JSYST.2021.3079168
   Peng Y, 2019, 2019 IEEE INT INSTRU, P1
   Peng YZ, 2021, IEEE T POWER ELECTR, V36, P2105, DOI 10.1109/TPEL.2020.3009600
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Piardi L, 2020, IEEE INTL CONF IND I, P29, DOI 10.1109/INDIN45582.2020.9442209
   Qingmin Yu, 2021, AIEE 2021: 2021 2nd International Conference on Artificial Intelligence in Electronics Engineering, P67, DOI 10.1145/3460268.3460278
   Rajkumar R, 2010, DES AUT CON, P731
   Rasheed A., 2022, UNLOCKING BUSINESS V
   Rudin C, 2019, NAT MACH INTELL, V1, P206, DOI 10.1038/s42256-019-0048-x
   Sell R, 2019, P EST ACAD SCI, V68, P389, DOI 10.3176/proc.2019.4.07
   Semeraro C, 2021, COMPUT IND, V130, DOI 10.1016/j.compind.2021.103469
   Short M, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19173781
   Standards B., 2021, 232472021 BS ISO
   Standards I.I., 2017, SYSTEMS SOFTWARE ENG
   Tekaat J.L., 2021, 2021 IEEE INT S SYST, P1
   Tsafnat G, 2014, SYST REV-LONDON, V3, DOI 10.1186/2046-4053-3-74
   Wagg DJ, 2020, ASCE-ASME J RISK U B, V6, DOI 10.1115/1.4046739
   Wang JJ, 2019, INT J PROD RES, V57, P3920, DOI 10.1080/00207543.2018.1552032
   West TD, 2017, PROCEDIA COMPUT SCI, V114, P47, DOI 10.1016/j.procs.2017.09.003
   Worden K, 2007, MECH SYST SIGNAL PR, V21, P514, DOI 10.1016/j.ymssp.2005.09.004
   Worden K, 2020, C PROC SOC EXP MECH, P285, DOI 10.1007/978-3-030-12075-7_34
   Worden K, 2018, MECH SYST SIGNAL PR, V112, P194, DOI 10.1016/j.ymssp.2018.04.001
   Wright Louise, 2020, Advanced Modeling and Simulation in Engineering Sciences, V7, DOI 10.1186/s40323-020-00147-4
   Wu JP, 2001, INT FED INFO PROC, V69, P101
   Xia KS, 2021, J MANUF SYST, V58, P210, DOI 10.1016/j.jmsy.2020.06.012
   Xu QH, 2021, IEEE INT CONF SOFTW, P205, DOI 10.1109/ICST49551.2021.00031
   Xu Y, 2019, IEEE ACCESS, V7, P19990, DOI 10.1109/ACCESS.2018.2890566
   Yoginath Srikanth, 2019, 2019 IEEE International Conference on Industrial Internet (ICII). Proceedings, P309, DOI 10.1109/ICII.2019.00062
   Zhou X, 2018, IEEE ACCESS, V6, P52179, DOI 10.1109/ACCESS.2018.2869834
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 77
TC 8
Z9 8
U1 21
U2 72
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2023
VL 156
AR 107145
DI 10.1016/j.infsof.2022.107145
EA JAN 2023
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8D5SP
UT WOS:000918353100001
OA hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Kachi, F
   Bouanaka, C
AF Kachi, Fatma
   Bouanaka, Chafia
TI A hybrid model for efficient decision-making in self-adaptive systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Self-adaptive systems; Quality of service; Uncertainty models; Deep
   learning; Quantitative analysis; Formal methods
AB Context: Engineering self-adaptive systems to guarantee the required quality properties is challenging and particularly in presence of uncertainties. Such uncertainties may occur in a variety of situations, ranging from variations in the system's operating environment to ambiguity while selecting the appropriate adaptation option. Formal methods provide a rigorous means to specify and verify the behaviour of self-adaptive systems. They are applied both during system design and at runtime to provide guarantees on the required properties of self-adaptive systems. However, existing approaches generally use exhaustive verification at runtime to pick adaptation options and achieve adaptation objectives, which is time and resource consuming. Objective: Aiming to tackle this shortcoming, we target a twofold objective. Firstly, we reduce the adaptation space, and then we predict the impact of each adaptation plan on the rest of system qualities, to assist the decision-making process in determining the most suitable adaptation plans and side effects. Method: An Adaptation-space Reducer component is added to the analyser element; it uses deep learning to reduce the adaptation space. Furthermore, the planner element has been extended with a Decision Impact Predictor component, which employs quantitative analysis to forecast the impact of a decision. Results: The DLA4EDM is defined as an approach for providing self-adaptive systems (SASs) with an efficient decision-making process. Our approach is applied on a self-adaptive Internet of Things application and the obtained results are compared to those of other approaches. Results show that the adaptation space is reduced by 97.57%, and the error rate in the decision-making is very low. Conclusion: Reducing the adaptation space and resolving uncertainties to be faced in the decision-making of self-adaptive systems contribute considerably to enhance the efficiency and quality of the adaptation process and hence ensure that the quality requirements are met. Evaluating the impact of the identified adaptation plans on the obtained guarantees ensures that the system is effectively operational.
C1 [Kachi, Fatma; Bouanaka, Chafia] Univ Constantine 2 Abdelhamid Mehri, LIRE Lab, Constantine, Algeria.
RP Kachi, F (corresponding author), Univ Constantine 2 Abdelhamid Mehri, LIRE Lab, Constantine, Algeria.
EM fatma.kachi@univ-constantine2.dz; chafia.bouanaka@univ-constantine2.dz
RI Bouanaka, Chafia/O-4344-2016
OI Bouanaka, Chafia/0000-0003-1746-834X
CR Abeywickrama DB, 2012, 2012 IEEE 19TH INTERNATIONAL CONFERENCE AND WORKSHOPS ON ENGINEERING OF COMPUTER BASED SYSTEMS (ECBS), P33, DOI 10.1109/ECBS.2012.30
   Aizawa K, 2019, 2019 IEEE SMARTWORLD, UBIQUITOUS INTELLIGENCE & COMPUTING, ADVANCED & TRUSTED COMPUTING, SCALABLE COMPUTING & COMMUNICATIONS, CLOUD & BIG DATA COMPUTING, INTERNET OF PEOPLE AND SMART CITY INNOVATION (SMARTWORLD/SCALCOM/UIC/ATC/CBDCOM/IOP/SCI 2019), P1363, DOI 10.1109/SmartWorld-UIC-ATC-SCALCOM-IOP-SCI.2019.00249
   Alasmari N, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111275
   [Anonymous], 2013, P INT C C COMPUTER S
   Aradea Iping Supriana, 2018, HASIL REVIEWER, V16, P1276, DOI [10.12928/telkomnika.v16i3.7032, DOI 10.12928/TELKOMNIKA.V16I3.7032]
   Arcaini P, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P166, DOI 10.1109/ICSA-C.2019.00037
   Arcaini P, 2017, ACM T AUTON ADAP SYS, V11, DOI 10.1145/3019598
   Baez JC, 2020, MATH STRUCT COMP SCI, V30, P314, DOI 10.1017/S0960129520000043
   Bartels B., 2011, P 6 INT S SOFTW ENG, P158
   Bu XP, 2013, IEEE T PARALL DISTR, V24, P681, DOI 10.1109/TPDS.2012.174
   Buttar S.S, 2018, APPL MACHINE LEARNIN
   Cámara J, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P11, DOI 10.1109/ICSA47634.2020.00010
   Camilli M, 2021, DISCRETE EVENT DYN S, V31, P609, DOI 10.1007/s10626-021-00343-3
   Camilli M, 2018, ECSA 2018: PROCEEDINGS OF THE 12TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE: COMPANION PROCEEDINGS, DOI 10.1145/3241403.3241445
   Camilli M, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P303, DOI 10.1109/ISSRE.2015.7381823
   Carl A, 1962, RADCTR65377 U BONN
   Chiachío M, 2019, COMPUT-AIDED CIV INF, V34, P281, DOI 10.1111/mice.12427
   Chiachío M, 2018, INFORM SCIENCES, V453, P323, DOI 10.1016/j.ins.2018.04.029
   Cicirelli F, 2019, IEEE ACM DIS SIM, P154, DOI 10.1109/ds-rt47707.2019.8958707
   de la Iglesia DG, 2015, ACM T AUTON ADAP SYS, V10, DOI 10.1145/2724719
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   Diallo AB, 2021, P INT COMP SOFTW APP, P1653, DOI 10.1109/COMPSAC51774.2021.00247
   Ding ZH, 2018, IEEE T FUZZY SYST, V26, P967, DOI 10.1109/TFUZZ.2017.2700286
   Ding ZH, 2016, IEEE T SYST MAN CY-S, V46, P483, DOI 10.1109/TSMC.2015.2433892
   Djoudi B, 2014, 2014 IEEE 23RD INTERNATIONAL WETICE CONFERENCE (WETICE), P92, DOI 10.1109/WETICE.2014.11
   Filieri A., 2013, ASSURANCES SELF ADAP, P30
   Gatouillat A, 2018, LECT NOTES COMPUT SC, V10797, P93, DOI 10.1007/978-3-319-91764-1_8
   Geron A., 2019, Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow: Concepts, Tools, and Techniques to Build Intelligent Systems, V2
   Hachicha M, 2016, IEEE SYS MAN CYBERN, P3967, DOI 10.1109/SMC.2016.7844853
   Hachicha M, 2016, 2016 17TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P379, DOI 10.1109/SNPD.2016.7515928
   Hackeling G, 2017, Mastering Machine Learning with Scikit-Learn
   Iftikhar M. Usman, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P76, DOI 10.1109/SEAMS.2017.21
   Iftikhar MU, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P125, DOI 10.1145/2593929.2593944
   International Standard ISO/IEC 15909, 2002, 15909 ISOIEC, V15909, P1, DOI [10.1007/BF02679450, DOI 10.1007/BF02679450]
   Jamshidi P, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P39, DOI 10.1109/SEAMS.2019.00015
   Kachi F, 2020, Arxiv, DOI [arXiv:2012.01651, 10.4204/EPTCS.329.5, DOI 10.4204/EPTCS.329.5]
   Kamel O, 2021, COMPUT STAND INTER, V74, DOI 10.1016/j.csi.2020.103483
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Lanoix A, 2011, ELECTRON NOTES THEOR, V279, P43, DOI 10.1016/j.entcs.2011.11.011
   Liu J, 2019, IEEE ACCESS, V7, P77894, DOI 10.1109/ACCESS.2019.2921624
   Metzger A, 2020, LECT NOTES COMPUT SC, V12571, P269, DOI 10.1007/978-3-030-65310-1_20
   Nia MA, 2020, MICROPROCESS MICROSY, V72, DOI 10.1016/j.micpro.2019.102943
   Quin F, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P1, DOI 10.1109/SEAMS.2019.00011
   Rus G, 2016, INVERSE PROBL SCI EN, V24, P448, DOI 10.1080/17415977.2015.1047361
   Shevtsov S, 2019, ACM T AUTON ADAP SYS, V13, DOI 10.1145/3328730
   Silva JM, 2019, IFAC PAPERSONLINE, V52, P97, DOI 10.1016/j.ifacol.2019.10.006
   Stevens C, 2020, PROC INT CONF SOFTW, P1522, DOI 10.1145/3377811.3380365
   Taleb-Berrouane M, 2020, RELIAB ENG SYST SAFE, V193, DOI 10.1016/j.ress.2019.106587
   Tomforde S, 2011, AUTON SYST, P325, DOI 10.1007/978-3-0348-0130-0_21
   Van Der Donckt J, 2020, I W S E ADAP SM SYS, P20, DOI 10.1145/3387939.3391605
   Weyns Danny, 2017, Software Engineering for Self-Adaptive Systems III. Assurances. International Seminar. Revised Selected and Invited Papers: LNCS 9640, P31, DOI 10.1007/978-3-319-74183-3_2
   Weyns D., 2010, P 7 INT C AUTONOMIC, P205, DOI 10.1145/1809049.1809078
   Weyns D, 2022, Arxiv, DOI arXiv:1908.11179
   Weyns D, 2012, ACM T AUTON ADAP SYS, V7, DOI 10.1145/2168260.2168268
   Zavala E, 2020, FUTURE GENER COMP SY, V105, P607, DOI 10.1016/j.future.2019.12.026
   Zhang L, 2021, ARCH VIROL, V166, P2071, DOI 10.1007/s00705-021-05012-2
NR 58
TC 0
Z9 0
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2023
VL 153
AR 107063
DI 10.1016/j.infsof.2022.107063
EA OCT 2022
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5M1OI
UT WOS:000870873400001
OA Bronze
DA 2024-07-18
ER

PT J
AU Gao, YX
   Zhu, Y
   Zhao, Y
AF Gao, Yuxiang
   Zhu, Yi
   Zhao, Yu
TI Dealing with imbalanced data for interpretable defect prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software defect prediction; Class imbalance; Interpretable machine
   learning; Rule-based models
ID SOFTWARE FAULT; RULE; IMPROVEMENT; ACCURACY; QUALITY
AB Context: Interpretation has been considered as a key factor to apply defect prediction in practice. As interpretation from rule-based interpretable models can provide insights about past defects with high quality, many prior studies attempt to construct interpretable models for both accurate prediction and comprehensible interpretation. However, class imbalance is usually ignored, which may bring huge negative impact on interpretation.
   Objective: In this paper, we are going to investigate resampling techniques, a popular solution to deal with imbalanced data, on interpretation for interpretable models. We also investigate the feasibility to construct interpretable defect prediction models directly on original data. Further, we are going to propose a rule-based interpretable model which can deal with imbalanced data directly.
   Method: We conduct an empirical study on 47 publicly available datasets to investigate the impact of resampling techniques on rule-based interpretable models and the feasibility to construct such models directly on original data. We also improve gain function and tolerate lower confidence based on rule induction algorithms to deal with imbalanced data.
   Results: We find that (1) resampling techniques impact on interpretable models heavily from both feature importance and model complexity, (2) it is not feasible to construct meaningful interpretable models on original but imbalanced data due to low coverage of defects and poor performance, and (3) our proposed approach is effective to deal with imbalanced data compared with other rule-based models.
   Conclusion: Imbalanced data heavily impacts on the interpretable defect prediction models. Resampling techniques tend to shift the learned concept, while constructing rule-based interpretable models on original data may also be infeasible. Thus, it is necessary to construct rule-based models which can deal with imbalanced data well in further studies.
C1 [Gao, Yuxiang; Zhu, Yi; Zhao, Yu] Jiangsu Normal Univ, Sch Comp Sci & Technol, Xuzhou, Jiangsu, Peoples R China.
   [Zhu, Yi] Nanjing Univ Aeronaut & Astronaut, Key Lab Safety Crit Software, Nanjing, Peoples R China.
C3 Jiangsu Normal University; Nanjing University of Aeronautics &
   Astronautics
RP Zhu, Y (corresponding author), Jiangsu Normal Univ, Sch Comp Sci & Technol, Xuzhou, Jiangsu, Peoples R China.; Zhu, Y (corresponding author), Nanjing Univ Aeronaut & Astronaut, Key Lab Safety Crit Software, Nanjing, Peoples R China.
EM gaoyx@jsnu.edu.cn; zhuy@jsnu.edu.cn; zhaoyu@jsnu.edu.cn
OI Zhu, Yi/0000-0002-0996-0142
FU National Natural Science Foundation of China [62077029]; Future Network
   Scientific Research Fund Project [FNSRFP-2021-YB-32]; Open Project Fund
   of Key Laboratory of Safety-Critical Software, Ministry of Industry and
   Information Technology [NJ2020022]; CCF-Huawei Populus Grove Fund
   [CCF-HuaweiFM202209]; Graduate Science Research Innovation Program of
   Jiangsu Normal University [2021XKT1394]
FX This work was partly supported by National Natural Science Foundation of
   China (No. 62077029), Future Network Scientific Research Fund Project
   (No. FNSRFP-2021-YB-32), the Open Project Fund of Key Laboratory of
   Safety-Critical Software, Ministry of Industry and Information
   Technology (No. NJ2020022), CCF-Huawei Populus Grove Fund (No.
   CCF-HuaweiFM202209), and the Graduate Science Research Innovation
   Program of Jiangsu Normal University (No. 2021XKT1394).
CR Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Benni KE, 2018, IEEE T SOFTWARE ENG, V44, P534, DOI 10.1109/TSE.2017.2731766
   Bennin KE, 2019, EMPIR SOFTW ENG, V24, P602, DOI 10.1007/s10664-018-9633-6
   Cabral GG, 2019, PROC INT CONF SOFTW, P666, DOI 10.1109/ICSE.2019.00076
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P456, DOI 10.1145/3236024.3236050
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Cohen W. W., 1995, Machine Learning. Proceedings of the Twelfth International Conference on Machine Learning, P115
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   de Fortuny EJ, 2015, IEEE T NEUR NET LEAR, V26, P2664, DOI 10.1109/TNNLS.2015.2389037
   Dejaeger K, 2013, IEEE T SOFTWARE ENG, V39, P237, DOI 10.1109/TSE.2012.20
   Diamantopoulos T, 2015, INT WORK REAL ARTIF, P32, DOI 10.1109/RAISE.2015.13
   Dong LA, 2021, INFORM SCIENCES, V573, P46, DOI 10.1016/j.ins.2021.05.063
   EFRON B, 1983, J AM STAT ASSOC, V78, P316, DOI 10.2307/2288636
   Efron B., 1993, INTRO BOOTSTRAP, DOI 10.1007/978-1-4899-4541-9
   Esteves G, 2020, AUTOMAT SOFTW ENG, V27, P369, DOI 10.1007/s10515-020-00277-4
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Feng S, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106432
   Freitas A.A., 2013, ACM SIGKDD EXPLORATI, V15, P1, DOI [10.1145/2594473.2594475, DOI 10.1145/2594473.2594475]
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Gong LN, 2020, IEEE T RELIAB, V69, P40, DOI 10.1109/TR.2019.2895462
   Guidotti R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3236009
   Huang J, 2005, IEEE T KNOWL DATA EN, V17, P299, DOI 10.1109/TKDE.2005.50
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Hudec M, 2021, KNOWL-BASED SYST, V220, DOI 10.1016/j.knosys.2021.106916
   Huysmans J, 2011, DECIS SUPPORT SYST, V51, P141, DOI 10.1016/j.dss.2010.12.003
   Jiarpakdee J., 2022, ARXIV PREPRINT
   Jiarpakdee J, 2021, IEEE WORK CONF MIN S, P432, DOI 10.1109/MSR52588.2021.00055
   Jiarpakdee J, 2022, IEEE T SOFTWARE ENG, V48, P166, DOI 10.1109/TSE.2020.2982385
   Jiarpakdee J, 2020, EMPIR SOFTW ENG, V25, P3590, DOI 10.1007/s10664-020-09848-1
   Jiarpakdee J, 2021, IEEE T SOFTWARE ENG, V47, P320, DOI 10.1109/TSE.2019.2891758
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kamei Yasutaka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P196
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kraemer HC, 2003, J AM ACAD CHILD PSY, V42, P1524, DOI 10.1097/00004583-200312000-00022
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Lipton Z.C., 2016, COMMUN ACM
   Liu H, 2019, INFORM SCIENCES, V479, P164, DOI 10.1016/j.ins.2018.12.001
   Liu H, 2018, INFORM SCIENCES, V436, P227, DOI 10.1016/j.ins.2018.01.025
   Liu MX, 2014, IEEE T RELIAB, V63, P676, DOI 10.1109/TR.2014.2316951
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T., 2015, The promise repository of empirical software engineering data
   Moeyersoms J, 2015, J SYST SOFTWARE, V100, P80, DOI 10.1016/j.jss.2014.10.032
   Monden A, 2012, ASIA PAC SOFWR ENG, P838, DOI 10.1109/APSEC.2012.103
   Mori T, 2019, EMPIR SOFTW ENG, V24, P779, DOI 10.1007/s10664-018-9638-1
   Pandey SK, 2021, EXPERT SYST APPL, V172, DOI 10.1016/j.eswa.2021.114595
   Petric J, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916007
   Pornprasit C, 2021, IEEE WORK CONF MIN S, P369, DOI 10.1109/MSR52588.2021.00049
   Pornprasit Chanathip, 2022, IEEE Transactions on Software Engineering
   Pornprasit Chanathip, 2021, 2021 36 IEEE ACM INT, P407, DOI DOI 10.1109/ASE51524.2021.9678763
   Quinlan J.R., 1993, C4 5 PROGRAMS MACHIN
   QUINLAN JR, 1990, MACH LEARN, V5, P239, DOI 10.1007/BF00117105
   Rajapaksha D, 2022, IEEE T SOFTWARE ENG, V48, P2814, DOI 10.1109/TSE.2021.3070559
   Rajbahadur GK, 2021, IEEE T SOFTWARE ENG, V48, P2245, DOI 10.1109/TSE.2021.3056941
   Ribeiro MT, 2018, AAAI CONF ARTIF INTE, P1527
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Saadallah A, 2020, PR INT CONF DATA SC, P264, DOI 10.1109/DSAA49011.2020.00039
   Sarle WS, 1990, SAS STAT USERS GUIDE
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Seiffert C, 2014, INFORM SCIENCES, V259, P571, DOI 10.1016/j.ins.2010.12.016
   Shehzad K, 2013, IEEE T KNOWL DATA EN, V25, P476, DOI 10.1109/TKDE.2011.237
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shrikanth NC, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P182, DOI 10.1145/3377813.3381367
   Singh P, 2017, IEEE T SYST MAN CY-S, V47, P826, DOI 10.1109/TSMC.2016.2521840
   Storkey A, 2009, NEURAL INF PROCESS S, P3
   Tantithamthavorn C, 2021, IEEE SOFTWARE, V38, P115, DOI 10.1109/MS.2021.3072088
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wattanakriengkrai S, 2022, IEEE T SOFTWARE ENG, V48, P1480, DOI 10.1109/TSE.2020.3023177
   Xia X, 2015, INFORM SOFTWARE TECH, V61, P93, DOI 10.1016/j.infsof.2014.12.006
   Yadav HB, 2015, INFORM SOFTWARE TECH, V63, P44, DOI 10.1016/j.infsof.2015.03.001
   Yedida R, 2022, IEEE T SOFTWARE ENG, V48, P3103, DOI 10.1109/TSE.2021.3079841
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
NR 82
TC 9
Z9 10
U1 0
U2 21
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2022
VL 151
AR 107016
DI 10.1016/j.infsof.2022.107016
EA AUG 2022
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V5BX
UT WOS:000859493100008
DA 2024-07-18
ER

PT J
AU Alami, A
   Krancher, O
   Paasivaara, M
AF Alami, Adam
   Krancher, Oliver
   Paasivaara, Maria
TI The journey to technical excellence in agile software development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile software development; Software development methods; Technical
   excellence; Agile principles
ID PROCESS IMPROVEMENT; ARCHITECTURE; EVOLUTION; QUALITY
AB Context: Technical excellence is a nebulous term in agile software development. This vagueness is risky because it may lead to misunderstandings and to agile implementations that may overlook a key principle of agile development.
   Objective: This study investigates how agile practitioners interpret the concept of technical excellence brought up in Principle 9 of the Agile manifesto. Moreover, we investigate how agile practitioners put the concept into practice and what conditions facilitate putting technical excellence into practice.
   Methods: We conducted semi-structured interviews with twenty agile practitioners, coded the data inductively, and performed two sessions to validate the emerging findings.
   Results: We find that technical excellence is first and foremost a mindset that is underpinned by continuous attention to sustainable code, continuous learning, and teamwork. Fostering technical excellence requires the adoption of design and development practices, such as continuous architecting, and is supported by continuous learning. We also identify three enabling conditions for technical excellence: Leadership support, customer buyin, and psychological safety. These enablers provide teams with leeway to nurture their pursuit of technical excellence.
   Conclusion: Our findings highlight the key role of people-based strategies in promoting technical excellence in agile software development. They show that the attainment of technical excellence does not only involve technical practices. On the contrary, it relies on social and organizational support and, most importantly, a mindset.
C1 [Alami, Adam] Aalborg Univ, Aalborg, Denmark.
   [Krancher, Oliver; Paasivaara, Maria] IT Univ Copenhagen, Copenhagen, Denmark.
   [Paasivaara, Maria] LUT Univ, Lappeenranta, Finland.
   [Paasivaara, Maria] Aalto Univ, Espoo, Finland.
C3 Aalborg University; IT University Copenhagen; Lappeenranta-Lahti
   University of Technology LUT; Aalto University
RP Alami, A (corresponding author), Aalborg Univ, Dept Comp Sci, Selma Lagerlofs Vej 300, DK-9220 Aalborg, Denmark.
EM adaa@itu.dk
RI Alami, Adam/KBR-2703-2024
OI Alami, Adam/0000-0003-4483-0105
CR Alami A, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P10, DOI 10.1145/3463274.3463322
   Allison I, 2007, INFORM SOFTWARE TECH, V49, P668, DOI 10.1016/j.infsof.2007.02.003
   Andriyani Y, 2017, LECT NOTES BUS INF P, V283, P3, DOI 10.1007/978-3-319-57633-6_1
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2018, REFACTORING IMPROVIN
   Arcos-Medina G, 2019, INT J SYST ASSUR ENG, V10, P867, DOI 10.1007/s13198-019-00840-7
   Beck K., 2000, EXTREME PROGRAMMING
   Blair S, 2010, IEEE SOFTWARE, V27, P26, DOI 10.1109/MS.2010.52
   Boehm B, 2003, COMPUTER, V36, P57, DOI 10.1109/MC.2003.1204376
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Cobb Charles G., 2015, The project manager's guide to mastering Agile: Principles and practices for an adaptive approach
   Cockburn A., 2002, Cutter IT Journal, V15, P6
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Díaz J, 2014, INFORM SOFTWARE TECH, V56, P727, DOI 10.1016/j.infsof.2014.01.014
   Dingsoyr T, 2018, LECT NOTES BUS INF P, V314, P191, DOI 10.1007/978-3-319-91602-6_13
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Dittrich Y, 2009, IEEE SOFTWARE, V26, P41, DOI 10.1109/MS.2009.173
   Dweck C., 2016, HARVARD BUS REV
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Edmondson A, 1999, ADMIN SCI QUART, V44, P350, DOI 10.2307/2666999
   Faber R, 2010, IEEE SOFTWARE, V27, P33, DOI 10.1109/MS.2010.37
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Fowler M., 2001, Software Development, V9, P28
   Gavrilets S, 2017, P NATL ACAD SCI USA, V114, P6068, DOI 10.1073/pnas.1703857114
   Goldblatt H, 2011, PATIENT EDUC COUNS, V82, P389, DOI 10.1016/j.pec.2010.12.016
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Hanson A., 2017, INT ENCY COMMUNICATI, DOI [10.1002/9781118901731.iecrm0165, DOI 10.1002/9781118901731.IECRM0165]
   Hoda R, 2018, IEEE SOFTWARE, V35, P58, DOI 10.1109/MS.2018.290111318
   Hohl Philipp, 2018, Journal of Software Engineering Research and Development, V6, DOI 10.1186/s40411-018-0059-z
   Humble Jez, 2011, Cutter IT Journal, V24, P6
   *ISO IEC, 2001, 9126 ISO IEC
   Khan AA, 2017, INFORM SOFTWARE TECH, V87, P180, DOI 10.1016/j.infsof.2017.03.006
   Krancher O, 2020, LECT NOTES BUS INF P, V383, P56, DOI 10.1007/978-3-030-49392-9_4
   Krancher O, 2018, J MANAGE INFORM SYST, V35, P776, DOI 10.1080/07421222.2018.1481636
   Krancher O, 2013, P ANN HICSS, P3543, DOI 10.1109/HICSS.2013.242
   Kruchten P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.59
   Kruchten P, 2008, J SYST SOFTWARE, V81, P2413, DOI 10.1016/j.jss.2008.08.025
   Kruchten Philippe., 1999, Software Architecture, P565
   Laanti M., 2013, Communications in Computer and Information Science, V364, P247, DOI DOI 10.1007/978-3-642-39179-8_22
   Latte B., 2019, CLEAN CODE USE PRACT
   Madeyski L., 2009, TEST DRIVEN DEV EMPI
   Madison J, 2010, IEEE SOFTWARE, V27, P41, DOI 10.1109/MS.2010.35
   Mårtensson T, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P131, DOI 10.1109/ICSA.2019.00022
   Martin R.C., 2013, CLEAN CODE REFACTORI
   Martin R. C., 2018, Clean Architecture: A Craftsman's Guide to Software Structure and Design
   Martini A, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P1, DOI 10.1109/WICSA.2016.31
   McBreen Pete., 2002, Software Craftsmanship: The New Imperative
   Miles M.B., 2014, Qualitative data analysis: A methods sourcebook, V3rd
   Nord RL, 2006, IEEE SOFTWARE, V23, P47, DOI 10.1109/MS.2006.54
   Parzinger MJ, 2000, TOTAL QUAL MANAGE, V11, P353, DOI 10.1080/0954412006874
   Patton M.Q., 2002, Qualitative researchandevaluation methods, VThird
   Prechelt L, 2016, PROC INT CONF SOFTW, P1017, DOI 10.1145/2884781.2884789
   Pyritz B, 2003, BELL LABS TECH J, V8, P101, DOI 10.1002/bltj.10079
   Ramasubbu N, 2008, MIS QUART, V32, P437
   Repenning NP, 2002, ADMIN SCI QUART, V47, P265, DOI 10.2307/3094806
   Ringstad MA, 2011, COMM COM INF SC, V172, P167
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Salo O., 2007, Software Process Improvement and Practice, V12, P81, DOI 10.1002/spip.305
   Saunders B, 2018, QUAL QUANT, V52, P1893, DOI 10.1007/s11135-017-0574-8
   Schwandt T.A., 2014, SAGE DICT QUALITATIV, V4th
   Sharma R, 2003, MIS QUART, V27, P533
   Silva Ana, 2017, P 21 INT C EVALUATIO, P364, DOI [10.1145/3084226.3084262, DOI 10.1145/3084226.3084262]
   Sulayman M, 2012, INFORM SOFTWARE TECH, V54, P479, DOI 10.1016/j.infsof.2011.12.007
   Timperi O.P., 2004, SEMINAR SOFTWARE ENG
   Tripp JF, 2014, P ANN HICSS, P4799, DOI 10.1109/HICSS.2014.589
   Venters C. C., 2014, CEUR WORKSH P CEUR, P7
   Waterman M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P347, DOI 10.1109/ICSE.2015.54
   Wolgemuth JR, 2015, QUAL RES, V15, P351, DOI 10.1177/1468794114524222
   Yang C, 2016, J SYST SOFTWARE, V111, P157, DOI 10.1016/j.jss.2015.09.028
   Yin R.K., 2004, The Case Study Anthology
NR 70
TC 4
Z9 4
U1 6
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2022
VL 150
AR 106959
DI 10.1016/j.infsof.2022.106959
EA JUN 2022
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2U8GD
UT WOS:000823392100003
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Junior, HJ
   Travassos, GH
AF Junior, Helvio Jeronimo
   Travassos, Guilherme Horta
TI Consolidating a common perspective on<i> Technical</i><i> Debt</i> and
   its Management through a Tertiary Study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technical debt; Software project management; Quality assurance; Tertiary
   study; Evidence-based software engineering
ID SYSTEMATIC LITERATURE-REVIEWS
AB Context: Technical Debt (TD) contextualizes the technical decisions on shortcuts and workarounds during software development, positively and negatively influencing software evolution. However, TD still seems to confound with any issue occurring during software development, impacting its proper understanding and management in software projects.Goal: To synthesize evidence regarding the conceptualization, characteristics, and management of TD in software projects.Method: To undertake a tertiary study to strengthen the knowledge of TD using the principles of Grounded Theory to support qualitative analysis.Results: Nineteen secondary studies provide evidence on TD and its management. They provided information regarding the TD's understanding (definitions and characteristics) and management (actions and technologies). Some causes, such as project constraints, technical decisions, and team members, promote different types of TD in software projects. The secondary studies also supported identifying the impacts of TD regarding project management, team members, the organization's business, and internal software quality. Besides helping identify TD challenges, such studies contributed to integrating a conjectured conceptual model of TD that can support future discussions and investigations regarding TD's understanding and management.Conclusions: The set of evidence regarding TD's understanding, actions, and technologies to manage TD can aid software practitioners in their software projects. However, it is observable an interpretation overload regarding its definition, inducing to classify any issue occurring during the software development as TD. Therefore, further discussions and investigations still represent essential steps towards consolidating a common perspective on TD and its management.
C1 [Junior, Helvio Jeronimo; Travassos, Guilherme Horta] Univ Fed Rio de Janeiro, Syst Engn & Comp Sci Program, PESC, COPPE, POB 68511, Rio De Janeiro, Brazil.
   [Junior, Helvio Jeronimo] Inst Fed Educ Ciencia & Tecnol Rio de Janeiro, Campus Niteroi,POB, BR-24315375 Rio De Janeiro, Brazil.
C3 Universidade Federal do Rio de Janeiro; Instituto Federal do Rio de
   Janeiro (IFRJ)
RP Junior, HJ (corresponding author), Univ Fed Rio de Janeiro, Syst Engn & Comp Sci Program, PESC, COPPE, POB 68511, Rio De Janeiro, Brazil.
EM jeronimohjr@cos.ufrj.br; ght@cos.ufrj.br
RI Travassos, Guilherme H/G-2842-2012
FU Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior - Brasil
   (CAPES) [001]; Instituto Federal de Educacao, Ciencia e Tecnologia do
   Rio de Janeiro; CNPq [304234/2018-4]; CNE Faperj [E-26/201.170/2021]
FX We thank Rebeca C. Motta, Talita V. Ribeiro, and Victor M. da Silva for
   their contributions to this research. The Coordenacao de Aperfeicoamento
   de Pessoal de Nivel Superior - Brasil (CAPES) - Finance Code 001, and
   the Instituto Federal de Educacao, Ciencia e Tecnologia do Rio de
   Janeiro partially supported this research. Professor Travassos is a CNPq
   Researcher (304234/2018-4) and CNE Faperj (E-26/201.170/2021) .
CR Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   [Anonymous], 2011, ISO 13314
   [Anonymous], CTR REV DISSEMINATIO
   [Anonymous], 2001, ENCY SOFTWARE ENG
   Apa C., 2020, FUNDAMENTALS SOFTWAR, P61, DOI DOI 10.1007/978-3-030-35983-6_4
   Avgeriou P., 2016, MANAGING TECHNICAL D
   BIOLCHINI J, 2005, TECHNICAL REPORT
   Boehm B., 2020, SOFTWARE COST ESTIMA
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Budgen D, 2018, INFORM SOFTWARE TECH, V95, P62, DOI 10.1016/j.infsof.2017.10.017
   Carver J, 2007, LECT NOTES COMPUT SC, V4336, P42
   Cohn M., 2005, Agile Estimating and Planning
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Cunningham W., 1993, OOPS Messenger, V4, P29
   de Almeida Biolchini JC, 2007, ADV ENG INFORM, V21, P133, DOI 10.1016/j.aei.2006.11.006
   Fernández-Sánchez C, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P69, DOI 10.1109/MTD.2015.7332628
   Fernández-Sánchez C, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE ARCHITECTURE AND METRICS (SAM), P22, DOI 10.1109/SAM.2015.11
   Fowler M., MARTINFOWLERCOM
   Holvitie Johannes, 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P35, DOI 10.1109/MTD.2014.8
   Izurieta Clemente, 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P23, DOI 10.1109/MTD.2012.6225995
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kruchten Philippe, 2013, ACM SIGSOFT Software Engineering Notes, V38, P51
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   Li ZY, 2016, SOFTWARE QUALITY ASSURANCE: IN LARGE SCALE AND COMPLEX SOFTWARE-INTENSIVE SYSTEMS, P85, DOI 10.1016/B978-0-12-802301-3.00005-3
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Martín-Martín A, 2018, J INFORMETR, V12, P1160, DOI 10.1016/j.joi.2018.09.002
   Martini A, 2014, EUROMICRO CONF PROC, P85, DOI 10.1109/SEAA.2014.65
   McConnell S, 2010, TECHNICAL DEBT 10X S
   Mensah S, 2018, J SYST SOFTWARE, V135, P37, DOI 10.1016/j.jss.2017.09.026
   Molokken-Ostvold K, 2008, J SYST SOFTWARE, V81, P2106, DOI 10.1016/j.jss.2008.03.058
   Pai M, 2004, NATL MED J INDIA, V17, P86
   Araujo MAP, 2012, INT SYMP EMP SOFTWAR, P281, DOI 10.1145/2372251.2372303
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Rios N, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P3, DOI 10.1109/TechDebt.2019.00009
   Rios N, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268917
   Rios N, 2018, INFORM SOFTWARE TECH, V102, P117, DOI 10.1016/j.infsof.2018.05.010
   SAATY TL, 1987, DECISION SCI, V18, P157, DOI 10.1111/j.1540-5915.1987.tb01514.x
   Shah SMA, 2014, IT PROF, V16, P44, DOI 10.1109/MITP.2013.21
   Siebra CA, 2016, J SYST SOFTWARE, V120, P219, DOI 10.1016/j.jss.2016.05.043
   Silva V., 2018, P SIMP OSIO BRASILEI
   Silva V. M., 2019, J SOFTWARE ENG RES D, V7, P1
   Strauss A.L., 1990, BASICS QUALITATIVE R
   The HFT Guy, 2022, HFT GUY DEVELOPER LO
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Usman M, 2017, INFORM SOFTWARE TECH, V85, P43, DOI 10.1016/j.infsof.2017.01.006
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Zazworka N., 2013, Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering, DOI DOI 10.1145/2460999.2461005.ASSOCIATIONFORCOMPUTINGMACHINERY
NR 52
TC 12
Z9 11
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2022
VL 149
AR 106964
DI 10.1016/j.infsof.2022.106964
EA MAY 2022
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1Y6WH
UT WOS:000808282000005
DA 2024-07-18
ER

PT J
AU Humeniuk, D
   Khomh, F
   Antoniol, G
AF Humeniuk, Dmytro
   Khomh, Foutse
   Antoniol, Giuliano
TI A search-based framework for automatic generation of testing
   environments for cyber-physical systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Cyber-physical systems; Test scenario generation; Genetic algorithms;
   Virtual environments
AB Background: Many modern cyber-physical systems incorporate computer vision technologies, complex sensors and advanced control software, allowing them to interact with the environment autonomously. Examples include drone swarms, self-driving vehicles, autonomous robots, etc. Testing such systems poses numerous challenges: not only should the system inputs be varied, but also the surrounding environment should be accounted for. A number of tools have been developed to test the system model for the possible inputs falsifying its requirements. However, they are not directly applicable to autonomous cyber-physical systems, as the inputs to their models are generated while operating in a virtual environment. Aims: In this paper, we aim to design a search-based framework, named AmbieGen, for generating diverse fault-revealing test scenarios for autonomous cyber-physical systems. The scenarios represent an environment in which an autonomous agent operates. The framework should be applicable to generating different types of environments. Methods: To generate the test scenarios, we leverage the NSGA-II algorithm with two objectives. The first objective evaluates the deviation of the observed system's behaviour from its expected behaviour. The second objective is the test case diversity, calculated as a Jaccard distance with a reference test case. To guide the first objective we are using a simplified system model rather than the full model. The full model is used to run the system in the simulation environment and can take substantial time to execute (several minutes for one scenario). The simplified system model is derived from the full model and can be used to get an approximation of the results obtained from the full model without running the simulation. Results: We evaluate AmbieGen on three scenario generation case studies, namely a smart-thermostat, a robot obstacle avoidance system, and a vehicle lane-keeping assist system. For all the case studies, our approach outperforms the available baselines in fault revealing and several other metrics such as the diversity of the revealed faults and the proportion of valid test scenarios. Conclusion: AmbieGen could find scenarios, revealing failures for all the three autonomous agents considered in our case studies. We compared three configurations of AmbieGen: based on a single objective genetic algorithm, multi-objective, and random search. Both single and multi objective configurations outperform the random search. Multi objective configuration can find the individuals of the same quality as the single objective, producing more unique test scenarios in the same time budget. Our framework can be used to generate virtual environments of different types and complexity and reveal the system's faults early in the design stage.
C1 [Humeniuk, Dmytro; Khomh, Foutse; Antoniol, Giuliano] Polytech Montreal, 2500 Chemin Polytech, Montreal, PQ H3T 1J4, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Humeniuk, D (corresponding author), Polytech Montreal, 2500 Chemin Polytech, Montreal, PQ H3T 1J4, Canada.
EM dmytro.humeniuk@polymtl.ca
OI Humeniuk, Dmytro/0000-0002-2983-8312
FU Natural Sciences and Engineering Re-search Council of Canada (NSERC)
   [RGPIN-2019-06956]; Canadian Institute for Advanced Research (CIFAR)
FX Acknowledgements This work is funded by the Natural Sciences and
   Engineering Re-search Council of Canada (NSERC) [Grant No:
   RGPIN-2019-06956] and the Canadian Institute for Advanced Research
   (CIFAR) .
CR Aerts A, 2017, INTELL DAT CENT SYST, P287, DOI 10.1016/B978-0-12-803801-7.00019-5
   Alur R, 2015, PRINCIPLES OF CYBER-PHYSICAL SYSTEMS, P1
   Annapureddy Y, 2011, LECT NOTES COMPUT SC, V6605, P254, DOI 10.1007/978-3-642-19835-9_21
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arnold DV, 2002, IEEE T EVOLUT COMPUT, V6, P30, DOI 10.1023/A:1015059928466
   Arnold James, 2013, Computer Safety, Reliability and Security. 32nd International Conference, SAFECOMP 2013. Proceedings: LNCS 8153, P33, DOI 10.1007/978-3-642-40793-2_4
   Arrieta A, 2017, IEEE C EVOL COMPUTAT, P688, DOI 10.1109/CEC.2017.7969377
   BeamNG.tech, 2021, BEAMNG GMBH
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Ben Abdessalem R, 2016, IEEE INT CONF AUTOM, P63, DOI 10.1145/2970276.2970311
   Blank J, 2020, IEEE ACCESS, V8, P89497, DOI 10.1109/ACCESS.2020.2990567
   Broy M., 2005, Springer LNCS
   Chen CY, 2015, IEEE I CONF COMP VIS, P2722, DOI 10.1109/ICCV.2015.312
   Coello C. A. C., 2007, EVOLUTIONARY ALGORIT, V5
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   David A, 2015, INT J SOFTW TOOLS TE, V17, P351, DOI [10.1007/s10009-014-0361-y, 10.1007/s10009-014-0323-4]
   deJong E., 2001, PROC GECCO 01, P11
   Donzé A, 2010, LECT NOTES COMPUT SC, V6174, P167, DOI 10.1007/978-3-642-14295-6_17
   Gambi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P318, DOI 10.1145/3293882.3330566
   Handa A, 2012, LECT NOTES COMPUT SC, V7578, P222, DOI 10.1007/978-3-642-33786-4_17
   Hoffmann GM, 2007, P AMER CONTR CONF, P3910
   Humeniuk D., 2021, SEARCH BASED FRAMEWO
   Jones E., 2001, SciPy: Open source scientific tools for Python
   Klampfl L., ARXIV PREPRINT ARXIV
   Kranz M., 2006, Proceedings of UbiSys, V6, P17
   Laumond J. P., 1998, Robot motion planning and control, P1, DOI 10.1007/BFb0036070
   Ljung L., 1994, Modeling of dynamic systems
   Menghi C, 2020, PROC INT CONF SOFTW, P372, DOI 10.1145/3377811.3380370
   Minguez J, 2004, IEEE T ROBOTIC AUTOM, V20, P45, DOI 10.1109/TRA.2003.820849
   Mouret JB, 2011, STUD COMPUT INTELL, V341, P139
   Nguyen CD, 2012, AUTON AGENT MULTI-AG, V25, P260, DOI 10.1007/s10458-011-9175-4
   Panichella S., 2021, INT C SOFTW ENG WORK
   Riccio V, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P876, DOI 10.1145/3368089.3409730
   Romijn R, 2008, J PROCESS CONTR, V18, P906, DOI 10.1016/j.jprocont.2008.06.007
   Sakai A., 2018, ARXIVARXIV180810703
   Sotiropoulos T, 2016, 2016 12TH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC 2016), P153, DOI 10.1109/EDCC.2016.14
   Sturtevant NR, 2012, IEEE T COMP INTEL AI, V4, P144, DOI 10.1109/TCIAIG.2012.2197681
   Varadharajan VS, 2020, IEEE ROBOT AUTOM LET, V5, P5347, DOI 10.1109/LRA.2020.3006793
   Winterton RHS, 1999, CONTEMP PHYS, V40, P205, DOI 10.1080/001075199181549
   Yin RK, 2002, Applied Social Research Methods Series, V34
NR 40
TC 11
Z9 11
U1 1
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2022
VL 149
AR 106936
DI 10.1016/j.infsof.2022.106936
EA MAY 2022
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1Y6WH
UT WOS:000808282000003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chen, HW
   Jing, XY
   Zhou, YM
   Li, B
   Xu, BW
AF Chen, Haowen
   Jing, Xiao-Yuan
   Zhou, Yuming
   Li, Bing
   Xu, Baowen
TI Aligned metric representation based balanced multiset ensemble learning
   for heterogeneous defect prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Heterogeneous defect prediction; Class imbalance learning; Aligned
   metric representation; Ensemble learning; Balanced multiset
ID CODE; MODELS; MACHINE; FAULTS
AB Context: Heterogeneous defect prediction (HDP) refers to the defect prediction across projects with different metrics. Most existing HDP methods map source and target data into a common metric space where each dimension has no actual meaning, which weakens their interpretability. Besides, HDP always suffers from the class imbalance problem.
   Objective: For deficiencies of current HDP methods, we intend to propose a novel HDP approach that can reduce the heterogeneity of source and target data and deal with imbalanced data while retaining the actual meaning for each dimension of constructed common metric space.
   Method: We propose an Aligned Metric Representation based Balanced Multiset Ensemble learning (BMEL+ AMR) approach for HDP. AMR consists of shared, source-specific, and target-specific metrics. It is built by learning the translation from shared to specific metrics and reducing the distribution difference. To deal with imbalanced data, we design BMEL that constructs multiple balanced subsets for source data and produces an aggregated classifier for predicting labels of target data.
   Result: Experimental results on 22 public projects indicate that (1) among all competing methods, BMEL+AMR achieves the best performance on all indicators except Popt, followed by AMR; (2) compared with AMR, the introduction of BMEL improves the performance on non-effort-aware indicators statistically significantly except F1-score; compared with BMEL, the introduction of AMR improves the performance throughout all indicators statistically significantly.
   Conclusion: BMEL+AMR can effectively improve HDP performance by eliminating heterogeneity and dealing with imbalanced data, and AMR is helpful to explain the prediction model.
C1 [Chen, Haowen; Jing, Xiao-Yuan; Li, Bing] Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
   [Jing, Xiao-Yuan] Guangdong Univ Petrochem Technol, Sch Comp Sci, Maoming, Peoples R China.
   [Jing, Xiao-Yuan] Guangdong Univ Petrochem Technol, Guangdong Prov Key Lab Petrochem Equipment Fault, Maoming, Peoples R China.
   [Jing, Xiao-Yuan; Zhou, Yuming; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
C3 Wuhan University; Guangdong University of Petrochemical Technology;
   Guangdong University of Petrochemical Technology; Nanjing University
RP Jing, XY (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
EM hwc_zzu@126.com; jingxy_2000@126.com; zhouyuming@nju.edu.cn;
   bingli@whu.edu.cn; bwxu@nju.edu.cn
RI He, Chen/JLM-5059-2023; liang, shuang/JOK-5869-2023; YE,
   Chen/KFR-3858-2024; Xu, Baowen/IXW-4882-2023; li, bing/GWQ-9617-2022;
   Li, bo/IWL-9318-2023; LEE, YU/JXY-2338-2024; li, bing/HTS-1845-2023;
   zheng, hao/JQI-4215-2023
OI Xu, Baowen/0000-0001-7743-1296; Chen, Haowen/0000-0002-9255-6772
FU NSFC Project [62176069]; Natural Science Foundation of Guangdong
   Province, China [2019A1515011076]; Innovation Group of Guangdong
   Education Department, China [2020KCXTD014, 2018KCXTD019]; 2019 Key
   Discipline project of Guangdong Province, China; State Key Laboratory
   for Novel Software Technology [KFKT2021B29]; NSFC-Key Project of General
   Technology Fundamental Research United Fund [U1736211]; NSFC-Key Project
   [61933013]
FX This work was supported by the NSFC Project under Grant No. 62176069,
   the Natural Science Foundation of Guangdong Province, China under Grant
   No. 2019A1515011076, the Innovation Group of Guangdong Education
   Department, China under Grant Nos. 2020KCXTD014 and 2018KCXTD019, the
   2019 Key Discipline project of Guangdong Province, China, the project of
   State Key Laboratory for Novel Software Technology under Grant No.
   KFKT2021B29, the NSFC-Key Project of General Technology Fundamental
   Research United Fund under Grant No. U1736211, and the NSFC-Key Project
   under Grant No. 61933013.
CR Baltrusaitis T, 2019, IEEE T PATTERN ANAL, V41, P423, DOI 10.1109/TPAMI.2018.2798607
   Breiman L, 1996, MACH LEARN, V24, P123, DOI 10.1007/bf00058655
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Chen HW, 2021, IEEE T SOFTWARE ENG, V47, P2803, DOI 10.1109/TSE.2020.2968520
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Friedman M, 1940, ANN MATH STAT, V11, P86, DOI 10.1214/aoms/1177731944
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Hollander M., 1973, NONPARAMETRIC STAT M
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jing XY, 2021, IEEE T PATTERN ANAL, V43, P139, DOI 10.1109/TPAMI.2019.2929166
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Jing XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P414, DOI 10.1145/2568225.2568320
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   Li W, 2014, IEEE T PATTERN ANAL, V36, P1134, DOI 10.1109/TPAMI.2013.167
   Li ZQ, 2019, IEEE T SOFTWARE ENG, V45, P391, DOI 10.1109/TSE.2017.2780222
   Li ZQ, 2018, AUTOMAT SOFTW ENG, V25, P201, DOI 10.1007/s10515-017-0220-7
   Li ZQ, 2017, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2017.19
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2016, IEEE T SOFTWARE ENG, V42, P1092, DOI 10.1109/TSE.2016.2553030
   Tong HN, 2021, IEEE T SOFTWARE ENG, V47, P1886, DOI 10.1109/TSE.2019.2939303
   Turhan B, 2013, INFORM SOFTWARE TECH, V55, P1101, DOI 10.1016/j.infsof.2012.10.003
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wang TJ, 2016, SOFTW TEST VERIF REL, V26, P498, DOI 10.1002/stvr.1610
   Wang TJ, 2016, AUTOMAT SOFTW ENG, V23, P569, DOI 10.1007/s10515-015-0179-1
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Yu Q, 2017, J SYST SOFTWARE, V132, P366, DOI 10.1016/j.jss.2017.06.070
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhang ZW, 2017, AUTOMAT SOFTW ENG, V24, P47, DOI 10.1007/s10515-016-0194-x
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 60
TC 8
Z9 8
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2022
VL 147
AR 106892
DI 10.1016/j.infsof.2022.106892
EA MAR 2022
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L8PL
UT WOS:000852891700007
DA 2024-07-18
ER

PT J
AU dos Santos, DA
   de Almeida, ES
   Ahmed, I
AF dos Santos, Daniel Amador
   de Almeida, Eduardo Santana
   Ahmed, Iftekhar
TI Investigating replication challenges through multiple replications of an
   experiment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Replication; Empirical software engineering; Experiments;
   Highly-configurable systems
ID SOFTWARE PRODUCT LINES; TESTING TECHNIQUES
AB Context: As Empirical Software Engineering grows in maturity and number of publications, more replications are needed to provide a solid grounding to the evidence found through prior research. However, replication studies are scarce in general and some topics suffer more than others with such scarcity. On top, the challenges associated with replicating empirical studies are not well understood.
   Objective: In this study, we aim to fill this gap by investigating difficulties emerging when replicating an experiment.
   Method: We used participants with distinct backgrounds to play the role of a research group attempting to replicate an experimental study addressing Highly-Configurable Systems. Seven external close replications in total were performed. After obtaining the quantitative replication results, a focus group session was applied to each group inquiring about the replication experience. We used the grounded theory's constant comparison method for the qualitative analysis.
   Results: We have seen in our study that, in the replications performed, most results hold when comparing them with the baseline. However, the participants reported many difficulties in replicating the original study, mostly related to the lack of clarity of the instructions and the presence of defects on replication artifacts. Based on our findings, we provide recommendations that can help mitigate the problems reported.
   Conclusions: The quality of replication artifacts and the lack of clear instructions might impact an experiment replication. We advocate having good quality replication instructions and well-prepared laboratory packages to foster and enable researchers to perform better replications.
C1 [dos Santos, Daniel Amador; de Almeida, Eduardo Santana] Fed Univ Bahia IC UFBA Salvador, Inst Comp, Salvador, BA, Brazil.
   [Ahmed, Iftekhar] Univ Calif Irvine, Dept Informat, Irvine, CA USA.
C3 University of California System; University of California Irvine
RP dos Santos, DA (corresponding author), Fed Univ Bahia IC UFBA Salvador, Inst Comp, Salvador, BA, Brazil.
EM daniel.amador@email.com; esa@dcc.ufba.br; iftekha@uci.edu
RI de Almeida, Eduardo/JJC-2493-2023
FU Fundacao de Amparo a Pesquisa do Estado da Bahia, Brazil (FAPESB)
   [BOL0644/2016]
FX This work was partially funded by Fundacao de Amparo a Pesquisa do
   Estado da Bahia, Brazil (FAPESB) scolarship BOL0644/2016.
CR [Anonymous], 1996, ISERN9610 U STRATHCL
   [Anonymous], 2010, P 6 INT C PRED MOD S, DOI DOI 10.1145/1868328.1868336
   Apa C, 2014, EMPIR SOFTW ENG, V19, P378, DOI 10.1007/s10664-013-9267-7
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Berger E.D., 2019, ARXIV
   Bezerra RMM, 2015, INT SYMP EMP SOFTWAR, P132, DOI 10.1109/ESEM.2015.7321213
   Calefato F., 2010, P 2010 ACM IEEE INT
   Caneill, 2014, P 8 ACMIEEE INT S EM, P1
   Carver J. C., 2010, INT WORKSH REPL EMP, P2
   Cruz M, 2020, IEEE ACCESS, V8, P26773, DOI 10.1109/ACCESS.2019.2952191
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   da Silva FQB, 2014, EMPIR SOFTW ENG, V19, P501, DOI 10.1007/s10664-012-9227-7
   de Magalhaes CVC, 2015, INFORM SOFTWARE TECH, V64, P76, DOI 10.1016/j.infsof.2015.02.001
   Dias-Neto AC, 2009, INT SYMP EMP SOFTWAR, P270
   Fernández-Sáez AM, 2016, EMPIR SOFTW ENG, V21, P212, DOI 10.1007/s10664-014-9354-4
   Giles J, 2006, NATURE, V442, P344, DOI 10.1038/442344a
   Guerrouj L, 2014, EMPIR SOFTW ENG, V19, P1706, DOI 10.1007/s10664-013-9260-1
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Juristo N., 2013, BASICS SOFTWARE ENG
   Juristo N, 2009, INT SYMP EMP SOFTWAR, P357
   Kitchenham B., 2006, INT S EMPIRICAL SOFT, P38, DOI DOI 10.1145/1159733.1159742
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   Krein Jonathan L., 2010, P 1 INT WORKSH REPL, P1
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   LASORTE MA, 1972, SOCIOL QUART, V13, P218, DOI 10.1111/j.1533-8525.1972.tb00805.x
   Lung J, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P191, DOI 10.1145/1368088.1368115
   Machado ID, 2014, INFORM SOFTWARE TECH, V56, P1183, DOI 10.1016/j.infsof.2014.04.002
   Medeiros F, 2016, PROC INT CONF SOFTW, P643, DOI 10.1145/2884781.2884793
   Mendongal MG, 2008, IEEE INT C ENG COMP, P203, DOI 10.1109/ICECCS.2008.38
   Noll J, 2011, INT SYMP EMP SOFTWAR, P30, DOI 10.1109/ESEM.2011.11
   Revoredo K, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10007-3
   Riaz M, 2017, EMPIR SOFTW ENG, V22, P2127, DOI 10.1007/s10664-016-9481-1
   Ricca F., 2010, P 2010 ACM IEEE INT, P17
   Rossi B., 2014, P 8 ACM IEEE INT S E
   Santos A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09907-7
   Shull F, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P7, DOI 10.1109/ISESE.2002.1166920
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Solari M., 2006, 7 INT C PROD FOC SOF
   Solari M, 2018, INFORM SOFTWARE TECH, V97, P64, DOI 10.1016/j.infsof.2017.12.016
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Vegas S., 2006, International Symposium on Empirical Software Engineering, P28, DOI DOI 10.1145/1159733.1159741
   Wohlin C., 2014, INT C EVALUATION ASS, P1
NR 42
TC 1
Z9 1
U1 1
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2022
VL 147
AR 106870
DI 10.1016/j.infsof.2022.106870
EA MAR 2022
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L8PL
UT WOS:000852891700003
DA 2024-07-18
ER

PT J
AU AlOmar, EA
   Mkaouer, MW
   Newman, C
   Ouni, A
AF AlOmar, Eman Abdullah
   Mkaouer, Mohamed Wiem
   Newman, Christian
   Ouni, Ali
TI On preserving the behavior in software refactoring: A systematic mapping
   study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Refactoring; Behavior preservation; Systematic mapping study
ID IDENTIFICATION; OPPORTUNITIES; IMPACT; CODE
AB Context: Refactoring is the art of modifying the design of a system without altering its behavior. The idea is to reorganize variables, classes and methods to facilitate their future adaptations and comprehension. As the concept of behavior preservation is fundamental for refactoring, several studies, using formal verification, language transformation and dynamic analysis, have been proposed to monitor the execution of refactoring operations and their impact on the program semantics. However, there is no existing study that examines the available behavior preservation strategies for each refactoring operation. Objective: This paper identifies behavior preservation approaches in the research literature. Method: We conduct, in this paper, a systematic mapping study, to capture all existing behavior preservation approaches that we classify based on several criteria including their methodology, applicability, and their degree of automation. Results: The results indicate that several behavior preservation approaches have been proposed in the literature. The approaches vary between using formalisms and techniques, developing automatic refactoring safety tools, and performing a manual analysis of the source code. Conclusion: Our taxonomy reveals that there exist some types of refactoring operations whose behavior preservation is under-researched. Our classification also indicates that several possible strategies can be combined to better detect any violation of the program semantics.
C1 [AlOmar, Eman Abdullah; Mkaouer, Mohamed Wiem; Newman, Christian] Rochester Inst Technol, Rochester, NY 14623 USA.
   [Ouni, Ali] Univ Quebec, ETS Montreal, Montreal, PQ, Canada.
C3 Rochester Institute of Technology; University of Quebec; Ecole de
   Technologie Superieure - Canada; University of Quebec Montreal
RP AlOmar, EA (corresponding author), Rochester Inst Technol, Rochester, NY 14623 USA.
EM eman.alomar@mail.rit.edu; mwmvse@rit.edu; cdnvse@rit.edu;
   ali.ouni@etsmtl.ca
RI AlOmar, Eman Abdullah/ABC-3680-2021; Mkaouer, Mohamed Wiem/N-7476-2017;
   Ouni, Ali/Y-8280-2019; AlOmar, Eman Abdullah/ABW-2622-2022
OI Mkaouer, Mohamed Wiem/0000-0001-6010-7561; Ouni,
   Ali/0000-0003-4708-0362; AlOmar, Eman Abdullah/0000-0003-1800-9268
CR Abebe Mesfin., 2014, INT J SOFTWARE ENG I, V8, P299, DOI [10.14257/ijseia.2014.8.6.24, DOI 10.14257/IJSEIA.2014.8.6.24]
   Al Dallal J, 2018, IEEE T SOFTWARE ENG, V44, P44, DOI 10.1109/TSE.2017.2658573
   Al Dallal J, 2015, INFORM SOFTWARE TECH, V58, P231, DOI 10.1016/j.infsof.2014.08.002
   AlOmar EA, 2021, EXPERT SYST APPL, V167, DOI 10.1016/j.eswa.2020.114176
   AlOmar EA, 2019, INT SYMP EMP SOFTWAR, P42
   AlOmar EA, 2019, 2019 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON REFACTORING (IWOR 2019), P51, DOI 10.1109/IWoR.2019.00017
   Baader F., 2003, DESCRIPTION LOGIC HD
   Baqais AAB, 2020, SOFTWARE QUAL J, V28, P459, DOI 10.1007/s11219-019-09477-y
   Bogart A., 2020, P IEEEACM 42 INT C S, P334
   Chen ZY, 2018, INFORM SOFTWARE TECH, V103, P174, DOI 10.1016/j.infsof.2018.07.003
   Cinneide M. O, 2001, Automated Application of Design Patterns: A Refac-toring Approach
   Dao T.-H, 2016, INT C CONT AW SYST A, P101
   De Jonge Maartje., 2012, Proceedings of the Twelfth Workshop on Language Descriptions, Tools, and Applications, P1
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Garousi V, 2016, INFORM SOFTWARE TECH, V80, P195, DOI 10.1016/j.infsof.2016.09.002
   Garrido A, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P165
   Horpácsi D, 2017, ELECTRON P THEOR COM, P92, DOI 10.4204/EPTCS.253.8
   Hosseini S, 2008, TASE 2008: SECOND IFIP/IEEE INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, PROCEEDINGS, P125, DOI 10.1109/TASE.2008.43
   Insa D, 2018, SCI PROGRAMMING-NETH, V2018, DOI 10.1155/2018/9251762
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Li, 2018, PRELIMINARY INVESTIG, DOI [DOI 10.18293/SEKE2018-081, 10.18293/SEKE2018-081]
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   Massoni T, 2008, LECT NOTES COMPUT SC, V4961, P362, DOI 10.1007/978-3-540-78743-3_27
   McKeeman William M., 1998, DIGIT TECH J, V10, P100
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T, 2003, FORMALISING REFACTOR, P69
   Misbhauddin M, 2015, EMPIR SOFTW ENG, V20, P206, DOI 10.1007/s10664-013-9283-7
   Mongiovi M, 2011, P ACM INT C COMP OBJ, P213
   Mongiovi M, 2018, IEEE T SOFTWARE ENG, V44, P429, DOI 10.1109/TSE.2017.2693982
   Mongiovi M, 2014, SCI COMPUT PROGRAM, V93, P39, DOI 10.1016/j.scico.2013.11.001
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Najafi M, 2016, COMPUT INFORM, V35, P411
   Noguera C, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P337, DOI 10.1109/ICSM.2012.6405291
   Opdyke W.F., 1992, GAX9305645 U ILL URB
   Overbey J. L., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P303, DOI 10.1109/ASE.2011.6100067
   Peruma A, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110704
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Ratzinger J., 2008, Proceedings of the 2008 international working conference on Mining software repositories, P35, DOI [10.1145/1370750.1370759, DOI 10.1145/1370750.1370759]
   Ratzinger J., 2007, MILESTONES
   Roberts D., 1997, Theory and Practice of Object Systems, V3, P253, DOI 10.1002/(SICI)1096-9942(1997)3:4<253::AID-TAPO3>3.0.CO;2-T
   Schäfer M, 2010, ACM SIGPLAN NOTICES, V45, P286, DOI 10.1145/1932682.1869485
   Schäfer M, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P277
   Silva D, 2017, IEEE WORK CONF MIN S, P269, DOI 10.1109/MSR.2017.14
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Singh S, 2018, AIN SHAMS ENG J, V9, P2129, DOI 10.1016/j.asej.2017.03.002
   Soares G., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P173, DOI 10.1109/ICSM.2011.6080784
   Soares G., 2009, TOOLS SESS SBES
   Soares G, SAFEREFACTOR TOOL CH
   Soares G, 2009, BRAZILIAN S PROGRAMM, P159
   Soares G, 2013, J SYST SOFTWARE, V86, P1006, DOI 10.1016/j.jss.2012.10.040
   Soares G, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.63
   Soares Gustavo., 2011, Proceedings of the 15th Brazilian Symposium on Programming Languages, SBLP, V11, P91
   Thies A., 2012, P 2012 INT S SOFTWAR, P1, DOI [10.1145/2338965.2336754., DOI 10.1145/2338965.2336754]
   Tip F, 2003, ACM SIGPLAN NOTICES, V38, P13, DOI 10.1145/949343.949308
   Tip F, 2011, ACM T PROGR LANG SYS, V33, DOI 10.1145/1961204.1961205
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tsantalis N, 2010, J SYST SOFTWARE, V83, P391, DOI 10.1016/j.jss.2009.09.017
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Ubayashi Naoyasu, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P180, DOI 10.1109/ICST.2008.36
   Vakilian M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1106, DOI 10.1145/2568225.2568282
   Van Der Straeten R, 2007, SOFTW SYST MODEL, V6, P139, DOI 10.1007/s10270-006-0025-9
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
NR 66
TC 17
Z9 25
U1 2
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2021
VL 140
AR 106675
DI 10.1016/j.infsof.2021.106675
EA JUL 2021
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UY8FG
UT WOS:000701752600013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Xiao, X
   Pan, YQ
   Zhang, B
   Hu, GW
   Li, Q
   Lu, RN
AF Xiao, Xi
   Pan, Yuqing
   Zhang, Bin
   Hu, Guangwu
   Li, Qing
   Lu, Runiu
TI ALBFL: A novel neural ranking model for software fault localization via
   combining static and dynamic features
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Attention mechanism; Fault localization; Learning to rank; Software
   quality
AB Context: Automatic software fault localization serves as a significant purpose in helping developers solve bugs efficiently. Existing approaches for software fault localization can be categorized into static methods and dynamic ones, which have improved the fault locating ability greatly by analyzing static features from the source code or tracking dynamic behaviors during the runtime respectively. However, the accuracy of fault localization is still unsatisfactory. Objective: To enhance the capability of detecting software faults with the statement granularity, this paper puts forward ALBFL, a novel neural ranking model that combines the static and dynamic features, which obtains excellent fault localization accuracy. Firstly, ALBFL learns the semantic features of the source code by a transformer encoder. Then, it exploits a self-attention layer to integrate those static features and dynamic features. Finally, those integrated features are fed into a LambdaRank model, which can list the suspicious statements in descending order by their ranked scores. Method: The experiments are conducted on an authoritative dataset (i.e., Defect4J), which includes 5 open-source projects, 357 faulty programs in total. We evaluate the effectiveness of ALBFL, effectiveness of combining features, effectiveness of model components and aggregation on method level. Result: The results reflect that ALBFL identifies triple more faulty statements than 11 traditional SBFL methods and outperforms 2 state-of-the-art approaches by on average 14% on ranking faults in the first position. Conclusions: To improve the precision of automatic software fault localization, ALBFL combines neural network ranking model equipped with the self-attention layer and the transformer encoder, which can take full use of various techniques to judge whether a code statement is fault-inducing or not. Moreover, the joint architecture of ALBFL is capable of training the integration of these features under various strategies so as to improve accuracy further. In the future, we plan to exploit more features so as to improve our method's efficiency and accuracy.
C1 [Xiao, Xi; Lu, Runiu] Tsinghua Univ, Tsinghua Shenzhen Int Grad Sch, Shenzhen, Peoples R China.
   [Pan, Yuqing] Univ Int Business & Econ, Sch Informat Technol & Management, Beijing, Peoples R China.
   [Xiao, Xi; Zhang, Bin; Li, Qing] Peng Cheng Lab, Cyberspace Secur Res Ctr, Shenzhen, Peoples R China.
   [Hu, Guangwu] Shenzhen Inst Informat Technol, Sch Comp Sci, Shenzhen, Peoples R China.
   [Li, Qing] Southern Univ Sci & Technol, Shenzhen, Peoples R China.
C3 Tsinghua Shenzhen International Graduate School; Tsinghua University;
   University of International Business & Economics; Peng Cheng Laboratory;
   Shenzhen Institute of Information Technology; Southern University of
   Science & Technology
RP Hu, GW (corresponding author), Shenzhen Inst Informat Technol, Sch Comp Sci, Shenzhen, Peoples R China.
EM xiaox@sz.tsinghua.edu.cn; 66panyuqing@sina.com; bin.zhang@pcl.ac.cn;
   hugw@sziit.edu.cn; liq8@sustech.edu.cn; lurn@sz.singhua.edu.cn
RI Li, Qing/U-8995-2018
FU National Natural Science Foundation of China [61972219, 61972189,
   61773229]; RD Program of Shenzhen [JCYJ20190813174403598, SGDX2019091810
   1201696, JCYJ20190813165003837, JCYJ20170817115335418]; National Key
   Research and Development Program of China [2018 YFB1800600,
   2018YFB1800204]; Key Research and Development Program for Guangdong
   Province [2019B010136001]; Science and Technology Planning Project of
   Guangdong Province [LZC0023]; Overseas Cooperation Research Fund of
   Graduate School at Shenzhen, Tsinghua University [HW2018002]
FX This work is supported in part by the National Natural Science
   Foundation of China (61972219,61972189,61773229) , the RD Pro-gram of
   Shenzhen (JCYJ20190813174403598, SGDX2019091810 1201696,
   JCYJ20190813165003837, JCYJ20170817115335418) , the National Key
   Research and Development Program of China (2018 YFB1800600,
   2018YFB1800204) , the Key Research and Development Program for Guangdong
   Province (2019B010136001) ,the Science andTechnology Planning Project of
   Guangdong Province (LZC0023) , Overseas Cooperation Research Fund of
   Graduate School at Shenzhen, Tsinghua University (HW2018002) .
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Burges Christopher J. C., 2010, Learning, V11, P81
   Chaparro O, 2019, EMPIR SOFTW ENG, V24, P2947, DOI 10.1007/s10664-018-9672-z
   Chen MY, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P595, DOI 10.1109/DSN.2002.1029005
   Ferenc R., 2020, J ARRAY, V6, DOI [10.1016/j.array.2020.100021, DOI 10.1016/J.ARRAY.2020.100021]
   Ghandehari LS, 2020, IEEE T SOFTWARE ENG, V46, P616, DOI 10.1109/TSE.2018.2865935
   Hammacher C., 2008, THESIS
   Huang KM, 2020, IEEE T SERV COMPUT, V13, P144, DOI 10.1109/TSC.2016.2646687
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Landsberg D., 2018, FUNDAM APPROACHES SO, V10802, DOI [10.1007/978-3-319-89363-1_14, DOI 10.1007/978-3-319-89363-1_14]
   Li Z, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110661
   Mandieh M, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106269
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Peng ZD, 2020, INFORM SCIENCES, V510, P108, DOI 10.1016/j.ins.2019.08.077
   Saha P, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2018), P2, DOI 10.1145/3193977.3193982
   Shin Yoo, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P244, DOI 10.1007/978-3-642-33119-0_18
   Hoang T, 2019, IEEE T SOFTWARE ENG, V45, P1002, DOI 10.1109/TSE.2018.2810892
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang Y, 2018, IEEE ACCESS, V6, P8925, DOI 10.1109/ACCESS.2018.2796849
   Xiao Y, 2019, INFORM SOFTWARE TECH, V105, P17, DOI 10.1016/j.infsof.2018.08.002
   Xiao Y, 2018, INFORM SOFTWARE TECH, V99, P58, DOI 10.1016/j.infsof.2018.03.003
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Zhang MS, 2021, IEEE T SOFTWARE ENG, V47, P1089, DOI 10.1109/TSE.2019.2911283
   Zhang W, 2019, INFORM SOFTWARE TECH, V110, P121, DOI 10.1016/j.infsof.2019.03.001
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 29
TC 8
Z9 8
U1 1
U2 21
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2021
VL 139
AR 106653
DI 10.1016/j.infsof.2021.106653
EA JUN 2021
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA US8LY
UT WOS:000697678300011
DA 2024-07-18
ER

PT J
AU Cortellessa, V
   Eramo, R
   Tucci, M
AF Cortellessa, Vittorio
   Eramo, Romina
   Tucci, Michele
TI From software architecture to analysis models and back: Model-driven
   refactoring aimed at availability improvement
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architecture; Availability; Bidirectional model transformation;
   Refactoring
ID PETRI NETS
AB Context: With the ever-increasing evolution of software systems, their architecture is subject to frequent changes due to multiple reasons, such as new requirements. Appropriate architectural changes driven by non-functional requirements are particularly challenging to identify because they concern quantitative analyses that are usually carried out with specific languages and tools. A considerable number of approaches have been proposed in the last decades to derive non-functional analysis models from architectural ones. However, there is an evident lack of automation in the backward path that brings the analysis results back to the software architecture.
   Objective: In this paper, we propose a model-driven approach to support designers in improving the availability of their software systems through refactoring actions.
   Method: The proposed framework makes use of bidirectional model transformations to map UML models onto Generalized Stochastic Petri Nets (GSPN) analysis models and vice versa. In particular, after availability analysis, our approach enables the application of model refactoring, possibly based on well-known fault tolerance patterns, aimed at improving the availability of the architectural model.
   Results: We validated the effectiveness of our approach on an Environmental Control System. Our results show that the approach can generate: (i) an analyzable availability model from a software architecture description, and (ii) valid software architecture models back from availability models. Finally, our results highlight that the application of fault tolerance patterns significantly improves the availability in each considered scenario.
   Conclusion: The approach integrates bidirectional model transformation and fault tolerance techniques to support the availability-driven refactoring of architectural models. The results of our experiment showed the effectiveness of the approach in improving the software availability of the system.
C1 [Cortellessa, Vittorio; Eramo, Romina; Tucci, Michele] Univ Aquila, Dept Informat Engn Comp Sci & Math, Laquila, Italy.
C3 University of L'Aquila
RP Tucci, M (corresponding author), Univ Aquila, Dept Informat Engn Comp Sci & Math, Laquila, Italy.
EM vittorio.cortellessa@univaq.it; romina.eramo@univaq.it;
   michele.tucci@univaq.it
RI Tucci, Michele/IUO-7236-2023
OI Tucci, Michele/0000-0002-0329-1101; Eramo, Romina/0000-0002-3572-5875;
   Cortellessa, Vittorio/0000-0002-4507-464X
CR [Anonymous], 2015, UN MOD LANG
   Arcelli D, 2013, ELECTRON P THEOR COM, P33, DOI 10.4204/EPTCS.108.3
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Berardinelli L., 2013, COMBINING FUML PROFI, DOI [10.1145/2465478.2465493., DOI 10.1145/2465478.2465493]
   Berardinelli L, 2014, LECT NOTES COMPUT SC, V8627, P324, DOI 10.1007/978-3-319-09970-5_28
   Bernardi S., 2013, Model-Driven dependability assessment of software systems
   Bernardi S, 2006, IEEE INTERNET COMPUT, V10, P32, DOI 10.1109/MIC.2006.63
   Bernardi S, 2011, SOFTW SYST MODEL, V10, P313, DOI 10.1007/s10270-009-0128-1
   Bernardi Simona., 2002, Proceedings of the 3rd international workshop on Software and performance, P35, DOI DOI 10.1145/584369.584376
   Bondavalli A, 2001, COMPUT SYST SCI ENG, V16, P265
   Cardellini V, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P131, DOI 10.1145/1595696.1595718
   CHIOLA G, 1995, PERFORM EVALUATION, V24, P47, DOI 10.1016/0166-5316(95)00008-L
   Cicchetti A, 2011, LECT NOTES COMPUT SC, V6563, P183, DOI 10.1007/978-3-642-19440-5_11
   Cortellessa V., 2007, PROC 6 WORKING IEEEI, P25
   Cortellessa V, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P125, DOI 10.1109/ICSA.2018.00022
   Cortellessa V, 2011, MODEL-BASED SOFTWARE PERFORMANCE ANALYSIS, P1, DOI 10.1007/978-3-642-13621-4
   Eramo R., 2012, Proceedings of the 8th international ACM SIGSOFT conference on Quality of Software Architectures, P55
   Eramo R, 2015, P SLE 15, P49, DOI [10.1145/2814251.2814259, DOI 10.1145/2814251.2814259]
   Eramo R., 2018, P MDETOOLS WORKSH MO, V2245, P306
   Feiler P., 2006, ARCHITECTURE ANAL DE, P145
   Garlan D, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P131, DOI 10.1109/WICSA.2009.5290799
   Garlan David., 1997, Proceedings of the 1997 conference of the Centre for Advanced Studies on Collaborative research, page, P7
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Goseva-Popstojanova K, 2000, LECT NOTES COMPUT SC, V1769, P403
   Hettel T, 2008, LECT NOTES COMPUT SC, V5063, P31, DOI 10.1007/978-3-540-69927-9_3
   Hidaka S, 2016, SOFTW SYST MODEL, V15, P907, DOI 10.1007/s10270-014-0450-0
   Huszerl G, 2002, COMPUT J, V45, P260, DOI 10.1093/comjnl/45.3.260
   Kemme B., REPLICATION AVAILABI, P1, DOI [10.1007/978-1-4614-8265-9_80723., DOI 10.1007/978-1-4614-8265-9_80723.]
   MARSAN MA, 1984, ACM T COMPUT SYST, V2, P93, DOI 10.1145/190.191
   Marsan MA., 1994, Modelling with Generalized Stochastic Petri Nets
   Martens A., 2010, P 1 JOINT WOSP SIPEW, P105, DOI [DOI 10.1145/1712605.1712624, 10.1145]
   Muccini H, 2004, IEEE T SOFTWARE ENG, V30, P160, DOI 10.1109/TSE.2004.1271170
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Mustafiz S, 2008, SOFTW SYST MODEL, V7, P487, DOI 10.1007/s10270-008-0084-1
   Object Management Group (OMG), 2008, UML PROF MARTE MOD A
   OMG (Object Management Group), 2016, MOF QUER VIEW TRANSF
   Otero MC, 2004, INFORM SOFTWARE TECH, V46, P35, DOI 10.1016/S0950-5849(03)00108-3
   Popova-Zeugmann L., 2013, Time and Petri Nets
   Powell D., 1991, DELTA 4 GENERIC ARCH
   Saridakis T., 2002, P 2002 EUROPLOP C
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Stevens P, 2008, LECT NOTES COMPUT SC, V5235, P408, DOI 10.1007/978-3-540-88643-3_10
   Tang A, 2007, J SYST SOFTWARE, V80, P918, DOI 10.1016/j.jss.2006.08.040
   Tatibouet J., 2013, PRINCIPLES REALIZATI, V45
   Taylor Richard N., 2010, Software Architecture-Foundations, Theory, and Practice.
   Toeroe M., 2012, Service Availability: Principles and Practice, VFirst
   Weber M, 2003, LECT NOTES COMPUT SC, V2472, P124
NR 49
TC 10
Z9 10
U1 1
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2020
VL 127
AR 106362
DI 10.1016/j.infsof.2020.106362
PG 28
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NR0EE
UT WOS:000571236700001
OA hybrid
DA 2024-07-18
ER

PT J
AU Liu, Z
   Japkowicz, N
   Wang, RY
   Cai, YM
   Tang, DY
   Cai, XF
AF Liu, Zhen
   Japkowicz, Nathalie
   Wang, Ruoyu
   Cai, Yongming
   Tang, Deyu
   Cai, Xianfa
TI A statistical pattern based feature extraction method on system call
   traces for anomaly detection
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Feature extraction; Statistical pattern; System calls;
   Platform-independent; One-class learning; Anomaly detection
ID INTRUSION DETECTION SYSTEM; MALWARE DETECTION; ALGORITHMS; OUTLIERS;
   INTERNET
AB Context: In host-based anomaly detection, feature extraction on the system call traces is important to build an effective anomaly detection model. Different kinds of feature extraction methods are recently proposed and most of them aim at preserving the positional information of the system calls within a trace. These extracted features are generally named from system calls, therefore, cannot be used directly in the case of cross platform applications. In addition, some of these feature extraction methods are very costly to implement.
   Objective: This paper presents a new feature extraction method. It aims at extracting features that are irrelevant to the names of system calls. The samples represented by the extracted features can be directly used in the case of cross platform applications. In addition, this method is lightweight in that the feature values are not expensive to compute.
   Method: The proposed method firstly transforms the system calls in a trace into frequency sequences of n-grams and then explores a fixed number of statistical features on the frequency sequences. The extracted features are irrelevant to the names/indexes of system calls on a platform. The calculation of feature values works on the frequency sequences rather than on system call sequences. These feature vectors built on the training set with only normal data are then used to train a one class classification model for anomaly detection.
   Results: We compared our method with four previously proposed feature extraction methods on system call traces. When used on the same platform, even though our method does not always obtain the highest AUC, overall, it performs better than all the compared methods. When testing on cross platform, it performs the best among all compared methods.
   Conclusion: The features extracted by our method are platform-independent and are suitable for anomaly detection across platforms.
C1 [Liu, Zhen; Cai, Yongming; Tang, Deyu; Cai, Xianfa] Guangdong Pharmaceut Univ, Sch Med Informat Engn, Guangzhou 510006, Peoples R China.
   [Liu, Zhen; Japkowicz, Nathalie] Amer Univ, Dept Comp Sci, Washington, DC 20016 USA.
   [Wang, Ruoyu] South China Univ Technol, Informat & Network Engn & Res Ctr, Guangzhou 510041, Peoples R China.
   [Wang, Ruoyu] Commun & Comp Network Lab Guangdong, Guangzhou 510041, Peoples R China.
   [Liu, Zhen; Cai, Yongming; Tang, Deyu] Guangdong Prov Precise Med & Big Data Engn Techno, Guangzhou 510006, Peoples R China.
C3 Guangdong Pharmaceutical University; American University; South China
   University of Technology
RP Wang, RY (corresponding author), South China Univ Technol, Informat & Network Engn & Res Ctr, Guangzhou 510041, Peoples R China.; Wang, RY (corresponding author), Commun & Comp Network Lab Guangdong, Guangzhou 510041, Peoples R China.
EM rywang@scut.edu.cn
RI Wang, Ruoyu/I-6026-2018
OI Japkowicz, Nathalie/0000-0003-1176-1617
FU National Natural Science Foundation of China [61501128]; China
   Scholarship Council; Natural Science Foundation of Guangdong Province
   [2017A030313345, 2016A030310300, 2015A030310267]; Young Innovative
   Talents Project of Guangdong Universities [2017KQNCX107]
FX We thank the anonymous reviewers for their constructive comments. This
   work is supported by the National Natural Science Foundation of China
   [Grant No. 61501128], financial support from China Scholarship Council,
   Natural Science Foundation of Guangdong Province [Grant Nos.
   2017A030313345, 2016A030310300, 2015A030310267], the Young Innovative
   Talents Project of Guangdong Universities, grant number [Grant No.
   2017KQNCX107]. Thanks to Ezra Schwartz for implementing the
   Subsequence-Frequency feature set extraction on the ADFA-LD data.
CR Aghaei E, 2017, International Journal of Hybrid Intelligent Systems, V14, P141
   Agrawal S, 2015, PROCEDIA COMPUT SCI, V60, P708, DOI 10.1016/j.procs.2015.08.220
   Ahmed M, 2016, J NETW COMPUT APPL, V60, P19, DOI 10.1016/j.jnca.2015.11.016
   [Anonymous], 2014, ACM SIGKDD EXPLOR NE, DOI DOI 10.1145/2594473.2594476
   Auld T, 2007, IEEE T NEURAL NETWOR, V18, P223, DOI 10.1109/TNN.2006.883010
   Bellinger C., 2017, INT WORKSH LEARN IMB, P64
   Bellinger C, 2012, 2012 11TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2012), VOL 2, P102, DOI 10.1109/ICMLA.2012.212
   Bhuyan MH, 2014, IEEE COMMUN SURV TUT, V16, P303, DOI 10.1109/SURV.2013.052213.00046
   Breunig MM, 2000, SIGMOD REC, V29, P93, DOI 10.1145/335191.335388
   Buczak AL, 2016, IEEE COMMUN SURV TUT, V18, P1153, DOI 10.1109/COMST.2015.2494502
   Cox V., 2017, Translating Statistics to Make Decisions: A Guide for the Non-Statistician, V1st
   Creech G, 2014, IEEE T COMPUT, V63, P807, DOI 10.1109/TC.2013.13
   Creech G, 2013, 2013 IEEE WIRELESS COMMUNICATIONS AND NETWORKING CONFERENCE (WCNC), P4487
   DAS P, 2017, INT CONF COMP COMMUN
   Dey SK, 2020, SYMMETRY-BASEL, V12, DOI 10.3390/sym12010007
   Forrest S, 1996, P IEEE S SECUR PRIV, P120, DOI 10.1109/SECPRI.1996.502675
   Gibert D, 2020, J NETW COMPUT APPL, V153, DOI 10.1016/j.jnca.2019.102526
   Glass-Vanderlan T.R., 2018, ACM COMPUT SURV, V52, P1
   Haider W, 2017, J NETW COMPUT APPL, V87, P185, DOI 10.1016/j.jnca.2017.03.018
   Jabez J, 2015, PROCEDIA COMPUT SCI, V48, P338, DOI 10.1016/j.procs.2015.04.191
   Jerlin MA, 2018, J APPL SEC RES, V13, P45, DOI 10.1080/19361610.2018.1387734
   Jing XY, 2019, IEEE COMMUN SURV TUT, V21, P586, DOI 10.1109/COMST.2018.2863942
   Kang DK, 2005, PROCEEDINGS FROM THE SIXTH ANNUAL IEEE SYSTEMS, MAN AND CYBERNETICS INFORMATION ASSURANCE WORKSHOP, P118, DOI 10.1109/IAW.2005.1495942
   Karami A, 2018, EXPERT SYST APPL, V108, P36, DOI 10.1016/j.eswa.2018.04.038
   Khreich W, 2017, INFORM SOFTWARE TECH, V91, P186, DOI 10.1016/j.infsof.2017.07.009
   Kontaki M, 2016, INFORM SYST, V55, P37, DOI 10.1016/j.is.2015.07.006
   Liao YH, 2002, COMPUT SECUR, V21, P439, DOI 10.1016/S0167-4048(02)00514-X
   Liu FT, 2008, IEEE DATA MINING, P413, DOI 10.1109/ICDM.2008.17
   Liu Z, 2019, J NETW COMPUT APPL, V125, P190, DOI 10.1016/j.jnca.2018.10.018
   Lorena LHN, 2015, J INTELL ROBOT SYST, V80, pS227, DOI 10.1007/s10846-014-0101-2
   Mishra P, 2020, IEEE T CLOUD COMPUT, V8, P957, DOI 10.1109/TCC.2018.2829202
   Mishra P, 2019, IEEE COMMUN SURV TUT, V21, P686, DOI 10.1109/COMST.2018.2847722
   Qamar A, 2019, FUTURE GENER COMP SY, V97, P887, DOI 10.1016/j.future.2019.03.007
   Singh K., 2012, Int. J. Comput. Sci. Issues, V9, P307
   Swersky L, 2016, PROCEEDINGS OF 3RD IEEE/ACM INTERNATIONAL CONFERENCE ON DATA SCIENCE AND ADVANCED ANALYTICS, (DSAA 2016), P1, DOI 10.1109/DSAA.2016.8
   Syarif I., 2012, NETWORKED DIGITAL TE, P135, DOI [DOI 10.1007/978-3-642-30507-813, DOI 10.1007/978-3-642-30507-8_13]
   Tang B, 2017, NEUROCOMPUTING, V241, P171, DOI 10.1016/j.neucom.2017.02.039
   Thakkar P., 2016, Int. J. Comput. Appl, V136, P13
   Tong F, 2017, J PARALLEL DISTR COM, V103, P22, DOI 10.1016/j.jpdc.2016.10.012
   Xie M, 2014, 2014 11TH INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS AND KNOWLEDGE DISCOVERY (FSKD), P978, DOI 10.1109/FSKD.2014.6980972
   Xie M, 2014, LECT NOTES COMPUT SC, V8792, P542, DOI 10.1007/978-3-319-11698-3_44
   Xie M, 2013, 2013 6TH INTERNATIONAL CONGRESS ON IMAGE AND SIGNAL PROCESSING (CISP), VOLS 1-3, P1711, DOI 10.1109/CISP.2013.6743952
   Yasami Y, 2010, J SUPERCOMPUT, V53, P231, DOI 10.1007/s11227-009-0338-x
   Zhang K, 2009, LECT NOTES ARTIF INT, V5476, P813, DOI 10.1007/978-3-642-01307-2_84
NR 44
TC 14
Z9 14
U1 5
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2020
VL 126
AR 106348
DI 10.1016/j.infsof.2020.106348
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NT9PE
UT WOS:000573271800004
DA 2024-07-18
ER

PT J
AU Li, N
   Shepperd, M
   Guo, YC
AF Li, Ning
   Shepperd, Martin
   Guo, Yuchen
TI A systematic review of unsupervised learning techniques for software
   defect prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Unsupervised learning; Software defect prediction; Machine learning;
   Systematic review; Meta-analysis
ID PERFORMANCE
AB Background: Unsupervised machine learners have been increasingly applied to software defect prediction. It is an approach that may be valuable for software practitioners because it reduces the need for labeled training data.
   Objective: Investigate the use and performance of unsupervised learning techniques in software defect prediction.
   Method: We conducted a systematic literature review that identified 49 studies containing 2456 individual experimental results, which satisfied our inclusion criteria published between January 2000 and March 2018. In order to compare prediction performance across these studies in a consistent way, we (re-)computed the confusion matrices and employed the Matthews Correlation Coefficient (MCC) as our main performance measure.
   Results: Our meta-analysis shows that unsupervised models are comparable with supervised models for both within-project and cross-project prediction. Among the 14 families of unsupervised model, Fuzzy CMeans (FCM) and Fuzzy SOMs (FSOMs) perform best. In addition, where we were able to check, we found that almost 11% (262/2456) of published results (contained in 16 papers) were internally inconsistent and a further 33% (823/2456) provided insufficient details for us to check.
   Conclusion: Although many factors impact the performance of a classifier, e.g., dataset characteristics, broadly speaking, unsupervised classifiers do not seem to perform worse than the supervised classifiers in our review. However, we note a worrying prevalence of (i) demonstrably erroneous experimental results, (ii) undemanding benchmarks and (iii) incomplete reporting. We therefore encourage researchers to be comprehensive in their reporting.
C1 [Li, Ning] Northwestern Polytech Univ, Sch Comp Sci, Xian 710072, Peoples R China.
   [Shepperd, Martin] Brunel Univ London, Uxbridge UB8 3PH, Middx, England.
   [Guo, Yuchen] Xi An Jiao Tong Univ, Dept Comp Sci & Technol, Xian 710049, Peoples R China.
   [Li, Ning] Minist Ind & Informat Technol, Key Lab Big Data Storage & Management, Xian 710072, Peoples R China.
C3 Northwestern Polytechnical University; Brunel University; Xi'an Jiaotong
   University
RP Shepperd, M (corresponding author), Brunel Univ London, Uxbridge UB8 3PH, Middx, England.
EM martin.shepperd@brunel.ac.uk
RI Shepperd, Martin/F-9683-2013; li, ning/AEF-2365-2022
OI Shepperd, Martin/0000-0003-1874-6145; li, ning/0000-0001-7394-0640; ,
   Yuchen/0000-0003-2756-9216
FU National Key Basic Research Program of China [2018YFB1004401]; National
   Natural Science Foundation of China [61972317, 61402370]
FX We would like to thank the editors and the anonymous reviewers for their
   insightful comments and suggestions. We also wish to acknowledge the use
   of the DConfusion tool developed by David Bowes and David Gray whilst at
   the University of Hertfordshire. This work was supported by the National
   Key Basic Research Program of China [2018YFB1004401]; the National
   Natural Science Foundation of China [61972317, 61402370].
CR [Anonymous], SCIENTOMETRICS
   [Anonymous], SYSTEMATIC REV UNSUP
   [Anonymous], 2012, EFFECT SIZES RES UNI
   Baldi P, 2000, BIOINFORMATICS, V16, P412, DOI 10.1093/bioinformatics/16.5.412
   Boucher A, 2016, 2016 4TH INTL CONF ON APPLIED COMPUTING AND INFORMATION TECHNOLOGY/3RD INTL CONF ON COMPUTATIONAL SCIENCE/INTELLIGENCE AND APPLIED INFORMATICS/1ST INTL CONF ON BIG DATA, CLOUD COMPUTING, DATA SCIENCE & ENGINEERING (ACIT-CSII-BCD), P169, DOI [10.1109/ACIT-CSII-BCD.2016.41, 10.1109/ACIT-CSII-BCD.2016.042]
   Bowes D, 2014, AUTOMAT SOFTW ENG, V21, P287, DOI 10.1007/s10515-013-0129-8
   Bushman B. J., VOTE COUNTING PROCED, P207
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Chambers J.M., 1983, Graphical Methods for Data Analysis
   Cirasella J., 2015, COLL RES LIB NEWS, V76, P132, DOI [DOI 10.5860/CRLN.76.3.9277, 10.5860/crln.76.3.9277]
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Flach PA, 2015, ADV NEUR IN, V28
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hand DJ, 2009, MACH LEARN, V77, P103, DOI 10.1007/s10994-009-5119-5
   Hu Z, 2016, 2016 PROGRESS IN ELECTROMAGNETICS RESEARCH SYMPOSIUM (PIERS), P134, DOI 10.1109/PIERS.2016.7734268
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kohavi R., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1137
   Michie D., 1994, Neural Stat. Classification, V13
   Mosteller F, 1996, ANNU REV PUBL HEALTH, V17, P1, DOI 10.1146/annurev.pu.17.050196.000245
   Munafò MR, 2017, NAT HUM BEHAV, V1, DOI 10.1038/s41562-016-0021
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   WASSERMAN S, 1988, J EDUC STAT, V13, P75
NR 27
TC 104
Z9 107
U1 2
U2 52
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2020
VL 122
AR 106287
DI 10.1016/j.infsof.2020.106287
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LC4TR
UT WOS:000525318800008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Farias, MAD
   Neto, MGD
   Kalinowski, M
   Spínola, RO
AF de Freitas Farias, Mario Andre
   de Mendonca Neto, Manoel Gomes
   Kalinowski, Marcos
   Spinola, Rodrigo Oliveira
TI Identifying self-admitted technical debt through code comment analysis
   with a contextualized vocabulary
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technical debt; Self-admitted technical debt; Technical debt
   identification; Code comment analysis
ID MANAGEMENT
AB Context Previous work has shown that one can explore code comments to detect Self-Admitted Technical Debt (SATD) using a contextualized vocabulary. However, current detection strategies still return a large number of false positives items. Moreover, those strategies do not allow the automatic identification of the type of debt of the identified items.
   Objective: This work applies, evaluates, and improves a set of contextualized patterns we built to detect self-admitted technical debt using code comment analysis. We refer to this set of patterns as the self-admitted technical debt identification vocabulary.
   Method: We carry out three empirical studies. Firstly, 23 participants analyze the patterns of a previously defined contextualized vocabulary and register their level of importance in identifying SAID items. Secondly, we perform a qualitative analysis to investigate the relation between each pattern and types of debt. Finally, we perform a feasibility study using a new vocabulary, improved based on the results of the previous empirical studies, to automatically identify self-admitted technical debt items, and types of debt, that exist in three open source projects.
   Results: More than half of the new patterns were considered decisive or very decisive to detect technical debt items. The new vocabulary was able to find items associated to code, design, defect, documentation, and requirement debt. Thus, the result of the work is an improved vocabulary that considers the level of importance of each pattern and the relationship between patterns and debt types to support the identification and classification of SAID items.
   Conclusion: The studies allowed us to improve a vocabulary to identify self-admitted technical debt items through code comments analysis. The results show that the use of pattern-based code comment analysis can contribute to improve existing methods, or create new ones, for automatically identifying and classifying technical debt items.
C1 [de Freitas Farias, Mario Andre] Fed Inst Sergipe, Undergrad Program Syst Informat, Aracaju, Brazil.
   [de Mendonca Neto, Manoel Gomes] Univ Fed Bahia, Dept Comp Sci, Salvador, BA, Brazil.
   [de Mendonca Neto, Manoel Gomes] Univ Fed Bahia, Fraunhofer Project Ctr Software & Syst Engn, Salvador, BA, Brazil.
   [Kalinowski, Marcos] Pontifical Catholic Univ Rio De Janeiro PUC Rio, Dept Informat, Rio De Janeiro, Brazil.
   [Spinola, Rodrigo Oliveira] Univ Salvador, Grad Program Syst & Comp, Salvador, BA, Brazil.
   [Spinola, Rodrigo Oliveira] Univ Estado Bahia, Alagoinhas, BA, Brazil.
C3 Instituto Federal de Sergipe (IFS); Universidade Federal da Bahia;
   Universidade Federal da Bahia; Pontificia Universidade Catolica do Rio
   de Janeiro; Universidad de El Salvador; Universidade Salvador (UNIFACS);
   Universidade do Estado Bahia
RP Spínola, RO (corresponding author), Univ Salvador, Grad Program Syst & Comp, Salvador, BA, Brazil.
EM mario.andre@ifs.edu.br; manoel.mendonca@ufba.br;
   kalinowski@inf.puc-rio.br; rodrigo.spinola@unifacs.br
RI Mendonca, Manoel/A-1579-2011; Farias, Mário/AAM-3649-2020
OI Mendonca, Manoel/0000-0002-0874-7665; Farias, Mário/0000-0002-4111-1298;
   Kalinowski, Marcos/0000-0003-1445-3425
CR Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2012, EXPT SOFTWARE ENG, DOI DOI 10.1007/978-3-642-29044-2
   [Anonymous], 2012, CONTEXT
   Avgeriou P., 2016, DAGSTUHL SEMINAR 161, V6
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Bohnet J., 2011, Proceedings of the 2nd Workshop on Managing Technical Debt, P9, DOI [DOI 10.1145/1985362.1985365, 10.1145/1985362.1985365]
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Farias MAD, 2017, LECT NOTES BUS INF P, V291, P284, DOI 10.1007/978-3-319-62386-3_14
   Farias MAD, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P25, DOI 10.1109/MTD.2015.7332621
   de Souza S., 2006, J BRAZ COMPUT SOC, V12, P31, DOI DOI 10.1007/BF03194494
   Freitas JL, 2012, IEEE ANNU SOFTW ENG, P11, DOI 10.1109/SEW.2012.8
   Gupta S, 2013, CONF PROC INT SYMP C, P3, DOI 10.1109/ICPC.2013.6613828
   Howard MJ, 2013, IEEE WORK CONF MIN S, P377, DOI 10.1109/MSR.2013.6624052
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   ICT Services and System Development and Division of Epidemiology and Global Health, 2013, OPENCODE 4 0
   Jinqiu Yang, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P161, DOI 10.1109/MSR.2012.6224276
   Maalej Walid, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P191, DOI 10.1109/MSR.2010.5463344
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Passos AFD, 2015, PROCEEDINGS OF THE 17TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY (SBQS), P21, DOI 10.1145/3275245.3275248
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Rios N, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268917
   Rios N, 2018, INFORM SOFTWARE TECH, V102, P117, DOI 10.1016/j.infsof.2018.05.010
   Salviulo F, 2014, P 18 INT C EVALUATIO, P1
   Shull F, 2008, GUIDE ADV EMPIRICAL
   Silva MD, 2016, DIAITA SCRIPT REAL, P1, DOI 10.14195/978-989-26-1193-8
   Spínola RO, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P1, DOI 10.1109/MTD.2013.6608671
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Storey MA, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P251, DOI 10.1145/1368088.1368123
   Sullivan Gail M, 2013, J Grad Med Educ, V5, P541, DOI 10.4300/JGME-5-4-18
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Wongthongtham P, 2009, IEEE T KNOWL DATA EN, V21, P1205, DOI 10.1109/TKDE.2008.209
NR 39
TC 18
Z9 18
U1 2
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2020
VL 121
AR 106270
DI 10.1016/j.infsof.2020.106270
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT0NB
UT WOS:000518706200006
DA 2024-07-18
ER

PT J
AU Espinosa, E
   Acuña, ST
   Vegas, S
   Juristo, N
AF Espinosa, Edison
   Teresita Acuna, Silvia
   Vegas, Sira
   Juristo, Natalia
TI Adopting configuration management principles for managing experiment
   materials in families of experiments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Experimental software engineering; Experiment replication; Experimental
   material; Experimental software configuration management
ID TESTING TECHNIQUES; REPLICATION; KNOWLEDGE; TOOLS
AB Context: Replication is a key component of experimentation for verifying previous results and findings. Experiment replication requires products like documentation describing the baseline experiment and a version of the experimental material. When replicating an experiment, changes may have to be made to some of the products, leading to new or modified versions of materials. After the replication has been conducted, part of or all the materials should be added to the family history or to the baseline experiment documentation. As the number of replications increases, more versions of the materials are generated. This can lead to product management chaos in replications sharing the same protocol.
   Objective: The aim of this paper is to adopt configuration management principles to manage experimental materials. We apply and validate these principles in a code inspection technique comparison experiment and a personality quasi-experiment.
   Method: The study was conducted within a research group with lengthy experience in experiment replication. This research group has had trouble with the management of the materials used to run some of the experiments replicated by other colleagues. This is a suitable context for applying action research. We used action research to adopt the configuration management principles and build a materials management framework.
   Result: We generated the instances of an experiment and a quasi-experiment, identifying the status and traceability of the materials. Additionally, we documented the workload required for instantiation in person-hours. We also checked the ease of use and understanding of the framework for instantiating the personality quasi-experiment configuration plan executed by researchers who did not develop the framework, as well as its usefulness for managing the experimental materials.
   Conclusion: The experimental materials management framework is useful for establishing the status and traceability of the experimental materials. Additionally, it improves the storage, search, location and retrieval of the experimental material versions.
C1 [Espinosa, Edison] Univ Fuerzas Armadas ESPE, Dept Comp, Ave Gen Ruminahui S-N & Paseo Escen Santa Clara, Quito, Ecuador.
   [Teresita Acuna, Silvia] Univ Autonoma Madrid, Escuela Politecn Super, Calle Francisco Tomas & Valiente 11, E-28049 Madrid, Spain.
   [Vegas, Sira; Juristo, Natalia] Univ Politecn Madrid, Escuela Tecn Super Ingenieros Informat, Campus Montegancedo S-N, E-28660 Madrid, Spain.
C3 Escuela Politecnica Superior del Ejercito; Autonomous University of
   Madrid; Universidad Politecnica de Madrid
RP Espinosa, E (corresponding author), Univ Fuerzas Armadas ESPE, Dept Comp, Ave Gen Ruminahui S-N & Paseo Escen Santa Clara, Quito, Ecuador.
EM egespinosa1@espe.edu.ec; silvia.acunna@uam.es; svegas@fi.upm.es;
   natalia@fi.upm.es
RI Acuña, Silvia/A-7395-2008; Furtado, Kássia/AAU-5007-2020; Vegas,
   Sira/R-6742-2018
FU Universidad de las Fuerzas Armadas ESPE [10-010-LSC-C-ESPE-a2]; National
   Secretariat of Higher Education, Science, Technology and Innovation of
   the Ecuadorian Government (SENESCYT) [025-CEB-2010]; Spanish Ministry of
   Science, Innovation and Universities research grant
   [PGC2018-097265-B-I00]; R&D program of the Madrid Region
   [P2018/TCS-4314]; MASSIVE [RTI2018-095222-B-I00]
FX This research was funded by a grant from the Universidad de las Fuerzas
   Armadas ESPE (10-010-LSC-C-ESPE-a2), National Secretariat of Higher
   Education, Science, Technology and Innovation of the Ecuadorian
   Government (SENESCYT) (025-CEB-2010) and partially funded by the Spanish
   Ministry of Science, Innovation and Universities research grant
   PGC2018-097265-B-I00 and MASSIVE (RTI2018-095222-B-I00). Also this
   research was supported by the R&D program of the Madrid Region
   (P2018/TCS-4314).
CR Acuña ST, 2008, EMPIR SOFTW ENG, V13, P401, DOI 10.1007/s10664-008-9074-8
   [Anonymous], LAB PACKAGE EMPIRICA
   [Anonymous], SOFTWARE CONFIGURATI
   [Anonymous], PRAGMATIC DOCUMENTS
   [Anonymous], THESIS
   [Anonymous], 2005, Revision of IEEE Standard 828-1998, P1, DOI [10.1109/IEEESTD.2005.96464, DOI 10.1109/IEEESTD.2005.96464]
   [Anonymous], 2013, BASICS SOFTWARE ENG
   [Anonymous], 2003, CMMI guidlines for process integration and product improvement
   [Anonymous], P 10 NORD WORKSH PRO
   [Anonymous], P INT A ERSH MEM C P
   [Anonymous], SCIENCE
   [Anonymous], P ISERN M
   [Anonymous], 2012, RES CHALL INF SCI RC
   Apa C, 2014, EMPIR SOFTW ENG, V19, P378, DOI 10.1007/s10664-013-9267-7
   Babich WayneA., 1986, Software Configuration Management: Coordination for Team Productivity
   Baker M, 2016, NATURE, V533, P452, DOI 10.1038/533452a
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   DALY J, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P50, DOI 10.1109/ICSM.1994.336790
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Espinosa E, 2018, ADV INTELL SYST, V721, P252, DOI 10.1007/978-3-319-73450-7_25
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   IEEE, 1990, IEEE STANDARD 610 12
   ISO/IEC/IEEE, 2017, ISO/IEC/IEEE 12207:2017
   Jones AR, 2010, METHODS MOL BIOL, V604, P333, DOI 10.1007/978-1-60761-444-9_23
   Juristo N., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P330, DOI 10.1109/ICST.2012.113
   Kamsties E., 1995, Software Engineering - ESEC '95. 5th European Software Engineering Conference. Proceedings, P362
   KOSHY E., 2010, ACTION RES HLTHCARE
   Lewin K, 1946, J SOC ISSUES, V2, P34, DOI 10.1111/j.1540-4560.1946.tb02295.x
   Lewis JR, 2009, LECT NOTES COMPUT SC, V5619, P94, DOI 10.1007/978-3-642-02806-9_12
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Lopes Vitor Pires, 2009, Proceedings of the 2009 23rd Brazilian Symposium on Software Engineering. SBES 2009, P32, DOI 10.1109/SBES.2009.12
   MCTAGGART R, 1991, ADULT EDUC QUART, V41, P168, DOI 10.1177/0001848191041003003
   Mendongal MG, 2008, IEEE INT C ENG COMP, P203, DOI 10.1109/ICECCS.2008.38
   Meyer J, 2000, BMJ-BRIT MED J, V320, P178, DOI 10.1136/bmj.320.7228.178
   Paton NW, 2008, BIOCHEM SOC T, V36, P33, DOI 10.1042/BST0360033
   Porter A., 1998, Empirical Software Engineering, V3, P355, DOI 10.1023/A:1009776104355
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
   Shull F, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P7, DOI 10.1109/ISESE.2002.1166920
   Solari M, 2018, INFORM SOFTWARE TECH, V97, P64, DOI 10.1016/j.infsof.2017.12.016
   Stefik A., 2011, P 3 ACM SIGPLAN WORK, DOI DOI 10.1145/2089155.2089159
   Vegas S., 2006, International Symposium on Empirical Software Engineering, P28, DOI DOI 10.1145/1159733.1159741
   Wohlin C., 2012, Experimentation in Software Engineering
NR 42
TC 1
Z9 1
U1 1
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2019
VL 113
BP 39
EP 67
DI 10.1016/j.infsof.2019.05.003
PG 29
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IE1DW
UT WOS:000472127100003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Mottos, DI
   Bosch, J
   Olsson, HH
AF Mottos, David Issa
   Bosch, Jan
   Olsson, Helena Holmstrom
TI Multi-armed bandits in the wild: Pitfalls and strategies in online
   experiments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Online experiments; Multi-armed bandit; A/B tests; Multi-armed bandit
   pitfalls
ID MODEL
AB Context: Delivering faster value to customers with online experimentation is an emerging practice in industry. Multi-Armed Bandit (MAB) based experiments have the potential to deliver even faster results with a better allocation of resources over traditional A/B experiments. However, the incorrect use of MAB-based experiments can lead to incorrect conclusions that can potentially hurt the company's business.
   Objective: The objective of this study is to understand the pitfalls and restrictions of using MABs in online experiments, as well as the strategies that are used to overcome them.
   Method: This research uses a multiple case study method with eleven experts across five software companies and simulations to triangulate the data of some of the identified limitations.
   Results: This study analyzes some limitations faced by companies using MAB and discusses strategies used to overcome them. The results are summarized into practitioners' guidelines with criteria to select an appropriated experimental design.
   Conclusion: MAB algorithms have the potential to deliver even faster results with a better allocation of resources over traditional A/B experiments. However, potential mistakes can occur and hinder the potential benefits of such approach. Together with the provided guidelines, we aim for this paper to be used as reference material for practitioners during the design of an online experiment.
C1 [Mottos, David Issa; Bosch, Jan] Chalmers Univ Technol, Comp Sci & Engn, Horselgangen 4, Gothenburg, Sweden.
   [Olsson, Helena Holmstrom] Malmo Univ, Malmo, Sweden.
C3 Chalmers University of Technology; Malmo University
RP Mottos, DI (corresponding author), Chalmers Univ Technol, Comp Sci & Engn, Horselgangen 4, Gothenburg, Sweden.
EM davidis@chalmers.se; jan.bosch@chalmers.se;
   helena.holmstrom.olsson@mah.se
RI Olsson, Helena H/H-2193-2014
OI Issa Mattos, David/0000-0002-2501-9926
FU Wallenberg Artificial Intelligence, Autonomous Systems and Software
   Program (WASP) - Knut and Alice Wallenberg Foundation
FX This work was partially supported by the Wallenberg Artificial
   Intelligence, Autonomous Systems and Software Program (WASP) funded by
   the Knut and Alice Wallenberg Foundation. The authors also thank the
   companies and the interviewees involved in this study for the
   opportunity to conduct this study with them. Finally, the authors
   gratefully acknowledge anonymous reviewers, whose comments significantly
   improved this paper.
CR [Anonymous], 2013, 2013 INT JOINT C NEU, DOI DOI 10.1109/IJCNN.2013.6707036
   [Anonymous], 2012, ED RES PLANNING COND
   [Anonymous], 2014, RCOSE 2014 P
   [Anonymous], 2017, DEMOCRATIZING ONLINE
   [Anonymous], 2018, SPE192971MS
   [Anonymous], 2015, SURVEY ONLINE EXPT D
   [Anonymous], P INT JT C NEUR NETW
   [Anonymous], 2017, P 39 INT C SOFTW ENG
   [Anonymous], 2015, Encyclopedia of Machine Learning and Data Mining
   [Anonymous], CONTIN SOFTW ENG
   [Anonymous], GOOGLE ANAL HELP PAG
   [Anonymous], WWW 2010
   Bakshy E, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P283, DOI 10.1145/2566486.2567967
   Bosch J, 2012, LECT NOTES BUS INF P, V114, P27
   Bottou L, 2013, J MACH LEARN RES, V14, P3207
   Crook T, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1105
   Deng A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P77, DOI 10.1145/2939672.2939700
   Dmitriev P, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1427, DOI 10.1145/3097983.3098024
   Dmitriev P, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON BIG DATA (BIG DATA), P1367, DOI 10.1109/BigData.2016.7840744
   Dmitriev P, 2016, CIKM'16: PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P429, DOI 10.1145/2983323.2983356
   Fabijan A, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P18, DOI 10.1109/SEAA.2017.47
   Fabijan A, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P9, DOI 10.1109/SEAA.2016.59
   Fagerholm F, 2017, J SYST SOFTWARE, V123, P292, DOI 10.1016/j.jss.2016.03.034
   Feraud R., 2012, J. Mach. Learn. Res. Track, V25, P129
   Guha S., 2010, Multiarmed Bandit Problems with Delayed Feedback
   Gui H, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P399, DOI 10.1145/2736277.2741081
   He J, 2010, NINTH WUHAN INTERNATIONAL CONFERENCE ON E-BUSINESS, VOLS I-III, P1061
   He X, 2014, P 8 INT WORKSHOP DAT, P1, DOI [DOI 10.1145/2648584.2648589, 10.1145/2648584.2648589]
   Hern A., 2014, GUARDIAN
   Jamieson K., 2017, FDR Control with Adaptive Sequential Experimental Design, P1
   Juristo N., 2001, Basics of Software Engineering Experimentation, V5/6
   Kevic K, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P123, DOI 10.1109/ICSE-SEIP.2017.19
   Kievit RA, 2013, FRONT PSYCHOL, V4, DOI 10.3389/fpsyg.2013.00513
   Kohavi R, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P1857, DOI 10.1145/2623330.2623341
   Kohavi R, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1168
   Kohavi R, 2009, DATA MIN KNOWL DISC, V18, P140, DOI 10.1007/s10618-008-0114-1
   Kohavi Ron, P 18 ACM SIGKDD INT, P786, DOI 10.1145/2339530.2339653
   Kuleshov V., 2014, J. Mach. Learn. Res., V1, P1
   Li LJ, 2011, METAGENOMICS OF THE HUMAN BODY, P297, DOI 10.1007/978-1-4419-7089-3_14
   Li LH, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P413, DOI 10.1145/2684822.2697040
   Mattos DI, 2018, LECT NOTES COMPUT SC, V11271, P182, DOI 10.1007/978-3-030-03673-7_14
   Mongomery D., 2017, Montgomery: design and analysis of experiments
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schermann G, 2018, INFORM SOFTWARE TECH, V99, P41, DOI 10.1016/j.infsof.2018.02.010
   Scott S.L., 2015, Applied Stochastic Models in Business and Industry, V31
   Sculley D, 2015, ADV NEUR IN, V28
   Stucchio C., 2015, Saturday is not Tuesday
   Sutton R.S., 1998, Sutton Barto Book: Reinforcement Learning: An Introduction
   Tang D., 2010, P 16 ACM SIGKDD INT, P17, DOI [DOI 10.1145/1835804.1835810, 10.1145/1835804.1835810]
   White John, 2012, Bandit algorithms for website optimization
   Xinxi Wang, 2014, ACM Transactions on Multimedia Computing, Communications and Applications, V11, DOI 10.1145/2623372
   Yang F., 2017, J COMMUN INF NETW, V2, P1, DOI [10.1007/s41650-017-0018-6, DOI 10.1007/S41650-017-0018-6]
NR 52
TC 10
Z9 13
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2019
VL 113
BP 68
EP 81
DI 10.1016/j.infsof.2019.05.004
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IE1DW
UT WOS:000472127100004
DA 2024-07-18
ER

PT J
AU Malhotra, R
   Khanna, M
AF Malhotra, Ruchika
   Khanna, Megha
TI Dynamic selection of fitness function for software change prediction
   using Particle Swarm Optimization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Change proneness; Empirical validation; Fitness function; Particle Swarm
   Optimization
ID CHANGE-PRONE CLASSES; DEFECT PREDICTION; CLASSIFICATION; METRICS;
   ALGORITHMS; FRAMEWORK; PROJECTS; MODULES; MODELS; SUITE
AB Context: Over the past few years, researchers have been actively searching for an effective classifier which correctly predicts change prone classes. Though, few researchers have ascertained the predictive capability of search-based algorithms in this domain, their effectiveness is highly dependent on the selection of an optimum fitness function. The criteria for selecting one fitness function over the other is the improved predictive capability of the developed model on the entire dataset. However, it may be the case that various subsets of instances of a dataset may give best results with a different fitness function.
   Objective: The aim of this study is to choose the best fitness function for each instance rather than the entire dataset so as to create models which correctly ascertain the change prone nature of majority of instances. Therefore, we propose a novel framework for the adaptive selection of a dynamic optimum fitness function for each instance of the dataset, which would correctly determine its change prone nature.
   Method: The predictive models in this study are developed using seven different fitness variants of Particle Swarm Optimization (PSO) algorithm. The proposed framework predicts the best suited fitness variant amongst the seven investigated fitness variants on the basis of structural characteristics of a corresponding instance.
   Results: The results of the study are empirically validated on fifteen datasets collected from popular open-source software. The proposed adaptive framework was found efficient in determination of change prone classes as it yielded improved results when compared with models developed using individual fitness variants and fitness-based voting ensemble classifiers.
   Conclusion: The performance of the models developed using the proposed adaptive framework were statistically better than the models developed using individual fitness variants of PSO algorithm and competent to models developed using machine learning ensemble classifiers.
C1 [Malhotra, Ruchika; Khanna, Megha] Delhi Technol Univ, Dept Comp Sci & Engn, Discipline Software Engn, Delhi, India.
   [Khanna, Megha] Univ Delhi, Sri Guru Gobind Singh Coll Commerce, Delhi, India.
C3 Delhi Technological University; University of Delhi
RP Malhotra, R (corresponding author), Delhi Technol Univ, Dept Comp Sci & Engn, Discipline Software Engn, Delhi, India.
EM ruchikamalhotra@dtu.ac.in
RI Malhotra, Ruchika/ABC-3126-2020
OI Malhotra, Ruchika/0000-0003-3872-6213
CR Abdelhalim M. B., 2009, PARTICLE SWARM OPTIM
   Abdi Y, 2015, INNOV SYST SOFTW ENG, V11, P289, DOI 10.1007/s11334-015-0258-2
   Aljamaan HI, 2009, 2009 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DATA MINING, P187, DOI 10.1109/CIDM.2009.4938648
   [Anonymous], P 9 IEEE WORK C MIN
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Aslam MW, 2015, 2015 SCIENCE AND INFORMATION CONFERENCE (SAI), P489, DOI 10.1109/SAI.2015.7237187
   Azar D, 2011, INFORM SOFTWARE TECH, V53, P388, DOI 10.1016/j.infsof.2010.11.013
   Azzeh M, 2014, 2014 13TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P409, DOI 10.1109/ICMLA.2014.73
   Bansal A, 2017, COMPUT LANG SYST STR, V47, P211, DOI 10.1016/j.cl.2016.10.001
   Bardsiri VK, 2014, EMPIR SOFTW ENG, V19, P857, DOI 10.1007/s10664-013-9241-4
   Bhowan U, 2012, IEEE T SYST MAN CY B, V42, P406, DOI 10.1109/TSMCB.2011.2167144
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Clerc M, 2002, IEEE T EVOLUT COMPUT, V6, P58, DOI 10.1109/4235.985692
   de Carvalho AB, 2010, J SYST SOFTWARE, V83, P868, DOI 10.1016/j.jss.2009.12.023
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Di Geronimo L., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P785, DOI 10.1109/ICST.2012.177
   Di Martino Sergio, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P247, DOI 10.1007/978-3-642-21843-9_20
   Di Nucci D, 2017, IEEE TETCI, V1, P202, DOI 10.1109/TETCI.2017.2699224
   Eberhart R.C., 1995, Proc Int Symp Micro Mach Hum Sci, P39, DOI [DOI 10.1109/MHS.1995.494215, 10.1109/mhs.1995.494215]
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Elish MO, 2013, J SOFTW-EVOL PROC, V25, P407, DOI 10.1002/smr.1549
   Ferrucci Filomena, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P89, DOI 10.1109/SSBSE.2010.20
   Ferrucci F, 2018, EVOL COMPUT, V26, P535, DOI [10.1162/EVCO_a_00213, 10.1162/evco_a_00213]
   Friedman J, 2000, ANN STAT, V28, P337, DOI 10.1214/aos/1016218223
   Friedman M, 1937, J AM STAT ASSOC, V32, P675, DOI 10.2307/2279372
   Hall M. A., 2000, P 17 INT C MACH LEAR, P359, DOI DOI 10.5555/645529.657793
   Harman M, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P58, DOI 10.1109/METRIC.2004.1357891
   Harman M, 2014, LECT NOTES COMPUT SC, V8636, P240
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hosseini S, 2018, INFORM SOFTWARE TECH, V95, P296, DOI 10.1016/j.infsof.2017.06.004
   Jin C, 2015, APPL SOFT COMPUT, V35, P717, DOI 10.1016/j.asoc.2015.07.006
   Kennedy J, 1998, IEEE C EVOL COMPUTAT, P78, DOI 10.1109/ICEC.1998.699326
   Koru AG, 2007, J SYST SOFTWARE, V80, P63, DOI 10.1016/j.jss.2006.05.017
   Koru AG, 2005, IEEE T SOFTWARE ENG, V31, P625, DOI 10.1109/TSE.2005.89
   Kubat M., 1997, ICML, P179
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Lu HM, 2012, EMPIR SOFTW ENG, V17, P200, DOI 10.1007/s10664-011-9170-z
   Malhotra R, 2018, INFORM SOFTWARE TECH, V102, P65, DOI 10.1016/j.infsof.2018.05.007
   Malhotra R, 2017, EMPIR SOFTW ENG, V22, P2806, DOI 10.1007/s10664-016-9488-7
   Malhotra R, 2017, AUTOMAT SOFTW ENG, V24, P673, DOI 10.1007/s10515-016-0203-0
   Malhotra R, 2017, SWARM EVOL COMPUT, V32, P85, DOI 10.1016/j.swevo.2016.10.002
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Malhotra R, 2013, INT J MACH LEARN CYB, V4, P273, DOI 10.1007/s13042-012-0095-7
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Misirli AT, 2011, SOFTWARE QUAL J, V19, P515, DOI 10.1007/s11219-010-9128-1
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Petric J., 2016, P 10 ACM IEEE INT S, V46
   Romano D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P303, DOI 10.1109/ICSM.2011.6080797
   Ruscio J, 2013, MULTIVAR BEHAV RES, V48, P208, DOI 10.1080/00273171.2012.738184
   Ryu D, 2016, APPL SOFT COMPUT, V49, P1062, DOI 10.1016/j.asoc.2016.04.009
   Sarro F., 2012, Proceedings of the 27th Annual ACM Symposium on Applied Computing, SAC '12, P1215, DOI DOI 10.1145/2245276.2231967
   Sheta AF, 2010, INT J BIO-INSPIR COM, V2, P365, DOI 10.1504/IJBIC.2010.037016
   Sousa T, 2003, LECT NOTES ARTIF INT, V2902, P43
   Sousa T, 2004, PARALLEL COMPUT, V30, P767, DOI 10.1016/j.parco.2003.12.015
   STONE M, 1974, J R STAT SOC B, V36, P111, DOI 10.1111/j.2517-6161.1974.tb00994.x
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   White DE, 2013, FROM LITTLE LONDON TO LITTLE BENGAL: RELIGION, PRINT, AND MODERNITY IN EARLY BRITISH INDIA, 1793-1835, P16
   Witten IH, 2011, MOR KAUF D, P1
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Zhang Y, 2015, P INT COMP SOFTW APP, P264, DOI 10.1109/COMPSAC.2015.58
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
NR 69
TC 16
Z9 16
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2019
VL 112
BP 51
EP 67
DI 10.1016/j.infsof.2019.04.007
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IA9TG
UT WOS:000469899100005
DA 2024-07-18
ER

PT J
AU Kim, J
   Kim, J
   Lee, E
AF Kim, Jeongho
   Kim, Jindae
   Lee, Eunseok
TI VFL: Variable-based fault localization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software debugging; Software testing; Spectrum-based fault localization;
   Variable-based fault localization; Suspicious variable
AB Context: Fault localization is one of the most important debugging tasks. Hence, many automatic fault localization techniques have been proposed to reduce the burden on developers for such tasks. Among them, Spectrum-based Fault Localization (SFL) techniques leverage coverage information and localize faults based on the coverage difference between the failed and passed test cases.
   Objective: However, such SFL techniques cannot localize faults effectively when coverage differences are not clear. To address this issue and improve the fault localization performance of the SFL techniques, we propose a Variable-based Fault Localization (VFL) technique.
   Method: The VFL technique identifies suspicious variables and uses them to generate a ranked list of suspicious source code lines. Since it only requires additional information about variables that are also available in the SFL techniques, the proposed technique is lightweight and can be used to improve the performance of existing the SFL techniques.
   Results: In an evaluation with 224 real Java faults and 120 C faults, the VFL technique outperforms the SFL techniques using the same similarity coefficient. The average Exam scores of the VFL techniques are reduced by more than 55% compared to the SFL techniques, and the VFL techniques localize faults at a lower rank than the SFL techniques for about 73% of the 344 faults.
   Conclusion: We proposed a novel variable-based fault localization technique for more effective debugging. The VFL technique has better performance than the existing techniques and the results were more useful for actual fault localization tasks. In addition, this technique is very lightweight and scalable, so it is very easy to collaborate with other fault localization techniques.
C1 [Kim, Jeongho; Lee, Eunseok] Sungkyunkwan Univ, Suwon, South Korea.
   [Kim, Jindae] HKUST, Sai Kung, Clear Water Bay, Hong Kong, Peoples R China.
C3 Sungkyunkwan University (SKKU); Hong Kong University of Science &
   Technology
RP Kim, J; Lee, E (corresponding author), Sungkyunkwan Univ, Suwon, South Korea.
EM jeonghodot@skku.edu; jdkim@cse.ust.hk; leees@skku.edu
RI Kim, Jindae/AAF-5594-2020
OI Lee, Eunseok/0000-0002-6557-8087
FU National Research Foundation of Korea (NRF) - Ministry of Science, ICT
   [2017M3C4A7068179]; National Research Foundation of Korea (NRF) -
   Ministry of Education [2016R1D1A1B03934610]
FX This research was supported by Next-Generation Information Computing
   Development Program through the National Research Foundation of Korea
   (NRF) funded by the Ministry of Science, ICT (2017M3C4A7068179), and
   Basic Science Research Program through the National Research Foundation
   of Korea (NRF) funded by the Ministry of Education
   (2016R1D1A1B03934610).
CR Abreu R., 2006, P INT S SOFTW TEST A
   [Anonymous], P INT C AUT SOFTW EN
   Baah G. K., 2010, P INT S SOFTW TEST A
   Balzer R.M., 1969, P SPRING JOINT COMP
   Choi S.-S., 2010, Systemics, Cybernetics and Informatic, V8, P43
   Dallmeier V., 2005, P S AUT AN DRIV DEB
   DiGiuseppe N., 2011, P INT S SOFTW TEST A
   DiGiuseppe N., 2012, P INT C SOFTW TEST V
   DiGiuseppe N, 2015, EMPIR SOFTW ENG, V20, P928, DOI 10.1007/s10664-014-9304-1
   Fang C., 2017, P INT C SOFTW ENG KN
   Floyd R. W., 1967, P S APPL MATH, P31
   Gao RZ, 2017, SOFTWARE QUAL J, V25, P131, DOI 10.1007/s11219-015-9295-1
   Gay G., 2017, P INT C SOFTW TEST V
   Gopinath D., 2012, P INT C AUT SOFTW EN
   Hofer B, 2015, AUTOMAT SOFTW ENG, V22, P47, DOI 10.1007/s10515-014-0145-3
   James A. Jones, 2007, P INT S SOFTW TEST A
   Ju XL, 2014, J SYST SOFTWARE, V90, P3, DOI 10.1016/j.jss.2013.11.1109
   Just R., 2014, P INT S SOFTW TEST A
   Kim J, 2016, J INF SCI ENG, V32, P177
   Knuth D. E., 1971, Acta Informatica, V1, P14, DOI 10.1007/BF00264289
   Kochhar P. S., 2016, P INT S SOFTW TEST A
   Laghari G., 2016, P INT C AUT SOFTW EN
   Landsberg D., 2015, INT C FUND APPR SOFT
   Le T.-D.B., 2016, P INT S SOFTW TEST A
   Le T-D.B., 2013, P INT C SOFTW MAINT
   Le X.-B.D., 2017, P JOINT M FDN SOFTW
   Lee N., 2006, T SOFTW ENG METHODOL, V20, P11
   Li XL, 2018, EMPIR SOFTW ENG, V23, P1, DOI 10.1007/s10664-016-9494-9
   Lucia, 2014, J SOFTW-EVOL PROC, V26, P172, DOI 10.1002/smr.1616
   Maamar M, 2017, AUTOMAT SOFTW ENG, V24, P341, DOI 10.1007/s10515-015-0189-z
   Mao XG, 2014, J SYST SOFTWARE, V89, P51, DOI 10.1016/j.jss.2013.08.031
   Mohammed B., 2015, P S APPL COMP
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Parnin C., 2011, ISSTA
   Pearson S., 2016, P INT S FDN SOFTW EN
   Rui A., 2009, P S APPL COMP
   Rui A., 2007, P AC IND C PRACT RES
   Ruizhi G., 2017, IEEE T SOFTW ENG
   Sohn J., 2017, P INT S SOFTW TEST A
   Steimann Friedrich., 2013, ISSTA
   Tang CM, 2017, IEEE T RELIAB, V66, P403, DOI 10.1109/TR.2017.2688487
   University Of Nebraska-Lincoln, 2005, SOFTW ART INFR REP
   Vidroha D., 2009, P INT S SOFTW REL EN
   Vidroha D., 2010, P INT C SOFTW TEST V
   WEICKER RP, 1984, COMMUN ACM, V27, P1013, DOI 10.1145/358274.358283
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wong WE, 2012, IEEE T RELIAB, V61, P149, DOI 10.1109/TR.2011.2172031
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Wong WE, 2009, INT J SOFTW ENG KNOW, V19, P573, DOI 10.1142/S021819400900426X
   Xiaoyuan X., 2010, P INT C QUAL SOFTW
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xie XY, 2013, INFORM SOFTWARE TECH, V55, P866, DOI 10.1016/j.infsof.2012.08.008
   Xu XF, 2011, INT J SOFTW ENG KNOW, V21, P803, DOI 10.1142/S0218194011005505
   Xuan J., 2014, P INT C SOFTW MAINT
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Xue X., 2013, P INT S EMP SOFTW EN
   Yoo S., 2012, LNCS
   Yulei Pang, 2015, Journal of Software, V10, P566, DOI 10.17706/jsw.10.5.566-576
   Zhang LM, 2013, J SOFTW-EVOL PROC, V25, P1357, DOI 10.1002/smr.1634
   Zhang L, 2017, J SYST SOFTWARE, V129, P35, DOI 10.1016/j.jss.2017.04.017
   Zhang M., 2017, P INT S SOFTW TEST A
NR 62
TC 15
Z9 17
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2019
VL 107
BP 179
EP 191
DI 10.1016/j.infsof.2018.11.009
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HJ0YN
UT WOS:000456889200013
DA 2024-07-18
ER

PT J
AU Sievi-Korte, O
   Beecham, S
   Richardson, I
AF Sievi-Korte, Outi
   Beecham, Sarah
   Richardson, Ita
TI Challenges and recommended practices for software architecting in global
   software development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Global software development; Software architecture; Software design;
   Design practice; Systematic literature review
ID SYSTEMS; EXPERIENCE; DISTANCE
AB Context: Global software development (GSD), although now a norm in the software industry, carries with it enormous challenges mostly regarding communication and coordination. Aforementioned challenges are highlighted when there is a need to transfer knowledge between sites, particularly when software artifacts assigned to different sites depend on each other. The design of the software architecture and associated task dependencies play a major role in reducing some of these challenges.
   Objective: The current literature does not provide a cohesive picture of how the distributed nature of software development is taken into account during the design phase: what to avoid, and what works in practice. The objective of this paper is to gain an understanding of software architecting in the context of GSD, in order to develop a framework of challenges and solutions that can be applied in both research and practice.
   Method: We conducted a systematic literature review (SLR) that synthesises (i) challenges which GSD imposes on software architecture design, and (ii) recommended practices to alleviate these challenges.
   Results: We produced a comprehensive set of guidelines for performing software architecture design in GSD based on 55 selected studies. Our framework comprises nine key challenges with 28 related concerns, and nine recommended practices, with 22 related concerns for software architecture design in GSD. These challenges and practices were mapped to a thematic conceptual model with the following concepts: Organization (Structure and Resources), Ways of Working (Architecture Knowledge Management, Change Management and Quality Management), Design Practices, Modularity and Task Allocation.
   Conclusion: The synthesis of findings resulted in a thematic conceptual model of the problem area, a mapping of the key challenges to practices, and a concern framework providing concrete questions to aid the design process in a distributed setting. This is a first step in creating more concrete architecture design practices and guidelines.
C1 [Sievi-Korte, Outi] Tampere Univ Technol, Lab Pervas Comp, Korkeakoulunkatu 1,POB 553, FIN-33101 Tampere, Finland.
   [Beecham, Sarah; Richardson, Ita] Univ Limerick, Lero Irish Softw Res Ctr, Limerick, Ireland.
C3 Tampere University; University of Limerick
RP Sievi-Korte, O (corresponding author), Tampere Univ Technol, Lab Pervas Comp, Korkeakoulunkatu 1,POB 553, FIN-33101 Tampere, Finland.
EM outi.sievi-korte@tut.fi; sarah.beecham@lero.ie; ita.richardson@lero.ie
RI Beecham, Simon C/M-1544-2016
OI Richardson, Ita/0000-0002-5493-2837; Sievi-Korte,
   Outi/0000-0002-4956-8989
FU Academy of Finland; Science Foundation Ireland [13/RC/2094]; European
   Regional Development Fund through the Southern & Eastern Regional
   Operational Programme
FX The work of the first author was supported by the Academy of Finland.
   This work was partially supported (second and third author) with the
   financial support of the Science Foundation Ireland grant 13/RC/2094 and
   co-funded under the European Regional Development Fund through the
   Southern & Eastern Regional Operational Programme to Lero the Irish
   Software Research Centre (www.lero.ie).
CR Agerfalk P.J., 2005, P INT WORKSHOP DISTR, P47
   Ågerfalk PJ, 2008, LECT NOTES COMPUT SC, V5007, P1, DOI 10.1007/978-3-540-79588-9_1
   Ali N., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P347, DOI 10.1109/ICGSE.2010.48
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], P 6 WORK IEEE IFIP C
   [Anonymous], 2004, PROCEDURES PERFORMIN
   [Anonymous], 2011, ISO/IEC JTC 1/SC 7, DOI DOI 10.1007/BF01077867
   Avritzer A, 2010, J SYST SOFTWARE, V83, P1881, DOI 10.1016/j.jss.2010.05.070
   Babar MA, 2014, INFORM SOFTWARE TECH, V56, P1, DOI 10.1016/j.infsof.2013.10.002
   Balasubramaniam D., 2007, P WORK IEEE IFIP C S, P14
   Bano M, 2016, IET SOFTW, V10, P147, DOI 10.1049/iet-sen.2015.0112
   Bass JM, 2016, INFORM SOFTWARE TECH, V75, P1, DOI 10.1016/j.infsof.2016.03.001
   Bass JM, 2015, EMPIR SOFTW ENG, V20, P1525, DOI 10.1007/s10664-014-9322-z
   Bass JM, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P154, DOI 10.1109/ICGSE.2013.27
   Beecham Sarah, 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P55, DOI 10.1109/ICGSE.2010.15
   Beecham S., 2006, UHCSTR453
   BENNETT K, 1995, IEEE SOFTWARE, V12, P19, DOI 10.1109/52.363157
   Betz Stefanie, 2013, Proceedings of the 2013 3rd International Workshop on Replication in Empirical Software Engineering Research (RESER 2013), P15, DOI 10.1109/RESER.2013.8
   Borrego G, 2017, INT CONF GLOBAL SOFT, P51, DOI 10.1109/ICGSE.2017.14
   Borrego G, 2016, INT CONF GLOBAL SOFT, P193, DOI 10.1109/ICGSE.2016.38
   Borrego G, 2016, INT CONF GLOBAL SOFT, P109, DOI 10.1109/ICGSE.2016.29
   Bosch J., COORDINATION GLOBAL, P217
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Bratthal LG, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P604, DOI 10.1109/ICSE.2002.1008005
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Britto R, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2016.146
   Bucchiarone A, 2018, IEEE SOFTWARE, V35, P50, DOI 10.1109/MS.2018.2141026
   Burity T, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1449, DOI 10.1145/2695664.2695909
   Caprihan G., 2006, P IEEE INT C GLOB SO, P84
   Casey Valentine, 2009, Software Process: Improvement and Practice, V14, P247, DOI 10.1002/spip.422
   Cataldo M, 2009, INT CONF GLOBAL SOFT, P83, DOI 10.1109/ICGSE.2009.16
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Che MR, 2015, INT J SOFTW ENG KNOW, V25, P1677, DOI 10.1142/S0218194015400380
   Clerc V., 2011, 2011 Sixth IEEE International Conference on Global Software Engineering Workshop, P1, DOI 10.1109/ICGSE-W.2011.17
   Clerc Viktor, 2009, 2009 Fourth IEEE International Conference on Global Software Engineering, P382, DOI 10.1109/ICGSE.2009.60
   Clerc V., 2010, Proceedings of the ICSE Workshop on Sharing and Reusing Architectural Knowledge, SHARK '10, P37, DOI DOI 10.1145/1833335.1833341
   Clerc V, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P225
   Conchúir EO, 2009, COMMUN ACM, V52, P127, DOI 10.1145/1536616.1536648
   CONWAY ME, 1968, DATAMATION, V14, P28
   Corry AV, 2006, LECT NOTES COMPUT SC, V4214, P111
   Crnkovic I., 2001, SOFTWARE FOCUS, V2, P127
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   De Santana Anderson M., 2013, Proceedings of the 2013 3rd International Workshop on Replication in Empirical Software Engineering Research (RESER 2013), P34, DOI 10.1109/RESER.2013.18
   Dixon-Woods Mary, 2005, J Health Serv Res Policy, V10, P45, DOI 10.1258/1355819052801804
   dos Santos Rodrigo P., 2012, 2012 Seventh IEEE International Conference on Global Software Engineering Workshops (ICGSEW 2012), P60, DOI 10.1109/ICGSEW.2012.16
   Evesti A., 2007, THESIS, P636
   Fauzi SSM, 2010, ASIA PAC SOFWR ENG, P404, DOI 10.1109/APSEC.2010.53
   Fayad Mohamed E., 1999, Building Application Frameworks: Object-oriented Foundations of Framework Design
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garlan D., 2000, FUTURE SOFTWARE ENG, P91
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Herbsleb JD, 2005, PROC INT CONF SOFTW, P524
   Herbsleb JD, 2001, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.2001.919083
   Hohpe Gregor, 2004, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions
   Holmstrom H, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ICGSE.2006.261210
   Huen WH, 2007, PROC FRONT EDUC CONF, P553
   Imtiaz S., 2016, J SOFTW EVOL PROCESS
   Jae young Bang, 2010, 2010 32nd International Conference on Software Engineering (ICSE), P243, DOI 10.1145/1810295.1810341
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Kroll J., 2011, P INT C ENT INF SYST
   Kroll J, 2014, 2014 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING WORKSHOPS (ICGSEW), P21, DOI 10.1109/ICGSEW.2014.14
   Kroll J, 2014, P ANN HICSS, P331, DOI 10.1109/HICSS.2014.49
   Kulkarni G., 2012, INT J CLOUD COMPUTIN, V1, P11, DOI [10.11591/closer.v1i1.218, DOI 10.11591/CLOSER.V1I1.218]
   Kwan I, 2012, IEEE SOFTWARE, V29, P90, DOI 10.1109/MS.2012.3
   Lago P, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P195, DOI 10.1007/978-3-642-10294-3_10
   Lamersdorf A, 2009, INT CONF GLOBAL SOFT, P41, DOI 10.1109/ICGSE.2009.12
   Lanubile F., 2003, SIGSOFT Softw. Eng. Notes, V28, P2, DOI DOI 10.1145/966221.966224
   Laredo JA, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P232, DOI 10.1109/ICGSE.2008.13
   Lundberg L., 1999, Proceedings of the 3rd Annual IASTED International Conference Software Engineering and Applications (SEA'99), P353
   Malavolta I, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P1, DOI 10.1109/ICSAW.2017.28
   Marques A. B., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P134, DOI 10.1109/ICGSE.2012.29
   Matinlassi M., 2006, THESIS
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   Mishra A, 2013, LECT NOTES COMPUT SC, V8186, P284, DOI 10.1007/978-3-642-41033-8_37
   Mockus A, 2001, IEEE SOFTWARE, V18, P30, DOI 10.1109/52.914737
   Monasor M.J, 2009, ADV SOFTW ENG, P1, DOI DOI 10.1155/2009/710971
   Mustapic G, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P101, DOI 10.1109/WICSA.2004.1310694
   Newcomer E., 2005, UNDERSTANDING SOA WE
   Noll J., 2011, ACM INROADS, V1, P66, DOI [10.1145/1835428.1835445, DOI 10.1145/1835428.1835445]
   Ovaska P., 2003, Software Process Improvement and Practice, V8, P233, DOI 10.1002/spip.186
   Paasivaara M, 2016, INT CONF GLOBAL SOFT, P74, DOI 10.1109/ICGSE.2016.34
   PARNAS DL, 1985, IEEE T SOFTWARE ENG, V11, P259, DOI 10.1109/TSE.1985.232209
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   PARNAS DL, 1972, COMMUN ACM, V15, P330, DOI 10.1145/355602.361309
   Pereira T.A. B., 2010, Proceedings of the 2nd International Workshop on Recommendation Systems for Software Engineering, P36
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Popovic K, 2010, IEEE INT ENTERP DIST, P123, DOI 10.1109/ICSEA.2010.26
   Prikladnicki R, 2010, INFORM SOFTWARE TECH, V52, P779, DOI 10.1016/j.infsof.2010.03.009
   Qian L, 2009, LECT NOTES COMPUT SC, V5931, P626, DOI 10.1007/978-3-642-10665-1_63
   de Faria HR, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P241, DOI 10.1109/ICGSE.2006.261240
   Rost Dominik, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P72, DOI 10.1007/978-3-642-39031-9_7
   Rudzki Jakub, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P339, DOI 10.1109/COMPSAC.2008.38
   Sahay S., 2003, GLOBAL IT OUTSOURCIN
   Salger F., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P29, DOI 10.1145/1810295.1810301
   Salger F, 2009, LECT NOTES COMPUT SC, V5872, P391, DOI 10.1007/978-3-642-05290-3_51
   Sangwan R. S., 2008, P 1 INT WORKSH LEAD, P17
   Sauer J., ARCHITECTURE CENTRIC, P321
   Schmidt Douglas C., 2013, Pattern-Oriented Software Architecture, Patterns for Concurrent and Networked Objects, V2
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Smite D., 2014, EMPIR SOFTW ENG, V19
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Svensson Richard Berntsson, 2012, Product-Focused Software Process Improvement. Proceedings 13th International Conference (PROFES 2012), P175, DOI 10.1007/978-3-642-31063-8_14
   Tamburri Damian A., 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P247, DOI 10.1109/WICSA.2014.17
   Taylor RN, 1996, IEEE T SOFTWARE ENG, V22, P390, DOI 10.1109/32.508313
   Tekinerdogan B., 2012, SIGSOFT SOFTW ENG NO, V37, P1
   Tufekci O, 2010, FOURTH INTERNATIONAL CONFERENCE ON DIGITAL SOCIETY: ICDS 2010, PROCEEDINGS, P150, DOI 10.1109/ICDS.2010.34
   Vaikar S, 2016, INT CONF GLOBAL SOFT, P139, DOI 10.1109/ICGSE.2016.23
   van Heesch U, 2014, IEEE SOFTWARE, V31, P69, DOI 10.1109/MS.2013.22
   Verner J. M., 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P2, DOI 10.1049/ic.2012.0001
   Wohlin C., 2012, Experimentation in Software Engineering
   Wohlin C, 2015, J SYST SOFTWARE, V109, P229, DOI 10.1016/j.jss.2015.08.009
   Wojcik R., 2006, Tech. Rep. CMU/SEI- 2006-TR-023
   Wolff Eberhard, 2016, Microservices: Flexible Software Architecture
   Yildiz Bugra M., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P94, DOI 10.1109/ICGSE.2012.12
   Yildiz B. M., 2011, 2011 Sixth IEEE International Conference on Global Software Engineering Workshop, P9, DOI 10.1109/ICGSE-W.2011.11
NR 116
TC 28
Z9 29
U1 2
U2 16
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2019
VL 106
BP 234
EP 253
DI 10.1016/j.infsof.2018.10.008
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HF6XJ
UT WOS:000454381300014
DA 2024-07-18
ER

PT J
AU Zavala, E
   Franch, X
   Marco, J
AF Zavala, Edith
   Franch, Xavier
   Marco, Jordi
TI Adaptive monitoring: A systematic mapping
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Adaptive monitoring; Monitoring reconfiguration; Monitor customization;
   State of the art; Systematic mapping study; Literature review
ID CONTEXTUAL REQUIREMENTS; UNCERTAINTY
AB Context Adaptive monitoring is a method used in a variety of domains for responding to changing conditions. It has been applied in different ways, from monitoring systems' customization to re-composition, in different application domains. However, to the best of our knowledge, there are no studies analyzing how adaptive monitoring differs or resembles among the existing approaches.
   Objective: To characterize the current state of the art on adaptive monitoring, specifically to: (a) identify the main concepts in the adaptive monitoring topic; (b) determine the demographic characteristics of the studies published in this topic; (c) identify how adaptive monitoring is conducted and evaluated by the different approaches; (d) identify patterns in the approaches supporting adaptive monitoring.
   Method: We have conducted a systematic mapping study of adaptive monitoring approaches following recommended practices. We have applied automatic search and snowballing sampling on different sources and used rigorous selection criteria to retrieve the final set of papers. Moreover, we have used an existing qualitative analysis method for extracting relevant data from studies. Finally, we have applied data mining techniques for identifying patterns in the solutions.
   Results: We have evaluated 110 studies organized in 81 approaches that support adaptive monitoring. By analyzing them, we have: (1) surveyed related terms and definitions of adaptive monitoring and proposed a generic one; (2) visualized studies' demographic data and arranged the studies into approaches; (3) characterized the main approaches' contributions; (4) determined how approaches conduct the adaptation process and evaluate their solutions.
   Conclusions: This cross-domain overview of the current state of the art on adaptive monitoring may be a solid and comprehensive baseline for researchers and practitioners in the field. Especially, it may help in identifying opportunities of research; for instance, the need of proposing generic and flexible software engineering solutions for supporting adaptive monitoring in a variety of systems.
C1 [Zavala, Edith; Franch, Xavier; Marco, Jordi] Univ Politecn Cataluna, Software & Serv Engn Res Grp GESSI, Jordi Girona 1-3, ES-08034 Barcelona, Catalunya, Spain.
C3 Universitat Politecnica de Catalunya
RP Zavala, E (corresponding author), Univ Politecn Cataluna, Software & Serv Engn Res Grp GESSI, Jordi Girona 1-3, ES-08034 Barcelona, Catalunya, Spain.
EM zavala@essi.upc.edu; franch@essi.upc.edu; jmarco@cs.upc.edu
RI Marco, Jordi/AAA-7309-2021; Franch, Xavier/A-8588-2008
OI Marco, Jordi/0000-0002-0078-7929; Zavala, Edith/0000-0002-4631-5871
FU CONACYT; I2T2; Spanish project GENESIS [TIN2016-79269-R]
FX Thanks to CONACYT and I2T2, for the PhD scholarship granted to Edith
   Zavala. This work is partially supported by the Spanish project GENESIS
   (TIN2016-79269-R).
CR Alippi C, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE FOR MEASUREMENT SYSTEMS AND APPLICATIONS, P68, DOI 10.1109/CIMSA.2007.4362541
   Ameller D, 2015, INFORM SOFTWARE TECH, V62, P42, DOI 10.1016/j.infsof.2015.02.006
   Anastasi G, 2009, AD HOC NETW, V7, P537, DOI 10.1016/j.adhoc.2008.06.003
   Bukenya P, 2014, J CIV STRUCT HEALTH, V4, P235, DOI 10.1007/s13349-014-0079-2
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Clark KP, 2013, MULTIAGENT GRID SYST, V9, P135, DOI 10.3233/MGS-130203
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Febrero F, 2014, INFORM SOFTWARE TECH, V56, P839, DOI 10.1016/j.infsof.2014.03.006
   Felizardo KR, 2011, INT SYMP EMP SOFTWAR, P77, DOI 10.1109/ESEM.2011.16
   Franco-Bedoya O, 2017, INFORM SOFTWARE TECH, V91, P160, DOI 10.1016/j.infsof.2017.07.007
   Hoda R., 2017, Information and Software Technology, V85, P60, DOI DOI 10.1016/J.INFSOF.2017.01.007
   IBM, 2006, IBM White Pap., V36, P34
   Jeswani D., 2012, 2012 8th International Conference on Network and Service Management (CNSM 2012), P350
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kijewski-Correa T., 2006, SIGNAL PROCESS, V76, P1, DOI [10.1145/1182807.1182889, DOI 10.1145/1182807.1182889]
   Kitchenham B., 2007, ENGINEERING, V45, P1051
   Knauss A, 2016, INFORM SOFTWARE TECH, V70, P85, DOI 10.1016/j.infsof.2015.10.001
   Krupitzer C, 2015, PERVASIVE MOB COMPUT, V17, P184, DOI 10.1016/j.pmcj.2014.09.009
   Liu G, 2016, P 17 INT MIDDLEWARE, P1, DOI [10.1145/2988336.2988344, DOI 10.1145/2988336.2988344]
   Machine Learning Group at the University of Waikato, 2016, WEKA 3 DAT MIN SOFTW
   Magalhaes F, 2012, MECH SYST SIGNAL PR, V28, P212, DOI 10.1016/j.ymssp.2011.06.011
   Marshall Christopher, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P296, DOI 10.1109/ESEM.2013.32
   Miles M.B., 2014, Qualitative data analysis: A methods sourcebook, V3rd
   Moui A., 2012, 2012 8th International Conference on Network and Service Management (CNSM 2012), P261
   Moui A., 2012, INT C AD SELF AD SYS, P44
   Moui A, 2011, LECT NOTES COMPUT SC, V6734, P160, DOI 10.1007/978-3-642-21484-4_18
   Mshali H, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON DATA SCIENCE AND DATA INTENSIVE SYSTEMS, P276, DOI 10.1109/DSDIS.2015.13
   Nguyen PH, 2017, INFORM SOFTWARE TECH, V83, P116, DOI 10.1016/j.infsof.2016.11.004
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Ramirez A. J., 2010, 2010 First International Workshop on Requirements at Run Time (RE@RunTime), P41, DOI 10.1109/RE@RUNTIME.2010.5628549
   Romero Felizardo Katia, 2013, Proceedings of the 2013 3rd International Workshop on Replication in Empirical Software Engineering Research (RESER 2013), P91, DOI 10.1109/RESER.2013.9
   Ruiz F., 2012, NOVATICA, V215, P54
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Skalski P. D., 2017, CONTENT ANAL GUIDEBO, V2, P201, DOI [DOI 10.4135/9781071802878.N7, 10.4135/9781071802878]
   Talwar V., 2006, ADAPTIVE MONITORING
   Toueir Antoine, 2013, 2013 2nd IEEE Latin American Conference on Cloud Computing and Communications (LatinCloud), P53, DOI 10.1109/LatinCloud.2013.6842223
   Toueir A, 2014, LECT NOTES COMPUT SC, V8508, P133, DOI 10.1007/978-3-662-43862-6_17
   Villegas N.M., 2011, 2011 International Workshop on the Maintenance and Evolution of Service-Oriented and Cloud-Based Systems, P1, DOI [DOI 10.1109/MESOCA.2011.6049036, 10.1109/IVIESOCA.2011.6049036]
   Wang MH, 2005, KNOWL-BASED SYST, V18, P257, DOI 10.1016/j.knosys.2004.04.012
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Zavala E., 2018, ADAPTIVE MONITORING, DOI [10.17632/pmcxb56t63.1., DOI 10.17632/PMCXB56T63.1]
   Zavala E, 2018, EXPERT SYST APPL, V98, P166, DOI 10.1016/j.eswa.2018.01.009
   Zavala E, 2015, INT REQUIR ENG CONF, P278, DOI 10.1109/RE.2015.7320437
NR 44
TC 17
Z9 17
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2019
VL 105
BP 161
EP 189
DI 10.1016/j.infsof.2018.08.013
PG 29
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HD5RF
UT WOS:000452586900010
OA Green Published
DA 2024-07-18
ER

PT J
AU Barros-Justo, JL
   Pinciroli, F
   Matalonga, S
   Martínez-Araujo, N
AF Barros-Justo, Jose L.
   Pinciroli, Fernando
   Matalonga, Santiago
   Martinez-Araujo, Nelson
TI What software reuse benefits have been transferred to the industry? A
   systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic mapping study; Systematic review; Software reuse; Software
   reuse processes; Software reuse benefits; Real-world setting; Industry;
   Evidence-based software engineering
ID QUALITY; PRODUCTIVITY; MODEL; EXPERIENCES; STRATEGIES; FRAMEWORK
AB Context: The term software reuse was first used in 1968 at the NATO conference. Since then, work in the scientific literature has stated that the application of software reuse offers benefits such as increase in quality and productivity. Nonetheless, in spite of many publications reporting software reuse experiences, evidence that such benefits having reached industrial settings is scarce.
   Objective: To identify and classify the benefits transferred to real-world settings by the application of software reuse strategies.
   Method: We conducted a systematic mapping study (SMS). Our search strategies retrieved a set of 2,413 papers out of which 49 were selected as primary studies. We defined five facets to classify these studies: (a) the type of benefit, (b) the reuse process, (c) the industry's domain, (d) the type of reuse and (e) the type of research reported.
   Results: Quality increase (28 papers) and Productivity increase (25 papers) were the two most mentioned benefits. Component-Based Development (CBD) was the most reported reuse strategy (41%), followed by Software Product Lines (SPL, 30%). The selected papers mentioned fourteen industrial domains, of which four stand out: aerospace and defense, telecommunications, electronics and IT services. The application of systematic reuse was reported in 78% of the papers. Regarding the research type, 50% use evaluation research as the investigation method. Finally, 13 papers (27%) reported validity threats for the research method applied.
   Conclusions: The literature analyzed presents a lack of empirical data, making it difficult to evaluate the effective transfer of benefits to the industry. This work did not find any relationship between the reported benefits and the reuse strategy applied by the industry or the industry domain. Although the most reported research method was industrial case studies (25 works), half of these works (12) did not report threats to validity.
C1 [Barros-Justo, Jose L.; Martinez-Araujo, Nelson] Univ Vigo, Sch Informat ESEL, Orense 32004, Spain.
   [Pinciroli, Fernando] Champagnat Univ, Fac Informat & Design, RA-5501 Godoy Cruz, Argentina.
   [Matalonga, Santiago] Univ ORT Uruguay, Fac Engn, Montevideo 11100, Uruguay.
   [Matalonga, Santiago] Univ West Scotland, Sch Engn & Comp, Paisley, Renfrew, Scotland.
C3 Universidade de Vigo; University ORT Uruguay; University of West
   Scotland
RP Barros-Justo, JL (corresponding author), Univ Vigo, Sch Informat ESEL, Orense 32004, Spain.
EM jbarros@uvigo.es; pincirolifernando@uch.edu.ar;
   santiago.matalonga@uws.ac.uk; nmaraujo@esei.uvigo.es
RI Matalonga, Santiago/O-4316-2019; Pinciroli, Fernando/ABA-2347-2021;
   Barros-Justo, Jose L./H-3181-2014
OI Matalonga, Santiago/0000-0001-5429-2449; Pinciroli,
   Fernando/0000-0003-3270-5147; Barros-Justo, Jose L./0000-0003-2046-2643
CR [Anonymous], 2011, ISO 13314
   [Anonymous], 2010, 15172010 IEEE
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Baldassarre MT, 2005, PROC IEEE INT CONF S, P283
   Barros-Justo J. L., 2016, ARXIV160906553
   Barros-Justo JL, 2018, COMPUT STAND INTER, V58, P23, DOI 10.1016/j.csi.2017.12.001
   Bauer V, 2013, EUR CON SFTWR MTNCE, P431, DOI 10.1109/CSMR.2013.65
   Beyer HJ, 2008, LECT NOTES COMPUT SC, V5030, P1, DOI 10.1007/978-3-540-68073-4_1
   Budgen D., 2006, 28th International Conference on Software Engineering Proceedings, P1051, DOI 10.1145/1134285.1134500
   Butler G, 1997, ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE AND INTERNATIONAL COMPUTER SCIENCE CONFERENCE, PROCEEDINGS, P3, DOI 10.1109/APSEC.1997.640156
   Crnkovic I., 2002, BUILDING RELIABLE CO
   Dalcher D., 2014, Software Project Management in a Changing World, P27
   de Almeida ES, 2005, PROCEEDINGS OF THE 2005 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P66
   Deniz B, 2014, LECT NOTES COMPUT SC, V8583, P508, DOI 10.1007/978-3-319-09156-3_36
   Ferrari Alessio, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P24, DOI 10.1007/978-3-642-28891-3_5
   Flemström D, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P317, DOI 10.1109/SEAA.2015.46
   Frakes WB, 2001, J SYST SOFTWARE, V57, P99, DOI 10.1016/S0164-1212(00)00121-7
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Global Industry Classification Standard (GICS), 2017, GLOB IND CLASS STAND
   Goldin L, 2015, REQUIR ENG, V20, P23, DOI 10.1007/s00766-013-0182-7
   Goulao M, 2016, SOFTWARE QUAL J, V24, P601, DOI 10.1007/s11219-016-9324-8
   GRISS ML, 1995, IEEE SOFTWARE, V12, P105, DOI 10.1109/52.363160
   GRISS ML, 1993, IBM SYST J, V32, P548, DOI 10.1147/sj.324.0548
   Gupta A, 2009, EMPIR SOFTW ENG, V14, P227, DOI 10.1007/s10664-008-9081-9
   Ha W., 2012, P IEEE 6 INT C MAN I, P394
   Heijstek W, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P113, DOI 10.1109/SEAA.2009.70
   HENRY E, 1995, IEEE SOFTWARE, V12, P47, DOI 10.1109/52.406756
   Hollenbach C, 1996, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE, PROCEEDINGS, P22, DOI 10.1109/ICSR.1996.496110
   INCORVAIA AJ, 1990, PROCEEDINGS : THE FOURTEENTH ANNUAL INTERNATIONAL COMPUTER SOFTWARE & APPLICATIONS CONFERENCE, P301, DOI 10.1109/CMPSAC.1990.139373
   International Organization for Standardization, 2015, 265502015 ISOIEC
   Irshad M, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915989
   ISODA S, 1995, J SYST SOFTWARE, V30, P171, DOI 10.1016/0164-1212(94)00132-7
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   JOOS R, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.311058
   Kahtan H, 2012, 2012 IEEE SYMPOSIUM ON E-LEARNING, E-MANAGEMENT AND E-SERVICES (IS3E 2012), P105
   Kamma Damodaram, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P71, DOI 10.1109/APSEC.2014.20
   Kitchenham Barbara, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P46, DOI 10.1049/ic.2011.0006
   Kitchenham B, 2009, INT SYMP EMP SOFTWAR, P337, DOI 10.1109/esem.2009.5314238
   Kodama R, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P254, DOI 10.1145/2648511.2648540
   Kolb R, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P172
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Land R, 2009, LECT NOTES COMPUT SC, V5791, P150
   Lim W.C., 1998, Managing Software Reuse
   LIM WC, 1994, IEEE SOFTWARE, V11, P23, DOI 10.1109/52.311048
   Lucrédio D, 2008, J SYST SOFTWARE, V81, P996, DOI 10.1016/j.jss.2007.08.036
   MacDonell S, 2010, IEEE T SOFTWARE ENG, V36, P676, DOI 10.1109/TSE.2010.28
   Mao FG, 2016, 2016 17TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P425, DOI 10.1109/SNPD.2016.7515935
   Mcilroy D. M., 1968, 1 INT C SOFTW ENG, P88
   Mohagheghi P, 2004, PROC INT CONF SOFTW, P282, DOI 10.1109/ICSE.2004.1317450
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Mohagheghi P, 2007, EMPIR SOFTW ENG, V12, P471, DOI 10.1007/s10664-007-9040-x
   Mohagheghi P, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363104
   Montagud S, 2012, SOFTWARE QUAL J, V20, P425, DOI 10.1007/s11219-011-9146-7
   Morad S, 2005, IEEE INTERNATIONAL CONFERENCE ON SOFTWARE - SCIENCE, TECHNOLOGY AND ENGINEERING, PROCEEDINGS, P110, DOI 10.1109/SWSTE.2005.11
   Moreno-Lizaranzu MJ, 2015, EMPIR SOFTW ENG, V20, P1456, DOI 10.1007/s10664-014-9320-1
   Morisio M, 2002, IEEE T SOFTWARE ENG, V28, P876, DOI 10.1109/TSE.2002.1033227
   Myllarniemi V., 2012, Proceedings of the 16th International Software Product Line Conference - Volume, V1, P41, DOI DOI 10.1145/2362536.2362546
   Orrego AS, 2007, INNOV SYST SOFTW ENG, V3, P167, DOI 10.1007/s11334-007-0027-y
   Otsuka J., 2011, P 15 INT SOFTW PROD, V2, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pfarr T., 2002, COTS-Based Software Systems. First International Conference, ICCBSS 2002. Proceedings (Lecture Notes in Computer Science Vol.2255), P209
   Quilty G., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P251, DOI 10.1109/SPLC.2011.30
   Ramachandran M, 1996, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE, PROCEEDINGS, P104, DOI 10.1109/ICSR.1996.496118
   Rothenberger MA, 1999, DECISION SCI, V30, P1131, DOI 10.1111/j.1540-5915.1999.tb00921.x
   Scanniello G., 2010, P 2010 ACM IEEE INT, P52
   Selby RW, 2005, IEEE T SOFTWARE ENG, V31, P495, DOI 10.1109/TSE.2005.69
   Sellier D, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P54, DOI 10.1109/SPLINE.2007.14
   Semancik S. K., 2002, COTS-Based Software Systems. First International Conference, ICCBSS 2002. Proceedings (Lecture Notes in Computer Science Vol.2255), P234
   Shirtz D, 2007, LECT NOTES COMPUT SC, V4530, P172
   Slyngstad O.P.N., 2006, P 2006 ACM IEEE INT, P242
   Soares LR, 2014, EUROMICRO CONF PROC, P328, DOI 10.1109/SEAA.2014.48
   Srivastava R, 2012, 2012 INTERNATIONAL SYMPOSIUM ON ELECTRONIC SYSTEM DESIGN (ISED 2012), P56, DOI 10.1109/ISED.2012.61
   Stavru S, 2014, J SYST SOFTWARE, V94, P87, DOI 10.1016/j.jss.2014.03.041
   Succi G, 2001, IEEE T SOFTWARE ENG, V27, P473, DOI 10.1109/32.922717
   Sun HY, 2015, TOTAL QUAL MANAG BUS, V26, P1188, DOI 10.1080/14783363.2014.920179
   Thakur S, 2014, 2014 INTERNATIONAL CONFERENCE ON ADVANCED COMMUNICATION CONTROL AND COMPUTING TECHNOLOGIES (ICACCCT), P1593, DOI 10.1109/ICACCCT.2014.7019376
   Thomas WM, 1997, J SYST SOFTWARE, V38, P211, DOI 10.1016/S0164-1212(96)00152-5
   Tomer A, 2004, IEEE T SOFTWARE ENG, V30, P601, DOI 10.1109/TSE.2004.50
   Torchiano M, 2013, J SYST SOFTWARE, V86, P2110, DOI 10.1016/j.jss.2013.03.084
   Tracz W., 2001, COMPONENT BASED SOFT, P99
   Varnell-Sarjeant J, 2015, ADV COMPUT, V97, P1, DOI 10.1016/bs.adcom.2014.10.002
   Varnell-Sarjeant J, 2015, INFORM SOFTWARE TECH, V61, P71, DOI 10.1016/j.infsof.2015.01.002
   vonMayrhauser A, 1996, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE, PROCEEDINGS, P114, DOI 10.1109/ICSR.1996.496119
   Weigert T., 2006, Proceedings. IEEE International Conference on Sensor Networks, Ubiquitous and Trustworthy Computing
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
NR 86
TC 25
Z9 25
U1 0
U2 17
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2018
VL 103
BP 1
EP 21
DI 10.1016/j.infsof.2018.06.003
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GU9ZY
UT WOS:000445717000001
DA 2024-07-18
ER

PT J
AU Kopczynska, S
   Nawrocki, J
   Ochodek, M
AF Kopczynska, Sylwia
   Nawrocki, Jerzy
   Ochodek, Miroslaw
TI An empirical study on catalog of non-functional requirement templates:
   Usefulness and maintenance issues
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Non-functional requirements; Templates; Elicitation; Empirical study;
   Usefulness; Maintenance; Catalog
AB Context. Non-functional requirements (NFRs) are not easy to elicit and formulate. Therefore, some experts advocate using templates, i.e., statement patterns with parameters and optional parts. Unfortunately, there is still scarcity of evidence showing the benefits of this approach.
   Objective.We aim at evaluating the usefulness of catalog of NFR templates in the context of inexperienced requirements elicitors and the effort required to maintain such catalog.
   Method.To investigate the usefulness of NFR templates, an experiment was conducted with 107 participants. The participants, individually or in teams, elicited NFRs based on a business case concerning an e-commerce system.
   To study the maintenance effort, we analyzed 2231 NFRs, 41 industrial projects to simulate the development of a catalog of NFR templates. We investigated how the characteristics of the catalog, essential from the maintenance perspective, change over a series of projects (a counterpart of elapsing time).
   Results.The participants using NFR templates provided NFRs that were more complete, less ambiguous, more detailed, and better from the point of view of verifiability than their counterparts using the ad hoc approach. However, the catalog of templates did not speed up the elicitation process.
   As regards the maintenance effort, we introduced the notion of mature catalog. In our case, ca. 40 projects were needed to make the catalog mature and then it contained 400 templates but less than 10% of them were used by a single project. The mature catalog subjected to the Pareto principle-about 20% of templates resulted in almost 80% of NFRs. Moreover, when updating the catalog after each project, less than 10% of templates had to be modified or added.
   Conclusions.Catalog of NFR templates seems useful. It increases the quality of NFRs and does not hinder elicitation speed. However, it takes time to make such catalog mature.
C1 [Kopczynska, Sylwia; Nawrocki, Jerzy; Ochodek, Miroslaw] Poznan Univ Tech, Fac Comp, Inst Comp Sci, Ul Piotrowo 2, PL-60965 Poznan, Poland.
C3 Poznan University of Technology
RP Kopczynska, S (corresponding author), Poznan Univ Tech, Fac Comp, Inst Comp Sci, Ul Piotrowo 2, PL-60965 Poznan, Poland.
EM sylwia.kopczynska@cs.put.poznan.pl
RI Kopczyńska, Sylwia/G-1504-2014; Nawrocki, Jerzy R/I-5690-2012; Ochodek,
   Mirosław/G-1505-2014
OI Kopczyńska, Sylwia/0000-0002-9550-3334; Ochodek,
   Miroslaw/0000-0002-9103-717X
CR Adolph S., 2003, PATTERNS EFFECTIVE U
   [Anonymous], 2012, Non-functional requirements in software engineering
   [Anonymous], 2013, SOFTWARE REQUIREMENT
   [Anonymous], 1997, Requirements engineering: a good practice guide
   [Anonymous], 2011, IEEE STD 2030 2011, DOI DOI 10.1109/IEEESTD.2011.6018239
   [Anonymous], 2010, 247652010E ISOIECIEE
   [Anonymous], 2011, 250102011 ISOIEC
   Berry Daniel M., CONTRACT DRAFTING SO
   Boehm B, 1996, IEEE SOFTWARE, V13, P25, DOI 10.1109/52.506460
   Breitman K. K., 1999, Journal of the Brazilian Computer Society, V6, DOI 10.1590/S0104-65001999000200003
   Browne GJ, 2002, INFORM MANAGE-AMSTER, V39, P625, DOI 10.1016/S0378-7206(02)00014-9
   Chung L., 2009, LNCS
   Cleland-Huang J., 2010, OPEN SCI TERAPROMISE
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Denger C., 2003, SOFTW SCI TECHN ENG, P80
   Doerr J, 2011, THESIS
   Dybå T, 2013, IEEE INT WORKS EMPIR, P36, DOI 10.1109/EmpiRE.2013.6615214
   Eckhardt J, 2016, INT REQUIR ENG CONF, P46, DOI 10.1109/RE.2016.24
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   Firesmith Donald G, 2003, TECHNICAL REPORT
   Gilb T, 2005, COMPETITIVE ENGINEERING: A HANDBOOK FOR SYSTEMS ENGINEERING, REQUIREMENTS ENGINEERING, AND SOFTWARE ENGINEERING USING PLANGUAGE, P1, DOI 10.1016/B978-075066507-0/50005-2
   Glinz M, 2007, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2007.45
   Gottesdiener E., 2002, Requirements by collaboration
   Groen E., 2017, IEEE INT REQ ENG C
   Gruenbacher P, 2000, 11TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATION, PROCEEDINGS, P954, DOI 10.1109/DEXA.2000.875141
   Guzman L., 2017, REFSQ
   Herrmann A, 2007, LECT NOTES COMPUT SC, V4542, P320
   Hull E., 2005, REQUIR ENG, V2nd
   Hull E, 2011, REQUIREMENTS ENGINEERING, THIRD EDITION, P1, DOI 10.1007/978-1-84996-405-0
   IEEE, 1998, 8301998 IEEE
   Kalinowski M, 2016, LECT NOTES BUS INF P, V238, P63, DOI 10.1007/978-3-319-27033-3_5
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Kopczynska S., 2014, IEEE INT WORKSH REQ
   Kundel HL, 2003, RADIOLOGY, V228, P303, DOI 10.1148/radiol.2282011860
   Lam W, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P6, DOI [10.1109/ISRE.1997.566834, 10.1007/BF02813029]
   LINDSTROM DR, 1993, IEEE SOFTWARE, V10, P55, DOI 10.1109/52.232400
   Mairiza D., 2010, ACM S APPL COMP
   Mavin A., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P277, DOI 10.1109/RE.2010.39
   Naish J., 2011, 2011 First International Workshop on Requirements Patterns (RePa'11), P42, DOI 10.1109/RePa.2011.6046721
   Nuseibeh B, 1997, IEEE SOFTWARE, V14, P15, DOI 10.1109/MS.1997.589224
   Ochodek M., 2011, INF SOFTW TECHNOL
   Palomares C., 2015, EMPIRICAL SOFTW ENG, V22, P1
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Pohl K., 2011, Requirements Engineering Fundamentals, V1st
   Pressman R. S., 2010, Software Engineering: A Practitioner's Approach
   Regnell B, 2008, IEEE SOFTWARE, V25, P42, DOI 10.1109/MS.2008.48
   Renault S, 2009, INT CONF RES CHAL, P81, DOI 10.1109/RCIS.2009.5089271
   Riaz Maria., 2016, Empirical Software Engineering and Measurement (ESEM)
   Robertson S., 2012, MASTERING REQUIREMEN
   Supakkul S., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P179, DOI 10.1109/RE.2010.31
   Svensson RB, 2010, EUROMICRO CONF PROC, P261, DOI 10.1109/SEAA.2010.55
   Withall Stephen, 2007, SOFTWARE REQUIREMENT
   Wohlin C., 2012, Experimentation in Software Engineering
   Yusop N., 2007, INT J VALUE CHAIN MA, V2, P18
NR 54
TC 15
Z9 15
U1 0
U2 11
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2018
VL 103
BP 75
EP 91
DI 10.1016/j.infsof.2018.06.009
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GU9ZY
UT WOS:000445717000005
DA 2024-07-18
ER

PT J
AU Lunesu, MI
   Münch, J
   Marchesi, M
   Kuhrmann, M
AF Lunesu, M. Ilaria
   Muench, Juergen
   Marchesi, Michele
   Kuhrmann, Marco
TI Using simulation for understanding and reproducing distributed software
   development processes in the cloud
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Scrum; Kanban; Process simulation; Comparison
ID KANBAN; COMMUNICATION; SCRUM; MODEL
AB Context Organizations increasingly develop software in a distributed manner. The Cloud provides an environment to create and maintain software-based products and services. Currently, it is unknown which software processes are suited for Cloud-based development and what their effects in specific contexts are.
   Objective: We aim at better understanding the software process applied to distributed software development using the Cloud as development environment. We further aim at providing an instrument, which helps project managers comparing different solution approaches and to adapt team processes to improve future project activities and outcomes.
   Method: We provide a simulation model, which helps analyzing different project parameters and their impact on projects performed in the Cloud. To evaluate the simulation model, we conduct different analyses using a Scrumban process and data from a project executed in Finland and Spain. An extra adaptation of the simulation model for Scrum and Kanban was used to evaluate the suitability of the simulation model to cover further process models.
   Results: A comparison of the real project data with the results obtained from the different simulation runs shows the simulation producing results close to the real data, and we could successfully replicate a distributed software project. Furthermore, we could show that the simulation model is suitable to address further process models.
   Conclusion: The simulator helps reproducing activities, developers, and events in the project, and it helps analyzing potential tradeoffs, e.g., regarding throughput, total time, project size, team size and work-in-progress limits. Furthermore, the simulation model supports project managers selecting the most suitable planning alternative thus supporting decision-making processes.
C1 [Lunesu, M. Ilaria] Univ Cagliari, Dept Elect & Elect Engn, Cagliari, Italy.
   [Muench, Juergen] Boblingen & Reutlingen Univ, Herman Hollerith Ctr, Reutlingen, Germany.
   [Marchesi, Michele] Univ Cagliari, Dept Math & Comp Sci, Cagliari, Italy.
   [Kuhrmann, Marco] Tech Univ Clausthal, Inst Appl Software Syst Engn, Clausthal Zellerfeld, Germany.
C3 University of Cagliari; University of Cagliari; TU Clausthal
RP Lunesu, MI (corresponding author), Univ Cagliari, Dept Elect & Elect Engn, Cagliari, Italy.
EM ilaria.lunesu@diee.unica.it
RI Marchesi, Michele/U-7048-2019; Münch, Jürgen/ABC-2316-2020
OI Münch, Jürgen/0000-0003-0327-8094; Lunesu, Maria
   Ilaria/0000-0002-2552-4228; Kuhrmann, Marco/0000-0001-6101-8931;
   Marchesi, Michele/0000-0003-1540-8773
CR Ahmad Muhammad Ovais, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P9, DOI 10.1109/SEAA.2013.28
   Ahmad MO, 2016, P ANN HICSS, P5427, DOI 10.1109/HICSS.2016.670
   Alajrami S., 2016, TR1494 NEWC U
   Alzoubi YI, 2016, INFORM MANAGE-AMSTER, V53, P22, DOI 10.1016/j.im.2015.08.003
   Anderson D, 2011, LECT NOTES BUS INF P, V77, P12
   Anderson DJ, 2012, LECT NOTES BUS INF P, V111, P123
   [Anonymous], [No title captured]
   [Anonymous], 2010, ACM T MANAG INF SYST
   [Anonymous], CMUSEI2000TR023
   Armbrust O, 2005, HANDBOOK OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, VOL 3: RECENT ADVANCES, P333, DOI 10.1142/9789812775245_0012
   Bin Ali N, 2015, INFORM SOFTWARE TECH, V68, P45, DOI 10.1016/j.infsof.2015.08.005
   Bird C, 2009, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2009.5070550
   Campbell D.T., 2001, Experimental and quasiexperimental designs for generalized causal inference
   Cocco L, 2011, LECT NOTES BUS INF P, V77, P117
   Concas G, 2013, J SOFTW-EVOL PROC, V25, P1225, DOI 10.1002/smr.1599
   Ebert C, 2016, IEEE SOFTWARE, V33, P105, DOI 10.1109/MS.2016.27
   Fagerholm F, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.131
   Fagerholm F, 2013, 2013 3RD INTERNATIONAL WORKSHOP ON COLLABORATIVE TEACHING OF GLOBALLY DISTRIBUTED SOFTWARE DEVELOPMENT (CTGDSD), P1, DOI 10.1109/CTGDSD.2013.6635237
   Femmer H, 2014, INT CONF GLOBAL SOFT, P1, DOI 10.1109/ICGSE.2014.9
   Hashmi S. I., 2011, 2011 Sixth IEEE International Conference on Global Software Engineering Workshop, P70, DOI 10.1109/ICGSE-W.2011.19
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Houston Dan, 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P219, DOI 10.1109/ICSSP.2012.6225969
   Humphrey Watts S., 2000, CMU/SEI Technical Report CMU/SEI-2000-TR-022
   Ikonen M, 2011, 2011 16TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P305, DOI 10.1109/ICECCS.2011.37
   Kellner MI, 1999, J SYST SOFTWARE, V46, P91, DOI 10.1016/S0164-1212(99)00003-5
   Kniberg Henrik., 2010, Kanban and Scrum - Making the Most of Both
   Kuhrmann M, 2017, ICSSP'17: PROCEEDINGS OF THE 2017 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS, P30, DOI 10.1145/3084100.3084104
   Lamersdorf A, 2012, J SOFTW-EVOL PROC, V24, P661, DOI 10.1002/smr.576
   Liu D., 2009, EMP SOFTW ENG MEAS 2, P302
   Lous P, 2017, INT CONF GLOBAL SOFT, P1, DOI 10.1109/ICGSE.2017.13
   Lunesu M. I., 2013, THESIS
   Martin R, 2001, J SYST SOFTWARE, V59, P237, DOI 10.1016/S0164-1212(01)00065-6
   Melis M., 2006, Software Process Improvement and Practice, V11, P345, DOI 10.1002/spip.286
   Mujtaba Shahid, 2010, Proceedings of the 21st Australian Software Engineering Conference (ASWEC 2010), P139, DOI 10.1109/ASWEC.2010.37
   Paasivaara M, 2009, INT CONF GLOBAL SOFT, P195, DOI 10.1109/ICGSE.2009.27
   Phalnikar R, 2009, INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER CONTROL : ICACC 2009 - PROCEEDINGS, P535, DOI 10.1109/ICACC.2009.93
   Portillo-Rodríguez J, 2012, INFORM SOFTWARE TECH, V54, P663, DOI 10.1016/j.infsof.2012.02.006
   Ramesh B, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1164394.1164418
   Rus Ioana, 2003, P 2003 INT WORKSH SO
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Sengupta B., 2006, 28th International Conference on Software Engineering Proceedings, P731, DOI 10.1145/1134285.1134402
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Solingen R. V., 1999, GOAL QUESTION METRIC
   Sutherland J., 2007, SYST SCI HICSS 2007, P274
   Tanner Maureen, 2017, Journal of Issues in Informing Science and Information Technology, V14, P177
   Theocharis G, 2015, LECT NOTES COMPUT SC, V9459, P149, DOI 10.1007/978-3-319-26844-6_11
   Tregubov A, 2015, PROCEDIA COMPUT SCI, V44, P224, DOI 10.1016/j.procs.2015.03.004
   Turner R., 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P23, DOI 10.1109/ICSSP.2012.6225976
   Turnu I, 2006, J SYST ARCHITECT, V52, P610, DOI 10.1016/j.sysarc.2006.06.005
   Vallon R., 2017, INF SOFTW TECHNOL
   Vijayasarathy LR, 2016, IEEE SOFTWARE, V33, P86, DOI 10.1109/MS.2015.26
   Wakeland W. W., 2004, Software Process Improvement and Practice, V9, P107, DOI 10.1002/spip.200
   Wang XF, 2012, J SYST SOFTWARE, V85, P1287, DOI 10.1016/j.jss.2012.01.061
   Wohlin C., 2012, Experimentation in Software Engineering
   Yara P, 2009, LECT NOTES BUS INF P, V35, P81
   Zhang H, 2008, LECT NOTES COMPUT SC, V5007, P345, DOI 10.1007/978-3-540-79588-9_30
NR 56
TC 10
Z9 10
U1 0
U2 14
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2018
VL 103
BP 226
EP 238
DI 10.1016/j.infsof.2018.07.004
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GU9ZY
UT WOS:000445717000018
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Aziz, B
AF Aziz, Benjamin
TI Towards a mutation analysis of IoT protocols
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
AB Context Mutation testing and analysis is concerned with the introduction of single faults (or errors) into a system's design, specification, implementation or interface and then testing or analysing the effects caused by those faults or errors on the system's properties and behaviour. Such faulty entities are called mutants.
   Objective: This short paper sketches the idea that mutations can be used to identify whether protocol implementations may deviate from the standards defining those protocols.
   Methods: We apply formal analysis techniques to analyse the harmful effects of mutations on IoT protocol specifications, most importantly, e.g. whether those mutations will violate the IoT protocol standard.
   Results: We discovered in our initial investigation one interesting case where a mutant protocol specification may lead to implementations that drop every message intended for publication to applications without breaking the standard of quality of message delivery in the protocol standard.
   Conclusion: We believe as a result, that there is some additional investigation needed in this direction that could be beneficial in implementing future more reliable protocols and also that the current standards need to be revised to take care of such scenarios.
C1 [Aziz, Benjamin] Univ Portsmouth, Sch Comp, Portsmouth, Hants, England.
C3 University of Portsmouth
RP Aziz, B (corresponding author), Univ Portsmouth, Sch Comp, Portsmouth, Hants, England.
EM benjamin.aziz@port.ac.uk
OI Aziz, Benjamin/0000-0001-5089-2025
CR Aziz B, 2005, J LOGIC ALGEBR PROGR, V64, P285, DOI 10.1016/j.jlap.2004.09.006
   Aziz B, 2016, AD HOC NETW, V36, P49, DOI 10.1016/j.adhoc.2015.05.013
   Banks A., 2015, MOTT VERSION 3 1 1 P
   Dadeau F., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P240, DOI 10.1109/ICST.2011.42
   Gieseking M., TRACE REFINEMENT PI
   Jürjens J, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P408, DOI 10.1109/ASE.2001.989840
   MILNER R, 1992, INFORM COMPUT, V100, P1, DOI [10.1016/0890-5401(92)90008-4, 10.1016/0890-5401(92)90009-5]
   Siewe F, 2011, J COMPUT SYST SCI, V77, P597, DOI 10.1016/j.jcss.2010.02.003
   Stark I, 1996, IEEE S LOG, P36, DOI 10.1109/LICS.1996.561301
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
NR 10
TC 6
Z9 6
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2018
VL 100
BP 183
EP 184
DI 10.1016/j.infsof.2018.04.011
PG 2
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GJ1VN
UT WOS:000435056100012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rodriguez-Prieto, O
   Ortin, F
   O'Shea, D
AF Rodriguez-Prieto, Oscar
   Ortin, Francisco
   O'Shea, Donna
TI Efficient runtime aspect weaving for Java applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Runtime adaptation; Aspect weaving; invokedynamic; Aspect-oriented
   programming; Java; Runtime performance
ID SYSTEMS; LIBRARY
AB Context: The aspect-oriented paradigm is aimed at solving the code scattering and tangling problem, providing new mechanisms to support better separation of concerns. For specific scenarios where high runtime adaptability is an important requirement, dynamic Aspect-Oriented Programming (AOP) represents a useful tool. With dynamic AOP, components and aspects can be woven and unwoven at runtime, enabling applications greater responsiveness when dealing with different or changing requirements. However, this responsiveness typically incurs a cost in terms of runtime performance and memory consumption.
   Objective: Build an efficient dynamic aspect weaver for Java that provides the best runtime performance compared to the existing approaches, minimum memory overhead consumption, and similar functionalities to the widespread runtime weavers.
   Method: We design and implement weaveJ, a dynamic aspect weaver for Java. This dynamic weaver leverages the invokedynamic opcode introduced in Java 7, which allows dynamic relinkage of method and field access. We compare the functionalities of weaveJ with the existing dynamic weavers for Java, and evaluate their runtime performance and memory consumption.
   Results: weaveJ shows the best runtime performance for all benchmarks and real applications executed. Method interception with invokedynamic is at least 142% faster than the techniques used by the existing runtime weavers. The average cost of dynamic weaving using invokedynamic is only 2.2% for short running programs, and 1.5% for long running applications. Moreover, the use of aspects in weaveJ does not imply additional memory consumption.
   Conclusion: The dynamic aspect weaver implemented demonstrates that invokedynamic is a suitable mechanism to provide efficient runtime aspect weaving for Java applications. Moreover, it supports concurrent and programmatic aspect (un)weaving at any point of execution, a wide set of join points, class and object weaving, and allow aspects to have their own state. Neither the Java language nor the virtual machine needs to be modified.
C1 [Rodriguez-Prieto, Oscar; Ortin, Francisco] Univ Oviedo, Comp Sci Dept, Calvo Sotelo S-N, Oviedo 33007, Spain.
   [O'Shea, Donna] Cork Inst Technol, Dept Comp Sci, Rossa Ave, Cork, Ireland.
C3 University of Oviedo; Munster Technological University (MTU)
RP Ortin, F (corresponding author), Univ Oviedo, Comp Sci Dept, Calvo Sotelo S-N, Oviedo 33007, Spain.
EM rodriguezoscar@uniovi.es; ortin@uniovi.es; donna.oshea@cit.ie
RI Rodriguez-Prieto, Oscar/K-6033-2017; Ortin, Francisco/K-9272-2014
OI Rodriguez-Prieto, Oscar/0000-0003-2168-9962; Ortin,
   Francisco/0000-0003-1199-8649; O'Shea, Donna/0000-0002-2437-3106
FU European Union, through the European Regional Development Funds (ERDF);
   Principality of Asturias, through its Science, Technology and Innovation
   Plan [GRUPIN14-100]; Banco Santander
FX This work has been funded by the European Union, through the European
   Regional Development Funds (ERDF), and the Principality of Asturias,
   through its Science, Technology and Innovation Plan (grant
   GRUPIN14-100). The authors have also received funds from the Banco
   Santander through its support to the Campus of International Excellence.
CR [Anonymous], 1995, TECHNICAL REPORT
   [Anonymous], 2015, WIND SERV TECHC WIND
   Appeltauer M., 2010, P 2 INT WORKSH CONT
   Blackburn SM, 2008, COMMUN ACM, V51, P83, DOI 10.1145/1378704.1378723
   Casas SI, 2009, EXPERT SYST APPL, V36, P5630, DOI 10.1016/j.eswa.2008.06.094
   Chiba S., 1998, P ACM OOPSLA WORKSH, P1
   Conde P, 2014, COMPUT SCI INF SYST, V11, P47, DOI 10.2298/CSIS130129018C
   Douence R., 2006, COMMON ASPECT SEMANT
   Eclipse, 2017, THE ASPECTJ PROJ
   Eclipse, 2017, ASPECTJ PROGR GUID
   Erhard K., 2012, THESIS
   Felix J. A., 2015, THESIS
   Felix JM, 2015, IEEE LAT AM T, V13, P1534, DOI 10.1109/TLA.2015.7112012
   Felix Jose M., 2014, Journal of Software, V9, P2454, DOI 10.4304/jsw.9.9.2454-2460
   Fowler M., 2000, POJO ACRONYM PLAIN O
   Gamma E., 2017, JHOTDRAW OPEN SOURCE
   García M, 2012, IET SOFTW, V6, P231, DOI 10.1049/iet-sen.2010.0160
   Garcia M., 2013, P 36 AUSTR COMP SCI, P79
   Georges A, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P57
   Gosling J., 2015, JAVA LANGUAGE SPECIF
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Lagartos I, 2017, ENASE: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P277, DOI 10.5220/0006355802770284
   Lilja D.J., 2005, Measuring Computer Performance: A Practitioner's Guide
   Microsoft, 2015, WIND MAN INSTR
   Nicoara A., 2005, ASMEA 2005, P125
   Nopnipa S, 2013, INT JOINT CONF COMP, P246
   Oracle, 2017, DYN PROX CLASS
   Oracle, 2017, JAV VIRT MACH SUPP N
   Oracle, 2017, JAV HOTSPOT VIRT MAC
   Ortin F, 2004, J SYST SOFTWARE, V71, P229, DOI 10.1016/S0164-1212(02)00157-7
   Ortin Francisco, 2014, Dyna rev.fac.nac.minas, V81, P242, DOI 10.15446/dyna.v81n186.40428
   Ortin F, 2014, IEEE SOFTWARE, V31, P81, DOI 10.1109/MS.2013.46
   Ortin F, 2014, INFORM SOFTWARE TECH, V56, P199, DOI 10.1016/j.infsof.2013.09.002
   Ortin F, 2011, INT J SOFTW ENG KNOW, V21, P891, DOI 10.1142/S0218194011005554
   Ortin F, 2011, COMPUT J, V54, P1901, DOI 10.1093/comjnl/bxr067
   OW2, 2017, ASM JAV BYT MAN AN F
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Pawlak R., 2001, MET ARCH SEP CROSSC, P1
   Pivotal, 2017, ASP OR PROGR SPRING
   Ponge J., 2017, JOOFLUX IS JAVA AGEN
   Ponge J., 2012, ARXIV12101039ABS1210
   Popovici A., 2001, TECHNICAL REPORT
   Popovici Andrei., 2003, AOSD 03, P100
   Rodriguez-Prieto O., 2017, EFFICIENT RUNTIME AS
   Segura-Devillecliaise Marc., 2003, AOSD '03: Proceedings of the 2nd international conference on Aspect-oriented software development, P110
   Stevenson Andrew, 2008, Proceedings of the 2008 International Conference on Parallel and Distributed Processing Techniques and Applications (PDPTA 2008), P485
   Suvee Davy., 2003, AOSD 03 P 2 INT C AS, P21, DOI DOI 10.1145/643603.643606.DEVELOPMENT
   Vanderperren W, 2004, DYN ASP WORKSH, P120
   Zinky J. A., 1997, Theory and Practice of Object Systems, V3, P55, DOI 10.1002/(SICI)1096-9942(1997)3:1<55::AID-TAPO6>3.0.CO;2-6
   [No title captured]
NR 51
TC 1
Z9 1
U1 1
U2 13
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2018
VL 100
BP 73
EP 86
DI 10.1016/j.infsof.2018.03.012
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GJ1VN
UT WOS:000435056100005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mosqueira-Rey, E
   Alonso-Ríos, D
   Moret-Bonillo, V
   Fernández-Varela, I
   Alvarez-Estévez, D
AF Mosqueira-Rey, Eduardo
   Alonso-Rios, David
   Moret-Bonillo, Vicente
   Fernandez-Varela, Isaac
   Alvarez-Estevez, Diego
TI A systematic approach to API usability: Taxonomy-derived criteria and a
   case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Usability; Usability taxonomies; Usability studies; Application program
   interfaces; APIs; Sleep medicine
ID EXCHANGE; METRICS; FORMAT; MODEL
AB Context The currently existing literature about Application Program Interface (API) usability is heterogeneous in terms of goals, scope, and audience; and its connection to accepted definitions of usability is rarely made explicit. The use of metrics to measure API usability is focused only on measurable characteristics excluding those usability aspects that are related to the subjectivity of human opinions.
   Objective: Our objective is to build a comprehensive set of heuristics and guidelines for API usability that is a structured synthesis of the existing literature on API usability but which also covers other aspects that have been neglected so far. This set is explicitly connected with a usability model, something that allows us to check if we are addressing actual usability problems.
   Method: Our approach is to follow a systematic approach based on a comprehensive model of usability and context-of-use. From this comprehensive model we derived the set of heuristics and guidelines that are used to carry out a heuristic evaluation with usability experts and a subjective analysis with users. The influence of the context of use, something that is normally ignored, is explicitly analyzed.
   Results: Our heuristics and guidelines were integrated into a usability study of a sleep medicine API. In this study, we were able to identify several usability issues of the proposed API that are not explicitly addressed in the existing literature. The context of use helped us to identify those categories that were more relevant to consider in order to improve API usability.
   Conclusion: The literature on API usability is very technically-minded and tends to neglect the subjective component of usability. We contribute to a more global and comprehensive view of the usability of APIs that is not contradictory but complementary with metrics. Our criteria ease the always necessary usability evaluation with human evaluators and users.
C1 [Mosqueira-Rey, Eduardo; Alonso-Rios, David; Moret-Bonillo, Vicente; Fernandez-Varela, Isaac] Univ A Coruna, Dept Comp Sci, Campus Elvina, La Coruna 15071, Spain.
   [Alvarez-Estevez, Diego] Haaglanden Med Ctr, Sleep Ctr, Lijnbaan 32, NL-2512 VA The Hague, Netherlands.
   [Alvarez-Estevez, Diego] Haaglanden Med Ctr, Clin Neurophysiol Haaglanden Med Ctr, Lijnbaan 32, NL-2512 VA The Hague, Netherlands.
C3 Universidade da Coruna; Haaglanden Medical Center; Haaglanden Medical
   Center
RP Mosqueira-Rey, E (corresponding author), Univ A Coruna, Dept Comp Sci, Campus Elvina, La Coruna 15071, Spain.
EM eduardo@udc.es; dalonso@udc.es; civmoret@udc.es; isaac.fvarela@udc.es;
   dalvareze@udc.es
RI Moret-Bonillo, Vicente/K-1049-2017; Rey, Eduardo Mosqueira/B-1959-2013;
   Alvarez-Estevez, Diego/A-5950-2011; Alonso Ríos, David/H-9793-2014
OI Moret-Bonillo, Vicente/0000-0002-9435-3151; Rey, Eduardo
   Mosqueira/0000-0002-4894-1067; Alvarez-Estevez,
   Diego/0000-0001-5790-0577; Alonso Ríos, David/0000-0003-2147-3010
FU Xunta de Galicia (Spain) [GRC2014/035]; Ministerio de Economia y
   Competitividad (MINECO, Spain) [TIN2013-40686-P MINECO]; Xunta de
   Galicia (Centro singular de investigacion de Galicia accreditation)
   [ED431G/01]; European Union (European Regional Development Fund - ERDF)
FX This work has been supported by Xunta de Galicia (Spain) under project
   GRC2014/035, and Ministerio de Economia y Competitividad (MINECO,
   Spain), under project TIN2013-40686-P MINECO. Also financial support
   from the Xunta de Galicia (Centro singular de investigacion de Galicia
   accreditation 2016-2019, REF. ED431G/01) and the European Union
   (European Regional Development Fund - ERDF), is gratefully acknowledged.
CR Alonso-Ríos D, 2010, INT J HUM-COMPUT INT, V26, P941, DOI 10.1080/10447318.2010.502099
   Alonso-Ríos D, 2010, INT J HUM-COMPUT INT, V26, P53, DOI 10.1080/10447310903025552
   Alonso-Ríos D, 2014, INT J HUM-COMPUT INT, V30, P585, DOI 10.1080/10447318.2014.907463
   Alvarez-Estevez Diego, 2015, Sleep Disord, V2015, P237878, DOI 10.1155/2015/237878
   Alvarez-Estévez D, 2013, EXPERT SYST APPL, V40, P1796, DOI 10.1016/j.eswa.2012.09.022
   American Academy of Sleep Medicine, 2014, International classification of sleep disorders, third edition (ICSD3)
   [Anonymous], CMPT816 U SASK SOFTW
   [Anonymous], THESIS
   [Anonymous], 2005, QUEUE
   [Anonymous], DESIGN GOOD API WHY
   [Anonymous], 15005 ISO
   [Anonymous], 2008, Practical API design: Confessions of a Java framework architect
   [Anonymous], 1993, 10611992 IEEE, DOI DOI 10.1109/IEEESTD.1993.115124
   [Anonymous], 1998, ISO 9241-11
   [Anonymous], 2004, API USABILITY GUIDEL
   [Anonymous], 2001, StandardISO/IEC9126
   Beck Kent, 2007, Implementation Patterns
   Berry RB., 2016, AM ACAD SLEEP, V2.III edn
   Bertoa MF, 2006, J SYST SOFTWARE, V79, P427, DOI 10.1016/j.jss.2005.06.026
   Bevan N, 2009, LECT NOTES COMPUT SC, V5619, P13, DOI 10.1007/978-3-642-02806-9_2
   Bloch Joshua., 2008, Effective Java (2nd Edition), V2
   Bore C, 2005, IEEE ICCE, P155, DOI 10.1109/ICCE.2005.1429764
   Clarke S, 2004, DR DOBBS J, V29, pS6
   Clarke Steven., 2005, Cognitive Dimensions of Notations 10th Anniversary Workshop, page, P131
   Cwalina K., 2008, FRAMEWORK DESIGN GUI
   Daughtry John M., 2009, Software Engineering Notes, V34, P27, DOI 10.1145/1543405.1543429
   de Souza CRB, 2009, PROC INT CONF SOFTW, P299, DOI 10.1109/ICSE-COMPANION.2009.5071006
   Ellis B, 2007, PROC INT CONF SOFTW, P302
   Fenton N., 2015, Software Metrics: A Rigorous and Practical Approach
   Fernández-Leal A, 2017, KNOWL-BASED SYST, V118, P140, DOI 10.1016/j.knosys.2016.11.016
   Glasberg D., 2000, VALIDATING OBJECT OR
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Grill Thomas, 2012, Human-Centered Software Engineering. Proceedings of the 4th International Conference, HCSE 2012, P164, DOI 10.1007/978-3-642-34347-6_10
   Henning M., 2007, ACM Queue, V5, P25, DOI 10.1145/1255421.1255422
   Ivory MY, 2001, ACM COMPUT SURV, V33, P470, DOI 10.1145/503112.503114
   KEMP B, 1992, ELECTROEN CLIN NEURO, V82, P391, DOI 10.1016/0013-4694(92)90009-7
   Kemp B, 2003, CLIN NEUROPHYSIOL, V114, P1755, DOI 10.1016/S1388-2457(03)00123-8
   Lewis JR, 2014, INT J HUM-COMPUT INT, V30, P663, DOI 10.1080/10447318.2014.930311
   Martin Robert C, 2009, Clean Code: a Handbook of Agile Software Craftsmanship
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McLellan SG, 1998, IEEE SOFTWARE, V15, P78, DOI 10.1109/52.676963
   Myers BA, 2016, COMPUTER, V49, P44, DOI 10.1109/MC.2016.200
   Myers BA, 2016, COMMUN ACM, V59, P62, DOI 10.1145/2896587
   Nielsen J., Usability heuristics for user interface design, P10
   Piccioni Marco, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P5, DOI 10.1109/ESEM.2013.14
   Rama GM, 2015, SOFTWARE PRACT EXPER, V45, P75, DOI 10.1002/spe.2215
   Scheller T, 2015, INFORM SOFTWARE TECH, V61, P145, DOI 10.1016/j.infsof.2015.01.009
   Seffah A, 2006, SOFTWARE QUAL J, V14, P159, DOI 10.1007/s11219-006-7600-8
   Stylos J, 2007, PROC INT CONF SOFTW, P529
   Stylos Jeffrey., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering, SIGSOFT '08/FSE-16, P105
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
   Winter S, 2008, LECT NOTES COMPUT SC, V4940, P106
   Zibran M. F., 2011, 2011 18th Working Conference on Reverse Engineering, P151, DOI 10.1109/WCRE.2011.26
   Zibran MF, 2008, INT J COMPUT SCI NET, V8, P255
NR 54
TC 23
Z9 28
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2018
VL 97
BP 46
EP 63
DI 10.1016/j.infsof.2017.12.010
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GA0MR
UT WOS:000428008600004
DA 2024-07-18
ER

PT J
AU Calefato, F
   Lanubile, F
   Novielli, N
AF Calefato, Fabio
   Lanubile, Filippo
   Novielli, Nicole
TI How to ask for technical help? Evidence-based guidelines for writing
   questions on Stack Overflow
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Social software engineering; Crowdsourcing; Stack Overflow; Question
   answering; Sentiment analysis; Emotion mining
AB Context The success of Stack Overflow and other community-based question-and-answer (Q&A) sites depends mainly on the will of their members to answer others' questions. In fact, when formulating requests on Q&A sites, we are not simply seeking for information. Instead, we are also asking for other people's help and feedback. Understanding the dynamics of the participation in Q&A communities is essential to improve the value of crowdsourced knowledge.
   Objective: In this paper, we investigate how information seekers can increase the chance of eliciting a successful answer to their questions on Stack Overflow by focusing on the following actionable factors: affect, presentation quality, and time.
   Method: We develop a conceptual framework of factors potentially influencing the success of questions in Stack Overflow. We quantitatively analyze a set of over 87 K questions from the official Stack Overflow dump to assess the impact of actionable factors on the success of technical requests. The information seeker reputation is included as a control factor. Furthermore, to understand the role played by affective states in the success of questions, we qualitatively analyze questions containing positive and negative emotions. Finally, a survey is conducted to understand how Stack Overflow users perceive the guideline suggestions for writing questions.
   Results: We found that regardless of user reputation, successful questions are short, contain code snippets, and do not abuse with uppercase characters. As regards affect, successful questions adopt a neutral emotional style.
   Conclusion: We provide evidence-based guidelines for writing effective questions on Stack Overflow that software engineers can follow to increase the chance of getting technical help. As for the role of affect, we empirically confirmed community guidelines that suggest avoiding rudeness in question writing.
C1 [Calefato, Fabio] Univ Bari A Moro, Dipartimento Jonica, Via Duomo 259, I-74123 Taranto, Italy.
   [Lanubile, Filippo; Novielli, Nicole] Univ Bari A Moro, Dipartimento Infomat, Via E Orabona 4, I-70125 Bari, Italy.
C3 Universita degli Studi di Bari Aldo Moro; Universita degli Studi di Bari
   Aldo Moro
RP Novielli, N (corresponding author), Univ Bari A Moro, Dipartimento Infomat, Via E Orabona 4, I-70125 Bari, Italy.
EM fabio.calefato@uniba.it; fllippo.lanubile@uniba.it;
   nicole.novielli@uniba.it
RI Lanubile, Filippo/AAF-9132-2020; Calefato, Fabio/H-4177-2014; Novielli,
   Nicole/Y-9583-2019
OI Lanubile, Filippo/0000-0003-3373-7589; Calefato,
   Fabio/0000-0003-2654-1588; Novielli, Nicole/0000-0003-1160-2608
FU project TmoQuest Investigating the Role of Emotions in Online Question &
   Answer Sites' - Italian Ministry of Education, University and Research
   (MIUR) under program "Scientific Independence of young Researchers"
   (SIR); MIUR
FX This work is partially supported by the project TmoQuest Investigating
   the Role of Emotions in Online Question & Answer Sites', funded by the
   Italian Ministry of Education, University and Research (MIUR) under the
   program "Scientific Independence of young Researchers" (SIR). The
   computational work has been executed on the IT resources made available
   by two projects, ReCaS and PRISMA funded by MIUR under the program "PON
   R&C 2007-2013".
CR Abdalkareem R, 2017, IEEE SOFTWARE, V34, P53, DOI 10.1109/MS.2017.31
   Althoff T., 2014, ICWSM
   Anderson Ashton, 2012, P 18 ACM SIGKDD INT, DOI DOI 10.1145/2339530.2339665
   [Anonymous], 2014, Proceedings of the 6th international workshop on social software engineering, DOI 10.1145/2661685.2661689
   [Anonymous], 2015, J TROPICAL PEDIAT, P44
   [Anonymous], 2016, P 10 INT WORKSH SEM
   [Anonymous], 2016, P 1 INT WORKSH EM AW
   [Anonymous], 2008, GUIDE ADV EMPIRICAL
   Asaduzzaman M., 2013, P 10 IEEE WORK C MIN, V97, P100
   Basile P., 2015, P 2 IT C COMP LING C
   Bazelli B, 2013, PROC IEEE INT CONF S, P460, DOI 10.1109/ICSM.2013.72
   Bo Pang, 2008, Foundations and Trends in Information Retrieval, V2, P1, DOI 10.1561/1500000001
   Bosu A., 2013, P 10 IEEE WORK C MIN, V89, P92
   Calefato F., 2016, P 10 ACM IEEE INT S
   Calefato F., 2015, P 12 IEEE WORK C MIN
   Calefato F., 2015, P 10 INT FOR KNOWL A
   Calefato F., 2017, P 7 AFF COM IN PRESS
   Carofiglio V, 2009, AFFECTIVE INFORMATION PROCESSING, P23, DOI 10.1007/978-1-84800-306-4_3
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Collins A, 1990, The cognitive structure of emotions
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Destefanis G, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.73
   Duijn M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P410, DOI 10.1109/MSR.2015.51
   Ekman P., 1999, HDB COGNITION EMOTIO
   Gachechiladze D., 2017, P ICSE 2017 NIER TRA
   Gamon M, 2005, LECT NOTES COMPUT SC, V3646, P121
   Garcia D, 2013, 2013 IEEE THIRD INTERNATIONAL CONFERENCE ON CLOUD AND GREEN COMPUTING (CGC 2013), P410, DOI 10.1109/CGC.2013.71
   Graziotin D, 2015, J SOFTW-EVOL PROC, V27, P467, DOI 10.1002/smr.1673
   Guzman E., 2014, Association for Computing Machinery, P352
   Guzman E, 2013, P 2013 9 JOINT M FDN, P671, DOI 10.1145/2491411.2494578
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Hahsler M, 2011, J MACH LEARN RES, V12, P2021
   Islam MR, 2017, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2017.9
   Jongeling R, 2017, EMPIR SOFTW ENG, V22, P2543, DOI 10.1007/s10664-016-9493-x
   Jongeling R, 2015, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSM.2015.7332508
   Kucuktunc O., 2012, Proceedings of the Fifth ACM International Conference on Web Search and Data Mining, P633, DOI [DOI 10.1145/2124295.2124371, 10.1145/2124295.2124371]
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Mäntylä MV, 2017, IEEE WORK CONF MIN S, P198, DOI 10.1109/MSR.2017.47
   Menard S., 1995, APPL LOGISTIC REGRES
   Mitra T., 2014, P 17 ACM C COMP SUPP, P49, DOI [DOI 10.1145/2531602.2531656, 10.1145/2531602.2531656]
   Müller SC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P688, DOI 10.1109/ICSE.2015.334
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Novielli N, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P33, DOI 10.1145/2804381.2804387
   Ortu M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P303, DOI 10.1109/MSR.2015.35
   Osborne J.W., 2006, PRACT ASSESS RES EVA, V11, P7
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Ponzanelli L, 2014, INT CONF QUAL SOFTW, P343, DOI 10.1109/QSIC.2014.27
   Rahman M.M., P IEEE 15 I IN PRESS
   RUSSELL JA, 1980, J PERS SOC PSYCHOL, V39, P1161, DOI 10.1037/h0077714
   Scherer KR, 2004, SOC SCI INFORM, V43, P499, DOI 10.1177/0539018404047701
   Skeet J., 2010, WRITING PERFECT QUES
   Storey M A, 2012, P 9 IEEE WORK C MIN, P140
   Storey MA., 2010, P FSE SDP WORKSH FUT, P359, DOI DOI 10.1145/1882362.1882435
   Storey Margaret-Anne, 2013, P 2013 C COMPUTER SU, P103
   Storey Margaret-Anne, 2014, FUT SOFTW ENG P, P100, DOI 10.1145/2593882.2593887
   Thelwall M, 2012, J AM SOC INF SCI TEC, V63, P163, DOI 10.1002/asi.21662
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Ye DH, 2017, EMPIR SOFTW ENG, V22, P375, DOI 10.1007/s10664-016-9430-z
NR 60
TC 75
Z9 78
U1 3
U2 33
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2018
VL 94
BP 186
EP 207
DI 10.1016/j.infsof.2017.10.009
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FO6WE
UT WOS:000417009000011
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Estañol, M
   Sancho, MR
   Teniente, E
AF Estanol, Montserrat
   Sancho, Maria-Ribera
   Teniente, Ernest
TI Ensuring the semantic correctness of a BAUML artifact-centric BPM
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Verification; Validation; Reasoning; Tool; Business process modeling;
   UML
ID WORKFLOW NETS; VERIFICATION; SOUNDNESS; CHECKING
AB Context: Using models to represent business processes provides several advantages, such as facilitating the communication between the stakeholders or being able to check the correctness of the processes before their implementation. In contrast to traditional process modeling approaches, the artifact-centric approach treats data as a key element of the process, also considering the tasks or activities that are performed in it.
   Objective: This paper presents a way to verify and validate the semantic correctness of an artifact-centric business process model defined using a combination of UML and OCL models - a BAUML model.
   Method: We achieve our goal by presenting several algorithms that encode the initial models into first order logic, which then allows to use an existing satisfiability checking tool to determine their correctness.
   Results: An approach to verify and validate an artifact-centric BPM specified in BAUML, which uses a combination of UML and OCL models. To do this, we provide a method to translate all BAUML components into a set of logic formulas. The result of this translation ensures that the only changes allowed are those specified in the model, and that those changes are taking place according the order established by the model. Having obtained this logic representation, these models can be validated by any existing reasoning method able to deal with negation of derived predicates. Moreover, we show how to automatically generate the relevant tests to validate the models. We also show the feasibility of our approach by implementing a prototype tool and applying it to a running example.
   Conclusion: It is feasible to ensure the semantic correctness of an artifact-centric business process model in practice. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Estanol, Montserrat; Sancho, Maria-Ribera; Teniente, Ernest] Univ Politecn Cataluna, Dept Serv & Informat Syst Engn, Barcelona, Spain.
   [Sancho, Maria-Ribera] Barcelona Supercomp Ctr, Barcelona, Spain.
C3 Universitat Politecnica de Catalunya; Universitat Politecnica de
   Catalunya; Barcelona Supercomputer Center (BSC-CNS)
RP Estañol, M (corresponding author), Univ Politecn Cataluna, Dept Serv & Informat Syst Engn, Barcelona, Spain.
EM estanyol@essi.upc.edu; ribera@essi.upc.edu; teniente@essi.upc.edu
RI Sancho, Maria-Ribera/C-5634-2011; Teniente, Ernest/L-4313-2014
FU Ministerio de Economia y Competitividad [TIN2014-52938-C2-2-R];
   Secretaria d'Universitats i Recerca de la Generalitat de Catalunya [2014
   SGR 1534]
FX This work has been partially supported by the Ministerio de Economia y
   Competitividad, under project TIN2014-52938-C2-2-R and by the Secretaria
   d'Universitats i Recerca de la Generalitat de Catalunya under project
   2014 SGR 1534.
CR Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   Awad A, 2010, LECT NOTES BUS INF P, V43, P5
   Bagheri Hariri B., 2013, Proceedings of the 32Nd Symposium on Principles of Database Systems. PODS '13, P163, DOI DOI 10.1145/2463664.2465221
   Basu S., 2013, LNCS, V8274
   Belardinelli F, 2011, LECT NOTES COMPUT SC, V7084, P142, DOI 10.1007/978-3-642-25535-9_10
   Bhattacharya K, 2007, LECT NOTES COMPUT SC, V4714, P288
   Borrego D, 2015, INFORM SOFTWARE TECH, V62, P187, DOI 10.1016/j.infsof.2015.02.010
   Cabot J, 2010, INFORM SYST, V35, P417, DOI 10.1016/j.is.2008.12.002
   Calvanese Diego, 2012, Web Reasoning and Rule Systems. Proceedings of the 6th International Conference (RR 2012), P25, DOI 10.1007/978-3-642-33203-6_4
   Calvanese Diego., 2014, Proceedings of the 23rd ACM International Conference on Conference on Information and Knowledge Management (CIKM'14), p1289s1298, DOI [DOI 10.1145/2661829.2662050, 10.1145/2661829. 2662050]
   Choi YS, 2005, LECT NOTES COMPUT SC, V3707, P84
   Choppy Christine, 2011, ACM SIGSOFT SOFTW EN, V36, P1, DOI [10.1145/1921532.1921561, DOI 10.1145/1921532.1921561]
   Damaggio Elio, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P3, DOI 10.1007/978-3-642-23059-2_3
   Damaggio E, 2012, ACM T DATABASE SYST, V37, DOI 10.1145/2338626.2338628
   Deutsch A., 2009, Proc. Int. Conf. on Database Theory (ICDT), P252, DOI DOI 10.1145/1514894.1514924
   Eshuis R, 2006, ACM T SOFTW ENG METH, V15, P1, DOI 10.1145/1125808.1125809
   Estanol M., REASONING UML DATA C, P437
   Estanol M, 2015, LECT NOTES BUS INF P, V220, P62, DOI 10.1007/978-3-319-20052-1_4
   Estañol M, 2015, LECT NOTES COMPUT SC, V9097, P434, DOI 10.1007/978-3-319-19069-3_27
   Farre C., 2008, DBTEST 2008, P1
   Gerede CE, 2007, LECT NOTES COMPUT SC, V4749, P181
   Getir S, 2014, INT J COOP INF SYST, V23, DOI 10.1142/S0218843014500051
   Gonzalez P., 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P25, DOI 10.1109/ICWS.2012.31
   Gonzalez Pavel., 2013, ICSOC, P54
   Hariri BB, 2012, FRONT ARTIF INTEL AP, V242, P103, DOI 10.3233/978-1-61499-098-7-103
   Heath F.T., BARCELONA DESIGN RUN, P705
   Hull R, 2008, LECT NOTES COMPUT SC, V5332, P1152
   ISO, 2012, 195072012 ISO IEC
   Kardasis P, 2004, INFORM SOFTWARE TECH, V46, P701, DOI 10.1016/j.infsof.2003.12.003
   Knuplesch D, 2010, LECT NOTES COMPUT SC, V6412, P332, DOI 10.1007/978-3-642-16373-9_24
   Larman C., 2002, APPL UML PATTERNS, V2nd
   Lin H., 2002, HICSS'02: Proc. of 35th Annual Hawaii International Conference on System Sciences (HICSS'02), P289
   Lohmann N, 2013, INFORM SYST, V38, P606, DOI 10.1016/j.is.2012.07.003
   Lohmann N, 2010, LECT NOTES COMPUT SC, V6470, P32, DOI 10.1007/978-3-642-17358-5_3
   Lucas FJ, 2009, INFORM SOFTWARE TECH, V51, P1631, DOI 10.1016/j.infsof.2009.04.009
   Queralt A, 2006, LECT NOTES COMPUT SC, V4244, P33
   Queralt A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089123
   Queralt A, 2012, DATA KNOWL ENG, V73, P1, DOI 10.1016/j.datak.2011.09.004
   Queralt A, 2009, LECT NOTES COMPUT SC, V5565, P47, DOI 10.1007/978-3-642-02144-2_9
   Reggio G., 2011, 2011 First International Workshop on Empirical Requirements Engineering, P61, DOI 10.1109/EmpiRE.2011.6046257
   Rinderle-Ma S., 2009, EMISA FORUM, V29, P25
   Rull G, 2008, LECT NOTES COMPUT SC, V5181, P660, DOI 10.1007/978-3-540-85654-2_56
   Rull G, 2015, SOFTW SYST MODEL, V14, P953, DOI 10.1007/s10270-013-0350-8
   Sidorova N, 2011, INFORM SYST, V36, P1026, DOI 10.1016/j.is.2011.04.004
   Störrle H, 2005, ELECTRON NOTES THEOR, V127, P35, DOI 10.1016/j.entcs.2004.08.046
   Straeten R.V.D., 2003, DESCRIPTION LOGICS, V81
   Utting M., 2007, PRACTICAL MODEL BASE
   van der Aalst WMP, 2011, FORM ASP COMPUT, V23, P333, DOI 10.1007/s00165-010-0161-4
   van Dongen BF, 2005, LECT NOTES COMPUT SC, V3520, P372
   Weber I, 2010, DISTRIB PARALLEL DAT, V27, P271, DOI 10.1007/s10619-010-7060-9
NR 50
TC 11
Z9 11
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2018
VL 93
BP 147
EP 162
DI 10.1016/j.infsof.2017.09.003
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FM3BC
UT WOS:000414878200010
OA Green Published
DA 2024-07-18
ER

PT J
AU Sosnowski, J
   Dobrzynski, B
   Janczarek, P
AF Sosnowski, Janusz
   Dobrzynski, Bartosz
   Janczarek, Pawel
TI Analysing problem handling schemes in software projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software repositories; Tracking software bugs; Software process
   evaluation and improvement; Fault management
ID SEARCH; BUGS
AB Context: Although many papers have been published on software development and maintenance processes, there is still a need for deeper exploration of software repositories related to real projects to evaluate these processes.
   Objective: The aim of this study is to present and evaluate different schemes of handling problems (bugs) during software development and maintenance. It is based on exploring information comprised in various software repositories.
   Method: Having analysed the contents of software repositories we have introduced a graph model describing problem handling processes and a scheme of analysing the effectiveness of these processes. This analysis is targeted at structural, throughput and timing aspects. The presented methodology has been verified on real data comprised in open source and commercial projects. Moreover, having identified some drawbacks and anomalies, we point out possible improvements in problem reports and their management.
   Results: Detailed software repositories provide a wider scope of possible measures to assess the relevant problem handling processes. This is helpful in controlling single projects (local perspective) as well as in managing these processes in the whole company (global perspective).
   Conclusion: Detailed problem handling reports extend the space and quality of statistical analysis, the presented graph model with proposed metrics provides a useful tool to evaluate and refine problem resolution schemes. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Sosnowski, Janusz; Dobrzynski, Bartosz; Janczarek, Pawel] Warsaw Univ Technol, Inst Comp Sci, Ul Nowowiejska 15-19, Warsaw, Poland.
C3 Warsaw University of Technology
RP Sosnowski, J (corresponding author), Warsaw Univ Technol, Inst Comp Sci, Ul Nowowiejska 15-19, Warsaw, Poland.
EM jss@ii.pw.edu.pl; dobrzynski.b@gmail.com; pawel.janczarek@grnail.com
CR Çaglayan B, 2016, J SYST SOFTWARE, V118, P288, DOI 10.1016/j.jss.2016.03.055
   Cavalcanti YC, 2013, SOFTWARE QUAL J, V21, P39, DOI 10.1007/s11219-011-9164-5
   Cinque M, 2014, LECT NOTES COMPUT SC, V8583, P461, DOI 10.1007/978-3-319-09156-3_33
   Cotroneo D, 2016, J SYST SOFTWARE, V113, P27, DOI 10.1016/j.jss.2015.11.021
   D'Ambros M., 2007, PROCEEDINGS OF THE 4
   Dal Sassc Tommaso, 2013, SOFTWARE VISUALIZATI, P1
   Dobrzynski B, 2016, ADV INTELL SYST, V470, P109, DOI 10.1007/978-3-319-39639-2_10
   Garousi V, 2009, LECT NOTES COMPUT SC, V5543, P112, DOI 10.1007/978-3-642-01680-6_12
   Halverson C.A., 2006, Proceedings of the Conference on Computer Supported Cooperative Work, CSCW '06, P39
   Hammad M., 2014, INT J SOFTW ENG APPL, V8, P37
   Hesse TM, 2016, INFORM SOFTWARE TECH, V79, P36, DOI 10.1016/j.infsof.2016.06.003
   Ihara A, 2014, INT CONF QUAL SOFTW, P47, DOI 10.1109/QSIC.2014.30
   Janczarek P, 2015, INFORM SOFTWARE TECH, V58, P272, DOI 10.1016/j.infsof.2014.06.015
   Jeong G., 2009, Proceedings of the 7th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on The Foundations of Software Engineering. ESEC/FSE'09, P111, DOI DOI 10.1145/1595696.1595715
   Lamkanfi A, 2011, EUR CON SFTWR MTNCE, P249, DOI 10.1109/CSMR.2011.31
   Macke D, 2008, LECT NOTES COMPUT SC, V5007, P395, DOI 10.1007/978-3-540-79588-9_34
   Netto FD, 2016, INT J SOFTW ENG KNOW, V26, P239, DOI 10.1142/S021819401650011X
   Ogasawara H, 2014, J SOFTW-EVOL PROC, V26, P521, DOI 10.1002/smr.1607
   Pereira AM, 2013, INT J SOFTW ENG KNOW, V23, P189, DOI 10.1142/S0218194013500046
   Petersen K., 2009, P INT C PROD FOC SOF, P1
   PETERSEN K, 2012, P AG PROC SOFTW ENG, P108
   Poncin W, 2011, EUR CON SFTWR MTNCE, P5, DOI 10.1109/CSMR.2011.5
   Rakha MS, 2016, EMPIR SOFTW ENG, V21, P1960, DOI 10.1007/s10664-015-9404-6
   Rana R., 2015, P INT C SOFTW MEAS
   Rana R, 2014, J SYST SOFTWARE, V98, P59, DOI 10.1016/j.jss.2014.08.033
   Ruohonen K., 2013, GRAPH THEORY
   Saha RK, 2015, INFORM SOFTWARE TECH, V65, P114, DOI 10.1016/j.infsof.2015.03.002
   Staron M, 2010, INFORM SOFTWARE TECH, V52, P1069, DOI 10.1016/j.infsof.2010.05.005
   Strate JD, 2013, IEEE T RELIAB, V62, P444, DOI 10.1109/TR.2013.2259204
   Tran HM, 2009, J NETW SYST MANAG, V17, P285, DOI 10.1007/s10922-009-9134-4
   Zhang W, 2016, INFORM SOFTWARE TECH, V70, P68, DOI 10.1016/j.infsof.2015.10.004
   Zhou B., 2015, P 19 INT C EV ASS SO
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zimmermann T, 2012, PROC INT CONF SOFTW, P1074, DOI 10.1109/ICSE.2012.6227112
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 35
TC 9
Z9 9
U1 1
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2017
VL 91
BP 56
EP 71
DI 10.1016/j.infsof.2017.06.006
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FG3DV
UT WOS:000410017900004
DA 2024-07-18
ER

PT J
AU Mariani, T
   Vergilio, SR
AF Mariani, Thaina
   Vergilio, Silvia Regina
TI A systematic review on search-based refactoring
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Search-based software engineering; Refactoring; Evolutionary algorithms
ID CODE-SMELLS; SOFTWARE; CONFLICT; MODEL
AB Context: To find the best sequence of refactorings to be applied in a software artifact is an optimization problem that can be solved using search techniques, in the field called Search-Based Refactoring (SBR). Over the last years, the field has gained importance, and many SBR approaches have appeared, arousing research interest.
   Objective: The objective of this paper is to provide an overview of existing SBR approaches, by presenting their common characteristics, and to identify trends and research opportunities.
   Method: A systematic review was conducted following a plan that includes the definition of research questions, selection criteria, a search string, and selection of search engines. 71 primary studies were selected, published in the last sixteen years. They were classified considering dimensions related to the main SBR elements, such as addressed artifacts, encoding, search technique, used metrics, available tools, and conducted evaluation.
   Results: Some results show that code is the most addressed artifact, and evolutionary algorithms are the most employed search technique. Furthermore, most times, the generated solution is a sequence of refactorings. In this respect, the refactorings considered are usually the ones of the Fowler's Catalog. Some trends and opportunities for future research include the use of models as artifacts, the use of many objectives, the study of the bad smells effect, and the use of hyper-heuristics.
   Conclusions: We have found many SBR approaches, most of them published recently. The approaches are presented, analyzed, and grouped following a classification scheme. The paper contributes to the SBR field as we identify a range of possibilities that serve as a basis to motivate future researches. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Mariani, Thaina; Vergilio, Silvia Regina] Univ Fed Parana UFPR, Dept Comp Sci, CF 19-081, BR-81531970 Curitiba, Parana, Brazil.
C3 Universidade Federal do Parana
RP Mariani, T (corresponding author), Univ Fed Parana UFPR, Dept Comp Sci, CF 19-081, BR-81531970 Curitiba, Parana, Brazil.
EM tmariani@inf.ufpr.br; silvia@inf.ufpr.br
FU CAPES; CNPq [307762/2015-7, 473899/2013-2]
FX This work is supported by Brazilian funding agencies CAPES and CNPq
   [grant numbers 307762/2015-7, 473899/2013-2].
CR Abebe Mesfin., 2014, INT J SOFTWARE ENG I, V8, P299, DOI [10.14257/ijseia.2014.8.6.24, DOI 10.14257/IJSEIA.2014.8.6.24]
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Alkhazi B, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P295, DOI 10.1145/2976767.2976782
   Alves V., 2006, Proceedings of the 5th international conference on Generative Programming and Component Engineering, P201, DOI [10.1145/1173706, DOI 10.1145/1173706]
   Amal B, 2014, LECT NOTES COMPUT SC, V8636, P31
   Ambler SW, 2006, ADD-WES SIGNAT SER, P1
   [Anonymous], PRO PHP REFACTORING
   [Anonymous], SSBSE
   [Anonymous], P S OBJ OR PROGR EMP
   [Anonymous], FSE
   [Anonymous], 2009, TECHNICAL REPORT
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], EMPIR SOFTW ENG
   [Anonymous], P WORKSH DIR SOFTW E
   [Anonymous], P INT C FRONT INF TE
   [Anonymous], GECCO
   [Anonymous], P INT S COD GEN OPT
   [Anonymous], P EUR C SOFTW MAINT
   [Anonymous], GECCO
   [Anonymous], P IEEE INT WORK C SO
   [Anonymous], P WORLD C ENG COMP S
   [Anonymous], P INT C VIRT LEARN I
   [Anonymous], 2007, P WORKSH REF TOOLS W
   [Anonymous], 2013, P 28 ANN ACM S APPL
   [Anonymous], THESIS
   [Anonymous], GEN EV COMP C GECCO
   [Anonymous], P INT C INT ENG
   [Anonymous], 2006, Evolutionary Algorithms for Solving Multi-Objective Problems (Genetic and Evolutionary Computation)
   [Anonymous], EMPIR SOFTW ENG
   [Anonymous], P INT S SEARCH BAS S
   [Anonymous], T SOFTW ENG METHODOL
   [Anonymous], INT J INF TECHNOL IN
   [Anonymous], P 37 INT C SOFTW ENG
   [Anonymous], OPEN ACCESS SERIES I
   [Anonymous], P INT C SOFTW ENG RE
   [Anonymous], P WORLD C ENG COMP S
   Antoniol G, 2003, PROC IEEE INT CONF S, P235, DOI 10.1109/ICSM.2003.1235426
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Binkley D, 2015, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2015.7335396
   Bouktif S, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1885
   Burke EK, 2013, J OPER RES SOC, V64, P1695, DOI 10.1057/jors.2013.71
   Chatzigeorgiou A, 2014, INNOV SYST SOFTW ENG, V10, P3, DOI 10.1007/s11334-013-0205-z
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chisalita-Cretu Camelia, 2011, Advances in Computer Science and Engineering, P441
   Chisalita-Cretu C, 2009, 2009 SECOND INTERNATIONAL CONFERENCE ON THE APPLICATIONS OF DIGITAL INFORMATION AND WEB TECHNOLOGIES (ICADIWT 2009), P790, DOI 10.1109/ICADIWT.2009.5273850
   Cinneide M. O., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P437, DOI 10.1109/ICSTW.2011.23
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Counsell S., 2010, Advances in Software Engineering, DOI 10.1155/2010/820103
   Dea TJ, 2016, LECT NOTES COMPUT SC, V9962, P298, DOI 10.1007/978-3-319-47106-8_26
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Di Penta M, 2005, J SYST SOFTWARE, V77, P225, DOI 10.1016/j.jss.2004.03.033
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Ghaith Shadi, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P121, DOI 10.1007/978-3-642-33119-0_10
   Ghannem Adnane, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P96, DOI 10.1007/978-3-642-39742-4_9
   Ghannem A., 2015, SOFTWARE QUAL J, P1
   Ghannem A, 2014, J SOFTW-EVOL PROC, V26, P692, DOI 10.1002/smr.1644
   Ghannem Adnane., 2011, P C CTR ADV STUDIES, P175
   Gligoric M, 2014, ACM SIGPLAN NOTICES, V49, P599, DOI [10.1145/2660193.2660239, 10.1145/2714064.2660239]
   Griffith Isaac, 2011, Proceedings of the ISCA 24th International Conference on Computer Applications in Industry and Engineering, P316
   Griffith I., 2011, Proc. Int. Work. Mach. Learn. Technol. Softw. Eng, P35
   Griswold WG, 2015, IEEE SOFTWARE, V32, P30, DOI 10.1109/MS.2015.107
   Halupka I, 2012, ACTA POLYTECH, V52, P51
   Hanenberg S., 2003, 4th Annual International Conference on Object-Oriented and Internet-based Technologies, Concepts, P19
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Harold E.R., 2008, Refactoring HTML: Improving the Design of Existing Web Applications
   Herold S, 2014, LECT NOTES COMPUT SC, V8627, P390, DOI 10.1007/978-3-319-09970-5_33
   Jensen und A.C., 2010, Proceedings of the 12th Annual Conference on Genetic and Evolutionary Computation. GECCO '10, P1341
   Jia Y, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P15, DOI 10.1109/SBST.2015.10
   Kebir S, 2016, ENASE: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL SOFTWARE APPROACHES TO SOFTWARE ENGINEERING, P210, DOI 10.5220/0005891602100215
   Kessentini M, 2013, SOFTWARE QUAL J, V21, P551, DOI 10.1007/s11219-012-9187-6
   Kessentini M, 2011, CONF PROC INT SYMP C, P81, DOI 10.1109/ICPC.2011.22
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Koc E, 2012, COMPUTER AND INFORMATION SCIENCES II, P59, DOI 10.1007/978-1-4471-2155-8_7
   Koc E, 2012, LECT NOTES COMPUT SC, V7331, P318, DOI 10.1007/978-3-642-30976-2_38
   Kumari A.C., 2013, International Journal of Applied Information Systems, V5, P12
   Lee S, 2011, SOFTWARE PRACT EXPER, V41, P521, DOI 10.1002/spe.1031
   Liu H, 2008, IET SOFTW, V2, P446, DOI 10.1049/iet-sen:20070033
   Mahouachi R, 2012, LECT NOTES COMPUT SC, V7212, P455, DOI 10.1007/978-3-642-28872-2_31
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P473, DOI 10.1007/s11219-015-9284-4
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Mkaouer W, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1263, DOI 10.1145/2576768.2598366
   Moghadam IH, 2015, E-INFORMATICA, V9, P37, DOI 10.5277/e-Inf150103
   Moghadam IH, 2012, EUR CON SFTWR MTNCE, P43, DOI 10.1109/CSMR.2012.15
   Moghadam Iman Hemati., 2011, Proceeding of the 4th workshop on Refactoring tools - WRT'11, page, P41
   Mohan M, 2016, J SYST SOFTWARE, V120, P183, DOI 10.1016/j.jss.2016.05.019
   O'Keeffe M., 2003, PPPJ 03, P59, DOI [10.1145/957289.957308, DOI 10.1145/957289.957308]
   O'Keeffe M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1114
   O'Keeffe M, 2008, J SOFTW MAINT EVOL-R, V20, P345, DOI 10.1002/smr.378
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   O'Keeffe M, 2007, FRONT ARTIF INTEL AP, V161, P315
   Opdyke William F., 1992, THESIS
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Ouni A, 2015, J SYST SOFTWARE, V105, P18, DOI 10.1016/j.jss.2015.03.040
   Ouni A, 2015, SOFTWARE QUAL J, V23, P323, DOI 10.1007/s11219-014-9233-7
   Ouni A, 2014, ADV COMPUT, V94, P103, DOI 10.1016/B978-0-12-800161-5.00004-9
   Ouni A, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1461
   Ouni A, 2013, EUR CON SFTWR MTNCE, P221, DOI 10.1109/CSMR.2013.31
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Räihä O, 2010, COMPUT SCI REV, V4, P203, DOI 10.1016/j.cosrev.2010.06.001
   Roberts D., 1997, Theory and Practice of Object Systems, V3, P253, DOI 10.1002/(SICI)1096-9942(1997)3:4<253::AID-TAPO3>3.0.CO;2-T
   Romano D, 2014, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSME.2014.57
   Russell S., 2016, Artificial intelligence a modern approach
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Shimomura T., 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P213, DOI 10.1109/ICSEA.2010.39
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Simons Chris, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P47, DOI 10.1007/978-3-319-22183-0_4
   Suny? G., 2001, LNCS, P134, DOI DOI 10.1007/3-540-45441-1_11
   Talbi E.-G, 2009, METAHEURISTICS DESIG, V74, DOI DOI 10.1002/9780470496916
   Wang H, 2015, ADV INTEL SYS RES, V117, P35
   Wang MC, 2015, J INTELL SYST, V24, P85, DOI 10.1515/jisys-2013-0058
   Weber B, 2011, COMPUT IND, V62, P467, DOI 10.1016/j.compind.2010.12.012
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wongpiang Ratapong, 2013, 2013 IEEE 4th International Conference on Electronics Information and Emergency Communication (ICEIEC), P160, DOI 10.1109/ICEIEC.2013.6835477
   Wongpiang Ratapong, 2014, International MultiConference of Computer Scientists (IMEC 2014). Proceedings, P590
   YOURDON E, 1979, STRUCTURED DESIGN FU
   Zhang Y, 2008, LECT NOTES COMPUT SC, V5025, P88, DOI 10.1007/978-3-540-69062-7_8
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
   Zitzler E., 2001, 103 TIK DEPT EL ENG
NR 128
TC 63
Z9 69
U1 2
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2017
VL 83
BP 14
EP 34
DI 10.1016/j.infsof.2016.11.009
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ1YO
UT WOS:000393006700002
DA 2024-07-18
ER

PT J
AU Behutiye, WN
   Rodríguez, P
   Oivo, M
   Tosun, A
AF Behutiye, Woubshet Nema
   Rodriguez, Pilar
   Oivo, Markku
   Tosun, Ayse
TI Analyzing the concept of technical debt in the context of agile software
   development: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Technical debt; Agile software development; Technical debt management;
   Systematic literature review
AB Context: Technical debt (TD) is a metaphor that is used to communicate the consequences of poor software development practices to non-technical stakeholders. In recent years, it has gained significant attention in agile software development (ASD).
   Objective: The purpose of this study is to analyze and synthesize the state of the art of TD, and its causes, consequences, and management strategies in the context of ASD.
   Research Method: Using a systematic literature review (SLR), 38 primary studies, out of 346 studies, were identified and analyzed.
   Results: We found five research areas of interest related to the literature of TD in ASD. Among those areas, "managing TD in ASD" received the highest attention, followed by "architecture in ASD and its relationship with TD". In addition, eight categories regarding the causes and five categories regarding the consequences of incurring TD in ASD were identified. "Focus on quick delivery" and "architectural and design issues" were the most popular causes of incurring TD in ASD. "Reduced productivity", "system degradation" and "increased maintenance cost" were identified as significant consequences of incurring TD in ASD. Additionally, we found 12 strategies for managing TD in the context of ASD, out of which "refactoring" and "enhancing the visibility of TD" were the most significant.
   Conclusion: The results of this study provide a structured synthesis of TD and its management in the context of ASD as well as potential research areas for further investigation. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Behutiye, Woubshet Nema; Rodriguez, Pilar; Oivo, Markku] Univ Oulu, Oulu, Finland.
   [Tosun, Ayse] Istanbul Tech Univ, Fac Comp Engn & Informat, Sariyer, Turkey.
C3 University of Oulu; Istanbul Technical University
RP Behutiye, WN (corresponding author), Univ Oulu, Oulu, Finland.
EM woub.behutiye@gmail.com
RI Tosun, Ayse/B-4794-2014; Behutiye, Woubshet/AAM-6438-2020; Rodriguez,
   Pilar/HSE-9989-2023; Harrison, Dylan/AFP-8142-2022; Rodriguez,
   Pilar/C-1449-2015
OI Tosun, Ayse/0000-0003-1859-7872; Behutiye, Woubshet/0000-0002-9015-9941;
   Oivo, Markku/0000-0002-1698-2323; Rodriguez, Pilar/0000-0002-0618-6104
FU ICT SHOK N4S program - Finnish Funding Agency for Technology and
   Innovation (Tekes); Digile OY
FX This research has been partially supported by ICT SHOK N4S program
   financed by the Finnish Funding Agency for Technology and Innovation
   (Tekes) and Digile OY.
CR Abad ZSH, 2015, INT REQUIR ENG CONF, P230, DOI 10.1109/RE.2015.7320428
   Abrahamsson P., 2002, Agile Software Development Methods: Review and Analysis
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Alzaghoul E, 2013, IEEE AUS SOFT ENGR, P1, DOI 10.1109/ASWEC.2014.27
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   [Anonymous], AGILE PROCESSES SOFT
   [Anonymous], ARXIV10061955
   [Anonymous], CUTTER IT J LLC
   [Anonymous], TECHN DEBT 10X SOFTW
   [Anonymous], REFININIG DEFINITION
   [Anonymous], HIST AGILE MANIFESTO
   Bellomo S, 2014, I C DEPEND SYS NETWO, P702, DOI 10.1109/DSN.2014.104
   Cohen D, 2004, ADV COMPUT, V62, P1, DOI 10.1016/S0065-2458(03)62001-2
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fowler M., 2001, Software Development, V9, P28, DOI [DOI 10.1111/J.0022-0477.2004.00877.X, 10.1111/j.0022-0477.2004.00877.x]
   Fowler Martin, 2009, Technical debt quadrant, 2009
   Guo YP, 2016, EMPIR SOFTW ENG, V21, P159, DOI 10.1007/s10664-014-9351-7
   Ho Jason, 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P31, DOI 10.1109/MTD.2014.10
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kruchten Philippe, 2012, Software Engineering Notes, V37, P36, DOI 10.1145/2347696.2347698
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Kruchten Philippe, 2013, ACM SIGSOFT Software Engineering Notes, V38, P51
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   OGAWA RT, 1991, REV EDUC RES, V61, P265, DOI 10.3102/00346543061003265
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   Rodríguez P, 2012, INT SYMP EMP SOFTWAR, P139, DOI 10.1145/2372251.2372275
   Shah SMA, 2014, IT PROF, V16, P44, DOI 10.1109/MITP.2013.21
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Tom Edith, 2012, CONSOLIDATED UNDERST
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
NR 39
TC 60
Z9 67
U1 8
U2 64
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2017
VL 82
BP 139
EP 158
DI 10.1016/j.infsof.2016.10.004
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED9CE
UT WOS:000389167000008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Delgado-Pérez, P
   Medina-Bulo, I
   Palomo-Lozano, F
   García-Domínguez, A
   Domínguez-Jiménez, JJ
AF Delgado-Perez, Pedro
   Medina-Bulo, Inmaculada
   Palomo-Lozano, Francisco
   Garcia-Dominguez, Antonio
   Jose Dominguez-Jimenez, Juan
TI Assessment of class mutation operators for C plus plus with the MuCPP
   mutation system
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mutation testing; Mutation system; C plus; Class mutation operators;
   Object-oriented programming
ID QUALITY
AB Context Mutation testing has been mainly analyzed regarding traditional mutation operators involving structured programming constructs common in mainstream languages, but mutations at the class level have not been assessed to the same extent. This fact is noteworthy in the case of C++, despite being one of the most relevant languages including object-oriented features. Objective: This paper provides a complete evaluation of class operators for the C++ programming language. MuCPP, a new system devoted to the application of mutation testing to this language, was developed to this end. This mutation system implements class mutation operators in a robust way, dealing with the inherent complexity of the language. Method: MuCPP generates the mutants by traversing the abstract syntax tree of each translation unit with the Clang API, and stores mutants as branches in the Git version control system. The tool is able to detect duplicate mutants, avoid system headers, and drive the compilation process. Then, MuCPP is used to conduct experiments with several open-source C++ programs. Results: The improvement rules listed in this paper to reduce unproductive class mutants have a significant impact in the computational cost of the technique. We also calculate the quantity and distribution of mutants generated with class operators, which generate far fewer mutants than their traditional counterparts. Conclusions: We show that the tests accompanying these programs cannot detect faults related to particular object-oriented features of C++. In order to increase the mutation score, we create new test scenarios to kill the surviving class mutants for all the applications. The results confirm that, while traditional mutation operators are still needed, class operators can complement them and help testers further improve the test suite. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Delgado-Perez, Pedro; Medina-Bulo, Inmaculada; Palomo-Lozano, Francisco; Garcia-Dominguez, Antonio; Jose Dominguez-Jimenez, Juan] Univ Cadiz, Dept Comp Sci & Engn, Cadiz, Spain.
C3 Universidad de Cadiz
RP Delgado-Pérez, P (corresponding author), Univ Cadiz, Dept Comp Sci & Engn, Cadiz, Spain.
EM pedro.delgado@uca.es; inmaculada.medina@uca.es; francisco.palomo@uca.es;
   antonio.garciadominguez@uca.es; juanjose.dominguez@uca.es
RI Palomo-Lozano, Francisco/M-1253-2014; Domínguez-Jiménez, Juan
   José/M-1187-2014; Garcia-Dominguez, Antonio/K-4755-2014; Medina-Bulo,
   Inmaculada/L-5523-2014; Delgado-Pérez, Pedro/N-4289-2018
OI Palomo-Lozano, Francisco/0000-0002-6773-205X; Domínguez-Jiménez, Juan
   José/0000-0001-5266-1239; Medina-Bulo, Inmaculada/0000-0002-7543-2671;
   Delgado-Pérez, Pedro/0000-0003-1568-9288
FU Spanish Ministry of Economy and Competitiveness (National Program for
   Research, Development and Innovation) [TIN2015-65845-C3-3-R,
   TIN2015-71841-REDT]; University of Cadiz [PU-EPIF-FPI-PPI-BC 2012-037]
FX This paper was funded by the Spanish Ministry of Economy and
   Competitiveness (National Program for Research, Development and
   Innovation), through the project DArDOS (TIN2015-65845-C3-3-R) and the
   Excellence Network SEBASENet (TIN2015-71841-REDT), and by the research
   scholarship PU-EPIF-FPI-PPI-BC 2012-037 of the University of Cadiz.
CR Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   Agrawal H., 1989, TECHNICAL REPORT
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 1980, Order No. 8025191
   [Anonymous], P 9 INT MULT COMP GL
   [Anonymous], 1996, TECHNICAL REPORT
   [Anonymous], 1979, HEURISTICS DETERMINI
   Bluemke Ilona, 2014, Proceedings of the 9th International Conference on Software Engineering and Applications ICSOFT-EA 2014, P297
   Daran M., 1996, SIGSOFT Software Engineering Notes, V21, P158, DOI [10.1145/229000.226313, 10.1145/226295.226313]
   Delgado-Perez P., 2015, ENCY INFORM SCI TECH, P7212
   Delgado-Pérez P, 2015, ANN TELECOMMUN, V70, P137, DOI 10.1007/s12243-014-0445-4
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Derezinska A, 2003, EUROMICRO CONF PROC, P417
   Derezinska A, 2006, INT CONF QUAL SOFTW, P227
   Derezinska A, 2012, LECT NOTES COMPUT SC, V7054, P229
   Derezinska A, 2012, LECT NOTES COMPUT SC, V7304, P42, DOI 10.1007/978-3-642-30561-0_5
   Estero-Botaro Antonia, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P142, DOI 10.1109/ICSTW.2010.36
   Estero-Botaro A, 2015, SOFTW TEST VERIF REL, V25, P536, DOI 10.1002/stvr.1528
   Fabbri S. C. P. F., 1996, Formal Description Techniques VIII. Proceedings of the IFIP TC6 Eighth International Conference on Formal Description Techniques, P329
   Gopinath R, 2014, PROC INT SYMP SOFTW, P189, DOI 10.1109/ISSRE.2014.40
   Grün BJM, 2009, IEEE ICST WORKSHOP, P192, DOI 10.1109/ICSTW.2009.37
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Hussain S., 2008, THESIS
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Jia Y, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P94, DOI 10.1109/TAIC-PART.2008.18
   Domínguez-Jiménez JJ, 2009, ECOWS'09: PROCEEDINGS OF THE 7TH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P97, DOI 10.1109/ECOWS.2009.18
   Just R., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P612, DOI 10.1109/ASE.2011.6100138
   Just R., 2014, INT S SOFTWARE TESTI, P315, DOI [DOI 10.1145/2610384.2610388, 10.1145/2610384.2610388]
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Just R, 2015, SOFTW TEST VERIF REL, V25, P490, DOI 10.1002/stvr.1561
   Kaminski G, 2013, J SYST SOFTWARE, V86, P2002, DOI 10.1016/j.jss.2012.08.024
   KIM S, 1999, P 12 INT C SOFTW SYS
   Kim S., 2000, Proc. Net. ObjectDays, P9
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Kusano M, 2013, IEEE INT CONF AUTOM, P722, DOI 10.1109/ASE.2013.6693142
   Lee HJ, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P512
   Lin Dekang, 1993, P 31 ANN M ASS COMP, P112, DOI DOI 10.3115/981574.981590
   Ma YS, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P352, DOI 10.1109/ISSRE.2002.1173287
   Ma YS, 2009, ETRI J, V31, P140, DOI 10.4218/etrij.09.0108.0356
   Mresa E. S., 1999, Software Testing, Verification and Reliability, V9, P205, DOI 10.1002/(SICI)1099-1689(199912)9:4<205::AID-STVR186>3.0.CO;2-X
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   Offutt AJ, 1996, SOFTWARE PRACT EXPER, V26, P165, DOI 10.1002/(SICI)1097-024X(199602)26:2<165::AID-SPE5>3.0.CO;2-K
   Offutt Jeff., 2006, Proceedings of the 2006 International Workshop on Automation of Software Test, P78, DOI DOI 10.1145/1138929.1138945
   Mateo PR, 2015, SOFTW TEST VERIF REL, V25, P464, DOI 10.1002/stvr.1534
   Schuler D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P297, DOI 10.1145/1595696.1595750
   Segura S, 2011, INFORM SOFTWARE TECH, V53, P1124, DOI 10.1016/j.infsof.2011.03.006
   Spinellis D, 2003, IEEE T SOFTWARE ENG, V29, P1019, DOI 10.1109/TSE.2003.1245303
   WOODWARD MR, 1993, INFORM SOFTWARE TECH, V35, P163, DOI 10.1016/0950-5849(93)90053-6
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
NR 50
TC 41
Z9 43
U1 0
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2017
VL 81
SI SI
BP 169
EP 184
DI 10.1016/j.infsof.2016.07.002
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EB8IH
UT WOS:000387634200012
OA Green Published, Green Accepted
DA 2024-07-18
ER

PT J
AU Eshuis, R
   Norta, A
   Roulaux, R
AF Eshuis, Rik
   Norta, Alex
   Roulaux, Raoul
TI Evolving process views
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Inter-organizational; Business process management; Process evolution;
   Process visibility; Smart contract; E-governance; Decentralized
   autonomous organization
ID FRAMEWORK; SERVICE; MANAGEMENT; CONTRACTS
AB Context: Process views support the paradigm of Business Process Outsourcing, in which providers perform business processes on behalf of their clients. A public process view shields secret or irrelevant details from a private, internal business process, thus allowing a provider to reveal only relevant, non confidential parts of its business process to its clients. Providers can change their internal business processes that may result in inconsistencies with the corresponding process views.
   Objective: This paper aims to develop an approach for propagating changes from an internal, private process to its public process view, such that the internal process and its process view remain consistent.
   Method: We develop the approach in a formal way. Definitions of process models and process views are based on BPEL, the standard language for realizing process models using state-of-the-art service oriented technology. We validate the feasibility of the approach by showing how it can be supported by a conceptual system architecture.
   Results: The approach relies on two key results. First, a formal characterization of the set of private changes to an internal process, i.e., changes that do not need to be propagated to the process view. Second, a characterization of the non-private changes that can safely be propagated from an internal process to its process view such that they remain consistent. Other non-private changes result in an internal process and a process view that are not consistent. The approach is supported by a system architecture for process-based business collaboration.
   Conclusion: The approach supports providers in deciding if and how changes to a private, internal process propagate to its public process view such that the process view and the internal process remain consistent. The approach allows clients to monitor a public process view such that they can safely track changes made to a private, internal process. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Eshuis, Rik; Roulaux, Raoul] Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
   [Norta, Alex] Tallinn Univ Technol, Dept Informat, EE-19086 Tallinn, Estonia.
C3 Eindhoven University of Technology; Tallinn University of Technology
RP Eshuis, R (corresponding author), Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
EM h.eshuis@tue.nl; alex.norta.phd@ieee.org
RI Eshuis, Rik/D-7042-2011; Norta, Alex/I-2347-2018
OI Eshuis, Rik/0000-0003-2314-7155; Norta, Alex/0000-0003-0593-8244
FU Estonian Ministry of Education and Research [SF0140013s10]
FX The work reported in this paper is partly supported by the research
   project SF0140013s10 "Model-based Creation and Management of
   Evolutionary Information Systems" by the Estonian Ministry of Education
   and Research.
CR Aalst W.v., 2011, PROCESS MINING DISCO
   Alor-Hernández G, 2014, COMPUT IND, V65, P828, DOI 10.1016/j.compind.2013.12.007
   Alves A., 2007, Web Services Business Process Execution Language Version 2.0
   Angelov S, 2006, THESIS
   [Anonymous], 2012, CONSULTED
   [Anonymous], 2010, Business Process Model and Notation (BPMN) v2.0
   [Anonymous], 2014, ETHEREUM NEXT GENERA
   Antonopoulos A. M., 2014, Mastering Bitcoin: Unlocking Digital Cryptocurrencies
   Bobrik R, 2007, LECT NOTES COMPUT SC, V4714, P88
   Chebbi I, 2006, DATA KNOWL ENG, V56, P139, DOI 10.1016/j.datak.2005.03.008
   Chiu D. K. W., 2004, Information Technology & Management, V5, P221, DOI 10.1023/B:ITEM.0000031580.57966.d4
   Chiu DKW, 2002, DISTRIB PARALLEL DAT, V12, P193, DOI 10.1023/A:1016503218569
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Davidrajuh R, 2013, J SUPERCOMPUT, V63, P107, DOI 10.1007/s11227-010-0544-6
   Draheim Dirk., 2010, Business Process Technology: A Unified View on Business Processes, Workflows and Enterprise Applications, DOI 10.1007/978-3-642-01588-5
   Erven H, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P216
   Eshuis R, 2008, DATA KNOWL ENG, V64, P419, DOI 10.1016/j.datak.2007.07.003
   Eshuis R, 2007, ECOWS 07: PROCEEDING OF THE 5TH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P171, DOI 10.1109/ECOWS.2007.22
   Eshuis R, 2014, INFORM SYST, V46, P157, DOI 10.1016/j.is.2014.04.005
   Eshuis R, 2015, IEEE T SERV COMPUT, V8, P136, DOI 10.1109/TSC.2013.51
   Eshuis R, 2011, LECT NOTES COMPUT SC, V7044, P119, DOI 10.1007/978-3-642-25109-2_9
   Fdhila W, 2015, INFORM SYST, V49, P1, DOI 10.1016/j.is.2014.10.004
   Gibbons Robert., 1992, PRIMER GAME THEORY
   Grefen P, 2003, INT J COOP INF SYST, V12, P487, DOI 10.1142/S0218843003000838
   Gupta A., 1995, IEEE DATA ENG B, V18, P3
   HU F, 2013, CYBER PHYS SYSTEMS I
   Kiepuszewski B., 2000, P CAISE 00
   Kolb J., 2012, PROC INT C SERVICE O, V6470, P484
   Kunze M., 2010, BPM 2010 DEMONSTRATI, P6
   Kutvonen L, 2012, IEEE INT ENTERP DIST, P31, DOI 10.1109/EDOC.2012.14
   Lane Saunders Mac, 1998, CATEGORIES WORKING M, V5
   Lee AJ, 2002, IEEE T KNOWL DATA EN, V14, P931, DOI 10.1109/TKDE.2002.1033766
   Li L., 2003, SOFTWARE FRAMEWORK M, P331
   Liu DR, 2003, INFORM SYST, V28, P505, DOI 10.1016/S0306-4379(02)00028-5
   Liu R, 2005, LECT NOTES COMPUT SC, V3649, P268, DOI 10.1007/11538394_18
   Mehandjiev N., 2010, Dynamic business process formation for instant virtual enterprises
   Mutschler B, 2008, IEEE T SYST MAN CY C, V38, P280, DOI 10.1109/TSMCC.2008.919197
   Nagl C, 2006, IEEE INT ENTERP DIST, P35
   Norta A, 2006, LECT NOTES COMPUT SC, V4277, P834
   Norta A., 2012, Proceedings of the 2012 Annual SRII Global Conference (SRII), P293, DOI 10.1109/SRII.2012.40
   Norta A., 2015, Lecture Notes in Business Information Processing, P3, DOI DOI 10.1007/978-3-319-21915-8_1
   Norta A., 2007, THESIS
   Norta A, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-015-0023-7
   Norta A, 2014, DATA KNOWL ENG, V91, P52, DOI 10.1016/j.datak.2014.04.001
   Norta A, 2010, INFORM SYST FRONT, V12, P457, DOI 10.1007/s10796-009-9164-1
   Ouyang C, 2008, INT J WEB SERV RES, V5, P42, DOI 10.4018/jwsr.2008010103
   Panikkar S., 2014, ADEPT IOT PRACTITION
   Polyvyanyy A, 2010, LECT NOTES COMPUT SC, V6336, P276, DOI 10.1007/978-3-642-15618-2_20
   Reichert M., 2012, ENABLING FLEXIBILITY, P441
   Rinderle S, 2006, LECT NOTES COMPUT SC, V4275, P273
   Ruokolainen T, 2011, IEEE INT ENTERP, P18, DOI 10.1109/EDOCW.2011.43
   Schulz KA, 2004, DATA KNOWL ENG, V51, P109, DOI 10.1016/j.datak.2004.03.008
   Silberschatz A., 2011, Database system concepts, VSixth
   Smirnov S, 2012, DISTRIB PARALLEL DAT, V30, P63, DOI 10.1007/s10619-011-7088-5
   Swan M., 2015, Texas Bitcoin Conference, P27
   Szabo N., 1 MONDAY
   Tahamtan Amirreza, 2012, International Journal of Intelligent Information and Database Systems, V6, P93, DOI 10.1504/IJIIDS.2012.045846
   Tata Samir, 2008, IEEE Transactions on Services Computing, V1, P214, DOI 10.1109/TSC.2008.19
   THATTE S, 2003, XLANG WEB SERVICE BU
   TSICHRITZIS D, 1978, INFORM SYST, V3, P173, DOI 10.1016/0306-4379(78)90001-7
   van der Aalst W., 1996, COMPUTING SCI REPORT, V96
   van der Aalst W. M. P., 2001, Advanced Information Systems Engineering. 13th International Conference, CAiSE 2001. Proceedings (Lecture Notes in Computer Science Vol.2068), P140
   van der Aalst WMP, 2010, COMPUT J, V53, P90, DOI 10.1093/comjnl/bxn064
   Weber B., 2012, ENABLING FLEXIBILITY
   Weber B, 2008, DATA KNOWL ENG, V66, P438, DOI 10.1016/j.datak.2008.05.001
   Wei Y, 2010, IEEE INTERNET COMPUT, V14, P72, DOI 10.1109/MIC.2010.147
   Weidlich M, 2012, J SYST SOFTWARE, V85, P1885, DOI 10.1016/j.jss.2012.02.044
   Yeates M., 2015, HYPE CYCLE BUSINESS
   Yongchareon S, 2015, INFORM SYST, V47, P51, DOI 10.1016/j.is.2014.07.004
   Yucong Duan, 2012, Proceedings of the 2012 13th ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel & Distributed Computing (SNPD 2012), P805, DOI 10.1109/SNPD.2012.22
   Zhao XH, 2011, WORLD WIDE WEB, V14, P27, DOI 10.1007/s11280-010-0096-y
   Zheng HB, 2012, 2012 11TH INTERNATIONAL SYMPOSIUM ON DISTRIBUTED COMPUTING AND APPLICATIONS TO BUSINESS, ENGINEERING & SCIENCE (DCABES), P9, DOI 10.1109/DCABES.2012.32
   Zulkernine FH, 2011, IEEE T SERV COMPUT, V4, P31, DOI 10.1109/TSC.2010.44
NR 73
TC 15
Z9 15
U1 0
U2 36
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2016
VL 80
BP 20
EP 35
DI 10.1016/j.infsof.2016.08.004
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EA2GM
UT WOS:000386410800002
DA 2024-07-18
ER

PT J
AU Behere, S
   Törngren, M
AF Behere, Sagar
   Torngren, Martin
TI A functional reference architecture for autonomous driving
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Autonomous driving; Functional architecture; E/E architecture; Reference
   architecture
ID VEHICLE
AB Context
   As autonomous driving technology matures toward series production, it is necessary to take a deeper look at various aspects of electrical/electronic (E/E) architectures for autonomous driving.
   Objective
   This paper describes a functional reference architecture for autonomous driving, along with various considerations that influence such an architecture. The functionality is described at the logical level, without dependence on specific implementation technologies.
   Method
   Engineering design has been used as the research method, which focuses on creating solutions intended for practical application. The architecture has been refined and applied over a 5 year period to the construction of prototype autonomous vehicles in three different categories, with both academic and industrial stakeholders.
   Results
   The architectural components are divided into categories pertaining to (i) perception, (ii) decision and control, and (iii) vehicle platform manipulation. The architecture itself is divided into two layers comprising the vehicle platform and a cognitive driving intelligence. The distribution of components among the architectural layers considers two extremes: one where the vehicle platform is as "dumb" as possible, and the other, where the vehicle platform can be treated as an autonomous system with limited intelligence. We recommend a clean split between the driving intelligence and the vehicle platform. The architecture description includes identification of stakeholder concerns, which are grouped under the business and engineering categories. A comparison with similar architectures is also made, wherein we claim that the presence of explicit components for world modeling, semantic understanding, and vehicle platform abstraction seem unique to our architecture.
   Conclusion
   The concluding discussion examines the influences of implementation technologies on functional architectures and how an architecture is affected when a human driver is replaced by a computer. The discussion also proposes that reduction and acceleration of testing, verification, and validation processes is the key to incorporating continuous deployment processes. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Behere, Sagar; Torngren, Martin] KTH Royal Inst Technol, Brinellvagen 83, SE-10044 Stockholm, Sweden.
C3 Royal Institute of Technology
RP Behere, S (corresponding author), KTH Royal Inst Technol, Brinellvagen 83, SE-10044 Stockholm, Sweden.
EM behere@kth.se; martint@kth.se
RI Törngren, Martin/ADN-5708-2022
OI Törngren, Martin/0000-0002-4300-885X
FU VINNOVA project FUSE [2013-02650]; VINNOVA project ARCHER [2014-06260];
   Volvo Car Corporation; Scania CV AB
FX The authors would like to gratefully acknowledge funding provided by the
   VINNOVA projects FUSE no. 2013-02650 and ARCHER no. 2014-06260, as well
   as the support provided by the Volvo Car Corporation and Scania CV AB.
CR [Anonymous], 42010 ISO
   [Anonymous], 2011, 262622011 ISO
   [Anonymous], LECT NOTES UNPUB
   [Anonymous], SYST MAN CYBERN IEEE, DOI DOI 10.1109/TSMC.1983.6313160
   Behere S., 2013, THESIS KTH
   Behere S, 2013, J SYST ARCHITECT, V59, P1095, DOI 10.1016/j.sysarc.2013.05.014
   Ferris T., 2012, RES METHODOLOGIES IN, DOI [10.4018/978-1-4666-0179-6, DOI 10.4018/978-1-4666-0179-6]
   Ferris T., 2009, 7 ANN C SYST ENG RES
   Fong T, 2001, AUTON ROBOT, V11, P9, DOI 10.1023/A:1011295826834
   Huebscher MC, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1380584.1380585
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kopetz H, 2008, REAL TIM SYST SYMP P, P3, DOI 10.1109/RTSS.2008.33
   Mårtensson J, 2012, IEEE T INTELL TRANSP, V13, P1033, DOI 10.1109/TITS.2012.2204876
   Montemerlo M, 2009, SPRINGER TRAC ADV RO, V56, P91
   Papp Z., 2008, 2008 IEEE Intelligent Vehicles Symposium (IV), P1050, DOI 10.1109/IVS.2008.4621272
   The FUSE Project, FUNCT SAF EV ARCH AU
   The HAVE-it EU Project, DEL D12 1 ARCH DOC
   Wallmark O., 2014, 2014 IEEE VEH POW PR, P1, DOI [10.1109/VPPC.2014.7007042, DOI 10.1109/VPPC.2014.7007042]
   Ziegler J, 2014, IEEE INTEL TRANSP SY, V6, P8, DOI 10.1109/MITS.2014.2306552
NR 19
TC 63
Z9 67
U1 4
U2 50
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2016
VL 73
BP 136
EP 150
DI 10.1016/j.infsof.2015.12.008
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI5KJ
UT WOS:000373537400011
DA 2024-07-18
ER

PT J
AU Sun, XB
   Li, BX
   Leung, H
   Li, B
   Li, Y
AF Sun, Xiaobing
   Li, Bixin
   Leung, Hareton
   Li, Bin
   Li, Yun
TI MSR4SM: Using topic models to effectively mining software repositories
   for software maintenance tasks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software maintenance; Mining software historical repositories; Topic
   model; Empirical study
ID CHANGE IMPACT ANALYSIS; INFORMATION-RETRIEVAL; FEATURE LOCATION; SOURCE
   CODE; TAXONOMY
AB Context: Mining software repositories has emerged as a research direction over the past decade, achieving substantial success in both research and practice to support various software maintenance tasks. Software repositories include bug repository, communication archives, source control repository, etc. When using these repositories to support software maintenance, inclusion of irrelevant information in each repository can lead to decreased effectiveness or even wrong results.
   Objective: This article aims at selecting the relevant information from each of the repositories to improve effectiveness of software maintenance tasks.
   Method: For a maintenance task at hand, maintainers need to implement the maintenance request on the current system. In this article, we propose an approach, MSR4SM, to extract the relevant information from each software repository based on the maintenance request and the current system. That is, if the information in a software repository is relevant to either the maintenance request or the current system, this information should be included to perform the current maintenance task. MSR4SM uses the topic model to extract the topics from these software repositories. Then, relevant information in each software repository is extracted based on the topics.
   Results: MSR4SM is evaluated for two software maintenance tasks, feature location and change impact analysis, which are based on four subject systems, namely jEdit, ArgoUML, Rhino and KOffice. The empirical results show that the effectiveness of traditional software repositories based maintenance tasks can be greatly improved by MSR4SM.
   Conclusions: There is a lot of irrelevant information in software repositories. Before we use them to implement a maintenance task at hand, we need to preprocess them. Then, the effectiveness of the software maintenance tasks can be improved. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Sun, Xiaobing; Li, Bin; Li, Yun] Yangzhou Univ, Sch Informat Engn, Yangzhou, Peoples R China.
   [Sun, Xiaobing] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210008, Jiangsu, Peoples R China.
   [Li, Bixin] Southeast Univ, Sch Engn & Comp Sci, Nanjing, Jiangsu, Peoples R China.
   [Leung, Hareton] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Hong Kong, Peoples R China.
C3 Yangzhou University; Nanjing University; Southeast University - China;
   Hong Kong Polytechnic University
RP Sun, XB (corresponding author), Yangzhou Univ, Sch Informat Engn, Yangzhou, Peoples R China.
EM xbsun@yzu.edu.cn; bx.li@seu.edu.cn; hareton.leung@polyu.edu.hk;
   lb@yzu.edu.cn; liyun@yzu.edu.cn
RI Sun, Xiaobing/L-7423-2019
OI Sun, Xiaobing/0000-0001-5165-5080
FU Natural Science Foundation of China [61402396, 61472344]; Natural
   Science Foundation of the Jiangsu Higher Education Institutions of China
   [13KJB520027]; State Key Laboratory for Novel Software Technology of
   Nanjing University [KFKT2014B13]
FX This work is supported partially by Natural Science Foundation of China
   under Grant Nos. 61402396 and 61472344, partially by the Natural Science
   Foundation of the Jiangsu Higher Education Institutions of China under
   Grant No. 13KJB520027, partially by the Open Funds of State Key
   Laboratory for Novel Software Technology of Nanjing University under
   Grant No. KFKT2014B13.
CR Ali N, 2013, IEEE T SOFTWARE ENG, V39, P725, DOI 10.1109/TSE.2012.71
   Anderson J., 2014, P 11 WORK C MIN SOFT, P142
   [Anonymous], 2005, EFFECT SIZE RES BROA
   [Anonymous], 2007, 4 INT WORKSH MIN SOF
   Antoniol G., 2005, Proceedings of the 2005 international workshop on Mining software repositories, volume 30 of MSR '05, V30, P1, DOI [DOI 10.1145/1083142.1083156, DOI 10.1145/1082983.1083156]
   Antoniol G, 2006, IEEE T SOFTWARE ENG, V32, P627, DOI 10.1109/TSE.2006.88
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Barnard K, 2003, J MACH LEARN RES, V3, P1107, DOI 10.1162/153244303322533214
   Biggers LR, 2014, EMPIR SOFTW ENG, V19, P465, DOI 10.1007/s10664-012-9224-x
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Chen A, 2001, PROC IEEE INT CONF S, P364, DOI 10.1109/ICSM.2001.972749
   De Lucia A, 2013, INFORM SOFTWARE TECH, V55, P741, DOI 10.1016/j.infsof.2012.08.002
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dit B, 2013, EMPIR SOFTW ENG, V18, P277, DOI 10.1007/s10664-011-9194-4
   DUNNETT CW, 1955, J AM STAT ASSOC, V50, P1096, DOI 10.2307/2281208
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   German D., 2006, MSR: Proceedings of the Third International Workshop on Mining Software Repositories, P163
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Han J., 2005, DATA MINING CONCEPTS
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Hintze JL, 1998, AM STAT, V52, P181, DOI 10.2307/2685478
   Hu JJ, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P3, DOI 10.1109/SANER.2015.7081810
   Jermakovics A, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P24
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kagdi H, 2013, EMPIR SOFTW ENG, V18, P933, DOI 10.1007/s10664-012-9233-9
   Keivanloo I., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P32, DOI 10.1109/MSR.2012.6224296
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Konietschke F, 2012, ELECTRON J STAT, V6, P738, DOI 10.1214/12-EJS691
   Kouters E, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P592, DOI 10.1109/ICSM.2012.6405329
   Law J, 2003, PROC INT CONF SOFTW, P308, DOI 10.1109/ICSE.2003.1201210
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   Li BX, 2013, INFORM SOFTWARE TECH, V55, P1437, DOI 10.1016/j.infsof.2013.02.003
   Li DF, 2012, J INFORMETR, V6, P237, DOI 10.1016/j.joi.2011.11.004
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Peng X, 2013, J SYST SOFTWARE, V86, P664, DOI 10.1016/j.jss.2012.10.270
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Pyle D., 1999, DATA PREPARATION DAT
   Rajlich V., 2014, Proceedings of the Conference on the Future of Software Engineering, P133, DOI [10.1145/2593882.2593893, DOI 10.1145/2593882.2593893]
   Revelle Meghan, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P14, DOI 10.1109/ICPC.2010.10
   Shtern M., 2012, ADV SOFTW ENG
   Sun X., 2015, COMPUTER INFORM SCI, P27, DOI DOI 10.1007/978-3-319-10509-3_3
   Sun X, 2012, P 4 AS PAC S INT, P23
   Thomas S.W., 2014, EVOLVING SOFTWARE SY, P139
   Thomas SW, 2014, SCI COMPUT PROGRAM, V80, P457, DOI 10.1016/j.scico.2012.08.003
   Thomas SW, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1138, DOI 10.1145/1985793.1986020
   Torchiano M, 2010, P 2010 ACM IEEE INT
   van Rijsbergen C. J, 1979, Information Retrieval, V2nd
   Wang SW, 2014, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSME.2014.51
   Wang SW, 2013, EUR CON SFTWR MTNCE, P5, DOI 10.1109/CSMR.2013.11
   Wang T, 2013, PROC IEEE INT CONF S, P240, DOI 10.1109/ICSM.2013.35
   Yu L, 2012, INFORM SCIENCES, V191, P31, DOI 10.1016/j.ins.2011.09.034
   Zhang S, 2008, PROC IEEE INT CONF S, P87, DOI 10.1109/ICSM.2008.4658057
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 62
TC 37
Z9 43
U1 0
U2 26
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2015
VL 66
BP 1
EP 12
DI 10.1016/j.infsof.2015.05.003
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CN8OG
UT WOS:000358699900001
DA 2024-07-18
ER

PT J
AU Kakar, AK
AF Kakar, Adarsh Kumar
TI Investigating the penalty reward calculus of software users and its
   impact on requirements prioritization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE User satisfaction; Requirements prioritization; Multiplicative effect;
   Asymmetric effect; Penalty reward contrast analysis
ID INFORMATION-SYSTEMS; SINGLE-ITEM; SELF-ESTEEM; SATISFACTION; MANAGEMENT;
   QUALITY; SCALES; USAGE; MODEL
AB Context: The current requirements engineering techniques for prioritization of software requirements implicitly assume that each user requirement will have an independent and symmetric impact on user satisfaction. For example, it is assumed that implementing a high priority user requirement will positively impact his satisfaction and not implementing a high priority user requirement will negatively impact his satisfaction. Further, the impacts of implementing multiple user requirements on his satisfaction are expected to be additive. But is this always the case?
   Objective: This paper empirically examines whether the assumptions of symmetric and multiplicative impacts of user requirements on his satisfaction are valid. Further, the study assesses the relative efficacy of 5 methods of requirements prioritization in managing these effects as reflected by the user satisfaction with the prioritized requirement sets.
   Method: To test for existence and mitigation of asymmetric effects an adaptation of the widely accepted PRCA (Penalty Reward Contrast Analysis) method was used for 5 requirements prioritization techniques. To test for existence and mitigation of multiplicative effects MHMR (Moderated Hierarchical Multiple Regression) a well-accepted technique for testing interaction effects was used.
   Results: Both asymmetric and multiplicative effects of software requirements on user satisfaction were observed for requirements prioritized using all 5 requirements prioritization methods raising questions about the efficacy of present day requirements prioritization techniques. Further, the results of the experiment led to proposing a new method for requirements prioritization for managing these effects.
   Conclusion: The study empirically demonstrates the complexities of prioritizing software requirements and calls for a new generation of methods to address them. Understanding and resolving these complexities will enable software providers to conserve resources by enabling them to parsimoniously selecting only those requirements for implementation in the software product that have maximum incremental impact on user satisfaction. (C) 2015 Elsevier B.V. All rights reserved.
C1 Alabama State Univ, Montgomery, AL 36101 USA.
C3 Alabama State University
RP Kakar, AK (corresponding author), Alabama State Univ, Montgomery, AL 36101 USA.
EM akakar@alasu.edu
CR Alves C, 2003, LECT NOTES COMPUT SC, V2693, P21
   Andrew F., 1976, SOCIAL INDICATORS WE
   [Anonymous], 2000, J SERV RES-US, DOI DOI 10.1177/109467050032001
   [Anonymous], THESIS SCH ENG SUECI
   [Anonymous], 2008, P 2008 2 INT WORKSH
   [Anonymous], P 8 INT WORKSH SOFTW
   Athanassopoulos AD, 2000, J BUS RES, V47, P191, DOI 10.1016/S0148-2963(98)00060-5
   Azar J., 2007, Value-Oriented Requirements Prioritization in a Small Development organization
   Basili VR, 2001, COMPUTER, V34, P91, DOI 10.1109/2.920618
   Bebensee T, 2010, LECT NOTES COMPUT SC, V6182, P67, DOI 10.1007/978-3-642-14192-8_8
   Beck K., 2001, EXTREME PROGRAMMING, P417
   Berander P., 2006, Engineering and Managing Software Requirements, P69
   BOEHM BW, 1989, IEEE T SOFTWARE ENG, V15, P902, DOI 10.1109/32.29489
   Bolton RN, 1999, J MARKETING RES, V36, P171, DOI 10.2307/3152091
   Brandt D.R., 1987, A procedure for identifying value-enhancing service components using customer satisfaction survey data, P61
   DeLone WH, 1992, INFORM SYST RES, V3, P60, DOI 10.1287/isre.3.1.60
   DESANCTIS G, 1994, DECIS SUPPORT SYST, V11, P319, DOI 10.1016/0167-9236(94)90079-5
   Drolet A., 2001, Journal of Service Research, V3, P196, DOI [10.1177/109467050133001, DOI 10.1177/109467050133001]
   Ehrenberg A, 2008, CYBERPSYCHOL BEHAV, V11, P739, DOI 10.1089/cpb.2008.0030
   Elam J.J., 1984, Evaluating the Efficiency of the Information System Function
   Emery C.R., 2002, Journal of Education for Business, V78, P97
   Ennew CT, 1999, J BUS RES, V46, P121, DOI 10.1016/S0148-2963(98)00016-2
   Fellows L., 1998, Third International Conference on Requirements Engineering (ICRE'98), P62
   Fornell C, 1996, J MARKETING, V60, P7, DOI 10.2307/1251898
   Gardner DG, 1998, EDUC PSYCHOL MEAS, V58, P898, DOI 10.1177/0013164498058006003
   Gelderman M, 1998, INFORM MANAGE-AMSTER, V34, P11, DOI 10.1016/S0378-7206(98)00044-5
   GREENHOUSE SW, 1959, PSYCHOMETRIKA, V24, P95, DOI 10.1007/BF02289823
   Heger D.A., 2004, European Journal for the Informatics Professional, V5, P5
   IVES B, 1983, COMMUN ACM, V26, P785, DOI 10.1145/358413.358430
   JOHNSTON R, 1995, INT J SERV IND MANAG, V6, P53, DOI 10.1108/09564239510101536
   Kano N., 1984, J JPN SOC QUALITY CO J JAPANESE SOC QUALI, V41, P39
   Karlsson J., 1997, Requirements Engineering, V2, P51, DOI 10.1007/BF02802897
   Karlsson L, 2007, INFORM SOFTWARE TECH, V49, P588, DOI 10.1016/j.infsof.2007.02.008
   Leffingwell D., 2003, Managing Software Requirements: A Use Case Approach, V2nd, P124
   Lehtola L., 2006, Software Process Improvement and Practice, V11, P7, DOI 10.1002/spip.249
   Levitt Theodore, 1980, HARVARD BUSINESS REV
   Lim J S, 1988, J Health Care Mark, V8, P25
   Matzler K, 2002, INT J SERV IND MANAG, V13, P314, DOI 10.1108/09564230210445078
   Mauchly JW, 1940, ANN MATH STAT, V11, P204, DOI 10.1214/aoms/1177731915
   Mayer J. H., 2012, USING KANO MODEL IDE
   Mikulic J, 2011, MANAG SERV QUAL, V21, P46, DOI 10.1108/09604521111100243
   Mittal V, 1998, J MARKETING, V62, P33, DOI 10.2307/1251801
   MYERS JH, 1968, J MARKETING, V32, P13, DOI 10.2307/1249332
   Nolan R.L., 1974, Managing the Data Resource Function
   Pomeroy IR, 2001, INT J GERIATR PSYCH, V16, P321, DOI 10.1002/gps.344.abs
   POWERS RF, 1973, CALIF MANAGE REV, V15, P147, DOI 10.2307/41164448
   Regnell B., 2001, 1 SEWD C SOFTW ENG R
   Robins RW, 2001, PERS SOC PSYCHOL B, V27, P151, DOI 10.1177/0146167201272002
   Ruhe G, 2005, HANDBOOK OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, VOL 3: RECENT ADVANCES, P365, DOI 10.1142/9789812775245_0013
   Saaty T.L., 1980, ANAL HIERARCHY PROCE
   Seddon PB, 1997, INFORM SYST RES, V8, P240, DOI 10.1287/isre.8.3.240
   Sharma R, 2009, MIS QUART, V33, P473
   SHEEHE PR, 1961, BIOMETRICS, V17, P405, DOI 10.2307/2527834
   Sillitti A., 2006, Engineering and Managing Software Requirements, P309
   SINCLAIR SA, 1990, IND MARKET MANAG, V19, P31, DOI 10.1016/0019-8501(90)90025-Q
   Thompson DV, 2005, J MARKETING RES, V42, P431, DOI 10.1509/jmkr.2005.42.4.431
   TORKZADEH G, 1991, DECISION SCI, V22, P26, DOI 10.1111/j.1540-5915.1991.tb01259.x
   Treacy M.E., 1985, An Empirical Examination of a Causal Model of User Information Satisfaction
   Vavra T.G., 1997, IMPROVING YOUR MEASU
   Wiegers K., 1999, Software Development, V7, pS1
   Witell L., 2007, Managing Service Quality: An International Journal, V17, P54, DOI [https://doi.org/10.1108/09604520710720674, DOI 10.1108/09604520710720674]
   Zhang P, 2001, INT J ELECTRON COMM, V6, P9
   Zhao M., 2009, MANAG SERV QUAL, V19
   Zhao S., 2003, ENHANCEMENT BIAS CON
   Zviran M., 2003, COMMUNICATION AIS, V12, P81, DOI DOI 10.17705/1CAIS.01205
   [No title captured]
NR 66
TC 5
Z9 5
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2015
VL 65
BP 56
EP 68
DI 10.1016/j.infsof.2015.04.004
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CK3IP
UT WOS:000356110100004
DA 2024-07-18
ER

PT J
AU Merayo, MG
   Núñez, A
AF Merayo, Mercedes G.
   Nunez, Alberto
TI Passive testing of communicating systems with timeouts
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Communicating systems; Formal methods; Timeouts;
   Passive testing
ID FINITE-STATE MACHINES; TEST TIMED SYSTEMS; EXTENDING EFSMS; SPECIFY;
   CLOCKS
AB Context: The design of complex systems demands methodologies to analyze its correct behaviour. It is usual that a correct behaviour is determined by the compliance with temporal requirements. Currently, testing is the most used technology to validate the correctness of systems. Although several techniques that take into account time aspects have been proposed, most of them require the tester interacts with the system. However, if this is not possible, it is necessary to apply a passive testing approach where the tester monitors the behaviour of the system.
   Objective: The aim of this paper is to propose a methodology to perform passive testing on communicating systems in which the behaviour of their components must fulfill temporal restrictions associated with both performance and delays/timeouts.
   Method: Our framework uses algorithms for checking traces collected from the systems against invariants which formally represent the most relevant properties that must be fulfilled by the system. In order to support the feasibility of the methodology, we have performed an empirical study on a complex system for automatic recognition of images based on a pipeline architecture. We have analyzed the correctness of the system's behaviour with respect to a set of invariants. Finally, an experiment, based on mutations of the system, was conducted to study the level of detection of a set of invariants.
   Results: Different errors were detected and fixed along the development of the system by means of the proposed methodology. The results of the experiments with the mutated versions of the system indicated that the designed set of invariants was more effective in finding errors associated to temporal aspects than those related to communication among components.
   Conclusion: The proposed technique has been shown to be very useful for analyzing complex timed systems, and find errors when the tester has no control over their behaviour. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Merayo, Mercedes G.; Nunez, Alberto] Univ Complutense Madrid, Dept Sistemas Informat & Computac, E-28040 Madrid, Spain.
C3 Complutense University of Madrid
RP Merayo, MG (corresponding author), Univ Complutense Madrid, Dept Sistemas Informat & Computac, E-28040 Madrid, Spain.
EM mgmerayo@fdi.ucm.es; alberto.nunez@pdi.ucm.es
RI Nunez Covarrubias, Alberto/G-8259-2015; GARCIA MERAYO, MARIA DE LAS
   MERCEDES/T-4990-2018
OI Nunez Covarrubias, Alberto/0000-0001-8613-746X; GARCIA MERAYO, MARIA DE
   LAS MERCEDES/0000-0002-4634-4082
FU Spanish MEC project ESTuDIo [TIN2012-36812-C02]; UCM [910606]; Comunidad
   de Madrid project SICOMORo-CM [S2013/ICE-3006]
FX Research partially supported by the Spanish MEC project ESTuDIo
   (TIN2012-36812-C02), UCM program to fund research groups (910606) and
   the Comunidad de Madrid project SICOMORo-CM (S2013/ICE-3006). We would
   like to thank Cesar Andres and Manuel Nunez for their collaboration in
   early stages of this research.
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Andrés C, 2012, SOFTW TEST VERIF REL, V22, P365, DOI 10.1002/stvr.1464
   Andrés C, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P71, DOI 10.1109/ICST.2009.35
   [Anonymous], THEORY TIMED I O AUT
   BALANESCU T, 1999, J UNIVERS COMPUT SCI, V5, P494
   Barbuti R, 2004, ACTA INFORM, V40, P317, DOI 10.1007/s00236-003-0135-6
   Barnard J, 1996, INFORM SOFTWARE TECH, V38, P401, DOI 10.1016/0950-5849(95)01066-1
   Bornot Sebastien., 1997, COMPOS, P103
   BRAND D, 1983, J ACM, V30, P323, DOI 10.1145/322374.322380
   Che XP, 2014, COMPUT COMMUN, V51, P36, DOI 10.1016/j.comcom.2014.06.001
   Fernández J, 2009, 2009 THIRD INTERNATIONAL CONFERENCE ON ADVANCED ENGINEERING COMPUTING AND APPLICATIONS IN SCIENCES (ADVCOMP 2009), P163, DOI 10.1109/ADVCOMP.2009.32
   Gaudel MC, 1995, LECT NOTES COMPUT SC, V915, P82
   Gebremichael B, 2005, SEFM 2005: THIRD IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P64, DOI 10.1109/SEFM.2005.42
   Gromov M., 2009, LNCS, V5522, P231
   Gropp WilliamD., 1998, MPI COMPLETE REFEREN
   Hessel Anders, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P77, DOI 10.1007/978-3-540-78917-8_3
   Hierons R. M, 2010, ENCY SOFTWARE ENG, P594
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   Ipate F, 2009, COMPUT J, V52, P334, DOI 10.1093/comjnl/bxn027
   Jard C, 1999, INT FED INFO PROC, V28, P25
   JEFFERSON A, 1994, INTERNATIONAL TEST CONFERENCE 1994, PROCEEDINGS, P824, DOI 10.1109/TEST.1994.528535
   Krichen M., 2000, LNCS, V3502, P209
   LAMPORT L, 1985, J ACM, V32, P52, DOI 10.1145/2455.2457
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Lee D, 1996, IEEE T COMMUN, V44, P631, DOI 10.1109/26.494307
   Martin-Vide C., 2002, International Journal of Foundations of Computer Science, V13, P733, DOI 10.1142/S0129054102001424
   Merayo MG, 2008, IEEE T COMPUT, V57, P835, DOI 10.1109/TC.2008.15
   Merayo MG, 2008, COMPUT NETW, V52, P432, DOI 10.1016/j.comnet.2007.10.002
   Merayo MG, 2007, LECT NOTES COMPUT SC, V4748, P97
   Merayo MG, 2006, LECT NOTES COMPUT SC, V4229, P372
   Merayo MG, 2012, INT CONF QUAL SOFTW, P69, DOI 10.1109/QSIC.2012.40
   Merayo MG, 2011, SOFTW SYST MODEL, V10, P201, DOI 10.1007/s10270-009-0126-3
   Merritt M., 1991, LNCS, V527, P408
   Nilsson R, 2006, ELECTRON NOTES THEOR, V164, P97, DOI 10.1016/j.entcs.2006.10.010
   Núñez A, 2012, SIMUL MODEL PRACT TH, V20, P12, DOI 10.1016/j.simpat.2011.08.009
   Núñez A, 2010, J SUPERCOMPUT, V51, P40, DOI 10.1007/s11227-009-0279-4
   Schmaltz J, 2008, LECT NOTES COMPUT SC, V5215, P250, DOI 10.1007/978-3-540-85778-5_18
   Springintveld J, 2001, THEOR COMPUT SCI, V254, P225, DOI 10.1016/S0304-3975(99)00134-6
   Sugeta T, 2004, LECT NOTES COMPUT SC, V2978, P193
   Tabor Z, 2009, IEEE T BIO-MED ENG, V56, P361, DOI 10.1109/TBME.2008.2003090
   Wang Y, 2009, COMPUT NETW, V53, P596, DOI 10.1016/j.comnet.2008.10.025
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 42
TC 7
Z9 7
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2015
VL 64
BP 19
EP 35
DI 10.1016/j.infsof.2015.03.009
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ3EB
UT WOS:000355365100002
DA 2024-07-18
ER

PT J
AU Georg, G
   Mussbacher, G
   Amyot, D
   Petriu, D
   Troup, L
   Lozano-Fuentes, S
   France, R
AF Georg, Geri
   Mussbacher, Gunter
   Amyot, Daniel
   Petriu, Donna
   Troup, Lucy
   Lozano-Fuentes, Saul
   France, Robert
TI Synergy between Activity Theory and goal/scenario modeling for
   requirements elicitation, analysis, and evolution
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements engineering; Activity Theory; User Requirements Notation;
   Goal modeling; Scenario modeling
ID VECTOR CONTROL; CONTRADICTIONS; PERSPECTIVE; DESIGN; GOAL
AB Context: It is challenging to develop comprehensive, consistent, analyzable requirements models for evolving requirements. This is particularly critical for certain highly interactive types of socio-technical systems that involve a wide range of stakeholders with disparate backgrounds; system success is often dependent on how well local social constraints are addressed in system design.
   Objective: This paper describes feasibility research, combining a holistic social system perspective provided by Activity Theory (AT), a psychological paradigm, with existing system development methodologies and tools, specifically goal and scenario modeling.
   Method: AT is used to understand the relationships between a system, its stakeholders, and the system's evolving context. The User Requirements Notation (URN) is used to produce rigorous, analyzable specifications combining goal and scenario models. First, an AT language was developed constraining the framework for automation, second consistency heuristics were developed for constructing and analyzing combined AT/URN models, third a combined AT/URN methodology was developed, and consequently applied to a proof-of-concept system.
   Results: An AT language with limited tool support was developed, as was a combined AT/URN methodology. This methodology was applied to an evolving disease management system to demonstrate the feasibility of adapting AT for use in system development with existing methodologies and tools. Bi-directional transformations between the languages allow proposed changes in system design to be propagated to AT models for use in stakeholder discussions regarding system evolution.
   Conclusions: The AT framework can be constrained for use in requirements elicitation and combined with URN tools to provide system designs that include social system perspectives. The developed AT/URN methodology can help engineers to track the impact on system design due to requirement changes triggered by changes in the system's social context. The methodology also allows engineers to assess the impact of proposed system design changes on the social elements of the system context. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Georg, Geri; France, Robert] Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
   [Mussbacher, Gunter] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
   [Amyot, Daniel] Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON, Canada.
   [Petriu, Donna] Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
   [Troup, Lucy] Colorado State Univ, Dept Psychol, Ft Collins, CO 80523 USA.
   [Lozano-Fuentes, Saul] Colorado State Univ, Dept Microbiol Immunol & Pathol, Ft Collins, CO 80523 USA.
C3 Colorado State University; McGill University; University of Ottawa;
   Carleton University; Colorado State University; Colorado State
   University
RP Georg, G (corresponding author), Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
EM georg@cs.colostate.edu; Gunter.Mussbacher@mcgill.ca;
   damyot@eecs.uottawa.ca; petriu@sce.carleton.ca;
   Lucy.Troup@colostate.edu; slozano@colostate.edu; france@cs.colostate.edu
RI Amyot, Daniel/AAI-6948-2020; Troup, Lucy J/AAD-9747-2019
OI Amyot, Daniel/0000-0003-2414-1791; Petriu, Dorina/0000-0003-4688-9370;
   Troup, Lucy/0000-0001-6992-498X
CR Amyot Daniel, 2011, Journal of Software, V6, P747, DOI 10.4304/jsw.6.5.747-768
   Amyot D, 2010, INT J INTELL SYST, V25, P841, DOI 10.1002/int.20433
   Andreev P., 2012, P 20 EUR C INF SYST
   [Anonymous], 1998, Contextual design: defining customer-centered systems
   [Anonymous], 2012, OBJ CONSTR LANG OCL
   [Anonymous], JUCMNAV WEBS VERS 6
   [Anonymous], 1995, THESIS U TORONTO CAN
   [Anonymous], USE UML BAS SPEC ENV
   Arrow H., 2000, Small Groups as Complex Systems: Formation, Coordination, Development, and Adaptation, DOI 10.4135/9781452204666
   Barthelmess P., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P13, DOI 10.1023/A:1015299228170
   Basharina OK, 2007, LANG LEARN TECHNOL, V11, P82
   Brush AJB, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2115
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Collins P., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P55, DOI 10.1023/A:1015219918601
   Constantine L., 2008, 6 INT WORKSH AG THEO, P27
   Neto GGD, 2005, J COMPUT SCI TECHNOL, V5, P57
   Earp J. B., 2002, AM C INF SYST AMCIS
   Eisen L., 2009, USING CELL PHONES EN
   Engestrom Y., 1999, Learning by expanding: An activity-theoretical approach to developmental research
   Foot KA, 2001, COMMUN THEOR, V11, P56, DOI 10.1111/j.1468-2885.2001.tb00233.x
   Fuentes-Fernández R, 2007, IEICE T INF SYST, VE90D, P1243, DOI 10.1093/ietisy/e90-d.8.1243
   Georg G., CS13101
   Halverson C. A., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P243, DOI 10.1023/A:1015298005381
   Hasan H., 1999, Australian Journal of Information Systems, V6, P44
   Hasu M, 2000, INT J HUM-COMPUT ST, V53, P61, DOI 10.1006/ijhc.2000.0375
   Hutchins E., 1995, Cognition in the Wild
   Innovative Vector Control Consortium, INF SYST DENG DEC SU
   ITU-T, 2012, Z151 ITUT
   Kaptelinin V., 1999, Interactions, V6, P27, DOI 10.1145/306412.306431
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5115, P204, DOI 10.1007/978-3-642-11447-2_13
   Korpela M., 2000, Scandinavian Journal of Information Systems, V12, P191
   Leblanc S., 2012, 2 INT MOD DRIV REQ E
   Leont'ev A.N., 1978, ACTIVITY CONSCIOUSNE
   Liu Y., 2014, 22 INT REQ ENG C RE, P27
   Lozano-Fuentes S, 2012, 24 INT C SOFTW ENG K, P763
   Markus ML, 2002, MIS QUART, V26, P179
   Martins L.E.G., 2007, J SCI INTERDISCIPLIN, V18, P33
   Mennicken S., 2012, P 10 INT C PERVASIVE, P143, DOI DOI 10.1007/978-3-642-31205-2_10
   Murphy E, 2008, AUSTRALAS J EDUC TEC, V24, P442
   Mussbacher G., 2011, 2011 Model-Driven Requirements Engineering Workshop (MoDRE 2011), P39, DOI 10.1109/MoDRE.2011.6045365
   Mussbacher G, 2012, SOFTWARE QUAL J, V20, P645, DOI 10.1007/s11219-011-9153-8
   Nenez I., 2009, ACTIVITY THEORY UTIL, P7
   Object Management Group, 2011, UN MOD LANG UML 2 4
   Paige RF, 2011, SOFTW SYST MODEL, V10, P469, DOI 10.1007/s10270-010-0158-8
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Sadri F, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978815
   Sharp Helen, 2007, Interaction Design: Beyond Human Computer Interaction, V2
   Spiegel Jerry, 2005, EcoHealth, V2, P273, DOI 10.1007/s10393-005-8388-x
   Takayama L, 2012, UBICOMP'12: PROCEEDINGS OF THE 2012 ACM INTERNATIONAL CONFERENCE ON UBIQUITOUS COMPUTING, P511
   van den Berg H, 2012, MALARIA J, V11, DOI 10.1186/1475-2875-11-269
   Vanlerberghe V, 2009, BRIT MED J, V338, DOI 10.1136/bmj.b1959
   Vicente Kim J., 1999, Cognitive Work Analysis Toward Safe, Productive
   Vygotsky L. S., 1978, Mind in Society: The Development of Higher Psychological Processes, DOI 10.2307/j.ctvjf9vz4
   Zappen JP, 2005, LECT NOTES COMPUT SC, V3081, P354
NR 54
TC 16
Z9 20
U1 1
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2015
VL 59
BP 109
EP 135
DI 10.1016/j.infsof.2014.11.003
PG 27
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA CB1ZT
UT WOS:000349427200007
DA 2024-07-18
ER

PT J
AU de Souza, LO
   O'Leary, P
   de Almeida, ES
   Meira, SRD
AF de Souza, Leandro Oliveira
   O'Leary, Padraig
   de Almeida, Eduardo Santana
   Meira, Silvio Romero de Lemos
TI Product derivation in practice
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Case study; Multiple case study; Constant comparison analysis;
   Cross-case analysis; Product derivation; Software product lines
AB Context: The process of constructing a product from a product line of software assets is known product derivation. An effective product derivation process is important in order to ensure that the efforts required to develop these shared assets is lower than the benefits achieved through their use. Despite its importance, relatively little work has been dedicated to the product derivation process and the strategies applied in practice. Additionally, there is a lack of empirical reports describing product derivation in industrial settings, and, in general, where these reports are available, they have been conducted as informal studies.
   Objective: Our aim is to investigate how product derivation is performed in practice.
   Method: We apply a multi-case study design to two different industrial software product line projects with the goal of investigating how they derive their products in practice. The findings from our studies were individually analyzed using the Constant Comparison technique. In order to identify patterns across these studies, the findings were compared using a Cross-case analysis approach.
   Results: The research approach allowed us to examine the case study outcomes from different perspectives, capturing similarities and differences. From the cases, we identified context specific strategies for product derivation which are easier for practitioners to contextualise and implement.
   Conclusions: The case studies provide method-in-action insights into concepts explored in the literature, such as: iterative and incremental product derivation, instantiation and integration of platform components and derivation of product databases. Practitioners can use this work as a basis for defining, adapting or evaluating their own product derivation approaches. While researchers can use this work as a starting point for new industrial reports, presenting their experiences with product derivation. (C) 2014 Elsevier B.V. All rights reserved.
C1 [de Souza, Leandro Oliveira] Fed Inst Bahia IFBA, BR-44900000 Irece, BA, Brazil.
   [de Souza, Leandro Oliveira; Meira, Silvio Romero de Lemos] Univ Fed Pernambuco UFPE, Recife, PE, Brazil.
   [de Almeida, Eduardo Santana] Fed Univ Bahia UFBA, Salvador, BA, Brazil.
   [de Souza, Leandro Oliveira; de Almeida, Eduardo Santana; Meira, Silvio Romero de Lemos] Reuse Software Engn RiSE, Recife, PE, Brazil.
   [O'Leary, Padraig] Univ Limerick, Lero Irish Software Engn Res Ctr, Limerick, Ireland.
   [O'Leary, Padraig] Univ Limerick, ARCH, Limerick, Ireland.
C3 Instituto Federal da Bahia (IFBA); Universidade Federal de Pernambuco;
   Universidade Federal da Bahia; University of Limerick; University of
   Limerick
RP de Souza, LO (corresponding author), Fed Inst Bahia IFBA, Rodovia BA 148,Km 04,1800,Vila Esperanca, BR-44900000 Irece, BA, Brazil.
EM leandro.souza@ifba.edu.br; padraig.oleary@ul.ie; esa@rise.com.br;
   srlm@cin.ufpe.br
RI de Almeida, Eduardo/JJC-2493-2023; Meira, Silvio/AAT-9381-2020
FU Science Foundation Ireland [10/CE/I1855]
FX Our thanks to the companies and all the practitioners who gave their
   time and agreed to be interviewed. We would also like to thank our
   anonymous reviewers for their very constructive feedback. This study was
   also supported in part by Science Foundation Ireland grant 10/CE/I1855
   to Lero - the Irish Software Engineering Research Centre,2 Enterprise
   Ireland ARCH - Applied Research for Connected Health, National Institute
   of Science and Technology for Software Engineering.<SUP>3</SUP>
CR Beecham S, 2014, COMPUTER, V47, P80, DOI 10.1109/MC.2014.92
   Bosch J., 2001, Generative and Component-Based Software Engineering. Second International Symposium, GCSE 2000. Revised Papers (Lecture Notes in Computer Science Vol.2177), P147
   Brereton P., 2008, P EASE 2008
   Deelstra S, 2005, J SYST SOFTWARE, V74, P173, DOI 10.1016/j.jss.2003.11.012
   Easterbrook S., 2007, SELECTING EMPIRICAL
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fitzgerald B., 2002, Information systems development : methods in action
   Glaser B.G., 1967, DISCOVERY GROUNDED T, V46
   Herriott R.E., 1983, EDUC RESEARCHER, V12, P14, DOI [10.2307/1175416, DOI 10.3102/0013189X012002014]
   Host Martin, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P479
   Hotz L., 2003, SOFTW VAR MAN WORKSH, P136
   Karlström D, 2006, EMPIR SOFTW ENG, V11, P203, DOI 10.1007/s10664-006-6402-8
   Maimbo H, 2005, PACIFIC ASIA CONFERENCE ON INFORMATION SYSTEMS 2005, SECTIONS 1-8 AND POSTER SESSIONS 1-6, P1281
   McGregor JD, 2002, IEEE SOFTWARE, V19, P24, DOI 10.1109/MS.2002.1020282
   Miles M.B., 1994, Qualitative data analysis: A methods sourcebook, V3
   Northrop LM, 2002, IEEE SOFTWARE, V19, P32, DOI 10.1109/MS.2002.1020285
   O'Leary P, 2012, INFORM SOFTWARE TECH, V54, P1014, DOI 10.1016/j.infsof.2012.03.008
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V49
   Rabiser R, 2011, J SYST SOFTWARE, V84, P285, DOI 10.1016/j.jss.2010.09.042
   Rabiser R, 2010, INFORM SOFTWARE TECH, V52, P324, DOI 10.1016/j.infsof.2009.11.001
   Robson C., 2002, Real World Research, V2nd
   ROSS DT, 1977, IEEE T SOFTWARE ENG, V3, P16, DOI 10.1109/TSE.1977.229900
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   *SEI, 2006, STAND CMMI APPR METH
   Shull F, 2008, GUIDE ADV EMPIRICAL
   vonMayrhauser A, 1996, IEEE T SOFTWARE ENG, V22, P424, DOI 10.1109/32.508315
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yin R. K., 2015, CASE STUDY RES DESIG
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 30
TC 4
Z9 4
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 319
EP 337
DI 10.1016/j.infsof.2014.07.004
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800019
DA 2024-07-18
ER

PT J
AU Hydara, I
   Sultan, ABM
   Zulzalil, H
   Admodisastro, N
AF Hydara, Isatou
   Sultan, Abu Bakar Md.
   Zulzalil, Hazura
   Admodisastro, Novia
TI Current state of research on cross-site scripting (XSS) - A systematic
   literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic literature review; Cross-site scripting; Security; Web
   applications
ID WEB APPLICATIONS; INPUT-VALIDATION; SQL INJECTION; ROBUST PREVENTION;
   SIDE DETECTION; VULNERABILITIES; ATTACKS; FRAMEWORK
AB Context: Cross-site scripting (XSS) is a security vulnerability that affects web applications. It occurs due to improper or lack of sanitization of user inputs. The security vulnerability caused many problems for users and server applications.
   Objective: To conduct a systematic literature review on the studies done on XSS vulnerabilities and attacks.
   Method: We followed the standard guidelines for systematic literature review as documented by Barbara Kitchenham and reviewed a total of 115 studies related to cross-site scripting from various journals and conference proceedings.
   Results: Research on XSS is still very active with publications across many conference proceedings and journals. Attack prevention and vulnerability detection are the areas focused on by most of the studies. Dynamic analysis techniques form the majority among the solutions proposed by the various studies. The type of XSS addressed the most is reflected XSS.
   Conclusion: XSS still remains a big problem for web applications, despite the bulk of solutions provided so far. There is no single solution that can effectively mitigate XSS attacks. More research is needed in the area of vulnerability removal from the source code of the applications before deployment. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Hydara, Isatou; Sultan, Abu Bakar Md.; Zulzalil, Hazura; Admodisastro, Novia] Univ Putra Malaysia, Fac Comp Sci & Informat Technol, Dept Software Engn & Informat Syst, Serdang 43400, Selangor, Malaysia.
C3 Universiti Putra Malaysia
RP Hydara, I (corresponding author), Univ Putra Malaysia, Fac Comp Sci & Informat Technol, Dept Software Engn & Informat Syst, Serdang 43400, Selangor, Malaysia.
EM ishahydara@gmail.com; abakar@upm.edu.my; hazura@upm.edu.my;
   novia@upm.edu.my
RI Zulzalil, Hazura/D-2030-2017; Admodisastro, Novia/D-6650-2018
OI Zulzalil, Hazura/0000-0002-1596-4828; Md Sultan, Abu
   Bakar/0000-0002-8962-0112; Admodisastro, Novia/0000-0002-1715-946X
FU Malaysian Ministry of Education [FRGS 08-02-13-1362]
FX This work was supported by the Malaysian Ministry of Education under the
   Fundamental Research Grant Scheme (FRGS 08-02-13-1362).
CR Acker S.V., 2012, Proceedings of the 7th ACM Symposium on Information, Computer and Communications Security (ASIACCS), P12, DOI [10.1145/2414456.2414462, DOI 10.1145/2414456.2414462]
   Adi E, 2012, PROCEDIA ENGINEER, V50, P19, DOI 10.1016/j.proeng.2012.10.003
   Agosta G., 2012, Proceedings of the 2012 Ninth International Conference on Information Technology: New Generations (ITNG), P189, DOI 10.1109/ITNG.2012.167
   Al-Amro H., 2012, 2012 International Conference on Cyber Security, Cyber Warfare and Digital Forensic (CyberSec), P329, DOI 10.1109/CyberSec.2012.6246175
   [Anonymous], 16 ANN NETW DISTR SY
   [Anonymous], 2010, P 19 INT C WORLD WID, DOI [DOI 10.1145/1772690.1772701, 10.1145/1772690.1772701]
   [Anonymous], 2012, P 7 ACM S INFORM COM, DOI DOI 10.1145/2414456.2414458
   [Anonymous], 2005, International Conference on World Wide Web, DOI [10.1145/1060745.1060809, DOI 10.1145/1060745.1060809]
   Arulsuju D, 2011, 2011 THIRD INTERNATIONAL CONFERENCE ON ADVANCED COMPUTING (ICOAC), P13, DOI 10.1109/ICoAC.2011.6165172
   Athanasopoulos E., 2010, W2SP 2010
   Avancini A., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P15, DOI 10.1109/IWAST.2012.6228984
   Avancini A., 2010, Proceedings of the 2010 ICSE Workshop on Software Engineering for Secure Systems. Cape Town, South Africa, P65, DOI DOI 10.1145/1809100.1809110
   Avancini A, 2011, IEEE INT WORK C SO, P85, DOI 10.1109/SCAM.2011.7
   Barhoom T.S., 2011, International Journal of Computer Informatics System, V3, P19
   Barnett R., 2011, XSS STREET FIGHT ONL
   Barth A, 2009, P IEEE S SECUR PRIV, P360, DOI 10.1109/SP.2009.3
   Bathia P, 2011, COMM COM INF SC, V133, P268
   Bencsath Boldizsar., 2011, SOFTWARE TELECOMMUNI, P1
   Bisht P, 2008, LECT NOTES COMPUT SC, V5137, P23, DOI 10.1007/978-3-540-70542-0_2
   Bojinov H, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P420
   Brinhosa RB, 2012, IEEE IFIP NETW OPER, P643, DOI 10.1109/NOMS.2012.6211976
   Cao YZ, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P745
   Chaudhuri A, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P585, DOI 10.1145/1866307.1866373
   Coppolino L, 2009, LECT NOTES COMPUT SC, V5860, P192, DOI 10.1007/978-3-642-10265-3_18
   Di Lucca GA, 2004, WSE 2004: SIXTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION, PROCEEDINGS, P71, DOI 10.1109/WSE.2004.10013
   Duchene F., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P815, DOI 10.1109/ICST.2012.181
   Dwen-Ren Tsai, 2009, 2009 IEEE 43rd International Carnahan Conference on Security Technology. ICCST 2009, P89, DOI 10.1109/CCST.2009.5335560
   Faghani Mohammad Reza, 2009, 2009 International Conference on Computational Science and Engineering (CSE), P1137, DOI 10.1109/CSE.2009.424
   Fang Yu, 2011, Model Checking Software. Proceedings 18th International SPIN Workshop, P20, DOI 10.1007/978-3-642-22306-8_3
   Fogie S., 2007, XSS ATTACKS CROSS SI, P480
   Fonseca J, 2007, 13TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P365, DOI 10.1109/PRDC.2007.55
   Fortnow L, 2009, COMMUN ACM, V52, P33, DOI 10.1145/1536616.1536631
   Franceschet Massimo., 2010, COMMUNICATIONS ACM C, V53, P129, DOI DOI 10.1145/1859204.1859234
   Frenz C.M., 2012, Systems, Applications and Technology Conference (LISAT), 2012 IEEE Long Island, P1
   Galan E., 2010, Internet Technology and Secured Transactions (ICITST), 2010 International Conference for, P1
   Garcia-Alfaro J, 2007, LECT NOTES COMPUT SC, V4804, P1770
   Gilad Y, 2012, P 6 USENIX C OFF TEC, P1
   Grabowski R., 2012, LECT NOTES COMPUT SC, V7140, P182
   Halpern JY, 2011, COMMUN ACM, V54, P36, DOI 10.1145/1978542.1978555
   Heiderich M, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P239
   Hermosillo G, 2007, ARES 2007: SECOND INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P1026
   Hidhaya S.F., 2012, Recent Trends in Computer Networks and Distributed Systems Security, P252
   Hooimeijer Pieter., 2011, Proceedings of the 20th USENIX Conference on Security, SEC'11, P1
   Iha G, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P966, DOI 10.1109/ARES.2009.19
   Ismail O, 2004, 18TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS, VOL 1 (LONG PAPERS), PROCEEDINGS, P145
   Jan-Min Chen, 2010, 2010 International Computer Symposium (ICS 2010), P113, DOI 10.1109/COMPSYM.2010.5685537
   Johns M, 2006, LECT NOTES COMPUT SC, V4189, P444
   Johns M, 2010, LECT NOTES COMPUT SC, V5965, P96, DOI 10.1007/978-3-642-11747-3_8
   Johns M, 2008, ANN COMPUT SECURITY, P335, DOI 10.1109/ACSAC.2008.36
   Jovanovic N., 2006, PLAS 2006. Proceedings of the 2006 Programming Languages and Analysis for Security Workshop, P27, DOI 10.1145/1134744.1134751
   JOVANOVIC N, 2006, P 2006 IEEE S SEC PR
   Juillerat N., 2007, Proceedings of the 2007 Symposium on Library-Centric Software Design, P31
   Junho Choi, 2011, Proceedings of the 2011 14th International Conference on Network-Based Information Systems (NBiS 2011), P618, DOI 10.1109/NBiS.2011.104
   Kals S., 2006, P 15 INT C WORLD WID, P247, DOI [DOI 10.1145/1135777.1135817, 10.1145/1135777.1135817]
   Keqin Li, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P381, DOI 10.1109/ICSTW.2010.23
   Kerschbaum F, 2007, 2007 THIRD INTERNATIONAL CONFERENCE ON SECURITY AND PRIVACY IN COMMUNICATION NETWORKS AND WORKSHOPS, P464, DOI 10.1109/SECCOM.2007.4550368
   Kessler HL, 2011, SPECULUM, V86, P1, DOI 10.1017/S0038713410003477
   Kiezun A, 2009, PROC INT CONF SOFTW, P199, DOI 10.1109/ICSE.2009.5070521
   Kirda E., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P330, DOI 10.1145/1141277.1141357
   Kirda E, 2009, COMPUT SECUR, V28, P592, DOI 10.1016/j.cose.2009.04.008
   Kitchenham S, 2007, GUIDELINES PERFORMIN
   Komiya R., 2011, Proceedings of the 2011 3rd International Conference on Awareness Science and Technology (iCAST), P406, DOI 10.1109/ICAwST.2011.6163109
   Li N, 2010, J SYST SOFTWARE, V83, P2263, DOI 10.1016/j.jss.2010.07.007
   Li Z, 2010, 26TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2010), P181
   Lijiu Zhang, 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P501, DOI 10.1109/ICSEA.2010.85
   Livshits B, 2007, PLAS'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY, P95, DOI 10.1145/1255329.1255346
   Martin M.C., 2008, USENIX SECURITY S, P31
   Pérez PM, 2011, COMM COM INF SC, V184, P148
   McAllister S, 2008, LECT NOTES COMPUT SC, V5230, P191, DOI 10.1007/978-3-540-87403-4_11
   Mohosina A., 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P98, DOI 10.1109/SERE.2012.22
   Mui R, 2011, LECT NOTES COMPUT SC, V6879, P80, DOI 10.1007/978-3-642-23822-2_5
   Nadji Y., 2009, 16 ANN NETW DISTR SY
   Nanda S., 2007, ACM/IFIP/USENIX 8th International Middleware Conference (Middleware'07), P1, DOI [DOI 10.1145/1377943.1377956, 10.1145/1377943.1377956]
   Nguyen-Tuong A, 2005, INT FED INFO PROC, V181, P295
   Nikiforakis N, 2011, LECT NOTES COMPUT SC, V6542, P87, DOI 10.1007/978-3-642-19125-1_7
   Nunan AE, 2012, 2012 IEEE SYMPOSIUM ON COMPUTERS AND COMMUNICATIONS (ISCC), P702, DOI 10.1109/ISCC.2012.6249380
   OWASP, XSS CROSS SIT SCRIPT
   Paper W., DETECTING PERSISTENT, P1
   Petkov K., 2005, Proceedings of the 2nd annual conference on Information security curriculum development, P127
   Phung Phu H, 2009, P 4 INT S INF COMP C, P47, DOI DOI 10.1145/1533057.1533067
   Priyadarshini R., 2011, 2011 International Conference on Recent Trends in Information Technology (ICRTIT 2011), P1259, DOI 10.1109/ICRTIT.2011.5972284
   Putthacharoen R., 2011, Proceedings of the 2011 13th International Conference on Advanced Communication Technology (ICACT). Smart Service Innovation through Mobile Interactivity, P1090
   Qi Zhenyu, 2007, IET Conference on Wireless, Mobile and Sensor Networks 2007 (CCWMSN07), P849, DOI 10.1049/cp:20070282
   Qianjie Zhang, 2010, Proceedings of the 2nd International Conference on Software Engineering and Data Mining (SEDM 2010), P160
   RAFAIL J, 2001, CROSS SITE SCRIPTING
   Saxena P., 2011, CCS 11, P601
   Scholte T, 2012, P INT COMP SOFTW APP, P233, DOI 10.1109/COMPSAC.2012.34
   Shahriar H., 2011, Proceedings of the 2011 IEEE 9th International Conference on Dependable, Autonomic and Secure Computing (DASC 2011), P7, DOI 10.1109/DASC.2011.26
   Shahriar H., 2011, Proceedings of the 2011 IEEE 35th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW 2011). Volume II: Workshops, P104, DOI 10.1109/COMPSACW.2011.27
   Shahriar H, 2012, FUTURE GENER COMP SY, V28, P1258, DOI 10.1016/j.future.2011.02.001
   Shahriar H, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR SECURE SYSTEMS, P47, DOI 10.1109/IWSESS.2009.5068458
   Shalini S., 2011, INT J COMPUTER SCI I, V8, P650
   Shanmugam Jayamsakthi, 2007, 2007 Second International Multisymposium on Computer and Computational Sciences - IMSCCS '07, P398
   Shanmugam Jayamsakthi, 2007, 2007 3rd International Conference on Semantics, Knowledge and Grid, P350, DOI 10.1109/SKG.2007.63
   Shanmugam J, 2007, 6TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE, PROCEEDINGS, P861, DOI 10.1109/ICIS.2007.45
   Shanmugam J, 2007, SNPD 2007: EIGHTH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING, AND PARALLEL/DISTRIBUTED COMPUTING, VOL 3, PROCEEDINGS, P1164, DOI 10.1109/SNPD.2007.514
   Shar LK, 2012, IET SOFTW, V6, P377, DOI 10.1049/iet-sen.2011.0084
   Shar L.K., 2010, Security and Cryptography (SECRYPT), Proceedings of the 2010 International Conference on, P1
   Shar LK, 2012, IEEE INT CONF AUTOM, P310, DOI 10.1145/2351676.2351733
   Shar LK, 2012, PROC INT CONF SOFTW, P1293, DOI 10.1109/ICSE.2012.6227096
   Shar LK, 2012, INFORM SOFTWARE TECH, V54, P467, DOI 10.1016/j.infsof.2011.12.006
   Sharma P, 2012, INT J SYST ASSUR ENG, V3, P343, DOI 10.1007/s13198-012-0125-6
   Sivakumar K, 2007, LECT NOTES COMPUT SC, V4812, P277
   Somorovsky J, 2011, PROCEEDINGS OF THE 3RD ACM WORKSHOP CLOUD COMPUTING SECURITY WORKSHOP (CCSW'11), P3
   Stuckman J., 2011, Security Measurements and Metrics (Metrisec), 2011 Third International Workshop on, P66
   Sun FQ, 2009, LECT NOTES COMPUT SC, V5789, P539
   Sundareswaran S, 2012, LECT NOTES COMPUT SC, V7371, P223, DOI 10.1007/978-3-642-31540-4_17
   Takesue Masaru, 2008, 2008 Second International Conference on Emerging Security Information, Systems and Technologies (SECUREWARE), P133, DOI 10.1109/SECURWARE.2008.24
   Tang S., 2010, WWW 10, P941
   Ter Louw M, 2009, P IEEE S SECUR PRIV, P331, DOI 10.1109/SP.2009.33
   Tiwari S., 2008, 16th IEEE International Conference on Networks, P1
   Van Gundy M, 2012, COMPUT SECUR, V31, P612, DOI 10.1016/j.cose.2011.12.004
   Venkatakrishnan VN, 2010, LECT NOTES COMPUT SC, V6503, P3
   Veracode Inc, 2011, PREV CROSS SIT SCRIP
   Vogt P., 2007, NDSS
   Wang SJ, 2007, PROCEEDINGS OF FUTURE GENERATION COMMUNICATION AND NETWORKING, WORKSHOP PAPERS, VOL 2, P125
   Wassermann G, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P171, DOI 10.1145/1368088.1368112
   Weinberger J, 2011, LECT NOTES COMPUT SC, V6879, P150, DOI 10.1007/978-3-642-23822-2_9
   Wurzinger P, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR SECURE SYSTEMS, P33, DOI 10.1109/IWSESS.2009.5068456
   Xiong PL, 2009, LECT NOTES BUS INF, V26, P141
   Yi Wang, 2011, Proceedings of the 2011 IEEE 5th International Symposium on Theoretical Aspects of Software Engineering (TASE 2011), P191, DOI 10.1109/TASE.2011.43
   Yu F, 2010, LECT NOTES COMPUT SC, V6015, P154
   Yu Sun, 2012, 2012 International Conference on Computer Science and Service System (CSSS), P2161, DOI 10.1109/CSSS.2012.537
   Zhang Z., 2010, INT C E BUS INF SYST, P1
   Zhushou Tang, 2011, IEEE INFOCOM 2011 - IEEE Conference on Computer Communications. Workshops, P976, DOI 10.1109/INFCOMW.2011.5928954
   Zimmer D., 2008, REAL WORLD XSS
NR 126
TC 68
Z9 72
U1 4
U2 85
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 170
EP 186
DI 10.1016/j.infsof.2014.07.010
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800010
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Silva, FS
   Soares, FSF
   Peres, AL
   de Azevedo, IM
   Vasconcelos, APLF
   Kamei, FK
   Meira, SRD
AF Silva, Fernando Selleri
   Furtado Soares, Felipe Santana
   Peres, Angela Lima
   de Azevedo, Ivanildo Monteiro
   Vasconcelos, Ana Paula L. F.
   Kamei, Fernando Kenji
   de Lemos Meira, Silvio Romero
TI Using CMMI together with agile software development: A systematic review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software process improvement; CMMI; Agile methodology; Benefits;
   Limitations; Systematic review
AB Background: The search for adherence to maturity levels by using lightweight processes that require low levels of effort is regarded as a challenge for software development organizations.
   Objective: This study seeks to evaluate, synthesize, and present results on the use of the Capability Maturity Model Integration (CMMI) in combination with agile software development, and thereafter to give an overview of the topics researched, which includes a discussion of their benefits and limitations, the strength of the findings, and the implications for research and practice.
   Methods: The method applied was a Systematic Literature Review on studies published up to (and including) 2011.
   Results: The search strategy identified 3193 results, of which 81 included studies on the use of CMMI together with agile methodologies. The benefits found were grouped into two main categories: those related to the organization in general and those related to the development process, and were organized into subcategories, according to the area to which they refer. The limitations were also grouped into these categories. Using the criteria defined, the strength of the evidence found was considered low. The implications of the results for research and practice are discussed.
   Conclusion: Agile methodologies can be used by companies to reduce efforts in getting to levels 2 and 3 of CMMI, there even being reports of applying agile practices that led to achieving level 5. However, agile methodologies alone, according to the studies, were not sufficient to obtain a rating at a given level, it being necessary to resort to additional practices to do so. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Silva, Fernando Selleri; Furtado Soares, Felipe Santana; Peres, Angela Lima; de Azevedo, Ivanildo Monteiro; Vasconcelos, Ana Paula L. F.; Kamei, Fernando Kenji; de Lemos Meira, Silvio Romero] Fed Univ Pernambuco UFPE, Ctr Informat CIn, Recife, PE, Brazil.
   [Silva, Fernando Selleri; de Azevedo, Ivanildo Monteiro; Vasconcelos, Ana Paula L. F.] Mato Grosso State Univ UNEMAT, Comp Sci Course FACET, Barra Do Bugres, MT, Brazil.
   [Furtado Soares, Felipe Santana; de Lemos Meira, Silvio Romero] Recife Ctr Adv Studies & Syst CESAR, Recife, PE, Brazil.
   [Peres, Angela Lima] Cesmac Univ Ctr, Maceio, AL, Brazil.
   [Kamei, Fernando Kenji] Fed Inst Alagoas IFAL, Arapiraca, AL, Brazil.
C3 Universidade Federal de Pernambuco; Universidade do Estado de Mato
   Grosso; Centro de Estudos e Sistemas Avancados do Recife (CESAR);
   Instituto Federal de Alagoas (IFAL)
RP Silva, FS (corresponding author), Fed Univ Pernambuco CIn UFPE, Ctr Informat, Av Jornalista Anibal Fernandes S-N,Cidade Univ, BR-50740560 Recife, PE, Brazil.
EM fss4@cin.ufpe.br; fsfs@cin.ufpe.br; alp5@cin.ufpe.br; ima2@cin.ufpe.br;
   aplfv@cin.ufpe.br; fkk@cin.ufpe.br; srlm@cin.ufpe.br
RI Meira, Silvio/AAT-9381-2020; Silva, Fernando Selleri/AAL-4741-2021;
   Soares, Felipe/HOI-0057-2023
OI Silva, Fernando Selleri/0000-0003-2158-4028; Azevedo, Ivanildo Monteiro
   de/0000-0002-5247-1424; Lins Ferreira de Vasconcelos, Ana
   Paula/0000-0002-2513-4924; Kamei, Fernando Kenji/0000-0002-5572-2049
FU Foundation for Science and Technology of the State of Pernambuco
   (FACEPE) [IBPG-0136-1.03/11]
FX This work was supported by the Foundation for Science and Technology of
   the State of Pernambuco (FACEPE), under Process No. IBPG-0136-1.03/11.
CR Agile Manifesto, 2001, Manifesto for agile software development
   Anderson D.J., 2010, Kanban: successful Evolutionary Change for Your Technology Business
   [Anonymous], 2002, VTT TECHNICAL REPORT
   [Anonymous], 2010, P 2010 NATL SOFTWARE, DOI DOI 10.1145/1890810.1890813
   [Anonymous], SPI GEN GUID SOFTW
   [Anonymous], 1988, Qualitative research methods, DOI DOI 10.4135/9781412985000
   [Anonymous], 2013, 7 ANN STAT AG DEV SU
   [Anonymous], MAT PROF REP
   [Anonymous], P 8 INT C SOFTW ENG
   [Anonymous], 2012, CROSSTALK
   [Anonymous], PROCEEDINGS OF THE E
   Atkins D, 2004, BMJ-BRIT MED J, V328, P1490
   Beck K., 2000, EXTREME PROGRAMMING
   Boehm B.A., 2006, Proceedings of ICSE'06 Conference, P12, DOI DOI 10.1145/1134285.1134288
   Cockburn A., 2000, Agile Software Development
   Cohen D, 2004, ADV COMPUT, V62, P1, DOI 10.1016/S0065-2458(03)62001-2
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Erickson J, 2005, J DATABASE MANAGE, V16, P88, DOI 10.4018/jdm.2005100105
   Highsmith JamesA., 2000, ADAPTIVE SOFTWARE DE
   Kitchenham B., 2007, Joint Report
   Magdaleno AM, 2012, J SYST SOFTWARE, V85, P351, DOI 10.1016/j.jss.2011.08.028
   Montesi M, 2008, J SYST SOFTWARE, V81, P1694, DOI 10.1016/j.jss.2007.11.723
   Palmer S.R., 2002, PRACTICAL GUIDE FEAT
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Racheva Z, 2009, LECT NOTES BUS INF P, V32, P141
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   SEI, 2010, TECHNICAL REPORT
   Staples M, 2008, INFORM SOFTWARE TECH, V50, P605, DOI 10.1016/j.infsof.2007.07.003
   Stapleton Jennifer., 2003, DSDM: Business focused development
   Sulayman M, 2009, COMM COM INF SC, V59, P1
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
NR 31
TC 76
Z9 94
U1 0
U2 70
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 20
EP 43
DI 10.1016/j.infsof.2014.09.012
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800002
DA 2024-07-18
ER

PT J
AU Figueiredo, MC
   de Souza, CRB
   Pereira, MZ
   Prikladnicki, R
   Audy, JLN
AF Figueiredo, Mayara Costa
   de Souza, Cleidson R. B.
   Pereira, Marcelo Zilio
   Prikladnicki, Rafael
   Nicolas Audy, Jorge Luis
TI Knowledge transfer, translation and transformation in the work of
   information technology architects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE IT architecture; Software architecture; Architect roles
AB Context: Information Technology (IT) architects are the professionals responsible for designing the information systems for an organization. In order to do that, they take into account many aspects and stakeholders, including customers, software developers, the organization's business, and its current IT infrastructure. Therefore, different aspects influence their work.
   Objective: This paper presents results of research into how IT architects perform their work in practice and how different aspects are taken into account when an information system is developed. An understanding of IT architects' activities allows us to better support their work. This paper extends our own previous work (Figueiredo et al., 2012) [30] by discussing aspects of knowledge management and tool support.
   Method: A qualitative study was conducted using semi-structured interviews for data collection and grounded theory methods (Strauss and Corbin, 1998) [5] for data analysis. Twenty-seven interviews were conducted with twenty-two interviewees from nine different companies through four cycles of data collection and analysis.
   Results: Companies divide IT architecture activities among different roles. Although these roles receive different names in different organizations, all organizations follow a similar pattern based on 3 roles: enterprise, solutions and software architects. These architects perform both the technical activities related to the IT architecture and the social activities regarding the communication and coordination with other stakeholders and among themselves. Furthermore, current tools used by IT architects lack adequate support for all these aspects.
   Conclusion: The activities of the different IT architects are highly interconnected and have a huge influence in the way the requirements are handled in every phase of the development of an information system. The activities of IT architects are also important for knowledge transfer, translation and transformation, since they receive from and spread information to different groups of stakeholders. We also conclude that they lack appropriate tool support, especially regarding support for their collaborative work. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Figueiredo, Mayara Costa; de Souza, Cleidson R. B.] Fed Univ Para, BR-66059 Belem, Para, Brazil.
   [de Souza, Cleidson R. B.] Inst Tecnol Vale, Belem, Para, Brazil.
   [Pereira, Marcelo Zilio; Prikladnicki, Rafael; Nicolas Audy, Jorge Luis] Pontificia Univ Catolica Rio Grande do SUL PUCRS, Porto Alegre, RS, Brazil.
C3 Universidade Federal do Para; Instituto Tecnologico Vale Desenvolvimento
   Sustentavel; Pontificia Universidade Catolica Do Rio Grande Do Sul
RP de Souza, CRB (corresponding author), Inst Tecnol Vale, Belem, Para, Brazil.
EM mcfigueiredo@ufpa.br; cleidson.desouza@acm.org;
   marcelo.zilio@acad.pucrs.br; rafael.prikladnicki@pucrs.br; audy@pucrs.br
RI de Souza, Cleidson R B/J-4409-2014; Figueiredo, Mayara/GQQ-2945-2022
OI de Souza, Cleidson R B/0000-0003-3240-3122; 
FU CNPq [473220/2008-3, 483125/2010-5, 560037/2010-4]; FAPESPA [003/2008,
   014/2008]; CAPES; PDTI program; Dell Computers of Brazil Ltd [Law
   8.248/91]
FX This research received funding from CNPq through the "Edital Universal
   2008" Process Number 473220/2008-3, FAPESPA through "Edital Universal"
   number 003/2008 and Edital 014/2008 (project "Rede Paraense de Pesquisa
   em Tecnologias de Informacao e Comunicacoes"), from CAPES through a
   M.Sc. scholarship granted to the first author, and from the PDTI
   program, financed by Dell Computers of Brazil Ltd. (Law 8.248/91). The
   fifth author was also supported by CNPq (483125/2010-5 and
   560037/2010-4).
CR Akenine D., 2008, ARCH J ROLE ARCH, V15, P22
   Ali Babar M., 2007, WORKSH SHAR REUS ARC
   Ameller D., 2012, Proceedings from RE: The 20th International Requirements Engineering Conference, P41, DOI DOI 10.1109/RE.2012.6345838
   [Anonymous], TOGAF VERS 9 OP GROU
   Calefato F, 2012, EMPIR SOFTW ENG, V17, P640, DOI 10.1007/s10664-011-9179-3
   Carlile P., 2003, ORG SCI
   Carlile PR, 2003, MANAGE SCI, V49, P1180, DOI 10.1287/mnsc.49.9.1180.16564
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Figueiredo M.C., 2012, 18 AM C INF SYST SEA
   Grinter R. E., 1999, WORK ACTIVITIES COOR
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Hiranpruk R., 2006, INTRO IASA
   Hofstader J., 2008, ARCH J ROLE ARCH J, V15, P2
   Jorgensen D.L., 1989, Participant Observation: A Methodology for Human Studies, p133 pp
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   Lopes LT, 2008, ICEIS 2008: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL ISAS-2, P117
   Patton M. Q., 2015, Qualitative research and evaluation methods
   Penker M., 2000, Business Modeling With UML: Business Patterns at Work
   Prikladnicki R., 2013, P INT C SOFTW ENG AC
   Schekkerman J., 2009, Enterprise Architecture Service Oriented Architecture (SOA)
   Seaman C.B., 2008, Guide to Advanced Empirical Software Engineering, P35, DOI [10.1007/978-1-84800-044-52, DOI 10.1007/978-1-84800-044-52]
   Smolander K., 2002, P 1 INT S EMP SOFTW
   Smolander K, 2008, EUR J INFORM SYST, V17, P575, DOI 10.1057/ejis.2008.48
   Spanoudakis G., 2005, RECENT ADV, VIII
   Strauss A., 1990, BASICS QUALITATIVE R
   The Open Group, 2008, INF TECHN ARCH CERT
   The Open Group, 2004, BUS EX GUID IT ARCH
   Unde A., 2008, The Architecture Journal, V15, P7
   Unphon H, 2010, J SYST SOFTWARE, V83, P2211, DOI 10.1016/j.jss.2010.06.043
   Wilt J., 2010, IASAS 5 PILLARS IT A
   Zachman J., 2003, ZACHMAN FRAMEWORK PR
   Zachman J A., 2008, About The Zachman Framework
NR 32
TC 3
Z9 6
U1 0
U2 44
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2014
VL 56
IS 10
BP 1233
EP 1252
DI 10.1016/j.infsof.2014.04.001
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AN8JO
UT WOS:000340850700005
DA 2024-07-18
ER

PT J
AU Loup-Escande, E
   Burkhardt, JM
   Christmann, O
   Richir, S
AF Loup-Escande, Emilie
   Burkhardt, Jean-Marie
   Christmann, Olivier
   Richir, Simon
TI Needs' elaboration between users, designers and project leaders:
   Analysis of a design process of a virtual reality-based software
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Ergonomics; Design process; Emerging technologies; Needs
ID PARTICIPATORY DESIGN; END-USERS; REQUIREMENTS; INVOLVEMENT; SYSTEMS;
   INNOVATION
AB Context: The participation of users in the design process is recognized as a positive and a necessary element as artifacts suit their needs. Two complementary approaches of users' involvement co-exist: the user-centered design and the participatory design. These approaches involve learning process from users to designers and vice versa. However, there has no research in design of virtual reality (VR)-based software dealing with how the elaboration of needs is actually distributed in time and among users, designers and project leaders, as well as how it is actually supported by tools and methods.
   Objective: This paper aims to observe, in a real design project of a virtual reality-based software, how the various stakeholders (users, designers, project leaders) actually participate by sharing and pulling pieces of information from the process of needs elaboration, and how these contributions evolve throughout the decisions made in the course of the project.
   Method: Our method, based on the observation of the practices in collective design, allows us to collect and analyze the relationship between each possible action (e.g., elicitation), each stakeholder who initiates these actions (e.g., users) and each phase of the design process (e.g., evaluation phase), and the dynamics of the construction of needs.
   Results: Our results detail how the elicited needs are dealt with by designers, users and/or project leaders: (1) we show a strong contribution of users in the design, compared to others stakeholders, (2) among the needs elicited by users, most have been validated by the designers, (3) some elicited needs could have been firstly rejected and finally validated and implemented.
   Conclusion: We identify the reasons which justify and explain our results confronting them to the literature. We underline the conditions have been satisfied in our study in order to involve effectively users in the design of emerging technologies. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Loup-Escande, Emilie] Univ Rennes 2, Ctr Rech Psychol Cognit & Commun, F-35043 Rennes, France.
   [Burkhardt, Jean-Marie] IFSTTAR, Lab Psychol Conduite, F-78000 Versailles, France.
   [Christmann, Olivier; Richir, Simon] Arts & Metiers ParisTech, LAMPA, F-49000 Angers, France.
C3 Universite Rennes 2; Universite de Rennes; Universite Gustave-Eiffel;
   Arts et Metiers Institute of Technology
RP Loup-Escande, E (corresponding author), Univ Rennes 2, Ctr Rech Psychol Cognit & Commun, 1 Pl Recteur Henri Le Moal, F-35043 Rennes, France.
EM emilie.loup-escande@uhb.fr; jean-marie.burkhardt@ifsttar.fr;
   olivier.christmann@ensam.eu; simon.richir@ensam.eu
RI Burkhardt, Jean-Marie/AAF-5544-2020
OI Burkhardt, Jean-Marie/0000-0003-4417-6430; Richir,
   Simon/0000-0003-2075-6609; Christmann, Olivier/0000-0001-8652-5630
FU Laval Agglomeration; Conseil General de la Mayenne
FX Special thanks to "Laval Agglomeration" and the "Conseil General de la
   Mayenne" for their support, to the industrial partners who contributed
   to this field study (Meubles Gautier, Groupe Dorel, Angebault), and to
   the IFTH (French Institute for Textiles and Clothing), sponsors of the
   project.
CR Alenljung B., 2008, PORTRAYING PRACTICE
   Alenljung B., 2005, DECISION MAKING REQU, P111
   Anastassova M., 2007, INTERACT07 WORKSH AR
   Anastassova M., 2005, P HCI INT LAS VEG JU
   Anastassova M., 2006, THESIS PARIS
   Anastassova M, 2007, LECT NOTES COMPUT SC, V4550, P383
   [Anonymous], THESIS CNAM PARIS
   [Anonymous], 1999, Mathematical Methods of Statistics
   [Anonymous], 3 INT S IMPR PROB TH
   Aoussat A., 2009, ASIAN INT J SCI TECH, V2, P24
   Aurum A, 2003, INFORM SOFTWARE TECH, V45, P945, DOI 10.1016/S0950-5849(03)00096-X
   Barcellini F, 2008, INT J HUM-COMPUT ST, V66, P558, DOI 10.1016/j.ijhcs.2007.10.008
   BAROUDI JJ, 1986, COMMUN ACM, V29, P232, DOI 10.1145/5666.5669
   Bastien J.M.C., 2004, ERGONOMIE
   Beguin P, 2007, TRAV HUMAIN, V70, P369, DOI 10.3917/th.704.0369
   Béguin P, 2003, INTERACT COMPUT, V15, P709, DOI 10.1016/S0953-5438(03)00060-2
   Berry DM, 2004, REQUIR ENG, V9, P67, DOI 10.1007/s00766-003-0181-1
   Blandford A., 2008, INT J HUM-COMPUT ST, V66, P1
   Bourmaud G., 2008, DU DEV INSTRUMENTS L
   Brangier E., 2006, ERGOIA
   Burkhardt J.-M., 2004, ERGONOMIE
   Caelen J, 2009, TRAV HUMAIN, V72, P79, DOI 10.3917/th.721.0079
   Caelen J., 2004, PAPYRUS MAGAZINE
   Chatzoglou P. D., 1996, Requirements Engineering, V1, P75, DOI 10.1007/BF01235903
   CORROYER D, 1994, ANN PSYCHOL, V94, P607
   Costabile MF, 2009, LECT NOTES COMPUT SC, V5435, P70
   D'Astous P, 2004, DESIGN STUD, V25, P625, DOI 10.1016/j.destud.2003.12.002
   Damodaran L, 1996, BEHAV INFORM TECHNOL, V15, P363, DOI 10.1080/014492996120049
   Darses F., 2002, RAPPORT FINAL RECHER, P170
   Darses F., 2004, ERGONOMIE
   Darses F, 2006, APPL ERGON, V37, P757, DOI 10.1016/j.apergo.2005.11.004
   Darses Francoise, 2004, CONSOMMATEUR COEUR I, P25
   Delamarre A., 2006, THESIS U ANGERS ANGE, P132
   Ehn Pelle, 1993, PARTICIPATORY DESIGN, P41
   Fleury S., 2013, J SOFTW ENG APPL, V6, P1
   FLORES F, 1988, ACM T INFORM SYST, V6, P153, DOI 10.1145/45941.45943
   Folcher V, 2003, INTERACT COMPUT, V15, P647, DOI 10.1016/S0953-5438(03)00057-2
   Folstad A., 2005, HUM COMP INT INT C L
   Foster ST, 1999, J ENG TECHNOL MANAGE, V16, P329, DOI 10.1016/S0923-4748(99)00014-4
   Fuchs P., 2006, Le traite de la realite virtuelle-Vol. 1 L'homme et l'environnement virtuel. [Treaty of virtual reality-Vol. 1 The man and the virtual environment]
   ISO, 9241210 ISO
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   Kensing F., 1998, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V7, P167, DOI 10.1023/A:1008689307411
   KJELDSKOV J, 2003, THESIS AALBORG U AAL
   Kujala S, 2003, BEHAV INFORM TECHNOL, V22, P1, DOI 10.1080/0144929021000055530
   Loup-Escande E., 2011, ELABORATION SPCIFICA
   Loup-Escande E., 2013, REQUIREMENTS PRIORIT
   Loup-Escande E, 2013, TRAV HUMAIN, V76, P27, DOI 10.3917/th.761.0027
   Loup-Escande E, 2013, COMM COM INF SC, V417, P1
   Loup-Escande E, 2010, J DECIS SYST, V19, P9, DOI [10.3166/jds.19.9-31, 10.3166/JDS.19.9-31]
   Ma Q., 2009, EFFECTIVENESS REQUIR
   Macaulay L., 1996, Requirements engineering, P202
   Maguire M., 2002, P IFIP 17 WORLD COMP
   Muller M.J., 1997, Handbook of Human-Computer Interaction, V2, P255, DOI DOI 10.1016/B978-044481862-1.50077-7
   Nelson J, 2014, TRAV HUMAIN, V77, P21, DOI 10.3917/th.771.0021
   Nelson J, 2012, TRAV HUMAIN, V75, P279, DOI 10.3917/th.753.0279
   Pilemalm S, 2007, DESIGN STUD, V28, P263, DOI 10.1016/j.destud.2007.02.009
   Plos O., 2007, ICED07 INT C ENG DES
   Rabardel P, 2005, THEOR ISS ERGON SCI, V6, P429, DOI 10.1080/14639220500078179
   Rabardel P., 1995, APPROACH COGNITIVE I
   Rasmussen J., 1987, Skills, rules, and knowledge; signals, signs, and symbols, and other distinctions in human performance models System design for human interaction, P291
   Rasmussen J., 1986, INFORM PROCESSING HU
   Reich Y., 1996, Design Studies, V17, P165, DOI 10.1016/0142-694X(95)00000-H
   Richir S., 2006, TECHNIQUES INGENIEUR, P1
   Robertson S, 2001, INT J HUM-COMPUT ST, V55, P405, DOI 10.1006/ijhc.2001.0481
   Sperandio J.-C., 2001, JIM2001 INT HOMM MAC
   Ulrich T. K., 2003, PRODUCT DESIGN DEV
   Urban G.L., 1980, DESIGN MARKETING NEW
   VISSER W, 2006, COGNITIVE ARTEFACTS
   Von Hippel Eric, 2005, Democratizing Innovation
   Wilson S., 1996, People and Computers XI. Proceedings of HCI '96, P221
   Wolff M., 2004, ANAL STAT DONNEES PS
   Wong J, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1435
   Zhao ZZ, 2009, L N INST COMP SCI SO, V21, P98
NR 74
TC 10
Z9 13
U1 1
U2 29
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2014
VL 56
IS 8
BP 1049
EP 1061
DI 10.1016/j.infsof.2014.04.008
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AI9OL
UT WOS:000337261800013
OA Green Published
DA 2024-07-18
ER

PT J
AU Zhou, YM
   Yang, YB
   Xu, BW
   Leung, H
   Zhou, XY
AF Zhou, Yuming
   Yang, Yibiao
   Xu, Baowen
   Leung, Hareton
   Zhou, Xiaoyu
TI Source code size estimation approaches for object-oriented systems from
   UML class diagrams: A comparative study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Object-oriented; Code size; Estimation; UML; Class diagrams
ID FUNCTION POINTS; SOFTWARE; PREDICTION; MODELS
AB Background: Source code size in terms of SLOC (source lines of code) is the input of many parametric software effort estimation models. However, it is unavailable at the early phase of software development.
   Objective: We investigate the accuracy of early SLOC estimation approaches for an object-oriented system using the information collected from its UML class diagram available at the early software development phase.
   Method: We use different modeling techniques to build the prediction models for investigating the accuracy of six types of metrics to estimate SLOC. The used techniques include linear models, non-linear models, rule/tree-based models, and instance-based models. The investigated metrics are class diagram metrics, predictive object points, object-oriented project size metric, fast&&serious class points, objective class points, and object-oriented function points.
   Results: Based on 100 open-source Java systems, we find that the prediction model built using object-oriented project size metric and ordinary least square regression with a logarithmic transformation achieves the highest accuracy (mean MMRE = 0.19 and mean Pred(25) = 0.74).
   Conclusion: We should use object-oriented project size metric and ordinary least square regression with a logarithmic transformation to build a simple, accurate, and comprehensible SLOC estimation model. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Zhou, Yuming; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Zhou, Yuming; Yang, Yibiao; Xu, Baowen] Nanjing Univ, Dept Comp Sci & Technol, Nanjing, Peoples R China.
   [Leung, Hareton] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Hong Kong, Peoples R China.
   [Zhou, Xiaoyu] Southeast Univ, Sch Comp Sci & Engn, Nanjing, Peoples R China.
C3 Nanjing University; Nanjing University; Hong Kong Polytechnic
   University; Southeast University - China
RP Zhou, YM (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
EM zhouyuming@nju.edu.cn
RI Yang, Yibiao/ABP-4159-2022; Xu, Baowen/IXW-4882-2023; Leung, Hareton Kam
   Nang/O-5899-2014
OI Yang, Yibiao/0000-0003-1153-2013; Xu, Baowen/0000-0001-7743-1296; Leung,
   Hareton Kam Nang/0000-0002-1766-7667
FU National Key Basic Research and Development Program of China
   [2014CB340702]; National Natural Science Foundation of China [61272082,
   61073029, 61300051, 61021062]; Natural Science Foundation of Jiangsu
   Province [BK20130014]; Climbing Plan of Nanjing University; Hong Kong
   Competitive Earmarked Research Grant [PolyU5219/06E]; PolyU Grant
   [4-6934]
FX We are very grateful to Professor Pierre Bourque for his help during the
   preparation of this paper. This work is supported by the National Key
   Basic Research and Development Program of China (2014CB340702), the
   National Natural Science Foundation of China (61272082, 61073029,
   61300051, and 61021062), Natural Science Foundation of Jiangsu Province
   (BK20130014), the Climbing Plan of Nanjing University, the Hong Kong
   Competitive Earmarked Research Grant (PolyU5219/06E), and PolyU Grant
   (4-6934).
CR ABRAHAO S, 2006, SOFTWARE SYSTEM MODE, V5, P48
   Abrahao S., 2004, WORKING PAPER
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2002, HDB SOFTWARE ENG KNO
   Antoniol G, 2003, EMPIR SOFTW ENG, V8, P225, DOI 10.1023/A:1024472727275
   Antoniol G., 1999, Empirical Software Engineering, V4, P263, DOI 10.1023/A:1009834811663
   Antoniol G, 1998, LECT NOTES COMPUT SC, V1413, P59, DOI 10.1007/BFb0054219
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bianco V.D., 2006, WORKSH MOD SIZ METR
   Bianco V.D., 2005, P 11 INT SOFTW METR, P1
   Bianco V.D., 2006, P 2006 INT C SOFTW P, P21
   Boehm BW., 1981, Software Engineering Economics
   BOURQUE P, 1991, J SYST SOFTWARE, V15, P159, DOI 10.1016/0164-1212(91)90053-9
   Bradine D., 2000, ENTERPRISE SYSTEMS J
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Caldiera G, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P167, DOI 10.1109/METRIC.1998.731242
   Carbone M., 2002, Proc. of the 6th International ECOOP Workshop on Quantitative Approaches in Object-oriented Software Engineering, P35
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   Chen Y, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P199
   Cohen J., 1988, STAT POWER ANAL BEHA
   Conte S.D., 1989, TECHNICAL REPORT
   Costagliola G, 2005, IEEE T SOFTWARE ENG, V31, P52, DOI 10.1109/TSE.2005.5
   Dejaeger K, 2012, IEEE T SOFTWARE ENG, V38, P375, DOI 10.1109/TSE.2011.55
   Dunsmore H.E., 1985, P NAT JOINT COMP C S
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Gencel C, 2009, ASIA PAC SOFWR ENG, P19, DOI 10.1109/APSEC.2009.51
   Gencel C, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363106
   Genero M., 2000, LOBJECT, V6, P489
   Genero M, 2007, EMPIR SOFTW ENG, V12, P517, DOI 10.1007/s10664-007-9038-4
   Hastings TE, 2001, IEEE T SOFTWARE ENG, V27, P337, DOI 10.1109/32.917523
   Haug M., 2001, SOFTWARE PROCESS IMP
   Hee Beng Kuan Tan, 2006, 28th International Conference on Software Engineering Proceedings, P321
   HendersonSellers B, 1997, IEEE T SOFTWARE ENG, V23, P260, DOI 10.1109/32.588544
   Hopkins WillG., 2003, A new view of statistics
   Howell D. C., 2002, Statistical methods for psychology, V5th ed.
   International Function Point Users Group (IFPUG), 2010, FUNCT POINT COUNT PR
   Jahan M.V., 2001, NAT C SOFTW ENG
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Koru AG, 2005, IEEE T SOFTWARE ENG, V31, P625, DOI 10.1109/TSE.2005.89
   LARANJEIRA LA, 1990, IEEE T SOFTWARE ENG, V16, P510, DOI 10.1109/32.52774
   Lind Kenneth, 2008, Nordic Journal of Computing, V14, P282
   Lind K., 2010, P 32 ICSE WORKSH EM
   Lind K, 2012, IEEE T SOFTWARE ENG, V38, P993, DOI 10.1109/TSE.2011.86
   Lokan CJ, 2005, ADV COMPUT, V65, P297, DOI 10.1016/S0065-2458(05)65007-3
   Lokan CJ, 1996, J SYST SOFTWARE, V32, P65, DOI 10.1016/0164-1212(95)00044-5
   MacDonell SG, 2003, INFORM SOFTWARE TECH, V45, P389, DOI 10.1016/S0950-5849(03)00011-9
   MATSON JE, 1994, IEEE T SOFTWARE ENG, V20, P275, DOI 10.1109/32.277575
   Menzies T., 2002, P 27 NASA SEL WORKSH
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   Minkiewicz A., 2000, U.S. Patent, Patent No. [6,073,107, 6073107]
   Minkiewicz A.F., 1997, MEASURING OBJECT ORI
   Mishra S., 2010, INT J COMPUTER SCI C, V1, P419
   Misic VB, 1998, J SYST SOFTWARE, V41, P133, DOI 10.1016/S0164-1212(97)10014-0
   Moser S, 1996, COMPUTER, V29, P45, DOI 10.1109/2.536783
   MUKHOPADHYAY T, 1992, IEEE T SOFTWARE ENG, V18, P915, DOI 10.1109/32.163607
   Pfleeger ShariLawrence., 2005, SOFTWARE COST ESTIMA
   Port D, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P51
   Ram DJ, 2000, FIRST ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P121, DOI 10.1109/APAQ.2000.883785
   Rathi M.K., 1988, THESIS PURDUE U
   Reinard J.C., 2006, Communication research statistics
   SangEun Kim, 2006, Proceedings of the 2006 International Conference on Software Engineering Research and Practice and Conference on Programming Languages and Compilers SERP'06, P415
   Shi Y, 2010, J ENG GAS TURBINES P, P132
   Stikkel G., 2004, COMB 14 WORKSH PHD S
   Tan HBK, 2006, IEICE T INF SYST, VE89D, P1321, DOI 10.1093/ietisy/e89-d.4.1321
   Tan HBK, 2009, ACM T SOFTW ENG METH, V19, DOI 10.1145/1571629.1571630
   Touesnard Brad., 2004, Software Cost Estimation: SLOC-based Models and the Function Points Model Version 1.1
   VERNER J, 1992, IEEE T SOFTWARE ENG, V18, P265, DOI 10.1109/32.129216
   Wilkie FG, 2011, INFORM SOFTWARE TECH, V53, P1236, DOI 10.1016/j.infsof.2011.05.008
   Witten I. H., 2005, DATA MINING PRACTICA
   Zhao Y, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P141
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
NR 76
TC 18
Z9 21
U1 1
U2 27
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2014
VL 56
IS 2
BP 220
EP 237
DI 10.1016/j.infsof.2013.09.003
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 285TN
UT WOS:000329418000007
DA 2024-07-18
ER

PT J
AU Kitchenham, B
   Brereton, P
AF Kitchenham, Barbara
   Brereton, Pearl
TI A systematic review of systematic review process research in software
   engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic review; Systematic literature review; Systematic review
   methodology; Mapping study
AB Context: Many researchers adopting systematic reviews (SRs) have also published papers discussing problems with the SR methodology and suggestions for improving it. Since guidelines for SRs in software engineering (SE) were last updated in 2007, we believe it is time to investigate whether the guidelines need to be amended in the light of recent research.
   Objective: To identify, evaluate and synthesize research published by software engineering researchers concerning their experiences of performing SRs and their proposals for improving the SR process.
   Method: We undertook a systematic review of papers reporting experiences of undertaking SRs and/or discussing techniques that could be used to improve the SR process. Studies were classified with respect to the stage in the SR process they addressed, whether they related to education or problems faced by novices and whether they proposed the use of textual analysis tools.
   Results: We identified 68 papers reporting 63 unique studies published in SE conferences and journals between 2005 and mid-2012. The most common criticisms of SRs were that they take a long time, that SE digital libraries are not appropriate for broad literature searches and that assessing the quality of empirical studies of different types is difficult.
   Conclusion: We recommend removing advice to use structured questions to construct search strings and including advice to use a quasi-gold standard based on a limited manual search to assist the construction of search stings and evaluation of the search process. Textual analysis tools are likely to be useful for inclusion/exclusion decisions and search string construction but require more stringent evaluation. SE researchers would benefit from tools to manage the SR process but existing tools need independent validation. Quality assessment of studies using a variety of empirical methods remains a major problem. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Kitchenham, Barbara; Brereton, Pearl] Keele Univ, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
C3 Keele University
RP Kitchenham, B (corresponding author), Keele Univ, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
EM b.a.kitchenham@keele.ac.uk; o.p.brereton@keele.ac.uk
RI Kitchenham, Barbara/AAL-4311-2020
OI Kitchenham, Barbara/0000-0002-6134-8460
CR [Anonymous], 1988, Qualitative research methods, DOI DOI 10.4135/9781412985000
   [Anonymous], 67905 RTES PESC COPP
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   Dieste O., 2007, ESEM 2007
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Felizardo Katia R., 2012, Journal of Software, V7, P450, DOI 10.4304/jsw.7.2.450-461
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Jedlitschka A., 2008, Guide to Advanced Empirical Software Engineering
   Kitchenham B., 2010, ICSE 2010
   Kitchenham B., 2011, EASE 2011
   Kitchenham B., 2004, TRSE0401 KEEL U NAT
   Kitchenham B.A., 2010, CAN WE EVALUATE QUAL
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham Barbara, INFORM SOFTWARE TECH, V52
   Lopes AA, 2007, COMPUT GRAPH-UK, V31, P316, DOI 10.1016/j.cag.2007.01.023
   MacDonell S, 2010, IEEE T SOFTWARE ENG, V36, P676, DOI 10.1109/TSE.2010.28
   Major L., 2011, IET SEM
   Marshall C., 2013, TOOLS SUPPORT UNPUB
   Myrtveit I., 2012, EMPIR SOFTW ENG, V17, P18
   Olejnik S, 2003, PSYCHOL METHODS, V8, P434, DOI 10.1037/1082-989X.8.4.434
   Petersen K., 2008, EASE 2008
   Quigley A. J., 2000, Proceedings 2000 Australian Software Engineering Conference, P119, DOI 10.1109/ASWEC.2000.844569
   Rainer A., 2008, FOLLOW UP EMPIRICAL
   Rainer A., 2006, PRELIMINARY EMPIRICA
   Rosenthal R, 2001, ANNU REV PSYCHOL, V52, P59, DOI 10.1146/annurev.psych.52.1.59
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   SCHULZ KF, 1995, JAMA-J AM MED ASSOC, V273, P408, DOI 10.1001/jama.273.5.408
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Skoglund Mats, 2009, EASE 2009
   Staffs Keele, 2007, Tech. Rep.
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   Staples Mark, 2006, EXPERIENCES USING SY
   Thorlund K, 2012, PLOS ONE, V7, DOI 10.1371/journal.pone.0039471
   Verner JM, 2009, INT CONF RES CHAL, P313, DOI 10.1109/RCIS.2009.5089295
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Woodall P., 2006, CONDUCTING SYSTEMATI
NR 40
TC 465
Z9 488
U1 11
U2 174
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2013
VL 55
IS 12
BP 2049
EP 2075
DI 10.1016/j.infsof.2013.07.010
PG 27
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 242QW
UT WOS:000326258100001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Nanz, S
   Torshizi, F
   Pedroni, M
   Meyer, B
AF Nanz, Sebastian
   Torshizi, Faraz
   Pedroni, Michela
   Meyer, Bertrand
TI Design of an empirical study for comparing the usability of concurrent
   programming languages
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical study; Concurrency; Programming languages; Usability
AB Context: Developing concurrent software has long been recognized as a difficult and error-prone task. To support developers, a multitude of language proposals exist that promise to make concurrent programming easier. Empirical studies are needed to support the claim that a language is more usable than another.
   Objective: This paper presents the design of a study to compare concurrent programming languages with respect to comprehending and debugging existing programs and writing correct new programs. The design is applied to a comparison of two object-oriented languages for concurrency, multithreaded Java and SCOOP.
   Method: A critical challenge for such a study is avoiding the bias that might be introduced during the training phase and when interpreting participants' solutions. We address these issues by the use of self-study material and an evaluation scheme that exposes any subjective decisions of the corrector, or eliminates them altogether.
   Results: The study template consisting of the experimental design and the structure of the self-study and evaluation material is demonstrated to work successfully in an academic setting. The concrete instantiation of the study template shows results in favor of SCOOP even though the study participants had previous training in writing multithreaded Java programs.
   Conclusion: It is concluded that the proposed template of a small but therefore easy-to-implement empirical study with a focus on core language constructs is helpful in characterizing the usability of concurrent programming paradigms. Applying the template to further languages could shed light on which approaches are promising and hence drive language research into the right direction. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Nanz, Sebastian; Pedroni, Michela; Meyer, Bertrand] Swiss Fed Inst Technol, Chair Software Engn, Zurich, Switzerland.
   [Torshizi, Faraz] Univ Toronto, Dept Comp Sci, Toronto, ON M5S 1A1, Canada.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich; University of
   Toronto
RP Nanz, S (corresponding author), Swiss Fed Inst Technol, Chair Software Engn, Zurich, Switzerland.
EM nanz@inf.ethz.ch; faraz@cs.toronto.edu; michela.pedroni@inf.ethz.ch;
   bertrand.meyer@inf.ethz.ch
RI Pedroni, Monica/C-9384-2015
FU European Research Council under the European Union [291389]; Hasler
   Foundation; ETH (ETHIIRA); PGS Grant from NSERC; European Research
   Council (ERC) [291389] Funding Source: European Research Council (ERC)
FX The research leading to these results has received funding from the
   European Research Council under the European Union's Seventh Framework
   Programme (FP7/2007-2013)/ERC Grant Agreement No. 291389, the Hasler
   Foundation, and ETH (ETHIIRA). F. Torshizi has been supported by a PGS
   Grant from NSERC.
CR [Anonymous], 1997, Object-oriented software construction
   Araujo Wladimir, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P37, DOI 10.1109/ISSRE.2008.9
   Benton N, 2004, ACM T PROGR LANG SYS, V26, P769, DOI 10.1145/1018203.1018205
   Bloom B, 1956, TAXONOMY ED OBJECTIV
   BLUMOFE RD, 1995, SIGPLAN NOTICES, V30, P207
   Cantonnet F., 2004, Proceedings. 18th International Parallel and Distributed Processing Symposium
   Carey T. T., 1988, Proceedings Focus on Software. 1988 ACM Sixteenth Annual Computer Science Conference, P72, DOI 10.1145/322609.322618
   Harrison R, 1996, SOFTWARE ENG J, V11, P247, DOI 10.1049/sej.1996.0030
   Hochstein L., 2005, SC 05, P35
   Hochstein L, 2008, J SYST SOFTWARE, V81, P1920, DOI 10.1016/j.jss.2007.12.798
   Jacobs B, 2004, P WORKSH SPEC VER CO
   Kamandi A, 2009, FUND INFORM, V90, P337, DOI [10.3233/FI-2009-0021, 10.3233/FI-2009-002J]
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Luff M, 2009, P WORKSH EV US PROGR
   Morales F, JAVA DEV J
   Nanz S., 2010, COMP STUDY USABILITY
   Nanz S, 2011, INT SYMP EMP SOFTWAR, P325, DOI 10.1109/ESEM.2011.41
   Nanz S, 2011, 2011 24TH IEEE-CS CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING (CSEET), P477, DOI 10.1109/CSEET.2011.5876128
   NIENALTOWSKI P, 2007, THESIS ETH ZURICH
   Rodríguez E, 2005, LECT NOTES COMPUT SC, V3586, P551
   Rossbach CJ, 2010, ACM SIGPLAN NOTICES, V45, P47, DOI 10.1145/1837853.1693462
   Sadowski Caitlin., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research (FoSER '10), P309
   Szafron D, 1996, CONCURRENCY-PRACT EX, V8, P147, DOI 10.1002/(SICI)1096-9128(199603)8:2<147::AID-CPE199>3.0.CO;2-O
   Torshizi F, 2009, P 32 COMM PROC ARCH, V67, P155
   Welch P, 2007, CONCUR SYST ENGN SER, V65, P349
   Wilson G. V., 1993, Proceedings CASCON '93, P999
NR 26
TC 8
Z9 8
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2013
VL 55
IS 7
BP 1304
EP 1315
DI 10.1016/j.infsof.2012.08.013
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 161UD
UT WOS:000320217900012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dan, HT
   Hierons, RM
   Counsell, S
AF Dan, Haitao
   Hierons, Robert M.
   Counsell, Steve
TI A framework for pathologies of message sequence charts
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Message sequence charts; Pathology; Race; Non-local choice; Implied
   scenarios
ID NONLOCAL CHOICE; MODEL-CHECKING; MSC; ELABORATION
AB Context: It is known that a Message Sequence Chart (MSC) specification can contain different types of pathology. However, definitions of different types of pathology and the problems caused by pathologies are unclear, let alone the relationships between them. In this circumstance, it can be problematic for software engineers to accurately predict the possible problems that may exist in implementations of MSC specifications and to trace back to the design problems in MSC specifications from the observed problems of an implementation.
   Objective: We focus on generating a clearer view on MSC pathologies and building formal relationships between pathologies and the problems that they may cause.
   Method: By concentrating on the problems caused by pathologies, a categorisation of problems that a distributed system may suffer is first introduced. We investigate the different types of problems and map them to categories of pathologies. Thus, existing concepts related to pathology are refined and necessary concepts in the pathology framework are identified. Finally, we formally prove the relationships between the concepts in the framework.
   Results: A pathology framework is established as desired based on a restriction that considers problematic scenarios with a single undesirable event. In this framework, we define disjoint categories of both pathologies and the problems caused: the identified types of pathology are successfully mapped to the problems that they may cause.
   Conclusion: The framework achieved in this paper introduces taxonomies into and clarifies relationships between concepts in research on MSC pathologies. The taxonomies and relationships in the framework can help software engineers to predict problems and verify MSC specifications. The single undesirable event restriction not only enables a categorisation of pathological scenarios, but also has the potential practical benefit that a software engineer can concentrate on key problematic scenarios. This may make it easier to either remove pathologies from an MSC specification M or test an implementation developed from M for potential problems resulting from such pathologies. (c) 2012 Elsevier BM. All rights reserved.
C1 [Dan, Haitao; Hierons, Robert M.; Counsell, Steve] Brunel Univ, Sch Informat Syst Comp & Math, Uxbridge UB8 3PH, Middx, England.
C3 Brunel University
RP Dan, HT (corresponding author), Brunel Univ, Sch Informat Syst Comp & Math, Uxbridge UB8 3PH, Middx, England.
EM haitao.dan@brunel.ac.uk; rob.hierons@brunel.ac.uk;
   steve.counsell@brunel.ac.uk
OI Hierons, Robert/0000-0002-4771-1446
FU EPSRC [EP/G04354X/1] Funding Source: UKRI
CR Alur R, 2005, THEOR COMPUT SCI, V331, P97, DOI 10.1016/j.tcs.2004.09.034
   Alur R, 2003, IEEE T SOFTWARE ENG, V29, P623, DOI 10.1109/TSE.2003.1214326
   Alur R, 1999, LECT NOTES COMPUT SC, V1664, P114
   Alur R, 1996, SOFTWARE-CONC TOOL, V17, P70
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Baker P., 2005, P 10 EUR SOFTW ENG C, P50
   Ben-Abdallah H., 1997, Formal Description Techniques and Protocol Specification, Testing and Verification. FORTE X/PSTV XVII'97. IFIP TC6 WG6.1 Joint International Conference on Formal Description Techniques for Distributed Systems and Communication Protocols (FORTE X) and Protocol Specification, Testing and Verification (PSTV XVII), P91
   BenAbdallah H, 1997, LECT NOTES COMPUT SC, V1217, P259, DOI 10.1007/BFb0035393
   Bollig B, 2010, IEEE T SOFTWARE ENG, V36, P390, DOI 10.1109/TSE.2009.89
   Boroday S, 2009, LECT NOTES COMPUT SC, V5826, P49, DOI 10.1007/978-3-642-05031-2_4
   Dan H., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P279, DOI 10.1109/ICST.2011.29
   Dan H., COMPUTER J IN PRESS
   Elkind E, 2007, LECT NOTES COMPUT SC, V4424, P420
   Elkind E, 2010, INT J FOUND COMPUT S, V21, P211, DOI 10.1142/S0129054110007210
   Engels A., 1997, Formal Description Techniques and Protocol Specification, Testing and Verification. FORTE X/PSTV XVII'97. IFIP TC6 WG6.1 Joint International Conference on Formal Description Techniques for Distributed Systems and Communication Protocols (FORTE X) and Protocol Specification, Testing and Verification (PSTV XVII), P75
   Foster H, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P152, DOI 10.1109/ASE.2003.1240303
   Gazagnaire T, 2009, THEOR COMPUT SCI, V410, P4094, DOI 10.1016/j.tcs.2009.06.013
   Genest B, 2006, J COMPUT SYST SCI, V72, P617, DOI 10.1016/j.jcss.2005.09.007
   Haitao Dan, 2010, Proceedings of the 2010 8th IEEE International Conference on Software Engineering and Formal Methods (SEFM 2010), P53, DOI 10.1109/SEFM.2010.14
   Haugen O, 2001, COMPUT NETW, V35, P721, DOI 10.1016/S1389-1286(00)00201-2
   Helouet L., 2001, SDL 2001: Meeting UML. 10th International SDL Forum. Proceedings (Lecture Notes in Computer Science Vol.2078), P348
   Henriksen JG, 2000, LECT NOTES COMPUT SC, V1853, P675
   ITU-T, 2004, ITU T REC Z 120 MESS, V4
   ITU-T, 1998, ITU T REC Z 120 ANN
   Kruger I., 1998, DIPES, P61
   Kugler H, 2009, LECT NOTES COMPUT SC, V5503, P79
   Kugler H, 2009, LECT NOTES COMPUT SC, V5505, P77, DOI 10.1007/978-3-642-00768-2_9
   Ladkin P. B., 1995, Formal Aspects of Computing, V7, P473, DOI 10.1007/BF01211629
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   MAUW S, 2001, HDB SOFTWARE ENG KNO, V1, P437
   Mitchell B, 2005, IEEE T SOFTWARE ENG, V31, P767, DOI 10.1109/TSE.2005.104
   Mitchell B, 2008, IEEE T SOFTWARE ENG, V34, P305, DOI 10.1109/TSE.2008.28
   Mooij AJ, 2005, LECT NOTES COMPUT SC, V3442, P273, DOI 10.1007/978-3-540-31984-9_21
   Mooij AJ, 2005, LECT NOTES COMPUT SC, V3319, P257
   Muccini H, 2003, LECT NOTES COMPUT SC, V2621, P372
   Muscholl A., 1999, Mathematical Foundations of Computer Science 1999. 24th International Symposium, MFCS'99. Proceedings (Lecture Notes in Computer Science Vol.1672), P81
   Rensink A, 1994, LECT NOTES COMPUT SC, V836, P226
   Uchitel S, 2004, ACM T SOFTW ENG METH, V13, P37, DOI 10.1145/1005561.1005563
   Uchitel S, 2003, LECT NOTES COMPUT SC, V2619, P597
   Whittle J., 2005, Software and Systems Modeling, P71, DOI DOI 10.1007/S10270-004-0067-9
NR 40
TC 3
Z9 3
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2012
VL 54
IS 11
BP 1283
EP 1295
DI 10.1016/j.infsof.2012.06.010
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 000LJ
UT WOS:000308387500010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Frounchi, K
   Briand, LC
   Grady, L
   Labiche, Y
   Subramanyan, R
AF Frounchi, Kambiz
   Briand, Lionel C.
   Grady, Leo
   Labiche, Yvan
   Subramanyan, Rajesh
TI Automating image segmentation verification and validation by learning
   test oracles
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Verification and validation; Machine learning; Image segmentation; Image
   processing
AB An image segmentation algorithm delineates (an) object(s) of interest in an image. Its output is referred to as a segmentation. Developing these algorithms is a manual, iterative process involving repetitive verification and validation tasks. This process is time-consuming and depends on the availability of experts. who may be a scarce resource (e.g., medical experts). We propose a framework referred to as Image Segmentation Automated Oracle (ISAO) that uses machine learning to construct an oracle, which can then be used to automatically verify the correctness of image segmentations, thus saving substantial resources and making the image segmentation verification and validation task significantly more efficient. The framework also gives informative feedback to the developer as the segmentation algorithm evolves and provides a systematic means of testing different parametric configurations of the algorithm. During the initial learning phase, segmentations from the first few (optimally two) versions of the segmentation algorithm are manually verified by experts. The similarity of successive segmentations of the same images is also measured in various ways. This information is then fed to a machine learning algorithm to construct a classifier that distinguishes between consistent and inconsistent segmentation pairs (as determined by an expert) based on the values of the similarity measures associated with each segmentation pair. Once the accuracy of the classifier is deemed satisfactory to support a consistency determination, the classifier is then used to determine whether the segmentations that are produced by subsequent versions of the algorithm under test, are (in)consistent with already verified segmentations from previous versions. This information is then used to automatically draw conclusions about the correctness of the segmentations. We have successfully applied this approach to 3D segmentations of the cardiac left ventricle obtained from CT scans and have obtained promising results (accuracies of 95%). Even though more experiments are needed to quantify the effectiveness of the approach in real-world applications, ISAO shows promise in increasing the quality and testing efficiency of image segmentation algorithms. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Frounchi, Kambiz; Labiche, Yvan] Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
   [Briand, Lionel C.] Simula Res Lab, Oslo, Norway.
   [Briand, Lionel C.] Univ Oslo, Oslo, Norway.
   [Grady, Leo] Siemens Corp Res, Dept Imaging Analyt & Informat, Princeton, NJ USA.
   [Subramanyan, Rajesh] Siemens Corp Res, Dept Software Engn, Princeton, NJ USA.
C3 Carleton University; University of Oslo; Siemens AG; Siemens AG
RP Frounchi, K (corresponding author), Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
EM kambiz@sce.carleton.ca; briand@simula.no; leo.grady@siemens.com;
   labiche@sce.carleton.ca; rajesh.subramanyan@siemens.com
OI Labiche, Yvan/0000-0001-8880-4836
CR ABDOU IE, 1979, P IEEE, V67, P753, DOI 10.1109/PROC.1979.11325
   Acharya T, 2005, IMAGE PROCESSING: PRINCIPLES AND APPLICATIONS, P1, DOI 10.1002/0471745790
   Amman P., 2008, INTRO SOFTWARE TESTI
   AMMANN PE, 1988, IEEE T COMPUT, V37, P418, DOI 10.1109/12.2185
   BADDELEY AJ, 1992, P INT WORKSH ROB COM
   Briand LC, 2003, SOFTWARE PRACT EXPER, V33, P637, DOI 10.1002/spe.520
   Chan WK, 2009, J SYST SOFTWARE, V82, P422, DOI 10.1016/j.jss.2008.07.019
   Cohen W.W., 1995, P 12 INT C MACH LEAR, P115, DOI [DOI 10.1016/B978-1-55860-377-6.50023-2, 10.1016/B978-1-55860-377-6.50023-2]
   Crum WR, 2006, IEEE T MED IMAGING, V25, P1451, DOI 10.1109/TMI.2006.880587
   Davis M. D., 1981, P ACM 81 C, P254, DOI DOI 10.1145/800175.809889
   Deng X, 2007, LECT NOTES COMPUT SC, V4791, P977
   FROUNCHI K, 2009, SCE0906 CARL U
   Grady L, 2006, IEEE T PATTERN ANAL, V28, P1768, DOI 10.1109/TPAMI.2006.233
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Klette R., 2004, DIGITAL GEOMETRY GEO
   KNIGHT JC, 1986, IEEE T SOFTWARE ENG, V12, P96, DOI 10.1109/TSE.1986.6312924
   LAM CP, 1995, P INT JOINT C ART IN, P513
   Machado PDL, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P415
   Mathur A.P., 2007, FDN SOFTWARE TESTING
   MCGUINNESS K, 2007, P IET INT C VIS INF
   MURPHY C, 2009, P 18 INT S SOFTW TES, P189
   Odet C, 2002, IEEE IMAGE PROC, P785
   PELI T, 1982, COMPUT VISION GRAPH, V20, P1, DOI 10.1016/0146-664X(82)90070-3
   Pham DL, 2000, ANNU REV BIOMED ENG, V2, P315, DOI 10.1146/annurev.bioeng.2.1.315
   Richardson D. J., 1992, P 14 INT C SOFTW ENG, P105
   Rosenberger C., 2006, ADV IMAGE VIDEO SEGM, P365
   Udupa JK, 2006, COMPUT MED IMAG GRAP, V30, P75, DOI 10.1016/j.compmedimag.2005.12.001
   Vagli P, 2008, MED RADIOL DIAGN IMA, P87, DOI 10.1007/978-3-540-49830-8_7
   Wang HZ, 2011, NEUROIMAGE, V55, P968, DOI 10.1016/j.neuroimage.2011.01.006
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   Witten I. H., 2005, DATA MINING PRACTICA
   Zhang H., 2006, Proc. IEEE Conf. on Comp. Vis. and Pat. Rec. (CVPR), P1138
   Zhang Y.J., 2006, Advances in image and video segmentation
NR 33
TC 24
Z9 26
U1 0
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2011
VL 53
IS 12
BP 1337
EP 1348
DI 10.1016/j.infsof.2011.06.009
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 847QF
UT WOS:000296986900004
DA 2024-07-18
ER

PT J
AU Liu, JYC
   Chiang, JC
   Yang, MH
   Klein, G
AF Liu, Julie Y. C.
   Chiang, Jerry C.
   Yang, Ming-Hsien
   Klein, Gary
TI Partnering effects on user-developer conflict and role ambiguity in
   information system projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Project partnering; User-developer conflict; Role ambiguity; Performance
   estimation difficulty
ID TEAM PERFORMANCE; RISK-MANAGEMENT; SOFTWARE RISK; SUCCESS; WORK;
   INVOLVEMENT; ORGANIZATIONS; PARTICIPATION; SATISFACTION; UNCERTAINTY
AB Context: Information system development (ISD) has been plagued with high failure rates. This is partially due to the activities being a combination of both a technical and social processes involving stakeholders with conflicting interests.
   Objective: Existing software risk management theories and frameworks offer limited suggestions for actions that can be taken to reduce the chance of failure of ISD projects. Our objective is to examine the connections among some of the more important user related risks in order to shed light on how specific strategies enhance the chance of project success.
   Method: We conducted a sample of information systems project managers to test a multivariate model to explain the impact of pursuing a partnership with users on the conflicts that arise between users and developers, role ambiguity, and subsequent impact on project performance.
   Results: The proposed model was supported, suggesting that user-developer conflict and role ambiguity have a negative impact on performance estimation difficulty, which negatively affects project performance.
   Conclusion: Pursuit of project partnering yields a number of significant relationships in the model indicating an organization can implement practices that reduce risks associated with role ambiguity and conflict in system development projects. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Liu, Julie Y. C.] Yuan Ze Univ, Dept Informat Management, Chungli 32003, Tau Yuan, Taiwan.
   [Chiang, Jerry C.] Natl Dong Hwa Univ, Dept Informat Management, Shoufeng 97401, Hualien, Taiwan.
   [Yang, Ming-Hsien] Fu Jen Catholic Univ, Dept Informat Management, Sinjhuang City 24205, Taipei County, Taiwan.
   [Klein, Gary] Univ Colorado, Coll Business & Adm, Colorado Springs, CO 80933 USA.
C3 Yuan Ze University; National Dong Hwa University; Fu Jen Catholic
   University; University of Colorado System; University of Colorado at
   Colorado Springs
RP Liu, JYC (corresponding author), Yuan Ze Univ, Dept Informat Management, 135 Yuan Tung Rd, Chungli 32003, Tau Yuan, Taiwan.
EM imyuchih@saturn.yzu.edu.tw; jerry@mail.ndhu.edu.tw; yang@im.fju.edu.tw;
   gklein@mail.uccs.edu
OI Liu, Julie Yu-Chih/0000-0002-0456-2858
FU National Science Council, Taiwan [99-2918-I-155-002]
FX This research is partially founded by grants from National Science
   Council, Taiwan under the project for Multinational/Regional Cooperation
   with No. 99-2918-I-155-002.
CR AJZEN I, 1991, ORGAN BEHAV HUM DEC, V50, P179, DOI 10.1016/0749-5978(91)90020-T
   [Anonymous], 2006, MULTIVARIATE DATA AN
   [Anonymous], 1996, ATTITUDES PERSUASION
   [Anonymous], 1998, MIS Quarterly
   Bagozzi RP, 1998, Journal of the academy of marketing science, V16, P76
   Barki H., 1993, Journal of Management Information Systems, V10, P203
   BARKI H, 1994, INFORM SYST RES, V5, P422, DOI 10.1287/isre.5.4.422
   BARKI H, 1989, MIS QUART, V13, P53, DOI 10.2307/248700
   Barki H, 2001, MIS QUART, V25, P195, DOI 10.2307/3250929
   Barki H, 2001, J MANAGE INFORM SYST, V17, P37, DOI 10.1080/07421222.2001.11045666
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   CAMPBELL DJ, 1998, ACAD MANAGE REV, V13, P302
   Chang KC, 2010, INFORM SOFTWARE TECH, V52, P672, DOI 10.1016/j.infsof.2010.02.003
   Charette R. N., 1989, SOFTWARE ENG RISK AN
   Chin WW, 2003, INFORM SYST RES, V14, P189, DOI 10.1287/isre.14.2.189.16018
   Cohen CF, 2004, COMMUN ACM, V47, P76, DOI 10.1145/962081.962083
   COWAN C, 1992, PROJ MGMT J, V22, P5
   Davis JM, 2009, EUR J INFORM SYST, V18, P26, DOI 10.1057/ejis.2009.4
   De Dreu CKW, 2003, J APPL PSYCHOL, V88, P741, DOI 10.1037/0021-9010.88.4.741
   DeLone WH, 1992, INFORM SYST RES, V3, P60, DOI 10.1287/isre.3.1.60
   Eys MA, 2001, SMALL GR RES, V32, P356, DOI 10.1177/104649640103200305
   Festinger L., 1964, Conflict, decision, and dissonance, VS. vii
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   Greenbaum J., 1991, Design at Work: Cooperative Design of Computer Systems
   Grover V., 1996, Journal of Management Information Systems, V12, P89
   Guinan PJ, 1998, INFORM SYST RES, V9, P101, DOI 10.1287/isre.9.2.101
   GUMMESSON E, 1987, LONG RANGE PLANN, V20, P10, DOI 10.1016/0024-6301(87)90151-8
   Han WM, 2007, J SYST SOFTWARE, V80, P42, DOI 10.1016/j.jss.2006.04.030
   HENDERSON JC, 1992, MANAGE SCI, V38, P757, DOI 10.1287/mnsc.38.6.757
   Hulland J, 1999, STRATEGIC MANAGE J, V20, P195, DOI 10.1002/(SICI)1097-0266(199902)20:2<195::AID-SMJ13>3.3.CO;2-Z
   IGBARIA M, 1994, MIS QUART, V18, P175, DOI 10.2307/249764
   IVES B, 1984, MANAGE SCI, V30, P586, DOI 10.1287/mnsc.30.5.586
   JACKSON SE, 1985, ORGAN BEHAV HUM DEC, V36, P16, DOI 10.1016/0749-5978(85)90020-2
   Jehn KA, 2003, RES ORGAN BEHAV, V25, P187, DOI 10.1016/s0191-3085(03)25005-X
   Jiang J.J., 2002, PROJ MANAG J, V33, P20
   Jiang JJ, 2006, J ASSOC INF SYST, V7, P68, DOI 10.17705/1jais.00082
   Jiang JJ, 2009, J SYST SOFTWARE, V82, P801, DOI 10.1016/j.jss.2008.11.833
   Jiang JJ, 2001, IEEE T ENG MANAGE, V48, P46, DOI 10.1109/17.913165
   Kankanhalli A, 2006, J MANAGE INFORM SYST, V23, P237, DOI 10.2753/MIS0742-1222230309
   Karadal H., 2008, J AM ACAD BUSINESS C, V13, P176
   Keil M, 1995, MIS QUART, V19, P421, DOI 10.2307/249627
   Keil M, 2002, INFORM SYST J, V12, P103, DOI 10.1046/j.1365-2575.2002.00121.x
   Keil M, 2008, J SYST SOFTWARE, V81, P908, DOI 10.1016/j.jss.2007.07.035
   King W., 1990, MANAGE COMMUN Q, V4, P222, DOI DOI 10.1177/0893318990004002005
   Kirsch L.J., 1996, ACCOUNTING MANAGEMEN, V6, P221, DOI DOI 10.1016/S0959-8022(96)90015-6
   Larson E, 1997, IEEE T ENG MANAGE, V44, P188, DOI 10.1109/17.584926
   Li A, 2008, J VOCAT BEHAV, V73, P368, DOI 10.1016/j.jvb.2008.07.008
   Li JT, 2005, ACAD MANAGE J, V48, P794, DOI 10.2307/20159698
   Liberatore MJ, 2010, IEEE T ENG MANAGE, V57, P255, DOI 10.1109/TEM.2009.2013838
   Liu JYC, 2009, J COMPUT INFORM SYST, V49, P98
   Locke A., 1990, THEORY GOAL SETTING
   Lyytinen K, 1998, INFORM SYST RES, V9, P233, DOI 10.1287/isre.9.3.233
   Maguire S, 2007, MANAGE DECIS, V45, P252, DOI 10.1108/00251740710727278
   Martínez ABB, 2008, INFORM SOFTWARE TECH, V50, P296, DOI 10.1016/j.infsof.2007.02.001
   MAYER RC, 1995, ACAD MANAGE REV, V20, P709, DOI 10.2307/258792
   MOSLEY D, 1994, PMNETWORK, V8, P22
   NIDUMOLU S, 1995, INFORM SYST RES, V6, P191, DOI 10.1287/isre.6.3.191
   Nidumolu S. R., 1996, Journal of Management Information Systems, V13, P77
   OUCHI WG, 1979, MANAGE SCI, V25, P833, DOI 10.1287/mnsc.25.9.833
   Pawlowski SD, 2004, MIS QUART, V28, P645, DOI 10.2307/25148658
   Perrone V, 2003, ORGAN SCI, V14, P422, DOI 10.1287/orsc.14.4.422.17487
   Pruitt D.G., 1981, Negotiation behavior
   Ropponen J, 2000, IEEE T SOFTWARE ENG, V26, P98, DOI 10.1109/32.841112
   Ropponen J., 1999, Software Risk Management
   Sabherwal R, 1995, INFORM SYST RES, V6, P303, DOI 10.1287/isre.6.4.303
   SALANCIK GR, 1974, ADMIN SCI QUART, V19, P453, DOI 10.2307/2391803
   Sanford C, 2007, J GLOB INF MANAG, V15, P20, DOI 10.4018/jgim.2007070102
   Schmidt R, 2001, J MANAGE INFORM SYST, V17, P5, DOI 10.1080/07421222.2001.11045662
   TAIT P, 1988, MIS QUART, V12, P91, DOI 10.2307/248809
   Tang YT, 2010, AFR J BUS MANAGE, V4, P869
   Wagner EL, 2007, J ASSOC INF SYST, V8, P508, DOI 10.17705/1jais.00142
   Wallace L, 2004, INFORM MANAGE-AMSTER, V42, P115, DOI 10.1016/j.im.2003.12.007
NR 72
TC 14
Z9 15
U1 0
U2 21
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2011
VL 53
IS 7
BP 722
EP 729
DI 10.1016/j.infsof.2011.01.002
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 767DU
UT WOS:000290836300003
DA 2024-07-18
ER

PT J
AU Shahamiri, SR
   Kadir, WMNW
   Ibrahim, S
   Hashim, SZM
AF Shahamiri, Seyed Reza
   Kadir, Wan Mohd Nasir Wan
   Ibrahim, Suhaimi
   Hashim, Siti Zaiton Mohd
TI An automated framework for software test oracle
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software test oracle; I/O Relationship Analysis; Artificial neural
   networks; Mutation testing
ID NEURAL-NETWORK; GENERATION
AB Context: One of the important issues of software testing is to provide an automated test oracle. Test oracles are reliable sources of how the software under test must operate. In particular, they are used to evaluate the actual results that produced by the software. However, in order to generate an automated test oracle, oracle challenges need to be addressed. These challenges are output-domain generation, input domain to output domain mapping, and a comparator to decide on the accuracy of the actual outputs.
   Objective: This paper proposes an automated test oracle framework to address all of these challenges.
   Method: I/O Relationship Analysis is used to generate the output domain automatically and Multi-Networks Oracles based on artificial neural networks are introduced to handle the second challenge. The last challenge is addressed using an automated comparator that adjusts the oracle precision by defining the comparison tolerance. The proposed approach was evaluated using an industry strength case study, which was injected with some faults. The quality of the proposed oracle was measured by assessing its accuracy, precision, misclassification error and practicality. Mutation testing was considered to provide the evaluation framework by implementing two different versions of the case study: a Golden Version and a Mutated Version. Furthermore, a comparative study between the existing automated oracles and the proposed one is provided based on which challenges they can automate.
   Results: Results indicate that the proposed approach automated the oracle generation process 97% in this experiment. Accuracy of the proposed oracle was up to 98.26%, and the oracle detected up to 97.7% of the injected faults.
   Conclusion: Consequently, the results of the study highlight the practicality of the proposed oracle in addition to the automation it offers. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Shahamiri, Seyed Reza; Kadir, Wan Mohd Nasir Wan; Ibrahim, Suhaimi; Hashim, Siti Zaiton Mohd] Univ Teknol Malaysia, Fac Comp Sci & Informat Syst, Dept Software Engn, Utm Skudai 81310, Johor, Malaysia.
C3 Universiti Teknologi Malaysia
RP Shahamiri, SR (corresponding author), Tamarind Condo, E1B-18-8, Kuala Lumpur 51100, Malaysia.
EM admin@rezanet.com; wnasir@cs.utm.my; suhaimiibrahim@utm.my;
   sitizaiton@utm.my
RI Hashim, Siti Zaiton Mohd/AAE-5401-2020; Shahamiri, Seyed
   Reza/G-4389-2011; Ibrahim, Suhaimi/A-2724-2014
OI Shahamiri, Seyed Reza/0000-0003-1543-5931; Wan Kadir, Wan Mohd
   Nasir/0000-0003-4459-4050; Ibrahim, Suhaimi/0000-0001-9274-7117
CR Aggarwal KK., 2004, ACM SIGSOFT Software Engineering Notes, V29, P1, DOI [DOI 10.1145/986710.986725, 10.1145/986710.986725]
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 2002, SOFTWARE TESTING CRA
   Briand LC, 2009, INFORM SOFTWARE TECH, V51, P16, DOI 10.1016/j.infsof.2008.09.010
   Chen TY, 1996, IEEE T SOFTWARE ENG, V22, P109, DOI 10.1109/32.485221
   Dalal SR, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P174
   Hass A.M. J., 2008, Guide to advanced software testing
   Heiat A, 2002, INFORM SOFTWARE TECH, V44, P911, DOI 10.1016/S0950-5849(02)00128-3
   HU J, 2008, P 2008 INT C COMP SC
   KHOSHGOFTAAR TM, 1995, SOFTWARE ENG J, V10, P89, DOI 10.1049/sej.1995.0012
   Khoshgoftaar TM, 2000, 3RD IEEE SYMPOSIUM ON APPLICATION SPECIFIC SYSTEMS AND SOFTWARE ENGINEERING TECHNOLOGY, PROCEEDINGS, P57, DOI 10.1109/ASSET.2000.888032
   KHOSHGOFTAAR TM, 1992, THIRD INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING : PROCEEDINGS, P83
   KOREL B, 2001, J DEFENSE SOFTWARE E, V14, P24
   Last M, 2004, INT J SOFTW ENG KNOW, V14, P369, DOI 10.1142/S0218194004001737
   Last M, 2004, S MACH PERC, V56, P21
   Manolache LI, 2001, SOFTWARE PRACT EXPER, V31, P1211, DOI 10.1002/spe.409
   McCaffrey, 2009, SOFTWARE TESTING FUN
   Memon A, 2005, J SOFTW MAINT EVOL-R, V17, P27, DOI 10.1002/smr.305
   Memon A. M., 2000, Software Engineering Notes, V25, P30, DOI 10.1145/357474.355050
   Memon AM, 2004, S MACH PERC, V56, P51
   Menhaj M.B., 2001, BASICS NEURAL NETWOR
   MICHAEL C, 1998, P 13 IEEE INT C AUT
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Ntafos SC, 2001, IEEE T SOFTWARE ENG, V27, P949, DOI 10.1109/32.962563
   Patton R., 2005, SOFTWARE TESTING, VSecond
   Peters Dennis., 1994, Proceedings of the 1994 ACM SIGSOFT international symposium on Software testing and analysis, ISSTA'94, P58
   Peters DK, 1998, IEEE T SOFTWARE ENG, V24, P161, DOI 10.1109/32.667877
   Pfleeger SL, 1997, COMPUTER, V30, P33, DOI 10.1109/2.566148
   Phadke M. S., 1997, CROSSTALK, V10, P11
   Ran LH, 2009, INFORM SOFTWARE TECH, V51, P460, DOI 10.1016/j.infsof.2008.05.016
   Richardson D. J., 1992, P 14 INT C SOFTW ENG, P105
   Saraph P, 2003, IEEE SYS MAN CYBERN, P768
   Schalkoff R. J., 1997, ARTIFICIAL NEURAL NE
   Schroeder P. J., 2000, Software Engineering Notes, V25, P173, DOI 10.1145/347636.349042
   Schroeder PJ, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P139, DOI 10.1109/ASE.2002.1115005
   Shahamiri S. R., 2010, 2010 2nd International Conference on Software Technology and Engineering (ICSTE 2010), P272, DOI 10.1109/ICSTE.2010.5608808
   Shahamiri S.R., 2008, 4 POSTGR ANN RES SEM
   Shahamiri SR, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P140, DOI 10.1109/ICSEA.2009.29
   Shahamiri SR, 2010, INT CONF COMP SCI, P30, DOI 10.1109/ICCSIT.2010.5563989
   SHAHAMIRI SR, AUTOMATED SOFT UNPUB
   Sofokleous AA, 2008, J SYST SOFTWARE, V81, P1883, DOI 10.1016/j.jss.2007.12.809
   Spillner A., 2007, SOFTWARE TESTING FDN, V2
   Stocks P, 1996, IEEE T SOFTWARE ENG, V22, P777, DOI 10.1109/32.553698
   Su YS, 2007, J SYST SOFTWARE, V80, P606, DOI 10.1016/j.jss.2006.06.017
   Vanmali M, 2002, INT J INTELL SYST, V17, P45, DOI 10.1002/int.1002
   Whittaker JA, 2000, IEEE SOFTWARE, V17, P70, DOI 10.1109/52.819971
   Woodward MR, 2006, INFORM SOFTWARE TECH, V48, P433, DOI 10.1016/j.infsof.2005.05.003
   WOODWARD MR, 1993, INFORM SOFTWARE TECH, V35, P163, DOI 10.1016/0950-5849(93)90053-6
   Xie Q, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189752
   Ye M, 2006, LECT NOTES COMPUT SC, V4234, P498
   Ying Lu, 2007, Information Technology Journal, V6, P469
NR 52
TC 38
Z9 42
U1 1
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2011
VL 53
IS 7
BP 774
EP 788
DI 10.1016/j.infsof.2011.02.006
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 767DU
UT WOS:000290836300007
DA 2024-07-18
ER

PT J
AU Chang, KC
   Wong, JH
   Li, YZ
   Lin, YC
   Chen, HG
AF Chang, Kuo-Chung
   Wong, Jiun-Hung
   Li, Yuzhu
   Lin, Yao-Chin
   Chen, Houn-Gee
TI External social capital and information systems development team
   flexibility
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Information system development team flexibility; External social
   capital; System development project performance
ID DYNAMIC CAPABILITIES; PERFORMANCE; MODEL
AB Context: ISD research based on the socio-technical perspective suggests that two sources of socio-technical change have a bearing on the performance of information systems development (ISD) projects: business requirements and development technology. To enhance project effectiveness, ISD teams need to enhance their flexibility in the face of the constant changes taking place from business and technical environments in which they operate. Flexibility is conceptualized as an outcome of capability development through constantly integrating and reconfiguring available resources within and outside of the organization where the team is embedded.
   Objective: The purpose of this study is to examine the relationship between a team's external social capital and team flexibility. More specifically, based on social capital theory, this study argues that external social capital leads to IS team flexibility, which in turn contributes to the successful project performance.
   Method: A survey design was selected to collect data and test the proposed model. A snowballing strategy was employed to collect data. 118 information systems developers participated in the survey and the model was analyzed using partial least squares regression.
   Results: The findings show that, in general, the ISD teams' external social capital does contribute to the team's response to changes. However, they exhibit unique impacts on ISD team flexibility respectively.
   Conclusion: The various external social capitals have distinctive effects on a team's flexibility. Specifically, horizontal relationships are positively associated with both business and technology flexibility. Vertical relationships are positively associated with business flexibility and market relationships technology flexibility. ISD managers should establish robust relationships with its high-ups, other lateral units, and third parties outside in the market. They also need to be more adaptive to the increasingly volatile socio-technical environment, and proactively search, exploit, upgrade, and integrate resources that are essential to the development of system development team flexibility. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Chang, Kuo-Chung; Wong, Jiun-Hung; Lin, Yao-Chin] Yuan Ze Univ, Dept Informat Management, Chungli, Taiwan.
   [Li, Yuzhu] Univ Massachusetts Dartmouth, Decis & Informat Sci Dept, N Dartmouth, MA USA.
   [Chen, Houn-Gee] Natl Taiwan Univ, Dept Business Adm, Taipei, Taiwan.
C3 Yuan Ze University; University of Massachusetts System; University
   Massachusetts Dartmouth; National Taiwan University
RP Chang, KC (corresponding author), Yuan Ze Univ, Dept Informat Management, Chungli, Taiwan.
EM changkc@saturn.yzu.edu.tw
OI Li, Yuzhu/0000-0002-7571-8258
FU National Science Council, Taiwan [98-2410-H-002-072-MY2]
FX This research is partly supported by the Project, 98-2410-H-002-072-MY2,
   from National Science Council, Taiwan.
CR Abrahamson E, 1996, ACAD MANAGE REV, V21, P254, DOI 10.2307/258636
   Adler P.S., 2002, ACAD MANAGE REV, V27, P17
   Agarwal R, 2000, MIS QUART, V24, P665, DOI 10.2307/3250951
   Aladwani AM, 2002, J MANAGE INFORM SYST, V19, P185
   ANCONA DG, 1992, ADMIN SCI QUART, V37, P634, DOI 10.2307/2393475
   ANCONA DG, 1993, ADV THEORY RES, P225
   [Anonymous], 2001, SOC CAPITAL THEORY R
   [Anonymous], 1998, MIS Quarterly
   Applegate L., 2007, CORPORATE INFORM STR
   Barclay D., 1995, TECHNOL STUDIES, V2, P285
   BARON RM, 1986, J PERS SOC PSYCHOL, V51, P1173, DOI 10.1037/0022-3514.51.6.1173
   Bharadwaj AS, 2000, MIS QUART, V24, P169, DOI 10.2307/3250983
   BUCKLE JK, 1984, MANAGING SOFTWARE PR
   Burt RS, 2000, RES ORGAN BEHAV, V22, P345, DOI 10.1016/S0191-3085(00)22009-1
   Byrd TA, 2000, J MANAGE INFORM SYST, V17, P167
   Damsgaard J, 2001, INFORM SOC, V17, P195, DOI 10.1080/01972240152493056
   Duncan N. B., 1995, Journal of Management Information Systems, V12, P37
   EISENHARDT KM, 1995, ADMIN SCI QUART, V40, P84, DOI 10.2307/2393701
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   HENDERSON JC, 1992, MANAGE SCI, V38, P757, DOI 10.1287/mnsc.38.6.757
   JARVENPAA SJ, 1997, P 18 INT C INF SYST, V29, P399
   Jiang J, 2000, J SYST SOFTWARE, V52, P3, DOI 10.1016/S0164-1212(99)00128-4
   Jiang J., 2002, PROJ MANAG J, V33, P30
   Jiang J.J., 2000, PROJ MANAG J, V31, P19, DOI DOI 10.1177/875697280003100404
   Jiang JJ, 2004, INFORM MANAGE-AMSTER, V41, P279, DOI 10.1016/S0378-7206(03)00052-1
   Kale P, 2000, STRATEGIC MANAGE J, V21, P217, DOI 10.1002/(SICI)1097-0266(200003)21:3<217::AID-SMJ95>3.0.CO;2-Y
   Lee G, 2005, EUR J INFORM SYST, V14, P75, DOI 10.1057/palgrave.ejis.3000523
   Maruping LM, 2009, EUR J INFORM SYST, V18, P355, DOI 10.1057/ejis.2009.24
   McComb SA, 2007, J ENG TECHNOL MANAGE, V24, P293, DOI 10.1016/j.jengtecman.2007.09.004
   Milliken FJ, 1996, ACAD MANAGE REV, V21, P402, DOI 10.2307/258667
   Nahapiet J, 1998, ACAD MANAGE REV, V23, P242, DOI 10.2307/259373
   Nidumolu S. R., 1996, Journal of Management Information Systems, V13, P77
   Oh H, 2006, ACAD MANAGE REV, V31, P569, DOI 10.2307/20159229
   Oh HS, 2004, ACAD MANAGE J, V47, P860, DOI 10.5465/20159627
   Pattit JM, 2005, R&D MANAGE, V35, P375, DOI 10.1111/j.1467-9310.2005.00396.x
   PINTO MB, 1993, MANAGE SCI, V39, P1281, DOI 10.1287/mnsc.39.10.1281
   Podsakoff PM, 2003, J APPL PSYCHOL, V88, P879, DOI 10.1037/0021-9010.88.5.879
   Poppendieck M., 2001, Software Development, V9, P71
   Sarin S, 2003, DECISION SCI, V34, P707, DOI 10.1111/j.1540-5414.2003.02350.x
   Seibert SE, 2001, ACAD MANAGE J, V44, P219, DOI 10.5465/3069452
   *STAND GROUP INT I, 2009, CHAOS SUMM REP 2009
   SWAN JA, 1995, ORGAN SCI, V16, P647
   Swanson EB, 1997, ORGAN SCI, V8, P458, DOI 10.1287/orsc.8.5.458
   Teece DJ, 2007, STRATEGIC MANAGE J, V28, P1319, DOI 10.1002/smj.640
   Tsai WP, 1998, ACAD MANAGE J, V41, P464, DOI 10.5465/257085
   TZINER A, 1985, J APPL PSYCHOL, V70, P85, DOI 10.1037/0021-9010.70.1.85
   Wang CL, 2007, INT J MANAG REV, V9, P31, DOI 10.1111/j.1468-2370.2007.00201.x
   Yi MY, 2003, INFORM SYST RES, V14, P146, DOI 10.1287/isre.14.2.146.16016
NR 48
TC 11
Z9 13
U1 0
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2011
VL 53
IS 6
SI SI
BP 592
EP 600
DI 10.1016/j.infsof.2011.01.007
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 762FS
UT WOS:000290460900003
DA 2024-07-18
ER

PT J
AU Turner, M
   Kitchenham, B
   Brereton, P
   Charters, S
   Budgen, D
AF Turner, Mark
   Kitchenham, Barbara
   Brereton, Pearl
   Charters, Stuart
   Budgen, David
TI Does the technology acceptance model predict actual use? A systematic
   literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Technology acceptance model (TAM); Systematic literature review;
   Evidence-based software engineering; Literature review; Actual usage
ID INFORMATION-TECHNOLOGY; PERCEIVED USEFULNESS; USAGE; EASE; EXTENSION;
   METAANALYSIS
AB Context The technology acceptance model (TAM) was proposed in 1989 as a means of predicting technology usage However. it is usually validated by using a measure of behavioural intention to use (131) rather than actual usage
   Objective This review examines the evidence that the TAM predicts actual usage using both subjective and objective measures of actual usage
   Method We performed a systematic literature review based on a search of six digital libraries, along with vote-counting meta-analysis to analyse the overall results
   Results The search identified 79 relevant empirical studies in 73 articles The results show that HI is likely to be correlated with actual usage However, the TAM variables perceived ease of use (PEU) and perceived usefulness (PU) are less likely to be correlated with actual usage
   Conclusion Care should be taken using the TAM outside the context in which it has been validated (C) 2009 Elsevier B V All rights reserved
C1 [Turner, Mark; Kitchenham, Barbara; Brereton, Pearl] Univ Keele, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
   [Charters, Stuart] Lincoln Univ, Dept Appl Comp, Canterbury 7647, New Zealand.
   [Budgen, David] Univ Durham, Sch Engn & Comp Sci, Sci Labs, Durham DH1 3LE, England.
C3 Keele University; Lincoln University - New Zealand; Durham University
RP Turner, M (corresponding author), Univ Keele, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
RI Gomaa, Ahmed/I-6442-2017; Sarlan, Aliza/B-4653-2010; Kitchenham,
   Barbara/AAL-4311-2020; Charters, Stuart M/C-1751-2012
OI Kitchenham, Barbara/0000-0002-6134-8460; Budgen,
   David/0000-0001-7143-0241
FU Engineering and Physical Sciences Research Council, UK [EP/C51839X/1,
   EP/E049184/1]; EPSRC [EP/E046983/1, EP/E049184/1] Funding Source: UKRI
FX We would like to acknowledge the support of the Engineering and Physical
   Sciences Research Council, UK, for funding the EBSE (EP/C51839X/1) and
   EPIC (EP/E049184/1) projects and Stephen Linkman for his contributions
   to general discussions
CR ADAMS DA, 1992, MIS QUART, V16, P227, DOI 10.2307/249577
   Agarwal R, 1997, DECISION SCI, V28, P557, DOI 10.1111/j.1540-5915.1997.tb01322.x
   [Anonymous], 2005, PROC IEEE INT S EMPI
   Bajaj A, 1998, INFORM MANAGE-AMSTER, V33, P213, DOI 10.1016/S0378-7206(98)00026-3
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Burton-Jones A., 2005, SIGMIS DATABASE, V36, P58, DOI [10.1145/1066149.1066155, DOI 10.1145/1066149.1066155]
   Chau PYK, 1996, INFORM MANAGE-AMSTER, V30, P269, DOI 10.1016/S0378-7206(96)01074-9
   Cheng JMS, 2006, TECHNOVATION, V26, P856, DOI 10.1016/j.technovation.2005.01.001
   Dasgupta S, 2002, GROUP DECIS NEGOT, V11, P87, DOI 10.1023/A:1015221710638
   Davies E, 2004, CHEM WORLD-UK, V1, P46
   DAVIS FD, 1989, MANAGE SCI, V35, P982, DOI 10.1287/mnsc.35.8.982
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Deng XD, 2005, INFORM MANAGE-AMSTER, V42, P745, DOI 10.1016/j.im.2004.08.001
   Dybå T, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P220, DOI 10.1109/METRIC.2004.1357905
   Fenech T, 1998, COMPUT NETWORKS ISDN, V30, P629, DOI 10.1016/S0169-7552(98)00028-2
   Fishbein Martin., 1975, Attitude, Intention and Behavior: An Introduction to Theory and Research
   Gefen D, 1998, DATA BASE ADV INF SY, V29, P35
   GOLDACRE B, 2008, GUARDIAN        1025
   HEIJDEN HVD, 2000, 0025 FREE U AMST BUS
   HEJDEN HVD, 2003, INFORM MANAGE, V40, P541
   Henderson R, 2003, INT J HUM-COMPUT ST, V59, P383, DOI 10.1016/S1071-5819(03)00079-X
   Hendrickson AR, 1996, DATA BASE ADV INF SY, V27, P61
   Horton RP, 2001, J INF TECHNOL, V16, P237, DOI 10.1080/02683960110102407
   Huang W, 2002, J COMPUT INFORM SYST, V43, P15
   Igbaria M., 1995, Journal of Management Information Systems, V11, P87
   IGBARIA M, 1993, OMEGA-INT J MANAGE S, V21, P73, DOI 10.1016/0305-0483(93)90040-R
   Karahanna E, 2000, J ORG COMP ELECT COM, V10, P49, DOI 10.1207/S15327744JOCE100103
   KEIL M, 1995, DECIS SUPPORT SYST, V13, P75, DOI 10.1016/0167-9236(94)E0032-M
   Keung J, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P52, DOI 10.1109/ASWEC.2004.1290457
   Kim SS, 2005, MANAGE SCI, V51, P741, DOI 10.1287/mnsc.1040.0326
   King WR, 2006, INFORM MANAGE-AMSTER, V43, P740, DOI 10.1016/j.im.2006.05.003
   KIRCHENHAM B, 2009, INFORM SOFTWARE TECH, V51, P7
   Kitchenham B, 2004, Procedures for Undertaking Systematic Reviews
   Lederer AL, 2000, DECIS SUPPORT SYST, V29, P269, DOI 10.1016/S0167-9236(00)00076-2
   Lee SM, 2006, INFORM MANAGE-AMSTER, V43, P469, DOI 10.1016/j.im.2005.11.004
   Legris P, 2003, INFORM MANAGE-AMSTER, V40, P191, DOI 10.1016/S0378-7206(01)00143-4
   Lipsey M., 2001, PRACTICAL METAANALYS
   Lucas HC, 1999, DECISION SCI, V30, P291, DOI 10.1111/j.1540-5915.1999.tb01611.x
   McCloskey D, 2003, J COMPUT INFORM SYST, V44, P49
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Qingxiong Ma, 2004, Journal of Organizational and End User Computing, V16, P59, DOI 10.4018/joeuc.2004010104
   Sánchez-Franco MJ, 2006, BEHAV INFORM TECHNOL, V25, P19, DOI 10.1080/01449290500124536
   Schepers J, 2007, INFORM MANAGE-AMSTER, V44, P90, DOI 10.1016/j.im.2006.10.007
   Stoel L, 2003, INTERNET RES, V13, P364, DOI 10.1108/10662240310501649
   Straub D, 1997, INFORM MANAGE-AMSTER, V33, P1, DOI 10.1016/S0378-7206(97)00026-8
   STRAUB D, 1995, MANAGE SCI, V41, P1328, DOI 10.1287/mnsc.41.8.1328
   Szajna B, 1996, MANAGE SCI, V42, P85, DOI 10.1287/mnsc.42.1.85
   SZAJNA B, 1994, MIS QUART, V18, P319, DOI 10.2307/249621
   TAYLOR S, 1995, INFORM SYST RES, V6, P144, DOI 10.1287/isre.6.2.144
   Taylor S, 1995, MIS QUART, V19, P561, DOI 10.2307/249633
   Venkatesh V, 2000, MANAGE SCI, V46, P186, DOI 10.1287/mnsc.46.2.186.11926
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   YOO Y, 1998, P 31 ANN HAW INT C S, V6, P510
NR 53
TC 419
Z9 534
U1 14
U2 199
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2010
VL 52
IS 5
SI SI
BP 463
EP 479
DI 10.1016/j.infsof.2009.11.005
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 588XF
UT WOS:000277107200001
DA 2024-07-18
ER

PT J
AU Zvanut, B
   Bajec, M
AF Zvanut, Bostjan
   Bajec, Marko
TI A tool for IT process construction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE IT process construction; Method engineering; Process engineering;
   Organisation-specific process
ID ORGANIZATIONAL INNOVATION; INFORMATION-SYSTEMS; ADOPTION; DETERMINANTS;
   FRAMEWORK; MODELS
AB Context: The field of IT processes lacks a scientifically-based tool that constructs organisation-specific IT processes according to the organisation's socio-technical characteristics.
   Objective: In this paper we propose a solution to this problem in the form of IT process engineering (ITPE). ITPE is based on established method engineering principles which we have adapted to IT process construction.
   Method: The tool was demonstrated by having three organisations use ITPE to each construct two IT processes.
   Results: ITPE provided useful guidance in all three cases.
   Conclusions: The study demonstrates that method engineering principles can be applied in research fields other than information system development. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Zvanut, Bostjan] Univ Primorska, Coll Hlth Care Izola, Izola 6310, Slovenia.
   [Bajec, Marko] Univ Ljubljana, Fac Comp & Informat Sci, Ljubljana 1000, Slovenia.
C3 University of Primorska; University of Ljubljana
RP Zvanut, B (corresponding author), Univ Primorska, Coll Hlth Care Izola, Polje 42, Izola 6310, Slovenia.
EM bostjan.zvanut@vszi.upr.si; marko.bajec@fri.uni-lj.si
FU Slovene Research Agency ARRS [P2-0359]
FX This research has been supported by the Slovene Research Agency ARRS
   within the research program P2-0359.
CR Alkemade F., 2005, Computational Economics, V25, P3, DOI 10.1007/s10614-005-6245-1
   [Anonymous], 2003, Diffusion of Innovations
   Bajec M, 2007, INFORM SOFTWARE TECH, V49, P345, DOI 10.1016/j.infsof.2006.05.007
   Becker J., 2003, Process Management
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   *CCTA, 2000, ITIL MAN IT SERV
   Cunin PY, 2000, LECT NOTES COMPUT SC, V1780, P1
   DAFT RL, 1978, ACAD MANAGE J, V21, P193, DOI 10.5465/255754
   DAMANPOUR F, 1991, ACAD MANAGE J, V34, P555, DOI 10.5465/256406
   DeToro I, 1997, QUAL PROG, V30, P55
   FAURE JM, 1995, COMPUT IND, V27, P111, DOI 10.1016/0166-3615(95)00021-2
   Fitzgerald B, 2003, COMMUN ACM, V46, P64, DOI 10.1145/641205.641206
   Frambach RT, 2002, J BUS RES, V55, P163, DOI 10.1016/S0148-2963(00)00152-1
   GALLIERS RD, 1995, EXAMINING BUSINESS P
   GATIGNON H, 1989, J MARKETING, V53, P35, DOI 10.2307/1251523
   Gingele J, 2002, COMPUT IND, V49, P235, DOI 10.1016/S0166-3615(02)00113-6
   Ginsberg MarkP., 1995, Process Tailoring and the Software Capability Maturity Model
   Gottschalk F, 2008, INT J COOP INF SYST, V17, P177, DOI 10.1142/S0218843008001798
   Henderson-Sellers B, 2003, COMMUN ACM, V46, P73, DOI 10.1145/944217.944242
   Henderson-Sellers B, 2004, J UNIVERS COMPUT SCI, V10, P326
   *ISACA, APPL COBIT
   IT Governance Institute (ITGI), 2007, COBIT 4 1 CONTR OBJ
   Karlsson F, 2004, INFORM SOFTWARE TECH, V46, P619, DOI 10.1016/j.infsof.2003.12.004
   KATZ ML, 1994, J ECON PERSPECT, V8, P93, DOI 10.1257/jep.8.2.93
   KIMBERLY JR, 1981, ACAD MANAGE J, V24, P689, DOI 10.5465/256170
   Kraut RE, 1998, ORGAN SCI, V9, P437, DOI 10.1287/orsc.9.4.437
   LAM A., 2004, BRUNEL RES ENTERPRIS
   MARKUS L, 1990, ORG COMMUNICATIONS T
   Nelson R.R., 1982, EVOL THEOR
   O'Neill P, 1999, TECHNOVATION, V19, P571, DOI 10.1016/S0166-4972(99)00059-0
   RALYTE J, 2003, P 15 C ADV INF SYST, P16
   Ravichandran T, 2000, DECISION SCI, V31, P691, DOI 10.1111/j.1540-5915.2000.tb00939.x
   Rolland C, 1998, LECT NOTES COMPUT SC, V1413, P1, DOI 10.1007/BFb0054216
   Rosemann M, 2007, INFORM SYST, V32, P1, DOI 10.1016/j.is.2005.05.003
   Scheer A.-W., 2000, ARIS BUSINESS PROCES
   Subramanian GH, 2007, J SYST SOFTWARE, V80, P616, DOI 10.1016/j.jss.2006.06.014
   SWANSON EB, 1994, MANAGE SCI, V40, P1069, DOI 10.1287/mnsc.40.9.1069
   Tellis W., 1997, Campus-Wide Information Systems, V14, P78, DOI 10.1108/10650749710187617
   TRIENEKENS JJM, 2008, SOFTWARE QUALITY J
   Völkner P, 2002, FUZZY SET SYST, V125, P275, DOI 10.1016/S0165-0114(00)00105-6
   Yin R.K., 2011, Qualitative research from start to finish
   ZMUD RW, 1984, MANAGE SCI, V30, P727, DOI 10.1287/mnsc.30.6.727
   ZWEGERS AJR, 1995, COMPUT IND, V27, P143, DOI 10.1016/0166-3615(95)00019-4
NR 43
TC 8
Z9 9
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2010
VL 52
IS 4
BP 397
EP 410
DI 10.1016/j.infsof.2009.10.011
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 576CL
UT WOS:000276121400003
DA 2024-07-18
ER

PT J
AU Sun, Y
   Liu, XQ
AF Sun, Yan
   Liu, Xiaoqing (Frank)
TI Business-oriented software process improvement based on CMMI using QFD
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software Process Improvement; CMMI; Quality Function Deployment;
   Prioritization; Relationship matrix; Process requirements
AB Software Process Improvement (SPI) has become the key to the survival of many software development organizations. As a follow-up of a previous paper on SPI for the CMM using Quality Function Deployment (QFD), a new SPI framework integrating QFD with the CMMI is developed. Similar to the earlier SPI framework for the CMM, the proposed SPI framework based on the CMMI using QFD aims to achieve three objectives: (1) to map process requirements, including business requirements, to the CMMI with the help of QFD; (2) to develop a method based on QFD for the integration and prioritization of requirements from multiple perspectives (groups); and (3) to be able to prioritize software process improvement actions based on process requirements.
   Process requirements from multiples groups of stakeholders (perspectives), including business goals, are integrated and prioritized. SPI actions are linked to these process requirements using QFD. Thus, the priorities of actions reflect the priorities of process requirements. By executing the actions with the highest priorities, the highest satisfaction level of process requirements can be achieved. One unique feature of the framework for the CMMI Continuous representation is that the priority values of these actions can be compared across PAs, even when the PAs attempt to reach different capability levels. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Sun, Yan; Liu, Xiaoqing (Frank)] Missouri Univ Sci & Technol, Dept Comp Sci, Rolla, MO 65409 USA.
C3 University of Missouri System; Missouri University of Science &
   Technology
RP Liu, XQ (corresponding author), Missouri Univ Sci & Technol, Dept Comp Sci, Rolla, MO 65409 USA.
EM fliu@mst.edu
CR AKAO Y, 1990, FUNCTION DEPLOYMENT
   [Anonymous], 2006, CMMI DEV VERS 1 2
   BECKER A, 2008, P 1 INT WORKSH BUS I
   Beijun Shen, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P609, DOI 10.1109/CSSE.2008.701
   CARD DN, 2004, P 28 ANN INT COMP SO
   Choi Y, 2005, 7TH INTERNATIONAL CONFERENCE ON ADVANCED COMMUNICATION TECHNOLOGY, VOLS 1 AND 2, PROCEEDINGS, P933, DOI 10.1109/ICACT.2005.246109
   Chrissis M., 2006, CMMI: Guidelines for Process Integration and Product Improvement
   EMAM KE, 1999, NRCER1065
   Gibson D., 2006, CMUSEI2006TR004
   HIERHOLZER A, 1998, P WORLD INN STRAT C, P85
   HU Z, 2005, P 1 INT RES WORKSH P
   *ISO IEC, 1999, 15504 ISOIEC TR
   LIU X, 2005, P 3 WORKSH SOFTW QUA
   LIU X, 2006, SOFTWARE PROCESS IMP, V11, P573
   Liu XQ, 2006, J SYST SOFTWARE, V79, P1649, DOI 10.1016/j.jss.2006.03.012
   MARY BC, 2002, CAPABILITY MATURITY
   MURPHY RE, 2002, QUALITY MANAGEMENT J, V9, P25
   PAULK MC, 1993, CMUSEI93TR025
   PAULK MC, 1994, CMUSEI94TR12
   PAULK MC, 1993, CMUSEI93TR024, P177
   RICHARDSON I, 1997, 3 ANN INT QFD S LINK
   SERRANO M, 2004, P 28 ANN INT COMP SO
   Stelzer D., 1996, SOFTWARE PROCESS IMP, V2, P197, DOI DOI 10.1002/(SICI)1099-1670(199609)2:3<197::AID-SPIP47>3.0.CO;2-C
   Zultner R.E., 1992, Quality Function Deployment (QFD) for Software
   ZULTNER RE, 1995, 7 S OFD
   ZULTNER RE, 1992, TOTAL QUALITY MANAGE
NR 26
TC 19
Z9 22
U1 1
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2010
VL 52
IS 1
BP 79
EP 91
DI 10.1016/j.infsof.2009.08.003
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 527ND
UT WOS:000272372900006
DA 2024-07-18
ER

PT J
AU Edwards, HM
   McDonald, S
   Young, SM
AF Edwards, Helen M.
   McDonald, Sharon
   Young, S. Michelle
TI The repertory grid technique: Its place in empirical software
   engineering research
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Repertory grids; Personal construct theory; Interpretive research;
   Critical review; Research process
ID INFORMATION
AB Personal construct theory (applied via the repertory grid technique) supports interpretivist research in a structured manner and, as such, has relevance for researchers conducting studies focused on the human and organisational aspects of software engineering. Personal construct theory (which underpins the repertory grid technique) is introduced, and the technique and its administration is discussed. Research studies from the literature are reviewed to provide illustrative examples of its application within a software engineering context. Since any research approach needs to answer questions about its reliability and validity within a particular Study, these issues are considered for repertory grid investigations and criteria are offered that can be used to judge these issues within a planned, and/or reported, Study. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Edwards, Helen M.] Univ Sunderland, Dept Comp Engn & Technol, Sunderland SR2 7EE, Durham, England.
   David Goldman Informat Ctr, Sunderland SR6 0DD, England.
C3 University of Sunderland; University of Sunderland
RP Edwards, HM (corresponding author), Univ Sunderland, Dept Comp Engn & Technol, Sunderland SR2 7EE, Durham, England.
EM helen.edwards@sunderland.ac.uk; mcdonald@sunderland.ac.uk;
   michelle.young@sunderland.ac.uk
CR Adams-Webber JR, 1998, PSYCHOL SCI, V9, P499, DOI 10.1111/1467-9280.00092
   Baddoo N., 2002, Software Process Improvement and Practice, V7, P17, DOI 10.1002/spip.151
   Belbin M.R., 2000, Team roles at work, V9th
   BELL RC, 1997, 11 INT C PERS CONSTR, P2
   BONARIUS H, 1976, NEBR S MOT
   CLASS RL, 2002, INFORM SOFTWARE TECH, V44, P491
   Crudge SE, 2004, J AM SOC INF SCI TEC, V55, P794, DOI 10.1002/asi.20023
   Everitt B. S., 2001, Applied multivariate data analysis
   FALLMAN D, 2005, WORKSH CHI 2005 C HU
   Fransella F., 2004, A manual for repertory grid technique, V2nd
   GAINES BR, 2002, USING KNOWLEDGE ACQU
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   HALL T, 2000, INT C SOFTW METH TOO
   Hunter MG, 1997, INFORM SYST J, V7, P67, DOI 10.1046/j.1365-2575.1997.00005.x
   Hunter MG, 2000, INFORM SYST RES, V11, P93, DOI 10.1287/isre.11.1.93.11786
   HUNTER MG, 1998, P 1998 ACM SIGCPR C, P1998
   HUNTER MG, 1994, SIGCPR COMPUTER PERS, V15, P15
   Kelly G., 1955, Personal construct psychology
   Kruskal JB, 1978, MULTIDIMENSIONAL SCA
   Lee J, 2000, INFORM SYST J, V10, P347, DOI 10.1046/j.1365-2575.2000.00086.x
   Moynihan T, 1996, J INFORM TECHNOL, V11, P359, DOI 10.1057/jit.1996.9
   Moynihan T, 1997, IEEE SOFTWARE, V14, P35, DOI 10.1109/52.589229
   NIU N, 2006, P 2006 INT WORKSH EA
   Pervin L.A., 1989, PERSONALITY THEORY R, V5th
   PHYTHIAN GJ, 1992, EUR J OPER RES, V56, P15, DOI 10.1016/0377-2217(92)90289-L
   Rugg G, 2002, INFORM SYST J, V12, P215, DOI 10.1046/j.1365-2575.2002.00124.x
   SEGAL J, 2005, REAL EV BAS SOFTW EN
   Shaw M., 2002, International Journal on Software Tools for Technology Transfer, V4, P1, DOI 10.1007/s10009-002-0083-4
   *STATSOFT INC, 2003, TEXTB
   Stewart V., 1981, BUSINESS APPL REPERT
   STEWART V, 2003, IMPORTANCE CONTRAST
   Tan FB, 2002, MIS QUART, V26, P39, DOI 10.2307/4132340
   Young S. Michelle, 2005, Workshop on Human and Social Factors of Software Engineering, P1, DOI 10.1145/1083106.1083123
   YOUNG SM, 2004, THESIS U SUNDERLAND
NR 34
TC 54
Z9 59
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2009
VL 51
IS 4
BP 785
EP 798
DI 10.1016/j.infsof.2008.08.008
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 409HA
UT WOS:000263495600008
DA 2024-07-18
ER

PT J
AU Deelstra, S
   Sinnema, M
   Bosch, J
AF Deelstra, Sybren
   Sinnema, Marco
   Bosch, Jan
TI Variability assessment in software product families
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software product families; Variability; Assessment; Evolution
AB Software variability management is a key factor in the success of software systems and software product families. An important aspect of software variability management is the evolution of variability in response to changing markets, business needs, and advances in technology. To be able to determine whether, when, and how variability should evolve, we have developed the COVAMOF software variability assessment method (COSVAM). The contribution of COSVAM is that it is a novel, and industry-strength assessment process that addresses the issues that are associated to the current variability assessment practice. In this paper, we present the Successful validation of COSVAM in an industrial software product family. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Deelstra, Sybren; Sinnema, Marco] Oce Technol BV, NL-5900 MA Venlo, Netherlands.
   [Bosch, Jan] Intuit, Mountain View, CA 94043 USA.
C3 Oce-Technologies BV; Intuit Inc.
RP Deelstra, S (corresponding author), Oce Technol BV, POB 101, NL-5900 MA Venlo, Netherlands.
EM sybren.deelstra@oce.com; marco.sinnema@oce.com; jan.bosch@intuit.com
CR [Anonymous], 2001, SOFTWARE PRODUCT LIN
   Asikainen T, 2004, LECT NOTES COMPUT SC, V3014, P225
   BECKER M, 2003, P 1 WORKSH SOFTW VAR
   Bengtsson P, 2004, J SYST SOFTWARE, V69, P129, DOI 10.1016/S0164-1212(03)00080-3
   Bohner S. A, 1991, P 8 INT C SOFTWARE M, P292
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   BOSCH J, 2001, P 4 INT WORKSH PROD, P11
   Clauss Matthias, 2001, GCSE 2001 YOUNG RES
   Clements P., 2001, EVALUATING SOFTWARE
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P7, DOI 10.1002/spip.213
   deBaud J.-M., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P34, DOI 10.1109/ICSE.1999.840993
   Deelstra S, 2004, PROC IEEE INT CONF S, P458, DOI 10.1109/ICSM.2004.1357835
   DEELSTRA S, 2003, J SYST SOFTWARE, V74, P173
   DEELSTRA S, 2004, P 2 GRON WORKSH SOFT
   FOLMER E, 2004, 9 IFIP WORK C ENG HU, P321
   Fritsch C., 2002, P INT WORKSH PROD LI, P59
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Hotz L., 2006, Configuration in Industrial Product Families - The ConIPF Methodology
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   Kang Kyo C, 1990, Technical Report
   KUNG D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P202, DOI 10.1109/ICSM.1994.336774
   LEHMAN MM, 1997, P 4 INT SOFTW METR S
   Maccari A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P585, DOI 10.1109/ICSE.2002.1008003
   Robertson D, 1998, SLOAN MANAGE REV, V39, P19
   SINNEMA M, 2006, P 13 ANN IEEE INT C
   Sinnema M, 2007, INFORM SOFTWARE TECH, V49, P717, DOI 10.1016/j.infsof.2006.08.001
   Svahnberg M., 2005, SOFTWARE PRACTICE EX, V35, P1
   Taguchi G., 1984, IEEE Global Telecommunications Conference, GLOBECOM '84 Conference Record. `Communications in the Information Age' (Cat. No. 84CH2064-4), P1106
   VANGURP J, 2006, P 10 INT SOFTW PROD
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   WHITEY J, 1996, CMUSEI96TR010
   WIJNSTRA JG, 2003, P 5 INT WORKSH SOFTW, P111
   [No title captured]
NR 33
TC 14
Z9 18
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2009
VL 51
IS 1
SI SI
BP 195
EP 218
DI 10.1016/j.infsof.2008.04.002
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 389FU
UT WOS:000262077500018
DA 2024-07-18
ER

PT J
AU Hwang, YF
   Rine, DC
AF Hwang, Yih-Feng
   Rine, David C.
TI Verification framework and algorithms for integrating information
   distribution systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE information distribution systems; faults detection; software requirement
   specifications; transition-directed graph; requirement verification
AB When two competitive companies merge into one bigger company, reusing existing technical resources in each company to form a common technology becomes a priority integration task. One of the specific problems occurring during integration is the resulting integrated scopes' requirements specifications become faulty while integrating two sets of software systems from two participating companies. The integrated scopes refer to the domains of information software systems, business policies, business processes, business rules, interface functions, and data that are being integrated in each participating company.
   Using a Transition-Directed Graph (TDG) representation, specified requirements involved in the integration will be represented in a form of TDG to be analyzed for faults. Five efficient algorithms are developed to identify faults in the resulting TDG formatted requirement specifications. Four correction algorithms are also developed to correct detected faults found in the TDG formatted requirements specifications. (c) 2006 Elsevier B.V. All rights reserved.
C1 MCI Inc, Network Provis Syst, Ashburn, VA 20147 USA.
   George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
C3 George Mason University
RP Hwang, YF (corresponding author), MCI Inc, Network Provis Syst, 21998 Hyde Pk Dr, Ashburn, VA 20147 USA.
EM yih-feng.hwang@mci.com
CR AGARWAL R, 1992, INT J MAN MACH STUD, V36, P447, DOI 10.1016/0020-7373(92)90043-K
   Berztiss AT, 1999, INFORM SYST, V24, P555, DOI 10.1016/S0306-4379(99)00032-0
   Booch G., 2005, The Unified Modeling Language User Guide
   BROWN R, 1996, P IEEE 1996 NAT AER, V2, P818
   CHAMBERLAIN S, 1990, BRLTR3114
   Chittister CG, 1996, IEEE T SYST MAN CY A, V26, P521, DOI 10.1109/3468.531900
   CLARK D, 1992, P 2 INT C SYST INT, P162
   CRAGUN BJ, 1987, INT J MAN MACH STUD, V26, P633, DOI 10.1016/S0020-7373(87)80076-7
   ELFWING R, 2002, IEEE 9 SOFTW ENG C, P84
   Evanco WM, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P114, DOI 10.1109/CSMR.2001.914975
   Fan WG, 2001, INFORM SYST, V26, P635, DOI 10.1016/S0306-4379(01)00043-6
   Ganesh J, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P70, DOI 10.1109/ICWS.2004.1314725
   Garey M. R., 1979, Computers and intractability. A guide to the theory of NP-completeness
   Ginsburg A., 1987, Third Annual Expert Systems in Government Conference Proceedings (Cat. No.87CH2467-9), P102
   GIORDANA A, 1985, INFORM SCIENCES, V35, P1, DOI 10.1016/0020-0255(85)90039-8
   Green P, 2000, INFORM SYST, V25, P73, DOI 10.1016/S0306-4379(00)00010-7
   Gries D., 1981, The Science of Programming, DOI [10.1007/978-1-4612-5983-1, DOI 10.1007/978-1-4612-5983-1]
   HAIMES YY, 1981, IEEE T SYST MAN CYB, V11, P606, DOI 10.1109/TSMC.1981.4308759
   Hasegawa T, 1998, 1998 IEEE ATM WORKSHOP PROCEEDINGS, P159, DOI 10.1109/ATM.1998.675160
   Huang P, 1997, IEEE SYS MAN CYBERN, P2812, DOI 10.1109/ICSMC.1997.635382
   HWANG G, 2002, IEEE T MOBILE COMPUT, V1, P82
   HWANG Y, 2001, S APPL COMP, P679
   HWANG Y, 1997, THESIS G MASON U FAI
   JAFAR M, 1990, OPERATIONS RES ARTIF, P373
   Johannesson P, 2001, INFORM SYST, V26, P165, DOI 10.1016/S0306-4379(01)00015-1
   JONES J, 1992, IEEE INT C SYST MAN, V1, P531
   KERSCHBERG L, 1991, IEEE INT C SYST MAN, V2, P779
   Knapp BG, 1997, INTERNATIONAL CONFERENCE AND WORKSHOP ON ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P136, DOI 10.1109/ECBS.1997.581838
   KUHN DR, 1990, P 1 INT C SYST INT I, P455
   LANDAUER C, 1990, P WORKSH KNOWL BAS S
   LANNING DL, 1995, IEEE T RELIAB, V44, P666, DOI 10.1109/24.475999
   LIU NK, 1991, INT J INTELL SYST, V6, P255, DOI 10.1002/int.4550060303
   LOONEY CG, 1988, IEEE T SYST MAN CYB, V18, P178, DOI 10.1109/21.87067
   Miller P. L., 1986, Proceedings of the Tenth Annual Symposium on Computer Applications in Medical Care (Cat. No.86CH2341-6), P30
   MURATA T, 1988, J FRANKLIN I, V325, P73, DOI 10.1016/0016-0032(88)90047-6
   MURRAY T, 1987, 20 HAW INT C SYST SC
   MYERS G, 1976, SOFTWARE RELIABILTY
   Nazareth D. L., 1991, Knowledge Acquisition, V3, P339, DOI 10.1016/S1042-8143(05)80024-X
   Nguyen T. A., 1987, Proceedings of the Third Conference on Artificial Intelligence Applications (Cat. No.87CH2408-3), P4
   NGUYEN TA, 1987, AI MAG, V8, P69
   NGUYEN TA, 1985, 9TH P INT JOINT C AR, V1, P375
   PATRIOTTA G, 2004, J KNOWLEDGE MANAGEME, V2, P3
   Pavlic M, 2003, ITI 2003: PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY INTERFACES, P143, DOI 10.1109/ITI.2003.1225336
   PENSICK J, 1993, IEEE AEROSPACE ELECT, V8, P11
   Pich MT, 2002, MANAGE SCI, V48, P1008, DOI 10.1287/mnsc.48.8.1008.163
   Pomroy N., 1989, Third International Conference on Command, Control, Communications and Management Information Systems (Conf. Publ. No.304), P139
   PREECE A, 1989, P EXPERT SYSTEMS, V89, P66
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Ramamoorthy C. V., 1995, Proceedings of the Fifth IEEE Computer Society Workshop on Future Trends of Distributed Computing Systems (Cat. No.95TB8106), P252, DOI 10.1109/FTDCS.1995.524992
   Schneidewind NF, 2002, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSM.2002.1167772
   Schneidewind NF, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P185, DOI 10.1109/ISSRE.2001.989472
   Schorling SM, 2002, INFORM SOFTWARE TECH, V44, P77, DOI 10.1016/S0950-5849(01)00218-X
   SCHULTZ D, 1979, ACM P 1979 ANN C, P1432
   Sommerville I., 1996, Software Engineering, V5th
   STACHOWITZ R, 1987, P 1 ANN WORKSH SPAC, P209
   Suwa M., 1984, RULE BASED EXPERT SY, P159
   SUWA M, 1982, AI MAG, V3, P16, DOI https://doi.org/10.1609/aimag.v3i4.377
   URAIKUL V, 2004, IEEE C ELECTRICAL CO, V3, P1375
   Wang D, 2003, INFORM SOFTWARE TECH, V45, P865, DOI 10.1016/S0950-5849(03)00065-X
   Wieringa R, 1998, INFORM SYST, V23, P159, DOI 10.1016/S0306-4379(98)00007-6
   Zakaria M, 1997, P ANN HICSS, P159, DOI 10.1109/HICSS.1997.667210
NR 61
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2006
VL 48
IS 9
BP 876
EP 889
DI 10.1016/j.infsof.2005.12.006
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 073OC
UT WOS:000239751500010
DA 2024-07-18
ER

PT J
AU Ziegler, G
   Farkas, C
   Lorincz, A
AF Ziegler, Gabor
   Farkas, Csilla
   Lorincz, Andras
TI A framework for anonymous but accountable self-organizing communities
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE accountability; anonymity; privacy; trust; self-organizing
AB In this paper we propose a novel architecture and approach to provide accountability for Web communities that require a high-level of privacy. A two-layered privacy protection architecture is proposed, that supports (i) registration of participants and enforcement of community rules, called internal accountability, and (ii) rule-based interaction with real world organizations, called external accountability. Our security protocols build upon community-based trust and limit the exposure of private data on trusted third parties.
   The two-layered architecture protects the mappings between real users and their virtual identities, and among the virtual users, while guaranteeing internal and external accountability. We target Web communities that are dynamic and self-organizing, i.e. roles and contributions of participants may change over time. The proposed concepts and protocols are implemented in our SyllabNet project that supports anonymous course evaluations by university students. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ S Carolina, Comp Sci & Engn Dept, Informat Secur Lab, Columbia, SC 29208 USA.
   Budapest Univ Technol & Econ, Dept Telecommun & Media Informat, High Speed Networks Lab, Budapest, Hungary.
   Eotvos Lorand Univ, Dept Informat Syst, Budapest, Hungary.
C3 University of South Carolina System; University of South Carolina
   Columbia; Budapest University of Technology & Economics; Eotvos Lorand
   University
RP Farkas, C (corresponding author), Univ S Carolina, Comp Sci & Engn Dept, Informat Secur Lab, Columbia, SC 29208 USA.
EM farkas@cse.sc.edu
RI Lorincz, Andras/H-4125-2012
OI Lorincz, Andras/0000-0002-1280-3447
CR [Anonymous], 1998, ACM Trans Inform Syst Secur TISSEC, DOI DOI 10.1145/290163.290168
   [Anonymous], 2004, 2 WORKSH EC PEER TO
   BENNETT K, GNUNET TRULY ANOMYMO
   Boneh D, 1997, LECT NOTES COMPUT SC, V1294, P425
   BONEH D, 1999, INTRUSION TOLERANCE
   BUTTYAN L, 1999, 18 IEEE S REL DISTR
   CHAUM DL, 1981, COMMUNICATION ACM, V24
   CLAESSENS J, 1999, P 20 S INF THEOR BEN
   Clarke I., 2001, LECT NOTES COMPUTER, V2009, P46, DOI DOI 10.1007/3-540-44702-4_
   FARKAS C, 2002, P WORKSH PRIV EL SOC, P10
   FERNANDES A, INCENTIVES HONEST PA
   GABVER E, 1999, CONSISTENT YET ANONY
   GARCIAMARTINEZ A, CRYTOGRAPHIC REPUTAT
   GERARD J, 1991, DESIGN VALIDATION CO
   GOLDBERG I, 1997, P 42 IEEE SPRING COM
   *ISO, 74981984 ISO
   KAMVAR SD, 2003, P 12 INT WORLD WID W
   KUGLER D, 2002, LECT NOTES COMPUTER
   MACKENZIE P, 1999, LECT NOTES COMPUTER, V1648
   Malkin M., 1999, Proceedings 1999 Network and Distributed System Security Symposium, P43
   Martin David., 2002, Deanonymizing users of the SafeWeb anonymizing service
   PALOTAI Z, IN PRESS P INT JOINT
   Rezai AR, 2004, INVEST RADIOL, V39, P300, DOI 10.1097/01.rli.0000124940.02340.ab
   SHIELDS C, 2000, P ACM C COMP COMM SE
   STUBBLEBINE SG, 2001, LECT NOTES COMPUT SC, P1962
   Sutton R., 1998, Reinforcement Learning: An Introduction
   SYVERSON PF, 1997, P IEEE S SEC PRIV OA
   Waldman M, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE NINTH USENIX SECURITY SYMPOSIUM, P59
   Wu T, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE EIGHTH USENIX SECURITY SYMPOSIUM (SECURITY '99), P79
NR 29
TC 5
Z9 7
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2006
VL 48
IS 8
BP 726
EP 744
DI 10.1016/j.infsof.2005.08.007
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 056GS
UT WOS:000238510700009
DA 2024-07-18
ER

PT J
AU Wang, ETG
   Shih, SP
   Jiang, JJ
   Klein, G
AF Wang, ETG
   Shih, SP
   Jiang, JJ
   Klein, G
TI The relative influence of management control and user-IS personnel
   interaction on project performance
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE project management; user-IS personnel interaction; management control
ID SYSTEMS-DEVELOPMENT; INFORMATION-SYSTEMS; CONTINGENCY APPROACH; SUCCESS;
   PARTICIPATION; INVOLVEMENT; ORGANIZATIONS; COORDINATION; UNCERTAINTY;
   VARIABLES
AB Research has failed to establish a conclusive link between levels of user involvement and information system project success. Communication and control theories indicate that the quality of interactions between users and inofrmation personnel may serve to better the coordinaton in a project and lead to greater success. A model is developed that directly relates management control to the quality of interaction and project success, with interaction quality as a potential intermediary. These variables provide a more distinct relationship to success as interactions are more structurally defined and controlled. A survey of 196 IS professionals provides evidence that management control techniques improve the quality of user-IS personnel interactions and eventual project success. These formal structures provide guidelines for managers in controlling the critical relations between users and IS personnel. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ Cent Florida, Dept Management Informat Syst, Orlando, FL 32816 USA.
   Natl Cent Univ, Dept Informat Management, Taoyuan 320, Taiwan.
   Univ Colorado, Coll Business & Adm, Colorado Springs, CO 80933 USA.
C3 State University System of Florida; University of Central Florida;
   National Central University; University of Colorado System; University
   of Colorado at Colorado Springs
RP Univ Cent Florida, Dept Management Informat Syst, Orlando, FL 32816 USA.
EM jjiang@bus.ucf.edu
RI 江, 俊毅/N-6899-2018; Jiang, James/JPK-7730-2023
CR Aladwani A.M., 2000, DATA BASE ADV INF SY, V31, P25
   [Anonymous], 1998, Modern Methods for Business Research
   ARMSTRONG JS, 1977, J MARKETING RES, V51, P71
   BARKI H, 1994, MIS QUART, V18, P59, DOI 10.2307/249610
   Barki H, 2001, MIS QUART, V25, P195, DOI 10.2307/3250929
   Baroudi J. J., 1988, Journal of Management Information Systems, V4, P44
   BAROUDI JJ, 1985, MIS QUART, V9, P341, DOI 10.2307/249234
   Beath C.M., 1987, Proceedings of the Proceeding of Eighth International Conference of Information Systems, P415
   BEATH CM, 1994, INFORM SYST RES, V5, P350, DOI 10.1287/isre.5.4.350
   CAVAYE ALM, 1995, INFORM MANAGE, V28, P311, DOI 10.1016/0378-7206(94)00053-L
   Chatterjee D, 2002, MIS QUART, V26, P65, DOI 10.2307/4132321
   Dekleva S, 1997, INFORM SYST RES, V8, P95, DOI 10.1287/isre.8.1.95
   DeLone WH, 2003, J MANAGE INFORM SYST, V19, P9, DOI 10.1080/07421222.2003.11045748
   DeLone WH, 1992, INFORM SYST RES, V3, P60, DOI 10.1287/isre.3.1.60
   Dillman D.A., 1978, MAIL TELEPHONE SURVE
   EISENHARDT KM, 1985, MANAGE SCI, V31, P134, DOI 10.1287/mnsc.31.2.134
   Fiedler K. D., 1996, Journal of Management Information Systems, V13, P9
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   GLADSTEIN DL, 1984, ADMIN SCI QUART, V29, P499, DOI 10.2307/2392936
   Guinan PJ, 1998, INFORM SYST RES, V9, P101, DOI 10.1287/isre.9.2.101
   HENDERSON JC, 1992, MANAGE SCI, V38, P757, DOI 10.1287/mnsc.38.6.757
   Hwang MI, 1999, INFORM MANAGE-AMSTER, V35, P229, DOI 10.1016/S0378-7206(98)00092-5
   IVES B, 1984, MANAGE SCI, V30, P586, DOI 10.1287/mnsc.30.5.586
   Jiang J, 2000, J SYST SOFTWARE, V52, P3, DOI 10.1016/S0164-1212(99)00128-4
   Jiang JJ, 2002, J SYST SOFTWARE, V63, P17, DOI 10.1016/S0164-1212(01)00135-2
   Jong-Min Choe, 1996, Journal of Management Information Systems, V12, P215
   Kirsch L., 2000, FRAMING DOMAIN IT MA, P285
   Kirsch L.J., 1996, ACCOUNTING MANAGEMEN, V6, P221, DOI DOI 10.1016/S0959-8022(96)90015-6
   Kirsch LJ, 1997, INFORM SYST RES, V8, P215, DOI 10.1287/isre.8.3.215
   Kirsch LJ, 1996, ORGAN SCI, V7, P1, DOI 10.1287/orsc.7.1.1
   Kirsch LJ, 2002, MANAGE SCI, V48, P484, DOI 10.1287/mnsc.48.4.484.204
   KRAUT R, 1994, COMMUN ACM, V38, P69
   Lawrence M, 2002, OMEGA-INT J MANAGE S, V30, P381, DOI 10.1016/S0305-0483(02)00048-8
   Lin WT, 2000, INFORM MANAGE, V37, P283, DOI 10.1016/S0378-7206(99)00055-5
   Lohmoeller J.B., 1989, LATENT VARIABLE PATH
   Lynch T, 2004, EUR J INFORM SYST, V13, P286, DOI 10.1057/palgrave.ejis.3000512
   MIGHT RJ, 1985, IEEE T ENG MANAGE, V32, P71, DOI 10.1109/TEM.1985.6447584
   MILLER J, 1987, MIS QUART, V11, P107, DOI 10.2307/248832
   NIDUMOLU S, 1995, INFORM SYST RES, V6, P191, DOI 10.1287/isre.6.3.191
   Nidumolu SR, 1996, INFORM MANAGE, V31, P135, DOI 10.1016/S0378-7206(96)01073-7
   Nunnally JC, 1978, PSYCHOMETRIC THEORY
   OUCHI WG, 1979, MANAGE SCI, V25, P833, DOI DOI 10.1287/MNSC.25.9.833
   Piccoli G, 2003, MIS QUART, V27, P365
   Robey D., 1993, Journal of Management Information Systems, V10, P123
   SNELL SA, 1992, ACAD MANAGE J, V35, P292, DOI 10.5465/256375
   TAIT P, 1988, MIS QUART, V12, P91, DOI 10.2307/248809
   Thompson J., 2017, Organizations in action
   VANDEVEN AH, 1976, AM SOCIOL REV, V41, P322
   VITALARI NP, 1981, THESIS U MINNESOTA M
   WEINBERG GM, 1984, IEEE T SOFTWARE ENG, V10, P68, DOI 10.1109/TSE.1984.5010200
   Wixom BH, 2001, MIS QUART, V25, P17, DOI 10.2307/3250957
NR 51
TC 26
Z9 29
U1 0
U2 17
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2006
VL 48
IS 3
BP 214
EP 220
DI 10.1016/j.infsof.2005.04.003
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 027SZ
UT WOS:000236437200007
DA 2024-07-18
ER

PT J
AU Wohlin, C
AF Wohlin, C
TI An analysis of the most cited articles in software engineering journals
   - 1999
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
AB Citations and related work are crucial in any research to position the work and to build on the work of others. A high citation count is an indication of the influence of specific articles. The importance of citations means that it is interesting to analyze which articles are cited the most. Such an analysis has been conducted using the ISI Web of Science to identify the most cited software engineering journal articles published in 1999. The objective of the analysis is to identify and list the articles that have influenced others the most as measured by citation count. An understanding of which research is viewed as most valuable to build upon may provide valuable insights into what research to focus on now and in the future. Based on the analysis, a list of the 20 most cited articles is presented here. The intention of the analysis is twofold. First, to actually show the most cited articles, and second, to invite the authors of the most cited articles in 1999 to contribute to a special issue of Information and Software Technology. Five invited authors have accepted the invitation and their articles are appearing in this special issue. Moreover, the research topics and methods of the most cited articles in 1999 are compared with those from the most cited articles in 1994 to provide a picture of similarities and differences between the years. (c) 2005 Elsevier B.V. All rights reserved.
C1 Blekinge Inst Technol, Sch Engn, Dept Syst & Software Engn, S-37225 Ronneby, Sweden.
C3 Blekinge Institute Technology
RP Blekinge Inst Technol, Sch Engn, Dept Syst & Software Engn, POB 520, S-37225 Ronneby, Sweden.
EM claes.wohlin@bth.se
OI Wohlin, Claes/0000-0003-0460-5253
CR CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   FENTON N, 1994, IEEE T SOFTWARE ENG, V20, P199, DOI 10.1109/32.268921
   Glanzel W, 2002, SCIENTOMETRICS, V53, P171, DOI 10.1023/A:1014848323806
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Glass RL, 2005, J SYST SOFTWARE, V76, P91, DOI 10.1016/j.jss.2004.08.018
   Jones AW, 2005, INT J LEGAL MED, V119, P59, DOI 10.1007/s00414-004-0512-x
   MCBURNEY MK, P PROF COMM C 2002, P108
   TICHY WF, 1995, J SYST SOFTWARE, V28, P9, DOI 10.1016/0164-1212(94)00111-Y
   Vessey I, 2005, INFORM SOFTWARE TECH, V47, P245, DOI 10.1016/j.infsof.2004.08.006
   Zelkowitz MV, 1997, INFORM SOFTWARE TECH, V39, P735, DOI 10.1016/S0950-5849(97)00025-6
   Zitt M, 2005, SCIENTOMETRICS, V63, P373, DOI 10.1007/s11192-005-0218-y
NR 11
TC 26
Z9 26
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2005
VL 47
IS 15
BP 957
EP 964
DI 10.1016/j.infsof.2005.09.002
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 998MH
UT WOS:000234322400002
DA 2024-07-18
ER

PT J
AU Kitchenham, B
   Linkman, S
   Linkman, S
AF Kitchenham, B
   Linkman, S
   Linkman, S
TI Experiences of using an evaluation framework
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software bidding model; model evaluation framework; evaluation process;
   evaluation results; prototype tool evaluation
AB This paper reports two trials of an evaluation framework intended to evaluate novel software applications. The evaluation framework was originally developed to evaluate a risk-based software bidding model, and our first trial of using the framework was our evaluation of the bidding model. We found that the framework worked well as a validation framework but needed to be extended before it would be appropriate for evaluation. Subsequently, we compared our framework with a recently completed evaluation of a software tool undertaken as part of the Framework V CLARiFi project. In this case, we did not use the framework to guide the evaluation; we used the framework to see whether it would identify any weaknesses in the actual evaluation process. Activities recommended by the framework were not undertaken in the order suggested by the evaluation process and we found problems relating to that oversight surfaced during the tool evaluation activities. Our experiences suggest that the framework has some benefits but it also requires further practical testing. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ Keele, Dept Comp Sci, Software Engn Grp, Stoke On Trent ST5 5BG, Staffs, England.
C3 Keele University
RP Univ Keele, Dept Comp Sci, Software Engn Grp, Keele Village, Stoke On Trent ST5 5BG, Staffs, England.
EM barbara@cs.keele.ac.uk
RI Kitchenham, Barbara/AAL-4311-2020
OI Kitchenham, Barbara/0000-0002-6134-8460
CR GLEEN K, 2001, EVALUATION PLAN CLAR
   *INT STAND ORG, 1995, 14102 ISOIEC
   Kitchenham B, 2003, IEEE T SOFTWARE ENG, V29, P542, DOI 10.1109/TSE.2003.1205181
   KITCHENHAM B, IN PRESS FRAMEWORK E
   LINDLAND O, 1994, IEEE SOFTWARE    MAR, P42
   LINKMAN S, 2002, CLARIFI PROJECT DELI
   PICKARD L, 2002, TRSE0202
   PICKARD L, TRSE0204 KEEL U
   Rosnow R.L., 1997, People studying people: Artifacts and ethics in behavioral research
   Yin R.K., 2003, Applied Social Science Research Methods Series, V5
NR 10
TC 9
Z9 9
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG 1
PY 2005
VL 47
IS 11
BP 761
EP 774
DI 10.1016/j.infsof.2005.01.001
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 954ZR
UT WOS:000231194700005
OA hybrid
DA 2024-07-18
ER

PT J
AU Fernández-Medina, E
   Piattini, M
AF Fernández-Medina, E
   Piattini, M
TI Designing secure databases
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE secure databases; database design; unified modeling language; object
   constraint language
AB Security is an important issue that must be considered as a fundamental requirement in information systems development, and particularly in database design. Therefore security, as a further quality property of software, must be tackled at all stages of the development. The most extended secure database model is the multilevel model, which permits the classification of information according to its confidentiality, and considers mandatory access control. Nevertheless, the problem is that no database design methodologies that consider security (and therefore secure database models) across the entire life cycle, particularly at the earliest stages currently exist. Therefore it is not possible to design secure databases appropriately. Our aim is to solve this problem by proposing a methodology for the design of secure databases. In addition to this methodology, we have defined some models that allow us to include security information in the database model, and a constraint language to define security constraints. As a result, we can specify a fine-grained classification of the information, defining with a high degree of accuracy which properties each user has to own in order to be able to access each piece of information. The methodology consists of four stages: requirements gathering; database analysis; multilevel relational logical design; and specific logical design. The first three stages define activities to analyze and design a secure database, thus producing a general secure database model. The last stage is made up of activities that adapt the general secure data model to one of the most popular secure database management systems: Oracle9i Label Security. This methodology has been used in a genuine case by the Data Processing Center of Provincial Government. In order to support the methodology, we have implemented an extension of Rational Rose, including and managing security information and constraints in the first stages of the methodology. (c) 2004 Elsevier B.V. All rights reserved.
C1 Univ Castilla La Mancha, Escuela Super Informat, Alarcos Res Grp, E-13071 Ciudad Real, Spain.
C3 Universidad de Castilla-La Mancha
RP Univ Castilla La Mancha, Escuela Super Informat, Alarcos Res Grp, Paseo Univ 4, E-13071 Ciudad Real, Spain.
EM eduardo.fdezmedina@uclm.es; mario.piattini@uclm.es
RI Piattini, Mario/F-6271-2013; Fernandez-Medina, Eduardo/D-4648-2011
OI Piattini, Mario/0000-0002-7212-8279; Fernandez-Medina,
   Eduardo/0000-0003-2553-9320
CR Atzeni P., 1999, DATABASE SYSTEMS CON
   Avison D, 1999, COMMUN ACM, V42, P94, DOI 10.1145/291469.291479
   BASKERVILLE R, 1993, COMPUT SURV, V25, P375, DOI 10.1145/162124.162127
   Batini C, 1991, CONCEPTUAL DATABASE
   Binder R.V., 2000, AW OBJ TECHNOL S
   Blaha M., 1998, Object-Oriented Modeling and Design for Database Applications
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   BRINKLEY D, 1995, INFORMATION SECURITY
   Castano S., 1994, Database security
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Connolly T., 2002, Database Systems: A Practical Approach to Design
   CONRAD C, 2001, UNIFIED MODELING LAN, P151
   DEVANBU P, 2000, FUTURE SOFTWARE ENG, P227
   Dhillon G, 2000, COMMUN ACM, V43, P125, DOI 10.1145/341852.341877
   DHILLON G, 2001, INFORMATION SECURITY
   Elmasri R., 2002, Fundamentals of Database System"
   Fernández-Medina E, 2001, 35TH ANNUAL 2001 INTERNATIONAL CARNAHAN CONFERENCE ON SECURITY TECHNOLOGY, PROCEEDINGS, P163, DOI 10.1109/CCST.2001.962829
   FERNANDEZMEDINA E, 2004, P UN MOD LANG C LISB
   FERRARI E, 2000, ADV DATABASES TECHNO
   FUHRMAN C, 2003, P 28 ANN NASA GODD S, P216
   Ghosh AK, 2002, IEEE SOFTWARE, V19, P14, DOI 10.1109/MS.2002.976936
   Hall A, 2002, IEEE SOFTWARE, V19, P18, DOI 10.1109/52.976937
   *IEEE, 101219981998 IEEE
   *ISACF, 2001, INF SEC GOV GUID BOA
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   LEAVITT N, 2000, IEEE COMPUT, V33, P16
   LEVINGER J, 2002, ORACLE LABEL SECURIT
   Marks DG, 1996, J OBJECT-ORIENT PROG, V9, P22
   Muller R. J., 1999, DATABASE DESIGN SMAR
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Samarati P, 2000, FDN SECURITY ANAL DE
   SANDHU R, 1998, ACM T INFORMATION SY, V1
   SMITH GW, 1991, IEEE T SOFTWARE ENG, V17, P1195, DOI 10.1109/32.106974
   Toval A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P95, DOI 10.1109/ICRE.2002.1048511
   Warmer J.B., 1998, OBJECT CONSTRAINT LA
NR 37
TC 26
Z9 28
U1 2
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY 15
PY 2005
VL 47
IS 7
BP 463
EP 477
DI 10.1016/j.infsof.2004.09.013
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 923AC
UT WOS:000228880000002
DA 2024-07-18
ER

PT J
AU Ramos, I
   Berry, DM
   Carvalho, JA
AF Ramos, I
   Berry, DM
   Carvalho, JA
TI Requirements engineering for organizational transformation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE computer-based systems; organizational transformation; emotions
ID RESOURCE PLANNING PACKAGES; INFORMATION-SYSTEMS; SOFTWARE; MANAGEMENT
AB Traditional approaches to requirements elicitation stress systematic and rational analysis and representation of organizational context and system requirements. This paper argues that the introduction of any computer-based system to an organization transforms the organization and changes the work patterns of the system's users in the organization. These changes interact with the users' values and beliefs and trigger emotional responses which are sometimes directed against the computer-based system and its proponents. The paper debunks myths about how smoothly such organizational transformations take place, describes case studies showing how organizational transformation really takes place, and introduces and confirms by case studies some guidelines for eliciting requirements and the relevant emotional issues for a computer-based system that is being introduced into an organization to change its work patterns. (c) 2004 Elsevier B.V. All rights reserved.
C1 Univ Waterloo, Sch Comp Sci, Waterloo, ON N2T 3G1, Canada.
   Univ Minho, Dept Sistemas Informacao, P-4800 Guimaraes, Portugal.
C3 University of Waterloo; Universidade do Minho
RP Univ Waterloo, Sch Comp Sci, Waterloo, ON N2T 3G1, Canada.
EM dberry@uwaterloo.ca
RI Carvalho, João Álvaro/B-6886-2011; Ramos, Isabel/D-5862-2012
OI Carvalho, João Álvaro/0000-0002-7223-1532; Ramos,
   Isabel/0000-0001-8035-4703
CR [Anonymous], 2000, FUTURE SOFTWARE ENG
   [Anonymous], 1997, IMAGES ORG
   [Anonymous], CAMBRIDGE U REPORTER
   Arbnor I., 1997, METHODOLOGY CREATING, V2nd
   Baecker R.M., 1993, Readings in Groupware and Computer Cooperative Supported Work, Assisting Human-Human Collaboration
   Bergman M., 2002, Requirements Engineering, V7, P152, DOI 10.1007/s007660200011
   Berry DM, 1998, IEEE SOFTWARE, V15, P26, DOI 10.1109/MS.1998.663780
   Boehm B, 2003, COMPUTER, V36, P33, DOI 10.1109/MC.2003.1185215
   Boehm B., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P74, DOI 10.1109/ICRE.1994.292400
   BOEHM BW, 1989, IEEE T SOFTWARE ENG, V15, P902, DOI 10.1109/32.29489
   Boehm BW., 1981, Software Engineering Economics
   Bolman L.G., 2013, Reframing organizations: Artistry, choice, and leadership, V5th
   BURKE WW, 1995, J MANAGE INQUIRY, V4, P158, DOI 10.1177/105649269542006
   Checkland P.Scholes., 1990, SOFT SYSTEMS METHODO
   CUMMINGS TG, 2000, ESSENTIALS ORG DEV C
   Dahlbom B., 1993, COMPUTERS CONTEXT PH
   Damasio A, 1999, FEELING WHAT HAPPENS
   Davis A.M., 1990, SOFTWARE REQUIREMENT
   DAVIS AM, 1994, IEEE SOFTWARE, V11, P12, DOI 10.1109/52.268949
   Davison R, 2002, COMMUN ACM, V45, P109
   DESOUZA CS, 2003, ACM INTERACTIONS, V10, P72
   DICKSON GW, 2000, INFORMATION TECHNOLO
   Dix A, 2004, HUM-COMPUT INTERACT
   Easterbrook S, 1996, SOFTWARE ENG J, V11, P31, DOI 10.1049/sej.1996.0004
   EASTERBROOK SM, 1992, SCW COOPERATION CONF
   Espejo R., 1996, ORG TRANSFORMATION L
   Esteves J., 2001, Communications of the AIS, V7, P1, DOI [10.17705/1CAIS.00708, DOI 10.17705/1CAIS.00708]
   FINKELSTEIN ACW, 1996, P 8 INT WORKSH SOFTW, V8, P2
   Finkelstein Anthony., 1993, Report of the Inquiry into the London Ambulance Service
   GAUSE DC, 2000, INT C REQ ENG ICRE 2
   Glass R.L., 1998, SOFTWARE RUNAWAYS
   GLASS RL, 1983, COMPUTING CATASTROPH
   Goguen J., 1994, REQUIREMENTS ENG SOC
   Goguen J., 1994, REQUIREMENTS ENG SOC, P165
   Goguen J., 1997, SOCIAL SCI TECHNICAL, P27
   GOGUEN JA, 1993, REQUIREMENTS ENG REC
   GREENWOOD R, 1993, ACAD MANAGE J, V36, P1052, DOI 10.5465/256645
   Guba E.G., 1994, COMPETING PARADIGMS, V1
   HAMMER M, 1990, HARVARD BUS REV, V68, P104
   HECKLER JC, 1979, PREVENTION YOUTHFUL
   HIRSCHHEIM R, 1995, INFORMATION SYSTEMS
   HOLTZBLATT K, 1998, CONTEXTUAL DESIGN MO
   Huff C., 2002, SIGCSE Bulletin, V34, P112, DOI 10.1145/543812.543842
   Iivari J, 1998, INFORM SYST RES, V9, P164, DOI 10.1287/isre.9.2.164
   JICK TD, 1995, ORGAN DYN, V24, P77
   Jones M.O., 1996, Studying organizational symbolism: What, how, why?
   Kafai Y., 1996, Constructionism in practice: Designing, thinking, and learning in a digital world
   Kotonya G., 1998, Requirements engineering
   Kotter J., 1996, Leading Change
   Kramer R.M., 1998, POWER INFLUENCE ORG
   Krumbholz M, 2001, INFORM SYST, V26, P185, DOI 10.1016/S0306-4379(01)00016-3
   Krumbholz M, 2000, J INF TECHNOL-UK, V15, P267, DOI 10.1080/02683960010008962
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Lutz RR, 2004, IEEE SOFTWARE, V21, P19, DOI 10.1109/MS.2004.1270757
   Lyytinen K, 1998, INFORM SYST RES, V9, P233, DOI 10.1287/isre.9.3.233
   Macaulay L.A., 1996, Requirements engineering
   Marion R., 1999, EDGE ORG CHAOS COMPL
   MARKUS ML, 1983, POWER POLITICS MIS I, P430
   MARTINSON R, 1974, PUBLIC INTEREST, P22
   NORMAN DA, 2002, ACM INTERACTIONS, V9, P36
   Palmer I., 2000, THINKING MANAGEMENT
   Papert S., 1990, CONSTRUCTIONIST LEAR
   PARKER S, 1998, WALL JOB WORK DESIGN
   RAMOS IMP, 2000, THESIS U MINHO GUIMA
   Robertson S, 2012, Mastering the requirements process: getting requirements right
   Robinson WN, 1998, COMMUN ACM, V41, P95, DOI 10.1145/274946.274962
   Santos I., 1998, Requirements Engineering, V3, P138, DOI 10.1007/BF02919974
   SANTOS I, 2002, 8 INT WORKSH REQ ENG
   Schach StephenR., 2002, Object-oriented and classical software engineering
   Schwandt T.A., 2000, HDB QUALITATIVE RES, V2nd, P189, DOI DOI 10.2989/JCAMH.2008.20.1.5.490
   Siddiqi J, 1996, IEEE SOFTWARE, V13, P15, DOI 10.1109/MS.1996.506458
   SMITH ML, 1977, AM PSYCHOL, V32, P752, DOI 10.1037/0003-066X.32.9.752
   SNIZEK WE, 1995, COMMUN ACM, V38, P15, DOI 10.1145/223248.223252
   SOMMERVILLE I, 1997, REQUIREMENTS ENG
   Spector P.E., 1997, JOB SATISFACTION APP
   Swan J, 1999, EUR J INFORM SYST, V8, P284, DOI 10.1057/palgrave.ejis.3000336
   VANLAMSWEERDE A, 2000, P 22 INT C SOFTW ENG
NR 77
TC 25
Z9 27
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY 15
PY 2005
VL 47
IS 7
BP 479
EP 495
DI 10.1016/j.infsof.2004.09.014
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 923AC
UT WOS:000228880000003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cho, HJ
   Min, JK
   Chung, CW
AF Cho, HJ
   Min, JK
   Chung, CW
TI An adaptive indexing technique using spatio-temporal query workloads
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE spatio-temporal databases; indexing technique; R-trees; timestamp and
   interval queries
AB Many spatio-temporal access methods, such as the HR-tree, the 3DR-tree, and the MV3R-tree, have been proposed for timestamp and interval queries. However, these access methods have the following problems: the poor performance of the 3DR-tree for timestamp queries, the huge size and the poor performance of the HR-tree for interval queries, and the large size and the high update cost of the MV3R-tree. We address these problems by proposing an adaptive partitioning technique called the Adaptive Partitioned R-tree (APR-tree) using workloads with timestamp and interval queries. The APR-tree adaptively partitions the time domain using query workloads. Since the time domain of the APR-tree is automatically fitted to query workloads, the APR-tree outperforms the other access methods for various query workloads. The size of the APR-tree is on the average 1.3 times larger than that of the 3DR-tree which has the smallest size. The update cost of the APR-tree is on the average similar to that of the 3DR-tree which has the smallest update cost. (C) 2003 Elsevier B.V. All rights reserved.
C1 Korea Adv Inst Sci & Technol, Div Comp Sci, Dept Elect Engn & Comp Sci, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Cho, HJ (corresponding author), Korea Adv Inst Sci & Technol, Div Comp Sci, Dept Elect Engn & Comp Sci, 373-1 Kusong Dong, Taejon 305701, South Korea.
EM hjcho@islab.kaist.ac.kr; jkmin@islab.kaist.ac.kr;
   chungcw@islab.kaist.ac.kr
RI Chung, Chin-Wan/C-2029-2011
CR AGARWAL PK, 2000, ACM PODS
   [Anonymous], 1984, ACM SIGMOD
   BECKMANN N, 1990, ACM SIGMOD
   Kamel I., 1993, CIKM
   KOLLIOS G, 2001, TDKE, V13
   KOLLIOS G., 1999, ACM PODS
   NASCIMENTO MA, 1999, SPATIOTEMPORAL DATAB
   NASCIMENTO MA, 1998, HIST R TREES
   PFOSER D., 2000, VLDB
   Saltenis S., 2000, ACM SIGMOD
   TAO Y, 2001, SSDBM
   Tao Y., 2001, VLDB
   THEODORIDIS Y, 1996, ACM PODS
   THEODORIDIS Y, 2000, TDKE, V12
   THEODORIDIS Y, 1999, SSD
   VAZIRGIANNIS M, 1998, MULTIMEDIA SYSTEMS, V6
   [No title captured]
NR 17
TC 4
Z9 4
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 15
PY 2004
VL 46
IS 4
BP 229
EP 241
DI 10.1016/j.infsof.2003.07.001
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 776CX
UT WOS:000189098400003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tan, HBK
   Zhao, Y
AF Tan, HBK
   Zhao, Y
TI Automated elicitation of functional dependencies from source codes of
   database transactions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE database reverse engineering; functional dependency; design recovery;
   software verification; program analysis
AB Enforcement of data dependency is a major component in any database application. Functional dependency (FD) is an important data dependency. Due to the nature of software development and maintenance and the limitation of database management system (DBMS) in handling FD enforcement, many functional dependencies are enforced in the transactions that update the database, but not through DBMS. It is very difficult and time consuming to elicit functional dependencies from transactions manually for the reengineering, verification and maintenance of database applications. With the use of program analysis, this paper proposes a novel approach for the automated elicitation of functional dependencies from source codes of transactions that update the database. The approach is based on detecting program path patterns for enforcing FD. (C) 2003 Elsevier B.V. All rights reserved.
C1 Nanyang Technol Univ, Sch Elect & Elect Engn, Singapore 639798, Singapore.
C3 Nanyang Technological University
RP Nanyang Technol Univ, Sch Elect & Elect Engn, Block S2,Nanyang Ave, Singapore 639798, Singapore.
EM ibktan@ntu.edu.sg
RI Tan, Hee Beng Kuan/A-5147-2011
CR AGRAWAL R, 1993, IEEE T KNOWL DATA EN, V5, P914, DOI 10.1109/69.250074
   ANDERSSON M, 1995, INT J COOP INF SYST, V4, P259, DOI 10.1142/S0218843095000111
   [Anonymous], 1991, KNOWLEDGE DISCOVERY
   [Anonymous], 1983, The theory of relational databases
   ANWAR TM, 1992, P IEEE 8 INT C DAT E
   BLAKELEY JA, 1989, ACM T DATABASE SYST, V14, P369, DOI 10.1145/68012.68015
   Casanova M.A., 1982, P ACM S PRINC DAT SY, P171, DOI [10.1145/588111.588141, DOI 10.1145/588111.588141]
   Gravetter FJ., 2000, STAT BEHAV SCI
   HAINAUT JL, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P136, DOI 10.1109/WCRE.1995.514702
   Henrard J, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P11, DOI 10.1109/CSMR.2001.914963
   KANTOLA M, 1992, INT J INTELL SYST, V7, P591, DOI 10.1002/int.4550070703
   Muchnick StevenS., 1981, PROGRAM FLOW ANAL TH
   Orman LV, 1998, IEEE T KNOWL DATA EN, V10, P328, DOI 10.1109/69.683760
   PETIT JM, 1994, P INT C ENT REL APPR, P369
   SHEARD T, 1989, ACM T DATABASE SYST, V14, P322, DOI 10.1145/68012.68014
   SIGNORE O, 1994, P 13 INT C ERA MANCH, P387
   Tan HBK, 2002, IEEE T KNOWL DATA EN, V14, P825, DOI 10.1109/TKDE.2002.1019216
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Wilhelm R., 1995, Compiler Design
NR 19
TC 9
Z9 9
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB 1
PY 2004
VL 46
IS 2
BP 109
EP 117
DI 10.1016/S0950-5849(03)00113-7
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 763PD
UT WOS:000188094000003
DA 2024-07-18
ER

PT J
AU Liu, C
   Cai, RF
   Zhou, YQ
   Chen, X
   Hu, HB
   Yan, M
AF Liu, Chao
   Cai, Runfeng
   Zhou, Yiqun
   Chen, Xin
   Hu, Haibo
   Yan, Meng
TI Understanding the implementation issues when using deep learning
   frameworks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Deep learning; Implementation issues; Stack overflow; Empirical study
AB Context: Deep Learning (DL) frameworks like TensorFlow can help developers implement DL applications (e.g., computer vision) faster and easier. When using DL frameworks, developers encountered a large number of questions and posted them on Stack Overflow (SO). Objective: The goal of this paper is to conduct a comprehensive empirical study on the SO questions, summarize the implementation issues, and suggest future opportunities.Methods: This paper focuses on three DL frameworks (i.e., TensorFlow, PyTorch, and Theano), groups 2,401 relevant SO questions into various implementation issues, and constructs a taxonomy. We also analyze the popularity and difficulty of these issues under the taxonomy.Results: For the identified various implementation issues, we constructed a taxonomy consisting of seven major categories with 63 subcategories. Our analysis reveals that 91.7% of questions are related to the implementation categories of data processing, model setting, model training, and model prediction. Developers frequently address the remaining three categories (i.e., Model evaluation, runtime environment, and visualization), where runtime environment is the most difficult category. Based on empirical findings, we provide some suggestions for future research. Conclusion: In this paper, we summarized the issues of DL implementation and proposed corresponding opportunities for future study. We expect this paper to help developers and researchers understand these issues and design better tools to improve the productivity of DL implementation.
C1 [Liu, Chao; Cai, Runfeng; Zhou, Yiqun; Chen, Xin; Hu, Haibo; Yan, Meng] Chongqing Univ, Sch Big Data & Software Engn, Chongqing 401331, Peoples R China.
C3 Chongqing University
RP Chen, X (corresponding author), Chongqing Univ, Sch Big Data & Software Engn, Chongqing 401331, Peoples R China.
EM liu.chao@cqu.edu.cn; crf@cqu.edu.cn; zhouyiqun@cqu.edu.cn;
   xinchen@cqu.edu.cn; haibo.hu@cqu.edu.cn; mengy@cqu.edu.cn
RI Liu, Chao/JXN-7672-2024; Hu, Haibo/AAS-5704-2020; Cai,
   Runfeng/KIG-4703-2024
OI Liu, Chao/0000-0002-8283-9146; Hu, Haibo/0000-0002-9008-2112; Cai,
   Runfeng/0000-0001-8631-2563; Yan, Meng/0000-0002-9538-9121
FU National Key R&D Plan of Ministry of Science and Technology of China
   [2020YFC2007902]; National Nature Science Foundation of China [62202074,
   62372071]; China Postdoctoral Science Foundation [2022M710519]; Postdoc
   Foundation of Chongqing, China [2021LY23]; Venture & Innovation Support
   Program for Chongqing Overseas Returnees, China [cx2019106]; Chongqing
   Technology Innovation and Application Development Special Key Project,
   China [cstc2019jscx-fxydX0054]
FX This research/project is supported by: the National Key R&D Plan of
   Ministry of Science and Technology of China (2020YFC2007902) ; the
   National Nature Science Foundation of China (62202074, 62372071) ; China
   Postdoctoral Science Foundation (2022M710519) ; the Postdoc Foundation
   of Chongqing, China (2021LY23) ; the Venture & Innovation Support
   Program for Chongqing Overseas Returnees, China (cx2019106) ; and
   Chongqing Technology Innovation and Application Development Special Key
   Project, China (cstc2019jscx-fxydX0054) .
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   Alshangiti Moayad, 2019, INT SYMP EMP SOFTWAR, P117, DOI DOI 10.1109/esem.2019.8870187
   Anderson Ashton, 2012, P 18 ACM SIGKDD INT, DOI DOI 10.1145/2339530.2339665
   Bagherzadeh M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P432, DOI 10.1145/3338906.3338939
   Bahrampour S, 2016, Arxiv, DOI arXiv:1511.06435
   Bergstra J., 2010, Proc. Python Sci. Comput. Conf., V1, P3
   Chen CY, 2015, IEEE I CONF COMP VIS, P2722, DOI 10.1109/ICCV.2015.312
   Chen ZP, 2021, PROC INT CONF SOFTW, P674, DOI 10.1109/ICSE43902.2021.00068
   Chen ZP, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P750, DOI 10.1145/3368089.3409759
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Deng ZY, 2022, EUR CON SFTWR MTNCE, P396, DOI 10.1109/SANER53432.2022.00055
   Du XT, 2023, IEEE T DEPEND SECURE, V20, P2696, DOI 10.1109/TDSC.2022.3152239
   Dye J., 2000, The Qualitative Report, V4, P1
   Erickson BJ, 2017, J DIGIT IMAGING, V30, P400, DOI 10.1007/s10278-017-9965-6
   Giray G, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111031
   Han JX, 2020, PROC IEEE INT CONF S, P868, DOI 10.1109/ICSME46990.2020.00116
   Han JX, 2020, EMPIR SOFTW ENG, V25, P2694, DOI 10.1007/s10664-020-09819-6
   Hinton G, 2012, IEEE SIGNAL PROC MAG, V29, P82, DOI 10.1109/MSP.2012.2205597
   Hinton GE, 2006, NEURAL COMPUT, V18, P1527, DOI 10.1162/neco.2006.18.7.1527
   Hirschberg J, 2015, SCIENCE, V349, P261, DOI 10.1126/science.aaa8685
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jing HY, 2000, 6TH APPLIED NATURAL LANGUAGE PROCESSING CONFERENCE/1ST MEETING OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE AND PROCEEDINGS OF THE ANLP-NAACL 2000 STUDENT RESEARCH WORKSHOP, P310
   Ketkar N., 2021, Deep Learning with Python, P27, DOI [10.1007/978-1-4842-5364-9_2, DOI 10.1007/978-1-4842-5364-9_2]
   Kim M, 2016, PROC INT CONF SOFTW, P96, DOI 10.1145/2884781.2884783
   Kou BN, 2022, IEEE WORK CONF MIN S, P247, DOI 10.1145/3524842.3528487
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Lee SR, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P926, DOI 10.1145/3106237.3117776
   Liu C., 2021, ACM Trans. Softw. Eng. Methodol. (TOSEM), V31, P1
   Liu C., 2022, Replication package of codematcher demo
   Liu C, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3477535
   Liu C, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3480027
   Liu JK, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09917-5
   Liu JK, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P1, DOI 10.1145/3377815.3381377
   Liu L, 2018, INT CON DISTR COMP S, P1258, DOI 10.1109/ICDCS.2018.00125
   Lopez A, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1380584.1380586
   MongoDB, 2022, MongoDB official website
   Petersen J, 2019, LECT NOTES COMPUT SC, V11765, P806, DOI 10.1007/978-3-030-32245-8_89
   Pouyanfar S, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3234150
   Quo QY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P822, DOI 10.1109/ASE.2019.00080
   Sangaroonsilp P, 2023, INFORM SOFTWARE TECH, V157, DOI 10.1016/j.infsof.2023.107162
   Shams S, 2017, INT CON DISTR COMP S, P1389, DOI 10.1109/ICDCS.2017.259
   Shanbhag Shriram, 2022, EASE 2022: The International Conference on Evaluation and Assessment in Software Engineering 2022, P150, DOI 10.1145/3530019.3530035
   StackExchange, 2022, Data structure for Stack Overflow post
   StackExchange, 2021, The archived dataset of Stack Overflow
   StackOverflow, 2022, Meaning of the closed questions in Stack Overflow posts
   Tan X, 2022, PROC INT CONF SOFTW, P86, DOI 10.1145/3510003.3510199
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Voulodimos A, 2018, COMPUT INTEL NEUROSC, V2018, DOI 10.1155/2018/7068349
   Xie WK, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1015, DOI 10.1145/3368089.3409731
   Yang C, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P139, DOI 10.1145/3463274.3463333
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Yang YM, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3505243
   Zhang N, 2022, PROC INT CONF SOFTW, P1970, DOI 10.1145/3510003.3510131
   Zhang TY, 2019, PROC INT SYMP SOFTW, P104, DOI 10.1109/ISSRE.2019.00020
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
   Zhang ZJ, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P238, DOI 10.1109/ICSE-SEIP52600.2021.00033
   Zhu WH, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10180-z
NR 59
TC 0
Z9 0
U1 4
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2024
VL 166
AR 107367
DI 10.1016/j.infsof.2023.107367
EA NOV 2023
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CC4O2
UT WOS:001123040100001
DA 2024-07-18
ER

PT J
AU Chueca, J
   Verón, J
   Font, J
   Pérez, F
   Cetina, C
AF Chueca, Jorge
   Veron, Javier
   Font, Jaime
   Perez, Francisca
   Cetina, Carlos
TI The consolidation of game software engineering: A systematic literature
   review of software engineering for industry-scale computer games
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Computer games; Video games; Game software engineering; Systematic
   literature review; SLR; Industry -scale
ID EMPIRICAL-RESEARCH; PERSPECTIVE
AB Context: Game Software Engineering (GSE) is a branch of Software Engineering (SE) that focuses on the development of video game applications. In past years, GSE has achieved enough volume, differences from traditional software engineering, and interest by the community to be considered an independent scientific domain, veering out from traditional SE.Objective: This study evaluates the current state of the art in software engineering for industry-scale computer games identifying gaps and consolidating the magnitude and growth of this field. Method: A Systematic Literature Review is performed following best practices to ensure the relevance of the studies included in the review. We analyzed 98 GSE studies to extract the current intensity, topics, methods, and quality of GSE.Results: The GSE research community has been growing over the years, producing over four times more research than before the previous GSE survey. However, this community is still very dispersed, with no main venues holding most of the GSE scientific studies. A broader range of topics is covered in this area, evolving towards those of a mature field such as architecture and design. Also, the reviewed studies employ more elaborated empirical research methods, even though the study reports need to be more rigorous in sections related to the critical examination of the work.Conclusion: The results of the SLR lead to the identification of 13 potential future research directions for this domain. GSE is an independent, mature, and growing field that presents new ways of software creation where the gap between industry and academia is narrowing. Video games present themselves as powerful tools to push the boundaries of software knowledge.
C1 [Chueca, Jorge; Veron, Javier; Font, Jaime; Perez, Francisca; Cetina, Carlos] Univ San Jorge, SVIT Res Grp, Zaragoza, Spain.
   [Cetina, Carlos] UCL, London, England.
C3 Universidad San Jorge; University of London; University College London
RP Chueca, J (corresponding author), Univ San Jorge, SVIT Res Grp, Zaragoza, Spain.
EM jchueca@usj.es; jveron@usj.es; jfont@usj.es; mfperez@usj.es;
   ccetina@usj.es
RI Cetina, Carlos/P-8682-2017
OI Cetina, Carlos/0000-0001-8542-5515; Chueca, Jorge/0000-0002-0766-071X
FU Ministry of Economy and Competitiveness (MINECO) through the Spanish
   National R+D+i Plan; ERDF funds under the Project VARIATIVA
   [PID2021-128695OB-I00]; Gobierno de Aragn (Spain)
FX This work was supported in part by the Ministry of Economy and
   Competitiveness (MINECO) through the Spanish National R+D+i Plan and
   ERDF funds under the Project VARIATIVA under Grant PID2021-128695OB-I00,
   and in part by the Gobierno de Aragon (Spain) (Research Group S05_20D) .
CR A. for Computing Machinery, 2012, The 2012 ACM computing classification system
   Abrahao S, 2016, LECT NOTES COMPUT SC, V10027, P713, DOI 10.1007/978-3-319-49094-6_60
   Ahmad NB, 2017, ENTERTAIN COMPUT, V23, P1, DOI 10.1016/j.entcom.2017.08.001
   Ahmed F, 2017, ENTERTAIN COMPUT, V21, P1, DOI 10.1016/j.entcom.2017.04.001
   Aleem Saiqa, 2016, Journal of Software Engineering Research and Development, V4, DOI 10.1186/s40411-016-0032-7
   Aleem S, 2016, ENTERTAIN COMPUT, V17, P55, DOI 10.1016/j.entcom.2016.08.004
   Ali MS, 2010, INFORM SOFTWARE TECH, V52, P871, DOI 10.1016/j.infsof.2010.05.003
   Almeida MSO, 2013, LECT NOTES COMPUT SC, V8215, P17, DOI 10.1007/978-3-642-41106-9_3
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   Ampatzoglou A, 2010, INFORM SOFTWARE TECH, V52, P888, DOI 10.1016/j.infsof.2010.05.004
   Barreto FM, 2014, P 24 ANN INT C COMPU, P106
   Barreto FM, 2021, COMPUT INFORM, V40, P216, DOI 10.31577/cai_2021_1_216
   Best M.J, 2013, 5 USENIX WORKSH HOT
   Boaventura FMB, 2017, INT J COMPUT GAMES T, V2017, DOI 10.1155/2017/9626710
   Borowa K, 2021, IEEE SOFTWARE, V38, P65, DOI 10.1109/MS.2021.3103249
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Bryant B, 2021, ICISSP: PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON INFORMATION SYSTEMS SECURITY AND PRIVACY, P217, DOI 10.5220/0010302002170225
   Bryant B, 2021, COMPUT NETW, V192, DOI 10.1016/j.comnet.2021.108128
   Calero C, 2021, SUSTAIN COMPUT-INFOR, V32, DOI 10.1016/j.suscom.2021.100603
   Callele D, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P240, DOI 10.1109/RE.2005.58
   Chen L., 2016, 2016 INT C COMP NETW, P1
   Cheng MT, 2015, J COMPUT EDUC, V2, P353, DOI 10.1007/s40692-015-0039-9
   Colanzi TE, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106372
   Daneva M, 2014, INT REQUIR ENG CONF, P3, DOI 10.1109/RE.2014.6912242
   de Oliveira GW, 2011, IEEE SYS MAN CYBERN, P838, DOI 10.1109/ICSMC.2011.6083757
   Denault A, 2011, IEEE SOFTWARE, V28, P38, DOI 10.1109/MS.2011.88
   Ding S., 2009, 2009 INT C COMP INT, P1
   do Prado EF, 2015, P BRAZ SYMP SOFTW, P130, DOI 10.1109/SBCARS.2015.24
   Domingo A, 2021, LECT NOTES COMPUT SC, V12751, P483, DOI 10.1007/978-3-030-79382-1_29
   Domingo A, 2020, LECT NOTES COMPUT SC, V12127, P353, DOI 10.1007/978-3-030-49435-3_22
   Donkervliet J, 2021, INT CON DISTR COMP S, P126, DOI 10.1109/ICDCS51616.2021.00021
   Drachen A., 2009, MINDTREK C EV LIF UB, P182, DOI [10.1145/1621841.1621875, DOI 10.1145/1621841.1621875]
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Edholm H, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P43, DOI 10.1109/ICSE-SEIP.2017.18
   El-Nasr MS, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P9, DOI 10.1109/ICSE-Companion.2019.00025
   Engström H, 2018, COMPUT ENTERTAIN, V16, DOI 10.1145/3276321
   Engström H, 2018, ENTERTAIN COMPUT, V27, P10, DOI 10.1016/j.entcom.2018.02.008
   Fatima A, 2018, 2018 IEEE GAMES, ENTERTAINMENT, MEDIA CONFERENCE (GEM), P288, DOI 10.1109/GEM.2018.8516498
   Felderer M., 2020, CONT EMPIRICAL METHO
   Fernandez Adrian, 2012, Human-Centered Software Engineering. Proceedings of the 4th International Conference, HCSE 2012, P307, DOI 10.1007/978-3-642-34347-6_22
   Festa D, 2017, CONSUM COMM NETWORK, P737, DOI 10.1109/CCNC.2017.7983226
   Fung A., 2017, Mobile Gaming in Asia: Politics, Culture and Emerging Technologies, P91
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Geisler B.J, 2021, Evaluation of Novel Approaches To Software Engineering, P336
   Geisler BJ, 2019, IEEE SOUTHEASTCON, DOI 10.1109/southeastcon42311.2019.9020369
   Ghoreshi M, 2016, INFORM SOFTWARE TECH, V78, P1, DOI 10.1016/j.infsof.2016.05.005
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Salazar MG, 2012, 2012 17TH INTERNATIONAL CONFERENCE ON COMPUTER GAMES (CGAMES), P81, DOI 10.1109/CGames.2012.6314556
   Sánchez JLG, 2011, LECT NOTES COMPUT SC, V6949, P519, DOI 10.1007/978-3-642-23768-3_72
   Sánchez JLG, 2012, BEHAV INFORM TECHNOL, V31, P1033, DOI 10.1080/0144929X.2012.710648
   Guardiola E, 2016, 13TH INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTER ENTERTAINMENT TECHNOLOGY (ACE 2016), DOI 10.1145/3001773.3001791
   Hasegawa Isamu, 2019, Formal Methods and Software Engineering. 21st International Conference on Formal Engineering Methods, ICFEM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11852), P52, DOI 10.1007/978-3-030-32409-4_4
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   He Y, 2017, ACM T GRAPHIC, V36, DOI 10.1145/3072959.3073648
   Hullett K, 2012, INT SYMP EMP SOFTWAR, P89, DOI 10.1145/2372251.2372265
   Hullett K, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P940, DOI 10.1145/1985793.1985952
   Iftikhar S, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P426, DOI 10.1109/MODELS.2015.7338274
   Igawa Nao, 2020, 2020 9th International Congress on Advanced Applied Informatics (IIAI-AAI), P512, DOI 10.1109/IIAI-AAI50415.2020.00107
   Istance Howell., 2010, P 2010 S EYE TRACKIN, P323, DOI DOI 10.1145/1743666.1743740
   Jacob LB, 2014, BRAZIL SYMP GAME DIG, P41, DOI 10.1109/SBGAMES.2014.33
   Jorgensen K, 2012, GAMES CULT, V7, P142, DOI 10.1177/1555412012440315
   Kanode CM, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P260, DOI 10.1109/ITNG.2009.74
   Kasurinen Jussi, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P1, DOI 10.1007/978-3-319-05843-6_1
   Kasurinen J, 2014, P 8 ACM IEEE INT S E, P1
   Kasurinen J., 2013, Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering (EASE), Porto de Galinhas, Brazil, P36, DOI DOI 10.1145/2460999.2461004
   Kasurinen J, 2016, COMPUTER SYSTEMS AND TECHNOLOGIES, COMPSYSTECH'16, P33, DOI 10.1145/2983468.2983501
   Kasurinen J, 2017, INT WORKS EMERG TREN, P15, DOI 10.1109/WETSoM.2017.3
   Kasurinen J, 2017, INT J INF TECHNOL SY, V10, P107, DOI 10.4018/IJITSA.2017010106
   Kenzel M, 2018, ACM T GRAPHIC, V37, DOI 10.1145/3197517.3201374
   Kessing J., 2012, WORKSH PROC CONT GEN
   Kica A, 2016, 2016 INTERNATIONAL CONFERENCE ON COLLABORATION TECHNOLOGIES AND SYSTEMS (CTS), P128, DOI [10.1109/CTS.2016.37, 10.1109/CTS.2016.0039]
   Kitchenham B, 2009, P 5 INT C PRED MOD S, P1, DOI DOI 10.1145/1540438.1540444
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham B.A., 2015, EVIDENCE BASED SOFTW, V4
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kohwalter TC, 2017, BRAZIL SYMP GAME DIG, P66, DOI 10.1109/SBGames.2017.00016
   Kulik J, 2021, 16 INT C FDN DIG GAM, P1
   Lewis C.L., 2011, PUBLIC OPINION CLASS, P1
   Lewis C, 2011, IEEE SOFTWARE, V28, P53, DOI 10.1109/MS.2011.87
   Liu JW, 2019, J SYST SOFTWARE, V154, P79, DOI 10.1016/j.jss.2019.04.057
   Lynch S, 2019, NHT'19: PROCEEDINGS OF THE 8TH INTERNATIONAL WORKSHOP ON NARRATIVE AND HYPERTEXT, P9, DOI 10.1145/3345511.3349284
   MacCormick D, 2019, PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON THE FOUNDATIONS OF DIGITAL GAMES (FDG'19), DOI 10.1145/3337722.3337740
   Mao K, 2017, J SYST SOFTWARE, V126, P57, DOI 10.1016/j.jss.2016.09.015
   Marin-Lora Carlos, 2020, Trends and Innovations in Information Systems and Technologies. Advances in Intelligent Systems and Computing (AISC 1159), P494, DOI 10.1007/978-3-030-45688-7_50
   Marin-Lora Carlos, 2020, Trends and Innovations in Information Systems and Technologies. Advances in Intelligent Systems and Computing (AISC 1159), P369, DOI 10.1007/978-3-030-45688-7_38
   Marin-Lora Carlos, 2021, Lecture Notes in Networks and Systems, V327, P169
   McDaniel R, 2015, IEEE INT PROF COMMUN
   McKenzie T, 2019, CHI PLAY'19: EXTENDED ABSTRACTS OF THE ANNUAL SYMPOSIUM ON COMPUTER-HUMAN INTERACTION IN PLAY, P181, DOI 10.1145/3341215.3354647
   McShaffry M., 2009, GAME CODING COMPLETE, V3rd
   Miller J.L., 2009, ANN WORK NETW, P1
   Mirza-Babaei P., 2016, Proceedings of the 20th International Academic Mindtrek Conference, P366, DOI DOI 10.1145/2994310.2994364
   Mirza-Babaei P, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376831
   Mizutani WK, 2021, ENTERTAIN COMPUT, V38, DOI 10.1016/j.entcom.2021.100421
   Mizutani WK, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P58, DOI 10.1109/ICSA47634.2020.00014
   Mohebali A., 2014, INT C INT SOFTW METH, P149
   Morisaki S, 2019, 2019 20TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P484, DOI [10.1109/SNPD.2019.8935822, 10.1109/snpd.2019.8935822]
   Murphy-Hill E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1, DOI 10.1145/2568225.2568226
   Musil J., 2010, Tech. Rep., P13
   Nandhakumar J, 2013, INFORM SYST RES, V24, P933, DOI 10.1287/isre.2013.0482
   Nummenmaa Timo, 2009, Proceedings of the 2009 Fourth South-East European Workshop on Formal Methods. Formal Methods for Web Services, Formal Methods for Agent-Based Systems (SEEFM 2009), P60, DOI 10.1109/SEEFM.2009.15
   Nummenmaa Timo, 2013, P 2013 INT WORKSH PR, P11
   Nunnari F, 2018, LECT NOTES COMPUT SC, V10850, P435, DOI 10.1007/978-3-319-95270-3_37
   O'Hagan AO., 2014, Proceedings, 21st European Conference on Systems, Software, and Services Process Improvement (EuroSPI 2014), CCIS, V425, P182
   Olsson T., 2014, P 10 INT ACM SIGSOFT, P113
   Olsson T, 2015, 2015 IEEE/ACM 4th International Workshop on Games and Software Engineering, P8, DOI 10.1109/GAS.2015.10
   Papaloukas S, 2009, 13TH PANHELLENIC CONFERENCE ON INFORMATICS, PROCEEDINGS, P202, DOI 10.1109/PCI.2009.14
   Pascarella L, 2018, IEEE WORK CONF MIN S, P392, DOI [10.1145/3196398.3196423, 10.1145/3196398.3196418]
   Perez F, 2021, IEEE Trans. Softw. Eng., P1
   Latorre OP, 2016, ANALISI, P15, DOI 10.7238/a.v0i54.2818
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petrillo F., 2010, Proceedings, 28th ACM International Conference on Design of Communication (SIGDOC 2010), ACM Digital Library, Brazil, September, P9
   Politowski C, 2022, 2022 IEEE/ACM 6TH INTERNATIONAL WORKSHOP ON GAMES AND SOFTWARE ENGINEERING (GAS 2022), P37, DOI 10.1145/3524494.3527627
   Politowski C, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATION OF SOFTWARE TEST (AST 2021), P90, DOI 10.1109/AST52587.2021.00018
   Politowski C, 2021, INFORM SOFTWARE TECH, V134, DOI 10.1016/j.infsof.2021.106538
   Politowski C, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110846
   Politowski C, 2020, IEEE WORK CONF MIN S, P553, DOI 10.1145/3379597.3387486
   Politowski C, 2016, 2016 IEEE/ACM 5TH INTERNATIONAL WORKSHOP ON GAMES AND SOFTWARE ENGINEERING (GAS), P22, DOI [10.1145/2896958.2896960, 10.1109/GAS.2016.012]
   Ramadan R, 2013, INT C ADV COMP SCI I, P95, DOI 10.1109/ICACSIS.2013.6761558
   Rezin R, 2018, INT CON ADV INFO NET, P826, DOI 10.1109/AINA.2018.00122
   Sa'dyah H, 2018, 2018 IEEE 3RD INTERNATIONAL CONFERENCE ON COMMUNICATION AND INFORMATION SYSTEMS (ICCIS), P237, DOI 10.1109/ICOMIS.2018.8644760
   Sagi BR, 2017, QUAL ENG, V29, P745, DOI 10.1080/08982112.2017.1300919
   Scacchi W, 2011, IFIP ADV INF COMM TE, V365, P62
   Scarbrough H., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P4952, DOI 10.1109/HICSS.2012.665
   Schmalz M, 2014, P ANN HICSS, P4325, DOI 10.1109/HICSS.2014.534
   Seitz KA, 2019, ACM T GRAPHIC, V38, DOI 10.1145/3355089.3356554
   Shuermans S., 2019, Global developer population report 2019
   Srinivasan A, 2020, IEEE T ENG MANAGE, V67, P266, DOI 10.1109/TEM.2018.2881560
   Stojanovic V., 2013, 2013 17th International Conference on Information Visualisation, P539, DOI 10.1109/IV.2013.73
   Suznjevic M, 2013, MULTIMEDIA SYST, V19, P231, DOI 10.1007/s00530-012-0269-x
   Sweetser P, 2012, P 8 AUSTR C INT ENT, P1
   Tong XE, 2021, COMPUT HUM BEHAV REP, V3, DOI 10.1016/j.chbr.2021.100077
   Truelove A, 2021, PROC INT CONF SOFTW, P736, DOI 10.1109/ICSE43902.2021.00073
   Ullmann GC, 2022, 2022 IEEE/ACM 6TH INTERNATIONAL WORKSHOP ON GAMES AND SOFTWARE ENGINEERING (GAS 2022), P9, DOI 10.1145/3524494.3527623
   Vargas J.A., 2014, P 18 INT C EV ASS SO, P1
   Vaudour Fanny., 2020, GLOBAL BUSINESS ORG, V39, P31, DOI DOI 10.1002/JOE.21982
   Viana R, 2014, BRAZIL SYMP GAME DIG, P51, DOI 10.1109/SBGAMES.2014.16
   Vickers S, 2010, PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTER ENTERTAINMENT TECHNOLOGY (ACE 2010), P36
   Wang AI, 2015, LECT NOTES COMPUT SC, V9353, P272, DOI 10.1007/978-3-319-24589-8_21
   Washburn M, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P280, DOI 10.1145/2889160.2889253
   Wijman T., 2021, GAMES MARKET 2021 YE
   Winget MeganA., 2011, Proceedings of the 11th Annual International ACM/IEEE Joint Conference on Digital Libraries, JCDL '11, P29, DOI DOI 10.1145/1998076.1998083
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Xiaofang Zhong, 2021, IMMS 2021: 2021 4th International Conference on Information Management and Management Science, P117, DOI 10.1145/3485190.3485209
   Xu H, 2009, IITSI 2009: SECOND INTERNATIONAL SYMPOSIUM ON INTELLIGENT INFORMATION TECHNOLOGY AND SECURITY INFORMATICS, P59, DOI 10.1109/IITSI.2009.20
   Yacoub A, 2020, SIMUL-T SOC MOD SIM, V96, P881, DOI 10.1177/0037549720946107
   Yanez-Gomez R, 2019, MULTIMED TOOLS APPL, V78, P4937, DOI 10.1007/s11042-018-6593-1
   Yannakakis G. N., 2018, Artificial Intelligence and Games, P259, DOI 10.1007/978-3-319-63519-46
   Zagieboylo D, 2017, P 8 ACM SPEC INT C P, P201
   Zeleke Y, 2019, PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON THE FOUNDATIONS OF DIGITAL GAMES (FDG'19), DOI 10.1145/3337722.3337757
   Zhu M, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3365000
   Zulfa Nafa, 2020, 2020 International Seminar on Application for Technology of Information and Communication (iSemantic), P543, DOI 10.1109/iSemantic50169.2020.9234220
NR 156
TC 0
Z9 0
U1 2
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2024
VL 165
AR 107330
DI 10.1016/j.infsof.2023.107330
EA SEP 2023
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U5RP3
UT WOS:001085377400001
DA 2024-07-18
ER

PT J
AU Cai, YF
   Kazman, R
AF Cai, Yuanfang
   Kazman, Rick
TI Software design analysis and technical debt management based on design
   rule theory
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architecture; Software design; Design debt; Automated analysis;
   Industrial case studies
ID CODE-SMELLS; IMPACT; DEPENDENCIES; SYSTEMS; METRICS; MODEL; UML
AB In this paper we reflect on our decade-long journey of creating, evolving, and evaluating a number of software design concepts and technical debt management technologies. These include: a novel maintainability metric, a new model for representing design information, a suite of design anti-patterns, and a formalized model of design debt. All of these concepts are rooted in options theory, and they all share the objective of helping a software project team quantify and visualize major design principles, and address the very real maintainability challenges faced by their organizations in practice. The evolution of our research has been propelled by our continuous interactions with industrial collaborators. For each concept, technology, and supporting tool, we embarked on an ambitious program of empirical validation-in "the lab", with industry partners, and with open source projects. We reflect on the successes of this research and on areas where significant challenges remain. In particular, we observe that improved software design education, both for students and professional developers, is the prerequisite for our research and technology to be widely adopted. During this journey, we also observed a number of gaps: between what we offer in research and what practitioners need, between management and development, and between debt detection and debt reduction. Addressing these challenges motivates our research moving forward.
C1 [Cai, Yuanfang] Drexel Univ, Dept Comp Sci, Philadelphia, PA 19104 USA.
   [Kazman, Rick] Univ Hawaii, Dept Informat Technol Management, Honolulu, HI USA.
C3 Drexel University; University of Hawaii System
RP Cai, YF (corresponding author), Drexel Univ, Dept Comp Sci, Philadelphia, PA 19104 USA.
EM yuanfang.cai@drexel.edu
FU United States National Science Foundation [1817267, 1514561, 1140300,
   1065242, 1835292, 1823177, 2213764]
FX This research was supported by the United States National Science
   Foundation grants 1817267, 1514561, 1140300, 1065242, 1835292, 1823177,
   and 2213764. We owe an enormous debt of gratitude to our many students
   and collaborators in this research journey: Humberto Cervantes, Hongzhou
   Fang, Qiong Feng, Serge Haziyev, Wuxia Jin, Jason Lefever, Ran Mo,
   Martin Naedele, Maleknaz Nayebi, Will Snipes, Kevin Sullivan, Sunny
   Wong, and Lu Xiao.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   Arafat O., 2009, 42nd Hawaii International Conference on System Sciences, P1, DOI DOI 10.1109/HICSS.2009.421
   Asmare MB, 2020, IEEE WORK CONF MIN S, P327, DOI 10.1145/3379597.3387467
   Baker A., 2011, IEEE Softw, V29, P28
   Baldwin C. Y., 2000, Design Rules: The Power of Modularity, V1
   Blumberg S., 2022, McKinsey Digital
   Booch G., 2005, The Unified Modeling Language User Guide
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Cai Y., 2013, P 26 C SOFTW ENG ED
   Cai YF, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P53, DOI 10.1109/TechDebt.2019.00015
   Cai YF, 2019, IEEE T SOFTWARE ENG, V45, P657, DOI 10.1109/TSE.2018.2797899
   Cai YF, 2011, 2011 24TH IEEE-CS CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING (CSEET), P179, DOI 10.1109/CSEET.2011.5876085
   Cervantes H., 2020, INT C TECHN DEBT TEC
   Chenglie Hu, 2013, ACM Inroads, V4, P62, DOI 10.1145/2465085.2465103
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   CodeScene Inc, 2004, About us
   Costagliola G., 2006, 10th European Conference on Software Maintenance and Reengineering
   Cunningham W., 1993, OOPS Messenger, V4, P29
   desiringgod, About us
   Le D, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P807, DOI 10.1145/2889160.2889260
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   e Abreu F.B., 1995, P ECOOP 95 WORKSH ME
   Eckerdal A., 2006, SIGCSE Bulletin, V38, P403, DOI 10.1145/1124706.1121468
   Ernst Neil, 2021, Technical Debt in Practice
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Feiler PH, 2004, INT FED INFO PROC, V176, P3
   Feng Q, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P986, DOI 10.1109/ASE.2019.00095
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Fontana F.A., 2020, An architectural smell evaluation in an industrial context
   Fontana FA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P282, DOI 10.1109/ICSAW.2017.16
   Fontana FA, 2016, PROC IEEE INT CONF S, P433, DOI 10.1109/ICSME.2016.33
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Galster M, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P356, DOI 10.1145/2889160.2889187
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garcia J, 2009, LECT NOTES COMPUT SC, V5581, P146, DOI 10.1007/978-3-642-02351-4_10
   Garcia J, 2009, EUR CON SFTWR MTNCE, P255, DOI 10.1109/CSMR.2009.59
   Garlan David., 2010, CASCON 1 DECADE HIGH, P159, DOI DOI 10.1145/1925805.1925814
   github.com, Succinct Code Counter
   Goularte Carvalho S., 2019, Empir. Softw. Eng, V24
   Halstead M.H., 1977, OPERATING PROGRAMMIN
   Harrison R., 1998, Empirical Software Engineering, V3, P255, DOI 10.1023/A:1009784121652
   Higo Y, 2004, LECT NOTES COMPUT SC, V3009, P220
   Jia Q., 2023, 2023 IEEE ACM 41 INT
   Jin WX, 2020, IEEE INT CONF AUTOM, P758, DOI 10.1145/3324884.3416619
   Johannes D, 2019, SOFTWARE QUAL J, V27, P1271, DOI 10.1007/s11219-019-09442-9
   Junior Ed, 2021, SBES '21: Brazilian Symposium on Software Engineering, P275, DOI 10.1145/3474624.3474632
   Kazman R, 2002, IEEE SOFTWARE, V19, P67, DOI 10.1109/52.976943
   Kazman R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P54, DOI 10.1109/ICSE.1999.840995
   Kazman R., 2015, P 37 INT C SOFTW ENG
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Lefever J, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P121, DOI 10.1109/ICSE-SEIP52600.2021.00021
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Linder S.P., 2006, Journal of Computing Sciences in Colleges, V21, P238
   Lippert M., 2006, Refactoring in large software projects: performing complex restructurings successfully
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   Loftus C, 2011, SIGCSE 11: PROCEEDINGS OF THE 42ND ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P105
   Lorenz M., 1994, Object-Oriented Software Metrics, P146
   Lutellier T, 2018, IEEE T SOFTWARE ENG, V44, P159, DOI 10.1109/TSE.2017.2671865
   Lutellier T, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P69, DOI 10.1109/ICSE.2015.136
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Mäntylä M, 2003, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSM.2003.1235447
   Martin R., 2017, Clean architecture: A craftsman's guide to software structure and design
   Martini A, 2018, LECT NOTES COMPUT SC, V11048, P320, DOI 10.1007/978-3-030-00761-4_21
   Mayvan BB, 2017, J SYST SOFTWARE, V125, P93, DOI 10.1016/j.jss.2016.11.030
   Mazaitis D., 1993, SIGCSE Bulletin, V25, P58, DOI 10.1145/165408.165432
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Mei H, 2001, P INT COMP SOFTW APP, P71, DOI 10.1109/CMPSAC.2001.960600
   Misra SC, 2005, SOFTWARE QUAL J, V13, P297, DOI 10.1007/s11219-005-1754-7
   Mo R., 2018, P 26 INT C PROGR COM
   Mo R., 2018, P 33 IEEE ACM INT C
   Mo R, 2015, P 12 WORK IEEE IFIP
   Mo R, 2021, IEEE T SOFTWARE ENG, V47, P1008, DOI 10.1109/TSE.2019.2910856
   Mo R, 2018, IEEE INT CONF AUTOM, P779, DOI 10.1145/3238147.3240467
   Mo R, 2016, PROC INT CONF SOFTW, P499, DOI 10.1145/2884781.2884825
   Moha N, 2008, LECT NOTES COMPUT SC, V4961, P276, DOI 10.1007/978-3-540-78743-3_20
   Nayebi M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P171, DOI 10.1109/ICSE-SEIP.2019.00026
   Nord R. L., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P91, DOI 10.1109/WICSA-ECSA.212.17
   Palomba F, 2018, INFORM SOFTWARE TECH, V99, P1, DOI 10.1016/j.infsof.2018.02.004
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Philippe Kruchten I.O, 2005, Managing Technical Debt: Reducing Friction in Software Development
   Prasad P, 2022, RES PRACT TECH ENHAN, V17, DOI 10.1186/s41039-022-00192-0
   Ramnath S, 2008, SIGCSE'08: PROCEEDINGS OF THE 39TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P337, DOI 10.1145/1352322.1352252
   S. SonarSource, 2013, SonarQube
   Sangal N, 2005, ACM SIGPLAN NOTICES, V40, P167, DOI 10.1145/1103845.1094824
   Sas D, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10132-7
   Scanniello G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2491912
   Schwanke R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P891, DOI 10.1109/ICSE.2013.6606638
   Sharma T, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BRINGING ARCHITECTURAL DESIGN THINKING INTO DEVELOPERS DAILY ACTIVITIES (BRIDGE), P1, DOI [10.1145/2896935.2896938, 10.1109/Bridge.2016.009]
   Sien VY, 2011, COMPUT SCI EDUC, V21, P317, DOI 10.1080/08993408.2011.630127
   Structure101, about us
   Sullivan K. J., 2001, Software Engineering Notes, V26, P99, DOI 10.1145/503271.503224
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Tzerpos V, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P258
   van Oort B., 2021, The prevalence of code smells in machine learning projects
   Ware MP, 2007, J SOFTW MAINT EVOL-R, V19, P133, DOI 10.1002/smr.345
   Warren I, 2005, IFAC S ADV CONTR ED
   Wong S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P411, DOI 10.1145/1985793.1985850
   Wong S, 2009, IEEE INT CONF AUTOM, P197, DOI 10.1109/ASE.2009.53
   Wu WS, 2018, LECT NOTES COMPUT SC, V11048, P303, DOI 10.1007/978-3-030-00761-4_20
   Xiao L, 2022, IEEE T SOFTWARE ENG, V48, P3686, DOI 10.1109/TSE.2021.3102221
   Xiao L, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P763, DOI 10.1145/2635868.2661677
   Xiao L, 2016, PROC INT CONF SOFTW, P488, DOI 10.1145/2884781.2884822
   Xiao L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P967, DOI 10.1145/2568225.2568241
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Zhang ZX, 2004, PROCEEDINGS OF THE 2004 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND CYBERNETICS, VOLS 1-7, P1755
NR 111
TC 0
Z9 0
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107322
DI 10.1016/j.infsof.2023.107322
EA SEP 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S3WE1
UT WOS:001070498100001
DA 2024-07-18
ER

PT J
AU Dong, YK
   Tang, YR
   Cheng, XT
   Yang, YF
AF Dong, Yukun
   Tang, Yeer
   Cheng, Xiaotong
   Yang, Yufei
TI DeKeDVer: A deep learning-based multi-type software vulnerability
   classification framework using vulnerability description and source code
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Multi-type vulnerability classification; Vulnerability description;
   Source code; Text Recurrent Convolutional Neural Network; Relational
   graph attention network
AB Context: Software vulnerabilities have confused software developers for a long time. Vulnerability classification is thus crucial, through which we can know the specific type of vulnerability and then conduct targeted repair. Stack of papers have looked into deep learning-based multi-type vulnerability classification, among which most are based on vulnerability descriptions and some are based on source code. While vulnerability descriptions can sometimes mislead vulnerability classification and source code-based approaches have been rarely explored in multi-type vulnerability classification. Objective: We design DeKeDVer (Vulnerability Descriptions and Key Domain based Vulnerability Classifier) with two objectives: (i) to extract more useful information from vulnerability descriptions; (ii) to better utilize the information source code can reflect. Method: In this work, we propose a multi-type vulnerability classifier which combine vulnerability descriptions and source code together. We process vulnerability descriptions and source code of each project separately. For the vulnerability description of a sample, we preprocess it using a specified way we design based on our observations on numerous descriptions and then select text features. After that, Text Recurrent Convolutional Neural Network (TextRCNN) is applied to learn text information. For source code, we leverage its Code Property Graph (CPG) and extract key domain from it which are then embedded. Acquired feature vectors are then fed into Relational Graph Attention Network (RGAT). Result vectors gained from TextRCNN and RGAT are combined together as the feature vector of the current sample. A Multi-Layer Perceptron (MLP) layer is further added to undertake classification. Results: We conduct our experiments on C/C++ projects from NVD. Experimental results show that our work achieves 84.49% in weighted F1-measure which proves our work to be more effective. Conclusion: Our work utilizes information reflected both from vulnerability descriptions and source code to facilitate vulnerability classification and achieves higher weighted F1-measure than existing vulnerability classification tools.
C1 [Dong, Yukun; Tang, Yeer; Cheng, Xiaotong; Yang, Yufei] China Univ Petr East China, Qingdao Inst Software, Coll Comp Sci & Technol, Qingdao, Peoples R China.
C3 China University of Petroleum
RP Dong, YK (corresponding author), China Univ Petr East China, Qingdao Inst Software, Coll Comp Sci & Technol, Qingdao, Peoples R China.
EM dongyk@upc.edu.cn
RI Li, Wenjuan/KDN-8450-2024; Li, Chun/KBC-9591-2024; Lin,
   Yi/KEH-1784-2024; Yang, yufei/KHW-2735-2024; Yang, Yufei/JXX-6325-2024;
   Li, Kexin/KAO-2519-2024
FU Shandong Provincial Natural Science Foundation [ZR2021MF058]
FX Acknowledgments This work was supported by Shandong Provincial Natural
   Science Foundation (ZR2021MF058) .
CR [Anonymous], Common Vulnerability and Exposures
   [Anonymous], Common vulnerability exposure. cve.mitre.org
   [Anonymous], National Vulnerability Database.
   [Anonymous], COMM WEAKN EN
   Aota M, 2020, IEEE SYMP COMP COMMU, P26, DOI 10.1109/iscc50000.2020.9219568
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Berrar D., 2013, ENCY SYSTEMBIOL, P1022, DOI [10.1007/978-1-4419-9863-7_719, DOI 10.1007/978-1-4419-9863-7_719]
   Busbridge D, 2019, Arxiv, DOI arXiv:1904.05811
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Chen Y., 2015, Master's thesis
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   CVE Details, About us
   Cvedetails, CVE20221567
   Cwe, CWE476
   Cwe, CWE20
   Cwe, CWE119
   Cwe, CWE284
   Cwe, CWE79
   Dong YK, 2023, INFORM SOFTWARE TECH, V158, DOI 10.1016/j.infsof.2023.107168
   Feng HT, 2020, IEEE CONF COMPUT, P722, DOI 10.1109/INFOCOMWKSHPS50562.2020.9163061
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Greff K, 2017, IEEE T NEUR NET LEAR, V28, P2222, DOI 10.1109/TNNLS.2016.2582924
   GuMianxue S., 2021, J COMPUT RES DEV, V58, P23
   Guo DY, 2022, Arxiv, DOI arXiv:2203.03850
   Guo DY, 2021, Arxiv, DOI arXiv:2009.08366
   Han ZB, 2017, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSME.2017.52
   Hin D., 2022, arXiv
   Huang GY, 2019, IEEE ACCESS, V7, P28291, DOI 10.1109/ACCESS.2019.2900462
   Ishiwatari T, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P7360
   Kowsari K, 2019, INFORMATION, V10, DOI 10.3390/info10040150
   Kudjo PK, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P248, DOI 10.1109/QRS.2019.00041
   Lai SW, 2015, AAAI CONF ARTIF INTE, P2267
   Lan M., 2005, Posters Proc. 14th International World Wide Web Conference, P1032
   Lemminflect, US
   Li X, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10051692
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Lin RY, 2020, Arxiv, DOI arXiv:2009.04442
   Liu PF, 2016, Arxiv, DOI arXiv:1605.05101
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Ni Z, 2020, J SYST SOFTWARE, V163, DOI 10.1016/j.jss.2020.110538
   NLTK, About Us
   Nvd, CVE20092846
   Nvd.nist, CVE20126689
   Paszke A, 2019, ADV NEUR IN, V32
   Pypi, STOP WORD LIST
   Pytorch-geometric, TORCH GEOMETRIC DATA
   Schlichtkrull M, 2018, LECT NOTES COMPUT SC, V10843, P593, DOI 10.1007/978-3-319-93417-4_38
   ShiftLeft, JOERN
   Sun XB, 2024, J SOFTW-EVOL PROC, V36, DOI 10.1002/smr.2508
   Tin Kam Ho, 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P278, DOI 10.1109/ICDAR.1995.598994
   Nguyen T, 2020, LECT NOTES ARTIF INT, V12085, P164, DOI 10.1007/978-3-030-47436-2_13
   Vaswani A, 2017, ADV NEUR IN, V30
   Veličkovic P, 2018, Arxiv, DOI arXiv:1710.10903
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Yosifova Veneta, 2021, 2021 International Conference Automatics and Informatics (ICAI), P146, DOI 10.1109/ICAI52893.2021.9639588
   Yosifova V., 2021, 2021 12 NAT C INT PA, P1
   Zhang CX, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P793, DOI 10.1145/3292500.3330961
   Zhang H, 2017, LECT NOTES COMPUT SC, V10394, P475, DOI 10.1007/978-3-319-64701-2_35
   Zhou Y., 2019, Advances in neural information processing systems, V32
   Zhuo Z, 2021, IET SOFTW, V15, P188, DOI 10.1049/sfw2.12018
NR 61
TC 3
Z9 3
U1 6
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2023
VL 163
AR 107290
DI 10.1016/j.infsof.2023.107290
EA JUL 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA M8VP1
UT WOS:001032939900001
DA 2024-07-18
ER

PT J
AU del Aguila, IM
   del Sagrado, J
AF del Aguila, I. M.
   del Sagrado, J.
TI Salience-based stakeholder selection to maintain stakeholder coverage in
   solving the next release problem
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Stakeholders theory; Stakeholders selection and quantification
ID REQUIREMENTS; QUANTIFICATION; IDENTIFICATION; ALGORITHMS; SYSTEM
AB Context: The quantification of stakeholders plays a fundamental role in the selection of appropriate require-ments, as their judgement is a significant criterion, as not all stakeholders are equally important. The original proposals modelled stakeholder importance using a weighting approach that may not capture all the dimensions of stakeholder importance. Furthermore, actual projects involve a multitude of stakeholders, making it difficult to consider and compute all their weights. These facts lead us to search for strategies to adequately assess the importance concept, reducing the elicitation effort.Objective: We propose grouping strategies as a means of reducing the number of stakeholders to manage in requirement selection while maintaining adequate stakeholder coverage (how selection meets stakeholder demands).Methods: Our approach is based on the salience of stakeholders, defined in terms of their power, legitimacy, and urgency. Diverse strategies are applied to select important stakeholder groups. We use k-means, k-medoids, and hierarchical clustering, after deciding the number of clusters based on validation indices.Results: Each technique found a different group of important stakeholders. The number of stakeholder groups suggested experimentally (3 or 4) coincides with those indicated by the literature as definitive, dominant, dependent, and dangerous for 4 groups; or critical, major, and minor for 3 groups. Either for all the stakeholders and for each important group, several requirements selection optimisation problems are solved. The tests do not find significant differences in coverage when important stakeholders are filtered using clustering, regardless of the technique and number of groups, with a reduction between 66.32% and 87.75% in the number of stakeholders considered.Conclusions: Applying clustering methods to data obtained from a project is useful in identifying the group of important stakeholders. The number of suggested groups matches the stakeholders' theory, and the stakeholder coverage values are kept in the requirement selection.
C1 [del Aguila, I. M.] Univ Almeria, Crta Playa,Campus Univ, Almeria 04120, Spain.
   [del Sagrado, J.] Univ Almeria, Dept Informat, Comp Sci, Crta Playa,Campus Univ, Almeria 04120, Spain.
C3 Universidad de Almeria; Universidad de Almeria
RP del Aguila, IM (corresponding author), Univ Almeria, Crta Playa,Campus Univ, Almeria 04120, Spain.
EM imaguila@ual.es
RI del Aguila, Isabel/A-9740-2015; del Sagrado, Jose/F-9504-2016
OI del Aguila, Isabel/0000-0001-9896-7196; del Sagrado,
   Jose/0000-0002-5616-056X
FU Spanish Ministry of Science, Innovation and Universities
   [PID2019-106758GB-C32]; Data, Knowledge and Software Engineering (DKSE)
   research group of the University of Almeria [TIC-181]
FX This research has been funded by the Spanish Ministry of Science,
   Innovation and Universities under the project PID2019-106758GB-C32
   (EML-PA) . It is also partially supported by Data, Knowledge and
   Software Engineering (DKSE) research group (TIC-181) of the University
   of Almeria. We would also like to thank the anonymous reviewers for
   their useful comments, which have helped to improve the quality of the
   paper.
CR Achimugu P., 2014, RECENT ADV SOFT COMP, P623
   Domínguez-Ríos MA, 2019, J SYST SOFTWARE, V156, P217, DOI 10.1016/j.jss.2019.06.097
   [Anonymous], 2015, A guide to the Business Analysis Body of Knowledge (BABOK guide)
   Babar MI, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0121344
   Babar MI, 2014, FRONT ARTIF INTEL AP, V265, P295, DOI 10.3233/978-1-61499-434-3-295
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Charrad M, 2014, J STAT SOFTW, V61, P1
   Del Aguila IM, 2016, COMPLEXITY, V21, P250, DOI 10.1002/cplx.21739
   del Sagrado J, 2018, SOFTWARE QUAL J, V26, P585, DOI 10.1007/s11219-017-9362-x
   del Sagrado J, 2015, EMPIR SOFTW ENG, V20, P577, DOI 10.1007/s10664-013-9287-3
   Finkelstein A, 2009, REQUIR ENG, V14, P231, DOI 10.1007/s00766-009-0075-y
   Freeman R.E., 2010, Strategic management: A stakeholder approach, DOI DOI 10.1017/CBO9781139192675
   Geng JY, 2018, IEEE ACCESS, V6, P60547, DOI 10.1109/ACCESS.2018.2875122
   Glinz M., 2007, IEEE Software, V24, P18, DOI [DOI 10.1109/MS.2007.42, 10.1109/MS.2007.42]
   Harrison J.S., 2019, CAMBRIDGE HDB STAKEH
   Hartigan J. A., 1979, Applied Statistics, V28, P100, DOI 10.2307/2346830
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hujainah F, 2019, DECIS SUPPORT SYST, V121, P94, DOI 10.1016/j.dss.2019.04.009
   James M., 1967, PROC BERKELEY S MATH, V1, P281, DOI DOI 10.1007/S11665-016-2173-6
   Kaufman L., 1990, Finding Groups in Data: An Introduction to Cluster Analysis
   Kaufman Leonard., Wiley Series in Probability and Statistics, P68, DOI DOI 10.1093/aje/kwu209
   Lim S L., 2010, Social Networks and Collaborative Filtering for Large-Scale Requirements Elicitation
   Lim SL, 2013, ALIGNING ENTERPRISE, SYSTEM, AND SOFTWARE ARCHITECTURES, P118, DOI 10.4018/978-1-4666-2199-2.ch007
   Lim SL, 2012, IEEE T SOFTWARE ENG, V38, P707, DOI 10.1109/TSE.2011.36
   Mitchell R K., 2019, The Cambridge handbook of stakeholder theory, V1st, P53, DOI [DOI 10.1017/9781108123495.004, 10.1017/9781108123495.004]
   Mitchell RK, 1997, ACAD MANAGE REV, V22, P853, DOI 10.2307/259247
   Mughal S, 2018, IEEE ACCESS, V6, P66870, DOI 10.1109/ACCESS.2018.2879385
   Murtagh F, 2012, WIRES DATA MIN KNOWL, V2, P86, DOI 10.1002/widm.53
   Nuh JA, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11073117
   Pacheco C, 2012, J SYST SOFTWARE, V85, P2171, DOI 10.1016/j.jss.2012.04.075
   Poplawska J, 2015, J CLEAN PROD, V105, P103, DOI 10.1016/j.jclepro.2014.10.095
   Prasad A., 2018, 2018 4 INT C NAN EL, P1
   Rahman M. M., 2015, IJRCCT, V4, P509
   Reyad Omar, 2021, Advanced Machine Learning Technologies and Applications. Proceedings of AMLTA 2021. Advances in Intelligent Systems and Computing (AISC 1339), P195, DOI 10.1007/978-3-030-69717-4_21
   Veerapen N, 2015, INFORM SOFTWARE TECH, V65, P1, DOI 10.1016/j.infsof.2015.03.008
   Veerappa V, 2011, LECT NOTES COMPUT SC, V6606, P202, DOI 10.1007/978-3-642-19858-8_20
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
   Zhang YY, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3196831
   Zhang YY, 2013, INFORM SOFTWARE TECH, V55, P126, DOI 10.1016/j.infsof.2012.03.007
NR 40
TC 1
Z9 1
U1 4
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2023
VL 160
AR 107231
DI 10.1016/j.infsof.2023.107231
EA APR 2023
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA G7CP0
UT WOS:000990697600001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Dakhel, AM
   Desmarais, MC
   Khomh, F
AF Dakhel, Arghavan Moradi
   Desmarais, Michel C.
   Khomh, Foutse
TI Dev2vec: Representing domain expertise of developers in an embedding
   space
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Expertise of developers; Word embedding; Expert classification;
   Technical role; GitHub
ID SOFTWARE; RECOMMENDATION; GITHUB
AB Context: Accurate assessment of the domain expertise of developers is essential for assigning the proper candidate to contribute to a project, or to attend a job role. Since the potential candidate can come from a large pool, the automated assessment of this domain expertise is a desirable goal. While previous methods have had some success within a single software project, the assessment of a developer's domain expertise from contributions across multiple projects is more challenging.Objective: In this paper, we employ doc2vec to represent the domain expertise of developers across multiple projects as embedding vectors, and assess expertise level from authored code fragments.Method: For this purpose, we derived embedding vectors from different sources that contain evidence of developers' expertise, such as the description of repositories they contributed, their issue resolving history, and API calls in their commits. We name it dev2vec and demonstrate its effectiveness in representing and assessing the technical specialization of developers.Results: Our results indicate that encoding the expertise of developers in an embedding vector outperforms state-of-the-art methods and improves the F1-score up to 21%. Moreover, our findings suggest that the "issue resolving history"of developers is the most informative source of information to represent the domain expertise of developers in embedding spaces.Conclusion: Our proposed approach sheds light on the effectiveness of representing the technical expertise of developers in embedding vectors, and it can act as initial filtering for recruiters and project managers.
C1 [Dakhel, Arghavan Moradi; Desmarais, Michel C.; Khomh, Foutse] Polytech Montreal, Dept Comp & Software Engn, Montreal, PQ H3T 1J4, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Dakhel, AM (corresponding author), Polytech Montreal, Dept Comp & Software Engn, Montreal, PQ H3T 1J4, Canada.
EM arghavan.moradi-dakhel@polymtl.ca; michel.desmarais@polymtl.ca;
   foutse.khomh@polymtl.ca
RI Moradi Dakhel, Arghavan/KGL-8784-2024
OI Moradi Dakhel, Arghavan/0000-0003-1900-2850; Desmarais,
   Michel/0000-0002-2990-1078
CR Abdulhameed T. Z, 2018, 2018 IEEE INT C EL T
   AL-Aswadi F. N., 2021, INT C REL INF COMM T, P374
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   [Anonymous], 2007, 4 INT WORKSHOP MININ
   Anvik J., 2007, 4 INT WORKSH MIN SOF, P2
   Bouaziz Ameni, 2014, Data Warehousing and Knowledge Discovery. 16th International Conference (DaWaK 2014). Proceedings: LNCS 8646, P288, DOI 10.1007/978-3-319-10160-6_26
   Chen ZF, 2022, INFORM SOFTWARE TECH, V145, DOI 10.1016/j.infsof.2022.106849
   Church KW, 2017, NAT LANG ENG, V23, P155, DOI 10.1017/S1351324916000334
   Silva ACE, 2019, INFORM SOFTWARE TECH, V116, DOI 10.1016/j.infsof.2019.106177
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Dakhel AM, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P90, DOI 10.1145/3463274.3463343
   DeMarco T., 2013, Peopleware: productive projects and teams
   Dey T, 2021, PROC INT CONF SOFTW, P995, DOI 10.1109/ICSE43902.2021.00094
   Dogan E, 2022, INFORM SOFTWARE TECH, V142, DOI 10.1016/j.infsof.2021.106737
   Ge LH, 2017, IEEE INT CONF BIG DA, P1796, DOI 10.1109/BigData.2017.8258123
   Greene GJ, 2016, IEEE INT CONF AUTOM, P804, DOI 10.1145/2970276.2970285
   Horta VAC, 2022, J WEB SEMANT, V74, DOI 10.1016/j.websem.2022.100739
   Jayawardana V, 2017, INT CONF ADV ICT, P217, DOI 10.1109/ICTER.2017.8257822
   Kim D, 2019, INFORM SCIENCES, V477, P15, DOI 10.1016/j.ins.2018.10.006
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Kuttal SK, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106633
   Le Quoc V., 2014, P INT C MACH LEARN I
   Leelaprute P, 2022, INFORM SOFTWARE TECH, V150, DOI 10.1016/j.infsof.2022.106991
   Liang J.T., 2022, ARXIV
   Liu HT, 2016, INT CONF SEMANT, P1, DOI [10.1109/SKG.2016.11, 10.1109/SKG.2016.009]
   Liu SS, 2018, IEEE T VIS COMPUT GR, V24, P553, DOI 10.1109/TVCG.2017.2745141
   Lozoya Rocio Cabrera, 2021, SN Computer Science, V2, P150, DOI DOI 10.1007/S42979-021-00566-Z
   Lucassen T, 2011, J AM SOC INF SCI TEC, V62, P1232, DOI 10.1002/asi.21545
   Marlow J., 2013, Proceedings of the 2013 conference on Computer supported cooperative work, DOI [DOI 10.1145/2441776.2441794, 10.1145/2441776.2441794]
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   McDonald D. W., 2000, CSCW 2000. ACM 2000 Conference on Computer Supported Cooperative Work, P231, DOI 10.1145/358916.358994
   Minto Shawn, 2007, 4 INT WORKSH MIN SOF, P5
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Montandon Joao Eduardo, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P276, DOI 10.1109/MSR.2019.00054
   Montandon JE, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106485
   Nam Jinseok, 2014, Machine Learning and Knowledge Discovery in Databases. European Conference, ECML PKDD 2014. Proceedings: LNCS 8725, P437, DOI 10.1007/978-3-662-44851-9_28
   Ndukwe I.G., 2022, IEEE T SOFTWARE ENG
   Neishabouri A, 2021, PROCEDIA COMPUT SCI, V192, P1190, DOI 10.1016/j.procs.2021.08.122
   Oliveira J, 2019, SBQS: PROCEEDINGS OF THE 18TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY, P49, DOI 10.1145/3364641.3364648
   Saxena R, 2017, CSCW'17: COMPANION OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P299
   Schuler D., 2008, P 2008 INT WORKING C, P121
   Shah K., 2020, AUGMENT HUMAN RES, V5, P1, DOI DOI 10.1007/S41133-020-00032-0
   Shlens J, 2014, Arxiv, DOI [arXiv:1404.1100, DOI 10.48550/ARXIV.1404.1100]
   Sindhgatta R., 2008, PROCEEDING 14 ACM SI, P981
   Storey Margaret-Anne, 2013, P 2013 C COMPUTER SU, P103
   Theeten Bart, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P18, DOI 10.1109/MSR.2019.00014
   Vadlamani SL, 2020, PROC IEEE INT CONF S, P312, DOI 10.1109/ICSME46990.2020.00038
   Venkataramani R, 2013, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'13 COMPANION), P97
   Wan Y, 2018, WORLD WIDE WEB, V21, P1523, DOI 10.1007/s11280-018-0526-9
   Wang RS, 2019, IEEE IJCNN
   Wang ZQ, 2006, PROCEEDINGS OF 2006 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND CYBERNETICS, VOLS 1-7, P1378
   Wohlgenannt G., 2016, P INT SEM WEB C POST, P1
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Zhang W, 2019, INFORM SOFTWARE TECH, V110, P121, DOI 10.1016/j.infsof.2019.03.001
   Zhang Y., 2020, arXiv
   Zhang Y, 2020, WORLD WIDE WEB, V23, P1589, DOI 10.1007/s11280-019-00770-1
   Zhou C, 2018, 2018 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P319, DOI 10.1109/VLHCC.2018.8506577
NR 57
TC 1
Z9 1
U1 1
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2023
VL 159
AR 107218
DI 10.1016/j.infsof.2023.107218
EA APR 2023
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA F4QB4
UT WOS:000982198200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Siebert, J
AF Siebert, Julien
TI Applications of statistical causal inference in software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Causal inference; Software engineering; Causality; Graphical causal
   model
ID BAYESIAN NETWORKS; FRAMEWORK
AB Context: The aim of statistical causal inference (SCI) methods is to estimate causal effects from observational data (i.e., when randomized controlled trials are not possible). In this context, Pearl's framework based on causal graphical models is an approach that has recently gained popularity and allows for explicit reasoning about issues related to spurious correlations.Objective: Our primary goal is to understand to which extend and how Pearl's graphical framework is applied in software engineering (SE). Methods: We performed a systematic mapping study and analysed a total of 25 papers published between 2010 and 2022. Results: Our results show that the application of Pearl's SCI framework in SE is relatively recent and that the corresponding research community is fragmented. Most of the selected papers focus on software quality analysis. There is no clear and widespread community of practice (yet) on how to implement and evaluate SCI in SE.Conclusions: To the best of our knowledge this is the first time such a mapping study is done. We believe that SE practitioners might benefit from such a work, as it both provides an overview of the work and people involved in the application of causal inference methods, but also outlines the potential and limitations of such approaches.
C1 [Siebert, Julien] Fraunhofer Inst Expt Software Engn IESE, Data Sci Dept, Fraunhofer Pl 1, D-67663 Kaiserslautern, Rhineland Palat, Germany.
C3 Fraunhofer Gesellschaft
RP Siebert, J (corresponding author), Fraunhofer Inst Expt Software Engn IESE, Data Sci Dept, Fraunhofer Pl 1, D-67663 Kaiserslautern, Rhineland Palat, Germany.
EM julien.siebert@iese.fraunhofer.de
CR Abou Assi R, 2017, Arxiv, DOI [arXiv:1705.00811, DOI 10.48550/ARXIV.1705.00811, 10.48550/arXiv.1705.00811]
   Aggarwal P., LECT NOTES COMPUTER
   Akbari K, 2023, GEOGR ANAL, V55, P56, DOI 10.1111/gean.12312
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), DOI DOI 10.1145/2025113.2025136
   [Anonymous], 2011, MATCHING TEST CASES
   [Anonymous], 2010, ISSTA
   Arya V, 2021, CODS-COMAD 2021: PROCEEDINGS OF THE 3RD ACM INDIA JOINT INTERNATIONAL CONFERENCE ON DATA SCIENCE & MANAGEMENT OF DATA (8TH ACM IKDD CODS & 26TH COMAD), P188, DOI 10.1145/3430984.3431027
   Bai ZF, 2015, IEEE ICST WORKSHOP
   Bai ZF, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1613
   Bai ZF, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON COMPLEX FAULTS AND FAILURES IN LARGE SOFTWARE SYSTEMS (COUFLESS), P7, DOI 10.1109/COUFLESS.2015.9
   Baier C, 2021, Arxiv, DOI arXiv:2105.09533
   Beer A, 2015, LECT NOTES COMPUT SC, V9232, P203, DOI 10.1007/978-3-319-23404-5_14
   Beer I, 2012, FORM METHOD SYST DES, V40, P20, DOI 10.1007/s10703-011-0132-2
   Brady N., COURSE LECT NOTES
   Burton H, 2023, EARTHQ SPECTRA, V39, P54, DOI 10.1177/87552930221125492
   Wong JC, 2020, Arxiv, DOI arXiv:2007.10979
   Caltais G, 2020, FUND INFORM, V173, P217, DOI 10.3233/FI-2020-1922
   Castro DC, 2020, NAT COMMUN, V11, DOI 10.1038/s41467-020-17478-w
   Chen WQ, 2014, 2014 NINTH INTERNATIONAL CONFERENCE ON P2P, PARALLEL, GRID, CLOUD AND INTERNET COMPUTING (3PGCIC), P316, DOI 10.1109/3PGCIC.2014.133
   Cinelli C, 2022, SOCIOL METHOD RES, DOI 10.1177/00491241221099552
   Clark AG, 2022, Arxiv, DOI arXiv:2209.00357
   Cui P, 2022, NAT MACH INTELL, V4, P110, DOI 10.1038/s42256-022-00445-z
   Cunningham S, 2021, Causal inference: The mixtape, DOI DOI 10.2307/J.CTV1C29T27
   del Aguila IM, 2016, REQUIR ENG, V21, P461, DOI 10.1007/s00766-015-0225-3
   Dimitrova R, 2019, ELECTRON P THEOR COM, P31, DOI 10.4204/EPTCS.286.3
   Elwert F., 2013, Graphical causal models, DOI [https://doi.org/10.1007/978-94-007-6094-313, DOI 10.1007/978-94-007-6094-3_13]
   Elwert F, 2014, ANNU REV SOCIOL, V40, P31, DOI 10.1146/annurev-soc-071913-043455
   Epstein JM, 2008, JASSS-J ARTIF SOC S, V11
   Fariha A, 2020, SIGMOD'20: PROCEEDINGS OF THE 2020 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P431, DOI 10.1145/3318464.3389694
   Ferrari E, 2022, PLOS ONE, V17, DOI 10.1371/journal.pone.0268327
   Feyzi F, 2019, FRONT COMPUT SCI-CHI, V13, P735, DOI 10.1007/s11704-017-6512-z
   Gassler G, 2020, THEOR COMPUT SCI, V837, P158, DOI 10.1016/j.tcs.2020.06.010
   Geiger P, 2020, Arxiv, DOI [arXiv:1603.01581, 10.48550/arXiv.1603.01581, DOI 10.48550/ARXIV.1603.01581]
   Glocker B, 2021, NAT COMMUN, V12, DOI 10.1038/s41467-021-25743-9
   Glymour C, 2019, FRONT GENET, V10, DOI 10.3389/fgene.2019.00524
   Gössler G, 2015, SCI COMPUT PROGRAM, V113, P223, DOI 10.1016/j.scico.2015.06.010
   Gössler G, 2014, LECT NOTES COMPUT SC, V8348, P157, DOI 10.1007/978-3-319-07602-7_11
   Gore R, 2012, PROC INT CONF SOFTW, P463, DOI 10.1109/ICSE.2012.6227169
   Gore R, 2009, W PRIN ADV DISTR SIM, P19, DOI 10.1109/PADS.2009.8
   Gossler Gregor, 2016, Topics in Theoretical Computer Science. First IFIP WG 1.8 International Conference, TTCS 2015. Revised Selected Papers: LNCS 9541, P79, DOI 10.1007/978-3-319-28766-9_6
   Halpern JY, 2005, BRIT J PHILOS SCI, V56, P843, DOI 10.1093/bjps/axi147
   Hernan MA., 2021, Causal Inference: What If
   Hernan Miguel A, 2019, Chance, V32, P42, DOI [DOI 10.1080/09332480.2019.1579578, 10.1080/09332480.2019.1579578]
   Hira A., 2018, FURTHER CAUSAL SEARC
   Hira A, 2018, ISEC'18: PROCEEDINGS OF THE 11TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, DOI 10.1145/3172871.3172876
   Hu Y, 2013, DECIS SUPPORT SYST, V56, P439, DOI 10.1016/j.dss.2012.11.001
   Hünermund P, 2022, Arxiv, DOI [arXiv:2108.11294, 10.48550/ARXIV.2108.11294, DOI 10.48550/ARXIV.2108.11294]
   Huntington-Klein N., 2021, The effect: An introduction to research design and causality
   Iqbal Md Shahriar, 2022, P 17 EUR C COMP SYST, P199
   Jarry R, 2021, P INT COMP SOFTW APP, P1437, DOI 10.1109/COMPSAC51774.2021.00213
   Ji ZL, 2023, Arxiv, DOI arXiv:2207.08369
   Kaddour J, 2022, Arxiv, DOI [arXiv:2206.15475, DOI 10.48550/ARXIV.2206.15475]
   Kazman R, 2017, PROC IEEE ACM INT C, P172, DOI 10.1109/ICSE-C.2017.138
   Khan S, 2019, J INF SECUR APPL, V48, DOI 10.1016/j.jisa.2019.102375
   Kitchenham B., 2007, 2007001 EBSE
   Kobayashi Satoru, 2017, 2017 IFIP/IEEE Symposium on Integrated Network and Service Management (IM), P45, DOI 10.23919/INM.2017.7987263
   Kobayashi S, 2022, IEEE IFIP NETW OPER, DOI 10.1109/NOMS54207.2022.9789823
   Kobayashi S, 2018, IEEE T NETW SERV MAN, V15, P53, DOI 10.1109/TNSM.2017.2778096
   Kobayashi Satoru, 2019, INT CONF NETW SER, P1, DOI DOI 10.23919/cnsm46954.2019.9012718
   Kücük Y, 2021, PROC INT CONF SOFTW, P649, DOI 10.1109/ICSE43902.2021.00066
   Kuntz Matthias, 2011, Computer Safety, Reliability, and Security. Proceedings 30th International Conference, SAFECOMP 2011, P71, DOI 10.1007/978-3-642-24270-0_6
   Künzel SR, 2019, P NATL ACAD SCI USA, V116, P4156, DOI 10.1073/pnas.1804597116
   Lee SM, 2021, Arxiv, DOI arXiv:2104.09107
   Leidekker Q., 2020, SATTOSE WORKSHOP P, V2754
   Lemeire J, 2007, SCI PROGRAMMING-NETH, V15, P121, DOI 10.1155/2007/916861
   Li LX, 2014, INT CONF SEMANT, P41, DOI 10.1109/SKG.2014.21
   Li X, 2019, 2019 IFIP/IEEE SYMPOSIUM ON INTEGRATED NETWORK AND SERVICE MANAGEMENT (IM), P353
   Liu YC, 2022, Arxiv, DOI arXiv:2207.00222
   Liu YC, 2021, ASIA PAC SOFWR ENG, P233, DOI 10.1109/APSEC53868.2021.00031
   Mattera D., 2022, P IEEE INT C COMM NE, P264
   Medappa P.K., 2017, Proceedings of the 2017 ACM SIGMIS Conference on Computers and People Research, SIGMIS-CPR '17, P117, DOI DOI 10.1145/3084381.3084410
   Mendes E, 2019, INT J SOFTW ENG KNOW, V29, P1629, DOI 10.1142/S0218194019400151
   Misirli A.T., 2014, P 3 INT WORKSHOP REA, P7
   Moraffah R, 2021, KNOWL INF SYST, V63, P3041, DOI 10.1007/s10115-021-01621-0
   Murphy-Hill E, 2019, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2019.00059
   Musco V, 2016, IEEE INT WORK C SO, P97, DOI 10.1109/SCAM.2016.24
   Neto FGD, 2019, J SYST SOFTWARE, V156, P246, DOI 10.1016/j.jss.2019.07.002
   Oh S, 2021, IEEE ICST WORKSHOP, P19, DOI 10.1109/ICSTW52544.2021.00017
   Ohlsson H, 2020, JAMA PSYCHIAT, V77, P637, DOI 10.1001/jamapsychiatry.2019.3758
   Pearl J, 2012, Arxiv, DOI arXiv:1210.4852
   Pearl J, 2016, J CAUSAL INFERENCE, V4, DOI 10.1515/jci-2016-0021
   Pearl Judea, 2019, The Book of Why
   Peralta M., 2011, ACM INT C PROCEEDING, P223, DOI [DOI 10.1145/2070425.2070463, 10.1145/2070425.2070463]
   Peralta M, 2013, INT J SOFTW ENG KNOW, V23, P1459, DOI 10.1142/S0218194013500460
   Peralta M, 2011, P INT COMP SOFTW APP, P694, DOI 10.1109/COMPSAC.2011.96
   Plecko D, 2022, Arxiv, DOI arXiv:2207.11385
   Podgurski A, 2020, PROC IEEE INT CONF S, P382, DOI 10.1109/ICSME46990.2020.00044
   Richens JG, 2020, NAT COMMUN, V11, DOI 10.1038/s41467-020-17419-7
   Salimi B, 2020, SIGMOD REC, V49, P34, DOI [10.1145/3299869.33199015, 10.1145/3422648.3422657]
   Salimi B, 2019, INT CONF MANAGE DATA, P793, DOI 10.1145/3299869.3319901
   Scholz M, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1787
   Schuessler J., 2019, Graphical Causal Models for Survey Inference, DOI DOI 10.31235/OSF.IO/HBG3M
   Sharma A, 2020, Arxiv, DOI arXiv:2011.04216
   Shu G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P124, DOI 10.1109/ICST.2013.31
   Sousa ALR, 2022, IET SOFTW, V16, P14, DOI 10.1049/sfw2.12043
   Sruthi P. C., 2020, NetAI '20: Proceedings of the Workshop on Network Meets AI & ML, P42, DOI 10.1145/3405671.3405815
   Sun B, 2022, PROC INT CONF SOFTW, P338, DOI 10.1145/3510003.3510080
   Sun SF, 2016, IEEE INT CONF SOFTW, P124, DOI 10.1109/ICST.2016.31
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Torkar R., 2020, Contemporary Empirical Methods in Software Engineering, P289, DOI DOI 10.1007/978-3-030-32489-6_11
   Tosun A, 2017, SOFTWARE QUAL J, V25, P273, DOI 10.1007/s11219-015-9297-z
   Trendowicz A, 2021, IEEE SOFTWARE, V38, P59, DOI 10.1109/MS.2021.3103326
   Tsunoda M, 2017, INT SYMP EMP SOFTWAR, P436, DOI 10.1109/ESEM.2017.59
   Vowels MJ, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3527154
   Wang Q, 2021, IEEE INT CONF CLOUD, P558, DOI 10.1109/CLOUD53861.2021.00072
   Wang SH, 2015, LECT NOTES COMPUT SC, V9333, P250, DOI 10.1007/978-3-319-23820-3_16
   Wang S, 2013, LECT NOTES COMPUT SC, V8174, P285, DOI 10.1007/978-3-642-40787-1_17
   Wang XY, 2015, P INT COMP SOFTW APP, P105, DOI 10.1109/COMPSAC.2015.37
   Wohlin C, 2014, 18 INT C EV ASS SOFT, P1, DOI DOI 10.1145/2601248.2601268
   Wu L, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND SELF-ORGANIZING SYSTEMS (ACSOS 2021), P21, DOI 10.1109/ACSOS52086.2021.00029
   Wu L, 2021, 2021 IEEE/ACM INTERNATIONAL WORKSHOP ON CLOUD INTELLIGENCE (CLOUDINTELLIGENCE 2021), P31, DOI 10.1109/CloudIntelligence52565.2021.00015
   Yao LY, 2021, ACM T KNOWL DISCOV D, V15, DOI 10.1145/3444944
   Yu YB, 2019, COMPUT NETW, V162, DOI 10.1016/j.comnet.2019.07.007
   Zhang KL, 2021, LECT NOTES COMPUT SC, V12632, P124, DOI 10.1007/978-3-030-76352-7_16
NR 114
TC 3
Z9 3
U1 1
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2023
VL 159
AR 107198
DI 10.1016/j.infsof.2023.107198
EA MAR 2023
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA D0KV2
UT WOS:000965710800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dakkak, A
   Bosch, J
   Olsson, HH
   Mattos, DI
AF Dakkak, Anas
   Bosch, Jan
   Olsson, Helena Holmstrom
   Mattos, David Issa
TI Continuous deployment in software-intensive system-of-systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Continuous deployment; Agile software development; Continuous software
   engineering; Software -intensive system -of -systems
ID CONTINUOUS DELIVERY; INTEGRATION; CHALLENGES; VALIDATION; NETWORK
AB Context: While continuous deployment is popular among web-based software development organizations, adopting continuous deployment in software-intensive system-of-systems is more challenging. On top of the challenges arising from deploying software to a single software-intensive embedded system, software-intensive system-of-systems (SiSoS) add a layer of complexity as new software undergoes an extensive field validation applied to individual components of the SiSoS, as well as the overall SiSoS, to ensure that both legacy and new functionalities are working as desired.Objectives: This paper aims to study how SiSoS transitions to continuous deployment by exploring how continuous deployment impacts field testing and validation activities, how continuous deployment can be practiced in SiSoS, and to identify the success factors that companies need to consider when transitioning to continuous deployment.Method: We conducted a case study at Ericsson AB focusing on the embedded software of the Third Generation Radio Access Network (3G RAN). The 3G RAN consists of two large-scale software-intensive embedded systems, representing a simple SiSoS composed of two systems. 3G RAN software was the first to transition to continuous deployment and is used as a reference case for other products within Ericsson AB.Results: Software deployment, in addition to field testing and validation, have transitioned from being a discrete activity performed at the end of software development to a continuous process performed in parallel to software development. Further, our study reveals an orchestrating approach for software deployment, which allows pre/post validation of legacy behavior and new features in a shorter release and deployment cadence. Furthermore, we identified the essential success factors that organizations should consider when transitioning to continuous deployment.Conclusion: Transition to continuous deployment, in addition to field testing and validation, shall be considered and planned carefully. In this paper, we provide a set of success factors and orchestration technique that helps organization when transitioning to continuous deployment in the software-intensive embedded system-of-systems context.
C1 [Dakkak, Anas] Ericsson AB, Torshamnsgatan 21, S-16483 Stockholm, Sweden.
   [Bosch, Jan] Chalmers Univ Technol, Dept Comp Sci & Engn, Chalmersplatsen 1, S-41296 Gothenburg, Sweden.
   [Olsson, Helena Holmstrom] Malmo Univ, Dept Comp Sci & Media Technol, S-21119 Malmo, Sweden.
   [Mattos, David Issa] Volvo Cars AB, Gunnar Engellaus vag 8, S-41878 Gothenburg, Sweden.
C3 Ericsson; Chalmers University of Technology; Malmo University; Volvo
RP Dakkak, A (corresponding author), Ericsson AB, Torshamnsgatan 21, S-16483 Stockholm, Sweden.
EM anas.dakkak@ericsson.com; jan.bosch@chalmers.se;
   helena.holmstrom.olsson@mau.se; david.mattos@volvocars.com
RI Olsson, Helena H/H-2193-2014; Dakkak, Anas/HZM-2150-2023
OI Dakkak, Anas/0000-0002-3308-6037
FU Wallenberg AI, Autonomous Systems and Software Program (WSAP);
   Wallenberg AI, Autonomous Systems and Software Program (WSAP)
FX The authors would like to express their gratitude for all the support
   provided by Ericsson AB. This work was partially supported by the
   Wallenberg AI, Autonomous Systems and Software Program (WSAP) .
CR Ali S.R., 1997, Digital Switching Systems: System Reliability and Analysis
   Baresi Luciano., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research. FoSER'10, P17, DOI [10.1145/1882362.1882367, DOI 10.1145/1882362.1882367]
   BAUER HA, 1985, AT&T TECH J, V64, P1503, DOI 10.1002/j.1538-7305.1985.tb00284.x
   Bertolino A, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3447240
   Bin Ali N, 2012, INT SYMP EMP SOFTWAR, P211, DOI 10.1145/2372251.2372290
   Bosch Jan, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P19, DOI 10.1007/978-3-642-34026-0_3
   Bosch J., 2014, CONTINUOUS SOFTWARE, P3
   Bosch J, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2333
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Cadavid H, 2020, INFORM SOFTWARE TECH, V118, DOI 10.1016/j.infsof.2019.106202
   Carzaniga A., 1998, CHARACTERIZATION FRA
   Cavalcante E, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P899, DOI 10.1109/ICSE.2015.287
   Claps GG, 2015, INFORM SOFTWARE TECH, V57, P21, DOI 10.1016/j.infsof.2014.07.009
   Creswell JW, 2000, THEOR PRACT, V39, P124, DOI 10.1207/s15430421tip3903_2
   Cuesta CE, 2016, SOFTWARE-INTENSIVE SYSTEMS-OF-SYSTEMS SYMPOSIUM (SISOS@ECSA), DOI 10.1145/3175731.3176176
   Dakkak A, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P129, DOI 10.1109/SEAA53835.2021.00025
   Davies A., 2010, TECHNOLOGY ORG ESSAY
   Davies Andrew., 2005, BUSINESS PROJECTS
   Dearle A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P269, DOI 10.1109/FOSE.2007.20
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Ericsson A., 2022, ERICSSON CO FACTS
   ETSI, 2000, UN MOB TEL SYST UMTS
   Fabijan A, 2018, EUROMICRO CONF PROC, P68, DOI 10.1109/SEAA.2018.00021
   Fagerholm Fabian, 2014, P 1 INT WORKSH RAP C, P26, DOI DOI 10.1145/2593812.2593816
   Feitelson DG, 2013, IEEE INTERNET COMPUT, V17, P8, DOI 10.1109/MIC.2013.25
   Fiedler M, 2005, 2005 NEXT GENERATION INTERNET NETWORKS, P426
   Fitzgerald B., 2014, P 1 INT WORKSH RAP C, P1, DOI DOI 10.1145/2593812.2593813
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Fowler M., 2001, Software Development, V9, P28
   Gonçcalves MB, 2014, IEEE SYS MAN CYBERN, P1605, DOI 10.1109/SMC.2014.6974145
   Graaf H, 2003, IEEE SOFTWARE, V20, P61, DOI 10.1109/MS.2003.1241368
   Haider MM, 2014, INT CONF FRONT INFO, P1, DOI 10.1109/FIT.2014.9
   Holma H., 2005, WCDMA for UMTS: Radio access for third generation mobile communications
   I.R.T. ArchWare, 2015, SOFTWARE ARCHITECTUR
   Mattos DI, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2390
   Jamil MA, 2016, INT CONF INFORM COMM, P177, DOI [10.1109/ICT4M.2016.045, 10.1109/ICT4M.2016.40]
   Jansen S, 2006, PROC IEEE INT CONF S, P166
   Järvinen J, 2014, LECT NOTES BUS INF P, V182, P58
   Keating Charles B., 2011, International Journal of Systems of Systems Engineering, V2, P234, DOI 10.1504/IJSSE.2011.040556
   Kevic K, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P123, DOI 10.1109/ICSE-SEIP.2017.19
   Laukkanen E, 2017, INFORM SOFTWARE TECH, V82, P55, DOI 10.1016/j.infsof.2016.10.001
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   Lianping Chen, 2015, IEEE Software, V32, P50, DOI 10.1109/MS.2015.27
   Luna S, 2013, PROCEDIA COMPUT SCI, V20, P298, DOI 10.1016/j.procs.2013.09.276
   Lwakatare LE, 2016, P ANN HICSS, P5437, DOI 10.1109/HICSS.2016.671
   Maggiore G, 2000, INT FED INFO PROC, V48, P239
   Mahimkar A, 2019, I C DEPEND SYS NETWO, P256, DOI 10.1109/DSN.2019.00037
   Mahimkar A, 2016, INT CONF NETW SER, P188, DOI 10.1109/CNSM.2016.7818416
   Maier M., 1998, SYST ENG, V1, P267, DOI [DOI 10.1002/(SICI)1520-6858(1998)1:43.0.CO;2-D, 10.1002/(SICI)1520-6858(1998)1:4lt;267::AID-SYS3gt;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4LT;267::AID-SYS3GT;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4<267::AID-SYS3>3.0.CO;2-D]
   Martin J.N., 1999, INCOSE INT S, V9, P990
   Nawrocki M.J., 2006, UNDERSTANDING UMTS R
   NOAM EM, 1994, TELECOMMUN POLICY, V18, P286, DOI 10.1016/0308-5961(94)90002-7
   Olsson H.H., 2014, CONTINUOUS SOFTWARE, P15
   Olsson H.H., 2013, IASTED, P798, DOI DOI 10.2316/P.2013.796-008
   Olsson HH, 2013, LECT NOTES BUS INF P, V150, P79
   Olsson HH, 2012, EUROMICRO CONF PROC, P392, DOI 10.1109/SEAA.2012.54
   Oquendo F, 2016, LECT NOTES COMPUT SC, V9839, P3, DOI 10.1007/978-3-319-48992-6_1
   Owens W.A., 1996, EMERGING US SYSTEM O, V63
   Parnin C, 2017, IEEE SOFTWARE, V34, P86, DOI 10.1109/MS.2017.86
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Ram J, 2013, INT J PROD ECON, V144, P157, DOI 10.1016/j.ijpe.2013.01.032
   Rissanen O, 2015, LECT NOTES BUS INF P, V212, P154, DOI 10.1007/978-3-319-18612-2_13
   ROCKART JF, 1979, HARVARD BUS REV, V57, P81
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   Rossi C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P12, DOI 10.1145/2950290.2994157
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Savolainen J., 2015, INT C SOFTW REUS, P58
   Savor T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P21, DOI 10.1145/2889160.2889223
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shahin M, 2017, INT SYMP EMP SOFTWAR, P111, DOI 10.1109/ESEM.2017.18
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Stahl Daniel, 2017, 2017 43rd Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P440, DOI 10.1109/SEAA.2017.8114695
   Uday P, 2013, PROCEDIA COMPUT SCI, V16, P532, DOI 10.1016/j.procs.2013.01.056
   Van Belzen M., 2019, INFORM SYSTEMS DEV I
   Williams L, 2012, COMMUN ACM, V55, P71, DOI 10.1145/2133806.2133823
   Wilson AD, 2016, QUAL REP, V21, P1549
   Xia T, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P11, DOI 10.1109/ICSE-SEIP.2019.00010
   Yin R. K., 2018, Case Study Research and Applications: Design and Methods, DOI DOI 10.1016/J.TECHFORE.2018.10.013
NR 78
TC 2
Z9 2
U1 2
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2023
VL 159
AR 107200
DI 10.1016/j.infsof.2023.107200
EA MAR 2023
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C1SA1
UT WOS:000959787200001
DA 2024-07-18
ER

PT J
AU Ibias, A
   Núñez, M
AF Ibias, Alfredo
   Nunez, Manuel
TI Squeeziness for non-deterministic systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Failed error propagation; Non-deterministic systems;
   Information theory
ID IMPLEMENTATION RELATIONS; SCHEDULERS
AB Context: Failed Error Propagation greatly reduces the effectiveness of Software Testing by masking faults present in the code. This situation happens when the System Under Test executes a faulty statement, the state of the system is affected by this fault, but the expected output is observed. Therefore, it is a must to assess its impact in the testing process. Squeeziness has been shown to be a useful measure to assess the likelihood of fault masking in deterministic systems.Objective: The main goal of this paper is to define a new Squeeziness notion that can be used in a scenario where we may have non-deterministic behaviours. The new notion should be a conservative extension of the previous one. In addition, it would be necessary to evaluate whether the new notion appropriately estimates the likelihood that a component of a system introduces Failed Error Propagation.Method: We defined our black-box scenario where non-deterministic behaviours might appear. Next, we presented a new Squeeziness notion that can be used in this scenario. Finally, we carried out different experiments to evaluate the usefulness of our proposal as an appropriate estimation of the likelihood of Failed Error Propagation.Results: We found a high correlation between our new Squeeziness notion and the likelihood of Failed Error Propagation in non-deterministic systems. We also found that the extra computation time with respect to the deterministic version of Squeeziness was negligible.Conclusion: Our new Squeeziness notion is a good measure to estimate the likelihood of Failed Error Propagation being introduced by a component of a system (potentially) showing non-deterministic behaviours. Since it is a conservative extension of the original notion and the extra computation time needed to compute it, with respect to the time needed to compute the former notion, is very small, we conclude that the new notion can be safely used to assess the likelihood of fault masking in deterministic systems.
C1 [Ibias, Alfredo] Sano Ctr Computat Personalised Med, Personalised Hlth Data Sci Res Grp, Krakow, Poland.
   [Nunez, Manuel] Univ Complutense Madrid, Design & Testing Reliable Syst Res Grp, Madrid, Spain.
C3 Complutense University of Madrid
RP Núñez, M (corresponding author), Univ Complutense Madrid, Design & Testing Reliable Syst Res Grp, Madrid, Spain.
EM a.ibias@sanoscience.org; mn@sip.ucm.es
RI Núñez, Manuel/B-6889-2008; Ibias, Alfredo/AAJ-6625-2020
OI Núñez, Manuel/0000-0001-9808-6401; Ibias, Alfredo/0000-0002-3122-4272
FU European Union [857533]; European Union under the European Regional
   Development Fund; State Research Agency (AEI) of the Spanish Ministry of
   Science and Innovation [PID2021-122215NB-C31]; EIE Funds of the European
   Union [S2018/TCS-4314]
FX This research has been supported by the European Union's Horizon 2020
   research and innovation programme under grant agreement Sano No 857533;
   the Sano project carried out within the International Research Agendas
   programme of the Foundation for Polish Science, co-financed by the
   European Union under the European Regional Development Fund; the State
   Research Agency (AEI) of the Spanish Ministry of Science and Innovation
   under grant PID2021-122215NB-C31 (AwESOMe) ; and the Region of Madrid
   under grant S2018/TCS-4314 (FORTE-CM) co-funded by EIE Funds of the
   European Union.
CR Ammann Paul, 2008, Introduction to software testing, V1st
   Androutsopoulos K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P573, DOI 10.1145/2568225.2568314
   [Anonymous], 1996, JTCISC21WG7 ISOIEC
   Cavalli AR, 2015, ANN TELECOMMUN, V70, P85, DOI 10.1007/s12243-015-0457-8
   Chatzikokolakis K, 2010, LECT NOTES COMPUT SC, V6015, P390, DOI 10.1007/978-3-642-12002-2_33
   Clark D., 2001, WORKSHOP QUANTITATIV, V59, P238
   Clark D, 2019, INFORM PROCESS LETT, V149, P6, DOI 10.1016/j.ipl.2019.04.001
   Clark D, 2012, INFORM PROCESS LETT, V112, P335, DOI 10.1016/j.ipl.2012.01.004
   Cover Thomas M, 1999, Elements of information theory
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   El-Fakih K, 2021, IEEE T SOFTWARE ENG, V47, P1029, DOI 10.1109/TSE.2019.2911076
   Heusser J, 2010, 26TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2010), P261
   Hierons RM, 2017, J SYST SOFTWARE, V132, P319, DOI 10.1016/j.jss.2017.03.011
   Hierons RM, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3051121
   Hierons RM, 2012, FORM ASP COMPUT, V24, P679, DOI 10.1007/s00165-012-0244-5
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   Ibias A, 2021, EXPERT SYST APPL, V174, DOI 10.1016/j.eswa.2021.114748
   Ibias A, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1936, DOI 10.1145/3341105.3373920
   Ibias A, 2019, INFORM SOFTWARE TECH, V112, P132, DOI 10.1016/j.infsof.2019.04.012
   Isberner M, 2015, LECT NOTES COMPUT SC, V9206, P487, DOI 10.1007/978-3-319-21690-4_32
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Li N, 2017, IEEE T SOFTWARE ENG, V43, P372, DOI 10.1109/TSE.2016.2597136
   López N, 2006, THEOR COMPUT SCI, V353, P228, DOI 10.1016/j.tcs.2005.10.047
   Masri Wes., 2009, Proceedings of the 2Nd International Workshop on Defects in Large Software Systems: Held in Conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2009), DEFECTS '09, P1
   Merayo MG, 2018, INFORM SOFTWARE TECH, V104, P162, DOI 10.1016/j.infsof.2018.07.013
   Merayo MG, 2018, DISTRIB COMPUT, V31, P327, DOI 10.1007/s00446-017-0308-0
   Myers Glenford J., 2011, The Art of Software Testing
   Ortiz G, 2022, COMPUT STAND INTER, V81, DOI 10.1016/j.csi.2021.103604
   Ortiz G, 2022, COMPUT STAND INTER, V79, DOI 10.1016/j.csi.2021.103550
   Patel K, 2022, INFORM SOFTWARE TECH, V143, DOI 10.1016/j.infsof.2021.106759
   Randell B, 2003, LECT NOTES COMPUT SC, V2805, P18
   Renyi A., 1961, P 4 BERK S MATH STAT, V1, P547
   Santelices R., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P11, DOI 10.1109/ICST.2011.46
   Shannon C. E., 1948, BELL SYST TECH J, V27, P379, DOI DOI 10.1002/J.1538-7305.1948.TB01338.X
   Wang XM, 2009, PROC INT CONF SOFTW, P45, DOI 10.1109/ICSE.2009.5070507
NR 35
TC 0
Z9 0
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2023
VL 158
AR 107173
DI 10.1016/j.infsof.2023.107173
EA FEB 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9P6OM
UT WOS:000944402400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Matalonga, S
   Amalfitano, D
   Doreste, A
   Fasolino, AR
   Travassos, GH
AF Matalonga, Santiago
   Amalfitano, Domenico
   Doreste, Andrea
   Fasolino, Anna Rita
   Travassos, Guilherme Horta
TI Alternatives for testing of context-aware software systems in
   non-academic settings: results from a Rapid Review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Context-aware software systems; Software testing; Rapid review;
   Contemporary software systems
AB Context: Context-awareness challenges the engineering of contemporary software systems and jeopardizes their testing. The variation of context represents a relevant behavior that deepens the limitations of available software testing practices and technologies. However, such software systems are mainstream. Therefore, researchers in non-academic settings also face challenges when developing and testing contemporary software systems.Objective: To understand how researchers deal with the variation of context when testing context-aware software systems developed in non-academic settings.Method: To undertake a secondary study (Rapid Review) to uncover the necessary evidence from primary sources describing the testing of context-aware software systems outside academia.Results: The current testing initiatives in non-academic settings aim to generate or improve test suites that can deal with the context variation and the sheer volume of test input possibilities. They mostly rely on modeling the systems' dynamic behavior and increasing computing resources to generate test inputs to achieve this. We found no evidence of test results aiming at managing context variation through the testing lifecycle process.Conclusions: So far, the identified testing initiatives and strategies are not ready for mainstream adoption. They are all domain-specific, and while the ideas and approaches can be reproduced in distinct settings, the technologies are to be re-engineered and tailored to the context-awareness of contemporary software systems in different problem domains. Further and joint investigations in academia and experiences in non-academic settings can evolve the body of knowledge regarding the testing of contemporary software systems in the field.
C1 [Matalonga, Santiago] Phys Sci Univ West Scotland, Sch Comp Engn & Paisley, Paisley, Renfrow, Scotland.
   [Amalfitano, Domenico; Fasolino, Anna Rita] Univ Naples Federico II, Dept Elect Engn & Informat Technol, DIETI, Naples, Italy.
   [Doreste, Andrea; Travassos, Guilherme Horta] Univ Fed Rio de Janeiro, Syst Engn & Comp Sci, COPPE, Rio De Janeiro, Brazil.
C3 University of Naples Federico II; Universidade Federal do Rio de Janeiro
RP Matalonga, S (corresponding author), Phys Sci Univ West Scotland, Sch Comp Engn & Paisley, Paisley, Renfrow, Scotland.
EM santiago.matalonga@uws.ac.uk
RI Fasolino, Anna Rita/V-4582-2019; Amalfitano, Domenico/HJH-4638-2023;
   Travassos, Guilherme H/G-2842-2012; Matalonga, Santiago/T-2292-2018
OI Fasolino, Anna Rita/0000-0001-7116-019X; Amalfitano,
   Domenico/0000-0002-4761-4443; Matalonga, Santiago/0000-0001-5429-2449
CR Abowd GD, 1999, LECT NOTES COMPUT SC, V1707, P304
   Alegre U, 2016, J SYST SOFTWARE, V117, P55, DOI 10.1016/j.jss.2016.02.010
   Almeida Diego R., 2019, Journal of the Brazilian Computer Society, V25, DOI 10.1186/s13173-019-0093-7
   Amalfitano D, 2021, INFORM SOFTWARE TECH, V132, DOI 10.1016/j.infsof.2020.106509
   Amalfitano Domenico, 2019, Technical Report
   Andreia D., 2020, CIBSE 2020
   [Anonymous], U SD A PROGRAM TRL E
   [Anonymous], 2013, Information technology - Security techniques - Application security - Part 8: Protocols and application security Controls data structure - XML Schemas, P1, DOI DOI 10.1109/IEEESTD.2013.6588540
   Arrieta A, 2017, SOFTWARE QUAL J, V25, P1041, DOI 10.1007/s11219-016-9341-7
   Baldauf M, 2007, INT J AD HOC UBIQ CO, V2, P263, DOI 10.1504/IJAHUC.2007.014070
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Ben Abdessalem R, 2018, IEEE INT CONF AUTOM, P143, DOI 10.1145/3238147.3238192
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Ben Abdessalem R, 2016, IEEE INT CONF AUTOM, P63, DOI 10.1145/2970276.2970311
   Cartaxo Bruno, 2018, 22 INT C EV ASS SOFT, P24, DOI DOI 10.1145/3210459.3210462
   Chan WK, 2006, INT J SOFTW ENG KNOW, V16, P677, DOI 10.1142/S0218194006002951
   Costa A., 2018, P 3 BRAZ S SYST AUT, P20, DOI [10.1145/3266003.3266005, DOI 10.1145/3266003.3266005]
   Dourish P, 2004, PERS UBIQUIT COMPUT, V8, P19, DOI 10.1007/s00779-003-0253-8
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ferrari F., 2011, INT WORKSH VAR COMP
   Fredericks EM, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P17, DOI 10.1145/2593929.2593937
   Fröhlich J, 2016, LECT NOTES COMPUT SC, V9923, P105, DOI 10.1007/978-3-319-45480-1_9
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Heder M., 2017, INNOV J
   Hong JY, 2009, EXPERT SYST APPL, V36, P8509, DOI 10.1016/j.eswa.2008.10.071
   ISO and IEC, 2011, ISO/IEC 25010:2011, P34
   ISO/IEC/IEEE 29119-1, 2013, 2911912013E ISOIECIE, P1, DOI [10.1109/IEEESTD.2013.6588537, DOI 10.1109/IEEESTD.2013.6588537]
   Klicarr, 2018, TRUCKS LIKELY WILL N
   Lahami M, 2016, SCI COMPUT PROGRAM, V122, P1, DOI 10.1016/j.scico.2016.02.002
   Leveson N, 2020, COMMUN ACM, V63, P25, DOI 10.1145/3376127
   Linstone HA., 1975, DELPHI METHOD TECHNI, P3, DOI DOI 10.1093/OXFORDHB/9780199238828.013.0009
   Luo C, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3372788
   Luo YX, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P279, DOI [10.1109/ASE51524.2021.967883, 10.1109/ASE51524.2021.9678883]
   Ma T, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09941-z
   Ma T, 2019, SOFTW SYST MODEL, V18, P2843, DOI 10.1007/s10270-018-00703-y
   Matalonga S., 2015, CHALLENGES TESTING C, DOI DOI 10.13140/RG.2.1.3361.6080
   Matalonga S, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P250, DOI 10.1145/3131151.3131190
   Matalonga S, 2017, J SYST SOFTWARE, V131, P1, DOI 10.1016/j.jss.2017.05.048
   Moons P, 2021, EUR J CARDIOVASC NUR, V20, P515, DOI 10.1093/eurjcn/zvab041
   Motta RC, 2019, INFORM SOFTWARE TECH, V114, P231, DOI 10.1016/j.infsof.2019.07.001
   Motta RC, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P42, DOI 10.1145/3266237.3266263
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Qin Y, 2020, IEEE T RELIAB, V69, P106, DOI 10.1109/TR.2019.2933324
   Qin Y, 2016, J SYST SOFTWARE, V120, P70, DOI 10.1016/j.jss.2016.07.002
   Rodrigues F., 2015, CATS DESIGN CONTEXT
   Rosenthal S., 2007, FOCUS PULSE PRAGMATI
   Sama M, 2010, IEEE T SOFTWARE ENG, V36, P644, DOI 10.1109/TSE.2010.35
   Santos ID, 2017, INFORM SOFTWARE TECH, V88, P1, DOI 10.1016/j.infsof.2017.03.008
   Schaun, 2019, QUE PODE TER CAUSADO
   Schmidtke Hedda R., 2018, Journal of Reliable Intelligent Environments, V4, P211, DOI 10.1007/s40860-018-0070-5
   SEBoK contributors, 2020, GUIDE SYSTEMS ENG BO
   Shin SY, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110813
   Shin SY, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P49, DOI 10.1145/3213846.3213852
   Siqueira BR, 2021, SOFTW TEST VERIF REL, DOI 10.1002/stvr.1772
   Siqueira BR, 2020, IEEE ICST WORKSHOP, P284, DOI 10.1109/ICSTW50294.2020.00054
   Siqueira BR, 2016, I BRAZILIAN SYMPOSIUM ON SYSTEMATIC AND AUTOMATED SOFTWARE TESTING (SAST 2016), DOI 10.1145/2993288.2993294
   Spinola RO, 2012, INFORM SOFTWARE TECH, V54, P759, DOI 10.1016/j.infsof.2012.01.009
   Spnola R.O., 2008, SUPPORTING REQUIREME, P587, DOI [10.1007/978-3-540-88479-8_42, DOI 10.1007/978-3-540-88479-8_42]
   Titcomb, 2018, TELEGR
   Travassos G.H., 2003, 2 WORK WORK SER EMPI
   Travis G., 2019, IEEE Spectrum
   Wang HS, 2009, PROCEEDINGS OF THE FIRST INTERNATIONAL WORKSHOP ON EDUCATION TECHNOLOGY AND COMPUTER SCIENCE, VOL II, P610, DOI 10.1109/ETCS.2009.397
   Wang H, 2014, ACM T AUTON ADAP SYS, V9, DOI 10.1145/2620000
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Xu C., 2012, P 4 AS PAC S INT QIN, P1, DOI [DOI 10.1145/2430475.2430476, 10.1145/2430475.2430476]
   Xu C, 2012, J SYST SOFTWARE, V85, P2812, DOI 10.1016/j.jss.2012.04.078
NR 67
TC 6
Z9 6
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2022
VL 149
AR 106937
DI 10.1016/j.infsof.2022.106937
EA MAY 2022
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1Y6WH
UT WOS:000808282000002
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Kaleeswaran, AP
   Nordmann, A
   Vogel, T
   Grunske, L
AF Kaleeswaran, Arut Prakash
   Nordmann, Arne
   Vogel, Thomas
   Grunske, Lars
TI A systematic literature review on counterexample explanation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Formal methods; Model checking; Counterexample explanation
ID MODEL-CHECKING; FORMAL VERIFICATION; MINIMIZATION; SOFTWARE; TOOL;
   LOCALIZATION
AB Context: Safety is of paramount importance for cyber-physical systems in domains such as automotive, robotics, and avionics. Formal methods such as model checking are one way to ensure the safety of cyber- physical systems. However, adoption of formal methods in industry is hindered by usability issues, particularly the difficulty of understanding model checking results. Objective: We want to provide an overview of the state of the art for counterexample explanation by investigating the contexts, techniques, and evaluation of research approaches in this field. This overview shall provide an understanding of current and guide future research. Method: To provide this overview, we conducted a systematic literature review. The survey comprises 116 publications that address counterexample explanations for model checking. Results: Most primary studies provide counterexample explanations graphically or as traces, minimize counterexamples to reduce complexity, localize errors in the models expressed in the input formats of model checkers, support linear temporal logic or computation tree logic specifications, and use model checkers of the Symbolic Model Verifier family. Several studies evaluate their approaches in safety-critical domains with industrial applications. Conclusion: We notably see a lack of research on counterexample explanation that targets probabilistic and real-time systems, leverages the explanations to domain-specific models, and evaluates approaches in user studies. We conclude by discussing the adequacy of different types of explanations for users with varying domain and formal methods expertise, showing the need to support laypersons in understanding model checking results to increase adoption of formal methods in industry.
C1 [Kaleeswaran, Arut Prakash; Nordmann, Arne] Bosch Corp Sect Res, Renningen, Germany.
   [Kaleeswaran, Arut Prakash; Vogel, Thomas; Grunske, Lars] Humboldt Univ, Berlin, Germany.
C3 Humboldt University of Berlin
RP Kaleeswaran, AP (corresponding author), Bosch Corp Sect Res, Renningen, Germany.
EM arutprakash.kaleeswaran@de.bosch.com; arne.nordmann@de.bosch.com;
   thomas.vogel@informatik.hu-berlin.de; grunske@informatik.hu-berlin.de
RI Grunske, Lars/AAH-4550-2019
OI Grunske, Lars/0000-0002-8747-3745; Nordmann, Arne/0000-0002-0179-1655
CR Abraham E., 2010, Proceedings of the 2010 Seventh International Conference on the Quantitative Evaluation of Systems (QEST 2010), P37, DOI 10.1109/QEST.2010.13
   Aljazzar Husain, 2011, Model Checking Software. Proceedings 18th International SPIN Workshop, P183, DOI 10.1007/978-3-642-22306-8_13
   Aljazzar H, 2009, INT CONF QUANT EVAL, P299, DOI 10.1109/QEST.2009.8
   Aljazzar H, 2008, INT CONF QUANT EVAL, P189, DOI 10.1109/QEST.2008.40
   Aljazzar H, 2010, IEEE T SOFTWARE ENG, V36, P37, DOI 10.1109/TSE.2009.57
   Amla N, 2005, LECT NOTES COMPUT SC, V3725, P254
   Angelov K, 2013, J LOGIC ALGEBR PROGR, V82, P216, DOI 10.1016/j.jlap.2013.03.002
   [Anonymous], 2007, International Journal on Software Tools for Technology Transfer, V9, P429, DOI 10.1007/s10009-007-0049-7
   [Anonymous], 2017, 27 EUROPEAN SAFETY R
   [Anonymous], 2013, 2013 IEEE 18 C EMERG
   [Anonymous], 2015, PLCVERIF TOOL VERIFY, DOI DOI 10.18429/JACOW-ICALEPCS2015-WEPGF092
   [Anonymous], 1994, DIMACS
   [Anonymous], 2001, MODEL CHECKING
   Arcaini P, 2017, IEEE INT CONF SOFTW, P476, DOI 10.1109/ICST.2017.54
   Autili M, 2015, IEEE T SOFTWARE ENG, V41, P620, DOI 10.1109/TSE.2015.2398877
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Ball T, 2003, ACM SIGPLAN NOTICES, V38, P97, DOI 10.1145/640128.604140
   Ball T, 2002, ACM SIGPLAN NOTICES, V37, P1, DOI 10.1145/565816.503274
   Barbon G., 2019, IEEE T SOFTWARE ENG, P1
   Barbon G, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P107, DOI 10.1109/ICSE-Companion.2019.00050
   Barbon G, 2019, LECT NOTES COMPUT SC, V11427, P386, DOI 10.1007/978-3-030-17462-0_26
   Barbon G, 2018, LECT NOTES COMPUT SC, V10886, P173, DOI 10.1007/978-3-319-92970-5_11
   Beer I, 2012, FORM METHOD SYST DES, V40, P20, DOI 10.1007/s10703-011-0132-2
   Bengtsson J., 1996, Tools and Algorithms for the Construction and Analysis of Systems. Second International Workshop, TACAS '96. Proceedings, P431
   Beyer Dirk, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P401, DOI 10.1007/978-3-662-46681-0_31
   Beyer D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P721, DOI 10.1145/2786805.2786867
   Biallas S, 2015, IFAC PAPERSONLINE, V48, P79, DOI 10.1016/j.ifacol.2015.06.476
   Biere A., 2002, ELECT NOTES THEOR CO, V66, P160, DOI [DOI 10.1016/S1571-0661(04)80410-9, 10.1016/S1571-0661(04)80410-9]
   Bochot T., 2010, Proceedings 2010 IEEE 12th International Symposium on High-Assurance Systems Engineering (HASE), P74, DOI 10.1109/HASE.2010.15
   Bolton M. L., 2010, 2010 IEEE International Conference on Systems, Man and Cybernetics (SMC 2010), P2069, DOI 10.1109/ICSMC.2010.5641711
   Brayton R. K., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P428
   Brezocnik Z., 2014, Proceedings of the 2014 International SPIN Symposium on Model Checking of Software, P125
   Busard S, 2018, LECT NOTES COMPUT SC, V10951, P129, DOI 10.1007/978-3-319-95582-7_8
   Campetelli A., 2015, GEM TAG WORKSH TAG S, P91
   Campetelli A., 2011, 24 INT C COMP APPL I
   Castillos KC, 2015, IEEE ICST WORKSHOP
   Chamarthi HR, 2011, LECT NOTES COMPUT SC, V6605, P291, DOI 10.1007/978-3-642-19835-9_27
   Chang KH, 2007, IEEE T COMPUT AID D, V26, P152, DOI 10.1109/TCAD.2006.882511
   Charters S, 2007, GUIDELINES PERFORMIN
   Cimatti A., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P495
   Cimatti A., 2002, P INT C COMP AID VER, P359, DOI DOI 10.1007/3-540-45657-0_29
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Clarke E, 2002, IEEE S LOG, P19, DOI 10.1109/LICS.2002.1029814
   Clarke E, 2003, LECT NOTES COMPUT SC, V2772, P208
   Clarke E, 2001, LECT NOTES COMPUT SC, V2000, P176
   Clarke. E. M., 1982, LOGICS OF PROGRAMS, P52, DOI [10 . 1007 / BFb0025774, DOI 10.1007/BFB0025774]
   Clarke E.M., 2018, Handbook of Model Checking, DOI [DOI 10.1007/978-3-319-10575-8_1, 10.1007/978-3-319-10575-8_1]
   Clarke EM, 2008, LECT NOTES COMPUT SC, V5000, P1
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   Clavel M., 2007, ALL MAUDE A HIGH PER, DOI DOI 10.1007/978-3-540-71999-1
   Collavizza H, 2014, INT J SOFTW TOOLS TE, V16, P103, DOI 10.1007/s10009-012-0258-6
   Copty F., 2003, International Journal on Software Tools for Technology Transfer, V4, P335, DOI 10.1007/s10009-002-0097-y
   Crapo A, 2017, INT REQUIR ENG CONF, P283, DOI 10.1109/RE.2017.54
   Crapo AW, 2019, IEEE INT C SEMANT CO, P361, DOI [10.1109/ICOSC.2019.8665630, 10.1109/ICSC.2019.00071]
   D'Silva V, 2008, IEEE T COMPUT AID D, V27, P1165, DOI 10.1109/TCAD.2008.923410
   de Jonge M, 2010, LECT NOTES COMPUT SC, V6349, P124
   Debbi Hichem, 2013, CIT. Journal of Computing and Information Technology, V21, P13, DOI 10.2498/cit.1002115
   Dominguez Alma L. Juarez, 2013, CS201306 U WAT
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Edelkamp S., 2004, International Journal on Software Tools for Technology Transfer, V5, P247, DOI 10.1007/s10009-002-0104-3
   Edelkamp Stefan, 2008, Model Checking and Artificial Intelligence. 5th International Workshop, MoChArt 2008. Revised Selected and Invited Papers, P65
   Edelkamp S., 2001, Model Checking Software. 8th International SPIN Workshop. Proceedings (Lecture Notes in Computer Science Vol.2057), P57
   Edelkamp S, 1998, LECT NOTES ARTIF INT, V1504, P81
   Eker S, 2003, LECT NOTES COMPUT SC, V2648, P230
   Eker Steven., 2004, ELECTRON NOTES THEOR, V71, P162, DOI [DOI 10.1016/S1571-0661(05)82534-4, 10.1016/S1571-0661(05)82534-4]
   Elamkulam Janees., 2006, Hardware and Software, Verification and Testing, Second International Haifa Verification Conference, HVC 2006, Haifa, Israel, October 23-26, P109, DOI [10.1007/978-3-540-70889-6_8, DOI 10.1007/978-3-540-70889-6_8]
   Feng L, 2018, IEEE INT CONF ROBOT, P7292
   Gabmeyer S, 2019, SOFTW SYST MODEL, V18, P473, DOI 10.1007/s10270-017-0591-z
   Gastin P, 2004, LECT NOTES COMPUT SC, V2989, P92
   Gastin P, 2007, LECT NOTES COMPUT SC, V4595, P24
   Gerking C., 2015, MODEVVAMODELS, P18
   Goldsby H, 2006, LECT NOTES COMPUT SC, V4199, P707
   Grimm T, 2018, ELECTRONICS-SWITZ, V7, DOI 10.3390/electronics7060081
   Groce A, 2004, LECT NOTES COMPUT SC, V3114, P453
   Groce A, 2003, LECT NOTES COMPUT SC, V2648, P121
   Groce A., 2006, International Journal on Software Tools for Technology Transfer, V8, P229, DOI 10.1007/s10009-005-0202-0
   Gurfinkel A, 2003, LECT NOTES COMPUT SC, V2761, P266
   Gurfinkel A, 2003, IEEE T SOFTWARE ENG, V29, P898, DOI 10.1109/TSE.2003.1237171
   Halpern JY, 2005, BRIT J PHILOS SCI, V56, P843, DOI 10.1093/bjps/axi147
   Hansen H, 2008, SEFM 2008: SIXTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P53, DOI 10.1109/SEFM.2008.18
   Hansen Henri., 2006, ACSD 06 P 6 INT C AP, P133
   Heljanko K, 2006, LECT NOTES COMPUT SC, V4144, P95, DOI 10.1007/11817963_12
   Hinton A, 2006, LECT NOTES COMPUT SC, V3920, P441
   Hölzl F, 2010, LECT NOTES COMPUT SC, V6100, P317, DOI 10.1007/978-3-642-16277-0_13
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Jansen Nils, 2012, Automated Technology for Verification and Analysis. Proceedings of the 10th International Symposium, ATVA 2012, P349, DOI 10.1007/978-3-642-33386-6_27
   Jansen N, 2011, LECT NOTES COMPUT SC, V6996, P443, DOI 10.1007/978-3-642-24372-1_33
   Jeong S., 2010, ISORC, DOI 10.1109/isorc.2010.41
   Jianbin Tan, 2004, Software Engineering Notes, V29, P201, DOI 10.1145/1041685.1029922
   Jin H., 2004, International Journal on Software Tools for Technology Transfer, V6, P102, DOI 10.1007/s10009-004-0146-9
   Kaleeswaran Arut Prakash, 2020, Model-Based Safety and Assessment. 7th International Symposium, IMBSA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12297), P99, DOI 10.1007/978-3-030-58920-2_7
   Kaleeswaran Arut Prakash., 2021, Zenodo, DOI DOI 10.5281/ZENODO.5679227
   Kanav S., 2017, MODELS, P300
   Karna AK, 2018, FRONT COMPUT SCI-CHI, V12, P642, DOI 10.1007/s11704-016-6192-0
   Katoen JP, 2011, PERFORM EVALUATION, V68, P90, DOI 10.1016/j.peva.2010.04.001
   Katoen JP, 2005, INT CONF QUANT EVAL, P243, DOI 10.1109/QEST.2005.2
   Kaufmann M., 2013, Computer-aided reasoning: ACL2 case studies, V4
   Kroening Daniel, 2014, TOOLS ALGORITHMS CON, P389, DOI [10.1007/978-3-642-54862-8_26, DOI 10.1007/978-3-642-54862-8_26]
   Kumar N, 2005, LECT NOTES COMPUT SC, V3385, P448
   Kumazawa T, 2011, LECT NOTES COMPUT SC, V6617, P222, DOI 10.1007/978-3-642-20398-5_17
   Kuntz Matthias, 2011, Computer Safety, Reliability, and Security. Proceedings 30th International Conference, SAFECOMP 2011, P71, DOI 10.1007/978-3-642-24270-0_6
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Leitner-Fischer Florian, 2013, International Journal of Critical Computer-Based Systems, V4, P119, DOI 10.1504/IJCCBS.2013.056492
   Leitner-Fischer Florian, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P246, DOI 10.1007/978-3-642-39176-7_16
   Leitner-Fischer F, 2013, LECT NOTES COMPUT SC, V7737, P248
   Leitner-Fischer Florian., 2014 International Symposium on Model Checking of Software, SPIN 2014, Proceedings, San Jose, CA, USA, July 21-23, P117, DOI DOI 10.1145/2632362.2632371
   Leue Stefan, 2012, Model Checking Software. Proceedings 19th International Workshop, SPIN 2012, P24, DOI 10.1007/978-3-642-31759-0_5
   Li M, 2016, IEEE T RELIAB, V65, P88, DOI 10.1109/TR.2015.2456853
   Liu SY, 2016, FME WORKS FORM, P29, DOI [10.1145/2897667.2897668, 10.1109/FormaliSE.2016.013]
   Loer K., 2006, Automated Software Engineering, V13, P469, DOI 10.1007/s10515-006-7999-y
   Luteberget Bjornar, 2017, Software Engineering and Formal Methods. 15th International Conference, SEFM 2017. Proceedings: Lecture Notes in Computer Society (LNCS 10469), P87, DOI 10.1007/978-3-319-66197-1_6
   Luteberget B, 2018, FORM METHOD SYST DES, V52, P1, DOI 10.1007/s10703-017-0281-z
   Aung MT, 2018, PROCEEDINGS OF 2018 7TH INTERNATIONAL CONFERENCE ON SOFTWARE AND COMPUTER APPLICATIONS (ICSCA 2018), P194, DOI 10.1145/3185089.3185110
   McMillan Kenneth L., 1993, SYMBOLIC MODEL CHECK, P61
   Moitra A, 2019, REQUIR ENG, V24, P341, DOI 10.1007/s00766-019-00316-x
   Moitra A, 2018, INT REQUIR ENG CONF, P286, DOI 10.1109/RE.2018.00036
   Muram F.U., 2015, 13 INT BUS PROC MAN, P515
   Ovatman T, 2016, SOFTW SYST MODEL, V15, P937, DOI 10.1007/s10270-014-0448-7
   Ovsiannikova P, 2020, IEEE INT C ENG COMP, P1, DOI 10.1109/ICECCS51672.2020.00008
   Ovsiannikova P, 2021, IEEE ACCESS, V9, P61383, DOI 10.1109/ACCESS.2021.3073459
   Padon O, 2016, ACM SIGPLAN NOTICES, V51, P614, DOI [10.1145/2908080.2908118, 10.1145/2980983.2908118]
   Pakonen A, 2021, RELIAB ENG SYST SAFE, V205, DOI 10.1016/j.ress.2020.107237
   Pakonen A, 2018, IEEE INTL CONF IND I, P747, DOI 10.1109/INDIN.2018.8472025
   Pakonen Antti., 2017, 10th International Topical Meeting on Nuclear Plant Instrumentation, Control and Human Machine Interface Technologies (NPIC HMIT 2017), P1342
   Patil S, 2015, IEEE INTL CONF IND I, P1192, DOI 10.1109/INDIN.2015.7281905
   Pelánek R, 2009, LECT NOTES COMPUT SC, V5596, P37, DOI 10.1007/978-3-642-03240-0_7
   Peled Doron., 2001, Proc. 21st Conf. on Foundations of Software Technology and Theroretical Computer Science, P292, DOI DOI 10.1007/3-540-45294
   Phyo Y, 2018, 2018 5TH INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND THEIR APPLICATIONS (DSA), P126, DOI 10.1109/DSA.2018.00030
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Prasad M. R., 2005, International Journal on Software Tools for Technology Transfer, V7, P156, DOI 10.1007/s10009-004-0183-4
   Prasad Sistla A., 1994, Formal Aspects of Computing, V6, P495, DOI 10.1007/BF01211865
   Pu F, 2008, IEEE HI ASS SYS ENGR, P187, DOI 10.1109/HASE.2008.17
   Ratiu D, 2019, FME WORKS FORM, P41, DOI 10.1109/FormaliSE.2019.00013
   Ratiu Daniel., 2021, Domain-Specific Languages in Practice: with JetBrains MPS. Ed. by, P131, DOI DOI 10.1007/978-3-030-73758-0_5
   Ravi K, 2004, LECT NOTES COMPUT SC, V2988, P31
   Schinz I., 2015, SEFM, P174
   Schuppan V, 2005, LECT NOTES COMPUT SC, V3440, P493
   Shen SY, 2005, ASIA S PACIF DES AUT, P451, DOI 10.1145/1120725.1120910
   Shen Shengyu., 2005, CHARME, V5, P393
   Shen SY, 2005, DES AUT TEST EUROPE, P672, DOI 10.1109/DATE.2005.14
   Shen SY, 2004, LECT NOTES COMPUT SC, V3299, P456
   Nguyen TTT, 2018, LECT NOTES COMPUT SC, V10795, P3, DOI 10.1007/978-3-319-90104-6_1
   Nguyen TTT, 2017, 2017 IEEE 15TH INTL CONF ON DEPENDABLE, AUTONOMIC AND SECURE COMPUTING, 15TH INTL CONF ON PERVASIVE INTELLIGENCE AND COMPUTING, 3RD INTL CONF ON BIG DATA INTELLIGENCE AND COMPUTING AND CYBER SCIENCE AND TECHNOLOGY CONGRESS(DASC/PICOM/DATACOM/CYBERSCI, P604, DOI 10.1109/DASC-PICom-DataCom-CyberSciTec.2017.107
   Nguyen TTT, 2017, 2017 ANNUAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2017), P53, DOI 10.1109/SATE.2017.15
   van den Berg L, 2007, ELECTRON NOTES THEOR, V174, P19, DOI 10.1016/j.entcs.2006.12.027
   Visser W, 2012, SOFTW SYST MODEL, V11, P541, DOI 10.1007/s10270-012-0281-9
   Wang F, 2004, P IEEE, V92, P1283, DOI 10.1109/JPROC.2004.831197
   Weitl F., 2010, WWV, P34
   Wimmer R, 2014, THEOR COMPUT SCI, V549, P61, DOI 10.1016/j.tcs.2014.06.020
   Wimmer R, 2012, LECT NOTES COMPUT SC, V7214, P299, DOI 10.1007/978-3-642-28756-5_21
   Wohlin C., 2000, KLUWER INT SERIES SO, V6
   Yang Zhao, 2011, Proceedings of the 2011 IEEE 5th International Symposium on Theoretical Aspects of Software Engineering (TASE 2011), P68, DOI 10.1109/TASE.2011.35
   Zheng ZX, 2016, COGN TECHNOL WORK, V18, P777, DOI 10.1007/s10111-016-0391-1
NR 155
TC 4
Z9 5
U1 1
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2022
VL 145
AR 106800
DI 10.1016/j.infsof.2021.106800
EA JAN 2022
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YJ4XL
UT WOS:000744536600003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Dogan, E
   Tüzün, E
AF Dogan, Emre
   Tuzun, Eray
TI Towards a taxonomy of code review smells
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Modern code review; Bad practices; Conformance checking; Code review
   smell; Process smell; Process debt
ID FRAMEWORK
AB Context: Code review is a crucial step of the software development life cycle in order to detect possible problems in source code before merging the changeset to the codebase. Although there is no consensus on a formally defined life cycle of the code review process, many companies and open source software (OSS) communities converge on common rules and best practices. In spite of minor differences in different platforms, the primary purpose of all these rules and practices leads to a faster and more effective code review process. Non-conformance of developers to this process does not only reduce the advantages of the code review but can also introduce waste in later stages of the software development. Objectives: The aim of this study is to provide an empirical understanding of the bad practices followed in the code review process, that are code review (CR) smells. Methods: We first conduct a multivocal literature review in order to gather code review bad practices discussed in white and gray literature. Then, we conduct a targeted survey with 32 experienced software practitioners and perform follow-up interviews in order to get their expert opinion. Based on this process, a taxonomy of code review smells is introduced. To quantitatively demonstrate the existence of these smells, we analyze 226,292 code reviews collected from eight OSS projects. Results: We observe that a considerable number of code review smells exist in all projects with varying degrees of ratios. The empirical results illustrate that 72.2% of the code reviews among eight projects are affected by at least one code review smell. Conclusion: The empirical analysis shows that the OSS projects are substantially affected by the code review smells. The provided taxonomy could provide a foundation for best practices and tool support to detect and avoid code review smells in practice.
C1 [Dogan, Emre; Tuzun, Eray] Bilkent Univ, Dept Comp Engn, Ankara, Turkey.
C3 Ihsan Dogramaci Bilkent University
RP Dogan, E (corresponding author), Bilkent Univ, Dept Comp Engn, Ankara, Turkey.
EM emredogan7@outlook.com
RI Tuzun, Eray/AAD-7282-2021
OI Tuzun, Eray/0000-0002-5550-7816
CR Alami A, 2019, PROC INT CONF SOFTW, P1073, DOI 10.1109/ICSE.2019.00111
   Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   [Anonymous], 2020, 10 FAULTY BEHAV CODE
   [Anonymous], 2020, DEV GETINVOLVED DOCU
   [Anonymous], 2020, LINUS TORVALDS I DO
   [Anonymous], 2019, INT C AG SOFTW DEV
   [Anonymous], 2020, WHY CODE REV MATTER
   [Anonymous], 2020, PULL REQUEST BEST PR
   [Anonymous], 2020, ECLIPSE DEV PROCESS
   [Anonymous], 2020, VTK DEVELOPERS NO SE
   [Anonymous], 2020, CODE REV GUIDELINES
   [Anonymous], 2020, GOOGLE ENG PRACTICES
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2020, MANAGE PULL REQUESTS
   [Anonymous], 2020, WHAT IS CODE REV
   [Anonymous], 2020, CODE REV BEST PRAC 1
   [Anonymous], 2020, 7 CODE REV BEST PRAC
   [Anonymous], 2020, MAKE GOOD CODE REV B
   [Anonymous], 2020, WE CODE REV APP CTR
   [Anonymous], 2015, DJANGO DJANGO CONTRI
   [Anonymous], 2020, STATE CODE REV 2019
   [Anonymous], 2012, INT C SOFTW QUAL
   [Anonymous], 2020, DEV SUBMITTINGPATCHE
   [Anonymous], 2020, REV POLICY QT WIKI
   [Anonymous], 2020, CODE REV BEST PRACTI
   [Anonymous], 2008, Proceedings of the 2008 international working conference on Mining software repositories
   Baum T, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P85, DOI 10.1145/2950290.2950323
   Bavota G, 2015, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSM.2015.7332454
   Bayona-Oré S, 2014, SOFTWARE QUAL J, V22, P21, DOI 10.1007/s11219-012-9190-y
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Bird C, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P191, DOI 10.1109/MSR.2015.25
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Maita ARC, 2018, ENTERP INF SYST-UK, V12, P505, DOI 10.1080/17517575.2017.1402371
   Caulo M, 2020, INT C PROGRAM COMPRE, P230, DOI 10.1145/3387904.3389270
   Chouchen M, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P531, DOI 10.1109/SANER50967.2021.00060
   Codabux Z, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P8, DOI 10.1109/MTD.2013.6608672
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Czerwonka J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P27, DOI 10.1109/ICSE.2015.131
   Dalipaj D, 2016, FRONT ARTIF INTEL AP, V286, P115, DOI 10.3233/978-1-61499-674-3-115
   Di Penta M, 2017, PROC IEEE ACM INT C, P499, DOI 10.1109/ICSE-C.2017.163
   Dogan E, 2019, INT SYMP EMP SOFTWAR, P7
   Dueñas S, 2018, PROC IEEE ACM INT C, P1, DOI 10.1145/3183440.3183475
   Ebert F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P49, DOI [10.1109/SANER.2019.8668024, 10.1109/saner.2019.8668024]
   Egelman CD, 2020, PROC INT CONF SOFTW, P174, DOI 10.1145/3377811.3380414
   Ehrendorfer M, 2019, CONF BUS INFORM, P569, DOI 10.1109/CBI.2019.00072
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fagan Michael E., 2002, Software pioneers, P562, DOI DOI 10.1007/978-3-642-59412-0_34
   Fatima Nargis, 2020, ICSIM '20: Proceedings of the 3rd International Conference on Software Engineering and Information Management, P93, DOI 10.1145/3378936.3378953
   Fatima N, 2019, IEEE CONF OPEN SYST, P40, DOI [10.1109/icos47562.2019.8975708, 10.1109/ICOS47562.2019.8975708]
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Garcia J, 2009, EUR CON SFTWR MTNCE, P255, DOI 10.1109/CSMR.2009.59
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   German DM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P523, DOI 10.1145/3180155.3180217
   Greiler M., 2020, CODE REV GOOGLE ARE
   Gupta M, 2014, MSR, P122
   Gupta M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P658, DOI 10.1145/2591062.2591080
   Gupta M, 2014, PROCEEDINGS OF THE 7TH INDIA SOFTWARE ENGINEERING CONFERENCE 2014, ISEC '14, DOI 10.1145/2590748.2590749
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Klünder J, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P255, DOI 10.1109/ICSE-SEIP.2019.00036
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Lemos AM, 2011, IEEE SYS MAN CYBERN, P1181, DOI 10.1109/ICSMC.2011.6083858
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lin, 2020, 2020 IEEE ACM 42 INT
   MacLeod L, 2018, IEEE SOFTWARE, V35, P34, DOI 10.1109/MS.2017.265100500
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Oliveto Rocco, 2007, 2007 IEEE International Conference on Software Maintenance, P485, DOI 10.1109/ICSM.2007.4362664
   Poncin W, 2011, EUR CON SFTWR MTNCE, P5, DOI 10.1109/CSMR.2011.5
   Ram A, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P201, DOI 10.1145/3236024.3236080
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2012, IEEE SOFTWARE, V29, P56, DOI 10.1109/MS.2012.24
   Rubin V, 2007, LECT NOTES COMPUT SC, V4470, P169
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Sedano T, 2017, PROC INT CONF SOFTW, P130, DOI 10.1109/ICSE.2017.20
   Sharma S., 2020, WRITE GOOD PULL REQU
   Shimagaki J, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P212, DOI 10.1145/2889160.2889243
   Tamburri DA, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P93, DOI 10.1109/CHASE.2013.6614739
   Thompson Christopher, 2017, P 13 INT C PREDICTIV, P83
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Usman M, 2017, INFORM SOFTWARE TECH, V85, P43, DOI 10.1016/j.infsof.2017.01.006
   van der Aalst W., 2016, Process Mining: Data Science in Action, DOI DOI 10.1007/978-3-662-49851-4
   van der Aalst W.M., 2014, Proceedings of the 2014 IEEE Emerging Technology and Factory Automation (ETFA), P1, DOI DOI 10.1109/IGBSG.2014.6835217
   van Dongen BF, 2005, LECT NOTES COMPUT SC, V3536, P444
   Van Rompaey B, 2006, PROC IEEE INT CONF S, P391
   Vessey I, 2005, INFORM SOFTWARE TECH, V47, P245, DOI 10.1016/j.infsof.2004.08.006
   Votta L. G.  Jr., 1993, SIGSOFT Software Engineering Notes, V18, P107, DOI 10.1145/167049.167070
   Zampetti F, 2020, EMPIR SOFTW ENG, V25, P1095, DOI 10.1007/s10664-019-09785-8
   Zazworka N, 2009, INT SYMP EMP SOFTWAR, P313
NR 91
TC 16
Z9 16
U1 1
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2022
VL 142
AR 106737
DI 10.1016/j.infsof.2021.106737
EA OCT 2021
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WN5QL
UT WOS:000711821900005
DA 2024-07-18
ER

PT J
AU Firmenich, D
   Firmenich, S
   Rossi, G
   Wimmer, M
   Garrigós, I
   Gonzalez-Mora, C
AF Firmenich, Diego
   Firmenich, Sergio
   Rossi, Gustavo
   Wimmer, Manuel
   Garrigos, Irene
   Gonzalez-Mora, Cesar
TI Engineering Web Augmentation software: A development method for enabling
   end-user maintenance
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Web Augmentation; End-user programming; Web adaptation; End-user driven
   maintenance
AB Nowadays, end-users are able to adapt Web applications when some of their requirements have not been taken into account by developers. One possible way to do adaptations is by using Web Augmentation techniques. Web Augmentation allows end-users to modify the Web sites' user interfaces once these are loaded on the clientside, i.e., in the browser. They achieve these adaptations by developing and/or installing Web browser plugins ("augmenters") that modify the user interface with new functionalities. This particular kind of software artifacts requires special attention regarding maintenance as-in most cases-they depend on third-party resources, such as HTML pages. When these resources are upgraded, unexpected results during the augmentation process may occur. Many communities have arisen around Web Augmentation, and today there are large repositories where developers share their augmenters; end-users may give feedback about existing augmentations and even ask for new ones. Maintenance is a key phase in the augmenters' life-cycle, and currently, this task falls (as usual) on the developers. In this paper, we present a participatory approach for allowing end-users without programming skills to participate in the augmenters' maintenance phase. In order to allow this, we also provide support for the development phase to bootstrap a first version of the augmenter and to reduce the load on developers in both phases, development and maintenance. We present an analysis of more than eight thousand augmenters, which helped us devise the approach. Finally, we present an experiment with 48 participants to validate our approach.
C1 [Firmenich, Diego] Univ Nacl Patagonia San Juan Bosco, Fac Ingn, DIT, Comodoro Rivadavia, Argentina.
   [Firmenich, Sergio; Rossi, Gustavo] UNLP, Fac Informat, Lifia, La Plata, Buenos Aires, Argentina.
   [Firmenich, Sergio; Rossi, Gustavo] Consejo Nacl Invest Cient & Tecn, Buenos Aires, DF, Argentina.
   [Wimmer, Manuel] Johannens Kepler Univ Linz, CDL MINT, Linz, Austria.
   [Garrigos, Irene; Gonzalez-Mora, Cesar] Univ Alicante, Alicante, Spain.
C3 Universidad Nacional de la Patagonia San Juan Bosco; National University
   of La Plata; Consejo Nacional de Investigaciones Cientificas y Tecnicas
   (CONICET); Universitat d'Alacant
RP Firmenich, D (corresponding author), Univ Nacl Patagonia San Juan Bosco, Fac Ingn, DIT, Comodoro Rivadavia, Argentina.
EM dfirmenich@tw.unp.edu.ar
RI Garrigos, Irene/HGE-8463-2022; Firmenich, Diego/AGY-2271-2022; Garrigos,
   Irene/R-6595-2018
OI Firmenich, Diego/0000-0002-7212-4454; Firmenich,
   Sergio/0000-0001-9502-2189; Garrigos, Irene/0000-0001-5869-5245
CR Aldalur I., 2017, P ACM SIGCHI S ENG I, P45
   Aldalur I, 2017, New perspectives in end-user development, P433
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], 2018, REFACTORING IMPROVIN
   Asakawa C., 2019, HUMAN COMPUTER INTER, Vsecond, P569
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bigham JeffreyP., 2007, P 2007 INT CROSS DIS, P25
   Diaz O., 2015, RAPID MASHUP DEV TOO, P82
   Diaz O., 2008, PROCEEDINGS OF WWW 2, P1127
   Díaz O, 2015, ACM T WEB, V9, DOI 10.1145/2735633
   Díaz O, 2013, ACM T WEB, V7, DOI 10.1145/2460383.2460388
   Díaz O, 2010, LECT NOTES COMPUT SC, V6189, P233, DOI 10.1007/978-3-642-13911-6_16
   Ferrara E, 2014, KNOWL-BASED SYST, V70, P301, DOI 10.1016/j.knosys.2014.07.007
   Ferrara E, 2011, ICAART 2011: PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON AGENTS AND ARTIFICIAL INTELLIGENCE, VOL 1, P211
   Firmenich D, 2018, REQUIR ENG, V23, P33, DOI 10.1007/s00766-016-0257-3
   Firmenich D, 2014, LECT NOTES COMPUT SC, V8541, P1, DOI 10.1007/978-3-319-08245-5_1
   Firmenich Sergio, 2013, Web Engineering. 13th International Conference, ICWE 2013. Proceedings: LNCS 7977, P224, DOI 10.1007/978-3-642-39200-9_20
   Firmenich S, 2014, LECT NOTES COMPUT SC, V8541, P359, DOI 10.1007/978-3-319-08245-5_21
   Garrido A, 2013, IEEE INTERNET COMPUT, V17, P58, DOI 10.1109/MIC.2012.143
   González-Mora C, 2020, LECT NOTES COMPUT SC, V12128, P547, DOI 10.1007/978-3-030-50578-3_42
   Inkpen K. M., 2001, ACM Transactions on Computer-Human Interaction, V8, P1, DOI 10.1145/371127.371146
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Karthikeyan T., 2019, International Journal of Web Portals, V11, P41, DOI 10.4018/IJWP.2019070103
   Ko AJ, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922658
   Leotta M, 2016, J SOFTW-EVOL PROC, V28, P177, DOI 10.1002/smr.1771
   Leshed G, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1719
   Little G, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P943
   MacKenzie IS, 1991, P SIGCHI C HUM FACT, P161, DOI [10.1145/108844.108868, DOI 10.1145/108844.108868]
   Marcotte E., 2011, RESPONSIVE WEB DESIG
   McHugh ML, 2013, BIOCHEM MEDICA, V23, P143, DOI 10.11613/BM.2013.018
   Meng X., 2003, Proceedings of the 5th ACM international workshop on Web information and data management, P1, DOI DOI 10.1145/956699.956701
   Pahl C, 2004, INFORM SOFTWARE TECH, V46, P973, DOI 10.1016/j.infsof.2004.04.004
   Pandis N, 2016, AM J ORTHOD DENTOFAC, V150, P898, DOI 10.1016/j.ajodo.2016.08.009
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Stolee KT, 2013, INFORM SOFTWARE TECH, V55, P1289, DOI 10.1016/j.infsof.2012.10.004
   Urbieta Matias, 2013, 2013 15th IEEE International Symposium on Web Systems Evolution (WSE), P77, DOI 10.1109/WSE.2013.6642420
   Wilson EB, 1931, P NATL ACAD SCI USA, V17, P684, DOI 10.1073/pnas.17.12.684
   Wohlin C., 2012, Experimentation in Software Engineering
   Wong J, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1435
NR 39
TC 2
Z9 2
U1 1
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2022
VL 141
AR 106735
DI 10.1016/j.infsof.2021.106735
EA OCT 2021
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WN5RZ
UT WOS:000711825900001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Dopazo, DA
   Pelayo, VM
   Fuster, GG
AF Adanza Dopazo, Daniel
   Moreno Pelayo, Valentin
   Genova Fuster, Gonzalo
TI An automatic methodology for the quality enhancement of requirements
   using genetic algorithms
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements engineering; Genetic algorithm; Requirements quality
AB Context: The set of requirements for any project offers common ground where the client and the company agree on the most important features and limitations of the project. Having a set of requirements of the highest possible quality is of enormous importance; benefits include improving project quality, understanding client needs better, reducing costs, and predicting project schedules and results with greater accuracy. Objective: This paper's primary goal is to create a methodology that can provide effective and efficient solutions for modifying poor requirements integrated into a full-fledged system, extracting the main features of each requirement, assessing their quality at an expert level, and, finally, enhancing the quality of the requirements. Method: In the first step, a machine learning algorithm is implemented to classify requirements based on quality and identify those that are the likeliest to be problematic. In the second step, the genetic algorithm generated solutions to enhance the quality of the requirements identified as inferior. Results: The results of the genetic algorithm are compared with the theoretically optimal solution. The paper demonstrates the significant flexibility of genetic algorithms, which create a wide variety of solutions and can adapt to any type of classifier. From the initial dataset of requirements, the genetic algorithm finds the optimal solution in 85% of cases after 10 iterations and achieves 59.8% success after only one iteration. Conclusions: Genetic algorithms are promising tools for requirements engineering by delivering benefits such as saving costs, automating tasks, and providing more solid and efficient planning in any project through the generation of new solutions.
C1 [Adanza Dopazo, Daniel; Moreno Pelayo, Valentin; Genova Fuster, Gonzalo] Univ Carlos III Madrid, Knowledge Reuse Grp, Av Univ 30, Madrid 28911, Spain.
C3 Universidad Carlos III de Madrid
RP Dopazo, DA (corresponding author), Univ Carlos III Madrid, Knowledge Reuse Grp, Av Univ 30, Madrid 28911, Spain.
EM 100371746@alumnos.uc3m.es; vmpelayo@kr.inf.uc3m.es; ggenova@uc3m.es
OI Genova, Gonzalo/0000-0003-0299-286X; MORENO,
   VALENTIN/0000-0002-8731-7443; Adanza Dopazo, Daniel/0000-0001-6684-9988
FU RESTART project [RTI2018-099915-B-I00]; Convocatoria Proyectos de I + D
   Retos Investigacion del Programa Estatal de I + D + i Orientada a los
   Retos de la Sociedad; MOMEBIA project-"Monitorizacion del Mercado
   Electrico Basada en tecnicas de Inteligencia Artificial"
   [RTC2019-007501-7]; Ministerio de Ciencia e Innovacion - Agencia Estatal
   de Investigacion
FX This research has received funding from the RESTART project -"Continuous
   Reverse Engineering for Software Product Lines/Ingenieria Inversa
   Continua para Lineas de Productos de Software" (ref.
   RTI2018-099915-B-I00, Convocatoria Proyectos de I + D Retos
   Investigacion del Programa Estatal de I + D + i Orientada a los Retos de
   la Sociedad 2018, MOMEBIA project-"Monitorizacion del Mercado Electrico
   Basada en tecnicas de Inteligencia Artificial" (ref. RTC2019007501-7,
   Convocatoria de Proyectos de I + D + i << RetosColaboracion >>
   2019-Ministerio de Ciencia e Innovacion - Agencia Estatal de
   Investigacion).
CR Ali R, 2013, INFORM SOFTWARE TECH, V55, P35, DOI 10.1016/j.infsof.2012.06.013
   Bai H, 2003, INT J PROD RES, V41, P3861, DOI 10.1080/0020754031000138367
   Bakar NH, 2015, J SYST SOFTWARE, V106, P132, DOI 10.1016/j.jss.2015.05.006
   Casamayor A, 2010, INFORM SOFTWARE TECH, V52, P436, DOI 10.1016/j.infsof.2009.10.010
   Cha YJ, 2012, EXPERT SYST APPL, V39, P7822, DOI 10.1016/j.eswa.2012.01.070
   Chen SY, 2015, MATH PROBL ENG, V2015, DOI 10.1155/2015/521482
   Daramola O., 2012, 2012 IEEE Second International Workshop on Requirements Patterns (RePa 2012), P54, DOI 10.1109/RePa.2012.6359973
   Dargan JL, 2014, PROCEDIA COMPUT SCI, V28, P347, DOI 10.1016/j.procs.2014.03.043
   Fuentes J., 2016, 26 ANN INCOSE INT S, V1, P1875, DOI [10.1002/j.2334-5837.2016.00267.x, DOI 10.1002/J.2334-5837.2016.00267.X]
   Garousi V, 2010, IEEE T SOFTWARE ENG, V36, P778, DOI 10.1109/TSE.2010.5
   Génova G, 2013, REQUIR ENG, V18, P25, DOI 10.1007/s00766-011-0134-z
   Goldberg D. E., 1989, GENETIC ALGORITHMS S
   Gupta V, 2012, PROCEDIA ENGINEER, V38, P3614, DOI 10.1016/j.proeng.2012.06.418
   Heck P, 2018, SOFTWARE QUAL J, V26, P127, DOI 10.1007/s11219-016-9336-4
   Hull E., 2011, REQUIR ENG
   Jani HM, 2012, 2012 6TH INTERNATIONAL CONFERENCE ON NEW TRENDS IN INFORMATION SCIENCE, SERVICE SCIENCE AND DATA MINING (ISSDM2012), P152
   Karova M., 2008, GENETIC ALGORITHM PR, P647
   Matsumoto Y, 2017, PROCEDIA COMPUT SCI, V112, P157, DOI 10.1016/j.procs.2017.08.006
   Parra E., 2016, METODOLOGIA ORIENTAD
   Parra E, 2018, PROC IEEE ACM INT C, P199, DOI 10.1145/3183440.3195095
   Parra E, 2015, INFORM SOFTWARE TECH, V67, P180, DOI 10.1016/j.infsof.2015.07.006
   Popescu Daniel, 2007, Innovations for Requirements Analysis. From Stakeholders' Needs to Formal Designs.14th Monterey Workshop 2007. Revised Selected Papers, P103
   Pressman R., 2005, INGENIERIA SOFTWARE
   Pressman Roger, 2015, SOFTWARE ENG PRACTIT, V8TH
   Santos R, 2016, PROCEDIA COMPUT SCI, V91, P909, DOI 10.1016/j.procs.2016.07.109
   Sardinha A, 2013, AUTOMAT SOFTW ENG, V20, P111, DOI 10.1007/s10515-012-0106-7
   Thakurta R, 2013, SOFTWARE QUAL J, V21, P573, DOI 10.1007/s11219-012-9188-5
   Tonella P, 2013, INFORM SOFTWARE TECH, V55, P173, DOI 10.1016/j.infsof.2012.07.003
   Tsoulos IG, 2016, COMPUT PHYS COMMUN, V209, P183, DOI 10.1016/j.cpc.2016.09.006
   Yue Wang, 2013, Natural Language Processing and Information Systems. 18th International Conference on Applications of Natural Language to Information Systems, NLDB 2013. Proceedings: LNCS 7934, P25, DOI 10.1007/978-3-642-38824-8_3
NR 30
TC 8
Z9 8
U1 2
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2021
VL 140
AR 106696
DI 10.1016/j.infsof.2021.106696
EA AUG 2021
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UY8FG
UT WOS:000701752600008
DA 2024-07-18
ER

PT J
AU Fuller, RC
   Kruchten, P
AF Fuller, Robert C.
   Kruchten, Philippe
TI Blurring boundaries: Toward the collective empathic understanding of
   product requirements
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements understanding and validation; Empathy-driven development;
   Product team organisation; Collective sensemaking; Constructivist
   Grounded Theory
ID DESIGN; PERFORMANCE; SENSE; USERS
AB Context: Many software product companies create cross-functional development teams that own a product or a defined set of features. These product teams often require a deep and collective understanding of the product domain, a rich context within which to understand the product requirements and to make decisions throughout the development process. Objective: Little is known about what supports or impedes these teams in collectively achieving this deep understanding. This paper identifies certain organisational conditions that impact teams in this respect. Method: Using Constructivist Grounded Theory method, we studied 18 teams across seven software companies creating products for a diverse range of markets. Results: The study found certain organisational and planning process factors play a significant role in whether product development teams have the potential to collectively develop deep domain understanding. These factors also impact individual and development team dynamics. Conclusions: We identify two essential metaphorical dynamics, broadening the lens and blurring boundaries, that cross-functional product teams employ in order to fully embrace product ownership, visioning, and planning towards achieving this rich context for understanding product requirements. We also conclude that the highly specialised nature of many organisational models and development processes is contraindicated for crossfunctional product development teams in achieving this deep collective understanding and we call for a revisiting of conventional organisational and product planning practices for software product development.
C1 [Fuller, Robert C.; Kruchten, Philippe] Univ British Columbia, Elect & Comp Engn, Vancouver, BC, Canada.
C3 University of British Columbia
RP Fuller, RC (corresponding author), 3656 W 14th Ave, Vancouver, BC V6R 2W5, Canada.
EM rfuller@ece.ubc.ca; pbk@ece.ubc.ca
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
   [RGPIN-2017-03917]
FX This research was funded in part by the Natural Sciences and
   Engi-neering Research Council of Canada (NSERC) , Discovery Grant
   Program, grant RGPIN-2017-03917.
CR Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   ANCONA DG, 1992, ORGAN SCI, V3, P321, DOI 10.1287/orsc.3.3.321
   [Anonymous], 2004, XP Ser
   [Anonymous], 2014, WELL DESIGNED CREATE
   [Anonymous], 2001, MANIFESTO AGILE SOFT
   [Anonymous], 2020, NAPIRE NAMING PAIN R
   [Anonymous], 2012, QUALITATIVE RES DESI
   [Anonymous], 2010, 2010 DES RES SOC C
   [Anonymous], 2014, DESIGN SCI METHODOLO, DOI DOI 10.1145/1810295.1810446
   Awa KaluIdika., 2016, IOSR J BUSINESS MANA, V18, P01
   BERRY DM, 1995, J SYST SOFTWARE, V28, P179, DOI 10.1016/0164-1212(94)00054-Q
   Boehm B, 2000, COMPUTER, V33, P99, DOI 10.1109/2.869384
   Burt R. S., 2005, BROKERAGE CLOSURE IN
   Cohn M, 2004, USER STORIES APPL AG, DOI [10.1017/CBO9781107415324.004, DOI 10.1017/CBO9781107415324.004]
   Dagenais B., 2010, Proc. of the ICSE 10, P275, DOI DOI 10.1145/1806799.1806842
   Dong YM, 2018, ADV INTELL SYST, V586, P295, DOI 10.1007/978-3-319-60642-2_28
   Edmondson AC, 2014, ANNU REV ORGAN PSYCH, V1, P23, DOI 10.1146/annurev-orgpsych-031413-091305
   Eisner E.W., 1998, ENLIGHTENED EYE QUAL
   Fernández DM, 2017, EMPIR SOFTW ENG, V22, P2298, DOI 10.1007/s10664-016-9451-7
   Fuller R.C, 2019, 5 INT C ADV TRENDS S, P37
   Fuller R, 2019, LECT NOTES BUS INF P, V350, P87, DOI 10.1007/978-3-030-21297-1_8
   Fuller R, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP 2019), P120, DOI 10.1109/ICSSP.2019.00024
   GLADSTEIN DL, 1984, ADMIN SCI QUART, V29, P499, DOI 10.2307/2392936
   Google re, 2020, REW GUID UND TEAM EF
   Grok, 1989, OXFORD ENGLISH DICT, V2nd
   Guinan PJ, 1998, INFORM SYST RES, V9, P101, DOI 10.1287/isre.9.2.101
   Heinlein R.A., 1961, STRANGER STRANGE LAN
   Highsmith J., 2002, ADAPTIVE SOFTWARE DE
   Hoda R, 2017, PROC INT CONF SOFTW, P141, DOI 10.1109/ICSE.2017.21
   Hoegl M, 2001, ORGAN SCI, V12, P435, DOI 10.1287/orsc.12.4.435.10635
   Klein G, 2006, IEEE INTELL SYST, V21, P88, DOI 10.1109/MIS.2006.100
   Koppen E., 2012, Design Philosophy Papers, V10, P35, DOI DOI 10.2752/089279312X13968781797553
   Kouprie M, 2009, J ENG DESIGN, V20, P437, DOI 10.1080/09544820902875033
   Krznaric Roman., 2014, Empathy: Why It Matters, and How to Get It
   Kuhn Thomas S, 2012, STRUCTURE SCI REVOLU, DOI DOI 10.7208/CHICAGO/9780226458144.001.0001
   Kurtz CF, 2003, IBM SYST J, V42, P462, DOI 10.1147/sj.423.0462
   Mitchell R, 2009, INTERGROUP RELAT, V12
   Mohanani R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P895, DOI 10.1145/2568225.2568235
   Naumer CharlesM., 2008, CHI2008, P1
   NVIVO, 2018, COMPUTER SOFTWARE
   Polanyi M., 1966, Knowledge in Organisations
   Postma CE, 2012, INT J DES, V6, P59
   Ralph P, 2015, 2015 IEEE/ACM 5TH INTERNATIONAL WORKSHOP ON THE TWIN PEAKS OF REQUIREMENTS AND ARCHITECTURE (TWINPEAKS), P20, DOI 10.1109/TwinPeaks.2015.12
   Ralph P, 2013, REQUIR ENG, V18, P293, DOI 10.1007/s00766-012-0161-4
   Reiter-Palmon, 2017, TEAM CREATIVITY INNO, DOI [10.1093/oso/9780190222093.001.0001, DOI 10.1093/OSO/9780190222093.001.0001]
   Reiter-Palmon R, 2012, HANDBOOK OF ORGANIZATIONAL CREATIVITY, P295, DOI 10.1016/B978-0-12-374714-3.00013-6
   Russell D., 2009, OV SENS VIEW WORKSH
   Ryan G.W., 2003, Field. Methods, V15, P85, DOI [DOI 10.1177/1525822X02239569, 10.1177/1525822X02239569]
   Schön EM, 2017, LECT NOTES BUS INF P, V283, P37, DOI 10.1007/978-3-319-57633-6_3
   Sedano T, 2019, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2019.00036
   Smith ER, 2007, J PERS SOC PSYCHOL, V93, P431, DOI 10.1037/0022-3514.93.3.431
   de Alencar EMLS, 2012, HANDBOOK OF ORGANIZATIONAL CREATIVITY, P87, DOI 10.1016/B978-0-12-374714-3.00005-7
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Stray V, 2016, J SYST SOFTWARE, V114, P101, DOI 10.1016/j.jss.2016.01.004
   TUCKMAN BW, 1965, PSYCHOL BULL, V63, P384, DOI 10.1037/h0022100
   van Rijn H, 2011, CODESIGN, V7, P65, DOI 10.1080/15710882.2011.609889
   Wagner S, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3306607
   Wasserman AI, 2011, J INTERNET SERV APPL, V2, P11, DOI 10.1007/s13174-011-0019-x
   Woodcock A, 2018, ADV INTELL SYST, V607, P569, DOI 10.1007/978-3-319-60492-3_54
   Woolley AW, 2010, SCIENCE, V330, P686, DOI 10.1126/science.1193147
NR 60
TC 2
Z9 2
U1 1
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2021
VL 140
AR 106670
DI 10.1016/j.infsof.2021.106670
EA JUL 2021
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA UY8FG
UT WOS:000701752600004
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Nass, M
   Alégroth, E
   Feldt, R
AF Nass, Michel
   Alegroth, Emil
   Feldt, Robert
TI Why many challenges with GUI test automation (will) remain
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE System testing; GUI testing; Test automation; Systematic literature
   review
AB Context: Automated testing is ubiquitous in modern software development and used to verify requirement conformance on all levels of system abstraction, including the system's graphical user interface (GUI). GUIbased test automation, like other automation, aims to reduce the cost and time for testing compared to alternative, manual approaches. Automation has been successful in reducing costs for other forms of testing (like unit- or integration testing) in industrial practice. However, we have not yet seen the same convincing results for automated GUI-based testing, which has instead been associated with multiple technical challenges. Furthermore, the software industry has struggled with some of these challenges for more than a decade with what seems like only limited progress. Objective: This systematic literature review takes a longitudinal perspective on GUI test automation challenges by identifying them and then investigating why the field has been unable to mitigate them for so many years. Method: The review is based on a final set of 49 publications, all reporting empirical evidence from practice or industrial studies. Statements from the publications are synthesized, based on a thematic coding, into 24 challenges related to GUI test automation. Results: The most reported challenges were mapped chronologically and further analyzed to determine how they and their proposed solutions have evolved over time. This chronological mapping of reported challenges shows that four of them have existed for almost two decades. Conclusion: Based on the analysis, we discuss why the key challenges with GUI-based test automation are still present and why some will likely remain in the future. For others, we discuss possible ways of how the challenges can be addressed. Further research should focus on finding solutions to the identified technical challenges with GUI-based test automation that can be resolved or mitigated. However, in parallel, we also need to acknowledge and try to overcome non-technical challenges.
C1 [Nass, Michel] Blekinge Inst Technol, H SERL, Karlskrona, Sweden.
   [Alegroth, Emil; Feldt, Robert] Blekinge Inst Technol, P SERL, Karlskrona, Sweden.
   [Feldt, Robert] Chalmers Univ Technol, Gothenburg, Sweden.
C3 Blekinge Institute Technology; Blekinge Institute Technology; Chalmers
   University of Technology
RP Nass, M (corresponding author), Blekinge Inst Technol, H SERL, Karlskrona, Sweden.
EM michel.nass@bth.se; emil.alegroth@bth.se; robert.feldt@chalmers.se
OI Nass, Michel/0000-0002-8569-2290
FU KS foundation, Sweden through the S.E.R.T. Research Profile project at
   Blekinge Institute of Technology
FX We would like to acknowledge that this work was supported by the KKS
   foundation, Sweden through the S.E.R.T. Research Profile project at
   Blekinge Institute of Technology.
CR Adamoli A, 2011, SOFTWARE QUAL J, V19, P801, DOI 10.1007/s11219-011-9135-x
   Aho P, 2018, IEEE ICST WORKSHOP, P118, DOI 10.1109/ICSTW.2018.00038
   Aho P, 2014, IEEE ICST WORKSHOP, P343, DOI 10.1109/ICSTW.2014.39
   Aldalur I., 2017, P ACM SIGCHI S ENG I, P45
   Alegroth E., 2015, 2015 IEEE 8 INT C SO, P1
   Alégroth E, 2018, IEEE INT CONF SOFTW, P172, DOI 10.1109/ICST.2018.00026
   Alégroth E, 2015, EMPIR SOFTW ENG, V20, P694, DOI 10.1007/s10664-013-9293-5
   Alégroth E, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P56, DOI 10.1109/ICST.2013.14
   Alegroth Emil, 2015, VISUAL GUI TESTING A
   Amalfitano D, 2019, INFORM SOFTWARE TECH, V105, P95, DOI 10.1016/j.infsof.2018.08.007
   [Anonymous], 2014, INT S SOFTWARE TESTI, DOI DOI 10.1145/2610384.2610390
   Arlt S., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P222, DOI 10.1109/ICSTW.2011.70
   Arlt Stephan, 2014, INT S SOFTWARE TESTI, P270
   Bauersfeld Sebastian., 2014, Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement. ESEM'14, p4:1, DOI DOI 10.1145/2652524.2652588
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Campos Creissac, 2017, Proceedings of the ACM on Human-Computer Interaction, V1, DOI 10.1145/3095811
   Cheng YP, 2019, MATH BIOSCI ENG, V16, P7526, DOI 10.3934/mbe.2019378
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   de Gier F, 2019, INT CONF RES CHAL, P129, DOI 10.1109/rcis.2019.8877081
   Debroy V, 2018, IEEE INT CONF SOFTW, P354, DOI 10.1109/ICST.2018.00042
   Dyutiman Choudhary Dyutiman Choudhary, 2011, Pro-poor value chain development for high value products in mountain regions: Indian Bay Leaf
   Eladawy HM, 2018, PROCEEDINGS OF 2018 13TH INTERNATIONAL CONFERENCE ON COMPUTER ENGINEERING AND SYSTEMS (ICCES), P327, DOI 10.1109/ICCES.2018.8639336
   Entin V., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P43, DOI 10.1109/IWAST.2012.6228989
   Farto GD, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P184, DOI 10.1145/3131151.3131160
   FLEISS JL, 1973, EDUC PSYCHOL MEAS, V33, P613, DOI 10.1177/001316447303300309
   Garousi V., 2017, Proc. 2017 ACM SIGSOFT, P21, DOI DOI 10.1145/3121245.3121250
   Garousi V, 2018, IEEE ICST WORKSHOP, P138, DOI 10.1109/ICSTW.2018.00042
   Grechanik M, 2009, PROC IEEE INT CONF S, P9, DOI 10.1109/ICSM.2009.5306345
   Grechanik M, 2009, IEEE ICST WORKSHOP, P243, DOI 10.1109/ICSTW.2009.31
   Grechanik M, 2009, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2009.5070540
   Gupta Prateek, 2011, 2011 INT C COMM IND, P1
   Heiskanen Henri, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P25, DOI 10.1109/ICST.2010.36
   Hou Y, 2009, 2009 INTERNATIONAL CONFERENCE ON SCALABLE COMPUTING AND COMMUNICATIONS & EIGHTH INTERNATIONAL CONFERENCE ON EMBEDDED COMPUTING, P341, DOI 10.1109/EmbeddedCom-ScalCom.2009.67
   Janicki M, 2012, SOFTW TEST VERIF REL, V22, P313, DOI 10.1002/stvr.460
   Jiang WN, 2018, INT C DIGITAL HOME, P148, DOI 10.1109/ICDH.2018.00035
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kresse A., 2016, A TEST, P52, DOI DOI 10.1145/2994291.2994299
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Leotta M, 2018, SOFTW TEST VERIF REL, V28, DOI 10.1002/stvr.1665
   Leotta M, 2015, IEEE ICST WORKSHOP
   Leotta M, 2016, J SOFTW-EVOL PROC, V28, P177, DOI 10.1002/smr.1771
   Li X, 2017, IEEE INT CONF SOFTW, P161, DOI 10.1109/ICST.2017.22
   Mahmud J, 2014, SOFTW TEST VERIF REL, V24, P61, DOI 10.1002/stvr.1484
   Mariani L., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P81, DOI 10.1109/ICST.2012.88
   Mariani L, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P280, DOI 10.1145/3180155.3180162
   Mariani L, 2014, SOFTW TEST VERIF REL, V24, P341, DOI 10.1002/stvr.1538
   McMaster S, 2008, IEEE T SOFTWARE ENG, V34, P99, DOI 10.1109/TSE.2007.70756
   Memon AM, 2001, IEEE T SOFTWARE ENG, V27, P144, DOI 10.1109/32.908959
   Memon AM, 2007, SOFTW TEST VERIF REL, V17, P137, DOI 10.1002/stvr.364
   Moreira RMLM, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1629
   Nass M, 2019, IEEE ICST WORKSHOP, P176, DOI 10.1109/ICSTW.2019.00048
   O'Grady NP, 2002, CLIN INFECT DIS, V35, P1281, DOI 10.1086/502007
   Olan M., 2003, Journal of Computing Sciences in Colleges, V19, P319
   Ozturk M.M., 2016, ACM SIGSOFT SOFTW EN, V41, P1
   Patel S., 2015, P 19 INT C SOFTWARE, P253, DOI [10.1145/2791060.2791072, DOI 10.1145/2791060.2791072]
   Rafi D. M., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P36, DOI 10.1109/IWAST.2012.6228988
   SACKETT DL, 1979, J CHRON DIS, V32, P51, DOI 10.1016/0021-9681(79)90012-2
   Si Huang, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P245, DOI 10.1109/ICST.2010.39
   Silva Danilo., 2016, 24th International Symposium on the Foundations of Software Engineering (FSE), P1, DOI [10.1109/CLEI.2016.7833334, DOI 10.1109/CLEI.2016.7833334]
   Takahashi J, 2002, PROCEEDINGS OF THE 11TH ASIAN TEST SYMPOSIUM (ATS 02), P284, DOI 10.1109/ATS.2002.1181725
   Takala T., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P377, DOI 10.1109/ICST.2011.11
   Thummalapenta S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1002, DOI 10.1109/ICSE.2013.6606650
   Wang WH, 2016, SOFTW TEST VERIF REL, V26, P318, DOI 10.1002/stvr.1599
   Wiklund K, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1639
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Xie Q, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1416563.1416567
   Zaugg H, 2011, TECHTRENDS, V55, P32
   Zeng X, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P987, DOI 10.1145/2950290.2983958
   Zheng Y, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P172, DOI 10.1109/QRS-C.2018.00041
NR 69
TC 16
Z9 17
U1 2
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2021
VL 138
AR 106625
DI 10.1016/j.infsof.2021.106625
EA MAY 2021
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TI1GV
UT WOS:000672531500005
DA 2024-07-18
ER

PT J
AU Cao, SC
   Sun, XB
   Bo, LL
   Wei, Y
   Li, B
AF Cao, Sicong
   Sun, Xiaobing
   Bo, Lili
   Wei, Ying
   Li, Bin
TI <i>BGNN4VD:</i> Constructing Bidirectional Graph Neural-Network for
   Vulnerability Detection
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Vulnerability detection; Bidirectional Graph Neural-Network; Code
   representation
ID SOFTWARE; METRICS
AB Context: Previous studies have shown that existing deep learning-based approaches can significantly improve the performance of vulnerability detection. They represent code in various forms and mine vulnerability features with deep learning models. However, the differences of code representation forms and deep learning models make various approaches still have some limitations. In practice, their false-positive rate (FPR) and false-negative rate (FNR) are still high.
   Objective: To address the limitations of existing deep learning-based vulnerability detection approaches, we propose BGNN4VD (Bidirectional Graph Neural Network for Vulnerability Detection), a vulnerability detection approach by constructing a Bidirectional Graph Neural-Network (BGNN).
   Method: In Phase 1, we extract the syntax and semantic information of source code through abstract syntax tree (AST), control flow graph (CFG), and data flow graph (DFG). Then in Phase 2, we use vectorized source code as input to Bidirectional Graph Neural-Network (BGNN). In Phase 3, we learn the different features between vulnerable code and non-vulnerable code by introducing backward edges on the basis of traditional Graph Neural-Network (GNN). Finally in Phase 4, a Convolutional Neural-Network (CNN) is used to further extract features and detect vulnerabilities through a classifier.
   Results: We evaluate BGNN4VD on four popular C/C++ projects from NVD and GitHub, and compare it with four state-of-the-art (Flawfinder, RATS, SySeVR, and VUDDY) vulnerab ility detection approaches. Experiment results show that, when compared these baselines, BGNN4VD achieves 4.9%, 11.0%, and 8.4% improvement in F1-measure, accuracy and precision, respectively.
   Conclusion: The proposed BGNN4VD achieves a higher precision and accuracy than the state-of-the-art methods. In addition, when applied on the latest vulnerabilities reported by CVE, BGNN4VD can still achieve a precision at 45.1%, which demonstrates the feasibility of BGNN4VD in practical application.
C1 [Cao, Sicong; Sun, Xiaobing; Bo, Lili; Wei, Ying; Li, Bin] Yangzhou Univ, Sch Informat Engn, Yangzhou, Jiangsu, Peoples R China.
   [Sun, Xiaobing] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
C3 Yangzhou University; Nanjing University
RP Sun, XB (corresponding author), Yangzhou Univ, Sch Informat Engn, Yangzhou, Jiangsu, Peoples R China.
EM xbsun@yzu.edu.cn; lb@yzu.edu.cn
RI Wei, Ying/HZK-9397-2023
OI Sun, Xiaobing/0000-0001-5165-5080; Cao, Sicong/0000-0003-3688-4437
FU National Natural Science Foundation of China [61872312, 61972335,
   62002309]; Yangzhou cityYangzhou University Science and Technology
   Cooperation Fund Project, China [YZU201803]; Six Talent Peaks Project in
   Jiangsu Province, China [RJFW053]; Jiangsu "333"Project, China; Open
   Funds of State Key Laboratory for Novel Software Technology of Nanjing
   University, China [KFKT2020B15, KFKT2020B16]; Yangzhou University
   Toplevel Talents Support Program (2019) , China
FX This work is supported by the National Natural Science Foundation of
   China (No. 61872312, No. 61972335, No. 62002309) ; the Yangzhou
   cityYangzhou University Science and Technology Cooperation Fund Project,
   China (No. YZU201803) ; the Six Talent Peaks Project in Jiangsu
   Province, China (No. RJFW053) , the Jiangsu "333"Project, China, the
   Open Funds of State Key Laboratory for Novel Software Technology of
   Nanjing University, China (No. KFKT2020B15, No. KFKT2020B16) , and
   Yangzhou University Toplevel Talents Support Program (2019) , China.
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   [Anonymous], 2017, 2017 3 IEEE INT C CO, DOI DOI 10.1109/COMPCOMM.2017.8322752
   [Anonymous], 2016, 4 INT C LEARNING REP
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Boudjema E.H., 2020, SECUR PRIV, V3
   Dam H. K., 2017, ABS170802368 CORR
   Du XN, 2019, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2019.00024
   Gao Y., 2019, INT C INFORM COMMUNI, V11999, P199
   Gascon Hugo, 2013, P 2013 ACM WORKSH AR, P45
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Kim S, 2017, P IEEE S SECUR PRIV, P595, DOI 10.1109/SP.2017.62
   Kingma D. P., 2014, arXiv
   Kipf T.N., 2017, ICLR 2017
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Mei H, 2020, IEEE T SOFTWARE ENG, P1
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P1305, DOI 10.1007/s10664-016-9447-3
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Ni Z, 2020, J SYST SOFTWARE, V163, DOI 10.1016/j.jss.2020.110538
   Niu N., 2020, IEEE T SOFTW ENG, P1
   Pradel M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276517
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Sparks S, 2007, TWENTY-THIRD ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P477, DOI 10.1109/ACSAC.2007.27
   Sun XB, 2019, SCI CHINA INFORM SCI, V62, DOI 10.1007/s11432-017-9459-5
   Wagner M.D., 2018, ABS180707490 CORR
   Xu K, 2018, 2018 3RD IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P 2018), P473, DOI 10.1109/EuroSP.2018.00040
   Xu S., 2018, ABS180706756 CORR
   Xu Z., 2019, IEEE Trans. Softw. Eng, P1
   Xu ZZ, 2017, PROC INT CONF SOFTW, P462, DOI 10.1109/ICSE.2017.49
   Yamaguchi F, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P359
   Yi QP, 2018, IEEE T SOFTWARE ENG, V44, P25, DOI 10.1109/TSE.2017.2659751
   Yifei Xu, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P376, DOI 10.1145/3395363.3397361
   Younis A, 2016, CODASPY'16: PROCEEDINGS OF THE SIXTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY, P97, DOI 10.1145/2857705.2857750
   Yuan ZL, 2014, SIGCOMM'14: PROCEEDINGS OF THE 2014 ACM CONFERENCE ON SPECIAL INTEREST GROUP ON DATA COMMUNICATION, P371, DOI [10.1145/2619239.2631434, 10.1145/2740070.2631434]
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang MH, 2018, AAAI CONF ARTIF INTE, P4438
   Zheng W, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110659
   Zhou TC, 2019, INFORM SOFTWARE TECH, V114, P204, DOI 10.1016/j.infsof.2019.07.003
   Zhou YQ, 2019, ADV NEUR IN, V32
   Zhuang Y, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3283
NR 43
TC 85
Z9 91
U1 10
U2 69
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2021
VL 136
AR 106576
DI 10.1016/j.infsof.2021.106576
EA MAR 2021
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SJ2MZ
UT WOS:000655363900005
DA 2024-07-18
ER

PT J
AU Jeon, D
   Jeon, M
   Oh, H
AF Jeon, Donghoon
   Jeon, Minseok
   Oh, Hakjoo
TI A practical algorithm for learning disjunctive abstraction heuristics in
   static program analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Data-driven static analysis; Learning algorithm
AB Context: The precision and cost of static analysis are determined by abstraction heuristics (e.g., strategies for abstracting calling contexts, heap locations, etc.), but manually designing effective abstraction heuristics requires a huge amount of engineering effort and domain knowledge. Recently, data-driven static analysis has emerged to address this challenge by learning such heuristics automatically from a set of training programs. Objective: We present a practical algorithm for learning disjunctive abstraction heuristics in data-driven static analysis. We build on a recently proposed approach that can learn nontrivial program properties by disjunctive boolean functions. However, the existing approach is practically limited as it assumes that the most precise abstraction is cheap for the training programs; the algorithm is inapplicable if the most precise abstraction is not scalable. The objective of this paper is to mitigate this limitation. Method: Our algorithm overcomes the limitation with two new ideas. It systematically decomposes the learning problem into feasible subproblems, and it can search through the abstraction space from the coarse to fine-grained abstractions. With this approach, our algorithm is able to learn heuristics when static analysis with the most precise abstraction is not scalable over the training programs. Results: We show our approach is effective and generally applicable. We applied our approach to a context sensitive points-to analysis for Java and a flow-sensitive interval analysis for C. Experimental results show that our algorithm is efficient. For example, our algorithm can learn heuristics for 3-object-sensitive analysis for which the existing learning algorithm is too expensive to learn any useful heuristics. Conclusion: Our algorithm makes a state-of-the-art technique for data-driven static analysis more practical.
C1 [Jeon, Donghoon; Jeon, Minseok; Oh, Hakjoo] Korea Univ, Dept Comp Sci & Engn, Seoul, South Korea.
C3 Korea University
RP Oh, H (corresponding author), Korea Univ, Dept Comp Sci & Engn, Seoul, South Korea.
EM donghoon_jeon@korea.ac.kr; minseok_jeon@korea.ac.kr;
   hakjoo_oh@korea.ac.kr
RI Jeon, Minseok/ISB-1622-2023
OI Jeon, Minseok/0000-0001-8320-8509
CR Bielik P, 2017, LECT NOTES COMPUT SC, V10426, P233, DOI 10.1007/978-3-319-63387-9_12
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Bravenboer M, 2009, OOPSLA 2009, CONFERENCE PROCEEDINGS, P243
   Cha S, 2018, INFORM SOFTWARE TECH, V104, P1, DOI 10.1016/j.infsof.2018.07.002
   Cha S, 2016, LECT NOTES COMPUT SC, V10017, P25, DOI 10.1007/978-3-319-47958-3_2
   Chae K, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133925
   Grigore R, 2016, ACM SIGPLAN NOTICES, V51, P485, DOI 10.1145/2914770.2837663
   He J., 2020, PLDI 20
   Heo K, 2017, PROC INT CONF SOFTW, P519, DOI 10.1109/ICSE.2017.54
   Heo K, 2016, LECT NOTES COMPUT SC, V9837, P237, DOI 10.1007/978-3-662-53413-7_12
   Jeon M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276510
   Jeon M, 2019, ACM T PROGR LANG SYS, V41, DOI 10.1145/3293607
   Jeong S, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133924
   Katz O, 2016, ACM SIGPLAN NOTICES, V51, P313, DOI 10.1145/2914770.2837674
   Li Y, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276511
   Li Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P129, DOI 10.1145/3236024.3236041
   Liang P, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P590
   Liang P, 2010, ACM SIGPLAN NOTICES, V45, P411, DOI 10.1145/1932682.1869494
   Lu JB, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360574
   Milanova A, 2005, ACM T SOFTW ENG METH, V14, P1, DOI 10.1145/1044834.1044835
   Oh H, 2015, ACM SIGPLAN NOTICES, V50, P572, DOI [10.1145/2858965.2814309, 10.1145/2814270.2814309]
   Oh H, 2014, ACM SIGPLAN NOTICES, V49, P475, DOI [10.1145/2594291.2594318, 10.1145/2666356.2594318]
   Oh H, 2012, ACM SIGPLAN NOTICES, V47, P229, DOI 10.1145/2345156.2254092
   Raychev V, 2019, COMMUN ACM, V62, P99, DOI 10.1145/3306204
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Rival X., 2016, LECT NOTES COMPUTER, V9837
   SHIVERS O, 1988, SIGPLAN NOTICES, V23, P164, DOI 10.1145/960116.54007
   Shiyi WeiB.G. R., 2015, 29 EUROPEAN C OBJECT, P712
   Singh G, 2018, LECT NOTES COMPUT SC, V10981, P211, DOI 10.1007/978-3-319-96145-3_12
   Smaragdakis Y, 2014, ACM SIGPLAN NOTICES, V49, P485, DOI [10.1145/2666356.2594320, 10.1145/2594291.2594320]
   Smaragdakis Y, 2013, ACM SIGPLAN NOTICES, V48, P253, DOI [10.1145/2509136.2509524, 10.1145/2544173.2509524]
   Tan T, 2017, ACM SIGPLAN NOTICES, V52, P278, DOI [10.1145/3140587.3062360, 10.1145/3062341.3062360]
   Tan T, 2016, LECT NOTES COMPUT SC, V9837, P489, DOI 10.1007/978-3-662-53413-7_24
   Zhang X, 2014, ACM SIGPLAN NOTICES, V49, P239, DOI [10.1145/2594291.2594327, 10.1145/2666356.2594327]
NR 34
TC 0
Z9 0
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2021
VL 135
AR 106564
DI 10.1016/j.infsof.2021.106564
EA MAR 2021
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RQ5WO
UT WOS:000642489200010
DA 2024-07-18
ER

PT J
AU Caballero, R
   Martin-Martin, E
   Riesco, A
   Tamarit, S
AF Caballero, Rafael
   Martin-Martin, Enrique
   Riesco, Adrian
   Tamarit, Salvador
TI A unified framework for declarative debugging and testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Property-based testing; Unit testing; Declarative debugging; Unified
   framework
ID IMPLEMENTATION
AB Context: Debugging is the most challenging and time consuming task in software development. However, it is not properly integrated in the software development cycle, because the result of so much effort is not available in further iterations of the cycle, and the debugging process itself does not benefit from the outcome of other phases such as testing.
   Objective: We propose to integrate debugging and testing within a single unified framework where each phase generates useful information for the other and the outcomes of each phase are reused.
   Method: We consider a declarative debugging setting that employs tests to automatically entail the validity of some subcomputations, thus decreasing the time and effort needed to find a bug. Additionally, the debugger stores as new tests the information collected from the user during the debugging phase. This information becomes part of the program test suite, and can be used in future debugging sessions, and also as regression tests.
   Results: We define a general framework where declarative debugging establishes a bidirectional collaboration with testing. The new setting preserves the properties of the underlying declarative debugging framework (weak completeness and soundness) while generating test cases that can be used later in other debugging sessions or even in other cycles of the software development. The proposed framework is general enough to be instantiated to very different programming languages: Erlang (functional), Java (imperative, object-oriented), and SQL (data query); and the experimental results obtained for Erlang programs validate the effectiveness of the framework.
   Conclusion: We propose a general unified framework for debugging and testing that simplifies each phase and maximizes the reusability of the outcomes in the different phases of the software development cycle, therefore reducing the overall effort.
C1 [Caballero, Rafael; Martin-Martin, Enrique; Riesco, Adrian] Univ Complutense Madrid, Dept Sistemas Informat & Computac, Fac Informat, C Prof Jose Garcia Santesmases 9, Madrid 28040, Spain.
   [Tamarit, Salvador] Univ Politecn Valencia, Dept Sistemes Informat & Comp, Cami Vera S-N, Valencia 46022, Spain.
C3 Complutense University of Madrid; Universitat Politecnica de Valencia
RP Martin-Martin, E (corresponding author), Univ Complutense Madrid, Dept Sistemas Informat & Computac, Fac Informat, C Prof Jose Garcia Santesmases 9, Madrid 28040, Spain.
EM rafacr@ucm.es; emartinm@ucm.es; ariesco@fdi.ucm.es; stamarit@dsic.upv.es
RI Riesco, Adrian/I-5959-2016; Caballero, Rafael/T-2232-2017
OI Riesco, Adrian/0000-0002-9716-4612; Caballero,
   Rafael/0000-0001-8181-5532; MARTIN-MARTIN, ENRIQUE/0000-0002-1664-018X
FU Spanish MCIU; AEI, Spain; FEDER, EU project [RTI2018-094403-B-C31];
   Spanish MINECO project CAVI-(ROSE/ART) [TIN2013-44742-C4-(1/3)-R];
   Spanish MINECO project TRACES [TIN2015-67522-C3-3-R]; Comunidad de
   Madrid, Spain project BLOQUES-CM [S2018/TCS-4339]; Comunidad de Madrid,
   Spain project FORTE-CM [S2018/TCS-4314]; EIE Funds of the European Union
FX We thank the anonymous reviewer of a previous work published in the
   journal Science of Computer Programming for suggesting us this line of
   work. This research is supported by the Spanish MCIU, AEI, Spain and
   FEDER, EU project RTI2018-094403-B-C31, by Spanish MINECO projects
   CAVI-(ROSE/ART) (TIN2013-44742-C4-(1/3)-R) and TRACES
   (TIN2015-67522-C3-3-R); and the Comunidad de Madrid, Spain projects
   BLOQUES-CM (S2018/TCS-4339) and FORTE-CM (S2018/TCS-4314), co-funded by
   EIE Funds of the European Union.
CR [Anonymous], 2013, TECH REP
   [Anonymous], 1983, THESIS
   [Anonymous], 2006, P 2006 ACM SIGPLAN W
   [Anonymous], 2005, Scenarios, stories, use cases: through the systems development lifecycle
   [Anonymous], 2010, 2010 IEEE INT C SOFT
   [Anonymous], 2018, JET BRAINS OP SOURC
   Armstrong Joe, 1996, Concurrent Programming in Erlang
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Boye J., 1997, P 3 INT WORKSH AUT D, P123
   Caballero R, 2007, ELECTRON NOTES THEOR, V177, P75, DOI 10.1016/j.entcs.2007.01.005
   Caballero R., 2017, CHECKING ASSERTIONS
   Caballero R, 2019, J LOG ALGEBR METHODS, V107, P1, DOI 10.1016/j.jlamp.2019.05.002
   Caballero R, 2018, J LOG ALGEBR METHODS, V101, P22, DOI 10.1016/j.jlamp.2018.07.005
   Caballero R, 2015, PROCEEDINGS OF THE 17TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING (PPDP 2015), P55, DOI 10.1145/2790449.2790522
   Caballero R, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3106740
   Caballero R, 2015, SCI COMPUT PROGRAM, V110, P104, DOI 10.1016/j.scico.2015.06.011
   Caballero R, 2012, LECT NOTES COMPUT SC, V7294, P73, DOI 10.1007/978-3-642-29822-6_9
   Caballero Rafael, 2014, TACAS, P581
   Carlson R., 2006, International Conference on Renewable Energies and Power Quality, V1, P1, DOI 10.1145/1159789.1159791
   Cesarini Francesco, 2009, Erlang Programming: A Concurrent Approach to Software Development
   Cheney James, 2009, Provenance in databases: Why, how, and where
   Claessen K, 2000, ACM SIGPLAN NOTICES, V35, P268, DOI 10.1145/357766.351266
   Date C.J., 1997, GUIDE SQL STANDARD
   Duggal G., 2008, P 2 NAT C CHALL OPP
   Fink G., 1997, Software Engineering Notes, V22, P74, DOI 10.1145/263244.263267
   Fritzson P., 1992, ACM Letters on Programming Languages and Systems, V1, P303, DOI 10.1145/161494.161498
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Grefen P. W. P. J., 1994, Proceedings. The 10th International Conference Data Engineering (Cat. No.94CH3383-7), P80, DOI 10.1109/ICDE.1994.283002
   Holser P., 2018, JUNIT QUICKCHECK
   Hughes John, 2010, Central European Functional Programming School. Third Summer School (CEFP 2009). Revised Selected Lectures, P183, DOI 10.1007/978-3-642-17685-2_6
   Insa D, 2018, J LOG ALGEBR METHODS, V97, P85, DOI 10.1016/j.jlamp.2018.02.003
   Insa D, 2012, ELECTRON NOTES THEOR, V282, P47, DOI 10.1016/j.entcs.2011.12.005
   Kokai G., 1997, 14 INT C LOG PROGR 8, P14
   Liu C, 2006, IEEE T SOFTWARE ENG, V32, P831, DOI 10.1109/TSE.2006.105
   Matloff Norman., 2008, The Art of Debugging with GDB, DDD, and Eclipse
   Naish L., 1997, J. Funct. Log. Program., V1997
   Nilsson H, 2001, J FUNCT PROGRAM, V11, P629, DOI 10.1017/S095679680100418X
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Papadakis M, 2011, ERLANG 11: PROCEEDINGS OF THE 2011 ACM SIGPLAN ERLANG WORKSHOP, P39
   Runeson P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.91
   RUSSO F, 1992, LECT NOTES ARTIF INT, V592, P433
   Silva J, 2011, ADV ENG SOFTW, V42, P976, DOI 10.1016/j.advengsoft.2011.05.024
   Tamarit S, 2016, LECT NOTES COMPUT SC, V9762, P171, DOI 10.1007/978-3-319-41135-4_10
NR 43
TC 0
Z9 0
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2021
VL 129
AR 106427
DI 10.1016/j.infsof.2020.106427
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI7BA
UT WOS:000583428200007
DA 2024-07-18
ER

PT J
AU Ardito, L
   Coppola, R
   Malnati, G
   Torchiano, M
AF Ardito, Luca
   Coppola, Riccardo
   Malnati, Giovanni
   Torchiano, Marco
TI Effectiveness of Kotlin vs. Java in android app development tasks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Android; Effectiveness; Kotlin; Java; Maintenance
AB Context: Kotlin is a new programming language representing an alternative to Java; they both target the same JVM and can safely coexist in the same application. Kotlin is advertised as capable to solve several known limitations of Java. Recent surveys show that Kotlin achieved a relevant diffusion among Java developers. Goal: We planned to empirically assess a few typical promises of Kotlin w.r.t. known Java's limitations, in terms of development effectiveness, maintainability, and ease of development. Method: Our experiment involved 27 teams of 4 people each that completed a set of maintenance tasks (both defect correction and feature addition) on Android apps written in either Java or Kotlin. In addition to the number of fixed defects, effort, and code size, we collected, though a questionnaire, the participants' perceptions about the avoidance of known pitfalls. Results: We did not observe any significant difference in terms of maintainability between the two languages. We found a significant difference regarding the amount of code written, which constitutes evidence of better conciseness of Kotlin. Concerning ease of development, the frequency of NullPointerExceptions reported by the subjects was significantly lower when developing in Kotlin. On the other hand, no significant difference was found in the occurrence of other common Java pitfalls. Finally, the IDE support was deemed better for Java than Kotlin. Conclusions: Some of the promises of Kotlin to be a "better Java" have been confirmed by our empirical assessment. Evidence suggests that the effort in transitioning to Kotlin can provide some advantages to Java developers, especially regarding code conciseness. Our results may serve as the basis for further investigations on the properties of the language.
C1 [Ardito, Luca; Coppola, Riccardo; Malnati, Giovanni; Torchiano, Marco] Politecn Torino, Dept Control & Comp Engn, Turin, Italy.
C3 Polytechnic University of Turin
RP Ardito, L (corresponding author), Politecn Torino, Dept Control & Comp Engn, Turin, Italy.
EM luca.ardito@polito.it; riccardo.coppola@polito.it;
   giovanni.malnati@polito.it; marco.torchiano@polito.it
RI Furtado, Kássia/AAU-5007-2020; Ardito, Luca/AAE-2757-2019; Malnati,
   Giovanni/KBB-9241-2024
OI Malnati, Giovanni/0000-0002-6798-2761; Torchiano,
   Marco/0000-0001-5328-368X; ARDITO, LUCA/0000-0002-0501-7886
CR [Anonymous], 1994, ADDISON WESLEY PROFE
   Belyakova J, 2016, LECT NOTES COMPUT SC, V9889, P1, DOI 10.1007/978-3-319-45279-1_1
   Bose Subham., 2018, International Journal of Advanced Research in Computer Science, V9, P41, DOI [10.26483/ijarcs.v9i3.5978, DOI 10.26483/IJARCS.V9I3.5978]
   Bryksin T, 2018, COMPANION PROCEEDINGS FOR THE ISSTA/ECOOP 2018 WORKSHOPS, P10, DOI 10.1145/3236454.3236457
   Calkins H, 2017, J ARRYTHM, V33, P369, DOI 10.1016/j.joa.2017.08.001
   Carver JC, 2010, EMPIR SOFTW ENG, V15, P35, DOI 10.1007/s10664-009-9109-9
   Chen C, 2019, COMPUT SCI EDUC, V29, P23, DOI 10.1080/08993408.2018.1547564
   Coelho R, 2017, EMPIR SOFTW ENG, V22, P1264, DOI 10.1007/s10664-016-9443-7
   Coppola R, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON APP MARKET ANALYTICS (WAMA '19), P8, DOI 10.1145/3340496.3342759
   Flauzino M, 2018, XII BRAZILIAN SYMPOSIUM ON SOFTWARE COMPONENTS, ARCHITECTURES, AND REUSE (SBCARS), P23, DOI 10.1145/3267183.3267186
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Goetz B., 2014, RESPONSE SHOULD JAVA
   Hamedani MR, 2018, WIREL COMMUN MOB COM, DOI 10.1155/2018/1250359
   Hellbruck S., 2019, DATA MINING APPROACH
   Hu Cuixiong, 2011, Proceedings of the 6th International Workshop on Automation of Software Test, P77
   IEA-International Energy Agency, 2018, TECHNOLOGY ROADMAP L
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Kosar T, 2012, EMPIR SOFTW ENG, V17, P276, DOI 10.1007/s10664-011-9172-x
   Levy A., 2016, TOP 5 CRASHES ANDROI
   Maeda K., 2017, WM SCI 2017, V1, P132
   Mateus BG, 2019, EMPIR SOFTW ENG, V24, P3356, DOI 10.1007/s10664-019-09727-4
   Nanz S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P778, DOI 10.1109/ICSE.2015.90
   Oliveira J, 2018, J SYST SOFTWARE, V136, P1, DOI 10.1016/j.jss.2017.10.032
   Payet É, 2012, INFORM SOFTWARE TECH, V54, P1192, DOI 10.1016/j.infsof.2012.05.003
   Prechelt L, 2000, COMPUTER, V33, P23, DOI 10.1109/2.876288
   Shah YA, 2018, 2018 INTERNATIONAL CONFERENCE ON ENGINEERING & EMERGING TECHNOLOGIES (ICEET), P119
   Singh D., 2017, INT J INNOV SCI ENG, V4, P367
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Van Solingen R., 2002, ENCY SOFTW ENG
   VandenBos G.R., 2010, PUBL MAN AM PSYCH AS, V6th
   Victor L.M.T., 2020, 27 IEEE INT C SOFTW, P1
   Wu D, 2014, 2014 9TH INTERNATIONAL CONFERENCE ON COMMUNICATIONS AND NETWORKING IN CHINA (CHINACOM), P13, DOI 10.1109/CHINACOM.2014.7054250
NR 32
TC 14
Z9 16
U1 11
U2 71
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2020
VL 127
AR 106374
DI 10.1016/j.infsof.2020.106374
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NR0EE
UT WOS:000571236700003
DA 2024-07-18
ER

PT J
AU Huang, Y
   Huang, SH
   Chen, HC
   Chen, XP
   Zheng, ZB
   Luo, XP
   Jia, N
   Hu, XY
   Zhou, XC
AF Huang, Yuan
   Huang, Shaohao
   Chen, Huanchao
   Chen, Xiangping
   Zheng, Zibin
   Luo, Xiapu
   Jia, Nan
   Hu, Xinyu
   Zhou, Xiaocong
TI Towards automatically generating block comments for code snippets
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Automatic comment generation; Source code summarization; Code comment
   scope; Reinforcement learning
AB Code commenting is a common programming practice of practical importance to help developers review and comprehend source code. There are two main types of code comments for a method: header comments that summarize the method functionality located before a method, and block comments that describe the functionality of the code snippets within a method. Inspired by the effectiveness of deep learning techniques in the NLP field, many studies focus on using the machine translation model to automatically generate comment for the source code. Because the data set of block comments is difficult to collect, current studies focus more on the automatic generation of header comments than that of block comments. However, block comments are important for program comprehension due to their explanation role for the code snippets in a method. To fill the gap, we have proposed an approach that combines heuristic rules and learning-based method to collect a large number of comment-code pairs from 1,032 open source projects in our previous study. In this paper, we propose a reinforcement learning-based method, RL-BlockCom, to automatically generate block comments for code snippets based on the collected comment-code pairs. Specifically, we utilize the abstract syntax tree (i.e., AST) of a code snippet to generate a token sequence with a statement-based traversal way. Then we propose a composite learning model, which combines the actor-critic algorithm of reinforcement learning with the encoder-decoder algorithm, to generate block comments. On the data set of the comment-code pairs, the BLEU-4 score of our method is 24.28, which outperforms the baselines and state-of-the-art in comment generation.
C1 [Huang, Yuan; Huang, Shaohao; Chen, Huanchao; Zheng, Zibin; Hu, Xinyu; Zhou, Xiaocong] Sun Yat Sen Univ, Natl Engn Res Ctr Digital Life, Sch Data & Comp Sci, Guangzhou, Peoples R China.
   [Chen, Xiangping] Sun Yat Sen Univ, Sch Commun & Design, Guangdong Key Lab Big Data Anal & Simulat Publ Op, Guangzhou, Peoples R China.
   [Luo, Xiapu] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
   [Jia, Nan] Hebei GEO Univ, Sch Management Sci & Engn, Shijiazhuang, Hebei, Peoples R China.
C3 Sun Yat Sen University; Sun Yat Sen University; Hong Kong Polytechnic
   University; Hebei GEO University
RP Chen, XP (corresponding author), Sun Yat Sen Univ, Sch Commun & Design, Guangdong Key Lab Big Data Anal & Simulat Publ Op, Guangzhou, Peoples R China.
EM huangyjn@gmail.com; huangshh29@mail2.sysu.edu.cn;
   fchenhch@mail2.sysu.edu.cn; chenxp8@mail.sysu.edu.cn;
   zhzibin@mail.sysu.edu.cn; csxluo@comp.polyu.edu.hk; jianan_0101@163.com;
   husense@foxmail.com; isszxc@mail.sysu.edu.cn
RI Zheng, Zibin/E-3024-2014
OI Zheng, Zibin/0000-0002-7878-4330; xinyu, hu/0000-0002-6725-6241
FU Key-Area Research and Development Program of Guangdong Province
   [2020B010164002]; National Natural Science Foundation of China
   [61902441, 61672545, 61722214]; Hong Kong RGC Projects [152223/17E,
   152239/18E]; Guangdong Basic and Applied Basic Research Foundation
   [2020A1515010973]; China Postdoctoral Science Foundation [2018M640855];
   Fundamental Research Funds for the Central Universities [20wkpy06,
   20lgpy129]
FX This research is supported by the Key-Area Research and Development
   Program of Guangdong Province (2020B010164002), National Natural Science
   Foundation of China (61902441, 61672545, 61722214), Hong Kong RGC
   Projects (No. 152223/17E, 152239/18E), Guangdong Basic and Applied Basic
   Research Foundation (2020A1515010973), China Postdoctoral Science
   Foundation (2018M640855), Fundamental Research Funds for the Central
   Universities (20wkpy06, 20lgpy129). Xiangping Chen is the corresponding
   author.
CR Allamanis M, 2016, PR MACH LEARN RES, V48
   Alon U., 2019, 7 INT C LEARN REPR I
   [Anonymous], 2010, P IEEE ACM INT C AUT
   [Anonymous], 2016, P 54 ANN M ASS COMP
   [Anonymous], 2014, The Java Language Specification, Java SE
   [Anonymous], 2007, INFORM SOFTWARE TECH, DOI DOI 10.1016/J.INFSOF.2006.10.017
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Chen HC, 2019, J SYST SOFTWARE, V153, P45, DOI 10.1016/j.jss.2019.03.010
   Chung Junyoung, 2014, ARXIV14123555
   Farias MAD, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106270
   Dit B, 2013, IEEE WORK CONF MIN S, P131, DOI 10.1109/MSR.2013.6624019
   Cortés-Coy LF, 2014, IEEE INT WORK C SO, P275, DOI 10.1109/SCAM.2014.14
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Goldberg Y, 2016, J ARTIF INTELL RES, V57, P345, DOI 10.1613/jair.4992
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Huang Y, 2020, IEEE T RELIAB, V69, P88, DOI 10.1109/TR.2019.2931725
   Huang Y, 2020, SOFTWARE PRACT EXPER, V50, P227, DOI 10.1002/spe.2772
   Huang Y, 2018, PROC IEEE ACM INT C, P260, DOI 10.1145/3183440.3194960
   Huang Y, 2017, INT SYMP EMP SOFTWAR, P414, DOI 10.1109/ESEM.2017.56
   Huang Y, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1859
   Kaelbling LP, 1996, J ARTIF INTELL RES, V4, P237, DOI 10.1613/jair.301
   Keyes J., 2002, Software engineering handbook
   Koehn P., 2020, Neural Machine Translation
   Lecun Y., 2015, NAT METHODS, V521, P436, DOI DOI 10.1038/nmeth.3707
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Mikolov T, 2010, 11TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2010 (INTERSPEECH 2010), VOLS 1-2, P1045
   Moreno L, 2017, IEEE T SOFTWARE ENG, V43, P106, DOI 10.1109/TSE.2016.2591536
   Moreno L, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P484, DOI 10.1145/2635868.2635870
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   PAPADIMITRIOU CH, 1987, MATH OPER RES, V12, P441, DOI 10.1287/moor.12.3.441
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Pascarella L, 2019, EMPIR SOFTW ENG, V24, P1499, DOI 10.1007/s10664-019-09694-w
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Storey MA, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P251, DOI 10.1145/1368088.1368123
   Sutskever I, 2014, ADV NEUR IN, V27
   Sutton Richard S, 2018, REINFORCEMENT LEARNI
   WHO, 2012, WORLD MALARIA REPORT 2012, P1
   Wong E, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P380, DOI 10.1109/SANER.2015.7081848
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
NR 43
TC 16
Z9 17
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2020
VL 127
AR 106373
DI 10.1016/j.infsof.2020.106373
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NR0EE
UT WOS:000571236700006
DA 2024-07-18
ER

PT J
AU Pereira, CMNA
   Pinheiro, ALS
   Schirru, R
AF Pereira, Claudio M. N. A.
   Pinheiro, Andre L. S.
   Schirru, Roberto
TI Automatic block dimensioning on GPU-accelerated programs through
   particle swarm optimization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Performance optimization; GPU; CUDA; Particle swarm optimization
AB Context: Nowadays, the use of GPU to improve performance of computationally expensive systems are widely explored. On GPU-accelerated programs, performance is related to the partition of the problem into blocks of threads in such a way that the parallel tasks to be executed better fit the GPU architecture. Although there exists some general guidelines to help defining block dimensions, finding the optimum partition is still a complex and problem dependent task. In this work, it has been investigated the use of particle swarm optimization (PSO) to optimize blocks dimensions aiming to minimize programs execution time. The approach was evaluated on a GPU-accelerated wind field calculation program, in which block dimensioning was based on literature guidelines and empirical adjusts. Before PSO optimization, the program was about 25 times faster than the sequential program. After applying PSO, speedup increased to about 60 times. Unexpected optimized configurations were observed, ratifying that finding optimum dimensioning is a complex task. So the use of a robust optimization tool, such as PSO, demonstrated to be very profitable, allowing automatic optimization of blocks dimensions without necessity of a priori knowledge about problem, programs peculiarities and GPU architecture.
   Objective: Improve speedup of GPU-accelerated programs by automatic defining optimized block dimensions using PSO.
   Method: A GPU-accelerated wind field calculation problem has been focused. A PSO was interfaced to the program in order to find the block dimensions that leads to a minimum execution time. Results were compared to literature results.
   Results: The speedup obtained with the proposed approach is more than 2 times the original speedup.
   Conclusion: PSO, demonstrated to be very profitable, allowing automatic optimization of blocks dimensions without necessity of a priori knowledge about problem/programs peculiarities and/or GPU architecture.
C1 [Pereira, Claudio M. N. A.; Pinheiro, Andre L. S.; Schirru, Roberto] Univ Fed Rio de Janeiro, PEN COPPE UFRJ, BR-21941901 Rio De janeiro, Brazil.
   [Pereira, Claudio M. N. A.] Comissao Nacl Energia Nucl, IEN CNEN, BR-21941906 Rio De Janeiro, Brazil.
C3 Universidade Federal do Rio de Janeiro; Comissao Nacional de Energia
   Nuclear (CNEN)
RP Pereira, CMNA (corresponding author), Univ Fed Rio de Janeiro, PEN COPPE UFRJ, BR-21941901 Rio De janeiro, Brazil.; Pereira, CMNA (corresponding author), Comissao Nacl Energia Nucl, IEN CNEN, BR-21941906 Rio De Janeiro, Brazil.
EM cmnap@ien.gov.br
RI Pereira, Claudio MNA/I-2237-2015
OI Pereira, Claudio/0000-0002-3738-6571
FU CNPq
FX Claudio M.N.A. Pereira and Roberto Schirru are sponsored by CNPq
CR [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   Kennedy J, 1995, 1995 IEEE INTERNATIONAL CONFERENCE ON NEURAL NETWORKS PROCEEDINGS, VOLS 1-6, P1942, DOI 10.1109/icnn.1995.488968
   Memeti S, 2019, COMPUTING, V101, P893, DOI 10.1007/s00607-018-0614-9
   Pinheiro A, 2017, PROG NUCL ENERG, V100, P146, DOI 10.1016/j.pnucene.2017.05.027
   Ryoo S, 2008, PPOPP'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P73, DOI 10.1145/1345206.1345220
   Volkov V., 2008, Benchmarking gpus to tunedense linear algebra
   Wong H., 2010, DEMYSTIFYING GPU MIC
NR 8
TC 1
Z9 1
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2020
VL 123
AR 106299
DI 10.1016/j.infsof.2020.106299
PG 3
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK1XD
UT WOS:000530651200004
DA 2024-07-18
ER

PT J
AU Rebai, S
   Kessentini, M
   Wang, HZ
   Maxim, B
AF Rebai, Soumaya
   Kessentini, Marouane
   Wang, Hanzhang
   Maxim, Bruce
TI Web service design defects detection: A bi-level multi-objective
   approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Search based software engineering; Quality of services; Services design
AB Context Web services frequently evolve to integrate new features, update existing operations and fix errors to meet the new requirements of subscribers. While this evolution is critical, it may have a negative impact on the quality of services (QoS) such as reduced cohesion, increased coupling, poor response time and availability, etc. Thus, the design of services could become hard to maintain and extend in future releases. Recent studies addressed the problem of web service design antipattems detection, also called design defects, by either manually defining detection rules, as combination ofquality metrics, or generating them automatically from a set of defect examples. The manual definition of these rules is time-consuming and difficult due to the subjective nature of design issues, especially to find the right thresholds value. The efficiency of the generated rules, using automated approaches, will depend on the quality of the training set since examples of web services antipattems are limited. Furthermore, the majority of existing studies for design defects detection for web services are limited to structural information (interface/code static metrics) and they ignore the use of quality of services (QoS) or performance metrics, such as response time and availability, for this detection process or understanding the impact of antipattems on these QoS attributes.
   Objective: To address these challenges, we designed a bi-level multi-objective optimization approach to enable the generation of antipattern examples that can improve the efficiency of detection rules.
   Method: The upper-level generates a set of detection rules as a combination of quality metrics with their threshold values maximizing the coverage of defect examples extracted from several existing web services and artificial ones generated by a lower level. The lower level maximizes the number of generated artificial defects that cannot be detected by the rules of the upper level and minimizes the similarity to well-designed web service examples. The generated detection rules, by our approach, are based on a combination of dynamic QoS attributes and structural information of web service (static interface/code metrics).
   Results: The statistical analysis of our results, based on a data-set of 662 web services, confirms the efficiency of our approach in detecting web service antipatterns comparing to the current state of the art in terms of precision and recall.
   Conclusion: The multi-objective search formulation at both levels helped to diversify the generated artificial web service defects which produced better quality of detection rules. Furthermore, the combination of dynamic QoS attributes and structural information of web services improved the efficiency of the generated detection rules.
C1 [Rebai, Soumaya; Kessentini, Marouane; Maxim, Bruce] Univ Michigan, Dearborn, MI 48128 USA.
   [Wang, Hanzhang] eBay, San Jose, CA USA.
C3 University of Michigan System; University of Michigan; eBay Inc.
RP Kessentini, M (corresponding author), Univ Michigan, Dearborn, MI 48128 USA.
EM srebal@umich.edu; marouane@umich.edu; hanzwang@ebay.com;
   bmaxim@umich.edu
RI Maxim, Bruce/AAU-1200-2021; Maxim, Bruce/ISV-0470-2023
OI Maxim, Bruce/0000-0002-0979-7787
CR AIYOSHI E, 1981, IEEE T SYST MAN CYB, V11, P444
   Al-Masri E., 2008, THE QWS DATASET
   [Anonymous], 2012, EV COMP CEC 2012 IEE, DOI DOI 10.1109/CEC.2012.6256620
   Athanasopoulos D., 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P588, DOI 10.1109/ICWS.2011.27
   Athanasopoulos D., 2015, IEEE T SERV COMPUT, V8, P1
   Bard J. F., 2013, PRACTICAL BILEVEL OP, V30
   ben Fadhel A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P212, DOI 10.1109/ICSM.2012.6405274
   CANDLER W, 1982, COMPUT OPER RES, V9, P59, DOI 10.1016/0305-0548(82)90006-5
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Colson B, 2007, ANN OPER RES, V153, P235, DOI 10.1007/s10479-007-0176-2
   Coscia J.L. Ordiales, 2013, ANTIPATTERN FREE COD
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2010, EVOL COMPUT, V18, P403, DOI 10.1162/EVCO_a_00015
   Dudney B., 2003, J2EE_AntiPatterns
   Fleck M, 2017, IEEE T SOFTWARE ENG, V43, P1009, DOI 10.1109/TSE.2017.2654255
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hirsch M, 2018, COMPUT STAND INTER, V56, P116, DOI 10.1016/j.csi.2017.09.010
   Kalboussi Sabrine, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P245, DOI 10.1007/978-3-642-39742-4_19
   Kessentini M, 2013, SOFTWARE QUAL J, V21, P551, DOI 10.1007/s11219-012-9187-6
   Kessentini M, 2011, LECT NOTES COMPUT SC, V6603, P401, DOI 10.1007/978-3-642-19811-3_28
   Kessentini M, 2011, AUTOMAT SOFTW ENG, V18, P199, DOI 10.1007/s10515-010-0079-3
   Kessentini M, 2010, LECT NOTES COMPUT SC, V6138, P156, DOI 10.1007/978-3-642-13595-8_14
   Kessentini Marouane., 2010, Proceedings of the Second InternationalWorkshop on Behaviour Modelling: Foundation and Applications, P2
   Koh A., 2013, Metaheuristics for Bi-level Optimization, V482, P153
   Kral J., 2009, INT J ADV SOFTWARE, V2, P160
   Král J, 2009, 2009 COMPUTATION WORLD: FUTURE COMPUTING, SERVICE COMPUTATION, COGNITIVE, ADAPTIVE, CONTENT, PATTERNS, P271, DOI 10.1109/ComputationWorld.2009.80
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P529, DOI 10.1007/s11219-016-9309-7
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P473, DOI 10.1007/s11219-015-9284-4
   Rodriguez JM, 2013, SOFTWARE PRACT EXPER, V43, P613, DOI 10.1002/spe.2123
   Rodriguez JM, 2010, IFIP ADV INF COMM TE, V341, P139
   Mateos C, 2015, SOFTWARE PRACT EXPER, V45, P925, DOI 10.1002/spe.2268
   Mkaouer MW, 2017, EMPIR SOFTW ENG, V22, P894, DOI 10.1007/s10664-016-9426-8
   Moha N., 2012, SERVICE ORIENTED COM, P1
   Newcomer E., 2005, UNDERSTANDING SOA WE
   Coscia JLO, 2014, SCI COMPUT PROGRAM, V89, P374, DOI 10.1016/j.scico.2014.03.015
   Ouni A, 2017, IEEE T SERV COMPUT, V10, P603, DOI 10.1109/TSC.2015.2502595
   Ouni A, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1351, DOI 10.1145/2739480.2754724
   Palma F, 2014, LECT NOTES COMPUT SC, V8627, P58, DOI 10.1007/978-3-319-09970-5_6
   Papazoglou MP, 2008, INT J COOP INF SYST, V17, P223, DOI 10.1142/S0218843008001816
   Papazoglou MP, 2003, FOURTH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS ENGINEERING, PROCEEDINGS, P3
   Romano D., 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P392, DOI 10.1109/ICWS.2012.29
   Rotem-Gal-Oz A., 2012, SOA patterns
   Sahin D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2675067
   Singh MunindarP., 2005, SERVICE ORIENTED COM
   Torkamani Mohammad Ali., 2014, International Journal of Electrical and Computer Engineering (IJECE), V4, P16, DOI DOI 10.11591/ijece.v4i1.4097
   Wang HZ, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P341, DOI 10.1109/ICWS.2017.126
   Wang HZ, 2016, LECT NOTES COMPUT SC, V9936, P352, DOI 10.1007/978-3-319-46295-0_22
   Wilcoxon Frank, 1970, SELECTED TABLES MATH, V1, P171, DOI [DOI 10.1002/9780471462422.EOCT, DOI 10.1007/SPRINGERREFERENCE_205698]
NR 48
TC 8
Z9 8
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2020
VL 121
AR 106255
DI 10.1016/j.infsof.2019.106255
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT0NB
UT WOS:000518706200003
DA 2024-07-18
ER

PT J
AU Alsolai, H
   Roper, M
AF Alsolai, Hadeel
   Roper, Marc
TI A systematic literature review of machine learning techniques for
   software maintainability prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic literature review; Software maintainability prediction;
   Machine learning; Metric; Dataset
ID OBJECT-ORIENTED METRICS; MAINTENANCE EFFORT; NEURAL-NETWORK; ENSEMBLE;
   MODELS; PERFORMANCE; PROJECT; COST
AB Context: Software maintainability is one of the fundamental quality attributes of software engineering. The accurate prediction of software maintainability is a significant challenge for the effective management of the software maintenance process.
   Objective: The major aim of this paper is to present a systematic review of studies related to the prediction of maintainability of object-oriented software systems using machine learning techniques. This review identifies and investigates a number of research questions to comprehensively summarize, analyse and discuss various viewpoints concerning software maintainability measurements, metrics, datasets, evaluation measures, individual models and ensemble models.
   Method: The review uses the standard systematic literature review method applied to the most common computer science digital database libraries from January 1991 to July 2018.
   Results: We survey 56 relevant studies in 35 journals and 21 conference proceedings. The results indicate that there is relatively little activity in the area of software maintainability prediction compared with other software quality attributes. CHANGE maintenance effort and the maintainability index were the most commonly used software measurements (dependent variables) employed in the selected primary studies, and most made use of class-level product metrics as the independent variables. Several private datasets were used in the selected studies, and there is a growing demand to publish datasets publicly. Most studies focused on regression problems and performed k-fold cross-validation. Individual prediction models were employed in the majority of studies, while ensemble models relatively rarely.
   Conclusion: Based on the findings obtained in this systematic literature review, ensemble models demonstrated increased accuracy prediction over individual models, and have been shown to be useful models in predicting software maintainability. However, their application is relatively rare and there is a need to apply these, and other models to an extensive variety of datasets with the aim of improving the accuracy and consistency of results.
C1 [Alsolai, Hadeel] Princess Nourah Bint Abdulrahman Univ, Comp Sci & Informat Syst, Riyadh, Saudi Arabia.
   [Alsolai, Hadeel; Roper, Marc] Univ Strathclyde, Comp & Informat Sci, Glasgow, Lanark, Scotland.
C3 Princess Nourah bint Abdulrahman University; University of Strathclyde
RP Alsolai, H (corresponding author), Princess Nourah Bint Abdulrahman Univ, Comp Sci & Informat Syst, Riyadh, Saudi Arabia.
EM hadeel.alsolai@strath.ac.uk; marc.roper@strath.ac.uk
RI Alsolai, Hadeel/HSG-1200-2023
OI Alsolai, Hadeel/0000-0002-4897-8038
FU Deanship of Scientific Research at Princess Nourah bint Abdulrahman
   University through the Fast-track Research Funding Program
FX This research was funded by the Deanship of Scientific Research at
   Princess Nourah bint Abdulrahman University through the Fast-track
   Research Funding Program.
CR Aggarwal KK, 2002, P A REL MAI, P235, DOI 10.1109/RAMS.2002.981648
   Ahmed MA, 2013, IET SOFTW, V7, P317, DOI 10.1049/iet-sen.2013.0046
   Al Dallal J, 2013, INFORM SOFTWARE TECH, V55, P2028, DOI 10.1016/j.infsof.2013.07.005
   Aljamaan H, 2013, LECT NOTES COMPUT SC, V7902, P592, DOI 10.1007/978-3-642-38679-4_60
   Almugrin S, 2016, J SYST SOFTWARE, V121, P298, DOI 10.1016/j.jss.2016.02.024
   [Anonymous], 2013, ACM SIGSOFT SOFTWARE
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], P INT C ADV INF SYST
   [Anonymous], 2017, INT J COMPUTATIONAL
   [Anonymous], 1990, 610121990 IEEE
   [Anonymous], SPECIAL ISSUE REPEAT
   [Anonymous], 2011, ENCY MACHINE LEARNIN
   [Anonymous], P INT C EV NOV APPR
   [Anonymous], DEP COMPUT SCI N CAR
   [Anonymous], SYST SOFTW ENG SYST
   [Anonymous], P ICNICT
   [Anonymous], 2011, SIGSOFT SOFTW ENG NO
   Bandi RK, 2003, IEEE T SOFTWARE ENG, V29, P77, DOI 10.1109/TSE.2003.1166590
   Basgalupp M.P., 2012, P 27 ANN ACM S APPL, P1209
   Basri S, 2016, ASIA PAC SOFWR ENG, P177, DOI [10.1109/APSEC.2016.57, 10.1109/APSEC.2016.034]
   Bhattacharya P, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P171, DOI 10.1145/1985793.1985817
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   BRIAND LC, 1993, CONFERENCE ON SOFTWARE MAINTENANCE 1993, CSM-93: PROCEEDINGS, P88
   Chen JC, 2009, J SYST SOFTWARE, V82, P981, DOI 10.1016/j.jss.2008.12.036
   CHIDAMBER SR, 1991, OOPSLA 91 CONFERENCE PROCEEDINGS : OBJECT-ORIENTED PROGRAMMING SYSTEMS, LANGUAGES, AND APPLICATIONS, P197, DOI 10.1145/118014.117970
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   COLEMAN D, 1994, COMPUTER, V27, P44, DOI 10.1109/2.303623
   Cong Jin, 2010, Proceedings of the 2010 Second International Conference on Multimedia and Information Technology (MMIT 2010), P24, DOI 10.1109/MMIT.2010.10
   Cukic B, 2005, IEEE SOFTWARE, V22, P20, DOI 10.1109/MS.2005.153
   Dagpinar M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P155, DOI 10.1109/WCRE.2003.1287246
   Daly J., 1996, Empirical Software Engineering, V1, P109, DOI 10.1007/BF00368701
   De Lucia A, 2005, INFORM SOFTWARE TECH, V47, P3, DOI 10.1016/j.infsof.2004.05.002
   Dubey SK., 2012, ACM SIGSOFT Softw. Eng. Notes, V37, P1, DOI DOI 10.1145/2347696.2347703
   Elish MO, 2015, SOFT COMPUT, V19, P2511, DOI 10.1007/s00500-014-1576-2
   Elish MO, 2013, MATH PROBL ENG, V2013, DOI 10.1155/2013/312067
   Elish MO, 2009, EUR CON SFTWR MTNCE, P69, DOI 10.1109/CSMR.2009.57
   Fioravanti F, 2001, IEEE T SOFTWARE ENG, V27, P1062, DOI 10.1109/32.988708
   GILL GK, 1991, IEEE T SOFTWARE ENG, V17, P1284, DOI 10.1109/32.106988
   GranjaAlvarez JC, 1997, J SOFTW MAINT-RES PR, V9, P161, DOI 10.1002/(SICI)1096-908X(199705)9:3<161::AID-SMR148>3.0.CO;2-8
   Hayes JH, 2005, PROC IEEE INT CONF S, P601
   Hayes JH, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P254, DOI 10.1109/CSMR.2004.1281427
   Hegedus P, 2018, INFORM SOFTWARE TECH, V95, P313, DOI 10.1016/j.infsof.2017.11.012
   Jain S., 2016, 2016 IEEE Region 10 Humanitarian Technology Conference (R10-HTC), P1, DOI DOI 10.1109/POWERI.2016.8077264
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kádár I, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P599, DOI 10.1109/SANER.2016.42
   Kaur A., 2014, Proceedings of the 2014 International Conference on Data Mining and Intelligent Computing (ICDMIC), P1, DOI [DOI 10.1109/ICDMIC.2014.6954262, 10.1109/ICDMIC.2014.6954262]
   Kiran NR, 2008, J SYST SOFTWARE, V81, P576, DOI 10.1016/j.jss.2007.05.005
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Kumar L, 2017, INT J SYST ASSUR ENG, V8, P1487, DOI 10.1007/s13198-017-0618-4
   Kumar L, 2016, J SYST SOFTWARE, V121, P170, DOI 10.1016/j.jss.2016.01.003
   Kumar L, 2015, PROCEDIA COMPUT SCI, V57, P798, DOI 10.1016/j.procs.2015.07.479
   Kumar N, 2014, G3-GENES GENOM GENET, V4, P461, DOI 10.1534/g3.113.009993
   Lande Robert E, 2002, Popul Rep J, P1
   Levin Stanislav, 2017, P 13 INT C PREDICTIV, P97
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Lim JS, 2005, J SYST SOFTWARE, V77, P131, DOI 10.1016/j.jss.2004.11.004
   Lisboa PJG, 2000, IEE CONF PUBL, P88, DOI 10.1049/cp:20000322
   MacDonell SG, 1997, INFORM SOFTWARE TECH, V39, P35, DOI 10.1016/0950-5849(96)01125-1
   Malhotra R, 2018, INFORM SOFTWARE TECH, V102, P65, DOI 10.1016/j.infsof.2018.05.007
   Malhotra R, 2014, TRANSACTIONS ON ENGINEERING TECHNOLOGIES: SPECIAL ISSUE OF THE WORLD CONGRESS ON ENGINEERING AND COMPUTER SCIENCE 2013, P161, DOI 10.1007/978-94-017-9115-1_13
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Malhotra R, 2014, INT J SYST ASSUR ENG, V5, P165, DOI 10.1007/s13198-014-0227-4
   Misra SC, 2005, SOFTWARE QUAL J, V13, P297, DOI 10.1007/s11219-005-1754-7
   Moher D, 2009, ANN INTERN MED, V151, P264, DOI [10.7326/0003-4819-151-4-200908180-00135, 10.1136/bmj.b2700, 10.1371/journal.pmed.1000097, 10.1186/2046-4053-4-1, 10.1136/bmj.i4086, 10.1136/bmj.b2535, 10.1016/j.ijsu.2010.02.007, 10.1016/j.ijsu.2010.07.299]
   Oman P., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P337, DOI 10.1109/ICSM.1992.242525
   OMAN P, 1994, J SYST SOFTWARE, V24, P251, DOI 10.1016/0164-1212(94)90067-1
   Opitz D., 1999, J ARTIF INTELL RES, V11, P169, DOI DOI 10.1613/JAIR.614
   Polo M, 2001, PROC IEEE INT CONF S, P202, DOI 10.1109/ICSM.2001.972733
   Reddy BR, 2019, EVOL SYST-GER, V10, P179, DOI 10.1007/s12530-017-9201-0
   Riaz Mehwish, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P263, DOI 10.1049/ic.2012.0034
   Riaz M, 2009, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/esem.2009.5314233
   Rudiger Lincke., 2008, International Symposium on Software Testing and Analysis, P131, DOI 10.1145/1390630.1390648
   Sarwar MI, 2008, INMIC: 2008 INTERNATIONAL MULTITOPIC CONFERENCE, P379, DOI 10.1109/INMIC.2008.4777767
   Shafiabady A, 2016, INT CONF ADV COMMUN, P783, DOI 10.1109/ICACT.2016.7423558
   Sheldon FT, 2002, J SOFTW MAINT EVOL-R, V14, P147, DOI 10.1002/smr.249
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Srivastava Archana, 2019, Soft Computing: Theories and Applications. Proceedings of SoCTA 2017. Advances in Intelligent Systems and Computing (AISC 742), P223, DOI 10.1007/978-981-13-0589-4_21
   Thwin MMT, 2005, J SYST SOFTWARE, V76, P147, DOI 10.1016/j.jss.2004.05.001
   van Koten C, 2006, INFORM SOFTWARE TECH, V48, P59, DOI 10.1016/j.infsof.2005.03.002
   Nguyen V, 2011, INFORM SOFTWARE TECH, V53, P682, DOI 10.1016/j.infsof.2010.11.003
   Welker KD, 1997, J SOFTW MAINT-RES PR, V9, P127, DOI 10.1002/(SICI)1096-908X(199705)9:3<127::AID-SMR149>3.0.CO;2-S
   Ye F, 2013, INT CONF QUALITY REL, P1588, DOI 10.1109/QR2MSE.2013.6625879
   Zhang D, 2003, SOFTWARE QUAL J, V11, P87, DOI 10.1023/A:1023760326768
   Zhang W, 2015, AUTOMAT SOFTW ENG, V22, P111, DOI 10.1007/s10515-014-0161-3
   Zhou YM, 2007, J SYST SOFTWARE, V80, P1349, DOI 10.1016/j.jss.2006.10.049
   Zhou Yuming, 2008, Wuhan University Journal of Natural Sciences, V13, P14, DOI 10.1007/s11859-008-0104-6
NR 87
TC 51
Z9 54
U1 1
U2 38
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2020
VL 119
AR 106214
DI 10.1016/j.infsof.2019.106214
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KL2WU
UT WOS:000513290100007
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Jansen, S
AF Jansen, Slinger
TI A focus area maturity model for software ecosystem governance
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software ecosystem governance; Developer ecosystems; Focus area maturity
   models
AB Context Increasingly, software companies are realizing that they can no longer compete through product excellence alone. The ecosystems that surround platforms, such as operating systems, enterprise applications, and even social networks are undeniably responsible for a large part of a platform's success. With this realization, software producing organizations need to devise tools and strategies to improve their ecosystems and reinvent tools that others have invented many times before.
   Objective: In this article, the software ecosystem governance maturity model (SEG-M-2) is presented, which has been designed along the principles of a focus area maturity model. The SEG-M-2 has been designed for software producing organizations to assess their ecosystem governance practices, set a goal for improvement, and execute an improvement plan.
   Method: The model has been created following an established focus area maturity model design method. The model has been evaluated in six evaluating case studies with practitioners, first by applying the model to their organizations and secondly by evaluating with the practitioners whether the evaluation and improvement advice from the model is valid, useful, and effective.
   Result The model is extensively described and illustrated using six desk studies and six case studies.
   Conclusions: The model is evaluated by both researchers and practitioners as a useful collection of practices that enable decision making about software ecosystem governance. We find that maturity models are an effective tool in disseminating a large collection of knowledge, but that research and creation tooling for maturity models is limited.
C1 [Jansen, Slinger] Univ Utrecht, Princetonpl 5, NL-3584 CH Utrecht, Netherlands.
C3 Utrecht University
RP Jansen, S (corresponding author), Univ Utrecht, Princetonpl 5, NL-3584 CH Utrecht, Netherlands.
EM slinger.jansen@uu.nl
RI Londe, Pedro/AAG-2267-2019; Roijackers, Slinger/Y-4244-2019
OI Roijackers, Slinger/0000-0003-3752-2868
CR Alves C, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 3, P215, DOI 10.5220/0006269402150226
   [Anonymous], 2017, 9 INT WORKSH SOFTW E
   [Anonymous], 2008, CASE STUDY RES DESIG
   Anvaari M., 2010, ECSA '10: Proceedings of the Fourth European Conference on Software Architecture, P85, DOI DOI 10.1145/1842752.1842775
   Arsanjani A, 2006, P IEEE I C SERV COMP, P515, DOI 10.1109/SCC.2006.104
   Artz P, 2010, LECT NOTES BUS INF P, V51, P90
   Baars A, 2012, LECT NOTES BUS INF P, V114, P168
   Barbosa O., 2011, P INT WORKSH SOFTW E
   Basole RC, 2011, BUS INFORM SYST ENG+, V3, P313, DOI [10.1007/s11576-011-0286-y, 10.1007/s12599-011-0174-4]
   Becker J, 2009, BUS INFORM SYST ENG+, V1, P213, DOI 10.1007/s12599-009-0044-5
   Bosch J, 2010, J SYST SOFTWARE, V83, P67, DOI 10.1016/j.jss.2009.06.051
   Bosch Jan, 2009, 2009 13 INT SOFTW PR, V9, P111, DOI DOI 10.1145/1753235.1753251
   Capra E, 2008, INT FED INFO PROC, V275, P1
   CRAWFORD J.K., 2007, PROJECT MANAGEMENT M
   Cusumano M., 2012, STAYING POWER 6 ENDU
   De Bruin T., 2005, ACIS 2005 Proceedings, P109
   Espinha T, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P84, DOI 10.1109/CSMR-WCRE.2014.6747228
   Goeminne M., 2010, 13 INT WORKSH PRINC, P42
   Hartigh E.d., 2013, SOFTWARE ECOSYSTEMS
   Hess S., 2016, P 4 INT WORKSH SOFTW
   Iansiti Marco, 2004, The keystone advantage: What the new dynamics of business ecosystems mean for strategy, innovation, and sustainability
   Jansen S, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P1, DOI 10.4337/9781781955635
   Jansen S., 2015, P EUR C SOFTW ARCH
   Jansen S, 2013, LECT NOTES BUS INF P, V150, P195
   Jansen S, 2012, J SYST SOFTWARE, V85, P1495, DOI 10.1016/j.jss.2011.12.007
   Knodel J., 2016, P 4 INT WORKSH SOFTW
   Lacerda TC, 2018, COMPUT STAND INTER, V55, P95, DOI 10.1016/j.csi.2017.06.001
   Manikas K, 2016, J SYST SOFTWARE, V117, P84, DOI 10.1016/j.jss.2016.02.003
   Manikas K, 2013, J SYST SOFTWARE, V86, P1294, DOI 10.1016/j.jss.2012.12.026
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Mettler T., P 4 INT C DESIGN SCI, DOI [10.1145/1555619.1555649, DOI 10.1145/1555619.1555649]
   Mols C.-E., 2018, PRINCIPLES IND OPEN
   Olsson HH, 2014, LECT NOTES BUS INF P, V182, P16
   Paulk M., Encyclopedia of Software Engineering
   Schief M., 2013, BUSINESS MODELS SOFT
   Schuur Hvd, 2011, P INT C MANAGEMENT E, P76, DOI DOI 10.1145/20774892077503
   Soussi L, 2016, LECT NOTES BUS INF P, V240, P145, DOI 10.1007/978-3-319-40515-5_11
   van Angeren J, 2016, J SYST SOFTWARE, V113, P430, DOI 10.1016/j.jss.2015.11.025
   van den Berk Ivo., 2010, Proceedings of the Fourth European Conference on Software Architecture: Companion Volume, P127, DOI DOI 10.1145/1842752.1842781
   van Steenbergen Marlies, 2013, Scandinavian Journal of Information Systems, V25, P35
   van Steenbergen M, 2010, LECT NOTES COMPUT SC, V6105, P317, DOI 10.1007/978-3-642-13335-0_22
   Ververs Eric, 2011, P INT C MANAGEMENT E, P89
   Williamson PJ, 2012, CALIF MANAGE REV, V55, P24, DOI 10.1525/cmr.2012.55.1.24
   Wnuk K, 2014, LECT NOTES BUS INF P, V182, P212
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Yang Z., 2016, P INT C EC GRIDS CLO, P3
NR 46
TC 32
Z9 33
U1 0
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2020
VL 118
AR 106219
DI 10.1016/j.infsof.2019.106219
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JW2LV
UT WOS:000502890100007
OA Green Published
DA 2024-07-18
ER

PT J
AU Silva, ACE
   Maia, MD
AF Costa e Silva, Allysson
   Maia, Marcelo de Almeida
TI Improving feature location accuracy via paragraph vector tuning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Feature location; Paragraph vectors; Artificial neural network
AB Context Feature location techniques are still not highly accurate despite advances in the field.
   Objective: This paper aims at investigating the impact of applying different tunings to paragraph vector to the feature location problem. It evaluates the influence of different artificial neural network (ANN) configurations for learning rate and negative sampling loss function in paragraph vectors training.
   Method: The suggested weight configuration relies on the search for an adequate ANN learning rate and an adequate calibration of negative sampling skip-gram mode of the Doc2vec (DV) algorithm. A dataset with 633 feature descriptions, extracted from six open-source Java projects, organized within method granularity, is used for the empirical assessment.
   Results: Our results suggest that feature location techniques benefit from the use of paragraph vector with systematic tuning. We show that an adequate update policy for ANN weights can increase feature location accuracy. An adequate calibration for negative sampling also improved accuracy. We got it with no default values of negative sampling pointed by literature. Moreover, an ensemble of learning rate policies and the use of a tuned DV negative sampling option had overcome state-of-the-art approaches.
   Conclusions: We show evidence of a relationship between hyper-parameter settings and accuracy gain. Modern paragraph vector approaches require adequate calibration to produce better results, and we have improved the accuracy of feature location process with proper tuning.
C1 [Costa e Silva, Allysson] State Univ Montes Claros Unimontes, Montes Claros, MG, Brazil.
   [Costa e Silva, Allysson; Maia, Marcelo de Almeida] Univ Fed Uberlandia, Uberlandia, MG, Brazil.
C3 Universidade Estadual de Montes Claros; Universidade Federal de
   Uberlandia
RP Silva, ACE (corresponding author), State Univ Montes Claros Unimontes, Montes Claros, MG, Brazil.; Silva, ACE (corresponding author), Univ Fed Uberlandia, Uberlandia, MG, Brazil.
EM allcostaes@ufu.br; marcelo.maia@ufu.br
RI Maia, Marcelo/F-3090-2017
OI Maia, Marcelo/0000-0003-3578-1380
FU CAPES; FAPEMIG; CNPq
FX We acknowledge CAPES, FAPEMIG, and CNPq for partially supporting this
   research.
CR Caselles-Dupré H, 2018, 12TH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS), P352, DOI 10.1145/3240323.3240377
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   Corley CS, 2015, PROC IEEE INT CONF S, P556, DOI 10.1109/ICSM.2015.7332513
   Dit B, 2013, IEEE WORK CONF MIN S, P131, DOI 10.1109/MSR.2013.6624019
   Mikolov T., 2013, 1 INT C LEARN REPR
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Smith LN, 2017, IEEE WINT CONF APPL, P464, DOI 10.1109/WACV.2017.58
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
NR 10
TC 1
Z9 1
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2019
VL 116
AR 106177
DI 10.1016/j.infsof.2019.106177
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JM6SN
UT WOS:000496342000001
DA 2024-07-18
ER

PT J
AU Calefato, F
   Lanubile, F
   Vasilescu, B
AF Calefato, Fabio
   Lanubile, Filippo
   Vasilescu, Bogdan
TI A large-scale, in-depth analysis of developers' personalities in the
   Apache ecosystem
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Personality traits; Large-scale distributed projects; Ecosystems;
   Apache; Big five; Five-Factor model; Open source software; Human
   aspects; Psychometric analysis; Computational personality detection
ID 5-FACTOR MODEL; WORK PREFERENCES; SOFTWARE; TRAITS; SATISFACTION;
   RECOGNITION; COOPERATION; PERSPECTIVE; MOTIVATION; PROFILES
AB Context Large-scale distributed projects are typically the results of collective efforts performed by multiple developers with heterogeneous personalities.
   Objective: We aim to find evidence that personalities can explain developers' behavior in large scale-distributed projects. For example, the propensity to trust others - a critical factor for the success of global software engineering - has been found to influence positively the result of code reviews in distributed projects.
   Method: In this paper, we perform a quantitative analysis of ecosystem-level data from the code commits and email messages contributed by the developers working on the Apache Software Foundation (ASF) projects, as representative of large scale-distributed projects.
   Results: We find that there are three common types of personality profiles among Apache developers, characterized in particular by their level of Agreeableness and Neuroticism. We also confirm that developers' personality is stable over time. Moreover, personality traits do not vary with their role, membership, and extent of contribution to the projects. We also find evidence that more open developers are more likely to make contributors to Apache projects.
   Conclusion: Overall, our findings reinforce the need for future studies on human factors in software engineering to use psychometric tools to control for differences in developers' personalities.
C1 [Calefato, Fabio; Lanubile, Filippo] Univ Bari, Bari, Italy.
   [Vasilescu, Bogdan] Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
C3 Universita degli Studi di Bari Aldo Moro; Carnegie Mellon University
RP Calefato, F (corresponding author), Univ Bari, Bari, Italy.
EM fabio.calefato@uniba.it; filippo.lanubile@uniba.it; vasilescu@cmu.edu
RI Lanubile, Filippo/AAF-9132-2020; Calefato, Fabio/H-4177-2014
OI Lanubile, Filippo/0000-0003-3373-7589; Calefato,
   Fabio/0000-0003-2654-1588; Vasilescu, Bogdan/0000-0003-4418-5783
FU MIUR under the program "PON RC 2007-2013"
FX We thank IBM for providing free access to the Personality Insights API.
   The computational work has been executed on the IT resources made
   available by two projects, ReCaS and PRISMA, funded by MIUR under the
   program "PON R&C 2007-2013." We are also grateful to Marco Iannotta for
   his help in the data extraction process.
CR Abramson N.R., 2010, J PSYCHOL TYPE, V70, P19
   Acuña ST, 2015, INFORM SOFTWARE TECH, V57, P141, DOI 10.1016/j.infsof.2014.09.002
   Acuña ST, 2009, INFORM SOFTWARE TECH, V51, P627, DOI 10.1016/j.infsof.2008.08.006
   Allik J, 2004, J CROSS CULT PSYCHOL, V35, P13, DOI 10.1177/0022022103260382
   Allport GW, 1936, PSYCHOL MONOGR, V47, P1
   [Anonymous], 2006, P COLINGACL 2006 MAI
   [Anonymous], 2014, Proceedings of the 6th international workshop on social software engineering, DOI 10.1145/2661685.2661689
   [Anonymous], 2010, Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering-Volume 1, ICSE'10
   [Anonymous], 1999, HDB PERSONALITY THEO
   [Anonymous], 2012, 6 INT C DIG SOC NETW
   [Anonymous], 1981, Review of personality and social psychology, DOI DOI 10.1037/0022-3514.59.6.1216
   [Anonymous], 2018, ECONOMETRIC ANAL
   [Anonymous], 2014, WORKSH GLOB SOFTW DE
   [Anonymous], 1980, Winthrop computer systems series
   Argamon S., 2005, P CLASS SOC N AM ANN
   Arnoux P.-H., 2017, Proceedings of the International AAAI Conference on Web and Social Media, V11, P472
   Arnoux P.-H., 2017, P INT AAAI C WEB SOC
   Bazelli B, 2013, PROC IEEE INT CONF S, P460, DOI 10.1109/ICSM.2013.72
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Bell D., 2010, P 2010 SPEC INT GROU, P43, DOI [10.1145/1796900.1796921, DOI 10.1145/1796900.1796921]
   Bird Christian., 2007, Proceedings of the Fourth International Workshop on Mining Software Repositories, MSR'07, P6
   Boyle GJ, 2009, CAMBRIDGE HANDBOOK OF PERSONALITY PSYCHOLOGY, P110
   Calefato F., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P94, DOI 10.1109/ICGSE.2011.14
   Calefato F, 2018, PROCEEDINGS 2018 ACM/IEEE 13TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING ICGSE 2018, P92, DOI 10.1145/3196369.3196372
   Calefato F, 2018, INTERNET TECHNOL LET, V1, DOI 10.1002/itl2.6
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Calefato F, 2017, INT CONF AFFECT, P79, DOI 10.1109/ACIIW.2017.8272591
   Calefato F, 2017, INT CONF GLOBAL SOFT, P56, DOI 10.1109/ICGSE.2017.1
   Calefato F, 2016, EMPIR SOFTW ENG, V21, P1002, DOI 10.1007/s10664-015-9372-x
   Carducci G, 2018, INFORMATION, V9, DOI 10.3390/info9050127
   Celli F., 2013, 7 INT AAAI C WEBL SO
   Celli F., 2006, P WORK PERS REC, V2013, P2
   Celli F, 2014, PROCEEDINGS OF THE 2014 ACM CONFERENCE ON MULTIMEDIA (MM'14), P1245, DOI 10.1145/2647868.2647870
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cobb-Clark DA, 2012, ECON LETT, V115, P11, DOI 10.1016/j.econlet.2011.11.015
   COLTHEART M, 1981, Q J EXP PSYCHOL-A, V33, P497, DOI 10.1080/14640748108400805
   Costa P.T., 1992, REVISED NEO PERSONAL
   Costa P.T., 1985, NEO PI PERSONALITY I
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   CUTLER A, 1994, TECHNOMETRICS, V36, P338, DOI 10.2307/1269949
   Da Cunha AD, 2007, COMMUN ACM, V50, P109, DOI 10.1145/1230819.1241672
   da Silva FQB, 2013, INFORM SOFTWARE TECH, V55, P1316, DOI 10.1016/j.infsof.2012.11.006
   Di Penta Massimiliano, 2012, P ACM SIGSOFT 20 INT, P1
   DIGMAN JM, 1990, ANNU REV PSYCHOL, V41, P417, DOI 10.1146/annurev.psych.41.1.417
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Elliott M.S., 2003, P 4 INT C SUPPORTING, P21, DOI DOI 10.1145/958160.958164
   Erenkrantz J. R., 2003, SUPPORTING DISTRIBUT, P21
   Farnadi G, 2016, USER MODEL USER-ADAP, V26, P109, DOI 10.1007/s11257-016-9171-0
   Feldt R., 2008, INT WORKSHOP COOPERA, P49, DOI DOI 10.1145/1370114.1370127
   Feldt R, 2010, INFORM SOFTWARE TECH, V52, P611, DOI 10.1016/j.infsof.2010.01.001
   Field A., 2012, Discovering Statistics Using R
   FUNDER DC, 1995, PSYCHOL REV, V102, P652, DOI 10.1037/0033-295X.102.4.652
   Gilal AR, 2016, INFORM SOFTWARE TECH, V74, P105, DOI 10.1016/j.infsof.2016.02.007
   Gill A. J., 2009, 3 INT AAAI C WEBL SO
   Golbeck J., 2011, Proceedings of the 2011 IEEE Third International Conference on Privacy, Security, Risk and Trust and IEEE Third International Conference on Social Computing (PASSAT/SocialCom 2011), P149, DOI 10.1109/PASSAT/SocialCom.2011.33
   Golbeck J., 2011, P 2011 ANN C HUM FAC, P253, DOI DOI 10.1145/1979742.1979614
   Goldberg LR, 2006, J RES PERS, V40, P84, DOI 10.1016/j.jrp.2005.08.007
   GOLDBERG LR, 1993, AM PSYCHOL, V48, P26, DOI 10.1037/0003-066X.48.1.26
   Gorla N, 2004, COMMUN ACM, V47, P79, DOI 10.1145/990680.990684
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Haibo He, 2009, IEEE Transactions on Knowledge and Data Engineering, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hannay JE, 2010, IEEE T SOFTWARE ENG, V36, P61, DOI 10.1109/TSE.2009.41
   HICKS LE, 1984, J PERS SOC PSYCHOL, V46, P1118, DOI 10.1037/0022-3514.46.5.1118
   Hinkle D., 1988, Applied statistics for the behavioral sciences, V5th
   Jensen C, 2011, SPINE, V36, P1180, DOI 10.1097/BRS.0b013e3181eba711
   Jianqiang Shen, 2013, User Modeling, Adaptation, and Personalization. 21th International Conference, UMAP 2013. Proceedings., P318, DOI 10.1007/978-3-642-38844-6_29
   Jongeling R, 2017, EMPIR SOFTW ENG, V22, P2543, DOI 10.1007/s10664-016-9493-x
   Kanij T, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P1, DOI 10.1109/CHASE.2015.7
   Karimi Z, 2016, J SYST SOFTWARE, V111, P228, DOI 10.1016/j.jss.2015.09.011
   Karn JS, 2007, BEHAV INFORM TECHNOL, V26, P99, DOI 10.1080/01449290500102110
   Kaushal V, 2018, ACM T KNOWL DISCOV D, V12, DOI 10.1145/3070645
   Keirsey D., 1984, PLEASE UNDERSTAND ME
   Keirsey D., 1998, Please Understand Me II: Temperament, Character, Intelligence
   Kosinski M., 2013, P NATL ACAD SCI
   Kosti MV, 2016, EMPIR SOFTW ENG, V21, P1509, DOI 10.1007/s10664-015-9395-3
   Kosti MV, 2014, INFORM SOFTWARE TECH, V56, P973, DOI 10.1016/j.infsof.2014.03.004
   Lebeuf C, 2018, IEEE SOFTWARE, V35, P18, DOI 10.1109/MS.2017.4541027
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Liu F, 2017, 15TH CONFERENCE OF THE EUROPEAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (EACL 2017), VOL 1: LONG PAPERS, P754
   Mairesse F, 2007, J ARTIF INTELL RES, V30, P457, DOI 10.1613/jair.2349
   Majumder N, 2017, IEEE INTELL SYST, V32, P74, DOI 10.1109/MIS.2017.23
   Mäntylä MV, 2018, IEEE WORK CONF MIN S, P387, DOI 10.1145/3196398.3196444
   MCCRAE RR, 1989, J PERS, V57, P17, DOI 10.1111/j.1467-6494.1989.tb00759.x
   MCCRAE RR, 1992, J PERS, V60, P175, DOI 10.1111/j.1467-6494.1992.tb00970.x
   MCCRAE RR, 1987, J PERS SOC PSYCHOL, V52, P81, DOI 10.1037/0022-3514.52.1.81
   McCrae RR, 2002, INT CUL PSY, P105
   McCrae RR, 2001, J PERS, V69, P819, DOI 10.1111/1467-6494.696166
   McDonald S, 2007, COMMUN ACM, V50, P67
   Mehl MR, 2001, BEHAV RES METH INS C, V33, P517, DOI 10.3758/BF03195410
   Meyer GJ, 2001, AM PSYCHOL, V56, P128, DOI 10.1037//0003-066X.56.2.128
   Mohammad SM, 2015, COMPUT INTELL-US, V31, P301, DOI 10.1111/coin.12024
   MOUNT MK, 1994, J APPL PSYCHOL, V79, P272, DOI 10.1037/0021-9010.79.2.272
   MURRAY JB, 1990, PERCEPT MOTOR SKILL, V70, P1187, DOI 10.2466/PMS.70.4.1187-1202
   Myers I. B, 1998, MBTI MANUAL GUIDE DE, V3
   Novielli N, 2018, IEEE WORK CONF MIN S, P14, DOI 10.1145/3196398.3196453
   Novielli N, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P33, DOI 10.1145/2804381.2804387
   Nowson S., 2007, P INT C WEBL SOC ICW
   Pennebaker J.W., 2015, LIWC 2015 operators manual, DOI DOI 10.15781/T29G6Z
   Pennebaker JW, 1999, J PERS SOC PSYCHOL, V77, P1296, DOI 10.1037/0022-3514.77.6.1296
   Pennington J., 2014, P 2014 C EMP METH NA, P1532, DOI [DOI 10.3115/V1/D14-1162, 10.3115/v1/D14-1162]
   Plank B., 2015, P 6 WORKSH COMP APPR, P92, DOI [10.18653/v1/w15-2913, DOI 10.18653/V1/W15-2913]
   Quercia D., 2011, Proceedings of the 2011 IEEE Third International Conference on Privacy, Security, Risk and Trust and IEEE Third International Conference on Social Computing (PASSAT/SocialCom 2011), P180, DOI 10.1109/PASSAT/SocialCom.2011.26
   Raad B., 2000, BIG 5 PERSONALITY FA
   Rangel Francisco, 2018, Text Processing. FIRE 2016 International Workshop. Revised Selected Papers: LNCS 10478, P1, DOI 10.1007/978-3-319-73606-8_1
   Rastogi A, 2016, PROC INT SYMP SOFTW, P77, DOI 10.1109/ISSRE.2016.43
   Raza Arif, 2014, International Journal of Information Systems and Social Change, V5, P77, DOI 10.4018/ijissc.2014070106
   Rigby P. C., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories (MSR '07), P23, DOI [10.1109/MSR.2007.35, DOI 10.1109/MSR.2007.35]
   Roberts BW, 2007, PERSPECT PSYCHOL SCI, V2, P313, DOI 10.1111/j.1745-6916.2007.00047.x
   Ryckman RM., 2012, Theories of personality
   Salleh N, 2014, EMPIR SOFTW ENG, V19, P714, DOI 10.1007/s10664-012-9238-4
   Scherer KR, 2003, SPEECH COMMUN, V40, P227, DOI 10.1016/S0167-6393(02)00084-5
   Schmitt DP, 2007, J CROSS CULT PSYCHOL, V38, P173, DOI 10.1177/0022022106297299
   Schwartz HA, 2013, PLOS ONE, V8, DOI 10.1371/journal.pone.0073791
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Smith EK, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P15, DOI [10.1145/2897586.2897596, 10.1109/CHASE.2016.011]
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Steinmacher I, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P25, DOI 10.1109/CHASE.2013.6614728
   Storey Margaret-Anne, 2013, P 2013 C COMPUTER SU, P103
   Tausczik YR, 2010, J LANG SOC PSYCHOL, V29, P24, DOI 10.1177/0261927X09351676
   Tourani P, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P24, DOI 10.1109/SANER.2017.7884606
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Vasilescu B, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P514, DOI 10.1109/MSR.2015.77
   Vinciarelli A, 2014, IEEE T AFFECT COMPUT, V5, P273, DOI 10.1109/TAFFC.2014.2330816
   Wagner S., 2014, INFLUENCE PERSONALIT
   Wang Y., 2015, 2015 ACM IEEE INT S, P1
   Wang Y, 2016, EMPIR SOFTW ENG, V21, P2233, DOI 10.1007/s10664-015-9407-3
   Weinberg G. M., 1971, PSYCHOL COMPUTER PRO, P29
   Wright AGC, 2014, IEEE T AFFECT COMPUT, V5, P292, DOI 10.1109/TAFFC.2014.2332331
   Xia X, 2017, PROC IEEE INT CONF S, P318, DOI 10.1109/ICSME.2017.50
   Yang HD, 2008, EUR J INFORM SYST, V17, P47, DOI 10.1057/palgrave.ejis.3000730
   Yarkoni T, 2010, J RES PERS, V44, P363, DOI 10.1016/j.jrp.2010.04.001
   Ye YW, 2003, PROC INT CONF SOFTW, P419
NR 132
TC 22
Z9 22
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2019
VL 114
BP 1
EP 20
DI 10.1016/j.infsof.2019.05.012
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA IQ3RQ
UT WOS:000480669200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Qin, C
   Eichelberger, H
   Schmid, K
AF Qin, Cui
   Eichelberger, Holger
   Schmid, Klaus
TI Enactment of adaptation in data stream processing with latency
   implications-A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Stream processing; Big data; Runtime adaptation; Enactment; Latency;
   Systematic literature review
ID QUERY OPTIMIZATION; VIDEO; MANAGEMENT
AB Context: Stream processing is a popular paradigm to continuously process huge amounts of data. Runtime adaptation plays a significant role in supporting the optimization of data processing tasks. In recent years runtime adaptation has received significant interest in scientific literature. However, so far no categorization of the enactment approaches for runtime adaptation in stream processing has been established.
   Objective: This paper identifies and characterizes different approaches towards the enactment of runtime adaptation in stream processing with a main focus on latency as quality dimension.
   Method: We performed a systematic literature review (SLR) targeting five main research questions. An automated search, resulting in 244 papers, was conducted. 75 papers published between 2006 and 2018 were finally included. From the selected papers, we extracted data like processing problems, adaptation goals, enactment approaches of adaptation, enactment techniques, evaluation metrics as well as evaluation parameters used to trigger the enactment of adaptation in their evaluation.
   Results: We identified 17 different enactment approaches and categorized them into a taxonomy. For each, we extracted the underlying technique used to implement this enactment approach. Further, we identified 9 categories of processing problems, 6 adaptation goals, 9 evaluation metrics and 12 evaluation parameters according to the extracted data properties.
   Conclusion: We observed that the research interest on enactment approaches to the adaptation of stream processing has significantly increased in recent years. The most commonly applied enactment approaches are parameter adaptation to tune parameters or settings of the processing, load balancing used to re-distribute workloads, and processing scaling to dynamically scale up and down the processing. In addition to latency, most adaptations also address resource fluctuation / bottleneck problems. For presenting a dynamic environment to evaluate enactment approaches, researchers often change input rates or processing workloads.
C1 [Qin, Cui; Eichelberger, Holger; Schmid, Klaus] Univ Hildesheim, Inst Comp Sci, Software Syst Engn, Univ Pl 1, D-31141 Hildesheim, Germany.
C3 University of Hildesheim
RP Qin, C (corresponding author), Univ Hildesheim, Inst Comp Sci, Software Syst Engn, Univ Pl 1, D-31141 Hildesheim, Germany.
EM qin@sse.uni-hildesheim.de; eichelberger@sse.uni-hildesheim.de;
   schmid@sse.uni-hildesheim.de
RI Schmid, Klaus/AAB-1480-2019
OI Schmid, Klaus/0000-0002-4147-3942; Eichelberger,
   Holger/0000-0002-2584-5558
CR Abadi D.J., 2005, CIDR, P277
   Abadi DJ, 2003, VLDB J, V12, P120, DOI 10.1007/s00778-003-0095-z
   Adaikkalavan R, 2003, LECT NOTES COMPUT SC, V2798, P190
   Aljanaby Alaa., 2005, Int. Arab J. Inf. Technol, V2, P48
   Andrade HCM, 2014, FUNDAMENTALS OF STREAM PROCESSING: APPLICATION DESIGN, SYSTEMS, AND ANALYTICS, P1, DOI 10.1017/CBO9781139058940
   Anicic D, 2012, SEMANT WEB, V3, P397, DOI 10.3233/SW-2011-0053
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], 2017, P HPDC 2017
   Atzori L, 2012, SIGNAL PROCESS-IMAGE, V27, P1049, DOI 10.1016/j.image.2012.09.005
   Babazadeh M, 2015, LECT NOTES COMPUT SC, V9114, P24, DOI 10.1007/978-3-319-19890-3_3
   Backman N., 2012, Proceedings of third international workshop on MapReduce and its Applications Date, P1
   BALKESEN C., 2013, 7 ACM INT C DISTRIBU, P15
   Becker M., 2012, PROC 8 INT ACM SIGSO, P117
   Bhattacharya A, 2012, INT J MULTIMED DATA, V3, P45, DOI 10.4018/jmdem.2012070103
   Birke R, 2012, COMPUT COMMUN, V35, P2237, DOI 10.1016/j.comcom.2012.07.005
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Budhkar S, 2018, J NETW SYST MANAG, V26, P401, DOI 10.1007/s10922-017-9420-5
   Caneill M., 2016, P 17 INT MIDDL C MID
   Cardellini V, 2018, FUTURE GENER COMP SY, V87, P171, DOI 10.1016/j.future.2018.05.025
   Chakravarthy S, 2009, ADV DATABASE SYST, V36, P1, DOI 10.1007/978-0-387-71003-7_1
   Chandrasekaran Sirish, 2003, ACM SIGMOD INT C MAN, P668, DOI 10.1145/872757.872857
   Chatzistergiou A., 2014, Proceedings of the 23rd ACM International Conference on Conference on Information and Knowledge Management, P1579, DOI DOI 10.1145/2661829.2661882
   Chen S, 2014, PROCEEDINGS OF THE 28TH ACM INTERNATIONAL CONFERENCE ON SUPERCOMPUTING, (ICS'14), P93, DOI 10.1145/2597652.2597669
   Chun S, 2017, J INF SCI, V43, P852, DOI 10.1177/0165551516670278
   Claypool K, 2008, LECT NOTES COMPUT SC, V4947, P220, DOI 10.1007/978-3-540-78568-2_18
   Cugola G, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187677
   Le-Phuoc D, 2011, LECT NOTES COMPUT SC, V7031, P370, DOI 10.1007/978-3-642-25073-6_24
   Das Tathagata, 2014, P SOCC
   de la Iglesia DG, 2015, ACM T AUTON ADAP SYS, V10, DOI 10.1145/2724719
   De Matteis T, 2017, J SYST SOFTWARE, V127, P302, DOI 10.1016/j.jss.2016.08.037
   Demers A.J., 2007, P CIDR, VVolume 7, P412
   Deshpande A, 2007, FOUND TRENDS DATABAS, V1, P1, DOI 10.1561/1900000001
   Du G., 2016, P 4 WORKSH DISTR CLO
   Duan Songyun., 2007, Proceedings of the 33rd International Conference on Very Large Data Bases, VLDB'07, P711
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Eichelberger H., 2015, SOFTWARETECHNIK TREN, V35, P35
   Eskandari Leila, 2016, P ACSW 16 ACM NEW YO
   Esmaili K. Sheykh, 2011, P ACM SIGMOD INT C M, P613
   Floratou A, 2017, PROC VLDB ENDOW, V10, P1825
   Gama J., 2007, Learning from data streams: processing techniques in sensor networks
   Gedik B, 2008, PROC INT CONF DATA, P1121, DOI 10.1109/ICDE.2008.4497521
   Gounaris A., 2002, ADV DATABASES, P882
   Guo L., 2006, Proc. ACM SIGCOMM Internet Measurement Conference (IMC), P217
   Hamza A., 2016, P ACM INT C MULT SYS
   Hamza A., 2014, P NETW OP SYST SUPP
   Heinze T., 2015, DEBS, P150, DOI DOI 10.1145/2675743.2771831
   Hidalgo N, 2017, J SYST SOFTWARE, V127, P205, DOI 10.1016/j.jss.2016.06.010
   Higashino WA, 2016, ACM T AUTON ADAP SYS, V11, DOI 10.1145/2967499
   Hirzel M, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2528412
   Hosseini M, 2018, PROCEEDINGS OF THE 23TH ACM WORKSHOP ON PACKET VIDEO (PV'18), P25, DOI 10.1145/3210424.3210429
   Hu Liting., 2014, P 2014 USENIX C USEN, P25
   Huang Q, 2016, PROC VLDB ENDOW, V10, P73
   Jacques-Silva G, 2018, PROC VLDB ENDOW, V11, P1809, DOI 10.14778/3229863.3229869
   JARKE M, 1984, COMPUT SURV, V16, P111, DOI 10.1145/356924.356928
   Jilong Kuang, 2011, 2011 ACM/IEEE Symposium on Architectures for Networking and Communications Systems (ANCS), P45, DOI 10.1109/ANCS.2011.15
   Kitchenham B.A., 2015, EVIDENCE BASED SOFTW, V4
   Kleppmann M., 2017, Designing data-intensive applications: The big ideas behind reliable, scalable, and maintainable systems
   Kossmann D, 2000, ACM COMPUT SURV, V32, P422, DOI 10.1145/371578.371598
   Kremer M., 1999, SURVEY QUERY OPTIMIZ
   Krupitzer C, 2015, PERVASIVE MOB COMPUT, V17, P184, DOI 10.1016/j.pmcj.2014.09.009
   Kuhrmann M, 2017, EMPIR SOFTW ENG, V22, P2852, DOI 10.1007/s10664-016-9492-y
   Kulkarni D., 2008, Proceedings of DEBS, P277
   Lakshmanan GT, 2008, LECT NOTES COMPUT SC, V5346, P223, DOI 10.1007/978-3-540-89856-6_12
   Lee S, 2015, FRONT SYST NEUROSCI, V9, DOI 10.3389/fnsys.2015.00005
   Li HarryC., 2008, Proceedings of the 8th USENIX Conference on Operating Systems Design and Implementation (OSDI), P355
   Li L, 2014, INT J NONLIN MECH, V61, P1, DOI 10.1016/j.ijnonlinmec.2014.01.006
   Li ZH, 2010, J PARALLEL DISTR COM, V70, P537, DOI 10.1016/j.jpdc.2010.01.005
   Liang C, 2009, EURASIP J EMBED SYST, DOI 10.1155/2009/518659
   LIM H., 2006, ACM SIGMOD, P313, DOI DOI 10.1145/1142473.1142509
   Lim L, 2013, DISTRIB PARALLEL DAT, V31, P321, DOI 10.1007/s10619-012-7093-3
   Lin Q, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P811, DOI 10.1145/2723372.2746485
   Liu Y., 2011, P 2011 ACM S APPL CO, P217
   Liu YQ, 2006, COMPUT COMMUN, V29, P1889, DOI 10.1016/j.comcom.2005.10.036
   Lohrmann B., 2012, P 21 INT S HIGH PERF, P271
   Luthra M, 2018, DEBS'18: PROCEEDINGS OF THE 12TH ACM INTERNATIONAL CONFERENCE ON DISTRIBUTED AND EVENT-BASED SYSTEMS, P136, DOI 10.1145/3210284.3210292
   Madsen Kasper Grud Skat, 2016, PROC ACM DEBS 16, P37
   Madsen KGS, 2015, INT C INFORM KNOWLED, P13
   Mahdavi-Hezavehi S, 2017, INFORM SOFTWARE TECH, V90, P1, DOI 10.1016/j.infsof.2017.03.013
   Mencagli G, 2018, FUTURE GENER COMP SY, V79, P862, DOI 10.1016/j.future.2017.09.004
   Mencagli G, 2016, ACM T AUTON ADAP SYS, V11, DOI 10.1145/2903146
   Moon S, 2016, FUTURE GENER COMP SY, V56, P664, DOI 10.1016/j.future.2015.09.022
   Nehme R.V., 2009, EDBT, P803
   Oliveira Vasconcelos Rafael, 2014, International Journal of Adaptive, Resilient and Autonomic Systems, V5, P1, DOI 10.4018/ijaras.2014070101
   Ottenwälder B, 2014, ACM T INTERNET TECHN, V14, DOI 10.1145/2633688
   Pham TN, 2016, VLDB J, V25, P197, DOI 10.1007/s00778-015-0411-4
   Pozueco L, 2013, COMPUT ELECTR ENG, V39, P775, DOI 10.1016/j.compeleceng.2013.01.015
   Qian Z., 2013, Proceedings of the 8th ACM European Conference on Computer Systems, EuroSys'13, DOI [10.1145/2465351.2465353, DOI 10.1145/2465351.2465353]
   Qin C., 2016, EDBT ICDT WORKSH
   Ravindra S., 2017, Proc. 8th ACM/SPEC Intl. Conf. Performance Engineering, P91
   Rui Huang, 2016, International Journal of Wireless and Mobile Computing, V10, P317
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Schneider S, 2016, MIDDLEWARE '16: PROCEEDINGS OF THE 17TH INTERNATIONAL MIDDLEWARE CONFERENCE, DOI 10.1145/2988336.2990475
   Shvachko K., 2010, 2010 IEEE 26th Symposium on Mass Storage Systems and Technologies (MSST), P1
   Simmhan Y., 2011, P 2 INT WORKSH SCI C, P33
   Smailovic J, 2014, INFORM SCIENCES, V285, P181, DOI 10.1016/j.ins.2014.04.034
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   Stephens R, 1997, ACTA INFORM, V34, P491, DOI 10.1007/s002360050095
   Su Y, 2015, CLUSTER COMPUT, V18, P949, DOI 10.1007/s10586-014-0412-x
   Tudoran R, 2016, FUTURE GENER COMP SY, V54, P274, DOI 10.1016/j.future.2015.01.016
   Tudoran Radu., 2014, P 8 ACM INT C DISTRI, P23, DOI DOI 10.1145/2611286.2611298
   Venkataraman S, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P374, DOI 10.1145/3132747.3132750
   Vlachos M, 2008, DATA MIN KNOWL DISC, V16, P109, DOI 10.1007/s10618-007-0066-x
   Wang F, 2016, IEEE ACM T NETWORK, V24, P272, DOI 10.1109/TNET.2014.2362541
   Wang S., 2009, EDBT, P299
   Wei Y., 2006, OBJECT COMPONENT ORI
   Works K, 2015, BIG DATA RES, V2, P127, DOI 10.1016/j.bdr.2015.09.001
   Wu E., 2006, P ASS COMP MACH ACM, P407
   Wu J, 2009, INFORM SYST, V34, P454, DOI 10.1016/j.is.2009.02.001
   Yin H., 2009, Proceedings of ACM International Conference on Multimedia, P25
   Yuan XQ, 2013, FUTURE GENER COMP SY, V29, P1573, DOI 10.1016/j.future.2012.09.002
   Zacheilas N, 2016, LECT NOTES COMPUT SC, V9687, P174, DOI 10.1007/978-3-319-39577-7_14
   Zhang B, 2018, PROCEEDINGS OF THE 2018 CONFERENCE OF THE ACM SPECIAL INTEREST GROUP ON DATA COMMUNICATION (SIGCOMM '18), P236, DOI 10.1145/3230543.3230554
   Zhang WS, 2016, PERS UBIQUIT COMPUT, V20, P795, DOI 10.1007/s00779-016-0945-5
   Zhang Y., 2014, P 1 WORKSH PAR PROGR, P53, DOI [10.1145/2567634.2567637, DOI 10.1145/2567634.2567637]
   Zhao MC, 2017, SIGNAL PROCESS-IMAGE, V57, P157, DOI 10.1016/j.image.2017.05.015
   Zhou YL, 2008, LECT NOTES COMPUT SC, V5346, P326, DOI 10.1007/978-3-540-89856-6_17
   Zhuoqun Yang, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P55, DOI 10.1007/978-3-319-05843-6_5
   2013, EXPERT SYST APPL, V40, P7267, DOI DOI 10.1016/J.ESWA.2013.07.033
   2018, P 2018 ACM S CLOUD, P249, DOI DOI 10.1145/3267809.3267832
   2015, SIGM P 2015 ACM, P889, DOI DOI 10.1145/2723372.2735371
NR 120
TC 12
Z9 14
U1 2
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2019
VL 111
BP 1
EP 21
DI 10.1016/j.infsof.2019.03.006
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HW6ST
UT WOS:000466821600001
DA 2024-07-18
ER

PT J
AU Oliveira, J
   Gheyi, R
   Mongiovi, M
   Soares, G
   Ribeiro, M
   Garcia, A
AF Oliveira, Jonhnanthan
   Gheyi, Rohit
   Mongiovi, Melina
   Soares, Gustavo
   Ribeiro, Marcio
   Garcia, Alessandro
TI Revisiting the refactoring mechanics
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Refactoring mechanics; Survey
AB Context: Refactoring is a key practice in agile methodologies used by a number of developers, and available in popular IDEs. However, it is unclear whether the refactoring mechanics have the same meaning for developers.
   Objective: In this article, we revisit the refactoring mechanics.
   Method: We conduct a survey with 107 developers of popular Java projects on GitHub. We asked them about the output of seven refactoring types applied to small programs.
   Results: Developers do not expect the same outputs in all questions. The refactoring mechanics is based on developers' experience for a number of them (71.02%). Some developers (75.70%) use IDEs to apply refactorings. However, the output yielded by the preferred IDE is different from what they want.
   Conclusion: Developers and IDE developers use different mechanics for most refactoring types considered in our survey, and this may impact developers' communication.
C1 [Oliveira, Jonhnanthan; Gheyi, Rohit; Mongiovi, Melina] Univ Fed Campina Grande, Campina Grande, Brazil.
   [Soares, Gustavo] Microsoft, Albuquerque, NM USA.
   [Ribeiro, Marcio] Univ Fed Alagoas, Maceio, Brazil.
   [Garcia, Alessandro] Pontifical Catholic Univ Rio de Janeiro, Rio De Janeiro, Brazil.
C3 Universidade Federal de Campina Grande; Microsoft; Universidade Federal
   de Alagoas; Pontificia Universidade Catolica do Rio de Janeiro
RP Oliveira, J (corresponding author), Univ Fed Campina Grande, Campina Grande, Brazil.
EM jonhnanthan@copin.ufcg.edu.br; rohit@dsc.ufcg.edu.br;
   melina@computacao.ufcg.edu.br; gustavo.soares@microsoft.com;
   marcio@ic.ufal.br; afgarcia@inf.puc-rio.br
OI Oliveira, Jonhnanthan/0000-0002-7782-410X
FU CAPES [175956, 117875]; CNPq [308380/2016-9, 426005/2018-0,
   460883/2014-3, 307190/2015-3]; FAPEAL [PPG 14/2016]; FAPERJ
   [E26-102.166/2013]
FX This work was partially supported by CAPES (Grant nos. 175956 and
   117875), CNPq (Grant nos. 308380/2016-9, 426005/2018-0, 460883/2014-3,
   307190/2015-3), FAPEAL (Grant no. PPG 14/2016), and FAPERJ (Grant no.
   E26-102.166/2013) grants.
CR Beck K., 2000, EXTREME PROGRAMMING
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Murphy-Hill E, 2011, S VIS LANG HUM CEN C, P165, DOI 10.1109/VLHCC.2011.6070394
   Opdyke William F., 1992, THESIS
   Schäfer M, 2010, ACM SIGPLAN NOTICES, V45, P286, DOI 10.1145/1932682.1869485
   Soares G, 2013, IEEE T SOFTWARE ENG, V39, P147, DOI 10.1109/TSE.2012.19
   Vakilian M, 2012, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2012.6227190
NR 10
TC 15
Z9 15
U1 0
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2019
VL 110
BP 136
EP 138
DI 10.1016/j.infsof.2019.03.002
PG 3
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HU1RI
UT WOS:000465049100010
DA 2024-07-18
ER

PT J
AU Melegati, J
   Goldman, A
   Kon, F
   Wang, XF
AF Melegati, Jorge
   Goldman, Alfredo
   Kon, Fabio
   Wang, Xiaofeng
TI A model of requirements engineering in software startups
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software startups; Requirements engineering; Empirical software
   engineering; Customer development; Product validation
ID PRODUCT MANAGEMENT; GROUNDED THEORY; CHALLENGES; PRIORITIZATION;
   COMPANIES; B2C
AB Context Over the past 20 years, software startups have created many products that have changed human life. Since these companies are creating brand-new products or services, requirements are difficult to gather and highly volatile. Although scientific interest in software development in this context has increased, the studies on requirements engineering in software startups are still scarce and mostly focused on elicitation activities.
   Objective: This study overcomes this gap by answering how requirements engineering practices are performed in this context.
   Method: We conducted a grounded theory study based on 17 interviews with software startups practitioners.
   Results: We constructed a model to show that software startups do not follow a single set of practices but, instead, build a custom process, changed throughout the development of the company, combining different practices according to a set of influences (Founders, Software Development Manager, Developers, Market, Business Model and Startup Ecosystem).
   Conclusion: Our findings show that requirements engineering activities in software startups are similar to those in agile teams, but some steps vary as a consequence of the lack of an accessible customer.
C1 [Melegati, Jorge; Wang, Xiaofeng] Free Univ Bozen Bolzano, Fac Comp Sci, Bolzano, Italy.
   [Goldman, Alfredo; Kon, Fabio] Univ Sao Paulo, Dept Comp Sci, Sao Paulo, Brazil.
C3 Free University of Bozen-Bolzano; Universidade de Sao Paulo
RP Melegati, J (corresponding author), Free Univ Bozen Bolzano, Fac Comp Sci, Bolzano, Italy.
EM jmelegatigoncalves@unibz.it
RI Wang, Xiaofeng/E-5077-2016; Kon, Fabio/H-2743-2012; Melegati,
   Jorge/AAG-3925-2021; Goldman, Alfredo/J-3739-2017
OI Kon, Fabio/0000-0003-3888-7340; Melegati, Jorge/0000-0003-1303-4173;
   Goldman, Alfredo/0000-0001-5746-4154
FU FAPESP [13/06146-7]; CNPq [485070/2013-8]; Fundacao de Amparo a Pesquisa
   do Estado de Sao Paulo (FAPESP) [13/06146-7] Funding Source: FAPESP
FX This study was funded by FAPESP proc. 13/06146-7 and CNPq proc.
   485070/2013-8.
CR Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   ADLER PA, 1995, CONTEMP SOCIOL, V24, P420, DOI 10.2307/2076552
   Alpkan L, 2010, MANAGE DECIS, V48, P732, DOI 10.1108/00251741011043902
   [Anonymous], 2015, TECHNICAL REPORT
   [Anonymous], 2015, LECT NOTES BUSINESS, V212, P40, DOI [10.1007/978-3-319-18612-24, DOI 10.1007/978-3-319-18612-24]
   Bakalova Z, 2011, LECT NOTES COMPUT SC, V6606, P181, DOI 10.1007/978-3-642-19858-8_18
   Bass JM, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P154, DOI 10.1109/ICGSE.2013.27
   Beck K., 2005, THE XP SERIES
   Berg V, 2018, J SYST SOFTWARE, V144, P255, DOI 10.1016/j.jss.2018.06.043
   Blank S., 2013, 4 STEPS EPIPHANY SUC
   Blank S., 2018, NEWTV IS ANTITHESIS
   Brown T, 2009, BUS WEEK, P54
   Buchanan R., 1992, Design Issues, V8, P5, DOI [10.2307/1511637, DOI 10.2307/1511637]
   Chanin R, 2017, 2017 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR STARTUPS (SOFTSTART 2017), P2, DOI [10.1109/SoftStart.2017, 10.1109/SoftStart.2017.3]
   Cheng BHC, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P285, DOI 10.1109/FOSE.2007.17
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Coleman G, 2008, J ENTERP INF MANAG, V21, P633, DOI 10.1108/17410390810911221
   Croll Alistair., 2013, Lean Analytics: Use Data to Build a Better Startup Faster, V1
   CROWNE M, 2002, IEEE INT ENG MAN C, V1, P338, DOI DOI 10.1109/IEMC.2002.1038454
   Cukier D., 2018, J INNOV ENTREP, V7, DOI [10.1186/s13731-018-0091-6, DOI 10.1186/S13731-018-0091-6]
   Cukier D, 2015, LECT NOTES COMPUT SC, V9459, P600, DOI 10.1007/978-3-319-26844-6_45
   Daneva M, 2014, J SYST SOFTWARE, V95, P1, DOI 10.1016/j.jss.2014.06.035
   Davis A, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P179
   De-Ste-Croix A, 2008, AGILE 2008, PROCEEDINGS, P274, DOI 10.1109/Agile.2008.94
   Decker B, 2007, IEEE SOFTWARE, V24, P28, DOI 10.1109/MS.2007.60
   Delmar F., 2006, Strategic Organization, V4, P215, DOI 10.1177/1476127006066596
   Diebold P., 2019, LECT INFORM SOFTWARE, V109, P92
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Eberlein A., 2002, INT WORKSH TIM CONST, P1
   Ebert C, 2014, J SYST SOFTWARE, V95, P10, DOI 10.1016/j.jss.2013.12.042
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fern MJ, 2012, STRATEGIC MANAGE J, V33, P427, DOI 10.1002/smj.1944
   Frederiksen DL, 2017, INT ENTREP MANAG J, V13, P169, DOI 10.1007/s11365-016-0411-x
   Giardino C, 2016, IEEE T SOFTWARE ENG, V42, P585, DOI 10.1109/TSE.2015.2509970
   Giardino C, 2014, LECT NOTES BUS INF P, V182, P27
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Gordon SR, 2007, J ENTERP INF MANAG, V20, P271, DOI 10.1108/17410390710740736
   Gralha C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P823, DOI 10.1145/3180155.3180158
   Gutbrod M, 2017, LECT NOTES COMPUT SC, V10611, P297, DOI 10.1007/978-3-319-69926-4_21
   Hardgrave BC, 2003, J MANAGE INFORM SYST, V20, P123
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hoejmose S, 2012, IND MARKET MANAG, V41, P609, DOI 10.1016/j.indmarman.2012.04.008
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Jantunen S, 2014, J SYST SOFTWARE, V95, P32, DOI 10.1016/j.jss.2014.03.050
   Kajko-Mattsson Mira, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P617, DOI 10.1109/CSSE.2008.1370
   Karlsson L, 2007, INFORM SOFTWARE TECH, V49, P588, DOI 10.1016/j.infsof.2007.02.008
   Klotins Eriks, 2019, Empirical Software Engineering, V24, P68, DOI 10.1007/s10664-018-9620-y
   Kotonya G., 1998, Requirements engineering: processes and techniques
   Kukreja N, 2012, 2012 20 IEEE INT REQ, P303, DOI DOI 10.1109/RE.2012.6345819
   Lehtola L, 2004, LECT NOTES COMPUT SC, V3009, P497
   Maglyas A, 2013, J SYST SOFTWARE, V86, P3071, DOI 10.1016/j.jss.2013.07.045
   Mater JL, 2000, EIGHTEENTH ANNUAL PACIFIC NORTHWEST SOFTWARE QUALITY CONFERENCE, PROCEEDINGS, P297
   May Beverly, 2012, Proceedings of the 2012 Agile Conference, P141, DOI 10.1109/Agile.2012.18
   Melegati J., 2016, 2 INT WORKSH SOFTW S
   Midler Christophe, 2008, International Journal of Project Management, V26, P479, DOI 10.1016/j.ijproman.2008.05.003
   Motoyama Y, 2017, ENTREP RES J, V7, DOI 10.1515/erj-2016-0011
   Muñoz-Bullon F, 2015, ENTREP REGION DEV, V27, P80, DOI 10.1080/08985626.2014.999719
   Nambisan S, 2002, J ENG TECHNOL MANAGE, V19, P141, DOI 10.1016/S0923-4748(02)00007-3
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Nguyen-Duc A., 2015, Hunter-gatherer cycle: a conceptual model of the evolution of software startups, V24-26, P199
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Oivo M., 2016, ENG TECHN INN ICE IE, P57
   Paetsch F, 2003, TWELFTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P308
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Pergher M, 2013, IEEE INT WORKS EMPIR, P40, DOI 10.1109/EmpiRE.2013.6615215
   Potts C., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P128, DOI 10.1109/ISRE.1995.512553
   Power N., 2003, Proceedings of the 21st annual international conference on documentation, San Francisco, CA, USA, P86, DOI [10.1145/944885.944887, DOI 10.1145/944885.944887]
   Racheva Z, 2008, 2008 SECOND INTERNATIONAL WORKSHOP ON SOFTWARE PRODUCT MANAGEMENT, P51
   Rafiq U, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P141, DOI 10.1109/SEAA.2017.73
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Regnell B, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P287, DOI 10.1007/3-540-28244-0_13
   Reuther K., 2016, ENG TECHN INN ICE IE, P147
   Ries E, 2011, The Lean Startup
   RITTEL HWJ, 1973, POLICY SCI, V4, P155, DOI 10.1007/BF01405730
   Rogers E.M., 2010, DIFFUSION INNOVATION
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Siddiqi J, 1996, IEEE SOFTWARE, V13, P15, DOI 10.1109/MS.1996.506458
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Strauss A., 1990, BASICS QUALITATIVE R
   Subramani M, 2001, INFORM SYST RES, V12, P135, DOI 10.1287/isre.12.2.135.9698
   Sutton SM, 2000, IEEE SOFTWARE, V17, P33, DOI 10.1109/52.854066
   Svensson RB, 2011, INT REQUIR ENG CONF, P69, DOI 10.1109/RE.2011.6051652
   Swani K, 2014, IND MARKET MANAG, V43, P873, DOI 10.1016/j.indmarman.2014.04.012
   Tripathi N, 2018, J SYST SOFTWARE, V146, P130, DOI 10.1016/j.jss.2018.08.059
   Unterkalmsteiner M, 2016, E-INFORMATICA, V10, P89, DOI 10.5277/e-Inf160105
   Urquhart C, 2010, INFORM SYST J, V20, P357, DOI 10.1111/j.1365-2575.2009.00328.x
   Valtanen A, 2008, LECT NOTES COMPUT SC, V5089, P258, DOI 10.1007/978-3-540-69566-0_22
   Vijayasarathy L., 2008, Journal of Information Technology Management, V19, P1, DOI DOI 10.3998/3336451.0011.104
   Wang Xiaofeng, 2016, INT C AG SOFTW DEV, P169, DOI 10.1007/978-3-319-33515-5_14
   Werner CM, 2018, COMM COM INF SC, V809, P15, DOI 10.1007/978-981-10-7796-8_2
   Zettell J., 2001, Product Focused Software Process Improvement. Third International Conference, PROFES 2001. Proceedings (Lecture Notes in Computer Science Vol.2188), P255
   Zheying Zhang, 2010, Journal of Software Engineering and Applications, V3, P882, DOI 10.4236/jsea.2010.39103
   Zott C, 2010, LONG RANGE PLANN, V43, P216, DOI 10.1016/j.lrp.2009.07.004
NR 95
TC 36
Z9 39
U1 2
U2 60
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2019
VL 109
BP 92
EP 107
DI 10.1016/j.infsof.2019.02.001
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HQ0SX
UT WOS:000462106400008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Merayo, MG
   Hierons, RM
   Núñez, M
AF Merayo, Mercedes G.
   Hierons, Robert M.
   Nunez, Manuel
TI A tool supported methodology to passively test asynchronous systems with
   multiple users
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID PROTOCOL
AB Context: Testing usually involves the interaction of the tester with the system under test. However, there are many situations in which this interaction is not feasible and so one requires a passive approach in which the system is analysed to look for failures or unexpected behaviours. The entities of a complex system usually communicate in an asynchronous manner and this complicates the testing tasks since the observed order of events need not be the same as the order in which the events were produced. In previous work, we presented a formal passive testing theory for a single user and system communicating through an asynchronous channel. We were able to check that a trace generated by the system satisfies a given property.
   Objective: This papers extends our work, for detecting potential intrusions and unexpected behaviours, to the case where many users simultaneously communicate with a central server. We evaluate the practical value of the theoretical framework with a non-trivial system.
   Method: We developed a novel complete theoretical framework to analyse asynchronous systems with multiple users. All the algorithms are fully implemented. Experiments were performed over the Nextcloud platform to show the applicability of our framework. The experiments include an attack so that actual vulnerabilities could be revealed.
   Results: The application of our methodology, supported by a tool fully implementing it, was able to reveal a vulnerability in the WebDAV protocol running on Nextcloud.
   Conclusion: The extension of our previous work is not only useful from a theoretical point of view but also increases the applicability of the original work. We are now able to analyse systems where the interaction with different users can lead to unexpected behaviours. We have been able to find a vulnerability in a real system, showing the usefulness of our work.
C1 [Merayo, Mercedes G.; Nunez, Manuel] Univ Complutense Madrid, Dept Sistemas Informat & Comp, Madrid, Spain.
   [Hierons, Robert M.] Brunel Univ London, Dept Comp Sci, Uxbridge UB8 3PH, Middx, England.
C3 Complutense University of Madrid; Brunel University
RP Núñez, M (corresponding author), Univ Complutense Madrid, Dept Sistemas Informat & Comp, Madrid, Spain.
EM mgmerayo@fdi.ucm.es; rob.hierons@brunel.ac.uk; manuelnu@ucm.es
RI Núñez, Manuel/B-6889-2008; GARCIA MERAYO, MARIA DE LAS
   MERCEDES/T-4990-2018
OI Núñez, Manuel/0000-0001-9808-6401; GARCIA MERAYO, MARIA DE LAS
   MERCEDES/0000-0002-4634-4082; Hierons, Robert/0000-0002-4771-1446
FU Spanish MINECO/FEDER [TIN2015-65845-C3-1-R]; Region of Madrid
   [S2013/ICE-3006]
FX This work has been supported by the Spanish MINECO/FEDER (grant number
   TIN2015-65845-C3-1-R); and the Region of Madrid (grant number
   S2013/ICE-3006).
CR Andrés C, 2012, SOFTW TEST VERIF REL, V22, P365, DOI 10.1002/stvr.1464
   Bayse E, 2005, COMPUT NETW, V48, P247, DOI 10.1016/j.comnet.2004.09.009
   Binder RV, 2015, COMMUN ACM, V58, P52, DOI 10.1145/2697399
   Braunstein C, 2014, LECT NOTES COMPUT SC, V8829, P380, DOI 10.1007/978-3-319-11737-9_25
   Camacho M. A., 2014, P SITIS, P223
   Cavalli A. R., 2003, INF SOFTW TECHNOL, V45
   Cavalli AR, 2015, ANN TELECOMMUN, V70, P85, DOI 10.1007/s12243-015-0457-8
   Cavalli AR, 2008, IEEE ACM DIS SIM, P315, DOI 10.1109/DS-RT.2008.43
   Cisco, MICR WIND WEBDAV SSL
   Colombo C, 2012, FORM METHOD SYST DES, V41, P269, DOI 10.1007/s10703-012-0142-8
   Focus S., MICR WIND WEBDAV CVE
   Gaudel MC, 1995, LECT NOTES COMPUT SC, V915, P82
   Grieskamp W., SOFTW TEST VERIF REL, V21
   He, 2017, SENSORS, V17, P1, DOI DOI 10.1186/S13014-017-0845-5
   Henniger O, 1997, TESTING OF COMMUNICATING SYSTEMS, VOL 10, P255
   Hierons R.M., 2008, LNCS, V4949
   Hierons RM, 2017, J LOG ALGEBR METHODS, V86, P408, DOI 10.1016/j.jlamp.2016.02.004
   Hierons RM, 2013, LECT NOTES COMPUT SC, V7892, P99
   Hierons RM, 2013, COMPUT J, V56, P1305, DOI 10.1093/comjnl/bxs107
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   Huo J, 2009, SOFTW TEST VERIF REL, V19, P55, DOI 10.1002/stvr.396
   Hwang I, 2012, SOFTW TEST VERIF REL, V22, P343, DOI 10.1002/stvr.445
   Lee D, 2006, IEEE ACM T NETWORK, V14, P424, DOI 10.1109/TNET.2006.872572
   Lee D, 1997, 1997 INTERNATIONAL CONFERENCE ON NETWORK PROTOCOLS - PROCEEDINGS, P113, DOI 10.1109/ICNP.1997.643699
   Liyanage Madhusanka, 2017, 2017 IEEE INT S LOC, P1
   Mammar A, 2011, LECT NOTES COMPUT SC, V7019, P80, DOI 10.1007/978-3-642-24580-0_7
   MAZURKIEWICZ A, 1984, LECT NOTES COMPUT SC, V176, P115
   Mazurkiewicz A., 1995, BOOK TRACES, P3, DOI [DOI 10.1142/9789814261456_0001, 10.1142/9789814261456_0001]
   Merayo MG, 2018, DISTRIB COMPUT, V31, P327, DOI 10.1007/s00446-017-0308-0
   Microsoft, 2015, MS15 089 VULN WEBDAV
   Morales Gerardo, 2010, 2010 IEEE International Conference on Web Services (ICWS), P592, DOI 10.1109/ICWS.2010.17
   Mouttappa P, 2013, COMPUT NETW, V57, P2992, DOI 10.1016/j.comnet.2013.06.019
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Noroozi N, 2015, SOFTW SYST MODEL, V14, P149, DOI 10.1007/s10270-012-0302-8
   Peleska J., 2013, ELECT P THEORETICAL, V111, P3, DOI DOI 10.4204/EPTCS.111.1
   Peleska J, 2015, LECT NOTES COMPUT SC, V9360, P133, DOI 10.1007/978-3-319-23506-6_10
   Sandberg S., 2005, LNCS, P5
   Scheffel Torben, 2014, 2014 Twelfth ACM/IEEE Conference on Formal Methods and Models for Codesign (MEMOCODE), P52, DOI 10.1109/MEMCOD.2014.6961843
   Shafique M, 2015, INT J SOFTW TOOLS TE, V17, P59, DOI 10.1007/s10009-013-0291-0
   Shahmehri N, 2012, INFORM SOFTWARE TECH, V54, P997, DOI 10.1016/j.infsof.2012.03.004
   Shu G., 2006, LNCS, P357
   Simao A, 2011, INFORM SOFTWARE TECH, V53, P1252, DOI 10.1016/j.infsof.2011.06.006
   Tabourier M, 1999, INFORM SOFTWARE TECH, V41, P813, DOI 10.1016/S0950-5849(99)00039-7
   Toumi K., 2014, LNCS, P484
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Wehbi B., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P860, DOI 10.1109/ICST.2012.188
   Weiglhofer M, 2009, P INT COMP SOFTW APP, P154, DOI 10.1109/COMPSAC.2009.194
NR 47
TC 16
Z9 16
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2018
VL 104
BP 162
EP 178
DI 10.1016/j.infsof.2018.07.013
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ1PB
UT WOS:000449138900011
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Gren, L
   Knauss, A
   Stettina, CJ
AF Gren, Lucas
   Knauss, Alessia
   Stettina, Christoph Johann
TI Non-technical individual skills are weakly connected to the maturity of
   agile practices
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Skills; Agile practices; Code quality; Empirical study
ID SOFTWARE-DEVELOPMENT; SUCCESS FACTORS; TEAMS; PERSONALITY; FRAMEWORK;
   EVOLUTION; DRIVEN
AB Context. Existing knowledge in agile software development suggests that individual competency (e.g. skills) is a critical success factor for agile projects. While assuming that technical skills are important for every kind of software development project, many researchers suggest that non-technical individual skills are especially important in agile software development.
   Objective: In this paper, we investigate whether non-technical individual skills can predict the use of agile practices.
   Method: Through creating a set of multiple linear regression models using a total of 113 participants from agile teams in six software development organizations from The Netherlands and Brazil, we analyzed the predictive power of non-technical individual skills in relation to agile practices.
   Results: The results show that there is surprisingly low power in using non-technical individual skills to predict (i.e. explain variance in) the mature use of agile practices in software development.
   Conclusions: Therefore, we conclude that looking at non-technical individual skills is not the optimal level of analysis when trying to understand, and explain, the mature use of agile practices in the software development context. We argue that it is more important to focus on the non-technical skills as a team-level capacity instead of assuring that all individuals possess such skills when understanding the use of the agile practices.
C1 [Gren, Lucas; Knauss, Alessia] Chalmers Univ Technol, SE-41296 Gothenburg, Sweden.
   [Gren, Lucas; Knauss, Alessia] Univ Gothenburg, SE-41296 Gothenburg, Sweden.
   [Stettina, Christoph Johann] Leiden Univ, Ctr Innovat, Schouwburgstr 2, NL-2511 VA The Hague, Netherlands.
   [Stettina, Christoph Johann] Leiden Univ, LIACS, Niels Bohrweg 1, NL-2333 CA Leiden, Netherlands.
C3 Chalmers University of Technology; University of Gothenburg; Leiden
   University - Excl LUMC; Leiden University; Leiden University - Excl
   LUMC; Leiden University
RP Gren, L (corresponding author), Chalmers Univ Technol, SE-41296 Gothenburg, Sweden.; Gren, L (corresponding author), Univ Gothenburg, SE-41296 Gothenburg, Sweden.
EM lucas.gren@cse.gu.se; alessia.knauss@chalmers.se;
   c.j.stettina@cdh.leidenuniv.nl
OI Stettina, Christoph Johann/0000-0002-7176-4521; Gren,
   Lucas/0000-0001-5488-9894
CR Ahmad Sabrina, 2011, International Journal of New Computer Architectures and their Applications, V1, P599
   ALICKE MD, 1995, J PERS SOC PSYCHOL, V68, P804, DOI 10.1037/0022-3514.68.5.804
   ANDERSON JR, 1982, PSYCHOL REV, V89, P369, DOI 10.1037/0033-295X.89.4.369
   [Anonymous], 2010, IEEE SOFTWARE
   Argyris C, 2000, WILEY ENCY MANAGEMEN
   Bender L.L., 2014, INT C SOFTW ENG KNOW, P478
   Booth C., 1994, Ceram. Trans, V50, P67
   Chamberlain S, 2006, LECT NOTES COMPUT SC, V4044, P143
   Chen G, 2001, ORGAN RES METHODS, V4, P62, DOI 10.1177/109442810141004
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Cohn M., 2004, Cutter IT Journal, V17, P16
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Coughlan J, 2003, INFORM SOFTWARE TECH, V45, P525, DOI [10.1016/S0950-5849(03)00032-6, 10.1016/SO950-5849(03)00032-6]
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   Crowder J. A., 2015, Agile Project Management: Managing for Success
   Edum-Fotwe F.T., 2000, INT J PROJ MANAG, V18, P111, DOI [10.1016/s0263-7863(98)90075-8, DOI 10.1016/S0263-7863(98)90075-8]
   Engel D, 2014, PLOS ONE, V9, DOI 10.1371/journal.pone.0115212
   Fabrigar L.R., 2012, Exploratory factor analysis
   Fletcher GCL, 2002, BRIT J ANAESTH, V88, P418, DOI 10.1093/bja/88.3.418
   Fricker S, 2010, LECT NOTES COMPUT SC, V6182, P60, DOI 10.1007/978-3-642-14192-8_7
   Gren L, 2017, J SYST SOFTWARE, V124, P104, DOI 10.1016/j.jss.2016.11.024
   Grünbacher P, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P143, DOI 10.1007/3-540-28244-0_7
   Hackman JR, 2003, J ORGAN BEHAV, V24, P905, DOI 10.1002/job.226
   Hellmann Theodore D., 2012, Proceedings of the 2012 Agile Conference, P55, DOI 10.1109/Agile.2012.8
   Hogg M.A., 2000, Group Dynamics: Theory, Research, and Practice, V4, P81
   Holck J., 2003, Australian Journal of Information Systems, P40
   Hudson NW, 2015, J PERS SOC PSYCHOL, V109, P490, DOI 10.1037/pspp0000021
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P1367, DOI 10.1016/j.chb.2014.10.040
   Janis I., 1977, Decision making: A psychological analysis of conflict, choice, and commitment
   Kelle E.V., 2015, INT WORKSH COOP HUM, P6
   KING JL, 1984, COMMUN ACM, V27, P466, DOI 10.1145/358189.358074
   Klein KJ, 2000, ORGAN RES METHODS, V3, P211, DOI 10.1177/109442810033001
   Kovitz B., 2003, Requirements Engineering, V8, P135, DOI 10.1007/s00766-002-0162-9
   Laanti M., 2013, Communications in Computer and Information Science, V364, P247, DOI DOI 10.1007/978-3-642-39179-8_22
   Lalsing V., 2012, INT J SOFTWARE ENG A, V3, P117
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   Lee SM, 2006, COMMUN ACM, V49, P111, DOI 10.1145/1121949.1121974
   Liu L, 2005, AGILE 2005, Proceedings, P80, DOI 10.1109/ADC.2005.12
   lLindvall M., 2002, Extreme Programming and Agile Methods - XP/Agile Universe 2002 Second XP Universe and First Agile Universe Conference. Proceedings (Lecture Notes in Computer Science Vol.2418), P197
   Maham M, 2008, AGILE 2008, PROCEEDINGS, P176, DOI 10.1109/Agile.2008.60
   MARQUARDT DW, 1970, TECHNOMETRICS, V12, P591, DOI 10.2307/1267205
   McHugh O, 2012, IEEE SOFTWARE, V29, P71, DOI 10.1109/MS.2011.118
   Misra SC, 2009, J SYST SOFTWARE, V82, P1869, DOI 10.1016/j.jss.2009.05.052
   Napier NP, 2009, INFORM SYST J, V19, P255, DOI 10.1111/j.1365-2575.2007.00264.x
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Pentland BT, 2005, IND CORP CHANGE, V14, P793, DOI 10.1093/icc/dth070
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Reynolds KJ, 2001, J EXP SOC PSYCHOL, V37, P427, DOI 10.1006/jesp.2000.1473
   Roth A., 1996, Strategy and Leadership, P30
   Salvato C, 2009, ORGAN SCI, V20, P384, DOI 10.1287/orsc.1080.0408
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Serrador P, 2015, INT J PROJ MANAG, V33, P1040, DOI 10.1016/j.ijproman.2015.01.006
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   Shell GR, 2001, NEGOTIATION J, V17, P155, DOI 10.1111/j.1571-9979.2001.tb00233.x
   Sheppard JM, 2006, J SPORT SCI, V24, P919, DOI 10.1080/02640410500457109
   Sillitti A, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P309, DOI 10.1007/3-540-28244-0_14
   SNYDER M, 1984, ADV EXP SOC PSYCHOL, V18, P247, DOI 10.1016/S0065-2601(08)60146-X
   So C., 2010, MAKING SOFTWARE TEAM
   So C, 2009, LECT NOTES BUS INF P, V31, P83
   Stray VG, 2012, EUROMICRO CONF PROC, P274, DOI 10.1109/SEAA.2012.16
   Tanner M., 2014, Human Capital without Borders: Knowledge and Learning for the Quality of Life, P693
   Turley R. T., 1994, 22nd Annual 1994 ACM Computer Science Conference. Scaling Up: Meeting the Challenge of Complexity in Real-World Computing Applications. Proceedings, P271, DOI 10.1145/197530.197637
   van Oosterhout M., 2010, ERASMUS RES I MANAGE
   Viller S, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P6, DOI 10.1109/ISRE.1999.777980
   Wageman R., 2005, J. Appl. Behav. Sci., V41, P373, DOI [10.1177/0021886305281984, DOI 10.1177/0021886305281984]
   Wang XF, 2012, INFORM SYST J, V22, P435, DOI 10.1111/j.1365-2575.2011.00393.x
   Williams L, 2012, COMMUN ACM, V55, P71, DOI 10.1145/2133806.2133823
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Woolley AW, 2010, SCIENCE, V330, P686, DOI 10.1126/science.1193147
NR 71
TC 6
Z9 8
U1 0
U2 23
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2018
VL 99
BP 11
EP 20
DI 10.1016/j.infsof.2018.02.006
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GG5XA
UT WOS:000432767900002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Salleh, N
   Hoda, R
   Su, MT
   Kanij, T
   Grundy, J
AF Salleh, Norsaremah
   Hoda, Rashina
   Su, Moon Ting
   Kanij, Tanjila
   Grundy, John
TI Recruitment, engagement and feedback in empirical software engineering
   studies in industrial contexts
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical software engineering; Industry; Research; Grounded theory;
   Survey; Case study; Quasi-experiment; Challenges; Solutions;
   Recommendations
ID INFORMATION
AB Context Research carried out in industrial contexts are recognized as important to the advancement of software engineering knowledge and practice. However, several challenges present themselves in the three key phases of research carried out in industrial contexts, recruitment, engagement and feedback.
   Objective: The aim of this paper is to report the challenges related to each of the three phases of research carried out in industrial contexts, and the associated solutions we have found useful from our combined body of industrial empirical software engineering research studies spanning four case studies, five grounded theory studies, seven survey studies and two quasi-experimental studies involving a total of over 400 industrial participants in the past decade.
   Method: We designed an instrument to gather details of our studies carried out in industrial contexts and performed thematic analysis to synthesise and draw out the most prominent challenges faced.
   Results: We present a set of recommendations around study design, conduct and reporting to try and mitigate some of these challenges as they apply specifically to industrial empirical research.
   Conclusion: These recommendations can guide researchers, novice and experienced, working in close collaboration with industry stakeholders to make the most of their industrial software engineering research.
C1 [Salleh, Norsaremah] Int Islamic Univ Malaysia, Dept Comp Sci, Kuala Lumpur, Malaysia.
   [Hoda, Rashina] Univ Auckland, Elect & Comp Engn, SEPTA Res, Auckland, New Zealand.
   [Su, Moon Ting] Univ Malaya, Fac Comp Sci & Informat Technol, Kuala Lumpur, Malaysia.
   [Kanij, Tanjila] Swinburne Univ Technol, Dept Comp Sci & Software Engn, Melbourne, Vic, Australia.
   [Grundy, John] Deakin Univ, Sch Informat Technol, Geelong, Vic, Australia.
C3 International Islamic University Malaysia; University of Auckland;
   Universiti Malaya; Swinburne University of Technology; Deakin University
RP Salleh, N (corresponding author), Int Islamic Univ Malaysia, Dept Comp Sci, Kuala Lumpur, Malaysia.
EM norsaremah@iium.edu.my
RI Salleh, Norsaremah/AFU-5066-2022; SU, MOON TING/B-9838-2010; Grundy,
   John/AAF-1716-2019
OI Salleh, Norsaremah/0000-0001-5625-7014; Grundy,
   John/0000-0003-4928-7076; Hoda, Rashina/0000-0001-5147-8096
FU Australian Research Council; Ministry of Business, Innovation and
   Employment; Foundation for Research, Science and Technology; Ministry of
   Higher Education Malaysia; BuildIT NZ; Agile Alliance; Software Process
   and Product Improvement for New Zealand Software Industry [UOAX0710]
FX The authors gratefully acknowledge the many funding agencies that have
   supported their empirical studies, including the Australian Research
   Council, Ministry of Business, Innovation and Employment, Foundation for
   Research, Science and Technology, Ministry of Higher Education Malaysia,
   BuildIT NZ, Agile Alliance, Software Process and Product Improvement for
   New Zealand Software Industry (UOAX0710), and their respective
   Universities. The studies would not be possible without the help of many
   of our colleagues and students, and the willing industry practitioners,
   their managers and organisations.
CR Andriyani Y, 2017, LECT NOTES BUS INF P, V283, P3, DOI 10.1007/978-3-319-57633-6_1
   [Anonymous], MOBILE APPL TESTING
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Bick S, 2018, IEEE T SOFTWARE ENG, V44, P932, DOI 10.1109/TSE.2017.2730870
   Cook T. D., 1979, QUASIEXPERIMENTATION
   Coombs S.J., 2003, Change: Transformations in Education, V6, P97, DOI DOI 10.3316/IELAPA.200307649
   Deverka PA, 2012, J COMP EFFECT RES, V1, P181, DOI 10.2217/CER.12.7
   Dieste O, 2013, IEEE-ACM INT WKSP CO, P2, DOI 10.1109/CESI.2013.6618462
   Fernandez DM, 2016, IEEE-ACM INT WKSP CO, P25, DOI [10.1109/CESI.2016.015, 10.1145/2896839.2896844]
   Fink A., 2003, THE SURVEY KIT
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hoda R., 2012, EMPIRICAL SOFTW ENG, V17
   Hoda R., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P285, DOI [10.1145/1806799.1806843, DOI 10.1145/1806799.1806843]
   Hoda R., 2017, P IEEE INT C SOFTW E
   Hoda R, 2016, J SYST SOFTWARE, V117, P245, DOI 10.1016/j.jss.2016.02.049
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Hoda R, 2011, INFORM SOFTWARE TECH, V53, P521, DOI 10.1016/j.infsof.2010.10.009
   Jain S, 2013, IEEE-ACM INT WKSP CO, P9, DOI 10.1109/CESI.2013.6618463
   Jedlitschka A, 2014, EMPIR SOFTW ENG, V19, P1921, DOI 10.1007/s10664-013-9268-6
   Juristo N., 2016, P IEEE ACM 4 INT WOR
   Kanij T., 2014, P AUSTR C SOFTW ENG
   Kanij T., 2012, P 5 INT WORKSH COLL
   Kanij T., 2015, P 8 INT WORKSH COLL
   Kanij T, 2014, S VIS LANG HUM CEN C, P89, DOI 10.1109/VLHCC.2014.6883028
   Kanij T, 2014, INFORM SOFTWARE TECH, V56, P495, DOI 10.1016/j.infsof.2013.11.002
   Kanij T, 2013, IEEE-ACM INT WKSP CO, P63, DOI 10.1109/CESI.2013.6618474
   Kanij T, 2013, CONF SOFTW ENG EDUC, P239, DOI 10.1109/CSEET.2013.6595255
   Kitchenham B., 2002, ACM SIGSOFT Softw. Eng. Notes, V27, P17
   Kitchenham B, 2001, ACM SIGSOFT Software Engineering Notes, V26
   Masood Z., 2017, P COOP HUM ASP SOFTW
   Masood Z, 2017, LECT NOTES BUS INF P, V283, P267, DOI 10.1007/978-3-319-57633-6_19
   MoIleri J. S., 2016, P 10 ACM IEEE INT S
   Pfleeger S. L., 1995, Annals of Software Engineering, V1, P219, DOI 10.1007/BF02249052
   Robson C., 2002, Real World Research, V2nd
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Salleh N., 2014, INT J ADV SOFT COMPU, V6
   Shastri Y., 2016, P 23 AS PAC SOFTW EN
   Shastri Y., 2017, P INN SOFTW ENG ISEC
   Sjoberg DIK, 2010, SIMULA RESEARCH LABORATORY: BY THINKING CONSTANTLY ABOUT IT, P443, DOI 10.1007/978-3-642-01156-6_29
   Soomro AB, 2015, 2015 9TH MALAYSIAN SOFTWARE ENGINEERING CONFERENCE (MYSEC2015), P259, DOI 10.1109/MySEC.2015.7475230
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Su MT, 2016, J SYST SOFTWARE, V122, P215, DOI 10.1016/j.jss.2016.09.009
   Torchiano M., 2017, P IEEE INT C SOFTW E
   Vegas S, 2015, IEEE-ACM INT WKSP CO, P3, DOI 10.1109/CESI.2015.8
   Verner J. M., 2009, P 3 INT C RES CHALL
   Yin R.K., 2003, CASE STUDY RES DESIG
NR 48
TC 7
Z9 8
U1 1
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2018
VL 98
BP 161
EP 172
DI 10.1016/j.infsof.2017.12.001
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GD8LP
UT WOS:000430764200013
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Schloegel, U
   Stegmann, S
   van Dick, R
   Maedche, A
AF Schloegel, Uta
   Stegmann, Sebastian
   van Dick, Rolf
   Maedche, Alexander
TI Age stereotypes in distributed software development: The impact of
   culture on age-related performance expectations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Age stereotypes; National culture; Organizational culture; Distributed
   software development; Contact
ID OLDER WORKERS; ORGANIZATIONAL CULTURE; COMMON STEREOTYPES; CONTENT
   MODEL; PERCEPTIONS; DISCRIMINATION; COMPETENCE; EMPLOYMENT; ATTITUDES;
   TIME
AB Context Due to demographic changes in most developed countries, distributed software development (DSD) teams might suffer new barriers above and beyond the well-known cultural and distance-based challenges. Remarkably, six out of the twelve most important barriers for DSD are related to typical problems induced by both cultural and age diversity. Age stereotypes can hinder communication, trust, knowledge exchange and coordination in software development. They have been studied based on individual level whereas context-related factors such as culture have been less in focus yet.
   Objective: We examine the effects of national and organizational culture on age stereotypes. Therein we explore the conditions and processes that might increase age stereotypes.
   Method: We conducted a quantitative study with 457 employees in two software development companies in China, Germany, Poland and Bulgaria.
   Results: Results show a significant bias in performance expectations favoring middle-aged employees over younger and older employees across national cultures. Stereotypes toward older employees are more negative in Eastern Europe and China than in Germany, while stereotypes toward younger employees are more negative in Germany than in China and Eastern Europe. Lower average team age and lower contact frequency foster stereotypes in China and Eastern Europe. Negative stereotypes can be buffered by an organizational culture which values team achievement and trust over individual performance and control.
   Conclusions: The study advances the literature by integrating value- and schema-based approaches when examining cultural influences, extending the stereotype content model and the situated dynamics framework. Moreover, it may help finding new solutions for human-related problems in DSD based on intangible barriers that hinder development processes. Companies that use DSD might consider reducing age stereotypes in China and Eastern Europe by intensively increasing contact to older workers, including age stereotype aspects into cultural training or by increasing values of team achievement within their organizational culture.
C1 [Schloegel, Uta; Stegmann, Sebastian; van Dick, Rolf] Goethe Univ Frankfurt, Inst Psychol, Frankfurt, Germany.
   [Schloegel, Uta; Stegmann, Sebastian; van Dick, Rolf] Goethe Univ Frankfurt, Ctr Leadership & Behav Org, Frankfurt, Germany.
   [Maedche, Alexander] Karlsruhe Inst Technol, IISM, Karlsruhe, Germany.
C3 Goethe University Frankfurt; Goethe University Frankfurt; Helmholtz
   Association; Karlsruhe Institute of Technology
RP Schloegel, U (corresponding author), Goethe Univ Frankfurt, Inst Psychol, Frankfurt, Germany.; Schloegel, U (corresponding author), Goethe Univ Frankfurt, Ctr Leadership & Behav Org, Frankfurt, Germany.
EM uta.schloegel@sap.com
OI van Dick, Rolf/0000-0002-6308-9466
CR Adolph S, 2012, J SYST SOFTWARE, V85, P1269, DOI 10.1016/j.jss.2012.01.059
   Allport G.W., 1954, HDB SOCIAL PSYCHOL, V1, P3
   Amrit C, 2014, INFORM SOFTWARE TECH, V56, P1537, DOI 10.1016/j.infsof.2014.07.006
   [Anonymous], SAGE HDB AGING WORK
   Bai X, 2016, J SOC ISSUES, V72, P26, DOI 10.1111/josi.12154
   Banister J., 2012, INT EC ASS SERIES
   Barney S, 2014, INFORM SOFTWARE TECH, V56, P20, DOI 10.1016/j.infsof.2013.06.004
   Barzilay O, 2014, INFORM SOFTWARE TECH, V56, P1613, DOI 10.1016/j.infsof.2014.02.013
   Baumard P., 1999, TACIT KNOWLEDGE ORG, P214
   Becker TE, 2005, ORGAN RES METHODS, V8, P274, DOI 10.1177/1094428105278021
   Berry JW., 2011, CROSS CULTURAL PSYCH, V3rd
   Bertolino M, 2013, J MANAGE PSYCHOL, V28, P867, DOI 10.1108/JMP-07-2013-0222
   Brewer MB, 1999, J SOC ISSUES, V55, P429, DOI 10.1111/0022-4537.00126
   Brooke L, 2005, AGEING SOC, V25, P415, DOI 10.1017/S0144686X05003466
   Büschgens T, 2013, J PROD INNOVAT MANAG, V30, P763, DOI 10.1111/jpim.12021
   Buhner M., 2006, EINFIIHRUNG TEST FRA, P454
   Carmel E., 1999, GLOBAL SOFTWARE TEAM, P311
   Chatman JA, 2005, ACAD MANAGE J, V48, P321, DOI 10.2307/20159658
   Chatman JA, 1998, ADMIN SCI QUART, V43, P749, DOI 10.2307/2393615
   Chilton MA, 2010, DATA BASE ADV INF SY, V41, P8
   Chiu WCK, 2001, HUM RELAT, V54, P629
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   CLEVELAND JN, 1990, J VOCAT BEHAV, V36, P181, DOI 10.1016/0001-8791(90)90026-X
   Comeau TD, 2007, AGEING SOC, V27, P215, DOI 10.1017/S0144686X06005605
   Cowgill D.O., 1974, LATER LIFE, P123
   Cramton Catherine Durnell, 2002, Distributed work, P191
   Cuddy AJC, 2008, ADV EXP SOC PSYCHOL, V40, P61, DOI 10.1016/S0065-2601(07)00002-0
   Cuddy AJC, 2009, BRIT J SOC PSYCHOL, V48, P1, DOI 10.1348/014466608X314935
   da Silva Fabio Q. B., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P87, DOI 10.1109/ICGSE.2010.18
   DEVINE PG, 1989, J PERS SOC PSYCHOL, V56, P5, DOI 10.1037/0022-3514.56.1.5
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Dordoni P, 2015, AGEING INT, V40, P393, DOI 10.1007/s12126-015-9222-6
   Fernández-Sanz L, 2011, LECT NOTES COMPUT SC, V6786, P257, DOI 10.1007/978-3-642-21934-4_22
   Fiske ST, 2002, J PERS SOC PSYCHOL, V82, P878, DOI 10.1037//0022-3514.82.6.878
   Hamilton D.L., 1994, HDB SOCIAL COGNITION, V2, P1
   Harvey F., 1997, INFORM TECHNOL PEOPL, V10, P132
   Hayes A. F., 2013, Introduction to mediation, moderation, and conditional process analysis: a regression -based approach
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   HOFSTEDE G, 1990, ADMIN SCI QUART, V35, P286, DOI 10.2307/2393392
   Hofstede G, 1998, J MANAGE STUD, V35, P1, DOI 10.1111/1467-6486.00081
   Hofstede G., 2001, CULTURES CONSEQUENCE, P43
   Hofstede G., 1980, CULTURES CONSEQUENCE, P237
   House R.J., 2004, CULTURE LEADERSHIP O, P89
   Huang HY, 2007, SIGMIS CPR 2007: PROCEEDINGS OF THE 2007 ACM SIGMIS CPR CONFERENCE GLOBAL INFORMATION TECHNOLOGY WORKFORCE, P36
   Jahoda G, 2001, CULT PSYCHOL, V7, P181, DOI 10.1177/1354067X0172004
   Jarvenpaa S.L., 1998, J COMPUT-MEDIAT COMM, V3, P23
   Jimenez M., 2009, ADV SOFTW ENG, V1, P44
   Jost JT, 2009, RES ORGAN BEHAV, V29, P39, DOI 10.1016/j.riob.2009.10.001
   JUDD CM, 1993, PSYCHOL REV, V100, P109, DOI 10.1037/0033-295X.100.1.109
   Karolak D.W., 1999, GLOBAL SOFTWARE DEV, P47
   Kite ME, 2005, J SOC ISSUES, V61, P241, DOI 10.1111/j.1540-4560.2005.00404.x
   KLUGE A, 2006, ARBEIT, V15, P3
   Kotlarsky J, 2005, EUR J INFORM SYST, V14, P37, DOI 10.1057/palgrave.ejis.3000520
   Krings F, 2011, BRIT J MANAGE, V22, P187, DOI 10.1111/j.1467-8551.2010.00721.x
   Krishna S, 2004, COMMUN ACM, V47, P62, DOI 10.1145/975817.975818
   Leidig S., 2007, DEMOGRAFISCHER WANDE, P99
   Leidner DE, 2006, MIS QUART, V30, P357
   Leung K, 2015, J INT BUS STUD, V46, P1028, DOI 10.1057/jibs.2014.66
   Levy B, 2009, CURR DIR PSYCHOL SCI, V18, P332, DOI 10.1111/j.1467-8721.2009.01662.x
   Levy SR, 2016, J SOC ISSUES, V72, P5, DOI 10.1111/josi.12153
   Lyon P, 1997, PERS REV, V26, P245, DOI 10.1108/00483489710172051
   Marshall VW, 2011, J APPL GERONTOL, V30, P185, DOI 10.1177/0733464810367791
   Martin J., 2002, ORG CULTURE MAPPING, P98
   MATELL MS, 1972, J APPL PSYCHOL, V56, P506, DOI 10.1037/h0033601
   MCCLELLAND GH, 1993, PSYCHOL BULL, V114, P376, DOI 10.1037/0033-2909.114.2.376
   Meyer KE, 2005, J INT BUS STUD, V36, P600, DOI 10.1057/palgrave.jibs.8400167
   Minevich M., GLOBAL OUTSOURCING R
   Mishra A, 2014, LECT NOTES COMPUT SC, V8842, P448, DOI 10.1007/978-3-662-45550-0_45
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Moore DA, 1999, ORGAN BEHAV HUM DEC, V77, P22, DOI 10.1006/obhd.1998.2814
   Mortensen M, 2001, INT J CONFL MANAGE, V12, P212, DOI 10.1108/eb022856
   Myers M.D., 2003, ADV TOPICS GLOBAL IN, P14
   Ng TWH, 2012, PERS PSYCHOL, V65, P821, DOI 10.1111/peps.12003
   O'Higgins N., 2001, YOUTH UNEMPLOYMENT E
   O'Leary MB, 2014, MIS QUART, V38, P1219
   Paasivaara M, 2014, INFORM SOFTWARE TECH, V56, P1556, DOI 10.1016/j.infsof.2014.06.008
   Perek-Bialas J, 2012, INT J SOC WELF, V21, pS101, DOI 10.1111/j.1468-2397.2012.00878.x
   Perry EL, 1999, HUM RESOUR MANAGE R, V9, P21, DOI 10.1016/S1053-4822(99)00010-8
   Pettigrew TF, 1998, ANNU REV PSYCHOL, V49, P65, DOI 10.1146/annurev.psych.49.1.65
   Pettigrew TF, 2006, J PERS SOC PSYCHOL, V90, P751, DOI 10.1037/0022-3514.90.5.751
   Posthuma RA, 2009, J MANAGE, V35, P158, DOI 10.1177/0149206308318617
   Preacher KJ, 2007, MULTIVAR BEHAV RES, V42, P185, DOI 10.1080/00273170701341316
   Preacher KJ, 2006, J EDUC BEHAV STAT, V31, P437, DOI 10.3102/10769986031004437
   Probst TM, 2003, TEACH PSYCHOL, V30, P236, DOI 10.1207/S15328023TOP3003_09
   QUINN RE, 1983, MANAGE SCI, V29, P363, DOI 10.1287/mnsc.29.3.363
   Qumer A, 2008, J SYST SOFTWARE, V81, P1899, DOI 10.1016/j.jss.2007.12.806
   Raja Mohd Ali R. H., 2009, AUSTR C INF SYST ACI
   Ramesh B, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1164394.1164418
   Richardson I, 2012, INFORM SOFTWARE TECH, V54, P1175, DOI 10.1016/j.infsof.2012.05.002
   Rubin K.S., 2012, ESSENTIAL SCRUM PRAC, P11
   Sarker S, 2005, IEEE T PROF COMMUN, V48, P201, DOI 10.1109/TPC.2005.849650
   Schein E.H., 2010, Organizational Culture and Leadership, V4th, P73
   Schloegel U., 2018, INF TECHNOL PEOPLE
   Schloegel U, 2016, J SYST SOFTWARE, V121, P1, DOI 10.1016/j.jss.2016.07.041
   Schneider B, 2013, ANNU REV PSYCHOL, V64, P361, DOI 10.1146/annurev-psych-113011-143809
   Schwaber K., 2002, AGILE SOFTWARE DEV S, P6
   Shah H, 2014, INFORM SOFTWARE TECH, V56, P6, DOI 10.1016/j.infsof.2013.04.005
   Shiu E, 2015, BRIT J MANAGE, V26, P255, DOI 10.1111/1467-8551.12091
   Snape E., 2003, Human Resource Management Journal, V13, P78, DOI [DOI 10.1111/J.1748-8583.2003.TB00085.X, 10.1111/j.1748-8583.2003.tb00085.x]
   Stangor C., 2009, HDB PREJUDICE STEREO, P1, DOI DOI 10.4324/9780203361993-6
   Straub D., 2002, Journal of Global Information Management, V10, P13
   Streib G F, 1987, J Aging Stud, V1, P95, DOI 10.1016/0890-4065(87)90001-6
   Sturman MC, 2003, J MANAGE, V29, P609, DOI 10.1016/S0149-2063(03)00028-X
   Sung KT, 2001, J AGING STUD, V15, P13, DOI 10.1016/S0890-4065(00)00014-1
   Tajfel H., 1979, The social psychology of intergroup relations, P33
   Tajfel Henri., 1981, Human Groups and Social Categories, P127
   Turek K, 2013, EMPL RELAT, V35, P648, DOI 10.1108/ER-04-2013-0039
   Van Dalen HP, 2010, POPUL DEV REV, V36, P309, DOI 10.1111/j.1728-4457.2010.00331.x
   van Dyck C, 2005, J APPL PSYCHOL, V90, P1228, DOI 10.1037/0021-9010.90.6.1228
   Walker A, 1999, EXP AGING RES, V25, P367, DOI 10.1080/036107399243823
   Wegge J, 2012, WORK, V41, P5145, DOI 10.3233/WOR-2012-0084-5145
   Wegge J., 2015, DIVERSITY MANAGEMENT, P89
   Wohlin C, 2015, J SYST SOFTWARE, V109, P229, DOI 10.1016/j.jss.2015.08.009
NR 115
TC 11
Z9 12
U1 2
U2 36
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2018
VL 97
BP 146
EP 162
DI 10.1016/j.infsof.2018.01.009
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GA0MR
UT WOS:000428008600011
DA 2024-07-18
ER

PT J
AU Al Dallal, J
   Morasca, S
AF Al Dallal, Jehad
   Morasca, Sandro
TI Investigating the impact of fault data completeness over time on
   predicting class fault-proneness
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Internal quality attributes; Quality measures; Class fault-proneness;
   Object-oriented software; Fault data
ID OPEN SOURCE SOFTWARE; EMPIRICAL VALIDATION; METRICS; COHESION; QUALITY
AB Context: The adequacy of fault-proneness prediction models in representing the relationship between the internal quality of classes and their fault-proneness relies on several factors. One of these factors is the completeness of the fault data. A fault-proneness prediction model that is built using fault data collected during testing or after a relatively short period of time after release may be inadequate and may not be reliable enough in predicting faulty classes.
   Objective: We empirically study the relationship between the time interval since a system is released and the performance of the fault-proneness prediction models constructed based on the fault data reported within the time interval.
   Method: We construct prediction models using fault data collected at several time intervals since a system has been released and study the performance of the models in representing the relationship between the internal quality of classes and their fault-proneness. In addition, we empirically explore the relationship between the performance of a prediction model and the percentage of increase in the number of classes detected faulty (PIF) over time.
   Results: Our results show evidence in favor of the expectation that predictions models that use more complete fault data, to a certain extent, more adequately represent the expected relationship between the internal quality of classes and their fault-proneness and have better performance. A threshold based on the PIF value can be used as an indicator for deciding when to stop collecting fault data. When reaching this threshold, collecting additional fault data will not significantly improve the prediction ability of the constructed model.
   Conclusion: When constructing fault-proneness prediction models, researchers and software engineers are advised to rely on systems that have relatively long maintenance histories. Researchers and software engineers can use the PIF value as an indicator for deciding when to stop collecting fault data.
C1 [Al Dallal, Jehad] Kuwait Univ, Dept Informat Sci, POB 5969, Safat 13060, Kuwait.
   [Morasca, Sandro] Univ Insubria, Dept Theoret & Appl Sci, Via Mazzini 5, I-21100 Varese, Italy.
C3 Kuwait University; University of Insubria
RP Al Dallal, J (corresponding author), Kuwait Univ, Dept Informat Sci, POB 5969, Safat 13060, Kuwait.
EM j.aldallal@ku.edu.kw; sandro.morasca@uninsubria.it
RI Al Dallal, Jehad/HTL-9247-2023
OI Al Dallal, Jehad/0000-0003-3679-4351
FU Kuwait University [QI02/15]
FX The authors would like to acknowledge the support of this work by Kuwait
   University Research Grant QI02/15. In addition, the authors would like
   to thank Anas Abdin for assisting in collecting the required data.
CR Aggarwal K. K., 2009, Software Process: Improvement and Practice, V14, P39, DOI 10.1002/spip.389
   Al Dallal J, 2012, INFORM SOFTWARE TECH, V54, P1125, DOI 10.1016/j.infsof.2012.04.004
   Al Dallal J, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089118
   Al Dallal J, 2012, INFORM SOFTWARE TECH, V54, P396, DOI 10.1016/j.infsof.2011.11.007
   Al Dallal J, 2011, INFORM SOFTWARE TECH, V53, P914, DOI 10.1016/j.infsof.2011.03.004
   Al Dallal J, 2010, INFORM SOFTWARE TECH, V52, P1346, DOI 10.1016/j.infsof.2010.08.006
   [Anonymous], 2011, ISO 13314
   [Anonymous], 912622003 ISOIEC
   [Anonymous], P 5 INT C PRED MOD S
   [Anonymous], INF SOFTW TECHNOL
   [Anonymous], EMPIRICAL S IN PRESS
   [Anonymous], IEEE T SOFTW ENG
   [Anonymous], IEEE T SOFTW ENG
   [Anonymous], P 10 WORK C REV ENG
   [Anonymous], IEEE T SOFTW ENG
   [Anonymous], P WORLD C ENG
   [Anonymous], 2012, P 27 S APPL COMP SAC
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   [Anonymous], INT SCHOLARLY RES NE
   [Anonymous], 912632003 ISOIEC
   [Anonymous], INF SOFTW TECHNOL
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Barnett V., 1994, OUTLIERS STAT DATA, P584
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Briand L. C., 2001, Empirical Software Engineering, V6, P11, DOI 10.1023/A:1009815306478
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cover T., 1991, Wiley series in telecommunications, V1st
   Dejaeger K, 2013, IEEE T SOFTWARE ENG, V39, P237, DOI 10.1109/TSE.2012.20
   Devore J.L., 2011, Probability and statistics for engineering the science, P768
   Ekanayake J, 2012, EMPIR SOFTW ENG, V17, P348, DOI 10.1007/s10664-011-9180-x
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall M., 1999, PhD thesis, DOI 10.1.1.149.3848
   Herzig K, 2014, PROC INT SYMP SOFTW, P300, DOI 10.1109/ISSRE.2014.21
   Holschuh T, 2009, PROC INT CONF SOFTW, P172, DOI 10.1109/ICSE-COMPANION.2009.5070975
   Hosmer W., 2000, Applied Logistic Regression, VSecond
   Jabangwe R, 2015, EMPIR SOFTW ENG, V20, P640, DOI 10.1007/s10664-013-9291-7
   Johari K., 2012, ACM SIGSOFT SOFTWARE, V37, P1, DOI DOI 10.1145/2088883.2088893
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kosker Y, 2009, EXPERT SYST APPL, V36, P10000, DOI 10.1016/j.eswa.2008.12.066
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Morasca S, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P46, DOI 10.1109/METRIC.2004.1357890
   Morasca S, 2009, INT SYMP EMP SOFTWAR, P44, DOI 10.1109/ESEM.2009.5316048
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Olson D.L., 2008, ADV DATA MINING TECH, DOI https://doi.org/10.1007/978-3-540-76917-0
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Rahman F, 2012, P ACM SIGSOFT 20 INT, DOI 10.1145/2393596.2393669
   Roh James Jungbae, 2015, International Journal of Data Analysis Techniques and Strategies, V7, P96, DOI 10.1504/IJDATS.2015.067703
   Rudiger Lincke., 2008, International Symposium on Software Testing and Analysis, P131, DOI 10.1145/1390630.1390648
   Saxena P., 2011, Int. J. Comput. Appl., V22, P41, DOI 10.5120/2600-3626
   Shatnawi R, 2008, J SYST SOFTWARE, V81, P1868, DOI 10.1016/j.jss.2007.12.794
   Shatnawi R, 2010, IEEE T SOFTWARE ENG, V36, P216, DOI 10.1109/TSE.2010.9
   Singh Y, 2010, SOFTWARE QUAL J, V18, P3, DOI 10.1007/s11219-009-9079-6
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Thapaliyal MP., 2010, INT J COMPUT APPL, DOI 10.5120/1379-1859
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Turhan B, 2009, DATA KNOWL ENG, V68, P278, DOI 10.1016/j.datak.2008.10.005
   Zhou YM, 2010, J SYST SOFTWARE, V83, P660, DOI 10.1016/j.jss.2009.11.704
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 66
TC 5
Z9 5
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 86
EP 105
DI 10.1016/j.infsof.2017.11.001
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FX4EZ
UT WOS:000426026800007
DA 2024-07-18
ER

PT J
AU Chen, JF
   Nair, V
   Menzies, T
AF Chen, Jianfeng
   Nair, Vivek
   Menzies, Tim
TI Beyond evolutionary algorithms for search-based software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
AB Context: Evolutionary algorithms typically require large number of evaluations (of solutions) to converge - which can be very slow and expensive to evaluate.
   Objective: To solve search-based software engineering (SE) problems, using fewer evaluations than evolutionary methods.
   Method: Instead of mutating a small population, we build a very large initial population which is then culled using a recursive bi-clustering chop approach. We evaluate this approach on multiple SE models, unconstrained as well as constrained, and compare its performance with standard evolutionary algorithms.
   Results: Using just a few evaluations (under 100), we can obtain comparable results to state-of-the-art evolutionary algorithms.
   Conclusion: Just because something works, and is widespread use, does not necessarily mean that there is no value in seeking methods to improve that method. Before undertaking search-based SE optimization tasks using traditional EAs, it is recommended to try other techniques, like those explored here, to obtain the same results with fewer evaluations. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Chen, Jianfeng; Nair, Vivek; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Nair, V (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM jchen37@ncsu.edu; vivekaxl@gmail.com; tim.menzies@gmail.com
RI Nair, Vivek/AAH-6229-2019; Menzies, Tim/X-7680-2019
OI Nair, Vivek/0000-0002-7318-1530; Menzies, Tim/0000-0002-5040-3196
CR [Anonymous], 40 ACM S THEOR COMP
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 1998, TECHNICAL REPORT
   [Anonymous], 2003, P 18 INT JOINT C ART
   [Anonymous], 2016, P 38 INT C SOFTW ENG
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arias-Castro E, 2017, J MACH LEARN RES, V18, P1
   Bader J, 2011, EVOL COMPUT, V19, P45, DOI 10.1162/EVCO_a_00009
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   Bellet A., 2016, Spectral Graph-Based Methods for Learning Word Embeddings
   Bettenburg N., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P60, DOI 10.1109/MSR.2012.6224300
   Bettenburg N, 2015, EMPIR SOFTW ENG, V20, P294, DOI 10.1007/s10664-013-9292-6
   Bingham E., 2001, KDD-2001. Proceedings of the Seventh ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P245, DOI 10.1145/502512.502546
   Boehm B, 2003, COMPUTER, V36, P57, DOI 10.1109/MC.2003.1204376
   Boehm B., 2003, BALANCING AGILITY DI
   Calero C.Piattini., 2015, Green in Software Engineering, DOI 10.1007/978-3-319-08581-4
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2001, 1990 TIK
   Deiters C, 2013, INT WORK REAL ARTIF, P14, DOI 10.1109/RAISE.2013.6615199
   Durillo JJ, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P49, DOI 10.1109/SSBSE.2009.21
   Durillo JJ, 2011, EMPIR SOFTW ENG, V16, P29, DOI 10.1007/s10664-010-9147-3
   Efron B., 1993, INTRO BOOTSTRAP, VVolume 914, DOI DOI 10.1007/978-1-4899-4541-9
   Faloutsos C., 1995, SIGMOD Record, V24, P163, DOI 10.1145/568271.223812
   Fisher Danyel, 2012, Interactions, V19, P50, DOI 10.1145/2168931.2168943
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Grassberger P., 2004, THEORY CHAOTIC ATTRA, P170, DOI DOI 10.1007/978-0-387-21830-4_12
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Jaszkiewicz A, 2002, IEEE T EVOLUT COMPUT, V6, P402, DOI 10.1109/TEVC.2002.802873
   Jolliffe I. T., 2002, PRINCIPAL COMPONENT
   Knowles J., 1999, EV COMP 1999 CEC 99, V1
   Krall J., 2014, THESIS
   Krall J., 2014, AAAI 14
   Krall J, 2015, IEEE T SOFTWARE ENG, V41, P1001, DOI 10.1109/TSE.2015.2432024
   Krall M.J., 2015, IEEE T HUM MACH SYST
   Kumar R, 2003, 36TH INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE, PROCEEDINGS, P81
   Larranaga Pedro, 2002, GE AL EV CO, P57
   Lekkalapudi N.K., 2014, Cross trees: Visualizing estimations using decision trees
   Li H., 2016, ARXIV161208709
   Luna F, 2014, APPL SOFT COMPUT, V15, P136, DOI 10.1016/j.asoc.2013.10.015
   Matsumoto M., 1998, ACM Transactions on Modeling and Computer Simulation, V8, P3, DOI 10.1145/272991.272995
   Menzies T, 2003, COMPUTER, V36, P22, DOI 10.1109/MC.2003.1244531
   Menzies T., 2009, SOFTW PROCESS
   Menzies T., 2007, 22 IEEE ACM INT C AU
   Menzies T., 2009, 31 INT C SOFTW ENG
   Menzies T, 2007, COMPUTER, V40, P54, DOI 10.1109/MC.2007.37
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Moore GE, 1998, P IEEE, V86, P82, DOI 10.1109/JPROC.1998.658762
   Nair V, 2016, LECT NOTES COMPUT SC, V9962, P96, DOI 10.1007/978-3-319-47106-8_7
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Port D., 2008, 23 INT C AUT SOFTW E
   Redgate S, 2016, J NUCL MED, V57
   Reed P, 2007, ENVIRON MODELL SOFTW, V22, P683, DOI 10.1016/j.envsoft.2005.12.021
   Sayyad A., 2013, 28 INT C AUT SOFTW E
   Sayyad Abdel Salam, 2013, 2 INT WORKSH REAL AR
   Shi J.-F., 2017, AIAA GUIDANCE NAVIGA, P1034
   Shi JB, 2000, IEEE T PATTERN ANAL, V22, P888, DOI 10.1109/34.868688
   Stevens S. S., 1946, THEORY SCALES MEASUR
   Tantithamthavorn C., 2016, 38 INT C SOFTW ENG
   Thibodeau P., 2014, DATA CTR ARE NEW POL
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
   Zitzler E., 2004, 8 INT C PAR PROBL SO
   Zitzler E., 2002, Technical Report Gloriastrasse
   Zitzler E., 2001, 103 TIK DEPT EL ENG
   Zitzler E., 1998, PARALLEL PROBLEM SOL
   Zuluaga M., 2013, INT C MACH LEARN ICM
NR 70
TC 10
Z9 10
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 281
EP 294
DI 10.1016/j.infsof.2017.08.007
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FX4EZ
UT WOS:000426026800020
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Morschheuser, B
   Hassan, L
   Werder, K
   Hamari, J
AF Morschheuser, Benedikt
   Hassan, Lobna
   Werder, Karl
   Hamari, Juho
TI How to design gamification? A method for engineering gamified software
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Gamification; Software engineering; Design science research; Persuasive
   technology; Gameful design; Playfulness; Game design
ID GAMES; FLOW; ENGAGEMENT; FRAMEWORK; SCIENCE; FUTURE
AB Context Since its inception around 2010, gamification has become one of the top technology and software trends. However, gamification has also been regarded as one of the most challenging areas of software engineering. Beyond traditional software design requirements, designing gamification requires the command of disciplines such as (motivational/behavioral) psychology, game design, and narratology, making the development of gamified software a challenge for traditional software developers. Gamification software inhabits a finely tuned niche of software engineering that seeks for both high functionality and engagement; beyond technical flawlessness, gamification has to motivate and affect users. Consequently, it has also been projected that most gamified software is doomed to fail.
   Objective: This paper seeks to advance the understanding of designing gamification and to provide a comprehensive method for developing gamified software.
   Method: We approach the research problem via a design science research approach; firstly, by synthesizing the current body of literature on gamification design methods and by interviewing 25 gamification experts, producing a comprehensive list of design principles for developing gamified software. Secondly, and more importantly, we develop a detailed method for engineering of gamified software based on the gathered knowledge and design principles. Finally, we conduct an evaluation of the artifacts via interviews of ten gamification experts and implementation of the engineering method in a gamification project.
   Results: As results of the study, we present the method and key design principles for engineering gamified software. Based on the empirical and expert evaluation, the developed method was deemed as comprehensive, implementable, complete, and useful. We deliver a comprehensive overview of gamification guidelines and shed novel insights into the nature of gamification development and design discourse.
   Conclusion: This paper takes first steps towards a comprehensive method for gamified software engineering.
C1 [Morschheuser, Benedikt] Karlsruhe Inst Technol, Inst Informat Syst & Mkt, Karlsruhe, Germany.
   [Morschheuser, Benedikt] Robert Bosch GmbH, Corp Res, Stuttgart, Germany.
   [Hassan, Lobna] Hanken Sch Econ, Informat Syst Sci, Helsinki, Finland.
   [Hassan, Lobna; Hamari, Juho] Univ Tampere, Gamificat Grp, Tampere, Finland.
   [Werder, Karl] Univ Duisburg Essen, Paluno, Duisburg, Germany.
   [Morschheuser, Benedikt; Hamari, Juho] Tampere Univ Technol, Gamificat Grp, Tampere, Finland.
   [Hamari, Juho] Univ Turku, Gamificat Grp, Turku, Finland.
C3 Helmholtz Association; Karlsruhe Institute of Technology; Bosch; Hanken
   School of Economics; Tampere University; University of Duisburg Essen;
   Tampere University; University of Turku
RP Morschheuser, B (corresponding author), Karlsruhe Inst Technol, Inst Informat Syst & Mkt, Karlsruhe, Germany.
EM benedikt.morschheuser@kit.edu; Lobna.hassan@hanken.fi;
   karl.werder@paluno.uni-due.de; juho.hamari@tut.fi
RI Hassan, Lobna/AAI-4865-2021; Hamari, Juho/E-4989-2016; Werder,
   Karl/AAG-9163-2020; Morschheuser, Benedikt/HKF-0876-2023
OI Hassan, Lobna/0000-0002-6201-9159; Werder, Karl/0000-0001-8481-1596;
   Morschheuser, Benedikt/0000-0002-7665-8971; Hamari,
   Juho/0000-0002-6573-588X
FU Robert Bosch GmbH; Finnish foundation for economic education [10-5562];
   Finnish Funding Agency for Technology and Innovation (TEKES) [40111/14,
   40107/14, 40009/16]; Satakunnan korkeakoulusaatio
FX This work was supported by the Robert Bosch GmbH, the Finnish foundation
   for economic education (10-5562), the Finnish Funding Agency for
   Technology and Innovation (TEKES - project numbers 40111/14, 40107/14
   and 40009/16) and participating partners, as well as Satakunnan
   korkeakoulusaatio and its collaborators. The authors wish to thank the
   editors, reviewers and proofreaders for their time and effort. Further,
   the authors thank Julian Abe for his support in this research project.
CR [Anonymous], 2014, EV GAM IEEE EXP PRED
   [Anonymous], 2012, GARTN SAYS 2014 80 P
   [Anonymous], GAMILY GAMIFICATION
   [Anonymous], 2017, P 50 HAW INT C SYST
   [Anonymous], 2011, GARTN SAYS 2015 MOR
   Arrasvuori J., 2011, P 2011 INT C DES PLE
   Bartle R., 1996, J MUD Res, V1, P19, DOI DOI 10.1007/S00256-004-0875-6
   Bista SK, 2014, INT J COOP INF SYST, V23, DOI 10.1142/S0218843014410020
   Boell SK, 2014, COMMUN ASSOC INF SYS, V34, P257
   Bogost I, 2014, GAMEFUL WORLD: APPROACHES, ISSUES, APPLICATIONS, P65
   Brinkkemper S, 1999, INFORM SYST, V24, P209, DOI 10.1016/S0306-4379(99)00016-2
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Brito J, 2015, 2015 12TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY - NEW GENERATIONS, P445, DOI 10.1109/ITNG.2015.78
   Brookey, 2010, HOLLYWOOD GARNERS DI
   Csikszentmihalyi M., 1975, BOREDOM ANXIETY EXPE
   Denny P., 2013, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P763, DOI [DOI 10.1145/2470654.2470763, 10.1145/2470654.2470763]
   Deterding S., 2011, P 15 INT AC MINDTREK, P9, DOI [10.1145/2181037.2181040, DOI 10.1145/2181037.2181040]
   Deterding S, 2015, HUM-COMPUT INTERACT, V30, P294, DOI 10.1080/07370024.2014.993471
   Diefenbach T, 2009, QUAL QUANT, V43, P875, DOI 10.1007/s11135-008-9164-0
   Dignan A., 2011, GAME FRAME USING GAM
   Farwick M, 2016, SOFTW SYST MODEL, V15, P397, DOI 10.1007/s10270-014-0407-3
   Finneran CM, 2003, INT J HUM-COMPUT ST, V59, P475, DOI 10.1016/S1071-5819(03)00112-5
   Fitz-Walter Z., 2015, Achievement unlocked: Investigating the design of effective gamification experiences for mobile applications and devices
   Francisco-Aparicio A., 2013, NEW TRENDS INTERACTI, P113, DOI DOI 10.1007/978-1-4471-5445-7_9
   Gregor S, 2007, J ASSOC INF SYST, V8, P312, DOI 10.17705/1jais.00129
   Hakulinen L, 2013, 2013 LEARNING AND TEACHING IN COMPUTING AND ENGINEERING (LATICE 2013), P47, DOI 10.1109/LaTiCE.2013.34
   Hamari J, 2016, COMPUT HUM BEHAV, V54, P170, DOI 10.1016/j.chb.2015.07.045
   Hamari J, 2015, INT J INFORM MANAGE, V35, P419, DOI 10.1016/j.ijinfomgt.2015.04.006
   Hamari J, 2015, COMPUT HUM BEHAV, V50, P333, DOI 10.1016/j.chb.2015.04.018
   Hamari J, 2014, COMPUT HUM BEHAV, V40, P133, DOI 10.1016/j.chb.2014.07.048
   Hamari J, 2014, P ANN HICSS, P3025, DOI 10.1109/HICSS.2014.377
   Hartley J., 2004, ESSENTIAL GUIDE QUAL
   Hassan L, 2017, SIMULAT GAMING, V48, P249, DOI 10.1177/1046878116683581
   Helms R. W., 2015, P PAC AS C INF SYST, V2015, P59
   Henderson-Sellers B, 2010, J UNIVERS COMPUT SCI, V16, P424
   Herger M., 2014, ENTERPRISE GAMIFICAT
   Herzig P., 2012, Multikonferenz Wirtschaftsinformatik MKWI, P793
   Herzig P., 2015, Gamification in education and business, P431, DOI DOI 10.1007/978-3-319-10208-5_22
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Heym M., 2004, INF SOFTW TECHNOL, P131
   Hunicke R., 2004, P AAAI WORKSH CHALL, P4
   Huotari K, 2017, ELECTRON MARK, V27, P21, DOI 10.1007/s12525-015-0212-z
   Jones BA, 2014, PREV MED, V68, P76, DOI 10.1016/j.ypmed.2014.04.015
   Juul J., 2010, A Casual Revolution: Reinventing Video Games and Their Players
   Kapp K.M., 2013, GAMIFICATION LEARNIN
   Kitchenham B, 2005, INFORM SOFTWARE TECH, V47, P761, DOI 10.1016/j.infsof.2005.01.001
   Klevers M., 2015, P 46 INT SIM GAM ASS
   Knaving K., 2013, Proceedings of the First International Conference on Gameful Design, Research, and Applications - Gamification'13, P131, DOI DOI 10.1145/2583008
   Koivisto J, 2014, COMPUT HUM BEHAV, V35, P179, DOI 10.1016/j.chb.2014.03.007
   Kuechler W, 2012, J ASSOC INF SYST, V13, P395
   Kumar J., 2013, GAMIFICATION AT WORK
   Landers RN, 2014, SIMULAT GAMING, V45, P752, DOI 10.1177/1046878114563660
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Marache-Francisco C., 2013, CENTRIC 2013: The Sixth International Conference on Advances in Human-oriented and Personalized Mechanisms, Technologies, and Services, P126
   Morschheuser B., 2015, WIRTSCHAFTSINF, V52, P840
   Morschheuser B, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P2410, DOI 10.1145/2998181.2998272
   Morschheuser B, 2017, INT J HUM-COMPUT ST, V106, P26, DOI 10.1016/j.ijhcs.2017.04.005
   Morschheuser B, 2016, P ANN HICSS, P4375, DOI 10.1109/HICSS.2016.543
   Morschheuser B, 2015, P ANN HICSS, P635, DOI 10.1109/HICSS.2015.83
   Myers M. D., 2007, Information and Organization, V17, P2, DOI 10.1016/j.infoandorg.2006.11.001
   Nicholson S., 2012, A User-Centered Theoretical Framework for Meaningful Gamification
   Pedreira O, 2015, INFORM SOFTWARE TECH, V57, P157, DOI 10.1016/j.infsof.2014.08.007
   Radoff Jon., 2011, Game On: Energize Your Business with Social Media Games
   Rigby CS, 2014, GAMEFUL WORLD: APPROACHES, ISSUES, APPLICATIONS, P113
   Robson K, 2015, BUS HORIZONS, V58, P411, DOI 10.1016/j.bushor.2015.03.006
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schmidt R., 2015, WIRTSCHAFTSINF, V52, P826
   Schultze U, 2011, INFORM ORGAN-UK, V21, P1, DOI 10.1016/j.infoandorg.2010.11.001
   Thom J., 2012, Incentives, P1067, DOI DOI 10.1145/2145204.2145362
   van de Weerd I., 2006, Software Process Improvement and Practice, V11, P521, DOI 10.1002/spip.294
   van de Weerd I., 2005, UUCS2005, P1
   van de Weerd I., 2009, Handbook of research on modern systems analysis and design technologies and applications, P35, DOI 10.4018/978-1-59904-887-1.ch003
   van der Heijden H, 2004, MIS QUART, V28, P695, DOI 10.2307/25148660
   Webb Erika Noll, 2013, Design, User Experience, and Usability. Health, Learning, Playing, Cultural, and Cross-Cultural User Experience.Second International Conference, DUXU 2013 Held as Part of HCI International 2013. Proceedings. LNCS 8013, P608, DOI 10.1007/978-3-642-39241-2_67
   Webster J, 2002, MIS QUART, V26, pXIII
   Werbach K., 2012, For the win: How game thinking can revolutionize your business
   Werder K., 2016, INT C SOFTWARE BUSIN, P47, DOI [10.1007/978-3-319-40515-5_4, DOI 10.1007/978-3-319-40515-5_4]
   WOHLIN C, 2002, EXPT SOFTWARE ENG IN
   Zhang P, 2007, ADV INT MARKETING, V2, P45, DOI 10.1016/S1475-9152(07)00204-9
NR 79
TC 140
Z9 145
U1 13
U2 140
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 219
EP 237
DI 10.1016/j.infsof.2017.10.015
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FX4EZ
UT WOS:000426026800016
OA Green Published, Green Accepted
DA 2024-07-18
ER

PT J
AU Yang, XL
   Lo, D
   Li, L
   Xia, X
   Bissyandé, TF
   Klein, J
AF Yang, Xinli
   Lo, David
   Li, Li
   Xia, Xin
   Bissyande, Tegawende F.
   Klein, Jacques
TI Characterizing malicious Android apps by mining topic-specific data flow
   signatures
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Malware characterization; Topic-specific; Data flow signature; Empirical
   study
ID DEVELOPERS; MODELS
AB Context: State-of-the-art works on automated detection of Android malware have leveraged app descriptions to spot anomalies w.r.t the functionality implemented, or have used data flow information as a feature to discriminate malicious from benign apps. Although these works have yielded promising performance, we hypothesize that these performances can be improved by a better understanding of malicious behavior.
   Objective: To characterize malicious apps, we take into account both information on app descriptions, which are indicative of apps' topics, and information on sensitive data flow, which can be relevant to discriminate malware from benign apps.
   Method: In this paper, we propose a topic-specific approach to malware comprehension based on app descriptions and data-flow information. First, we use an advanced topic model, adaptive LDA with GA, to cluster apps according to their descriptions. Then, we use information gain ratio of sensitive data flow information to build so-called "topic-specific data flow signatures".
   Results: We conduct an empirical study on 3691 benign and 1612 malicious apps. We group them into 118 topics and generate topic-specific data flow signature. We verify the effectiveness of the topic-specific data flow signatures by comparing them with the overall data flow signature. In addition, we perform a deeper analysis on 25 representative topic-specific signatures and yield several implications.
   Conclusion: Topic-specific data flow signatures are efficient in highlighting the malicious behavior, and thus can help in characterizing malware. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Yang, Xinli; Xia, Xin] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
   [Li, Li; Bissyande, Tegawende F.; Klein, Jacques] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
C3 Zhejiang University; Singapore Management University; University of
   Luxembourg
RP Xia, X (corresponding author), Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Peoples R China.
EM zdyxl@zju.edu.cn; davidlo@smu.edu.sg; li.li@uni.lu; xxia@zju.edu.cn;
   tegawende.bissyande@uni.lu; jacques.klein@uni.lu
RI Furtado, Kássia/AAU-5007-2020; Xia, Xin/AAD-6217-2022; Li,
   Li/AAR-3316-2020; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Klein, Jacques/0000-0003-4052-475X; Lo,
   David/0000-0002-4367-7201
FU NSFC [61602403, 61572426]; National Key Technology R&D Program of the
   Ministry of Science and Technology of China [2015BAH17F01]
FX This research was supported by NSFC Program (Nos. 61602403 and
   61572426), and National Key Technology R&D Program of the Ministry of
   Science and Technology of China (No. 2015BAH17F01).
CR Ahmed F., 2009, P 2 ACM WORKSH SEC A, P55, DOI DOI 10.1145/1654988.1655003
   Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Allix K, 2014, P INT COMP SOFTW APP, P384, DOI 10.1109/COMPSAC.2014.61
   AlSumait L, 2008, IEEE DATA MINING, P3, DOI 10.1109/ICDM.2008.140
   [Anonymous], 1991, Belew & Booker
   [Anonymous], 2013, Inter- national Journal of Scientific and Technology Research
   Arp D, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23247
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Avdiienko V., 2015, P INT C SOFTW ENG
   Birrer BD, 2009, J INF ASSUR SECUR, V4, P247
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bonfante G., 2007, P INT WORKSH THEOR C
   Christodorescu Mihai, 2008, 1st India Software Engineering Conference. ISEC 2008, P5
   Cliff N., 2014, ORDINAL METHODS BEHA
   Gascon Hugo, 2013, P 2013 ACM WORKSH AR, P45
   Goldber D. E., 1988, Machine Learning, V3, P95, DOI 10.1023/A:1022602019183
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Han J, 2012, MOR KAUF D, P1
   Heinrich G., 2008, TECHNICAL REPORT
   Hotho A., 2002, KUNSTL INTELL, V16, P48
   Jin O., 2011, CIKM 11, P775, DOI DOI 10.1145/2063576.2063689
   Kaufman Leonard., Wiley Series in Probability and Statistics, P68, DOI DOI 10.1093/aje/kwu209
   Kirat D, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P769, DOI 10.1145/2810103.2813642
   Kogan J, 2007, INTRODUCTION TO CLUSTERING LARGE AND HIGH-DIMENSIONAL DATA, P1, DOI 10.2277/ 0521617936
   Kuriakose J, 2014, IEEE INT ADV COMPUT, P112, DOI 10.1109/IAdCC.2014.6779304
   Li L, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P195, DOI 10.1109/QRS.2015.36
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Nguyen A. T., 2012, P 27 INT C AUT SOFTW
   Nguyen A. T., 2011, P 26 INT C AUT SOFTW
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Pfoh J., 2013, P INT C NETW SYST SE
   Porter M. F., 2001, SNOWBALL LANGUAGE ST
   Reina A., 2013, P ACM EUR WORKSH SYS
   Sander J, 1998, DATA MIN KNOWL DISC, V2, P169, DOI 10.1023/A:1009745219419
   Santos I, 2013, INFORM SCIENCES, V231, P64, DOI 10.1016/j.ins.2011.08.020
   Santos I, 2009, ICEIS 2009 : PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL AIDSS, P317
   SYSWERDA G, 1989, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P2
   Tabish SMomina., 2009, CSI-KDD09, P23, DOI DOI 10.1145/1599272.1599278
   Tang YB, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON CONSUMER ELECTRONICS-TAIWAN (ICCE-TW), P101
   Thomas SW, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1138, DOI 10.1145/1985793.1986020
   Wallach Hanna, 2009, P ADV NEUR INF PROC
   Wang Y, 2013, LECT NOTES COMPUT SC, V7964, P226, DOI 10.1007/978-3-642-39256-6_15
   WHITLEY D, 1989, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P116
   Xia X., IEEE T SOFTW ENG, V43
   Xia X, 2015, J SOFTW-EVOL PROC, V27, P195, DOI 10.1002/smr.1706
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Yang W, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P303, DOI 10.1109/ICSE.2015.50
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Yin H, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P116
   Zhang QH, 2007, TWENTY-THIRD ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P411, DOI 10.1109/ACSAC.2007.9
   Zhang Y, 2015, J COMPUT SCI TECH-CH, V30, P981, DOI 10.1007/s11390-015-1576-4
   Zhou Y., 2012, P S NETW DISTR SYST
NR 54
TC 17
Z9 19
U1 0
U2 35
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2017
VL 90
BP 27
EP 39
DI 10.1016/j.infsof.2017.04.007
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EZ9JK
UT WOS:000405046400002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Pessoa, L
   Fernandes, P
   Castro, T
   Alves, V
   Rodrigues, GN
   Carvalho, H
AF Pessoa, Leonardo
   Fernandes, Paula
   Castro, Thiago
   Alves, Vander
   Rodrigues, Genaina N.
   Carvalho, Hervaldo
TI Building reliable and maintainable Dynamic Software Product Lines: An
   investigation in the Body Sensor Network domain
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Reliability; Maintainability; Dynamic Software Product Lines; Body
   Sensor Network; Context-awareness; Adaptiveness
ID FRAMEWORK
AB Context: Dependability is a key requirement, especially in safety-critical applications. Many of these applications have changing context and configurations at runtime to achieve functional and quality goals and can be realized as Dynamic Software Product Lines (DSPLs). DSPL constitutes an emerging but promising research area. Nevertheless, ensuring dependability in DSPLs remains insufficiently explored, especially in terms of reliability and maintainability. This compromises quality assurance and applicability of DSPLs in safety-critical domains, such as Body Sensor Network (BSN).
   Objective: To address this issue, we propose an approach to developing reliable and maintainable DSPLs in the context of the BSN domain.
   Method: Adaptation plans are instances of a Domain Specific Language (DSL) describing reliability goals and adaptability at runtime. These instances are automatically checked for reliability goal satisfiability before being deployed and interpreted at runtime to provide more suitable adaptation goals complying with evolving needs perceived by a domain specialist.
   Results: The approach is evaluated in the BSN domain. Results show that reliability and maintainability could be provided with execution and reconfiguration times of around 30 ms, notification and adaptation plan update time over the network around 5 s, and space consumption around 5 MB.
   Conclusion: The method is feasible at reasonable cost. The incurred benefits are reliable vital signal monitoring for the patient thus providing early detection of serious health issues and the possibility of proactive treatment and a maintainable infrastructure allowing medical DSL instance update to suit the needs of the domain specialist and ultimately of the patient. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Pessoa, Leonardo; Fernandes, Paula; Castro, Thiago; Alves, Vander; Rodrigues, Genaina N.] Univ Brasilia, Comp Sci Dept, BR-70910900 Brasilia, DF, Brazil.
   [Carvalho, Hervaldo] Univ Brasilia, Univ Hosp & Med Sch, BR-70840901 Brasilia, DF, Brazil.
   [Castro, Thiago] Brazilian Army, Syst Dev Ctr, QG Exercito Bloco G,2 Andar, BR-70630901 Brasilia, DF, Brazil.
C3 Universidade de Brasilia; Universidade de Brasilia
RP Alves, V (corresponding author), Univ Brasilia, Comp Sci Dept, BR-70910900 Brasilia, DF, Brazil.
EM lmpessoa@me.com; paulag6@gmail.com; thiago.mael@gmail.com;
   valves@unb.br; genaina@unb.br; carvalho@unb.br
RI Rodrigues, Genaina Nunes/N-4215-2019
OI Rodrigues, Genaina Nunes/0000-0003-1661-8131; Alves,
   Vander/0000-0003-1573-048X; Mael de Castro, Thiago/0000-0001-5758-2097
CR A. S. of Anesthesiologists, 2002, REL VAL GUID 2012 GU
   [Anonymous], 2011, Global Health and Ageing
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bencomo N, 2012, COMPUTER, V45, P36, DOI 10.1109/MC.2012.292
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Capilla R, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P49, DOI 10.1145/2866614.2866621
   Capilla R, 2014, J SYST SOFTWARE, V91, P3, DOI 10.1016/j.jss.2013.12.038
   Chen M, 2011, MOBILE NETW APPL, V16, P171, DOI 10.1007/s11036-010-0260-8
   Clements P., 2002, Software product lines
   Craig Iain D., 2006, Virtual Machines
   Damiani F., 2011, P 15 INT SOFTW PROD, V2, DOI 10.1145/2019136.2019175
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   Filieri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P341, DOI 10.1145/1985793.1985840
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Ghezzi C., 2010, SELECTED INVITED PAP, V7475, P191
   Ghezzi C, 2013, INFORM SOFTWARE TECH, V55, P508, DOI 10.1016/j.infsof.2012.07.017
   Green Thomas RG, 1992, HUMAN COMPUTER INTER, P167
   Grunske L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P31, DOI 10.1145/1368088.1368094
   Hahn Ernst Moritz, 2011, International Journal on Software Tools for Technology Transfer, V13, P3, DOI 10.1007/s10009-010-0146-x
   Hahn EM, 2010, LECT NOTES COMPUT SC, V6174, P660, DOI 10.1007/978-3-642-14295-6_56
   Hallsteinsen S, 2012, J SYST SOFTWARE, V85, P2840, DOI 10.1016/j.jss.2012.07.052
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Hallsteinsen S, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P141
   Hao Y, 2008, PHYSIOL MEAS, V29, pR27, DOI 10.1088/0967-3334/29/11/R01
   Helvensteijn M., 2012, SPLC 12 PROC 16 INT, V2, P127, DOI [10.1145/2364412.2364434, DOI 10.1145/2364412.2364434]
   Heradio R, 2016, INFORM SOFTWARE TECH, V72, P1, DOI 10.1016/j.infsof.2015.11.004
   I. T. Commission, 2005, IEC 60601 1 4 MED EL
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   KNAUS WA, 1985, CRIT CARE MED, V13, P818, DOI 10.1097/00003246-198510000-00009
   Knowles JD, 2000, EVOL COMPUT, V8, P149, DOI 10.1162/106365600568167
   Laburthe F., 2012, CHOCO SOLVER
   Lee J, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P131
   Lee J, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P114
   Lisboa LB, 2010, INFORM SOFTWARE TECH, V52, P1, DOI 10.1016/j.infsof.2009.05.001
   Lochau M., 2015, SOFTW SYST MODEL, P1
   Mizouni R, 2014, EXPERT SYST APPL, V41, P7549, DOI 10.1016/j.eswa.2014.05.049
   Nascimento AS, 2014, IEEE HI ASS SYS ENGR, P41, DOI 10.1109/HASE.2014.15
   Nunes V., 2012, 2012 Sixth Brazilian Symposium on Software Components, Architectures and Reuse (SBCARS 2012), P51, DOI 10.1109/SBCARS.2012.23
   Nunes V., 2013, INT WORKSH ARCH DEP
   Pascual GG, 2015, J SYST SOFTWARE, V103, P392, DOI 10.1016/j.jss.2014.12.041
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rodrigues G., 2005, USING SCENARIOS PRED, P111
   Rodrigues GN, 2015, IEEE HI ASS SYS ENGR, P173, DOI 10.1109/HASE.2015.34
   Rodrigues GN, 2012, J SYST SOFTWARE, V85, P112, DOI 10.1016/j.jss.2011.07.037
   Rosenmüller M, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P3
   Rosenmüller M, 2011, AUTOMAT SOFTW ENG, V18, P163, DOI 10.1007/s10515-011-0080-5
   S. E. Institute, 2015, PROD LIN HALL FAM
   Sadilek D., 2008, Modellierung, P237
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Sayyad AS, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P22, DOI 10.1109/CMSBSE.2013.6604432
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Strembeck M, 2009, SOFTWARE PRACT EXPER, V39, P1253, DOI 10.1002/spe.936
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Tsang E., 1995, FDN CONSTRAINT SATIS
   van der Linden F. J., 2007, Software Product Lines in Action: the Best Industrial Practice in Product Line Engineering
   Wang Y, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P151
   Welsh K., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P560, DOI 10.1109/ASE.2011.6100125
   Wilhelm R, 2010, COMPILER DESIGN: VIRTUAL MACHINES, P1, DOI 10.1007/978-3-642-14909-2
   Yu E., 1998, P 4 INT WORKSH REQ E, V15, P15
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
NR 70
TC 11
Z9 11
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2017
VL 86
BP 54
EP 70
DI 10.1016/j.infsof.2017.02.002
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ES9DB
UT WOS:000399855200004
DA 2024-07-18
ER

PT J
AU Sun, Y
   Wang, Q
   Yang, Y
AF Sun, Yan
   Wang, Qing
   Yang, Ye
TI FRLink: Improving the recovery of missing issue-commit links by
   revisiting file relevance
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Missing links; Issue reports; Commit analysis; Information retrieval
   (IR); Mining software repositories
AB Context: Though linking issues and commits plays an important role in software verification and maintenance, such link information is not always explicitly provided during software development or maintenance activities. Current practices in recovering such links highly depend on tedious manual examination. To automatically recover missing links, several approaches have been proposed to compare issue reports with log messages and source code files in commits. However, none of such approaches looked at the role of non-source code complementary documents in commits; nor did they consider the distinct roles each piece of the source code played in the same commit.
   Objective: We propose to revisit the definition of relevant files contributing to missing link recovery. More specifically, our work extends existing approaches from two perspectives: (1) Inclusion extension: incorporating complementary documents (i.e., non-source documents) to learn from more relevant data; (2) Exclusion extension: analyzing and filtering out irrelevant source code files to reduce data noise.
   Method: We propose a File Relevance-based approach (FRLink), to implement the above two considerations. FRLink utilizes non-source documents in commits, since they typically clarify code changes details, with similar textual information from corresponding issues. Moreover, FRLink differentiates the roles of different source code files in a single commit and discards files containing no similar code terms as those in issues based on similarity analysis.
   Results: FRLink is evaluated on 6 projects and compared with RCLinker, which is the latest state-of-the-art approach in missing link recovery. The result shows that FRLink outperforms RCLinker in F-Measure by 40.75% when achieving the highest recalls.
   Conclusion: FRLink can significantly improve the performance of missing link recovery compared with existing approaches. This indicates that in missing link recovery studies, sophisticated data selection and processing techniques necessitate more discussions due to the increasing variety and volume of information associated with issues and commits. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Sun, Yan; Wang, Qing] Univ Chinese Acad Sci, Beijing 100049, Peoples R China.
   [Sun, Yan; Wang, Qing] Chinese Acad Sci, Inst Software, Lab Internet Software Technol, Beijing 100190, Peoples R China.
   [Wang, Qing] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing 100190, Peoples R China.
   [Yang, Ye] Stevens Inst Technol, Sch Syst & Enterprises, Hoboken, NJ 07030 USA.
C3 Chinese Academy of Sciences; University of Chinese Academy of Sciences,
   CAS; Chinese Academy of Sciences; Institute of Software, CAS; Chinese
   Academy of Sciences; Institute of Software, CAS; Stevens Institute of
   Technology
RP Wang, Q (corresponding author), Univ Chinese Acad Sci, Beijing 100049, Peoples R China.; Wang, Q (corresponding author), Chinese Acad Sci, Inst Software, Lab Internet Software Technol, Beijing 100190, Peoples R China.; Wang, Q (corresponding author), Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing 100190, Peoples R China.
EM sunyan@itechs.iscas.ac.cn; wq@itechs.iscas.ac.cn; ye.yang@stevens.edu
RI Yang, Ye/GZM-4812-2022; Lang, Ming/HIK-0758-2022; yang,
   yang/HGT-7999-2022; wang, qi/ITT-9652-2023
FU National Natural Science Foundation of China [61432001, 91318301,
   91218302]
FX This research is supported by National Natural Science Foundation of
   China under Grant Nos. 61432001, 91318301 and 91218302.
CR [Anonymous], 2007, P 4 INT WORKSH MIN S
   [Anonymous], 2015, EMPIRICAL SOFTWARE E
   [Anonymous], 2010, P IEEE ACM INT C AUT
   [Anonymous], SNOWBALL LANGUAGE ST
   [Anonymous], 1988, STAT POWER ANAL BEHA
   [Anonymous], 37 IEEE ACM INT C SO
   [Anonymous], 4 INT WORKSH MIN SOF
   [Anonymous], 2011, J MACH LEARN TECHNOL
   [Anonymous], 2008, INTRO INFORM RETRIEV, DOI DOI 10.1017/CBO9780511809071
   Bachmann A, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P119
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bird C, 2010, SIGSOFT FSE, P369
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bissyandé TF, 2013, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2013.19
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Brindescu C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P322, DOI 10.1145/2568225.2568322
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Gupta M, 2014, PROCEEDINGS OF THE 7TH INDIA SOFTWARE ENGINEERING CONFERENCE 2014, ISEC '14, DOI 10.1145/2590748.2590749
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Han J., 2012, Data Mining, P393, DOI [DOI 10.1016/B978-0-12-381479-1.00009-5, 10.1016/B978-0-12-381479-1.00009-5]
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   Nguyen HA, 2013, PROC INT SYMP SOFTW, P138, DOI 10.1109/ISSRE.2013.6698913
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Kirinuki H., 2014, P 22 INT C PROGRAM C, P262
   Le TDB, 2015, INT C PROGRAM COMPRE, P36, DOI 10.1109/ICPC.2015.13
   Maalej Walid, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P191, DOI 10.1109/MSR.2010.5463344
   Maalej W, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P121, DOI 10.1109/MSR.2009.5069490
   Moreno L, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P484, DOI 10.1145/2635868.2635870
   Murphy-Bill E, 2008, IEEE SOFTWARE, V25, P38, DOI 10.1109/MS.2008.123
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Nguyen A. T., 2012, P ACM SIGSOFT 20 INT, P63
   Nguyen T. H. D., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P259, DOI 10.1109/WCRE.2010.37
   Poncin W, 2011, EUR CON SFTWR MTNCE, P5, DOI 10.1109/CSMR.2011.5
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Shaowei Wang, 2011, 2011 18th Working Conference on Reverse Engineering, P92, DOI 10.1109/WCRE.2011.72
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Sun Y, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962605
   Thomas SW, 2013, IEEE T SOFTWARE ENG, V39, P1427, DOI 10.1109/TSE.2013.27
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
NR 47
TC 33
Z9 34
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2017
VL 84
BP 33
EP 47
DI 10.1016/j.infsof.2016.11.010
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ5IV
UT WOS:000393252400003
DA 2024-07-18
ER

PT J
AU Yang, YB
   Zhao, YY
   Liu, CS
   Lu, HM
   Zhou, YM
   Xu, BW
AF Yang, Yibiao
   Zhao, Yangyang
   Liu, Changsong
   Lu, Hongmin
   Zhou, Yuming
   Xu, Baowen
TI An empirical investigation into the effect of slice types on slice-based
   cohesion metrics
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Cohesion; End slice; Metric slice; Metrics
AB Context: There is a debate about whether end slice or metric slice is preferable for computing slice-based cohesion metrics. However, up till now, there is no consensus about this issue.
   Objective: We aim to investigate the relationship between end-slice-based and metric-slice-based cohesion metrics and then determine which type of slice is preferable for computing slice-based cohesion metrics.
   Method: We used forty widely used open-source software systems to conduct the study. First, we compute the baseline values for end-slice-based and metric-slice-based cohesion metrics. Then, we investigate their relationships with module size. Finally, we employ correlation analysis and principal component analysis to analyze the relationships between end-slice-based and metric-slice-based cohesion metrics.
   Results: End-slice-based and metric-slice-based cohesion metrics have similar baseline metric values. Furthermore, they exhibit a similar negative correlation with module size. In particular, the results from correlation analysis and principal component analysis reveal that they essentially measure the same cohesion dimensions.
   Conclusion: From the viewpoint of metric values, there is little difference between end-slice-based and metric-slice-based cohesion metrics. We hence recommend choosing end slice for computing slice-based cohesion metrics in practice, as extra cost involved in data collection could be avoided. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Yang, Yibiao; Zhao, Yangyang; Liu, Changsong; Lu, Hongmin; Zhou, Yuming; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
C3 Nanjing University
RP Zhou, YM (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
EM cs.zhou.yuming@gmail.com
RI Yang, Yibiao/ABP-4159-2022; zhao, yang/GXF-4424-2022; Xu,
   Baowen/IXW-4882-2023; zhao, yang/HTN-4320-2023
OI Yang, Yibiao/0000-0003-1153-2013; Xu, Baowen/0000-0001-7743-1296; 
FU National Key Basic Research and Development Program of China
   [2014CB340702]; National Natural Science Foundation of China [61432001,
   61272082, 61300051, 61321491]; Natural Science Foundation of Jiangsu
   Province [BK20130014]; Climbing Plan of Nanjing University; program A
   for Outstanding PhD candidate of Nanjing University
FX This work is supported by the National Key Basic Research and
   Development Program of China (2014CB340702), the National Natural
   Science Foundation of China (61432001, 61272082, 61300051, and
   61321491), the Natural Science Foundation of Jiangsu Province
   (BK20130014), the Climbing Plan of Nanjing University, and the program A
   for Outstanding PhD candidate of Nanjing University.
CR Al Dallal J, 2009, IET SOFTW, V3, P46, DOI 10.1049/iet-sen:20080054
   Al Dallal J, 2012, INFORM SOFTWARE TECH, V54, P396, DOI 10.1016/j.infsof.2011.11.007
   Al Dallal J, 2011, IEEE T SOFTWARE ENG, V37, P788, DOI 10.1109/TSE.2010.97
   [Anonymous], 2012, INT C SOFTWARE ENG F
   BIEMAN JM, 1994, IEEE T SOFTWARE ENG, V20, P644, DOI 10.1109/32.310673
   Black S, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P3, DOI 10.1109/SEAA.2009.94
   Bowes D., 2009, 2009 TEST AC IND C P
   Carpenter J, 2000, STAT MED, V19, P1141, DOI 10.1002/(SICI)1097-0258(20000515)19:9<1141::AID-SIM479>3.0.CO;2-F
   Counsell S, 2010, INT J SOFTW ENG KNOW, V20, P609, DOI 10.1142/S0218194010004888
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Green P. D., 2009, 488 U HERTF
   Harman M., 1995, 8 INT QUAL WEEK SAN
   Longworth H. D., 1985, THESIS MICHIGAN TECH
   Meyers TM, 2007, ACM T SOFTW ENG METH, V17, DOI 10.1145/1314493.1314495
   Meyers TM, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P256, DOI 10.1109/WCRE.2004.34
   Ott L. M., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P345, DOI 10.1109/ICSM.1992.242524
   Ott L. M., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P71, DOI 10.1109/METRIC.1993.263799
   Ott LM, 1998, INFORM SOFTWARE TECH, V40, P691, DOI 10.1016/S0950-5849(98)00092-5
   Ott R.L., 2015, INTRO STAT METHODS D
   OTTENSTEIN KJ, 1984, SIGPLAN NOTICES, V19, P177, DOI 10.1145/390011.808263
   Page-Jones M., 1988, PRACTICAL GUIDE STRU
   Press Y., 1979, STRUCTURED DESIGN FU
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Yang YB, 2015, IEEE T SOFTWARE ENG, V41, P331, DOI 10.1109/TSE.2014.2370048
   Zhou Y., 2004, P 10 INT SOFTW METR
   Zhou YM, 2002, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.2002.1167746
   Zhou YM, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2556777
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
NR 29
TC 1
Z9 1
U1 0
U2 12
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2016
VL 75
BP 90
EP 104
DI 10.1016/j.infsof.2016.04.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DN1QI
UT WOS:000376840100007
DA 2024-07-18
ER

PT J
AU Walter, B
   Alkhaeir, T
AF Walter, Bartosz
   Alkhaeir, Tarek
TI The relationship between design patterns and code smells: An exploratory
   study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Design patterns; Code smells; Software evolution; Empirical study
ID MAINTENANCE
AB Context-Design patterns represent recommended generic solutions to various design problems, whereas code smells are symptoms of design issues that could hinder further maintenance of a software system. We can intuitively expect that both concepts are mutually exclusive, and the presence of patterns is correlated with the absence of code smells. However, the existing experimental evidence supporting this claim is still insufficient, and studies separately analyzing the impact of smells and patterns on code quality deliver diverse results.
   Objective-The aim of the paper is threefold: (1) to determine if and how the presence of the design patterns is linked to the presence of code smells, (2) to investigate if and how these relationships change throughout evolution of code, and (3) to identify the relationships between individual patterns and code smells.
   Method-We analyze nine design patterns and seven code smells in two medium-size, long-evolving, open source Java systems. In particular, we explore how the presence of design patterns impacts the presence of code smells, analyze if this link evolves over time, and extract association rules that describe their individual relationships.
   Results-Classes participating in design patterns appear to display code smells less frequently than other classes. The observed effect is stronger for some patterns (e.g., Singleton, State-Strategy) and weaker for others (e.g., Composite). The ratio between the relative number of smells in the classes participating in patterns and the relative number of smells in Other classes, is approximately stable or slightly decreasing in time.
   Conclusion-This observation could be used to anticipate the smell-proneness of individual classes, and improve code smell detectors. Overall, our findings indicate that the presence of design patterns is linked with a lower number of code smell instances. This could support programmers in a context-sensitive analysis of smells in code. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Walter, Bartosz] Poznan Univ Tech, Fac Comp, Poznan, Poland.
   [Alkhaeir, Tarek] Poznan Supercomp & Networking Ctr, Poznan, Poland.
C3 Poznan University of Technology; Polish Academy of Sciences; Poznan
   Supercomputing & Networking Center
RP Walter, B (corresponding author), Poznan Univ Tech, Fac Comp, Poznan, Poland.
EM bartosz.walter@cs.put.poznan.pl; tarekkh@man.poznan.pl
RI Alkhaeir, Tarek/U-7843-2019; Walter, Bartosz/A-3234-2013
OI Walter, Bartosz/0000-0003-1212-2390; alkhaeir, Tarek/0000-0001-6233-9921
CR Agrawal R., 1996, Advances in Knowledge Discovery and Data Mining, V12, P307, DOI DOI 10.1007/978-3-319-31750-2.
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   [Anonymous], SCI WORKSH P XP2015
   [Anonymous], P SOFTW TECHNIK98 SO
   [Anonymous], OBJECT ORIENTED DESI
   [Anonymous], P 10 INT C QUAL SOFT
   [Anonymous], 2010, 2010 IEEE International Conference on Software Maintenance, DOI [10.1109/ICSM.2010.5609564, DOI 10.1109/ICSM.2010.5609564]
   [Anonymous], P TECHN OBJ OR LANG
   [Anonymous], 2013, ELECT COMMUN EUR ASS
   [Anonymous], 2011, J STAT MODEL ANAL
   [Anonymous], EMPIRICAL SOFTW ENG
   [Anonymous], P 1 ECOOP WORKSH BUI
   Arcelli F, 2006, 13TH IEEE INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P196, DOI 10.1109/STEP.2005.12
   Aversano Lerina., 2007, PROC THE 6 EUROPEAN, P385, DOI [DOI 10.1145/1287624.1287680, 10.1145/1287624.1287680.]
   Azevedo PJ, 2007, LECT NOTES ARTIF INT, V4701, P510
   Bieman JM, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P40, DOI 10.1109/METRIC.2003.1232454
   Brin S., 1997, SIGMOD Record, V26, P255, DOI [10.1145/253262.253327, 10.1145/253262.253325]
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Di Penta M, 2008, PROC IEEE INT CONF S, P217, DOI 10.1109/ICSM.2008.4658070
   Fontana FA, 2013, PROC IEEE INT CONF S, P260, DOI 10.1109/ICSM.2013.37
   Fontana FA, 2013, PROC IEEE INT CONF S, P396, DOI 10.1109/ICSM.2013.56
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma Erich., 1994, DESIGN PATTERNS
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Hegedus P, 2012, COMM COM INF SC, V340, P138
   Heuzeroth D, 2003, PROG COMPREHEN, P94
   Khomh F, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P274
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Lanza Michele., 2005, Object-Oriented Metrics in Practice
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Mann HB, 1945, ECONOMETRICA, V13, P245, DOI 10.2307/1907187
   Mantyla M. V., 2005, 2005 International Symposium on Empirical Software Engineering (IEEE Cat. No. 05EX1213)
   Ng TH, 2012, INFORM SOFTWARE TECH, V54, P99, DOI 10.1016/j.infsof.2011.08.002
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P1134, DOI 10.1109/32.988711
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Vokác M, 2004, IEEE T SOFTWARE ENG, V30, P904, DOI 10.1109/TSE.2004.99
   Wendorff P, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P77, DOI 10.1109/CSMR.2001.914971
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wohlin C., 2012, Experimentation in Software Engineering
   Yamashita A, 2013, J SYST SOFTWARE, V86, P2639, DOI 10.1016/j.jss.2013.05.007
   Yamashita A, 2013, INFORM SOFTWARE TECH, V55, P2223, DOI 10.1016/j.infsof.2013.08.002
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
   Zhang C, 2012, IEEE T SOFTWARE ENG, V38, P1213, DOI 10.1109/TSE.2011.79
NR 48
TC 26
Z9 31
U1 2
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2016
VL 74
BP 127
EP 142
DI 10.1016/j.infsof.2016.02.003
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DJ7BX
UT WOS:000374368000009
DA 2024-07-18
ER

PT J
AU Lu, H
   Yue, T
   Ali, S
   Zhang, L
AF Lu, Hong
   Yue, Tao
   Ali, Shaukat
   Zhang, Li
TI Model-based incremental conformance checking to enable interactive
   product configuration
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Incremental conformance checking; Product line engineering; Model based
   engineering; Interactive product configuration; Variation point
ID FAMILIES
AB Context: Model-based product line engineering (PLE) is a paradigm that can enable automated product configuration of large-scale software systems, in which models are used as an abstract specification of commonalities and variabilities of products of a product line.
   Objective: In the context of PLE, providing immediate feedback on the correctness of a manual configuration step to users has a practical impact on whether a configuration process with tool support can be successfully adopted in practice.
   Method: In an existing work, a UML-based variability modeling methodology named as SimPL and an interactive configuration process was proposed. Based on the existing work, we propose an automated, incremental and efficient conformance checking approach to ensure that the manual configuration of a variation point conforms to a set of pre-defined conformance rules specified in the Object Constraint Language (OCL). The proposed approach, named as Zen-CC, has been implemented as an integrated part of our product configuration and derivation tool: Zen-Configurator. Results: The performance and scalability of Zen-CC have been evaluated with a real-world case study.
   Results show that Zen-CC significantly outperformed two baseline engines in terms of performance. Besides, the performance of Zen-CC remains stable during the configuration of all the 10 products of the product line and its efficiency also remains un-impacted even with the growing product complexity, which is not the case for both of the baseline engines.
   Conclusion: The results suggest that Zen-CC performs practically well and is much more scalable than the two baseline engines and is scalable for configuring products with a larger number of variation points. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Lu, Hong] Beihang Univ, Beijing, Peoples R China.
   [Yue, Tao] Univ Oslo, Simula Res Lab, Oslo, Norway.
   [Lu, Hong; Ali, Shaukat] Simula Res Lab, Oslo, Norway.
   [Zhang, Li] Beihang Univ, Inst Software Engn, Beijing, Peoples R China.
C3 Beihang University; University of Oslo; Beihang University
RP Yue, T (corresponding author), Univ Oslo, Simula Res Lab, Oslo, Norway.
EM honglu@simula.no; tao@simula.no; shaukat@simula.no; lily@buaa.edu.cn
RI yue, tao/H-6783-2013; Zhang, Li/AAA-9787-2020
OI Ali, Shaukat/0000-0002-9979-3519; Yue, Tao/0000-0003-3262-5577
FU Zen-Configurator project - Research Council of Norway [240024/F20]; EU
   Horizon 2020 project U-Test [645463]; MBE-CR [239063]; RFF Hovedstaden
   MBT4CPS projects [240013/O70]; Certus SFI [203461/O30]; National Natural
   Science Foundation of China [61370058, 61170087]; H2020 - Industrial
   Leadership [645463] Funding Source: H2020 - Industrial Leadership
FX This work was supported by the Zen-Configurator project funded by the
   Research Council of Norway (grant no. 240024/F20) under the category of
   Young Research Talents of the FRIPO funding scheme. Tao Yue and Shaukat
   Ali are also supported by the EU Horizon (grant no. 645463) 2020 project
   U-Test (http://www.u-test.eu/), the MBE-CR (grant no. 239063) (An
   Innovative Approach for Longstanding Development and Maintenance of the
   Automated Cancer Registry System), RFF Hovedstaden MBT4CPS (grant no.
   240013/O70) (Model-Based Testing For Cyber-Physical Systems) projects
   and the Certus SFI (grant no. 203461/O30) (http://certus-sfi.no/). It
   was also supported in part by a grant from the National Natural Science
   Foundation of China (nos. 61370058, 61170087).
CR Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   [Anonymous], 2006, ISO136286
   Bai Y, 2012, SUBSEA ENGINEERING HANDBOOK, P1
   Behjati R, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2581376
   Behjati R, 2013, INFORM SOFTWARE TECH, V55, P607, DOI 10.1016/j.infsof.2012.09.006
   Blanc X, 2009, LECT NOTES COMPUT SC, V5565, P32, DOI 10.1007/978-3-642-02144-2_8
   Briand Lionel, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P793, DOI 10.1007/978-3-642-33666-9_50
   Cabot J, 2009, J SYST SOFTWARE, V82, P1459, DOI 10.1016/j.jss.2009.03.009
   Chang Xu, 2006, 28th International Conference on Software Engineering Proceedings, P292
   Chechik M., 2001, FME 2001: Formal Methods for Increasing Software Productivity. International Symposium on Formal Methods Europe. Proceedings (Lecture Notes in Computer Science Vol.2021), P72
   Cordy Maxime., 2012, Proceedings of the 16th International Software Product Line Conference, V2, P74
   Deelstra S, 2005, J SYST SOFTWARE, V74, P173, DOI 10.1016/j.jss.2003.11.012
   Dhungana D., 2007, 22 IEEE ACM INT C AU, P533, DOI DOI 10.1145/1321631.1321730
   EASTERBROOK S, 1994, CONCURRENT ENG-RES A, V2, P209, DOI 10.1177/1063293X9400200307
   Kunming Nie T.Y., 2013, ACM IEEE 16 INT C MO
   Lu H, 2014, IEEE INT SYMP POWER
   Lucas FJ, 2009, INFORM SOFTWARE TECH, V51, P1631, DOI 10.1016/j.infsof.2009.04.009
   Mazo R., 2011, 2011 IEEE 35 ANN COM
   Nie KM, 2013, LECT NOTES COMPUT SC, V8107, P370, DOI 10.1007/978-3-642-41533-3_23
   Nielsen J., 2009, POWERS 10 TIME SCALE, P9
   O'Leary P., 2009, P 13 INT SOFTW PROD, P121
   Omg U., 2012, 231 OCL
   Palleri J.-R., 2013, SOFTWARE PRACT EXPER, V43, P621
   Rajkumar R, 2010, DES AUT CON, P731
   Reder Alexander, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P202, DOI 10.1007/978-3-642-33666-9_14
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vierhauser M., 2010, P IEEEACM INT C AUTO, P63
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xu C, 2010, ACM T SOFTW ENG METH, V19, DOI 10.1145/1656250.1656253
   Zar J. H., 1998, ENCY BIOSTAT
NR 32
TC 16
Z9 16
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2016
VL 72
BP 68
EP 89
DI 10.1016/j.infsof.2015.12.004
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DX9HP
UT WOS:000384704500005
DA 2024-07-18
ER

PT J
AU Neto, PAS
   Vargas-Solar, G
   da Costa, US
   Musicante, MA
AF Souza Neto, Placid A.
   Vargas-Solar, Genoveva
   da Costa, Umberto Souza
   Musicante, Martin A.
TI Designing service-based applications in the presence of non-functional
   properties: A mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Non-functional requirements; Service-based software process; Systematic
   mapping
ID SEMANTIC WEB SERVICES; COMPOSITION ALGORITHM; PETRI NETS; QOS; QUALITY;
   FRAMEWORK; REQUIREMENTS; TIME; DECOMPOSITION; NEGOTIATION
AB Context: The development of distributed software systems has become an important problem for the software engineering community. Service-based applications are a common solution for this kind of systems. Services provide a uniform mechanism for discovering, integrating and using these resources. In the development of service based applications not only the functionality of services and compositions should be considered, but also conditions in which the system operates. These conditions are called non-functional requirements (NFR). The conformance of applications to NFR is crucial to deliver software that meets the expectations of its users.
   Objective: This paper presents the results of a systematic mapping carried out to analyze how NFR have been addressed in the development of service-based applications in the last years, according to different points of view.
   Method: Our analysis applies the systematic mapping approach. It focuses on the analysis of publications organized by categories called facets, which are combined to answer specific research questions. The facets compose a classification schema which is part of the contribution and results.
   Results: This paper presents our findings on how NFR have been supported in the development of service-based applications by proposing a classification scheme consisting in five facets: (i) programming paradigm (object/service oriented); (ii) contribution (methodology, system, middleware); (iii) software process phase; (iv) technique or mathematical model used for expressing NFR; and (v) the types of NFR addressed by the papers, based on the classification proposed by the ISO/IEC 9126 specification. The results of our systematic mapping are presented as bubble charts that provide a quantitative analysis to show the frequencies of publications for each facet. The paper also proposes a qualitative analysis based on these plots. This analysis discusses how NFR (quality properties) have been addressed in the design and development of service-based applications, including methodologies, languages and tools devised to support different phases of the software process.
   Conclusion: This systematic mapping showed that NFR are not fully considered in all software engineering phases for building service based applications. The study also let us conclude that work has been done for providing models and languages for expressing NFR and associated middleware for enforcing them at run time. An important finding is that NFR are not fully considered along all software engineering phases and this opens room for proposing methodologies that fully model NFR. The data collected by our work and used for this systematic mapping are available in https://github.com/placidoneto/systematic-mapping_service-based-app_nfr. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Souza Neto, Placid A.] Inst Fed Rio Grande Norte Natal, Natal, RN, Brazil.
   [Vargas-Solar, Genoveva] CNRS, LIG LAFMIA, St Martin Dheres, France.
   [da Costa, Umberto Souza; Musicante, Martin A.] Univ Fed Rio Grande do Norte, BR-59072970 Natal, RN, Brazil.
   [da Costa, Umberto Souza; Musicante, Martin A.] Univ Fed Rio Grande do Norte, BR-59072970 Natal, RN, Brazil.
C3 Instituto Federal do Rio Grande do Norte; Centre National de la
   Recherche Scientifique (CNRS); Universidade Federal do Rio Grande do
   Norte; Universidade Federal do Rio Grande do Norte
RP Neto, PAS (corresponding author), IFRN, Ave Senador Salgado Filho 1559, BR-59015000 Natal, RN, Brazil.
EM placido.neto@ifrn.edu.br
RI Solar, Genoveva Vargas/T-8621-2019; Musicante, Martin A./B-3586-2008
OI Solar, Genoveva Vargas/0000-0001-9545-1821; Musicante, Martin
   A./0000-0001-5589-3895
FU CNPq (Brazil) [PDE-201118/2014-9, PQ-305619/2012-8,
   INCT-INES-573964/2008-4]; CAPES/CNRS (Brazil/France) [SticAmSud 052/14]
FX This work was partly funded by CNPq (Brazil, PDE-201118/2014-9,
   PQ-305619/2012-8, INCT-INES-573964/2008-4) and CAPES/CNRS
   (Brazil/France, SticAmSud 052/14).
CR Abramowicz W., 2009, INT C ADV COMM TECHN, P81, DOI DOI 10.1007/978-1-4020-9532-0_7
   Agarwal V, 2005, J WEB SEMANT, V3, P311, DOI 10.1016/j.websem.2005.09.002
   Agarwal Vikas, 2010, 2010 IEEE International Conference on Web Services (ICWS), P275, DOI 10.1109/ICWS.2010.39
   Akzhalova A., 2010, Proceedings of the 2010 IEEE Congress on Services (SERVICES-1), P590, DOI 10.1109/SERVICES.2010.61
   Alférez GH, 2014, J SYST SOFTWARE, V91, P24, DOI 10.1016/j.jss.2013.06.034
   Allen P, 2006, SERVICE ORIENTATION: WINNING STRATEGIES AND BEST PRACTICES, P1, DOI 10.2277/ 0521843367
   Alrifai M, 2012, ACM T WEB, V6, DOI 10.1145/2180861.2180864
   Ameller D, 2015, INFORM SOFTWARE TECH, V62, P42, DOI 10.1016/j.infsof.2015.02.006
   [Anonymous], P 6 INT S SOFTW ENG
   [Anonymous], 2013, P 28 ANN ACM S APPL
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 9126 ISOIEC 1
   [Anonymous], 2010, PROC IEEE INT C SERV
   [Anonymous], P C3S2E 14
   [Anonymous], 2011, P 2011 50 FITCE C IC
   [Anonymous], 2004, P 2 INT C SERV OR CO
   Parejo JA, 2014, EXPERT SYST APPL, V41, P4211, DOI 10.1016/j.eswa.2013.12.036
   Ardagna D, 2005, 2005 IEEE International Conference on Web Services, Vols 1 and 2, Proceedings, P805
   Babar MA, 2008, MARK: 2008 FIRST INTERNATIONAL WORKSHOP ON MANAGING REQUIREMENTS KNOWLEDGE, P53, DOI 10.1109/MARK.2008.3
   Baird R, 2011, J SYST SOFTWARE, V84, P510, DOI 10.1016/j.jss.2010.10.026
   Baligand F., 2004, P 2 INT C SERV OR CO, P134, DOI [10.1145/1035167.1035187, DOI 10.1145/1035167.1035187]
   Barber KS, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P172, DOI 10.1109/ASE.2002.1115011
   Barney S, 2012, INFORM SOFTWARE TECH, V54, P651, DOI 10.1016/j.infsof.2012.01.008
   Barrett R., 2006, P 6 INT C WEB ENG IC, P129, DOI DOI 10.1145/1145581.1145612
   Bartalos Peter, 2010, 2010 IEEE International Conference on Web Services (ICWS), P345, DOI 10.1109/ICWS.2010.90
   Bartolini C., 2012, 2012 Proceedings of 4th International Workshop on Principles of Engineering Service-Oriented Systems (PESOS 2012), P8, DOI 10.1109/PESOS.2012.6225947
   Bartolini C, 2011, J SYST SOFTWARE, V84, P655, DOI 10.1016/j.jss.2010.10.024
   Ben Mokhtar S, 2007, J SYST SOFTWARE, V80, P1941, DOI 10.1016/j.jss.2007.03.002
   Benouaret K, 2014, ACM T INTERNET TECHN, V13, DOI 10.1145/2576231
   Bi Lingyan, 2013, 2013 Fourth International Conference on Emerging Intelligent Data and Web Technologies (EIDWT), P11, DOI 10.1109/EIDWT.2013.7
   Blake MB, 2012, DECIS SUPPORT SYST, V53, P234, DOI 10.1016/j.dss.2012.01.017
   Blanco E., 2010, P INT C INF INT WEB, P25, DOI DOI 10.1145/1967486.1967495
   Braubach L, 2014, 2014 INTERNATIONAL CONFERENCE ON CLOUD AND AUTONOMIC COMPUTING (ICCAC 2014), P83, DOI 10.1109/ICCAC.2014.32
   Briones Javier Fernandez, 2010, Proceedings of the 2010 13th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing Workshops (ISORCW Workshops 2010). Volume II: Workshops, P123, DOI 10.1109/ISORCW.2010.27
   Brown A, 2005, SOA DEV USING IBM RA
   Buccafurri F, 2008, DATA KNOWL ENG, V67, P463, DOI 10.1016/j.datak.2008.08.004
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Buscemi MG, 2011, J LOGIC ALGEBR PROGR, V80, P13, DOI 10.1016/j.jlap.2010.04.001
   Canfora G, 2008, J SYST SOFTWARE, V81, P1754, DOI 10.1016/j.jss.2007.12.792
   Canfora G, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1069
   Cao JX, 2010, IEEE SYS MAN CYBERN, P3118, DOI 10.1109/ICSMC.2010.5641724
   Cardoso J., 2004, J WEB SEMANT, V1
   Casas P, 2014, COMPUT NETW, V68, P149, DOI 10.1016/j.comnet.2014.01.008
   Charfi A., 2005, P 14 INT C WORLD WID, P1132
   Chaudron M.R.V., 2008, LECT NOTES COMPUTER, V5282
   Chen LP, 2013, 2013 9TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND SECURITY (CIS), P105, DOI 10.1109/CIS.2013.29
   Chen MM, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P564, DOI 10.1145/2591062.2591070
   Chen S., 2007, MPAC 07, P13, DOI [10.1145/1376866.1376869., DOI 10.1145/1376866.1376869]
   Chen ZY, 2009, FIRST IITA INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P96, DOI 10.1109/JCAI.2009.206
   Chowdhury SR, 2014, ACM T INTERNET TECHN, V14, P275, DOI 10.1145/2663500
   Chung L., 1999, NONFUNCTIONAL REQUIR
   Chung L, 2009, LECT NOTES COMPUT SC, V5600, P363, DOI 10.1007/978-3-642-02463-4_19
   Comuzzi M, 2009, ACM T WEB, V3, DOI 10.1145/1541822.1541825
   Conti M, 2000, PERF E R SI, V27, P12, DOI 10.1145/346000.346004
   Cruz SAB, 2012, COMPUT GEOSCI-UK, V47, P60, DOI 10.1016/j.cageo.2011.11.020
   D'Ambrogio A, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P789
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   de Castro V., 2009, INT J COOPERATIVE IN, V18
   de Castro V, 2014, LECT NOTES COMPUT SC, V8327, P199, DOI 10.1007/978-3-319-04298-5_18
   Di Penta Massimiliano., 2006, SOSE'06: Proceedings of the 2006 international workshop on Service-oriented software engineering, P74, DOI DOI 10.1145/1138486.1138502
   Sanchez LE, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P39, DOI 10.1109/CMSBSE.2013.6604435
   Erradi A., 2005, P INT C NEXT GEN WEB, DOI [10.1109/NWESP.2005.75, DOI 10.1109/NWESP.2005.75]
   Esfahani PM, 2012, INT CONF GENET EVOL, P526, DOI 10.1109/ICGEC.2012.65
   Fabbri Sandra, 2012, Proceedings of the 14th International Conference on Enterprise Information Systems (ICEIS 2012)., P36
   FanJiang YY, 2014, INFORM SOFTWARE TECH, V56, P352, DOI 10.1016/j.infsof.2013.12.001
   Feng XZ, 2007, ICCTA 2007: INTERNATIONAL CONFERENCE ON COMPUTING: THEORY AND APPLICATIONS, PROCEEDINGS, P208
   Fernández-Sáez AM, 2010, ICSOFT 2010: PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 2, P157
   Fontanini W, 2014, EXPERT SYST APPL, V41, P4743, DOI 10.1016/j.eswa.2014.02.016
   Fortuna C, 2015, ACM T SENSOR NETWORK, V11, DOI 10.1145/2678216
   Fraga J, 2004, NINTH IEEE INTERNATIONAL WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE SYSTEMS, P179
   Frankova G, 2011, J SYST SOFTWARE, V84, P1351, DOI 10.1016/j.jss.2011.03.077
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garcia D.Z. G., 2006, Proceedings of the 12th Brazilian Symposium on Multimedia and the web, P35
   Valls MG, 2013, J SYST ARCHITECT, V59, P1414, DOI 10.1016/j.sysarc.2013.06.008
   Garg S.K., 2008, P INT S INF TECHN 20, V2, P1, DOI [10.1109/ITSIM.2008.4631745, DOI 10.1109/ITSIM.2008.4631745]
   Guan Y, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P743
   Haesevoets R, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559937
   Hai Liu, 2010, Proceedings 2010 9th International Conference on Grid and Cloud Computing (GCC 2010), P450, DOI 10.1109/GCC.2010.93
   He J, 2012, ACM T INTERNET TECHN, V11, DOI 10.1145/2078316.2078321
   Heinzl S., 2009, P 11 INT C INF INT W, P235, DOI [10.1145/1806338.1806384, DOI 10.1145/1806338.1806384]
   Hernandes Elis, 2012, CLEIej, V15, P3
   Hristoskova A, 2010, COMPUT METH PROG BIO, V100, P248, DOI 10.1016/j.cmpb.2010.03.019
   Huan Liu, 2010, Proceedings 2010 International Conference on Web Information Systems and Mining (WISM 2010), P123, DOI 10.1109/WISM.2010.128
   Huang W, 2009, 2009 SIXTH WEB INFORMATION SYSTEMS AND APPLICATIONS CONFERENCE, PROCEEDINGS, P156, DOI 10.1109/WISA.2009.11
   Incheon Paik, 2008, 2008 IEEE International Conference on Web Services (ICWS), P764, DOI 10.1109/ICWS.2008.125
   Iordache R, 2013, IEEE INT CONF SERV, P220, DOI 10.1109/SOCA.2013.20
   Jafarpour N., 2009, Proceedings of the 2009 11th IEEE International Symposium on Web Systems Evolution (WSE 2009), P75, DOI 10.1109/WSE.2009.5630403
   Jang J. H., 2006, P 4 EUR C WEB SERV E, P87, DOI DOI 10.1109/ECOWS.2006.21
   Jarir Z., 2009, Proceedings of the 2009 Fifth International Conference on Signal-Image Technology & Internet-Based Systems (SITIS 2009), P401, DOI 10.1109/SITIS.2009.69
   Jiang B., 2009, P 18 INT C WORLD WID, P1123, DOI DOI 10.1145/1526709.1526888
   Jiang S., 2007, Proceedings of the Fourth Annual International Conference on Mobile and Ubiquitous Systems: Networking Services, P1, DOI DOI 10.1109/MOBIQ,2007.4451003
   Jin J., 2011, P 8 INT C SERV SYST, P1, DOI [10.1109/ICSSSM.2011.5959305., DOI 10.1109/ICSSSM.2011.5959305]
   Jin Wu, 2008, 2008 Third International Conference on Digital Information Management, P656, DOI 10.1109/ICDIM.2008.4746795
   Jun Jin, 2010, 2010 5th International Conference on Computer Science & Education (ICCSE 2010), P1680, DOI 10.1109/ICCSE.2010.5593626
   Karakoc E, 2009, EXPERT SYST APPL, V36, P11021, DOI 10.1016/j.eswa.2009.02.098
   Karam M, 2008, J SYST SOFTWARE, V81, P855, DOI 10.1016/j.jss.2007.10.031
   Karatas F, 2015, SCI COMPUT PROGRAM, V97, P183, DOI 10.1016/j.scico.2014.06.016
   Karim F., 2008, P ACM IFIP USENIX MI, P7, DOI [10.1145/1462735.1462738., DOI 10.1145/1462735.1462738]
   Kassab M, 2009, LECT NOTES COMPUT SC, V5891, P182, DOI 10.1007/978-3-642-05415-0_14
   Klein A., 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P436, DOI 10.1109/ICWS.2011.60
   Klug H, 2014, COMPUT GEOSCI-UK, V69, P78, DOI 10.1016/j.cageo.2014.04.016
   Ko JM, 2008, J SYST SOFTWARE, V81, P2079, DOI 10.1016/j.jss.2008.04.044
   Kuehne Bruno T., 2010, Proceedings 2010 Ninth IEEE International Symposium on Network Computing and Applications (NCA), P174, DOI 10.1109/NCA.2010.30
   Li CL, 2014, INFORM SCIENCES, V279, P654, DOI 10.1016/j.ins.2014.04.018
   Li HF, 2012, COMPUT GEOSCI-UK, V47, P46, DOI 10.1016/j.cageo.2011.10.007
   Li J, 2014, INFORM SCIENCES, V269, P238, DOI 10.1016/j.ins.2013.12.015
   Liang WY, 2007, COMPUT STAND INTER, V29, P54, DOI 10.1016/j.csi.2005.11.001
   Liao JX, 2014, J SYST SOFTWARE, V90, P191, DOI 10.1016/j.jss.2013.11.1113
   Lin MS, 2005, 2005 IEEE INTERNATIONAL CONFERENCE ON E-TECHNOLOGY, E-COMMERCE AND E-SERVICE, PROCEEDINGS, P9
   Liu DM, 2009, PROCEEDINGS OF THE 8TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE, P1184, DOI 10.1109/ICIS.2009.76
   Liu M, 2012, FUTURE GENER COMP SY, V28, P1080, DOI 10.1016/j.future.2011.08.017
   Liu XQ, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P567, DOI 10.1109/ICWS.2009.25
   Liu YL, 2012, 2012 IEEE ASIA-PACIFIC SERVICES COMPUTING CONFERENCE (APSCC), P76, DOI 10.1109/APSCC.2012.26
   Longo A., 2013, P 5 INT C MAN EM DIG, P195, DOI DOI 10.1145/2536146.2536153
   Loyall JP, 1998, FIRST INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING (ISORC '98), P43, DOI 10.1109/ISORC.1998.666767
   Ludwig SA, 2012, INT CON ADV INFO NET, P613, DOI 10.1109/AINA.2012.46
   Luo YS, 2012, COMPUT COMMUN, V35, P1882, DOI 10.1016/j.comcom.2012.02.009
   Luo YS, 2011, COMPUT COMMUN, V34, P1137, DOI 10.1016/j.comcom.2010.02.028
   Maamar Z, 2006, INFORM SOFTWARE TECH, V48, P441, DOI 10.1016/j.infsof.2005.05.004
   Mani A., 2002, UNDERSTANDING QAULIT
   Mardukhi F, 2013, APPL SOFT COMPUT, V13, P3409, DOI 10.1016/j.asoc.2012.12.033
   Marshall C, 2014, P 18 INT C EV ASS SO, P1, DOI DOI 10.1145/2601248.2601270
   Martín JA, 2012, J LOGIC ALGEBR PROGR, V81, P99, DOI 10.1016/j.jlap.2011.08.001
   Meng S, 2007, TASE 2007: FIRST JOINT IEEE/IFIP SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, PROCEEDINGS, P389, DOI 10.1109/TASE.2007.37
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Meyer Bertrand, 1993, OBJECT ORIENTED APPL
   MYLOPOULOS J, 1992, IEEE T SOFTWARE ENG, V18, P483, DOI 10.1109/32.142871
   Oh J, 2011, INFORM SCIENCES, V181, P351, DOI 10.1016/j.ins.2010.09.019
   Okutan C, 2010, KNOWL-BASED SYST, V23, P440, DOI 10.1016/j.knosys.2010.02.006
   Oriol M, 2014, INFORM SOFTWARE TECH, V56, P1167, DOI 10.1016/j.infsof.2014.03.012
   Ortiz Guadalupe, 2008, 2008 IEEE International Conference on Web Services (ICWS), P748, DOI 10.1109/ICWS.2008.52
   Ortiz G, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P559, DOI 10.1109/ICWS.2009.20
   Palacios M, 2011, INFORM SOFTWARE TECH, V53, P171, DOI 10.1016/j.infsof.2010.11.014
   Panagis Yannis, 2008, International Journal of Web Engineering and Technology, V4, P114, DOI 10.1504/IJWET.2008.016107
   Papazoglou M., 2007, IEEE COMPUT, V40
   Papazoglou M. P., 2006, International Journal of Web Engineering and Technology, V2, P412, DOI 10.1504/IJWET.2006.010423
   Pastrana JL, 2011, COMPUT LANG SYST STR, V37, P2, DOI 10.1016/j.cl.2010.07.001
   Pathak J, 2006, LECT NOTES COMPUT SC, V4294, P314
   Perez-Palacin D, 2012, J SYST SOFTWARE, V85, P2796, DOI 10.1016/j.jss.2012.04.077
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petrova-Antonova D., 2012, P 13 INT C COMP SYST, P171, DOI [10.1145/2383276.2383303, DOI 10.1145/2383276.2383303]
   Phan T., 2006, P 1 WORKSH MIDDL SER, P30, DOI [10.1145/1169091.1169096, DOI 10.1145/1169091.1169096]
   Pishdad L, 2010, J VIS COMMUN IMAGE R, V21, P167, DOI 10.1016/j.jvcir.2009.05.004
   Pompilio C., 2011, ACM P QASBA 2011, P9, DOI DOI 10.1145/2031746.2031751
   Ponnalagu Karthikeyan, 2007, 2007 IEEE Congress on Services, P284, DOI 10.1109/SERVICES.2007.18
   Qi LY, 2012, J COMPUT SYST SCI, V78, P1316, DOI 10.1016/j.jcss.2011.12.016
   Qu Y, 2006, GCC 2005: FIFTH INTERNATIONAL CONFERENCE ON GRID AND COOPERATIVE COMPUTING, PROCEEDINGS, P458
   Rahman Md Mijanur, 2013, International Journal of Future Computer and Communication, V2, P485, DOI 10.7763/IJFCC.2013.V2.211
   Rajeswari M, 2014, J KING SAUD UNIV-COM, V26, P143, DOI 10.1016/j.jksuci.2013.08.003
   Rao JH, 2006, INFORM SYST, V31, P340, DOI 10.1016/j.is.2005.02.005
   Raymond K., 1995, Open Distributed Processing Experiences with Distributed Environments. Proceedings of the Third IFIP TC 6/WG 6.1 International Conference on Open Distributed Processing, P3
   Ren KJ, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P485, DOI 10.1109/ICWS.2009.39
   Rinderle-Ma S, 2014, 2014 IEEE 21ST INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2014), P479, DOI 10.1109/ICWS.2014.74
   Risse T., 2009, P 18 INT C WORLD WID, P881, DOI DOI 10.1145/1526709.1526828
   Rosenberg F., 2007, P 11 IEEE INT ENT DI, DOI [10.1109/EDOC.2007.23.15-15, DOI 10.1109/EDOC.2007.23.15-15]
   Rosenberg F, 2009, IEEE INT ENTERP DIST, P151, DOI 10.1109/EDOC.2009.14
   Ruiz A, 2001, EIGHTH IEEE WORKSHOP ON FUTURE TRENDS OF DISTRIBUTED COMPUTING SYSTEMS, PROCEEDINGS, P48, DOI 10.1109/FTDCS.2001.969621
   Zapater JJS, 2015, EXPERT SYST APPL, V42, P3833, DOI 10.1016/j.eswa.2015.01.005
   Samuel S.J., 2011, INDIAN J COMPUT SCI
   Schätz B, 2003, LECT NOTES COMPUT SC, V2885, P86
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Shrivastava S, 2015, PROCEDIA COMPUT SCI, V46, P766, DOI 10.1016/j.procs.2015.02.145
   Simon N., 2007, Proceedings of ICAPP, ASME, May 13 - 18, Nice, France, P1, DOI DOI 10.1145/1376878.1376880
   Singhera Z.U., 2006, P 6 INT C WEB ENG IC, DOI [10.1145/1149993.1150017, DOI 10.1145/1149993.1150017]
   Sirer E.G., 2002, SACMAT '02 : Proceedings of the seventh ACM symposium on Access control models and technologies, P23, DOI [10.1145/507711.507715, DOI 10.1145/507711.507715]
   Sodhi Balwinder, 2012, 2012 IEEE Eighth World Congress on Services, P278, DOI 10.1109/SERVICES.2012.49
   Solomon B., 2010, Proceedings ACM ICSE Workshop on Software Engineering for Adaptive and Self-Managing Systems (SEAMS), P94, DOI DOI 10.1145/1808984.1808995
   Song XD, 2011, FUTURE GENER COMP SY, V27, P627, DOI 10.1016/j.future.2010.06.008
   Souza Neto P.A., 2012, THESIS
   Srirama S.N., 2007, Proceedings of the 2nd Workshop on Middleware for Service Oriented Computing: held at the ACM/IFIP/USENIX International Middleware Conference, P6, DOI DOI 10.1145/1388336.1388337
   Stavropoulos TG, 2013, EXPERT SYST APPL, V40, P4380, DOI 10.1016/j.eswa.2013.01.061
   Sun SX, 2012, INFORM SCIENCES, V199, P138, DOI 10.1016/j.ins.2012.02.061
   Talantikite HN, 2009, COMPUT STAND INTER, V31, P1108, DOI 10.1016/j.csi.2008.09.041
   Tambe S., 2008, P 12 ENT DISTR OBJ C, P43, DOI [10.1109/EDOCW.2008.60, DOI 10.1109/EDOCW.2008.60]
   Tambe S, 2009, 16TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P11, DOI 10.1109/ECBS.2009.24
   Tao F, 2010, EUR J OPER RES, V201, P129, DOI 10.1016/j.ejor.2009.02.025
   Thakar U., 2012, METHODOLOGY COMPOSE
   Thien D., 2006, ISCC, V0, P371, DOI DOI 10.1109/ISCC.2006.53
   Thirumaran M, 2013, INT CONF RECENT, P674, DOI 10.1109/ICRTIT.2013.6844281
   Tofan D, 2014, INFORM SOFTWARE TECH, V56, P850, DOI 10.1016/j.infsof.2014.03.009
   TOMA I, 2006, P 1 WORKSH MIDDL SER, P42, DOI DOI 10.1145/1169091.1169098
   Tong ED, 2014, J NETW COMPUT APPL, V39, P38, DOI 10.1016/j.jnca.2013.04.002
   Torres R, 2013, INT WORK REAL ARTIF, P28, DOI 10.1109/RAISE.2013.6615201
   Tosi D, 2015, INFORM SOFTWARE TECH, V61, P16, DOI 10.1016/j.infsof.2015.01.007
   Tripathy A.K., 2011, P 2011 INT C INT SEM, P10, DOI [10.1145/1980822.1980832, DOI 10.1145/1980822.1980832]
   Vaithiyanathan R., 2015, COMPUT ELECT ENG
   Vesyropoulos N., 2012, P 5 BALK C INF NOV S, P130, DOI DOI 10.1145/2371316.2371341
   Wang DD, 2015, COMPUT ELECTR ENG, V43, P129, DOI 10.1016/j.compeleceng.2014.10.008
   Wang Denghui, 2013, 2013 IEEE Eighth International Conference on Networking, Architecture and Storage (NAS), P321, DOI 10.1109/NAS.2013.52
   Wang G, 2013, ASIA PAC SOFWR ENG, P67, DOI 10.1109/APSEC.2013.20
   Wang P, 2010, PROCEEDINGS OF 2010 INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY AND INDUSTRIAL ENGINEERING, VOLS I AND II, P687
   Watson A., 2008, EUR J INFORM PROFESS, VIX, P7
   Weis T, 2003, PROC INT CONF SOFTW, P759, DOI 10.1109/ICSE.2003.1201274
   Wiesemann W, 2008, IEEE ACM INT SYMP, P226
   Wu C, 2005, 2005 3RD IEEE INTERNATIONAL CONFERENCE ON INDUSTRIAL INFORMATICS (INDIN), P746
   Wu QW, 2014, J SYST SOFTWARE, V96, P194, DOI 10.1016/j.jss.2014.06.027
   Wu QW, 2013, FUTURE GENER COMP SY, V29, P1112, DOI 10.1016/j.future.2012.12.010
   Xinfeng Ye, 2008, 2008 IEEE International Conference on Web Services (ICWS), P62, DOI 10.1109/ICWS.2008.29
   Xiong PC, 2009, IEEE T AUTOM SCI ENG, V6, P311, DOI 10.1109/TASE.2008.2009103
   Xu RZ, 2013, SIMUL MODEL PRACT TH, V37, P43, DOI 10.1016/j.simpat.2013.05.008
   Yahyaoui H., 2011, PROCEDIA CS, V5, P610
   Yahyaoui H, 2012, KNOWL-BASED SYST, V27, P162, DOI 10.1016/j.knosys.2011.10.014
   Yan J, 2007, FUTURE GENER COMP SY, V23, P748, DOI 10.1016/j.future.2007.02.004
   Yao Y., 2009, P 2 INT C INT SCI IN, P358
   Ye Z, 2014, ACM T INTERNET TECHN, V14, P255, DOI 10.1145/2651420
   Ying-Qiu Li, 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P628, DOI 10.1109/ICWS.2012.28
   Yixin Yan, 2009, 2009 IEEE Conference on Commerce and Enterprise Computing, P523, DOI 10.1109/CEC.2009.44
   Yong Z.A., 2012, SERVICE ORIENTED COM, P1
   Yoo JJW, 2008, I W ADV ISS E COMMER, P347, DOI [10.1109/CEC/EEE.2008.65, 10.1109/CECandEEE.2008.144]
   Yoo T, 2010, EXPERT SYST APPL, V37, P3768, DOI 10.1016/j.eswa.2009.11.046
   Yukyong Kim, 2007, 2007 International Conference on Convergence Information Technology - ICCIT '07, P438
   Yuzhang Feng, 2013, 2013 IEEE 20th International Conference on Web Services (ICWS), P10, DOI 10.1109/ICWS.2013.12
   Zeigler B., 2013, GUIDE MODELING SIMUL, P205, DOI [10.1007/978-0-85729-865-2_14, DOI 10.1007/978-0-85729-865-2_14]
   Zernadji Tarek, 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P139, DOI 10.1109/WICSA.2014.35
   Zhao XC, 2012, APPL SOFT COMPUT, V12, P2208, DOI 10.1016/j.asoc.2012.03.040
   Zhongjie Wang, 2012, 2012 IEEE International Conference on Services Computing (SCC), P194, DOI 10.1109/SCC.2012.5
   Zhu L., 2006, IWSOSE 06, P33
NR 217
TC 4
Z9 4
U1 0
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2016
VL 69
BP 84
EP 105
DI 10.1016/j.infsof.2015.09.004
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CW5RA
UT WOS:000365053100006
DA 2024-07-18
ER

PT J
AU Fucci, D
   Turhan, B
   Juristo, N
   Dieste, O
   Tosun-Misirli, A
   Oivo, M
AF Fucci, Davide
   Turhan, Burak
   Juristo, Natalia
   Dieste, Oscar
   Tosun-Misirli, Ayse
   Oivo, Markku
TI Towards an operationalization of test-driven development skills: An
   industrial empirical study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Test-driven development; Process conformance; Software quality;
   Developers' productivity
ID EXPERIENCE
AB Context: The majority of the empirical studies on Test-driven development (TDD) are concerned with verifying or refuting the effectiveness of the technique over a traditional approach, and they tend to neglect whether the subjects possess the necessary skills to apply TDD, though they argue such skills are necessary.
   Objective: We evaluate a set of minimal, a priori and in process skills necessary to apply TDD. We determine whether variations in external quality (i.e., number of defects) and productivity (i.e., number of features implemented) can be associated with different clusters of the TDD skills' set.
   Method: We executed a quasi-experiment involving 30 practitioners from industry. We first grouped the participants according to their TDD skills' set (consisting of a priori experience on programming and testing as well as in-process TDD conformance) into three levels (Low-Medium-High) using k-means clustering. We then applied ANOVA to compare the clusters in terms of external quality and productivity, and conducted post-hoc pairwise analysis.
   Results: We did not observe a statistically significant difference between the clusters either for external software quality (F(2, 27 = 1.44, p = .260), or productivity (F(2, 27) = 3.02, p = .065). However, the analysis of the effect sizes and their confidence intervals shows that the TDD skills' set is a factor that could account for up to 28% of the external quality, and 38% for productivity.
   Conclusion: We have reason to conclude that focusing on the improvement of TDD skills' set investigated in this study could benefit software developers in improving their baseline productivity and the external quality of the code they produce. However, replications are needed to overcome the issues related with the statistical power of this study. We suggest practical insights for future work to investigate the phenomenon further. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Fucci, Davide; Turhan, Burak; Juristo, Natalia; Dieste, Oscar; Oivo, Markku] Univ Oulu, Grp M, Oulu 90014, Finland.
   [Juristo, Natalia] Univ Politecn Madrid, Escuela Tecn Super Ingenieros Informat, E-28660 Madrid, Spain.
   [Tosun-Misirli, Ayse] Istanbul Tech Univ, Fac Comp & Informat, TR-34469 Maslak, Turkey.
C3 University of Oulu; Universidad Politecnica de Madrid; Istanbul
   Technical University
RP Fucci, D (corresponding author), Univ Oulu, Grp M, Oulu 90014, Finland.
EM davide.fucci@oulu.fi
RI Dieste, Oscar/K-6193-2014; Turhan, Burak/G-7400-2011; Fucci,
   Davide/C-1463-2015; Tosun, Ayse/B-4794-2014
OI Dieste, Oscar/0000-0002-3060-7853; Turhan, Burak/0000-0003-1511-2163;
   Fucci, Davide/0000-0002-0679-4361; Tosun, Ayse/0000-0003-1859-7872;
   Oivo, Markku/0000-0002-1698-2323
FU Academy of Finland [278354]; Finnish Distinguished Professor
   (Fi.Di.Pro.) programme, ESEIL; Nokia Foundation; ISACA Finland; Academy
   of Finland (AKA) [278354] Funding Source: Academy of Finland (AKA)
FX This research is partially supported by the Academy of Finland with
   decision no.: 278354, and by Finnish Distinguished Professor
   (Fi.Di.Pro.) programme, ESEIL. The first author would like to
   acknowledge the Nokia Foundation and ISACA Finland chapter for the
   support provided in completing this work. We would like to acknowledge
   Dr. Lucas Layman who significantly contributed to the design of the task
   used in the study. We would like to acknowledge the anonymous reviewers
   for their helpful comments and detailed suggestions.
CR ADAIR JG, 1984, J APPL PSYCHOL, V69, P334, DOI 10.1037/0021-9010.69.2.334
   [Anonymous], 2010, MAKING SOFTWARE WHAT
   [Anonymous], 2012, EXPT SOFTWARE ENG CO
   [Anonymous], 1980, Multivariate analysis (probability and mathematical statistics)
   Astels Dave, 2003, Test-Driven Development: A Practical Guide
   Beck K, 2001, IEEE SOFTWARE, V18, P87, DOI 10.1109/52.951502
   Beck Kent L., 2003, Test Driven Development By Example
   Becker K, 2015, INFORM SOFTWARE TECH, V57, P494, DOI 10.1016/j.infsof.2014.06.003
   Bergersen GR, 2014, IEEE T SOFTWARE ENG, V40, P1163, DOI 10.1109/TSE.2014.2348997
   Causevic A., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P337, DOI 10.1109/ICST.2011.19
   COOK RD, 1981, TECHNOMETRICS, V23, P59, DOI 10.2307/1267976
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Diesing Paul., 1991, DOES SOCIAL SCI WORK
   Dieste O, 2013, IEEE-ACM INT WKSP CO, P2, DOI 10.1109/CESI.2013.6618462
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Fritz CO, 2012, J EXP PSYCHOL GEN, V141, P2, DOI 10.1037/a0024338
   Fucci D., 2015, P 19 INT C EV ASS SO, P1
   Fucci D., 2013, EMPIR SOFTW ENG, V19, P1
   Fucci D., 2015, LAB PACKAGE TDD EXPT
   Fucci D., 2014, 8 ACM IEEE INT S ESE, V10, P1
   Fucci Davide., 2014, ACM INT C PROCEEDING, DOI DOI 10.1145/2601248.2601272
   Graziotin D, 2013, LECT NOTES COMPUT SC, V7983, P50, DOI 10.1007/978-3-642-39259-7_7
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kou HB, 2010, AUTOMAT SOFTW ENG, V17, P57, DOI 10.1007/s10515-009-0058-8
   Latorre R, 2014, IEEE T SOFTWARE ENG, V40, P381, DOI 10.1109/TSE.2013.2295827
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Loftus GR, 1996, CURR DIR PSYCHOL SCI, V5, P161, DOI 10.1111/1467-8721.ep11512376
   Madeyski L., 2009, TEST DRIVEN DEV EMPI
   Meyerovich LA, 2013, ACM SIGPLAN NOTICES, V48, P1, DOI 10.1145/2509136.2509515
   Miller T., 2010, Practical Assessment Research and Evaluation, V15, P1, DOI DOI 10.7275/QBPC-GK17
   Misirli A., 2014, P 2 INT WORKSH COND, P25, DOI [10.1145/2593690.2593691, DOI 10.1145/2593690.2593691]
   Mohanani R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P895, DOI 10.1145/2568225.2568235
   Montgomery D. C., 2001, DESIGN ANAL EXPT, V7
   Müller MM, 2007, EMPIR SOFTW ENG, V12, P593, DOI 10.1007/s10664-007-9048-2
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Rafique Y, 2013, IEEE T SOFTWARE ENG, V39, P835, DOI 10.1109/TSE.2012.28
   Raudenbush SW, 2000, PSYCHOL METHODS, V5, P199, DOI 10.1037//1082-989X.5.2.199
   Salmon I., 2014, P 37 INT C SOFTW ENG, P666
   Sato D, 2008, AGILE 2008, PROCEEDINGS, P459, DOI 10.1109/Agile.2008.11
   Shadish W.R., 2003, Experimental and quasi-experimental designs for generalized causal inference
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   Snedecor GW, 1983, Statistical Methods, V6th
   Tan P.-T., 2005, Introduction to Data Mining, P487
   Thompson B., 2002, Educational Researcher, V31, P25
   Vodde B, 2007, IEEE SOFTWARE, V24, P74, DOI 10.1109/MS.2007.80
   Wang YH, 2004, LECT NOTES COMPUT SC, V3134, P32
   Weinberger M, 2001, MED CARE, V39, P627, DOI 10.1097/00005650-200106000-00010
   Yan M, 2007, BIOMETRICS, V63, P1031, DOI 10.1111/j.1541-0420.2007.00784.x
   Zazworka N, 2009, INT SYMP EMP SOFTWAR, P313
NR 50
TC 15
Z9 15
U1 0
U2 16
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2015
VL 68
BP 82
EP 97
DI 10.1016/j.infsof.2015.08.004
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT8OP
UT WOS:000363076200006
DA 2024-07-18
ER

PT J
AU Habibi, E
   Mirian-Hosseinabadi, SH
AF Habibi, Elahe
   Mirian-Hosseinabadi, Seyed-Hassan
TI Event-driven web application testing based on model-based mutation
   testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 40th Euromicro Conference on Software Engineering and Advanced
   Applications (SEAA)
CY AUG 27-29, 2014
CL Univ Verona, Dept Comp Sci, Verona, ITALY
SP Elsevier Informat & Software Technol Journal, EDALab s r l, Euromicro
HO Univ Verona, Dept Comp Sci
DE Event-driven software; Web application; Event; Test case generation;
   Functional graph; Mutation analysis
ID GENERATION; STATE
AB Context: Event-Driven Software (EDS) is a class of software whose behavior is driven by incoming events. Web and desktop applications that respond to user-initiated events on their Graphical User Interface (GUI), or embedded software responding to events and signals received from the equipment in its operating environment are examples of EDS. Testing EDS poses great challenges to software testers. One of these challenges is the need to generate a huge number of possible event sequences that could sufficiently cover the EDS's state space.
   Objective: In this paper, we introduce a new six-stage testing procedure for event-driven web applications to overcome EDS testing challenges.
   Method: The stages of the testing procedure include dividing the application based on its structure, creating functional graphs for each section, creating mutants from functional graphs, choosing coverage criteria to produce test paths, merging event sequences to make longer ones, and deriving and running test cases. We have analyzed our proposed testing procedure with the help of four metrics consisting of Fault Detection Density (FDD), Fault Detection Effectiveness (FDE), Mutation Score, and Unique Fault.
   Results: Using this procedure, we have prepared prioritized test cases and also discovered a list of unique faults by running the suggested test cases on a sample real-world web application called Academic E-mail System.
   Conclusion: We propose that our suggested testing procedure has some advantages such as creating functional graphs with requirements document, resolving the problem of removing infeasible test cases with these graphs and conditions on the "add edge" operator before creating mutants. But the suggested testing procedure, like any other method, had some drawbacks. Because most of the stages in the approach were performed manually, the testing time was increased. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Habibi, Elahe; Mirian-Hosseinabadi, Seyed-Hassan] Sharif Univ Technol, Dept Comp Engn, Tehran, Iran.
C3 Sharif University of Technology
RP Mirian-Hosseinabadi, SH (corresponding author), Sharif Univ Technol, Dept Comp Engn, Azadi Ave,Room 807,CE New Bldg, Tehran, Iran.
EM ehabibi@alum.sharif.edu; hmirian@sharif.edu
RI Habibi, Elahe/AAD-8521-2021; Mirian-Hosseinabadi,
   Seyed-Hassan/AAE-9963-2021
OI Habibi, Elahe/0000-0002-1497-9358
FU Sharif University of Technology - Iran
FX We would like to thank Mr. A. Jalali for guidance and editing and Dr. L.
   Habibi for her help on formatting. This research has been supported by a
   Grant from Sharif University of Technology - Iran.
CR Aichernig Bernhard K., 2013, Tests and Proofs. 7th International Conference, TAP 2013. Proceedings: LNCS 7942, P20, DOI 10.1007/978-3-642-38916-0_2
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 2010, INT C SOFTWARE TESTI
   Belli F, 2006, SOFTW TEST VERIF REL, V16, P3, DOI 10.1002/stvr.335
   Belli Fevzi, 2010, Proceedings 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2010), P121, DOI 10.1109/SSIRI.2010.23
   Belli F, 2011, P INT COMP SOFTW APP, P650, DOI 10.1109/COMPSAC.2011.90
   Belli F, 2009, 2009 THIRD IEEE INTERNATIONAL CONFERENCE ON SECURE SOFTWARE INTEGRATION AND RELIABILITY IMPROVEMENT, PROCEEDINGS, P387, DOI 10.1109/SSIRI.2009.50
   Beyazit Mutlu, 2010, LECT NOTES INFORM, P327
   Bozzon A., 2006, P 6 INT C WEB ENG IC, P353
   Brahma S., 2010, 2 INT C IT BUS INT I, V32
   Bryce RC, 2011, IEEE T SOFTWARE ENG, V37, P48, DOI 10.1109/TSE.2010.12
   Ding X.L., 2002, T TIANJIN U, V8, P265
   Farrell J, 2007, ITI, P413
   Herbold S., 2011, 2011 5th International Conference on Secure Software Integration & Reliability Improvement Companion, P172, DOI 10.1109/SSIRI-C.2011.32
   Herbold S, 2013, IEEE ICST WORKSHOP, P134, DOI 10.1109/ICSTW.2013.23
   Herbold Steffen, 2012, THESIS NIEDERSACHSIS
   Isabella A., 2012, STUDY PAPER TEST CAS
   JEFFERSON A, 1994, INTERNATIONAL TEST CONFERENCE 1994, PROCEEDINGS, P824, DOI 10.1109/TEST.1994.528535
   Jhamb Megha, 2013, INT J SCI RES PUBL, V4, P513
   Konda Kalyana Rao, 2005, SOFTW TEST PERFORM, V2, P35
   Lee Kent D., 2010, PYTHON PROGRAMMING F
   Li P, 2007, EMPIR SOFTW ENG, V12, P331, DOI 10.1007/s10664-006-9031-3
   Memon A.M., 2004, P OOPSLA 2004 WORKSH
   Memon AM, 2001, IEEE T SOFTWARE ENG, V27, P144, DOI 10.1109/32.908959
   Memon AM, 2007, SOFTW TEST VERIF REL, V17, P137, DOI 10.1002/stvr.364
   Okin J. R., 2005, INFORM REVOLUTION NO
   Pargas R. P., 1999, Software Testing, Verification and Reliability, V9, P263, DOI 10.1002/(SICI)1099-1689(199912)9:4<263::AID-STVR190>3.0.CO;2-Y
   Paulson LD, 2005, COMPUTER, V38, P14, DOI 10.1109/MC.2005.330
   Roongruangsuwan S., 2010, J. Software Eng, V4, P193, DOI [10.3923/jse.2010.193.214, DOI 10.3923/JSE.2010.193.214]
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Tonella P, 2004, J SOFTW MAINT EVOL-R, V16, P103, DOI 10.1002/smr.284
   Xie Q, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1416563.1416567
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Yuan X., 2007, P INT C AUTOMATED SO, P405
   Yuan X, 2007, PROC INT CONF SOFTW, P396
   Yuan X, 2011, IEEE T SOFTWARE ENG, V37, P559, DOI 10.1109/TSE.2010.50
   Yuan X, 2010, IEEE T SOFTWARE ENG, V36, P81, DOI 10.1109/TSE.2009.68
   Yuan X, 2009, IEEE ICST WORKSHOP, P263, DOI 10.1109/ICSTW.2009.26
NR 38
TC 9
Z9 12
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2015
VL 67
BP 159
EP 179
DI 10.1016/j.infsof.2015.07.003
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA CT2AO
UT WOS:000362604600009
DA 2024-07-18
ER

PT J
AU Tiwari, S
   Gupta, A
AF Tiwari, Saurabh
   Gupta, Atul
TI A systematic literature review of use case specifications research
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Use case specifications; Use case templates; Guidelines; Systematic
   reviews; Evolution; Quality
ID SOFTWARE REQUIREMENTS; EMPIRICAL-EVALUATION; QUALITY; CONSTRUCTION;
   GENERATION; DIAGRAMS; MODELS
AB Context: Use cases have been widely accepted and acknowledged as a specification tool for specifying the functional requirements of a software system. Many variations of use cases exist which tries to address the issues such as their completeness, degree of formalism, automated information extraction, usability, and pertinence.
   Objective: The aim of this systematic review is to examine the existing literature for the evolution of the use cases, their applications, quality assessments, open issues, and the future directions.
   Method: We perform keyword-based extensive search to identify the relevant studies related to use case specifications research reported in journal articles, conference papers, workshop papers, bulletins and book chapters.
   Results: The specified search process resulted 119 papers, which were published between 1992 and February 2014. This included, 54 journal articles, 42 conference papers, 2 ACM/IEEE bulletins, 12 book chapters, 6 workshop papers and 3 white papers. We found that as many as twenty use case templates have been proposed and applied for various software specification problems ranging from informal descriptions with paragraph-style text to more formal keyword-oriented templates.
   Conclusion: Use cases have been evolved from initial plain, semi-formal textual descriptions to a more formal template structure facilitating automated information extraction in various software development life cycle activities such as requirement documentation, requirement analysis, requirement validation, domain modeling, test case generation, planning and estimation, and maintenance. The issues that remain to be sorted out are (1) the right degree of formalism, (2) the efficient change management, (3) the industrial relevance, and (4) assessment of the quality of the specification. Additionally, its synergy with other software models that are used in the development processes is an issue that needs to be addressed. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Tiwari, Saurabh; Gupta, Atul] Indian Inst Informat Technol Design & Mfg, Jabalpur, India.
C3 Indian Institute of Information Technology Design & Manufacturing,
   Jabalpur
RP Tiwari, S (corresponding author), Indian Inst Informat Technol Design & Mfg, Jabalpur, India.
EM saurabh.tiwari@iiitdmj.ac.in; atul@iiitdmj.ac.in
RI Gupta, Atul/ABB-8611-2020
OI Gupta, Atul/0000-0001-5051-5887; Tiwari, Saurabh/0000-0002-2741-3150
CR Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Achour CB, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P36, DOI 10.1109/ISRE.1999.777983
   Adolph S., 2003, PATTERNS EFFECTIVE U
   Alchimowicz B, 2010, COMPUT INFORM, V29, P27
   Alexander I, 2003, IEEE SOFTWARE, V20, P58, DOI 10.1109/MS.2003.1159030
   Alexander I. F., 2002, Writing Better Requirements
   Anda B., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P402
   Anda B, 2005, EMPIR SOFTW ENG, V10, P285, DOI 10.1007/s10664-005-1289-3
   Anda B, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P50, DOI 10.1109/ISESE.2003.1237964
   Anda B., 2001, P 4 INT C UNIFIED MO, P487
   Anda B., 2002, SEKE 02, P127
   Anda B, 2009, INFORM SOFTWARE TECH, V51, P1699, DOI 10.1016/j.infsof.2009.04.005
   Anda B, 2006, EMPIR SOFTW ENG, V11, P555, DOI 10.1007/s10664-006-9020-6
   Anderson B, 2005, J OBJECT TECHNOL, V4, P15, DOI 10.5381/jot.2005.4.6.a2
   [Anonymous], 2005, COMP 20 ANN ACM SIGP
   [Anonymous], P PROSIM 03 INT WORK
   [Anonymous], 2007, GETTING STARTED USE
   [Anonymous], P ACM IEEE INT S EMP
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 2004, The rational unified process: an introduction
   [Anonymous], J OBJECT ORIENTED PR
   [Anonymous], UCDA USE CASE DRIVEN
   [Anonymous], P BEG BORR STEAL WOR
   [Anonymous], 1993, OBJECTIVE SYSTEMS SF
   [Anonymous], 1998, Applying Use Cases: A Practical Guide
   [Anonymous], USE CASE BASED SOFTW
   [Anonymous], J OBJECT ORIENTED PR
   [Anonymous], P INT C REC ADV NAT
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 1999, SOFTW DEV
   [Anonymous], P 7 INT C SOFTW ENG
   [Anonymous], 2003, P 7 INT C EMP ASS SO
   [Anonymous], P 20 AS PAC SOFTW EN
   [Anonymous], 1997, Requirements engineering: a good practice guide
   [Anonymous], ISO9126
   [Anonymous], P 6 INT C EMP ASS SO
   [Anonymous], 2005 INT S EMP SOFTW
   [Anonymous], 1998, REFACTORING SOFTWARE
   [Anonymous], BIG PICTURE
   [Anonymous], 2002, Use Case Modeling
   [Anonymous], P 21 IEEE INT REQ EN
   [Anonymous], EBSE200701
   [Anonymous], J OBJECT ORIENTED PR
   [Anonymous], SOFTWARE ENG PRATITI
   [Anonymous], P 2 INT WORKSH US CA
   [Anonymous], P 11 INT WORKSH REQ
   Anton A. I., 2001, Requirements Engineering, V6, P63, DOI 10.1007/PL00010356
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Armour F., 2000, ADV USE CASE MODELIN
   Bernárdez B, 2004, J RES PRACT INF TECH, V36, P247
   Boehm B, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P156
   Brace W, 2014, REQUIR ENG, V19, P1, DOI 10.1007/s00766-012-0154-3
   Braz MR, 2006, P INT COMP SOFTW APP, P221
   BRIAND LC, 2002, SOFTW SYST MODEL, V1, P10, DOI [10.1007/s10270-002-0004-8, DOI 10.1007/S10270-002-0004-8]
   Ciemniewska A, 2007, LECT NOTES COMPUT SC, V4439, P424
   Cockburn A., 2001, Writing effective use cases, V1
   Cox K, 2004, J RES PRACT INF TECH, V36, P211
   Cox K., 2000, Empirical Software Engineering, V5, P245, DOI 10.1023/A:1026542700033
   Cox K., 2001, 7th Int. Workshop on Requirements Engineering, P101
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   do P. Leite J. C. S., 2000, Requirements Engineering, V5, P38, DOI 10.1007/PL00010342
   Dutoit A. H., 2002, Requirements Engineering, V7, P3, DOI 10.1007/s007660200001
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   El-Attar M, 2008, SOFTW SYST MODEL, V7, P67, DOI 10.1007/s10270-006-0039-3
   El-Attar M, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P346, DOI 10.1109/SERA.2006.10
   El-Attar M, 2012, REQUIR ENG, V17, P187, DOI 10.1007/s00766-011-0135-y
   El-Attar M, 2010, SOFTW SYST MODEL, V9, P141, DOI 10.1007/s10270-009-0112-9
   El-Attar M, 2009, EMPIR SOFTW ENG, V14, P477, DOI 10.1007/s10664-008-9101-9
   España S, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P161, DOI 10.1109/RE.2009.33
   Fantechi A., 2003, Requirements Engineering, V8, P161, DOI 10.1007/s00766-003-0174-0
   Fleisch W, 1999, 2ND IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING (ISORC'99), PROCEEDINGS, P75, DOI 10.1109/ISORC.1999.776354
   Fortuna MH, 2008, INT REQUIR ENG CONF, P81, DOI 10.1109/RE.2008.43
   Fröhlich P, 2000, LECT NOTES COMPUT SC, V1850, P472
   Fusaro P., 1997, Empirical Software Engineering, V2, P39, DOI 10.1023/A:1009742216007
   Génova G, 2005, LECT NOTES COMPUT SC, V3297, P52
   Génova G, 2013, REQUIR ENG, V18, P25, DOI 10.1007/s00766-011-0134-z
   Georgiades M. G., 2012, OPEN SOFTW ENG J, V6, P21
   Graham I., 1998, REQUIREMENTS ENG RAP
   Hansen KM, 1998, IEEE T SOFTWARE ENG, V24, P573, DOI 10.1109/32.708570
   Hausmann JH, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P105, DOI 10.1109/ICSE.2002.1007960
   Helmer G., 2002, Requirements Engineering, V7, P207, DOI 10.1007/s007660200016
   Hurlbut R., 1997, SURVEY APPROACHES DE
   Hurlbut R.R., 1997, The Three R's of Use Case Formalisms: Realization, Refinement, and Reification
   Ilieva MG, 2005, LECT NOTES COMPUT SC, V3513, P392
   Insfran E., 2002, Requirements Engineering, V7, P61, DOI 10.1007/s007660200005
   Issa A, 2006, INFORM SOFTWARE TECH, V48, P836, DOI 10.1016/j.infsof.2005.10.005
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Ivarsson M, 2009, REQUIR ENG, V14, P155, DOI 10.1007/s00766-009-0080-1
   Jacobson A., 2004, Software and System Modeling, V3, P210, DOI [10.1007/s10270-004-0060-3, DOI 10.1007/S10270-004-0060-3]
   JACOBSON I, 1987, SIGPLAN NOTICES, V22, P183, DOI 10.1145/38807.38824
   Kamal MW, 2011, COMM COM INF SC, V181, P735
   Kamsties E, 2003, INFORM SOFTWARE TECH, V45, P955, DOI 10.1016/S0950-5849(03)00098-3
   Kanyaru JM, 2009, REQUIR ENG, V14, P1, DOI 10.1007/s00766-008-0070-8
   Kimour MT, 2005, INFORM SOFTWARE TECH, V47, P533, DOI 10.1016/j.infsof.2004.10.003
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Kitchenham B., 2004, Procedures for performing systematic literature reviews, P33
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kulak D., 2012, Use Cases: Requirements in Context
   Larman C., 2012, Applying UML and Patterns: An Introduction to Object Oriented Analysis and Design and Interative Development
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   Lee J, 1999, IEEE SOFTWARE, V16, P92, DOI 10.1109/52.776956
   Liang Y, 2003, INFORM SOFTWARE TECH, V45, P83, DOI 10.1016/S0950-5849(02)00164-7
   Lilly S., 1999, Proceedings of Technology of Object-Oriented Languages and Systems - TOOLS 30 (Cat. No.PR00278), P174, DOI 10.1109/TOOLS.1999.787547
   Liu D, 2003, CCECE 2003: CANADIAN CONFERENCE ON ELECTRICAL AND COMPUTER ENGINEERING, VOLS 1-3, PROCEEDINGS, P831
   McCoy J.R., 2003, Companion of the 18th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, P104
   Miller J., 1998, Empirical Software Engineering, V3, P37, DOI 10.1023/A:1009735805377
   Misbhauddin M, 2015, SOFTW SYST MODEL, V14, P813, DOI 10.1007/s10270-013-0333-9
   Mohagheghi P, 2005, PROC INT CONF SOFTW, P303
   Molina JG, 2000, LECT NOTES COMPUT SC, V1920, P281
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   Ochodek M, 2011, INFORM SOFTWARE TECH, V53, P200, DOI 10.1016/j.infsof.2010.10.005
   Offutt J, 1999, LECT NOTES COMPUT SC, V1723, P416
   Ottensooser A, 2012, J SYST SOFTWARE, V85, P596, DOI 10.1016/j.jss.2011.09.023
   Övergaard G, 1999, LECT NOTES COMPUT SC, V1618, P406
   Overgraad G., 2005, Use Cases Patterns and Blueprints
   Parachuri D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P14, DOI 10.1145/2591062.2591174
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Phalp K, 2001, OOIS 2001: 7TH INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED INFORMATION SYSTEMS, PROCEEDINGS, P329
   Phalp KT, 2007, SOFTWARE QUAL J, V15, P69, DOI 10.1007/s11219-006-9006-z
   Phalp KT, 2007, SOFTWARE QUAL J, V15, P383, DOI 10.1007/s11219-007-9023-6
   PORTER AA, 1995, IEEE T SOFTWARE ENG, V21, P563, DOI 10.1109/32.391380
   Rago A, 2013, REQUIR ENG, V18, P67, DOI 10.1007/s00766-011-0142-z
   Ratcliffe M, 2005, INFORM SOFTWARE TECH, V47, P623, DOI 10.1016/j.infsof.2004.11.003
   Regnell B., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P40, DOI 10.1109/ISRE.1995.512544
   Rodríguez A, 2010, INFORM SOFTWARE TECH, V52, P945, DOI 10.1016/j.infsof.2010.03.015
   Rolland C, 1998, DATA KNOWL ENG, V25, P125, DOI 10.1016/S0169-023X(97)86223-4
   Rui K., 2003, P 25 AUSTRALASIAN CO, P301
   Saeki M., 1999, Proceedings Sixth Asia Pacific Software Engineering Conference (ASPEC'99) (Cat. No.PR00509), P309, DOI 10.1109/APSEC.1999.809617
   Santander VFA, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P32, DOI 10.1109/ICRE.2002.1048503
   Savic D, 2011, IEEE ANNU SOFTW ENG, P19, DOI 10.1109/SEW.2011.9
   Siau K, 2004, REQUIR ENG, V9, P229, DOI 10.1007/s00766-004-0203-7
   Sinha Avik, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P155, DOI 10.1109/ICST.2010.19
   Sinha A, 2009, I C DEPEND SYS NETWO, P327, DOI 10.1109/DSN.2009.5270320
   Somé SS, 2006, INFORM SOFTWARE TECH, V48, P43, DOI 10.1016/j.infsof.2005.02.006
   Somé SS, 2010, INT J SOFTW ENG KNOW, V20, P695, DOI 10.1142/S0218194010004931
   Syversen E., 2003, 36th Hawaii International Conference on Systems Sciences
   Tena S, 2013, INFORM SOFTWARE TECH, V55, P1580, DOI 10.1016/j.infsof.2013.02.012
   Thelin T, 2003, IEEE T SOFTWARE ENG, V29, P687, DOI 10.1109/TSE.2003.1223644
   Tiwari S, 2014, PROCEEDINGS OF THE 7TH INDIA SOFTWARE ENGINEERING CONFERENCE 2014, ISEC '14, DOI 10.1145/2590748.2590754
   Tiwari S, 2012, IEEE INT C ENG COMP, P29, DOI 10.1109/ICECCS.2012.10
   Toro A.D., 1999, WORKSHOP ENGENHARIA, P17
   van den Berg KG, 1999, INFORM SOFTWARE TECH, V41, P651, DOI 10.1016/S0950-5849(99)00027-0
   Whittle J, 2007, LECT NOTES COMPUT SC, V4422, P170
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Yue T, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430539
   Yue T, 2011, REQUIR ENG, V16, P75, DOI 10.1007/s00766-010-0111-y
   Yue T, 2010, LECT NOTES COMPUT SC, V6138, P337
NR 150
TC 56
Z9 59
U1 3
U2 41
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2015
VL 67
BP 128
EP 158
DI 10.1016/j.infsof.2015.06.004
PG 31
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT2AO
UT WOS:000362604600008
DA 2024-07-18
ER

PT J
AU Saleh, F
   El-Attar, M
AF Saleh, Faisal
   El-Attar, Mohamed
TI A scientific evaluation of the misuse case diagrams visual syntax
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Misuse cases diagrams; Visual syntax; Cognitive evaluation
ID COGNITIVE EFFECTIVENESS; DIMENSIONS; SECURITY; REQUIREMENTS; UML
AB Context: Misuse case modeling is a well-known technique in the domain of capturing and specifying functional security requirements. Misuse case modeling provides a mechanism for security analysts to consider and account for security requirements in the early stages of a development process instead of relying on generic defensive mechanisms that are augmented to software systems towards the latter stages of development.
   Objective: Many research contributions in the area of misuse case modeling have been devoted to extending the notation to increase its coverage of additional security related semantics. However, there lacks research that evaluates the perception of misuse case models by its readers. A misread or misinterpreted misuse case model can have dire consequences downstream leading to the development of an insecure system.
   Method: This paper presents an assessment of the design of the original misuse case modeling notation based on the Physics of Notations framework. A number of improvements to the notation were suggested. A survey and a controlled experiment were carried out to compare the cognitive effectiveness of the new notation in comparison to the original notation.
   Results: The survey had 55 participants for have mostly indicated that the new notation is more semantically transparent than the original notation. The results of the experiment show that subjects reading diagrams developed using the new notation performed their tasks an average 6 min quicker, while in general the subjects performed their tasks in approximately 14.5 min. The experimental tasks only required subjects reading diagrams and not creating them.
   Conclusion: The main finding of this paper is that the use of colors and icons has improved the readability of misuse case diagrams. Software engineering notations are usually black and white. It is expected that the readability of other software notations will improve if they utilize colors and icons. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Saleh, Faisal; El-Attar, Mohamed] King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran 31261, Saudi Arabia.
   [El-Attar, Mohamed] Mississippi State Univ, Dept Comp Sci & Engn, Mississippi State, MS 39762 USA.
C3 King Fahd University of Petroleum & Minerals; Mississippi State
   University
RP El-Attar, M (corresponding author), King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, POB 5066, Dhahran 31261, Saudi Arabia.
EM faisal86@me.com; melattar@kfupm.edu.sa
RI El-Attar, Mohamed/C-4329-2015
FU Deanship of Scientific Research (DSR) at King Fahd University of
   Petroleum and Minerals (KFUPM) [IN141010]
FX The authors would like to thank the Deanship of Scientific Research
   (DSR) at King Fahd University of Petroleum and Minerals (KFUPM) for
   funding this research through project number #IN141010. We would like to
   thank the software engineering professionals and academics who
   participated in the survey. We would also like to thank the students who
   partake in the experiment.
CR [Anonymous], J SYST SOFTW
   [Anonymous], P 3 IEEE INT S REQ E
   [Anonymous], HCI MODELS THEOR FAR
   [Anonymous], TECHNICAL REPORT
   [Anonymous], REPLICATION PACKAGE
   [Anonymous], 1996, P IFIP INT C ICT SYS
   [Anonymous], 1990, MENTAL REPRESENTATIO, DOI DOI 10.1093/ACPROF:OSO/9780195066661.001.0001
   [Anonymous], MANAGE SCI
   [Anonymous], 1981, INFORM ENG
   [Anonymous], 2005, Secure Systems Development with UML
   [Anonymous], 12 WORK C REQ ENG FD
   Bertin J, 1983, IN PRESS
   BIEDERMAN I, 1987, PSYCHOL REV, V94, P115, DOI 10.1037/0033-295X.94.2.115
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   BROWN MB, 1974, J AM STAT ASSOC, V69, P364, DOI 10.2307/2285659
   Buhr R.J. A., 1996, USE CASE MAPS OBJECT
   Buhr RJA, 1998, IEEE T SOFTWARE ENG, V24, P1131, DOI 10.1109/32.738343
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cliff N, 1996, MULTIVAR BEHAV RES, V31, P331, DOI 10.1207/s15327906mbr3103_4
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Dagit J, 2006, J VISUAL LANG COMPUT, V17, P302, DOI 10.1016/j.jvlc.2006.04.006
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Genon N, 2011, LECT NOTES COMPUT SC, V6598, P221, DOI 10.1007/978-3-642-21652-7_14
   Genon N, 2011, LECT NOTES COMPUT SC, V6563, P377, DOI 10.1007/978-3-642-19440-5_25
   Gopalakrishnan S, 2010, LECT NOTES BUS INF P, V68, P145
   Green D., 1966, SIGNAL DETECTION THE
   Green TRG, 2006, J VISUAL LANG COMPUT, V17, P328, DOI 10.1016/j.jvlc.2006.04.004
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Hall T., 2002, Software Process Improvement and Practice, V7, P3, DOI 10.1002/spip.150
   Hitchman S., 2002, Commun. Assoc. Inf. Syst, V9, P10
   Karpati P, 2010, LECT NOTES COMPUT SC, V6182, P262, DOI 10.1007/978-3-642-14192-8_24
   Khan SU, 2012, IET SOFTW, V6, P1, DOI 10.1049/iet-sen.2010.0038
   Kromrey J.D., 2005, American Statistical Association 2005 Joint Statistical Meetings, P7
   Kromrey J.D., 1998, Multiple Linear Regression Viewpoints, V25, P70
   Lee JT, 1997, IEEE EXPERT, V12, P78, DOI 10.1109/64.592267
   Lehtonen MO, 2007, IEEE SYST J, V1, P129, DOI 10.1109/JSYST.2007.909820
   Mäder P, 2010, LECT NOTES COMPUT SC, V6394, P226
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Moody D, 2009, LECT NOTES COMPUT SC, V5452, P16, DOI 10.1007/978-3-642-00434-6_3
   Moody DL, 2010, REQUIR ENG, V15, P141, DOI 10.1007/s00766-010-0100-1
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   Purchase H. C., 2002, Empirical Software Engineering, V7, P233, DOI 10.1023/A:1016344215610
   Purchase HC, 2004, INT J HUM-COMPUT ST, V61, P187, DOI 10.1016/j.ijhcs.2004.01.003
   Raspotnig C, 2013, J SYST SOFTWARE, V86, P1124, DOI 10.1016/j.jss.2012.12.002
   Regev G, 2005, BUS PROCESS MANAG J, V11, P695, DOI 10.1108/14637150510630864
   Reijers HA, 2011, IEEE T SYST MAN CY A, V41, P449, DOI 10.1109/TSMCA.2010.2087017
   Scaife M, 1996, INT J HUM-COMPUT ST, V45, P185, DOI 10.1006/ijhc.1996.0048
   SHAPIRO SS, 1972, TECHNOMETRICS, V14, P355, DOI 10.2307/1267427
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Sindre G, 2007, LECT NOTES COMPUT SC, V4542, P355
   Wohlin C., 2000, Kluwer Int. Ser. Softw. Eng
NR 53
TC 17
Z9 17
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2015
VL 66
BP 73
EP 96
DI 10.1016/j.infsof.2015.05.002
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CN8OG
UT WOS:000358699900006
DA 2024-07-18
ER

PT J
AU Nair, S
   de la Vara, JL
   Sabetzadeh, M
   Falessi, D
AF Nair, Sunil
   de la Vara, Jose Luis
   Sabetzadeh, Mehrdad
   Falessi, Davide
TI Evidence management for compliance of critical systems with safety
   standards: A survey on the state of practice
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Safety-critical systems; Safety certification; Safety assurance; Safety
   evidence; State of the practice
ID FORMAL METHODS; SOFTWARE; CERTIFICATION
AB Context: Demonstrating compliance of critical systems with safety standards involves providing convincing evidence that the requirements of a standard are adequately met. For large systems, practitioners need to be able to effectively collect, structure, and assess substantial quantities of evidence.
   Objective: This paper aims to provide insights into how practitioners deal with safety evidence management for critical computer-based systems. The information currently available about how this activity is performed in the industry is very limited.
   Method: We conducted a survey to determine practitioners' perspectives and practices on safety evidence management. A total of 52 practitioners from 15 countries and 11 application domains responded to the survey. The respondents indicated the types of information used as safety evidence, how evidence is structured and assessed, how evidence evolution is addressed, and what challenges are faced in relation to provision of safety evidence.
   Results: Our results indicate that (1) V&V artefacts, requirements specifications, and design specifications are the most frequently used safety evidence types, (2) evidence completeness checking and impact analysis are mostly performed manually at the moment, (3) text-based techniques are used more frequently than graphical notations for evidence structuring, (4) checklists and expert judgement are frequently used for evidence assessment, and (5) significant research effort has been spent on techniques that have seen little adoption in the industry. The main contributions of the survey are to provide an overall and upto-date understanding of how the industry addresses safety evidence management, and to identify gaps in the state of the art.
   Conclusion: We conclude that (1) V82V plays a major role in safety assurance, (2) the industry will clearly benefit from more tool support for collecting and manipulating safety evidence, and (3) future research on safety evidence management needs to place more emphasis on industrial applications. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Nair, Sunil; de la Vara, Jose Luis] Certus Ctr Software V&V, Simula Res Lab, N-1325 Lysaker, Norway.
   [Sabetzadeh, Mehrdad] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-2721 Luxembourg, Luxembourg.
   [Falessi, Davide] Fraunhofer Ctr Expt Software Engn, College Pk, MD 20740 USA.
C3 University of Luxembourg
RP Nair, S (corresponding author), Certus Ctr Software V&V, Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
EM sunil@simula.no; jdelavara@simula.no; mehrdad.sabetzadeh@uni.lu;
   dfalessi@fc-md.umd.edu
RI de la Vara, Jose Luis/A-7678-2018
OI de la Vara, Jose Luis/0000-0003-1813-398X; Sabetzadeh,
   Mehrdad/0000-0002-4711-8319
FU FP7 programme [289011]; Research Council of Norway under the project
   Certus SFI; National Research Fund of Luxembourg (Validation and
   Verification Laboratory) [FNR/P10/03]
FX The research leading to this paper has received funding from the FP7
   programme under the Grant Agreement No. 289011 (OPENCOSS), the Research
   Council of Norway under the project Certus SFI, and the National
   Research Fund of Luxembourg (FNR/P10/03 - Validation and Verification
   Laboratory). The authors would also like to thank the OPENCOSS partners
   who participated in instrument evaluation, and all the individuals who
   participated in the survey.
CR [Anonymous], 2005, 61508 IEC
   [Anonymous], BILLS MAT LEAN ENTER
   [Anonymous], 50129 CENELEC EN
   [Anonymous], 2010, Design and Safety Assessment of Critical Systems
   [Anonymous], P 19 ACM SIGSOFT S 1
   Bate I, 2003, RELIAB ENG SYST SAFE, V81, P303, DOI 10.1016/S0951-8320(03)00094-2
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Bouissou M, 1999, P A REL MAI, P142, DOI 10.1109/RAMS.1999.744110
   Buckley F, 1996, IMPLEMENTING CONFIGU
   de Mello Rafael M., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P279, DOI 10.1109/ESEM.2013.33
   Dodd I, 2012, RELIAB ENG SYST SAFE, V98, P7, DOI 10.1016/j.ress.2011.09.007
   Ericson C., 2011, Concise Encyclopedia of System Safety: Definition of Terms and Concepts
   Eriksson LH, 2004, LECT NOTES COMPUT SC, V3219, P31
   ISO, 2011, 26262 ISO ISODIS
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Kanij T, 2013, IEEE-ACM INT WKSP CO, P63, DOI 10.1109/CESI.2013.6618474
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Kornecki A, 2009, INNOV SYST SOFTW ENG, V5, P149, DOI 10.1007/s11334-009-0088-1
   LIU SY, 1995, J SYST SOFTWARE, V28, P77, DOI 10.1016/0164-1212(94)00082-X
   Nair S., 2014, TECHNICAL REPORT
   Nair S, 2014, INFORM SOFTWARE TECH, V56, P689, DOI 10.1016/j.infsof.2014.03.001
   OPENCOSS, 2012, D4 1 BAS COMM CERT L
   OPENCOSS, 2012, D7 1 BAS PROC SPEC N
   OPENCOSS, 2012, D5 1 BAS COMP CERT A
   OPENCOSS, 2012, D6 1 BAS EV MAN NEED
   Panesar-Walawege Rajwinder Kaur, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P335, DOI 10.1109/ICST.2010.12
   Panesar-Walawege RK, 2013, INFORM SOFTWARE TECH, V55, P836, DOI 10.1016/j.infsof.2012.11.009
   Robson C., 2002, Real World Research, V2nd
   RTCA, 2012, DO178C RTCA
   SafeCer, 2011, DEL D1 0 1 STAT OF P
   Siegle D., 2010, Likert scale
   Törner F, 2008, IEEE HI ASS SYS ENGR, P313, DOI 10.1109/HASE.2008.44
   Wilson S. P., 1997, Safety and Reliability of Software Based Systems. Twelfth Annual CSR Workshop, P135
   Wohlin C., 2012, Experimentation in Software Engineering
   Wright KB, 2005, J COMPUT-MEDIAT COMM, V10
NR 35
TC 47
Z9 48
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2015
VL 60
BP 1
EP 15
DI 10.1016/j.infsof.2014.12.002
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CB6IC
UT WOS:000349729700001
DA 2024-07-18
ER

PT J
AU Fernández, DM
   Wagner, S
AF Fernandez, Daniel Mendez
   Wagner, Stefan
TI Naming the pain in requirements engineering: A design for a global
   family of surveys and first results from Germany
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 17th International Conference on Evaluation and Assessment in software
   Engineering
CY APR 14-16, 2013
CL Porto de Galinhas, BRAZIL
DE Requirements engineering; Survey research; Family of surveys
ID QUALITY
AB Context: For many years, we have observed industry struggling in defining a high quality requirements engineering (RE) and researchers trying to understand industrial expectations and problems. Although we are investigating the discipline with a plethora of empirical studies, they still do not allow for empirical generalisations.
   Objective: To lay an empirical and externally valid foundation about the state of the practice in RE, we aim at a series of open and reproducible surveys that allow us to steer future research in a problem-driven manner.
   Method: We designed a globally distributed family of surveys in joint collaborations with different researchers and completed the first run in Germany. The instrument is based on a theory in the form of a set of hypotheses inferred from our experiences and available studies. We test each hypothesis in our theory and identify further candidates to extend the theory by correlation and Grounded Theory analysis.
   Results: In this article, we report on the design of the family of surveys, its underlying theory, and the full results obtained from Germany with participants from 58 companies. The results reveal, for example, a tendency to improve RE via internally defined qualitative methods rather than relying on normative approaches like CMMI. We also discovered various RE problems that are statistically significant in practice. For instance, we could corroborate communication flaws or moving targets as problems in practice. Our results are not yet fully representative but already give first insights into current practices and problems in RE, and they allow us to draw lessons learnt for future replications.
   Conclusion: Our results obtained from this first run in Germany make us confident that the survey design and instrument are well-suited to be replicated and, thereby, to create a generalisable empirical basis of RE in practice. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Fernandez, Daniel Mendez] Tech Univ Munich, Inst Informat, D-85748 Garching, Germany.
   [Wagner, Stefan] Univ Stuttgart, Inst Software Technol, Software Engn Grp, D-70569 Stuttgart, Germany.
C3 Technical University of Munich; University of Stuttgart
RP Fernández, DM (corresponding author), Tech Univ Munich, Inst Informat, Boltzmannstr 3, D-85748 Garching, Germany.
EM mendezfe@in.tum.de
RI Mendez, Daniel/ABA-4579-2021; Wagner, Stefan/A-5200-2018
OI Mendez, Daniel/0000-0003-0619-6027; Wagner, Stefan/0000-0002-5256-8429
CR Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   [Anonymous], 24744 ISOIEC
   Beecham S, 2003, EMPIR SOFTW ENG, V8, P7, DOI 10.1023/A:1021764731148
   Birks M., 2011, Grounded Theory: A Practical Guide
   Broy M, 2006, LECT NOTES COMPUT SC, V4263, P24
   Buschermohle R., 2006, SUCCESS ERFOLGS MISS
   Carrizo D., P 11 WORKSH REQ ENG, P104
   Cohen J., 1988, STAT POWER ANAL BEHA
   Condori-Fernandez Nelly, 2012, TRCTIT1210 U TWENT
   Damian D, 2006, IEEE T SOFTWARE ENG, V32, P433, DOI 10.1109/TSE.2006.61
   Davis A., P 1 INT SOFTW METR S, P141
   Eveleens JL, 2010, IEEE SOFTWARE, V27, P30, DOI 10.1109/MS.2009.154
   Fernández DM, 2013, LECT NOTES COMPUT SC, V7983, P108, DOI 10.1007/978-3-642-39259-7_11
   Fernández DM, 2012, INFORM SOFTWARE TECH, V54, P162, DOI 10.1016/j.infsof.2011.09.001
   Fernández DM, 2010, LECT NOTES COMPUT SC, V6395, P183
   Fernandez Daniel Mendez, 2013, TUMI1326
   GARVIN DA, 1984, SLOAN MANAGE REV, V26, P25
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Glinz M., P 3 WORLD C SOFTW QU, V2, P55
   Gomez O.S., P 2010 ACM IEEE INT, P1
   Gonzalez-Perez C., 2006, Software and Systems Modeling, V5, P72
   Gorschek T, 2006, REQUIR ENG, V11, P79, DOI 10.1007/s00766-005-0020-7
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   HSIA P, 1993, IEEE SOFTWARE, V10, P75, DOI 10.1109/52.241974
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Kuhrmann M, 2013, LECT NOTES COMPUT SC, V7983, P138, DOI 10.1007/978-3-642-39259-7_13
   Lin Liu, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P317, DOI 10.1109/RE.2010.45
   Mendez D., 2013, P 17 INT C EV ASS SO, P183
   Mendez Fernandez Daniel, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P104, DOI 10.1049/ic.2011.0013
   Mendez Fernandez D, 2011, THESIS TU MUNCHEN
   Napier NP, 2009, IEEE T SOFTWARE ENG, V35, P593, DOI 10.1109/TSE.2009.33
   Neill C.J., 2003, IEEE SOFTW
   Nikula U., 2000, Research Report 951-764-431-0.
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   Piattini M., 2007, ACM SIGSOFT SOFTWARE, V32, P1
   Popper K., 2005, The logic of scientific discovery
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Salger F., 2009, P 7 INT WORKSH SOFTW
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Solemon B., ADV SOFTWARE ENG
   Staples M, 2007, J SYST SOFTWARE, V80, P883, DOI 10.1016/j.jss.2006.09.008
   Verner J., 2005, AUSTRALASIAN J INFOR, V13
   Zowghi D, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P19, DOI 10.1007/3-540-28244-0_2
NR 44
TC 45
Z9 46
U1 3
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 616
EP 643
DI 10.1016/j.infsof.2014.05.008
PG 28
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA AU9YI
UT WOS:000345947500035
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Pillat, RM
   Oliveira, TC
   Alencar, PSC
   Cowan, DD
AF Pillat, Raquel M.
   Oliveira, Toacy C.
   Alencar, Paulo S. C.
   Cowan, Donald D.
TI BPMNt: A BPMN extension for specifying software process tailoring
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Process modeling; Software process tailoring; BPMN
ID VARIABILITY; VARIANTS
AB Context: Although SPEM 2.0 has great potential for software process modeling, it does not provide concepts or formalisms for precise modeling of process behavior. Indeed, SPEM fails to address process simulation, execution, monitoring and analysis, which are important activities in process management. On the other hand, BPMN 2.0 is a widely used notation to model business processes that has associated tools and techniques to facilitate the aforementioned process management activities. Using BPMN to model software development processes can leverage BPMN's infrastructure to improve the quality of these processes. However, BPMN lacks an important feature to model software processes: a mechanism to represent process tailoring.
   Objective: This paper proposes BPMNt, a conservative extension to BPMN that aims at creating a tailoring representation mechanism similar to the one found in SPEM 2.0.
   Method: We have used the BPMN 2.0 extensibility mechanism to include the representation of specific tailoring relationships namely suppression, local contribution, and local replacement, which establish links between process elements (such as in the case of SPEM). Moreover, this paper also presents some rules to ensure the consistency of BPMN models when using tailoring relationships.
   Results: In order to evaluate our proposal we have implemented a tool to support the BPMNt approach and have applied it for representing real process adaptations in the context of an academic management system development project. Results of this study showed that the approach and its support tool can successfully be used to adapt BPMN-based software processes in real scenarios.
   Conclusion: We have proposed an approach to enable reuse and adaptation of BPMN-based software process models as well as derivation traceability between models through tailoring relationships. We believe that bringing such capabilities into BPMN will open new perspectives to software process management. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Pillat, Raquel M.; Oliveira, Toacy C.] Univ Fed Rio de Janeiro, Syst Engn & Comp Sci Dept, Rio De Janeiro, Brazil.
   [Alencar, Paulo S. C.; Cowan, Donald D.] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 Universidade Federal do Rio de Janeiro; University of Waterloo
RP Pillat, RM (corresponding author), Univ Fed Rio de Janeiro, Syst Engn & Comp Sci Dept, Rio De Janeiro, Brazil.
EM rmpillat@cos.ufrj.br; toacy@cos.ufrj.br; palencar@cs.uwaterloo.ca;
   dcowan@csg.uwaterloo.ca
RI Oliveira, Toacy/AAG-2789-2019
OI Oliveira, Toacy/0000-0001-8184-2442; Mainardi Pillat,
   Raquel/0000-0002-5420-6966
FU CAPES; CNPq
FX We thank Renata Mesquita for support with the evaluation study of this
   work using data of the SIGA-EPCT project. We also thank the managers of
   this project for the authorization to access and use data of the project
   in this research. This work was partially supported by the Brazilian
   agencies CAPES and CNPq.
CR Aharoni A, 2008, LECT NOTES COMPUT SC, V5231, P455, DOI 10.1007/978-3-540-87877-3_33
   Alegria Hurtado., 2011, Proc. of the 2011 International Conference on Software and Systems Process, P43
   Aleixo FA, 2011, LECT NOTES BUS INF P, V73, P372
   [Anonymous], 2013, SEMANTICS FDN SUBSET
   [Anonymous], 2013, P INT C SOFTW SYST P
   [Anonymous], 2011, Business process model and notation (bpmn)
   [Anonymous], 2000, RATIONAL UNIFIED PRO
   Armbrust Ove, 2009, Software Process: Improvement and Practice, V14, P181, DOI 10.1002/spip.412
   Armbrust Ove, 2008, Software Process: Improvement and Practice, V13, P5, DOI 10.1002/spip.391
   Basili V. R., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P345
   Becker J, 2007, INT FED INFO PROC, V244, P79
   Bendraou R, 2005, LECT NOTES COMPUT SC, V3713, P17, DOI 10.1007/11557432_3
   Bendraou R, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P390, DOI 10.1109/ASPEC.2007.60
   Bendraou Reda, 2007, P INT C SOFTW ENG AD, P5
   Branco M., 2013, 25 INT C ADV INF SYS
   Campos ALN, 2013, LECT NOTES COMPUT SC, V7983, P338, DOI 10.1007/978-3-642-39259-7_29
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   Döhring M, 2011, LECT NOTES BUS INF P, V81, P332
   Ellner R, 2010, LECT NOTES COMPUT SC, V6138, P116, DOI 10.1007/978-3-642-13595-8_11
   Ferratt TW, 2010, SIGMIS CPR '10: PROCEEDINGS OF THE 2010 ACM SIGMIS COMPUTER PERSONNEL RESEARCH CONFERENCE, P165
   Firesmith Donald G., 2002, BRIAN HENDERSON SELL
   Fuggetta A., 2000, P C LIM IR FUT SOFTW, P25, DOI DOI 10.1145/336512.336521
   García-Borgoñón L, 2014, INFORM SOFTWARE TECH, V56, P103, DOI 10.1016/j.infsof.2013.10.001
   Ginsberg M., 1995, CMUSEI94TR024
   Grambow Gregor, 2011, 10 INT C SOFTW ENG S
   Gruhn V, 2002, ANN SOFTW ENG, V14, P363, DOI 10.1023/A:1020522111961
   Hallerbach A, 2010, J SOFTW MAINT EVOL-R, V22, P519, DOI 10.1002/smr.491
   Harmsen A. F., 1997, SITUATIONAL METHOD E
   Henderson-Sellers B, 2010, J UNIVERS COMPUT SCI, V16, P424
   Henninger S., 2002, Extreme Programming and Agile Methods - XP/Agile Universe 2002 Second XP Universe and First Agile Universe Conference. Proceedings (Lecture Notes in Computer Science Vol.2418), P33
   Kalus G., 2013, Proceedings of the 2013 International Conference on Software and System Process, P171
   Kang D, 2008, ASIA PAC SOFWR ENG, P51, DOI 10.1109/APSEC.2008.15
   Kumar A, 2012, COMPUT IND, V63, P112, DOI 10.1016/j.compind.2011.12.002
   Martínez-Ruiz T, 2008, STUD COMPUT INTELL, V150, P115, DOI 10.1007/978-3-540-70561-1_9
   Martínez-Ruiz T, 2012, SOFTWARE QUAL J, V20, P229, DOI 10.1007/s11219-011-9147-6
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Nurcan S., 2008, P 41 ANN HAWAII INT
   Oliveira EA, 2013, LECT NOTES COMPUT SC, V7983, P169, DOI 10.1007/978-3-642-39259-7_15
   Oliveira Toacy C., 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, p185, 188
   Peng Xu, 2008, IT Professional, V10, P39, DOI 10.1109/MITP.2008.81
   Cota MP, 2010, J COMPUT METHODS SCI, V10, pS61, DOI 10.3233/JCM-2010-0268
   Piattini M., 2007, ACM SIGSOFT SOFTWARE, V32, P1
   Pillat R. M., 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P58, DOI 10.1109/ICSSP.2012.6225981
   RAJABI BA, 2009, P INT C INF MAN ENG, P37
   Ralyté J, 2003, LECT NOTES COMPUT SC, V2681, P95
   Reis CAL, 2002, IEEE 2002 SYMPOSIA ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P112, DOI 10.1109/HCC.2002.1046363
   Ruiz-Rube I, 2013, J SOFTW-EVOL PROC, V25, P999, DOI 10.1002/smr.1594
   Sutton S.M., 1996, Proceedings of the 10th international Software Process Workshop (June 17 - 19, 1996), P109
   Thom L., BPMN 2 0 POSTER
   Washizaki Hironori, 2006, 2006 4th IEEE International Conference on Industrial Informatics, P1301, DOI 10.1109/INDIN.2006.275847
   Xu P., 2005, P 38 HAWAII INT C SY, p87c
   Yoon IC, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P202, DOI 10.1109/APSEC.2001.991478
   2008, SOFTWARE PROCESS ENG
NR 53
TC 37
Z9 43
U1 0
U2 26
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 95
EP 115
DI 10.1016/j.infsof.2014.09.004
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500007
DA 2024-07-18
ER

PT J
AU Christensen, HB
   Hansen, KM
   Kyng, M
   Manikas, K
AF Christensen, Henrik Baerbak
   Hansen, Klaus Marius
   Kyng, Morten
   Manikas, Konstantinos
TI Analysis and design of software ecosystem architectures - Towards the 4S
   telemedicine ecosystem
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software ecosystem architecture; Third-party sponsored software
   ecosystems; Telemedicine software ecosystems
AB Context: Telemedicine, the provision of health care at a distance, is arguably an effective way of increasing access to, reducing cost of, and improving quality of care. However, the deployment of telemedicine is faced with standards that are hard to use, application-specific data models, and application stove-pipes that inhibit the adoption of telemedical solutions. To which extent can a software ecosystem approach to telemedicine alleviate this?
   Objective: In this article, we define the concept of software ecosystem architecture as the structure(s) of a software ecosystem comprising elements, relations among them, and properties of both. Our objective is to show how this concept can be used (i) in the analysis of existing software ecosystems and (ii) in the design of new software ecosystems.
   Method: We performed a mixed-method study that consisted of a case study and an experiment. For (i), we performed a descriptive, revelatory case study of the Danish telemedicine ecosystem and for (ii), we experimentally designed, implemented, and evaluated the architecture of 4S.
   Results: We contribute in three areas. First, we define the software ecosystem architecture concept that captures organization, business, and software aspects of software ecosystems. Secondly, we apply this concept in our case study and demonstrate that it is a viable concept for software ecosystem analysis. Finally, based on our experiments, we discuss the practice of software engineering for software ecosystems drawn from experience in creating and evolving the 4S telemedicine ecosystem.
   Conclusion: The concept of software ecosystem architecture can be used analytically and constructively in respectively the analysis and design of software ecosystems. (C) 2014 Elsevier B.V. This is an open access article under the CC BY-NC-SA license (http://creativecommons.org/licenses/by-nc-sa/3.0/).
C1 [Christensen, Henrik Baerbak; Kyng, Morten] Aarhus Univ, Dept Comp Sci, DK-8000 Aarhus C, Denmark.
   [Hansen, Klaus Marius; Manikas, Konstantinos] Univ Copenhagen, Dept Comp Sci DIKU, DK-1168 Copenhagen, Denmark.
   [Kyng, Morten] Alexandra Inst, Aarhus, Denmark.
C3 Aarhus University; University of Copenhagen
RP Hansen, KM (corresponding author), Univ Copenhagen, Dept Comp Sci DIKU, DK-1168 Copenhagen, Denmark.
EM hbc@cs.au.dk; klausmh@diku.dk; mkyng@cs.au.dk; kmanikas@diku.dk
RI Manikas, Konstantinos/C-2013-2015
OI Manikas, Konstantinos/0000-0001-8531-898X
FU Net4Care project - Caretech Innovation; UNIK; National Board of
   Technology and Innovation
FX The research reported in this article has been supported by the Net4Care
   project that is funded by Caretech Innovation,<SUP>7</SUP> the
   Connect2Care project that is funded by the UNIK Partnership,<SUP>8</SUP>
   and the project "Kick-start of Denmark as telemedicine pioneer country"
   that is funded by The National Board of Technology and
   Innovation.<SUP>9</SUP>
CR [Anonymous], 42010 ISO
   [Anonymous], 2006, TELESAR TELEMEDICINS
   [Anonymous], 2011, P WORKSH SOFTW EC
   [Anonymous], 2006, P EUROPEAN NETWORK C
   [Anonymous], 2013, P INT WORKSH SOFTW E
   Barbosa O, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P59
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Boone K.W., 2011, CDA BOOK
   Bosch J., 2010, Proceedings of the Fourth European Conference on Software Architecture: Companion Volume, P93, DOI DOI 10.1145/1842752.1842776
   Bosch J, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P77, DOI 10.1007/978-3-642-10294-3_4
   Bosch J, 2010, AGILITY ACROSS TIME AND SPACE: IMPLEMENTING AGILE METHODS IN GLOBAL SOFTWARE PROJECTS, P217, DOI 10.1007/978-3-642-12442-6_15
   Bosch J, 2010, LECT NOTES COMPUT SC, V6285, P1, DOI 10.1007/978-3-642-15114-9_1
   Bosch J, 2010, J SYST SOFTWARE, V83, P67, DOI 10.1016/j.jss.2009.06.051
   Bosch Jan, 2009, 2009 13 INT SOFTW PR, V9, P111, DOI DOI 10.1145/1753235.1753251
   Boucharas V, 2009, IWOCE 2009: INTERNATIONAL WORKSHOP ON OPEN COMPONENT ECOSYSTEM, P41
   Burkard C, 2012, BUS INFORM SYST ENG+, V4, P41, DOI 10.1007/s12599-011-0199-8
   Campbell P.R.J., 2010, P 4 EUR C SOFTW ARCH, P81
   Christensen H. B., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P224, DOI 10.1109/WICSA-ECSA.212.34
   Christensen H.B., 2012, MED TEL 2012 GLOBAL, V5, P423
   Clemensen J, 2005, J TELEMED TELECARE, V11, P14, DOI 10.1258/135763305775124830
   Denzin N.K., 1978, RES ACT THEORETICAL
   Fonden for Velfaerdsteknologi, 2012, NAT HANDL UDBR TEL
   Hansen K., 2011, P 3 INT WORKSH INFR, P28
   Hansen K.M., 2012, NET4CARE PLATFORM VE
   Iansiti Marco, 2004, The keystone advantage: What the new dynamics of business ecosystems mean for strategy, innovation, and sustainability
   Jansen S, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P1, DOI 10.4337/9781781955635
   Jansen S., 2009, P 1 INT WORKSHOP SOF, P34
   Jansen S., 2013, BUSINESS NETWORK MAN, P29
   Jansen S, 2012, J SYST SOFTWARE, V85, P1495, DOI 10.1016/j.jss.2011.12.007
   Jansen S, 2009, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE-COMPANION.2009.5070978
   Kazman R, 2012, J SYST SOFTWARE, V85, P1511, DOI 10.1016/j.jss.2011.03.050
   Kilamo T, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P276
   Kilamo T, 2012, J SYST SOFTWARE, V85, P1467, DOI 10.1016/j.jss.2011.06.071
   Kommunernes Landsforening, 2013, KOMM STRAT TEL
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Lungu M, 2010, SCI COMPUT PROGRAM, V75, P264, DOI 10.1016/j.scico.2009.09.004
   Manikas K., 2013, P 5 INT C MAN EM DIG, P211
   Manikas K, 2013, J SYST SOFTWARE, V86, P1294, DOI 10.1016/j.jss.2012.12.026
   McGregor J.D., 2010, P 4 EUR C SOFTW ARCH, P73
   MedCom, 2013, OV DAN TEL IN
   Messerschmitt DG, 2003, SOFTWARE ECOSYSTEM: UNDERSTANDING AN INDISPENSABLE TECHNOLOGY AND INDUSTRY, P1
   National Sundheds-It, 2013, REF OPS HELB HOS BOR
   Olejaz M, 2012, HEALT SYST TRANSIT, V14, P1
   Osterwalder A., 2010, BUSINESS MODEL GENER, DOI DOI 10.1111/J.1540-5885.2012.00977_2.X
   Osterwalder A., 2004, PROPOSITION DESIGN S
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   PHMR, 2010, IMPL GUID CDA REL 2
   Regioner Danske, 2013, REGIONERNES FAELLES
   Robbes R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P904, DOI 10.1145/1985793.1985940
   Santos C. M. L., 2011, 3RDINTWORKSHOPSOFTWE, V746, P40
   TELEKAT TELEKAT, 2007, TEL TEL CHRON PAT IN
   Urazimbetova S., 2012, TECH REP
   van Angeren J., 2011, P INT C MAN EM DIG E, P68
   van den Berk Ivo., 2010, Proceedings of the Fourth European Conference on Software Architecture: Companion Volume, P127, DOI DOI 10.1145/1842752.1842781
   Womack B., 2012, GOOGLE SAYS 700 000
   World Health Organisation, 2009, Telemedicine Opportunities and developments in Member States
   XDS.b, 2012, IT INFR TECHN FRAM, V1
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 58
TC 41
Z9 44
U1 1
U2 34
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2014
VL 56
IS 11
SI SI
BP 1476
EP 1492
DI 10.1016/j.infsof.2014.05.002
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AO4ZD
UT WOS:000341349000005
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU del Bianco, V
   Lavazza, L
   Liu, G
   Morasca, S
   Abualkishik, AZ
AF del Bianco, Vieri
   Lavazza, Luigi
   Liu, Geng
   Morasca, Sandro
   Abualkishik, Abedallah Zaid
TI Model-based early and rapid estimation of COSMIC functional size - An
   experimental evaluation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Functional size measurement; COSMIC Function Points; Approximate
   software sizing methods; Size estimation methods; Model-based
   measurement; UML
AB Context: Functional size measurement methods are widely used but have two major shortcomings: they require a complete and detailed knowledge of user requirements, and they involve relatively expensive and lengthy processes.
   Objective: UML is routinely used in the software industry to effectively describe software requirements in an incremental way, so UML models grow in detail and completeness through the requirements analysis phase. Here, we aim at defining the characteristics of increasingly more refined UML requirements models that support increasingly more sophisticated hence presumably more accurate size estimation processes.
   Method: We consider the COSMIC method and three alternative processes (two of which are proposed in this paper) to estimate COSMIC size measures that can be applied to UML diagrams at progressive stages of the requirements definition phase. Then, we check the accuracy of the estimates by comparing the results obtained on a set of projects to the functional size values obtained with the standard COSMIC method. Results: Our analysis shows that it is possible to write increasingly more detailed and complete UML models of user requirements that provide the data required by COSMIC size estimation methods, which in turn yield increasingly more accurate size measure estimates of the modeled software. Initial estimates are based on simple models and are obtained quickly and with little effort. The estimates increase their accuracy as models grow in completeness and detail, i.e., as the requirements definition phase progresses.
   Conclusion: Developers that use UML for requirements modeling can obtain an early estimation of the application size at the beginning of the development process, when only a very simple UML model has been built for the application, and can obtain increasingly more accurate size estimates while the knowledge of the product increases and UML models are refined accordingly. (C) 2014 Elsevier B.V. All rights reserved.
C1 [del Bianco, Vieri; Lavazza, Luigi; Liu, Geng; Morasca, Sandro] Univ Insubria, Dipartimento Sci Teor & Appl, Varese, Italy.
   [Abualkishik, Abedallah Zaid] Al Khawarizmi Int Coll, IT Dept, Al Ain, U Arab Emirates.
C3 University of Insubria
RP Lavazza, L (corresponding author), Univ Insubria, Dipartimento Sci Teor & Appl, Varese, Italy.
EM vieri.delbianco@gmail.com; luigi.lavazza@uninsubria.it;
   giulio.liu@gmail.com; sandro.morasca@uninsubria.it; azasoft1@gmail.com
RI Lavazza, Luigi/AAF-5323-2020; Abualkishik, Abedallah Zaid
   Zaid/AAX-2698-2021
OI Morasca, Sandro/0000-0003-4598-7024; Abualkishik, Abedallah
   Zaid/0000-0003-0920-6454; Lavazza, Luigi/0000-0002-5226-4337
FU Metodi, tecniche e strumenti per lo sviluppo di sistemi software di
   qualita - Universita degli Studi dell'Insubria; "Progetto dote 2"
   nell'ambito del programma UNIRE - accordo per lo sviluppo capitale umano
   nel sistema universitario lombardo; Regione Lombardia; Universita degli
   Studi dell'Insubria; FP7 Collaborative Project S-CASE- European
   Commission [610717]
FX This work was partly supported by project "Metodi, tecniche e strumenti
   per lo sviluppo di sistemi software di qualita", funded by the
   Universita degli Studi dell'Insubria, by "Progetto dote 2" nell'ambito
   del programma UNIRE - accordo per lo sviluppo capitale umano nel sistema
   universitario lombardo, co-funded by Regione Lombardia and Universita
   degli Studi dell'Insubria, and by the FP7 Collaborative Project S-CASE
   (Grant Agreement No. 610717), funded by the European Commission.
CR [Anonymous], ICSEA 2012 7 INT C S
   [Anonymous], 2018, US COSMIC FUNCT SIZ
   [Anonymous], 2010, FUNCT POINT COUNT PR
   [Anonymous], 2000, Kluwer international series in software engineering
   [Anonymous], 2011, OMG UN MOD LANG SUP
   Azzouz S., 2004, SOFTW MEAS EUR FOR S
   Barkallah S, 2011, COMM COM INF SC, V257, P137
   Bevo V., 1999, INT WORKSH SOFTW MEA
   Conte M., 2004, SOFTW MEAS EUR FOR
   del Bianco V., 2012, 13 INT C PROD FOC SO
   FETCKE T, 1999, 199920 U QUEB MONTR
   Habela P., 2005, 15 INT WORKSHOP SOFT, P195
   Hericko M, 2008, INFORM SOFTWARE TECH, V50, P772, DOI 10.1016/j.infsof.2007.08.005
   International Standardization Organization, 2012, ISO IEC 14143 SER IN
   Jenner M.S., 2001, 4 EUROPEAN C SOFTWAR, P173
   Karner G., 1993, Resource Estimation for Objectory Projects
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Lavazza L., 2009, CASE STUDY COSMIC FU
   Lavazza L., 2009, 5 INT C PRED MOD SOF
   LAVAZZA L, 2008, ESEM 2008 2 INT S EM
   Levesque G., 2008, Proceedings of the 2008 C3S2E Conference, P81
   Luckson V., 2004, 17 INT C SOFTW SYST
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sellami A, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P282, DOI 10.1109/ICSEA.2009.96
   Van den Berg K., 2005, the 2nd Software Measurement European Forum, P69
   Van Heeringen H., 2007, P SOFTW MEAS EUR FOR
   van Heeringen H. S., 2009, SOFTW MEAS EUR FOR S
   Vogelezang F.W., 2005, 2 SOFTW MEAS EUR FOR
   Vogelezang F, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P27, DOI 10.1109/IWSM-Mensura.2013.14
NR 29
TC 13
Z9 13
U1 1
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2014
VL 56
IS 10
BP 1253
EP 1267
DI 10.1016/j.infsof.2014.04.009
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AN8JO
UT WOS:000340850700006
DA 2024-07-18
ER

PT J
AU Sammon, D
   Nagle, T
   McAvoy, J
AF Sammon, David
   Nagle, Tadhg
   McAvoy, John
TI Analysing ISD performance using narrative networks, routines and
   mindfulness
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Routines; Information Systems Development (ISD); Narrative network;
   Mindfulness; Case study
ID INFORMATION-SYSTEMS; REQUIREMENTS ELICITATION; ORGANIZATIONAL ROUTINES;
   PROJECT PERFORMANCE; PERSPECTIVE; TECHNOLOGY; PATTERNS; RELIABILITY;
   MANAGEMENT; IMPACT
AB Context: While the ISD process and in particular Requirement Elicitation has been defined as a collaborative social interaction, visualisations fail to accurately capture the multifaceted nature of the social process. Instead, ISD visualisations focus on presenting a more mechanical/technical perspective, ultimately restricting an opportunity to better analyse the process.
   Objective: With particular focus on Requirements Elicitation this study utilises the narrative network technique to visualise the ISD process as a live routine with the aim to detail the ideal and actual aspects of ISD. The ideal aspect consists of the abstract, generalised understandings of the human actors regarding enacting a routine. Being a live routine, the reality is that adjustments/variations are a common occurrence and need to be taken into account. Enabling the opportunity to identify patterns of action within the routine, the study also incorporates organisational mindfulness to provide further social analysis of these patterns of action.
   Method: In light of the lack of theoretical maturity around the viewing of an ISD process as a 'live routine', this exploratory research sought to build theory using a single instrumental case study spanning over 3 years (several ISD projects) and a variety of methods (e.g. workshop, experiment). Results: Visualising the ISD process as a live routine it was possible to identify a number of patterns of action. These patterns were triangulated against the organisational mindfulness analysis of the case data to highlight underlying mindless behaviours. A rule was then implemented (experimentally) during the first iteration of a new ISD project and notable improvements in the ISD process were observed. Furthermore, the knock on organisational impact of the experimental implementation of the rule is also examined.
   Conclusion: From a practitioner perspective the study provides an alternative method for analysing the ISD process of an organisation and highlights the benefits of observing the ISD process as a live routine. From an academic perspective, contributions are made to both the ISD and Organisational body of knowledge. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Sammon, David; Nagle, Tadhg; McAvoy, John] Natl Univ Ireland Univ Coll Cork, Cork, Ireland.
C3 University College Cork
RP Nagle, T (corresponding author), Natl Univ Ireland Univ Coll Cork, Room 2-125 O'Rahilly Bldg, Cork, Ireland.
EM Dsammon@afis.ucc.ie; t.nagle@ucc.ie; j.mcavoy@ucc.ie
OI Sammon, David/0000-0001-6138-0105; Nagle, Tadhg/0000-0002-6123-7349;
   McAvoy, John/0000-0002-2628-5054
FU Texuna-Tech
FX The research team would like to extend its gratitude to Texuna-Tech
   (www.texunatech.com) for their openness and willingness to participate
   in the research and for the financial support they provided to enable
   the research to take place.
CR Argote L, 2006, ORGAN SCI, V17, P501, DOI 10.1287/orsc.1060.0199
   Bachy G., 1997, International Journal of Project Management, V15, P211
   Barthelmess P., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P13, DOI 10.1023/A:1015299228170
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Butler BS, 2006, MIS QUART, V30, P211
   BYRD TA, 1992, MIS QUART, V16, P117, DOI 10.2307/249704
   Chakraborty S, 2010, J ASSOC INF SYST, V11, P212
   Chang KC, 2011, INFORM SOFTWARE TECH, V53, P592, DOI 10.1016/j.infsof.2011.01.007
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Feldman MS, 2003, IND CORP CHANGE, V12, P727, DOI 10.1093/icc/12.4.727
   Fiol CM, 2003, ACAD MANAGE REV, V28, P54
   Gärtner C, 2011, MANAGE DECIS, V49, P253, DOI 10.1108/00251741111109142
   Hansen S, 2010, INFORM ORGAN-UK, V20, P44, DOI 10.1016/j.infoandorg.2010.01.001
   Jordan S, 2009, MANAGE LEARN, V40, P465, DOI 10.1177/1350507609339687
   Kelliher F., 2005, ELECT J BUSINESS RES, V3, P123
   Langer E.J., 1997, POWER MINDFUL LEARNI
   Langer E.J., 1989, MINDFULNESS
   Lapointe L, 2005, MIS QUART, V29, P461
   Levinthal D, 2006, ORGAN SCI, V17, P502, DOI 10.1287/orsc.1060.0197
   Liu JYC, 2008, INFORM SOFTWARE TECH, V50, P889, DOI 10.1016/j.infsof.2008.01.002
   Longworth S., 2002, EVOLVING PROJECT CON, pC541
   Mathiassen L, 2007, J ASSOC INF SYST, V8, P569
   Matook S, 2008, 19 AUSTR C INF SYST
   Melo CD, 2013, INFORM SOFTWARE TECH, V55, P412, DOI 10.1016/j.infsof.2012.09.004
   Mu E, 2009, J DECIS SYST, V18, P27, DOI 10.3166/JDS.18.27-51
   Na KS, 2004, J SYST SOFTWARE, V70, P155, DOI 10.1016/S0164-1212(03)00014-1
   Nagle T, 2011, EUR C INF SYST ECIS
   Neill C. J., 2003, IT Professional, V5, P62
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Pee LG, 2010, J ASSOC INF SYST, V11, P550
   Pentland BT, 2007, ORGAN SCI, V18, P781, DOI 10.1287/orsc.1070.0283
   Pentland BT, 2010, ORGAN STUD, V31, P917, DOI 10.1177/0170840610373200
   Pentland BT, 2008, INFORM ORGAN-UK, V18, P235, DOI 10.1016/j.infoandorg.2008.08.001
   Pfahl D, 2000, INFORM SOFTWARE TECH, V42, P1001, DOI 10.1016/S0950-5849(00)00152-X
   Pitts MG, 2007, INFORM SYST J, V17, P89, DOI 10.1111/j.1365-2575.2006.00240.x
   Stake RobertE., 2005, The SAGE Handbook of Qualitative Research, V3rd, DOI DOI 10.2307/2075820
   Sternberg RJ, 2000, J SOC ISSUES, V56, P11, DOI 10.1111/0022-4537.00149
   Sun H., 2010, P ICIS 2010
   Swanson EB, 2004, MIS QUART, V28, P553
   Teo TSH, 2011, EUR J INFORM SYST, V20, P201, DOI 10.1057/ejis.2010.58
   Thich N.H., 1999, MIRACLE MINDFULNESS
   Thomas DC, 2006, GROUP ORGAN MANAGE, V31, P78, DOI 10.1177/1059601105275266
   Thompson F., 1995, J CONTINGENCIES CRIS, V3, P81
   Valorinta M, 2009, IND CORP CHANGE, V18, P963, DOI 10.1093/icc/dtp027
   Weick KE, 1999, RES ORGAN BEHAV, V21, P81
   White Baker E, 2011, INFORM SYST J, V21, P155, DOI 10.1111/j.1365-2575.2010.00352.x
   Yeow Adrian, 2011, International Journal of Accounting Information Systems, V12, P116, DOI 10.1016/j.accinf.2010.12.005
NR 48
TC 4
Z9 4
U1 1
U2 24
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2014
VL 56
IS 5
BP 465
EP 476
DI 10.1016/j.infsof.2014.01.007
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AG6RB
UT WOS:000335545000002
DA 2024-07-18
ER

PT J
AU Barney, S
   Mohankumar, V
   Chatzipetrou, P
   Aurum, A
   Wohlin, C
   Angelis, L
AF Barney, Sebastian
   Mohankumar, Varun
   Chatzipetrou, Panagiota
   Aurum, Aybuke
   Wohlin, Claes
   Angelis, Lefteris
TI Software quality across borders: Three case studies on company internal
   alignment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software; Quality; Alignment; Global software development; Outsourcing;
   Offshore
ID REQUIREMENTS; KNOWLEDGE; PROJECTS
AB Context: Software quality issues are commonly reported when offshoring software development. Value-based software engineering addresses this by ensuring key stakeholders have a common understanding of quality.
   Objective: This work seeks to understand the levels of alignment between key stakeholder groups within a company on the priority given to aspects of software quality developed as part of an offshoring relationship. Furthermore, the study aims to identify factors impacting the levels of alignment identified.
   Method: Three case studies were conducted, with representatives of key stakeholder groups ranking aspects of software quality in a hierarchical cumulative exercise. The results are analysed using Spearman rank correlation coefficients and inertia. The results were discussed with the groups to gain a deeper understanding of the issues impacting alignment.
   Results: Various levels of alignment were found between the various groups. The reasons for misalignment were found to include cultural factors, control of quality in the development process, short-term versus long-term orientations, understanding of cost-benefits of quality improvements, communication and coordination.
   Conclusions: The factors that negatively affect alignment can vary greatly between different cases. The work emphasises the need for greater support to align company internal success-critical stakeholder groups in their understanding of quality when offshoring software development. Crown Copyright (C) 2013 Published by Elsevier B.V. All rights reserved.
C1 [Barney, Sebastian; Wohlin, Claes] Blekinge Inst Technol, Karlskrona, Sweden.
   [Barney, Sebastian; Mohankumar, Varun; Aurum, Aybuke] Univ New S Wales, Sch Informat Syst Technol & Management, Sydney, NSW 2052, Australia.
   [Chatzipetrou, Panagiota; Angelis, Lefteris] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki, Greece.
C3 Blekinge Institute Technology; University of New South Wales Sydney;
   Aristotle University of Thessaloniki
RP Barney, S (corresponding author), Univ New S Wales, Sch Informat Syst Technol & Management, Sydney, NSW 2052, Australia.
EM sebastian@unswalumni.com; z3207004@unswa-lumni.com;
   pchatzip@csd.auth.gr; aybuke@uns-w.edu.au; claes.wohlin@bth.se;
   lef@csd.auth.gr
OI Chatzipetrou, Panagiota/0000-0002-0311-1502; Wohlin,
   Claes/0000-0003-0460-5253
FU Vinnova; Sony Mobile Communications; Ericsson; ST-Ericsson; Axis
   Communications; Softhouse Consulting Baltic as part of the Industrial
   Excellence Center for Embedded Applications Software Engineering (EASE)
FX This work was partly funded by Vinnova, Sony Mobile Communications,
   Ericsson, ST-Ericsson, Axis Communications and Softhouse Consulting
   Baltic as part of the Industrial Excellence Center for Embedded
   Applications Software Engineering (EASE).
CR Ågerfalk PJ, 2006, COMMUN ACM, V49, P26, DOI 10.1145/1164394.1164416
   Ameller D., 2012, Proceedings from RE: The 20th International Requirements Engineering Conference, P41, DOI DOI 10.1109/RE.2012.6345838
   [Anonymous], 14 INT C EV ASS SOFT
   [Anonymous], PRELIMLINARY HDB SOF
   [Anonymous], 23 INT C SOFTW ENG K
   [Anonymous], CAN C EL COMP ENG
   [Anonymous], P 7 INT SOFTW METR S
   [Anonymous], POLICE OVERHAUL MAY
   [Anonymous], THEORY APPL CORRES A
   [Anonymous], SOFTWARE PRODUCT QUA
   [Anonymous], ISO9126
   [Anonymous], MANAGEMENT INT REV
   [Anonymous], SOFTWARE DEV TIMES
   [Anonymous], 21 INT C INF SYST DE
   [Anonymous], TRW SERIES SOFTWARE
   [Anonymous], 3 WOSQ
   [Anonymous], GLOBAL IT OUTSOURCIN
   Barney S., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P146, DOI 10.1109/ICGSE.2011.13
   Barney S, 2009, LECT NOTES COMPUT SC, V5543, P256, DOI 10.1007/978-3-642-01680-6_24
   Beck K., 2000, EXTREME PROGRAMMING
   Berander P, 2006, INT J SOFTW ENG KNOW, V16, P819, DOI 10.1142/S0218194006003026
   Bird C, 2009, COMMUN ACM, V52, P85, DOI 10.1145/1536616.1536639
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Boehm B, 2006, VALUE-BASED SOFTWARE ENGINEERING, P15, DOI 10.1007/3-540-29263-2_2
   BROWN SL, 1995, ACAD MANAGE REV, V20, P343, DOI 10.2307/258850
   Carmel E, 2007, COMMUN ACM, V50, P40, DOI 10.1145/1290958.1290959
   Cataldo M, 2009, INT CONF GLOBAL SOFT, P163, DOI 10.1109/ICGSE.2009.24
   Chan Y. E., 2002, MIS Quarterly Executive, V1, P97
   Chan YE, 2007, J INF TECHNOL, V22, P316, DOI 10.1057/palgrave.jit.2000111
   Conchúir EO, 2009, COMMUN ACM, V52, P127, DOI 10.1145/1536616.1536648
   Cramton CD, 2001, ORGAN SCI, V12, P346, DOI 10.1287/orsc.12.3.346.10098
   Dibbern J, 2008, MIS QUART, V32, P333
   Dromey RG, 1996, IEEE SOFTWARE, V13, P33, DOI 10.1109/52.476284
   Espinosa JA, 2007, J MANAGE INFORM SYST, V24, P135, DOI 10.2753/MIS0742-1222240104
   Haigh M, 2010, SOFTWARE QUAL J, V18, P361, DOI 10.1007/s11219-010-9098-3
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Herbsleb JD, 2005, PROC INT CONF SOFTW, P524
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   HOFSTEDE G, 1980, ORGAN DYN, V9, P42, DOI 10.1016/0090-2616(80)90013-3
   Johansson E., 2001, Proceedings of the 34th Annual Hawaii International Conference on System Sciences, DOI 10.1109/HICSS.2001.927252
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Kommeren R, 2007, EMPIR SOFTW ENG, V12, P647, DOI 10.1007/s10664-007-9047-3
   Li Wang, 2008, Journal of Information Systems, V22, P125, DOI 10.2308/jis.2008.22.1.125
   Liang TP, 2010, IEEE T ENG MANAGE, V57, P477, DOI 10.1109/TEM.2009.2033049
   Loch ChristophH., 2008, HDB NEW PRODUCT DEV
   McDonald J.H., 2009, HDB BIOL STAT, V2
   Nicholson B., 2001, INFORM ORGAN-UK, V11, P25, DOI DOI 10.1016/S0959-8022(00)00008-4
   Noll J., 2011, ACM INROADS, V1, P66, DOI [10.1145/1835428.1835445, DOI 10.1145/1835428.1835445]
   Regnell B, 2008, IEEE SOFTWARE, V25, P42, DOI 10.1109/MS.2008.48
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Smite Darja, 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P97, DOI 10.1109/ICGSE.2010.19
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   YOURDON E, 1995, IEEE SOFTWARE, V12, P79, DOI 10.1109/52.382191
NR 54
TC 12
Z9 12
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2014
VL 56
IS 1
BP 20
EP 38
DI 10.1016/j.infsof.2013.06.004
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 282EA
UT WOS:000329151900003
DA 2024-07-18
ER

PT J
AU Tena, S
   Díez, D
   Díaz, P
   Aedo, I
AF Tena, Sara
   Diez, David
   Diaz, Paloma
   Aedo, Ignacio
TI Standardizing the narrative of use cases: A controlled vocabulary of web
   user tasks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Use cases; Web user interface design; Multidisciplinary; Web development
   team; User task
AB Context: For user interfaces design, the use of appropriate terminology in writing use case narratives may determine the effectiveness of the design process, facilitating communication within multidisciplinary web development teams and leading to agreed designs.
   Objective: This paper proposes a user task vocabulary for web user interface design. This vocabulary compiles terms related to the use of web applications, regardless of the application domain, as a way of standardizing the terminology used in the elaboration of use case narrative. The use of the vocabulary would help to reduce misunderstandings within multidisciplinary web development teams.
   Method: The construction of the vocabulary is based on the combination of both committee and empirical approaches. Committee approaches rely on experts in designing web applications, while empirical ones are focused on analyzing content objects, such as interaction design patterns and use case narratives.
   Results: The final version of the monolingual controlled vocabulary of web user tasks compiles a total of 40 tasks; each of them has a key term and a definition of the interaction carried out by users. Additionally, 41 semantic relationships were collected and represented as synonyms. The vocabulary has been assessed through an expert evaluation, proving its correctness and completeness, and an usability evaluation checking the efficacy of the vocabulary.
   Conclusion: The language employed in use case narratives can determine the value of use cases for designing user interfaces. The usage of a controlled vocabulary may allow designers to elaborate unambiguous use case narratives as a way of creating consistent task models for designing web user interfaces. (c) 2013 Elsevier B.V. All rights reserved.
C1 [Tena, Sara; Diez, David; Diaz, Paloma; Aedo, Ignacio] Univ Carlos III Madrid, DEI Interact Syst Lab, Dept Comp Sci & Engn, Madrid 28911, Spain.
C3 Universidad Carlos III de Madrid
RP Tena, S (corresponding author), Univ Carlos III Madrid, DEI Interact Syst Lab, Dept Comp Sci & Engn, Avda Univ 30, Madrid 28911, Spain.
EM stena@inf.uc3m.es; ddiez@inf.uc3m.es; pdp@inf.uc3m.es; aedo@ia.uc3m.es
RI Diaz, Paloma/E-8606-2016; Aedo, Ignacio/F-3222-2014
OI Aedo, Ignacio/0000-0001-5819-0511; DIAZ PEREZ, MARIA
   PALOMA/0000-0002-9493-7739
FU urTHEY Project [TIN2009-09687]; Spanish Ministry of Science and
   Innovation (MICINN)
FX This work has been partly supported by the urTHEY Project
   (TIN2009-09687) funded by the Spanish Ministry of Science and Innovation
   (MICINN).
CR Adolph S., 2003, PATTERNS EFFECTIVE U
   [Anonymous], P 4 WWW10 WORKSH WEB
   [Anonymous], HUMAN COMPUTER INTER
   [Anonymous], Z39192005 ANSINISO
   [Anonymous], COMMON GROUND
   [Anonymous], CHI 01 HUM FACT COMP
   [Anonymous], P SIGCHI C HUM FACT
   [Anonymous], NEXT GENERATION RICH
   [Anonymous], 2010, DESIGN RES INFORM SY
   [Anonymous], P USERSWEB WORKSH EN
   [Anonymous], DESIGNING FLEX 3
   [Anonymous], P 12 TRIENN C IEA RI
   [Anonymous], UML DISTILLED APPL S
   [Anonymous], OBJECT MODELING USER
   [Anonymous], INGENIERIA WEB PATRO
   [Anonymous], J INDEXER
   Byrne MichaelD., 1999, P SIGCHI C HUMAN FAC, P544, DOI DOI 10.1145/302979.303154
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Constantine L.L., 1999, Software for Use: A Practical Guide to the Models and Methods of Usage-Centered Design
   Cooper A., 2007, FACE 3 ESSENTIALS IN
   González-Calleros JM, 2009, LA-WEB: 2009 LATIN AMERICAN WEB CONGRESS, P63, DOI 10.1109/LA-WEB.2009.33
   Hair J. F. J., 2014, Long range planning, V46
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Kulak D., 2000, USE CASES REQUIREMEN, V1st
   Likert R., 1932, TECHNIQUE MEASUREMEN, DOI 1933-01885-001
   Morville Peter., 2007, INFORM ARCHITECTURE, V3rd
   Ratcliffe M, 2001, INFORM SOFTWARE TECH, V43, P365, DOI 10.1016/S0950-5849(00)00172-5
   Rose D.E., 2004, P 13 INT C WORLD WID, P13, DOI [DOI 10.1145/988672.988675, 10.1145/988672.988675]
   Schneider G., 2001, Applying Use Cases: A Practical Guide
   Scott B., 2009, Designing web interfaces: principles and patterns for rich interactions
   Somé SS, 2006, INFORM SOFTWARE TECH, V48, P43, DOI 10.1016/j.infsof.2005.02.006
   Tidwell J., 2010, Designing interfaces: Patterns for effective interaction design
   Valiati E.R., 2006, P 2006 AVI WORKSHOP, P1, DOI DOI 10.1145/1168149.1168169
NR 33
TC 6
Z9 9
U1 1
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2013
VL 55
IS 9
BP 1580
EP 1589
DI 10.1016/j.infsof.2013.02.012
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 174PU
UT WOS:000321168700004
DA 2024-07-18
ER

PT J
AU Vanya, A
   Klusener, S
   van Rooijen, N
   van Vliet, H
AF Vanya, Adam
   Klusener, Steven
   van Rooijen, Nico
   van Vliet, Hans
TI Multidimensional characterization of evolutionary clusters: An
   experience report
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software evolution; Modularity; Co-change; Assessment; Characterization
AB Context: Software architects try to decompose software systems such that their constituent parts can evolve independently from one another. During the actual evolution, identifying groups of software entities from different parts which frequently changed together, is one way to help architects evaluate how independently the different parts can evolve. However, there may be many such groups from which the architects have to select the ones denoting issues in the decomposition worth addressing.
   Objective: In this paper, we use a number of properties of those groups of entities, such as whether they involve more than one site, how many entities are involved, how often these entities are changed, and so on, to identify a subset of groups indicating issues the architect does want to address.
   Method: We describe (1) a number of properties of groups of co-changing entities, (2) scenarios expressing issues to be addressed, in terms of values for the different properties, and (3) the mapping of such scenarios to queries on a set of groups of software entities that changed together. Executing that query results in a subset pointing to issues worth addressing according to that scenario.
   Results: We apply our method to a large embedded software system having a development history of more than a decade. For several scenarios worked out, the number of issues selected for further investigation by the architect is less than half the number of issues selected using only one or two properties.
   Conclusion: Our experience suggests that using multiple properties of groups of co-changing entities is a useful way to accurately identify the set of issues an architect has to address when improving the decomposition of a system. (c) 2013 Elsevier B.V. All rights reserved.
C1 [Vanya, Adam; Klusener, Steven; van Vliet, Hans] Vrije Univ Amsterdam, NL-1081 HV Amsterdam, Netherlands.
   [van Rooijen, Nico] Philips Healthcare, NL-5684 PC Best, Netherlands.
C3 Vrije Universiteit Amsterdam; Philips; Philips Healthcare
RP Vanya, A (corresponding author), Vrije Univ Amsterdam, De Boelelaan 1081, NL-1081 HV Amsterdam, Netherlands.
EM adam.vanya@gmail.com; steven@cs.vu.nl; nico.van.rooijen@philips.com;
   hans@cs.vu.nl
RI Van Rooijen, Nico/Z-1578-2019; Vanya, Ádám/ABB-6283-2021
OI Vanya, Adam/0000-0002-8969-8489
FU Dutch Ministry of Economic Affairs under the BSIK program
FX This work has been carried out as part of the DARWIN project at Philips
   Healthcare under the responsibility of the Embedded Systems Institute.
   This project is partially supported by the Dutch Ministry of Economic
   Affairs under the BSIK program.
CR Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Antoniol G, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P23, DOI 10.1109/IWPSE.2005.11
   BALL T, 1997, P ICSE 97 WORKSH PRO
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Beyer D, 2006, WORK CONF REVERSE EN, P199
   Breu S, 2006, IEEE INT CONF AUTOM, P221
   D'Ambros M, 2009, IEEE T SOFTWARE ENG, V35, P720, DOI 10.1109/TSE.2009.17
   Feng T, 2004, PROC IEEE INT CONF S, P524
   Fischer M, 2006, WORK CONF REVERSE EN, P179
   Gall H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   German DM, 2006, EMPIR SOFTW ENG, V11, P369, DOI 10.1007/s10664-006-9004-6
   Girba T, 2004, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2004.1357788
   GIRBA T, 2007, 9 INT WORKSH PRINC S, P83, DOI DOI 10.1145/1294948.1294970
   Godfrey MW, 2009, IEEE SOFTWARE, V26, P67, DOI 10.1109/MS.2009.10
   Harel D, 2009, COMMUN ACM, V52, P67, DOI 10.1145/1467247.1467274
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kuhn A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P133
   Lungu M, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P91
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Mulder F., 2010, P JOINT ERCIM WORKSH, P23, DOI DOI 10.1145/1862372.1862381
   PERRY D, 2000, FUTURE SOFTWARE ENG, P345
   Pinzger Martin., 2005, SOFTVIS 05, P67
   Ratzinger J., 2005, Proceedings of the 2nd International Workshop on Mining Software Repositories (MSR'05), P1, DOI DOI 10.1145/1083142.1083155
   Treude C, 2009, PROC INT CONF SOFTW, P575, DOI 10.1109/ICSE.2009.5070559
   VANDERLINDEN FJ, 1995, IEEE SOFTWARE, V12, P51, DOI 10.1109/52.469760
   Vanya A, 2008, INT C PROGRAM COMPRE, P192, DOI 10.1109/ICPC.2008.34
   Vanya A, 2013, J SOFTW-EVOL PROC, V25, P219, DOI 10.1002/smr.574
   Vanya A, 2012, INFORM SOFTWARE TECH, V54, P347, DOI 10.1016/j.infsof.2011.11.003
   Vanya A, 2011, EUR CON SFTWR MTNCE, P121, DOI 10.1109/CSMR.2011.18
   Vanya A, 2009, WORK CONF REVERSE EN, P227, DOI 10.1109/WCRE.2009.30
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   Zimmermann T, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P73, DOI 10.1109/IWPSE.2003.1231213
NR 35
TC 0
Z9 0
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2013
VL 55
IS 9
BP 1625
EP 1639
DI 10.1016/j.infsof.2013.02.016
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 174PU
UT WOS:000321168700008
DA 2024-07-18
ER

PT J
AU Aversano, L
   Tortorella, M
AF Aversano, Lerina
   Tortorella, Maria
TI Quality evaluation of floss projects: Application to ERP systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software evaluation; Open source; Enterprise resource planning; Software
   metrics
ID MODEL
AB Context: The selection and adoption of open source software can significantly influence the competitiveness of organisations. Open source software solutions offer great opportunities for cost reduction and quality improvement, especially for small and medium enterprises that typically have to address major difficulties due to the limited resources available for selecting and adopting a new software system.
   Objective: This paper aims to provide support for selecting the open source software that is most suitable to the specific needs of an enterprise from among the options offering equivalent or overlapping functionality.
   Method: This paper proposes a framework for evaluating the quality and functionality of open source software systems. The name of the framework is EFFORT (Evaluation Framework for Free/Open souRce projecTs). It supports the evaluation of product quality, community trustworthiness and product attractiveness. The framework needs to be customised to the analysis of software systems for a specific context.
   Results: The paper presents the customisation of EFFORT for evaluating Enterprise Resource Planning (ERP) open source software systems. The customised framework was applied to the evaluation and comparison of five ERP open source software systems. The results obtained permitted both the refinement of the measurement framework and the identification of the ERP open source software system that achieved the highest score for each chosen characteristic.
   Conclusion: EFFORT is a useful tool for evaluating and selecting an open source software system. It may significantly reduce the amount of negotiation conducted among an enterprise's members and reduce the time and cost required for gathering and interpreting data. The EFFORT framework also considers the users' opinions by introducing relevance markers associated with the metrics and questions in the data aggregation process. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Aversano, Lerina; Tortorella, Maria] Univ Sannio, Dept Engn, I-82100 Benevento, Italy.
C3 University of Sannio
RP Tortorella, M (corresponding author), Univ Sannio, Dept Engn, Via Traiano, I-82100 Benevento, Italy.
EM aversano@unisannio.it; tortorella@unisannio.it
RI Aversano, Lerina/AAG-3855-2019
OI Aversano, Lerina/0000-0003-2436-6835
CR [Anonymous], 2002, Metrics and Models in Software Quality Engineering
   [Anonymous], PRECISE
   [Anonymous], 2010, P 3 INT WORKSH EM TR
   Aversano Lerina, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P202, DOI 10.1007/978-3-642-21843-9_17
   Aversano L, 2010, INSTICC EV NOV APPR, P186
   Aversano L, 2011, LECT NOTES BUS INF P, V73, P119
   AYALA C, 2011, 7 INT C OP SOURC SYS, V365, P244
   Baharum Z, 2009, 2009 THIRD ASIA INTERNATIONAL CONFERENCE ON MODELLING & SIMULATION, VOLS 1 AND 2, P419, DOI 10.1109/AMS.2009.96
   Baki B, 2005, BUS PROCESS MANAG J, V11, P75, DOI 10.1108/14637150510578746
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   Bernroider EWN, 2006, DECIS SUPPORT SYST, V42, P988, DOI 10.1016/j.dss.2005.02.006
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Boehm B.W., 1978, Characteristics of Software Quality
   Bueno S, 2008, COMPUT STAND INTER, V30, P137, DOI 10.1016/j.csi.2007.08.001
   Cau A, 2006, MENDLEY, V42, P1
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   Confino Joel P., 2010, International Journal of Strategic Information Technology and Applications, V1, P60, DOI 10.4018/jsita.2010101505
   del Bianco V, 2011, IEEE SOFTWARE, V28, P67, DOI 10.1109/MS.2011.93
   DELBIANCO V, 2010, 6 INT C OP SOURC SYS, V319, P15
   DeLone WH, 2003, J MANAGE INFORM SYST, V19, P9, DOI 10.1080/07421222.2003.11045748
   DEPREZ JC, 2008, 9 INT C PROD FOC SOF, V5089, P189
   Ebert C, 2007, IEEE SOFTWARE, V24, P105, DOI 10.1109/MS.2007.83
   Ebert C, 2009, IEEE SOFTWARE, V26, P50, DOI 10.1109/MS.2009.38
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Fui-Hoon Nah F, 2002, ENTERPRISE RESOURCE
   Ghapanchi Amirhossein, 2008, International Journal of Information Systems and Change Management, V3, P157, DOI 10.1504/IJISCM.2008.020693
   Ghapanchi A, 2008, ICIS 2008 P
   Golden B, 2005, EXTRACTED SUCCEEDING
   Hauge O, 2010, INFORM SOFTWARE TECH, V52, P1133, DOI 10.1016/j.infsof.2010.05.008
   Hyoseob K, 2005, 3 INT C MAN RES CRAN
   IGBARIA M, 1990, OMEGA-INT J MANAGE S, V18, P637, DOI 10.1016/0305-0483(90)90055-E
   International Organization for Standardization, 1994, 8402 ISOIEC
   International Organization for Standardization, 2005, 250002005 ISOIEC
   International Organization for Standardization, 2001, 9126 ISOIEC 1
   KAN SH, 1994, IBM SYST J, V33, P4, DOI 10.1147/sj.331.0004
   Liao XW, 2007, INFORM SYST, V32, P1005, DOI 10.1016/j.is.2006.10.005
   Mc Call J. A., 1977, FACTORS SOFTWARE QUA, VI
   Meirelles P., 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P11, DOI 10.1109/SBES.2010.27
   Nagy D, 2010, COMMUN ACM, V53, P148, DOI 10.1145/1666420.1666457
   Open Source ERp Guru, 2008, EV CRIT OP SOURC ERP
   OpenBRR, 2005, OPENBRR BUS READ RAT
   Reuther D., 2004, 2004 IEEE International Engineering Management Conference (IEEE Cat. No.04CH37574), P851
   Rofi M, 2008, ASIA PACIFIC IND ENG, V2008, P849
   Samoladas I, 2008, INT FED INFO PROC, V275, P237
   Santos C, 2010, 18 EUR C INF SYST EC, P15
   Spinellis D, 2009, ELECTRON NOTES THEOR, V233, P5, DOI 10.1016/j.entcs.2009.02.058
   SRINIVASAN A, 1985, MIS QUART, V9, P243, DOI 10.2307/248951
   Sung WJ, 2007, ALPIT 2007: PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON ADVANCED LANGUAGE PROCESSING AND WEB INFORMATION TECHNOLOGY, P515, DOI 10.1109/ALPIT.2007.81
   Watson RT, 1998, MIS QUART, V22, P61, DOI 10.2307/249678
   Wei C.-C., 2005, INT J PROD ECON, V96, P47
   Wheeler D. A., 2011, EVALUATE OPEN SOURCE
NR 52
TC 27
Z9 29
U1 0
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2013
VL 55
IS 7
BP 1260
EP 1276
DI 10.1016/j.infsof.2013.01.007
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 161UD
UT WOS:000320217900008
DA 2024-07-18
ER

PT J
AU Rattan, D
   Bhatia, R
   Singh, M
AF Rattan, Dhavleesh
   Bhatia, Rajesh
   Singh, Maninder
TI Software clone detection: A systematic review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software clone; Clone detection; Systematic literature review; Semantic
   clones; Model based clone
ID CODE CLONES; COPY; EVOLUTION; CCFINDER; PASTE; VISUALIZATION;
   SIMILARITIES; PROGRAMS; SUPPORT; TOOL
AB Context: Reusing software by means of copy and paste is a frequent activity in software development. The duplicated code is known as a software clone and the activity is known as code cloning. Software clones may lead to bug propagation and serious maintenance problems.
   Objective: This study reports an extensive systematic literature review of software clones in general and software clone detection in particular.
   Method: We used the standard systematic literature review method based on a comprehensive set of 213 articles from a total of 2039 articles published in 11 leading journals and 37 premier conferences and workshops.
   Results: Existing literature about software clones is classified broadly into different categories. The importance of semantic clone detection and model based clone detection led to different classifications. Empirical evaluation of clone detection tools/techniques is presented. Clone management, its benefits and cross cutting nature is reported. Number of studies pertaining to nine different types of clones is reported. Thirteen intermediate representations and 24 match detection techniques are reported.
   Conclusion: We call for an increased awareness of the potential benefits of software clone management, and identify the need to develop semantic and model clone detection techniques. Recommendations are given for future research. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Rattan, Dhavleesh] Baba Banda Singh Bahadur Engn Coll, Dept Comp Sci & Engn & Informat & Technol, Fatehgarh Sahib 140407, Punjab, India.
   [Bhatia, Rajesh] Deenbandhu Chhotu Ram Univ Sci & Technol, Dept Comp Sci & Engn, Sonepat 131039, Haryana, India.
   [Singh, Maninder] Thapar Univ, Dept Comp Sci & Engn, Patiala 147004, Punjab, India.
C3 Deenbandhu Chhotu Ram University of Science & Technology; Thapar
   Institute of Engineering & Technology
RP Rattan, D (corresponding author), Baba Banda Singh Bahadur Engn Coll, Dept Comp Sci & Engn & Informat & Technol, Fatehgarh Sahib 140407, Punjab, India.
EM dhavleesh@rediffmail.com; rbhatiapatiala@gmail.com; msingh@thapar.edu
RI singh, maninder/IQS-3568-2023; Bhatia, Dr Rajesh/JUU-9542-2023; Singh,
   Maninder/B-7553-2009
OI Singh, Maninder/0000-0001-8489-8759; Rattan,
   Dhavleesh/0000-0002-6295-5078
FU All India Council for Technical Education (AICTE), Govt. of India
FX We thank editor and anonymous reviewers for worthy comments. The
   comments and suggestions are extremely helpful in improving the research
   paper draft. We are also grateful to All India Council for Technical
   Education (AICTE), Govt. of India for funding project titled "UML based
   Automated Test Case Generation" for second author.
CR Adar E, 2007, PROC INT CONF SOFTW, P762
   Al-Ekram R., 2005, ISESE, P376
   [Anonymous], WORLD ACAD SCI ENG T
   [Anonymous], 2008, P 2008 FDN SOFTW ENG
   [Anonymous], 2007, EBSE200701 KEEL U
   [Anonymous], 2010, IEEE INT C SOFTWAREM
   [Anonymous], 2006, 21 ACM SIGPLAN S OBJ
   [Anonymous], SAC
   Antoniol G, 2001, PROC IEEE INT CONF S, P273, DOI 10.1109/ICSM.2001.972740
   Antoniol G, 2002, INFORM SOFTWARE TECH, V44, P755, DOI 10.1016/S0950-5849(02)00123-4
   Aversano L, 2001, WSE 2001: 3RD INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION, P107
   Aversano L, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P81
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Bakota T, 2007, PROC IEEE INT CONF S, P234
   Balazinska M., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P326, DOI 10.1109/WCRE.1999.806971
   Balazinska M., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P292, DOI 10.1109/METRIC.1999.809750
   Balazinska M, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P98, DOI 10.1109/WCRE.2000.891457
   Balint M, 2006, INT C PROGRAM COMPRE, P56, DOI 10.1109/ICPC.2006.25
   Barbour Liliane, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P76, DOI 10.1109/ICPC.2010.13
   Basit H, 2005, P 27 INT C SOFTW ENG, P15
   BASIT H. A., 2011, P 5 INT WORKSH SOFTW, P1, DOI DOI 10.1145/1985404.1985406
   BASIT H A, 2007, P 6 JOINT M EUR SOFT, P513, DOI DOI 10.1145/1287624.1287698
   Basit HA, 2009, IEEE T SOFTWARE ENG, V35, P497, DOI 10.1109/TSE.2009.16
   Basit Hamid Abdul, 2005, SIGSOFT Softw. Eng. Notes, V30, P156, DOI [10.1145/1095430.1081733, DOI 10.1145/1095430.1081733]
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bettenburg N, 2010, SCI COMPUT PROGRAM, V74, P1
   Biegel B., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P237, DOI 10.1109/WCRE.2010.34
   Biegel B., 2010, P IEEEACM INT C AUTO, P167
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Brixtel R, 2010, IEEE INT WORK C SO, P77, DOI 10.1109/SCAM.2010.19
   Brown C, 2010, PEPM '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION, P111, DOI 10.1145/1706356.1706378
   Bruntink M, 2005, IEEE T SOFTWARE ENG, V31, P804, DOI 10.1109/TSE.2005.114
   Bruntink M, 2004, P 1 WORKSH ASP REV E, P5
   Budgen D., 2006, 28th International Conference on Software Engineering Proceedings, P1051, DOI 10.1145/1134285.1134500
   Bulychev P., 2008, SPRING YOUNG RES C S, DOI DOI 10.15514/SYRCOSE-2008-2-22
   Burd E, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P36, DOI 10.1109/SCAM.2002.1134103
   Carver J, 2011, P 5 INT WORKSH SOFTW, P61
   Casazza G, 2001, FIRST IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P90, DOI 10.1109/SCAM.2001.972670
   Chilowicz M, 2009, ELECTRON NOTES THEOR, V238, P47, DOI 10.1016/j.entcs.2009.09.040
   Chilowicz M, 2009, INT C PROGRAM COMPRE, P243, DOI 10.1109/ICPC.2009.5090050
   Choi E., 2011, PROC 5 INT WORKSHOP, P7
   Choi S, 2009, J SYST SOFTWARE, V82, P862, DOI 10.1016/j.jss.2008.11.848
   Ciancarini P, 2009, ENTERTAIN COMPUT, V1, P9, DOI 10.1016/j.entcom.2009.06.001
   Corazza A., 2010, Proceedings of the 6th International Conference on Predictive Models in Software Engineering, p4:1, DOI [10.1145/1868328.1868335, DOI 10.1145/1868328.1868335]
   Cordy J R., 2004, Proc. LDTA 2004, ACM 4th International Workshop on Language Descriptions, P1
   Dagenais M, 1998, P 8 IBM CTR ADV STUD, P192
   DALGARNO AM, 2008, P 12 INT SOFTW PROD, P351, DOI DOI 10.1109/SPLC.2008.55
   Dang Yingnong, 2011, P 5 INT WORKSH SOFTW, P63
   Davis I. J., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P242, DOI 10.1109/WCRE.2010.35
   De Lucia A, 2005, PROG COMPREHEN, P333, DOI 10.1109/WPC.2005.42
   De Lucia A, 2004, PROG COMPREHEN, P132, DOI 10.1109/WPC.2004.1311055
   De Lucia A, 2007, WSE 2007: NINTH IEEE INTERNATIONAL SYMPOSIUM ON WEB SITE EVOLUTION, PROCEEDINGS, P65
   de Wit M, 2009, PROC IEEE INT CONF S, P169, DOI 10.1109/ICSM.2009.5306336
   Deissenboeck F., 2010, P 4 INT WORKSH SOFTW, P37
   Deissenboeck F, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.129
   Deissenboeck F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P603, DOI 10.1145/1368088.1368172
   Di Lucca GA, 2002, P INT COMP SOFTW APP, P481, DOI 10.1109/CMPSAC.2002.1045051
   Di Penta M, 2005, J SYST SOFTWARE, V77, P225, DOI 10.1016/j.jss.2004.03.033
   Di Penta M, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P280, DOI 10.1109/CSMR.2005.29
   Domann C, 2009, INT SYMP EMP SOFTWAR, P444
   Duala-Ekoko E, 2007, PROC INT CONF SOFTW, P158
   Duala-Ekoko E, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767754
   Duala-Ekoko E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P843, DOI 10.1145/1368088.1368218
   Ducasse S, 2006, J SOFTW MAINT EVOL-R, V18, P37, DOI 10.1002/smr.317
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Evans WS, 2009, SOFTWARE QUAL J, V17, P309, DOI 10.1007/s11219-009-9074-y
   Falke R, 2008, EMPIR SOFTW ENG, V13, P601, DOI 10.1007/s10664-008-9073-9
   Fanta R, 1999, J SOFTW MAINT-RES PR, V11, P223, DOI 10.1002/(SICI)1096-908X(199907/08)11:4<223::AID-SMR194>3.0.CO;2-D
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fukushima Y, 2009, ASIA PAC SOFWR ENG, P373, DOI 10.1109/APSEC.2009.53
   Gabel M, 2010, ACM SIGPLAN NOTICES, V45, P175, DOI 10.1145/1932682.1869475
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Gallagher K, 2003, PROG COMPREHEN, P251
   German DM, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P81, DOI 10.1109/MSR.2009.5069483
   Gitchell D., 1999, SIGCSE Bulletin, V31, P266, DOI 10.1145/384266.299783
   Gode N., 2011, PROC 5 INT WORKSHOP, P14
   Gode N, 2010, P 4 INT WORKSH SOFTW, P22
   Godfrey M.W., 2011, Proceedings of the 5th International Workshop on Software Clones, P65
   Göde N, 2011, EUR CON SFTWR MTNCE, P65, DOI 10.1109/CSMR.2011.11
   Göde N, 2009, IEEE INT WORK C SO, P77, DOI 10.1109/SCAM.2009.17
   Göde N, 2009, EUR CON SFTWR MTNCE, P219, DOI 10.1109/CSMR.2009.20
   Grant S, 2009, INT C PROGRAM COMPRE, P233, DOI 10.1109/ICPC.2009.5090048
   Guo J, 2008, WORK CONF REVERSE EN, P91, DOI 10.1109/WCRE.2008.12
   Hayase Y, 2008, P WORKSH DEF LARG SO, P37
   Higo Y, 2002, LECT NOTES COMPUT SC, V2559, P185
   Higo Y., 2005, ACM SIGSOFT Softw. Eng. Notes, V30, P1
   HIGO Y, 2004, P 8 IASTED INT C SOF, P222
   Higo Y, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P262, DOI 10.1109/ASPEC.2007.44
   Higo Y, 2007, INFORM SOFTWARE TECH, V49, P985, DOI 10.1016/j.infsof.2006.10.005
   Higo Y, 2011, EUR CON SFTWR MTNCE, P75, DOI 10.1109/CSMR.2011.12
   Higo Y, 2009, ASIA PAC SOFWR ENG, P365, DOI 10.1109/APSEC.2009.30
   Higo Y, 2008, J SOFTW MAINT EVOL-R, V20, P435, DOI 10.1002/smr.394
   HORWITZ S, 1990, SIGPLAN NOTICES, V25, P234, DOI 10.1145/93548.93574
   Hou DQ, 2009, PROC IEEE INT CONF S, P391, DOI 10.1109/ICSM.2009.5306284
   Hou DQ, 2009, INT C PROGRAM COMPRE, P238, DOI 10.1109/ICPC.2009.5090049
   Hou Daqing., 2009, Conference of the Center for Advanced Studies on Collaborative Research (CASCON), P188, DOI DOI 10.1145/1723028.1723051
   Huang Jian-lin, 2009, Proceedings of the 2009 International Conference on Computational Intelligence and Security (CIS 2009), P308, DOI 10.1109/CIS.2009.175
   Hummel Benjamin., 2011, Proceedings of the 5th International Workshop on Software Clones, IWSC '11, P21, DOI [10.1145/1985404.1985409, DOI 10.1145/1985404.1985409]
   Imai T, 2002, P INT COMP SOFTW APP, P299, DOI 10.1109/CMPSAC.2002.1045018
   Jablonski Patricia, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P170, DOI 10.1109/ICPC.2010.22
   Jablonski P., 2007, P C OBJ OR PROGR SYS, P933
   Jablonski P, 2007, P ECL TECHN EXCH WOR, P5
   Jacob F, 2010, PROCEEDINGS OF THE 48TH ANNUAL SOUTHEAST REGIONAL CONFERENCE (ACM SE 10), P457, DOI 10.1145/1900008.1900143
   Jalbert K., 2010, P 26 IEEE INT C SOFT, P1
   Jarzabek S, 2006, J SOFTW MAINT EVOL-R, V18, P267, DOI 10.1002/smr.333
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang Lingxiao, 2007, P THE 6 JOINT M EURO, P55, DOI DOI 10.1145/1287624.1287634
   JIANG LX, 2009, P 18 INT S SOFTW TES, P81
   Jiang ZM, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P203, DOI 10.1109/SCAM.2007.19
   Jiang ZM, 2006, ASPEC 2006: 13TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P467
   JOHNSON JH, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P120, DOI 10.1109/ICSM.1994.336783
   Juergens E., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P79, DOI 10.1145/1810295.1810308
   Juergens E., 2010, P 4 INTERNATIONALWOR, P1
   Juergens E, 2011, P 5 INT WORKSH SOFTW, P67
   Juergens E, 2010, EUR CON SFTWR MTNCE, P78, DOI 10.1109/CSMR.2010.33
   Juergens E, 2009, PROC INT CONF SOFTW, P603, DOI 10.1109/ICSE.2009.5070566
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kamiya T, 2001, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2001.919197
   Kamiya T, 2011, P 5 INT WORKSH SOFTW, P69
   Kapser C, 2005, PROC IEEE INT CONF S, P305
   Kapser C, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P85, DOI 10.1109/IWPSE.2004.1334772
   Kapser C., 2007, DUPL RED SIM SOFTW D
   Kapser CJ, 2006, J SOFTW MAINT EVOL-R, V18, P61, DOI 10.1002/smr.327
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kawaguchi S, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P195, DOI 10.1109/IWPSE.2003.1231227
   Kawaguchi S, 2009, WORK CONF REVERSE EN, P313, DOI [10.1109/MCRE.2009.36, 10.1109/WCRE.2009.36]
   Kim H, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P301, DOI 10.1145/1985793.1985835
   Kim M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P83
   Kim M, 2007, PROC INT CONF SOFTW, P101, DOI 10.1109/ICSECOMPANION.2007.81
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Kim Miryung., 2005, P 2005 INT WORKSHOP, P1, DOI DOI 10.1145/1082983.1083146
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kodhai E., 2010, Proceedings of the 2010 International Conference on Recent Trends in Information, Telecommunication and Computing (ITC 2010), P241, DOI 10.1109/ITC.2010.55
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Kontogiannis K, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P44, DOI 10.1109/WCRE.1997.624575
   Kontogiannis K, 2004, P C CTR ADV STUD COL, P34
   Kontogiannis K. A., 1996, Automated Software Engineering, V3, P77, DOI 10.1007/BF00126960
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Koschke R, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P119, DOI 10.1109/FOSM.2008.4659255
   Koschke Rainer, 2007, DUPLICATION REDUNDAN, P24
   Kozlov D, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P358, DOI 10.1109/QUATIC.2010.94
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Krinke Jens, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P98, DOI 10.1109/MSR.2010.5463290
   Krinke J., 2010, SER IWSC 10, P41
   Krinke J., 2011, P 5 INT WORKSHOP SOF, P28
   Krinke J, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P57, DOI 10.1109/SCAM.2008.14
   Krinke J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P170, DOI 10.1109/WCRE.2007.7
   Lague B, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P314, DOI 10.1109/ICSM.1997.624264
   Lakhotia A, 2003, PROG COMPREHEN, P285
   Lanubile F, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P379, DOI 10.1109/CSMR.2003.1192447
   Lavoie T., 2010, IWSC10 Proceedings of the 4th International Workshop on Software Clones, P25
   Lavoie Thierry., 2011, P 5 INT WORKSHOP SOF, P34
   Lee Hyo-Sub, 2009, P INT WORKSH DAT INT, P7
   Lee M.-W., 2010, Proceedings of the Eighteenth ACM SIGSOFT International Symposium on Foundations of Software Engineering, FSE '10, P167
   Lee S., 2005, SDD: high performance code clone detection system for large scale source code, P140
   Li H, 2009, P 2009 ACM SIGPLAN W, P169
   Li Z. O, 2010, P 2 INT C SOFTW ENG, P111
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   LIU H, 2006, P 13 AS PAC SOFTW EN, P269
   Livieri S, 2007, PROC INT CONF SOFTW, P106
   Livieri Simone., 2007, MSR 07, P22
   Lozano A, 2007, P 4 INT WORKSH MIN S, P4
   Lozano A., 2010, IWSC, V10, P65, DOI [10.1145/1808901.1808910, DOI 10.1145/1808901.1808910]
   Lozano A, 2008, PROC IEEE INT CONF S, P227, DOI 10.1109/ICSM.2008.4658071
   Ma YS, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P254, DOI 10.1109/ASPEC.2007.16
   Mao AndyY., 2007, Proceedings of the 2007 Conference of the Center for Advanced Studies on Collaborative Research, CASCON'07, P12
   Marcus A, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P107, DOI 10.1109/ASE.2001.989796
   Martin D., 2011, PROC 5 INT WORKSHOP, P41, DOI DOI 10.1145/1985404.1985412
   Mayrand J, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P244, DOI 10.1109/ICSM.1996.565012
   Mende T, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P163
   Monden A, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P87, DOI 10.1109/METRIC.2002.1011328
   Monden A, 2011, IEEE SOFTWARE, V28, P42, DOI 10.1109/MS.2010.159
   Nguyen T.T, P 24 IEEE ACM INT C
   Nguyen TT, 2009, PROC IEEE INT CONF S, P491, DOI 10.1109/ICSM.2009.5306283
   Nguyen TT, 2009, PROC INT CONF SOFTW, P437, DOI 10.1109/ICSE-COMPANION.2009.5071050
   Pate J.R, 2010, SERG201001 U AL, P20
   Patenaude JF, 1999, PROG COMPREHEN, P49, DOI 10.1109/WPC.1999.777743
   Perumal A., 2010, 2010 International Conference on Computer and Communication Technology (ICCCT 2010), P575, DOI 10.1109/ICCCT.2010.5640465
   Petersen K., 2008, C EVALUATION ASSESSM, P71
   Pham NH, 2009, PROC INT CONF SOFTW, P276, DOI 10.1109/ICSE.2009.5070528
   Rahman Foyzur, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P72, DOI 10.1109/MSR.2010.5463343
   Rajapakse D, 2005, P INT WORLD WID WEB, P924
   Rajapakse DC, 2007, PROC INT CONF SOFTW, P116
   Roy CK, 2010, J SOFTW MAINT EVOL-R, V22, P165, DOI 10.1002/smr.416
   Roy CK, 2009, PROC IEEE INT CONF S, P447, DOI 10.1109/ICSM.2009.5306301
   Roy CK, 2009, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW.2009.18
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy CK, 2008, INT C PROGRAM COMPRE, P153, DOI 10.1109/ICPC.2008.42
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Roy ChanchalK., 2010, Proceedings of the 4th International Workshop on Software Clones, IWSC '10, P17
   Roy J. R., 2007, QUEENS SCH COMPUTING, V541, P64
   Sæbjornsen A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P117
   Saha R.K., 2011, P 5 INT WORKSH SOFTW, P71
   Saha RK, 2010, IEEE INT WORK C SO, P87, DOI 10.1109/SCAM.2010.32
   Sasaki Y., 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P102, DOI 10.1109/MSR.2010.5463293
   Schugerl P., 2011, IWSC, P47, DOI [10.1145/1985404.1985413, DOI 10.1145/1985404.1985413]
   Schulze S., 2010, GPCE, P103
   Schulze S, 2008, P 1 WORKSH REF TOOLS, P4
   Selim G. M. K., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P13, DOI 10.1109/WCRE.2010.11
   Selim G. M. K., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P227, DOI 10.1109/WCRE.2010.33
   Shawky Doaa M., 2010, 2010 2nd International Conference on Software Technology and Engineering (ICSTE 2010), P159, DOI 10.1109/ICSTE.2010.5608893
   Shawky DM, 2010, INT CONF COMP SCI, P580, DOI 10.1109/ICCSIT.2010.5563834
   Storrle Harald., 2010, ECSA COMPANION VOLUM, P285
   Sutton A, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1079
   Synytskyy N, 2003, FIFTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION THEME: ARCHITECTURE, PROCEEDINGS, P49, DOI 10.1109/WSE.2003.1234008
   Tairas R., 2006, P 2006 OOPSLA WORKSH, P50
   Tairas R., 2011, P 5 INT WORKSH SOFTW, P54
   Tairas R., 2006, P 44 ANN SE REG C, P679, DOI 10.1145/1185448.1185597
   Tairas R, 2007, P 22 IEEE ACM INT C, P549
   Tairas R., 2009, Companion to the 24th Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications, OOPSLA 2009, October 25-29, 2009, Orlando, Florida, P817, DOI [10.1145 /1639950.1640030, DOI 10.1145/1639950.1640030]
   Tairas R, 2009, P C OBJ OR PROGR SYS, P781
   Tairas R, 2009, EMPIR SOFTW ENG, V14, P33, DOI 10.1007/s10664-008-9089-1
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
   Tiarks R, 2009, IEEE INT WORK C SO, P67, DOI 10.1109/SCAM.2009.16
   Tung Thanh Nguyen, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P451, DOI 10.1109/ASE.2008.71
   Ueda Y, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P327, DOI 10.1109/APSEC.2002.1183002
   Ueda Y, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P67, DOI 10.1109/METRIC.2002.1011326
   Van Rysselberghe F, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P336, DOI 10.1109/ASE.2004.1342759
   Wahler V, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P128
   Walenstein A, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/WCRE.2003.1287259
   Wettel R, 2005, SEVENTH INTERNATIONAL SYMPOSIUM ON SYMBOLIC AND NUMERIC ALGORITHMS FOR SCIENTIFIC COMPUTING, PROCEEDINGS, P63
   Whaley J, 2004, ACM SIGPLAN NOTICES, V39, P131, DOI 10.1145/996893.996859
   Woosung Jung, 2010, 2010 IEEE/ACIS 9th International Conference on Computer and Information Science (ICIS 2010), P702, DOI 10.1109/ICIS.2010.102
   WUU Y, 1991, SOFTWARE PRACT EXPER, V21, P739, DOI 10.1002/spe.4380210706
   Yokomori R., 2011, P 10 ASP OR SOFTW DE, P215
   Yoshida N., 2005, METRICS, P16
   Yoshida N, 2008, P 2008 WORKSH DEF LA, P41
   Yoshida Norihiro, 2010, P 4 INT WORKSH SOFTW, P49, DOI [10.1145/1808901.1808908, DOI 10.1145/1808901.1808908]
   Zhang Y, 2008, PROC IEEE INT CONF S, P376, DOI 10.1109/ICSM.2008.4658086
NR 230
TC 238
Z9 272
U1 1
U2 31
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2013
VL 55
IS 7
BP 1165
EP 1199
DI 10.1016/j.infsof.2013.01.008
PG 35
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 161UD
UT WOS:000320217900003
DA 2024-07-18
ER

PT J
AU Sánchez-González, L
   García, F
   Ruiz, F
   Mendling, J
AF Sanchez-Gonzalez, Laura
   Garcia, Felix
   Ruiz, Francisco
   Mendling, Jan
TI Quality indicators for business process models from a gateway complexity
   perspective
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Business process model; Measure; Threshold; Indicator
AB Context: Quality assurance of business process models has been recognized as an important factor for modeling success at an enterprise level. Since quality of models might be subject to different interpretations, it should be addressed in the most objective way, by the application of measures. That said, however, assessment of measurement results is not a straightforward task: it requires the identification of relevant threshold values, which are able to distinguish different levels of process model quality.
   Objective: Since there is no consensual technique for obtaining these values, this paper proposes the definition of thresholds for gateway complexity measures based on the application of statistical techniques on empirical data.
   Method: To this end, we conducted a controlled experiment that evaluates quality characteristics of understandability and modifiability of process models in two different runs. The thresholds obtained were validated in a replication of the experiment.
   Results: The thresholds for gateway complexity measures are instrumental as guidelines for novice modelers. A tool for supporting business process model measurement and improvement is described, based on the automatic application of measurement, and assessment as well as derivation of advice about how to improve the quality of the model.
   Conclusion: It is concluded that thresholds classified business process models in the specific level of understandability and modifiability, so these thresholds were good and useful for decision-making. (c) 2012 Elsevier B.V. All rights reserved.
C1 [Sanchez-Gonzalez, Laura; Garcia, Felix; Ruiz, Francisco] Univ Castilla La Mancha, Inst Tecnol & Sistemas Informac, E-13071 Ciudad Real, Spain.
   [Mendling, Jan] WU Vienna, A-1090 Vienna, Austria.
C3 Universidad de Castilla-La Mancha
RP Sánchez-González, L (corresponding author), Univ Castilla La Mancha, Inst Tecnol & Sistemas Informac, Paseo Univ 4, E-13071 Ciudad Real, Spain.
EM Laura.Sanchez@uclm.es; Felix.Garcia@uclm.es; Francisco.RuizG@uclm.es;
   jan.mendling@wu.ac.at
RI Ruiz, Francisco/D-4295-2011; Garcia, Felix/D-4299-2011
OI Ruiz, Francisco/0000-0002-4923-7848; Mendling, Jan/0000-0002-7260-524X;
   Garcia, Felix/0000-0001-6460-0353
FU ALTA-MIRA (Junta de Comunidades de Castilla-La Mancha, Fondo Social
   Europeo) [PII2I09-0106-2463]; INGENIOSO (Junta de Comunidades de
   Castilla La Mancha) [PEII11-0025-9533]; PEGASO/MAGO (Ministerio de
   Ciencia e Innovacion MICINN) [TIN2009-13718-C02-01]; PEGASO/MAGO (Fondo
   Europeo de Desarrollo Regional FEDER) [TIN2009-13718-C02-01]
FX This work was partially funded by the following projects: ALTA-MIRA
   (Junta de Comunidades de Castilla-La Mancha, Fondo Social Europeo,
   PII2I09-0106-2463), INGENIOSO (Junta de Comunidades de Castilla La
   Mancha, PEII11-0025-9533) and PEGASO/MAGO (Ministerio de Ciencia e
   Innovacion MICINN and Fondo Europeo de Desarrollo Regional FEDER,
   TIN2009-13718-C02-01).
CR Alves TL, 2010, PROC IEEE INT CONF S
   [Anonymous], 1999, DISTANCE FRAMEWORK S
   [Anonymous], 2011, ISO 13314
   [Anonymous], 2006, DAGST SEM P SCHLOSS
   [Anonymous], EXPT MODELS VALIDATI
   [Anonymous], SOFWARE MAINTENANCE
   [Anonymous], 10 WORKSH BUS PROC M
   [Anonymous], P 2010 ICSE WORKSH E
   [Anonymous], INT WORKSH SOFTW MEA
   [Anonymous], IEEE T SOFTWARE ENG
   [Anonymous], SOFTW TECHN C
   [Anonymous], 2001, 912612001 ISOIEC
   [Anonymous], S APPL COMP SAC06
   [Anonymous], 1987, P 9 INT C SOFTW ENG
   [Anonymous], EMPIRICAL SOFTWARE E
   [Anonymous], THRESHOLDS OBJECT OR
   [Anonymous], HDB CMU
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Becker J., 2000, Business Process Management. Models, Techniques
   Bender R, 1999, BIOMETRICAL J, V41, P305, DOI 10.1002/(SICI)1521-4036(199906)41:3<305::AID-BIMJ305>3.0.CO;2-Y
   Boehm BW., 1981, Software Engineering Economics
   Bryant F.B., 1995, Reading and understanding multivariate statistics, P99, DOI DOI 10.3109/07420528.2010.540363
   CANT SN, 1995, INFORM SOFTWARE TECH, V37, P351, DOI 10.1016/0950-5849(95)91491-H
   Cardoso J, 2006, LECT NOTES COMPUT SC, V4103, P117
   Cardoso J, 2005, 2005 IEEE International Conference on Web Services, Vols 1 and 2, Proceedings, P803
   Cardoso J, 2006, P IEEE I C SERV COMP, P167, DOI 10.1109/SCC.2006.82
   Catal C, 2011, INFORM SCIENCES, V181, P4867, DOI 10.1016/j.ins.2011.06.017
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Dehnert J, 2004, INT J COOP INF SYST, V13, P289, DOI 10.1142/S0218843004000973
   Erni K, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P64, DOI 10.1109/METRIC.1996.492444
   FENTON N, 1994, IEEE T SOFTWARE ENG, V20, P199, DOI 10.1109/32.268921
   Ferreira KAM, 2012, J SYST SOFTWARE, V85, P244, DOI 10.1016/j.jss.2011.05.044
   Hand DJ, 2009, MACH LEARN, V77, P103, DOI 10.1007/s10994-009-5119-5
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Kitchenham Barbara., 2010, P 2010 ACM IEEE INT, P1
   Kyung-A Yoon, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P443
   Lindman HR., 1974, Analysis of Variance in Complex Experimental Designs
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Mendling J, 2008, LECT NOTES BUS INF P, V7, P142
   Mendling J, 2008, LECT NOTES BUS INF P, V6, P1
   Michie D., 1994, MACHINE LEARNING NEU
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   Olson D.L., 2008, ADV DATA MINING TECH, DOI https://doi.org/10.1007/978-3-540-76917-0
   Reijers HA, 2011, IEEE T SYST MAN CY A, V41, P449, DOI 10.1109/TSMCA.2010.2087017
   Royston P, 2006, STAT MED, V25, P127, DOI 10.1002/sim.2331
   González LS, 2010, BUS PROCESS MANAG J, V16, P114, DOI 10.1108/14637151011017976
   Sanchez-Gonzalez L., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P1445, DOI [DOI 10.1145/1982185.1982496, 10.1145/1982185.1982496]
   Sánchez-González L, 2010, LECT NOTES COMPUT SC, V6426, P78
   Shatnawi R, 2010, IEEE T SOFTWARE ENG, V36, P216, DOI 10.1109/TSE.2010.9
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Wand Y, 2002, INFORM SYST RES, V13, P363, DOI 10.1287/isre.13.4.363.69
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zuse H., 1991, SOFTWARE COMPLEXITY, DOI 10.1515/9783110866087
   ZWEIG MH, 1993, CLIN CHEM, V39, P561
NR 58
TC 42
Z9 48
U1 1
U2 33
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2012
VL 54
IS 11
BP 1159
EP 1174
DI 10.1016/j.infsof.2012.05.001
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 000LJ
UT WOS:000308387500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Shepperd, M
   MacDonell, S
AF Shepperd, Martin
   MacDonell, Steve
TI Evaluating prediction systems in software project estimation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Prediction system; Empirical validation;
   Randomisation techniques
ID REGRESSION; ACCURACY; ANALOGY
AB Context: Software engineering has a problem in that when we empirically evaluate competing prediction systems we obtain conflicting results.
   Objective: To reduce the inconsistency amongst validation study results and provide a more formal foundation to interpret results with a particular focus on continuous prediction systems.
   Method: A new framework is proposed for evaluating competing prediction systems based upon (1) an unbiased statistic, Standardised Accuracy, (2) testing the result likelihood relative to the baseline technique of random 'predictions', that is guessing, and (3) calculation of effect sizes.
   Results: Previously published empirical evaluations of prediction systems are re-examined and the original conclusions shown to be unsafe. Additionally, even the strongest results are shown to have no more than a medium effect size relative to random guessing.
   Conclusions: Biased accuracy statistics such as MMRE are deprecated. By contrast this new empirical validation framework leads to meaningful results. Such steps will assist in performing future meta-analyses and in providing more robust and usable recommendations to practitioners. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Shepperd, Martin] Brunel Univ, Dept IS & Comp, Uxbridge UB83PH, Middx, England.
   [MacDonell, Steve] Auckland Univ Technol, Dept Comp & Math Sci, Auckland 1142, New Zealand.
C3 Brunel University; Auckland University of Technology
RP Shepperd, M (corresponding author), Brunel Univ, Dept IS & Comp, Uxbridge UB83PH, Middx, England.
EM martin.shepperd@brunel.ac.uk
RI Shepperd, Martin/F-9683-2013; MacDonell, Stephen G./AAI-1579-2019
OI Shepperd, Martin/0000-0003-1874-6145; MacDonell, Stephen
   G./0000-0002-2231-6941
FU UK Engineering and Physical Sciences Research Council (EPSRC)
   [EP/H050329]; EPSRC [EP/H050329/1] Funding Source: UKRI
FX Martin Shepperd was supported by the UK Engineering and Physical
   Sciences Research Council (EPSRC) under Grant EP/H050329. We wish to
   thank Magne Jorgensen, Barbara Kitchenham, Carolyn Mair, Audris Mockus
   and the anonymous reviewers for helpful comments and discussions
   concerning an earlier version of this paper.
CR [Anonymous], 11 IEEE INT SOFTW ME
   [Anonymous], 1997, Randomization, Bootstrap and Monte Carlo Methods in Biology
   [Anonymous], 1998, Forecasting methods and applications
   Bi J., 2003, P 20 INT C MACH LEAR, P43
   Briand LC, 1999, P 21 INT C SOFTW ENG, DOI DOI 10.1145/302405.302647
   CARVER RP, 1978, HARVARD EDUC REV, V48, P378, DOI 10.17763/haer.48.3.t490261645281841
   Coe Robert, 2002, ITS EFFECT SIZE STUP, P1
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Davey B.A., 2002, Introduction to lattices and order, V2nd ed., DOI DOI 10.1017/CBO9780511809088
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Glass G.V., 1981, MetaAnalysis in Social Research
   Hyndman RJ, 2006, INT J FORECASTING, V22, P679, DOI 10.1016/j.ijforecast.2006.03.001
   JORGENSEN M, 1995, IEEE T SOFTWARE ENG, V21, P674, DOI 10.1109/32.403791
   Jorgensen M, 2006, INFORM SOFTWARE TECH, V48, P297, DOI 10.1016/j.infsof.2005.07.002
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kirsopp C., 22 SGAI INT C KNOWL
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kohavi R., 1995, STUDY CROSS VALIDATI, DOI DOI 10.1067/MOD.2000.109031
   Lewis D. D., 1994, SIGIR '94. Proceedings of the Seventeenth Annual International ACM-SIGIR Conference on Research and Development in Information Retrieval, P3
   Lo B. W. N., 1997, Australian Journal of Information Systems, V5, P30
   Mair C., 2005, 4 INT S EMP SOFTW EN
   Mair C., 2011, 2 INT WORKSH EM TREN
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Mosteller F., 1968, HDB SOCIAL PSYCHOL
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   Rosenthal R., 1994, The handbook of research synthesis, P231, DOI DOI 10.7758/9781610441377
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P304, DOI 10.1109/FOSE.2007.23
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   The Promise Group, 2011, PROM DAT REP
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 39
TC 233
Z9 239
U1 1
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2012
VL 54
IS 8
SI SI
BP 820
EP 827
DI 10.1016/j.infsof.2011.12.008
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 963DB
UT WOS:000305599200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lane, S
   Bucchiarone, A
   Richardson, I
AF Lane, Stephen
   Bucchiarone, Antonio
   Richardson, Ita
TI SOAdapt: A process reference model for developing adaptable
   service-based applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE SOA; Service-based application; Software process; Process reference
   model
AB Context: The loose coupling of services and Service-Based Applications (SBAs) have made them the ideal platform for context-based run-time adaptation. There has been a lot of research into implementation techniques for adapting SBAs, without much effort focused on the software process required to guide the adaptation.
   Objective: This paper aims to bridge that gap by providing an empirically grounded software process model that can be used by software practitioners who want to build adaptable SBAs. The process model will focus only on the adaptation specific issues.
   Method: The process model presented in this paper is based on data collected through interviews with 10 practitioners occupying various roles within eight different companies. The data was analyzed using qualitative data analysis techniques. We used the output to develop a set of activities, tasks, stakeholders and artifacts that were used to construct the process model.
   Results: The outcome of the data analysis process was a process model identifying nine sets of adaptation process attributes. These can be used in conjunction with an organisation's existing development life-cycle or another reference life-cycle.
   Conclusion: The process model developed in this paper provides a solid reference for practitioners who are planning to develop adaptable SBAs. It has advantages over similar approaches in that it focuses on software process rather than the specific adaptation mechanism implementation techniques. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Lane, Stephen; Richardson, Ita] Univ Limerick, Irish Software Engn Res Ctr, Limerick, Ireland.
   [Bucchiarone, Antonio] Fdn Bruno Kessler, I-38100 Trento, Italy.
C3 University of Limerick; Fondazione Bruno Kessler
RP Lane, S (corresponding author), Univ Limerick, Irish Software Engn Res Ctr, Limerick, Ireland.
EM stephen.lane@lero.ie; bucchiarone@fbk.eu; ita.richardson@lero.ie
RI Bucchiarone, Antonio/S-6522-2019
OI Bucchiarone, Antonio/0000-0003-1154-1382; Richardson,
   Ita/0000-0002-5493-2837
CR Ahlemann F., 2007, REFERENCE MODELING B
   [Anonymous], 2008, 15288 IEEE IEC ISOIE
   [Anonymous], 2010, BUS PROC MOD NOT BPM
   [Anonymous], 1998, RATIONAL UNIFIED PRO
   Arsanjani A, 2008, IBM SYST J, V47, P377, DOI 10.1147/sj.473.0377
   Bucchiarone A., 2010, 2 INT WORKSH PRINC E, P50
   Bucchiarone A., 2009, DESIGN ADAPTATION SE
   Consortium S., 2011, S CUB KNOWL MOD
   Consortium S., 2008, POJRA111 S CONS
   Derniame Jean-Claude., 1999, SOFTWARE PROCESS PRI
   Durvasula S., 2007, INTRO SERVICE LIFE 3
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Griffin I., 2010, PRACTEX J
   Haesen R, 2008, LECT NOTES COMPUT SC, V5074, P375
   Harmon P., 2003, Business Process Trends Newsletter, V1
   Herzum P., 2000, Business Components Factory: A Comprehensive Overview of Component-Based Development for the Enterprise
   Lane S., 2010, LEROTR201008 IR SOFT
   Lane S., 2011, INFORM SOFTWARE TECH
   Liamputtong P., 2020, Qualitative research methods, V5
   Lincoln Y. S., 1985, NATURALISTIC INQUIRY
   Linner D., 2007, INT C AUT TRUST COMP, P94102
   McKinley PK, 2004, COMPUTER, V37, P56, DOI 10.1109/MC.2004.48
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Mittal K., 2009, SERVICE ORIENTED UNI
   Oconner L, 2005, LECT NOTES COMPUTER, V3826, P182, DOI DOI 10.1007/11596141_6
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Oreizy P, 1998, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.1998.671114
   Papazoglou M. P., 2006, International Journal of Web Engineering and Technology, V2, P412, DOI 10.1504/IJWET.2006.010423
   Robson C., 2002, Real World Research, V2nd
   ROYCE W, 1970, P IEEE WESCON, V26, P9
   Spanoudakis G, 2005, P IEEE I C SERV COMP, P251
   Trainotti M, 2005, LECT NOTES COMPUT SC, V3826, P495
   Vale S, 2008, CSE 2008: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND ENGINEERING, P412, DOI 10.1109/CSEW.2008.31
   Verma K., 2005, The METEOR-S approach for configuring and executing dynamic web processes
   Wautelet Y, 2009, LECT NOTES BUS INF P, V24, P564
   Wirsing M, 2008, COMM COM INF SC, V17, P170
   Yin RobertK., 2002, APPL SOCIAL RES METH, V5
NR 37
TC 6
Z9 6
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2012
VL 54
IS 3
BP 299
EP 316
DI 10.1016/j.infsof.2011.10.003
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 898KM
UT WOS:000300741300006
OA Green Published
DA 2024-07-18
ER

PT J
AU Fernández, DM
   Wagner, S
   Lochmann, K
   Baumann, A
   de Carne, H
AF Fernandez, Daniel Mendez
   Wagner, Stefan
   Lochmann, Klaus
   Baumann, Andrea
   de Carne, Holger
TI Field study on requirements engineering: Investigation of artefacts,
   project parameters, and execution strategies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements engineering; Execution strategies; Artefact patterns; Field
   study
AB Context: Requirements Engineering (RE) is a critical discipline mostly driven by uncertainty, since it is influenced by the customer domain or by the development process model used. Volatile project environments restrict the choice of methods and the decision about which artefacts to produce in RE.
   Objective: We aim to investigate RE processes in successful project environments to discover characteristics and strategies that allow us to elaborate RE tailoring approaches in the future.
   Method: We perform a field study on a set of projects at one company. First, we investigate by content analysis which RE artefacts were produced in each project and to what extent they were produced. Second, we perform qualitative analysis of semi-structured interviews to discover project parameters that relate to the produced artefacts. Third, we use cluster analysis to infer artefact patterns and probable RE execution strategies, which are the responses to specific project parameters. Fourth, we investigate by statistical tests the effort spent in each strategy in relation to the effort spent in change requests to evaluate the efficiency of execution strategies.
   Results: We identified three artefact patterns and corresponding execution strategies. Each strategy covers different project parameters that impact the creation of certain artefacts. The effort analysis shows that the strategies have no significant differences in their effort and efficiency.
   Conclusions: In contrast to our initial assumption that an increased effort in requirements engineering lowers the probability of change requests or project failures in general, our results show no statistically significant difference between the efficiency of the strategies. In addition, it turned out that many parameters considered as the main causes for project failures can be successfully handled. Hence, practitioners can apply the artefact patterns and related project parameters to tailor the RE process according to individual project characteristics. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Fernandez, Daniel Mendez; Lochmann, Klaus] Tech Univ Munich, Inst Informat, D-85748 Garching, Germany.
   [Wagner, Stefan] Univ Stuttgart, Software Engn Grp, Inst Software Technol, D-70569 Stuttgart, Germany.
   [Baumann, Andrea] Univ Munich, Fak Elektrotech & Tech Informat, D-85577 Munich, Germany.
   [de Carne, Holger] Capgemini Technol Serv Deutschland, D-81739 Munich, Germany.
C3 Technical University of Munich; University of Stuttgart; University of
   Munich; Capgemini
RP Fernández, DM (corresponding author), Tech Univ Munich, Inst Informat, Boltzmannstr 3, D-85748 Garching, Germany.
EM mendezfe@in.tum.de
RI Mendez, Daniel/ABA-4579-2021; Wagner, Stefan/A-5200-2018
OI Mendez, Daniel/0000-0003-0619-6027; Wagner, Stefan/0000-0002-5256-8429
CR Alexander C., 1977, PATTERN LANGUAGE TOW
   [Anonymous], 1995, CHAOS REP
   [Anonymous], 24744 ISOIEC
   [Anonymous], 1998, 8301998 IEEE INC
   ARTHUR H, 1997, INFORM SYST, V42, P401
   Aurum A, 2003, INFORM SOFTWARE TECH, V45, P945, DOI 10.1016/S0950-5849(03)00096-X
   Aurum A., 2005, Engineering and Managing Software Requirements
   AURUM A, P REQ ENG DEC SUPP W
   BERENBACH B, 2009, SOFTWARE SYSTEMS REQ
   Boehm B, 1998, PROC INT CONF SOFTW, P503, DOI 10.1109/ICSE.1998.671616
   Boehm B.A., 2006, Proceedings of ICSE'06 Conference, P12, DOI DOI 10.1145/1134285.1134288
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Broy M, 2006, LECT NOTES COMPUT SC, V4263, P24
   Buschermohle R., 2006, SUCCESS ERFOLGS MISS
   CAMPBELL G, 1995, TAILORABLE PROCESS S
   Cox K, 2009, IET SOFTW, V3, P339, DOI 10.1049/iet-sen.2008.0076
   Damian D, 2006, IEEE T SOFTWARE ENG, V32, P433, DOI 10.1109/TSE.2006.61
   ELENAM K, 1995, P 2 IEEE INT S REQ E, P68
   Fernández DM, 2010, LECT NOTES COMPUT SC, V6395, P183
   FERNANDEZ DM, 2010, P 14 INT C EV ASS SO
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   *GER FED MIN INT, 2008, V MOD XT CURR REL 1
   Gonzalez-Perez C., 2006, Software and Systems Modeling, V5, P72
   Gorschek T, 2008, INFORM SOFTWARE TECH, V50, P67, DOI 10.1016/j.infsof.2007.10.003
   Hall T., 2002, IEE Proceedings-Software, V149, P153, DOI 10.1049/ip-sen:20020694
   IIBA - International Institute of Business Analysis, 2009, GUID BUS AN BOD KNOW
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   JIANG L, 2003, CAN C EL COMP ENG 20, V2
   Kamata MI, 2007, INT REQUIR ENG CONF, P69, DOI 10.1109/RE.2007.31
   LUCKEY M, 2010, P 2010 ICSE WORKSH S
   Mendez Fernandez D, 2009, TUM10929
   Mendez Fernandez D., 2011, P 15 INT C EV ASS SO
   NIKULA U, 2000, 1 TEL BUS RES CTR
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Regnell B, 2001, P 1 SWED C SOFTW ENG, P49
   Robertson J, 2007, VOLERE REQUIREMENTS
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schekkerman J., 2004, SURVIVE JUNGLE ENTER
   Sommerville I, 2005, ACM T SOFTW ENG METH, V14, P85, DOI 10.1145/1044834.1044837
   *TC GROUP, 2006, INT ARCH FRAM IAF V4
   Withall S., 2007, SOFTWARE REQUIREMENT
   ZACHMAN JA, 1987, FRAMEWORK INFORM SYS
   Zave P, 1997, ACM COMPUT SURV, V29, P315, DOI 10.1145/267580.267581
NR 43
TC 21
Z9 21
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2012
VL 54
IS 2
BP 162
EP 178
DI 10.1016/j.infsof.2011.09.001
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 864ES
UT WOS:000298220400003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU da Silva, FQB
   Santos, ALM
   Soares, S
   Franca, ACC
   Monteiro, CVF
   Maciel, FF
AF da Silva, Fabio Q. B.
   Santos, Andre L. M.
   Soares, Sergio
   Franca, A. Cesar C.
   Monteiro, Cleviton V. F.
   Maciel, Felipe Farias
TI Six years of systematic literature reviews in software engineering: An
   updated tertiary study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic reviews; Mapping studies; Software engineering; Tertiary
   studies
ID MOTIVATION; MODELS
AB Context: Since the introduction of evidence-based software engineering in 2004, systematic literature review (SLR) has been increasingly used as a method for conducting secondary studies in software engineering. Two tertiary studies, published in 2009 and 2010, identified and analysed 54 SLRs published in journals and conferences in the period between 1st January 2004 and 30th June 2008.
   Objective: In this article, our goal was to extend and update the two previous tertiary studies to cover the period between 1st July 2008 and 31st December 2009. We analysed the quality, coverage of software engineering topics, and potential impact of published SLRs for education and practice.
   Method: We performed automatic and manual searches for SLRs published in journals and conference proceedings, analysed the relevant studies, and compared and integrated our findings with the two previous tertiary studies.
   Results: We found 67 new SLRs addressing 24 software engineering topics. Among these studies, 15 were considered relevant to the undergraduate educational curriculum, and 40 appeared of possible interest to practitioners. We found that the number of SLRs in software engineering is increasing, the overall quality of the studies is improving, and the number of researchers and research organisations worldwide that are conducting SLRs is also increasing and spreading.
   Conclusion: Our findings suggest that the software engineering research community is starting to adopt SLRs consistently as a research method. However, the majority of the SLRs did not evaluate the quality of primary studies and fail to provide guidelines for practitioners, thus decreasing their potential impact on software engineering practice. 0 2011 Elsevier B.V. All rights reserved.
C1 [da Silva, Fabio Q. B.; Santos, Andre L. M.; Soares, Sergio; Franca, A. Cesar C.; Monteiro, Cleviton V. F.; Maciel, Felipe Farias] Univ Fed Pernambuco, Ctr Informat, BR-50740560 Recife, PE, Brazil.
C3 Universidade Federal de Pernambuco
RP da Silva, FQB (corresponding author), Univ Fed Pernambuco, Ctr Informat, Cidade Univ, BR-50740560 Recife, PE, Brazil.
EM fabio@cin.ufpe.br; alms@cin.ufpe.br; scbs@cin.ufpe.br;
   accf2@cin.ufpe.br; cvfm@cin.ufpe.br
RI Soares, Sergio/K-3712-2012; da Silva, Fabio Queda Bueno/A-6524-2012;
   Ines, INCT/J-9550-2013; Santos, Andre/D-8279-2013
OI Soares, Sergio/0000-0002-4428-2535; da Silva, Fabio Queda
   Bueno/0000-0002-3734-040X; Santos, Andre/0000-0001-6661-5970
FU Brazilian National Research Council (CNPq) [314523/2009-0]; CNPq
   [305085/2010-7]; FACEPE [APQ-0093-1.03/08]; National Institute of
   Science and Technology for Software Engineering (INES) [573964/2008-4,
   APQ-1037-1.03/08]; CAPES; Samsung Institute for Development of
   Informatics (Samsung/SIDI)
FX Fabio Q.B. da Silva holds a research Grant from the Brazilian National
   Research Council (CNPq) #314523/2009-0. Sergio Soares is partially
   supported by CNPq (305085/2010-7) and FACEPE (APQ-0093-1.03/08) Andre
   L.M. Santos and Sergio Soares are partially supported by the National
   Institute of Science and Technology for Software Engineering (INES),
   Grants 573964/2008-4 (CNPq) and APQ-1037-1.03/08 (FACEPE). A. Cesar C.
   Franca and Cleviton V.F. Monteiro are doctoral students at the Centre
   for Informatics of the Federal University of Pernambuco where they
   receive scholarship from CNPq and CAPES respectively. The authors would
   like to thank the Samsung Institute for Development of Informatics
   (Samsung/SIDI), for partially supporting the work developed in this
   research. Finally, the authors would like to thank the reviewers of the
   manuscript for important critiques and comments that lead to several
   improvements in the final article.
CR ABRAN A, 2004, GUIDE SOFTWARE ENG B, P11
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   [Anonymous], IEEE WCNC 2009 BUD H
   [Anonymous], 2007, GUIDE ADV EMPIRICAL
   [Anonymous], SOFTW ENG 2004 CURR
   [Anonymous], 67905 RTES PESC COPP
   Arksey H., 2005, INT J SOC RES METHOD, V8, P19, DOI [10.1080/1364557032000119616, DOI 10.1080/1364557032000119616]
   BARCELOS RF, 2006, IDEAS LA PLAT ARG, P14
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   BENESTAD HC, 2009, SCIENCES NEW YORK
   Bjornson FO, 2008, INFORM SOFTWARE TECH, V50, P1055, DOI 10.1016/j.infsof.2008.03.006
   BLANES D, 2009, 10 IDEAL, P510
   BRERETON P, 2009, 22 CSEE T
   BUDGEN D, 2009, EASE, P1
   BURROWS R, 2009, ENASE
   Cai KY, 2008, J SYST SOFTWARE, V81, P1051, DOI 10.1016/j.jss.2007.08.028
   Calvo-Manzano J.A., 2009, ACM SIGSOFT SOFTWARE, V34, P1
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   CHEN L, 2009, 13 EASE
   Chen L., 2009, P 13 INT SOFTWARE PR, P81
   Condori-Fernandez N, 2009, INT SYMP EMP SOFTWAR, P503
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   *CTR REV DISS, 2010, DARE
   Dapeng Liu, 2009, 2009 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM), P302, DOI 10.1109/ESEM.2009.5315982
   DASILVA FQB, 2010, ESEM 2010 BOLZ BOLZ
   DESOUZA ED, 2008, ECSA, P50
   Dias-Neto AC, 2009, INFORM SOFTWARE TECH, V51, P1487, DOI 10.1016/j.infsof.2009.06.010
   DONG F, 2008, ICSP, P63
   DOSSANTOS PS, 2009, ESEM IEEE, P414
   DU J, 2009, SSIRI IEEE, P141
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   EBLING T, 2009, 11 ICEIS, P363
   Edwards HM, 2009, INFORM SOFTWARE TECH, V51, P785, DOI 10.1016/j.infsof.2008.08.008
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Ezhov V.F., 2007, PNPI RAS
   Glass G.V., 1978, REV RES ED, V5, P351, DOI [DOI 10.3102/0091732X005001351, 10.2307/1167179]
   Greenhalgh T., 2007, READ PAPER BASICS EV
   Gu Q, 2009, SERV ORIENTED COMPUT, V3, P171, DOI 10.1007/s11761-009-0046-7
   HALL T, 2009, TOSEM, V18
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Haugset B, 2008, AGILE 2008, PROCEEDINGS, P27, DOI 10.1109/Agile.2008.82
   HERRMANN A, 2008, 16 INT REQ ENG C IEE, P125
   Hong JY, 2009, EXPERT SYST APPL, V36, P8509, DOI 10.1016/j.eswa.2008.10.071
   HORDIJK W, 2009, 13 EASE
   Hossain E., 2009, ICGSE
   Insfran E, 2008, LECT NOTES COMPUT SC, V5176, P81, DOI 10.1007/978-3-540-85200-1_10
   IVARSSON M, 2009, RE, P155
   Jadhav AS, 2009, INFORM SOFTWARE TECH, V51, P555, DOI 10.1016/j.infsof.2008.09.003
   JORGENSEN M, 2005, METRICS 05
   KALINOWSKI M, 2008, 34 EUR IEEE, P199, DOI DOI 10.1109/SEAA.2008.47
   KAMPENES VB, 2008, IST, V51, P71
   KHAN R, 2003, REV SUPPORT EVIDENCE
   KHAN SU, 2009, 16 APSEC IEEE, P79
   KHAN SU, 2009, 4 ICGSE IEEE, P207, DOI DOI 10.1109/ICGSE.2009.28
   KHURUM M, 2008, 2 MESPUL, P386
   Khurum M, 2009, J SYST SOFTWARE, V82, P1982, DOI 10.1016/j.jss.2009.06.048
   Kitchenham B, 2004, Procedures for Undertaking Systematic Reviews
   Kitchenham B. A., 2008, EBSE2008006 EPIC
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Lopez Alejandro, 2009, 2009 Fourth IEEE International Conference on Global Software Engineering, P394, DOI 10.1109/ICGSE.2009.62
   Lucas FJ, 2009, INFORM SOFTWARE TECH, V51, P1631, DOI 10.1016/j.infsof.2009.04.009
   MAIR C, 2009, 13 EASE
   MITCHELL SM, 2009, ESEM
   MOHAGHEGHI P, IST, V51, P209
   MOHAGHEGHI P, IST, V51, P1646
   Monasor M.J, 2009, ADV SOFTW ENG, P1, DOI DOI 10.1155/2009/710971
   MONTAGUD S, 2009, SPLC, P91
   Nicolás J, 2009, INFORM SOFTWARE TECH, V51, P1291, DOI 10.1016/j.infsof.2009.04.001
   Noblit GW., 1988, META ETHNOGRAPHY, DOI [DOI 10.4135/9781412985000, 10.4135/9781412985000]
   Lamancha BP, 2009, ICSOFT 2009: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 1, P23
   Persson JS, 2009, IEEE T ENG MANAGE, V56, P508, DOI 10.1109/TEM.2009.2013827
   Petersson H, 2004, J SYST SOFTWARE, V72, P249, DOI 10.1016/S0164-1212(03)00090-6
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   PRETORIUS R, 2008, IEEE ACM ESEM IEEE
   PRIKLADNICKI R, 2008, 12 EASE
   Racheva Z, 2009, LECT NOTES BUS INF P, V32, P141
   Rainer A, 2008, U HERTFORDSHIRE TECH, V2
   RAINER A, 13 EASE, P209
   Riaz M, 2009, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/esem.2009.5314233
   Sackett DL, 1996, BRIT MED J, V312, P71, DOI 10.1136/bmj.312.7023.71
   Sandelowski M., 2006, Handbook for Synthesizing Qualitative Research
   SAVOLAINEN J, 2009, WICSA ECSA IEEE, P317
   Sharp H, 2009, INFORM SOFTWARE TECH, V51, P219, DOI 10.1016/j.infsof.2008.05.009
   Shaw M, 2006, IEEE SOFTWARE, V23, P31, DOI 10.1109/MS.2006.58
   SMITE D, 2008, ICGSE IEEE, P173, DOI DOI 10.1109/ICGSE.2008.22
   Staffs Keele, 2007, Tech. Rep.
   STOL K, 2009, WORKSH EM TRENDS FLO, P19
   Trendowicz A, 2009, ADV COMPUT, V77, P185, DOI 10.1016/S0065-2458(09)01206-6
   Van Velsen L, 2008, KNOWL ENG REV, V23, P261, DOI 10.1017/S0269888908001379
   Walia GS, 2009, INFORM SOFTWARE TECH, V51, P1087, DOI 10.1016/j.infsof.2009.01.004
   ZAKARIA Z, 2009, 16 APSEC IEEE, P316, DOI DOI 10.1109/APSEC.2009.72
   Zelkowitz MV, 2009, J SYST SOFTWARE, V82, P373, DOI 10.1016/j.jss.2008.06.040
NR 96
TC 92
Z9 99
U1 2
U2 21
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2011
VL 53
IS 9
SI SI
BP 899
EP 913
DI 10.1016/j.infsof.2011.04.004
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 795DC
UT WOS:000292950700001
DA 2024-07-18
ER

PT J
AU Ochodek, M
   Nawrocki, J
   Kwarciak, K
AF Ochodek, M.
   Nawrocki, J.
   Kwarciak, K.
TI Simplifying effort estimation based on Use Case Points
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Use Case Points; Software cost estimation; Use cases; Use-case
   transactions; TTPoints
ID SOFTWARE; AGREEMENT
AB Context: The Use Case Points (UCP) method can be used to estimate software development effort based on a use-case model and two sets of adjustment factors relating to the environmental and technical complexity of a project. The question arises whether all of these components are important from the effort estimation point of view.
   Objective: This paper investigates the construction of UCP in order to find possible ways of simplifying it. Method: The cross-validation procedure was used to compare the accuracy of the different variants of UCP (with and without the investigated simplifications). The analysis was based on data derived from a set of 14 projects for which effort ranged from 277 to 3593 man-hours. In addition, the factor analysis was performed to investigate the possibility of reducing the number of adjustment factors.
   Results: The two variants of UCP - with and without unadjusted actor weights (UAW) provided similar prediction accuracy. In addition, a minor influence of the adjustment factors on the accuracy of UCP was observed. The results of the factor analysis indicated that the number of adjustment factors could be reduced from 21 to 6 (2 environmental factors and 4 technical complexity factors). Another observation was made that the variants of UCP calculated based on steps were slightly more accurate than the variants calculated based on transactions. Finally, a recently proposed use-case-based size metric TTPoints provided better accuracy than any of the investigated variants of UCP.
   Conclusion: The observation in this study was that the UCP method could be simplified by rejecting UAW; calculating UCP based on steps instead of transactions; or just counting the total number of steps in use cases. Moreover, two recently proposed use-case-based size metrics Transactions and TTPoints could be used as an alternative to UCP to estimate effort at the early stages of software development. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Ochodek, M.; Nawrocki, J.; Kwarciak, K.] Poznan Univ Tech, Inst Comp Sci, PL-60965 Poznan, Poland.
C3 Poznan University of Technology
RP Ochodek, M (corresponding author), Poznan Univ Tech, Inst Comp Sci, Ul Piotrowo 2, PL-60965 Poznan, Poland.
EM mochodek@cs.put.poznan.pl; jnawrocki@cs.put.poznan.pl;
   kkwarciak@cs.put.poznan.pl
RI Nawrocki, Jerzy R/I-5690-2012; Ochodek, Mirosław/G-1505-2014
FU EU
FX This research project operated within the Foundation for Polish Science
   Ventures Programme co-financed by the EU European Regional Development
   Fund.
CR ABRAN A, 2009, COSMIC FUNCTIONAL SI
   Adolph S., 2003, PATTERNS EFFECTIVE U
   Albrecht A.J., 1979, Em Proceedings of the Joint SHARE, GUIDE, and IBM Application Development Symposium, P83
   Alpaydin E, 2004, INTRO MACHINE LEARNI
   Anda B., 2001, P 4 INT C UNIFIED MO, P487
   [Anonymous], 2005, COMP 20 ANN ACM SIGP
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 1998, Applying Use Cases: A Practical Guide
   [Anonymous], 2001, 912612001 ISOIEC
   [Anonymous], THESIS U OSLO
   Arnold M, 1998, PROC INT CONF SOFTW, P490, DOI 10.1109/ICSE.1998.671613
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   BRAZ M, 2006, P 30 ANN INT COMP SO, V1, P221
   Bundschuh M., 2008, The IT Measurement compendium
   Clemmons R., 2006, ACM Digital Library, V19, P18
   Cockburn A., 2001, Writing effective use cases
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Cohen J., 1992, Current Directions in Psychological Science, V1, P98, DOI [DOI 10.1111/1467-8721.EP10768783, 10.1111/1467-8721.ep10768783]
   Diev S., 2006, Software Engineering Notes, ACM, V31, P1
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   FROHNHOFF S, 2008, P CONQUEST 2008
   JACOBSON I, 1987, SIGPLAN NOTICES, V22, P183, DOI 10.1145/38807.38824
   JEFFERY DR, 1993, IEEE T SOFTWARE ENG, V19, P529, DOI 10.1109/32.232016
   Jeffery R., 1996, Empirical Software Engineering, V1, P11, DOI 10.1007/BF00125809
   Jeffery R, 2000, INFORM SOFTWARE TECH, V42, P1009, DOI 10.1016/S0950-5849(00)00153-1
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P993, DOI 10.1109/TSE.2004.103
   KARNER G, 1993, THESIS U LINKOPING S
   Kim J-O., 1978, Factor analysis: statistical methods and practical issues, DOI 10.4135/9781412984256
   Kitchenham B, 1997, IEEE SOFTWARE, V14, P29, DOI 10.1109/MS.1997.582972
   KITCHENHAM B, 2002, SOFTW METR S 1993 P, P11
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   LOKAN C, 2002, SOFTW METR S 1999 P, P200
   Lokan CJ, 2000, INFORM SOFTWARE TECH, V42, P649, DOI 10.1016/S0950-5849(00)00108-7
   Miles J., 2001, APPL REGRESSION CORR
   Mohagheghi P, 2005, PROC INT CONF SOFTW, P303
   Neill CJ, 2003, IEEE SOFTWARE, V20, P40, DOI 10.1109/MS.2003.1241365
   Neiman Susan., 2009, MORAL CLARITY GUIDE
   OCHODEK M, 2010, FDN COMPUTING DECISI, V35, P91
   Ochodek M, 2008, LECT NOTES COMPUT SC, V5082, P55
   OUWERKERK J, 2006, P INT C SOFTW PROC P, P83
   Robiolo G, 2008, INNOV SYST SOFTW ENG, V4, P31, DOI 10.1007/s11334-007-0043-y
   Robiolo G, 2009, INT SYMP EMP SOFTWAR, P423
   Symons C.R.:., 1991, Software Sizing and Estimating: Mk II FPA
   WARD JH, 1963, J AM STAT ASSOC, V58, P236, DOI 10.2307/2282967
   Ziberna A., 2004, Metodoloski zvezki, V1, P57
   Zumbo BD, 1998, J ROY STAT SOC D-STA, V47, P385, DOI 10.1111/1467-9884.00139
NR 48
TC 80
Z9 86
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2011
VL 53
IS 3
BP 200
EP 213
DI 10.1016/j.infsof.2010.10.005
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 734PT
UT WOS:000288348500003
DA 2024-07-18
ER

PT J
AU Niazi, M
   Babar, MA
AF Niazi, Mahmood
   Babar, Muhammad Ali
TI Identifying high perceived value practices of CMMI level 2: An empirical
   study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE CMMI; Empirical study; Perceived value
ID SOFTWARE PROCESS IMPROVEMENT; PROJECT SUCCESS; DE-MOTIVATORS;
   PRACTITIONERS; MATURITY; IMPLEMENTATION; THINK
AB Objective: In this paper, we present findings from an empirical study that was aimed at identifying the relative "perceived value" of CMMI level 2 specific practices based on the perceptions and experiences of practitioners of small and medium size companies. The objective of this study is to identify the extent to which a particular CMMI practice is used in order to develop a finer-grained framework, which encompasses the notion of perceived value within specific practices.
   Method: We used face-to-face questionnaire based survey sessions as the main approach to collecting data from 46 software development practitioners from Malaysia and Vietnam. We asked practitioners to choose and rank CMMI level 2 practices against the five types of assessments (high, medium, low, zero or do not know). From this, we have proposed the notion of 'perceived value' associated with each practice.
   Results: We have identified three 'requirements management' practices as having a 'high perceived value'. The results also reveal the similarities and differences in the perceptions of Malaysian and Vietnamese practitioners with regard to the relative values of different practices of CMMI level 2 process areas.
   Conclusions: Small and medium size companies should not be seen as being "at fault" for not adopting CMMI - instead the Software Process Improvement (SPI) implementation approaches and its transition mechanisms should be improved. We argue that research into "tailoring" existing process capability maturity models may address some of the issues of small and medium size companies. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Niazi, Mahmood] Univ Keele, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
   [Babar, Muhammad Ali] Univ Limerick, Lero, Limerick, Ireland.
C3 Keele University; University of Limerick
RP Niazi, M (corresponding author), Univ Keele, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
EM mkniazi@cs.keele.ac.uk; malibaba@lero.ie
RI Niazi, Mahmood/C-8873-2015
OI Niazi, Mahmood/0000-0001-7318-7644
CR ALIBABAR M, 2007, P 3 INT C QUAL SOFTW
   [Anonymous], 1995, Chaos, P1
   [Anonymous], CHAOS REP
   [Anonymous], 2003, CMMI guidlines for process integration and product improvement
   [Anonymous], CHAOS REC SUCC
   [Anonymous], 2008, SOFTWARE PROCESS IMP, DOI DOI 10.1002/SPIP.380
   Ashrafi N, 2003, INFORM MANAGE-AMSTER, V40, P677, DOI 10.1016/S0378-7206(02)00096-4
   Baddoo N, 2003, J SYST SOFTWARE, V66, P23, DOI 10.1016/S0164-1212(02)00060-2
   Barry E. J., 2002, Information Technology & Management, V3, P113, DOI 10.1023/A:1013168927238
   Batista J., 2000, Software Process Improvement and Practice, V5, P243, DOI 10.1002/1099-1670(200012)5:4<243::AID-SPIP126>3.0.CO;2-0
   Beecham S, 2003, EMPIR SOFTW ENG, V8, P7, DOI 10.1023/A:1021764731148
   Biffl S., 2005, Value-Based Software Engineering
   BRODMAN JG, 1994, P 16 INT C SOFTW ENG
   CAPRIHAN G, 2006, INT C GLOB SOFTW ENG, P83
   *CCTA, 2001, MAN SUCC PROJ PRINC, V2
   CONRADI R, 2002, IEEE SOFTWARE    JUL, P92
   Coolican H., 1999, RES METHODS STAT PSY, V2nd
   DEBELLIS M, 1995, IEEE EXPERT, V10, P34, DOI 10.1109/64.391959
   ELEMAM K, 1995, 2 INT S REQ ENG, P68
   FLORENCE A, 2001, CROSSTALK        AUG, P29
   GOLDENSON D, 2003, CROSSTALK        JUL
   HALL T, 2002, IEE P SOFTWARE   AUG, P153
   Huang SJ, 2008, INFORM MANAGE-AMSTER, V45, P175, DOI 10.1016/j.im.2008.02.001
   Hughes B., 2000, Practical Software Measurement
   Jarvis A., 1997, INROADS to Software Quality
   Jiang JJ, 2004, INFORM MANAGE-AMSTER, V41, P279, DOI 10.1016/S0378-7206(03)00052-1
   JOHN SR, 1999, IEEE SOFTWARE    MAY, P18
   JUNE V, 2005, AJIS, V13, P225
   KAUTZ K, 2000, P 33 HAW C SYST SCI, V7, P1
   KITCHENHAM B, 2001, PRINCIPLES SURVEY 1
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   LOUIS R, 2008, INT J PROJ MANAG, V26, P213
   Martin B., 2000, An Introduction to Medical Statistics, Vthird
   MCCAFFERY F, 2008, P EUR SOFTW PROC IMP
   Ngwenyama O, 2003, IEEE T ENG MANAGE, V50, P100, DOI 10.1109/TEM.2002.808267
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   Niazi M, 2005, J SYST SOFTWARE, V78, P204, DOI 10.1016/j.jss.2004.09.001
   Niazi M, 2005, J SYST SOFTWARE, V74, P155, DOI 10.1016/j.jss.2003.10.017
   Niazi M., 2005, 14 INT C INFORM SYST, P15
   NIAZI M, 2003, IEEE INT MULT C INMI, P402
   Niazi M., 2005, The 17th International Conference on Software Engineering and Knowledge Engineering, July 14-16, 2005, P396
   Niazi M, 2008, LECT NOTES COMPUT SC, V5089, P427, DOI 10.1007/978-3-540-69566-0_34
   Niazi M, 2007, LECT NOTES COMPUT SC, V4589, P118
   Nurmuliani N, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P28, DOI 10.1109/ASWEC.2004.1290455
   Pereira J, 2008, J SYST SOFTWARE, V81, P897, DOI 10.1016/j.jss.2007.07.032
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Pitterman B, 2000, IEEE SOFTWARE, V17, P89, DOI 10.1109/52.854074
   Procaccino JD, 2006, J SYST SOFTWARE, V79, P1541, DOI 10.1016/j.jss.2006.01.010
   Procaccino JD, 2005, J SYST SOFTWARE, V78, P194, DOI 10.1016/j.jss.2004.12.011
   Rainer A, 2002, J SYST SOFTWARE, V62, P71, DOI 10.1016/S0164-1212(01)00122-4
   *SEI, 2002, PROC MAT PROF SOFTW
   Sommerville I, 2005, ACM T SOFTW ENG METH, V14, P85, DOI 10.1145/1044834.1044837
   Sommerville I., 1996, Software Engineering, V5th
   Staples M, 2007, J SYST SOFTWARE, V80, P883, DOI 10.1016/j.jss.2006.09.008
   Stark GE, 1999, J SOFTW MAINT-RES PR, V11, P293, DOI 10.1002/(SICI)1096-908X(199909/10)11:5<293::AID-SMR198>3.0.CO;2-R
   Sweeney A, 1997, SOFTWARE QUAL J, V6, P265, DOI 10.1023/A:1018572321182
   Taylor A., 2000, COMPUTER B
   *THE ROYAL AC OF E, 2004, CHALL COMPL IT PROJ
   Trewin D., 2002, Small business in Australia (ABS catalogue no. 1321.0)
   Verner JM, 2005, IEEE SOFTWARE, V22, P86, DOI 10.1109/MS.2005.12
   Wallace L, 2004, INFORM MANAGE-AMSTER, V42, P115, DOI 10.1016/j.im.2003.12.007
   Wilkie F. G., 2005, Software Process Improvement and Practice, V10, P189, DOI 10.1002/spip.223
   Zowghi D, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P3, DOI 10.1109/APSEC.2002.1182970
   Zwikael O, 2007, J OPER MANAG, V25, P755, DOI 10.1016/j.jom.2006.12.001
NR 64
TC 42
Z9 52
U1 1
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2009
VL 51
IS 8
BP 1231
EP 1243
DI 10.1016/j.infsof.2009.03.001
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 464KT
UT WOS:000267504500003
OA Green Published
DA 2024-07-18
ER

PT J
AU Larsson, S
   Myllyperkiö, P
   Ekdahl, F
   Crnkovic, I
AF Larsson, Stig
   Myllyperkio, Petri
   Ekdahl, Fredrik
   Crnkovic, Ivica
TI Software product integration: A case study-based synthesis of reference
   models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Product integration process; Process improvement; Process validation
AB In software intensive systems the integration becomes complex since both software and hardware components are integrated and run in the execution environment for the first time. Support for this stage is thus essential. Practices for Product Integration are described in different reference models. We have investigated these and compared them with activities performed in seven product development projects.
   Our conclusion is that descriptions of best practices in product integration are available in different reference models, but need to be merged into one set of practices. Through case studies we see that the described practices are insufficiently used in industry, and that organizations would benefit from adhering to them. Our investigations indicate that a set of practices are necessary to be successful in software product integration: define and check criteria for integration, review interface descriptions and ensure coordination of interface changes, and deliver components as agreed. In addition to these, a set of practices are supporting the integration activities, including the definition of an integration strategy, and the establishment of a suitable integration environment. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Larsson, Stig] ABB Corp Res, SE-72178 Vasteras, Sweden.
   [Myllyperkio, Petri] ABB Distribut Automat, FI-65320 Vaasa, Finland.
   [Ekdahl, Fredrik] ABB Robot, SE-72168 Vasteras, Sweden.
   [Crnkovic, Ivica] Malardalen Univ, Dept Comp Sci & Elect, SE-72123 Vasteras, Sweden.
C3 ABB; Malardalen University
RP Larsson, S (corresponding author), ABB Corp Res, SE-72178 Vasteras, Sweden.
EM stig.bm.larsson@se.abb.com; petri.myllyperkio@fi.abb.com;
   fredrik.x.ekdahl@se.abb.com; ivica.crnkovic@mdh.se
OI Ivica, Crnkovic/0000-0002-5278-755X
FU KK-foundation (KKS) in Sweden through the SAVE-IT project
FX We would like to thank all participants in the case studies for their
   time and patience. This work has been partially supported by the
   KK-foundation (KKS) in Sweden through the SAVE-IT project.
CR [Anonymous], 2002, EIA7311
   [Anonymous], CMMI DEV VERS 1 2
   *ANSI EIA, 1999, ANSIEIA6321999 GOV E
   Bajec M, 2007, INFORM SOFTWARE TECH, V49, P345, DOI 10.1016/j.infsof.2006.05.007
   Campanella J., 1999, PRINCIPLES QUALITY C, V3rd
   Chiang IR, 2004, INFORM SYST RES, V15, P3, DOI 10.1287/isre.1040.0012
   Chittister CG, 1996, IEEE T SYST MAN CY A, V26, P521, DOI 10.1109/3468.531900
   Cummins F.A., 2002, ENTERPRISE INTEGRATI
   de Jonge M, 2003, EUROMICRO CONF PROC, P76
   Djavanshir G. Reza, 2007, IT Professional, V9, P24, DOI 10.1109/MITP.2007.68
   Dogru AH, 2003, IEEE SOFTWARE, V20, P34, DOI 10.1109/MS.2003.1184164
   Ekdahl F, 2006, EUROMICRO CONF PROC, P216, DOI 10.1109/EUROMICRO.2006.37
   Fitzgerald B, 1998, INFORM MANAGE-AMSTER, V34, P317, DOI 10.1016/S0378-7206(98)00072-X
   Fowler M., 2006, Continuous integration
   Garlan D., 2000, FUTURE SOFTWARE ENG, P91
   Gorton I., 2006, ESSENTIAL SOFTWARE A
   Houston D., 2006, Software Process Improvement and Practice, V11, P361, DOI 10.1002/spip.283
   *IEEE, 2005, IEEE12202005
   *ISO IEC, 2002, ISOIEC52882002
   *ISO IEC, 1995, ISOIEC122071995
   Karsai G, 2003, P IEEE, V91, P145, DOI 10.1109/JPROC.2002.805824
   Kuhn D. R., 1990, Systems Integration '90. Proceedings of the First International Conference on Systems Integration (Cat. No.90TH0309-5), P455, DOI 10.1109/ICSI.1990.138711
   Larsson S, 2004, EUROMICRO CONF PROC, P430, DOI 10.1109/EURMIC.2004.1333399
   LARSSON S, 2007, ESEC FSE DUBR CROAT
   LARSSON S, 2005, 6 INT C PROF JUN 200, P272
   LARSSON S, 2005, IMPROVING SOFTWARE P
   Leszak M, 2002, J SYST SOFTWARE, V61, P173, DOI 10.1016/S0164-1212(01)00146-7
   Linthicum D.S., 1999, ENTERPRISE APPL INTE
   Nilsson E. G., 1990, Systems Integration '90. Proceedings of the First International Conference on Systems Integration (Cat. No.90TH0309-5), P434, DOI 10.1109/ICSI.1990.138709
   Ruh WilliamA., 2000, ENTERPRISE APPL INTE
   Sage Andrew P., 1998, SYSTEMS ENG, V1, P176
   SCHULTE M, 2005, MODEL BASED INTEGRAT, P62
   *SEI, 2001, APPR REQ CMMI VERS 1
   Stavridou V, 1999, J SYST SOFTWARE, V48, P91, DOI 10.1016/S0164-1212(99)00049-7
   STAVRIDOU V, 1997, SOFTW ENG STAND S FO, P99
   Yin R.K., 2011, Qualitative research from start to finish
   [No title captured]
NR 37
TC 7
Z9 7
U1 3
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2009
VL 51
IS 6
BP 1066
EP 1080
DI 10.1016/j.infsof.2009.01.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 435BX
UT WOS:000265319400008
DA 2024-07-18
ER

PT J
AU Fuentes, L
   Pinto, M
   Sánchez, P
AF Fuentes, Lidia
   Pinto, Monica
   Sanchez, Pablo
TI Generating CAM aspect-oriented architectures using Model-Driven
   Development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Aspect-orientation; Software architectures; Model-Driven Development;
   Component-based systems
ID DYNAMIC COMPONENT
AB Aspect-Oriented Software Development promotes the separation of those concerns that cut across several components and/or are tangled with the base functionality of a component, through all phases of the software lifecycle. The benefit of identifying these crosscutting concerns (aspects) at the architectural level in particular is to improve the architecture design and its subsequent evolution, before moving onto detailed design and implementation. However, software architects are not usually experts on using specific AO architecture notations. Therefore, the aim of this paper is to provide support to define and specify aspect-oriented (AO) architectures using non-AO ones as the source. We will use the Model-Driven Development approach to transform a component-based architecture model into an AO architecture model. The CAM (component and aspect model) model and the DAOP-ADL language are the proposals used for modelling and specifying AO architectures. We will show how we automated part of the process and the tool support. (c) 2008 Elsevier B.V. All rights reserved.
C1 [Fuentes, Lidia; Pinto, Monica; Sanchez, Pablo] Univ Malaga, ETSI Informat, Dpto Lenguajes & Ciencias Computac, E-29071 Malaga, Spain.
C3 Universidad de Malaga
RP Pinto, M (corresponding author), Univ Malaga, ETSI Informat, Dpto Lenguajes & Ciencias Computac, Blvd Louis Pasteur S-N,Campus Teatinos, E-29071 Malaga, Spain.
EM lff@lcc.uma.es; pinto@lcc.uma.es; pablo@lcc.uma.es
RI Pinto, Monica/G-1891-2015; Sanchez, Pablo/L-5842-2014; Fuentes,
   Lidia/M-5580-2014
OI Pinto, Monica/0000-0002-5376-742X; Sanchez, Pablo/0000-0002-4617-0457;
   Fuentes, Lidia/0000-0002-5677-7156
FU Spanish MCYT [TIN2005-09405-C02-01]; European Commission
   [IST-2-004349-NOE AOSD-Europe]; European STREP [AMPLE IST-33710]
FX This work has been supported by the Spanish MCYT Project
   TIN2005-09405-C02-01, the European Commission Grant IST-2-004349-NOE
   AOSD-Europe and the European STREP Project AMPLE IST-33710.
CR Aaltonen T, 2006, LECT NOTES COMPUT SC, V4242, P1
   AKSIT M, 2005, S AD MDA 20 ENSCH NE
   AMAYA PA, 2005, P 6 INT WORKSH ASP O
   [Anonymous], LNCS
   [Anonymous], P OBJ OR PROGR SYST
   [Anonymous], 2004, Software Factories
   [Anonymous], MOF 2 0 XMI MAPP SPE
   Atkinson C, 2003, IEEE SOFTWARE, V20, P81, DOI 10.1109/MS.2003.1159035
   Baniassad E, 2006, IEEE SOFTWARE, V23, P61, DOI 10.1109/MS.2006.8
   Batista T.s., 2006, P 2006 INT WORKSHOP, P3, DOI DOI 10.1145/1137639.1137642
   BEYDEDA S, 2005, MODEL DRIVEN DEV
   BRICHAU J, 2005, REPORT DESCRIBING SU
   CHITCHYAN R, 2007, LNCS T ASPECT ORIENT, V4, P3
   CHITCHYAN R, 2005, D11 AOSD EUR DEL
   CHITCHYAN R, 2006, D36 AOSD EUR DEL
   CHRYSANTHIS PK, 1991, PROC INT CONF VERY L, P103
   Chung L., 1999, NONFUNCTIONAL REQUIR
   CONEJERO JM, 2006, 11 JORN IB ING SOFTW, P325
   Cuesta CE, 2006, LECT NOTES COMPUT SC, V4037, P93
   Demir A, 2006, Joint Meeting of the Fourth Workshop on Model-Based Development of Computer-Based Systems and Third International Workshop on Model-Based Methodologies for Pervasive and Embedded Software, Proceedings, P75
   FABRY J, 2005, P 7 INT C ENT INF SY, V1, P428
   FARRAG AA, 1989, ACM T DATABASE SYST, V14, P503, DOI 10.1145/76902.76905
   FILMAN R, 2005, ASPECT ORIENTED SOFT
   Fuentes L, 2007, SOFTWARE PRACT EXPER, V37, P21, DOI 10.1002/spe.744
   Fuentes L, 2003, SEVENTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P124, DOI 10.1109/EDOC.2003.1233843
   Garcia A, 2006, LECT NOTES COMPUT SC, V4344, P82
   Garcia-Molina H., 1987, ACM SIGMOD Record, P249, DOI DOI 10.1145/38714.38742
   JOHNSON R, SPRING FRAM REF DOC
   Kiczales Gregor, 2001, LNCS, V2072, P327, DOI DOI 10.1007/3-540-45337-718
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   Kulkarni V, 2003, IEEE SOFTWARE, V20, P64, DOI 10.1109/MS.2003.1231154
   KURTEV I, 2006, P 2 WORKSH MOD ASP H
   Laddad R., 2003, ASPECTJ ACTION PRACT
   LOUGHRAN N, 2006, D43 AOSD EUR DEL
   LOUGHRAN N, 2005, D8 AOSD EUR DEL
   Mellor S.J., 2004, MDA DISTILLED
   MEYER B, 2001, OBJECT ORIENTED SOFT
   Moreira A, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/RE.2005.46
   MOSS EB, 1985, NESTED T APPROACH RE
   Navasa A, 2005, LECT NOTES COMPUT SC, V3527, P41
   NIERSTRASZ O, 1995, ACM COMPUT SURV, V27, P262, DOI 10.1145/210376.210389
   OMG, 2003, MDA GUID VERS 1 0 1
   *OMG, 2005, MOF QVT FIN AD SPEC
   OMG, 2006, MET OBJ FAC MOF COR
   *OMG, 2005, UN MOD LANG SUP V2 0
   Pérez J, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P59, DOI 10.1109/QSIC.2003.1319086
   PESSEMIER N, 2004, P INT WORKSH REFL AO
   Pessemier N, 2006, LECT NOTES COMPUT SC, V4089, P259
   Pinto M, 2005, COMPUT J, V48, P401, DOI 10.1093/comjnl/bxh083
   Pinto M, 2003, LECT NOTES COMPUT SC, V2830, P118
   PINTO M, 2007, LNCS, V4765
   RASHID A, EARLY ASPECTS ASPECT
   Reuter A, 1993, T PROCESSING CONCEPT
   SANCHEZ P, 2007, LNCS T ASPECT ORIENT, V4, P54
   SENDALL S, 2001, LNCS, V2185, P391
   Simmonds D, 2005, NINTH IEEE INTERNATIONAL EDOC ENTERPRISE COMPUTING CONFERENCE, PROCEEDINGS, P119, DOI 10.1109/EDOC.2005.5
   STAHL T, 2006, MODEL DRIVEN DEV TEC
   Suvee D., 2003, 2nd International Conference on Aspect-Oriented Software Development, P21
   SZYPERSKI C, 2002, COMPONENT SOFTWARE
   Truyen E, 2001, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2001.919097
NR 60
TC 4
Z9 4
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2008
VL 50
IS 12
BP 1248
EP 1265
DI 10.1016/j.infsof.2007.10.020
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 358CS
UT WOS:000259894800005
DA 2024-07-18
ER

PT J
AU Ebert, C
   De Man, J
AF Ebert, Christof
   De Man, Jozef
TI Effectively utilizing project, product and process knowledge
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE CMMI; KM; knowledge management; PLM; product life-cycle management;
   process improvement; project management
ID PROCESS DIVERSITY; SOFTWARE; MANAGEMENT
AB Improving project management, product development and engineering processes is for many companies crucial to survive in a fast changing environment. However, these activities are rarely integrated well due to the diversity of stakeholders with individual knowledge about projects, products and processes. This case study shows how Alcatel-Lucent over time achieved effective interaction of engineering processes, tools and people on the basis of a knowledge-centric product life-cycle management (PLM). Starting from identifying project, product and process knowledge, we show how they can be effectively integrated for best possible usage across the enterprise. The case study provides insight into how to best embark on PLM and how to effectively integrate product development with supportive tools. It describes how the concepts can be transferred to software engineering teams and IT departments in other companies. Concrete results from several product lines, such as efficiency improvement and better global development underline the business value. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Ebert, Christof] Vector Consulting Serv, Stuttgart, Germany.
   [De Man, Jozef] Alcatel Lucent & Ghent Univ, Antwerp, Belgium.
C3 Alcatel-Lucent
RP Ebert, C (corresponding author), Vector Consulting Serv, Stuttgart, Germany.
EM christof.ebert@vector-consulting.de; jozef.de_man@alcatel-lucent.be
RI Ebert, Christof/JXM-5500-2024
CR [Anonymous], 122071995 ISOIEC
   Aurum A., 2003, Managing Software Engineering Knowledge
   Basili1 Victor R, 1994, Encyclopedia of Software Eng., V1, P469, DOI DOI 10.1002/0471028959.SOF110
   BASKERVILLE R, 1999, INFORMATION SYSTEMS, P175
   *BORL, BORL PLM APPL LIF CY
   BURKE GD, 2005, CROSSTALK MAGAZI JUN
   CATHLEEN A, 2003, CONNECTING DOTS ALIG
   Chang ShiKuo., 2001, Handbook of Software Engineering Knowledge Engineering: Fundamentals, V1
   CHRISSIS MB, 2006, GUIDELINES PROCESS I
   Cockburn A, 2000, IEEE SOFTWARE, V17, P64, DOI 10.1109/52.854070
   Deck M, 2001, IEEE SOFTWARE, V18, P21, DOI 10.1109/52.922721
   Dingsoyr T, 2002, INT J SOFTW ENG KNOW, V12, P391, DOI 10.1142/S0218194002000962
   *EASEE, EASEE PROD LIF MAN
   Ebert C, 2006, IEEE SOFTWARE, V23, P19, DOI 10.1109/MS.2006.88
   EBERT C, 2006, IEEE READYNOTE
   Ebert C., 2007, Software measurement: establish, extract, evaluate, execute
   Ebert C, 2007, IEEE SOFTWARE, V24, P105, DOI 10.1109/MS.2007.83
   Edwards JS, 2003, MANAGING SOFTWARE ENGINEERING KNOWLEDGE, P5
   HARVEY F, 2002, FINANCIAL TIMES 0918, P38
   *ISO IEC, 152882002 ISOIEC
   Lindvall M, 2000, IEEE SOFTWARE, V17, P14, DOI 10.1109/MS.2000.854063
   Lindvall M, 2003, MANAGING SOFTWARE ENGINEERING KNOWLEDGE, P73
   *LOND SCH EC MCKIN, 2005, DOES IT IMPR PERF
   Martínez P, 2005, PROCEEDINGS OF THE 2005 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P554
   *MENT, MENT GRAPH PLM SOL
   *MET GROUP, 2002, BUS IT PORTF MAN BAL
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   Schneider K, 2003, PROC INT CONF SOFTW, P534, DOI 10.1109/ICSE.2003.1201233
   Scott L, 2002, INFORM SOFTWARE TECH, V44, P601, DOI 10.1016/S0950-5849(02)00080-0
   *SEI, CMMI EX OV
   *TEL, TEL ENT LIF CYCL MAN
   DASSAULT PLM SOLUTIO
NR 32
TC 45
Z9 54
U1 0
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2008
VL 50
IS 6
BP 579
EP 594
DI 10.1016/j.infsof.2007.06.007
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 295WY
UT WOS:000255506100007
DA 2024-07-18
ER

PT J
AU Fenton, N
   Neil, M
   Marsh, W
   Hearty, P
   Marquez, D
   Krause, P
   Mishra, R
AF Fenton, Norman
   Neil, Martin
   Marsh, William
   Hearty, Peter
   Marquez, David
   Krause, Paul
   Mishra, Rajat
TI Predicting software defects in varying development lifecycles using
   Bayesian nets
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE causal models; dynamic Bayesian networks; software defects; decision
   support
ID BELIEF NETWORKS
AB An important decision in software projects is when to stop testing. Decision support tools for this have been built using causal models represented by Bayesian Networks (BNs), incorporating empirical data and expert judgement. Previously, this required a custom BN for each development lifecycle. We describe a more general approach that allows causal models to be applied to any lifecycle. The approach evolved through collaborative projects and captures significant commercial input. For projects within the range of the models, defect predictions are very accurate. This approach enables decision-makers to reason in a way that is not possible with regression-based models. (C) 2006 Elsevier B.V. All rights reserved.
C1 Univ London, Dept Comp Sci Queen Mary, London, England.
   Agena Ltd, London, England.
   Univ Surrey, Dept Comp, Surrey, England.
   Philips Software Ctr, Bangalore, Karnataka, India.
C3 University of London; University of Surrey; Philips
RP Fenton, N (corresponding author), Univ London, Dept Comp Sci Queen Mary, Mile End Rd, London, England.
EM norman@dcs.qmul.ac.uk
RI Marsh, David W R/JCE-1503-2023; Krause, Paul John/AFD-8391-2022; Marsh,
   David W R/A-3213-2016; Fenton, Norman/L-5861-2019
OI Marsh, David W R/0000-0003-0212-6363; Fenton,
   Norman/0000-0003-2924-0510; Neil, Martin/0000-0002-4922-0843
CR *AGENAR, ADV RISK AN IMP DEC
   BANGSO O, 2000, P 13 INT FLOR ART IN, P282
   Bibi S., 2004, P 10 INT SOFTW METR
   Cozman F., 1997, TRUNCATED GAUSSIANS
   Fan CF, 2004, J SYST SOFTWARE, V73, P193, DOI 10.1016/j.jss.2003.12.032
   Fenton N, 2004, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE.2004.1317462
   Fenton N, 2002, IEEE SOFTWARE, V19, P116, DOI 10.1109/MS.2002.1020298
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   FENTON NE, 2001, SCALING BAYESIAN NET
   FENTON NE, 2002, J APPL NONCLASSICAL, V12, P173
   Jensen FV, 1996, INTRO BAYESIAN NETWO
   Jones C, 1999, IEE REVIEW, V45, P165, DOI 10.1049/ir:19990406
   JONES C, 1986, PROGRAMMER PRODUCTIV
   Koller D, 1999, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P324
   Koller D., 1997, Proceedings of the Thirteenth conference on Uncertainty in artificial intelligence, P302
   KOZLOV AV, 1997, P 13 C UNC ART INT, P314
   Neil M, 2001, COMPUT CONTROL ENG J, V12, P11, DOI 10.1049/cce:20010103
   Neil M, 2000, KNOWL ENG REV, V15, P257, DOI 10.1017/S0269888900003039
   NEIL M, IN PRESS STAT COMPUT
   NEIL M, 2003, SOFTWARE ENG COMPUTA, pCH6
   Stamelos I, 2003, INFORM SOFTWARE TECH, V45, P51, DOI 10.1016/S0950-5849(02)00163-5
   EPC0054061 EPSRC
NR 22
TC 103
Z9 121
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2007
VL 49
IS 1
BP 32
EP 43
DI 10.1016/j.infsof.2006.09.001
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 115AK
UT WOS:000242706600004
OA Green Published
DA 2024-07-18
ER

PT J
AU Tran, MH
   Raikundalia, GK
   Yang, Y
AF Tran, Minh Hong
   Raikundalia, Gitesh K.
   Yang, Yun
TI Using an experimental study to develop group awareness support for
   real-time distributed collaborative writing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE group awareness; collaborative writing; computer-supported cooperative
   work (CSCW); groupware; awareness mechanisms; Human Computer Interaction
   (HCI)
ID VIDEO
AB Supporting group awareness is vital for the success of real-time, distributed, collaborative writing systems. Many awareness mechanisms have been introduced, but highly effective solutions are few. The research presented in this paper focuses on the development of awareness mechanisms using an experimental study of synchronous distributed collaborative writing. Our study has made two major contributions to research on group awareness.
   First, the study compares the importance of different awareness elements in supporting group awareness for collaborative writing. The results of our Wilcoxon test on awareness elements identify the five most important elements, including "Being able to comment on what other users have done," "Knowing what actions other users are currently taking." "Providing a communication tool when audio is not available," "Knowing other user's working areas in the document," and "Knowing other user's tasks."
   Second, the research proposes mechanisms corresponding to the above-mentioned five awareness elements. The mechanisms include Dynamic Task List (DTL), Modification Director (MD), Advanced Chat (AC) and Split. Window View (SWV). These mechanisms provide support for various aspects of group awareness, and add many enhanced features to existing awareness mechanisms. For example, DTL presents high-level information about authors' responsibilities and the correlation between their work allocations. MD notifies users instantaneously whenever their work is modified by other authors. AC enhances communication between users by allowing them to attach document objects such as text and diagrams to a conversation message. And, SWV provides the views of other authors' working areas and viewing areas simultaneously. (C) 2005 Elsevier B.V. All rights reserved.
C1 Swinburne Univ Technol, CICEC, Fac Informat & Commun Technol, Hawthorn, Vic 3122, Australia.
   Victoria Univ, Sch Comp Sci & Math, ITArl, Melbourne, Vic 8001, Australia.
C3 Swinburne University of Technology; Victoria University
RP Tran, MH (corresponding author), Swinburne Univ Technol, CICEC, Fac Informat & Commun Technol, POB 218, Hawthorn, Vic 3122, Australia.
EM mtran@ict.swin.edu.au; gitesh.raikundalia@vu.edu.au;
   yyang@ict.swin.edu.au
CR Ackerman MS, 2000, HUM-COMPUT INTERACT, V15, P179, DOI 10.1207/S15327051HCI1523_5
   [Anonymous], P CHI 1996
   [Anonymous], P ACM S DES INT SYST
   [Anonymous], 1996, CSCW '96: Proceedings of the 1996 ACM conference on Computer supported cooperative work
   [Anonymous], 2001, P SIGCHI C HUMAN FAC, DOI DOI 10.1145/365024.365119
   [Anonymous], 1992, Proceedings of the 1992 ACM Conference on Computer Supported Cooperative Work (CSCW'92), DOI DOI 10.1145/143457.143468
   [Anonymous], P ACM C HUM FACT COM
   BAECKER RM, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P399
   BEAUDOUINLAFON M, 1992, P ACM S US INT SOFTW, P171
   Begole J., 1999, ACM Transactions on Computer-Human Interaction, V6, P95, DOI 10.1145/319091.319096
   Benford S., 1995, Human Factors in Computing Systems. CHI'95 Conference Proceedings, P242
   BLY SA, 1993, COMMUN ACM, V36, P28, DOI 10.1145/151233.151235
   Carroll JM, 2003, INT J HUM-COMPUT ST, V58, P605, DOI 10.1016/S1071-5819(03)00024-7
   Carroll JM, 2000, INTERACT COMPUT, V13, P43, DOI 10.1016/S0953-5438(00)00023-0
   Chengzheng Sun, 1998, ACM Transactions on Computer-Human Interaction, V5, P63, DOI 10.1145/274444.274447
   Clark H., USING LANGUAGE
   CLEMENT A, 1994, COMPUTER SUPPORTED C, V2
   COOPER A, 2000, FACE 2 0 ESSENTIAL I
   Dourish P., 1992, PORTHOLES, P541, DOI DOI 10.1145/142750.142982
   Dyck J., 2004, P 2004 ACM C COMPUTE, DOI [10.1145/1031607.1031636, DOI 10.1145/1031607.1031636]
   DYCK J, 2001, HCITR200102 U SASK D
   ELLIS CA, 1991, COMMUN ACM, V34, P38
   GAVER M, 1991, P 2 EUR C COMP SUPP
   GREEN SB, 2000, USING SPSS WIND AN U
   Greenberg S, 1996, PROC GRAPH INTERF, P28
   Greenberg S., 1996, Proceedings Sixth Australian Conference on Computer-Human Interaction, P54, DOI 10.1109/OZCHI.1996.559988
   GREENBERG S, 1996, PEOPLE COMPUTER, V11, P229
   GRUDIN J, 1994, COMMUN ACM, V37, P92, DOI 10.1145/175222.175230
   Grudin J., 1990, ART HUMAN COMPUTER I, P171
   Gutwin C., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P411, DOI 10.1023/A:1021271517844
   Gutwin C., 1999, ACM Transactions on Computer-Human Interaction, V6, P243, DOI 10.1145/329693.329696
   Gutwin Carl., 1996, Proc.ACMConferenceonComputer-SupportedCooperativeWork, P258, DOI [10.1145/240080.240298, DOI 10.1145/240080.240298]
   HAYNE S, 1994, J MANAGEMENT INFORM, V10, P42
   Holmquist L. E., 1999, Personal Technologies, V3, P13, DOI 10.1007/BF01305316
   ISHII H, 1994, COMMUN ACM, V37, P83, DOI 10.1145/179606.179687
   Lay MaryM., 1991, COLLABORATIVE WRITIN
   Leland M.D. P., 1988, P 1988 ACM C COMPUTE, P206
   *LLC, 2001, HYP TECHN LLC
   MARK G, 1997, P 6 IFIP INT C HUM C, P412
   Matarazzo G, 2000, BEHAV INFORM TECHNOL, V19, P339, DOI 10.1080/014492900750000045
   McGrath J.E., 1994, Human-Computer Interaction, V26, P152
   McGrath JosephE., 1994, GROUPS INTERACTING T
   McGuffin L J., 1992, ShrEdit: A Shared Electronic Work Space
   Moody P.B., 2000, P INT WORKSH AW WWW
   Nacenta M.A., 2005, P ACM C HUMAN FACTOR, P371, DOI DOI 10.1145/1054972.1055024
   NEUWIRTH CM, 1994, P C COMP SUPP COOP W, P145
   NEWMANWOLFE RE, 1991, P ACM COCS C ORG COM, P240
   Paul H, 2002, INT J HUM-COMPUT INT, V14, P237, DOI 10.1207/S15327590IJHC1402_7
   POSNER IR, 1992, P 25 HAW INT C SYST, P127
   Prinz W., 1999, Proc. of the 6th European Conference on Computer Supported Cooperative Work, P391
   RODDEN T, 1996, P ACM C COMP SUPP CO
   SALVADOR T, 1996, ACM SIGCHI B, V28, P52
   Skopik A., 2005, SIGCHI C HUMAN FACTO, P771, DOI [10. 1145/1054972.1055079, DOI 10.1145/1054972.1055079]
   Sohlenkamp M., 2000, AI & Society, V14, P31, DOI 10.1007/BF01206127
   STEFIK M, 1987, ACM T INFORM SYST, V5, P147, DOI 10.1145/27636.28056
   SUN C, 2002, ACM T COMPUT-HUM INT, V9, P309, DOI DOI 10.1145/586081.586085
   Tang J. C., 1989, Toward an Understanding of the Use of Shared Workspaces by Design Teams
   TANG JC, 1991, INT J MAN MACH STUD, V34, P143, DOI 10.1016/0020-7373(91)90039-A
   TANG JC, 1991, ACM T INFORM SYST, V9, P170, DOI 10.1145/123078.128729
   Tran M., 2001, P 6 AUSTR DOC COMP S, P95
   Tran MH, 2004, LECT NOTES COMPUT SC, V3101, P491
   TRAN MH, 2002, P C HUM FACT HF 02 M
   Vertegaal R, 2000, PROC GRAPH INTERF, P95
   VERTEGAAL R, 1997, ACM CHI 97 C HUM FAC
   WANT R, 1992, ACM T INFORM SYST, V10, P91, DOI 10.1145/128756.128759
   WEIR P, 1998, BRIT COMP SOC C HUM, P239
   Yang Y, 2000, IEEE INTERNET COMPUT, V4, P18, DOI 10.1109/4236.845386
NR 67
TC 11
Z9 13
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2006
VL 48
IS 11
BP 1006
EP 1024
DI 10.1016/j.infsof.2005.12.009
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 101CL
UT WOS:000241716400002
DA 2024-07-18
ER

PT J
AU Malevris, N
   Yates, DF
AF Malevris, N.
   Yates, D. F.
TI The collateral coverage of data flow criteria when branch testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE branch testing; data-flow testing; collateral coverage; infeasible paths
ID PROGRAM; PATHS
AB When exercising program code with test data in an attempt to satisfy a given testing criterion, there will be a concurrent accrual of coverage in respect of other testing criteria. Knowledge of the extent of such 'collateral coverage' can be used to advantage both in providing better estimates of the overheads entailed by the overall testing exercise, and in helping to determine an optimal sequence for the application of a set of testing methods.
   In this paper, the results deriving from a set of experiments are reported. The aim of the experiments was to investigate the extent of the collateral coverage that is achieved in respect of the data-flow testing criteria when branch testing is undertaken. (c) 2005 Elsevier B.V. All rights reserved.
C1 Athens Univ Econ & Business, Dept Informat, Athens, Greece.
   Athens Univ Econ & Business, Dept Informat, Informat Syst & Databases Lab, Athens, Greece.
C3 Athens University of Economics & Business; Athens University of
   Economics & Business
RP Malevris, N (corresponding author), Athens Univ Econ & Business, Dept Informat, Athens, Greece.
EM ngm@aueb.gr
CR Beizer Boris, 1984, Software System Testing and Quality Assurance
   Bertolino A, 1996, J SYST SOFTWARE, V35, P95, DOI 10.1016/0164-1212(95)00089-5
   *BRIT COMP SOC SPE, STAND SOFTW COMP TES
   BROWN JR, 1972, TRW557205 TRW SYST
   Chaim ML, 2004, J SOFTW MAINT EVOL-R, V16, P277, DOI 10.1002/smr.297
   CLARKE LA, 1995, P 8 INT C SOFTW ENG, P244
   *EUR SPAC AG, 1991, SOFTW ENG STAND
   Frankl PG, 1998, IEEE T SOFTWARE ENG, V24, P586, DOI 10.1109/32.707695
   FRANKL PG, 1988, IEEE T SOFTWARE ENG, V14, P1483, DOI 10.1109/32.6194
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P962, DOI 10.1109/32.245738
   FRANKL PG, 2000, ISSTA 00 PORTL OR, P124
   Gabow H. N., 1976, IEEE Transactions on Software Engineering, VSE-2, P227, DOI 10.1109/TSE.1976.233819
   Herman P.M., 1976, AUSTR COMPUTER J, V8, P347
   Jorgensen PaulC., 1995, Software Testing: A Craftsman's Approach, V1st
   KEMIGHAN BW, 1981, SOFTWARE TOOLS PASCA
   Koutsikas C, 2001, ACS/IEEE INTERNATIONAL CONFERENCE ON COMPUTER SYSTEMS AND APPLICATIONS, PROCEEDINGS, P466, DOI 10.1109/AICCSA.2001.934045
   Laski J., 1982, SIGPLAN Notices, V17, P62, DOI 10.1145/947955.947963
   LASKI JW, 1983, IEEE T SOFTWARE ENG, V9, P347, DOI 10.1109/TSE.1983.236871
   *LDRA SOFTW TECHN, TESTBED
   LIANG D, 1999, ACM SIGPLAN SIGSOFT, P39
   MALEVRIS N, 1990, INFORM SOFTWARE TECH, V32, P115, DOI 10.1016/0950-5849(90)90110-D
   MALEVRIS N, 3 INT C REL QUAL SAF, P32
   Ministry of Defense, 1997, REQ SAF REL SOFTW DE, V00-55
   Nguyen TB, 2003, ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P332
   NTAFOS SC, 1979, IEEE T SOFTWARE ENG, V5, P520, DOI 10.1109/TSE.1979.234213
   PAIGE MR, 1977, IEEE T SOFTWARE ENG, V3, P386, DOI 10.1109/TSE.1977.231171
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Rapps S., 1982, Sixth International Conference on Software Engineering, P272
   Roper M., 1994, SOFTWARE TESTING
   WOODWARD MR, 1984, TSI-TECH SCI INF, V3, P273
   WOODWARD MR, 1980, IEEE T SOFTWARE ENG, V6, P278, DOI 10.1109/TSE.1980.230473
   YATES DF, 1989, ACM SIGSOFT, V14, P48, DOI 10.1145/75309.75315
   YATES DF, 1995, SOFTWARE QUAL J, V4, P227, DOI 10.1007/BF01351925
   YATES DF, 1985, P 11 WORKSH GRAPH TH, P421
NR 34
TC 21
Z9 22
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2006
VL 48
IS 8
BP 676
EP 686
DI 10.1016/j.infsof.2005.07.006
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 056GS
UT WOS:000238510700004
DA 2024-07-18
ER

PT J
AU Yang, L
   Jones, BF
   Yang, SH
AF Yang, L
   Jones, BF
   Yang, SH
TI Genetic algorithm based software integration with minimum software risk
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT International Conference on IEA/AIES 2004
CY 2004
CL CANADA
SP IEA, AIES
DE software integration; software risk; genetic algorithm; fire risk
   management
AB This paper investigates an approach of integrating software with a minimum risk using Genetic Algorithms (GA). The problem was initially proposed by the need of sharing common software components among various departments within a same organization. Two significant contributions have been made in this study: (I),in assimilation exchange based software integration approach is proposed; (2) the software integration problem is formulated as a search problem and solved by using a GA. A case study is based on an on-going software integration project carried out in the Derbyshire Fire Rescue Service, and used to illustrate the application of the approach. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ Loughborough, Dept Comp Sci, Loughborough LE11 3TU, Leics, England.
   Univ Derby, Appl Comp Dept, Derby DE22 1GB, England.
C3 Loughborough University; University of Derby
RP Yang, L (corresponding author), Univ Loughborough, Dept Comp Sci, Loughborough LE11 3TU, Leics, England.
EM l.yang@lboro.ac.uk
RI Yang, Shuang-Hua/GZA-7839-2022; Jones, Benjamin F/KDO-8255-2024
OI Jones, Benjamin F/0000-0001-9697-9388
CR [Anonymous], 2000, ENTERPRISE APPL INTE
   CUMMING G, 2002, EAI J            APR, P28
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   JOHNSON S, 2001, EAI J            DEC, P41
   Jones BF, 1996, SOFTWARE ENG J, V11, P299, DOI 10.1049/sej.1996.0040
   Kauppinen M, 2004, INFORM SOFTWARE TECH, V46, P937, DOI 10.1016/j.infsof.2004.04.002
   MILLER MJ, 1983, POP COMPUT, V3, P106
   Munson J., 1996, HDB SOFTWARE RELIABI, P493
   Neumann DE, 2002, IEEE T SOFTWARE ENG, V28, P904, DOI 10.1109/TSE.2002.1033229
   RAO BN, 2002, EAI J            MAY, P36
   ROBISON L, 2002, IMPLEMENTING B2B COM
   SCHMIDT J, 2000, EAI J            JUL, P74
   WHITLEY D, 1994, STAT COMPUT, V4, P65, DOI 10.1007/BF00175354
   Yacoub SM, 2002, IEEE T SOFTWARE ENG, V28, P529, DOI 10.1109/TSE.2002.1010058
   YAN GL, 2002, P 1 CIRP UK SEM DIG, P303
   YANG L, 2004, THESIS U DERBY
   Yang LL, 2003, LECT NOTES ARTIF INT, V2718, P644
   1984, USMILSTD1629A
   1997, NASASTD871913A
NR 20
TC 10
Z9 10
U1 1
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2006
VL 48
IS 3
BP 133
EP 141
DI 10.1016/j.infsof.2005.03.005
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Conference Proceedings Citation Index - Science (CPCI-S); Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 027SZ
UT WOS:000236437200001
OA Green Published
DA 2024-07-18
ER

PT J
AU Kim, J
   Park, S
AF Kim, J
   Park, S
TI XQuery speedup by deploying structural redundancy in mapping XML into
   relations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE storing XML; using RDBMS; structural redundancy; search
AB In designing a relational schema, we often consider that an attribute of a table is replicated into other table to reduce the join cost. Maybe such a possible redundancy will be grasped through E/R model (i.e. semantic analysis). Similarly, in mapping XML into relations, we can consider some redundancies to enhance query performance and they can be grasped through the structural traits of DTD (or XML schema). Several practical structural redundancies are formulated in this paper. If given XML data and queries are very large and complex, finding essential replications may also be difficult, and two efficient search methods are introduced for helping the search. Since the search problem is NP-hard, the methods are heuristically designed. Finally, read and update query costs arising by employing the structural redundancy are analyzed experimentally and the efficiency of two search methods is analyzed. They showed that the replication strategy can be very useful. (c) 2005 Elsevier B.V. All rights reserved.
C1 Sogang Univ, Dept Comp Sci, Seoul 121742, South Korea.
C3 Sogang University
RP Kim, J (corresponding author), Sogang Univ, Dept Comp Sci, 1-1 Shinsu Dong, Seoul 121742, South Korea.
EM chris3@dblab.sogang.ac.kr; spark@dblab.sogang.ac.kr
CR Abiteboul S, 1995, FDN DATABASES
   [Anonymous], 1979, PROC ACM SIGMOD INT
   [Anonymous], 2000, EXTENSIBLE MARKUP LA, Vsecond
   [Anonymous], 2001, XML Schema
   [Anonymous], 2002, P ACM SIGMOD INT C M
   Bohannon P, 2002, PROC INT CONF DATA, P64, DOI 10.1109/ICDE.2002.994698
   BUNEMAN P, 2001, WWW 10
   Cooper B. F., 2001, Proceedings of the 27th International Conference on Very Large Data Bases, P341
   Deutsch A, 1999, SIGMOD RECORD, VOL 28, NO 2 - JUNE 1999, P431, DOI 10.1145/304181.304220
   DEUTSCH A, 2003, P 29 INT C VER LARG, P201
   Fernández M, 2002, ACM T DATABASE SYST, V27, P438, DOI 10.1145/582410.582413
   Florescu Daniela., 1999, IEEE DATA ENG B, V22
   Freire Juliana., 2002, P 2002 ACM SIGMOD IN, P181
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   GUPTA H, 1997, P 6 INT C DAT THEOR, P98
   KANG HI, 2000, 7 ANN C XML SGML MAR
   Kanne C., 2000, DATA ENG, P198
   KAUSHIK R, 2002, P 2002 ACM SIGMOD IN, P133
   KEMPER A, 1990, SIGMOD REC, V19, P364, DOI 10.1145/93605.98745
   Kim J, 2003, EIGHTH INTERNATIONAL CONFERENCE ON DATABASE SYSTEMS FOR ADVANCED APPLICATIONS, PROCEEDINGS, P345
   Schmidt A., 2002, Proceedings of the Twenty-eighth International Conference on Very Large Data Bases, P974
   Shanmugasundaram J, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P302
   Shanmugasundaram Jayavel., 2000, P 26 INT C VERY LARG, P65
   SHEKITA EJ, 1989, SIGMOD REC, V18, P325, DOI 10.1145/66926.66957
   TATARINOV I, 2001, P ACM SIGMOD INT C M, P413
   TSATALOS O, 1994, P VLDB
NR 26
TC 1
Z9 1
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2006
VL 48
IS 1
BP 12
EP 30
DI 10.1016/j.infsof.2005.02.004
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 999OB
UT WOS:000234397900002
DA 2024-07-18
ER

PT J
AU Ratcliffe, M
   Budgen, D
AF Ratcliffe, M
   Budgen, D
TI The application of use cases in systems analysis and design
   specification
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE analysis; object design; statechart; use case
AB This paper begins by reviewing the application of use cases in the analysis and design phases of software development. At present, a use case derived in analysis is generally mapped into design through the synthesis of object behaviour for all scenarios associated with the use case. Hence the use case level of abstraction is not directly used in this process and a semantic gap exists between analysis and design. With informal textually based use case definitions this is to be expected, however, if the use cases themselves are given a more concrete structure, for example in the form of a statechart, then their direct use becomes more feasible.
   In this paper we therefore investigate the application of use case structures in the initial design phases of software development. A novel approach is proposed that applies a state based use case model directly to each object in the design architecture. This requires the derivation of a set of repeatable refinement procedures, which remove redundancy and allow the assignment of behaviour to objects with respect to their responsibilities. It is then shown how such procedures may be used in design, filling the semantic gap between analysis and design. By applying the procedures to a case study we identify and evaluate the characteristics of the mapping from use case model to object behaviour and review our approach with respect to other methods. It is concluded that state based use case structures not only represent a succinct analysis format, but may also be used to map analysis models directly into the design process. (c) 2004 Elsevier B.V. All rights reserved.
C1 UCE Birmingham, Sch Comp, Birmingham B42 2SU, W Midlands, England.
   Keele Univ, Dept Comp Sci, Keele ST5 5BT, Staffs, England.
C3 Birmingham City University; Keele University
RP Ratcliffe, M (corresponding author), UCE Birmingham, Sch Comp, Birmingham B42 2SU, W Midlands, England.
EM martyn.ratcliffe@uce.ac.uk; d.budgen@cs.keele.ac.uk
OI Budgen, David/0000-0001-7143-0241
CR AMYOT D, 1999, RE 99 4 IEEE INT S R, V14
   [Anonymous], 1990, DESIGNING OBJECT ORI
   [Anonymous], P 31 IEEE S FDN COMP
   BARBIER F, 1998, JOOP, P16
   Dano B., 1997, Requirements Engineering, V2, P79, DOI 10.1007/BF02813027
   HAREL D, 2001, P 5 INT C IMPL APPL
   HAREL D, 2001, COMPUTER         APR, P4
   HAREL D, 1999, P 3 IFIP INT C FORM, P293
   Jacobson Ivar, 1999, UNIFIED MODELLING LA
   Khriss I, 1999, LECT NOTES COMPUT SC, V1618, P132
   Ratcliffe M, 2001, INFORM SOFTWARE TECH, V43, P365, DOI 10.1016/S0950-5849(00)00172-5
   RATCLIFFE M, 2003, THESIS KEELE U
   Systä T, 2000, JOOP, V13, P18
   UCHITEL S, 2001, P 9 EUR SOFTW ENG C
   UCHITEL S, 2001, P 23 IEEE INT C 9 AC
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P1089, DOI 10.1109/32.738341
   Weidenhaupt K, 1998, IEEE SOFTWARE, V15, P34, DOI 10.1109/52.663783
   WHITTLE J, 2000, ICSE 2000 LIM IR
NR 18
TC 8
Z9 8
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 15
PY 2005
VL 47
IS 9
BP 623
EP 641
DI 10.1016/j.infsof.2004.11.003
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 934GQ
UT WOS:000229695300004
DA 2024-07-18
ER

PT J
AU Zaki, M
   Sobh, TS
AF Zaki, M
   Sobh, TS
TI NCDS: data mining for discovering interesting network characteristics
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE data mining; network management; abstraction; pattern discovery
AB This paper presents an approach to observe network characteristics based on data mining framework. Consequently, such observations may be expressed in structured patterns to support the process of network planning. The underlying system monitors the network protocol tables that describe each network connection or host session in order to discover interesting patterns. To achieve this purpose a data abstraction procedure is applied to learn rules that may express the behavior of network characteristics. Thus, the system is capable to discover various operational patterns, provide sensible advices, and support the network planning activity.
   A database system has been designed and implemented for monitoring the network traffic. Also the results from the experiments have been used to classify real traffic data. The system presented in this paper called network characteristics discovery system. (C) 2004 Published by Elsevier B.V.
C1 Al Azhar Univ, Dept Syst & Comp Engn, Cairo 12311, Egypt.
   Egyptian Armed Forces, Dept Informat Syst, Cairo, Egypt.
C3 Egyptian Knowledge Bank (EKB); Al Azhar University
RP Al Azhar Univ, Dept Syst & Comp Engn, Cairo 12311, Egypt.
EM azhar@mailer.scu.eun.eg; tarek-box2000@arabia.com
OI Sobh, Tarek/0000-0002-5232-5865
CR BARRUFFI R, 2001, PLANNING SECURITY MA
   BROWER D, 1994, INTERNET ENG TASK FO
   BYKOWSKI A, 2003, INFORMATION SYSTEMS, P28
   CAI Y, 1991, KNOWLEDGE DISCOVERY
   CHO K, 2003, KNOWLEDGE BASED SYST, V16
   DEWITT T, 1997, CMUCS97194 CARN U
   DHAR V, 1993, IEEE T KNOWLEDGE DAT, V5
   GANESAN D, 2003, 1 INT C EMB NETW SEN
   Han J., 1992, P 18 VLDB C
   Han J., 1997, P CASCON 97 M MINDS
   Hegering H.G., 1999, INTEGRATED MANAGEMEN
   KUDOH Y, 2003, THEORETICAL COMPUTER
   LI Y, 2001, ACM SIGOPS OPERATING, V35
   NAGULE M, 1994, NETWORK PROTOCOL HDB
   PAZZANI MJ, 2000, IEEE INTELLIGENT SYS
NR 15
TC 3
Z9 3
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 1
PY 2005
VL 47
IS 3
BP 189
EP 198
DI 10.1016/j.infsof.2004.08.002
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 896QV
UT WOS:000226949500005
DA 2024-07-18
ER

PT J
AU Carvalho, L
   Scott, L
   Jeffery, R
AF Carvalho, L
   Scott, L
   Jeffery, R
TI An exploratory study into the use of qualitative research methods in
   descriptive process modelling
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE descriptive process modelling; qualitative research methods; process
   engineering; software engineering
AB The paper describes an exploratory study that investigated two descriptive software process models derived from the same process data using two different techniques. To set the context, the paper describes qualitative methods. particularly grounded theory and its techniques. and then explores the nature of the differences in the two models produced. It suggests ways in which constant comparison may contribute to the process-modelling task. As far as we are aware, it also serves as the first exploratory research on the application of this method in the software engineering process research domain. Based on data analysis using the technique of constant comparison often used in grounded theory research, a naive process modeller derived one of the models. An experienced process engineer relying heavily on experience and skill using an ad hoc approach derived the second model. The aim of the study was to explore differences in the models derived and to use this comparison as a basis for reflection on the method conventionally used in descriptive process modelling in contrast with the use of more formal qualitative analysis. The results show that (1) data analysis using the technique of constant comparison could be successfully applied to analyse process data, (2) the person with little experience in process modelling could produce a process model based on the data analysis using constant comparison and (3) the process model produced by the naive modeller was not equivalent to that produced by an experienced process engineer. (C) 2004 Elsevier B.V. All rights reserved.
C1 Univ New S Wales, Natl ICT Australia Ltd, Sch Engn & Comp Sci, Sydney, NSW, Australia.
C3 NICTA; University of New South Wales Sydney
RP UNSW, Natl ICT Australia, Locked Bag 9013, Alexandria, NSW 1435, Australia.
EM ross.jeffery@nicta.com.au
OI Carvalho, Lucila/0000-0001-6528-1948
CR BANDINELLI S, 1994, SPADE ENV SOFTWARE P
   BECKERKORNSTAED.U, 1999, P 11 C ADV INF SYST, P119
   Burrel G., 1979, SOCIOLOGICAL PARADIG
   Carver J, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P72, DOI 10.1109/ISESE.2003.1237966
   Crotty M., 1998, Phenomenology and nursing research
   CURTIS B, 1992, COMMUN ACM, V35, P75, DOI 10.1145/130994.130998
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   HOELTJE D, P CAS C 1994
   Jaccheri M. L., 1998, ACM Transactions on Software Engineering and Methodology, V7, P368, DOI 10.1145/292182.292194
   Orlikowski WJ, 1996, INFORM SYST RES, V7, P63, DOI 10.1287/isre.7.1.63
   Pidgeon N., 1996, HDB QUALITATIVE RES, V1st
   Pidgeon N., 1996, HDB QUALITATIVE METH, P86
   *QSR INT PTY LTD, 2000, NVIV
   Scott L, 2002, INFORM SOFTWARE TECH, V44, P601, DOI 10.1016/S0950-5849(02)00080-0
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   SHULL F, 2001, P JOINT 8 EUR SOFTW, P288
   Strauss A., 1990, BASICS QUALITATIVE R
   Strauss A., 1998, STRATEGIES QUALITATI
   URQUHART C, 1997, P IFIP TC8 WG 8 2 IN
   Wohlin C, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P118, DOI 10.1109/METRIC.2002.1011331
NR 20
TC 12
Z9 15
U1 2
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB 1
PY 2005
VL 47
IS 2
BP 113
EP 127
DI 10.1016/j.infsof.2004.06.005
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 886VD
UT WOS:000226260000004
DA 2024-07-18
ER

PT J
AU Ahmed, MA
   Saliu, MO
   AlGhamdi, J
AF Ahmed, MA
   Saliu, MO
   AlGhamdi, J
TI Adaptive fuzzy logic-based framework for software development effort
   prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE soft computing; effort prediction; fuzzy logic; COCOMO
AB Algorithmic effort prediction models are limited by their inability to cope with uncertainties and imprecision present in software projects early in the development life cycle. In this paper, we present an adaptive fuzzy logic framework for software effort prediction. The training and adaptation algorithms implemented in the framework tolerates imprecision, explains prediction rationale through rules, incorporates experts knowledge, offers transparency in the prediction system, and could adapt to new environments as new data becomes available. Our validation experiment was carried out on artificial datasets as well as the COCOMO public database. We also present an experimental validation of the training procedure employed in the framework. (C) 2004 Elsevier B.V. All rights reserved.
C1 Univ Calgary, Dept Comp Sci, Calgary, AB T2N 1N4, Canada.
   King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran 31261, Saudi Arabia.
C3 University of Calgary; King Fahd University of Petroleum & Minerals
RP Univ Calgary, Dept Comp Sci, 2500 Univ Dr NW, Calgary, AB T2N 1N4, Canada.
EM mahmed@ccse.kfupm.edu.sa; saliu@cpsc.ucalgary.ca;
   jaralla@ccse.kfupm.edu.sa
OI Ahmed, Moataz/0000-0003-0042-8819
CR [Anonymous], MCSEAI 2000
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 7 INT C FUZZ THEOR T
   BOEHM B, 2000, USCCSE2000505 U S CA
   Boehm BW., 1981, Software Engineering Economics
   Boetticher G., 2001, P MOD BAS REQ WORKSH, P17
   BOETTICHER GD, 2001, P 2 INT WORKSH SOFT
   BRIAND LC, 2001, ENCY SOFTWARE ENG
   Burgess CJ, 2001, INFORM SOFTWARE TECH, V43, P863, DOI 10.1016/S0950-5849(01)00192-6
   CHULANI S, 1998, USCCSE98508 U S CAL
   CLARK BK, 1997, THESIS U S CALIFORNI
   FEI ZL, 1992, IEEE INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS, P331, DOI 10.1109/FUZZY.1992.258637
   Gray A, 1997, INFORM SOFTWARE TECH, V39, P425, DOI 10.1016/S0950-5849(96)00006-7
   HODGKINSON AC, 1999, P 3 INT C SOFTW ENG, P401
   Idri A, 2001, JOINT 9TH IFSA WORLD CONGRESS AND 20TH NAFIPS INTERNATIONAL CONFERENCE, PROCEEDINGS, VOLS. 1-5, P470, DOI 10.1109/NAFIPS.2001.944298
   KIRSOPP C, 2000, GENETIC EVOLUTIONARY
   KIRSOPP C, 2002, 6 INT CF EMP ASS EV
   MacDonell SG, 2003, INFORM SOFTWARE TECH, V45, P389, DOI 10.1016/S0950-5849(03)00011-9
   MacDonell SG, 1999, 18TH INTERNATIONAL CONFERENCE OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY - NAFIPS, P263, DOI 10.1109/NAFIPS.1999.781695
   MACDONELL SG, 1999, P 6 INT C NEUR INF P, P308
   MACDONELL SG, 1997, P 1997 INT C NEUR IN, P869
   Mair C, 2000, J SYST SOFTWARE, V53, P23, DOI 10.1016/S0164-1212(00)00005-4
   Musilek P., 2000, Applied Computing Review, V8, P24, DOI 10.1145/373975.373984
   Nauck D., 2000, DATA ANAL NEUROFUZZY
   NAUCK D, 1994, P FUZZ SYST 94 MUN
   Nauck D., 1997, FDN NEURO FUZZY SYST
   Negnevitsky M., 2011, Artificial intelligence: A guide to intelligent systems
   PEDRYCZ W, 1999, P IEEE CAN C EL COMP
   RYDER J, 1998, P IEEE INF TECHN C S
   SALIU MO, 2003, THESIS FAHD U PETR M
   Saliu MO, 2004, COMPUTATIONAL INTELL
   Schofield C., 1998, NONALGORITHMIC EFFOR
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shi Y, 1996, FUZZ-IEEE '96 - PROCEEDINGS OF THE FIFTH IEEE INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS, VOLS 1-3, P55, DOI 10.1109/FUZZY.1996.551719
   Shukla KK, 2000, INFORM SOFTWARE TECH, V42, P701, DOI 10.1016/S0950-5849(00)00114-2
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V24
   Strike K, 2001, IEEE T SOFTWARE ENG, V27, P890, DOI 10.1109/32.962560
   VENKATACHALAM AR, 1993, IEEE IJCNN, P987
   WANG L, 1992, IEEE T SYSTEM MAN CY, V22
   Wittig G, 1997, INFORM SOFTWARE TECH, V39, P469, DOI 10.1016/S0950-5849(97)00004-9
NR 40
TC 45
Z9 49
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN 1
PY 2005
VL 47
IS 1
BP 31
EP 48
DI 10.1016/j.infsof.2004.05.004
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 875MG
UT WOS:000225423900004
DA 2024-07-18
ER

PT J
AU Park, HH
   Min, JK
   Chung, CW
   Chang, TG
AF Park, HH
   Min, JK
   Chung, CW
   Chang, TG
TI Multi-way R-tree joins using indirect predicates
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE spatial databases; spatial join; M-way R-tree join; indirect predicates
AB Since spatial join processing consumes much time, several algorithms have been proposed to improve spatial join performance. Spatial join has been processed in two steps, called filter step and refinement step. The M-way R-tree join (MRJ) is a filter step join algorithm, which synchronously traverses M R-trees. In this paper, we introduce indirect predicates which do not directly come from the multi-way join conditions but are indirectly derived from them. By applying indirect predicates as well as direct predicates to MRJ, we can quickly remove the minimum bounding rectangle (MBR) combinations which do not satisfy the direct predicates or the indirect predicates at the parent level. Hence we can reduce the intermediate MBR combinations for the input to the child level processing and improve the performance of MRJ. We call such a multi-way R-tree join algorithm using indirect predicates indirect predicate filtering (IPF). Through experiments using synthetic data and real data, we show that IPF significantly improves the performance of MRJ. (C) 2004 Elsevier B.V. All rights reserved.
C1 Korea Adv Inst Sci & Technol, Dept Elect Engn & Comp Sci, Taejon 305701, South Korea.
   Chung Ang Univ, Sch Elect & Elect Engn, Seoul 156756, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST); Chung Ang
   University
RP Min, JK (corresponding author), Korea Adv Inst Sci & Technol, Dept Elect Engn & Comp Sci, 373-1 Kusong Dong, Taejon 305701, South Korea.
EM hohyun@cau.ac.kr; jkmin@islab.kaist.ac.kr; chungcw@islab.kaist.ac.kr;
   tgchang@cau.ac.kr
RI Chung, Chin-Wan/C-2029-2011
CR [Anonymous], 1985, COMPUTATIONAL GEOMET, DOI DOI 10.1007/978-1-4612-1098-6
   [Anonymous], 1978, Fundamentals of Computer Algorithms
   [Anonymous], 1973, The art of computer programming
   [Anonymous], 1994, VLDB J, DOI [10.1007/BF01231602, DOI 10.1007/BF01231602]
   BECKMANN N, 1990, SIGMOD REC, V19, P322, DOI 10.1145/93605.98741
   Brinkoff T., 1993, P ACM SIGMOD, P237
   GNTHER O, 1993, P IEEE ICDE, P50
   Guttman A., 1984, SIGMOD Record, V14, P47, DOI 10.1145/971697.602266
   Huang YW, 1997, PROCEEDINGS OF THE TWENTY-THIRD INTERNATIONAL CONFERENCE ON VERY LARGE DATABASES, P396
   LO ML, 1994, P ACM SIGMOD INT C M, P209
   Mamoulis N, 2001, ACM T DATABASE SYST, V26, P424, DOI 10.1145/503099.503101
   Mamoulis N, 1999, SIGMOD RECORD, VOL 28, NO 2 - JUNE 1999, P1, DOI 10.1145/304181.304183
   ORENSTEIN J, 1986, P ACM SIGMOD 86 WASH, P326
   Papadias D, 2001, ALGORITHMICA, V30, P188, DOI 10.1007/s00453-001-0005-y
   Papadias D., 1998, Proceedings of the Twenty-Fourth International Conference on Very-Large Databases, P546
   Park HH, 2000, INFORM SYST, V25, P1, DOI 10.1016/S0306-4379(00)00006-5
   Park HH, 1999, LECT NOTES COMPUT SC, V1651, P229
   PARK HH, 2001, THESIS KAIST
   PATEL JM, 1996, P ACM SIGMOD INT C M, P259
   SELLIS T, 1987, P VLDB
   Theodoridis Y, 1998, PROC INT CONF DATA, P476, DOI 10.1109/ICDE.1998.655810
   THEODORIDIS Y, 1995, P 2 INT C SPAT INF T, P537
   *US BUR CENS, 1995, TIGER LIN FIL TECHN
   VALDURIEZ P, 1987, ACM T DATABASE SYST, V12, P218, DOI 10.1145/22952.22955
NR 24
TC 0
Z9 1
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 1
PY 2004
VL 46
IS 11
BP 739
EP 751
DI 10.1016/j.infsof.2003.12.007
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 827LP
UT WOS:000221901600004
DA 2024-07-18
ER

PT J
AU Okun, V
   Black, PE
   Yesha, Y
AF Okun, V
   Black, PE
   Yesha, Y
TI Comparison of fault classes in specification-based testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE fault-based testing; specification-based testing; Kuhn's hierarchy;
   fault classes
ID ERROR-DETECTION CAPABILITY; TEST DATA SELECTION
AB Our results extending Kuhn's fault class hierarchy provide a justification for the focus of fault-based testing strategies on detecting particular faults and ignoring others. We develop a novel analytical technique which allows us to elegantly prove that the hierarchy applies to arbitrary expressions, not just those in disjunctive normal form. We also use the technique to extend the hierarchy to a wider range of fault classes. To demonstrate broad applicability, we compare faults in practical situations and analyze previous results. In particular, using our technique, we show that the basic meaningful impact strategy of Weyuker et al. tests for stuck-at faults, not just variable negation faults. (C) 2004 Elsevier B.V. All rights reserved.
C1 Univ Maryland Baltimore Cty, Dept Comp Sci & Elect Engn, Baltimore, MD 21250 USA.
   Natl Inst Stand & Technol, Gaithersburg, MD 20899 USA.
C3 University System of Maryland; University of Maryland Baltimore County;
   National Institute of Standards & Technology (NIST) - USA
RP Univ Maryland Baltimore Cty, Dept Comp Sci & Elect Engn, 1000 Hilltop Circle, Baltimore, MD 21250 USA.
EM vokun1@cs.umbc.edu; paul.black@nist.gov; yayesha@cs.umbc.edu
CR Black PE, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P81, DOI 10.1109/ASE.2000.873653
   Chen TY, 2001, SOFTW TEST VERIF REL, V11, P165, DOI 10.1002/stvr.221
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   CLARKE LA, 1989, IEEE T SOFTWARE ENG, V15, P1318, DOI 10.1109/32.41326
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   FOSTER KA, 1980, IEEE T SOFTWARE ENG, V6, P258, DOI 10.1109/TSE.1980.234487
   Goodenough J. B., 1975, IEEE Transactions on Software Engineering, VSE-1, P156, DOI 10.1109/TSE.1975.6312836
   GOPAL AS, 1983, 8317 TR U AR
   GORADIA T, 1988, THESIS NEW YORK U
   Kuhn DR, 1999, ACM T SOFTW ENG METH, V8, P411, DOI 10.1145/322993.322996
   KUHN DR, 1992, COMPUT J, V35, P574, DOI 10.1093/comjnl/35.6.574
   Lau MF, 2001, 2001 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P21, DOI 10.1109/ASWEC.2001.948494
   LEVESON NG, 1994, IEEE T SOFTWARE ENG, V20, P684, DOI 10.1109/32.317428
   MILLS HD, 1983, STAT VALIDATION COMP, P71
   MORELL LJ, 1984, THESIS U MARYLAND
   Offutt A. J., 1996, SIGSOFT Software Engineering Notes, V21, P195, DOI [10.1145/229000.226317, 10.1145/226295.226317]
   Offutt A. J., 1999, Proceedings Fifth IEEE International Conference on Engineering of Complex Computer Systems (ICECCS'99) (Cat. No.PR00434), P119, DOI 10.1109/ICECCS.1999.802856
   Offutt A. J., 1996, Technical Report ISSE-TR-96-01
   REED IS, 1973, SIAM J APPL MATH, V24, P134, DOI 10.1137/0124014
   RICHARDSON DJ, 1993, IEEE T SOFTWARE ENG, V19, P533, DOI 10.1109/32.232020
   Tai KC, 1996, IEEE T SOFTWARE ENG, V22, P552, DOI 10.1109/32.536956
   Tsuchiya T, 2002, ACM T SOFTW ENG METH, V11, P58, DOI 10.1145/504087.504089
   WEYUKER E, 1994, IEEE T SOFTWARE ENG, V20, P353, DOI 10.1109/32.286420
   ZEIL SJ, 1989, IEEE T SOFTWARE ENG, V15, P737, DOI 10.1109/32.24727
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 26
TC 21
Z9 24
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 15
PY 2004
VL 46
IS 8
BP 525
EP 533
DI 10.1016/j.infsof.2003.10.003
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 814JJ
UT WOS:000220970700003
DA 2024-07-18
ER

PT J
AU George, B
   Williams, L
AF George, B
   Williams, L
TI A structured experiment of test-driven development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 18th ACM Symposium on Applied Computing
CY MAR 09-12, 2003
CL MELBOURNE, FL
SP ACM
DE software engineering; test driven development; extreme programming;
   agile methodologies
AB Test Driven Development (TDD) is a software development practice in which unit test cases are incrementally written prior to code implementation. We ran a set of structured experiments with 24 professional pair programmers. One group developed a small Java program using TDD while the other (control group), used a waterfall-like approach. Experimental results, subject to external validity concerns, tend to indicate that TDD programmers produce higher quality code because they passed 18% more functional black-box test cases. However, the TDD programmers took 16% more time. Statistical analysis of the results showed that a moderate statistical correlation existed between time spent and the resulting quality. Lastly, the programmers in the control group often did not write the required automated test cases after completing their code. Hence it could be perceived that waterfall-like approaches do not encourage adequate testing. This intuitive observation supports the perception that TDD has the potential for increasing the level of unit testing in the software industry. (C) 2003 Elsevier B.V. All rights reserved.
C1 Virginia Polytech Inst & State Univ, Dept Comp Sci, Falls Church, VA 22043 USA.
   N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 Virginia Polytechnic Institute & State University; North Carolina State
   University
RP Virginia Polytech Inst & State Univ, Dept Comp Sci, Falls Church, VA 22043 USA.
EM boby@vt.edu; williams@csc.ncsu.edu
CR [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], 1995, MYTHICAL MAN MONTH
   [Anonymous], 1963, EXPT QUASIEXPERIMENT
   [Anonymous], 2002, THESIS N CAROLINA ST
   Beck K, 2001, IEEE SOFTWARE, V18, P87, DOI 10.1109/52.951502
   Beck K., 2000, EXTREME PROGRAMMING
   Beck Kent L., 2003, Test Driven Development By Example
   CHAPLIN D, 2001, TEST 1 PROGRAMMING
   CORBI TA, 1989, IBM SYST J, V28, P294, DOI 10.1147/sj.282.0294
   CORNETT S, 2002, CODE COVERAGE ANAL B
   FOOTE B, 1997, 4 C PATT LANG PROGR
   GELPERIN D, 1987, 4 INT C SOFTW TEST W
   Hamlet Dick., 2001, The Engineering of Software
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   MAXIMILIEN E, 2003, INT C SOFTW ENG PORT
   MULLER MM, 2002, SOFTWARE ENG EASE 02
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   ROYCE WW, 1970, IEEE WESTCON
   VANDEURSEN A, 2001, SENR0110 CWI
   VANDEURSEN A, 2001, XP 2001
   WILLIAMS L, 2003, IEEE INT S SOFTW REL
   Williams L, 2000, COLLABORATIVE SOFTWA
NR 24
TC 90
Z9 101
U1 13
U2 50
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 15
PY 2004
VL 46
IS 5
BP 337
EP 342
DI 10.1016/j.infsof.2003.09.011
PG 6
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 778FU
UT WOS:000189229500010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Weyuker, EJ
AF Weyuker, EJ
TI How to judge testing progress
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 18th ACM Symposium on Applied Computing
CY MAR 09-12, 2003
CL MELBOURNE, FL
SP ACM
DE operational distribution; software testing; test data adequacy; test
   progress
ID SOFTWARE
AB It is usual to base the assessment of software testing progress on a coverage measure such as code coverage or specification coverage, or on the percentage of the input domain exercised. In this paper it is argued that these characteristics do not provide good indications of the degree to which the software has been tested. Instead we propose that the assessment of testing progress be based on the total percentage of the probability mass that corresponds to the test cases selected and run. To do this, it is necessary to collect data that profiles how the software will be used once it is operational in the field. By so doing, we are able to accurately determine how much testing has been done, and whether it has met the standards of completeness for the product under consideration. (C) 2003 Elsevier B.V. All rights reserved.
C1 AT&T Labs Res, Florham Pk, NJ 07932 USA.
C3 AT&T
RP Weyuker, EJ (corresponding author), AT&T Labs Res, 180 Pk Ave,Room C213, Florham Pk, NJ 07932 USA.
EM weyuker@research.att.com
CR AVRITZER A, 1995, IEEE T SOFTWARE ENG, V21, P705, DOI 10.1109/32.464549
   Avritzer A, 1996, IEEE SOFTWARE, V13, P76, DOI 10.1109/52.536461
   AVRITZER A, 1996, SOFTWARE PRACTICE EX, V26
   AVRITZER A, 2002, P ACM 3 INT WORKSH S
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   Weyuker E. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P87, DOI 10.1145/227607.227608
   Weyuker EJ, 2000, IEEE T SOFTWARE ENG, V26, P1147, DOI 10.1109/32.888628
   Weyuker EJ, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P152, DOI 10.1109/METRIC.2002.1011334
   WEYUKER EJ, 1998, P ACM WORKSH SOFTW P, P80
   Whittaker J. A., 1993, ACM Transactions on Software Engineering and Methodology, V2, P93, DOI 10.1145/151299.151326
NR 10
TC 2
Z9 3
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 15
PY 2004
VL 46
IS 5
BP 323
EP 328
DI 10.1016/j.infsof.2003.09.008
PG 6
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 778FU
UT WOS:000189229500008
DA 2024-07-18
ER

PT J
AU Lim, J
AF Lim, J
TI A conceptual framework on the adoption of negotiation support systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE negotiation support systems; adoption intention; Technology Acceptance
   Model; Theory of Planned Behavior; framework
ID INFORMATION TECHNOLOGY; PERCEIVED USEFULNESS; PLANNED BEHAVIOR; USER
   INVOLVEMENT; USAGE; ORGANIZATIONS; ACCEPTANCE; ATTITUDES; IMPACT; MODEL
AB An exploratory study was conducted to identify factors affecting the intention to adopt negotiation support systems (NSS) by managers and executives. Drawing from past literature, the Theory of Planned Behavior and the Technology Acceptance Model provided basis for analyzing our results. overall, subjective norm and perceived behavioral control emerged as strongest determinants of intention to adopt NSS. Further probing of subjective norm revealed organizational culture and industrial characteristics to play significant roles. A new conceptual framework is proposed which would be of both theoretical and practical importance. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Natl Univ Singapore, Sch Comp, Singapore 119260, Singapore.
C3 National University of Singapore
RP Lim, J (corresponding author), Natl Univ Singapore, Sch Comp, Singapore 119260, Singapore.
CR ADAMS DA, 1992, MIS QUART, V16, P227, DOI 10.2307/249577
   Ajzen I, 2002, J APPL SOC PSYCHOL, V32, P665, DOI 10.1111/j.1559-1816.2002.tb00236.x
   AJZEN I, 1991, ORGAN BEHAV HUM DEC, V50, P179, DOI 10.1016/0749-5978(91)90020-T
   ANSON RG, 1990, EUR J OPER RES, V46, P181, DOI 10.1016/0377-2217(90)90131-T
   BAGOZZI RP, 1982, J MARKETING RES, V19, P562, DOI 10.2307/3151727
   BARKI H, 1989, MIS QUART, V13, P53, DOI 10.2307/248700
   BARONAS AMK, 1988, MIS QUART, V12, P111, DOI 10.2307/248811
   BAROUDI JJ, 1986, COMMUN ACM, V29, P232, DOI 10.1145/5666.5669
   Barrett S, 1982, MIS QUART, V6, P93, DOI 10.2307/248993
   Baskerville RF, 2003, ACCOUNT ORG SOC, V28, P1, DOI 10.1016/S0361-3682(01)00048-4
   Bazerman M.H., 1983, Negotiating in Organizations, P51
   BAZERMAN MH, 1985, ORGAN BEHAV HUM DEC, V35, P294, DOI 10.1016/0749-5978(85)90026-3
   BEATH CM, 1991, MIS QUART, V15, P355, DOI 10.2307/249647
   BUI T, 1996, P 29 ANN HAW INT C S, V4, P209
   BUI T, 1992, P 25 ANN HAW INT C S, V4
   BUI T, 1992, P 25 ANN HAW INT C S, V4, P152
   CARMEL E, 1989, P INT C INF SYST 198
   CASH JI, 1985, INFORMATION SOC, V3, P134
   Chau P. T. K., 1996, Journal of Management Information Systems, V13, P185
   Christie B., 1981, Face to File Communication: A Psychological Approach to Information Systems
   DAFT RL, 1984, ACAD MANAGE REV, V9, P284, DOI 10.2307/258441
   Davis F. D., 1985, A technology acceptance model for empirically testing new end-user information systems: Theory and results, DOI DOI 10.1016/S0378-7206(01)00143-4
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   DELANEY MM, 1997, DECIS SUPPORT SYST, V20, P85
   Eagly AH, 1993, PSYCHOL ATTITUDES
   FAZIO RH, 1978, J EXP SOC PSYCHOL, V14, P398, DOI 10.1016/0022-1031(78)90035-5
   FERGUSON DM, 1998, EDI FORUM, P21
   Fishbein M., 1980, UNDERSTANDING ATTITU
   Foroughi A, 1995, GROUP DECIS NEGOT, V4, P485, DOI 10.1007/BF01409712
   FOROUGHI A, 1990, 23RD P HAW INT C SYS, V4, P2
   Griffin R. K., 1994, Journal of Management Information Systems, V10, P111
   Grover V., 1993, Journal of Management Information Systems, V10, P141
   HARDWICK J, 1994, MANAGE SCI, V40, P440
   HARRISON DA, 1997, INFORMATION SYSTEMS, V8
   Hélou C, 2002, INFORM SOFTWARE TECH, V44, P313, DOI 10.1016/S0950-5849(01)00215-4
   Hendrickson AR, 1996, DATA BASE ADV INF SY, V27, P61
   HOFSTEDE G, 1985, J MANAGE STUD, V22, P347, DOI 10.1111/j.1467-6486.1985.tb00001.x
   Hofstede G., 1980, CULTURAL CONSEQUENCE
   JARKE M, 1987, EUR J OPER RES, V31, P314, DOI 10.1016/0377-2217(87)90041-5
   Jelassi M. T., 1989, Decision Support Systems, V5, P167, DOI 10.1016/0167-9236(89)90005-5
   JONES BH, 1988, THESIS INDIANA U BLO
   Kersten G. E., 1994, Proceedings of the Twenty-Seventh Hawaii International Conference on System Sciences. Vol.IV: Information Systems: Collaboration Technology Organizational Systems and Technology (Cat. No.94TH0607-2), P258, DOI 10.1109/HICSS.1994.323489
   KERSTEN GE, 1986, EUR J OPER RES, V26, P142, DOI 10.1016/0377-2217(86)90166-9
   KERSTEN GE, 1985, INFORMATION MANAGEME, V8, P246
   Legris P, 2003, INFORM MANAGE-AMSTER, V40, P191, DOI 10.1016/S0378-7206(01)00143-4
   LEIFER R, 1988, MIS QUART, V12, P63, DOI 10.2307/248805
   Lim JLH, 1999, INFORM SOFTWARE TECH, V41, P249, DOI 10.1016/S0950-5849(99)00006-3
   Lim K., 1993, Journal of Management Information Systems, V9, P27
   Mathieson K, 1991, INFORM SYST RES, V2, P173, DOI 10.1287/isre.2.3.173
   MATWIN S, 1991, IEEE T SYST MAN CYB, V21, P1
   MILLS PK, 1986, J MANAGE, V12, P91, DOI 10.1177/014920638601200108
   Pijpers GGM, 2001, INFORM SOFTWARE TECH, V43, P959, DOI 10.1016/S0950-5849(01)00197-5
   Premkumar G, 1995, DECISION SCI, V26, P303, DOI 10.1111/j.1540-5915.1995.tb01431.x
   PROVAN KG, 1980, ADMIN SCI QUART, V25, P200, DOI 10.2307/2392452
   Raghunathan S, 2001, INFORM SYST RES, V12, P406, DOI 10.1287/isre.12.4.406.9701
   REGAN DT, 1977, J EXP SOC PSYCHOL, V13, P28, DOI 10.1016/0022-1031(77)90011-7
   Reich BH, 1990, INFORM SYST RES, V1, P325, DOI 10.1287/isre.1.3.325
   SENGUPTA K, 1993, P 26 ANN HAW INT C S, V4
   SHAKUN MF, 1993, P 26 ANN HAW INT C S
   SWANSON EB, 1982, OMEGA-INT J MANAGE S, V10, P157, DOI 10.1016/0305-0483(82)90050-0
   SYCARA KP, 1991, MANAGE SCI, V37, P1248, DOI 10.1287/mnsc.37.10.1248
   Szajna B, 1996, MANAGE SCI, V42, P85, DOI 10.1287/mnsc.42.1.85
   TAYLOR S, 1995, INFORM SYST RES, V6, P144, DOI 10.1287/isre.6.2.144
   *UNISYS CORP, 1987, COMP ASS NEG AM AC A
   YEN J, 1996, P 29 ANN HAW INT C S, V4, P219
NR 65
TC 39
Z9 47
U1 0
U2 10
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 1
PY 2003
VL 45
IS 8
BP 469
EP 477
DI 10.1016/S0950-5849(03)00027-2
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 686WL
UT WOS:000183343900002
DA 2024-07-18
ER

PT J
AU Ren, H
   Li, YH
   Chen, L
   Zhou, YM
   Nie, CH
AF Ren, Hao
   Li, Yanhui
   Chen, Lin
   Zhou, Yuming
   Nie, Changhai
TI Why and how bug blocking relations are breakable: An empirical study on
   breakable blocking bugs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Breakable blocking bugs; Blocking relations; Empirical study
ID PREDICTION
AB Context: Blocking bugs prevents other bugs from being fixed, which is difficult to repair and negatively impacts software quality. During software maintenance, developers usually try to break the blocking relationship between blocking and blocked bugs, e.g., propose a temporary fix. Object: However, to our knowledge, no studies have investigated why and how blocking relations between bugs are breakable. In this study, we aim to construct an empirical analysis to explore breakable blocking bugs (BBBs). Method: Specifically, we employ quantitative and qualitative analysis to study these BBBs from two aspects. One is to investigate the characteristics of these bugs, and the other is to explore why and how developers break the blocking relationship between bugs during software maintenance. We build a dataset on five large-scale open-source projects and classify bugs into three types (BBBs, normal blocking bugs, and other bugs) to compare the differences between BBBs and other types of bugs. Results: We observe that BBBs have higher levels of involvement, take longer to fix, and involve more complex source code than other bugs. Moreover, we summarize four reasons blocking relationships between bugs are broken, i.e., partial association (41.87%), serious influence (26.40%), time pressure (19.73%), and flawed blocking (12.21%), and three measures developers adopt to break these blocking relationships, i.e., quick patch for blocking bugs (41.33%), quick patch for blocked bugs (38.67%), and ignore the blocking relation and fix blocked bugs directly (20.00%). Conclusion: Through these analyses, it is meaningful for software maintainers to have a deeper understanding of the characteristics and repair practices of BBBs, which will help solve these BBBs effectively in the future.
C1 [Ren, Hao; Li, Yanhui; Chen, Lin; Zhou, Yuming; Nie, Changhai] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
   [Ren, Hao; Li, Yanhui; Chen, Lin; Zhou, Yuming; Nie, Changhai] Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210023, Peoples R China.
C3 Nanjing University; Nanjing University
RP Li, YH (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
EM yanhuili@nju.edu.cn
OI Li, Yanhui/0000-0003-2282-7175; Ren, Hao/0000-0002-0981-2852
FU National Natural Science Foundation of China [62172202, 62272221,
   62172205, 61972082, 62162004, U21A20474]
FX We thank the anonymous reviewers for their time and invaluable feedback
   to improve our study. This work is supported by the National Natural
   Science Foundation of China (Grant No. 62172202, 62272221, 62172205,
   61972082, 62162004, and U21A20474) .
CR AlOmar EmanAbdullah., 2020, P IEEEACM 42 INT C S, P342, DOI [10.1145/3387940, DOI 10.1145/3387940]
   Aung TWW, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111133
   Azuma H, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10081-7
   Bao LF, 2022, PROC INT CONF SOFTW, P2352, DOI 10.1145/3510003.3510113
   Boslaugh S., 2008, Statistics in a nutshell-a desktop quick reference
   Brown Selasie Aformaley, 2021, 2021 International Conference on Cyber Security and Internet of Things (ICSIoT), P22, DOI 10.1109/ICSIoT55070.2021.00013
   Cai Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P255, DOI 10.1145/3468264.3468549
   Cassee N, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10183-w
   Chen AR, 2022, IEEE T SOFTWARE ENG, V48, P2905, DOI 10.1109/TSE.2021.3071473
   Chen L, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3356579
   Chen Zhihua, 2022, 2022 9th International Conference on Dependable Systems and Their Applications (DSA), P335, DOI 10.1109/DSA56465.2022.00052
   Chen ZP, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1122, DOI 10.1145/3540250.3549093
   Cheng XY, 2020, P INT COMP SOFTW APP, P902, DOI 10.1109/COMPSAC48688.2020.0-152
   Cooper N, 2021, PROC INT CONF SOFTW, P957, DOI 10.1109/ICSE43902.2021.00091
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Ding H, 2018, P INT COMP SOFTW APP, P219, DOI 10.1109/COMPSAC.2018.00035
   Etemadi V, 2021, J SYST SOFTWARE, V178, DOI 10.1016/j.jss.2021.110967
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   Fejzer M, 2021, IEEE T SOFTWARE ENG, V48, P2557, DOI 10.1109/TSE.2021.3064447
   Ge XT, 2022, INFORM SOFTWARE TECH, V147, DOI 10.1016/j.infsof.2022.106899
   Guo ZQ, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447247
   Han JX, 2023, AUTOMAT SOFTW ENG, V30, DOI 10.1007/s10515-023-00379-9
   Herbold S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10083-5
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Lee J, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556898
   Liu XY, 2022, PROC INT CONF SOFTW, P225, DOI 10.1145/3510003.3510093
   Liu YB, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P232, DOI 10.1109/SANER.2018.8330212
   Ma XX, 2022, INFORM SOFTWARE TECH, V147, DOI 10.1016/j.infsof.2022.106906
   Malgaonkar S, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106798
   Meng XX, 2022, PROC INT CONF SOFTW, P1169, DOI 10.1145/3510003.3510147
   Muse BA, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10119-4
   Nadim M, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-022-00326-0
   Nizamani ZA, 2018, AUTOMAT SOFTW ENG, V25, P347, DOI 10.1007/s10515-017-0229-y
   OBrien D, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P734, DOI 10.1145/3540250.3549088
   Petrulio F, 2022, Arxiv, DOI [arXiv:2209.03311, 10.48550/ARXIV.2209.03311, DOI 10.48550/ARXIV.2209.03311]
   Phaithoon S, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1257, DOI 10.1109/ASE51524.2021.9678680
   Quach S, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09970-8
   Rahmani K, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P32, DOI 10.1145/3453483.3454028
   Raulamo-Jurvanen P, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P57, DOI 10.1145/3319008.3319018
   Ren H, 2020, INT C PROGRAM COMPRE, P72, DOI 10.1145/3387904.3389267
   Rodríguez-Pérez G, 2022, IEEE T SOFTWARE ENG, V48, P1400, DOI 10.1109/TSE.2020.3021380
   Sharma R, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-022-00358-6
   Shen QC, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P968, DOI 10.1145/3468264.3468591
   Tagra A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10133-6
   Valdivia-Garcia H, 2018, J SYST SOFTWARE, V143, P44, DOI 10.1016/j.jss.2018.03.053
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Vieira SM, 2010, IEEE INT CONF FUZZY, DOI 10.1109/FUZZY.2010.5584447
   Wang CQ, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110667
   Wang JJ, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3487571
   Watson PF, 2010, THERIOGENOLOGY, V73, P1167, DOI 10.1016/j.theriogenology.2010.01.003
   Winter E, 2023, IEEE T SOFTWARE ENG, V49, P1823, DOI 10.1109/TSE.2022.3194188
   Wu XX, 2021, IEEE T SOFTWARE ENG, V48, P2541, DOI 10.1109/TSE.2021.3063727
   Wu XX, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2021.106530
   Xia X, 2015, INFORM SOFTWARE TECH, V61, P93, DOI 10.1016/j.infsof.2014.12.006
   Xiao T, 2022, IEEE T SOFTWARE ENG, V48, P4214, DOI 10.1109/TSE.2021.3115772
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yang YB, 2015, IEEE T SOFTWARE ENG, V41, P331, DOI 10.1109/TSE.2014.2370048
   Zhao GL, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3440757
   Zhou YM, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2556777
NR 59
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2024
VL 166
AR 107354
DI 10.1016/j.infsof.2023.107354
EA NOV 2023
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AW9F4
UT WOS:001121597300001
DA 2024-07-18
ER

PT J
AU Jiang, YC
   Benatallah, B
   Báez, M
AF Jiang, Yuchao
   Benatallah, Boualem
   Baez, Marcos
TI Understanding how early-stage researchers leverage socio-technical
   affordances for distributed research
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Crowdsourcing; Empirical study; Research skills development;
   Socio-technical systems
ID SOCIAL MEDIA; COMMUNICATION; PARTICIPATION; THINKING
AB Early-stage researchers (ESRs) are often challenged to learn research skills with sufficient support from a small circle of advisors and colleagues. Meanwhile, emerging socio-technical systems (STSs) are now available for social interactions among the general public and people in particular interest topics, such as research. However, how STSs can effectively support ESRs in developing research skills is not yet well understood. In this paper, we report on a series of interviews and surveys with ESRs. We found that online research communities held the potentials for ESRs to learn from diverse perspectives and experience. But the adoption of research communities for learning was still limited. We identified unmet needs in the design of these systems limiting the adoption. We then provide design implications for future STSs to support learning research skills with socio-technical affordances.
C1 [Jiang, Yuchao; Benatallah, Boualem] Univ New South Wales, Sydney, NSW, Australia.
   [Benatallah, Boualem] Dublin City Univ, Dublin, Ireland.
   [Baez, Marcos] Bielefeld Univ Appl Sci, Bielefeld, Germany.
C3 University of New South Wales Sydney; Dublin City University; Bielefeld
   University of Applied Sciences
RP Jiang, YC (corresponding author), Univ New South Wales, Sydney, NSW, Australia.
EM yuchao.jiang@unsw.edu.au; boualem.benatallah@dcu.ie; marcos.baez@hsbi.de
RI Baez, Marcos/T-4656-2017
OI Baez, Marcos/0000-0003-1666-2474
CR Abdalkareem R, 2017, IEEE SOFTWARE, V34, P53, DOI 10.1109/MS.2017.31
   ADLER PA, 1995, CONTEMP SOCIOL, V24, P420, DOI 10.2307/2076552
   Al-Rahmi AM, 2021, SUSTAINABILITY-BASEL, V13, DOI 10.3390/su13147770
   Al-Yahmady H. H., 2013, INT INTERDISCIPLINAR, V2, P181, DOI [DOI 10.12816/0002914, https://doi.org/10.12816/0002914]
   [Anonymous], 2016, NVivo qualitative data analysis software, Version 11
   [Anonymous], 2013, P SIGCHI C HUMAN FAC, DOI [10.1145/2470654.2470686, DOI 10.1145/2470654.2470686]
   [Anonymous], 2014, Proceedings of the conference on computer supported cooperative work social computing
   [Anonymous], 2011, Researcher Development Framework
   Ardichvili A, 2008, ADV DEV HUM RESOUR, V10, P541, DOI 10.1177/1523422308319536
   Baez M, 2010, IEEE INTERNET COMPUT, V14, P31, DOI 10.1109/MIC.2010.107
   Braun V, 2013, Success Qual Res, V1st
   Burgelman JC, 2019, FRONT BIG DATA, V2, DOI 10.3389/fdata.2019.00043
   Campbell JA, 2016, ACM CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW 2016), P691, DOI 10.1145/2818048.2819934
   Cavusoglu H., 2015, P ACM C COMPUTER SUP, V2015, P171, DOI DOI 10.1145/2685553.2698999
   Chen Y, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P6220, DOI 10.1145/3025453.3025972
   Cheng Ruijia., 2020, Proceedings of the ACM on Human-Computer Interaction, V4, P1
   Choi Erik, 2014, First Monday, V19, P94, DOI 10.5210/fm.v19i3.4830
   Cummings C, 2022, J EDUC BUS, V97, P126, DOI 10.1080/08832323.2021.1887795
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Daniel F, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3148148
   Dawson P, 2014, EDUC RESEARCHER, V43, P137, DOI 10.3102/0013189X14528751
   Donlon Enda, 2016, The Power of the Crowd: Promise and Potential of Crowdsourcing for Education
   Dow S., 2012, P ACM 2012 C COMP SU, P1013, DOI [10.1145/2145204.2145355, DOI 10.1145/2145204.2145355]
   Evans S, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P259, DOI 10.1145/2998181.2998342
   Ferreira VG, 2020, PROC FRONT EDUC CONF
   Fischer E, 2011, J BUS VENTURING, V26, P1, DOI 10.1016/j.jbusvent.2010.09.002
   Ford D, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174182
   Ford D, 2017, S VIS LANG HUM CEN C, P239, DOI 10.1109/VLHCC.2017.8103473
   Gafney L., 2005, J COLL SCI TEACH, V34, P52
   Gasparyan AY, 2015, J KOREAN MED SCI, V30, P360, DOI 10.3346/jkms.2015.30.4.360
   Gu F, 2011, ELECTRON LIBR, V29, P762, DOI 10.1108/02640471111187999
   Harburg E, 2018, ACM T COMPUT-HUM INT, V25, DOI 10.1145/3241043
   Herrmann T., 2004, Cooperative Systems Design, Scenario Based Design of Collaborative Systems, P163
   Hinckley Ken, 2015, MobileHCI
   Hui JL, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376363
   Hui Julie, 2015, P AAAI C HUM COMP CR, V3
   Hui JS, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173596
   Hui JS, 2019, HUM-COMPUT INTER-US, V34, P328, DOI 10.1080/07370024.2018.1469409
   Jeng W, 2017, J ASSOC INF SCI TECH, V68, P638, DOI 10.1002/asi.23692
   Jiang Yuchao, 2023, Intelligent Information Systems: CAiSE Forum 2023, Proceedings. Lecture Notes in Business Information Processing (477), P61, DOI 10.1007/978-3-031-34674-3_8
   Jiang Yuchao, 2021, Scaling research support for early-stage researchers with crowdsourcing
   Jiang Yuchao, 2018, ARXIV PREPRINT ARXIV
   Jones Ridley, 2019, CHI '19: Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems, DOI 10.1145/3290605.3300383
   Joshi N, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376230
   Kim J, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P233, DOI 10.1145/2998181.2998196
   Kim J, 2016, ACM CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW 2016), P1018, DOI 10.1145/2818048.2820072
   Krause M, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P4627
   Law E, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P1544, DOI 10.1145/2998181.2998197
   Lebeuf C, 2017, Arxiv, DOI arXiv:1702.07011
   Lintott CJ, 2008, MON NOT R ASTRON SOC, V389, P1179, DOI 10.1111/j.1365-2966.2008.13689.x
   Luther K, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P473, DOI 10.1145/2675133.2675283
   Luther Kurt, 2014, Proceedings_of_the_companion_publication_of_the_17th_ACM_conference_on_Computer supported_cooperative_work__social_computing, P21, DOI 10
   McLoughlin Catherine, 2007, P ASC SING
   Meishar-Tal H, 2017, INT REV RES OPEN DIS, V18, P1
   Molnar A, 2019, J BEHAV EXP FINANC, V22, P161, DOI 10.1016/j.jbef.2019.03.005
   Motahar T, 2020, CHI'20: EXTENDED ABSTRACTS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3334480.3383094
   Ngoon TJ, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173629
   Nguyen DT, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P1024, DOI 10.1145/2998181.2998319
   Nolte Alexander, 2020, Proceedings of the ACM on Human-Computer Interaction, V4, DOI 10.1145/3392830
   Panahi S, 2013, J KNOWL MANAG, V17, P379, DOI 10.1108/JKM-11-2012-0364
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Price D.C., 2002, Mentoring and Tutoring, V10, P127
   Saunders B, 2018, QUAL QUANT, V52, P1893, DOI 10.1007/s11135-017-0574-8
   Sharples M., 2016, INNOVATING PEDAGOGY
   Silva JO, 2020, J SYST SOFTWARE, V162, DOI 10.1016/j.jss.2019.110487
   Speily ORB, 2020, LECT NOTES SOC NETW, P269, DOI 10.1007/978-3-030-29973-6_8
   Stahl G, 2014, CAMBRIDGE HANDBOOK OF THE LEARNING SCIENCES, 2ND EDITION, P479
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Sugimoto CR, 2017, J ASSOC INF SCI TECH, V68, P2037, DOI 10.1002/asi.23833
   Tashakkori A., 2021, FDN MIXED METHODS RE, DOI DOI 10.4135/9781483348858.N9
   Torrey C, 2007, ECSCW 2007: PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK, P391, DOI 10.1007/978-1-84800-031-5_21
   Trainer EH, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING TRACK (ICSE-SEET 2017), P107, DOI 10.1109/ICSE-SEET.2017.19
   Uddin G, 2021, IEEE T SOFTWARE ENG, V47, P694, DOI 10.1109/TSE.2019.2903039
   Vaish R, 2017, UIST'17: PROCEEDINGS OF THE 30TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P829, DOI 10.1145/3126594.3126648
   Van Noorden R, 2014, NATURE, V512, P126, DOI 10.1038/512126a
   Veletsianos G, 2012, J COMPUT ASSIST LEAR, V28, P336, DOI 10.1111/j.1365-2729.2011.00449.x
   Wang T., 2011, Active Learning in Higher Education, V12, P101, DOI [10.1177/1469787411402438, DOI 10.1177/1469787411402438]
   Wauck H, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P5580, DOI 10.1145/3025453.3025477
   Worrall Adam, 2018, P ANN C CAIS ACT C A
   Xu A., 2014, P 17 ACM C COMP SUPP, DOI [10.1145/2531602.2531604, DOI 10.1145/2531602, https://doi.org/10.1145/2531602.2531604, DOI 10.1145/2531602.2531604]
   Yang S, 2021, IEEE T SYST MAN CY-S, V51, P3739, DOI 10.1109/TSMC.2019.2931046
   Yen YCG, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376380
   Yen YCG, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON CREATIVITY AND COGNITION (C&C 2017), P158, DOI 10.1145/3059454.3059468
   Yuan A, 2016, ACM CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW 2016), P1005, DOI 10.1145/2818048.2819953
   Yue Yin, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274462
   Zhang HQ, 2017, CSCW'17: COMPANION OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P45, DOI 10.1145/3022198.3023265
NR 86
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2024
VL 165
AR 107340
DI 10.1016/j.infsof.2023.107340
EA OCT 2023
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Y0CA7
UT WOS:001102023600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Ouriques, R
   Fagerholm, F
   Mendez, D
   Bern, BG
AF Ouriques, Raquel
   Fagerholm, Fabian
   Mendez, Daniel
   Bern, Baldvin Gislason
TI An investigation of causes and effects of trust in Boundary Artefacts
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software development; Boundary Artefact; Trust; Trusting beliefs
ID OBJECTS; INFORMATION; KNOWLEDGE; IMPLEMENTATION; COMMUNITIES;
   TECHNOLOGY; SOFTWARE
AB Context: Boundary Artefacts (BAs) support software development activities in many aspects because it carries lots of information in the same object that can be used and interpreted by several social groups within an organisation. When the BAs are inconsistent regarding their content, such as many meanings or lack of contextual information, their efficiency is reduced because stakeholders will not trust them. Objective: This study aimed to understand the implications of differences in the perception of trust on software projects and their influence on stakeholders' behaviour. Methods: We conducted an exploratory case study to observe the creation and utilisation of one specific BA and the implications of differences in trust and their influence on stakeholders' behaviour. Results : Our investigation has shown that practitioners adding and adjusting existing content do not entirely understand the stakeholders' needs. Together with the partial management of the content, trust is impacted. When the content of BAs does not meet the trust factors, specifically reliability and predictability, the stakeholders cannot execute their tasks appropriately, and several implications affect the software development project. Additionally, they create workarounds to supply their needs. Conclusion: The differences in trust in BAs affect software projects in different areas of the organisation and interfere with the task execution of various stakeholders. The decrease in trust results from inconsistencies in the content associated with the lack of management of the BA. A structured strategy for representing and managing a BA's content seems appropriate to increase trust levels and efficiency.
C1 [Ouriques, Raquel; Fagerholm, Fabian; Mendez, Daniel] Blekinge Inst Technol, S-37179 Karlskrona, Sweden.
   [Fagerholm, Fabian] Aalto Univ, Espoo 00076, Finland.
   [Mendez, Daniel] Fortiss, D-80805 Munich, Germany.
   [Bern, Baldvin Gislason] Axis Commun, S-22369 Lund, Sweden.
C3 Blekinge Institute Technology; Aalto University; fortiss
RP Ouriques, R (corresponding author), Blekinge Inst Technol, S-37179 Karlskrona, Sweden.
EM raquel.ouriques@bth.se
RI Mendez, Daniel/ABA-4579-2021; Fagerholm, Fabian/B-1952-2015
OI Mendez, Daniel/0000-0003-0619-6027; Fagerholm,
   Fabian/0000-0002-7298-3021; Ouriques, Raquel/0000-0003-2679-0517
FU KKS foundation through the S.E.R.T. Research Profile project at Blekinge
   Institute of Technology
FX We want to thank all practitioners at Axis who participated and
   contributed to this study. We would also like to acknowledge that this
   work was supported by the KKS foundation through the S.E.R.T. Research
   Profile project at Blekinge Institute of Technology.
CR Akoumianakis D, 2011, INTELL DECIS TECHNOL, V5, P65, DOI 10.3233/IDT-2011-0098
   Allmark P., 2009, Research Ethics, V5, P48, DOI [10.1177/174701610900500203, DOI 10.1177/174701610900500203]
   Bechky B.A., 1999, CROSSING OCCUPATIONA
   Blomkvist JK, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P1875, DOI 10.1145/2702123.2702366
   Briers M, 2001, ACCOUNT ORG SOC, V26, P237, DOI 10.1016/S0361-3682(00)00029-5
   Carlile PR, 2004, ORGAN SCI, V15, P555, DOI 10.1287/orsc.1040.0094
   Fernández DM, 2019, SOFTW SYST MODEL, V18, P2777, DOI 10.1007/s10270-019-00714-3
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Gustavsson Tomas, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P306, DOI 10.1145/3383219.3383253
   HENDERSON K, 1991, SCI TECHNOL HUM VAL, V16, P448, DOI 10.1177/016224399101600402
   Huber TL, 2020, INFORM SYST J, V30, P270, DOI 10.1111/isj.12261
   HUTCHINS E, 1991, PERSPECTIVES ON SOCIALLY SHARED COGNITION, P283, DOI 10.1037/10096-012
   Kern E.-M., 2007, J ENTERP INF MANAG
   Koelmann Holger, 2020, HCI for Cybersecurity, Privacy and Trust. Second International Conference, HCI-CPT 2020 Held as Part of the 22nd HCI International Conference, HCII 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12210), P445, DOI 10.1007/978-3-030-50309-3_29
   Lansing J, 2016, DATA BASE ADV INF SY, V47, P58, DOI 10.1145/2963175.2963179
   Lee Charlotte P., 2007, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V16, P307, DOI 10.1007/s10606-007-9044-5
   Levina N, 2006, J MANAGE INFORM SYST, V22, P13, DOI 10.2753/MIS0742-1222220402
   Levina N, 2005, MIS QUART, V29, P335
   Luttikhuis EJO, 2015, PROC CIRP, V29, P573, DOI 10.1016/j.procir.2015.02.049
   Marakas GM, 2000, INT J HUM-COMPUT ST, V52, P719, DOI 10.1006/ijhc.1999.0348
   Mcknight DH, 1998, ACAD MANAGE REV, V23, P473, DOI 10.5465/AMR.1998.926622
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   O'Raghallaigh P, 2020, J DECIS SYST, V29, P270, DOI 10.1080/12460125.2020.1848342
   Ouriques R, 2023, J SYST SOFTWARE, V197, DOI 10.1016/j.jss.2022.111572
   Paravastu N, 2014, DATA BASE ADV INF SY, V45, P30, DOI 10.1145/2691517.2691520
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sapsed J, 2004, ORGAN STUD, V25, P1515, DOI 10.1177/0170840604047998
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Star S. L., 1989, DISTRIBUTED ARTIFICI, P37, DOI DOI 10.1016/B978-1-55860-092-8.50006-X
   STAR SL, 1989, SOC STUD SCI, V19, P387, DOI 10.1177/030631289019003001
   Star SL, 2010, SCI TECHNOL HUM VAL, V35, P601, DOI 10.1177/0162243910377624
   Subrahmanian E., 2003, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V12, P185, DOI 10.1023/A:1023976111188
   Swedish Research Council, 2017, GOOD RES PRACT, P86
   Thatcher JB, 2011, IEEE T ENG MANAGE, V58, P56, DOI 10.1109/TEM.2009.2028320
   Vidotto G, 2012, PSICOLOGICA, V33, P575
   Whitson JR, 2018, NEW MEDIA SOC, V20, P2315, DOI 10.1177/1461444817715020
   Wohlrab R, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2166
   Zaitsev A., 2014, BOUNDARY OBJECTS CHA
NR 38
TC 0
Z9 0
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2023
VL 158
AR 107170
DI 10.1016/j.infsof.2023.107170
EA FEB 2023
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9O5KZ
UT WOS:000943641800001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Cortellessa, V
   Di Pompeoa, D
   Stoico, V
   Tucci, M
AF Cortellessa, Vittorio
   Di Pompeoa, Daniele
   Stoico, Vincenzo
   Tucci, Michele
TI Many-objective optimization of non-functional attributes based on of
   software models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Multi-objective optimization; Search-based software engineering;
   Performance; Reliability; Refactoring; Model-driven engineering;
   Software architecture
ID SYSTEMS
AB Context: Software quality estimation is a challenging and time-consuming activity, and models are crucial to face the complexity of such activity on modern software applications. In this context, software refactoring is a crucial activity within development life-cycles where requirements and functionalities rapidly evolve. Objective: One main challenge is that the improvement of distinctive quality attributes may require con-trasting refactoring actions on software, as for trade-off between performance and reliability (or other non-functional attributes). In such cases, multi-objective optimization can provide the designer with a wider view on these trade-offs and, consequently, can lead to identify suitable refactoring actions that take into account independent or even competing objectives.Method: In this paper, we present an approach that exploits the NSGA-II as the genetic algorithm to search optimal Pareto frontiers for software refactoring while considering many objectives. We consider performance and reliability variations of a model alternative with respect to an initial model, the amount of performance antipatterns detected on the model alternative, and the architectural distance, which quantifies the effort to obtain a model alternative from the initial one.Results: We applied our approach on two case studies: a Train Ticket Booking Service, and CoCoME. We observed that our approach is able to improve performance (by up to 42%) while preserving or even improving the reliability (by up to 32%) of generated model alternatives. We also observed that there exists an order of preference of refactoring actions among model alternatives.Conclusion: Based on our analysis, we can state that performance antipatterns confirmed their ability to improve performance of a subject model in the context of many-objective optimization. In addition, the metric that we adopted for the architectural distance seems to be suitable for estimating the refactoring effort.
C1 [Cortellessa, Vittorio; Di Pompeoa, Daniele; Stoico, Vincenzo] Univ Aquila, Laquila, Italy.
   [Tucci, Michele] Charles Univ Prague, Prague, Czech Republic.
C3 University of L'Aquila; Charles University Prague
RP Cortellessa, V (corresponding author), Univ Aquila, Laquila, Italy.
EM vittorio.cortellessa@univaq.it; daniele.dipompeo@univaq.it;
   vincenzo.stoico@graduate.univaq.it; tucci@d3s.mff.cuni.cz
RI Tucci, Michele/IUO-7236-2023; Di Pompeo, Daniele/P-2984-2018
OI Tucci, Michele/0000-0002-0329-1101; Di Pompeo,
   Daniele/0000-0003-2041-7375; Stoico, Vincenzo/0000-0002-3681-372X;
   Cortellessa, Vittorio/0000-0002-4507-464X
FU Centre of EXcellence on Connected, Geo-Localized and Cybersecure Vehicle
   (EX-Emerge) - Italian Government under CIPE resolution [70/2017]; OP RDE
   project [CZ.02.2.69/0.0/0.0/18_053/0016976]
FX Daniele Di Pompeo is supported by the Centre of EXcellence on Connected,
   Geo-Localized and Cybersecure Vehicle (EX-Emerge), fundedby the Italian
   Government under CIPE resolution n. 70/2017(Aug. 7, 2017). Michele Tucci
   is supported by the OP RDE project No. CZ.02.2.69/0.0/0.0/18_053/0016976
   International mobility ofresearch, technical and administrative staff at
   the Charles University''.
CR Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Aleti A, 2009, MOMPES: 2009 ICSE WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, P61, DOI 10.1109/MOMPES.2009.5069138
   Ali S, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3375636
   Altamimi T., 2017, Proceedings of the 27th Annual International Conference on Computer Science and Software Engineering, CASCON '17, P120
   Altamimi T., 2016, PROC CASCON
   Ameller D, 2021, IEEE T SOFTWARE ENG, V47, P818, DOI 10.1109/TSE.2019.2904476
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2002, P 3 INT WORKSHOP SOF, DOI DOI 10.1145/584369.584415
   Arcelli D., 2018, P 2 INT WORKSHOP REF, P14, DOI DOI 10.1145/3242163
   Arcelli D, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P105, DOI 10.1109/ICSA.2018.00020
   Arcelli D, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P639, DOI [10.1109/saner.2019.8667967, 10.1109/SANER.2019.8667967]
   Arcelli D, 2018, INFORM SOFTWARE TECH, V95, P366, DOI 10.1016/j.infsof.2017.09.006
   Arcelli D, 2015, LECT NOTES COMPUT SC, V9033, P149, DOI 10.1007/978-3-662-46675-9_10
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Bavota G., 2014, Evolving Software Systems, P103, DOI [DOI 10.1007/978-3-642-45398-44, 10.1007/978-3-642-45398-44]
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Bernardi S, 2011, SOFTW SYST MODEL, V10, P313, DOI 10.1007/s10270-009-0128-1
   Cardellini V, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P131, DOI 10.1145/1595696.1595718
   Cortellessa V, 2007, LECT NOTES COMPUT SC, V4608, P140
   Cortellessa V, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P224, DOI 10.1109/SEAA53835.2021.00036
   Cortellessa V, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111084
   Cortellessa V, 2021, INFORM SOFTWARE TECH, V135, DOI 10.1016/j.infsof.2021.106568
   Cortellessa V, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106362
   Cortellessa V, 2014, SOFTW SYST MODEL, V13, P391, DOI 10.1007/s10270-012-0246-z
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Di Pompeo Daniele, 2022, 2022 48th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P406, DOI 10.1109/SEAA56994.2022.00070
   Di Pompeo D., 2019, STAF MDE DERUN WORKS, P23
   Erickson J., 2007, P 12 INT WORKSHOP EX, P81
   Etemaadi R, 2015, SCI COMPUT PROGRAM, V97, P366, DOI 10.1016/j.scico.2014.06.012
   Feiler PH., 2012, Model-based engineering with AADL: An introduction to the SAE architecture analysis design language
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Herold S, 2008, LECT NOTES COMPUT SC, V5153, P16
   Ishibuchi H, 2016, IEEE C EVOL COMPUTAT, P1107, DOI 10.1109/CEC.2016.7743912
   Kessentini M, 2012, SOFTW SYST MODEL, V11, P209, DOI 10.1007/s10270-010-0175-7
   Koziolek A., 2011, 7 INT C QUALITY SOFT
   Li C, 2017, LECT NOTES COMPUT SC, V10503, P295, DOI 10.1007/978-3-319-66335-7_18
   Li R, 2011, IEEE C EVOL COMPUTAT, P432
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P473, DOI 10.1007/s11219-015-9284-4
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   Martens A., 2010, P 1 JOINT WOSP SIPEW, P105, DOI [DOI 10.1145/1712605.1712624, 10.1145]
   Martens A, 2010, LECT NOTES COMPUT SC, V6093, P84, DOI 10.1007/978-3-642-13821-8_8
   Meedeniya I, 2010, LECT NOTES COMPUT SC, V6093, P52, DOI 10.1007/978-3-642-13821-8_6
   Menasce D.A., 2010, WOSP SIPEW 10, P27
   NEBRO AJ, 2015, P COMP PUBL 2015 ANN, P1093, DOI DOI 10.1145/2739482.2768462
   NEILSON JE, 1995, IEEE T SOFTWARE ENG, V21, P776, DOI 10.1109/32.464543
   O.M. Group, 2008, UML PROF MARTE MOD A
   Ouni A, 2017, IEEE T SERV COMPUT, V10, P603, DOI 10.1109/TSC.2015.2502595
   Ouni A, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1351, DOI 10.1145/2739480.2754724
   Rago A, 2017, XI BRAZILIAN SYMPOSIUM ON SOFTWARE COMPONENTS, ARCHITECTURES, AND REUSE (SBCARS 2017), DOI 10.1145/3132498.3132509
   Ramirez A, 2019, J SYST SOFTWARE, V149, P382, DOI 10.1016/j.jss.2018.12.015
   Ray M, 2014, INNOV SYST SOFTW ENG, V10, P261, DOI 10.1007/s11334-014-0234-2
   Rosenberg Florian, 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P97, DOI 10.1109/SCC.2010.58
   Smith C., 2001, 27 INT C COMP MEAS G, P797
   Smith C. U., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P127, DOI 10.1145/350391.350420
   Smith Connie U., 2003, 29 INT C COMP MEAS G, P717
   Smith Connie U., 2003, UML REAL DES EMB REA, P343, DOI [10.1007/0-306-48738-1\16, 10.1007/0-306-48738-116, DOI 10.1007/0-306-48738-116]
   Trendowicz A., 2013, Software Cost Estimation, Benchmarking, and Risk Assessment: The Software Decision-Makers' Guide to Predictable Software Development, DOI 10.1007/978-3-642-30764-5
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Woodside M., 2005, P 5 INT WORKSH SOFTW, P1, DOI [10.1145/1071021.1071022, 10.1145, DOI 10.1145/1071021.1071022]
   Youcong Ni, 2021, Information and Software Technology, V135, DOI 10.1016/j.infsof.2021.106565
   Zhou AM, 2006, IEEE C EVOL COMPUTAT, P892
   Zhou X, 2021, IEEE T SOFTWARE ENG, V47, P243, DOI 10.1109/TSE.2018.2887384
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 65
TC 0
Z9 0
U1 2
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2023
VL 157
AR 107159
DI 10.1016/j.infsof.2023.107159
EA FEB 2023
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8X5DV
UT WOS:000932033900001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Lima, P
   Melegati, J
   Gomes, E
   Pereira, NS
   Guerra, E
   Meirelles, P
AF Lima, Phyllipe
   Melegati, Jorge
   Gomes, Everaldo
   Pereira, Nathalya Stefhany
   Guerra, Eduardo
   Meirelles, Paulo
TI CADV: A software visualization approach for code annotations
   distribution
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code annotations; Circle packing; Empirical evaluation; Software
   visualization
AB Context: Code annotations is a widely used feature in Java systems to configure custom metadata on programming elements. Their increasing presence creates the need for approaches to assess and comprehend their usage and distribution. In this context, software visualization has been studied and researched to improve program comprehension in different aspects.Objectives: This study aimed at designing a software visualization approach that graphically displays how code annotations are distributed and organized in a software system and developing a tool, as a reference implementation of the approach, to generate views and interact with users.Methods: We conducted an empirical evaluation through questionnaires and interviews to evaluate our visualization approach considering four aspects: (i) effectiveness for program comprehension, (ii) perceived usefulness, (iv) perceived ease of use, and (iv) suitability for the intended audience. The resulting data was used to perform a qualitative and quantitative analysis.Results: The tool identifies package responsibilities providing visual information about their annotations at different levels. Using the developed tool, the participants achieved a high correctness rate in the program comprehension tasks and performed very well in questions about the overview of the system under analysis. Finally, participants perceived that the tool is suitable to visualize the distribution of code annotations.Conclusions: The results show that the visualization approach using the developed tool is effective in program comprehension tasks related to code annotations, which can also be used to identify responsibilities in the application packages. Moreover, it was evaluated as suitable for newcomers to overview the usage of annotations in the system and for architects to perform a deep analysis that can potentially detect misplaced annotations and abnormal growths on their usage.
C1 [Lima, Phyllipe] Univ Fed Itajuba, IMC, UNIFEI, Itajuba, Brazil.
   [Lima, Phyllipe] Natl Inst Space Res INPE, Sao Jose Dos Campos, Brazil.
   [Pereira, Nathalya Stefhany] Natl Inst Telecommun Inatel, Santa Rita Do Sapucai, Brazil.
   [Melegati, Jorge; Guerra, Eduardo] Free Univ Bolzano Bolzen, UniBZ, Bolzano, Italy.
   [Gomes, Everaldo; Meirelles, Paulo] Fed Univ ABC, CMCC, UFABC, Santo Andre, Brazil.
C3 Universidade Federal de Itajuba; Instituto Nacional de Pesquisas
   Espaciais (INPE); Instituto Nacional de Telecomunicacoes (INATEL);
   Universidade Federal do ABC (UFABC)
RP Lima, P (corresponding author), Univ Fed Itajuba, IMC, UNIFEI, Itajuba, Brazil.
EM phyllipe@unifei.edu.br; jorge@jmelegati.com; everaldogjr@gmail.com;
   nathalya.stefhany@gec.inatel.br; eduardo.guerra@unibz.it;
   paulo.meirelles@ufabc.edu.br
RI Meirelles, Paulo/AAC-8605-2019
OI Meirelles, Paulo/0000-0002-8923-2814; Lima, Phyllipe/0000-0002-8358-4405
FU Brazilian funding agency FAPESP (Sao Paulo Research Foundation)
   [2019/12743-4]
FX We would like to thank the support granted by Brazilian funding agency
   FAPESP (Sao Paulo Research Foundation) grant 2019/12743-4
CR Aniche M, 2018, EMPIR SOFTW ENG, V23, P2121, DOI 10.1007/s10664-017-9540-2
   Aniche M, 2016, IEEE INT WORK C SO, P41, DOI 10.1109/SCAM.2016.19
   [Anonymous], 2004, P 2004 AUSTR S INF V
   Basili Victor, 1994, ENCY SOFTW ENG, P528
   Bostock M., 2017, CIRCLE PACKING
   Bostock M, 2011, IEEE T VIS COMPUT GR, V17, P2301, DOI 10.1109/TVCG.2011.185
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Choma J., 2019, ARTIFACT SUPPORT AGI, P88, DOI DOI 10.18293/SEKE2019-146
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dagenais B., 2010, Moving into a new software project landscape, DOI DOI 10.1145/1806799.1806842
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Erra U., 2012, P 27 ANN ACM S APPL, P981
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Francese R, 2016, J VISUAL LANG COMPUT, V34-35, P11, DOI 10.1016/j.jvlc.2016.05.001
   Francese R, 2014, IEEE INT CONF INF VI, P59, DOI 10.1109/IV.2014.42
   Guerra E., 2016, P 11 LAT AM C PATT L, P1
   Guerra E., 2010, Proceedings of the 17th Conference on Pattern Languages of Programs (PLOP'10), p4:1, DOI [DOI 10.1145/2581507.2581514, 10.1145/2493288.2493292, DOI 10.1145/2493288.2493292]
   Hasselbring W, 2020, SOFTW IMPACTS, V6, DOI 10.1016/j.simpa.2020.100034
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Lanza M, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P394, DOI 10.1109/ASE.2004.1342773
   Lanza M, 2003, IEEE T SOFTWARE ENG, V29, P782, DOI 10.1109/TSE.2003.1232284
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Lima P., 2020, J Open Source Softw, V5, P1960, DOI [10.21105/joss.01960, DOI 10.21105/JOSS.01960]
   Lima Phyllipe, 2022, Zenodo, DOI 10.5281/ZENODO.6660133
   Lima P, 2018, J SYST SOFTWARE, V137, P163, DOI 10.1016/j.jss.2017.11.024
   Merino L, 2018, J SYST SOFTWARE, V144, P165, DOI 10.1016/j.jss.2018.06.027
   Merino L, 2017, PROC IEEE INT CONF S, P633, DOI 10.1109/ICSME.2017.70
   Murphy-Hill E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1, DOI 10.1145/2568225.2568226
   Rajlich V., 2014, Proceedings of the Conference on the Future of Software Engineering, P133, DOI [10.1145/2593882.2593893, DOI 10.1145/2593882.2593893]
   Romano S, 2019, INFORM SOFTWARE TECH, V114, P92, DOI 10.1016/j.infsof.2019.06.007
   SantAnna N., 2014, AN PRINC 10 S BRAS S, P125
   Stephenson K., 2005, INTRO CIRCLE PACKING
   Teixeira R, 2018, PROCEEDINGS OF THE 3RD ACM SIGPLAN INTERNATIONAL WORKSHOP ON META-PROGRAMMING TECHNIQUES AND REFLECTION (META '18), P15, DOI 10.1145/3281074.3281078
   Wen M, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110548
   Wettel R, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P92, DOI 10.1109/VISSOF.2007.4290706
   Wettel R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P551, DOI 10.1145/1985793.1985868
   Wohlin C., 2012, Experimentation in Software Engineering
   Yu ZX, 2021, IEEE T SOFTWARE ENG, V47, P969, DOI 10.1109/TSE.2019.2910516
NR 39
TC 6
Z9 6
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2023
VL 154
AR 107089
DI 10.1016/j.infsof.2022.107089
EA OCT 2022
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6D6JH
UT WOS:000882793900001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sellami, K
   Ouni, A
   Saied, MA
   Bouktif, S
   Mkaouer, MW
AF Sellami, Khaled
   Ouni, Ali
   Saied, Mohamed Aymen
   Bouktif, Salah
   Mkaouer, Mohamed Wiem
TI Improving microservices extraction using evolutionary search
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Microservices; Search-based software engineering; Legacy decomposition;
   Microservices architecture
ID SOFTWARE; ARCHITECTURES; INFORMATION; COHESION
AB Context: Microservices constitute a modern style of building software applications as collections of small, cohesive, and loosely coupled services, i.e., modules, that are developed, deployed, and scaled independently.
   Objective: The migration from legacy systems towards the microservice-based architecture is not a trivial task. It is still manual, time-consuming, error-prone and subsequently costly. The most critical and challenging issue is the cost-effective identification of microservices boundaries that ensure adequate granularity and cohesiveness.
   Method: To address this problem, we introduce in this paper a novel approach, named MSExtractor, that formulates microservices identification as a multi-objective optimization problem. The proposed solution aims at decomposing a legacy application into a set of cohesive, loosely-coupled and coarse-grained services. We employ the Indicator-Based Evolutionary Algorithm (IBEA) to drive a search process towards optimal microservices identification while considering structural and semantic dependencies in the source code.
   Results: We conduct an empirical evaluation on a benchmark of seven software systems to assess the efficiency of our approach. Results show that MSExtractor is able to carry out an effective identification of relevant microservice candidates and outperforms three other existing approaches.
   Conclusion: In this paper, we show that MSExtractor is able to extract cohesive and loosely coupled services with higher performance than three other considered methods. However, we advocate that while automated microservices identification approaches are very helpful, the role of the human experts remains crucial to validate and calibrate the extracted microservices.
C1 [Sellami, Khaled; Saied, Mohamed Aymen] Laval Univ, Quebec City, PQ, Canada.
   [Ouni, Ali] Univ Quebec, ETS Montreal, Montreal, PQ, Canada.
   [Mkaouer, Mohamed Wiem] Rochester Inst Technol, Rochester, NY 14623 USA.
   [Bouktif, Salah] UAE Univ, Coll Informat Technol, Al Ain, U Arab Emirates.
C3 Laval University; University of Quebec; University of Quebec Montreal;
   Ecole de Technologie Superieure - Canada; Rochester Institute of
   Technology; United Arab Emirates University
RP Saied, MA (corresponding author), Laval Univ, Quebec City, PQ, Canada.
EM khaled.sellami.1@ulaval.ca; ali.ouni@etsmtl.ca;
   mohamed-aymen.saied@ift.ulaval.ca; salahb@uaeu.ac.ae; mwmvse@rit.edu
RI Mkaouer, Mohamed Wiem/N-7476-2017; Ouni, Ali/Y-8280-2019
OI Mkaouer, Mohamed Wiem/0000-0001-6010-7561; Ouni,
   Ali/0000-0003-4708-0362; Saied, Mohamed Aymen/0000-0002-9488-645X
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX This work is supported by the Natural Sciences and Engineering Research
   Council of Canada (NSERC).
CR Adjoyan S., 2014, The 26th International Conference on Software Engineering and Knowledge Engineering, Hyatt Regency, Vancouver, BC, Canada, July 1-3, 2013, P1
   Al-Debagy O, 2021, SCALABLE COMPUT-PRAC, V22, P39, DOI 10.12694/scpe.v22i1.1836
   Almarimi N, 2019, APPL SOFT COMPUT, V85, DOI 10.1016/j.asoc.2019.105830
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   Anquetil N, 1999, J SOFTW MAINT-RES PR, V11, P201, DOI 10.1002/(SICI)1096-908X(199905/06)11:3<201::AID-SMR192>3.0.CO;2-1
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Assunçao WKG, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P377, DOI 10.1109/SANER50967.2021.00042
   Athanasopoulos D, 2015, IEEE T SERV COMPUT, V8, P550, DOI 10.1109/TSC.2014.2310195
   Balalaie A., IEEE SOFTWARE, V33
   Balalaie A, 2016, COMM COM INF SC, V567, P201, DOI 10.1007/978-3-319-33313-7_15
   Baresi L, 2017, LECT NOTES COMPUT SC, V10465, P19, DOI 10.1007/978-3-319-67262-5_2
   Bastani K, 2015, USING GRAPH ANAL DEC
   Benomar O, 2015, INT C PROGRAM COMPRE, P15, DOI 10.1109/ICPC.2015.11
   Brito M, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1409, DOI 10.1145/3412841.3442016
   Carvalho L, 2020, PROC IEEE INT CONF S, P569, DOI 10.1109/ICSME46990.2020.00060
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Corazza A, 2011, EUR CON SFTWR MTNCE, P35, DOI 10.1109/CSMR.2011.8
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Desai U., 2021, ARXIV
   Di Francesco P, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P29, DOI 10.1109/ICSA.2018.00012
   Di Francesco P, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P21, DOI 10.1109/ICSA.2017.24
   Dragoni N., 2017, PRESENT ULTERIOR SOF, P195, DOI DOI 10.1007/978-3-319-67425-4_12
   Evans E., 2003, Domain-Driven Design
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Freitas F, 2021, 25TH BRAZILIAN SYMPOSIUM ON PROGRAMMING LANGUAGES, SBLP 2021, P100, DOI 10.1145/3475061.3475086
   Fritzsch J, 2019, PROC IEEE INT CONF S, P481, DOI 10.1109/ICSME.2019.00081
   Gysel M, 2016, LECT NOTES COMPUT SC, V9846, P185, DOI 10.1007/978-3-319-44482-6_12
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M., 2009, TR0903 KINGS COLL
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hassan S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P1, DOI 10.1109/ICSA.2017.32
   Hruschka ER, 2009, IEEE T SYST MAN CY C, V39, P133, DOI 10.1109/TSMCC.2008.2007252
   Huppe S, 2017, PROC IEEE ACM INT C, P274, DOI 10.1109/ICSE-C.2017.147
   Jin WX, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2018), P211, DOI 10.1109/ICWS.2018.00034
   Kalia AK, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1214, DOI 10.1145/3468264.3473915
   Kula RG, 2018, INFORM SOFTWARE TECH, V93, P186, DOI 10.1016/j.infsof.2017.09.007
   Lewis J., 2014, MICROSERVICES DEFINI, V25
   Li MQ, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3300148
   Li MQ, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P17, DOI 10.1145/3183399.3183405
   Mazlami G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P524, DOI 10.1109/ICWS.2017.61
   Mazzara M, 2021, IEEE T SERV COMPUT, V14, P1464, DOI 10.1109/TSC.2018.2889087
   MERLO E, 1993, IJCAI-93, VOLS 1 AND 2, P1339
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Newman S., BUILDING MICROSERVIC
   Ouni Ali, 2020, GECCO'20. Proceedings of the 2020 Genetic and Evolutionary Computation Conference Companion, P1114, DOI 10.1145/3377929.3389887
   Ouni A, 2019, ACM T INTERNET TECHN, V19, DOI 10.1145/3226593
   Ouni A, 2017, IEEE T SERV COMPUT, V10, P603, DOI 10.1109/TSC.2015.2502595
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Paixao M, 2018, IEEE T EVOLUT COMPUT, V22, P394, DOI 10.1109/TEVC.2017.2691281
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Rajesh R. V., 2016, Spring Microservices
   Richardson C., 2014, Microservices: Decomposing Applications for Deployability and Scalability
   Ruhe G, 2020, CONT EMPIRICAL METHO, P235
   Sahraoui H, 2020, ARXIV
   Saidani I, 2019, LECT NOTES COMPUT SC, V11895, P58, DOI 10.1007/978-3-030-33702-5_5
   Saidani Islem, 2021, IEEE Transactions on Software Engineering
   Saied M.A., 2015, 23 INT C PROGRAM COM
   Saied M. A., 2016, P IEEE 24 INT C PROG, P1
   Saied MA, 2018, GECCO'18: PROCEEDINGS OF THE 2018 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1435, DOI 10.1145/3205455.3205622
   Saied MA, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106213
   Saied MA, 2018, J SYST SOFTWARE, V145, P164, DOI 10.1016/j.jss.2018.08.032
   Saied MA, 2015, 2015 IEEE 3RD WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P155, DOI 10.1109/VISSOFT.2015.7332428
   Saied MA, 2015, INT C PROGRAM COMPRE, P71, DOI 10.1109/ICPC.2015.16
   Saied MA, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P33, DOI 10.1109/SANER.2015.7081813
   Saied MA, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P23, DOI 10.1109/SANER.2015.7081812
   Sellami Khaled, 2022, EASE 2022: The International Conference on Evaluation and Assessment in Software Engineering 2022, P201, DOI 10.1145/3530019.3530040
   Sharma S., 2017, MICROSERVICES BUILDI
   Shatnawi A, 2018, INT C PROGRAM COMPRE, P189, DOI 10.1145/3196321.3196349
   Taibi D, 2017, IEEE CLOUD COMPUT, V4, P22, DOI 10.1109/MCC.2017.4250931
   Thiele L., 2001, 103 TIK ETH I TECHN
   Vayghan L.A., 2019, ARXIV
   Vayghan LA, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2021.110924
   Vayghan LA, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P176, DOI 10.1109/QRS.2019.00034
   Vayghan LA, 2018, PROCEEDINGS 2018 IEEE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING (CLOUD), P970, DOI 10.1109/CLOUD.2018.00148
   Vera-Rivera FH, 2021, PEERJ COMPUT SCI, V7, DOI 10.7717/peerj-cs.695
   Wang S, 2016, PROC INT CONF SOFTW, P631, DOI 10.1145/2884781.2884880
   Wolfart D, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P149, DOI 10.1145/3463274.3463334
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 81
TC 5
Z9 5
U1 2
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2022
VL 151
AR 106996
DI 10.1016/j.infsof.2022.106996
EA JUL 2022
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V5BX
UT WOS:000859493100001
DA 2024-07-18
ER

PT J
AU van Dinter, R
   Tekinerdogan, B
   Catal, C
AF van Dinter, Raymon
   Tekinerdogan, Bedir
   Catal, Cagatay
TI Predictive maintenance using digital twins: A systematic literature
   review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic literature review; Active learning; Digital twin; Predictive
   maintenance
ID HEALTH MANAGEMENT; PROGNOSTICS
AB Context: Predictive maintenance is a technique for creating a more sustainable, safe, and profitable industry. One of the key challenges for creating predictive maintenance systems is the lack of failure data, as the machine is frequently repaired before failure. Digital Twins provide a real-time representation of the physical machine and generate data, such as asset degradation, which the predictive maintenance algorithm can use. Since 2018, scientific literature on the utilization of Digital Twins for predictive maintenance has accelerated, indicating the need for a thorough review.
   Objective: This research aims to gather and synthesize the studies that focus on predictive maintenance using Digital Twins to pave the way for further research.
   Method: A systematic literature review (SLR) using an active learning tool is conducted on published primary studies on predictive maintenance using Digital Twins, in which 42 primary studies have been analyzed.
   Results: This SLR identifies several aspects of predictive maintenance using Digital Twins, including the objectives, application domains, Digital Twin platforms, Digital Twin representation types, approaches, abstraction levels, design patterns, communication protocols, twinning parameters, and challenges and solution directions. These results contribute to a Software Engineering approach for developing predictive maintenance using Digital Twins in academics and the industry.
   Conclusion: This study is the first SLR in predictive maintenance using Digital Twins. We answer key questions for designing a successful predictive maintenance model leveraging Digital Twins. We found that to this day, computational burden, data variety, and complexity of models, assets, or components are the key challenges in designing these models.
C1 [van Dinter, Raymon] Sioux Technol, Apeldoorn, Netherlands.
   [van Dinter, Raymon; Tekinerdogan, Bedir] Wageningen Univ & Res, Informat Technol Grp, Wageningen, Netherlands.
   [Catal, Cagatay] Qatar Univ, Dept Comp Sci & Engn, Doha, Qatar.
C3 Wageningen University & Research; Qatar University
RP Tekinerdogan, B (corresponding author), Wageningen Univ & Res, Informat Technol Grp, Wageningen, Netherlands.
EM bedir.tekinerdogan@wur.nl
RI Tekinerdogan, Bedir/K-3639-2019; Catal, Cagatay/AAF-3929-2019
OI Tekinerdogan, Bedir/0000-0002-8538-7261; Catal,
   Cagatay/0000-0003-0959-2930; Dinter, van, Raymon/0000-0002-1811-8803
CR Aivaliotis P, 2021, ROBOT CIM-INT MANUF, V71, DOI 10.1016/j.rcim.2021.102177
   Aivaliotis P, 2020, IFAC PAPERSONLINE, V53, P325, DOI 10.1016/j.ifacol.2020.11.052
   Aivaliotis P, 2019, PROC CIRP, V81, P417, DOI 10.1016/j.procir.2019.03.072
   Aivaliotis P, 2019, INT J COMPUT INTEG M, V32, P1067, DOI 10.1080/0951192X.2019.1686173
   Al-Azzawi A.S.M, 2 DEGREE OF FREEDOM
   Ali MS, 2010, INFORM SOFTWARE TECH, V52, P871, DOI 10.1016/j.infsof.2010.05.003
   Altun C, 2019, 2019 27TH TELECOMMUNICATIONS FORUM (TELFOR 2019), P678, DOI 10.1109/telfor48224.2019.8971348
   Anisa Medina Nur, 2020, E3S Web of Conferences, V211, DOI 10.1051/e3sconf/202021105001
   [Anonymous], 2017, Machine Learning Yearning
   Barkalov S., 2021, E3S WEB C
   Bondoc AE, 2022, IFAC PAPERSONLINE, V55, P138, DOI 10.1016/j.ifacol.2022.04.183
   Booyse W, 2020, MECH SYST SIGNAL PR, V140, DOI 10.1016/j.ymssp.2019.106612
   Brownlee J., 2017, Introduction to Time Series Forecasting With Python: How to Prepare Data and Develop Models to Predict the Future
   Brownlee J., 2016, MASTER MACHINE LEARN, V1, P11
   Brownlee J, 2017, Deep learning for natural language processing
   Brownlee J., 2020, AUTOENCODER FEATURE
   Cattaneo L, 2019, IFAC PAPERSONLINE, V52, P37, DOI 10.1016/j.ifacol.2019.10.016
   Centomo S, 2020, IEEE INT C EMERG, P1781, DOI 10.1109/ETFA46521.2020.9212071
   Classens Koen, 2021, 2021 IEEE 1st International Conference on Digital Twins and Parallel Intelligence (DTPI), P336, DOI 10.1109/DTPI52967.2021.9540144
   Cohen Y, 2021, J INTELL MANUF, V32, P1975, DOI 10.1007/s10845-021-01748-5
   Consilvio A, 2019, MT-ITS 2019: 2019 6TH INTERNATIONAL CONFERENCE ON MODELS AND TECHNOLOGIES FOR INTELLIGENT TRANSPORTATION SYSTEMS (MT-ITS), DOI 10.1109/mtits.2019.8883331
   Conzon D., 2021, 2021 26 IEEE INT C E, P1
   Deebak BD, 2022, INT J INTELL SYST, V37, P10289, DOI 10.1002/int.22493
   Desai PS, 2021, PROCESSES, V9, DOI 10.3390/pr9060922
   Dhada M., 2021, 2021 IEEE INT C PROG, P1
   Egger J, 2020, COMPUT IND ENG, V140, DOI 10.1016/j.cie.2019.106195
   Errandonea I, 2020, COMPUT IND, V123, DOI 10.1016/j.compind.2020.103316
   Goebel K, 2008, NASA Ames Prognostics Data Repository, P878
   Grieves M., 2017, TRANSDISCIPLINARY PE, P85, DOI [DOI 10.1007/978-3-319-38756-7_4, 10.1007/978-3-319-38756-7_4]
   Gurbuz HG, 2018, SOFTWARE QUAL J, V26, P1327, DOI 10.1007/s11219-017-9386-2
   Hallaji SM, 2022, AUTOMAT CONSTR, V134, DOI 10.1016/j.autcon.2021.104049
   He B, 2021, J COMPUT INF SCI ENG, V21, DOI 10.1115/1.4049537
   He B, 2021, ADV MANUF, V9, P1, DOI 10.1007/s40436-020-00302-5
   Heim S, 2020, IEEE INT CONF BIG DA, P4122, DOI 10.1109/BigData50022.2020.9378433
   HiveMQ, 2019, 15 FREQ ASK MQTT QUE
   Hosamo HH, 2022, ENERG BUILDINGS, V261, DOI 10.1016/j.enbuild.2022.111988
   Jiao Hu, 2021, 2021 4th International Conference on Intelligent Robotics and Control Engineering (IRCE), P30, DOI 10.1109/IRCE53649.2021.9570997
   Johansen SS, 2019, P ASME INT C OCEAN
   Kaji M, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10248948
   Kang ZQ, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21030932
   Kaul T., 2020, P 29 EUROPEAN SAFETY, P2340
   Key digital technologies joint undertaking, KEY DIG TECHN JOINT
   Khoshafian S., 2015, BPM EVERYWHERE, P1
   Kibira D., 2021, P WINTER SIMULATION, P142
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   Lattanzi L, 2021, INT J COMPUT INTEG M, V34, P567, DOI 10.1080/0951192X.2021.1911003
   Lee GY, 2018, J MECH SCI TECHNOL, V32, P987, DOI 10.1007/s12206-018-0201-1
   Lee J., 2007, NASA Ames Prognostics Data Repository
   Liu C., 2020, P ANN C PHM SOC 2020
   Liu C, 2023, INT J PROD RES, V61, P4069, DOI 10.1080/00207543.2021.1969462
   Liu Z., 2018, INT J PROGN HEALTH M, P9
   Liu ZC, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON PROGNOSTICS AND HEALTH MANAGEMENT (ICPHM)
   Luo WC, 2020, ROBOT CIM-INT MANUF, V65, DOI 10.1016/j.rcim.2020.101974
   Mabkhot MM, 2018, MACHINES, V6, DOI 10.3390/machines6020023
   Malek NG, 2021, IFAC PAPERSONLINE, V54, P1047, DOI 10.1016/j.ifacol.2021.08.124
   Masero Rubio Eva, 2019, Innovation, Engineering and Entrepreneurship. LNEE 505, P292, DOI 10.1007/978-3-319-91334-6_40
   MATLAB, 2017, UNDERSTANDING KALM 5
   Matyas K, 2017, CIRP ANN-MANUF TECHN, V66, P461, DOI 10.1016/j.cirp.2017.04.007
   Melesse TY, 2020, PROCEDIA MANUF, V42, P267, DOI 10.1016/j.promfg.2020.02.084
   Meraghni S, 2021, INT J HYDROGEN ENERG, V46, P2555, DOI 10.1016/j.ijhydene.2020.10.108
   Mi SH, 2021, J MANUF SYST, V58, P329, DOI 10.1016/j.jmsy.2020.08.001
   Miller S., 2019, MATHWORKS PREDICTIVE
   Moghadam FK, 2022, MECH SYST SIGNAL PR, V162, DOI 10.1016/j.ymssp.2021.108087
   Moghadam FK, 2021, FORSCH INGENIEURWES, V85, P273, DOI 10.1007/s10010-021-00468-9
   Moi T, 2020, ENG FAIL ANAL, V112, DOI 10.1016/j.engfailanal.2020.104517
   Nixon J., 2019, OFFSHORE TECHNOLOGY, DOI 10.4043/29347-MS
   Nota G, 2022, PROCEDIA COMPUT SCI, V200, P778, DOI 10.1016/j.procs.2022.01.276
   Oluwasegun A, 2020, NUCL ENG TECHNOL, V52, P2262
   Panagou S, 2022, IFAC PAPERSONLINE, V55, P132, DOI 10.1016/j.ifacol.2022.04.182
   Papachatzakis P., 2007, 1 EUR AIR SPAC C GER, P121
   Priyanka EB, 2022, J IND INF INTEGR, V26, DOI 10.1016/j.jii.2021.100272
   Qiao QZ, 2019, PROC CIRP, V81, P1388, DOI 10.1016/j.procir.2019.04.049
   Rajesh PK, 2019, PROCEDIA COMPUT SCI, V165, P18, DOI 10.1016/j.procs.2020.01.061
   Raymon van Dinter, 2022, MEND DAT, DOI [10.17632/w6pd7xk784.1, DOI 10.17632/W6PD7XK784.1]
   Ren ZJ, 2022, IEEE T EMERG TOP COM, V10, P9, DOI 10.1109/TETC.2022.3143346
   Rossini R., 2020, SAM IOT, P55
   Ruessmann M., 2015, BOSTON CONSULTING GR, V9, P54, DOI DOI 10.1007/S12599-014-0334-4
   Sahu CK, 2021, INT J PROD RES, V59, P4903, DOI 10.1080/00207543.2020.1859636
   Schleich B, 2017, CIRP ANN-MANUF TECHN, V66, P141, DOI 10.1016/j.cirp.2017.04.040
   Schwab Klaus, 2017, 4 IND REVOLUTION, DOI DOI 10.1080/10686967.2018.1436355
   Semeraro C, 2021, COMPUT IND, V130, DOI 10.1016/j.compind.2021.103469
   Semeraro C, 2019, IFIP ADV INF COMM TE, P507, DOI 10.1007/978-3-030-28464-0_44
   Shanmugam K., 2021, PERFECT PAIR DIGITAL
   Shao X., 2021, 2021 GLOB REL PROGN, P1
   Short M, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19173781
   Sivalingam K, 2018, PROCEEDINGS OF 2018 2ND INTERNATIONAL CONFERENCE ON GREEN ENERGY AND APPLICATIONS (ICGEA), P197, DOI 10.1109/ICGEA.2018.8356292
   Suve Mustafa Furkan, 2022, Intelligent and Fuzzy Techniques for Emerging Conditions and Digital Transformation: Proceedings of the INFUS 2021 Conference. Lecture Notes in Networks and Systems (308), P455, DOI 10.1007/978-3-030-85577-2_54
   Tao F, 2018, CIRP ANN-MANUF TECHN, V67, P169, DOI 10.1016/j.cirp.2018.04.055
   Tekinerdogan B, 2020, SENSORS-BASEL, V20, DOI 10.3390/s20185103
   Toolbox S.R, 2014, SEARCH
   Tummers J, 2019, COMPUT ELECTRON AGR, V157, P189, DOI 10.1016/j.compag.2018.12.044
   Tygesen UT, 2019, C PROC SOC EXP MECH, P223, DOI 10.1007/978-3-319-74421-6_30
   Tzanis Nikolaos, 2020, 2020 IEEE Conference on Industrial Cyberphysical Systems (ICPS), P393, DOI 10.1109/ICPS48405.2020.9274723
   Ulusoy M, PREDICTIVE MAINTENAN
   van de Schoot R., 2019, AUTOMATED SYSTEMATIC
   van Dinter R, 2021, INFORM SOFTWARE TECH, V136, DOI 10.1016/j.infsof.2021.106589
   Wago, SNELL COMM TUSS AUT
   Wang KJ, 2021, INT J PROD RES, V59, P6471, DOI 10.1080/00207543.2020.1817999
   Wang T., 2020, P ANN C PROGNOSTICS
   Wang X., 2021, P IEEE INT C SENS DI, P186, DOI DOI 10.1109/SDPC52933.2021.9563393
   Wang YD, 2020, PROCEDIA MANUF, V49, P81, DOI 10.1016/j.promfg.2020.06.015
   Werner A, 2019, PROCEDIA MANUF, V39, P1743, DOI 10.1016/j.promfg.2020.01.265
   Wu ZH, 2021, PROCEDIA MANUF, V55, P139, DOI 10.1016/j.promfg.2021.10.020
   Xiong ML, 2021, INT J ADV MANUF TECH, V114, P3751, DOI 10.1007/s00170-021-06976-w
   Xu Y, 2019, IEEE ACCESS, V7, P19990, DOI 10.1109/ACCESS.2018.2890566
   Yang H, 2019, IISE TRANS, V51, P1190, DOI 10.1080/24725854.2018.1555383
   You YC, 2022, PROCEDIA COMPUT SCI, V200, P1471, DOI 10.1016/j.procs.2022.01.348
   Yu JS, 2021, J MANUF SYST, V58, P293, DOI 10.1016/j.jmsy.2020.07.005
   Zenisek J, 2018, IFAC PAPERSONLINE, V51, P643, DOI 10.1016/j.ifacol.2018.08.391
   Zhang GH, 2020, 2020 3RD INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND BIG DATA (ICAIBD 2020), P29, DOI [10.1109/icaibd49809.2020.9137461, 10.1109/ICAIBD49809.2020.9137461]
   Zhang TL, 2021, PROCEDIA COMPUT SCI, V187, P1, DOI 10.1016/j.procs.2021.04.025
   Zhao ZB, 2021, CHIN J MECH ENG-EN, V34, DOI 10.1186/s10033-021-00570-7
   Zhen W., 2021, 2021 GLOB REL PROGN, P1
   Zheng T, 2021, INT J PROD RES, V59, P1922, DOI 10.1080/00207543.2020.1824085
NR 114
TC 75
Z9 77
U1 93
U2 322
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2022
VL 151
AR 107008
DI 10.1016/j.infsof.2022.107008
EA JUL 2022
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V5BX
UT WOS:000859493100007
OA hybrid, Green Published
HC Y
HP N
DA 2024-07-18
ER

PT J
AU Garcia, LA
   Oliveira, E
   Morandini, M
AF Garcia, Luciano A.
   Oliveira Jr, Edson
   Morandini, Marcelo
TI Tailoring the Scrum framework for software development: Literature
   mapping and feature-based support
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Feature model; Scrum adaptations; Scrum deployment; Scrum framework;
   Scrum tailoring; Software development projects
ID AGILE METHODS; MODEL
AB Context: Literature faces the lack of studies relating which characteristics of the Scrum framework are adapted. Understanding such variations is useful for prospective software development projects and guiding teams at conducting Scrum customizations.Objective: We aimed at identifying how the Scrum framework has been adapted to the context of Agile software development projects and how adaptations might be represented to aid researchers and practitioner at analyzing Scrum processes deployed or to be deployed. Method: We carried out a systematic mapping study in five electronic sources, 11 journals and 15 conferences/workshops. We submitted the 281 returned studies to various filters, which resulted in 50 studies with data extracted, analyzed, and quality evaluated.Results: SMS provides a panorama on the Scrum characteristics adapted to roles, events, and artifacts. We decided to adopt feature models for hierarchically accommodating found Scrum adaptations as it supports adaptations in the form of variability. We evaluated the resulting feature model with practitioners from different companies in the perspective of Perceived Usefulness and Perceived Ease of Use considering the Technology Acceptance Model (TAM). Therefore, we demonstrated the produced feature model aids users to better visualize and understand the documented Scrum adaptations.Conclusions: The panorama on Scrum adaptations and the problems during Scrum adoption are discussed to providing a means to practically understand and tailor (configure) such adaptations. Such adaptations are an essential source of information on the variety of Scrum elements, thus researchers and practitioners may take the results of this work as a guide to understand how different adaptations occur in different contexts during software development. In addition, the conceived feature model is an important asset to guide such users at selecting Scrum characteristics and respective adaptations to perform. The feature model also promotes reuse of knowledge gathered up from several different information sources.
C1 [Garcia, Luciano A.; Oliveira Jr, Edson] State Univ Maringa UEM, Informat Dept DIN, Maringa, Parana, Brazil.
   [Morandini, Marcelo] Univ Sao Paulo, Sch Arts Sci & Humanities EACH, USP, Sao Paulo, SP, Brazil.
C3 Universidade Estadual de Maringa; Universidade de Sao Paulo
RP Oliveira, E (corresponding author), State Univ Maringa UEM, Informat Dept DIN, Maringa, Parana, Brazil.
EM lucianogarcia11@hotmail.com; edson@din.uem.br; m.morandini@usp.br
RI Harrison, Dylan/AFP-8142-2022; de Oliveira, Edson Cesar
   Cunha/AAN-2581-2020
OI de Oliveira, Edson Cesar Cunha/0000-0001-9168-4388; OliveiraJr,
   Edson/0000-0002-4760-1626
FU Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior - Brasil
   (CAPES) [001]; Fundacao de Amparo a Pesquisa do Estado de Sao Paulo
   (FAPESP)
FX This study was financed in part by the Coordenacao de Aperfeicoamento de
   Pessoal de Nivel Superior -Brasil (CAPES) -Finance Code 001.; Authors
   would like to thank Fundacao de Amparo a Pesquisa do Estado de Sao Paulo
   (FAPESP) for supporting this work.
CR Agarwal P., 2011, P 4 IND SOFTW ENG C, P51
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   [Anonymous], 2009, 2009 39 IEEE FRONT E, DOI DOI 10.1109/FIE.2009.5350404
   Ayed H., 2014, P 1 INT WORKSH RAP C, P36, DOI DOI 10.1145/2593812.2593820
   Bartlett J E, 2001, INFORM TECHNOLOGY LE, V19, P1, DOI DOI 10.1109/LPT.2009.2020494
   Bass JM, 2014, INT CONF GLOBAL SOFT, P6, DOI 10.1109/ICGSE.2014.24
   Batarseh FA, 2018, SOFTWARE QUAL J, V26, P49, DOI 10.1007/s11219-015-9285-3
   Campanelli AS, 2015, J SYST SOFTWARE, V110, P85, DOI 10.1016/j.jss.2015.08.035
   Cochran W.G., 1977, SAMPLING TECHNIQUES
   CORTINA JM, 1993, J APPL PSYCHOL, V78, P98, DOI 10.1037/0021-9010.78.1.98
   Czarnecki K, 1999, LECT NOTES COMPUT SC, V1687, P2, DOI 10.1145/318774.318779
   Dahmann J, 2013, ANN IEEE SYST CONF, P351, DOI 10.1109/SysCon.2013.6549905
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   de Souza RT, 2015, PROC FRONT EDUC CONF, P1389
   Dinakar K., 2009, P 24 ACM SIGPLAN C C, P579
   Drury M, 2012, J SYST SOFTWARE, V85, P1239, DOI 10.1016/j.jss.2012.01.058
   Elallaoui M, 2016, COLLOQ INF SCI TECH, P65, DOI 10.1109/CIST.2016.7804972
   Eloranta VP, 2016, INFORM SOFTWARE TECH, V74, P194, DOI 10.1016/j.infsof.2015.12.003
   Felker C, 2011, SIGCSE 12: PROCEEDINGS OF THE 43RD ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P301
   Fernandes Cecilia, 2012, Proceedings of the 2012 Agile Conference, P103, DOI 10.1109/Agile.2012.34
   Fernandes F., 2015, ANAIS 14 S BRASILEIR, P204, DOI [10.5753/sbqs.2015.15224, DOI 10.5753/SBQS.2015.15224]
   Fitzgerald Brian, 2013, 2013 35th International Conference on Software Engineering (ICSE), P863, DOI 10.1109/ICSE.2013.6606635
   Fitzgerald B, 2006, EUR J INFORM SYST, V15, P200, DOI 10.1057/palgrave.ejis.3000605
   Fogaça LR, 2016, ADV INTELL SYST, V448, P723, DOI 10.1007/978-3-319-32467-8_63
   Gangjun Yang, 2010, 2010 IEEE 11th International Conference on Computer-Aided Industrial Design & Conceptual Design (CAIDCD 2010), P889, DOI 10.1109/CAIDCD.2010.5681880
   Garvey G.P., 2013, J COMPUT SCI COLL, V28, P205
   Harvie DP, 2016, IEEE T SOFTWARE ENG, V42, P476, DOI 10.1109/TSE.2015.2489654
   Heeager LT, 2015, EMPIR SOFTW ENG, V20, P1762, DOI 10.1007/s10664-014-9335-7
   Heikkila Ville T., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P85, DOI 10.1109/ESEM.2013.27
   Hong N, 2010, ASIA PAC SOFWR ENG, P310, DOI 10.1109/APSEC.2010.43
   Ihme T., 2013, J BRAZILIAN COMPUTER, V19, P257, DOI [10.1007/s13173-012-0096-0, DOI 10.1007/S13173-012-0096-0]
   Jackson S., 2015, ACM SIGCAS COMPUT SO, V45, P36
   Kang K. C., 1990, Technical Report
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kayes I., 2011, Software Engineering Notes, V36, P1, DOI [DOI 10.1145/1943371, 10. 1145/1943371.1943384, DOI 10.1145/1943371.1943384]
   Khalane T, 2013, IEEE INT CONF ADAPT
   Kim Y., 2007, AMCIS 2007 P, P81
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Könnölä K, 2016, J SYST SOFTWARE, V118, P134, DOI 10.1016/j.jss.2016.05.001
   Lee K, 2002, LECT NOTES COMPUT SC, V2319, P62
   Li J, 2010, P 2010 IEEE INT S AP, P3, DOI [DOI 10.1109/ICIECS.2010.5678245, 10.1109/ISAF.2010.5712271, DOI 10.1109/ISAF.2010.5712271, 10.1145/1852786.1852804, DOI 10.1145/1852786.1852804]
   Likert R., 1932, TECHNIQUE MEASUREMEN, DOI 1933-01885-001
   Linaker Johan, 2015, 11 LUND U
   López-Martínez J, 2016, 2016 FOURTH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION - CONISOFT 2016, P141, DOI 10.1109/CONISOFT.2016.30
   Mahnic V, 2012, J SYST SOFTWARE, V85, P2086, DOI 10.1016/j.jss.2012.04.005
   Maria R.E., 2015, P 7 INT ACM C MANAGE, P43, DOI [10.1145/2857218. 2857225, DOI 10.1145/2857218.2857225]
   Matharu G. S., 2015, ACM SIGSOFT Software Engineering Notes, V40, P1, DOI [DOI 10.1145/2693208.2693233, 10.1145/2693208.2693233]
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Molleri JS, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962619
   Nejmeh Brian, 2014, 2014 IEEE Frontiers in Education Conference (FIE). Proceedings, P1, DOI 10.1109/FIE.2014.7044087
   Nidagundi P, 2017, PROCEDIA COMPUT SCI, V104, P97, DOI 10.1016/j.procs.2017.01.078
   Oliveira F, 2015, 2015 AGILE CONFERENCE, P50, DOI 10.1109/Agile.2015.7
   Ozkan N, 2015, ASIA PAC SOFWR ENG, P111, DOI 10.1109/APSEC.2015.29
   Paasivaara M, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING TRACK (ICSE-SEET 2017), P146, DOI 10.1109/ICSE-SEET.2017.22
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pikkarainen M, 2012, EMPIR SOFTW ENG, V17, P675, DOI 10.1007/s10664-011-9185-5
   Rindell Kalle, 2015, 14 S PROGRAMMING LAN, DOI [10.13140/RG.2.1.4660.2964, DOI 10.13140/RG.2.1.4660.2964]
   Romano BL, 2015, 2015 12TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY - NEW GENERATIONS, P774, DOI 10.1109/ITNG.2015.139
   Romeike Ralf, 2012, P 7 WORKSHOP PRIMARY, P48, DOI [10.1145/2481449.2481461, DOI 10.1145/2481449.2481461]
   Sandberg AB, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P73, DOI 10.1109/ICSE-SEIP.2017.20
   Scharff C, 2010, 2010 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2010), P25
   Schild J., 2010, P 5 INT C FDN DIG GA, P187, DOI [10.1145/1822348.1822373, DOI 10.1145/1822348.1822373]
   Schwaber K., 2013, DEFINITIVE GUIDE SCR
   Schwaber K., 1997, BUSINESS OBJECT DESI, DOI [10.1007/978-1-4471-0947-1_11, DOI 10.1007/978-1-4471-0947-1_11]
   Schwaber K., 2010, DEFINITIVE GUIDE SCR
   Schwaber K., 2017, The Scrum GuideTM The Definitive Guide to Scrum: The Rules of the Game
   Schwaber K, 2018, SCRUM GUIDE REVISION
   Schwaber K.Sutherland., 2016, The Definitive Guide to Scrum: The Rules of the Game
   Schwaber Ken., 2011, The Definitive Guide to Scrum: The Rules of the Game
   Service RW, 2009, ORGAN RES METHODS, V12, P614, DOI 10.1177/1094428108324514
   Silva A., 2017, The simple-cubic structure of elemental Polonium and its relation to combined charge and orbital order in other elemental chalcogens, P1
   Sithole V., 2016, P ANN C S AFR I COMP, P1, DOI [10.1145/2987491.2987517, DOI 10.1145/2987491.2987517]
   Sobiech Fabian, 2014, P 2014 C RES ADAPTIV, P266, DOI [10.1145/2663761.2664198, DOI 10.1145/2663761.2664198]
   Sullivan Gail M, 2013, J Grad Med Educ, V5, P541, DOI 10.4300/JGME-5-4-18
   Thum T., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P191, DOI 10.1109/SPLC.2011.53
   Torrecilla-Salinas C J., 2013, CEUR Workshop Proceedings, V1017, P1
   Verdugo J, 2014, P INT C AG SOFTW DEV, P143, DOI DOI 10.1007/978-3-319-06862-6_10
   Vieira J.K.M., 2015, BRAZ WORKSH AG METH, P10, DOI [10.1109/WBMA.2015.14, DOI 10.1109/WBMA.2015.14]
   Vlaanderen Kevin, 2012, Product-Focused Software Process Improvement. Proceedings 13th International Conference (PROFES 2012), P116, DOI 10.1007/978-3-642-31063-8_10
   Vlaanderen K., 2010, 2009 3 INT WORKSH SO, P1
   Vlietland J, 2016, J SYST SOFTWARE, V113, P418, DOI 10.1016/j.jss.2015.11.010
   Williams L, 2011, INT SYMP EMP SOFTWAR, P463, DOI 10.1109/ESEM.2011.65
   Wortman K., 2017, AER C 2017 IEEE, P1
NR 83
TC 7
Z9 7
U1 3
U2 26
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2022
VL 146
AR 106814
DI 10.1016/j.infsof.2021.106814
EA FEB 2022
PG 32
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0J8ZG
UT WOS:000780387700014
DA 2024-07-18
ER

PT J
AU Yi, J
   Ismayilzada, E
AF Yi, Jooyong
   Ismayilzada, Elkhan
TI Speeding up constraint-based program repair using a search-based
   technique
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Automated program repair; Constraint-based program repair; Guided
   search; MCMC sampling
ID AUTOMATED REPAIR
AB Context: Constraint-based program repair has been developed as one of the main techniques for automated program repair. Given a buggy program and a test suite, constraint-based program repair first extracts a repair constraint T, and then synthesizes a patch satisfying T. Since a patch is synthesized in a correct-by-construction manner (rather than compiling and testing each repair candidate source code), the constraint-based approach, in theory, requires less runtime overhead than the G&V approach. Nevertheless, the performance of existing constraint-based approaches is still suboptimal.Objective: In this work, we propose a novel technique to expedite constraint-based program repair. We aim to boost runtime performance without sacrificing repairability and patch quality. Method: The existing constraint-based program repair searches for a patch specification in an unguided manner. We introduce a novel guided search algorithm based on MCMC sampling.Results: Our experimental results for the 50 buggy versions of 5 real-world subjects (i.e., Libtiff, PHP, GMP, Gzip, and Wireshark) show that our method named FAngelix is on average an order of magnitude faster than Angelix (a state-of-the-art constraint-based program repair tool), showing up to 23 times speed-up. This speed-up is achieved without sacrificing repairability and patch quality. Conclusion: This paper proposes a novel technique that expedites constraint-based program repair, using a search-based technique based on MCMC sampling. Our experimental results show the promise of our approach.
C1 [Yi, Jooyong; Ismayilzada, Elkhan] UNIST, 50 UNIST Gil, Ulsan 44919, South Korea.
C3 Ulsan National Institute of Science & Technology (UNIST)
RP Yi, J (corresponding author), UNIST, 50 UNIST Gil, Ulsan 44919, South Korea.
EM jooyong@unist.ac.kr; elkhan@unist.ac.kr
RI Yi, Jooyong/ACE-0654-2022
OI Yi, Jooyong/0000-0002-7215-0855; Ismayilzada, Elkhan/0000-0002-1473-3702
FU National Research Founda-tion of Korea (NRF) , South Korea - Korea
   govern-ment (MSIT) [2020R1F1A1066462, 2021R1A5A1021944,
   2021R1A2C1009819]; Institute for Information & communications Technology
   Planning & Evaluation (IITP) - Korea government (MSIT) [2021-0-01001]
FX Acknowledgments This work was partly supported by the National Research
   Founda-tion of Korea (NRF) , South Korea grant funded by the Korea
   govern-ment (MSIT) (No. 2020R1F1A1066462, No. 2021R1A5A1021944, No.
   2021R1A2C1009819) and Institute for Information & communications
   Technology Planning & Evaluation (IITP) , South Korea grant funded by
   the Korea government (MSIT) (No. 2021-0-01001, Development of automatic
   software error repair technology that combines code analysis and error
   mining) .
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Afzal A., 2019, IEEE T SOFTW ENG
   Alur R, 2015, NATO SCI PEAC SECUR, V40, P1, DOI 10.3233/978-1-61499-495-4-1
   Andrieu C, 2003, MACH LEARN, V50, P5, DOI 10.1023/A:1020281327116
   Arcuri A, 2011, APPL SOFT COMPUT, V11, P3494, DOI 10.1016/j.asoc.2011.01.023
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Calcagno C, 2015, LECT NOTES COMPUT SC, V9058, P3, DOI 10.1007/978-3-319-17524-9_1
   Chen LS, 2017, IEEE INT CONF AUTOM, P637, DOI 10.1109/ASE.2017.8115674
   Chen MY, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P595, DOI 10.1109/DSN.2002.1029005
   D'Antoni L, 2016, LECT NOTES COMPUT SC, V9780, P383, DOI 10.1007/978-3-319-41540-6_21
   de Souza EF, 2018, GECCO'18: PROCEEDINGS OF THE 2018 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1443, DOI 10.1145/3205455.3205566
   Ding ZY, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL WORKSHOP ON GENETIC IMPROVEMENT (GI@ICSE 2019), P2, DOI 10.1109/GI.2019.00011
   Gao Q, 2015, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2015.81
   Gilks W.R., 1995, MARKOV CHAIN MONTE C
   Harman M, 2018, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2018.00009
   HASTINGS WK, 1970, BIOMETRIKA, V57, P97, DOI 10.1093/biomet/57.1.97
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Hua JR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P12, DOI 10.1145/3180155.3180245
   Jha S., 2010, P 32 ACM IEEE INT C, V1, P215, DOI DOI 10.1145/1806799.1806833
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Liu K, 2020, PROC INT CONF SOFTW, P615, DOI 10.1145/3377811.3380338
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mechtaev S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P389, DOI 10.1145/3236024.3236049
   Mechtaev S, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241980
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Mehne B, 2018, IEEE INT CONF SOFTW, P227, DOI 10.1109/ICST.2018.00031
   METROPOLIS N, 1953, J CHEM PHYS, V21, P1087, DOI 10.1063/1.1699114
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   PRAAGMAN J, 1985, EUR J OPER RES, V19, P144, DOI 10.1016/0377-2217(85)90321-2
   QUINLAN JR, 1987, INT J MAN MACH STUD, V27, P221, DOI 10.1016/S0020-7373(87)80053-6
   Tan SH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/2950290.2950295
   Timperley CS, 2018, PROC IEEE ACM INT C, P446, DOI 10.1145/3183440.3195050
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   White M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P479, DOI [10.1109/saner.2019.8668043, 10.1109/SANER.2019.8668043]
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
NR 49
TC 4
Z9 4
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2022
VL 146
AR 106865
DI 10.1016/j.infsof.2022.106865
EA FEB 2022
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0J8ZG
UT WOS:000780387700004
DA 2024-07-18
ER

PT J
AU Gao, CY
   Zeng, JC
   Lo, D
   Xia, X
   King, I
   Lyu, MR
AF Gao, Cuiyun
   Zeng, Jichuan
   Lo, David
   Xia, Xin
   King, Irwin
   Lyu, Michael R.
TI Understanding in-app advertising issues based on large scale app review
   analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Mobile app; User reviews; In-app ads; Ad issues; Cross platform
ID VARIABLES
AB Context: In-app advertising closely relates to app revenue. Reckless ad integration could adversely impact app quality and user experience, leading to loss of income. It is very challenging to balance the ad revenue and user experience for app developers. Objective: Towards tackling the challenge, we conduct a study on analyzing user concerns about in-app advertisement. Method: Specifically, we present a large-scale analysis on ad-related user feedback. The large user feedback data from App Store and Google Play allow us to summarize ad-related app issues comprehensively and thus provide practical ad integration strategies for developers. We first define common ad issues by manually labeling a statistically representative sample of ad-related feedback, and then build an automatic classifier to categorize ad-related feedback. We study the relations between different ad issues and user ratings to identify the ad issues poorly scored by users. We also explore the fix durations of ad issues across platforms for extracting insights into prioritizing ad issues for ad maintenance. Results: (1) We summarize 15 types of ad issues by manually annotating 903 out of 36,309 ad-related user reviews. From a statistical analysis of 36,309 ad-related reviews, we find that users care most about the number of unique ads and ad display frequency during usage. (2) Users tend to give relatively lower ratings when they report the security and notification related issues. (3) Regarding different platforms, we observe that the distributions of ad issues are significantly different between App Store and Google Play. (4) Some ad issue types are addressed more quickly by developers than other ad issues. Conclusion: We believe the findings we discovered can benefit app developers towards balancing ad revenue and user experience while ensuring app quality.
C1 [Gao, Cuiyun] Harbin Inst Technol, Sch Comp Sci & Technol, Shenzhen, Peoples R China.
   [Zeng, Jichuan; King, Irwin; Lyu, Michael R.] Chinese Univ Hong Kong, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
   [Xia, Xin] Software Engn Applicat Technol Lab, Huawei, Peoples R China.
C3 Harbin Institute of Technology; Chinese University of Hong Kong;
   Singapore Management University; Huawei Technologies
RP Zeng, JC (corresponding author), Chinese Univ Hong Kong, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
EM gaocuiyun@hit.edu.cn; jczeng@cse.cuhk.edu.hk; davidlo@smu.edu.sg;
   xin.xia@monash.edu; king@cse.cuhk.edu.hk; lyu@cse.cuhk.edu.hk
RI Xia, Xin/AAD-6217-2022; Lo, David/A-2493-2012; King, Irwin/C-9681-2015
OI Xia, Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201; King,
   Irwin/0000-0001-8106-6447
FU National Natural Science Foundation of China [62002084]; Stable support
   plan for colleges and universities in Shenzhen
   [GXWD20201230155427003-20200730101839009]; Research Grants Council of
   the Hong Kong Special Administrative Region, China [CUHK 14210717]
FX This work was supported by National Natural Science Foundation of China
   under project No. 62002084, Stable support plan for colleges and
   universities in Shenzhen under project No.
   GXWD20201230155427003-20200730101839009, and the Research Grants Council
   of the Hong Kong Special Administrative Region, China (CUHK 14210717) .
CR Ad survey, 2016, TOP 7 REAS WHY PEOPL
   Ahmed S. E., 2006, TECHNOMETRICS, V48, P573
   Ali A., 2015, INT J ADV SOFT COMPU, V7, P176
   Annoying ad, 2016, WHICH ADS INT US DIS
   [Anonymous], NONSKIPPABLE YOUTUBE
   [Anonymous], YOUTUBE WILL STOP PL
   [Anonymous], 2017, ARXIV170207681
   [Anonymous], 2017, AD REPORT
   [Anonymous], Cross-Platform Mobile Development: Five Best Frameworks | SaM Solutions
   [Anonymous], 2013, Proceedings of the 27th International BCS Human Computer Interaction Conference
   [Anonymous], NUMBER APPS AVAILABL
   [Anonymous], 2016, FACEBOOK REPORTS
   [Anonymous], WHY MARKETERS SHOULD
   [Anonymous], IN APP ADVERTISING T
   App market, 2018, DISTR FREE PAID ANDR
   Ayewah N, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P1, DOI 10.1145/1251535.1251536
   Backes M, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P356, DOI 10.1145/2976749.2978333
   Bao LF, 2018, EMPIR SOFTW ENG, V23, P1313, DOI 10.1007/s10664-017-9547-8
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Chen X, 2020, IEEE T RELIAB, V69, P70, DOI 10.1109/TR.2019.2924932
   Chien E, 2005, P 15 VIRUS B C, V47
   Chowdhury H.K., 2006, International Journal of Mobile Marketing, V1, P33
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Facebook ads, 2017, FAC REV GROWTH
   Finkelstein A, 2017, INFORM SOFTWARE TECH, V87, P119, DOI 10.1016/j.infsof.2017.03.002
   Gao C, 2018, P 26 INT S SOFTW REL
   Gao CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P48, DOI 10.1145/3180155.3180218
   Grace M. C., 2012, PROC 5 ACM C SECUR P, P101
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Gui JP, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P100, DOI 10.1109/ICSE.2015.32
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hosmer DW, 2000, APPL LOGISTIC REGRES
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Jiaping Gui, 2016, 2016 IEEE/ACM 5th International Workshop on Green and Sustainable Software (GREENS), P1, DOI 10.1109/GREENS.2016.009
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Kim M, 2016, PROC INT CONF SOFTW, P96, DOI 10.1145/2884781.2884783
   Kochhar PS, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P563, DOI 10.1109/SANER.2016.112
   Lu Mengmeng., 2017, P 21 INT C EVALUATIO, P344, DOI [10.1145/3084226.3084241, DOI 10.1145/3084226.3084241]
   Lu X, 2016, PROC INT CONF SOFTW, P3, DOI 10.1145/2884781.2884828
   Luiz W, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P1909, DOI 10.1145/3178876.3186168
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Man YC, 2016, PROC INT SYMP SOFTW, P138, DOI 10.1109/ISSRE.2016.27
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   McHugh ML, 2013, BIOCHEM MEDICA, V23, P143, DOI 10.11613/BM.2013.018
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1067, DOI 10.1007/s10664-015-9375-7
   Mohan P., 2013, P 8 ACM EUR C COMP S, P267, DOI DOI 10.1145/2465351.2465378
   Nath S., 2015, P 13 ANN INT C MOB S, P59
   Noei E., 2019, IEEE T SOFTW ENG
   Palomba F, 2018, J SYST SOFTWARE, V137, P143, DOI 10.1016/j.jss.2017.11.043
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Pearson K, 1900, PHILOS MAG, V50, P157, DOI 10.1080/14786440009463897
   Vu PM, 2016, IEEE INT CONF AUTOM, P726, DOI 10.1145/2970276.2970365
   Vu PM, 2015, IEEE INT CONF AUTOM, P749, DOI 10.1109/ASE.2015.85
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Read J, 2011, MACH LEARN, V85, P333, DOI 10.1007/s10994-011-5256-5
   Ruiz IJM, 2014, IEEE SOFTWARE, V31, P86, DOI 10.1109/MS.2014.79
   Sarro F., 2018, P INT WORKSH ADV MOB
   SHAREit, 2019, SHAREIT GIV ADS NOT
   Son S, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23407
   Soroa-Koury Sandra, 2010, Telematics and Informatics, V27, P103, DOI 10.1016/j.tele.2009.06.001
   Spencer D., 2009, CARD SORTING DESIGNI
   Tao GH, 2018, IEEE T RELIAB, V67, P355, DOI 10.1109/TR.2017.2778147
   Ullah I, 2014, IEEE CONF COMPUT, P547, DOI 10.1109/INFCOMW.2014.6849290
   Vallina-Rodriguez Narseo, 2012, Proceedings of the 2012 ACM conference on Internet measurement conference, P343
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Wei XT, 2012, MOBICOM 12: PROCEEDINGS OF THE 18TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P137
   Weinberger KQ, 2009, J MACH LEARN RES, V10, P207
   Yu J.H., 2013, INT J MOBILE MARK, V8
NR 72
TC 5
Z9 5
U1 7
U2 40
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2022
VL 142
AR 106741
DI 10.1016/j.infsof.2021.106741
EA OCT 2021
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WW6SN
UT WOS:000718043900002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rajapakse, RN
   Zahedi, M
   Babar, MA
   Shen, HF
AF Rajapakse, Roshan N.
   Zahedi, Mansooreh
   Babar, M. Ali
   Shen, Haifeng
TI Challenges and solutions when adopting DevSecOps: A systematic review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE DevOps; Security; DevSecOps; Continuous Software Engineering; Systematic
   Literature Review
ID CONTINUOUS DELIVERY; DEVOPS
AB Context: DevOps (Development and Operations) has become one of the fastest-growing software development paradigms in the industry. However, this trend has presented the challenge of ensuring secure software delivery while maintaining the agility of DevOps. The efforts to integrate security in DevOps have resulted in the DevSecOps paradigm, which is gaining significant interest from both industry and academia. However, the adoption of DevSecOps in practice is proving to be a challenge. Objective: This study aims to systemize the knowledge about the challenges faced by practitioners when adopting DevSecOps and the proposed solutions reported in the literature. We also aim to identify the areas that need further research in the future. Method: We conducted a Systematic Literature Review of 54 peer-reviewed studies. The thematic analysis method was applied to analyze the extracted data. Results: We identified 21 challenges related to adopting DevSecOps, 31 specific solutions, and the mapping between these findings. We also determined key gap areas in this domain by holistically evaluating the available solutions against the challenges. The results of the study were classified into four themes: People, Practices, Tools, and Infrastructure. Our findings demonstrate that tool-related challenges and solutions were the most frequently reported, driven by the need for automation in this paradigm. Shift-left security and continuous security assessment were two key practices recommended for DevSecOps. People-related factors were considered critical for successful DevSecOps adoption but less studied. Conclusions: We highlight the need for developer-centered application security testing tools that target the continuous practices in DevSecOps. More research is needed on how the traditionally manual security practices can be automated to suit rapid software deployment cycles. Finally, achieving a suitable balance between the speed of delivery and security is a significant issue practitioners face in the DevSecOps paradigm.
C1 [Rajapakse, Roshan N.; Zahedi, Mansooreh; Babar, M. Ali] Univ Adelaide, Sch Comp Sci, CREST Ctr Res Engn Software Technol, Adelaide, SA, Australia.
   [Rajapakse, Roshan N.; Babar, M. Ali] Cyber Secur Cooperat Res Ctr, Joondalup, WA, Australia.
   [Shen, Haifeng] Australian Catholic Univ, Peter Faber Business Sch, HilstLab, Sydney, NSW, Australia.
C3 University of Adelaide; Australian Catholic University
RP Rajapakse, RN (corresponding author), Univ Adelaide, Sch Comp Sci, CREST Ctr Res Engn Software Technol, Adelaide, SA, Australia.
EM roshan.rajapakse@adelaide.edu.au; mansooreh.zahedi@adelaide.edu.au;
   ali.babar@adelaide.edu.au; Haifeng.Shen@acu.edu.au
RI Shen, Haifeng/HDN-6446-2022
OI Shen, Haifeng/0000-0002-8221-981X; Zahedi,
   Mansooreh/0000-0001-6276-9956; Rajapakse, Roshan/0000-0002-9258-5784
FU Cyber Security Research Centre Limited - Australian Government's
   Cooperative Research Centres Programme
FX The work has been supported by the Cyber Security Research Centre
   Limited whose activities are partially funded by the Australian
   Government's Cooperative Research Centres Programme. We also thank our
   colleagues at CREST and the anonymous reviewers for their useful
   feedback on this work.
CR [Anonymous], 2021, WHAT IS SHIFT LEFT T
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Bird J., 2016, DevOpsSec: Securing Software Through Continuous Delivery
   Bosch J., 2014, CONTINUOUS SOFTWARE, P3
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Bushwick S, 2020, GIANT U S COMPUTER S
   Checkmarx, 2020, INTEGRATED APPROACH
   Chen L., 2010, 14 INT C EV ASS SOFT
   Chen LP, 2015, IEEE SOFTWARE, V32, P49
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Flechais I., 2005, THESIS U COLL LONDON
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Gitlab, 2020, MAPP DEVSECOPS LANDS
   Gotimer G., 2016, CrossTalk Magazine, P13
   Howard MA, 2006, IEEE SECUR PRIV, V4, P74, DOI 10.1109/MSP.2006.84
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Jaatun Martin Gilje, 2012, Multidisciplinary Research and Practice for Information Systems. International Cross-Domain Conference and Workshop on Availability, Reliability and Security (CD-ARES 2012). Proceedings, P85, DOI 10.1007/978-3-642-32498-7_7
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Laukkanen E, 2017, INFORM SOFTWARE TECH, V82, P55, DOI 10.1016/j.infsof.2016.10.001
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Lemos R, TECHBEACON
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   Mann A, 2018, STATE DEVOPS REPORT
   Mann A, 2019, STATE DEVOPS REPORT
   Mao RF, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P450, DOI 10.1109/QRS51102.2020.00064
   Migues S, 2020, BUILDING SECURITY MA, P114
   Mohan V, 2016, PROCEEDINGS OF 2016 11TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, (ARES 2016), P542, DOI 10.1109/ARES.2016.92
   Myrbakken H, 2017, COMM COM INF SC, V770, P17, DOI 10.1007/978-3-319-67383-7_2
   Ng Alfred, 2018, EQUIFAX HACK HAPPENE
   Olszewska M., 2015, Proceedings of the 1st International Workshop on Quality-Aware DevOps, P7
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Peterson J, 2020, DYNAMIC APPL SECURIT
   Prates L, 2019, LECT NOTES BUS INF P, V359, P77, DOI 10.1007/978-3-030-29608-7_7
   Prince S, 2016, PRODUCT MANAGERSGUID
   Rafi S, 2020, IEEE ACCESS, V8, P105426, DOI 10.1109/ACCESS.2020.2998819
   Riungu-Kalliosaari L, 2016, LECT NOTES COMPUT SC, V10027, P590, DOI 10.1007/978-3-319-49094-6_44
   Rosala M., 2019, ANAL QUALITATIVE DAT
   Sanchez-Gordon M., 2020, P IEEEACM 42 INT C S, P266
   Sanchez-Gordon M., 2018, SOFTWARE PROCESS IMP, V918, P3, DOI [DOI 10.1007/978-3-030-00623-5_1, https://doi.org/10.1007/978-3-030-00623-5_1]
   Sbaraini A, 2011, BMC MED RES METHODOL, V11, DOI 10.1186/1471-2288-11-128
   Schermann G., 2016, PEERJ PREPRINTS
   Sciences S, 2020, DEVOPS ROADMAP SECUR
   Shahin M, 2017, INT SYMP EMP SOFTWAR, P111, DOI 10.1109/ESEM.2017.18
   Shahin M, 2019, EMPIR SOFTW ENG, V24, P1061, DOI 10.1007/s10664-018-9651-4
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Sharma R, 2020, WHAT IS DEVSECOPS DE
   Stahl Daniel, 2017, 2017 43rd Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P440, DOI 10.1109/SEAA.2017.8114695
   Tahaei M, 2019, 2019 4TH IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (EUROS&PW), P129, DOI 10.1109/EuroSPW.2019.00021
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   Ur Rahman AA, 2015, 2015 AGILE CONFERENCE, P1, DOI 10.1109/Agile.2015.12
   Wettinger J, 2017, COMPUT SCI-RES DEV, V32, P281, DOI 10.1007/s00450-016-0338-z
   Wettinger J, 2015, LECT NOTES COMPUT SC, V9415, P348, DOI 10.1007/978-3-319-26148-5_23
   Wettinger J, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P421, DOI 10.1109/CLOUD.2015.63
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Zahedi Mansooreh, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P41, DOI 10.1145/3383219.3383224
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
   Zhu LM, 2016, IEEE SOFTWARE, V33, P32, DOI 10.1109/MS.2016.81
NR 61
TC 24
Z9 28
U1 17
U2 59
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2022
VL 141
AR 106700
DI 10.1016/j.infsof.2021.106700
EA SEP 2021
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UZ1RK
UT WOS:000701988700004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kadri, S
   Aouag, S
   Hedjazi, D
AF Kadri, Salim
   Aouag, Sofiane
   Hedjazi, Djalal
TI MS-QuAAF: A generic evaluation framework for monitoring software
   architecture quality
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architecture; Non-Functional requirement; Quality evaluation;
   Architecture Defects; Quality Metrics; Architecture Erosion; Continuous
   Evaluation
ID DESIGN; MODEL
AB Context: In a highly competitive software market, architecture quality is one of the key differentiators between software systems. Many quantitative and qualitative evaluation frameworks were proposed to measure architecture. However, qualitative evaluation lacks statistical significance, whereas quantitative methods are designed for evaluating specific quality attributes, such as modifiability and performance. Besides, the assessment covers usually a single development stage, either at the design stage or at the implementation stage. Objective: A lack of generic frameworks that can support the assessment of a broad set of attributes and ensure continuous evaluation by covering the main development stages is addressed. Accordingly, this paper presents MS-QuAAF, a quantitative assessment framework destined for evaluating software architecture through a set of generic metrics. Method: The quantitative evaluation consists of checking architecture facets mapped to quality attributes against the early specified meta-models. This process starts by analyzing rules infringements and calculating architecture defects after accomplishing the design stage. Second, the assigned responsibilities supposed to promote stakeholders' quality attributes are assessed quantitatively at the end of the implementation stage. Third, the final evaluation report is generated. Results: We made specifically three main contributions. First, the proposed metrics within the framework are generic, which means that the framework has the ability to assess any inputted quality. Second, the framework proposes a set of evaluation services capable of assessing the architecture at two main development stages, which are design and implementation. Third, we proposed a quantitative assessment tree within the framework called the Responsibilities Satisfaction Tree (RST) that uses NFR responsibilities nodes to evaluate the implemented architectures. Conclusion: The conducted experiment showed that the framework is capable of evaluating quality attributes based on architecture specification using the proposed metrics. Furthermore, these metrics contributed to enhancing architecture quality during the development stages by notifying architects of the discovered anomalies.
C1 [Kadri, Salim; Aouag, Sofiane; Hedjazi, Djalal] Univ Batna 2, LASTIC Lab, Dept Comp Sci, Pole Fesdis 05110 RN, Fesdis Batna 05110, Algeria.
C3 University of Batna 2
RP Kadri, S (corresponding author), Univ Batna 2, LASTIC Lab, Dept Comp Sci, Pole Fesdis 05110 RN, Fesdis Batna 05110, Algeria.
EM salim8359@yahoo.fr; Sofiane.Aouag@gmail.com; Djalal.Hedjazi@gmail.com
RI Kadri, Salim/AAE-2400-2022
OI Kadri, Salim/0000-0001-6189-7286
CR Abowd G., 1997, RECOMMENDED BEST IND
   Androutsopoulos K, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P291, DOI 10.1145/1985793.1985834
   [Anonymous], 2014, ELEMENTARY DIFFERENT
   [Anonymous], 250002014 ISOIEC
   [Anonymous], 2000, ATAM: Method for Architecture Evaluation
   [Anonymous], 250002014 ISOIEC
   Bachmann F, 2005, IEE P-SOFTW, V152, P153, DOI 10.1049/ip-sen:20045037
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bass L., 2005, QUALITY ATTRIBUTES S
   Bass L., 1997, SOFTWARE ARCHITECTUR
   Bengtsson P, 2004, J SYST SOFTWARE, V69, P129, DOI 10.1016/S0164-1212(03)00080-3
   Blouin A, 2015, INFORM SOFTWARE TECH, V62, P124, DOI 10.1016/j.infsof.2015.02.007
   Carrozza G, 2018, INFORM SOFTWARE TECH, V102, P100, DOI 10.1016/j.infsof.2018.05.009
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Clements P, 2003, PROC INT CONF SOFTW, P740, DOI 10.1109/ICSE.2003.1201264
   de Silva L, 2012, J SYST SOFTWARE, V85, P132, DOI 10.1016/j.jss.2011.07.036
   Dobrica L, 2002, IEEE T SOFTWARE ENG, V28, P638, DOI 10.1109/TSE.2002.1019479
   Falessi D, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978812
   Faniyi F, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P127, DOI 10.1109/WICSA.2011.25
   Garlan David., 2010, CASCON 1 DECADE HIGH, P159, DOI DOI 10.1145/1925805.1925814
   Haderer N., 2010, Software Maintenance (ICSM), 2010 IEEE International Conference on, P1
   Holvitie J, 2018, INFORM SOFTWARE TECH, V96, P141, DOI 10.1016/j.infsof.2017.11.015
   ISO/IEC/IEEE 42030, 2019, 420302019E ISOIECIEE, P1, DOI [10.1109/IEEESTD.2019.8767001, DOI 10.1109/IEEESTD.2019.8767001]
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Jackson D, 2019, COMMUN ACM, V62, P66, DOI 10.1145/3338843
   Kadri S, 2020, INT J SOFTW INNOV, V8, P21, DOI 10.4018/IJSI.2020100102
   Kagdi H, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P80
   Kallel S, 2018, INFORM SOFTWARE TECH, V101, P16, DOI 10.1016/j.infsof.2018.05.002
   KAZMAN R, 1994, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.1994.296768
   Kazman R, 2001, PROC INT CONF SOFTW, P297, DOI 10.1109/ICSE.2001.919103
   Kazman R, 1996, IEEE SOFTWARE, V13, P47, DOI 10.1109/52.542294
   Kazman R, 2006, J SYST SOFTWARE, V79, P1207, DOI 10.1016/j.jss.2006.05.001
   Kelly T., 2004, P DEP SYST NETW 2004
   Kobayashi N., 2016, J. Internet Serv. Inf. Secur, V6, P37
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Kruchten P, 2009, IEEE SOFTWARE, V26, P36, DOI 10.1109/MS.2009.52
   Lamport L., 2002, SPECIFYING SYSTEMS T
   Lange CFJ, 2007, INT C PROGRAM COMPRE, P221
   Mary Shaw, 1996, SOFTWARE ARCHITECTUR
   Musial B., 2003, P AS PAC S INF VIS A, V24, P75
   Mylopoulos J, 1999, COMMUN ACM, V42, P31, DOI 10.1145/291469.293165
   Nakai H, 2016, PROCEEDINGS OF THE 2016 IEEE REGION 10 CONFERENCE (TENCON), P3704, DOI 10.1109/TENCON.2016.7848750
   Perry DE, 2004, PROC INT CONF SOFTW, P736, DOI 10.1109/ICSE.2004.1317512
   Riaz M, 2009, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/esem.2009.5314233
   Richters M, 2002, LECT NOTES COMPUT SC, V2263, P42
   Ruijters E, 2015, COMPUT SCI REV, V15-16, P29, DOI 10.1016/j.cosrev.2015.03.001
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   SAATY RW, 1987, MATH MODELLING, V9, P161, DOI 10.1016/0270-0255(87)90473-8
   Saaty TL, 2012, MODELS METHODS CONCE, V175, DOI DOI 10.1007/978-1-4614-3597-6
   Santos A, 2016, 2016 IEEE/RSJ INTERNATIONAL CONFERENCE ON INTELLIGENT ROBOTS AND SYSTEMS (IROS 2016), P4491, DOI 10.1109/IROS.2016.7759661
   Sobhy D, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3464305
   Subramanian N, 2016, IEEE SYST J, V10, P397, DOI 10.1109/JSYST.2013.2294628
   Svahnberg M, 2003, INT J SOFTW ENG KNOW, V13, P547, DOI 10.1142/S0218194003001421
   Tekinerdogan B., 2013, P 9 INT ACM SIGS C Q, P89
   Tsuda N, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P312, DOI 10.1109/ICSE-SEIP.2019.00045
   Villegas Norha M., 2011, 2011 ICSE S SOFTW EN, P80
   Williams L. G., 2002, Proceedings of the 3rd international workshop on Software and performance, WOSP'02, P179
   Yamamoto S, 2015, LECT NOTES COMPUT SC, V9357, P203, DOI 10.1007/978-3-319-24315-3_20
   Zhou Z, 2020, IEEE ACCESS, V8, P72395, DOI 10.1109/ACCESS.2020.2987964
NR 59
TC 2
Z9 2
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2021
VL 140
AR 106713
DI 10.1016/j.infsof.2021.106713
EA AUG 2021
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UY8FG
UT WOS:000701752600007
DA 2024-07-18
ER

PT J
AU Leithner, M
   Garn, B
   Simos, DE
AF Leithner, Manuel
   Garn, Bernhard
   Simos, Dimitris E.
TI HYDRA: Feedback-driven black-box exploitation of injection
   vulnerabilities
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Security testing; Combinatorial testing; Black-box testing; Injection
   vulnerabilities; Web application security; Cross-site scripting; SQL
   injection
ID ATTACKS; ALGORITHM; SEQUENCE; TOOL
AB Context: Injection vulnerabilities remain an omnipresent threat to web application security. These issues arise when user-supplied input is included in commands constructed by the application without applying adequate validation and filtering, permitting attackers to modify the resulting instructions. Objective: Tools used in real-world security assessments commonly employ a static list of malicious input strings to be submitted to the system under test (SUT) to gauge the presence of vulnerabilities. However, sanitizing filters may cause these simulated attacks to fail, even if they only mitigate a subset of potentially harmful values. This may result in a false sense of security. This work introduces HYDRA, a feedback-driven black-box security testing approach for the exploitation of injection vulnerabilities. It is capable of constructing inputs designed to evade such imperfect filters while allowing users to define and rank output contexts , abstract locations in the output of the SUT that are associated with desirable semantics (for instance, allowing the execution of JavaScript code). Method: Starting with an innocuous initial input string that is submitted to the SUT and appears anywhere in the output, HYDRA identifies the initial output context. It extends the input string with the goal of reaching contexts that are deemed "better" according to domain knowledge. This process continues until an "ideal" output context is reached, usually corresponding to an exploit that impacts the security of the SUT. In addition to this dynamic approach, we present a static variant based on combinatorial security testing. We instantiate our approach by targeting cross-site scripting (XSS) vulnerabilities, detailing the unique challenges posed by HTML parsing, and implement this application of HYDRA in a prototype tool. Results: The evaluation shows that our implementation is able to evade faulty filters and is effective at identifying injection vulnerabilities while remaining more flexible than existing approaches by allowing users to define desirable output contexts. Conclusion: Based on the results of our evaluation, we are confident that including the HYDRA approach in security assessments will increase the number of identified XSS vulnerabilities, particularly those that are difficult to exploit. We anticipate that an application to other classes of vulnerabilities such as SQL injections will significantly advance the state of the art.
C1 [Leithner, Manuel; Garn, Bernhard; Simos, Dimitris E.] SBA Res, Floragasse 7, A-1040 Vienna, Austria.
RP Simos, DE (corresponding author), SBA Res, Floragasse 7, A-1040 Vienna, Austria.
EM mleithner@sba-research.org; bgarn@sba-research.org;
   dsimos@sba-research.org
RI Simos, Dimitris/GWV-3053-2022
OI Simos, Dimitris/0000-0001-8588-1924; Leithner,
   Manuel/0000-0001-9433-1668; Garn, Bernhard/0000-0001-6084-211X
FU Austrian Research Promotion Agency (FFG) [865248]; COMET Competence
   Centers for Excellent Technologies by BMVIT, Austria; BMDW, Austria;
   federal state of Vienna
FX The research presented in this paper has been funded in part by the
   Austrian Research Promotion Agency (FFG) under grant 865248 (SECuring
   Web technologies with combinatorial Interaction Testing -SecWIT). The
   competence center SBA Research (SBA-K1) is funded within the framework
   of COMET Competence Centers for Excellent Technologies by BMVIT,
   Austria, BMDW, Austria, and the federal state of Vienna, managed by the
   FFG, Austria.
CR [Anonymous], 2015, Google Cloud Platform, DOI DOI 10.1111/J.1530-9290.2008.00015.X
   Aydin A, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P193, DOI 10.1109/ICST.2014.32
   Bau J, 2010, P IEEE S SECUR PRIV, P332, DOI 10.1109/SP.2010.27
   Bazzoli E, 2016, IFIP ADV INF COMM TE, V471, P243, DOI 10.1007/978-3-319-33630-5_17
   Bozic J., 2014, P 9 INT WORKSHOP AUT, P1, DOI [10.1145/2593501.2593502, DOI 10.1145/2593501.2593502]
   Bozic J, 2020, SOFTWARE QUAL J, V28, P307, DOI 10.1007/s11219-019-09469-y
   Bozic J, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P207, DOI 10.1109/QRS.2015.38
   Buehrer Gregory, 2005, P 5 INT WORKSH SOFTW, P106
   Chen JF, 2014, SERV ORIENTED COMPUT, V8, P1, DOI 10.1007/s11761-013-0139-1
   Chen SL, 2014, BMC PUBLIC HEALTH, V14, DOI 10.1186/1471-2458-14-110
   Cure53, 2020, HTML5 SEC CHEATSH
   Daloyan Warren, 2020, TAILOR
   Duchene F., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P815, DOI 10.1109/ICST.2012.181
   Duchène F, 2013, WORK CONF REVERSE EN, P252, DOI 10.1109/WCRE.2013.6671300
   Duchene Fabien., 2014, P 4 ACM C DATA APPL, P37, DOI DOI 10.1145/2557547.2557550
   FuzzDB Project, 2020, FUZZDB PROJECT FUZZD
   Garn, 2017, HARDWARE SOFTWARE VE, V629, P225, DOI [10.1007/978-3-319-70389-3_17, DOI 10.1007/978-3-319-70389-3_17]
   Garn B., 2014, P 2014 WORKSHOP JOIN, P16, DOI DOI 10.1145/2631890.2631894
   Garn B, 2019, LECT NOTES ARTIF INT, V11606, P207, DOI 10.1007/978-3-030-22999-3_19
   Garn B, 2019, IEEE ICST WORKSHOP, P46, DOI 10.1109/ICSTW.2019.00031
   Guimaraes B., 2006, SQLMAP
   Gupta C, 2020, INF SECUR J, V29, P183, DOI 10.1080/19393555.2020.1740839
   HackVault, 2018, UNL ULT XSS POL
   HCL, 2021, APPSCAN
   HIRSCHBERG DS, 1975, COMMUN ACM, V18, P341, DOI 10.1145/360825.360861
   iwrconsultancy, 2019, MAR CMS
   Jan Sadeeq., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P12, DOI [10.1145/2931037.2931042, DOI 10.1145/2931037.2931042]
   Kitsos P, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P69, DOI 10.1109/ISSRE.2015.7381800
   Kosuga Y, 2007, TWENTY-THIRD ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P107, DOI 10.1109/ACSAC.2007.20
   Kuhn D., 2013, CHAPMAN HALL CRC INN
   Kuhn D. R., 2010, NIST SPECIAL PUBLICA, V800, P142
   Leithner M, 2018, 2018 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE (WI 2018), P262, DOI 10.1109/WI.2018.00-81
   Li XW, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2541315
   Liu A., 2009, P 2009 ACM S APPL CO, P2054, DOI DOI 10.1145/1529282.1529737
   Liu M, 2019, IEEE ACCESS, V7, P182004, DOI 10.1109/ACCESS.2019.2960449
   Lv CC, 2019, ASIA PAC SOFWR ENG, P63, DOI 10.1109/APSEC48747.2019.00018
   Manico J., 2020, XSS FILTER EVASION C
   Medeiros I, 2017, I C DEPEND SYS NETWO, P551, DOI 10.1109/DSN.2017.38
   Melicher W, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23309
   Mohammadi M, 2019, IEEE INT SYMP SOFTW, P370, DOI 10.1109/ISSREW.2019.00098
   Mohammadi M, 2016, 2016 IEEE/ACM 11TH INTERNATIONAL WORKSHOP IN AUTOMATION OF SOFTWARE TEST (AST), P78, DOI [10.1145/2896921.2896929, 10.1109/AST.2016.020]
   Muyang Liu, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P286, DOI 10.1145/3395363.3397375
   MyBB Group, 2018, MYBB
   Narayanan SN, 2011, COMM COM INF SC, V157, P103
   NEEDLEMAN SB, 1970, J MOL BIOL, V48, P443, DOI 10.1016/0022-2836(70)90057-4
   OWASP, 2020, JUIC SHOP
   Pei Wang, 2021, 2021 IEEE/ACM 43rd International Conference on Software Engineering (ICSE), P1360, DOI 10.1109/ICSE43902.2021.00123
   Pietraszek T, 2006, LECT NOTES COMPUT SC, V3858, P124
   PortSwigger, 2020, CROSS SITE SCRIPTING
   PortSwigger Ltd, 2021, BURP SUIT
   Ray Donald, 2014, Information Security. 17th International Conference, ISC 2014. Proceedings: LNCS 8783, P425, DOI 10.1007/978-3-319-13257-0_26
   Rodríguez GE, 2020, COMPUT NETW, V166, DOI 10.1016/j.comnet.2019.106960
   Muñoz FR, 2018, J SUPERCOMPUT, V74, P6598, DOI 10.1007/s11227-017-1981-2
   Sarmah U, 2018, J NETW COMPUT APPL, V118, P113, DOI 10.1016/j.jnca.2018.06.004
   Sathyanarayan S, 2014, IEEE INT C ENG COMP, P154, DOI 10.1109/ICECCS.2014.29
   Simos DE, 2019, IEEE ICST WORKSHOP, P122, DOI 10.1109/ICSTW.2019.00040
   Simos DE, 2016, COMPUTER, V49, P80, DOI 10.1109/MC.2016.314
   Sirisang W, 2017, INT COMPUT SCI ENG, P19, DOI 10.1109/ICSEC.2017.8443774
   Spath C., 2016, 10 USENIX WORKSH OFF
   Steinhauser A., 2020, DIGIT THREATS RES PR, V1
   Steinhauser A, 2019, SOFTWARE PRACT EXPER, V49, P130, DOI 10.1002/spe.2649
   Su ZD, 2006, ACM SIGPLAN NOTICES, V41, P372, DOI 10.1145/1111320.1111070
   TestLink Development Team, 2020, TESTLINK
   The MITRE Corporation, 2021, 2021 CWE TOP 25 MOST
   w3af.org, 2013, W3AF
   W3C, 2011, 8 2 PARS HTML DOC
   Wagner M, 2020, IEEE ICST WORKSHOP, P191, DOI 10.1109/ICSTW50294.2020.00041
   Wang Y, 2003, PROC INT CONF DATA, P519, DOI 10.1109/ICDE.2003.1260818
   Weinberger J, 2011, LECT NOTES COMPUT SC, V6879, P150, DOI 10.1007/978-3-642-23822-2_9
   Williams Justin A., 2013, Rhymin' and Stealin': Musical Borrowing in Hip-Hop
   Yanpeng Cui, 2020, ICMLC 2020: Proceedings of the 2020 12th International Conference on Machine Learning and Computing, P443, DOI 10.1145/3383972.3384027
   Zhang L, 2019, IEEE T RELIAB, V68, P1470, DOI 10.1109/TR.2019.2910285
NR 72
TC 5
Z9 6
U1 1
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2021
VL 140
AR 106703
DI 10.1016/j.infsof.2021.106703
EA AUG 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UY8FG
UT WOS:000701752600009
DA 2024-07-18
ER

PT J
AU Leite, L
   Pinto, G
   Kon, F
   Meirelles, P
AF Leite, Leonardo
   Pinto, Gustavo
   Kon, Fabio
   Meirelles, Paulo
TI The organization of software teams in the quest for continuous delivery:
   A grounded theory approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE DevOps; Continuous delivery; Release process; Software teams
AB Context: To accelerate time-to-market and improve customer satisfaction, software-producing organizations have adopted continuous delivery practices, impacting the relations between development and infrastructure professionals. Yet, no substantial literature has substantially tackled how the software industry structures the organization of development and infrastructure teams. Objective: In this study, we investigate how software-producing organizations structure their development and infrastructure teams, specifically how is the division of labor among these groups and how they interact. Method: After brainstorming with 7 DevOps experts to better formulate our research and procedures, we collected and analyzed data from 37 semi-structured interviews with IT professionals, following Grounded Theory guidelines. Results: After a careful analysis, we identified four common organizational structures: (1) siloed departments, (2) classical DevOps, (3) cross-functional teams, and (4) platform teams. We also observed that some companies are transitioning between these structures. Conclusion: The main contribution of this study is a theory in the form of a taxonomy that organizes the found structures along with their properties. This theory could guide researchers and practitioners to think about how to better structure development and infrastructure professionals in software-producing organizations.
C1 [Leite, Leonardo; Kon, Fabio; Meirelles, Paulo] Univ Sao Paulo, Sao Paulo, SP, Brazil.
   [Leite, Leonardo] Fed Serv Data Proc Serpro, Brasilia, DF, Brazil.
   [Pinto, Gustavo] Fed Univ Para UFPA, Belem, Para, Brazil.
   [Meirelles, Paulo] Fed Univ ABC UFABC, Santo Andre, SP, Brazil.
C3 Universidade de Sao Paulo; Universidade Federal do Para; Universidade
   Federal do ABC (UFABC)
RP Leite, L (corresponding author), Univ Sao Paulo, Sao Paulo, SP, Brazil.
EM leofl@ime.usp.br
RI Meirelles, Paulo/AAC-8605-2019; Kon, Fabio/H-2743-2012
OI Meirelles, Paulo/0000-0002-8923-2814; Kon, Fabio/0000-0003-3888-7340;
   Ferreira Leite, Leonardo Alexandre/0000-0001-5762-5413
FU Brazilian Service of Federal Data Processing (Serpro); CNPq
   [309032/2019-9, 465446/2014-0]; CAPES [001]; FAPESP [14/50937-1,
   15/24485-9]
FX We thank the support of the Brazilian Service of Federal Data
   Pro-cessing (Serpro) , CNPq proc. 309032/2019-9 and proc. 465446/2014-0,
   CAPES - Finance Code 001, and FAPESP proc. 14/50937-1 and proc.
   15/24485-9.
CR Adams W.C., 2010, HDB PRACTICAL PROGRA, V3rd, P365
   ANDERSON PA, 1983, ADMIN SCI QUART, V28, P201, DOI 10.2307/2392618
   [Anonymous], 2014, SPOTIFY ENG CULTUR 1
   [Anonymous], 2012, THERES NO SUCH THING
   Beyer B., 2016, Site reliability engineering: How Google runs production systems
   Chen LP, 2015, IEEE SOFTWARE, V32, P49
   Cukier Daniel, 2018, Journal of Innovation and Entrepreneurship, V7, P14, DOI [DOI 10.1186/S13731-018-0091-6, 10.1186/s13731-018-0091-6]
   Davis J., 2016, EFFECTIVE DEVOPS
   Debois P., 2008, AGILE 2008 TORONTO
   Dodou D, 2014, COMPUT HUM BEHAV, V36, P487, DOI 10.1016/j.chb.2014.04.005
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Forsgren N., 2017, 2017 STATE DEVOPS RE
   Forsgren N, 2020, AMCIS 2020 PROCEEDINGS
   Forsgren Nicole., 2018, ACCELERATE SCI LEAN, V1st
   Georgieva S., 2008, Electronic Journal of Business Research Methods, V6, P43
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Goldratt EliyahuM., 2014, The Goal: a Process of Ongoing Improvement
   GUBA EG, 1981, ECTJ-EDUC COMMUN TEC, V29, P75
   Hilton M, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P191, DOI 10.1145/3183519.3183527
   Hoda R, 2017, PROC INT CONF SOFTW, P141, DOI 10.1109/ICSE.2017.21
   Huberman A.M., 2013, Qualitative data analysis: A methods sourcebook, V3rd
   Humble Jez, 2011, Cutter IT Journal, V24, P6
   Leite L., 2020, IEEE ACM 42 INT C SO, P505, DOI 10.1145/3387940.3391455
   Leite L, 2020, PROC INT CONF SOFTW, P296, DOI 10.1145/3377812.3390807
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   Luz WP, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.083
   Mann A., 2018, STATE DEVOPS REPORT
   Mockus A, 2010, Proc. of the 18th Symposium on the Foundations of Software Engineering (FSE), P117
   Morris K., 2016, Infrastructure as Code: Managing Servers in the Cloud
   Neely S, 2013, 2013 AGILE CONFERENCE (AGILE), P121, DOI 10.1109/AGILE.2013.17
   de França BBN, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P53, DOI 10.1145/2973839.2973845
   Nybom K., 2016, INT C AG SOFTW DEV, P131, DOI [10.1007/978-3-319-33515-5_11, DOI 10.1007/978-3-319-33515-5_11]
   OHanlon C., 2006, Queue, P14, DOI DOI 10.1145/1142055.1142065
   Oliveira N, 2012, AUTOMATED ORG DEV ST
   Olsson HH, 2012, EUROMICRO CONF PROC, P392, DOI 10.1109/SEAA.2012.54
   PINFIELD LT, 1986, ADMIN SCI QUART, V31, P365, DOI 10.2307/2392828
   Ralph P, 2019, IEEE T SOFTWARE ENG, V45, P712, DOI 10.1109/TSE.2018.2796554
   Santos RES, 2016, PROC INT CONF SOFTW, P971, DOI 10.1145/2884781.2884837
   Schermann G., 2016, PEERJ PREPRINTS, V4, DOI DOI 10.7287/PEERJ.PREPRINTS.1889V1
   Schermann G, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Shahin M., 2017, P 21 INT C EV ASS SO, P384
   Shahin M, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES, ICSSP, P175, DOI 10.1145/3379177.3388891
   Shahin M, 2019, EMPIR SOFTW ENG, V24, P1061, DOI 10.1007/s10664-018-9651-4
   Siqueira R, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P6, DOI 10.1109/MS.2018.111095426
   Sirmon DG, 2011, J MANAGE, V37, P1390, DOI 10.1177/0149206310385695
   Skelton M., 2019, Team Topologies: Organizing Business and Technology Teams for Fast Flow
   Skelton Matthew, 2013, DEVOPS TOPOLOGIES
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Strandberg P.E, 2019, INT SYMP EMP SOFTWAR, DOI 10.1109/ESEM.2019.8870192
   Waterman M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P347, DOI 10.1109/ICSE.2015.54
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 52
TC 9
Z9 9
U1 2
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2021
VL 139
AR 106672
DI 10.1016/j.infsof.2021.106672
EA JUN 2021
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA US8LY
UT WOS:000697678300009
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Chakraborty, P
   Shahriyar, R
   Iqbal, A
   Uddin, G
AF Chakraborty, Partha
   Shahriyar, Rifat
   Iqbal, Anindya
   Uddin, Gias
TI How do developers discuss and support new programming languages in
   technical Q&A site? An empirical study of Go, Swift, and Rust in Stack
   Overflow
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Stack Overflow; Swift; Go; Rust; New language; Evolution
AB Context: New programming languages (e.g., Swift, Go, Rust, etc.) are being introduced to provide a better opportunity for the developers to make software development robust and easy. At the early stage, a programming language is likely to have resource constraints that encourage the developers to seek help frequently from experienced peers active in Question-Answering (QA) sites such as Stack Overflow (SO).
   Objective: In this study, we have formally studied the discussions on three popular new languages introduced after the inception of SO (2008) and match those with the relevant activities in GitHub whenever appropriate. For that purpose, we have mined 4,17,82,536 questions and answers from SO and 7,846 issue information along with 6,60,965 repository information from Github. Initially, the development of new languages is relatively slow compared to mature languages (e.g., C, C++, Java). The expected outcome of this study is to reveal the difficulties and challenges faced by the developers working with these languages so that appropriate measures can be taken to expedite the generation of relevant resources.
   Method: We have used the Latent Dirichlet Allocation (LDA) method on SO's questions and answers to identify different topics of new languages. We have extracted several features of the answer pattern of the new languages from SO (e.g., time to get an accepted answer, time to get an answer, etc.) to study their characteristics. These attributes were used to identify difficult topics. We explored the background of developers who are contributing to these languages. We have created a model by combining Stack Overflow data and issues, repository, user data of Github. Finally, we have used that model to identify factors that affect language evolution.
   Results: The major findings of the study are: (i) migration, data and data structure are generally the difficult topics of new languages, (ii) the time when adequate resources are expected to be available vary from language to language, (iii) the unanswered question ratio increases regardless of the age of the language, and (iv) there is a relationship between developers' activity pattern and the growth of a language.
   Conclusion: We believe that the outcome of our study is likely to help the owner/sponsor of these languages to design better features and documentation. It will also help the software developers or students to prepare themselves to work on these languages in an informed way.
C1 [Chakraborty, Partha; Shahriyar, Rifat; Iqbal, Anindya] Bangladesh Univ Engn & Technol, Dhaka, Bangladesh.
   [Uddin, Gias] Univ Calgary, Calgary, AB, Canada.
C3 Bangladesh University of Engineering & Technology (BUET); University of
   Calgary
RP Uddin, G (corresponding author), Univ Calgary, Calgary, AB, Canada.
EM gias.uddin@ucalgary.ca
RI Shahriyar, Rifat/HJA-5303-2022; Chakraborty, Partha/HHN-7199-2022
OI Chakraborty, Partha/0000-0001-5965-615X
CR Abdellatif A., 2020, P 17 INT C MIN SOFTW
   Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   [Anonymous], 2017, P 11 INT C WEB SOC M
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   Badashian A.S., 2014, CASCON, P19
   Bagherzadeh M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P432, DOI 10.1145/3338906.3338939
   BAJAJ K, 2014, 11 WORK C MIN SOFTW
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bhat V, 2014, 2014 PROCEEDINGS OF THE IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM 2014), P328, DOI 10.1109/ASONAM.2014.6921605
   Bissyandé TF, 2013, PROC INT SYMP SOFTW, P188, DOI 10.1109/ISSRE.2013.6698918
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Chakraborty P., 2019, 2019 IEEE 43 ANN COM
   EFRON B, 1986, J AM STAT ASSOC, V81, P461, DOI 10.2307/2289236
   Feng Changyong, 2014, Shanghai Arch Psychiatry, V26, P105, DOI 10.3969/j.issn.1002-0829.2014.02.009
   Harrell FE, 2015, SPRINGER SER STAT, DOI 10.1007/978-3-319-19425-7
   Hart K., 2014, P 7 INT WORKSH COOP
   Kushida KE, 2015, J IND COMPET TRADE, V15, P5, DOI 10.1007/s10842-014-0188-y
   Maloney J., 2010, ACM T COMPUT EDUC, V10, P16, DOI DOI 10.1145/1868358.1868363
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Nadi S, 2016, PROC INT CONF SOFTW, P935, DOI 10.1145/2884781.2884790
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   Rasheed F, 2011, IEEE T KNOWL DATA EN, V23, P79, DOI 10.1109/TKDE.2010.76
   Rebouças M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P634, DOI 10.1109/SANER.2016.66
   Romano D, 2013, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.2013.49
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Srba I, 2016, IEEE SOFTWARE, V33, P80, DOI 10.1109/MS.2016.34
   Stackoverflow, 2019, STACK SURV 2019
   Syed S, 2017, PR INT CONF DATA SC, P165, DOI 10.1109/DSAA.2017.61
   Vasilescu B, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P188, DOI 10.1109/SocialCom.2013.35
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1857, DOI 10.1109/TSE.2019.2937083
   Wikipedia contributors, 2019, TIM PROGR LANG
   Xiong Y., 2017, SEKE
   Zagalsky A., 2016, P 13 INT WORKSH MIN
NR 33
TC 13
Z9 13
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2021
VL 137
AR 106603
DI 10.1016/j.infsof.2021.106603
EA APR 2021
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SQ8FQ
UT WOS:000660586400005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Qu, Y
   Chi, JL
   Yin, H
AF Qu, Yu
   Chi, Jianlei
   Yin, Heng
TI Leveraging developer information for efficient effort-aware bug
   prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software bug prediction; Defect prediction; Effort-aware bug prediction;
   Developer information; Unsupervised model; Empirical study
ID SOFTWARE; NUMBER
AB Context: Software bug prediction techniques can provide informative guidance in software engineering practices. Over the past 15 years, developer information has been intensively used in bug prediction as features or basic data source to construct other useful models.
   Objective: Further leverage developer information from a new and straightforward perspective to improve effort-aware bug prediction.
   Methods: We propose to investigate the direct relations between the number of developers and the probability for a file to be buggy. Based on an empirical study on nine open-source Java systems with 32 versions, we observe a widely-existed and interesting tendency: when there are more developers working on a source file, there will be a stronger possibility for this file to be buggy. Based on the observed tendency, we propose an unsupervised algorithm and a supervised equation both called top-dev to improve effort-aware bug prediction. The key idea is to prioritize the ranking of files, whose number of developers is large, in the suspicious file list generated by effort-aware models.
   Results: Experimental results show that the proposed top-dev algorithm and equation significantly outperform the unsupervised and supervised baseline models (ManualUp, R-ad, R-dd, R-ee, CBS+, and top-core). Moreover, the unsupervised top-dev algorithm is comparable or superior to existing supervised baseline models.
   Conclusion: The proposed approaches are very useful in effort-aware bug prediction practices. Practitioners can use the top-dev algorithm to generate a high-quality and informative suspicious file list without training complex machine learning classifiers. On the other hand, when building supervised bug prediction model, the best practice is to combine existing models with the top-dev equation.
C1 [Qu, Yu; Chi, Jianlei; Yin, Heng] Univ Calif Riverside, Dept Comp Sci & Engn, Riverside, CA 92521 USA.
   [Chi, Jianlei] Xi An Jiao Tong Univ, Minist Educ, Key Lab Intelligent Network & Network Secur, Xian 710049, Shaanxi, Peoples R China.
C3 University of California System; University of California Riverside;
   Xi'an Jiaotong University
RP Qu, Y (corresponding author), Univ Calif Riverside, Dept Comp Sci & Engn, Riverside, CA 92521 USA.
EM yuq@ucr.edu; chijianlei@stu.xjtu.edu.cn; hengy@ucr.edu
RI Qu, Yu/GQA-5775-2022; Qu, Yu/AAD-9426-2020
OI Qu, Yu/0000-0002-1400-6740; Yin, Heng/0000-0002-8942-7742
FU National Science Foundation [1719175]; Office of Naval Research
   [N00014-17-1-2893]; National Natural Science Foundation of China
   [61602369]; Direct For Computer & Info Scie & Enginr [1719175] Funding
   Source: National Science Foundation; Division Of Computer and Network
   Systems [1719175] Funding Source: National Science Foundation
FX We would like to thank the anonymous reviewers for their insightful
   comments and valuable suggestions for improving this paper. This work
   was supported in part by National Science Foundation under Grant No.
   1719175, Office of Naval Research under Award No. N00014-17-1-2893, and
   National Natural Science Foundation of China under Grant No. 61602369.
   Any opinions, findings, and conclusions or recommendations expressed in
   this paper are those of the authors and do not necessarily reflect the
   views of the funding agencies.
CR Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   [Anonymous], 2007, Proceedings of the 3rd International Workshop on Predictor Models in Software Engineering
   [Anonymous], 2006, NIPS
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Bell RM, 2013, EMPIR SOFTW ENG, V18, P478, DOI 10.1007/s10664-011-9178-4
   Benni KE, 2018, IEEE T SOFTWARE ENG, V44, P534, DOI 10.1109/TSE.2017.2731766
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Brandes U, 2001, J MATH SOCIOL, V25, P163, DOI 10.1080/0022250X.2001.9990249
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen X, 2020, IEEE T RELIAB, V69, P70, DOI 10.1109/TR.2019.2924932
   Chen X, 2019, INFORM SOFTWARE TECH, V106, P161, DOI 10.1016/j.infsof.2018.10.003
   Devlin J., 2018, BERT PRE TRAINING DE
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Di Nucci D, 2015, PROC IEEE INT CONF S, P241, DOI 10.1109/ICSM.2015.7332470
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Guo YC, 2018, PROC IEEE ACM INT C, P325, DOI 10.1145/3183440.3194992
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Dam HK, 2021, IEEE T SOFTWARE ENG, V47, P67, DOI 10.1109/TSE.2018.2881961
   Hosmer DW, 2013, WILEY SER PROBAB ST, P1
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Kamei Y, 2010, PROC IEEE INT CONF S
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Le THM, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3383458
   Lee T, 2016, IEEE T SOFTWARE ENG, V42, P1015, DOI 10.1109/TSE.2016.2550458
   Ma WWY, 2016, INFORM SOFTWARE TECH, V69, P50, DOI 10.1016/j.infsof.2015.09.001
   Matsumoto S, 2010, P 6 INT C PREDICTIVE, P1, DOI DOI 10.1145/1868328.1868356
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Meneely A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P281, DOI 10.1145/1985793.1985832
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Monden A, 2013, IEEE T SOFTWARE ENG, V39, P1345, DOI 10.1109/TSE.2013.21
   Ni C, 2022, IEEE T SOFTWARE ENG, V48, P786, DOI 10.1109/TSE.2020.3001739
   Osman H, 2017, Proceedings of the 13th International Conference on Predictive Models and Data Analytics in Software Engineering, P107
   Panichella A, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1077, DOI 10.1145/2908812.2908938
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Qu Y, 2021, IEEE T SOFTWARE ENG, V47, P348, DOI 10.1109/TSE.2019.2892959
   Shannon C. E., 1948, BELL SYST TECH J, V27, P379, DOI DOI 10.1002/J.1538-7305.1948.TB01338.X
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Subelj L, 2011, PHYSICA A, V390, P2968, DOI 10.1016/j.physa.2011.03.036
   Suter BW, 1990, IEEE Trans. Neural Netw, V1, P291
   Suykens JAK, 1999, NEURAL PROCESS LETT, V9, P293, DOI 10.1023/A:1018628609742
   Tang YM, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P27, DOI 10.1109/QRS.2015.15
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Theisen C, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106204
   Vaswani A, 2017, ADV NEUR IN, V30
   Weyuker EJ, 2008, EMPIR SOFTW ENG, V13, P539, DOI 10.1007/s10664-008-9082-8
   Wolf T, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING: SYSTEM DEMONSTRATIONS, P38
   Wu YS, 2014, INT CONF SOFTW SECUR, P11, DOI 10.1109/SERE.2014.14
   Xi Tan, 2011, 2011 18th Working Conference on Reverse Engineering, P244, DOI 10.1109/WCRE.2011.37
   Yan M, 2017, INT SYMP EMP SOFTWAR, P344, DOI 10.1109/ESEM.2017.48
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yang YB, 2015, IEEE T SOFTWARE ENG, V41, P331, DOI 10.1109/TSE.2014.2370048
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
NR 58
TC 14
Z9 14
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2021
VL 137
AR 106605
DI 10.1016/j.infsof.2021.106605
EA APR 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SQ8FQ
UT WOS:000660586400007
OA Bronze
DA 2024-07-18
ER

PT J
AU Montandon, JE
   Valente, MT
   Silva, LL
AF Montandon, Joao Eduardo
   Valente, Marco Tulio
   Silva, Luciana L.
TI Mining the Technical Roles of GitHub Users
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technical roles; Technical expertise; Developers profiles; Machine
   learning; GitHub
AB Context:Modern software development demands high levels of technical specialization. These conditions make IT companies focus on creating cross-functional teams, such as frontend, backend, and mobile developers. In this context, the success of software projects is highly influenced by the expertise of these teams in each field.
   Objective:In this paper, we investigate machine-learning based approaches to automatically identify the technical roles of open source developers.
   Method:For this, we first build a ground truth with 2284 developers labeled in six different roles: backend, frontend, full-stack, mobile, devops, and data science. Then, we build three different machine-learning models used to identify these roles.
   Results:These models presented competitive results for precision (0.88) and AUC (0.89) when identifying all six roles. Moreover, our results show that programming-languages are the most relevant features to predict the investigated roles.
   Conclusion:The approach proposed in this paper can assist companies during their hiring process, such as by recommending developers with the expertise required by job positions.
C1 [Montandon, Joao Eduardo] Univ Fed Minas Gerais, Tech Coll COLTEC, Belo Horizonte, MG, Brazil.
   [Valente, Marco Tulio] Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, MG, Brazil.
   [Silva, Luciana L.] Fed Inst Minas Gerais, Dept Comp Sci, Ouro Branco, Brazil.
C3 Universidade Federal de Minas Gerais; Universidade Federal de Minas
   Gerais; Instituto Federal de Educacao, Ciencia e Tecnologia de Minas
   Gerais (IFMG)
RP Montandon, JE (corresponding author), Univ Fed Minas Gerais, Tech Coll COLTEC, Belo Horizonte, MG, Brazil.
EM joao.montandon@dcc.ufmg.br; mtov@dcc.ufmg.br;
   luciana.lourdes.silva@ifmg.edu.br
OI Montandon, Joao Eduardo/0000-0002-3371-7353; Valente, Marco
   Tulio/0000-0002-8180-7548
CR Agrawal K, 2016, IEEE INT ENTERP, P249, DOI 10.1109/EDOCW.2016.7584383
   Alonso Omar., 2008, Proceedings of the 2008 International Working Conference on Mining Software Repositories, P125
   [Anonymous], 1995, MYTHICAL MAN MONTH
   [Anonymous], 2013, P 16 C COMP SUPP COO
   [Anonymous], 2016, INT C SOFTWARE ENG K
   [Anonymous], 2007, INT WORKSH MIN SOFTW
   [Anonymous], 1998, LEARNING TEXT CATEGO
   [Anonymous], 2006, C EM ANT CEAS
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Avelino G, 2019, SCI COMPUT PROGRAM, V1
   Avelino Guilherme, 2017, IFIP INT C OPEN SOUR, P151, DOI DOI 10.1007/978-3-319-57735-7_15
   Bao LF, 2017, IEEE WORK CONF MIN S, P170, DOI 10.1109/MSR.2017.58
   Behroozi M, 2019, S VIS LANG HUM CEN C, P15, DOI [10.1109/vlhcc.2019.8818836, 10.1109/VLHCC.2019.8818836]
   Beyer S, 2018, INT C PROGRAM COMPRE, P211, DOI 10.1145/3196321.3196333
   Bhattacharya P, 2014, PROC IEEE INT CONF S, P11, DOI 10.1109/ICSME.2014.23
   Boutell MR, 2004, PATTERN RECOGN, V37, P1757, DOI 10.1016/j.patcog.2004.03.009
   Breiman L., 2001, Mach. Learn., V45, P5
   Capiluppi A, 2013, IEEE SOFTWARE, V30, P45, DOI 10.1109/MS.2012.169
   Chapelle O., 2006, SEMISUPERVISED LEARN
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Coelho J, 2018, INT S EMP SOFTW ENG, P14
   Constantinou E, 2016, ASIA PAC SOFWR ENG, P365, DOI [10.1109/APSEC.2016.061, 10.1109/APSEC.2016.32]
   Constantinou E, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P63, DOI 10.1109/SEAA.2016.18
   da Silva JR, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P409, DOI 10.1109/SANER.2015.7081851
   DeMarco T, 1999, PEOPLEWARE PRODUCTIV
   Dembczynski K, 2012, MACH LEARN, V88, P5, DOI 10.1007/s10994-012-5285-8
   Diehl S., 2018, S FDN SOFTW ENG FSE, P1
   Ford D, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2017), P43, DOI 10.1109/CHASE.2017.8
   Goldberg Y, 2017, SYNTHESIS LECT HUMAN
   Greene GJ, 2016, IEEE INT CONF AUTOM, P804, DOI 10.1145/2970276.2970285
   Hauff C, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P362, DOI 10.1109/MSR.2015.41
   Herrera F., 2016, MULTILABEL CLASSIFIC
   Honsel V., 2016, P 12 INT C PRED MOD, P1
   Joblin M, 2017, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2017.23
   Kagdi H, 2008, PROC IEEE INT CONF S, P157, DOI 10.1109/ICSM.2008.4658064
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Litecky C, 2010, IEEE SOFTWARE, V27, P78, DOI 10.1109/MS.2009.150
   Luaces O, 2012, PROG ARTIF INTELL, V1, P303, DOI 10.1007/s13748-012-0030-x
   Madjarov G, 2012, PATTERN RECOGN, V45, P3084, DOI 10.1016/j.patcog.2012.03.004
   Marlow J, 2013, C COMP SUPP COOP WOR, P1
   MARON ME, 1961, J ACM, V8, P404, DOI 10.1145/321075.321084
   McDowell Gayle Laakmann, 2015, Cracking the Coding Interview: 189 Programming Questions and Solutions
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Montalban J, 2019, IEEE INT SYM BROADB, DOI [10.1109/bmsb47279.2019.8971919, 10.1109/bmsb47279.2019.8971906]
   Montandon J.E, 2021, INF SOFTW TECHNOL, V129, P1
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Prabhakar B, 2005, COMMUN ACM, V48, P91, DOI 10.1145/1089107.1089110
   Provost F, 2001, MACH LEARN, V42, P203, DOI 10.1023/A:1007601015854
   Provost F, 2013, DATA SCI BUSINESS WH
   Read J, 2011, MACH LEARN, V85, P333, DOI 10.1007/s10994-011-5256-5
   Robles G, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P167, DOI 10.1109/MSR.2009.5069497
   Sarma A, 2016, INT CONF GLOBAL SOFT, P1, DOI 10.1109/ICGSE.2016.35
   Saxena R, 2017, CSCW'17: COMPANION OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P299
   Shirabad JS, 2003, PROC IEEE INT CONF S, P95
   Teyton C, 2014, INT C EV ASS SOFTW E, P1
   Teyton C, 2013, WORK CONF REVERSE EN, P202, DOI 10.1109/WCRE.2013.6671295
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Treude C., 2013, ACM COMPUTER SUPPORT, P103
   Tsoumakas G, 2010, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, SECOND EDITION, P667, DOI 10.1007/978-0-387-09823-4_34
   Tsoumakas G, 2011, IEEE T KNOWL DATA EN, V23, P1079, DOI 10.1109/TKDE.2010.164
   Vajda S, 2015, PATTERN RECOGN LETT, V58, P23, DOI 10.1016/j.patrec.2015.02.001
   Venkataramani R, 2013, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'13 COMPANION), P97
   Wan Y, 2018, WORLD WIDE WEB, V21, P1523, DOI 10.1007/s11280-018-0526-9
   Wang ZZ, 2017, IEEE INT CONF AUTOM, P717, DOI 10.1109/ASE.2017.8115682
   Ye YW, 2003, PROC INT CONF SOFTW, P419
   Zhang ML, 2014, IEEE T KNOWL DATA EN, V26, P1819, DOI 10.1109/TKDE.2013.39
   Zhou C, 2018, 2018 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P319, DOI 10.1109/VLHCC.2018.8506577
NR 68
TC 12
Z9 12
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2021
VL 131
AR 106485
DI 10.1016/j.infsof.2020.106485
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LB
UT WOS:000614250000005
DA 2024-07-18
ER

PT J
AU Ampatzoglou, A
   Mittas, N
   Tsintzira, AA
   Ampatzoglou, A
   Arvanitou, EM
   Chatzigeorgiou, A
   Avgeriou, P
   Angelis, L
AF Ampatzoglou, Areti
   Mittas, Nikolaos
   Tsintzira, Angeliki-Agathi
   Ampatzoglou, Apostolos
   Arvanitou, Elvira-Maria
   Chatzigeorgiou, Alexander
   Avgeriou, Paris
   Angelis, Lefteris
TI Exploring the Relation between Technical Debt Principal and Interest: An
   Empirical Approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID MAINTAINABILITY; IMPACT
AB Context: The cornerstones of technical debt (TD) are two concepts borrowed from economics: principal and interest. Although in economics the two terms are related, in TD there is no study on this direction so as to validate the strength of the metaphor.
   Objective: We study the relation between Principal and Interest, and subsequently dig further into the 'ingredients' of each concept (since they are multi-faceted). In particular, we investigate if artifacts with similar levels of TD Principal exhibit a similar amount of TD Interest, and vice-versa.
   Method: To achieve this goal, we performed an empirical study, analyzing the dataset using the Mantel test. Through the Mantel test, we examined the relation between TD Principal and Interest, and identified aspects that are able to denote proximity of artifacts, with respect to TD. Next, through Linear Mixed Effects (LME) modelling we studied the generalizability of the results.
   Results: The results of the study suggest that TD Principal and Interest are related, in the sense that classes with similar levels of TD Principal tend to have similar levels of Interest. Additionally, we have reached the conclusion that aggregated measures of TD Principal or Interest are more capable of identifying proximate artifacts, compared to isolated metrics. Finally, we have provided empirical evidence on the fact that improving certain quality properties (e.g., size and coupling) should be prioritized while ranking refactoring opportunities in the sense that high values of these properties are in most of the cases related to artifacts with higher levels of TD Principal.
   Conclusions: The findings shed light on the relations between the two concepts, and can be useful for both researchers and practitioners: the former can get a deeper understanding of the concepts, whereas the latter can use our findings to guide their TD management processes such as prioritization and repayment.
C1 [Ampatzoglou, Areti; Avgeriou, Paris] Univ Groningen, Inst Math Comp Sci & AI, Dept Comp Sci, Groningen, Netherlands.
   [Mittas, Nikolaos] Int Hellen Univ, Dept Chem, Kavala, Greece.
   [Tsintzira, Angeliki-Agathi; Ampatzoglou, Apostolos; Arvanitou, Elvira-Maria; Chatzigeorgiou, Alexander] Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
   [Angelis, Lefteris] Aristotle Univ Thessaloniki, Sch Informat, Thessaloniki, Greece.
C3 University of Groningen; University of Macedonia; Aristotle University
   of Thessaloniki
RP Ampatzoglou, A (corresponding author), Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
EM areti.ampatzoglou@rug.nl; nmittas@chem.ihu.gr;
   angeliki.agathi.tsintzira@gmail.com; a.ampatzoglou@uom.edu.gr;
   earvanitoy@gmail.com; achat@uom.edu.gr; paris@cs.rug.nl; lef@csd.auth.gr
RI Mittas, Nikolaos/AAL-6645-2021; Chatzigeorgiou, Alexandros/AAL-6077-2021
OI Avgeriou, Paris/0000-0002-7101-0754; Mittas,
   Nikolaos/0000-0003-3061-7864
FU European Union Horizon 2020 research and innovation programme [780572]
FX Work reported in this paper has received funding from the European Union
   Horizon 2020 research and innovation programme under grant agreement No.
   780572 (project: SDK4ED).
CR Allman E, 2012, COMMUN ACM, V55, P50, DOI 10.1145/2160718.2160733
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Ampatzoglou Ar., 2016, 8 INT WORKSH MAN TEC
   Ampatzoglou A, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P115, DOI 10.1145/3194164.3194175
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   Ampatzoglou Areti., 2015, Proceedings of the Fifth International Symposium on Business Modeling and Software Design - Volume 1: BMSD, P75, DOI DOI 10.5220/0005885700750085
   [Anonymous], 2006, MIXED EFFECTS MODELS
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], 2012, SIGSOFT Softw Eng Notes, DOI DOI 10.1145/2108144.2108151
   Besker T, 2017, PROC IEEE INT CONF S, P13, DOI 10.1109/ICSME.2017.42
   Chatzigeorgiou A, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P53, DOI 10.1109/MTD.2015.7332625
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Conejero JM, 2018, J SYST SOFTWARE, V142, P92, DOI 10.1016/j.jss.2018.04.035
   Cunningham W., 1992, 7 INT C OBJ OR PORGR
   Di Penta M, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P205
   Evans J.D., 1996, Straightforward statistics for the behavioral sciences
   García-Valls M, 2019, INFORM SOFTWARE TECH, V107, P3, DOI 10.1016/j.infsof.2018.10.005
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   ISO/IEC, 2001, Technical Report, V1st
   Kazman R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P179, DOI 10.1109/ICSE.2015.146
   Keung JW, 2008, IEEE T SOFTWARE ENG, V34, P471, DOI 10.1109/TSE.2008.34
   Kosti M.V., 2017, 43 EUR C SOFTW ENG A
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Letouzey JL, 2012, IEEE SOFTWARE, V29, P44, DOI 10.1109/MS.2012.129
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   MacCormack A, 2016, J SYST SOFTWARE, V120, P170, DOI 10.1016/j.jss.2016.06.007
   MANTEL N, 1967, CANCER RES, V27, P209
   Martini A, 2018, SCI COMPUT PROGRAM, V163, P42, DOI 10.1016/j.scico.2018.03.007
   Menzies T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P327
   Misra SC, 2005, SOFTWARE QUAL J, V13, P297, DOI 10.1007/s11219-005-1754-7
   Nugroho A, 2011, P 2 WORKSH MAN TECHN, P1
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Riaz M, 2009, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/esem.2009.5314233
   Rovegård P, 2008, IEEE T SOFTWARE ENG, V34, P516, DOI 10.1109/TSE.2008.32
   Runeson P., 2012, SOFTWARE ENG GUIDELI
   Schmid K, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P63, DOI 10.1109/MTD.2013.6608681
   Schnappinger M, 2019, INT C PROGRAM COMPRE, P243, DOI 10.1109/ICPC.2019.00043
   Tsintzira A.A., 2019, 15 CHIN EUR INT S SO
   van Koten C, 2006, INFORM SOFTWARE TECH, V48, P59, DOI 10.1016/j.infsof.2005.03.002
   Xiao L, 2016, PROC INT CONF SOFTW, P488, DOI 10.1145/2884781.2884822
   Yli-Huumo J, 2016, J SYST SOFTWARE, V120, P195, DOI 10.1016/j.jss.2016.05.018
   Zazworka N, 2014, SOFTWARE QUAL J, V22, P403, DOI 10.1007/s11219-013-9200-8
   Zhou YM, 2007, J SYST SOFTWARE, V80, P1349, DOI 10.1016/j.jss.2006.10.049
NR 45
TC 9
Z9 9
U1 2
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2020
VL 128
AR 106391
DI 10.1016/j.infsof.2020.106391
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NZ0FW
UT WOS:000576767100004
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU de la Vara, JL
   Marín, B
   Ayora, C
   Giachetti, G
AF Luis de la Vara, Jose
   Marin, Beatriz
   Ayora, Clara
   Giachetti, Giovanni
TI An empirical evaluation of the use of models to improve the
   understanding of safety compliance needs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Experiment; Understanding; Comprehension; Model; Safety-critical system;
   Safety standard
ID SEQUENCE DIAGRAMS; CRITICAL SYSTEMS; FAMILY; COMPREHENSION; STEREOTYPES;
   MANAGEMENT; SUPPORT
AB Context: Critical systems in application domains such as automotive, railway, aerospace, and healthcare are required to comply with safety standards. The understanding of the safety compliance needs specified in these standards can be difficult from their text. A possible solution is to use models.
   Objective: We aim to evaluate the use of models to understand safety compliance needs.
   Method: We have studied the effectiveness, efficiency, and perceived benefits in understanding these needs, with models and with the text of safety standards, by means of an experiment. The standards considered are DO-178C and EN 50128. We use SPEM-like diagrams to graphically represent the models.
   Results: The mean effectiveness of 20 undergraduate students in understanding the needs and the mean efficiency were higher with models (22% and 38%, respectively), and the difference is statistically significant (p-value <= 0.02). Most of the students agreed upon the ease of understanding the structure of safety compliance needs with models when compared to the text, but on average, the students were undecided about whether the models are easy to understand or easier to understand than the text.
   Conclusions: The results allow us to claim that the use of models can improve the understanding of safety compliance needs. Nonetheless, there seems to be room for improvement in relation to the perceived benefits. It must be noted that our conclusions may differ if the subjects were experienced practitioners.
C1 [Luis de la Vara, Jose] Univ Castilla La Mancha, Ciudad Real, Spain.
   [Marin, Beatriz] Univ Diego Portales, Santiago, Chile.
   [Ayora, Clara] Tree Technol, Madrid, Spain.
   [Giachetti, Giovanni] Univ Tecnol Chile INACAP, Santiago, Chile.
C3 Universidad de Castilla-La Mancha; University Diego Portales; INACAP
RP de la Vara, JL (corresponding author), Univ Castilla La Mancha, Ciudad Real, Spain.
EM joseluis.delavara@uclm.es; beatriz.marin@mail.udp.cl;
   claraayora@gmail.com; ggiachetti@inacap.cl
RI Giachetti, Giovanni/IWD-5481-2023; de la Vara, Jose Luis/A-7678-2018;
   Marín, Beatriz/Z-5032-2019; Giachetti, Giovanni/IQW-1538-2023
OI de la Vara, Jose Luis/0000-0003-1813-398X; Marín,
   Beatriz/0000-0001-8025-0023; Giachetti, Giovanni/0000-0003-2809-5120
FU AMASS (H2020-ECSEL grant) [692474]; AMASS (Spain's MINECO)
   [PCIN-2015-262]; ENSE (Chile's CONICYT) [REDI170020]; iRel4.0
   (H2020-ECSEL grant) [876659]; VALU3S (H2020ECSEL grant) [876852];
   Treasure (JCCM) [SBPLY/19/180501/000270]; Ramon y Cajal Program (Spain's
   MICINN) [RYC-2017-22836]
FX The research leading to this paper has received funding from the AMASS
   (H2020-ECSEL grant agreement no 692474; Spain's MINECO ref.
   PCIN-2015-262), ENSE (Chile's CONICYT ref. REDI170020), iRel4.0
   (H2020-ECSEL grant agreement no 876659), VALU3S (H2020ECSEL grant
   agreement no 876852), and Treasure (JCCM ref. SBPLY/19/180501/000270;
   EC's European Regional Development Fund) projects, and from the Ramon y
   Cajal Program (Spain's MICINN ref. RYC-2017-22836; EC's European Social
   Funds). We are also grateful to all the subjects of the experiment for
   their participation and to the paper reviewers for their valuable
   suggestions. Finally, the first author thanks Carlos III University of
   Madrid, Spain, where he was working when the experiment reported in this
   paper was run.
CR Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   Abrahao S, 2009, INT SYMP EMP SOFTWAR, P469
   AMASS project, 2019, D1 6 AMASS DEMONSTRA
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 2015, EASE
   Ayora C, 2016, INFORM SOFTWARE TECH, V74, P86, DOI 10.1016/j.infsof.2016.01.007
   Briand L, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559978
   CENELEC, 2011, 50128 CENELEC
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cruz-Lemus JA, 2011, INFORM SOFTWARE TECH, V53, P1391, DOI 10.1016/j.infsof.2011.07.002
   Cruz-Lemus JA, 2009, EMPIR SOFTW ENG, V14, P685, DOI 10.1007/s10664-009-9106-z
   Cyra L, 2011, RELIAB ENG SYST SAFE, V96, P26, DOI 10.1016/j.ress.2010.06.027
   de la Vara J.L., 2016, ESEM, V32, P1
   de la Vara JL, 2017, COMPUT STAND INTER, V50, P179, DOI 10.1016/j.csi.2016.10.002
   De Lucia A, 2010, EMPIR SOFTW ENG, V15, P455, DOI 10.1007/s10664-009-9127-7
   ESA, 2006, SOFTW ENG STAND
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Fernández-Sáez AM, 2016, EMPIR SOFTW ENG, V21, P212, DOI 10.1007/s10664-014-9354-4
   Fowler M, 2004, UML distilled: A brief guide to the standard object modeling language
   Gallina B, 2017, COMPUT STAND INTER, V54, P119, DOI 10.1016/j.csi.2016.11.007
   García-Valls M, 2019, INFORM SOFTWARE TECH, V107, P3, DOI 10.1016/j.infsof.2018.10.005
   Gonschorek T., SAFECOMP 2018 WORKSH, P239
   Gralha C, 2019, INT REQUIR ENG CONF, P165, DOI 10.1109/RE.2019.00027
   Hadar I, 2013, INFORM SOFTWARE TECH, V55, P1823, DOI 10.1016/j.infsof.2013.05.003
   Heeager LT, 2018, INFORM SOFTWARE TECH, V103, P22, DOI 10.1016/j.infsof.2018.06.004
   Heijstek W, 2011, INT SYMP EMP SOFTWAR, P167, DOI 10.1109/ESEM.2011.25
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   IBM, 2013, SUCC COMPL IEC 61508
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Jung Jessica, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P223, DOI 10.1109/ESEM.2013.59
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kelly T, 2004, BUS WEEK, P20
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Labunets Katsiaryna, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P163, DOI 10.1109/ESEM.2013.29
   Labunets K., 2015, SESAR INNOVAT DAYS
   Labunets K, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239247
   Labunets K, 2017, INT SYMP EMP SOFTWAR, P267, DOI 10.1109/ESEM.2017.40
   Labunets K, 2017, EMPIR SOFTW ENG, V22, P3017, DOI 10.1007/s10664-017-9502-8
   Labunets K, 2017, LECT NOTES COMPUT SC, V10153, P191, DOI 10.1007/978-3-319-54045-0_15
   Labunets K, 2014, IEEE INT WORKS EMPIR, P28, DOI 10.1109/EmpiRE.2014.6890113
   Lange CFJ, 2007, INT C PROGRAM COMPRE, P221
   de la Vara JL, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P632, DOI 10.5220/0006733906320641
   de la Vara JL, 2017, LECT NOTES COMPUT SC, V10650, P239, DOI 10.1007/978-3-319-69904-2_20
   de la Vara JL, 2016, IEEE T SOFTWARE ENG, V42, P1095, DOI 10.1109/TSE.2016.2553032
   de la Vara JL, 2016, INFORM SOFTWARE TECH, V72, P16, DOI 10.1016/j.infsof.2015.11.008
   Martins LEG, 2016, INFORM SOFTWARE TECH, V75, P71, DOI 10.1016/j.infsof.2016.04.002
   Morales JM, 2016, J SYST SOFTWARE, V114, P82, DOI 10.1016/j.jss.2015.12.056
   Morales JM, 2015, J SYST SOFTWARE, V100, P1, DOI 10.1016/j.jss.2014.10.010
   Morandini M., 2011, 2011 First International Workshop on Empirical Requirements Engineering, P53, DOI 10.1109/EmpiRE.2011.6046256
   Mouaffo A., 2014, EASE
   Nair Sunil, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P309, DOI 10.1007/978-3-319-05843-6_23
   Nair S, 2015, INFORM SOFTWARE TECH, V60, P1, DOI 10.1016/j.infsof.2014.12.002
   Nair S, 2014, INFORM SOFTWARE TECH, V56, P689, DOI 10.1016/j.infsof.2014.03.001
   Nugroho A, 2009, INFORM SOFTWARE TECH, V51, P1670, DOI 10.1016/j.infsof.2009.04.007
   Oliveira A. C. S., 2016, THESIS
   OMG, 2017, UN MOD LANG UML
   *OMG, 2008, SOFTW SYST PROC ENG
   OPENCOSS project, 2015, D1 4 IMPLEMENTATION
   Ottensooser A, 2012, J SYST SOFTWARE, V85, P596, DOI 10.1016/j.jss.2011.09.023
   Panesar-Walawege RK, 2013, INFORM SOFTWARE TECH, V55, P836, DOI 10.1016/j.infsof.2012.11.009
   Razali R., 2007, Proceedings of the 11th international conference on Evaluation and Assessment in Software Engineering, P1
   Reinhartz-Berger I, 2017, INFORM SOFTWARE TECH, V87, P81, DOI 10.1016/j.infsof.2017.01.012
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Rodrigues RD, 2015, 2015 29TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P41, DOI 10.1109/SBES.2015.12
   RTCA, 2011, DO-178c
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Santos M, 2016, INT REQUIR ENG CONF, P206, DOI 10.1109/RE.2016.51
   Scanniello G., 2014, EASE, P49
   Scanniello G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2491912
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sharafi Z, 2013, CONF PROC INT SYMP C, P33, DOI 10.1109/ICPC.2013.6613831
   Siqueira FL, 2018, INFORM SOFTWARE TECH, V96, P1, DOI 10.1016/j.infsof.2017.11.002
   Stålhane T, 2014, INT J INF SYST MODEL, V5, P1, DOI 10.4018/ijismd.2014010101
   Stallbaum H., 2010, Proceedings 2010 Workshop on Model-Driven Engineering, Verification, and Validation (MoDeVVa 2010), P25, DOI 10.1109/MoDeVVa.2010.21
   Staron M, 2006, J SYST SOFTWARE, V79, P727, DOI 10.1016/j.jss.2005.09.014
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Teruel MA, 2012, INFORM SOFTWARE TECH, V54, P1215, DOI 10.1016/j.infsof.2012.06.001
   Torchiano M, 2017, J VISUAL LANG COMPUT, V41, P10, DOI 10.1016/j.jvlc.2017.06.002
   Trkman M, 2019, INFORM SOFTWARE TECH, V116, DOI 10.1016/j.infsof.2019.08.001
   Trkman M, 2016, INFORM SOFTWARE TECH, V71, P58, DOI 10.1016/j.infsof.2015.10.006
   Vegas S, 2016, IEEE T SOFTWARE ENG, V42, P120, DOI 10.1109/TSE.2015.2467378
   Vilela J, 2017, J SYST SOFTWARE, V125, P68, DOI 10.1016/j.jss.2016.11.031
   Wohlin C., 1996, C SOFTW PROC IMPR, P167
NR 84
TC 11
Z9 11
U1 2
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2020
VL 126
AR 106351
DI 10.1016/j.infsof.2020.106351
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NT9PE
UT WOS:000573271800009
DA 2024-07-18
ER

PT J
AU Singh, J
   Singh, J
AF Singh, Jagsir
   Singh, Jaswinder
TI Detection of malicious software by analyzing the behavioral artifacts
   using machine learning algorithms
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Dynamic analysis; Malware; Machine learning algorithms; Random Forest;
   Static analysis
ID MALWARE; CLASSIFICATION; SECURITY; FRAMEWORK; FAMILIES; PRIVACY;
   WRAPPER; SYSTEMS
AB Malicious software deliberately affects the computer systems. Malware are analyzed using static or dynamic analysis techniques. Using these techniques, unique patterns are extracted to detect malware correctly. In this paper, a behavior-based malware detection technique is proposed. Various runtime features are extracted by setting up a dynamic analysis environment using the Cuckoo sandbox. Three primary features are processed for developing malware classifier. Firstly, printable strings are processed word by word using text mining techniques which produced a very high dimension matrix of the string features. Then we apply the singular value decomposition technique for reducing dimensions of string features. Secondly, Shannon entropy is computed over the printable strings and API calls to consider the randomness of API and PSI features. In addition to these features, behavioral features regarding file operations, registry key modification and network activities are used in malware detection. Finally, all features are integrated in the training feature set to develop the malware classifiers using the machine learning algorithms. The proposed technique is validated with 16489 malware and 8422 benign files. Our experimental results show the accuracy of 99.54% in malware detection using ensemble machine learning algorithms. Moreover, it aims to develop a behavior-based malware detection technique of high accuracy by processing the runtime features in a new way.
C1 [Singh, Jagsir; Singh, Jaswinder] Punjabi Univ Patiala, Dept Comp Sci & Engn, Patiala, Punjab, India.
C3 Punjabi University
RP Singh, J (corresponding author), Punjabi Univ Patiala, Dept Comp Sci & Engn, Patiala, Punjab, India.
EM erjagsirsingh18@gmail.com; dr.jaswinder@pbi.ac.in
RI Singh, Dr, Jaswinder/GNP-0191-2022
OI Singh, Jaswinder/0000-0003-0221-2691; , Jagsir Singh/0000-0002-9201-4834
CR Alaeiyan M, 2019, COMPUT COMMUN, V136, P76, DOI 10.1016/j.comcom.2019.01.003
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2018, BULL ENVIRON PHARMAC
   [Anonymous], [No title captured]
   Bidoki SM, 2017, ENG APPL ARTIF INTEL, V60, P57, DOI 10.1016/j.engappai.2016.12.008
   Bushby A, 2019, COMPUT FRAUD SECUR, P12
   Crammer K, 2006, J MACH LEARN RES, V7, P551
   Damodaran A, 2017, J COMPUT VIROL HACKI, V13, P1, DOI 10.1007/s11416-015-0261-z
   Ding YX, 2018, COMPUT SECUR, V73, P73, DOI 10.1016/j.cose.2017.10.007
   Dredze M., 2008, Machine Learning, Proceedings of the Twenty-Fifth International Conference (ICML 2008), Helsinki, Finland, June 5-9, 2008, ACM International Conference Proceeding Series, V307, P264, DOI DOI 10.1145/1390156.1390190
   Dua S, 2011, DATA MINING AND MACHINE LEARNING IN CYBERSECURITY, P1, DOI 10.1201/b10867
   Elhadi AAE, 2014, COMPUT SECUR, V46, P62, DOI 10.1016/j.cose.2014.07.004
   Gandotra E., 2014, Journal of Information Security, V6, P56, DOI DOI 10.4236/JIS.2014.52006
   Ghafir I, 2018, FUTURE GENER COMP SY, V89, P349, DOI 10.1016/j.future.2018.06.055
   Ghiasi M, 2015, ENG APPL ARTIF INTEL, V44, P111, DOI 10.1016/j.engappai.2015.05.008
   Han WJ, 2019, COMPUT SECUR, V83, P208, DOI 10.1016/j.cose.2019.02.007
   Hegedus J., 2011, 7 INT C COMP INT SEC
   Huda S, 2018, FUTURE GENER COMP SY, V83, P193, DOI 10.1016/j.future.2017.12.037
   Huda S, 2017, INFORM SCIENCES, V379, P211, DOI 10.1016/j.ins.2016.09.041
   Huda S, 2016, FUTURE GENER COMP SY, V55, P376, DOI 10.1016/j.future.2014.06.001
   Hummer W, 2013, INFORM SOFTWARE TECH, V55, P1884, DOI 10.1016/j.infsof.2013.05.001
   Jang D, 2019, COMPUT SECUR, V83, P182, DOI 10.1016/j.cose.2019.02.005
   Ki Y, 2015, INT J DISTRIB SENS N, DOI 10.1155/2015/659101
   Kolosnjaji Bojan, 2016, Detection of Intrusions and Malware, and Vulnerability Assessment. 13th International Conference, DIMVA 2016. Proceedings: LNCS 9721, P419, DOI 10.1007/978-3-319-40667-1_21
   Le Q, 2018, DIGIT INVEST, V26, pS118, DOI 10.1016/j.diin.2018.04.024
   Leitner M, 2014, INFORM SOFTWARE TECH, V56, P273, DOI 10.1016/j.infsof.2013.12.004
   Lin CH, 2018, COMPUT SECUR, V73, P359, DOI 10.1016/j.cose.2017.11.010
   Liu L, 2016, BIOMED MICRODEVICES, V18, P1, DOI DOI 10.1631/FITEE.1601325
   Mai PX, 2018, INFORM SOFTWARE TECH, V100, P165, DOI 10.1016/j.infsof.2018.04.007
   Mandavifar S, 2019, NEUROCOMPUTING, V347, P149, DOI 10.1016/j.neucom.2019.02.056
   Mao WX, 2017, COMPUT SECUR, V68, P47, DOI 10.1016/j.cose.2017.02.009
   Nguyen MH, 2018, COMPUT SECUR, V76, P128, DOI 10.1016/j.cose.2018.02.006
   Mira F, 2016, 2016 22ND INTERNATIONAL CONFERENCE ON AUTOMATION AND COMPUTING (ICAC), P555
   Mohaisen A, 2015, COMPUT SECUR, V52, P251, DOI 10.1016/j.cose.2015.04.001
   Narayanan BN, 2016, PROC NAECON IEEE NAT, P338, DOI 10.1109/NAECON.2016.7856826
   Narra U, 2016, J COMPUT VIROL HACKI, V12, P213, DOI 10.1007/s11416-015-0253-z
   Nauman M, 2016, INFORM SCIENCES, V374, P193, DOI 10.1016/j.ins.2016.09.037
   Ndibanje B, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9020239
   Ni S, 2018, COMPUT SECUR, V77, P871, DOI 10.1016/j.cose.2018.04.005
   Nikas A, 2018, DIGIT INVEST, V25, P78, DOI 10.1016/j.diin.2018.03.004
   O'kane Philip, 2016, Security Informatics, V5, DOI 10.1186/s13388-016-0027-2
   Pan Z, 2017, MULTIMED TOOLS APPL, V76, P16989, DOI 10.1007/s11042-016-3647-0
   Pektas A, 2017, J INF SECUR APPL, V37, P91, DOI 10.1016/j.jisa.2017.10.005
   Pfeffer A., 2017, ARXIV170408716, P1
   Pirscoveanu Radu S., 2015, 2015 International Conference on Cyber Situational Awareness, Data Analytics and Assessment (CyberSA). Proceedings, P1, DOI 10.1109/CyberSA.2015.7166115
   Searles R, 2017, EUROMICRO WORKSHOP P, P69, DOI 10.1109/PDP.2017.41
   Shabtai Asaf, 2009, Information Security Technical Report, V14, P16, DOI 10.1016/j.istr.2009.03.003
   Singh J., 2019, International Journal of Recent Technology and Engineering, V8, P1608, DOI [10.35940/ijrte.b2327.078219, DOI 10.35940/IJRTE.B2327.078219]
   Tsai J.J.P., 2009, Machine Learning in Cyber Trust: Security, Privacy, and Reliability
   Tzu-Yen Wang, 2011, Proceedings of the 2011 International Conference on Machine Learning and Cybernetics (ICMLC 2011), P717, DOI 10.1109/ICMLC.2011.6016774
   Wang C, 2016, 2016 12TH INTERNATIONAL CONFERENCE ON NATURAL COMPUTATION, FUZZY SYSTEMS AND KNOWLEDGE DISCOVERY (ICNC-FSKD), P481, DOI 10.1109/FSKD.2016.7603221
   Zhang HQ, 2019, FUTURE GENER COMP SY, V90, P211, DOI 10.1016/j.future.2018.07.052
   Zhang J., 2019, MACHINE LEARNING FEA
NR 55
TC 33
Z9 33
U1 1
U2 33
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2020
VL 121
AR 106273
DI 10.1016/j.infsof.2020.106273
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT0NB
UT WOS:000518706200008
DA 2024-07-18
ER

PT J
AU Ferreira, JM
   Acuña, ST
   Dieste, O
   Vegas, S
   Santos, A
   Rodríguez, F
   Juristo, N
AF Ferreira, Juan M.
   Acuna, Silvia T.
   Dieste, Oscar
   Vegas, Sira
   Santos, Adrian
   Rodriguez, Francy
   Juristo, Natalia
TI Impact of usability mechanisms: An experiment on efficiency,
   effectiveness and user satisfaction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Effectiveness; Efficiency; Empirical study; Experimental design;
   Satisfaction; Software engineering; Usability mechanism; Usability
ID WEB; REGRESSION; QUALITY
AB Context: As a software quality characteristic, usability includes the attributes of efficiency, effectiveness and user satisfaction. There are several recommendations in the literature on how to build usable software systems, but there are not very many empirical studies that provide evidence about their impact.
   Objective: We report an experiment carried out with users to understand the effect of three usability mechanisms-Abort Operation, Progress Feedback and Preferences- on efficiency, effectiveness and user satisfaction. Usability mechanisms are functionalities that should, according to the HCI community, be implemented within a software system to increase its usability.
   Method: The experiment was conducted with 168 users divided into 24 experimental groups. Each group performs three online shopping tasks. We measure efficiency variables (number of clicks and time taken), effectiveness (percentage of task completion) and user satisfaction gathered from a questionnaire.
   Results: The adoption of Abort Operation has a significantly positive effect on efficiency (time taken), effectiveness and user satisfaction. The adoption of Progress Feedback does not appear to have any impact on any of the variables. The adoption of Preferences has a significantly positive effect on effectiveness and user satisfaction but no influence on efficiency.
   Conclusions: We provide relevant evidence of the impact of the three usability mechanisms on efficiency, effectiveness and user satisfaction. In no case do the usability mechanisms degrade user performance. The effort to adopt Abort Operation and Preferences appears to be justified by the benefits in terms of effectiveness and user satisfaction. Also Abort Operation enables the user to be more productive. We believe that the effects on efficiency, effectiveness and satisfaction depend not only on mechanism functionality but also on the problem domain. The impact of a mechanism in other contexts could differ. Therefore, we need to conduct further experiments to gather more evidence and confirm these results.
C1 [Ferreira, Juan M.] Univ Nacl Asuncion, Fac Politecn, San Lorenzo 2111, Paraguay.
   [Acuna, Silvia T.; Rodriguez, Francy] Univ Autonoma Madrid, Calle Francisco Torn & Valiente 11, E-28049 Madrid, Spain.
   [Dieste, Oscar; Vegas, Sira; Juristo, Natalia] Univ Politecn Madrid, Campus Montegancedo, E-28660 Madrid, Spain.
   [Santos, Adrian] Univ Oulu, M3S ITEE, Oulu, Finland.
C3 Universidad Nacional de Asuncion; Autonomous University of Madrid;
   Universidad Politecnica de Madrid; University of Oulu
RP Ferreira, JM (corresponding author), Univ Nacl Asuncion, Fac Politecn, San Lorenzo 2111, Paraguay.
EM jmferreira1978@fpuna.edu.py; silvia.acunna@uam.es; odieste@fi.upm.es;
   svegas@fi.upm.es; adrian.santos.parrilla@oulu.fi;
   francy.rodriguez@uam.es; natalia@fi.upm.es
RI Dieste, Oscar/K-6193-2014; Acuña, Silvia/A-7395-2008; Vegas,
   Sira/R-6742-2018; Ferreira, Juan M./ABR-4037-2022; Rodriguez, Francy
   D./K-6497-2014
OI Dieste, Oscar/0000-0002-3060-7853; Ferreira, Juan
   M./0000-0002-2131-0345; Rodriguez, Francy D./0000-0002-3354-4819
FU Spanish Ministry of Science, Innovation and Universities
   [RTI2018-095255-B-100, PGC2018-097265-B-100]; FORTE-CM project
   [P2018/TCS-4314]
FX We would like to thank all the participants in the experiments, along
   with the Empirical Software Engineering Research Group at the School of
   Computer Engineering, UPM. The reported research was partially funded by
   Spanish Ministry of Science, Innovation and Universities research grant
   RTI2018-095255-B-100, the PGC2018-097265-B-100 project and the FORTE-CM
   project (P2018/TCS-4314).
CR Acuña ST, 2008, EMPIR SOFTW ENG, V13, P401, DOI 10.1007/s10664-008-9074-8
   Andreasen MS, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1405
   [Anonymous], 2011, Handbook of usability testing: How to plan, design, and conduct effective tests
   [Anonymous], 2013, TOPICS CRYPTOLOGY CT
   [Anonymous], 2004, 91264 ISOIEC
   [Anonymous], 1991, 9126 ISOIEC
   [Anonymous], 2003, US PATT COLL
   Atoum I., 2015, ASQ.Software Quality Professional, V17, P4
   Aveledo M., 2012, P SEKE, P599
   Baecker R.M., 2014, READINGS HUMAN COMPU
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   Baxter K, 2015, UNDERSTANDING YOUR USERS: A PRACTICAL GUIDE TO USER RESEARCH METHODS, 2ND EDITION, P2
   Ben Ammar L, 2016, SOFTWARE QUAL J, V24, P301, DOI 10.1007/s11219-014-9266-y
   Bender R, 1997, J ROY COLL PHYS LOND, V31, P546
   Bevan N, 2001, INT J HUM-COMPUT ST, V55, P533, DOI 10.1006/ijhc.2001.0483
   Bolchini D, 2009, LECT NOTES COMPUT SC, V5727, P652, DOI 10.1007/978-3-642-03658-3_70
   Torrente MCS, 2013, J SYST SOFTWARE, V86, P649, DOI 10.1016/j.jss.2012.10.049
   Cassino R, 2015, J VISUAL LANG COMPUT, V28, P1, DOI 10.1016/j.jvlc.2014.12.002
   Charness G, 2012, J ECON BEHAV ORGAN, V81, P1, DOI 10.1016/j.jebo.2011.08.009
   Constantine L.L., 1999, Software for Use: A Practical Guide to the Models and Methods of Usage-Centered Design
   de Castro V, 2011, IET SOFTW, V5, P528, DOI 10.1049/iet-sen.2010.0062
   Espana S., 2011, MODEL DRIVEN SYSTEM
   Fang X, 2007, DECIS SUPPORT SYST, V43, P476, DOI 10.1016/j.dss.2006.11.004
   Fernandez A, 2011, INFORM SOFTWARE TECH, V53, P789, DOI 10.1016/j.infsof.2011.02.007
   Ferrari SLP, 2004, J APPL STAT, V31, P799, DOI 10.1080/0266476042000214501
   Ferré X, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.903160
   Ferreira J. M., 2017, PROC 12 IBEROAMERICA
   Golden E., 2010, HUMAN COMPUTER INTER
   GRISSOM RJ, 1994, J APPL PSYCHOL, V79, P314, DOI 10.1037/0021-9010.79.2.314
   Groth A, 2016, INF TECHNOL TOUR, V16, P201, DOI 10.1007/s40558-015-0041-0
   Gupta D, 2019, INT ARAB J INF TECHN, V16, P357
   Gupta D, 2020, NEURAL COMPUT APPL, V32, P10915, DOI 10.1007/s00521-018-3688-6
   Gupta D, 2017, J COMPUT SCI-NETH, V23, P195, DOI 10.1016/j.jocs.2017.06.005
   Gupta D, 2017, OPEN ENG, V7, P161, DOI 10.1515/eng-2017-0021
   Hix D., 1993, Developing User Interfaces: Ensuring Usability through Product Process
   Hornbik K., 2004, P 3 NORD C HUM COMP, P3
   Hornbæk K, 2006, INT J HUM-COMPUT ST, V64, P79, DOI 10.1016/j.ijhcs.2005.06.002
   International Organization For Standardization, 1998, ISO 9241-11
   ISO/IEC, 2010, Technical report
   Ivory M.Y., 2001, EMPIRICAL FDN AUTOMA
   Ivory MY, 2001, ACM COMPUT SURV, V33, P470, DOI 10.1145/503112.503114
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Johnson J, 2012, J USABILITY STUD, V7, P88
   Juristo N., 2013, BASICS SOFTWARE ENG
   Juristo N, 2007, IEEE T SOFTWARE ENG, V33, P744, DOI 10.1109/TSE.2007.70741
   Juristo N, 2007, J SYST SOFTWARE, V80, P1506, DOI 10.1016/j.jss.2007.01.006
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Laakso S.A., 2003, User interface design patterns
   Long S.J., 2014, Regression Models for Categorical Dependent Variables Using Stata, V3rd
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mazumder F. K., 2014, International Journal of Research Engineering and Technology, V03, P79
   McKinlay J, 2010, CHANDOS INF PROF SER, P1, DOI 10.1533/9781780630243
   Moreno AM, 2013, COMPUTER, V46, P100, DOI 10.1109/MC.2013.133
   Moumane K, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-2171-z
   Nachar N, 2008, TUTOR QUANT METHODS, V4, P13, DOI 10.20982/tqmp.04.1.p013
   Nielsen J., 1993, USABILITY ENG
   Paz F, 2013, PROCEEDINGS OF THE 2013 10TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P119, DOI 10.1109/ITNG.2013.23
   Piccioni Marco, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P5, DOI 10.1109/ESEM.2013.14
   Poltronieri I, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P2013, DOI 10.1145/3167132.3167348
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Rivero L., 2016, P INT C SOFTW ENG KN, P600, DOI [10.18293/SEKE2016-122, DOI 10.18293/SEKE2016-122]
   Rodríguez FD, 2015, INT J SOFTW ENG KNOW, V25, P727, DOI 10.1142/S0218194015500084
   Rodríguez FD, 2015, J SYST SOFTWARE, V105, P107, DOI 10.1016/j.jss.2015.04.023
   Rubinstein R., 1990, HUMAN FACTOR DESIGNI
   Sagar K, 2021, CONCURR COMP-PRACT E, V33, DOI 10.1002/cpe.5091
   Salman Fouad Abdulameer, 2017, Journal of Theoretical and Applied Information Technology, V95, P1808
   Sauro J., 2005, P C HUMAN FACTORS CO, P401, DOI [10.1145/1054972.1055028, DOI 10.1145/1054972.1055028]
   Scapin DL, 1997, BEHAV INFORM TECHNOL, V16, P220, DOI 10.1080/014492997119806
   Schade A., 2013, EVIDENCE BASES USER
   Seffah A, 2004, COMMUN ACM, V47, P71, DOI 10.1145/1035134.1035136
   Seffah A, 2006, SOFTWARE QUAL J, V14, P159, DOI 10.1007/s11219-006-7600-8
   Seffah Ahmed., 2010, Proceedings of the 1st International Workshop on Pattern-Driven Engineering of Interactive Computing Systems, PEICS'10, page, P4, DOI [DOI 10.1145/1824749.1824751, https://doi.org/10.1145/1824749]
   Shneiderman B., 2010, DESIGNING USER INTER
   Suresh Kp, 2011, J Hum Reprod Sci, V4, P8, DOI 10.4103/0974-1208.82352
   Taguchi G., 1987, Orthogonal arrays and linear graphs
   Tidwell J., 2010, Designing interfaces: Patterns for effective interaction design
   Tiwari S, 2017, INFORM SOFTWARE TECH, V91, P22, DOI 10.1016/j.infsof.2017.06.003
   van Welie M, 2008, AMSTERDAM COLLECTION
   Weber S, 2017, 2017 IEEE CYBERSECURITY DEVELOPMENT (SECDEV), P50, DOI 10.1109/SecDev.2017.21
   Welie M., 2000, 2000 PATT LANG PROGR, P13
   Wohlin C., 2012, Experimentation in Software Engineering
NR 82
TC 17
Z9 20
U1 5
U2 26
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2020
VL 117
AR 106195
DI 10.1016/j.infsof.2019.106195
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA JN4MX
UT WOS:000496874400001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Abdellatif, TM
   Capretz, LF
   Ho, D
AF Abdellatif, Tamer Mohamed
   Capretz, Luiz Fernando
   Ho, Danny
TI Automatic recall of software lessons learned for software project
   managers
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software lessons learned recall; Software project management; Knowledge
   management; Textual information retrieval models; Topic modeling
   application; Information extraction
AB Context: Lessons learned (LL) records constitute the software organization memory of successes and failures. LL are recorded within the organization repository for future reference to optimize planning, gain experience, and elevate market competitiveness. However, manually searching this repository is a daunting task, so it is often disregarded. This can lead to the repetition of previous mistakes or even missing potential opportunities. This, in turn, can negatively affect the organization's profitability and competitiveness.
   Objective: We aim to present a novel solution that provides an automatic process to recall relevant LL and to push those LL to project managers. This will dramatically save the time and effort of manually searching the unstructured LL repositories and thus encourage the LL exploitation.
   Method: We exploit existing project artifacts to build the LL search queries on-the-fly in order to bypass the tedious manual searching. An empirical case study is conducted to build the automatic LL recall solution and evaluate its effectiveness. The study employs three of the most popular information retrieval models to construct the solution. Furthermore, a real-world dataset of 212 LL records from 30 different software projects is used for validation. Top-k and MAP well-known accuracy metrics are used as well.
   Results: Our case study results confirm the effectiveness of the automatic LL recall solution. Also, the results prove the success of using existing project artifacts to dynamically build the search query string. This is supported by a discerning accuracy of about 70% achieved in the case of top-k.
   Conclusion: The automatic LL recall solution is valid with high accuracy. It will eliminate the effort needed to manually search the LL repository. Therefore, this will positively encourage project managers to reuse the available LL knowledge - which will avoid old pitfalls and unleash hidden business opportunities.
C1 [Abdellatif, Tamer Mohamed; Capretz, Luiz Fernando; Ho, Danny] Western Univ, Dept Elect & Comp Engn, 1151 Richmond St, London, ON N6A 5B9, Canada.
C3 Western University (University of Western Ontario)
RP Abdellatif, TM (corresponding author), Western Univ, Dept Elect & Comp Engn, 1151 Richmond St, London, ON N6A 5B9, Canada.
EM tmohame7@uwo.ca; lcapretz@uwo.ca; danny@nfa-estimation.com
RI Capretz, Luiz Fernando/K-5944-2013
OI Capretz, Luiz Fernando/0000-0001-6966-2369; Mohamed Abdellatif,
   Tamer/0000-0003-2337-9781
FU Natural Sciences and Engineering Research Council (NSERC) of Canada
   [1033906]; Ontario Graduate Scholarship (OGS)
FX The authors would like to thank their industrial partner for providing
   the dataset, which is necessary for the evaluation process of this work.
   Also, they thank the practitioner who helped in constructing, reviewing,
   and baselining the gold set. This research has been partially funded by
   the Natural Sciences and Engineering Research Council (NSERC) of Canada
   through grant 1033906 within the Discovery Program. Also, the first
   author was awarded an Ontario Graduate Scholarship (OGS). The authors
   are solely responsible for the results, opinions, and methods presented
   in the paper, thus they represent neither NSERC nor OGS.
CR Abdellatif T. M., 2018, CASE STUDYS 88 CLASS
   Abdellatif TM, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BIG DATA SOFTWARE ENGINEERING, P30, DOI 10.1109/BIGDSE.2015.14
   Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   [Anonymous], 2014, RECOMMENDATION SYSTE, DOI DOI 10.1007/978-3-642-45135-5_4
   [Anonymous], 1999, MODERN INFORM RETRIE
   [Anonymous], 2009, TEXT MINING CLASSIFI, DOI [DOI 10.1145/1141844.1143859, DOI 10.1201/9781420059458.CH4]
   [Anonymous], 2008, INTRO INFORM RETRIEV, DOI DOI 10.1017/CBO9780511809071
   [Anonymous], 2013, CASE BASED REASONING
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Cleary B, 2009, EMPIR SOFTW ENG, V14, P93, DOI 10.1007/s10664-008-9095-3
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dlgerler M, 2016, PMI GLOB C 2016 EMEA
   Falessi D, 2013, IEEE T SOFTWARE ENG, V39, P18, DOI 10.1109/TSE.2011.122
   Harrison W., 2002, P 27 ANN NASA GODD I, P139
   Kitchenham B., 2007, EBSE200701 KEEL U U
   Le Quoc V., 2014, P INT C MACH LEARN I
   Li A., 2002, NASA: Better mechanisms needed for sharing lessons learned
   Lv Y, 2011, PROCEEDINGS OF 2011 INTERNATIONAL CONFERENCE ON PUBLIC ADMINISTRATION (7TH), VOL I, P79
   McCallum A.K., 2002, MALLET MACHINE LEARN
   NASA, LESS LEARN INF SYST
   Nguyen AT, 2011, GENE DEV, V25, P263, DOI 10.1101/gad.2018511
   Petrenko M, 2013, INFORM SOFTWARE TECH, V55, P651, DOI 10.1016/j.infsof.2012.09.013
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Rehurek R., 2010, LREC, DOI DOI 10.13140/2.1.2393.1847
   Robertson Stephen, 2009, Foundations and Trends in Information Retrieval, V3, P333, DOI 10.1561/1500000019
   Robertson S., 2004, P 13 ACM INT C INF K, P42
   Romano S, 2018, INFORM SOFTWARE TECH, V99, P62, DOI 10.1016/j.infsof.2018.03.004
   Sary C., 1995, Proceedings of the Fifth Annual International Symposium of the National Council on Systems Engineering, V1, P249
   Singhal A., 1996, SIGIR Forum, P21
   Thomas S. W., 2012, 2012586 QUEENS U
   Thomas S.W., 2014, EVOLVING SOFTWARE SY, P139
   Thomas S. W., 2012, LUCENE IDA USE LATEN
   Thomas S.W., 2012, LSCP: A Lightweight Source Code Preprocessor
   Thomas SW, 2013, IEEE T SOFTWARE ENG, V39, P1427, DOI 10.1109/TSE.2013.27
   TUKEY J. W., 1991, Statistical Science, V6, P100, DOI [10.1214/ss/1177011945, DOI 10.1214/SS/1177011945]
   Tukey J.W., 1994, COLLECTED WORKS JW T, VVIII, P1948
   TUKEY JW, 1949, BIOMETRICS, V5, P99, DOI 10.2307/3001913
   Van Erp M., 2000, Proceedings of the 7th International Workshop on Frontiers in Handwriting Recognition, P443
   Weber R, 2001, EXPERT SYST APPL, V20, P17, DOI 10.1016/S0957-4174(00)00046-4
   Weber R, 2000, EAAP PUBLIC, P117
   Weber RO, 2003, DECIS SUPPORT SYST, V34, P287, DOI 10.1016/S0167-9236(02)00122-7
   Xing Wei, 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P178
   Zhai C., 2016, Text Data Management and Analysis: A Practical Introduction to Information Retrieval and Text Mining
NR 45
TC 4
Z9 5
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2019
VL 115
BP 44
EP 57
DI 10.1016/j.infsof.2019.07.006
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IX7GL
UT WOS:000485851700005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ebrahimi, N
   Trabelsi, A
   Islam, MS
   Hamou-Lhadj, A
   Khanmohammadi, K
AF Ebrahimi, Neda
   Trabelsi, Abdelaziz
   Islam, Md Shariful
   Hamou-Lhadj, Abdelwahab
   Khanmohammadi, Kobra
TI An HMM-based approach for automatic detection and classification of
   duplicate bug reports
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Duplicate bug reports; Stack traces; Hidden Markov models; Machine
   learning; Mining software repositories
ID INFORMATION-RETRIEVAL; LOCALIZATION; MODELS
AB Context: Software projects rely on their issue tracking systems to guide maintenance activities of software developers. Bug reports submitted to the issue tracking systems carry crucial information about the nature of the crash (such as texts from users or developers and execution information about the running functions before the occurrence of a crash). Typically, big software projects receive thousands of reports every day.
   Objective: The aim is to reduce the time and effort required to fix bugs while improving software quality overall. Previous studies have shown that a large amount of bug reports are duplicates of previously reported ones. For example, as many as 30% of all reports in for Firefox are duplicates.
   Method: While there exist a wide variety of approaches to automatically detect duplicate bug reports by natural language processing, only a few approaches have considered execution information (the so-called stack traces) inside bug reports. In this paper, we propose a novel approach that automatically detects duplicate bug reports using stack traces and Hidden Markov Models.
   Results: When applying our approach to Firefox and GNOME datasets, we show that, for Firefox, the average recall for Rank k = 1 is 59%, for Rank k = 2 is 75.55%. We start reaching the 90% recall from k = 10. The Mean Average Precision (MAP) value is up to 76.5%. For GNOME, The recall at k = 1 is around 63%, while this value increases by about 10% for k = 2. The recall increases to 97% for k = 11. A MAP value of up to 73% is achieved.
   Conclusion: We show that HMM and stack traces are a powerful combination for detecting and classifying duplicate bug reports in large bug repositories.
C1 [Ebrahimi, Neda; Trabelsi, Abdelaziz; Islam, Md Shariful; Hamou-Lhadj, Abdelwahab; Khanmohammadi, Kobra] Concordia Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
C3 Concordia University - Canada
RP Ebrahimi, N (corresponding author), Concordia Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
EM n_ebr@ece.concordia.ca; trabelsi@ece.concordia.ca;
   mdsha_i@ece.concordia.ca; abdelw@ece.concordia.ca;
   k_khanm@ece.concordia.ca
OI Hamou-Lhadj, Abdelwahab/0000-0002-3319-5006
FU NSERC (Natural Science and Engineering Research Council of Canada)
FX We would like to thank the anonymous reviewers for their excellent
   comments and feedback We would also like to thank NSERC (Natural Science
   and Engineering Research Council of Canada) for partly supporting this
   projet.
CR Alipour A, 2013, IEEE WORK CONF MIN S, P183, DOI 10.1109/MSR.2013.6624026
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2014, P 2014 INT S SOFTWAR, DOI DOI 10.1145/2610384.2610386
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Castelluccio M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P717, DOI 10.1145/3106237.3106306
   Chen N, 2015, IEEE T SOFTWARE ENG, V41, P198, DOI 10.1109/TSE.2014.2363469
   Dang YN, 2012, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2012.6227111
   Deshmukh J, 2017, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME.2017.69
   García I, 2012, J SOFTW-EVOL PROC, V24, P481, DOI 10.1002/smr.504
   Gu Z., 2010, ICSE 10, V1, P55, DOI DOI 10.1145/1806799.1806812
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Kaushik N, 2012, EUR CON SFTWR MTNCE, P159, DOI 10.1109/CSMR.2012.78
   Kim S, 2011, I C DEPEND SYS NETWO, P486, DOI 10.1109/DSN.2011.5958261
   Koopaei N.E., 2015, P 25 ANN INT C COMP, P201
   Koopaei N. E., 2016, PROC 26 NNUAL INT C, P75
   Lazar A, 2014, P 11 WORK C MIN SOFT, P392, DOI [DOI 10.1145/2597073.2597128, 10.1145/2597073.2597128]
   Lazar A., 2014, P 11 WORKING C MININ, P308
   Lerch J, 2013, EUR CON SFTWR MTNCE, P69, DOI 10.1109/CSMR.2013.17
   Lin M., 2014, J INTELL MANUF, P1
   Moreno L, 2014, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME.2014.37
   Nayrolles M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1789
   Novak PK, 2009, J MACH LEARN RES, V10, P377
   RABINER LR, 1989, P IEEE, V77, P257, DOI 10.1109/5.18626
   Rakha MS, 2016, EMPIR SOFTW ENG, V21, P1960, DOI 10.1007/s10664-015-9404-6
   Rakha MS, 2017, IEEE T SOFTWARE ENG, VPP, P1
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Sabor KK, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P240, DOI 10.1109/QRS.2017.35
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Shihab E., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P249, DOI 10.1109/WCRE.2010.36
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Sureka A, 2010, ASIA PAC SOFWR ENG, P366, DOI 10.1109/APSEC.2010.49
   Tian Y, 2012, EUR CON SFTWR MTNCE, P385, DOI 10.1109/CSMR.2012.48
   Tsuruda A, 2015, ASIA PAC SOFWR ENG, P151, DOI 10.1109/APSEC.2015.33
   Wang SH, 2013, IEEE WORK CONF MIN S, P247, DOI 10.1109/MSR.2013.6624036
   Wang X. W. X., 2008, P ACM IEEE 30 INT C
   Wang XH, 2009, PROCEEDINGS OF THE 2009 PACIFIC-ASIA CONFERENCE ON CIRCUITS, COMMUNICATIONS AND SYSTEM, P197, DOI 10.1109/PACCS.2009.153
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 42
TC 30
Z9 31
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2019
VL 113
BP 98
EP 109
DI 10.1016/j.infsof.2019.05.007
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IE1DW
UT WOS:000472127100006
DA 2024-07-18
ER

PT J
AU Alsaqaf, W
   Daneva, M
   Wieringa, R
AF Alsaqaf, Wasim
   Daneva, Maya
   Wieringa, Roel
TI Quality requirements challenges in the context of large-scale
   distributed agile: An empirical study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile large-scale distributed projects; Requirements engineering;
   Quality requirements; Exploratory empirical research method; Interviews
ID ENGINEERING PRACTICES
AB Context: Engineering quality requirements in agile projects does not fit organically with agile methods. Despite the agile community acknowledges this, little empirical evidence has been published on this topic.
   Objective: This exploratory qualitative interview-based study explicates the challenging situations experienced by practitioners in engineering the quality requirements in the context of large-scale distributed agile projects. Moreover, this study describes the practices that agile distributed teams currently use which could contribute by dealing with the identified challenges.
   Method: The challenging situations and possible mitigation practices were studied from the perspective of 17 practitioners from large distributed agile project teams in six organizations in The Netherlands. Qualitative data were collected using semi-structured, open-ended interviews. Qualitative coding techniques were used for data analysis, to identify the challenges of engineering quality requirements, the mechanisms behind the challenges and the practices used that could mitigate the impact of those challenges. Further, by using dialog mapping technique for qualitative data structuring, we have mapped the identified mechanisms and practices to the challenges.
   Results: From the perspective of the participating practitioners, our exploratory study revealed 15 challenges classified in five categories: (1) team coordination and communication, (2) quality assurance, (3) quality requirements elicitation, (4) conceptual challenges, and (5) software architecture. The study has also disclosed 13 mechanisms behind the challenges and 9 practices that could mitigate the impact of those challenges.
   Conclusions: The main contributions of the paper are: (1) the explication of the challenges from practitioners' perspective and the comparison of our findings with previously published results, (2) the description of the mechanisms behind the challenges, and (3) the identification of the practices currently used by agile teams that could mitigate the impact of the challenges. The findings of this study provide useful input into the process of designing possible solution approaches to overcome the challenges.
C1 [Alsaqaf, Wasim; Daneva, Maya; Wieringa, Roel] Univ Twente, Enschede, Netherlands.
C3 University of Twente
RP Alsaqaf, W (corresponding author), Univ Twente, Enschede, Netherlands.
EM w.h.a.alsaqaf@utwente.nl; m.daneva@utwente.nl; r.j.wieringa@utwente.nl
RI Harrison, Dylan/AFP-8142-2022
OI Daneva, Maya/0000-0001-7359-8013; Alsaqaf, Wasim Hussein
   Ahmad/0000-0002-0253-428X
CR Abrahamsson P, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.36
   Adler PatriciaA., 1987, Membership Roles in Field Research, V6
   Alsaqaf W., 2018, REFSQ2018, P1
   Alsaqaf  W., 2018, UNDERSTANDING CHALLE
   Alzoubi YI, 2016, INFORM MANAGE-AMSTER, V53, P22, DOI 10.1016/j.im.2015.08.003
   [Anonymous], 2012, Disciplined agile delivery: A practitioner's guide to agile software delivery in the enterprise
   [Anonymous], INT WORK C REQ ENG F
   [Anonymous], 2006, AGILE PRINCIPLES PAT
   [Anonymous], 2010, Practices for Scaling Lean & Agile Development: Large, Multisite, and Offshore Product Development with Large-Scale Scrum
   Apperlo J., 2011, MANAGEMENT 3 0 LEADI
   Beck K., 2001, P 39 INT C EXHIBITIO
   Behutiye W, 2017, LECT NOTES COMPUT SC, V10611, P515, DOI 10.1007/978-3-319-69926-4_41
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Bjarnason E., 2011, AREW 11 P 1 WORKSH A, V3, P1, DOI [10.1145/2068783.2068786, DOI 10.1145/2068783.2068786]
   Boyce Carolyn., 2006, PATHFINDER INT TOOL, DOI DOI 10.1080/14616730210154225
   Burt R. S., 2005, BROKERAGE CLOSURE IN
   Conklin J, 2003, COMP SUPP COMP W SER, P117
   Daneva M, 2014, ESEM
   Daneva M, 2015, IEEE SOFTWARE, V32, P84, DOI 10.1109/MS.2014.134
   Daneva M, 2013, J SYST SOFTWARE, V86, P1333, DOI 10.1016/j.jss.2012.12.046
   Davies  R., 2009, NONFUNCTIONAL REQUIR
   Neto FGD, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P315, DOI 10.1109/REW.2017.33
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dingsoyr T, 2018, EMPIR SOFTW ENG, V23, P490, DOI 10.1007/s10664-017-9524-2
   Domah  D., 2015, NERV METHODOLOGY LIG
   Fagri T.E., 2015, P SCI WORKSH P XP201, P1
   Hitchcock David., 2002, ARGUMENTATION, V16, P287
   Holvitie J, 2018, INFORM SOFTWARE TECH, V96, P141, DOI 10.1016/j.infsof.2017.11.015
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Jorgensen M, 2018, DO AGILE METHODS WOR, P179
   Käpyaho M, 2015, INT REQUIR ENG CONF, P334, DOI 10.1109/RE.2015.7320450
   Kasauli  R., 2017, 2017 IEEE 25 INT REQ, P6
   Kassab M, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P299, DOI 10.1109/ICSEA.2009.50
   King N., 2010, INTERVIEWS QUALITATI
   Kniberg H., 2012, Scaling agile @ spotify with tribes, squads, chapters guilds
   Larman C., 2016, Large-Scale Scrum: More with LeSS
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   Leffingwell D., 2011, Agile software requirements: Lean requirements practices for teams, programs, and the enterprise
   Leffingwell D., 2017, SAFE 4 0 DISTILLED A, V1st
   Mario C., 2013, EXECUTABLE SPECIFICA
   Medeiros Juliana, 2015, CIBSE, P460
   Merriam S. B., 2001, Revised and expanded from case study research in education
   Mohagheghi P, 2017, INFORM SOFTWARE TECH, V88, P96, DOI 10.1016/j.infsof.2017.04.002
   Nawrocki J, 2014, LECT NOTES COMPUT SC, V8327, P40, DOI 10.1007/978-3-319-04298-5_5
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Rolland K.H, 2015, P XP2015
   Rolland K.H., 2016, PROBLEMATIZING AGILE
   Sachdeva V, 2017, PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, DATA SCIENCE AND ENGINEERING (CONFLUENCE 2017), P216, DOI 10.1109/CONFLUENCE.2017.7943152
   Schön EM, 2017, LECT NOTES BUS INF P, V283, P37, DOI 10.1007/978-3-319-57633-6_3
   Uludag O, EDOC 18, P191
   Yin D.R. K., 2017, Case Study Research and Applications: Design and Methods
NR 52
TC 49
Z9 53
U1 2
U2 34
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2019
VL 110
BP 39
EP 55
DI 10.1016/j.infsof.2019.01.009
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HU1RI
UT WOS:000465049100004
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Ghosh, A
   Nashaat, M
   Miller, J
AF Ghosh, Aindrila
   Nashaat, Mona
   Miller, James
TI The current state of software license renewals in the IT industry
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software license renewals; Grounded theory; Constant comparative method;
   Customer churn; Effective communication; Customer trust
ID CONSTANT COMPARATIVE METHOD; CUSTOMER CHURN; STRATEGIC RENEWAL;
   AGREEMENT; COMMUNICATION; CHALLENGES; PREDICTION; LEADERSHIP; BEHAVIOR
AB Context: The software industry has changed significantly in the 21st century; no longer is it dominated by organizations seeking to sell products directly to customers, instead most multinational organizations nowadays provide services via licensing agreements. These licenses are for a fixed-duration; and hence, the question of their renewal becomes of paramount importance for the selling organization's revenue.
   Objective: Despite its financial impact, the topic of license renewal strategies, processes, tools, and support receives very limited attention in the research literature. Hence, it is believed that an interesting research question is: What is the state of current industrial practice in this essential field?
   Method: To initially explore the topic of license renewals, this paper implements the Grounded theory method. To implement the method, semi-structured, cross-sectional, anonymous, selfreported interviews are carried out with 20 professionals from multiple organizations, later the Constant Comparative Method is used to analyse the collected data.
   Results: This paper presents a synthesized picture of the current industrial practice of the end-to-end software license renewal process. Alongside, it also identifies a set of challenges and risk factors that impact on renewal decisions of customers, hence on the overall revenue of seller organizations. Finally, using structured brainstorming techniques, this paper identifies 11 future research directions, that can help organizations with the mitigation of the risks in the license renewal process.
   Conclusion: It is concluded that lack of effective communication among stakeholders, the absence of customer trust, and scarcity of value generated from purchased licenses are among the primary drivers that influence renewal decisions. Also, there is a need to invest in intelligent automation along with artificial intelligence enabled analytics in order to enhance customer satisfaction.
C1 [Ghosh, Aindrila; Nashaat, Mona; Miller, James] Univ Alberta, Dept Elect & Comp Engn, 116 St NW, Edmonton, AB T6G 1H9, Canada.
C3 University of Alberta
RP Ghosh, A (corresponding author), Univ Alberta, Dept Elect & Comp Engn, 116 St NW, Edmonton, AB T6G 1H9, Canada.
EM aindrila@ualberta.ca; nashaata@ualberta.ca; jimm@ualberta.ca
RI Ghosh, Aindrila/KFA-4845-2024; Nashaat, Mona/KPY-0439-2024
OI Nashaat, Mona/0000-0002-7580-5757; Ghosh, Aindrila/0000-0003-4908-9491;
   Miller, James/0000-0001-5095-3000
CR Agarwal R, 2009, ORGAN SCI, V20, P281, DOI 10.1287/orsc.1090.0423
   Aluri A, 2019, J HOSP TOUR RES, V43, P78, DOI 10.1177/1096348017753521
   Andrienko G., 2007, ACM SIGKDD Explorations Newsletter, V9, P38, DOI [DOI 10.1145/1345448.1345455, 10.1145/1345448.1345455]
   [Anonymous], INT ENCY POLITICAL C
   [Anonymous], 2007, GUIDE ADV EMPIRICAL
   [Anonymous], 2016, ADV NEURAL INFORM PR
   Ascarza E., 2018, CUSTOMER NEEDS SOLUT, V5, P65, DOI 10.1007/s40547-017-0080-0
   Bi WJ, 2016, IEEE T IND INFORM, V12, P1270, DOI 10.1109/TII.2016.2547584
   Bodenmann B., 2010, Synthesis report on the state of the art on firmographics
   Boeije H, 2002, QUAL QUANT, V36, P391, DOI 10.1023/A:1020909529486
   Bureau USC, 2017, N AM IND CLASS SYST
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   CAMPION MA, 1993, PERS PSYCHOL, V46, P823, DOI 10.1111/j.1744-6570.1993.tb01571.x
   Carter Nancy., 2014, Oncology Nursing Forum, V41
   Chi  E., 2000, IEEE S INF VIS, DOI [10.1109/IN-FV1S.2000.885092, DOI 10.1109/IN-FVIS.2000.885092]
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Coussement K, 2008, EXPERT SYST APPL, V34, P313, DOI 10.1016/j.eswa.2006.09.038
   Eichorn F.L., 2004, PROBLEMS PERSPECTIVE, P154
   EINHORN D, 1985, J PATENT TRADEMARK, V67, P509
   Fram SM, 2013, QUAL REP, V18
   Gartner, 2011, CRM STRAT TECHN UND
   Ge  Y., 2017, SYST INF ENG DES S, DOI [10.1109/SIEDS.2017.7937698, DOI 10.1109/SIEDS.2017.7937698]
   GLASER BG, 1965, SOC PROBL, V12, P436, DOI 10.1525/sp.1965.12.4.03a00070
   Glaser BG., 1967, Nurs. Res., DOI [DOI 10.4324/9780203793206, 10.1097/00006199-196807000-00014]
   Guenzi P, 2016, J BUS IND MARK, V31, P553, DOI 10.1108/JBIM-02-2015-0037
   Guhr N, 2019, INFORM SYST J, V29, P340, DOI 10.1111/isj.12202
   Haenlein M, 2017, BUS HORIZONS, V60, P577, DOI 10.1016/j.bushor.2017.06.002
   Hallgren Kevin A, 2012, Tutor Quant Methods Psychol, V8, P23
   Hannan  S., 2016, ABSTR EC FINANCE MAN, V5, P1
   Hassouna M., 2015, International Business Research, V8, P224, DOI DOI 10.5539/IBR.V8N6P224
   Hawkins  I., 2018, FUTURE IS HAPPENING
   Hewitt-Taylor J, 2001, Nurs Stand, V15, P39
   Hill NS, 2016, PERS PSYCHOL, V69, P159, DOI 10.1111/peps.12108
   I. Corporation, 2017, ANN REPORT
   Jahromi AT, 2014, IND MARKET MANAG, V43, P1258, DOI 10.1016/j.indmarman.2014.06.016
   Jeffery K, 2018, IEEE CLOUD COMPUT, V5, P4
   Kifetew F. M., 2017, P 10 INT I WORKSH US
   Kolb S. M., 2018, J EMERG TRENDS ED RE, V3, P83, DOI [10.1109/TIL2016.2547584, DOI 10.1109/TII.2016.2547584]
   Kurasaki Karen, 2000, FIELD METHOD, V12, P179, DOI [10.1177/1525822X0001200301, DOI 10.1177/1525822X0001200301]
   Leeflang PSH, 2014, EUR MANAG J, V32, P1, DOI 10.1016/j.emj.2013.12.001
   Lemon KN, 2016, J MARKETING, V80, P69, DOI 10.1509/jm.15.0420
   Leonard M, 2004, QUAL SAF HEALTH CARE, V13, pI85, DOI 10.1136/qshc.2004.010033
   Lincoln Y.S., 1985, NATURALISTIC INQUIRY, P75
   Lombard M, 2002, HUM COMMUN RES, V28, P587, DOI 10.1093/hcr/28.4.587
   Lowry PB, 2016, INFORM SYST RES, V27, P962, DOI 10.1287/isre.2016.0671
   Lu N, 2014, IEEE T IND INFORM, V10, P1659, DOI 10.1109/TII.2012.2224355
   M. Corporation, 2017, ANN REPORT
   Marakanon L., 2017, Kasetsart Journal of Social Sciences, V38, P24
   Marotta-Wurgler F, 2008, J EMPIR LEGAL STUD, V5, P447, DOI 10.1111/j.1740-1461.2008.00130.x
   Marotta-Wurgler Florencia., 2007, J. EMPIRICAL LEGAL STUD, V4, P677, DOI DOI 10.1111/J.1740-1461.2007.00104.X
   Mettler T, 2018, INFORM SYST J, V28, P684, DOI 10.1111/isj.12154
   Mettler T, 2016, J INF TECHNOL-UK, V31, P101, DOI 10.1057/jit.2015.28
   Moody GD, 2013, INFORM MANAGE-AMSTER, V50, P322, DOI 10.1016/j.im.2013.04.005
   Olsen Kai A., 2011, COMPUTER, V44, P111
   Olson JD, 2016, QUAL REP, V21, P26
   Rawlinson JG, 2017, Creative Thinking and Brainstorming
   Rindfleisch A, 2008, J MARKETING RES, V45, P261, DOI 10.1509/jmkr.45.3.261
   Sbaraini A, 2011, BMC MED RES METHODOL, V11, DOI 10.1186/1471-2288-11-128
   Schmitt A, 2018, INT J MANAG REV, V20, P81, DOI 10.1111/ijmr.12117
   Segal D., 2006, CLINICIANS HDB ADULT, P121, DOI DOI 10.1016/B978-012343013-7/50007-0
   Shahzad B, 2017, IEEE ACCESS, V5, P24262, DOI 10.1109/ACCESS.2017.2762729
   Sharma A., 2016, Human Resource Management International Digest, V24, P16, DOI [DOI 10.1108/HRMID-04-2016-0055, 10.1108/HRMID-04-2016-0055]
   Shi  Y., 2011, INT C SWARM INT BERL, DOI [10.1007/978-3-642-21515-5-36, DOI 10.1007/978-3-642-21515-5-36]
   Shirey MR, 2011, J NURS ADMIN, V41, P497, DOI 10.1097/NNA.0b013e3182378a53
   Strauss A., 1994, HDB QUALITATIVE RES, P273, DOI DOI 10.1007/BF00988593
   Suter E, 2009, J INTERPROF CARE, V23, P41, DOI 10.1080/13561820802338579
   TINSLEY HEA, 1975, J COUNS PSYCHOL, V22, P358, DOI 10.1037/h0076640
   Tuunanen T, 2009, AUTOMAT SOFTW ENG, V16, P455, DOI 10.1007/s10515-009-0054-z
   Umashankar N, 2017, J MARKETING, V81, P79, DOI 10.1509/jm.16.0125
   Urquhart C., 2016, ENACTING RES METHODS, V1, P129, DOI [10.1007/978-3-319-29266-37, DOI 10.1007/978-3-319-29266-3_7]
   Vafeiadis T, 2015, SIMUL MODEL PRACT TH, V55, P1, DOI 10.1016/j.simpat.2015.03.003
   Vance A, 2012, INFORM MANAGE-AMSTER, V49, P190, DOI 10.1016/j.im.2012.04.002
   Venkatesh V, 2012, MIS QUART, V36, P157
   Walsh G, 2017, J PROD BRAND MANAG, V26, P227, DOI 10.1108/JPBM-07-2016-1267
   Wangenheim FV, 2017, J BUS RES, V79, P181, DOI 10.1016/j.jbusres.2017.06.008
   Westergaard  M., 2012, OTM CONF INT C MOV M, DOI [10.1007/978-3-642-33606-5-16, DOI 10.1007/978-3-642-33606-5-16]
   Wiersema F., 2013, IND MARKET MANAG, V42, P470, DOI 10.1016/j.indmarman.2013.02.015
NR 78
TC 5
Z9 5
U1 0
U2 26
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2019
VL 108
BP 139
EP 152
DI 10.1016/j.infsof.2019.01.001
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HM3IE
UT WOS:000459366200009
DA 2024-07-18
ER

PT J
AU García-Valls, M
   Escribano-Barreno, J
   García-Muñoz, J
AF Garcia-Valls, Marisol
   Escribano-Barreno, Julio
   Garcia-Munoz, Javier
TI An extensible collaborative framework for monitoring software quality in
   critical systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software quality; Open source framework; Quality monitoring; Source code
   analysis; Critical systems development
AB Context: Current practices on software quality monitoring for critical software systems development rely on the manual integration of the information provided by a number of independent commercial tools for code analysis; some external tools for code analysis are mandatory in some critical software projects that must comply with specific norms. However, there are no approaches to providing an integrated view over the analysis results of independent external tools into a unified software quality framework.
   Objective: This paper presents the design and development of ESQUF (Enhanced Software Quality Monitoring Framework) suitable for critical software systems. It provides the above enriched quality results presentation derived not only from multiple external tools but from the local analysis functions of the framework.
   Method: An analysis of the norms and standards that apply to critical software systems is provided. The detailed and modular design of ESQUF adjusts to the integration requirements for external tools. UML is used for designing the framework, and Java is used to provide the detailed design. The framework is validated with a prototype implementation that integrates two different external tools and their respective quality results over a real software project source code.
   Results: The integration of results files and data from external tools as well as from internal analysis functions is enabled. The analysis of critical software projects is made posible yielding a collaborative space where verification engineers share information about code analysis activities of specific projects; and single presentation space with rich static and dynamic analysis information of software projects that comply with the required development norms.
C1 [Garcia-Valls, Marisol; Garcia-Munoz, Javier] Univ Carlos III Madrid, Dept Telemat Engn, Leganes, Spain.
   [Escribano-Barreno, Julio] Indra Sistemas, Alcobendas 28018, Spain.
C3 Universidad Carlos III de Madrid; Indra
RP García-Valls, M (corresponding author), Univ Carlos III Madrid, Dept Telemat Engn, Leganes, Spain.
EM mvalls@it.uc3m.es; jebarreno@indra.es; 100291551@alumnos.uc3m.es
RI Garcia-Valls, Marisol/D-6064-2013
OI Garcia-Valls, Marisol/0000-0003-2383-5310
CR [Anonymous], STAT VER DYN PROP
   [Anonymous], FORM METH SUPPL DO 1
   [Anonymous], C E A LIST
   [Anonymous], RAILW APPL COMM SIGN
   [Anonymous], PECAL2210
   [Anonymous], 2002, Metrics and Models in Software Quality Engineering
   [Anonymous], 2210 2210
   [Anonymous], IEEE COMPUTER
   [Anonymous], REDUCING HUMAN EFFOR
   [Anonymous], DO332 RTCA INC
   [Anonymous], 2014, SOFTWARE METRICS RIG, DOI DOI 10.1201/B17461
   [Anonymous], 2011, 61513 IEC
   [Anonymous], 2110 AQAP
   [Anonymous], 2011, ISO 262622011
   [Anonymous], PECAL2110
   [Anonymous], COD AN TOOL
   [Anonymous], DO278A RTCA INC
   [Anonymous], DO330 RTCA INC
   [Anonymous], RAP US GUID
   Bersani MM, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1880
   Campbell G., 2013, SONARQUBE IN ACTION
   Cavano J. P., 1978, Proceedings of the Software Quality Assurance Workshop on Functional and Performance Issues, P133, DOI DOI 10.1145/800283.811113
   CMMI Product Team, 2010, Technical Report CMU/SEI-2010-TR-033
   Delmas D, 2007, LECT NOTES COMPUT SC, V4634, P437
   Di Ruscio D, 2015, J SOFTW-EVOL PROC, V27, P294, DOI 10.1002/smr.1716
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   García-Munoz J, 2016, ADV INTELL SYST, V474, P463, DOI 10.1007/978-3-319-40162-1_50
   García-Valls M, 2018, J SYST ARCHITECT, V91, P83, DOI 10.1016/j.sysarc.2018.05.007
   García-Valls M, 2018, J SYST SOFTWARE, V144, P559, DOI 10.1016/j.jss.2018.06.044
   Gousios G, 2009, PROC INT CONF SOFTW, P579, DOI 10.1109/ICSE.2009.5070560
   Gurbuz HG, 2018, SOFTWARE QUAL J, V26, P1327, DOI 10.1007/s11219-017-9386-2
   IEC 61508, 2010, 61508 IEC, V2nd ed.
   Kruchten P, 2013, J SOFTW-EVOL PROC, V25, P351, DOI 10.1002/smr.572
   McCormick JohnW., 2015, BUILDING HIGH INTEGR
   Radio Technical Commission for Aeronautics (RTCA Inc)., 2011, DO-178C
   RTCA Inc, 2011, DO331 RTCA INC
   *RTCA INC, 1992, DO178B RTCA INC
   Seacord R.C., 2013, SEI series in software engineering
NR 38
TC 3
Z9 4
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2019
VL 107
BP 3
EP 17
DI 10.1016/j.infsof.2018.10.005
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HJ0YN
UT WOS:000456889200002
OA Green Published
DA 2024-07-18
ER

PT J
AU Amalfitano, D
   Riccio, V
   Amatucci, N
   De Simone, V
   Fasolino, AR
AF Amalfitano, Domenico
   Riccio, Vincenzo
   Amatucci, Nicola
   De Simone, Vincenzo
   Fasolino, Anna Rita
TI Combining Automated GUI Exploration of Android apps with Capture and
   Replay through Machine Learning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Android; Automated GUI Exploration; Dynamic analysis; Automated input
   generation; Machine Learning; Capture and Replay
AB Context: Automated GUI Exploration Techniques have been widely adopted in the context of mobile apps for supporting critical engineering tasks such as reverse engineering, testing, and network traffic signature generation. Although several techniques have been proposed in the literature, most of them fail to guarantee the exploration of relevant parts of the applications when GUIs require to be exercised with particular and complex input event sequences. We refer to these GUIs as Gate GUIs and to the sequences required to effectively exercise them as Unlocking GUI Input Event Sequences.
   Objective: In this paper, we aim at proposing a GUI exploration approach that exploits the human involvement in the automated process to solve the limitations introduced by Gate GUIs, without requiring the preliminary configuration of the technique or the user involvement for the entire duration of the exploration process.
   Method: We propose juGULAR, a Hybrid GUI Exploration Technique combining Automated GUI Exploration with Capture and Replay. Our approach is able to automatically detect Gate GUIs during the app exploration by exploiting a Machine Learning approach and to unlock them by leveraging input event sequences provided by the user. We implement juGULAR in a modular software architecture that targets the Android mobile platform. We evaluate the performance of juGULAR by an experiment involving 14 real Android apps.
   Results: The experiment shows that the hybridization introduced by juGULAR allows to improve the exploration capabilities in terms of Covered Activities, Covered Lines of Code, and generated Network Traffic Bytes at a reasonable manual intervention cost. The experimental results also prove that juGULAR is able to outperform the state-of-the-practice tool Monkey.
   Conclusion: We conclude that the combination of Automated GUI Exploration approaches with Capture and Replay techniques is promising to achieve a thorough app exploration. Machine Learning approaches aid to pragmatically integrate these two techniques.
C1 [Amalfitano, Domenico; Riccio, Vincenzo; Amatucci, Nicola; De Simone, Vincenzo; Fasolino, Anna Rita] Univ Naples Federico II, Dept Elect Engn & Informat Technol, Via Claudio 21, I-80125 Naples, Italy.
C3 University of Naples Federico II
RP Fasolino, AR (corresponding author), Univ Naples Federico II, Dept Elect Engn & Informat Technol, Via Claudio 21, I-80125 Naples, Italy.
EM annarita.fasolino@unina.it
RI Riccio, Vincenzo/AAI-1905-2020; Amalfitano, Domenico/HJH-4638-2023;
   Fasolino, Anna Rita/V-4582-2019
OI Riccio, Vincenzo/0000-0002-6229-8231; Amalfitano,
   Domenico/0000-0002-4761-4443; Fasolino, Anna Rita/0000-0001-7116-019X;
   Amatucci, Nicola/0000-0001-8971-9641
CR Adamo D, 2018, INFORM SOFTWARE TECH, V99, P98, DOI 10.1016/j.infsof.2018.03.007
   Amalfitano D., 2017, SOFTW TEST VERIF REL, DOI [10.1002/stvr.1654, DOI 10.1002/STVR.1654.E1654N/AE1654STVR.1654]
   Amalfitano D, 2017, J SYST SOFTWARE, V125, P322, DOI 10.1016/j.jss.2016.12.017
   Amalfitano D, 2015, IEEE SOFTWARE, V32, P53, DOI 10.1109/MS.2014.55
   Amalfitano D, 2012, IEEE INT CONF AUTOM, P258, DOI 10.1145/2351676.2351717
   [Anonymous], 2012, EXPT SOFTWARE ENG, DOI DOI 10.1007/978-3-642-29044-2
   Azim T, 2013, ACM SIGPLAN NOTICES, V48, P641, DOI [10.1145/2509136.2509549, 10.1145/2544173.2509549]
   Banerjee A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P588, DOI 10.1145/2635868.2635871
   Banerjee I, 2013, INFORM SOFTWARE TECH, V55, P1679, DOI 10.1016/j.infsof.2013.03.004
   Belli F., 2012, 2012 International Conference on Software Security and Reliability Companion, P198, DOI 10.1109/SERE-C.2012.24
   Chen Y, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P815, DOI 10.1145/3133956.3134009
   Choi W, 2013, ACM SIGPLAN NOTICES, V48, P623, DOI [10.1145/2544173.2509552, 10.1145/2509136.2509552]
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Dai SF, 2013, IEEE INFOCOM SER, P809
   Deng XT, 1998, J ACM, V45, P215, DOI 10.1145/274787.274788
   Di Lucca G.A., 2007, 23 IEEE INT C SOFTW, P385, DOI [10.1109/ICSM.2007.4362651, DOI 10.1109/ICSM.2007.4362651]
   Dutia S. N., 2015, P 4 ANN ACM C RES IN, P43
   Eler MM, 2018, IEEE INT CONF SOFTW, P116, DOI 10.1109/ICST.2018.00021
   Ermuth Markus, 2016, P INT S SOFTW TEST A, P82
   Fraigniaud P, 2005, THEOR COMPUT SCI, V345, P331, DOI 10.1016/j.tcs.2005.07.014
   Galar M, 2011, PATTERN RECOGN, V44, P1761, DOI 10.1016/j.patcog.2011.01.017
   García-Pedrajas N, 2011, INFORM FUSION, V12, P111, DOI 10.1016/j.inffus.2010.06.010
   Gomez L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P72, DOI 10.1109/ICSE.2013.6606553
   Han J, 2012, MOR KAUF D, P1
   Hao S, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P204, DOI 10.1145/2594368.2594390
   Hu G., 2014, P ACM EUROSYS, p18:1
   Karami M, 2013, 2013 IEEE 7TH INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY - COMPANION (SERE-C), P183, DOI 10.1109/SERE-C.2013.35
   Linares-Vásquez M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P111, DOI 10.1109/MSR.2015.18
   Liu P, 2017, PROC INT CONF SOFTW, P643, DOI 10.1109/ICSE.2017.65
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Mahmood R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P599, DOI 10.1145/2635868.2635896
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Mao K, 2017, IEEE INT CONF AUTOM, P16, DOI 10.1109/ASE.2017.8115614
   Memon A, 2013, WORK CONF REVERSE EN, P11, DOI 10.1109/WCRE.2013.6671275
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Muccini H., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P29, DOI 10.1109/IWAST.2012.6228987
   Nguyen BN, 2014, AUTOMAT SOFTW ENG, V21, P65, DOI 10.1007/s10515-013-0128-9
   Panichella S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1023, DOI 10.1145/2950290.2983938
   Seng KP, 2018, IEEE T AFFECT COMPUT, V9, P3, DOI 10.1109/TAFFC.2016.2588488
   Su X, 2015, SECUR COMMUN NETW, V8, P4273, DOI 10.1002/sec.1341
   Taylor VF, 2016, 1ST IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY, P439, DOI 10.1109/EuroSP.2016.40
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Zeng X, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P987, DOI 10.1145/2950290.2983958
NR 44
TC 24
Z9 27
U1 2
U2 21
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2019
VL 105
BP 95
EP 116
DI 10.1016/j.infsof.2018.08.007
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HD5RF
UT WOS:000452586900007
DA 2024-07-18
ER

PT J
AU Samimi-Dehkordi, L
   Zamani, B
   Kolandouz-Rahimi, S
AF Samimi-Dehkordi, Leila
   Zamani, Bahman
   Kolandouz-Rahimi, Shekoufeh
TI EVL plus Strace: a novel bidirectional model transformation approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bidirectional model transformation; Model-Driven development; Epsilon
   Validation Language; Traceability
ID LINKS
AB Context: Model transformation, as one of the cornerstones of Model-Driven Engineering (MDE) paradigm, produces target models from source models. In most of the practical cases, both source and target models are changed independently and it is essential to preserve the consistency between them. Bidirectional transformation (Bx) provides a mechanism to re-establish this inter-model consistency. Bx approaches suffer from several limitations, such as lack of a comprehensive implementation, low leamability, and mismanagement of update conflicts.
   Objective: To alleviate the aforementioned drawbacks, we propose a novel Bx approach, called EVL + Strace, which is built using the Epsilon Validation Language (EVL) on a domain-specific trace metamodel (Strace). Furthermore, an Eclipse-based toolkit, called MoDEBiTE, is developed to automatically produce the EVL + Strace artifacts including the specific trace metamodel and transformation code.
   Method: EVL + Strace exploits the ability of EVL to transform user updates on models from source to target and vice versa, simultaneously. The applied trace metamodel should be specific to the domains of source and target metamodels that prevents illegitimate trace elements. Additionally, it enables developers to specify the transformation concepts more precisely. A running example is applied to explain the components of EVL + Strace and application of MoDEBiTE. Result EVL + Strace is the first practical interactive approach that can provide important bidirectional features, such as preservation and propagation. A feature model of Bx approaches is applied to compare EVL + Strace with the well-known Bx languages. To show the superiority of EVL + Strace and applicability of MoDEBiTE, a comprehensive evaluation on six case studies is performed.
   Conclusion: EVL + Strace provides an interactive transformation system to manage update conflicts. It uses the EVL language for defining Bx transformation that has an easy-to-learn syntax. It is developed based on Epsilon, which is a comprehensive and actively updated framework.
C1 [Samimi-Dehkordi, Leila; Zamani, Bahman; Kolandouz-Rahimi, Shekoufeh] Univ Isfahan, Dept Software Engn, MDSE Res Grp, Esfahan, Iran.
C3 University of Isfahan
RP Zamani, B (corresponding author), Univ Isfahan, Dept Software Engn, MDSE Res Grp, Esfahan, Iran.
EM samimi@eng.ui.ac.ir; zamani@eng.ui.ac.ir; sh.rahimi@eng.ui.ac.ir
RI Samimi-Dehkordi, Leila/ABA-2472-2021
OI Zamani, Bahman/0000-0001-6424-1442
CR Ajit S, 2017, SOFTW SYST MODEL, V16, P559, DOI 10.1007/s10270-015-0480-2
   Al-Sibahi AS, 2015, TECHNICAL REPORT
   Bollati VA, 2013, INFORM SOFTWARE TECH, V55, P699, DOI 10.1016/j.infsof.2012.11.004
   Anjorin A, 2017, TRANSFORMATION TOOL, P15
   Anjorin Anthony, 2015, ECEASST, V73, DOI DOI 10.14279/TUJ.ECEASST.73.1031
   [Anonymous], 2010, P MDI
   [Anonymous], 2016, METAOBJECT FACILITY
   [Anonymous], ELECT NOTES THEORETI
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Antkiewicz M, 2008, LECT NOTES COMPUT SC, V5235, P3, DOI 10.1007/978-3-540-88643-3_1
   Cicchetti A, 2011, LECT NOTES COMPUT SC, V6563, P183, DOI 10.1007/978-3-642-19440-5_11
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Czarnecki K, 2009, LECT NOTES COMPUT SC, V5563, P260, DOI 10.1007/978-3-642-02408-5_19
   Del Fabro MD, 2009, SOFTW SYST MODEL, V8, P305, DOI 10.1007/s10270-008-0094-z
   Drivalos N, 2009, LECT NOTES COMPUT SC, V5452, P151, DOI 10.1007/978-3-642-00434-6_10
   FABRO MDD, 2006, ECL MOD S ECL SUMM E
   Fleck M, 2017, IEEE T SOFTWARE ENG, V43, P1009, DOI 10.1109/TSE.2017.2654255
   Guerra E, 2013, SOFTW SYST MODEL, V12, P555, DOI 10.1007/s10270-011-0211-2
   Guerra E, 2012, FUND INFORM, V114, P73, DOI 10.3233/FI-2011-618
   Guerra E, 2010, LECT NOTES COMPUT SC, V6394, P376
   Guerra E, 2010, LECT NOTES COMPUT SC, V6394, P106
   Hidaka S, 2016, SOFTW SYST MODEL, V15, P907, DOI 10.1007/s10270-014-0450-0
   Hidaka S, 2010, ICFP 2010: PROCEEDINGS OF THE 2010 ACM SIGPLAN INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING, P205
   Hildebrandt S., 2013, ELECT COMMUN EASST, V57
   Hinkel G, 2019, SOFTW SYST MODEL, V18, P249, DOI 10.1007/s10270-017-0617-6
   Jiménez A, 2015, SCI COMPUT PROGRAM, V98, P3, DOI 10.1016/j.scico.2014.09.003
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kappel G, 2008, LECT NOTES BUS INF P, V5, P158
   Kolovos D. S., 2006, 2 EC MDA WORKSH TRAC
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kolovos DS, 2009, LECT NOTES COMPUT SC, V5115, P204, DOI 10.1007/978-3-642-11447-2_13
   Kolovos DS, 2007, J OBJECT TECHNOL, V6, P53, DOI 10.5381/jot.2007.6.9.a3
   Macedo N, 2017, IEEE T SOFTWARE ENG, V43, P615, DOI 10.1109/TSE.2016.2620145
   Macedo N, 2016, SOFTW SYST MODEL, V15, P783, DOI 10.1007/s10270-014-0437-x
   Vara JM, 2014, IEEE T SOFTWARE ENG, V40, P555, DOI 10.1109/TSE.2014.2316132
   Maroukian K., 2014, TTC STAF, P2
   Paige RF, 2011, SOFTW SYST MODEL, V10, P469, DOI 10.1007/s10270-010-0158-8
   Pais R, 2014, IFIP ADV INF COMM TE, V423, P227
   Poskitt ChristopherM., 2014, Workshop on the Analysis of Model Transformations (AMT), P70
   Rose LM, 2008, LECT NOTES COMPUT SC, V5095, P1, DOI 10.1007/978-3-540-69100-6_1
   Samimi-Dehkordi L., 2017, P 10 TRANSF TOOL CON, P54
   Samimi-Dehkordi L, 2015, 2015 5TH INTERNATIONAL CONFERENCE ON COMPUTER AND KNOWLEDGE ENGINEERING (ICCKE), P123, DOI 10.1109/ICCKE.2015.7365871
   Sasano I., 2011, LNCS, V6707, P138, DOI [10.1007/978-3-642-21732-610, DOI 10.1007/978-3-642-21732-610]
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schürr A, 2008, LECT NOTES COMPUT SC, V5214, P411, DOI 10.1007/978-3-540-87405-8_28
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Stevens P, 2009, LECT NOTES COMPUT SC, V5563, P165, DOI 10.1007/978-3-642-02408-5_12
   Stevens P, 2008, LECT NOTES COMPUT SC, V5235, P408, DOI 10.1007/978-3-540-88643-3_10
   Tisi M, 2009, LECT NOTES COMPUT SC, V5562, P18, DOI 10.1007/978-3-642-02674-4_3
   Westfechtel B, 2018, SOFTW SYST MODEL, V17, P989, DOI 10.1007/s10270-016-0527-z
   Willink Edward, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P58, DOI 10.1007/978-3-642-38883-5_8
   Wimmer M., 2009, OOPSLA COMPANION, P783, DOI [10.1145/1639950.1640013, DOI 10.1145/1639950.1640013]
   Xiong Y., 2007, P 22 IEEE ACM INT C, P164, DOI [10.1145/1321631.1321657, DOI 10.1145/1321631.1321657]
   Zschaler S, 2010, LECT NOTES COMPUT SC, V5969, P334
NR 57
TC 16
Z9 16
U1 1
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2018
VL 100
BP 47
EP 72
DI 10.1016/j.infsof.2018.03.011
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GJ1VN
UT WOS:000435056100004
DA 2024-07-18
ER

PT J
AU Bin Ali, N
   Usman, M
AF Bin Ali, Nauman
   Usman, Muhammad
TI Reliability of search in systematic reviews: Towards a quality
   assessment framework for the automated-search strategy
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Secondary studies; Systematic literature reviews; Search strategies;
   Reliability; Credibility; Guidelines
ID SOFTWARE PRODUCT LINES; MEASUREMENT TOOL; RISK; PERFORMANCE; CHALLENGES;
   LANGUAGES; AMSTAR; BIAS
AB Context The trust in systematic literature reviews (SLRs) to provide credible recommendations is critical for establishing evidence-based software engineering (EBSE) practice. The reliability of SLR as a method is not a given and largely depends on the rigor of the attempt to identify, appraise and aggregate evidence. Previous research, by comparing SLRs on the same topic, has identified search as one of the reasons for discrepancies in the included primary studies. This affects the reliability of an SLR, as the papers identified and included in it are likely to influence its conclusions.
   Objective: We aim to propose a comprehensive evaluation checklist to assess the reliability of an automated search strategy used in an SLR.
   Method: Using a literature review, we identified guidelines for designing and reporting automated-search as a primary search strategy. Using the aggregated design, reporting and evaluation guidelines, we formulated a comprehensive evaluation checklist. The value of this checklist was demonstrated by assessing the reliability of search in 27 recent SLRs.
   Results: Using the proposed evaluation checklist, several additional issues (not captured by the current evaluation checklist) related to the reliability of search in recent SLRs were identified. These issues severely limit the coverage of literature by the search and also the possibility to replicate it.
   Conclusion: Instead of solely relying on expensive replications to assess the reliability of SLRs, this work provides means to objectively assess the likely reliability of a search-strategy used in an SLR. It highlights the often assumed aspect of repeatability of search when using automated-search. Furthermore, by explicitly considering repeatability and consistency as sub-characteristics of a reliable search, it provides a more comprehensive evaluation checklist than the ones currently used in EBSE.
C1 [Bin Ali, Nauman; Usman, Muhammad] Blekinge Inst Technol, Karlskrona, Sweden.
C3 Blekinge Institute Technology
RP Bin Ali, N (corresponding author), Blekinge Inst Technol, Karlskrona, Sweden.
EM nauman.ali@bth.se; muhammad.usman@bth.se
RI Ali, Nauman bin/J-4293-2015
OI Ali, Nauman bin/0000-0001-7266-5632
FU ELLIIT, a Strategic Area within IT and Mobile Communications - Swedish
   Government; EASE, the Industrial Excellence Centre for Embedded
   Applications Software Engineering
FX The authors would like to thank Prof. Claes Wohlin, Dr. Bogdan
   Marculescu and Prof. Kai Petersen for their valuable feedback and
   discussions. The work of Nauman bin Ali has been supported by ELLIIT, a
   Strategic Area within IT and Mobile Communications, funded by the
   Swedish Government, and from EASE, the Industrial Excellence Centre for
   Embedded Applications Software Engineering.
CR Afzal W, 2016, J SYST SOFTWARE, V111, P1, DOI 10.1016/j.jss.2015.08.048
   Ali NB, 2014, P 8 ACM IEEE INT S E, P1, DOI [10.1145/2652524.2652557, DOI 10.1145/2652524.2652557]
   ALI NB, 2014, J SYST SOFTW, V97, P65
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], 2007, APPRAISING QUALITY S
   [Anonymous], 2016, P 10 INT S EMP SOFT
   [Anonymous], 2001, NHS CTR REV DISSEMIN
   Badampudi D, 2016, J SYST SOFTWARE, V121, P105, DOI 10.1016/j.jss.2016.07.027
   Bailey J, 2007, 2 INT WORKSH REAL EV, P2, DOI [10.1109/REBSE.2007.4, DOI 10.1109/REBSE.2007.4]
   Bero L, 2017, AM J PUBLIC HEALTH, V107, P93, DOI 10.2105/AJPH.2016.303518
   Bissi W, 2016, INFORM SOFTWARE TECH, V74, P45, DOI 10.1016/j.infsof.2016.02.004
   Burda BU, 2016, SYST REV-LONDON, V5, DOI 10.1186/s13643-016-0237-1
   Centre for Reviews and dissemination (CRD), 1999, DAT ABSTR REV EFF DA
   Chauhan MA, 2017, SOFTWARE PRACT EXPER, V47, P599, DOI 10.1002/spe.2409
   Chen Lianping, 2010, 14 INT C EVALUATION
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   Dieste O, 2009, EMPIR SOFTW ENG, V14, P513, DOI 10.1007/s10664-008-9091-7
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Febrero F, 2016, INFORM SOFTWARE TECH, V70, P18, DOI 10.1016/j.infsof.2015.09.006
   Fox DM, 2017, AM J PUBLIC HEALTH, V107, P88, DOI 10.2105/AJPH.2016.303485
   Garousi V, 2016, INFORM SOFTWARE TECH, V80, P195, DOI 10.1016/j.infsof.2016.09.002
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Gasparic M, 2016, J SYST SOFTWARE, V113, P101, DOI 10.1016/j.jss.2015.11.036
   Greenhalgh T., 2014, READ PAPER BASICS EV
   Guinea AS, 2016, J SYST SOFTWARE, V118, P251, DOI 10.1016/j.jss.2016.05.024
   Haselberger D, 2016, INFORM SOFTWARE TECH, V70, P1, DOI 10.1016/j.infsof.2015.09.003
   Higgins J., 2016, TECHNICAL REPORT
   Hoda R, 2017, INFORM SOFTWARE TECH, V85, P60, DOI 10.1016/j.infsof.2017.01.007
   Idri A, 2016, J SYST SOFTWARE, V118, P151, DOI 10.1016/j.jss.2016.05.016
   Ioannidis JPA, 2016, MILBANK Q, V94, P485, DOI 10.1111/1468-0009.12210
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham B, 2011, EAST 2011: EVIDENTIAL ASSESSMENT OF SOFTWARE TECHNOLOGIES, P3
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Lenberg P, 2017, EMPIR SOFTW ENG, V22, P2179, DOI 10.1007/s10664-016-9482-0
   Li Z, 2016, J SYST SOFTWARE, V114, P1, DOI 10.1016/j.jss.2015.10.042
   MacDonell S, 2010, IEEE T SOFTWARE ENG, V36, P676, DOI 10.1109/TSE.2010.28
   Martins LEG, 2016, INFORM SOFTWARE TECH, V75, P71, DOI 10.1016/j.infsof.2016.04.002
   MOHER D, 2009, PLOS MED, V6, P1
   Myllärniemi V, 2016, EMPIR SOFTW ENG, V21, P1623, DOI 10.1007/s10664-014-9359-z
   Neiva FW, 2016, INFORM SOFTWARE TECH, V72, P137, DOI 10.1016/j.infsof.2015.12.013
   NHLBI, 2014, QUAL ASS SYST REV ME
   Niazi M, 2016, INFORM SOFTWARE TECH, V80, P1, DOI 10.1016/j.infsof.2016.08.002
   Nurdiani I, 2016, J SYST SOFTWARE, V119, P162, DOI 10.1016/j.jss.2016.06.043
   Petersen K, 2011, INT SYMP EMP SOFTWAR, P351, DOI 10.1109/ESEM.2011.46
   Rosen L, 2016, BMC MED RES METHODOL, V16, DOI 10.1186/s12874-016-0118-2
   Sadeghi A, 2017, IEEE T SOFTWARE ENG, V43, P492, DOI 10.1109/TSE.2016.2615307
   Sepúlveda S, 2016, INFORM SOFTWARE TECH, V69, P16, DOI 10.1016/j.infsof.2015.08.007
   Shea BJ, 2007, BMC MED RES METHODOL, V7, DOI 10.1186/1471-2288-7-10
   Shea BJ, 2009, J CLIN EPIDEMIOL, V62, P1013, DOI 10.1016/j.jclinepi.2008.10.009
   Shea BJ, 2007, PLOS ONE, V2, DOI 10.1371/journal.pone.0001350
   Skoglund M., 2009, 13 INT C EVALUATION, P31
   Sobernig S, 2016, J SYST SOFTWARE, V113, P140, DOI 10.1016/j.jss.2015.11.037
   Soomro AB, 2016, INFORM SOFTWARE TECH, V73, P52, DOI 10.1016/j.infsof.2016.01.006
   Tahir T, 2016, INFORM SOFTWARE TECH, V73, P101, DOI 10.1016/j.infsof.2016.01.014
   Tarhan A, 2016, INFORM SOFTWARE TECH, V75, P122, DOI 10.1016/j.infsof.2016.01.010
   Torrecilla-Salinas CJ, 2016, INFORM SOFTWARE TECH, V71, P92, DOI 10.1016/j.infsof.2015.11.002
   Verner JM, 2014, INFORM SOFTWARE TECH, V56, P54, DOI 10.1016/j.infsof.2013.06.005
   Vierhauser M, 2016, INFORM SOFTWARE TECH, V80, P89, DOI 10.1016/j.infsof.2016.08.005
   Weinreich R, 2016, INFORM SOFTWARE TECH, V80, P265, DOI 10.1016/j.infsof.2016.09.007
   Whiting P, 2016, J CLIN EPIDEMIOL, V76, P239, DOI 10.1016/j.jclinepi.2016.03.008
   Whiting P, 2016, J CLIN EPIDEMIOL, V69, P225, DOI 10.1016/j.jclinepi.2015.06.005
   Wohlin C., 2016, P 10 ACM IEEE INT S, P1
   Wohlin C, 2013, J SYST SOFTWARE, V86, P2594, DOI 10.1016/j.jss.2013.04.076
   Wohlin C, 2013, INFORM SOFTWARE TECH, V55, P919, DOI 10.1016/j.infsof.2013.02.002
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wong WE, 2011, J SYST SOFTWARE, V84, P162, DOI 10.1016/j.jss.2010.09.036
   Zhang H, 2010, LECT NOTES COMPUT SC, V6195, P309, DOI 10.1007/978-3-642-14347-2_27
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 78
TC 29
Z9 32
U1 1
U2 26
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2018
VL 99
BP 133
EP 147
DI 10.1016/j.infsof.2018.02.002
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GG5XA
UT WOS:000432767900012
DA 2024-07-18
ER

PT J
AU George, R
   Samuel, P
AF George, Renu
   Samuel, Philip
TI Fixing class design inconsistencies using self regulating particle swarm
   optimization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Class diagram; Activity diagram; Consistency; Self regulating particle
   swarm optimization; Artificial intelligence
ID CONSISTENCY; ALGORITHM
AB Context: The practice of using Unified Modeling Language models during software development and the chances of occurrence of model inconsistencies during software design are increasing. Hence detection of intra-model design inconsistencies is significant in the development of quality software.
   Objective: The existing approaches of detecting class attribute inconsistencies rely on human decision making. Manual detection of inconsistencies is exhaustive, time consuming and sometimes incomplete. Therefore, we propose an automated and novel approach to perform consistency check of class attributes using artificial intelligence.
   Method: Inconsistency in attribute definition and specification is detected and fixed with self regulating particle swarm optimization (SRPSO) algorithm that uses a fitness function to optimize the consistency of attributes in class diagram and activity diagrams. SRPSO is preferred since the best particle is not influenced by its or others experience and uses its direction as the best direction and the remaining particles use self and social knowledge to update their velocity and position.
   Result: The use of artificial intelligence technique for detection and fixing of inconsistencies during the software design phase ensures design completeness through generation of models with consistent attribute definitions and a significant improvement in software quality prediction, accurate code generation, meeting time deadlines, and software production and maintenance cost is achieved.
   Conclusion: Ensuring consistency and completeness of models is an inevitable aspect in software design and development. The proposed approach automates the process of inconsistency detection and correction in class attribute definition and specification using SRPSO algorithm during the design phase of software development.
C1 [George, Renu] Cochin Univ Sci & Technol, Dept Comp Sci, Kochi, Kerala, India.
   [Samuel, Philip] Cochin Univ Sci & Technol, Informat Technol, SOE, Kochi, Kerala, India.
C3 Cochin University Science & Technology; Cochin University Science &
   Technology
RP George, R (corresponding author), Cochin Univ Sci & Technol, Dept Comp Sci, Kochi, Kerala, India.
EM renugeorge@ceconline.edu
CR Al Bahrani LT, 2017, APPL SOFT COMPUT, V58, P401, DOI 10.1016/j.asoc.2017.04.059
   Al-Bahrani L. T., 2017, SWARM EVOLUTION COMP
   Allaki D, 2016, PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 1 (ICEIS), P441, DOI 10.5220/0005815704410447
   [Anonymous], ARTIFICIAL INTELLIGE
   [Anonymous], INT J COMPUT TECHNOL
   Bansal J C, 2011, 3 WORLD C NAT BIOL I, P633, DOI [10.1109/NaBIC.2011.6089659, DOI 10.1109/NABIC.2011.6089659]
   Blanc X, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P511, DOI 10.1145/1368088.1368158
   Blondin J., 2009, Particle Swarm Optimisation: A Tutorial
   Bonyadi MR, 2014, J HEURISTICS, V20, P417, DOI 10.1007/s10732-014-9245-2
   Cheng R, 2015, IEEE T CYBERNETICS, V45, P191, DOI 10.1109/TCYB.2014.2322602
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   Cleghorn CW, 2014, SWARM INTELL-US, V8, P35, DOI 10.1007/s11721-013-0090-y
   da Silva MAA, 2010, LECT NOTES COMPUT SC, V6051, P348, DOI 10.1007/978-3-642-13094-6_28
   Diskin Z., 2010, INT WORKSHOP MODEL D, P42
   Dubauskaite R, 2013, ELEKTRON ELEKTROTECH, V19, P77, DOI 10.5755/j01.eee.19.3.2058
   Ducatelle F, 2010, SWARM INTELL-US, V4, P173, DOI 10.1007/s11721-010-0040-x
   Eberhart RC, 2000, IEEE C EVOL COMPUTAT, P84, DOI 10.1109/CEC.2000.870279
   Egyed A., 2006, 28th International Conference on Software Engineering Proceedings, P381, DOI 10.1145/1134285.1134339
   Egyed A, 2007, PROC INT CONF SOFTW, P292
   Egyed A, 2011, IEEE T SOFTWARE ENG, V37, P188, DOI 10.1109/TSE.2010.38
   Engelbrecht AP, 2010, LECT NOTES COMPUT SC, V6234, P191, DOI 10.1007/978-3-642-15461-4_17
   Engels G., 2001, ACM SIGSOFT SOFTWARE, P186
   Floreano D., 2008, COLLECTIVE SYSTEMS B, P515
   George R., 2016, INNOVATIONS BIOINSPI, P117
   George R, 2012, INT CONF INTELL SYST, P303, DOI 10.1109/ISDA.2012.6416555
   Gong YJ, 2012, IEEE T SYST MAN CY C, V42, P254, DOI 10.1109/TSMCC.2011.2148712
   Hansen N., 2007, CMA EVOLUTION STRATE
   Hany H. A., 2012, ICCIT 2012
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2012, INT SYMP EMP SOFTWAR, P1, DOI 10.1145/2372251.2372253
   Hasan I., 2013, AUST J BASIC APPL SC, V7, P85
   Huzar Z, 2005, LECT NOTES COMPUT SC, V3297, P1
   Kachitvichyanukul V, 2012, IND ENG MANAG SYST, V11, P215, DOI 10.7232/iems.2012.11.3.215
   Kaneiwa K, 2010, THEOR COMPUT SCI, V411, P301, DOI 10.1016/j.tcs.2009.04.030
   Karaboga D, 2008, APPL SOFT COMPUT, V8, P687, DOI 10.1016/j.asoc.2007.05.007
   Kennedy J, 1995, 1995 IEEE INTERNATIONAL CONFERENCE ON NEURAL NETWORKS PROCEEDINGS, VOLS 1-6, P1942, DOI 10.1109/icnn.1995.488968
   Kern Stefan, 2004, Natural Computing, V3, P77, DOI 10.1023/B:NACO.0000023416.59689.4e
   Kiranyaz S, 2011, EXPERT SYST APPL, V38, P2212, DOI 10.1016/j.eswa.2010.08.009
   Kulkarni RV, 2011, IEEE T SYST MAN CY C, V41, P262, DOI 10.1109/TSMCC.2010.2054080
   Liu WenQian, 2002, WORKSH CONS PROBL UM, V5
   Lucas FJ, 2009, INFORM SOFTWARE TECH, V51, P1631, DOI 10.1016/j.infsof.2009.04.009
   Pan F, 2014, APPL SOFT COMPUT, V23, P567, DOI 10.1016/j.asoc.2014.05.010
   Pandey S, 2010, INT CON ADV INFO NET, P400, DOI 10.1109/AINA.2010.31
   Puissant JP, 2015, SOFTW SYST MODEL, V14, P461, DOI 10.1007/s10270-013-0317-9
   Rabanal P., 2012, P MET ALG EV BIOINSP
   Räihä O, 2010, COMPUT SCI REV, V4, P203, DOI 10.1016/j.cosrev.2010.06.001
   Rout S. S., 2014, GSTF J COMPUT, V3, P9
   Saini D K, 2012, International Journal of Computer Applications, V40, P19
   Samuel P, 2007, INFORM SOFTWARE TECH, V49, P158, DOI 10.1016/j.infsof.2006.04.001
   Setayesh M, 2011, P 26 INT C IM VIS CO, P333
   Sha DY, 2010, EXPERT SYST APPL, V37, P1065, DOI 10.1016/j.eswa.2009.06.041
   Shen M, 2014, IEEE T IND ELECTRON, V61, P7141, DOI 10.1109/TIE.2014.2314075
   Sun CL, 2013, INFORM SCIENCES, V221, P355, DOI 10.1016/j.ins.2012.09.030
   Tanweer MR, 2016, SWARM EVOL COMPUT, V28, P98, DOI 10.1016/j.swevo.2016.01.006
   Tanweer MR, 2016, INFORM SCIENCES, V326, P1, DOI 10.1016/j.ins.2015.07.035
   Tanweer MR, 2015, INFORM SCIENCES, V294, P182, DOI 10.1016/j.ins.2014.09.053
   Tanweer MR, 2014, IEEE 9 INT C INT SEN, P1
   Thirugnanam M., 2014, INT J COMPUT SCI, V9
   van den Bergh F, 2004, IEEE T EVOLUT COMPUT, V8, P225, DOI [10.1109/TEVC.2004.826069, 10.1109/tevc.2004.826069]
   Van Der Straeten R, 2003, LECT NOTES COMPUT SC, V2863, P326
   Xue B., 2012, EV COMP CEC 2012 IEE, P1, DOI DOI 10.1109/CEC.2012.6256617
NR 61
TC 3
Z9 3
U1 1
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2018
VL 99
BP 81
EP 92
DI 10.1016/j.infsof.2018.03.005
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GG5XA
UT WOS:000432767900007
DA 2024-07-18
ER

PT J
AU Cartaxo, B
   Pinto, G
   Soares, S
AF Cartaxo, Bruno
   Pinto, Gustavo
   Soares, Sergio
TI Towards a model to transfer knowledge from software engineering research
   to practice
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Knowledge transfer; Rapid reviews; Evidence briefings; Evidence based
   software engineering
AB Context: Many researchers argue that Software Engineering (SE) research lacks connection with practice.
   Objective: We propose a model aimed at supporting researchers to transfer knowledge to SE practice.
   Method: This model is built upon the foundation of Rapid Reviews and Evidence Briefings. These two key elements have been proven effective in other domains, such as medicine, and initial results suggest that they can play a prominent role in SE as well.
   Results: We discuss how to apply the model as well as possible challenges that might hinder its adoption.
   Conclusion: We believe that both SE practitioners and researchers could benefit from the proposed model. We expect replications and instantiations of the model in the future.
C1 [Cartaxo, Bruno; Soares, Sergio] Fed Univ Pernambuco UFPE, Recife, PE, Brazil.
   [Cartaxo, Bruno] Fed Inst Pernambuco IFPE, Olinda, PE, Brazil.
   [Pinto, Gustavo] Fed Univ Para UFPA, Belem, Para, Brazil.
   [Soares, Sergio] SENAI Innovat Inst Informat & Commun Technol, Recife, PE, Brazil.
C3 Universidade Federal de Pernambuco; Instituto Federal de Pernambuco
   (IFPE); Universidade Federal do Para
RP Cartaxo, B (corresponding author), Fed Univ Pernambuco UFPE, Recife, PE, Brazil.; Cartaxo, B (corresponding author), Fed Inst Pernambuco IFPE, Olinda, PE, Brazil.
EM bfsc@cin.ufpe.br; gpinto@ufpa.br; scbs@cin.ufpe.br
RI Soares, Sergio/K-3712-2012
OI Soares, Sergio/0000-0002-4428-2535
CR [Anonymous], 2015, BMC MED
   Beecham S, 2014, COMPUTER, V47, P80, DOI 10.1109/MC.2014.92
   Bozeman B, 2000, RES POLICY, V29, P627, DOI 10.1016/S0048-7333(99)00093-1
   Cartaxo B., 2016, ESEM
   Cartaxo B., 2017, UNPUB
   Chambers D, 2012, SYST REV, V1, DOI 10.1186/2046-4053-1-32
   Gorschek T., 2006, IEEE SOFTW
   Grigoleit F., 2015, QUEST PROPER MEDIUMS
   Rainer A., 2003, PERSUADING DEV BUY S
   Santos R. E. S., 2013, MOTIVATION PERFORM S
NR 10
TC 7
Z9 7
U1 1
U2 10
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2018
VL 97
BP 80
EP 82
DI 10.1016/j.infsof.2018.01.001
PG 3
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GA0MR
UT WOS:000428008600006
DA 2024-07-18
ER

PT J
AU Jagroep, E
   van der Ent, A
   van der Wer, JMEM
   Hage, J
   Blom, L
   van Vliet, R
   Brinkkemper, S
AF Jagroep, Erik
   van der Ent, Arjan
   van der Wer, Jan Martijn E. M.
   Hage, Jurriaan
   Blom, Leen
   van Vliet, Rob
   Brinkkemper, Sjaak
TI The hunt for the guzzler: Architecture-based energy profiling using
   stubs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architecture; Energy consumption; Sustainability; Software
   stubs; Energy profiling
ID SOFTWARE; SUSTAINABILITY; PERFORMANCE; PRODUCT; MODEL
AB Context Software producing organizations have the ability to address the energy impact of their software products through their source code and software architecture. In spite of that, the focus often remains on hardware aspects, which limits the contribution of software towards energy efficient ICT solutions.
   Objective: No methods exist to provide software architects information about the energy consumption of the different components in their software product. The objective of this paper is to bring software producing organizations in control of this qualitative aspect of their software.
   Method: To achieve the objective, we developed the StEP Method to systematically investigate the effects of software units through the use of software stubs in relation to energy concerns. To evaluate the proposed method, an experiment involving three different versions of a commercial software product has been conducted. In the experiment, two versions of a software product were stubbed according to stakeholder concerns and stressed according to a test case, whilst energy consumption measurements were performed. The method provided guidance for the experiment and all activities were documented for future purposes.
   Results: Comparing energy consumption differences across versions unraveled the energy consumption related to the products' core functionality. Using the energy profile, stakeholders could identify the major energy consuming elements and prioritize software engineering efforts to maximize impact.
   Conclusions: We introduce the StEP Method and demonstrate its applicability in an industrial setting. The method identified energy hotspots and thereby improved the control stakeholders have over the sustainability of a software product. Despite promising results, several concerns are identified that require further attention to improve the method. For instance, we recommend the investigation of software operation data to determine, and possibly automatically create, stubs.
C1 [Jagroep, Erik; van der Wer, Jan Martijn E. M.; Hage, Jurriaan; Brinkkemper, Sjaak] Univ Utrecht, Dept Informat & Comp Sci, POB 80-089, NL-3508 TB Utrecht, Netherlands.
   [Jagroep, Erik; van der Ent, Arjan; Blom, Leen; van Vliet, Rob] Centr Netherlands BV, POB 338, NL-2800 AH Gouda, Netherlands.
C3 Utrecht University
RP Jagroep, E (corresponding author), Univ Utrecht, Dept Informat & Comp Sci, POB 80-089, NL-3508 TB Utrecht, Netherlands.; Jagroep, E (corresponding author), Centr Netherlands BV, POB 338, NL-2800 AH Gouda, Netherlands.
EM e.a.jagroep@uu.nl
OI Jagroep, Erik/0000-0001-6925-6803; van der Werf, Jan Martijn
   E.M./0000-0002-7264-381X
CR Amsel Nadine., 2010, Proceedings, CHI EA, P3337, DOI DOI 10.1145/1753846.1753981
   [Anonymous], 2012, ART SOFTWARE TESTING, DOI DOI 10.1002/9781119202486
   [Anonymous], AUTOMATED SOFTWARE E
   [Anonymous], GREEN SOFTWARE HARNE
   Bass L, 2012, SEI SERIES SOFTWARE
   Beckett J., 2011, TECHNICAL REPORT
   Beloglazov A, 2012, FUTURE GENER COMP SY, V28, P755, DOI 10.1016/j.future.2011.04.017
   Berl A, 2010, COMPUT J, V53, P1045, DOI 10.1093/comjnl/bxp080
   Bozzelli P., 2013, A systematic Literature Review on Green Software Metrics
   Chen X, 2014, SUSTAIN COMPUT-INFOR, V4, P94, DOI 10.1016/j.suscom.2014.03.001
   Chowdhury SA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P49, DOI [10.1145/2901739.2901763, 10.1109/MSR.2016.015]
   Do Thanh, 2009, P 2 WORKSH POW AW CO
   Ferreira MA, 2013, 2013 2ND INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P30, DOI 10.1109/GREENS.2013.6606419
   Ganesan D, 2010, LECT NOTES COMPUT SC, V6287, P256, DOI 10.1007/978-3-642-15579-6_18
   Grassi V, 2008, LECT NOTES COMPUT SC, V5153, P327
   Hevner A, 2010, INTEGR SER INFORM SY, V22, P9, DOI 10.1007/978-1-4419-5653-8_2
   Hindle A., 2013, EMPIR SOFTW ENG, P1, DOI DOI 10.1007/S10664-013-9276-6
   Jagroep E, 2017, COMPUTING, V99, P553, DOI 10.1007/s00607-016-0502-0
   Jagroep E, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1852
   Jagroep E, 2016, ACSR ADV COMPUT, V46, P19
   Jagroep E, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P2198, DOI 10.1145/2695664.2695825
   Jagroep EA, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P523, DOI 10.1145/2889160.2889216
   Jansen S, 2012, J SYST SOFTWARE, V85, P1495, DOI 10.1016/j.jss.2011.12.007
   Juristo N., 2010, BASICS SOFTWARE ENG
   Kalaitzoglou G, 2014, PROCEEDINGS OF THE 2014 CONFERENCE ICT FOR SUSTAINABILITY, P77
   Kansal A., 2010, 1 ACM S CLOUD COMP, P39
   Kazman R, 1998, IEEE INT C ENG COMP, P68, DOI 10.1109/ICECCS.1998.706657
   Kounev S., 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P621, DOI 10.1109/SCC.2010.94
   Koziolek H, 2013, IEEE SOFTWARE, V30, P54, DOI 10.1109/MS.2013.101
   Lago P., 2013, ACM SIGSOFT Softw. Eng. Not., V38, P31, DOI 10.1145/2413038.2413062
   Lago P, 2015, COMMUN ACM, V58, P70, DOI 10.1145/2714560
   Lide Zhang, 2010, 2010 IEEE/ACM/IFIP International Conference on Hardware/Software Codesign and System Synthesis (CODES+ISSS), P105
   Littlewood B, 2001, ACM COMPUT SURV, V33, P177, DOI 10.1145/384192.384195
   Mair J, 2014, SUSTAIN COMPUT-INFOR, V4, P83, DOI 10.1016/j.suscom.2014.03.007
   Manotas I, 2016, PROC INT CONF SOFTW, P237, DOI 10.1145/2884781.2884810
   Meedenlya I., 2010, RES PRACTICE REALITY
   Mittal R, 2012, MOBICOM 12: PROCEEDINGS OF THE 18TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P317
   Naumann S, 2011, SUSTAIN COMPUT-INFOR, V1, P294, DOI 10.1016/j.suscom.2011.06.004
   Noureddine Adel, 2013, Operating Systems Review, V47, P42
   Olsson HH, 2016, INTERNATIONAL WORKSHOP ON CONTINUOUS SOFTWARE EVOLUTION AND DELIVERY, CSED 2016, P63, DOI [10.1109/CSED.2016.020, 10.1145/2896941.2896955]
   Palomba F, 2016, P 25 INT S SOFTW TES, P130, DOI [10.1145/2931037.2931057, DOI 10.1145/2931037.2931057]
   Procaccianti Giuseppe, 2014, 2014 IEEE 8th International Symposium on the Maintenance and Evolution of Service-Oriented and Cloud-Based Systems (MESOCA 2014). Proceedings, P29, DOI 10.1109/MESOCA.2014.12
   Procaccianti G, 2016, J SYST SOFTWARE, V117, P185, DOI 10.1016/j.jss.2016.02.035
   Rozanski N., 2011, Software Systems Architecture: Working with Stakeholders Using Viewpoints and Perspectives
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sahin C, 2016, J SOFTW-EVOL PROC, V28, P565, DOI 10.1002/smr.1762
   Seo C, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P277, DOI 10.1109/WICSA.2008.28
   Seo C, 2008, LECT NOTES COMPUT SC, V5282, P97
   Sobhy D, 2016, LECT NOTES COMPUT SC, V9839, P55, DOI 10.1007/978-3-319-48992-6_4
   Tarasov V., APPL INFERENCE RULES, P82, DOI [10.1007/978-3-319-54627-8_7, DOI 10.1007/978-3-319-54627-8_7]
   Trefethen AE, 2013, J COMPUT SCI-NETH, V4, P444, DOI 10.1016/j.jocs.2013.01.005
   van der Werf J., 2012, EMMSAD
   Wohlin C., 2012, Experimentation in Software Engineering
   Xu L, 2007, EUR J INFORM SYST, V16, P531, DOI 10.1057/palgrave.ejis.3000703
   Yin R.K., 2014, Applications of case study research, V2nd
NR 55
TC 0
Z9 0
U1 0
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 165
EP 176
DI 10.1016/j.infsof.2017.12.003
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FX4EZ
UT WOS:000426026800012
OA Green Published
DA 2024-07-18
ER

PT J
AU Khan, AA
   Keung, J
   Niazi, M
   Hussain, S
   Ahmad, A
AF Khan, Arif Ali
   Keung, Jacky
   Niazi, Mahmood
   Hussain, Shahid
   Ahmad, Awais
TI Systematic literature review and empirical investigation of barriers to
   process improvement in global software development: Client-vendor
   perspective
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software process improvement; Global software development; Systematic
   literature review; Barriers; Client; Vendor
ID COMMUNICATION RISKS; MANAGEMENT
AB Context: Increasingly, software development organizations are adopting global software development (GSD) strategies, mainly because of the significant return on investment they produce. However, there are many challenges associated with GSD, particularly with regards to software process improvement (SPI). SPI can play a significant role in the successful execution of GSD projects.
   Objective: The aim of the present study was to identify barriers that can negatively affect SPI initiatives in GSD organizations from both client and vendor perspectives.
   Method: A systematic literature review (SLR) and survey questionnaire were used to identify and validate the barriers.
   Results: Twenty-two barriers to successful SPI programs were identified. Results illustrate that the barriers identified using SLR and survey approaches have more similarities However, there were significant differences between the ranking of these barriers in the SLR and survey approaches, as indicated by the results of t-tests (for instance, t=2.28, p=0.011 < 0.05). Our findings demonstrate that there is a moderate positive correlation between the ranks obtained from the SLR and the empirical study (rs (22)=0.567, p=0.006).
   Conclusions: The identified barriers can assist both client and vendor GSD organizations during initiation of an SPI program. Client-vendor classification was used to provide a broad picture of SPI programs, and their respective barriers. The top-ranked barriers can be used as a guide for GSD organizations prior to the initiation of an SPI program. We believe that the results of this study can be useful in tackling the problems associated with the implementation of SPI, which is vital to the success and progression of GSD organizations. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Khan, Arif Ali; Keung, Jacky; Hussain, Shahid] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
   [Niazi, Mahmood] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran, Saudi Arabia.
   [Ahmad, Awais] Yeungnam Univ Gyeongbuk, Dept Informat & Commun Engn, Gyongsan, South Korea.
C3 City University of Hong Kong; King Fahd University of Petroleum &
   Minerals
RP Khan, AA (corresponding author), City Univ Hong Kong, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
EM aliakhan2-c@my.cityu.edu.hk; jacky.keung@cityu.edu.hk;
   mkniazi@kfupm.edu.sa; shussain7-c@my.cityu.edu.hk;
   aahmad.marwat@gmail.com
RI Hussain, Shahid/AAP-5065-2021; khan, Arif/HMV-3165-2023; Keung,
   Jacky/X-4693-2019; Khan, Arif Ali/ABG-2862-2020; Keung,
   Jacky/ABA-7089-2020; Niazi, Mahmood/C-8873-2015; Ahmad,
   Awais/AAA-4504-2019
OI Hussain, Shahid/0000-0003-4826-3339; Keung, Jacky/0000-0002-3803-9600;
   Khan, Arif Ali/0000-0002-8479-1481; 
FU City University of Hong Kong [7004683, 7004474, 7200354]
FX This research is supported by the City University of Hong Kong research
   funds (Project No. 7004683, 7004474, 7200354).
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ågerfalk PJ, 2008, LECT NOTES COMPUT SC, V5007, P1, DOI 10.1007/978-3-540-79588-9_1
   Alexander V.E, 2006, ANAL RATER AGREEMENT
   Ang S, 1998, P ANN HICSS, P635, DOI 10.1109/HICSS.1998.654825
   [Anonymous], 2013, EUR C SOFTW PROC IMP
   [Anonymous], 2009, THESIS IT U GOTENBOR
   [Anonymous], 1998, Software process improvement
   [Anonymous], RES J APPL SCI ENG T
   [Anonymous], IET SOFTW
   [Anonymous], 2013, RES J APPL SCI ENG T, DOI 10.19026/rjaset.6.3554
   [Anonymous], 2008, SOFTWARE PROCESS IMP, DOI DOI 10.1002/SPIP.380
   Ashrafi N, 2003, INFORM MANAGE-AMSTER, V40, P677, DOI 10.1016/S0378-7206(02)00096-4
   Babar MA, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P67, DOI 10.1109/ICGSE.2008.23
   Bryson K.M., 2003, BUSINESS PROCESS MAN, V9, P705, DOI DOI 10.1108/14637150310506648
   Butler K., 1995, CrossTalk July, P14
   Cartlidge A., 2012, An Introductory Overview of ITIL 2011
   Chen Lianping, 2010, 14 INT C EVALUATION
   DANIEL DR, 1961, HARVARD BUS REV, V39, P111
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   El Emam K, 2008, IEEE SOFTWARE, V25, P84, DOI 10.1109/MS.2008.107
   Finstad K, 2010, J USABILITY STUD, V5, P104
   Humphrey W S, 1995, A discipline for software engineering
   ISO, 2004, 1550442004 ISO IEC
   ISO, 2005, 90002005 ISO
   ISO/IEC, 330012015 ISO IEC
   Jiang JJ, 2004, INFORM MANAGE-AMSTER, V41, P279, DOI 10.1016/S0378-7206(03)00052-1
   Khan A. A., 2012, Proceedings of the 2012 International Conference on Computer & Information Science (ICCIS), P944, DOI 10.1109/ICCISci.2012.6297161
   Khan AW, 2013, IET SOFTW, V7, P327, DOI 10.1049/iet-sen.2013.0013
   Khan AA, 2015, ENASE 2015 - PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P159
   Khan AA, 2014, PROCD SOC BEHV, V129, P496, DOI 10.1016/j.sbspro.2014.03.706
   Khan SU, 2014, IET SOFTW, V8, P161, DOI 10.1049/iet-sen.2013.0012
   Khan SU, 2011, INFORM SOFTWARE TECH, V53, P693, DOI 10.1016/j.infsof.2010.08.003
   Khan SU, 2011, THESIS
   KHANDELWAL V, 1999, 32 HAW INT C SYST SC
   Kitchenham B., 2004, Procedures for performing systematic literature reviews, P33
   Kitchenham B.A., GUIDELINES PERFORMIN
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenharn B., 2003, Software Engineering Notes, V28, P24, DOI 10.1145/638750.638758
   Koh C., 1999, PROCEEDING 20 INT C, P512
   Lacity Mary C., 2009, Strategic Outsourcing, V2, P4, DOI 10.1108/17538290910935864
   Martin B., 2000, An Introduction to Medical Statistics, Vthird
   MCFEELEY R, 1996, CMUSEI96HB001
   McLaughlin L, 2003, IEEE SOFTWARE, V20, P104, DOI 10.1109/MS.2003.1231166
   Mendes E., 2005, 2005 International Symposium on Empirical Software Engineering (IEEE Cat. No. 05EX1213)
   Ngwenyama O, 2003, IEEE T ENG MANAGE, V50, P100, DOI 10.1109/TEM.2002.808267
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   Niazi Mahmood, 2013, 2013 Science and Information Conference (SAI), P202
   Niazi M., 2009, INF SOFTW TECHNOL
   Niazi M, 2010, INFORM SOFTWARE TECH, V52, P1204, DOI 10.1016/j.infsof.2010.06.005
   Niazi MK, 2004, THESIS
   PAULK MC, 1993, CMUSEI93TR24 SOFTW E
   Pitterman B, 2000, IEEE SOFTWARE, V17, P89, DOI 10.1109/52.854074
   Prikladnicki R., 2004, WORK C VIRT ENT SPRI
   Ramasubbu N, 2014, IEEE T SOFTWARE ENG, V40, P235, DOI 10.1109/TSE.2013.58
   Rea L.M., 2012, DESIGNING CONDUCTING
   Regnell B., 2000, Empirical Software Engineering, V5, P331, DOI 10.1023/A:1009848320066
   Richardson I, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/ICGSE.2008.21
   ROCKART JF, 1979, HARVARD BUS REV, V57, P81
   SEI, 2011, CMUSEI2011HB001
   Staples M, 2007, J SYST SOFTWARE, V80, P883, DOI 10.1016/j.jss.2006.09.008
   Stelzer D., 1998, Software Process Improvement and Practice, V4, P227, DOI 10.1002/(SICI)1099-1670(199812)4:4<227::AID-SPIP106>3.0.CO;2-1
   Sulayman M, 2009, COMM COM INF SC, V59, P1
   Verner J. M., 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P2, DOI 10.1049/ic.2012.0001
   Yamamura G, 1999, IEEE SOFTWARE, V16, P83, DOI 10.1109/52.795105
   Zil-e-Huma, 2012, 2012 15TH INTERNATIONAL MULTITOPIC CONFERENCE (INMIC), P459, DOI 10.1109/INMIC.2012.6511481
NR 65
TC 113
Z9 113
U1 1
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2017
VL 87
BP 180
EP 205
DI 10.1016/j.infsof.2017.03.006
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA EV2QD
UT WOS:000401599300012
DA 2024-07-18
ER

PT J
AU Rainer, A
AF Rainer, Austen
TI Using argumentation theory to analyse software practitioners' defeasible
   evidence, inference and belief
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Behavioural software engineering; Evidence Experience; Story;
   Argumentation; Explanation; Analogy; Software practice; Qualitative
   analysis; Evidence based software engineering
ID TECHNOLOGY
AB Context: Software practitioners are often the primary source of information for software engineering research. They naturally produce information about their experiences of software practice, and the beliefs they infer from their experiences. Researchers must evaluate the quality and quantity of this information for their research.
   Objective: To examine how concepts and methods from argumentation research can be used to study practitioners' evidence, inference and beliefs so as to better understand and improve software practice.
   Method: We develop a preliminary framework and preliminary methodology, and use those to identify, extract and structure practitioners' evidence, inference and beliefs. We illustrate the application of the framework and methodology with examples from a practitioner's blog post.
   Result The practitioner uses (factual) stories, analogies, examples and popular opinion as evidence, and uses that evidence in defeasible reasoning to justify his beliefs and to rebut the beliefs of other practitioners.
   Conclusion: The framework, methodology and examples could provide a foundation for software engineering researchers to develop a more sophisticated understanding of, and appreciation for, practitioners' defeasible evidence, inference and belief. Further work needs to automate (parts of) the methodology to support larger-scale application of the methodology. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Rainer, Austen] Univ Canterbury Christchurch, Dept Comp Sci & Software Engn, Christchurch, New Zealand.
RP Rainer, A (corresponding author), Univ Canterbury Christchurch, Dept Comp Sci & Software Engn, Christchurch, New Zealand.
EM austen.rainer@canterbury.ac.nz
OI Rainer, Austen/0000-0001-8868-263X
CR Adolph S, 2013, 2013 2ND SEMAT WORKSHOP ON A GENERAL THEORY OF SOFTWARE ENGINEERING (GTSE), P47, DOI 10.1109/GTSE.2013.6613870
   Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   [Anonymous], 1981, P RICOEUR HERMENEUTI
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2016, ARGUMENT EVALUATION
   [Anonymous], 2004, The Logic of real arguments
   [Anonymous], 2013, PERSPECTIVES FUTURE
   [Anonymous], 2005, ANAL EVIDENCE
   [Anonymous], 38 INT C SOFTW ENG I
   Bex F.J., 2013, WORKSH COMP MOD NAT
   Bex F.J., 2013, KNOWLEDGE REPRESENTA, P63
   Birk A, 2002, IEEE SOFTWARE, V19, P43, DOI 10.1109/MS.2002.1003452
   Bjarnason E., 2012, Proceedings of the 2012 IEEE Second International Workshop on Empirical Requirements Engineering (EmpiRE), P17, DOI 10.1109/EmpiRE.2012.6347676
   Bjarnason E, 2012, LECT NOTES BUS INF P, V111, P177
   Brereton P, 2011, IEEE T EDUC, V54, P558, DOI 10.1109/TE.2010.2090662
   Brown AD, 1998, ORGAN STUD, V19, P73, DOI 10.1177/017084069801900104
   Budgen David, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P263, DOI 10.1109/ESEM.2013.41
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   Cubranic D., 2004, Computer Supported Cooperative Work Conference Proceedings, P82, DOI 10.1145/1031607.1031622
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Gregor S, 2006, MIS QUART, V30, P611
   Hannay JE, 2008, IEEE T SOFTWARE ENG, V34, P242, DOI 10.1109/TSE.2008.13
   Hayes W., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P143, DOI 10.1109/METRIC.1999.809735
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Hughes W., 2015, Critical thinking: An introduction to the basic skills, V7th ed.
   Inui Kentaro, 2008, Wl 2008. 2008 IEEE/WIC/ACM International Conference on Web Intelligence. IAT 2008. 2008 IEEE/WIC/ACM International Conference on Intelligent Agent Technology. Wl-IAT Workshop 2008 2008 IEEE/WIC/ACM International Conferences on Web Intelligence and Intelligent Agent Technology Workshops, P314, DOI 10.1109/WIIAT.2008.373
   Jijkoun V., 2010, P NAACL HLT 2010 WOR, P17
   Johnson P., 2012, IEEE Software, V29, P94, DOI 10.1109/MS.2012.127
   Jorgensen M., 2004, "8th Internation Conference on Empirical Assessment in Software Engineering (EASE 2004)" Workshop - 26th International Conference on Software Engineering, P29, DOI 10.1049/ic:20040396
   Jorgensen M., 2005, P 11 IEEE INT SOFTW, P24
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Lethbridge T. C., 1998, EMPIRICAL STUDIES IE
   Miles M.B., 2002, QUALITATIVE RES COMP
   Mochales R, 2011, ARTIF INTELL LAW, V19, P1, DOI 10.1007/s10506-010-9104-x
   Nair S, 2014, INFORM SOFTWARE TECH, V56, P689, DOI 10.1016/j.infsof.2014.03.001
   Nair S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P94, DOI 10.1109/ICST.2013.30
   Nguyen Q., 2012, Detecting experience revealing sentences in product reviews
   Park KC, 2010, ACL 2010: 48TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P1464
   Passos C., 2013, P 17 INT C EV ASS SO, P2
   Passos C, 2011, INT SYMP EMP SOFTWAR, P444, DOI 10.1109/ESEM.2011.63
   Peldszus A, 2013, INT J COGN INFORM NA, V7, P1, DOI 10.4018/jcini.2013010101
   Pfleeger SL, 1999, J SYST SOFTWARE, V47, P111, DOI 10.1016/S0164-1212(99)00031-X
   Pfleeger SL, 2000, IEEE SOFTWARE, V17, P27, DOI 10.1109/52.819965
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   Potts C., 1996, Computer Supported Cooperative Work (CSCW), V5, P415, DOI 10.1007/BF00136713
   Prechelt L, 2000, COMPUTER, V33, P23, DOI 10.1109/2.876288
   Prechelt L, 2011, IEEE T SOFTWARE ENG, V37, P95, DOI 10.1109/TSE.2010.22
   Rainer A, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P326, DOI 10.1109/ISESE.2003.1237993
   Rainer A., 2008, 12 INT C EV ASS SOFT, V12, P1
   Rainer A, 2011, INFORM SOFTWARE TECH, V53, P730, DOI 10.1016/j.infsof.2011.01.003
   Rainer Austen, 2006, INT C EV ASS SOFTW E, P91
   Robinson H, 2007, INFORM SOFTWARE TECH, V49, P540, DOI 10.1016/j.infsof.2007.02.007
   Schum D.A., 2009, LAW PROBAB RISK
   Schum D.A., 2001, The evidential foundations of probabilistic reasoning
   Scriven M., 1976, Reasoning
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Spolsky J., 2006, THE LANGUAGE WARS
   Thomas S.N., 1981, PRACTICAL REASONING
   Toulmin S.E., 2003, The use of argument, V2nd, DOI DOI 10.1017/CBO9780511840005
   Toulmin S.E., 1979, An introduction to reasoning
   Twining William., 2006, RETHINKING EVIDENCE, V2nd
   VANGENUCHTEN M, 1991, IEEE T SOFTWARE ENG, V17, P582, DOI 10.1109/32.87283
   Verheij B., 2001, ICAIL 2001 8 INT C A
   Walton D, 2008, ARGUMENTATION SCHEMES, P1, DOI 10.1017/CBO9780511802034
   Whiston S.C., 1993, J CAREER DEV, V19, P175
   Williams A., 2016, 23 AS PAC SOFTW ENG
   Williams A., THE USE OF PRACTITIO
   Wolf A. L., 1993, Second International Conference on the Software Process. Continuous Software Process Improvement (Cat. No.93TH0509-0), P115, DOI 10.1109/SPCON.1993.236817
NR 74
TC 12
Z9 14
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2017
VL 87
BP 62
EP 80
DI 10.1016/j.infsof.2017.01.011
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EV2QD
UT WOS:000401599300005
DA 2024-07-18
ER

PT J
AU Niazi, M
   Mahmood, S
   Alshayeb, M
   Riaz, MR
   Faisal, K
   Cerpa, N
   Khan, SU
   Richardson, I
AF Niazi, Mahmood
   Mahmood, Sajjad
   Alshayeb, Mohammad
   Riaz, Mohammed Rehan
   Faisal, Kanaan
   Cerpa, Narciso
   Khan, Siffat Ullah
   Richardson, Ita
TI Challenges of project management in global software development: A
   client-vendor analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Global software development; Software project management; Challenges and
   barriers; Systematic literature review; Empirical study
ID COMMUNICATION
AB Context: Global Software Development (GSD) is the process whereby software is developed by different teams located in various parts of the globe. One of the major reasons for GSD project failure is that a number of organizations endorse global development prior to understanding project management challenges for the global activity.
   Objective: The objective of this paper is to identify the challenges, from the client and vendor perspectives, which can undermine the successful management of GSD projects.
   Method: We followed a two-phase approach: we first identified the challenges via a Systematic Literature Review (SLR) and then the identified challenges were validated using a questionnaire-based survey.
   Results: Through both approaches, we identified 19 challenges important to the success of GSD project management. A comparison of the challenges identified in client and vendor organizations indicates that there are more similarities than differences between the challenges. Our results show a positive correlation between the ranks obtained from the SLR and the questionnaire ((r(s)(19) = 0.102), p = 0.679). The results of t-test (i.e., t = 0.299, p = 0.768 > 0.05) show that there is no significant difference between the findings of SLR and questionnaire.
   Conclusions: GSD organizations should try to address the identified challenges when managing their global software development activities to increase the probability of project success. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Niazi, Mahmood; Mahmood, Sajjad; Alshayeb, Mohammad; Riaz, Mohammed Rehan; Faisal, Kanaan] King Fahd Univ Petr & Minerals Saudi Arabia, Dept Informat & Comp Sci, Dhahran, Saudi Arabia.
   [Niazi, Mahmood] Riphah Int Univ, Fac Comp, Islamabad, Pakistan.
   [Cerpa, Narciso] Univ Talca, Fac Engn, Talca, Chile.
   [Khan, Siffat Ullah] Univ Malakand, Dept Comp Sci & IT, Chakdara, Pakistan.
   [Richardson, Ita] Univ Limerick, Dept Comp Sci & Informat Syst, Lero Irish Software Res Ctr, Limerick, Ireland.
C3 King Fahd University of Petroleum & Minerals; Universidad de Talca;
   University of Malakand; University of Limerick
RP Niazi, M (corresponding author), King Fahd Univ Petr & Minerals Saudi Arabia, Dept Informat & Comp Sci, Dhahran, Saudi Arabia.; Niazi, M (corresponding author), Riphah Int Univ, Fac Comp, Islamabad, Pakistan.
EM mkniazi@kfupm.edu.sa; smahmood@kfupm.edu.sa; alshayeb@kfupm.edu.sa;
   rehanr@kfupm.edu.sa; kanaan@kfupm.edu.sa; ncerpa@utalca.cl;
   siffatullah@uom.edu.pk; ita.richardson@lero.ie
RI Khan, Siffat Ullah/B-3309-2017; Niazi, Mahmood/C-8873-2015; Cerpa,
   Narciso/A-7823-2010; Alshayeb, Mohammad/B-5941-2015; Mahmood,
   Sajjad/B-2295-2010
OI Khan, Siffat Ullah/0000-0003-0339-7915; Richardson,
   Ita/0000-0002-5493-2837; Alshayeb, Mohammad/0000-0001-7950-0099;
   Mahmood, Sajjad/0000-0001-5786-5118
FU Deanship of Scientific Research at King Fahd University of Petroleum and
   Minerals, Saudi Arabia [IN111030]; Lero - the Irish Software Engineering
   Centre, University of Limerick, Limerick, Ireland
FX The authors would like to acknowledge the support provided by the
   Deanship of Scientific Research at King Fahd University of Petroleum and
   Minerals, Saudi Arabia, under Research Grant IN111030.; We are thankful
   to Professor Barbara Kitchenham, Keele University UK, for providing us
   valuable insights in improving this paper. Professor Ita Richardson
   acknowledges the support provided by Lero - the Irish Software
   Engineering Centre, University of Limerick, Limerick, Ireland.
CR Ali-Babar M., J SYST SOFTW, V80
   [Anonymous], 1990, BASICS GROUNDED THEO
   [Anonymous], 2008, SOFTWARE TESTING GLO
   [Anonymous], 2007, EBSE Technical Report, EBSE-2007-01
   [Anonymous], 2008, SOFTWARE PROCESS IMP, DOI DOI 10.1002/SPIP.380
   Aranda GN, 2010, REQUIR ENG, V15, P397, DOI 10.1007/s00766-010-0105-9
   Atique Z., 2011, FRONTIERS INFORM TEC, P291
   Bannerman P. L., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P5309, DOI 10.1109/HICSS.2012.512
   Begel A., 2008, IEEE INT C GLOBAL SO, V195, P199
   Binder J., 2010, GLOBAL PROJECT MANAG
   Bradstreet D., 2000, Dun Bradstreet's Barometer of Global Outsourcing
   Casey V., 2006, Proceedings of the International Conference on Software Engineering, P66
   Christiansen HM, 2007, LECT NOTES COMPUT SC, V4716, P19
   Colomo-Palacios R, 2014, SOFTWARE QUAL J, V22, P3, DOI 10.1007/s11219-012-9191-x
   Conchúir EO, 2009, COMMUN ACM, V52, P127, DOI 10.1145/1536616.1536648
   da Silva Fabio Q. B., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P87, DOI 10.1109/ICGSE.2010.18
   Daim TU, 2012, INT J PROJ MANAG, V30, P199, DOI 10.1016/j.ijproman.2011.06.004
   Damian D, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P81
   Deshpande S., 2011, GLOBAL SOFTWARE DEV
   Deshpande S, 2009, INT CONF GLOBAL SOFT, P217, DOI 10.1109/ICGSE.2009.29
   Deuel RL, 2003, IEEE SOFTWARE, V20, P114, DOI 10.1109/MS.2003.1196336
   Erickson J.M., 2006, System Sciences, V8, p199b
   Eye V., 2006, ANAL RATER AGREEMENT
   Herbsleb JD, 2006, IEEE C FUT SOFTW ENG, P188
   Holmstrom H, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ICGSE.2006.261210
   Jain R., 2015, ACM SIGSOFT SOFTW EN, V40, P1, DOI [10.1145/2735399.2735408, DOI 10.1145/2735399.2735408]
   Kandjani H, 2015, COMPUT IND, V67, P86, DOI 10.1016/j.compind.2014.10.008
   Khan A. A., 2012, Proceedings of the 2012 International Conference on Computer & Information Science (ICCIS), P944, DOI 10.1109/ICCISci.2012.6297161
   Khan SU, 2012, IET SOFTW, V6, P1, DOI 10.1049/iet-sen.2010.0038
   Khan S. U., 2012, INT IASTED C SOFTW E
   Khan SU, 2011, INFORM SOFTWARE TECH, V53, P693, DOI 10.1016/j.infsof.2010.08.003
   Khan SU, 2011, J SYST SOFTWARE, V84, P686, DOI 10.1016/j.jss.2010.12.010
   Khan SU, 2010, LECT NOTES COMPUT SC, V6156, P146, DOI 10.1007/978-3-642-13792-1_13
   Khan SU, 2009, ASIA PAC SOFWR ENG, P79, DOI 10.1109/APSEC.2009.16
   Kitchenham B, 2001, PRINCIPLES SURVEY 1
   Kitchenham B., 2007001 KEEL U DURH
   Kitchenham BA, 2010, EMPIR SOFTW ENG, V15, P618, DOI 10.1007/s10664-010-9134-8
   Kroll J, 2014, P ANN HICSS, P331, DOI 10.1109/HICSS.2014.49
   Lacity Mary C., 2009, Strategic Outsourcing, V2, P4, DOI 10.1108/17538290910935864
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Lopez Alejandro, 2009, 2009 Fourth IEEE International Conference on Global Software Engineering, P394, DOI 10.1109/ICGSE.2009.62
   Miyamoto M, 2015, PROCEDIA COMPUT SCI, V64, P32, DOI 10.1016/j.procs.2015.08.460
   Monasor Miguel J., 2012, Product-Focused Software Process Improvement. Proceedings 13th International Conference (PROFES 2012), P203, DOI 10.1007/978-3-642-31063-8_16
   Musio I, 2009, LECT NOTES BUS INF P, V35, P4
   Niazi Mahmood, 2013, 2013 Science and Information Conference (SAI), P202
   Niazi M., 2008, INT C PROD FOC SOFTW, V427, P441
   Niazi M, 2015, ARAB J SCI ENG, V40, P845, DOI 10.1007/s13369-015-1586-0
   Niazi M, 2013, IET SOFTW, V7, P283, DOI 10.1049/iet-sen.2012.0136
   Niazi M, 2009, INFORM SOFTWARE TECH, V51, P1231, DOI 10.1016/j.infsof.2009.03.001
   Nidhra S, 2013, INT J INFORM MANAGE, V33, P333, DOI 10.1016/j.ijinfomgt.2012.11.004
   Oza N.V., 2005, J INFORM TECHNOLOGY, V7, P25
   Rainer A, 2002, J SYST SOFTWARE, V62, P71, DOI 10.1016/S0164-1212(01)00122-4
   Regnell B., 2000, Empirical Software Engineering, V5, P331, DOI 10.1023/A:1009848320066
   Shao BBM, 2007, COMMUN ACM, V50, P89, DOI 10.1145/1216016.1216026
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Sommerville I, 2005, ACM T SOFTW ENG METH, V14, P85, DOI 10.1145/1044834.1044837
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   Stetten VA, 2010, P 43 IEEE HAW INT C, P1
   Tsuji H., 2007, QUESTIONNAIRE BASED, P114
   Verner J. M., 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P2, DOI 10.1049/ic.2012.0001
   Zwikael O., 2005, International Journal of Project Management, V23, P454, DOI 10.1016/j.ijproman.2005.04.003
NR 61
TC 110
Z9 122
U1 4
U2 48
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2016
VL 80
BP 1
EP 19
DI 10.1016/j.infsof.2016.08.002
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EA2GM
UT WOS:000386410800001
DA 2024-07-18
ER

PT J
AU Deepa, G
   Thilagam, PS
AF Deepa, G.
   Thilagam, P. Santhi
TI Securing web applications from injection and logic vulnerabilities:
   Approaches and challenges
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE SQL injection; Cross-site scripting; Business logic vulnerabilities;
   Application logic vulnerabilities; Web application security; Injection
   flaws
ID TAXONOMY; ATTACKS; XSS; CLASSIFICATION; PREVENTION; STATE
AB Context: Web applications are trusted by billions of users for performing day-to-day activities. Accessibility, availability and omnipresence of web applications have made them a prime target for attackers. A simple implementation flaw in the application could allow an attacker to steal sensitive information and perform adversary actions, and hence it is important to secure web applications from attacks. Defensive mechanisms for securing web applications from the flaws have received attention from both academia and industry.
   Objective: The objective of this literature review is to summarize the current state of the art for securing web applications from major flaws such as injection and logic flaws. Though different kinds of injection flaws exist, the scope is restricted to SQL Injection (SQLI) and Cross-site scripting (XSS), since they are rated as the top most threats by different security consortiums.
   Method: The relevant articles recently published are identified from well-known digital libraries, and a total of 86 primary studies are considered. A total of 17 articles related to SQLI, 35 related to XSS and 34 related to logic flaws are discussed.
   Results: The articles are categorized based on the phase of software development life cycle where the defense mechanism is put into place. Most of the articles focus on detecting the flaws and preventing the attacks against web applications.
   Conclusion: Even though various approaches are available for securing web applications from SQLI and XSS, they are still prevalent due to their impact and severity. Logic flaws are gaining attention of the researchers since they violate the business specifications of applications. There is no single solution to mitigate all the flaws. More research is needed in the area of fixing flaws in the source code of applications. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Deepa, G.; Thilagam, P. Santhi] Natl Inst Technol Karnataka, Dept Comp Sci & Engn, Surathkal, India.
C3 National Institute of Technology (NIT System); National Institute of
   Technology Karnataka
RP Deepa, G (corresponding author), Natl Inst Technol Karnataka, Dept Comp Sci & Engn, Surathkal, India.
EM gdeepabalu@gmail.com; santhisocrates@gmail.com
RI P, Santhi Thilagam/GQA-3682-2022; THILAGAM, SANTHI/L-8316-2018; Deepa,
   Ganesan/D-9131-2019
OI P, Santhi Thilagam/0000-0002-8359-1330; THILAGAM,
   SANTHI/0000-0002-8359-1330; Deepa, Ganesan/0000-0003-2563-1012
FU Ministry of Communications and Information Technology (MCIT), Government
   of India; R&D project entitled "Development of tool for detection of XML
   based injection vulnerabilities in web applications"
FX This work is supported by the Ministry of Communications and Information
   Technology (MCIT), Government of India and is part of the R&D project
   entitled "Development of tool for detection of XML based injection
   vulnerabilities in web applications".
CR Acker S.V., 2012, Proceedings of the 7th ACM Symposium on Information, Computer and Communications Security (ASIACCS), P12, DOI [10.1145/2414456.2414462, DOI 10.1145/2414456.2414462]
   Acohido B., HACKERS BREACH HEART
   Alkhalaf M., 2012, International Symposium on Software Testing and Analysis, ISSTA 2012, Minneapolis, MN, USA, July 15-20, 2012, P56
   [Anonymous], DOING YOUR LITERATUR
   [Anonymous], 2007, SIGOPS OPERATING SYS
   [Anonymous], 2013, Proceedings of the 2013 ACM SIGSAC Conference on Computer Communications Security, CCS'13, page, DOI DOI 10.1145/2508859.2516703
   [Anonymous], 2013, TECHNICAL REPORT
   [Anonymous], 2013, P ACM C COMP COMM SE, DOI [10.1145/2508859, DOI 10.1145/2508859, DOI 10.1145/2508859.2516708]
   [Anonymous], P IEEE INT S SEC SOF
   [Anonymous], 2014, TRUSTWAVE GLOBAL SEC
   [Anonymous], TESTING XML INJECTIO
   [Anonymous], 2011, CWE SANS TOP 25 MOST
   [Anonymous], 2015, Identity Theft Resource Center
   [Anonymous], 2005, INPROCEEDINGS 20 IEE
   [Anonymous], 2014, 2014 WEBSITE SECURIT
   [Anonymous], 2014, DATA BREACH INVESTIG
   [Anonymous], 2006, 2006 IEEE S SEC PRIV
   Antunes N, 2012, COMPUTER, V45, P66, DOI 10.1109/MC.2011.259
   Appelt Dennis, 2014, P 2014 INT S SOFTWAR, P259
   Balduzzi M., 2011, NDSS
   Balzarotti D, 2008, P IEEE S SECUR PRIV, P387, DOI 10.1109/SP.2008.22
   Balzarotti D, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P25
   Bandhakavi S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P12
   Barth A, 2008, CCS'08: PROCEEDINGS OF THE 15TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P75
   Bau J., 2012, TECHNICAL REPORT
   Bau J, 2010, P IEEE S SECUR PRIV, P332, DOI 10.1109/SP.2010.27
   Bilton N., 2011, SONY SAYS PLAYSTATIO
   Bisht P, 2008, LECT NOTES COMPUT SC, V5137, P23, DOI 10.1007/978-3-540-70542-0_2
   Bisht P, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P575
   Bisht P, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P607, DOI 10.1145/1866307.1866375
   Bisht P, 2010, ACM T INFORM SYST SE, V13, DOI 10.1145/1698750.1698754
   Bourret R., 2009, GOING NATIVE USE CAS
   BPIE, 2011, Europe's Buildings under the Microscope: A Country-By-Country Review of the Energy Performance of Buildings
   Braun Bastian, 2012, Trust, Privacy and Security in Digital Business. Proceedings of the 9th International Conference, TrustBus 2012, P17, DOI 10.1007/978-3-642-32287-7_2
   Buehrer Gregory, 2005, P 5 INT WORKSH SOFTW, P106
   Cao YZ, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P745
   Chandrashekhar R., 2012, ADV COMPUTING NETWOR, P524
   Chaudhuri A, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P585, DOI 10.1145/1866307.1866373
   Chong S, 2007, USENIX ASSOCIATION PROCEEDINGS OF THE 16TH USENIX SECURITY SYMPOSIUM, P1
   Ciampa A., 2010, P 2010 ICSE WORKSHOP, P43, DOI DOI 10.1145/1809100.1809107
   Corcoran BJ, 2009, ACM SIGMOD/PODS 2009 CONFERENCE, P269
   Cova M., 2007, Test and Analysis of Web Services, P363, DOI [10.1007/978-3-540-72912-9_13, DOI 10.1007/978-3-540-72912-9_13]
   Cova M, 2007, LECT NOTES COMPUT SC, V4637, P63
   Dalton Michael., 2009, USENIX'09: Proceedings of the 18th conference on USENIX security symposium, P267
   Deb Sunil G. Bannur., 2007, Rich Internet Applications (RIA) Opportunities and Challenges for Enterprises
   Delgado N, 2004, IEEE T SOFTWARE ENG, V30, P859, DOI 10.1109/TSE.2004.91
   Di Lucca GA, 2004, WSE 2004: SIXTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION, PROCEEDINGS, P71, DOI 10.1109/WSE.2004.10013
   Doupé A, 2010, LECT NOTES COMPUT SC, V6201, P111, DOI 10.1007/978-3-642-14215-4_7
   Du W., 1998, 21st National Information Systems Security Conference, P392
   Duchene Fabien., 2014, P 4 ACM C DATA APPL, P37, DOI DOI 10.1145/2557547.2557550
   Evans Zachary, 2014, CASE STUDIES SECURE, P389
   FELMETSGER V., 2010, Proceedings of the 19th USENIX conference on Security, USENIX Security'10, USENIX Association, Berkeley, CA, USA, P10
   Fonseca J, 2007, 13TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P365, DOI 10.1109/PRDC.2007.55
   Fonseca J, 2014, IEEE T DEPEND SECURE, V11, P89, DOI 10.1109/TDSC.2013.37
   Garcia-Alfaro J, 2008, LECT NOTES COMPUT SC, V5141, P287
   Garcia-Alfaro Joaquin, 2009, ARXIV09054850
   Gordeychik Sergey., 2008, Web application security statistics
   Grabowski Robert, 2012, Formal Aspects of Security and Trust. 8th International Workshop, FAST 2011. Revised Selected Papers, P182, DOI 10.1007/978-3-642-29420-4_12
   Hackett R., 2015, HACKERS STEAL 5 MILL
   Halfond WGJ, 2008, IEEE T SOFTWARE ENG, V34, P65, DOI 10.1109/TSE.2007.70748
   Hein D, 2009, INF SECUR J, V18, P8, DOI 10.1080/19393550802623206
   Howard M., 2009, 24 Deadly Sins of Software Security: Programming Flaws and How to Fix Them
   Huang L.-S., 2012, Proceedings of the USENIX Conference on Security Symposium, P22
   Huang Y.-W., 2004, P 13 INT C WORLD WID, P40, DOI [10.1145/988672.988679, DOI 10.1145/988672.988679]
   Huang YW, 2005, COMPUT NETW, V48, P739, DOI 10.1016/j.comnet.2005.01.003
   Hydara I, 2015, INFORM SOFTWARE TECH, V58, P170, DOI 10.1016/j.infsof.2014.07.010
   Igure VM, 2008, IEEE COMMUN SURV TUT, V10, P6, DOI 10.1109/COMST.2008.4483667
   Jang YS, 2014, COMPUT SECUR, V44, P104, DOI 10.1016/j.cose.2014.04.007
   Jia Limin., 2008, P 2008 ACM SIGPLAN I, P27, DOI [10.1145/1411204.1411212, DOI 10.1145/1411204.1411212]
   Jim Trevor., 2007, WWW 07, P601, DOI [10.1145/1242572.1242654, DOI 10.1145/1242572.1242654]
   Johns M., 2011, P 2011 ACM S APPL CO, P1531, DOI DOI 10.1145/1982185.1982511
   Johns M, 2006, LECT NOTES COMPUT SC, V4189, P444
   Johns M, 2013, LECT NOTES COMPUT SC, V8145, P265, DOI 10.1007/978-3-642-41284-4_14
   Johns M, 2010, LECT NOTES COMPUT SC, V5965, P96, DOI 10.1007/978-3-642-11747-3_8
   Johns M, 2008, ANN COMPUT SECURITY, P335, DOI 10.1109/ACSAC.2008.36
   Jovanovic N., 2006, PLAS 2006. Proceedings of the 2006 Programming Languages and Analysis for Security Workshop, P27, DOI 10.1145/1134744.1134751
   Jovanovic Nenad., 2006, Proceedings of the 2006 IEEE Symposium on Security and Privacy, P1, DOI DOI 10.1109/SECCOMW.2006.359531
   Juillerat N., 2007, Proceedings of the 2007 Symposium on Library-Centric Software Design, P31
   Kals S., 2006, P 15 INT C WORLD WID, P247, DOI [DOI 10.1145/1135777.1135817, 10.1145/1135777.1135817]
   Kim MY, 2014, EXPERT SYST APPL, V41, P5416, DOI 10.1016/j.eswa.2014.02.041
   Kirda E., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P330, DOI 10.1145/1141277.1141357
   Kirda E, 2009, COMPUT SECUR, V28, P592, DOI 10.1016/j.cose.2009.04.008
   Kirk J., 2012, Bitcoin exchange loses 50,0 0 0 0 after unencrypted keys stolen
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Klein A., 2007, DOM BASED CROSS SITE
   Kosuga Y, 2007, TWENTY-THIRD ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P107, DOI 10.1109/ACSAC.2007.20
   Krishnamurthy A., 2010, Proceedings of the 19th International Conference on World Wide Web, P551, DOI [10.1145/1772690.1772747, DOI 10.1145/1772690.1772747]
   Krsul IV, 1998, Software vulnerability analysis
   Labbe R., MICROSOFT SECURITY D
   LANDWEHR CE, 1994, ACM COMPUT SURV, V26, P211, DOI 10.1145/185403.185412
   Lee I, 2012, MATH COMPUT MODEL, V55, P58, DOI 10.1016/j.mcm.2011.01.050
   Lekies S., 2012, LECT NOTES INFORM
   Li X., 2012, Proceedings of the second ACM conference on Data and Application Security and Privacy, ACM, P25
   Li X., 2014, P 4 ACM C DAT APPL S, P49
   Li X., 2013, PROC 8 ACM SIGSAC S, P481
   Li XW, 2011, 27TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2011), P247
   Li XW, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2541315
   Liu Simon, 2009, IT Professional, V11, P14, DOI 10.1109/MITP.2009.46
   McGarry C., Change your passwords, ebay users: the site was hacked
   McGee M. K., 2015, ANOTHER MASSIVE HLTH
   Meunier P., 2008, Wiley Handbook of Science and Technology for Homeland Security
   Monshizadeh M, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P690, DOI 10.1145/2660267.2660337
   Morgenstern Jamie., 2010, Proceedings of the 15th ACM SIGPLAN International Conference on Functional Programming, ICFP '10, P169, DOI DOI 10.1145/1863543.1863569
   Mouelhi T., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P210, DOI 10.1109/ICST.2011.56
   Parno B, 2009, P IEEE S SECUR PRIV, P154, DOI 10.1109/SP.2009.21
   Pellegrino G., 2014, P 21 NETW DISTR SYST
   Saxena P, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P601
   Scholte T, 2012, P INT COMP SOFTW APP, P233, DOI 10.1109/COMPSAC.2012.34
   Scholte T, 2012, COMPUT SECUR, V31, P344, DOI 10.1016/j.cose.2011.12.013
   Shahriar Hossain, 2014, International Journal of Secure Software Engineering, V5, P1, DOI 10.4018/ijsse.2014070101
   Shahriar Hossain, 2014, International Journal of Internet Technology and Secured Transactions, V5, P240, DOI 10.1504/IJITST.2014.065184
   Shahriar H., 2012, 2012 IEEE 14th International Symposium on High-Assurance Systems Engineering (HASE 2012), P40, DOI 10.1109/HASE.2012.31
   Shahriar H., 2011, Proceedings of the 2011 IEEE 9th International Conference on Dependable, Autonomic and Secure Computing (DASC 2011), P7, DOI 10.1109/DASC.2011.26
   Shahriar H., 2014, Proceedings of the 29th Annual ACM Symposium on Applied Computing, P1164
   Shahriar H, 2014, INF SECUR J, V23, P137, DOI 10.1080/19393555.2014.931489
   Shahriar H, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187673
   Shahriar H, 2011, J SYST SOFTWARE, V84, P250, DOI 10.1016/j.jss.2010.09.020
   Shahriar H, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR SECURE SYSTEMS, P47, DOI 10.1109/IWSESS.2009.5068458
   Shar LK, 2013, INFORM SOFTWARE TECH, V55, P1767, DOI 10.1016/j.infsof.2013.04.002
   Shar LK, 2012, INFORM SOFTWARE TECH, V54, P467, DOI 10.1016/j.infsof.2011.12.006
   Sima C., 2003, SECURITY NEXT LEVEL
   Skrupsky N., 2013, Proceedings of the third ACM conference on Data and application security and privacy, P129, DOI DOI 10.1145/2435349.2435365
   SON S, 2011, P 2011 ACM INT C OBJ, P1069
   Son Sooel, 2013, P 20 ANN NETW DISTR
   Stock B, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P655
   Stuttard D., 2011, WEB APPLICATIONS HAC
   Su ZD, 2006, ACM SIGPLAN NOTICES, V41, P372, DOI 10.1145/1111320.1111070
   Sun F., 2014, P 21 NETW DISTR SYST P 21 NETW DISTR SYST
   Sun Fangqi., 2011, P 20 USENIX C SECURI, P11
   Swamy N, 2008, P IEEE S SECUR PRIV, P369, DOI 10.1109/SP.2008.29
   Swamy N, 2010, LECT NOTES COMPUT SC, V6012, P529, DOI 10.1007/978-3-642-11957-6_28
   Ter Louw M, 2009, P IEEE S SECUR PRIV, P331, DOI 10.1109/SP.2009.33
   THOMAS S, 2007, P 3 INT WORKSH SOFTW, P9
   Tsipenyuk K, 2005, IEEE SECUR PRIV, V3, P81, DOI 10.1109/MSP.2005.159
   Van Gundy M., 2009, P 16 NETW DISTR SYST
   Van Gundy M, 2012, COMPUT SECUR, V31, P612, DOI 10.1016/j.cose.2011.12.004
   Vikram K, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P173
   VOGT P, 2007, P 14 NETW DISTR SYST
   Wang R, 2012, P IEEE S SECUR PRIV, P365, DOI 10.1109/SP.2012.30
   Wang R, 2011, P IEEE S SECUR PRIV, P465, DOI 10.1109/SP.2011.26
   Ward J., 2007, WHAT IS RICH INTERNE
   Wassermann G, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P32, DOI 10.1145/1250734.1250739
   Wassermann G, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P171, DOI 10.1145/1368088.1368112
   Wedman S, 2013, INF SECUR J, V22, P55, DOI 10.1080/19393555.2013.783952
   Weinberger J, 2011, LECT NOTES COMPUT SC, V6879, P150, DOI 10.1007/978-3-642-23822-2_9
   Williams M., The 5 biggest data breaches of 2014
   Win B. D., 2014, SECURE DEV LIFECYCLE
   Wurzinger P, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR SECURE SYSTEMS, P33, DOI 10.1109/IWSESS.2009.5068456
   Xie Y., 2006, P 15 USENIX SEC S US, V15
   Xing Luyi., 2013, NDSS
   Yip A, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P291
   2014, SYMANTEC INTERNET SE
NR 152
TC 58
Z9 66
U1 3
U2 57
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2016
VL 74
BP 160
EP 180
DI 10.1016/j.infsof.2016.02.005
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DJ7BX
UT WOS:000374368000011
DA 2024-07-18
ER

PT J
AU Bagriyanik, S
   Karahoca, A
AF Bagriyanik, Selami
   Karahoca, Adem
TI Automated COSMIC Function Point measurement using a requirements
   engineering ontology
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Function Point measurement automation; Function Point measurement
   procedure; COSMIC Function Point; ISO/IEC 19761: 2011; Requirements
   ontology
ID SIZE MEASUREMENT
AB Context: There are two interrelated difficulties in requirements engineering processes. First, free-format modelling practices in requirements engineering activities may lead to low quality artefacts and productivity problems. Second, the COSMIC Function Point Method is not yet widespread in the software industry because applying measurement rules to imprecise and ambiguous textual requirements is difficult and requires additional human measurement effort. This challenge is common to all functional size measurement methods.
   Objective: In this study, alternative solutions have been investigated to address these two difficulties. Information created during the requirements engineering process is formalized as an ontology that also becomes a convenient model for transforming requirements into COSMIC Function Point Method concepts.
   Method: A method is proposed to automatically measure the functional size of software by using the designed ontology. The proposed method has been implemented as a software application and verified with real projects conducted within the ICT department of a leading telecommunications provider in Turkey.
   Results: We demonstrated a novel method to measure the functional size of software in COSMIC FP automatically. It is based on a newly developed requirements engineering ontology. Our proposed method has several advantages over other methods explored in previous research.
   Conclusion: Manual and automated measurement results are in agreement, and the tool is promising for the company under study and for the industry at large. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Bagriyanik, Selami] Turkcell Technol R&D, Software Dev Dept, Istanbul, Turkey.
   [Bagriyanik, Selami; Karahoca, Adem] Bahcesehir Univ, Fac Engn, Software Engn Dept, Istanbul, Turkey.
C3 Turkcell Turkey; Bahcesehir University
RP Karahoca, A (corresponding author), Bahcesehir Univ, Fac Engn, Software Engn Dept, Istanbul, Turkey.
EM selami.bagriyanik@turkcell.com.tr; adem.karahoca@bahcesehir.edu.tr
RI Karahoca, Adem/ABI-8273-2020; Bagriyanik, Selami/V-9597-2019; Karahoca,
   Adem/ABI-6801-2020
OI Karahoca, Adem/0000-0003-4654-6351; Bagriyanik,
   Selami/0000-0002-5561-4283; 
CR Abrahao S., 2007, MODEL DRIVEN ENG LAN, P476, DOI [10.1007/978-3-642-24485-8, DOI 10.1007/978-3-642-24485-8]
   Abrahao S, 2007, INFORM SOFTWARE TECH, V49, P366, DOI 10.1016/j.infsof.2006.06.001
   Abrahao S, 2009, J SYST SOFTWARE, V82, P253, DOI 10.1016/j.jss.2008.06.031
   Abramsky Samson, 2010, Perspectives of Systems Informatics. 7th International Andrei Ershov Memorial Conference, PSI 2009. Revised Papers, DOI 10.1007/978-3-642-11486-1_1
   Adem NAZ, 2010, INT CONF COMPUT AUTO, P664, DOI 10.1109/ICCAE.2010.5451322
   Ahmed Emdad, 2008, ISCA - 17th International Conference on Software Engineering and Data Engineering, P145
   Akca AA, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P54, DOI 10.1109/IWSM-Mensura.2013.19
   Amasaki S., 2012, 2012 Fourth International Workshop on Empirical Software Engineering in Practice (IWESEP 2012), P58, DOI 10.1109/IWESEP.2012.11
   [Anonymous], [No title captured]
   [Anonymous], P SOFTW MEAS EUR FOR
   Arnuphaptrairong T., 2011, P INT MULTICONFERENC, V1, P1
   Azzouz S., 2003, PROPOSED MEASUREMENT, P12
   Bagriyanik S., 2015, GLOBAL J TECHNOL, V7, P98
   Bagriyanik S., 2014, GLOBAL J COMPUT SCI, V4, P7
   Barkallah S., 2011, ASEA DRBC EL 2011, P137
   Bernard P., 2012, FDN ITIL 2011 EDITIO
   de Gea JMC, 2012, INFORM SOFTWARE TECH, V54, P1142, DOI 10.1016/j.infsof.2012.04.005
   Ceke D, 2013, 2013 36TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P396
   Committee for Medicinal Products for Human Use European Medicines Agency, 2013, GUID CLIN DEV MED PR, P1
   Cuadrado-Gallego JJ, 2007, LECT NOTES COMPUT SC, V4589, P273
   Cuadrado-Gallego JJ, 2010, INFORM SOFTWARE TECH, V52, P347, DOI 10.1016/j.infsof.2009.12.001
   del Bianco V, 2014, INFORM SOFTWARE TECH, V56, P1253, DOI 10.1016/j.infsof.2014.04.009
   Demirors O, 2009, IEEE SOFTWARE, V26, P71, DOI 10.1109/MS.2009.60
   Demirsoy A., 2013, USING SEMANTIC KNOWL
   Dermeval D, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P1, DOI 10.1109/SBES.2014.13
   Diab H., 2002, ICFEM 2002, P483
   Ebert C, 2014, IEEE SOFTWARE, V31, P24, DOI 10.1109/MS.2014.138
   Edagawa T, 2011, J SYST SOFTWARE, V84, P976, DOI 10.1016/j.jss.2011.01.029
   Fehlmann T.M., 2011, METRIKON 2011, P16
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Habela P., 2011, COSMIC FUNCTION POIN, P204, DOI [10.1017/C809781107415324.004, DOI 10.1017/C809781107415324.004]
   HAPPEL H., 2006, INT WORKSHOP SEMANTI, P1
   Henderson-Sellers B, 2011, J SYST SOFTWARE, V84, P301, DOI 10.1016/j.jss.2010.10.025
   Henderson-Sellers B, 2014, COMPUT STAND INTER, V36, P563, DOI 10.1016/j.csi.2013.11.001
   Hilera Jose R., 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P380, DOI 10.1109/ICSEA.2010.64
   Huskins M., 2013, ENHANCING EFFICIENCY
   Jacobsen I., 1999, UNIFIED SOFTWARE DEV
   Jenner M. S., 2011, COSMIC FUNCTION POIN, P276, DOI [10.1017/CB09781107415324.004, DOI 10.1017/CB09781107415324.004]
   Jones Capers, 2013, Software Engineering Notes, V38, P1, DOI 10.1145/2492248.2492268
   Lavazza L., 2010, 20 INT WORK SOFTW ME
   Lavazza L, 2011, INFORM SOFTWARE TECH, V53, P874, DOI 10.1016/j.infsof.2011.02.005
   Lavazza L, 2009, LECT NOTES COMPUT SC, V5891, P101, DOI 10.1007/978-3-642-05415-0_8
   Lavazza LA, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P100
   Letier E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P883, DOI 10.1145/2568225.2568239
   Levesque G., 2008, Proceedings of the 2008 C3S2E Conference, P81
   Magee B., 2007, STORY PHILOS
   Marín B, 2008, LECT NOTES COMPUT SC, V5338, P170
   MATULEVICIUS R, 2005, PROCESS SUPPORT REQU
   Nagano S.A., 2003, 13 INT WORK SOFTW ME
   Noy N. F., 2001, Ontology development 101: A guide to creating your first ontology
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Object Management Group, 2014, UN MOD LANGUAGETM UM
   Oriou Alexandre, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P1, DOI 10.1109/IWSM.Mensura.2014.45
   Pools G., 2003, TECHNOLOGY, P1
   Rule G., 2012, MOST COMMON FUNCTION, V44, P1
   Sellami A, 2015, INFORM SOFTWARE TECH, V59, P222, DOI 10.1016/j.infsof.2014.11.002
   Sellami A, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P282, DOI 10.1109/ICSEA.2009.96
   Sheetz SD, 2009, J SYST SOFTWARE, V82, P1540, DOI 10.1016/j.jss.2009.04.038
   Sicilia M.-A., 2005, 29 ANN INT COMP SOFT, P1
   Soubra Hassan, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P23, DOI 10.1109/IWSM.Mensura.2014.26
   Soubra H., 2011, 2011 JT C 21 INT WOR
   Soubra H, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P70, DOI 10.1109/IWSM-MENSURA.2012.18
   Stanford Center for Biomedical Informatics Research, 2014, PROT
   Symons C., 2014, IWSM 2014 INT COSMIC
   The Common Software Measurement International Consortium, 2009, GUID SIZ DAT WAR APP
   The Common Software Measurement International Consortium, 2015, COSMIC FUNCT SIZ MEA
   Trudel Sylvie., 2012, USING COSMIC FUNCTIO
   Uemura T., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P62, DOI 10.1109/METRIC.1999.809727
   Ungan E, 2009, LECT NOTES COMPUT SC, V5891, P321, DOI 10.1007/978-3-642-05415-0_23
   Wongthongtham P, 2009, IEEE T KNOWL DATA EN, V21, P1205, DOI 10.1109/TKDE.2008.209
   Zhao YJ, 2009, IEEE T SERV COMPUT, V2, P303, DOI 10.1109/TSC.2009.20
   Zivkovic A, 2005, INFORM SOFTWARE TECH, V47, P881, DOI 10.1016/j.infsof.2005.02.008
NR 72
TC 8
Z9 8
U1 1
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2016
VL 72
BP 189
EP 203
DI 10.1016/j.infsof.2015.12.011
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DX9HP
UT WOS:000384704500012
DA 2024-07-18
ER

PT J
AU Johnson, P
   Ekstedt, M
AF Johnson, Pontus
   Ekstedt, Mathias
TI The Tarpit - A general theory of software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Theory; Languages and automata; Cognitive
   architecture; Problem solving; Organization structure
AB Context: Recent years have seen an increasing interest in general theories of software engineering. As in other academic fields, these theories aim to explain and predict the key phenomena of the discipline.
   Objective: The present article proposes a general theory of software engineering that we have labeled the Tarpit theory, in reference to the 1982 epigram by Alan Perlis.
   Method: An integrative theory development approach was employed to develop the Tarpit theory from four underlying theoretical fields: (i) languages and automata, (ii) cognitive architecture, (iii) problem solving, and (iv) organization structure. Its applicability was explored in three test cases.
   Results: The theory demonstrates an explanatory and predictive potential for a diverse set of software engineering phenomena. It demonstrates a capability of explaining Brooks's law, of making predictions about domain-specific languages, and of evaluating the pros and cons of the practice of continuous integration.
   Conclusion: The presented theory appears capable of explaining and predicting a wide range of software engineering phenomena. Further refinement and application of the theory remains as future work. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Johnson, Pontus; Ekstedt, Mathias] KTH Royal Inst Technol, Dept Ind Informat & Control Syst, Stockholm, Sweden.
C3 Royal Institute of Technology
RP Johnson, P (corresponding author), KTH Royal Inst Technol, Dept Ind Informat & Control Syst, Stockholm, Sweden.
RI Ekstedt, Mathias/U-7557-2019; Johnson, Pontus/C-5796-2014
CR Abelson H., 1983, STRUCTURE INTERPRETA
   Adolph S, 2013, 2013 2ND SEMAT WORKSHOP ON A GENERAL THEORY OF SOFTWARE ENGINEERING (GTSE), P47, DOI 10.1109/GTSE.2013.6613870
   Aho A. V., 2003, COMPILERS PRINCIPLES, V2/e
   Alagar VS, 2011, TEXTS COMPUT SCI, P1, DOI 10.1007/978-0-85729-277-3
   Alves-Foss J., 1999, FORMAL SYNTAX SEMANT
   Anderson J.R., 2000, LEARN MEMORY
   Anderson John R., 1998, The Atomic Components of Thought
   Anderson John Robert, 1980, Cognitive Psychology and Its Implications
   Anderson JR, 1999, J EXP PSYCHOL GEN, V128, P186, DOI 10.1037/0096-3445.128.2.186
   ANDERSON JR, 1982, PSYCHOL REV, V89, P369, DOI 10.1037/0033-295X.89.4.369
   Anderson JR, 1996, COGNITIVE PSYCHOL, V30, P221, DOI 10.1006/cogp.1996.0007
   [Anonymous], 1993, Decisions with Multiple Objectives
   [Anonymous], 2009, HDB RES MULTIAGENT S
   [Anonymous], 2007, The Definitive ANTLR Reference: Building Domain-Specific Languages
   [Anonymous], 1986, Denotational Semantics: A Methodology for Language Development
   [Anonymous], 2006, Cognition and Multi-Agent Interaction
   [Anonymous], P 3 SEMAT WORKSH GEN
   [Anonymous], 2001, INTRO AUTOMATA THEOR
   [Anonymous], 1975, YACC YET ANOTHER COM
   [Anonymous], 2004, XP Ser
   [Anonymous], 1998, CRITIQUE PURE REASON
   [Anonymous], 1970, Notes on structured programming
   [Anonymous], 2007, PATTERN ORIENTED SOF
   [Anonymous], 2012, COMPUTER ARCHITECTUR
   [Anonymous], 1992, Bayes or Bust? A Critical Examination of Bayesian Confirmation Theory
   [Anonymous], 2007, CAN HUMAN MIND OCCUR, DOI DOI 10.1093/ACPROF:OSO/9780195324259.001.0001
   [Anonymous], 2004, Concepts, techniques, and models of computer programming
   [Anonymous], 2011, COGNITIVE PSYCHOL CE
   [Anonymous], UNIFYING THEORIES PR
   [Anonymous], 1999, MULTIAGENT SYSTEMS I
   [Anonymous], 1993, Software Requirements-objects, Functions and States
   [Anonymous], 2001, Introduction to algorithms
   [Anonymous], 1934, Philosophy of Science, DOI DOI 10.1086/286316
   [Anonymous], 2013, STANFORD ENCY PHILOS
   [Anonymous], 1995, Designing information technology in the postmodern age: From method to metaphor
   [Anonymous], 2014, RULES MIND
   Aydede Murat., 2010, Stanford Encyclopedia of Philosophy, V2010
   Backhouse R.E., 2010, The History of the Social Sciences since 1945
   Batory D, 2013, 2013 2ND SEMAT WORKSHOP ON A GENERAL THEORY OF SOFTWARE ENGINEERING (GTSE), P19, DOI 10.1109/GTSE.2013.6613865
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   Beck K., 2001, Agile manifesto
   Boolos George S., 2002, Computability and logic
   Borst JP, 2013, J COGNITIVE NEUROSCI, V25, P2151, DOI 10.1162/jocn_a_00457
   Borst JP, 2013, P NATL ACAD SCI USA, V110, P1628, DOI 10.1073/pnas.1221572110
   Brooks F.P., 1975, The Mythical Man-month, V1995
   Brooks Jr F.P., 1995, MYTHICAL MAN MOUTH A
   CARLEY K, 2001, COMPUTATIONAL ORG TH
   Carley K.M., 1994, Computational organizational theory, P55
   Cartwright N., 1999, The dappled world: A study of the boundaries of science
   Cassirer Ernst., 1979, SYMBOL MYTH CULTURE
   Chater N., 2003, RATIONAL MODELS COGN
   Clark Alexander., 2013, The Handbook of Computational Linguistics and Natural Language Processing
   Coon D., 2004, INTRO PSYCHOL
   Corporation E.D., 2013, GLOB DEV POP DEM STU, V1
   Cummins R., 1989, MEANING MENTAL REPRE, V24
   Daft R.L., 2009, ORG THEORY DESIGN
   Dignum M., 2003, MODEL ORG INTERACTIO
   Dijkstra E.W., 1982, EWD 447: On the role of scientific thought. Selected Writings on Computing: A Personal Perspective, P60, DOI DOI 10.1007/978-1-4612-5695-3
   DIJKSTRA EW, 1968, COMMUN ACM, V11, P147, DOI 10.1145/362929.362947
   Dowek G, 2011, PROOFS ALGORITHMS IN
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Endres A., 2003, A Handbook of Software and Systems Engineering: Empirical Observations, Laws, and Theories
   Erbas C., 2013, SEMAT WORKSH GEN THE, P15
   Erbas C., 2014, SCI COMPUT PROGRAMM, P6
   Eysenck M.W., 2000, Cognitive psychology: A student's handbook
   Ferber J, 1998, INTERNATIONAL CONFERENCE ON MULTI-AGENT SYSTEMS, PROCEEDINGS, P128, DOI 10.1109/ICMAS.1998.699041
   FODOR JA, 1988, COGNITION, V28, P3, DOI 10.1016/0010-0277(88)90031-5
   Fowler M., CONTINUOUS INTEGRATI
   Fowler M., 2010, Domain-specific languages
   FRANKLIN S., 1997, INT WORKSHOP AGENT T, V1193, P21
   Fuller S., 2004, Kuhn vs. Popper: The struggle for the soul of science
   Godfrey-Smith P., 2009, Theory and Reality: An Introduction to the Philosophy of Science
   Goldstein E.B., 2014, Cognitive psychology: Connecting mind, research and everyday experience
   Gordon HS., 2002, The History and Philosophy of Social Science: An Introduction
   Gosling J., 2000, The Java Language Specification
   Gregor S, 2006, MIS QUART, V30, P611
   Griffiths Thomas L, 2008, BAYESIAN MODELS COGN
   Habermas Jurgen, 1985, THEORY COMMUNICATIVE, V2
   Halstead M.H., 1977, OPERATION PROGRAMMIN
   Hausman Daniel., 1992, INEXACT SEPARATE SCI
   Hegel GeorgWilhelm Friedrich., 2004, PHENOMENOLOGY MIND
   Herrington J., 2003, CODE GENRATION ACTIO
   Hickey ThomasJ., 1995, History of Twentieth Century Philosophy of Science, Book V: Karl Popper and Falsificationist Criticism
   Hoperoft J.E., AUTOMATA THEORY LANG
   Hudak P, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P134, DOI 10.1109/ICSR.1998.685738
   Ingalls D. H, 1978, P 5 ACM SIGACT SIGPL, P9
   Jacobson I., 2013, The Essence of Software Engineering: Applying the SEMAT Kernel
   Jacobson I., 2009, CALL ACTION SEMAT IN
   Jacobson I., 2009, WHY WE NEED THEORY S
   Jacobson Ivar., OBJECT ORIENTED SOFT
   Johnson P., 2012, IEEE Software, V29, P94, DOI 10.1109/MS.2012.127
   Johnson P., 2007, INT C SOFTW ENG ADV
   Johnson P., 2003, GRAND UNIFIED THEORY
   Johnson P., 2013, ACM SIGSOFT SOFTW EN, V38, P47, DOI DOI 10.1145/2507288.2529923
   Johnson P., 2005, GRAND UNIFIED THEORY
   Johnson P., 2015, SEMAT WORKSH GEN THE
   Johnson P., 2012, P GTSE 2012 WORKSH
   Johnson P, 2015, SCI COMPUT PROGRAM, V101, P1, DOI 10.1016/j.scico.2014.11.005
   Kalat J., 2013, INTRO PSYCHOL
   Kelly S., 2008, Domain-Specific Modeling
   Kernighan B. W., 1988, The C programming language, V2
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 1991, Proceedings. 1991 International Workshop on Object Orientation in Operating Systems (Cat. No.91TH0392-1), P127, DOI 10.1109/IWOOOS.1991.183036
   Kitcher Philip, 1962, SCI EXPLANATION, V13
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Kluge Werner., 2005, ABSTRACT COMPUTING M
   Kroll D., 2014, INTRO PSYCHOL
   Kruchten P, 2005, IEEE SOFTWARE, V22, P16, DOI 10.1109/MS.2005.38
   Kuhn TS., 1962, The Structure of Scientific Revolutions
   Lagerstrom R., 2014, P 3 SEMAT WORKSH GEN, P36
   Lamberts K., 2005, Handbook of cognition
   Langley P, 2009, COGN SYST RES, V10, P141, DOI 10.1016/j.cogsys.2006.07.004
   Latour B., 1987, SCI ACTION
   Li Ming., 2009, An introduction to Kolmogorov complexity and its applications
   Linz P, 2011, An Introduction to Formal Languages and Automata
   Machamer P., 2008, BLACKWELL GUIDE PHIL, V19
   McClelland JL, 2003, NAT REV NEUROSCI, V4, P310, DOI 10.1038/nrn1076
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Merton R.K., 1968, SOCIAL STRUCTURE SOC
   Mintzberg H., 1979, STRUCTURING ORG
   Newell A., 1994, Unified theories of cognition, V187
   Newell A., 1972, HUMAN PROBLEM SOLVIN, V14
   Ng P.-W., 2014, SCI COMPUT PROGRAMM, P66
   Nielson H. R., 2007, SEMANTICS APPL APPET
   Nola R, 2014, THEORIES SCI METHOD
   Olfati-Saber R, 2007, P IEEE, V95, P215, DOI 10.1109/JPROC.2006.887293
   Paivarinta T., 2014, SCI COMPUT PROGRAMM, P124
   Papadimitriou Christos H., 2003, Computational complexity
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   PARNAS DL, 1979, IEEE T SOFTWARE ENG, V5, P128, DOI 10.1109/TSE.1979.234169
   Pearl J., 1984, Heuristics: Intelligent Search Strategies for Computer Problem Solving
   Perlis Alan J, 1982, ACM Sigplan Notices, V17, P7, DOI DOI 10.1145/947955.1083808
   Perrotta D, 2014, LECT NOTES COMPUT SC, V8594, P99, DOI 10.1007/978-3-662-45079-6_8
   Perry DE, 2013, 2013 2ND SEMAT WORKSHOP ON A GENERAL THEORY OF SOFTWARE ENGINEERING (GTSE), P39, DOI 10.1109/GTSE.2013.6613869
   Pettersson M., 1999, COMPILING NATURAL SE
   Petzold C., 2008, The annotated turing: A guided tour through Alan Turings historic paper on computability and the turing machine
   Pinder C. C., 1980, Middle range theory and the study of organizations, P187
   Popper K., 2005, The logic of scientific discovery
   Priestley M, 2011, HIST COMPUT-SPRINGER, P1, DOI 10.1007/978-1-84882-555-0
   Quinlan P.T., 2008, COGNITIVE PSYCHOL
   Ralph P., 2014, SCI COMPUT PROGRAMM, P21
   Ralph P., 2014, ACM SIGSOFF SOFTW EN, V39
   Ralph P., 2012, ACM SIGSOFT SOFTW EN, V38
   Ralph P, 2013, 2013 2ND SEMAT WORKSHOP ON A GENERAL THEORY OF SOFTWARE ENGINEERING (GTSE), P35, DOI 10.1109/GTSE.2013.6613868
   Riemer Nick, 2010, Introducing semantics
   Robertson S.I., 2001, PROBLEM SOLVING
   Rogers W.P., 2001, JAVAWORLD COM, V5, P01
   Rombach D, 2013, PERSPECTIVES FUTURE, P1, DOI 10.1007/978-3-642-37395-4_1
   Rubinstein A., 1998, Modeling bounded rationality, V1
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Runeson P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.91
   Salmon WC., 2006, 4 DECADES SCI EXPLAN
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Simon H.A., 1996, SCI ARTIFICIAL, V136
   Sipser M., 2006, INTRO THEORY COMPUTA, V2
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Slonneger Kenneth, 1995, FORMAL SYNTAX SEMANT, V340
   Smolander K, 2013, 2013 2ND SEMAT WORKSHOP ON A GENERAL THEORY OF SOFTWARE ENGINEERING (GTSE), P27, DOI 10.1109/GTSE.2013.6613867
   Stegmuller W., 1976, STRUCTURE DYNAMICS T
   Stoica A.-J., 2014, SCI COMPUT PROGRAMM, P42
   Stol K.-J., 2014, SCI COMPUT PROGRAMM, P79
   Stolberg S, 2009, AGILE 2009 CONFERENCE, P369, DOI 10.1109/AGILE.2009.16
   SUTTON RI, 1995, ADMIN SCI QUART, V40, P371, DOI 10.2307/2393788
   Szabo Z., 2013, The Stanford Encyclopedia of Philosophy, V2013
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   TVERSKY A, 1974, SCIENCE, V185, P1124, DOI 10.1126/science.185.4157.1124
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   Von Neuman J., 1947, THEORY GAMES EC BEHA
   WEICK KE, 1995, ADMIN SCI QUART, V40, P385, DOI 10.2307/2393789
   Weinberg Gerald M, 1971, The psychology of computer programming, V9326
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
NR 172
TC 8
Z9 9
U1 0
U2 14
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2016
VL 70
BP 181
EP 203
DI 10.1016/j.infsof.2015.06.001
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DA3LC
UT WOS:000367697600014
DA 2024-07-18
ER

PT J
AU Martini, A
   Bosch, J
   Chaudron, M
AF Martini, Antonio
   Bosch, Jan
   Chaudron, Michel
TI Investigating Architectural Technical Debt accumulation and refactoring
   over time: A multiple-case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 40th Euromicro Conference on Software Engineering and Advanced
   Applications (SEAA)
CY AUG 27-29, 2014
CL Univ Verona, Dept Comp Sci, Verona, ITALY
SP Elsevier Informat & Software Technol Journal, EDALab s r l, Euromicro
HO Univ Verona, Dept Comp Sci
DE Architectural Technical Debt; Software management; Software
   architecture; Agile software development; Software life-cycle;
   Qualitative model
AB Context: A known problem in large software companies is to balance the prioritization of short-term with long-term feature delivery speed. Specifically, Architecture Technical Debt is regarded as sub-optimal architectural solutions taken to deliver fast that might hinder future feature development, which, in turn, would hinder agility.
   Objective: This paper aims at improving software management by shedding light on the current factors responsible for the accumulation of Architectural Technical Debt and to understand how it evolves over time.
   Method: We conducted an exploratory multiple-case embedded case study in 7 sites at 5 large companies. We evaluated the results with additional cross-company interviews and an in-depth, company-specific case study in which we initially evaluate factors and models.
   Results: We compiled a taxonomy of the factors and their influence in the accumulation of Architectural Technical Debt, and we provide two qualitative models of how the debt is accumulated and refactored over time in the studied companies. We also list a set of exploratory propositions on possible refactoring strategies that can be useful as insights for practitioners and as hypotheses for further research.
   Conclusion: Several factors cause constant and unavoidable accumulation of Architecture Technical Debt, which leads to development crises. Refactorings are often overlooked in prioritization and they are often triggered by development crises, in a reactive fashion. Some of the factors are manageable, while others are external to the companies. ATD needs to be made visible, in order to postpone the crises according to the strategic goals of the companies. There is a need for practices and automated tools to proactively manage ATD. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Martini, Antonio; Bosch, Jan; Chaudron, Michel] Gothenburg Univ, Chalmers Univ Technol, Comp Sci & Engn, Software Engn, Gothenburg, Sweden.
C3 Chalmers University of Technology; University of Gothenburg
RP Martini, A (corresponding author), Gothenburg Univ, Chalmers Univ Technol, Comp Sci & Engn, Software Engn, Gothenburg, Sweden.
EM antonio.martini@chalmers.se; jan.bosch@chalmers.se;
   michel.chaudron@cse.gu.se
RI Martini, Antonio/AAA-2683-2019
OI Martini, Antonio/0000-0002-0669-8687; Chaudron,
   Michel/0000-0001-7517-6666
CR [Anonymous], 2012, 2012 3rd International Workshop on Managing Technical Debt, MTD 2012-Proceedings, DOI [10.1109/MTD.2012.6225997, DOI 10.1109/MTD.2012.6225997]
   Babar MA, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P600, DOI 10.1109/APSEC.2004.38
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Daneva M, 2013, J SYST SOFTWARE, V86, P1333, DOI 10.1016/j.jss.2012.12.046
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Kruchten P, 2008, J SYST SOFTWARE, V81, P2413, DOI 10.1016/j.jss.2008.08.025
   Lehman MM, 2002, J SOFTW MAINT EVOL-R, V14, P335, DOI 10.1002/smr.259
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Martini A., 2014, CONTINUOUS SOFTWARE, P39
   Martini A., WICSA 2015 IN PRESS
   Nord R. L., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P91, DOI 10.1109/WICSA-ECSA.212.17
   Nugroho A, 2011, P 2 WORKSH MAN TECHN, P1
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schmid Klaus, 2013, QOSA 13 P 9 INT ACMS, P153, DOI [DOI 10.1145/2465478.2465492, 10.1145/2465478.2465492]
   Seaman C., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P45, DOI 10.1109/MTD.2012.6225999
   Sindhgatta Renuka, 2010, P 25 ACM INT C COMP, P105, DOI DOI 10.1145/1869542.1869560
   Strauss A. L., 1997, Grounded Theory in Practice
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Yin R.K., 2014, Applications of case study research, V2nd
   Yuepu Guo, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P528, DOI 10.1109/ICSM.2011.6080824
NR 23
TC 65
Z9 72
U1 8
U2 44
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2015
VL 67
BP 237
EP 253
DI 10.1016/j.infsof.2015.07.005
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA CT2AO
UT WOS:000362604600015
DA 2024-07-18
ER

PT J
AU Ruiz-Rube, I
   Dodero, JM
   Colomo-Palacios, R
AF Ruiz-Rube, Ivan
   Manuel Dodero, Juan
   Colomo-Palacios, Ricardo
TI A framework for software process deployment and evaluation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software quality; Software Process Engineering; Model-driven
   engineering; Information integration; Linked open data
ID INFORMATION-SYSTEMS; LINKED DATA; MODEL; LANGUAGES
AB Context: Software Process Engineering promotes the systematic production of software by following a set of well-defined technical and management processes. A comprehensive management of these processes involves the accomplishment of a number of activities such as model design, verification, validation, deployment and evaluation. However, the deployment and evaluation activities need more research efforts in order to achieve greater automation.
   Objective: With the aim of minimizing the required time to adapt the tools at the beginning of each new project and reducing the complexity of the construction of mechanisms for automated evaluation, the Software Process Deployment 82 Evaluation Framework (SPDEF) has been elaborated and is described in this paper.
   Method: The proposed framework is based on the application of well-known techniques in Software Engineering, such as Model Driven Engineering and Information Integration through Linked Open Data. It comprises a systematic method for the deployment and evaluation, a number of models and relationships between models, and some software tools.
   Results: Automated deployment of the OpenUP methodology is tested through the application of the SPDEF framework and support tools to enable the automated quality assessment of software development or maintenance projects.
   Conclusions: Making use of the method and the software components developed in the context of the proposed framework, the alignment between the definition of the processes and the supporting tools is improved, while the existing complexity is reduced when it comes to automating the quality evaluation of software processes. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Ruiz-Rube, Ivan; Manuel Dodero, Juan] Super Sch Engn, Cadiz 11519, Spain.
   [Colomo-Palacios, Ricardo] Ostfold Univ Coll, N-1783 Halden, Norway.
C3 Ostfold University College
RP Ruiz-Rube, I (corresponding author), Super Sch Engn, Ave Univ 10, Cadiz 11519, Spain.
EM ivan.ruiz@uca.es; juanma.dodero@uca.es; ricardo.colomo-palacios@hiof.no
RI Dodero, Juan Manuel/D-4143-2009; Ruiz-Rube, Iván/F-5824-2016;
   Colomo-Palacios, Ricardo/E-5139-2010
OI Dodero, Juan Manuel/0000-0002-4105-5679; Ruiz-Rube,
   Iván/0000-0002-9012-700X; Colomo-Palacios, Ricardo/0000-0002-1555-9726
FU Spanish Ministry of Industry, Tourism and Trade [TSI-020100-2011-396]
FX This work has been sponsored by grants from the Plataforma para el
   modelado, personalizacin y benchmarking en la mejora de procesos
   normalizados (BESTMARK) project (TSI-020100-2011-396) of the Spanish
   Ministry of Industry, Tourism and Trade.
CR [Anonymous], CMMI DEV VERS 1 2
   [Anonymous], ECL PROC FRAM
   [Anonymous], 1996, Software Process: Improvement and Practice
   [Anonymous], 2019, Business Process Management: Concepts, Languages, Architectures
   Aurum A, 2002, SOFTW TEST VERIF REL, V12, P133, DOI 10.1002/stvr.243
   Bayona-Oré S, 2014, SOFTWARE QUAL J, V22, P21, DOI 10.1007/s11219-012-9190-y
   Bendraou R, 2010, IEEE T SOFTWARE ENG, V36, P662, DOI 10.1109/TSE.2009.85
   Boehm Barry., 2005, FDN EMPIRICAL SOFTWA
   Cabot J., 2009, DR DOBBS J, P1
   Cervera M, 2010, LECT NOTES COMPUT SC, V6195, P112, DOI 10.1007/978-3-642-14347-2_11
   Colombo A, 2008, ASIA PAC SOFWR ENG, P503, DOI 10.1109/APSEC.2008.55
   Colomo-Palacios R, 2014, FUTURE GENER COMP SY, V32, P260, DOI 10.1016/j.future.2013.10.021
   Decker B., 2007, IEEE SOFTW
   Díaz O, 2012, INFORM SYST, V37, P737, DOI 10.1016/j.is.2012.05.002
   Emami M.S., 2010, 2010 6 INT C NETW CO, P1
   Escalona MJ, 2007, LECT NOTES BUS INF P, V1, P267
   Fuggetta A., 2000, P C LIM IR FUT SOFTW, P25, DOI DOI 10.1145/336512.336521
   García-Borgoñón L, 2014, INFORM SOFTWARE TECH, V56, P103, DOI 10.1016/j.infsof.2013.10.001
   Heath  T., 2011, SYNTHESIS LECT SEMAN, DOI [10.2200/S00334ED1V01Y201102WBE001, DOI 10.2200/S00334ED1V01Y201102WBE001, 10.2200/s00334ed1v01y201102wbe001]
   Herraiz Israel, 2007, 2007 IEEE International Conference on Software Maintenance, P405, DOI 10.1109/ICSM.2007.4362653
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Joerg B, 2012, INT J SOFTW ENG KNOW, V22, P345, DOI 10.1142/S0218194012400074
   Kabbaj Mohammed, 2007, INT WORKSHOP PRINCIP, P75
   Kaindl H., 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P101, DOI 10.1109/ICSEA.2010.23
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Louridas P., 2006, IEEE SOFTWARE, P6
   Maciel Rita Suzana Pitangueira, 2009, Proceedings of the 2009 23rd Brazilian Symposium on Software Engineering. SBES 2009, P104, DOI 10.1109/SBES.2009.18
   Dodero JM, 2011, COMM COM INF SC, V240, P105
   O. C. S. Workgroup, 2013, OSLC COR SPEC VERS 3
   *OMG, 2008, SOFTW SYST PROC ENG
   Osellus Inc. IRIS Process Author, IRIS PROC AUTH
   Robles G., 2012, OPEN SOURCE SYSTEMS, P1, DOI DOI 10.1007/978-3-642-33442-91
   Rodríguez D, 2010, INT J SOFTW ENG KNOW, V20, P533, DOI 10.1142/S0218194010004876
   Ruiz-Rube I, 2013, J SOFTW-EVOL PROC, V25, P999, DOI 10.1002/smr.1594
   Scott K., 2002, The Unified Process Explained
   Traverso-Ribon I., 2013, P 3 INT C WEB INT MI, P20
   Vera-Baquero A, 2013, IT PROF, V15, P29, DOI 10.1109/MITP.2013.60
   Yu L., 2006, SOFTW ENG RES PRACT
NR 38
TC 5
Z9 6
U1 1
U2 40
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2015
VL 59
BP 205
EP 221
DI 10.1016/j.infsof.2014.12.001
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CB1ZT
UT WOS:000349427200012
DA 2024-07-18
ER

PT J
AU Steinmacher, I
   Silva, MAG
   Gerosa, MA
   Redmiles, DF
AF Steinmacher, Igor
   Graciotto Silva, Marco Aurelio
   Gerosa, Marco Aurelio
   Redmiles, David F.
TI A systematic literature review on the barriers faced by newcomers to
   open source software projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Open source software; Newcomers; Joining; Barriers to entry; Onboarding;
   Systematic literature review
ID COMMUNITY; HIPIKAT
AB Context: Numerous open source software projects are based on volunteers collaboration and require a continuous influx of newcomers for their continuity. Newcomers face barriers that can lead them to give up. These barriers hinder both developers willing to make a single contribution and those willing to become a project member.
   Objective: This study aims to identify and classify the barriers that newcomers face when contributing to open source software projects.
   Method: We conducted a systematic literature review of papers reporting empirical evidence regarding the barriers that newcomers face when contributing to open source software (OSS) projects. We retrieved 291 studies by querying 4 digital libraries. Twenty studies were identified as primary. We performed a backward snowballing approach, and searched for other papers published by the authors of the selected papers to identify potential studies. Then, we used a coding approach inspired by open coding and axial coding procedures from Grounded Theory to categorize the barriers reported by the selected studies.
   Results: We identified 20 studies providing empirical evidence of barriers faced by newcomers to OSS projects while making a contribution. From the analysis, we identified 15 different barriers, which we grouped into five categories: social interaction, newcomers' previous knowledge, finding a way to start, documentation, and technical hurdles. We also classified the problems with regard to their origin: newcomers, community, or product.
   Conclusion: The results are useful to researchers and OSS practitioners willing to investigate or to implement tools to support newcomers. We mapped technical and non-technical barriers that hinder newcomers' first contributions. The most evidenced barriers are related to socialization, appearing in 75% (15 out of 20) of the studies analyzed, with a high focus on interactions in mailing lists (receiving answers and socialization with other members). There is a lack of in-depth studies on technical issues, such as code issues. We also noticed that the majority of the studies relied on historical data gathered from software repositories and that there was a lack of experiments and qualitative studies in this area. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Steinmacher, Igor; Graciotto Silva, Marco Aurelio] Fed Univ Technol, Dept Comp, Curitiba, Parana, Brazil.
   [Steinmacher, Igor; Gerosa, Marco Aurelio] Univ Sao Paulo, Dept Comp Sci, BR-05508 Sao Paulo, Brazil.
   [Redmiles, David F.] Univ Calif Irvine, Dept Informat, Irvine, CA USA.
C3 Universidade Tecnologica Federal do Parana; Universidade de Sao Paulo;
   University of California System; University of California Irvine
RP Steinmacher, I (corresponding author), UTFPR Campus Campo Mourao, Via Rosalina Maria Santos 1233,Caixa Postal 271, BR-87301899 Campo Mourao, PR, Brazil.
EM igorfs@utfpr.edu.br; magsilva@utfpr.edu.br; gerosa@ime.usp.br;
   redmiles@ics.uci.edu
RI Gerosa, Marco Aurelio/A-6686-2009; Igor, Steinmacher/B-6414-2012;
   Graciotto Silva, Marco Aurélio/F-5675-2012
OI Gerosa, Marco Aurelio/0000-0003-1399-7535; Igor,
   Steinmacher/0000-0002-0612-5790; Graciotto Silva, Marco
   Aurélio/0000-0002-1737-8240; Redmiles, David/0000-0002-1370-7123
FU UTFPR; Fundacao Araucaria; CNPq [proc. 477831/2013-3]; NAPSoL-PRP-USP;
   NAWEB; FAPESP; CAPES [BEX 2038-13-7]
FX The authors would like to thank UTFPR, Fundacao Araucaria, CNPq (proc.
   477831/2013-3), NAPSoL-PRP-USP, NAWEB, and FAPESP for their financial
   support. Igor Steinmacher received grants from CAPES (BEX 2038-13-7).
CR [Anonymous], 2011, Proceedings of the 2011 44th Hawaii International Conference on System Sciences", HICSS'11, DOI [DOI 10.1109/HICSS.2011.264, 10.1109/HICSS.2011.264]
   [Anonymous], 2013, P ACM C COMPUTER SUP, DOI DOI 10.1145/2441776.2441871
   [Anonymous], 2012, P ACM 2012 C COMPUTE, DOI [10.1145/2145204.2145329, DOI 10.1145/2145204.2145329]
   [Anonymous], 2010, INT C EV ASS SOFTW E
   [Anonymous], 2005, ESELAW
   [Anonymous], 2014, WORKSH GLOB SOFTW DE
   Begel Andrew, 2008, P 4 INT WORKSH COMP, P3, DOI [DOI 10.1145/RESEARCH(ICER'1404520.1404522, 10.1145/Research(ICER'1404520.1404522]
   Bird C., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P568, DOI 10.1109/ICSM.2011.6080832
   Bird C., 2007, P 4 INT WORKSH MIN S, P1
   Canfora G., 2012, P ACM SIGSOFT 20 INT, P1
   Capiluppi A, 2007, INT FED INFO PROC, V234, P31
   Capra E, 2008, INT FED INFO PROC, V275, P1
   Corbin J., 2008, QUAL RES, DOI DOI 10.4135/9781452230153.N10
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Dagenais B., 2010, Proc. of the ICSE 10, P275, DOI DOI 10.1145/1806799.1806842
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   FARZAN R., 2013, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems CHI'13, P783
   Faulkner R., 2012, P 8 ANN INT S WIK OP, p[5, 1, 4]
   Fogel Karl, 2013, PRODUCING OPEN SOURC
   Forte A, 2013, AM BEHAV SCI, V57, P535, DOI 10.1177/0002764212469362
   Gacek C, 2004, IEEE SOFTWARE, V21, P34, DOI 10.1109/MS.2004.1259206
   Halfaker A., 2011, Proceedings of the International Symposium on Wikis and Open Collaboration, P163, DOI [10.1145/2038558.2038585, DOI 10.1145/2038558.2038585]
   Halfaker A, 2013, AM BEHAV SCI, V57, P664, DOI 10.1177/0002764212469365
   He P, 2012, SECOND INTERNATIONAL CONFERENCE ON CLOUD AND GREEN COMPUTING / SECOND INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING AND ITS APPLICATIONS (CGC/SCA 2012), P418, DOI 10.1109/CGC.2012.50
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Joyce E, 2006, J COMPUT-MEDIAT COMM, V11
   Kitchenham B., 2007, Joint Report
   Kitchenham B., 2004, Procedures for performing systematic literature reviews, P33
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Lampe C., 2005, P 2005 INT ACM SIGGR, P11, DOI [DOI 10.1145/1099203.1099206, https://doi.org/10.1145/1099203.1099206]
   Midha V, 2010, J COMPUT INFORM SYST, V50, P81
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Park Y, 2009, IEEE INT WORK VIS SO, P3, DOI 10.1109/VISSOF.2009.5336433
   Qureshi I, 2011, ORGAN RES METHODS, V14, P208, DOI 10.1177/1094428110375002
   Scacchi W., 2002, IEE Proceedings-Software, V149, P24, DOI 10.1049/ip-sen:20020202
   Schilling A., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P3446, DOI 10.1109/HICSS.2012.644
   Schmidt FL, 1998, PSYCHOL BULL, V124, P262, DOI 10.1037/0033-2909.124.2.262
   Steinmacher I., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P63, DOI 10.1109/RSSE.2012.6233413
   Steinmacher I., 2015, 18 ACM C COMP SUPP C
   Steinmacher I, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P51, DOI 10.1109/SBES.2014.9
   Steinmacher I, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P25, DOI 10.1109/CHASE.2013.6614728
   Suh B., 2009, P 5 INT S WIK OP COL, P8
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   Wang JG, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P76
   Weiss M, 2006, INT FED INFO PROC, V203, P21
   Xu B, 2013, 2013 THIRD INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEM DESIGN AND ENGINEERING APPLICATIONS (ISDEA), P934, DOI 10.1109/ISDEA.2012.223
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
   Zhou MH, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P271, DOI 10.1145/1985793.1985831
NR 49
TC 113
Z9 118
U1 1
U2 39
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2015
VL 59
BP 67
EP 85
DI 10.1016/j.infsof.2014.11.001
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA CB1ZT
UT WOS:000349427200005
DA 2024-07-18
ER

PT J
AU Cornu, B
   Seinturier, L
   Monperrus, M
AF Cornu, Benoit
   Seinturier, Lionel
   Monperrus, Martin
TI Exception handling analysis and transformation using fault injection:
   Study of resilience against unanticipated exceptions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Dynamic verification; Contract; Exception handling; Fault injection
ID JAVA; SYSTEM
AB Context: In software, there are the error cases that are anticipated at specification and design time, those encountered at development and testing time, and those that were never anticipated before happening in production. Is it possible to learn from the anticipated errors during design to analyze and improve the resilience against the unanticipated ones in production?
   Objective: In this paper, we aim at analyzing and improving how software handles unanticipated exceptions. The first objective is to set up contracts about exception handling and a way to assess them automatically. The second one is to improve the resilience capabilities of software by transforming the source code.
   Method: We devise an algorithm, called short-circuit testing, which injects exceptions during test suite execution so as to simulate unanticipated errors. It is a kind of fault-injection techniques dedicated to exception-handling. This algorithm collects data that is used for verifying two formal contracts that capture two resilience properties w.r.t exceptions: the source-independence and pure-resilience contracts. Then we propose a code modification technique, called "catch-stretching" which allows error-recovery code (of the form of catch blocks) to be more resilient.
   Results: Our evaluation is performed on 9 open-source software applications and consists in analyzing 241 catch blocks executed during test suite execution. Our results show that 101/214 of them (47%) expose resilience properties as defined by our exception contracts and that 84/214 of them (39%) can be transformed to be more resilient.
   Conclusion: Our work shows that it is possible to reason on software resilience by injecting exceptions during test suite execution. The collected information allows us to apply one source code transformation that improves the resilience against unanticipated exceptions. This works best if the test suite exercises the exceptional programming language constructs in many different scenarios. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Cornu, Benoit; Seinturier, Lionel; Monperrus, Martin] Univ Lille & Inria, LIFL, F-59655 Villeneuve Dascq, France.
C3 Universite de Lille
RP Cornu, B (corresponding author), Univ Lille & Inria, LIFL, Campus Sci, F-59655 Villeneuve Dascq, France.
EM benoit.cornu@inria.fr; lionel.seinturier@univ-lille1.fr;
   martin.monperrus@univ-lille1.fr
RI Seinturier, Lionel/ABG-2829-2020; Verdonschot, John/F-9196-2018;
   Monperrus, Martin/I-3640-2012
OI Seinturier, Lionel/0000-0003-0006-6088; Monperrus,
   Martin/0000-0003-3505-3383
CR [Anonymous], 2003, SOFTWARE TESTING TEC
   [Anonymous], P INT S FAULT TOL CO
   [Anonymous], 2011, INFO0824 CNSC FUK TA
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   BARTON JH, 1990, IEEE T COMPUT, V39, P575, DOI 10.1109/12.54853
   Bieman JM, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P166, DOI 10.1109/ISSRE.1996.558776
   Cabral B, 2007, LECT NOTES COMPUT SC, V4609, P151
   Candea G, 2003, WIAPP 2003: THIRD IEEE WORKSHOP ON INTERNET APPLICATIONS, PROCEEDINGS, P132, DOI 10.1109/WIAPP.2003.1210298
   FU C, 2003, P INT C DEP SYST NET
   Fu C., 2007, P 29 INT C SOFTW ENG
   Ghosh S, 2008, J SYST SOFTWARE, V81, P2034, DOI 10.1016/j.jss.2008.02.047
   GOODENOUGH JB, 1975, COMMUN ACM, V18, P683, DOI 10.1145/361227.361230
   Gosling J., 2005, Java Language Specification, Vthird
   Horning J.J., 1974, PROGRAM STRUCTURE ER
   KAO WL, 1993, IEEE T SOFTWARE ENG, V19, P1105, DOI 10.1109/32.256857
   Laprie J.-C., 2008, P INT C DEP SYST NET
   Mercadal J., 2010, P C OBJ OR PROGR SYS
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Ohe H, 2005, LECT NOTES COMPUT SC, V3475, P71
   ROVNER P, 1986, IEEE SOFTWARE, V3, P46, DOI 10.1109/MS.1986.229476
   Savitch W., 2012, JAVA INTRO PROBLEM S
   Sinha S, 2004, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE.2004.1317456
   Sinha S, 2000, IEEE T SOFTWARE ENG, V26, P849, DOI 10.1109/32.877846
   STAATS M, 2011, P INT C SOFTW ENG IC, P391, DOI DOI 10.1145/1985793.1985847
   Trivedi Kishor S., 2009, Proceedings of the 2009 IEEE/ACM International Conference on Computer-Aided Design (ICCAD 2009), P74, DOI 10.1145/1687399.1687415
   Zhang PY, 2012, PROC INT CONF SOFTW, P595, DOI 10.1109/ICSE.2012.6227157
NR 26
TC 12
Z9 13
U1 0
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 66
EP 76
DI 10.1016/j.infsof.2014.08.004
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Koch, S
   Kerschbaum, M
AF Koch, Stefan
   Kerschbaum, Markus
TI Joining a smartphone ecosystem: Application developers' motivations and
   decision criteria
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Smartphone operating systems; Application markets; Open innovation; User
   innovation; Motivation; Ecosystem management
ID OPEN SOURCE SOFTWARE; OPEN INNOVATION; USER INNOVATION; LEAD USERS;
   INFORMATION; MARKETPLACES; STRATEGIES; PRODUCTS; TOOLKITS
AB Context: The ecosystems surrounding current smartphones operating systems, especially the application markets, provide significant value for customers and therefore possibilities for provider differentiation. Why do independent application developers and innovators join these ecosystems, and which factors influence their choice between different platform options?
   Objective: This paper evaluates why innovators publish applications for smartphone operating systems, and which factors influence their choice between the two most common platforms, Android and Apple iOS, and leading them to join this respective ecosystem.
   Method: A quantitative questionnaire containing questions related to demographics, motivational factors, factors impacting choice of platform and application publishing history. 113 Application developers from all over the world responded, relatively evenly split between the two operating systems.
   Results: The main motivations are the experience of fun and intellectual stimulation during the process itself and learning of new skills or know-how. Financial gain, on the other hand, was found to be of less importance. There are also significant differences between the developers according to their preferred platform, e.g. iOS developers are more often motivated by financial gain. In choosing which ecosystem to join, network size, openness and entry barriers play major roles, and according to these criteria the two ecosystems are perceived to be significantly different. In addition, the toolkit quality is one of the most important factors for developers, but not a point of differentiation between the two ecosystems.
   Conclusion: This paper complements prior research with the viewpoint of the developers themselves, focusing on how they perceive both technical and economic, as well as governance related aspects. In addition, most research so far has focused on one aspect only, mostly application markets, while this study assess the perception of the whole ecosystem, including end user device, markets and OS. It is concluded that the motivations and perceptions of developers comprise a major component in the creation and management of a large and diverse ecosystem, and that there exists a significant group of user innovators, who are not motivated by financial gain. There are several other aspects besides network size that drive the choice of platform. In addition, developers perceive hardware, software, marketplaces and other aspects as one single construct. Any platform owner therefore has to carefully consider and manage their expectations and perceptions. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Koch, Stefan] Bogazici Univ, Dept Management, TR-34342 Istanbul, Turkey.
   [Kerschbaum, Markus] WU Vienna Univ Econ & Business, Inst Informat Business, Vienna, Austria.
C3 Bogazici University; Vienna University of Economics & Business
RP Koch, S (corresponding author), Bogazici Univ, Dept Management, TR-34342 Istanbul, Turkey.
EM stefan.koch@boun.edu.tr; markus.kerschbaum@gmail.com
RI Koch, Stefan/B-8548-2017
OI Koch, Stefan/0000-0001-5959-3208
CR Amberg M., 2010, MULT WIRTSCH 2010, V2010, P541
   [Anonymous], 1999, CATHEDRAL BAZAAR
   [Anonymous], 2005, Perspectives on free and open source software
   [Anonymous], 2013, RES DESIGN QUALITATI
   Anvaari M., 2010, P 4 EUR C SOFTW ARCH
   Baldwin C, 2006, RES POLICY, V35, P1291, DOI 10.1016/j.respol.2006.04.012
   Boudreau K, 2010, MANAGE SCI, V56, P1849, DOI 10.1287/mnsc.1100.1215
   Chesbrough H., 2003, OPEN INNOVATION, DOI [10.1016/j.jengtecman.2004.05.003, DOI 10.1016/J.JENGTECMAN.2004.05.003]
   Choi JP, 2010, J IND ECON, V58, P607, DOI 10.1111/j.1467-6451.2010.00426.x
   Coase RH, 1937, ECONOMICA-NEW SER, V4, P386, DOI 10.1111/j.1468-0335.1937.tb00002.x
   Eaton B., 2011, LSE WORKING PAPER SE, V183
   Eisenmann T, 2006, HARVARD BUS REV, V84, P92
   Flurry, 2011, APP DEV BET IOS ANDR
   Franke N, 2004, J PROD INNOVAT MANAG, V21, P401, DOI 10.1111/j.0737-6782.2004.00094.x
   Franke N, 2003, RES POLICY, V32, P1199, DOI 10.1016/S0048-7333(03)00049-0
   Franke N, 2003, INT J TECHNOL MANAGE, V26, P578, DOI 10.1504/IJTM.2003.003424
   Franke N, 2003, RES POLICY, V32, P157, DOI 10.1016/S0048-7333(02)00006-9
   Grotnes E, 2009, INFORM TECHNOL PEOPL, V22, P367, DOI 10.1108/09593840911002469
   Harhoff D, 2003, RES POLICY, V32, P1753, DOI 10.1016/S0048-7333(03)00061-1
   Henkel J, 2006, RES POLICY, V35, P953, DOI 10.1016/j.respol.2006.04.010
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   Holzer A, 2011, TELEMAT INFORM, V28, P22, DOI 10.1016/j.tele.2010.05.006
   Hosmer W., 2000, Applied Logistic Regression, VSecond
   Idu A, 2011, P INT C MAN EM DIG E
   Jain A, 2011, IEEE WIREL COMMUN, V18, P4, DOI 10.1109/MWC.2011.5999758
   Jansen S., 2009, ICSE 31 INT C SOFTW
   Jansen S., 2012, P 4 INT WORK SOFTW E
   Jansen S, 2013, LECT NOTES BUS INF P, V150, P195
   Jansen S, 2012, J SYST SOFTWARE, V85, P1495, DOI 10.1016/j.jss.2011.12.007
   JENSEN MC, 1976, J FINANC ECON, V3, P305, DOI 10.1016/0304-405X(76)90026-X
   Lakhani K.R., 2005, Perspectives on free and open source software, P3, DOI DOI 10.2139/SSRN.443040
   Lakhani KR, 2003, RES POLICY, V32, P923, DOI 10.1016/S0048-7333(02)00095-1
   Lin F., 2009, P 2009 INT S INF ENG, P622
   Lüthje C, 2005, RES POLICY, V34, P951, DOI 10.1016/j.respol.2005.05.005
   Mansfield-Devine Steve, 2012, Network Security, V2012, P5, DOI 10.1016/S1353-4858(12)70092-2
   Morrison PD, 2000, MANAGE SCI, V46, P1513, DOI 10.1287/mnsc.46.12.1513.12076
   Müller Roland M, 2011, J. theor. appl. electron. commer. res., V6, P63, DOI 10.4067/S0718-18762011000200007
   Ohrt J, 2012, COMPUTER, V45, P72, DOI 10.1109/MC.2012.121
   Parker G., 2010, P 11 ACM C EL COMM
   Prügl R, 2006, R&D MANAGE, V36, P237, DOI 10.1111/j.1467-9310.2006.00433.x
   Remneland-Wikhamn B, 2011, INT J INNOV MANAG, V15, P205, DOI 10.1142/S1363919611003131
   Rochet JC, 2003, J EUR ECON ASSOC, V1, DOI 10.1162/154247603322493212
   Schlagwein D., 2010, P JAIS THEOR DEV WOR, V10
   Schreier M, 2007, MARKET LETT, V18, P15, DOI 10.1007/s11002-006-9009-3
   Shah SK, 2006, MANAGE SCI, V52, P1000, DOI 10.1287/mnsc.1060.0553
   Shapiro C., 1998, INFORM RULES
   TIOBESoftware, 2013, TIOBE PROGR COMM IND
   URBAN GL, 1988, MANAGE SCI, V34, P569, DOI 10.1287/mnsc.34.5.569
   VisionMobile.com, 2011, DEV EC
   von Hippel E, 2003, ORGAN SCI, V14, P209, DOI 10.1287/orsc.14.2.209.14992
   von Hippel E, 2002, MANAGE SCI, V48, P821, DOI 10.1287/mnsc.48.7.821.2817
   Von Hippel Eric, 2005, Democratizing Innovation
   von Krogh G, 2012, MIS QUART, V36, P649
   VONHIPPEL E, 1986, MANAGE SCI, V32, P791, DOI 10.1287/mnsc.32.7.791
   VONHIPPEL E, 1994, MANAGE SCI, V40, P429, DOI 10.1287/mnsc.40.4.429
   Wnuk K, 2013, LECT NOTES BUS INF P, V150, P48
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 57
TC 39
Z9 44
U1 3
U2 80
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2014
VL 56
IS 11
SI SI
BP 1423
EP 1435
DI 10.1016/j.infsof.2014.03.010
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AO4ZD
UT WOS:000341349000002
DA 2024-07-18
ER

PT J
AU Brunelière, H
   Cabot, J
   Dupé, G
   Madiot, F
AF Bruneliere, Hugo
   Cabot, Jordi
   Dupe, Gregoire
   Madiot, Frederic
TI MoDisco: A model driven reverse engineering framework
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Reverse engineering; Legacy systems; Model Driven Engineering (MDE);
   Framework; Model Driven Reverse Engineering (MDRE)
ID SOFTWARE; TOOL; RECOVERY
AB Context: Most companies, independently of their size and activity type, are facing the problem of managing, maintaining and/or replacing (part of) their existing software systems. These legacy systems are often large applications playing a critical role in the company's information system and with a non-negligible impact on its daily operations. Improving their comprehension (e.g., architecture, features, enforced rules, handled data) is a key point when dealing with their evolution/modernization.
   Objective: The process of obtaining useful higher-level representations of (legacy) systems is called reverse engineering (RE), and remains a complex goal to achieve. So-called Model Driven Reverse Engineering (MDRE) has been proposed to enhance more traditional RE processes. However, generic and extensible MDRE solutions potentially addressing several kinds of scenarios relying on different legacy technologies are still missing or incomplete. This paper proposes to make a step in this direction.
   Method: MDRE is the application of Model Driven Engineering (MDE) principles and techniques to RE in order to generate relevant model-based views on legacy systems, thus facilitating their understanding and manipulation. In this context, MDRE is practically used in order to (1) discover initial models from the legacy artifacts composing a given system and (2) understand (process) these models to generate relevant views (i.e., derived models) on this system.
   Results: Capitalizing on the different MDRE practices and our previous experience (e.g., in real modernization projects), this paper introduces and details the MoDisco open source MDRE framework. It also presents the underlying MDRE global methodology and architecture accompanying this proposed tooling.
   Conclusion: MoDisco is intended to make easier the design and building of model-based solutions dedicated to legacy systems RE. As an empirical evidence of its relevance and usability, we report on its successful application in real industrial projects and on the concrete experience we gained from that. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Bruneliere, Hugo; Cabot, Jordi] Ecole Mines Nantes, AtlanMod Inria & LINA, F-44307 Nantes, France.
   [Dupe, Gregoire] Mia Software, F-44324 Nantes, France.
   [Madiot, Frederic] Obeo, Espace Performance La Fleuriaye, F-44481 Carquefou, France.
C3 IMT - Institut Mines-Telecom; IMT Atlantique
RP Brunelière, H (corresponding author), Ecole Mines Nantes, AtlanMod Inria & LINA, 4 Rue Alfred Kastler, F-44307 Nantes, France.
EM hugo.bruneliere@inria.fr; jordi.cabot@inria.fr; gdupe@mia-software.com;
   frederic.madiot@obeo.fr
RI Cabot, Jordi/P-7723-2015
OI Cabot, Jordi/0000-0003-2418-2489; Bruneliere, Hugo/0000-0002-5987-2175
FU ARTIST FP7-ICT European project [68]
FX The MoDisco project has been initially created within the context of the
   MODELPLEX FP6-IST European project, current research and developments
   are partially supported by the ARTIST FP7-ICT European project [68]. The
   information on the Mo Disco use cases, benchmarks and project's general
   statistics has been collected with the precious help of Fabien Giquel
   and Nicolas Bros, two MoDisco committers from Mia-Software
CR Alnusair A., 2009, P 2 INT WORKSH TRANS, V531
   Barbier F., 2009, P TOOLS CONS TRACK 5, P36
   Barbier G, 2010, INFORMATION SYSTEMS TRANSFORMATION: ARCHITECTURE-DRIVEN MODERNIZATION CASE STUDIES, P365, DOI 10.1016/B978-0-12-374913-0.00014-7
   Baresi L, 2002, LECT NOTES COMPUT SC, V2306, P189
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Briand LC, 2006, IEEE T SOFTWARE ENG, V32, P642, DOI 10.1109/TSE.2006.96
   Bruneliered H., 2010, P ASE10 IEEE ACM INT, P173
   CANFORA G, 1994, J SOFTW MAINT-RES PR, V6, P53, DOI 10.1002/smr.4360060202
   Canfora G, 2011, COMMUN ACM, V54, P142, DOI 10.1145/1924421.1924451
   Izquierdo JLC, 2010, IEEE SOFTWARE, V27, P37, DOI 10.1109/MS.2010.61
   Chapman H., 1992, SOFTWARE REUSE REVER
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Clavreul M., 2010, ITN C SOFTW ENG ICSE, P69
   Deissenboeck F., 2010, INT C SOFTW ENG ICSE, P247
   Ebert J., 2002, INT C GRAPH TRANSF G, P47
   Eilam E., 2005, Reversing: Secrets of Reverse Engineering
   Favre Jean-Marie., 2005, LANGUAGE ENG MODEL D
   Favre L, 2010, MODEL DRIVEN ARCHITECTURE FOR REVERSE ENGINEERING TECHNOLOGIES: STRATEGIC DIRECTIONS AND SYSTEM EVOLUTION, P1, DOI 10.4018/978-1-61520-649-0
   Ferenc R, 2002, PROC IEEE INT CONF S, P172, DOI 10.1109/ICSM.2002.1167764
   Fleurey F, 2007, LECT NOTES COMPUT SC, V4735, P482
   Fradet P., 1999, SOFTW ENG ESEC FSE99
   Girba T, 2010, MOOSE BOOK
   Heidenreich F., 2009, INT C SOFTW LANG ENG, P374
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kazman R., 1998, WORK C REV ENG WCRE
   KENT S, 2002, LNCS, V2335, P286, DOI DOI 10.1007/3-540-47884-1
   Lanza M., 2004, INT C AUT SOFTW ENG
   LEDECZI A, 2001, INT WORKSH INT SIGN
   Nelson M.L., 551 ODU CS, P2
   OLSSON T, 2002, INT C SOFTW ENG APPL
   Premerlani W. J., 1993, Proceedings of Working Conference on Reverse Engineering (Cat. No.93TH0534-8), P151, DOI 10.1109/WCRE.1993.287769
   Rekoff Jr M., 1985, IEEE T SYST MAN CYB, V15, P13
   Roy B, 2008, LECT NOTES COMPUT SC, V5292, P210, DOI 10.1007/978-3-540-88030-1_16
   Rugaber S, 2004, IEEE SOFTWARE, V21, P45, DOI 10.1109/MS.2004.23
   Sanchez Ramon O., 2010, P IEEE ACM INT C AUT, P147, DOI [10.1145/1858996.1859023, DOI 10.1145/1858996.1859023]
   Smolander K., 1991, INT C ADV INF SYST E, P168
   Sneed H.M., 2010, INT C SOFTW MAINT IC
   Sneed H.M., 1992, INT C SOFTW MAINT IC
   Sun WJ, 2009, 2009 WRI WORLD CONGRESS ON SOFTWARE ENGINEERING, VOL 3, PROCEEDINGS, P101, DOI 10.1109/WCSE.2009.403
   Tolvanen J.-P., 2003, COMPANION 18 ANN ACM, P92, DOI DOI 10.1145/949344.949365
   van Deursen A., 2007, 1 WORKSH MOD DRIV SO
   Wettel R., 2011, INT C SOFTW ENG ICSE
NR 42
TC 131
Z9 141
U1 0
U2 17
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2014
VL 56
IS 8
BP 1012
EP 1032
DI 10.1016/j.infsof.2014.04.007
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AI9OL
UT WOS:000337261800011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chouseinoglou, O
   Iren, D
   Karagöz, NA
   Bilgen, S
AF Chouseinoglou, Oumout
   Iren, Deniz
   Karagoz, N. Alpay
   Bilgen, Semih
TI AiOLoS: A model for assessing organizational learning in software
   development organizations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Organizational learning; Knowledge management; Learning organizations;
   Learning software organizations; AiOLoS
ID KNOWLEDGE MANAGEMENT; LITERATURES; PERFORMANCE; IMPROVEMENT
AB Context: In an industry in which technological developments are rapid, in order to keep up with the continuously increasing competition and to obtain competitive advantage, the software development organizations (SDOs) need to obtain the correct knowledge, use it efficiently and pass it to future projects evolving it accordingly.
   Objective: The main aim of this paper is to propose a novel model, AiOLoS, for assessing the level and characteristics of organizational learning (OL) in SDOs.
   Method: The primary contributions of this two-legged AiOLoS model are the identification of the major process areas and the core processes that a learning software organization (LSO) follows during its OL process and to provide the necessary measures and the corresponding definitions/interpretations for the assessment of the learning characteristics of the SDO. The research is supported with a multiple case-study work to identify the mapping of the core processes and the applicability of the AiOLoS model to SDOs, its utilization as a tool for assessing OL and providing a basis for software process improvement (SPI).
   Results: The case studies have shown that not only the AiOLoS measures are applicable to SDOs but also that they measure in great extent the actual OL that is realized in the organization and that the major process areas and core processes are actually related to the OL process of SDOs.
   Conclusion: AiOLoS has been designed to provide a starting point for the enhancement of OL capabilities of SDOs, which in turn should provide a basis to conduct SPI activities. Therefore, it is also important to investigate a possible binding of AiOLoS to SPICE and the inclusion of a maturity dimension to AiOLoS. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Chouseinoglou, Oumout] Baskent Univ, Stat & Comp Sci Dept, TR-06810 Ankara, Turkey.
   [Iren, Deniz] Middle E Tech Univ, Ctr Comp, TR-06531 Ankara, Turkey.
   [Karagoz, N. Alpay] Middle E Tech Univ, Software Management Program, Dept Informat Syst, TR-06531 Ankara, Turkey.
   [Bilgen, Semih] Middle E Tech Univ, Dept Elect & Elect Engn, TR-06531 Ankara, Turkey.
C3 Baskent University; Middle East Technical University; Middle East
   Technical University; Middle East Technical University
RP Chouseinoglou, O (corresponding author), Baskent Univ, Stat & Comp Sci Dept, TR-06810 Ankara, Turkey.
EM umuth@baskent.edu.tr; diren@metu.edu.tr; alpay@acm.org;
   semih-bilgen@metu.edu.tr
RI Chouseinoglou, Oumout/M-3712-2018
OI Chouseinoglou, Oumout/0000-0002-8513-351X; Iren,
   Deniz/0000-0002-0727-3445; KARAGOZ, NURI ALPAY/0000-0003-0705-3765
CR Agresti WW, 2000, ADV COMPUT, V53, P171
   Ahmed P., 1999, J WORKPLACE LEARNING, V11, P304
   [Anonymous], 1995, The Capability Maturity Model: Guidelines for Improving the Software Process
   [Anonymous], 1996, GOAL DRIVEN SOFTWARE
   [Anonymous], 2017, 122072017 ISOIECIEEE
   [Anonymous], 2010, KNOWLEDGE MANAGEMENT
   [Anonymous], IMPROVING SOFTWARE O
   [Anonymous], 2004, 1550412004 ISOIEC TR
   ARGYRIS C, 1977, HARVARD BUS REV, V55, P115
   Argyris C, 2003, ORGAN STUD, V24, P1178, DOI 10.1177/01708406030247009
   Armistead C., 1999, J KNOWL MANAG, V3, P143, DOI [10.1108/13673279910275602, DOI 10.1108/13673279910275602]
   Aurum A, 2008, INFORM SOFTWARE TECH, V50, P511, DOI 10.1016/j.infsof.2007.05.005
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Berander P., 2005, SOFTWARE QUALITY ATT
   Bjornson FO, 2008, INFORM SOFTWARE TECH, V50, P1055, DOI 10.1016/j.infsof.2008.03.006
   Boehm B., 2007, CrossTalk, V19, P4
   Boehm B., 2011, KOOLMANOJWONG SOFTWA
   Bose R, 2004, IND MANAGE DATA SYST, V104, P457, DOI 10.1108/02635570410543771
   Carneiro A., 2000, J KNOWL MANAG, V4, P87, DOI DOI 10.1108/13673270010372242
   Carroll JS, 1998, J MANAGE STUD, V35, P699, DOI 10.1111/1467-6486.00116
   Chatzipetrou P., 2012, 38 EUR C SOFTW ENG A
   Chen M.-Y., J INFORM SCI, P31
   Chouseinoglou Oumout, 2012, Human-Centered Software Engineering. Proceedings of the 4th International Conference, HCSE 2012, P251, DOI 10.1007/978-3-642-34347-6_15
   Chouseinoglou O., 2013, 11 INT C SO IN PRESS
   Chouseinoglou O., 2012, TECHNICAL REPORT
   Chrissis M., 2006, CMMI: Guidelines for Process Integration and Product Improvement
   Conner M.L., 2004, Leading organizational learning, P91
   Cook SDN, 1999, ORGAN SCI, V10, P381, DOI 10.1287/orsc.10.4.381
   Darroch J., 2003, Journal of Knowledge Management, V7, P41, DOI 10.1108/13673270310505377
   Davison R, 2004, INFORM SYST J, V14, P65, DOI 10.1111/j.1365-2575.2004.00162.x
   Demarest M, 1997, LONG RANGE PLANN, V30, P374, DOI 10.1016/S0024-6301(97)90250-8
   Differding C. M., 2001, ADV LEARN ORG 3 INT
   Dingsoyr T, 2002, INT J SOFTW ENG KNOW, V12, P391, DOI 10.1142/S0218194002000962
   Dixon N.M., 1992, Human Resource Development, P29, DOI DOI 10.1002/HRDQ.3920030105
   DODGSON M, 1993, ORGAN STUD, V14, P375, DOI 10.1177/017084069301400303
   Easterby-Smith M., 2005, HDB ORG LEARNING KNO, P1
   Ehms K., 2002, Holistic development of knowledge management with KMMM
   FIOL CM, 1985, ACAD MANAGE REV, V10, P803, DOI 10.2307/258048
   Gaffney J.E., 1995, SOFTWARE MEASUREMENT
   García J, 2011, INFORM SOFTWARE TECH, V53, P834, DOI 10.1016/j.infsof.2011.03.002
   García-Morales VJ, 2007, TECHNOVATION, V27, P547, DOI 10.1016/j.technovation.2007.02.013
   GARVIN DA, 1993, HARVARD BUS REV, V71, P78
   Garvin DA, 2008, HARVARD BUS REV, V86, P109
   Glass RL, 2004, COMMUN ACM, V47, P89, DOI 10.1145/990680.990686
   Gold A.H., 2001, J MANAGE INFORM SYST, V1, P18
   Gremba J., 1997, 3 SOFTW ENG I
   Haas MR, 2007, STRATEG MANAGE J, V28, P1133, DOI 10.1002/smj.631
   Hitt W.D., 1995, LEADERSHIP ORG DEV J, V16, P17, DOI [DOI 10.1108/01437739510097996, 10.1108/01437739510097996]
   Huber GP, 1991, ORGAN SCI, V2, P88, DOI 10.1287/orsc.2.1.88
   Jamali D, 2009, LEARN ORGAN, V16, P103, DOI 10.1108/09696470910939198
   Jerez-Gómez P, 2005, J BUS RES, V58, P715, DOI 10.1016/j.jbusres.2003.11.002
   Kim DK, 1993, SLOANE MANAGEMENT RE, V35, P35
   Koolmanojwong S., 2009, P 22 C SOFTW ENG ED
   Lähteenmäki S, 2001, BRIT J MANAGE, V12, P113, DOI 10.1111/1467-8551.00189
   Lee KC, 2005, INFORM MANAGE-AMSTER, V42, P469, DOI 10.1016/j.im.2004.02.003
   Leitch C., 1996, J EUR IND TRAIN, V20, P31
   Liebowitz J, 2008, ADV MANAG INFORM SYS, V12, P163
   Maier R., 2004, KNOWLEDGE MANAGEMENT
   Marsick V.J., 2003, ADV DEV HUM RESOUR, V5, P132, DOI DOI 10.1177/1523422303005002002
   McAdam R., 1999, Knowledge and Process Management, V6, P101
   Moilanen R., 2001, LEARN ORGAN, V8, P6, DOI DOI 10.1108/09696470110366507
   NEVIS EC, 1995, SLOAN MANAGE REV, V36, P73
   NONAKA I, 1994, ORGAN SCI, V5, P14, DOI 10.1287/orsc.5.1.14
   NONAKA I, 1991, HARVARD BUS REV, V69, P96
   O'Hara K., 2001, P IJCAI WORKSH E BUS
   Oliveira M., 2006, IAMOT 2006 15 INT C
   Olsson T., 2001, P 7 INT SOFTW METR S
   Örtenblad A, 2002, MANAGE LEARN, V33, P213, DOI 10.1177/1350507602332004
   Probst G.J., 1997, PRISM, P17
   Redding J, 1997, TRAINING DEV, V51, P61
   Romme G., 1997, EUR MANAG J, V15, P68, DOI DOI 10.1016/S0263-2373(96)00075-8
   Ruhe G., 2001, HDB SOFTWARE ENG KNO, V1, P663
   Ruhe G., 2003, ADV LEARN SOFTW ORG
   Ruhe G., 1999, LEARN SOFTW ORG METH
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Ryan S, 2009, J SYST SOFTWARE, V82, P229, DOI 10.1016/j.jss.2008.05.037
   Seely-Brown J., 1992, LEARN ORG WORKSH W B
   Senge P. M., 1990, 5 DISCIPLINE ART PRA
   Sharma N., 2011, RES CELL INT J ENG S, V4, P324
   Sinkula JM, 1997, J ACAD MARKET SCI, V25, P305, DOI 10.1177/0092070397254003
   Spector JM, 2006, EVAL PROGRAM PLANN, V29, P63, DOI 10.1016/j.evalprogplan.2005.08.001
   Thomas E.L., 1982, Improving reading in every class
   Tiwana A., 2002, The knowledge management toolkit, V2nd
   Trendowicz A., 2003, QAOOSE 03 WORKSH
   Tsoukas H, 2001, J MANAGE STUD, V38, P973, DOI 10.1111/1467-6486.00268
   USC-CSSE, 2008, INSTR COMM SPIR MOD
   van Solingen R, 2000, INFORM SOFTWARE TECH, V42, P965, DOI 10.1016/S0950-5849(00)00148-8
   Van Solingen Rini, 1999, The Goal/ Question/ Metric Method: a practical guide for quality improvement of software development
   Visser M, 2003, J HIST BEHAV SCI, V39, P269, DOI 10.1002/jhbs.10112
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yang B., 2004, HUM RESOUR DEV Q, V15, P31, DOI DOI 10.1002/HRDQ.1086
NR 93
TC 14
Z9 15
U1 1
U2 28
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2013
VL 55
IS 11
BP 1904
EP 1924
DI 10.1016/j.infsof.2013.05.004
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 231BH
UT WOS:000325387500004
DA 2024-07-18
ER

PT J
AU Fernández-Sáez, AM
   Genero, M
   Chaudron, MRV
AF Fernandez-Saez, Ana M.
   Genero, Marcela
   Chaudron, Michel R. V.
TI Empirical studies concerning the maintenance of UML diagrams and their
   use in the maintenance of code: A systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE UML; Empirical studies; Software maintenance; Systematic mapping study;
   Systematic literature review
ID MODEL-DRIVEN DEVELOPMENT; SOFTWARE; MAINTAINABILITY; GUIDELINES; QUALITY
AB Context: The Unified Modelling Language (UML) has, after ten years, become established as the de facto standard for the modelling of object-oriented software systems. It is therefore relevant to investigate whether its use is important as regards the costs involved in its implantation in industry being worthwhile.
   Method: We have carried out a systematic mapping study to collect the empirical studies published in order to discover "What is the current existing empirical evidence with regard to the use of UML diagrams in source code maintenance and the maintenance of the UML diagrams themselves?
   Results: We found 38 papers, which contained 63 experiments and 3 case studies.
   Conclusion: Although there is common belief that the use of UML is beneficial for source code maintenance, since the quality of the modifications is greater when UML diagrams are available, only 3 papers concerning this issue have been published. Most research (60 empirical studies) concerns the maintainability and comprehensibility of the UML diagrams themselves which form part of the system's documentation, since it is assumed that they may influence source code maintainability, although this has not been empirically validated. Moreover, the generalizability of the majority of the experiments is questionable given the material, tasks and subjects used. There is thus a need for more experiments and case studies to be performed in industrial contexts, i.e., with real systems and using maintenance tasks conducted by practitioners under real conditions that truly show the utility of UML diagrams in maintaining code, and that the fact that a diagram is more comprehensible or modifiable influences the maintainability of the code itself. This utility should also be studied from the viewpoint of cost and productivity, and the consistent and simultaneous maintenance of diagrams and code must also be considered in future empirical studies. (C) 2013 Published by Elsevier B.V.
C1 [Fernandez-Saez, Ana M.] Univ Castilla La Mancha, Alarcos Qual Ctr, E-13071 Ciudad Real, Spain.
   [Genero, Marcela] Univ Castilla La Mancha, Dept Technol & Informat Syst, ALARCOS Res Grp, E-13071 Ciudad Real, Spain.
   [Fernandez-Saez, Ana M.; Chaudron, Michel R. V.] Leiden Univ, Leiden Inst Adv Comp Sci, NL-2300 RA Leiden, Netherlands.
   [Chaudron, Michel R. V.] Joint Comp Sci & Engn Dept Chalmers Univ Technol, SE-41296 Gothenburg, Sweden.
C3 Universidad de Castilla-La Mancha; Universidad de Castilla-La Mancha;
   Leiden University - Excl LUMC; Leiden University
RP Fernández-Sáez, AM (corresponding author), Univ Castilla La Mancha, Alarcos Qual Ctr, E-13071 Ciudad Real, Spain.
EM anafernandez@alarcosqualitycenter.com; Marcela.Genero@uclm.es;
   chaudron@liacs.nl
RI GENERO, MARCELA/L-6480-2014; Fernández-Sáez, Ana Maria/AAS-8299-2021
OI GENERO, MARCELA/0000-0002-6868-7465; Fernández-Sáez, Ana
   Maria/0000-0001-5768-1650; Chaudron, Michel/0000-0001-7517-6666
FU MEDU-SAS (CDTI-MICINN); MEDU-SAS (FEDER) [IDI-20090557]; ORIGIN
   (CDTI-MICINN); ORIGIN (FEDER) [IDI-2010043(1-5)]; PEGASO/MAGO (MICINN);
   PEGASO/MAGO (FEDER) [TIN2009-13718-C02-01]; GEODAS-BC project
   (Ministerio de Economia y Competitividad); GEODAS-BC project
   (FondoEuropeo de Desarrollo Regional FEDER) [TIN2012-37493-C03-01]
FX This research has been funded by the following projects: MEDU-SAS
   (CDTI-MICINN and FEDER IDI-20090557), ORIGIN (CDTI-MICINN and FEDER
   IDI-2010043(1-5)), PEGASO/MAGO (MICINN and FEDER, TIN2009-13718-C02-01),
   and GEODAS-BC project (Ministerio de Economia y Competitividad and
   FondoEuropeo de Desarrollo Regional FEDER, TIN2012-37493-C03-01).
CR [Anonymous], P 12 INT C MOD DRIV
   [Anonymous], 25000 ISOIEC
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], UN MOD LANG DOC ASS
   [Anonymous], UN MOD LANG DOC ASS
   [Anonymous], P 2 INT S EMP SOFTW
   [Anonymous], P 2 ACM IEEE INT S E
   [Anonymous], P 5 INT C SOFTW DAT
   [Anonymous], SOFTWARE PRACTICE EX
   [Anonymous], P 3 C SOFTW ENG RES
   [Anonymous], CRITICAL APPRAISAL S
   [Anonymous], 1994, CASE STUDY RES
   [Anonymous], FACULTY MATH NATURAL
   [Anonymous], 2010, 5 WORKSH COD CENTR M
   Arksey H., 2005, INT J SOC RES METHOD, V8, P19, DOI [10.1080/1364557032000119616, DOI 10.1080/1364557032000119616]
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   Budgen D, 2011, EMPIR SOFTW ENG, V16, P244, DOI 10.1007/s10664-010-9139-3
   Deligiannis I. S., 2002, Empirical Software Engineering, V7, P193, DOI 10.1023/A:1016392131540
   Dobing B, 2006, COMMUN ACM, V49, P109, DOI 10.1145/1125944.1125949
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   France R, 2007, LECT NOTES COMPUT SC, V4364, P311
   Genero M, 2007, EMPIR SOFTW ENG, V12, P517, DOI 10.1007/s10664-007-9038-4
   Genero M, 2011, J DATABASE MANAGE, V22, P46, DOI 10.4018/jdm.2011070103
   Glass R. L., 2002, FACTS FALLACIES SOFT
   Harrison R, 2000, J SYST SOFTWARE, V52, P173, DOI 10.1016/S0164-1212(99)00144-2
   IEEE, 1993, 12191993 IEEE
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2010, EMPIR SOFTW ENG, V15, P618, DOI 10.1007/s10664-010-9134-8
   Liu J, 2007, J SYST SOFTWARE, V80, P1879, DOI 10.1016/j.jss.2007.01.047
   Mohagheghi P, 2009, INFORM SOFTWARE TECH, V51, P1646, DOI 10.1016/j.infsof.2009.04.004
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Priestley M, 2000, IEEE PROFESSIONAL COMMUNICATION SOCIETY INTERNATIONAL PROFESSIONAL COMMUNICATION CONFERENCE AND ACM SPECIAL INTEREST GROUP ON DOCUMENTATION CONFERENCE, P221, DOI 10.1109/IPCC.2000.887279
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Thomas D, 2004, IEEE SOFTWARE, V21, P15, DOI 10.1109/MS.2004.1293067
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 40
TC 26
Z9 26
U1 0
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2013
VL 55
IS 7
BP 1119
EP 1142
DI 10.1016/j.infsof.2012.12.006
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 161UD
UT WOS:000320217900001
DA 2024-07-18
ER

PT J
AU Turhan, B
   Misirli, AT
   Bener, A
AF Turhan, Burak
   Misirli, Ayse Tosun
   Bener, Ayse
TI Empirical evaluation of the effects of mixed project data on learning
   defect predictors
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Joint Conference of 14th EUROMICRO Digital Systems Design Conference
   (DSD) / 37th EUROMICRO Conference on Software Engineering and Advanced
   Applications (SEAA)
CY AUG 30-SEP 02, 2011
CL Univ Oulu, Oulu, FINLAND
SP EUROMICRO, IEEE Comp Soc
HO Univ Oulu
DE Cross project; Within project; Mixed project; Defect prediction; Fault
   prediction; Product metrics
ID STATIC CODE ATTRIBUTES; SOFTWARE; MODELS
AB Context: Defect prediction research mostly focus on optimizing the performance of models that are constructed for isolated projects (i.e. within project (WP)) through retrospective analyses. On the other hand, recent studies try to utilize data across projects (i.e. cross project (CP)) for building defect prediction models for new projects. There are no cases where the combination of within and cross (i.e. mixed) project data are used together.
   Objective: Our goal is to investigate the merits of using mixed project data for binary defect prediction. Specifically, we want to check whether it is feasible, in terms of defect detection performance, to use data from other projects for the cases (i) when there is an existing within project history and (ii) when there are limited within project data.
   Method: We use data from 73 versions of 41 projects that are publicly available. We simulate the two above-mentioned cases, and compare the performances of naive Bayes classifiers by using within project data vs. mixed project data.
   Results: For the first case, we find that the performance of mixed project predictors significantly improves over full within project predictors (p-value < 0.001), however the effect size is small (Hedges' g = 0.25). For the second case, we found that mixed project predictors are comparable to full within project predictors, using only 10% of available within project data (p-value = 0.002, g = 0.17).
   Conclusion: We conclude that the extra effort associated with collecting data from other projects is not feasible in terms of practical performance improvement when there is already an established within project defect predictor using full project history. However, when there is limited project history, e.g. early phases of development, mixed project predictions are justifiable as they perform as good as full within project models. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Turhan, Burak; Misirli, Ayse Tosun] Univ Oulu, Dept Informat Proc Sci, Oulu 90014, Finland.
   [Bener, Ayse] Ryerson Univ, Ted Rogers Sch ITM, Toronto, ON M58 2K3, Canada.
C3 University of Oulu; Toronto Metropolitan University
RP Turhan, B (corresponding author), Univ Oulu, Dept Informat Proc Sci, Oulu 90014, Finland.
EM burak.turhan@oulu.fi; ayse.tosunmisirli@oulu.fi; ayse.bener@ryerson.ca
RI Basar, Ayse/ABF-9265-2020; Turhan, Burak/G-7400-2011; Tosun,
   Ayse/B-4794-2014
OI Basar, Ayse/0000-0003-4934-8326; Turhan, Burak/0000-0003-1511-2163;
   Tosun, Ayse/0000-0003-1859-7872
CR [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   Bowes D., 2012, Proceedings of the 8th International Conference on Predictive Models in Software Engineering, P109, DOI [10.1145/2365324.2365338, DOI 10.1145/2365324.2365338]
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   Hall T., 2011, IEEE T SOFTW ENG, V99
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Huang LG, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.127
   Jureczko M., 2010, PROCEEDINGS OF THE 6, P9
   Jureczko M., 2010, Model Methods Syst Dependability Oficyna Wydawnicza Politech Wroclawskiej, P69
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kläs M, 2010, EMPIR SOFTW ENG, V15, P423, DOI 10.1007/s10664-009-9112-1
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Lokan C, 2001, IEEE SOFTWARE, V18, P26, DOI 10.1109/52.951491
   Lumpe M, 2012, INT J SOFTW ENG KNOW, V22, P621, DOI 10.1142/S0218194012500179
   Martin R., 1994, WORKSHOP PRAGMATIC A
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mei-Huei Tang, 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P242, DOI 10.1109/METRIC.1999.809745
   Menzies T., 2012, THE PROMISE REPOSITO
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Nelson A, 2011, SOFTWARE PRACT EXPER, V41, P283, DOI 10.1002/spe.1004
   Tosun A, 2010, INFORM SOFTWARE TECH, V52, P1242, DOI 10.1016/j.infsof.2010.06.006
   Turhan B, 2011, EUROMICRO CONF PROC, P396, DOI 10.1109/SEAA.2011.59
   Turhan B, 2010, LECT NOTES COMPUT SC, V6156, P116, DOI 10.1007/978-3-642-13792-1_11
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Weyuker EJ, 2008, EMPIR SOFTW ENG, V13, P539, DOI 10.1007/s10664-008-9082-8
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wu XD, 2008, KNOWL INF SYST, V14, P1, DOI 10.1007/s10115-007-0114-2
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 37
TC 85
Z9 95
U1 0
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2013
VL 55
IS 6
BP 1101
EP 1118
DI 10.1016/j.infsof.2012.10.003
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 139LS
UT WOS:000318584800012
DA 2024-07-18
ER

PT J
AU De Lucia, A
   Di Penta, M
   Oliveto, R
   Panichella, A
   Panichella, S
AF De Lucia, Andrea
   Di Penta, Massimiliano
   Oliveto, Rocco
   Panichella, Annibale
   Panichella, Sebastiano
TI Applying a smoothing filter to improve IR-based traceability recovery
   processes: An empirical investigation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT IEEE 19th International Conference on Program Comprehension (ICPC)
CY JUN 22-24, 2011
CL Kingston, CANADA
SP IEEE, Queens Univ, RIM, Comp Associates, Univ Saskatchewan, Reverse engn Forum
DE Software traceability; Information retrieval; Smoothing filters;
   Empirical software engineering
ID CODE; COHESION; LINKS
AB Context: Traceability relations among software artifacts often tend to be missing, outdated, or lost. For this reason, various traceability recovery approaches based on Information Retrieval (IR) techniques-have been proposed. The performances of such approaches are often influenced by "noise" contained in software artifacts (e.g., recurring words in document templates or other words that do not contribute to the retrieval itself).
   Aim: As a complement and alternative to stop word removal approaches, this paper proposes the use of a smoothing filter to remove "noise" from the textual corpus of artifacts to be traced.
   Method: We evaluate the effect of a smoothing filter in traceability recovery tasks involving different kinds of artifacts from five software projects, and applying three different IR methods, namely Vector Space Models, Latent Semantic Indexing, and Jensen-Shannon similarity model.
   Results: Our study indicates that, with the exception of some specific kinds of artifacts (i.e., tracing test cases to source code) the proposed approach is able to significantly improve the performances of traceability recovery, and to remove "noise" that simple stop word filters cannot remove.
   Conclusions: The obtained results not only help to develop traceability recovery approaches able to work in presence of noisy artifacts, but also suggest that smoothing filters can be used to improve performances of other software engineering approaches based on textual analysis. (C) 2012 Elsevier B.V. All rights reserved.
C1 [De Lucia, Andrea; Panichella, Annibale] Univ Salerno, Fisciano, SA, Australia.
   [Di Penta, Massimiliano; Panichella, Sebastiano] Univ Sannio, I-82100 Benevento, Italy.
   [Oliveto, Rocco] Univ Molise, I-86090 Pesche, IS, Italy.
C3 University of Salerno; University of Sannio; University of Molise
RP Di Penta, M (corresponding author), Univ Sannio, Viale Traiano, I-82100 Benevento, Italy.
EM adelucia@unisa.it; dipenta@unisannio.it; rocco.oliveto@unimol.it;
   apanichella@unisa.it; spanichella@unisannio.it
RI Panichella, Annibale/AAJ-8443-2020; De Lucia, Andrea/AAG-6781-2020; Di
   Penta, Massimiliano/AAF-9656-2021
OI De Lucia, Andrea/0000-0002-4238-1425; Panichella,
   Sebastiano/0000-0003-4120-626X; Di Penta,
   Massimiliano/0000-0002-0340-9747
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   [Anonymous], 1998, 8301998 IEEE
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bavota G, 2011, J SYST SOFTWARE, V84, P397, DOI 10.1016/j.jss.2010.11.918
   Canfora G, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P259
   Capobianco G., 2009, P 17 IEEE INT C PROG
   Capobianco G., 2009, P 16 WORK C REV ENG
   Cleland-Huang J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P135, DOI 10.1109/RE.2005.78
   Cleland-Huang J., 2011, SOFTWARE SYSTEMS TRA
   Cohen J., 1988, STAT POWER ANAL BEHA
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   Cullum J. K., 1998, LANCZOS ALGORITHMS L, V1
   De Lucia A., 2011, APPL SMOOTHING FILTE
   De Lucia A., 2012, SOFTWARE SYSTEMS TRA, P71, DOI [10.1007/978-1-4471- 2239-5_4, DOI 10.1007/978-1-4471-2239-5_4]
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2006, PROC IEEE INT CONF S, P299
   De Lucia A, 2011, IEEE T SOFTWARE ENG, V37, P205, DOI 10.1109/TSE.2010.89
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Emenecker J., 2010, P 32 ACM IEEE INT C, V1, P155, DOI DOI 10.1145/1806799.1806825
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Gibiec M., 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE '10, P245
   Gonzalez R. C., 2006, Digital Image Processing, V3rd
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   HOLM S, 1979, SCAND J STAT, V6, P65
   Jurafsky D., 2000, Speech and language processing: An introduction to natural language processing, computational linguistics, and speech recognition
   Lawrie D, 2007, J SOFTW MAINT EVOL-R, V19, P205, DOI 10.1002/smr.350
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lormans M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P45
   Marcus A, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P107, DOI 10.1109/ASE.2001.989796
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Marcus A., 2005, P 3 INT WORKSH TRAC, P56, DOI DOI 10.1145/1107656.1107669
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Porter MF, 2006, PROGRAM-ELECTRON LIB, V40, P211, DOI [10.1108/00330330610681286, 10.1108/eb046814]
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2006, PROC IEEE INT CONF S, P469
   Revelle Meghan, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P14, DOI 10.1109/ICPC.2010.10
   Settimi R, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P49, DOI 10.1109/IWPSE.2004.1334768
   Takang AA, 1996, J PROGRAM LANG, V4, P143
   Thomas T. M.CoverandJ. A., 1991, ELEMENTS INFORM THEO, DOI 10.1002/0471200611
   Zou X., 2007, PROC INT WORKSHOP TR, P40
   Zou XC, 2010, EMPIR SOFTW ENG, V15, P119, DOI 10.1007/s10664-009-9114-z
NR 46
TC 15
Z9 16
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2013
VL 55
IS 4
BP 741
EP 754
DI 10.1016/j.infsof.2012.08.002
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 111NE
UT WOS:000316527200008
DA 2024-07-18
ER

PT J
AU Engström, E
   Runeson, P
AF Engstrom, Emelie
   Runeson, Per
TI Test overlay in an emerging software product line - An industrial case
   study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Product-line; Software testing; Case study; Overlay; Redundancy;
   Efficiency
AB Context: In large software organizations with a product line development approach, system test planning and scope selection is a complex task. Due to repeated testing: across different testing levels, over time (test for regression) as well as of different variants, the risk of redundant testing is large as well as the risk of overlooking important tests, hidden by the huge amount of possible tests.
   Aims: This study assesses the amount and type of overlaid manual testing across feature, integration and system test in such context, it explores the causes of potential redundancy and elaborates on how to provide decision support in terms of visualization for the purpose of avoiding redundancy.
   Method: An in-depth case study was launched including both qualitative and quantitative observations.
   Results: A high degree of test overlay is identified originating from distributed test responsibilities, poor documentation and structure of test cases, parallel work and insufficient delta analysis. The amount of test overlay depends on which level of abstraction is studied.
   Conclusions: Avoiding redundancy requires tool support, e.g. visualization of test design coverage, test execution progress, priorities of coverage items as well as visualized priorities of variants to support test case selection. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Engstrom, Emelie; Runeson, Per] Lund Univ, Dept Comp Sci, SE-22100 Lund, Sweden.
C3 Lund University
RP Runeson, P (corresponding author), Lund Univ, Dept Comp Sci, POB 118, SE-22100 Lund, Sweden.
EM per.runeson@cs.lth.se
RI Engström, Emelie/AAG-7808-2019; Runeson, Per/H-5113-2019
OI Engström, Emelie/0000-0001-6736-9425; Runeson, Per/0000-0003-2795-4851
FU EASE Industrial Excellence Center on Embedded Applications Software
   Engineering
FX The authors are very thankful to the case company and its employees, for
   letting us access them and their data, as well as giving valuable
   feedback on our findings. We also thank Dr. Mika Mantyla at Lund
   University as well as the journal reviewers, for valuable review
   comments to an earlier version of the paper. The research was in part
   funded by the EASE Industrial Excellence Center on Embedded Applications
   Software Engineering, http://ease.cs.lth.se. Emelie Engstrom is a member
   of the SWELL research school, Swedish V&V Excellence,
   http://www.swell.se.
CR Andrews A, 2005, SOFTWARE SYSTEMS MOD, V4, P326, DOI DOI 10.1007/S10270-004-0077-7
   [Anonymous], 2001, 912612001E ISOIEC
   [Anonymous], 2004, SIGSOFT SOFTWARE ENG
   Asklund Ulf, 1999, LECT NOTES COMPUTER, V1675, P793
   Canfora Gerardo, 2009, Software Engineering. International Summer Schools ISSSE 2006-2008. Revised Tutorial Lectures, P78, DOI 10.1007/978-3-540-95888-8_4
   Engstrom E., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P367, DOI 10.1109/ICST.2011.27
   Engstrom Emelie, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P75, DOI 10.1109/ICST.2010.40
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Engström E, 2010, LECT NOTES COMPUT SC, V6156, P3, DOI 10.1007/978-3-642-13792-1_3
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Harrold MaryJean., 2000, ICSE 00 P C FUTURE S, P61
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Rothermel Gregg, 2002, INT C SOFTW ENG IEEE, P30
   Runeson Per, 2012, P 2 INT WORKSH REGR
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Shanks G., 2002, Australian Journal of Information Systems, P76
   Thao C, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P265, DOI 10.1109/ECBS.2008.53
   van der Linden F. J., 2007, Software Product Lines in Action: the Best Industrial Practice in Product Line Engineering
   Verner JM, 2009, INT CONF RES CHAL, P313, DOI 10.1109/RCIS.2009.5089295
   Weyuker EJ, 1998, IEEE SOFTWARE, V15, P54, DOI 10.1109/52.714817
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
NR 25
TC 11
Z9 11
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2013
VL 55
IS 3
BP 581
EP 594
DI 10.1016/j.infsof.2012.04.009
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 095XV
UT WOS:000315369200007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Shahmehri, N
   Mammar, A
   de Oca, EM
   Byers, D
   Cavalli, A
   Ardi, S
   Jimenez, W
AF Shahmehri, Nahid
   Mammar, Amel
   de Oca, Edgardo Montes
   Byers, David
   Cavalli, Ana
   Ardi, Shanai
   Jimenez, Willy
TI An advanced approach for modeling and detecting software vulnerabilities
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software security; Security modelling; Secure software engineering;
   Automatic testing; Dynamic analysis
ID SECURITY; CHECKING
AB Context: Passive testing is a technique in which traces collected from the execution of a system under test are examined for evidence of flaws in the system.
   Objective: In this paper we present a method for detecting the presence of security vulnerabilities by detecting evidence of their causes in execution traces. This is a new approach to security vulnerability detection.
   Method: Our method uses formal models of vulnerability causes, known as security goal models and vulnerability detection conditions (VDCs). The former are used to identify the causes of vulnerabilities and model their dependencies, and the latter to give a formal interpretation that is suitable for vulnerability detection using passive testing techniques. We have implemented modeling tools for security goal models and vulnerability detection conditions, as well as TestInv-Code, a tool that checks execution traces of compiled programs for evidence of VDCs.
   Results: We present the full definitions of security goal models and vulnerability detection conditions, as well as structured methods for creating both. We describe the design and implementation of TestInv-Code. Finally we show results obtained from running TestInv-Code to detect typical vulnerabilities in several open source projects. By testing versions with known vulnerabilities, we can quantify the effectiveness of the approach.
   Conclusion: Although the current implementation has some limitations, passive testing for vulnerability detection works well, and using models as the basis for testing ensures that users of the testing tool can easily extend it to handle new vulnerabilities. (c) 2012 Elsevier B.V. All rights reserved.
C1 [Shahmehri, Nahid; Byers, David; Ardi, Shanai] Linkoping Univ, Dept Comp & Informat Sci, SE-58183 Linkoping, Sweden.
   [Mammar, Amel; Cavalli, Ana; Jimenez, Willy] Telecom SudParis, F-91011 Evry, France.
   [de Oca, Edgardo Montes] Montimage, F-75013 Paris, France.
C3 Linkoping University; IMT - Institut Mines-Telecom; Institut
   Polytechnique de Paris; Telecom SudParis
RP Shahmehri, N (corresponding author), Linkoping Univ, Dept Comp & Informat Sci, SE-58183 Linkoping, Sweden.
EM nahid.shahmehri@liu.se; amel.mammar@it-sudparis.eu;
   edgardo.montesdeoca@montimage.com; david.byers@liu.se;
   ana.cavalli@it-sudparis.eu; shanai.ardi@liu.se;
   willy.jimenez@it-sudparis.eu
OI Montes de Oca, Edgardo/0000-0001-6771-0689
FU European Community's Seventh Framework Programme (FP7) [215995];
   Software Intensive Systems program of the Swedish Foundation for
   Strategic Research
FX The research leading to these results has received funding from the
   European Community's Seventh Framework Programme (FP7/2007-2013) under
   Grant agreement no. 215995. Further funding was provided through the
   Software Intensive Systems program of the Swedish Foundation for
   Strategic Research.
CR Abrial JR, 2006, LECT NOTES COMPUT SC, V4260, P588
   [Anonymous], 12 IEEE INT S DISTR
   [Anonymous], 1999, Proceedings of the 17th International Systems Safety Conference
   [Anonymous], P 24 IFIP WG 6 1 INT
   [Anonymous], 2007, P USENIX WORKSH OFF
   [Anonymous], 12 WORK C REQ ENG FD
   [Anonymous], FINAL REPOSITORY SPE
   [Anonymous], DOBBS J DEC
   [Anonymous], PROCESSES PRODUCE SE
   [Anonymous], P 13 ACM C COMP COMM
   [Anonymous], P 2010 ICSE WORKSH S
   [Anonymous], CERT CC STAT
   [Anonymous], P INT C NETW INT C S
   [Anonymous], THESIS U ALABAMA
   [Anonymous], P 5 INT C UN MOD LAN
   [Anonymous], 2005, P 2005 NETW DISTR SY
   [Anonymous], P INT C DEP SYST NET
   [Anonymous], FINAL MODELLING METH
   [Anonymous], INT J INFORM SECURIT
   [Anonymous], FORT 360 SOURC COD A
   [Anonymous], P 2 INT C AV REL SEC
   [Anonymous], IEEE S SEC PRIV
   [Anonymous], 2005, Secure Systems Development with UML
   [Anonymous], SPLINT ANN ASS LIGHT
   [Anonymous], SYST SAF S
   [Anonymous], FINAL REPORT INSPECT
   Armando A, 2008, INT J INF SECUR, V7, P3, DOI 10.1007/s10207-007-0041-y
   Balzarotti D, 2008, P IEEE S SECUR PRIV, P387, DOI 10.1109/SP.2008.22
   Bayse E, 2005, COMPUT NETW, V48, P247, DOI 10.1016/j.comnet.2004.09.009
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Byers D, 2008, ARES 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON AVAILABILITY, SECURITY AND RELIABILITY, P276, DOI 10.1109/ARES.2008.12
   Byers D, 2006, PROC IEEE INT CONF S, P411
   Cavalli A, 2003, INFORM SOFTWARE TECH, V45, P837, DOI 10.1016/S0950-5849(03)00063-6
   Ceri S., 1989, IEEE Transactions on Knowledge and Data Engineering, V1, P146, DOI 10.1109/69.43410
   Chess Brian, 2008, Information Security Technical Report, V13, P33, DOI 10.1016/j.istr.2008.02.003
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Fisler K, 2005, PROC INT CONF SOFTW, P196
   Giorgini P, 2007, INTEGRATING SECURITY AND SOFTWARE ENGINEERING: ADVANCES AND FUTURE VISIONS, P160
   Godefroid P, 2008, IEEE SOFTWARE, V25, P30, DOI 10.1109/MS.2008.109
   Hadjidj R, 2008, ANN CONF PRIV SECUR, P133, DOI 10.1109/PST.2008.21
   Harel D, 2004, COMPUTER, V37, P64, DOI 10.1109/MC.2004.172
   HAUGH E., 2003, Proceedings of the Network and Distributed System Security Symposium, P123
   Hull D, 2006, NUCLEIC ACIDS RES, V34, pW729, DOI 10.1093/nar/gkl320
   Kuang C., 2006, Proceedings of the 5th WSEAS International Conference on Information Security and Privacy, P218
   Lee D, 1997, 1997 INTERNATIONAL CONFERENCE ON NETWORK PROTOCOLS - PROCEEDINGS, P113, DOI 10.1109/ICNP.1997.643699
   Mallouli W, 2008, GLOB TELECOMM CONF, DOI 10.1109/GLOCOM.2008.ECP.400
   Mauw S, 2006, LECT NOTES COMPUT SC, V3935, P186
   McDermott J., 1999, Proceedings 15th Annual Computer Security Applications Conference (ACSAC'99), P55, DOI 10.1109/CSAC.1999.816013
   Miller RE, 2001, PROC ANNU SIMUL SYMP, P277, DOI 10.1109/SIMSYM.2001.922142
   Peine H, 2008, IEEE HI ASS SYS ENGR, P9, DOI 10.1109/HASE.2008.57
   Popp G, 2003, ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P478, DOI 10.1109/APSEC.2003.1254403
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Swiderski F., 2004, Threat modeling
   Tabourier M, 1999, INFORM SOFTWARE TECH, V41, P813, DOI 10.1016/S0950-5849(99)00039-7
   Thompson HH, 2005, IEEE SECUR PRIV, V3, P66, DOI 10.1109/MSP.2005.3
   Viganò L, 2006, ELECTRON NOTES THEOR, V155, P61, DOI 10.1016/j.entcs.2005.11.052
   Wang L, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P165, DOI 10.1109/SCAM.2008.24
   Wheeler D. A., Flawfinder
   Zhang N, 2005, LECT NOTES COMPUT SC, V3650, P446
NR 59
TC 12
Z9 14
U1 0
U2 21
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2012
VL 54
IS 9
BP 997
EP 1013
DI 10.1016/j.infsof.2012.03.004
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 977BP
UT WOS:000306631700006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Spinola, RO
   Travassos, GH
AF Spinola, Rodrigo Oliveira
   Travassos, Guilherme Horta
TI Towards a framework to characterize ubiquitous software projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Ubiquitous computing; Software projects characterization; Systematic
   review; Experimental software engineering
ID MOBILE APPLICATIONS; INFRASTRUCTURE; ARCHITECTURE; CHALLENGES;
   MIDDLEWARE
AB Context: Ubiquitous Computing (or UbiComp) represents a paradigm in which information processing is thoroughly integrated into everyday objects and activities. From a Software Engineering point of view this development scenario brings new challenges in tailoring or building software processes, impacting current software technologies. However, it has not yet been explicitly shown how to characterize a software project with the perception of ubiquitous computing.
   Objective: This paper presents a conceptual framework to support the characterization of ubiquitous software projects according to their ubiquity adherence level. It also intends to apply such characterization approach to some projects, aiming at observing their adherence with ubiquitous computing principles.
   Method: To follow a research strategy based on systematic reviews and surveys to acquire UbiComp knowledge and organize a conceptual framework regarding ubiquitous computing, which can be used to characterize UbiComp software projects. Besides, to demonstrate its application by characterizing some software projects.
   Results: Ubiquitous computing encapsulates at least 11 different high abstraction level characteristics represented by 123 functional and 45 restrictive factors. Based on this a checklist was organized to allow the characterization of ubiquitous software projects, which has been applied on 26 ubiquitous software projects from four different application domains (ambient intelligence, pervasive healthcare, U-learning, and urban space). No project demonstrated to support more than 65% of the characteristics set. Service omnipresence was observed in all of these projects. However, some characteristics, although identified as necessary in the checklist, were not identified in any of them.
   Conclusion: There are characteristics that identify a software project as ubiquitous. However, a ubiquitous software project does not necessarily have to implement all of them. The application domain can influence the appearing of UbiComp characteristics in software projects, promoting an increase of their adherence to UbiComp and, thus, for additional software technologies to deal with these ubiquitous requirements. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Spinola, Rodrigo Oliveira; Travassos, Guilherme Horta] Univ Fed Rio de Janeiro, COPPE, Syst Engn & Comp Sci Program, BR-21945 Rio De Janeiro, Brazil.
C3 Universidade Federal do Rio de Janeiro
RP Travassos, GH (corresponding author), Univ Fed Rio de Janeiro, COPPE, Syst Engn & Comp Sci Program, POB 68511, BR-21945 Rio De Janeiro, Brazil.
EM ros@cos.ufrj.br; ght@cos.ufrj.br
RI Travassos, Guilherme Horta/G-2842-2012
OI Travassos, Guilherme Horta/0000-0002-4258-0424
FU CNPq [75459/2007-5]; CAPES; FAPERJ
FX Authors thank to CNPq (Grant 75459/2007-5), CAPES, and FAPERJ for their
   financial support. We would like to acknowledge the participation of
   Jobson Massolar da Silva and Felipe Rego Pinto from the Experimental
   Software Engineering group at COPPE/UFRJ in some activities regarding
   this research project. Our recognition to the survey participants which
   contributed to the results presented in this paper.
CR Aarts E., 2001, INVISIBLE FUTURE SEA
   Abowd G. D., 2002, IEEE Pervasive Computing, V1, P48, DOI 10.1109/MPRV.2002.993144
   Abowd G. D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P75, DOI 10.1109/ICSE.1999.840997
   Acampora G, 2005, IEEE T IND INFORM, V1, P97, DOI 10.1109/TII.2005.844431
   Ali JA, 2004, SECOND IEEE WORKSHOP ON SOFTWARE TECHNOLOGIES FOR FUTURE EMBEDDED AND UBIQUITOUS SYSTEMS, PROCEEDINGS, P169, DOI 10.1109/WSTFES.2004.1300436
   [Anonymous], P 3 NORD C HUM COMP
   [Anonymous], COMMUNICATIONS ACM
   Araya A.A., 1995, P ACM 23 ANN C COMP
   Banavar G, 2002, COMMUN ACM, V45, P92, DOI 10.1145/585597.585622
   Biolchini J, 2005, SYSTEMATIC REV SOFTW
   Bossen C., 2004, 5 C DES INT SYST, P297, DOI DOI 10.1145/1013115.1013157
   Byun HE, 2004, APPL ARTIF INTELL, V18, P533, DOI 10.1080/08839510490462894
   Campo C, 2005, THIRD IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS, WORKSHOPS, P178, DOI 10.1109/PERCOMW.2005.61
   Ceccaroni L, 2009, THIRD INTERNATIONAL CONFERENCE ON DIGITAL SOCIETY: ICDS 2009, PROCEEDINGS, P7, DOI 10.1109/ICDS.2009.25
   Cervantes H, 2004, PROC INT CONF SOFTW, P614, DOI 10.1109/ICSE.2004.1317483
   Conlan O., 2003, P 1 INT S INFORM COM, P205
   Corradi A., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P444, DOI 10.1109/CMPSAC.2004.1342877
   Corradi A, 2005, 2005 SYMPOSIUM ON APPLICATIONS AND THE INTERNET, PROCEEDINGS, P421, DOI 10.1109/SAINT.2005.2
   Couder P., 2003, 36 HAW INT C SYST SC
   DAVIDYUK O, 2004, P 3 INT C MOB UB MUL
   Davis B., 2005, Mobile HCI '05, P231
   de Oliveira KM, 2004, J SYST SOFTWARE, V72, P145, DOI 10.1016/S0164-1212(03)00233-4
   Debaty P, 2004, SECOND IEEE ANNUAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS WORKSHOPS, PROCEEDINGS, P171
   Dey AK, 1998, KNOWL-BASED SYST, V11, P3, DOI 10.1016/S0950-7051(98)00053-7
   Disx T., 1996, P HIGH PERF DISTR CO
   Disx T., 1997, P 6 HET COMP WORKSH
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Fink Arlene., 1998, CONDUCT SURVEYS STEP, V2nd
   Fontijn W, 2004, SECOND IEEE ANNUAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS WORKSHOPS, PROCEEDINGS, P203
   Fujii K., 2004, ICSOC 04 NOV 15 19 2
   Fujinami K., 2004, ACM S APPL COMP, P1607
   Garate Alfonso., 2005, Proceedings of the 2005joint conference on Smart objects and ambient intelligence: innovative contextaware services: usages and technologies. sOc-EUSAI '05, P241, DOI DOI 10.1145/1107548.1107609
   Garlan D., 2002, IEEE Pervasive Computing, V1, P22, DOI 10.1109/MPRV.2002.1012334
   GARLAN D, 2004, P ACM SIGSOFT 2004 W
   Glesner Manfred., 2004, CF'O4'Proceedings of the first conference on computing frontiers on Computing frontiers, P377
   Gomes ATA, 2006, FOURTH ANNUAL IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS WORKSHOPS, PROCEEDINGS, P585, DOI 10.1109/PERCOMW.2006.133
   Hadjiantonis AA, 2007, IEEE ICC, P2089, DOI 10.1109/ICC.2007.346
   Hallsteinsen S., 2004, WOSS 04 OCT 31 NOV 1
   Harrington A., 2004, SAC 2004
   Hatala M., 2005, J WEB SEMANTICS
   Hodes T. D., 1997, MobiCom '97. Proceedings of the Third Annual ACM/IEEE International Conference on Mobile Computing and Networking, P1, DOI 10.1145/262116.262121
   Hong D., 2005, ICEC 05 AUG 15 17 20
   Huang A.C., 2001, ACM SIGMOBILE 7 ANN
   Hürst W, 2000, J NETW COMPUT APPL, V23, P1, DOI 10.1006/jnca.1999.0097
   Indrusiak L.S., 2003, P DES AUT TEST EUR C
   Jessup LM, 2002, COMMUN ACM, V45, P88, DOI 10.1145/585597.585621
   Jing L, 2008, 2008 FIRST IEEE INTERNATIONAL CONFERENCE ON UBI-MEDIA COMPUTING AND WORKSHOPS, PROCEEDINGS, P314, DOI 10.1109/UMEDIA.2008.4570909
   Joel S, 2004, IEEE SYS MAN CYBERN, P2669
   Johansen D., 2004, MIDDLEWARE PERVASIVE, P150
   José R, 2003, MOBILE NETW APPL, V8, P377, DOI 10.1023/A:1024531629631
   Kagal L, 2002, WIREL NETW, V8, P619, DOI 10.1023/A:1020385804671
   Kalapriya K., 2004, CF 04, P70
   Karypidis A, 2005, PROCEEDINGS OF MOBIQUITOUS 2005, P202
   Kawamichi H, 2004, 2004 INTERNATIONAL SYMPOSIUM ON APPLICATIONS AND THE INTERNET WORKSHOPS, PROCEEDINGS, P319, DOI 10.1109/SAINTW.2004.1268654
   Keidl M., 2004, WEB SERVICES WWW, P55, DOI DOI 10.1145/1013367.1013378
   Khedr M., 2003, IEEE PAC RIM C COMM
   Kientz JA, 2007, IEEE PERVAS COMPUT, V6, P28, DOI 10.1109/MPRV.2007.18
   Kindberg T., 2002, IEEE Pervasive Computing, V1, P70, DOI 10.1109/MPRV.2002.993146
   Kindberg T, 2000, THIRD IEEE WORKSHOP ON MOBILE COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P19, DOI 10.1109/MCSA.2000.895378
   Korhonen I, 2004, IEEE T INF TECHNOL B, V8, P229, DOI 10.1109/TITB.2004.835337
   Kumar PS, 2005, Third IEEE International Conference on Pervasive Computing and Communications, Proceedings, P314, DOI 10.1109/PERCOM.2005.13
   Kwan VWM, 2003, IEEE/WIC INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE, PROCEEDINGS, P358
   Lee S.H., 2004, WSTFEUS 2004
   LEE SJ, 2008, P 1 INT C MOB WIR MI
   Li LY, 2005, INT J PERVASIVE COMP, V1, P207, DOI 10.1108/17427370580000127
   Liu D., 2004, 6 INT C EL COMM
   Lyytinen K., 2002, Communications of the ACM, V45, P63
   Maamar Zakaria., 2004, Proceedings of the 2004 ACM symposium on Applied computing, P1619
   Maisonneuve N., 2009, INT C DIGITAL GOVT R, P96
   Mantoro T., 2004, P 3 INT C MOB UB MUL, P153
   McLean P.G., 2003, C RES PRACT INF TECH, V21
   Michahelles F., 2004, P 6 IEEE WORKSH MOB
   NAWYN J, 2006, P 8 INT C UB COMP
   Neto A.C. Dias, 2010, P 13 C IB SOFTW ENG, VI, P107
   Nguyen T, 2009, 2009 10TH INTERNATIONAL SYMPOSIUM ON PERVASIVE SYSTEMS, ALGORITHMS, AND NETWORKS (ISPAN 2009), P143, DOI 10.1109/I-SPAN.2009.104
   Niemela E., 2004, Proceedings of the 3rd international Conference on Mobile and Ubiquitous Multimedia (College Park, Maryland, October 27 - 29, V83, P71
   O'Neill E., 2006, P 8 INT C UB COMP UB
   Pai M, 2004, NATL MED J INDIA, V17, P2
   Park P, 2009, 2009 INTERNATIONAL CONFERENCE ON NEW TRENDS IN INFORMATION AND SERVICE SCIENCE (NISS 2009), VOLS 1 AND 2, P781, DOI 10.1109/NISS.2009.145
   Poladian V, 2004, PROC INT CONF SOFTW, P604, DOI 10.1109/ICSE.2004.1317482
   Quero JM, 2007, P ANN INT IEEE EMBS, P6299
   Raatikainen K., 2002, ACM SIGMOBILE MOBILE, V6
   Raento M, 2005, IEEE PERVAS COMPUT, V4, P51, DOI 10.1109/MPRV.2005.29
   Ranganathan A., 2004, 1 ANN INT C MOB UB S
   Raptis D., 2005, Mobile HCI, V9, P153
   Ratsimor O., 2002, MOB COMM WORKSH SEP
   Repo P., 2004, P 3 INT C MOB UB MUL, P221
   Roman M., 2003, PERCOM
   Roman M., 2004, P 5 ACM IFIP USENIX
   ROSENTHAL L, 2000, IEEE 9 INT WORKSH EN
   Sadjadi S. M., 2005, TRANSPARENT SHAPING
   Salovaara A., 2004, NORDICHI 04 OCT 23 2
   Sameshima S., 2003, IEEE SICE ANN C FUK
   Satoh I, 2005, IEICE T COMMUN, VE88B, P1026, DOI 10.1093/ietcom/e88-b.3.1026
   Satoh I., 2004, P IEEE INT C COMM IC
   Sharmin M., 2005, IEEE P INT C INF TEC
   Shaw M., 2002, International Journal on Software Tools for Technology Transfer, V4, P1, DOI 10.1007/s10009-002-0083-4
   Shin JH, 2007, 2007 6TH INTERNATIONAL SPECIAL TOPIC CONFERENCE ON INFORMATION TECHNOLOGY APPLICATIONS IN BIOMEDICINE, P135
   Siegemund F, 2003, PROCEEDINGS OF THE FIRST IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS (PERCOM 2003), P378, DOI 10.1109/PERCOM.2003.1192762
   Spinola R.O., 2010, ACM S APPL COMP 2010, P306
   Spinola R.O., 2010, THESIS U FEDERAL RIO
   Spinola R.O., 2010, P 22 INT C SOFTW ENG
   Spinola R.O., 2007, P 21 BRAZ S SOFTW EN
   Spínola RO, 2008, COMM COM INF SC, V17, P587
   Stanford V, 2003, IEEE PERVAS COMPUT, V2, P9, DOI [10.1109/MPRV.2003.1186719, 10.1109/MPRV.2003.1203746]
   Streitz N., 2005, COMMUNICATIONS ACM D
   Su M.-J., 2009, IEEE INT C COMM WORK, P1
   Sullivan D., 2003, P 3 ACM INT WORKSH D
   Sun J, 2005, 11th IEEE International Conference on Embedded and Real-Time Computing Systems and Applications, Proceedings, P447
   Tadj C., 2006, 2006 International Symposium on Communications and Information Technologies (IEEE Cat No. 06EX1447C), P851, DOI 10.1109/ISCIT.2006.339857
   Tahti M., 2004, P 3 INT C MOB UB MUL
   Thayer SM, 2003, PERS UBIQUIT COMPUT, V7, P82, DOI 10.1007/s00779-003-0234-y
   Truong K. N., 1999, 99 UIST. Proceedings of the 12th Annual ACM Symposium on User Interface Software and Technology, P121, DOI 10.1145/320719.322593
   Vainio A.M., 2006, P AMLD SEPT 20 22
   van Bunningen AH, 2005, INTERNATIONAL WORKSHOP ON UBIQUITOUS DATA MANAGEMENT, PROCEEDINGS, P17, DOI 10.1109/UDM.2005.7
   Vassis D, 2010, PERS UBIQUIT COMPUT, V14, P563, DOI 10.1007/s00779-009-0273-0
   Veiga L., 2004, ARM 04, P238
   Venkatasubramanian N, 2002, COMMUN ACM, V45, P49, DOI 10.1145/508448.508473
   Vernik R., 2004, P 5 AUSTR US INT C A, V28, P111
   Wang Y, 2004, INT CONF PARA PROC, P472
   Want R, 2005, PROC INT CONF SOFTW, P9
   Weiser M., 1991, SCI AM
   Yang M.-J., 2009, P 2009 WORKSH AMB ME, P77
   Yau S. S., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P452, DOI 10.1109/CMPSAC.2004.1342878
   Yau SS, 2003, IEEE T PARALL DISTR, V14, P1074, DOI 10.1109/TPDS.2003.1247669
   Yau SS, 2001, FOURTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P163, DOI 10.1109/ISORC.2001.922833
   YAU SS, 2002, P 26 ANN INT COMP SO
   Ye XZ, 2008, 8TH IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY WORKSHOPS: CIT WORKSHOPS 2008, PROCEEDINGS, P494, DOI 10.1109/CIT.2008.Workshops.15
   Zhou F, 2011, IEEE T SYST MAN CY C, V41, P179, DOI 10.1109/TSMCC.2010.2052456
   Zhou P, 2005, THIRD IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P27
NR 130
TC 18
Z9 18
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2012
VL 54
IS 7
BP 759
EP 785
DI 10.1016/j.infsof.2012.01.009
PG 27
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 946WG
UT WOS:000304387600007
DA 2024-07-18
ER

PT J
AU Junges, R
   Klügl, F
AF Junges, Robert
   Klugl, Franziska
TI Generating inspiration for agent design by reinforcement learning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agent-oriented software engineering; Multiagent systems; Multiagent
   simulation
ID BEHAVIOR
AB One major challenge in developing multiagent systems is to find the appropriate agent design that is able to generate the intended overall dynamics, but does not contain unnecessary features. In this article we suggest to use agent learning for supporting the development of an agent model during an analysis phase in agent-based software engineering.
   Hereby, the designer defines the environmental model and the agent interfaces. A reward function captures a description of the overall agent performance with respect to the intended outcome of the agent behavior. Based on this setup, reinforcement learning techniques can be used for learning rules that are optimally governing the agent behavior. However, for really being useful for analysis, the human developer must be able to review and fully understand the learnt behavior program. We propose to use additional learning mechanisms for a post-processing step supporting the usage of the learnt model. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Junges, Robert; Klugl, Franziska] Univ Orebro, Modeling & Simulat Res Ctr, S-70182 Orebro, Sweden.
C3 Orebro University
RP Junges, R (corresponding author), Univ Orebro, Modeling & Simulat Res Ctr, Tekn Huset, S-70182 Orebro, Sweden.
EM robert.junges@oru.se; franziska.klugl@oru.se
OI Klugl, Franziska/0000-0002-1470-6288
CR Adami C., 1998, Introduction to Artificial Life
   [Anonymous], INT J AGENT TECHNOLO
   [Anonymous], P INT C MULT SYST IC
   [Anonymous], P 8 EUR WORKSH MULT
   [Anonymous], ADV LEARNING CLASSIF
   [Anonymous], THESIS U WURZBURG
   [Anonymous], CEUR WORKSHOP P
   [Anonymous], ADAPTIVE BEHAV
   [Anonymous], 11 SCAND C ART INT S
   Bandini S, 2008, LECT NOTES COMPUT SC, V5191, P409, DOI 10.1007/978-3-540-79992-4_53
   Bernon C., 2003, ENG SOC AGENTS WORLD, VIII, P70
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   Clark P., 1989, Machine Learning, V3, P261, DOI 10.1007/BF00116835
   Collins R.J., 1991, Artificial Life II: Proceedings of the Workshop on Artificial Life Held February, 1990 in Santa Fe, New Mexico, P579
   Cossentino Massimo, 2007, International Journal of Agent-Oriented Software Engineering, V1, P91, DOI 10.1504/IJAOSE.2007.013266
   Cossentino M., 2003, Agent Technologies, Infrastructures, Tools, and Applications for E-Services. NODe 2002 Agent-Related Workshops. Revised Papers (Lecture Notes in Artificial Intelligence Vol.2592), P107
   Deloach SA, 2001, INT J SOFTW ENG KNOW, V11, P231, DOI 10.1142/S0218194001000542
   Junges R., 2011, P 13 ANN C COMP GEN
   Junges R, 2010, LECT NOTES ARTIF INT, V6251, P185, DOI 10.1007/978-3-642-16178-0_18
   Klügl F, 2008, LECT NOTES ARTIF INT, V5244, P111, DOI 10.1007/978-3-540-87805-6_11
   Klügl F, 2008, LECT NOTES ARTIF INT, V5118, P123, DOI 10.1007/978-3-540-85058-8_8
   Lee MR, 2006, NEURAL COMPUT APPL, V15, P124, DOI 10.1007/s00521-005-0020-z
   Lind J., 2000, P 1 INT WORKSHOP AGE, P45, DOI DOI 10.1007/3-540-44564-1_3
   Maeda Y, 1998, J INTELL FUZZY SYST, V6, P53
   MAHADEVAN S, 1992, ARTIF INTELL, V55, P311, DOI 10.1016/0004-3702(92)90058-6
   Mitchell T. M., 1997, MACHINE LEARNING
   Neruda Roman, 2008, 2008 Second International Conference on Future Generation Communication and Networking Symposia (FGCNS), P29, DOI 10.1109/FGCNS.2008.133
   Nowé A, 2006, LECT NOTES COMPUT SC, V3898, P71, DOI 10.1007/11691839_3
   Padgham L, 2002, LECT NOTES COMPUT SC, V2585, P174
   Quinlan J.R., 1993, C4 5 PROGRAMS MACHIN
   Sutton R., 1998, Reinforcement Learning: An Introduction
   Tsoumakas G., 2007, INT J DATA WAREHOUS, V3, P1, DOI DOI 10.4018/JDWM.2007070101
   WATKINS CJCH, 1992, MACH LEARN, V8, P279, DOI 10.1007/BF00992698
   Weiss G., 1996, Adaption and Learning in Multi-Agent Systems. IJCAI '95 Workshop. Proceedings, P1
   Wilson SW, 1995, EVOL COMPUT, V3, P149, DOI 10.1162/evco.1995.3.2.149
   Wooldridge M, 2000, AUTON AGENT MULTI-AG, V3, P285, DOI 10.1023/A:1010071910869
   Wooldridge M., 2001, AGENT ORIENTED SOFTW, V1957, P55
NR 37
TC 2
Z9 2
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2012
VL 54
IS 6
BP 639
EP 649
DI 10.1016/j.infsof.2011.12.002
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 922ZH
UT WOS:000302587100009
DA 2024-07-18
ER

PT J
AU Wilkie, FG
   McChesney, IR
   Morrow, P
   Tuxworth, C
   Lester, NG
AF Wilkie, F. G.
   McChesney, I. R.
   Morrow, P.
   Tuxworth, C.
   Lester, N. G.
TI The value of software sizing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software size estimation; Empirical software engineering; NESMA; Project
   planning; Size metrics; Function points
AB Context: One of the difficulties faced by software development Project Managers is estimating the cost and schedule for new projects. Previous industry surveys have concluded that software size and cost estimation is a significant technical area of concern. In order to estimate cost and schedule it is important to have a good understanding of the size of the software product to be developed. There are a number of techniques used to derive software size, with function points being amongst the most documented.
   Objective: In this paper we explore the utility of function point software sizing techniques when applied to two levels of software requirements documentation in a commercial software development organisation. The goal of the research is to appraise the value (cost/benefit) which functional sizing techniques can bring to the project planning and management of software projects within a small-to-medium sized software development enterprise (SME).
   Method: Functional counts were made at the bid and detailed functional specification stages for each of five commercial projects used in the research. Three variants of the NESMA method were used to determine these function counts. Through a structured interview session, feedback on the sizing results was obtained to evaluate its feasibility and potential future contribution to the company.
   Results: The results of our research suggest there is value in performing size estimates at two appropriate stages in the software development lifecycle, with simplified methods providing the optimal return on effort expended.
   Conclusion: The 'Estimated NESMA' is the most appropriate tool for use in size estimation for the company studied. The use of software sizing provides a valuable contribution which would augment, but not replace, the company's existing cost estimation approach. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Wilkie, F. G.; McChesney, I. R.; Morrow, P.] Univ Ulster, Sch Comp & Math, Newtownabbey BT37 0QB, Antrim, North Ireland.
   [Tuxworth, C.] Equiniti ICS Ltd, Belfast BT3 9ED, Antrim, North Ireland.
   [Lester, N. G.] Univ Ulster, Informat Serv Directorate, Newtownabbey BT37 0QB, Antrim, North Ireland.
C3 Ulster University; Ulster University
RP Wilkie, FG (corresponding author), Univ Ulster, Sch Comp & Math, Newtownabbey BT37 0QB, Antrim, North Ireland.
EM fg.wilkie@ulster.ac.uk; ir.mcchesney@ulster.ac.uk;
   Morrow-P4@email.ulster.ac.uk; Charlie.Tuxworth@equiniti-ics.com;
   ng.lester@ulster.ac.uk
OI McChesney, Ian/0000-0002-5202-5360
FU Department for Employment and Learning
FX The research team gratefully acknowledges the access to staff and
   documentation, and participation of Equiniti-ICS in this project. The
   research team also gratefully acknowledges financial support from the
   Department for Employment and Learning.
CR Agrawal M, 2007, IEEE T SOFTWARE ENG, V33, P145, DOI 10.1109/TSE.2007.29
   Agresti William W., 2010, Journal of Software Engineering and Applications, V3, P1, DOI 10.4236/jsea.2010.31001
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], [No title captured]
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2006, 1414362006 ISOIEC
   [Anonymous], 2009, COSMIC METH V3 0 1 M
   [Anonymous], 2003, CMMI guidlines for process integration and product improvement
   Antoniol A., 1999, EMPIR SOFTW ENG, V4, P263
   Boehm BW., 1981, Software Engineering Economics
   Cândido EJD, 2004, WEBMEDIA & LA-WEB 2004, VOL 1, PROCEEDINGS, P98, DOI 10.1109/WEBMED.2004.1348154
   Daneva M., 2007, P INT C SOFTW PROC P, P6
   European Commission, 2003, OFFICIAL J EUROPEAN, V124, P36
   Gibson D., 2006, CMUSEI2006TR004
   International Function Point Users Group (IFPUG), 2010, FUNCT POINT COUNT PR
   *ISO IEC, 2002, 209682002 ISOIEC
   *ISO IEC, 2005, 245702005 ISOIEC
   JONES C, 1995, COMPUTER, V28, P87, DOI 10.1109/2.471193
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Keung J., 2009, P 20 AUSTR SOFTW ENG, P327, DOI DOI 10.1109/ASWEC.2009.32
   McConnell S., 2006, Software Estimation: Demystifying the Black Art
   MCFALL D, 2003, 16 INT C SOFTW SYST
   Molokken-Ostvold K., 2004, P 10 IEEE INT S SOFT
   Muzaffar Z, 2010, INFORM SOFTWARE TECH, V52, P92, DOI 10.1016/j.infsof.2009.08.001
   Nasir M., 2006, P 5 IEEE ACIS INT C, P38, DOI [10.1109/ICIS-COMSAR.2006.19, DOI 10.1109/10S-C0MSAR.2006.19]
   NESMA 2004, 2004, NESMA 2004 DEF COUNT
   Niazi M, 2009, INFORM SOFTWARE TECH, V51, P1231, DOI 10.1016/j.infsof.2009.03.001
   Nugroho A, 2009, INFORM SOFTWARE TECH, V51, P1670, DOI 10.1016/j.infsof.2009.04.007
   Ochodek M, 2011, INFORM SOFTWARE TECH, V53, P200, DOI 10.1016/j.infsof.2010.10.005
   Parkinson C.N., 1958, PARKINSONS LAW
   Royce W.W., 1970, P IEEE WESCON IEEE, P1
   van den Berg K., 2005, SMEF 2005 C P, P69
   Verner JM, 2005, IEEE SOFTWARE, V22, P86, DOI 10.1109/MS.2005.12
   Vogelezang F., 2005, P SOFTW MEAS FOR 16, P227
   Wilkie F. G., 2005, Software Process Improvement and Practice, V10, P189, DOI 10.1002/spip.223
   Yang D., 2008, P ESEM 08 9 10 OCT K
   Zivkovic A, 2005, INFORMATICA-LITHUAN, V16, P295
NR 39
TC 18
Z9 20
U1 1
U2 10
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2011
VL 53
IS 11
BP 1236
EP 1249
DI 10.1016/j.infsof.2011.05.008
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 820CQ
UT WOS:000294883500006
DA 2024-07-18
ER

PT J
AU Strembeck, M
   Mendling, J
AF Strembeck, Mark
   Mendling, Jan
TI Modeling process-related RBAC models with extended UML activity models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Process modeling; Role-based access control; Role engineering; Systems
   modeling; UML
ID SECURITY REQUIREMENTS; PATTERNS
AB Context: Business processes are an important source for the engineering of customized software systems and are constantly gaining attention in the area of software engineering as well as in the area of information and system security. While the need to integrate processes and role-based access control (RBAC) models has been repeatedly identified in research and practice, standard process modeling languages do not provide corresponding language elements.
   Objective: In this paper, we are concerned with the definition of an integrated approach for modeling processes and process-related RBAC models - including roles, role hierarchies, statically and dynamically mutual exclusive tasks, as well as binding of duty constraints on tasks.
   Method: We specify a formal metamodel for process-related RBAC models. Based on this formal model, we define a domain-specific extension for a standard modeling language.
   Results: Our formal metamodel is generic and can be used to extend arbitrary process modeling languages. To demonstrate our approach, we present a corresponding extension for UML2 activity models. The name of our extension is Business Activities. Moreover, we implemented a library and runtime engine that can manage Business Activity runtime models and enforce the different policies and constraints in a software system.
   Conclusion: The definition of process-related RBAC models at the modeling-level is an important prerequisite for the thorough implementation and enforcement of corresponding policies and constraints in a software system. We identified the need for modeling support of process-related RBAC models from our experience in real-world role engineering projects and case studies. The Business Activities approach presented in this paper is successfully applied in role engineering projects. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Strembeck, Mark] Vienna Univ Econ & Business WU Vienna, Inst Informat Syst, New Media Lab, Vienna, Austria.
   [Mendling, Jan] Humboldt Univ, Inst Informat Syst, D-1086 Berlin, Germany.
C3 Vienna University of Economics & Business; Humboldt University of Berlin
RP Strembeck, M (corresponding author), Augasse 2-6, A-1090 Vienna, Austria.
EM mark.strembeck@wu.ac.at; jan.mendling@wiwi.hu-berlin.de
OI Mendling, Jan/0000-0002-7260-524X
CR AHN G, 2000, ACM T INFORM SYSTEM, V3
   Ahn G. J., 2001, P 10 IEEE INT WORKSH
   ALAM M, 2008, J COMPUTER SECURITY, V16
   [Anonymous], 2006, MET FAC MOF COR SPEC
   [Anonymous], 2000, Production Workflow: Concepts and Techniques
   [Anonymous], 2003, ROLE BASED ACCESS CO
   [Anonymous], OBJ CONSTR LANG SPEC
   [Anonymous], 2005, Secure Systems Development with UML
   AXENATH B, 2006, DAGSTUHL SEMINAR P, V6291
   BASIN D, 2006, ACM T SOFTWARE ENG M, V15
   BECKER J, 2000, LECT NOTES COMPUTER, V1806
   BERTINO E, 1999, ACM T INFORM SYSTEM, V2
   BERTINO E, 2006, P IEEE INT C WEB SER
   BOTHA RA, 2001, IBM SYSTEMS J, V40
   BREU R, 2007, INT J SOFTWARE TOOLS, V9
   CANNON JC, 2006, ACM QUEUE, V4
   CLARK DD, 1987, P IEEE S SEC PRIV AP
   CORTADELLA J, 1998, IEEE T COMPUTERS, V47
   COYNE E, 2008, ROLE ENG ENTERPRISE
   CRAMPTON J, 2008, P 13 ACM S ACC CONTR
   DAMIANIDES M, 2004, J CORPORATE ACCOUNTI, V15
   Dijkman R.M., 2008, INFORM SOFTWARE TECH, V50
   EPSTEIN P, 1999, P 4 ACM WORKSH ROL B
   Eshuis R, 2004, IEEE T SOFTWARE ENG, V30, P437, DOI 10.1109/TSE.2004.33
   FERRAIOLO D, 1999, ACM T INFORM SYSTEM, V2
   Ferraiolo DF, 2007, ROLE BASED ACCESS CO
   FINK T, 2006, P 1 INT WORKSH VIEWS, V142, P161
   GALLAHER MP, 2002, 021 NIST
   Georgiadis C. K., 2001, ACM SACMAT
   IRWIN K, 2008, P 13 ACM S ACC CONTR
   ISO, 2009, 270002009 ISOIEC
   *ISO, 2008, 270022005 ISOIEC
   *ISO, 2008, 270012005 ISOIEC
   JURJENS J, 2005, P 10 INT C ENG COMPL
   JURJENS J, 2008, LECT NOTES COMPUTER, V5289
   Jurjens Jan, 2005, P 27 INT C SOFTW ENG
   Kim SK, 2005, LECT NOTES COMPUT SC, V3582, P448
   KINDLER E, 2006, DATA KNOWLEDGE ENG D, V56
   Koch Manuel., 2006, Software Systems Modeling, V5, P429, DOI DOI 10.1007/S10270-006-0030-Z
   Kunz S., 2010, P 18 EUR C INF SYST
   LANDWEHR CE, 1981, ACM COMPUTING SURVEY, V13
   Li NH, 2008, J ACM, V55, DOI 10.1145/1379759.1379760
   Li NH, 2007, ACM T INFORM SYST SE, V10, DOI 10.1145/1237500.1237501
   LOHMANN N, 2009, T PETRI NETS OTHER M, V2
   MENDLING J, 2007, LECT NOTES COMPUTER, V4495
   MENDLING J, 2004, P 13 IEEE INT WORKSH
   Mendling J, 2008, LECT NOTES BUS INF P, V6, P1
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   MISHRA S, 2007, COMMUNICATIONS ASS I, V20
   MURATA, 1989, P IEEE, V77
   NEUMANN G, 2002, P 7 ACM S ACC CONTR
   *NIST, 2009, SPEC PUBL NIST
   *NIST, 1995, SPEC PUBL NIST
   OH S, 2003, INFORM SYSTEMS, V28
   OMG, 2009, UN MOD LANG OMG UML
   OmgBpmn Business Process Modeling Notation (BPMN), 2009, BUS PROC MOD NOT BPM
   Ouyang C, 2009, ACM T SOFTW ENG METH, V19, DOI 10.1145/1555392.1555395
   PETERSON JL, 1977, COMPUT SURV, V9, P223, DOI 10.1145/356698.356702
   PETRI CA, 1962, P INF PROC C IFIP C
   Ray I., 2004, P 9 ACM S ACC CONTR
   Rodriguez A, 2006, LECT NOTES COMPUT SC, V4231, P32
   Rodríguez A, 2007, IEICE T INF SYST, VE90D, P745, DOI 10.1093/ietisy/e90-d.4.745
   Russell N, 2005, LECT NOTES COMPUT SC, V3520, P216
   Russell N., 2006, Workflow Control-Flow Patterns: A Revised View
   SANDHU R, 1994, IEEE COMMUNICATIONS, V32
   SANDHU R, 1996, IEEE COMPUTER, V29
   Scheer A.-W., 2000, ARIS BUSINESS PROCES
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   SHIN ME, 2000, P 9 IEEE INT WORKSH
   SOHR K, 2008, P 2008 ANN COMP SEC
   Sohr K, 2008, IEEE T KNOWL DATA EN, V20, P924, DOI 10.1109/TKDE.2008.28
   Spinellis D, 2001, J SYST SOFTWARE, V56, P91, DOI 10.1016/S0164-1212(00)00089-3
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   STOHR EA, 2001, INFORM SYSTEMS FRONT, V3
   Strembeck M., 2010, LECT NOTES COMPUTER, V6426
   STREMBECK M, 2004, P C SOFTW ENG SE 200
   STREMBECK M, 2005, P 3 S REQ ENG INF SE
   STREMBECK M, 2005, P IEEE INT WORKSH PO
   Strembeck M., 2004, ACM T INFORM SYSTEM, V7
   STREMBECK M, 2009, SOFTWARE PRACTICE EX, V39
   STREMBECK M, 2010, IEEE SECURITY PRIVAC, V8
   Tan K, 2004, P 17 IEEE WORKSH COM
   THOMAS R, 1997, P IFIP WG11 3 C DAT
   THOMAS RK, 1997, P ACM WORKSH ROL BAS
   VALMARI A, 1998, LECT NOTES COMPUTER, V1491
   van der Aalst WMP, 1999, INFORM SOFTWARE TECH, V41, P639, DOI 10.1016/S0950-5849(99)00016-6
   VANDERAALST WMP, 2005, INFORM SYSTEMS, V30
   VANHEE K, 2008, DATA KNOWLEDGE ENG D, V64
   WAINER J, 2003, INT J COOPERATIVE IN, V12
   WANG H, 2004, LECT NOTES COMPUTER, V3007
   WARNER J, 2006, P 11 ACM S ACC CONTR
   WOHED P, 2006, LECT NOTES COMPUTER, V4102
   WOLTER C, 2009, J SYSTEMS ARCHITECTU, V55
   Wolter C, 2007, LECT NOTES COMPUT SC, V4714, P64
   ZDUN U, 2006, LECT NOTES COMPUTER, V4089
   ZDUN U, 2006, PATTERN LANGUAGES PR, V5
   ZDUN U, 2009, P 14 EUR C PATT LANG
   [No title captured]
NR 101
TC 62
Z9 63
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2011
VL 53
IS 5
SI SI
BP 456
EP 483
DI 10.1016/j.infsof.2010.11.015
PG 28
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 742DI
UT WOS:000288919900004
DA 2024-07-18
ER

PT J
AU Muñoz, L
   Mazón, JN
   Trujillo, J
AF Munoz, Lilia
   Mazon, Jose-Norberto
   Trujillo, Juan
TI A family of experiments to validate measures for UML activity diagrams
   of ETL processes in data warehouses
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE ETL processes; Measure validation; Activity diagrams; Empirical software
   engineering; Data warehouse conceptual modeling; Quality
ID DESIGN
AB In data warehousing, Extract, Transform, and Load (ETL) processes are in charge of extracting the data from the data sources that will be contained in the data warehouse. Their design and maintenance is thus a cornerstone in any data warehouse development project. Due to their relevance, the quality of these processes should be formally assessed early in the development in order to avoid populating the data warehouse with incorrect data. To this end, this paper presents a set of measures with which to evaluate the structural complexity of ETL process models at the conceptual level. This study is, moreover, accompanied by the application of formal frameworks and a family of experiments whose aim is to theoretical and empirically validate the proposed measures, respectively. Our experiments show that the use of these measures can aid designers to predict the effort associated with the maintenance tasks of ETL processes and to make ETL process models more usable. Our work is based on Unified Modeling Language (UML) activity diagrams for modeling ETL processes, and on the Framework for the Modeling and Evaluation of Software Processes (FMESP) framework for the definition and validation of the measures. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Munoz, Lilia] Technol Univ Panama, Dept Informat Syst Control Evaluat & Comp Resourc, Lucentia Res Grp, Panama City, Panama.
   [Mazon, Jose-Norberto; Trujillo, Juan] Univ Alicante, Dept Software & Comp Syst, Lucentia Res Grp, San Vicente Del Raspeig 03080, Spain.
C3 Universidad Tecnologica de Panama; Universitat d'Alacant
RP Muñoz, L (corresponding author), Technol Univ Panama, Dept Informat Syst Control Evaluat & Comp Resourc, Lucentia Res Grp, POB 0819-07289, Panama City, Panama.
EM lilia.munoz@utp.ac.pa; jnmazon@dlsi.ua.es; jtrujillo@dlsi.ua.es
RI Mazón, Jose-Norberto/AAA-9817-2019; Trujillo, Juan/L-7079-2014
OI Mazón, Jose-Norberto/0000-0001-7924-0880; Trujillo,
   Juan/0000-0003-0139-6724
FU MESOLAP of the Office of Education and Science of Spain [TIN2010-14860];
   QUASIMODO of the Office of Education and Science of Castilla-La Mancha,
   Spain [PAC08-0157-0668]; National Secretary of Science, Technology and
   Innovation (SENACYT); Institute for the Formation and Advantage of Human
   Resources (IFARHU), of the Republic of Panama
FX This work is financed by the following projects: MESOLAP (TIN2010-14860)
   of the Office of Education and Science of Spain and QUASIMODO
   (PAC08-0157-0668) of the Office of Education and Science of Castilla-La
   Mancha, Spain. Lilia Munoz has a scholarship of the National Secretary
   of Science, Technology and Innovation (SENACYT) and the Institute for
   the Formation and Advantage of Human Resources (IFARHU), of the Republic
   of Panama. We would like to express our gratitude to Jesus Pardillo for
   his fruitfully discussions about the preliminary versions of this paper.
CR [Anonymous], 1996, ISERN9610 U STRATHCL
   [Anonymous], P 6 INT C EMP ASS SO
   [Anonymous], 2008, OMG
   [Anonymous], 1949, MATH MODEL COMMUNICA
   [Anonymous], 1995, ISERN9503
   BALTA M, 1978, USING SHANNON ENTROP, P151
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Berenguer G, 2005, LECT NOTES COMPUT SC, V3589, P95, DOI 10.1007/11546849_10
   Briand L., 1999, EMPIR SOFTW ENG, V4, P387
   Briand L., 1998, International Software Engineering Research Network technical report ISERN-98-29
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Carver J, 2003, LECT NOTES COMPUT SC, V2765, P81
   GARCIA F, 2004, DIAB04022 UCLM COMP
   Garcia F, 2006, J SYST ARCHITECT, V52, P627, DOI 10.1016/j.sysarc.2006.06.007
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Inmon W. H, 1992, BUILDING DATA WAREHO
   *ISOIEC, 2001, 91261 ISOIEC
   Jarke M., 2002, Fundamentals of Data Warehouses
   Kim J, 2000, INFORM SYST RES, V11, P284, DOI 10.1287/isre.11.3.284.12206
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Luján-Mora S, 2004, LECT NOTES COMPUT SC, V3288, P191
   March ST, 2007, DECIS SUPPORT SYST, V43, P1031, DOI 10.1016/j.dss.2005.05.029
   Mazón JN, 2008, DECIS SUPPORT SYST, V45, P41, DOI 10.1016/j.dss.2006.12.003
   Mazón JN, 2007, DATA KNOWL ENG, V63, P725, DOI 10.1016/j.datak.2007.04.004
   Munoz L, 2008, LECT NOTES COMPUT SC, V5333, P44
   *OBJ MAN GROUP, 2002, UN MOD LANG SUP VERS
   *OMG, 2003, MDA GUID DRAFT VERS
   PAPASTEFANATOS G, 2008, 27 INT C CONC MOD ER
   PARDILLO J, 2008, 10 INT C DAT WAR KNO
   Poels G, 2000, INFORM SOFTWARE TECH, V42, P35, DOI 10.1016/S0950-5849(99)00053-1
   POELS G, 1999, 9937 KATH U LEUV DEP
   PRAT N, 2003, 15 INT C ADV INF SYS
   Romero R, 2009, ENCY DATABASE SYSTEM, P2230
   SERRANO M, 2004, SOFTWARE AUDIT METRI, P105
   Serrano M, 2007, INFORM SOFTWARE TECH, V49, P851, DOI 10.1016/j.infsof.2006.09.008
   SHAH F, 2005, DM REV MAGAZINE
   Shilakes C., 1998, Enterprise Information Portals
   Simitsis A, 2005, IEEE T KNOWL DATA EN, V17, P1404, DOI 10.1109/TKDE.2005.169
   SIMITSIS A, 2003, 15 INT C ADV INF SYS
   Solomon MD, 2005, INFORM SYST MANAGE, V22, P26, DOI 10.1201/1078/44912.22.1.20051201/85736.4
   STRANGE K, 2002, CS153143 GARTN
   Suppes P., 1989, Foundations of Measurement, V2
   TRUJILLO J, 2003, 22 INT C CONC MOD ER
   Vassiliadis P, 2001, INFORM SYST, V26, P537, DOI 10.1016/S0306-4379(01)00039-4
   VASSILIADIS P, 2005, 24 INT C CONC MOD ER
   VASSILIADIS P, 2002, 4 INT WORKSH DES MAN
   Vassiliadis P., 2002, ACM 5 INT WORKSH DAT
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   Whitmire ScottA., 1997, OBJECT ORIENTED DESI
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zuse Horst., 1998, A framework of software measurement
NR 52
TC 18
Z9 18
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2010
VL 52
IS 11
SI SI
BP 1188
EP 1203
DI 10.1016/j.infsof.2010.06.003
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 663RL
UT WOS:000282905700004
DA 2024-07-18
ER

PT J
AU van de Weerd, I
   Brinkkemper, S
   Versendaal, J
AF van de Weerd, Inge
   Brinkkemper, Sjaak
   Versendaal, Johan
TI Incremental method evolution in global software product management: A
   retrospective case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software product management; Requirements management; Method
   engineering; Meta-modeling; Incremental method evolution; Distributed
   development
ID REQUIREMENTS MANAGEMENT
AB Company growth in a global setting causes challenges in the adaptation and maintenance of an organization's methods. In this paper, we will analyze incremental method evolution in software product management in a global environment. We validate a method increment approach, based on method engineering principles, by applying it to a retrospective case study conducted at a large ERP vendor. The results show that the method increment types cover all increments that were found in the case study. Also, we identified the following lessons learned for company growth in a global software product management context: method increment drivers, such as the change of business strategy, vary during evolution; a shared infrastructure is critical for rollout; small increments facilitate gradual process improvement; and global involvement is critical. We then claim that method increments enable software companies to accommodate evolutionary adaptations of development process in agreement with the overall company expansion. (C) 2010 Elsevier B.V. All rights reserved.
C1 [van de Weerd, Inge] Univ Utrecht, Dept Informat & Comp Sci, Inst Informat & Comp Sci, NL-3508 TB Utrecht, Netherlands.
C3 Utrecht University
RP van de Weerd, I (corresponding author), Univ Utrecht, Dept Informat & Comp Sci, Inst Informat & Comp Sci, POB 80-089, NL-3508 TB Utrecht, Netherlands.
EM i.vandeweerd@cs.uu.nl; s.brinkkemper@cs.uu.nl; j.versendaal@cs.uu.nl
RI Brinkkemper, Sjaak/H-9931-2014; van de Weerd, Inge/I-8095-2017
OI Brinkkemper, Sjaak/0000-0002-2977-8911; van de Weerd,
   Inge/0000-0003-3420-6923
CR Ahn YW, 2003, INT J SOFTW ENG KNOW, V13, P293, DOI 10.1142/S0218194003001305
   [Anonymous], 1995, The Capability Maturity Model: Guidelines for Improving the Software Process
   [Anonymous], 2004, The business of software: What every manager, programmer, and entrepreneur must know to thrive and survive in good times and bad
   BANDINELLI SC, 1993, IEEE T SOFTWARE ENG, V19, P1128, DOI 10.1109/32.249659
   BEKKERS W, 2008, P 21 INT WORKSH PROD
   Brinkkemper S, 2000, INFORMATION SYSTEMS ENGINEERING, P123
   Bryson R., 1997, Entrepreneurship Regional Development, V9, P93, DOI DOI 10.1080/08985629700000005
   Conchuir Eoin O, 2009, Software Process: Improvement and Practice, V14, P201, DOI 10.1002/spip.417
   Cusumano M.A., 1995, Microsoft secrets how the world's most powerful software company creates technology, shapes markets, and manages people
   Dag JNO, 2005, IEEE SOFTWARE, V22, P32, DOI 10.1109/MS.2005.1
   Debou C., 2000, Software Process Improvement and Practice, V5, P55, DOI 10.1002/(SICI)1099-1670(200003)5:1<55::AID-SPIP111>3.0.CO;2-X
   Ebert C, 2007, J SYST SOFTWARE, V80, P850, DOI 10.1016/j.jss.2006.09.017
   ELEMAM K, 1998, SPICE THEORY PRACTIC
   Krzanik L, 1997, EIGHTH IEEE INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE INCORPORATING COMPUTER AIDED SOFTWARE ENGINEERING, PROCEEDINGS, P76, DOI 10.1109/STEP.1997.615466
   KWESTEL M., 1998, The road to success: how to manage growth
   LEARY MR, 1982, PERS SOC PSYCHOL B, V8, P257, DOI 10.1177/0146167282082012
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   NEJMEH BA, 2005, LNCS, P302
   NGUYEN MN, 1996, LECT NOTES COMPUTER, V1149, P18
   *OBJ MAN GROUP, 2004, UML 2 0 SUP SPEC
   Ocampo A, 2006, LECT NOTES COMPUT SC, V3966, P334
   Rainer A, 2002, J SYST SOFTWARE, V62, P71, DOI 10.1016/S0164-1212(01)00122-4
   Richardson I, 2001, SOFTWARE QUALITY PRO, V3, P23
   Rossi M., 2004, Journal of the Association for Information Systems, V5, P356
   Saeki M, 2003, LECT NOTES COMPUT SC, V2681, P374
   *SEI, 2002, PROC MAT PROH SOFTW
   Stalk G., 2001, UNDERSTANDING BUSINE, P42
   Stelzer D., 1998, Software Process Improvement and Practice, V4, P227, DOI 10.1002/(SICI)1099-1670(199812)4:4<227::AID-SPIP106>3.0.CO;2-1
   van de Weerd I., 2006, Software Process Improvement and Practice, V11, P521, DOI 10.1002/spip.294
   van de Weerd I, 2007, LECT NOTES COMPUT SC, V4495, P469
   VANDEWEERD I, 2006, P 12 WORK C REQ ENG, P97
   VANDEWEERD I, 1994, UUCS2006057
   VANDEWEERD I, 2006, P 14 INT REQ ENG C M, P312
   VISE DA, 2005, UNDERSTANDING BUSINE
   von Krogh G, 2001, MIT SLOAN MANAGE REV, V42, P53
   Xu L, 2007, EUR J INFORM SYST, V16, P531, DOI 10.1057/palgrave.ejis.3000703
   Yin R.K., 2011, Qualitative research from start to finish
NR 37
TC 14
Z9 14
U1 0
U2 10
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2010
VL 52
IS 7
BP 720
EP 732
DI 10.1016/j.infsof.2010.03.002
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 605JA
UT WOS:000278342600002
DA 2024-07-18
ER

PT J
AU Becker, C
   Rauber, A
AF Becker, Christoph
   Rauber, Andreas
TI Improving component selection and monitoring with controlled
   experimentation and automated measurements
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software evaluation; Component selection; COTS; Trust management;
   Software measurement; Multi-criteria decision making
ID DIGITAL PRESERVATION; SOFTWARE; DECISION; SERVICES; OBJECTS; SYSTEM
AB Context: A number of approaches have been proposed for the general problem of software component evaluation and selection. Most approaches come from the field of Component-Based Software Development (CBSD), tackle the problem of Commercial-off-the-shelf component selection and use goal-oriented requirements modelling and multi-criteria decision making techniques. Evaluation of the suitability of components is carried out largely manually and partly relies on subjective judgement. However, in dynamic, distributed environments with high demands for transparent selection processes leading to trustworthy, auditable decisions, subjective judgements and vendor claims are not considered sufficient. Furthermore, continuous monitoring and re-evaluation of components after integration is sometimes needed. Objective: This paper describes how an evidence-based approach to component evaluation can improve repeatability and reproducibility of component selection under the following conditions: (1) Functional homogeneity of candidate components and (2) High number of components and selection problem instances.
   Method: Our evaluation and selection method and tool empirically evaluate candidate components in controlled experiments by applying automated measurements. By analysing the differences to system-development-oriented scenarios, the paper shows how the process of utility analysis can be tailored to fit the problem space, and describes a method geared towards automated evaluation in an empirical setting. We describe tool support and a framework for automated measurements.
   We further present a taxonomy of decision criteria for the described scenario and discuss the data collection means needed for each category of criteria.
   Results: To evaluate our approach, we discuss a series of case studies in the area of digital preservation. We analyse the criteria defined in these case studies, classify them according to the taxonomy, and discuss the quantitative coverage of automated measurements.
   Conclusion: The results of the analysis show that an automated measurement, evaluation and selection framework is necessary and feasible to ensure trusted and repeatable decisions. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Becker, Christoph; Rauber, Andreas] Vienna Univ Technol, Inst Software Technol & Interact Syst, A-1040 Vienna, Austria.
C3 Technische Universitat Wien
RP Becker, C (corresponding author), Vienna Univ Technol, Inst Software Technol & Interact Syst, Favoritenstr 9-11-188, A-1040 Vienna, Austria.
EM becker@ifs.tuwien.ac.at; rauber@ifs.tuwien.ac.at
FU European Union [033789]
FX Part of this work was supported by the European Union in the 6th
   Framework Program, IST, through the PLANETS project, Contract 033789.
CR Alves C, 2003, LECT NOTES COMPUT SC, V2693, P21
   Alves Carina, 2001, 15 BRAZ S SOFTW ENG
   [Anonymous], P 40 ANN HAW INT C S
   [Anonymous], 147212003 ISO
   [Anonymous], GUID PRES DIG HER
   [Anonymous], LIFE2 FINAL PROJECT
   [Anonymous], 2009, STANFORD ENCY PHILOS
   [Anonymous], 1999, 1459811999 ISOIEC
   Baker P, 2006, PROC IEEE INT CONF S, P176
   BECKER C, 2009, LNCS, V5648
   BECKER C, 2007, P 9 RUSS C DIG LIB R
   BECKER C, 2008, P 8 ACM IEEE JOINT C
   Becker C., 2009, INT J DIGITAL LI DEC
   Becker C, 2008, LECT NOTES COMPUT SC, V5173, P25
   Becker C, 2009, LECT NOTES COMPUT SC, V5714, P39, DOI 10.1007/978-3-642-04346-8_6
   Becker C, 2008, J UNIVERS COMPUT SCI, V14, P2936
   Blaze M, 2009, COMPUTER, V42, P44, DOI 10.1109/MC.2009.51
   Carvallo JP, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P638
   Carvallo JP, 2007, IEEE SOFTWARE, V24, P84, DOI 10.1109/MS.2007.70
   CECHICH A, 2003, COMPONENT BASED SOFT
   Cortellessa V, 2008, J UNIVERS COMPUT SCI, V14, P1228
   DAPPERT A, 2009, P 13 EUR C DIG LIB E
   Doddington G., 2002, P 2 INT C HUM LANG T, P138
   Dustdar S., 2005, International Journal of Web and Grid Services, V1, P1, DOI 10.1504/IJWGS.2005.007545
   Erradi A, 2007, ECOWS 07: PROCEEDING OF THE 5TH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P99, DOI 10.1109/ECOWS.2007.31
   Ferreira M, 2007, INT J DIGIT LIBRARIE, V6, P295, DOI 10.1007/s00799-007-0013-x
   Franch X, 2003, IEEE SOFTWARE, V20, P34, DOI 10.1109/MS.2003.1159027
   GARLAN D, 1995, PROC INT CONF SOFTW, P179, DOI 10.1145/225014.225031
   Garlan D, 2009, IEEE SOFTWARE, V26, P66, DOI 10.1109/MS.2009.86
   Gilliland-Swetland Anne J., 2000, D-Lib Magazine, V6
   Grau G, 2004, EUROMICRO CONF PROC, P118, DOI 10.1109/EURMIC.2004.1333363
   GUTTENBRUNNER M, 2008, P 5 INT C PRES DIG O
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Hunter J, 2006, INT J DIGIT LIBRARIE, V6, P174, DOI 10.1007/s00799-005-0134-z
   Hutchins John, 2009, COMPENDIUM TRANSLATI
   *ISO, 159392007 ISOIEC
   *ISO, 2004, 190051 ISOCD
   *ISO, 2007, 250202007 ISOIEC
   ISO, 2001, Stan-dard ISO/IEC 9126-1
   *ISO, 2006, 263002006 ISOIEC
   ISO (International Standards Organisation), 2001, 1548912001 ISO
   Jadhav AS, 2009, INFORM SOFTWARE TECH, V51, P555, DOI 10.1016/j.infsof.2008.09.003
   Keller A., 2003, Journal of Network and Systems Management, V11, P57, DOI 10.1023/A:1022445108617
   KING R, 2009, P 13 EUR C DIG LIB E
   Kontio J., 1995, OTSO SYSTEMATIC PROC
   KONTIO J, 1996, P ICSE, V18, P201
   KULOVITS H, 2009, D LIB MAGAZINE, V15
   Lita Lucian Vlad, 2005, P C HUM LANG TECHN E, P740
   Maiden NA, 1998, IEEE SOFTWARE, V15, P46, DOI 10.1109/52.663784
   Maximilien E.M., 2004, 2 INT C SERVICE ORIE, P212
   Menascé DA, 2002, IEEE INTERNET COMPUT, V6, P72, DOI 10.1109/MIC.2002.1067740
   Mohamed A, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P103
   *NAT ARCH UK PRONO, 2008, TECHN REG
   NCUBE C, 2002, LNCS, V2255, P176
   NEIL CN, 1999, DEV PARADIGM, P1
   NEUMAYER R, 2007, DEV OPEN TESTBED DIG
   OCHS M, 2001, P 7 INT SOFTW METR S, P285
   OCHS M, 2000, P ESCOM SCOPE 2000, P343
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Perini A, 2009, INFORM SOFTWARE TECH, V51, P1021, DOI 10.1016/j.infsof.2008.12.001
   Quer C, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P457, DOI 10.1109/RE.2005.22
   QUER C, 2006, P 14 IEEE INT REQ EN, P358
   Ran S., 2003, ACM SIGECOM EXCHANGE, V4, P1, DOI DOI 10.1145/844357.844360
   ROSS S, 2006, D LIB MAGAZINE, V12
   Roth R.F., 1994, J COMPUT-AIDED MATER, V1, P325, DOI DOI 10.1007/BF00712855
   ROTHENBERG J, 1999, CARRYING AUTHENTIC U
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   SCHMIDT R, 2009, P 6 INT C PRES DIG O
   SINCLAIR P, 2009, P 6 INT C PRES DIG O
   Skogsrud H, 2009, COMPUTER, V42, P54, DOI 10.1109/MC.2009.56
   STRODL S, 2009, HDB RES DIGITAL LIB
   Strodl S, 2007, ACM-IEEE J CONF DIG, P29, DOI 10.1145/1255175.1255181
   TERZIS S, 2009, IEEE COMPUTING N APR
   Tian M, 2004, IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE (WI 2004), PROCEEDINGS, P152, DOI 10.1109/WI.2004.10084
   *TRAC, 2007, CRIT CHECKL
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   Vijayalakshmi K., 2008, International Journal of Information Systems and Change Management, V3, P63, DOI 10.1504/IJISCM.2008.019289
   Weirich P., 2001, Decision Space: Multidimensional Utility Analysis, DOI DOI 10.1017/CBO9780511498602
   Yang Y, 2005, IEEE SOFTWARE, V22, P54, DOI 10.1109/MS.2005.112
NR 79
TC 15
Z9 16
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2010
VL 52
IS 6
BP 641
EP 655
DI 10.1016/j.infsof.2010.02.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 602PE
UT WOS:000278150500005
OA Green Published
DA 2024-07-18
ER

PT J
AU García-Magariño, I
   Fuentes-Fernández, R
   Gómez-Sanz, JJ
AF Garcia-Magarino, Ivan
   Fuentes-Fernandez, Ruben
   Gomez-Sanz, Jorge J.
TI Guideline for the definition of EMF metamodels using an
   Entity-Relationship approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model-Driven Development; Metamodels; Entity-Relationship; Eclipse
   Modeling Framework; ECore
ID SYSTEMS; VIEW
AB Metamodels are a formalism for defining the abstract syntax of modeling languages. However, designing a suitable metamodel from the features intended for the language is not a trivial task. This paper presents a guideline for defining such metamodels using an Entity-Relationship approach in the Eclipse Modeling Framework. This guideline proposes to begin by determining the structural features of the language, such as types of relationships and elements with attributes. Subsequently, it offers alternative representations for these features aimed at satisfying different requirements, such as changeability or optimized model processing. Two case studies illustrate the use of the guideline and its trade-offs. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Garcia-Magarino, Ivan; Fuentes-Fernandez, Ruben; Gomez-Sanz, Jorge J.] Univ Complutense, Fac Informat, Dept Software Engn & Artificial Intelligence, E-28040 Madrid, Spain.
C3 Complutense University of Madrid
RP García-Magariño, I (corresponding author), Univ Complutense, Fac Informat, Dept Software Engn & Artificial Intelligence, E-28040 Madrid, Spain.
EM ivan_gmg@fdi.ucm.es; ruben@fdi.ucm.es; jjgomez@sip.ucm.es
RI SANZ, JORGE JESUS GOMEZ/L-4398-2014; Garcia-Magarino, Ivan/C-9189-2011;
   Fuentes-Fernandez, Ruben/K-6523-2014
OI Garcia-Magarino, Ivan/0000-0002-2726-6760; Fuentes-Fernandez,
   Ruben/0000-0001-6876-0979; Gomez-Sanz, Jorge/0000-0003-4534-378X
FU Spanish Council for Science and Technology [TIN2005-08501-C03-01,
   FIT-360000-2007-23, TIN2007-68125-C02-01]; Comunidad de Madrid
   [CCG07-UCM/TIC-2765]; Universidad Complutense de Madrid [921354]
FX This work has been funded by the Spanish Council for Science and
   Technology under grants TIN2005-08501-C03-01, FIT-360000-2007-23 and
   TIN2007-68125-C02-01, the Direccion General de Universidades e
   Investigacion de la Consejeria de Educacion of the Comunidad de Madrid
   (grant CCG07-UCM/TIC-2765), and the Universidad Complutense de Madrid
   (Research Group 921354).
CR *ADM TASK FORC, 2007, ADM STAND ROADM
   *ADM TASK FORC, 2007, ARCH DRIV MOD TRANSF
   Amyot D, 2006, LECT NOTES COMPUT SC, V4320, P183
   [Anonymous], 2003, COMM WAR MET CWM SPE
   [Anonymous], P OOPSLA WORKSH ECL
   [Anonymous], 1999, XSL TRANSF XSLT VERS
   [Anonymous], MULTIAGENT SYSTEMS M
   [Anonymous], 2004, W3C RECOMMENDATION 1
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   AUFAUREPORTIER MA, 1995, J VISUAL LANG COMPUT, V6, P167, DOI 10.1006/jvlc.1995.1009
   Bauer B, 2005, ENG APPL ARTIF INTEL, V18, P141, DOI 10.1016/j.engappai.2004.11.016
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Bodeveix JP, 2005, ELECTRON NOTES THEOR, V141, P153, DOI 10.1016/j.entcs.2005.05.008
   Brinkkemper S, 1999, INFORM SYST, V24, P209, DOI 10.1016/S0306-4379(99)00016-2
   Budinsky F., 2003, Eclipse Modelling Framework: Developer's Guide
   Chang SK, 1997, IEEE VISLANG, P110, DOI 10.1109/VL.1997.626565
   Cossentino M, 2005, RTICARPA0515
   Costagliola G, 2002, J VISUAL LANG COMPUT, V13, P573, DOI 10.1006/S1045-926X(02)00025-3
   Evans J, 2003, OCEAN SCI TECHNOL, V2, P1
   FAUCHER C, 2007, P 8 INT S GIS COMP M, P424
   Fondement F, 2005, LECT NOTES COMPUT SC, V3748, P190
   Gascuena JM, 2007, LECT NOTES COMPUT SC, V4528, P541
   Gomez-Sanz J.J., 2008, Proceedings of the 7th International Joint Conference on Autonomous Agents and Multiagent Systems: demo papers, P1675, DOI DOI 10.1145/1402744.1402760
   GOMEZSANZ JJ, 2007, INFOCOMP J COMPU FEB, P26
   *GROUP RES AG, 2008, SOFTW ENG APPL GRASI
   KAPPEL G, 2007, P WORKSH DAT BUS TEC, P1
   Kappel G, 2006, LECT NOTES COMPUT SC, V4199, P528
   Kelly S, 1996, LECT NOTES COMPUT SC, V1080, P1
   KERN H, 2007, P 7 OOPSLA WORKSH DO, P1
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Leroux D, 2006, IBM SYST J, V45, P555, DOI 10.1147/sj.453.0555
   McQuillan JA, 2007, LECT NOTES COMPUT SC, V4364, P217
   *OBJ MAN GROUP, 2007, OMG UN MOD LANG OMG
   *OBJ MAN GROUP, 2004, MET OBJ FAC MOF SPEC
   *OBJ MAN GROUP, 2008, ARCH DRIV MOD ADM KN
   Object Management Group, 2006, MET OBJ FAC MOF COR
   Object Management Group, 2008, SOFTW SYST PROC ENG
   Pan Y, 2006, LECT NOTES COMPUT SC, V4244, P57
   PARSONS J, 2004, P 1 AS PAC C CONC MO, V31, P101
   Pavon J., 2005, Agent-oriented Methodologies, P236
   REINAQUINTERO AM, 2007, ELECT NOTES THEORETI, V163, P29
   Sotor JZ, 2006, ICTON 2006: 8TH INTERNATIONAL CONFERENCE ON TRANSPARENT OPTICAL NETWORKS, VOL 4, PROCEEDINGS, P167
   Süss JG, 2006, LECT NOTES COMPUT SC, V4199, P291
   Tombelle C, 2006, LECT NOTES COMPUT SC, V4199, P395
   Tran H, 2008, LECT NOTES COMPUT SC, V5030, P233, DOI 10.1007/978-3-540-68073-4_23
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   VEPA E, 2006, P MOD SIZ METR WORKS, P1
   Wagner G, 2003, INFORM SYST, V28, P475, DOI 10.1016/S0306-4379(02)00027-3
NR 48
TC 10
Z9 10
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2009
VL 51
IS 8
BP 1217
EP 1230
DI 10.1016/j.infsof.2009.02.003
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 464KT
UT WOS:000267504500002
DA 2024-07-18
ER

PT J
AU Ran, LH
   Dyreson, C
   Andrews, A
   Bryce, R
   Mallery, C
AF Ran, Lihua
   Dyreson, Curtis
   Andrews, Anneliese
   Bryce, Renee
   Mallery, Christopher
TI Building test cases and oracles to automate the testing of web database
   applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Database modification; Web applications; Functional
   testing
AB Many organizations rely on web applications that use back-end databases to store important data. Testing such applications requires significant effort. Manual testing alone is often impractical, so testers also rely on automated testing techniques. However, current automated testing techniques may produce false positives (or false negatives) even in a perfectly working system because the outcome of a test case depends on the state of the database which changes over time as data is inserted and deleted. The Automatic Database Tester (AutoDBT) generates functional test cases that account for database updates. AutoDBT takes as input a model of the application and a set of testing criteria. The model consists of a state transition diagram that shows how users navigate pages, a data specification that captures how data flows, and an update specification that shows how the database is updated. AutoDBT generates guard queries to determine whether the database is in a state conducive to performing and evaluating tests. AutoDBT also generates partial oracles to help validate whether a back-end database is updated correctly during testing. This paper describes the design of AutoDBT, a prototype implementation, several experiments with the prototype, and four case studies. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Dyreson, Curtis; Bryce, Renee] Utah State Univ, Dept Comp Sci, Logan, UT 84321 USA.
   [Ran, Lihua] Schweitzer Engn Labs, Pullman, WA USA.
   [Andrews, Anneliese] Univ Denver, Dept Comp Sci, Denver, CO 80208 USA.
   [Mallery, Christopher] Washington State Univ, Sch Elect Engn & Comp Sci, Pullman, WA 99164 USA.
C3 Utah System of Higher Education; Utah State University; Schweitzer
   Engineering Laboratories, Inc.; University of Denver; Washington State
   University
RP Dyreson, C (corresponding author), Utah State Univ, Dept Comp Sci, Logan, UT 84321 USA.
EM Curtis.Dyreson@usu.edu
OI Dyreson, Curtis/0000-0003-0236-1515
CR ALSHAHWAN N, VERIFICATIO IN PRESS
   Andrews A, 2005, SOFTWARE SYSTEMS MOD, V4, P326, DOI DOI 10.1007/S10270-004-0077-7
   Beizer B., 1995, BLACK BOX TESTING
   Beltrami E., 1977, Models for public systems analysis
   BENEDIKT M, 2002, P 11 INT WORLD WID W, P654
   BODIN L, 1983, MODULES APPL MATH, V3, P76
   CHAYS D, 2000, P INT S SOFTW TEST A, P147
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   DENG Y, 2004, WORKSH TEST AN VER W
   Di Lucca GA, 2002, PROC IEEE INT CONF S, P310, DOI 10.1109/ICSM.2002.1167787
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P187, DOI 10.1109/TSE.2005.36
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   Gray J., 1994, PROC ACM SIGMOD, P243, DOI DOI 10.1145/191839.191886
   HALFOND WGJ, 2007, ESEC FSE 07, P145
   Hower Rick., 2002, Web site test tools and site management tools
   HSU CL, 1999, 4 INT S AUT DEC SYST, P338
   Jia X., 2002, Proceedings of the 6th IASTED International Conference on Software Engineering and Applications (SEA 2002), P280
   KAPFHAMMER GM, 2003, P 9 EUR SOFTW ENG C, P98
   KUNG D, 2000, P 12 INT C SOFTW ENG, P302
   Kung DC, 2000, P INT COMP SOFTW APP, V24, P537, DOI 10.1109/CMPSAC.2000.884778
   Lee SJ, 2001, DNA SEQUENCE, V12, P209, DOI 10.3109/10425170109080777
   Liu CH, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P84, DOI 10.1109/ISSRE.2000.885863
   NYMAN N, 1998, P STAT W
   Offutt J, 1999, LECT NOTES COMPUT SC, V1723, P416
   Offutt J, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P187, DOI 10.1109/ISSRE.2004.13
   OFUTT J, 2003, J SOFTWARE TESTING V, V12, P25
   Ran LH, 2004, LECT NOTES COMPUT SC, V3306, P181
   Ricca F, 2001, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2001.919078
   SAMPATH S, 2008, INT C SOFTW TEST VER
   Sampath S, 2007, IEEE T SOFTWARE ENG, V33, P643, DOI 10.1109/TSE.2007.70723
   Slutz D., 1998, Proceedings of the Twenty-Fourth International Conference on Very-Large Databases, P618
   Sprenkle S, 2005, PROC IEEE INT CONF S, P587
   Sprenkle S, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P117, DOI 10.1109/ISSRE.2007.26
   *T PROC PERF COUNC, 1998, TPC BENCHM C
   WHITTAKER JA, 1994, IEEE T SOFTWARE ENG, V20, P812, DOI 10.1109/32.328991
   WILLMOR D, 2006, P 28 INT C SOFTW ENG, P102
   YANG J, 1999, 1 AS PAC C QUAL SOFT, P122
   Yang JT, 2002, J INF SCI ENG, V18, P59
NR 38
TC 21
Z9 26
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 460
EP 477
DI 10.1016/j.infsof.2008.05.016
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 386YX
UT WOS:000261919900017
DA 2024-07-18
ER

PT J
AU Choi, K
   Bae, DH
AF Choi, KeungSik
   Bae, Doo-Hwan
TI Dynamic project performance estimation by combining static estimation
   models with system dynamics
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Dynamic software process simulation; System dynamics; Estimation model
   integration; Dynamic project performance estimation; Expert judgment
   technique
ID SOFTWARE PROCESS SIMULATION; MANAGEMENT; IMPACT
AB Changes in user requirements or project personnel occur frequently during project execution particularly in long-term and large-size projects. We need a tool which can estimate the effects of changing conditions to effectively manage the project.
   This paper proposes a simulation method for dynamic project performance in terms of effort, schedule, and defect density changes in a dynamic project environment by combining COCOMO II with system dynamics. We apply expert judgment technique to overcome the lack of empirical data on the effects of dynamic project environment. We develop a simulation tool (available on the authors' website) which has model adjustment parameters to reflect experts estimation on project characteristics. The simulation experiment on a military application development project demonstrates that the developed model can show the behavioral characteristics of a project suffering unanticipated and uncontrolled requirements creep. This helps project managers understand interactions between project factors and proactively evaluate and control the effects of dynamic project environment. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Choi, KeungSik; Bae, Doo-Hwan] Korea Adv Inst Sci & Technol, Dept EECS, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Choi, K (corresponding author), Korea Adv Inst Sci & Technol, Dept EECS, 373-1 Guseang Dong, Taejon 305701, South Korea.
EM kschoi@se.kaist.ac.kr; bae@se.kaist.ac.kr
RI Bae, Doo-Hwan/C-1538-2011
FU MKE (Ministry of Knowledge Economy), Korea
   [IITA-2007-(C1090-0701-0032)]; Defense Acquisition Program
   Administration and Agency for Defense Development
FX This research was supported by the MKE (Ministry of Knowledge Economy),
   Korea, under the ITRC (information Technology Research Center) support
   program supervised by the IITA(Institute of Information Technology
   Advancement) (IITA-2007-(C1090-0701-0032)). This work was partially
   supported by Defense Acquisition Program Administration and Agency for
   Defense Development under the contract.
CR Abdel-Hamid T., 1991, SOFTWARE PROJECT DYN
   [Anonymous], 2004, BUSINESS DYNAMICS SY
   [Anonymous], FUNCT POINT COUNT PR
   Boehm B, 2004, IEEE SOFTWARE, V21, P54, DOI 10.1109/MS.2004.1293073
   BOEHM B, 2006, SOFTWARE EVOLUTION F
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   CHOI K, 2006, CSTR2006261 KAIST DE
   CHOI K, 2006, COCOMO 2 BASED DYNAM
   CHULANI S, 1999, USCCSE99510 CS DEP
   CHULANI S, 1999, THESIS U SO CALIFORN
   CHULANI S, 1997, USCCSE97505 CS DEP
   Donzelli P., 2001, Software Process Improvement and Practice, V6, P97, DOI 10.1002/spip.138
   Greenberger M., 1976, Models in the policy process: Public decision making in the computer era
   HELMER O, 1996, SOCIAL TECHNOLOGY
   HOUSTON D, 2000, THESIS ARIZONA STATE
   Houston DX, 2001, J SYST SOFTWARE, V59, P247, DOI 10.1016/S0164-1212(01)00066-8
   HUANG L, 2004, INFORM DEPENDABILITY
   *ISEE SYST INC, 2006, ITHINK SYST DYN SIM
   JONES C, 2005, J DEFENSE SOFTWARE E
   Jones C., 1994, Assessment and control of software risks
   Jones C., 2000, Software Assessments, Benchmarks, and Best Practices
   Jones C., 1996, APPL SOFTWARE MEASUR
   Kellner MI, 1999, J SYST SOFTWARE, V46, P91, DOI 10.1016/S0164-1212(99)00003-5
   Lehman MM, 1999, J SYST SOFTWARE, V46, P123, DOI 10.1016/S0164-1212(99)00006-0
   MADACHY R, 2006, LNCS, V3966
   Madachy RJ, 1996, PROC INT CONF SOFTW, P376, DOI 10.1109/ICSE.1996.493432
   Pfahl D, 2000, INFORM SOFTWARE TECH, V42, P1001, DOI 10.1016/S0950-5849(00)00152-X
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Ruiz M, 2001, J SYST SOFTWARE, V59, P299, DOI 10.1016/S0164-1212(01)00070-X
   Rus I, 1999, J SYST SOFTWARE, V46, P173, DOI 10.1016/S0164-1212(99)00010-2
   Stutzke R., 2005, Estimating Software-Intensive Systems
NR 31
TC 24
Z9 27
U1 0
U2 16
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2009
VL 51
IS 1
BP 162
EP 172
DI 10.1016/j.infsof.2008.03.001
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 389FU
UT WOS:000262077500015
DA 2024-07-18
ER

PT J
AU Pérez, J
   Ali, N
   Carsí, JA
   Ramos, I
   Alvarez, B
   Sanchez, P
   Pastor, JA
AF Perez, Jennifer
   Ali, Nour
   Carsi, Jose A.
   Ramos, Isidro
   Alvarez, Barbara
   Sanchez, Pedro
   Pastor, Juan A.
TI Integrating aspects in software architectures:: PRISMA applied to
   robotic tele-operated systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE methodology; Aspect-Oriented Software Development (AOSD);
   component-based software development (CBSD); aspect-oriented software
   architectures; tele-operation domain; software architecture design
AB Aspect-Oriented Software Development (AOSD) has emerged as a new approach to develop software systems by improving their structure, reuse, maintenance and evolution properties. It is being applied to all stages of the software life cycle. In this paper, we present the PRISMA approach, which introduces AOSD in software architectures. PRISMA is characterized by integrating aspects as first-order citizens of software architectures. This paper shows how the PRISMA methodology is applied to develop a case study of the tele-operation system domain. We illustrate how the PRISMA approach can improve the development and maintenance processes of these kinds of industrial systems. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Perez, Jennifer] Tech Univ Madrid UPM, EU Informat, E-28031 Madrid, Spain.
   [Ali, Nour; Carsi, Jose A.; Ramos, Isidro] Univ Polytecn Valencia, Dept Informat Syst & Computat, E-46022 Valencia, Spain.
   [Alvarez, Barbara; Sanchez, Pedro; Pastor, Juan A.] Univ Cartagena, Div Syst & Elect Engn Polytech, E-30202 Cartagena, Spain.
C3 Universidad Politecnica de Madrid; Universitat Politecnica de Valencia
RP Pérez, J (corresponding author), Tech Univ Madrid UPM, EU Informat, Carretera Valencia Km 7, E-28031 Madrid, Spain.
EM jenifer.perez@eui.upm.es; nourali@dsic.upv.es; pcarsi@dsic.upv.es;
   iramos@dsic.upv.es; balvarez@upct.es; pedro.sanchez@upct.es;
   juanangel.pastor@upet.es
RI Sanchez, Pedro/B-7710-2009; PEREZ, JENIFER/M-2506-2014; Carsí, Jose
   A./ABZ-9994-2022; Franco, Juan Ángel Pastor/A-4948-2019
OI Sanchez, Pedro/0000-0002-1903-1291; PEREZ, JENIFER/0000-0003-3192-7995;
   Carsí, Jose A./0000-0002-0277-8188; Franco, Juan Ángel
   Pastor/0000-0002-9063-5522; Ali, Nour/0000-0002-0161-5600; Alvarez,
   Barbara/0000-0002-5515-095X
CR ALVAREZ B, 2005, INT J INFORM ED RES
   ANDRADE LF, 2003, LNCS, V2804
   [Anonymous], 2002, Aosd '02: proceedings of the 1st international conference on aspect-oriented software development
   [Anonymous], Domain-specific language - Wikipedia
   BACHMAN F, 2000, CMUSEI200TR001
   BANIASSAD E, 2004, P WORKSH EARL ASP HE
   BARAIS O, 2004, P 1 INT WORKSH COORD
   BRUYNINCKX H, 2002, SOFTWARE FRAMEWORK A
   CHITCHYAN R, 2005, AOSD EUROPE RES REPO, P1
   COSTEMANIERE E, 2000, P IEEE INT C ROB AUT, P505
   CUESTA C, 2005, LNCS, V3527
   DOUENCE R, 2005, AOSDEUROPEINRIA1 CNR, P1
   ELRALD T, 2001, COMMUNICATIONS ACM, V44
   FERNANDEZ C, 2005, IEEE ROBOTICS AUTOMA
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garcia A., 2005, AOSD 05, P3
   Garlan D., 1993, ADV SOFTWARE ENG KNO, V1
   GARLAN D, 2001, WILEY ENCY SOFTWARE
   GARLAN D, 2003, LNCS, V2804
   Harrison W.H., 2002, RC22685W0212147 IBM
   IRASTORZA D, 2000, P C SOFTW ENG DAT JI
   KATARA M, 2003, P INT C ASP OR SOFTW
   KICZALES G, 2001, LNCS, V2072
   KIZCALES G, 1997, LNCS, V1241
   MCDIRMID S, 2003, P INT C ASP OR SOFTW, P70
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Milner R., 1993, POLYADIC PI CALCULUS, P203
   Moreira A., 2005, LNCS, V3520
   MUNNELLY J, 2007, P IEEE INT C PERV CO
   Navarro E, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P365
   NAVARRO E, 2004, P EARL ASP 2004 WORK
   Navasa A., 2005, LNCS, V3527
   NORIEGA P, 1998, LATIN AM J ARTIFICIA, V6, P68
   OSSHER H, 1999, 21452 IBM
   OSSHER H, 2000, P S SOFTW ARC COMP T
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Pawlak R, 2004, SOFTWARE PRACT EXPER, V34, P1119, DOI 10.1002/spe.605
   PEREZ J, 2005, LNCS, V3527
   PEREZ J, 2006, 9 INT S COMP BAS SOF
   PEREZ J, 2005, P C NET TECHN, V3
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Pinto M., 2003, LNCS, V2830
   Scholl K.-U., 2001, P 3 REAL TIM LIN WOR
   SHAW M, 1994, P WORKSH STUD SOFTW
   SOUSA GMC, 2003, WORKSH REQ ENG WER P
   STIRLING C, 1992, HDB LOGIC COMPUTER S, V2
   SUVEE D, 2006, P 9 INT S COMP BAS S
   Suvée D, 2005, ELECTRON NOTES THEOR, V114, P153, DOI 10.1016/j.entcs.2004.12.012
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   Volpe R, 2001, AEROSP CONF PROC, P121
   YU Y, 2004, P 12 IEEE INT C REQ
   PRISMA WEB PAGE
   TEACHMOVER ROBOT
NR 53
TC 19
Z9 22
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2008
VL 50
IS 9-10
BP 969
EP 990
DI 10.1016/j.infsof.2007.08.007
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 324PG
UT WOS:000257529900009
DA 2024-07-18
ER

PT J
AU Staron, M
   Meding, W
AF Staron, Miroslaw
   Meding, Wilhelm
TI Predicting weekly defect inflow in large software projects based on
   project planning and test status
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software metrics; predictions; defects
ID PRODUCTIVITY
AB Defects discovered during the testing phase in software projects need to be removed before the software is shipped to the customers. The removal of defects can constitute a significant amount of effort in a project and project managers are faced with a decision whether to continue development or shift some resources to cope with defect removal. The goal of this research is to improve the practice of project management by providing a method for predicting the number of defects reported into the defect database in the project. In this paper we present a method for predicting the number of defects reported into the defect database in a large software project on a weekly basis. The method is based on using project progress data, in particular the information about the test progress, to predict defect inflow in the next three coming weeks. The results show that the prediction accuracy of our models is up to 72% (mean magnitude of relative error for predictions of I week in advance is 28%) when used in ongoing large software projects. The method is intended to support project managers in more accurate adjusting resources in the project, since they are notified in advance about the potentially large effort needed to correct defects. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Staron, Miroslaw] IT Univ Goteborg, S-41296 Gothenburg, Sweden.
RP Staron, M (corresponding author), IT Univ Goteborg, Forskningsgangen 6, S-41296 Gothenburg, Sweden.
EM miroslaw.staron@ituniv.se; wilhelm.me-ding@ericsson.com
CR AGRESTI WW, 1992, IEEE T SOFTWARE ENG, V18, P988, DOI 10.1109/32.177368
   [Anonymous], 1989, APPL LINEAR REGRESSI
   BAILEY JH, 1992, P REL MAINT S, P280, DOI 10.1109/ARMS.1992.187837
   BALL T, 2005, 27 INT C SOFTW ENG S
   Baskerville R, 1998, EUR J INFORM SYST, V7, P90, DOI 10.1057/palgrave.ejis.3000298
   Baskerville RL, 1996, J INFORM TECHNOL, V11, P235, DOI 10.1080/026839696345289
   CAVANO JP, 1984, J SYST SOFTWARE, V4, P269, DOI 10.1016/0164-1212(84)90026-8
   DAMM LO, 2005, INT S EMP SOFTW ENG, P10
   Davison R, 2004, INFORM SYST J, V14, P65, DOI 10.1111/j.1365-2575.2004.00162.x
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Galliers R.D., 1992, INFORM SYSTEMS RES I, P144
   Isoda S, 1998, J SYST SOFTWARE, V43, P3, DOI 10.1016/S0164-1212(98)10017-1
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Laird L., 2006, Software Measurement and Estimation: A Practical Approach
   LITTLEWOOD B, 1991, SOFTWARE RELIABILITY
   MALAIYA YK, 2000, 11 INT S SOFTW REL E
   MOHAGHEGHI P, 2004, 26 INT C SOFTW ENG
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   NEUFELDER AM, 2000, NATL AER EL C DAYT O
   STARON M, 2007, INT C EMP ASS SOFTW
   Thelin T, 2003, IEEE T SOFTWARE ENG, V29, P687, DOI 10.1109/TSE.2003.1223644
   THELIN T, 1999, INT C PROD FOC SOFTW
   Tomaszewski P, 2005, INFORM SOFTWARE TECH, V47, P257, DOI 10.1016/j.infsof.2004.08.007
   Tomaszewski P, 2006, INFORM SOFTWARE TECH, V48, P915, DOI 10.1016/j.infsof.2005.12.004
NR 25
TC 32
Z9 33
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2008
VL 50
IS 7-8
BP 782
EP 796
DI 10.1016/j.infsof.2007.10.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 305KT
UT WOS:000256178000013
DA 2024-07-18
ER

PT J
AU Ngo, MN
   Tan, HBK
AF Ngo, Minh Ngoc
   Tan, Hee Beng Kuan
TI Applying static analysis for automated extraction of database
   interactions in web applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 14th IEEE International Conference on Program Comprehension (ICPC 2006)
CY JUN 14-16, 2006
CL Athens, GREECE
SP IEEE Comp Soc
DE database interactions; web applications; automated extraction; symbolic
   execution; slicing
ID SOURCE CODE; PROGRAMS
AB Database interactions are among the most essential functional features in web applications. Therefore, for the testing and maintenance of a web application, it is important that the web engineer could identify all the database interactions in the web application. However, the highly dynamic nature of web applications makes it challenging to extract all the possible database interactions from source code.
   In this paper, we propose an automated approach to extract database interactions from source code by using symbolic execution and inference rules. Our approach automatically identifies all the possible database interaction points. After that, all the program paths, which pass through each interaction point, are also computed. Each of these paths is then symbolically executed following our proposed symbolic evaluation rules. We also develop inference rules to deduce the interaction types from the set of symbolic expressions derived during the symbolic execution. Experiments have been conducted to evaluate the performance and usefulness of the proposed approach. The results indicate that even with some limitations in handling function calls, pointers and polymorphism, our approach still gives an average precision of 79.2%, which is 45.4% more than that of the conservative approach. (C) 2006 Elsevier B.V. All rights reserved.
C1 [Ngo, Minh Ngoc; Tan, Hee Beng Kuan] Nanyang Technol Univ, Sch Elect & Elect Engn, Singapore 639798, Singapore.
C3 Nanyang Technological University
RP Ngo, MN (corresponding author), Nanyang Technol Univ, Sch Elect & Elect Engn, Nanyang Ave, Singapore 639798, Singapore.
EM ngom0002@ntu.edu.sg
RI Tan, Hee Beng Kuan/A-5147-2011
CR [Anonymous], P 15 INT C SOFTW ENG
   ANTONIOL G, 2004, P 12 IEEE INT WORKSH
   Benedikt M., 2002, P 11 INT WORLD WID W
   BINKLEY DW, 2003, 3 IEEE INT WORKSH SO
   CHEATHAM TE, 1979, IEEE T SOFTWARE ENG, V5, P402, DOI 10.1109/TSE.1979.234207
   DEVANBU P, 1995, IEEE T SOFTWARE ENG, V21, P1009, DOI 10.1109/32.489076
   DILUCCA GA, 2002, P 6 EUR C SOFTW MAIN
   DILUCCA GA, 2003, P 5 IEEE INT WORKSH
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   HASSAN AE, 2002, 24 INT C SOFTW ENG I
   KAMKAR M, 1993, P C SOFTW MAINT SEP
   KAPFHAMMER GM, 2003, P JOINT 9 EUR SOFTW
   KONTOGIANNIS K, 1995, P 2 WORK C REV ENG 1
   Kontogiannis K. A., 1996, Automated Software Engineering, V3, P77, DOI 10.1007/BF00126960
   KRINKE J, 2004, P 20 IEEE INT C SOFT
   Lanubile F, 1997, IEEE T SOFTWARE ENG, V23, P246, DOI 10.1109/32.588543
   LASKI J, 1992, C SOFTW MAINT 1992 9
   NGO MN, 2006, 14 IEEE INT C PROGR
   Ricca F., 2001, IEEE Multimedia, V8, P40, DOI 10.1109/93.917970
   RICCA F, 2001, P 23 INT C SOFTW ENG
   Sampath S., 2004, P 19 INT C AUT SOFTW
   Sartipi K., 2001, P INT C SOFTW MAINT
   SOCHOS P, 2004, 5 ANN INT C OBJ OR I
   Tan HBK, 2001, J SOFTW MAINT EVOL-R, V13, P53, DOI 10.1002/smr.222
   TILLEY S, 2001, P 23 INT C SOFTW ENG
   TIP F, 1995, J PROGRAM LANG, V3, P121
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   WEISER M, 1981, 5 INT C SOFTW ENG 9
   WILDE N, 1992, C SOFTW MAINT 1992 9
   Wong W. E., 1999, P 1999 IEEE S APPL S
   ZHANG X, 2004, 12 ACM SIGSOFT INT S
NR 32
TC 13
Z9 14
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2008
VL 50
IS 3
BP 160
EP 175
DI 10.1016/j.infsof.2006.11.005
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Conference Proceedings Citation Index - Science (CPCI-S); Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 254UI
UT WOS:000252613100002
DA 2024-07-18
ER

PT J
AU Cho, WS
   Hong, KH
   Loh, WK
AF Cho, Wan-Sup
   Hong, Ki-Hyung
   Loh, Woong-Kee
TI Estimating nested selectivity in object-oriented and object-relational
   databases
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE nested selectivity; selectivity estimation; nested predicates; query
   optimization; object-oriented database; object-relational database
AB A search condition in object-oriented/object-relational queries consists of nested predicates, which are predicates on path expressions. In this paper, we propose a new technique for estimating selectivity for nested predicates. Selectivity of a nested predicate, nested selectivity, is defined as the ratio of the number of the qualified objects of the starting class in the path expression to the total number of objects of the class. The new technique takes into account the effects of direct representation of the many-to-many relationship and the partial participation of objects in the relationship. These two features occur frequently in object-oriented/object-relational databases, but have not been properly handled in the conventional selectivity estimation techniques. For the many-to-many relationship, we generalize the block-hit function proposed by S.B. Yao to allow the cases that an object belongs to more than one block. For the partial participation, we propose the concept of active objects and extend our technique for total participation to handle active objects. We also propose efficient methods for obtaining statistical information needed for our estimation technique. We finally analyze the accuracy of our technique through a series of experiments and compare with the conventional ones. The experiment results showed that there was a significant inaccuracy in the estimation by the conventional ones, confirming the advantage of our technique. (c) 2006 Elsevier B.V. All rights reserved.
C1 Korea Adv Inst Sci & Technol, Adv Informat Technol Res Ctr, Dept Comp Sci, Taejon 305701, South Korea.
   Chungbuk Natl Univ, Dept Management Informat Syst, Brain Korea 21, Cheongju 361763, Chungbuk, South Korea.
   Sungshin Womens Univ, Dept Comp Sci, Seoul 136743, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST); Chungbuk
   National University; Sungshin Women's University
RP Loh, WK (corresponding author), Korea Adv Inst Sci & Technol, Adv Informat Technol Res Ctr, Dept Comp Sci, 373-1 Guseong Dong, Taejon 305701, South Korea.
EM wscho@chungbuk.ac.kr; khhong@cs.sungshin.ac.kr; woong@mozart.kaist.ac.kr
CR [Anonymous], 2006, Fundamentals of Database Systems
   [Anonymous], PROCEEDINGS OF THE 1
   BERNSTEIN PA, 1981, ACM T DATABASE SYST, V6, P602, DOI 10.1145/319628.319650
   BERTINO E, 1994, VLDB J, V3, P355
   BLASGEN MW, 1976, RJ1745 IBM
   Charikar M., 2000, P 19 ACM SIGMOD SIGA, P268
   Cho WS, 1996, INFORM SYST, V21, P253, DOI 10.1016/0306-4379(96)00014-2
   CHRISTODOULAKIS S, 1984, ACM T DATABASE SYST, V9, P163, DOI 10.1145/329.318578
   Gibbons PB, 1997, PROCEEDINGS OF THE TWENTY-THIRD INTERNATIONAL CONFERENCE ON VERY LARGE DATABASES, P466
   Jagadish H. V., 1998, Proceedings of the Twenty-Fourth International Conference on Very-Large Databases, P275
   JUNG SH, 2006, P VLDB WORKSH DAT MI
   Kemper A., 1994, P ACM SIGMOD C MAN D, P336, DOI 10.1145/191839.191906
   KIFER Michael., 1992, SIGMOD Conference, P393, DOI DOI 10.1145/141484.130342
   KIM KC, 1988, P INT C ENT REL APPR, P329
   Kim W., 1990, INTRO OBJECT ORIENTE
   König AC, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P423
   LIPTON RJ, 1990, PROCEEDINGS OF THE NINTH ACM SIGACT-SIGMOD-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P40, DOI 10.1145/298514.298540
   SREENIVASAN S, 2006, P INT C DAT SYST ADV, P733
   *TPC, 1998, TPC BENCHM D DEC SUP
   Whang K.-Y., 1994, VLDB J, V3, P29
   WHANG KY, 1990, ACM T DATABASE SYST, V15, P208, DOI 10.1145/78922.78925
   WHANG KY, 1984, IEEE T COMPUT, V33, P209, DOI 10.1109/TC.1984.1676418
   Yao S. B., 1979, ACM Transactions on Database Systems, V4, P133, DOI 10.1145/320071.320072
   YAO SB, 1977, COMMUN ACM, V20, P260, DOI 10.1145/359461.359475
NR 24
TC 1
Z9 4
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2007
VL 49
IS 7
BP 806
EP 816
DI 10.1016/j.infsof.2006.09.004
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 179MV
UT WOS:000247294900007
DA 2024-07-18
ER

PT J
AU Cho, HJ
   Chung, CW
AF Cho, Hyung-Ju
   Chung, Chin-Wan
TI Indexing range sum queries in spatio-temporal databases
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE spatio-temporal database; R-tree; range sum query; indexing technique
AB Although spatio-temporal databases have received considerable attention recently, there has been little work on processing range sum queries on the historical records of moving objects despite their importance. Since the direct access to a huge amount of data to answer range sum queries incurs prohibitive computation cost, materialization techniques based on existing index structures are suggested. A simple but effective solution is to apply the materialization technique to the MVR-tree known as the most efficient structure for window queries with spatio-temporal conditions. Aggregate structures based on other index structures such as the HR-tree and the 3DR-tree do not provide satisfactory query performance. In this paper, we propose a new index structure called the Adaptively Partitioned Aggregate R-Tree (APART) and query processing algorithms to efficiently process range sum queries in many situations. Our experimental results show that the performance of the APART is typically 1.3 times better than that of its competitor for a wide range of scenarios. (c) 2006 Elsevier B.V. All rights reserved.
C1 Korea Adv Inst Sci & Technol, Dept Elect Engn & Comp Sci, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Chung, CW (corresponding author), Korea Adv Inst Sci & Technol, Dept Elect Engn & Comp Sci, 373-1 Kusong Dong, Taejon 305701, South Korea.
EM hjcho@islab.kaist.ac.kr; chungcw@islab.kaist.ac.kr
RI Chung, Chin-Wan/C-2029-2011
CR [Anonymous], 2000, VLDB
   BECKMANN N, 1990, SIGMOD REC, V19, P322, DOI 10.1145/93605.98741
   Cho HJ, 2004, INFORM SOFTWARE TECH, V46, P229, DOI 10.1016/j.infsof.2003.07.001
   Gray J, 1996, PROC INT CONF DATA, P152, DOI 10.1109/ICDE.1996.492099
   Guttman A., 1984, SIGMOD Record, V14, P47, DOI 10.1145/971697.602266
   HARINARAYAN V, 1996, P 1996 ACM SIGMOD IN, P205
   Kolahdouzan M, 2004, P 30 INT C VERY LARG, V30, P840
   LAZARIDIS I, 2001, P ACM SIGMOD INT C M, P401
   Nascimento MarioA., 1998, Symposium on Applied Computing (SAC), P235, DOI [DOI 10.1145/330560.330692, 10.1145/330560.330692]
   Papadias D, 2001, LECT NOTES COMPUT SC, V2121, P443
   Saltenis S, 2000, SIGMOD REC, V29, P331, DOI 10.1145/335191.335427
   Song Z., 2001, P 7 INT S ADV SPAT T, P79
   Tao Y, 2005, ACM T INFORM SYST, V23, P61, DOI 10.1145/1055709.1055713
   Tao Yufei., 2001, PROC INT C VERY LARG, P431
   Theodoridis Y, 1999, LECT NOTES COMPUT SC, V1651, P147
   *US BUR CENS, 1995, TECHN DOC TIGER LIN
   Vazirgiannis M, 1998, MULTIMEDIA SYST, V6, P284, DOI 10.1007/s005300050094
   [No title captured]
NR 18
TC 11
Z9 12
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2007
VL 49
IS 4
BP 324
EP 331
DI 10.1016/j.infsof.2006.05.005
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 149TB
UT WOS:000245168500002
DA 2024-07-18
ER

PT J
AU Grefen, P
   Ludwig, H
   Dan, A
   Angelov, S
AF Grefen, Paul
   Ludwig, Heiko
   Dan, Asit
   Angelov, Sarnuil
TI An analysis of web services support for dynamic business process
   outsourcing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE dynamic service outsourcin; dynamic business process outsourcing;
   inter-organizational business process management; Web Services
ID MANAGEMENT
AB Outsourcing of business processes is crucial for organizations to be effective, efficient and flexible. In fast changing markets, dynamic outsourcing is required, in which business relationships are established and enacted on-the-fly in an adaptive, fine-grained way. This requires automated means for the establishment of outsourcing relationships and for the enactment of services performed in these relationships. Due to wide industry support and their model of loose coupling, Web Services have become the mechanism of choice to interconnect organizations. This paper analyzes Web Services support for the dynamic process outsourcing paradigm. We discuss contract-based outsourcing to define requirements, introduce the Web Services framework and investigate the match between the two. We observe that the framework requires further support for cross-organizational business processes and mechanisms for contracting, QoS management and transaction management. We suggest an approach to fill these gaps based on a business process support application layer implemented on Web Service technology. (C) 2006 Elsevier B.V. All rights reserved.
C1 Eindhoven Univ Technol, Technol Management Dept, NL-5600 MB Eindhoven, Netherlands.
   IBM Corp, Thomas J Watson Res Ctr, Yorktown Hts, NY 10598 USA.
C3 Eindhoven University of Technology; International Business Machines
   (IBM)
RP Grefen, P (corresponding author), Eindhoven Univ Technol, Technol Management Dept, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM p.w.pj.grefen@tm.tue.nl; hludwig@us.ibm.com; asit@us.ibm.com;
   s.angelov@tm.tue.nl
RI Grefen, Paul W.P.J./C-2174-2014
CR Alonso G, 1999, RIDE-VE '99 - NINTH INTERNATIONAL WORKSHOP ON RESEARCH ISSUES ON DATA ENGINEERING: INFORMATION TECHNOLOGY FOR VIRTUAL ENTERPRISES, PROCEEDINGS, P132, DOI 10.1109/RIDE.1999.758645
   Alonso G., 2004, DAT SYS APP, DOI 10.1007/978-3-662-10876-5_5
   ANDREUX A, 2004, WEB SERVICES AGREEME
   Angelov S., 2003, International Journal of Networking and Virtual Organisations, V2, P78, DOI 10.1504/IJNVO.2003.003517
   ANGELOV S, 2002, P 5 INT C INF TECHN, P87
   Angelov S., 2002, P 3 IFIP WORK C INFR, P143
   Angelov S., 2004, 6th International Conference on Electronic Commerce, P31
   [Anonymous], 2001, XML SCHEMA 1
   [Anonymous], XML SCHEMA 2
   BOX D, 2002, WEB SERVICE POLICY F
   Box D., 2000, SIMPLE OBJECT ACCESS
   BOX D, 2002, WEB SERVICE POLICY A
   *BUS US INC, BUS PROC OUTS
   CABRERA F, 2002, WEB SERVICES COORDIN
   CABRERA F, 2002, WEB SERV T
   Christensen E., 2001, WEB SERVICES DESCRIP
   CONNOLLY D, 2000, ANNOTATED DAML OIL O
   Curbera F, 2002, BUSINESS PROCESS EXE
   DAN A, 1997, HIGH PERFORMANCE TRA, P23
   DAN A, 1998, P 2 EUR C RES ADV TE, P873
   DUITSHOF M, 2000, LOGISTICS PROTOTYPE
   *EBXML, 2001, EBXML BUS PROC SPEC
   *EBXML, 2001, EBXML TECHN ARCH SPE
   *EBXML, 2001, EBXML COLL PROT PROF
   Garcia-Molina H., 1987, ACM SIGMOD Record, P249, DOI DOI 10.1145/38714.38742
   GISLER M, 2000, P CAISE 00 WORKSH IN
   Grefen P, 2000, COMPUT SYST SCI ENG, V15, P277
   Grefen P, 2003, INT J COOP INF SYST, V12, P487, DOI 10.1142/S0218843003000838
   Grefen P, 2001, VLDB J, V10, P316, DOI 10.1007/s007780100056
   GREFEN P, 1997, LECT NOTES COMPUT SC, P430
   Grefen P., 2001, IEEE DATA ENG B, V24, P52
   Grefen P, 1999, DATABASE SUPPORT WOR
   GREFEN P, 2002, P CAISE WORKSH WEB S, P68
   HENDRY M, 1993, IMPLEMENTING EDI
   HOFFNER Y, 2001, INT J COMPUTER TELEC, V37, P111
   *IBM CORP, T SYST IBM SHOWC COM
   *IBM CORP, NEW PAR IT OUTS
   *IDC, 2002, BUTT NET POW NEXT GE
   *INT TEL UN, 2001, X911 ITUT
   KELELR A, 2002, RC22456 IBM RES
   KLINGEMANN J, 2000, P 12 INT C ADV INF S, P126
   LEYMANN F, 1995, P BTW 95, P51
   Linthicum DavidS., 2003, Next Generation Application Integration: From Simple Information to Web Services
   Ludwig H, 2002, WECWIS 2002: FOURTH IEEE INTERNATIONAL WORKSHOP ON ADVANCED ISSUES OF E-COMMERCE AND WEB-BASED INFORMATION SYSTEMS, PROCEEDINGS, P25, DOI 10.1023/A:1021525310424
   LUDWIG H, 2002, 22608 RC IBM RES DIV
   LUDWIG H, 2000, ACM SIGMOD RECORD, V29
   MARKS E, 2003, EXECUTIVES GUIDE WEB
   Newcomer E., 2002, UNDERSTANDING WEB SE
   OASIS, OASIS UDDI SPEC TC
   PATIL V, 2002, PRODUCT DATA TECHNOL
   PIEPER R, 2004, HYPE E BUSINESS STRA
   Rohwer C.D., 2000, Contracts in a nutshell
   RosettaNet, 2002, ROSETTANET IMPLEMENT
   SAINTBLANCAT J, 2001, CROSSFLOW PROJECT DE
   SAYAL M, 2001, HPL2001167
   SAYAL M, 2003, J NETWORK SYSTEMS MA, V11
   SOKOL P, 1995, EDI ELECT COMMERCE
   STROBEL M, 2000, 3236 RZ IBM RES
   TIMMERS P., 1999, ELECT COMMERCE STRAT
   Vonk J, 2003, DISTRIB PARALLEL DAT, V14, P137, DOI 10.1023/A:1024884626434
   VONK J, 2000, P 5 INT C COOP INF S, P323
   2002, UDDI TECHNICAL WHITE
NR 62
TC 34
Z9 34
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2006
VL 48
IS 11
BP 1115
EP 1134
DI 10.1016/j.infsof.2006.03.010
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 101CL
UT WOS:000241716400012
DA 2024-07-18
ER

PT J
AU Taxén, L
AF Taxen, Lars
TI An integration centric approach for the coordination of distributed
   software development projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE distributed software development; integration centric engineering;
   coordination; common understanding; flexible IS/IT support; telecom
   systems
AB This paper presents an approach for Distributed Software Development (DSD) that is based on two foundations. The first one is an integration centric engineering process, which aims at managing crucial dependencies in DSD projects. The second foundation is a strategy for operationalizing the coordination of the engineering process. The purpose of this strategy is to simultaneously provide global information system support for coordination and achieve common understanding about what should be coordinated and how. The approach has been successfully used at Ericsson, a major supplier of telecommunication systems worldwide, for coordinating extraordinary complex projects developing nodes in the third generation of mobile systems. Although many obstacles have to be addressed, the results indicate that the approach is a viable way to manage DSD during very demanding circumstances. (c) 2006 Elsevier B.V. All rights reserved.
C1 Linkoping Univ, Dept Sci & Technol, Norrkoping, Sweden.
C3 Linkoping University
RP Taxén, L (corresponding author), Linkoping Univ, Dept Sci & Technol, Campus Norrkoping, Norrkoping, Sweden.
EM lars.taxen@telia.com
CR Adler Niclas, 1999, MANAGING COMPLEX PRO
   ANDERSTEDT J, 2002, PROJEKT HELHET LEDA
   [Anonymous], 1958, ORG
   Baskerville RL, 1996, J INFORM TECHNOL, V11, P235, DOI 10.1080/026839696345289
   Battin RD, 2001, IEEE SOFTWARE, V18, P70, DOI 10.1109/52.914750
   Crnkovic I., 2003, ART H COMP SCI LIBR
   Damian D, 2003, SOFTWARE PROCESS IMP, V8, P179, DOI DOI 10.1002/SPIP.182
   Ebert C, 2001, IEEE SOFTWARE, V18, P62, DOI 10.1109/52.914748
   EKSTEDT M, 2003, P 12 INT C MAN TECHN
   GOLDKUHL G, 1999, P 4 INT WORKSH LANG
   Gorton I, 1996, INFORM SOFTWARE TECH, V38, P647, DOI 10.1016/0950-5849(96)01099-3
   HEEKS R, 2001, IEEE SOFTWARE    MAR, P54
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Karlsson E.-A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P649, DOI 10.1109/ICSE.2000.870459
   Kolb David A, 2014, EXPERIENTIAL LEARNIN, DOI [10.1002/job.4030080408, DOI 10.1016/B978-0-7506-7223-8.50017-4]
   Komi-Sirvio S, 2005, KNOWL PROCESS MANAG, V12, P108, DOI 10.1002/kpm.225
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   LARSSON R, 1990, THESIS I EC RES SWED
   LILLIESKOLD J, 2005, PORTL INT C MAN TECH
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   MATHIASSEN L, 1998, THESIS AALBORG U
   McChesney IR, 2004, INFORM SOFTWARE TECH, V46, P473, DOI 10.1016/j.infsof.2003.10.001
   MELIN U, 2002, THESIS LINKOPINGS U
   Ovaska P., 2003, Software Process Improvement and Practice, V8, P233, DOI 10.1002/spip.186
   Prikladnicki R., 2003, Software Process Improvement and Practice, V8, P267, DOI 10.1002/spip.188
   Sakthivel S, 2005, INFORM SOFTWARE TECH, V47, P305, DOI 10.1016/j.infsof.2004.09.001
   Schatzki T.R., 2001, The Practice Turn in Contemporary Theory
   Schon D. A., 1983, The reflective practitioner: How professionals think in action
   Searle J. R., 1995, Anthropological Theory, DOI [DOI 10.1177/1463499606061731, 1086/233794]
   SMIRCICH L, 1983, ADMIN SCI QUART, V28, P339, DOI 10.2307/2392246
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   TAXEN L, 2004, P 7 INT WORKSH ORG S, P97
   TAXEN L, 2006, THESIS LINKOPING U
   TAXEN L, 2004, P 2 INT WORKSH ACT L
   TAXEN L, 2005, 3 INT C ACT LANG ORG, P28
   TOFFOLON C, 2000, P 2000 ACM S APPL CO, V2, P851
   Wittgenstein L, 1978, Remarks on the Foundations of Mathematics
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 38
TC 14
Z9 16
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2006
VL 48
IS 9
BP 767
EP 780
DI 10.1016/j.infsof.2006.01.007
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 073OC
UT WOS:000239751500002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Maamar, Z
   Narendra, NC
   Sattanathan, S
AF Maamar, Z.
   Narendra, N. C.
   Sattanathan, S.
TI Towards an ontology-based approach for specifying and securing Web
   services
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Web services; composition; context; ontology; security
AB With the increasing popularity of Web services and increasing complexity of satisfying needs of users, there has been a renewed interest in Web services composition. Composition addresses the case of a user request that cannot be satisfied by any available Web service, whereas a composite service obtained by integrating Web services might be used. Because Web services originate from different providers, their composition faces the obstacle of the context heterogeneity of Web services. An unawareness or poor consideration of this heterogeneity during Web services composition and execution result in a lack of the quality and relevancy of information that permits tracking the composition, monitoring the execution, and handling exceptions. This paper presents an ontology-based approach for context reconciliation. The approach also focuses on the security breaches that threaten the integrity of the context of Web services, and proposes appropriate means to achieve this integrity. (C) 2005 Elsevier B.V. All rights reserved.
C1 IBM Software Labs India, Bangalore, Karnataka, India.
   Zayed Univ, Dubai, U Arab Emirates.
   Natl Inst Technol Karnataka, Surathkal, India.
C3 International Business Machines (IBM); Zayed University; National
   Institute of Technology (NIT System); National Institute of Technology
   Karnataka
RP Narendra, NC (corresponding author), IBM Software Labs India, Bangalore, Karnataka, India.
EM zakaria.maamar@zu.ac.ae; narendra@in.ibm.com; ss_nitk@yahoo.co.in
RI Maamar, Zakaria/A-1103-2012
CR BENATALLAH B, 2003, IEEE INTERNET COMPUT, V7
   BERARDI D, 2003, P WORKSH WEB SERV E
   BOUQUET P, 2003, P 2 INT SEM WEB C IS
   Brézillon P, 2003, IEEE INTELL SYST, V18, P62, DOI 10.1109/MIS.2003.1200731
   BRYSON J, 2003, WEB INTELLIGENCE
   Curbera F, 2003, COMMUN ACM, V46, P29, DOI 10.1145/944217.944234
   DEY AK, 2001, HUMAN COMPUT INTERAC, V16
   DOGAC A, 2003, P ECH C BOL IT
   GRUBER TR, 1993, KNOWLEDGE ACQUISITIO, V5
   HEGERING HG, 2003, P 14 IFIP IEEE WORKS
   Kagal L, 2004, IEEE INTELL SYST, V19, P50, DOI 10.1109/MIS.2004.23
   KEIDL M, 2003, P 12 INT WORLD WID W
   LILLY J, 2004, TIPS TRICKS WEB SERV
   LONSDALE P, 2004, P 1 INT WORKSH ADV C
   MAAMAR Z, 2003, P ALT TRACKS 12 INT
   MAAMAR Z, 2005, IEEE T KNOWLEDGE DAT, V17
   Medjahed B, 2003, IEEE INTERNET COMPUT, V7, P58, DOI 10.1109/MIC.2003.1167340
   MEDJAHED B, 2003, VERY LARGE DATA BASE, P12
   NARENDRA NC, 2003, J ASS INFORM SYST
   Papazoglou MP, 2003, COMMUN ACM, V46, P25, DOI 10.1145/944217.944233
   PATIL AA, 2004, P 13 INT WORLD WID W
   POWER R, 2004, P 1 INT WORKSH ADV C
   Sabou M., 2003, P 12 INT WORLD WID W
   SHENG QZ, 2002, P 28 VER LARG DAT C
   STRANG T, 2003, P SSGRRR INT C ADV I
   VERHEECKE B, 2003, P INT EUR C WEB SERV
   Wang X., 2004, P 2 IEEE C PERV COMP
NR 27
TC 13
Z9 18
U1 2
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2006
VL 48
IS 7
BP 441
EP 455
DI 10.1016/j.infsof.2005.05.004
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 049QQ
UT WOS:000238031900002
DA 2024-07-18
ER

PT J
AU Huang, CL
   Lo, CC
   Chao, KM
   Younas, M
AF Huang, Chun-Lung
   Lo, Chi-Chun
   Chao, Kuo-Ming
   Younas, Muhammad
TI Reaching consensus: A moderated fuzzy web services discovery method
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT International Workshop on Web and Mobile Information Systems
CY MAR, 2005
CL Taipei, TAIWAN
DE web services; fuzzy method; consensus; web services discovery
ID DECISION-MAKING; MODEL; AGGREGATION; OPINIONS
AB Web services are used for developing and integrating highly distributed and heterogeneous systems in different domains such as e-business, grid services, and e-government systems. Web services discovery is a key to dynamically locating desired web services across the Internet. Prevailing research trend is to dynamically discover and compose web services in order to develop composite services that provide enhanced functionality. Existing discovery techniques do not take into account the diverse preferences and expectations of service consumers and providers which are generally used for searching or advertising web services. This paper presents a moderated fuzzy web service discovery approach to model subjective and fuzzy opinions, and to assist service consumers and providers in reaching a consensus. The method achieves a common consensus on the distinct opinions and expectations of service consumers and providers. This process is iterative such that further fuzzy opinions and preferences can be added to improve the precision of web service discovery. The proposed method is implemented as a prototype system and is tested through various experiments. Experimental results demonstrate the effectiveness of the proposed method. (C) 2006 Elsevier B.V. All rights reserved.
C1 Natl Chiao Tung Univ, Inst Informat Management, Hsinchu 30010, Taiwan.
   Coventry Univ, DSM Res Grp, Sch MIS, Coventry CV1 5FB, W Midlands, England.
   Oxford Brookes Univ, Dept Comp, Oxford OX33 1HX, England.
C3 National Yang Ming Chiao Tung University; Coventry University; Oxford
   Brookes University
RP Huang, CL (corresponding author), Natl Chiao Tung Univ, Inst Informat Management, 1001 Tahsueh Rd, Hsinchu 30010, Taiwan.
EM clhuang@iim.netu.edu.tw; cclo@faculty.nctu.edu.tw;
   k.chao@coventry.ac.uk; m.younas@brookes.ac.uk
OI Chao, Kuo-Ming/0000-0002-4501-9739
CR [Anonymous], 2004, PRACTICAL GUIDE BUIL
   Chao KM, 2005, AINA 2005: 19th International Conference on Advanced Information Networking and Applications, Vol 2, P721
   Chiclana F, 2001, FUZZY SET SYST, V122, P277, DOI 10.1016/S0165-0114(00)00004-X
   Chiclana F, 1998, FUZZY SET SYST, V97, P33, DOI 10.1016/S0165-0114(96)00339-9
   CHICLANA F, 1996, J FUZZY MATH, V34, P224
   FAGIN R, 2003, P 2003 ACM SIGMOD IN, P301, DOI DOI 10.1145/872757.872795
   HADLEY M, 2004, JAVA API XML BASED R
   Herrera F, 1997, FUZZY SET SYST, V88, P31, DOI 10.1016/S0165-0114(96)00047-4
   Herrera-Viedma E, 2002, IEEE T SYST MAN CY A, V32, P394, DOI 10.1109/TSMCA.2002.802821
   Hsu HM, 1996, FUZZY SET SYST, V79, P279, DOI 10.1016/0165-0114(95)00185-9
   HUANG CL, 2005, P 5 INT C COMP INF T
   Lee HS, 2002, FUZZY SET SYST, V132, P303, DOI 10.1016/S0165-0114(02)00056-8
   Lin MS, 2005, 2005 IEEE INTERNATIONAL CONFERENCE ON E-TECHNOLOGY, E-COMMERCE AND E-SERVICE, PROCEEDINGS, P9
   Nambiar U., 2003, P 5 ACM INT WORKSH W, P126
   Orlovsky S. A., 1978, Fuzzy Sets and Systems, V1, P155, DOI 10.1016/0165-0114(78)90001-5
   *OWL SERV COAL, 2004, OWL S SEM MARK WEB S
   Paolucci M, 2002, LECT NOTES COMPUT SC, V2512, P225
   RAN SP, 2003, ACM SIGECOM EXCHANGE, V1, P1
   YAGER RR, 1988, IEEE T SYST MAN CYB, V18, P183, DOI 10.1109/21.87068
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   ZHOU J, 2005, LNCS, P585
NR 21
TC 25
Z9 26
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2006
VL 48
IS 6
BP 410
EP 423
DI 10.1016/j.infsof.2005.12.011
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 049QP
UT WOS:000238031800007
DA 2024-07-18
ER

PT J
AU Cater-Steel, A
   Toleman, M
   Rout, T
AF Cater-Steel, Aileen
   Toleman, Mark
   Rout, Terry
TI Process improvement for small firms: An evaluation of the RAPID
   assessment-based method
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software process improvement; assessment-based SPI; ISO/IEC 15504;
   small-medium enterprises
ID SOFTWARE PROCESS IMPROVEMENT; TECHNOLOGY; SUCCESS
AB With increasing interest by the software development community in software process improvement (SPI), it is vital that SPI programs are evaluated and the reports of lessons learned disseminated. This paper presents an evaluation of a program in which low-rigour, one-day SPI assessments were offered at no cost to 22 small Australian software development firms. The assessment model was based on ISO/IEC 15504 (SPICE). About 12 months after the assessment, the firms were contacted to arrange a follow-up meeting to determine the extent to which they had implemented the recommendations from the assessment.
   Comparison of the process capability levels at the time of assessment and the follow-up meetings revealed that the process improvement program was effective in improving the process capability of 15 of these small software development firms. Analysis of the assessment and follow-up reports explored important issues relating to SPI: elapsed time from assessment to follow-up meeting, the need for mentoring, the readiness of firms for SPI, the role of the owner/manager, the advice provided by the assessors, and the need to record costs and benefits. Based on an analysis of the program and its outcomes, firms are warned not to undertake SPI if their operation is likely to be disrupted by events internal to the firm or in the external environment. Firms are urged to draw on the expertise of assessors and consultants as mentors, and to ensure the action plan from the assessment is feasible in terms of the timeframe for evaluation. The RAPID method can be improved by fostering a closer relationship between the assessor and the firm sponsor; by making more extensive use of feedback questionnaires after the assessment and follow-up meeting; by facilitating the collection and reporting of cost benefit metrics; and by providing more detailed guidance for the follow-up meeting.
   As well as providing an evaluation of the assessment model and method, the outcomes from this research have the potential to better equip practitioners and consultants to undertake software process improvement, hence increasing the success of small software development firms in domestic and global markets. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ So Queensland, Toowoomba, Qld 4350, Australia.
   Griffith Univ, Software Qual Inst, Brisbane, Qld 4111, Australia.
C3 University of Southern Queensland; Griffith University
RP Cater-Steel, A (corresponding author), Univ So Queensland, Toowoomba, Qld 4350, Australia.
EM caterst@usq.edu.au
OI Toleman, Mark/0000-0002-0535-8103; Cater-Steel,
   Aileen/0000-0003-2478-3129
CR Abrahamsson P, 2002, THESIS U OULU OULU
   [Anonymous], 1995, The Capability Maturity Model: Guidelines for Improving the Software Process
   [Anonymous], 15504 ISOIEC TR
   Basili VR, 1996, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.1996.493439
   BEECHAM S, 2001, SOFTWARE PROCESS IMP
   BRODMAN JG, 1994, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.1994.296795
   Cater-Steel AP, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P368, DOI 10.1109/ASWEC.2004.1290490
   CATERSTEEL A, 2005, ASWEC
   CATERSTEEL AP, 2004, P 4 INT SPICE C PROC, P54
   CATERSTEEL AP, 2004, THESIS GRIFFITH U BR
   CNOSSEN C, 1997, LEARNING PAPER 7 SEC
   Cragg PB, 2002, EUR J INFORM SYST, V11, P267, DOI 10.1057/palgrave.ejis.3000430
   Debou C., 2000, Software Process Improvement and Practice, V5, P55, DOI 10.1002/(SICI)1099-1670(200003)5:1<55::AID-SPIP111>3.0.CO;2-X
   DEEPHOUSE C, 1995, P HAW INT C SYST SCI, V4, P710
   Diaz M, 1997, IEEE SOFTWARE, V14, P75, DOI 10.1109/52.605934
   Dutta S, 1999, IEEE SOFTWARE, V16, P82, DOI 10.1109/52.765792
   El Emam K., 1998, Success or failure? Modeling the likelihood of software process improvement
   FENTON N, 1994, IEEE SOFTWARE, V11, P86, DOI 10.1109/52.300094
   Goldenson D.R., 1997, EMPIRICAL STUDIES SO
   GOLDENSON DR, 1995, CMUSEI95TR009 CMU
   HALL T, 2002, IEE P-SOFTW, V7, P3
   Herbsleb JD, 1996, PROC INT CONF SOFTW, P323, DOI 10.1109/ICSE.1996.493427
   Iversen J., 1998, P 6 EUR C INF SYST A, P451
   JORGENSEN M, 1995, ACM SIGSOFT SOFTWARE, V20, P71
   Kaltio T., 2000, Software Process Improvement and Practice, V5, P65, DOI 10.1002/(SICI)1099-1670(200003)5:1<65::AID-SPIP112>3.0.CO;2-R
   KAUTZ K, 1998, EUR C SOFTW PROC IMP
   Krasner H., 1997, ACCUMULATING BODY EV
   Mustonen-Ollila E, 2003, INFORM SYST J, V13, P275, DOI 10.1046/j.1365-2575.2003.00141.x
   PAULK MC, 2000, CMUSEI2000SR002
   PFLEEGER SL, 1994, COMPUTER, V27, P71, DOI 10.1109/2.312041
   Rainer A, 2002, J SYST SOFTWARE, V62, P71, DOI 10.1016/S0164-1212(01)00122-4
   REEB J, 1997, J DEFENSE SOFTWARE E
   Rout T. P., 2000, SPICE 2000 1 INT C S
   ROUT TP, 1999, METHOD RAPID ASSESSM
   SCACCHI W, 1993, LNCS, V706, P27
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   SMITH WL, 1994, SOFTWARE QUALITY MAN, V1, P193
   Thong JYL, 1996, INFORM SYST RES, V7, P248, DOI 10.1287/isre.7.2.248
   VARKOI T, 2004, SOFTW SYST STAND REA
   Wilson DN, 2001, J SYST SOFTWARE, V59, P135, DOI 10.1016/S0164-1212(01)00057-7
   Wood M, 1999, J SYST SOFTWARE, V48, P13, DOI 10.1016/S0164-1212(99)00042-4
NR 41
TC 33
Z9 35
U1 0
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2006
VL 48
IS 5
BP 323
EP 334
DI 10.1016/j.infsof.2005.09.012
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 158EH
UT WOS:000245773500003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Ng, TH
   Cheung, SC
AF Ng, TH
   Cheung, SC
TI Enhancing class commutability in the deployment of design patterns
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
AB A design pattern provides a structure to facilitate program changes with respect to a design concern. For example, the State pattern manages object behaviour in different internal states of objects. It allows new internal states of an object to be supported with the reuse of the object context. The deployment of a design pattern in a software program comprises a set of classes following the structure of the pattern. Within the set, classes that implement the managed concern of the pattern are commuted to new ones when changes related to the concern occur. However, commutation efforts can be tedious if these classes are accessed arbitrarily throughout the software. To confine the commutation efforts, these classes should be properly encapsulated. This paper proposes design restrictions in pattern deployments to achieve proper encapsulation. The approach is illustrated by a pattern-based program that supports appointment scheduling of multiple users. Preliminary experiments show that our approach facilitates program changes subject to multiple design concerns. (c) 2005 Elsevier B.V. All rights reserved.
C1 Hong Kong Univ Sci & Technol, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
C3 Hong Kong University of Science & Technology
RP Hong Kong Univ Sci & Technol, Dept Comp Sci, Clear Water Bay, Hong Kong, Hong Kong, Peoples R China.
EM cssam@cs.ust.hk; scc@cs.ust.hk
RI Liu, Chenyu/KBQ-8899-2024; Cheung, Shing Chi/U-5882-2018
OI Cheung, Shing Chi/0000-0002-3508-7172
CR [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], UNIFIED MODELING USE
   [Anonymous], 1995, Design patterns for object-oriented software development
   BENGTSSON PO, 1999, P INT C SOFTW ENG
   BIEMAN JM, 2001, P INT C SOFTW MAINT
   Booch G., 1999, The unified software development process
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   BOSCH J, 1997, P ECCOP 97, P133
   COPLIEN JO, 1995, PATTERN LANGUAGES OF PROGRAM DESIGN, P183
   Gamma Erich., 1994, DESIGN PATTERNS
   GOSLING J, 2002, JAVA LANGUAGE SPECIF
   Huston B, 2001, J SYST SOFTWARE, V58, P261, DOI 10.1016/S0164-1212(01)00043-7
   Kazman R, 1996, IEEE SOFTWARE, V13, P47, DOI 10.1109/52.542294
   Kishi T., 2001, IMPLEMENTING DESIGN
   LASSING N, 1999, GOAL SOFTWARE ARCHIT
   Lauder A., 1998, Precise Visual Speci cation of Design Patterns, P114
   MCNATT WB, 2001, P COMP SOFTW DEV C C
   *OBJ MAN GROUP, 2001, UN MOD LANG SPEC VER
   [No title captured]
NR 19
TC 2
Z9 2
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 1
PY 2005
VL 47
IS 12
BP 797
EP 804
DI 10.1016/j.infsof.2005.01.004
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 958YB
UT WOS:000231483000003
DA 2024-07-18
ER

PT J
AU Jacobs, J
   van Moll, J
   Krause, P
   Kusters, R
   Trienekens, J
   Brombacher, A
AF Jacobs, J
   van Moll, J
   Krause, P
   Kusters, R
   Trienekens, J
   Brombacher, A
TI Exploring defect causes in products developed by virtual teams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE virtual development; virtual team; product quality; defect injection;
   defect detection; defect causal analysis
ID GLOBAL SOFTWARE-DEVELOPMENT
AB This paper explores the effects of virtual development on product quality, from the viewpoint of 'conformance to specifications'. Virtual Development refers to the development of products by teams distributed across space, time, and organization boundaries (hence virtual teams). Specifically, causes of defect injection and non- or late-detection are explored. Because of the practical difficulties of obtaining hard project-specific defect data, an approach was taken that relied upon accumulated expert knowledge. The accumulated expert knowledge based approach was found to be a practical alternative to an in-depth defect causal analysis on a per-project basis. Defect injection causes are concentrated in the Requirements Specification phases. Thus defect dispersion is likely to increase, as requirements specifications are input for derived requirements specifications in multiple, related sub-projects. Similarly, a concentration of causes for the non- or late-detection of defects was found in the Integration Test phases. Virtual development increases the likelihood of defects in the end product because of the increased likelihood of defect dispersion, because of new virtual development related defect causes, and because causes already existing in co-located development are more likely to occur. The findings are important for virtual development environments and (1) allow further research focusing on a framework for lowering residual defects, and (2) give insights that can be used immediately by practitioners to devise strategies for lowering residual defects. (c) 2004 Elsevier B.V. All rights reserved.
C1 ReUse Technol Grp, NL-5656 AA Eindhoven, Netherlands.
   Sioux Tech Software Dev, Eindhoven, Netherlands.
   Univ Surrey, Guildford GU2 5XH, Surrey, England.
   Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
C3 University of Surrey; Eindhoven University of Technology
RP Jacobs, J (corresponding author), ReUse Technol Grp, Prof Holstlaan 4,Bldg WDA 3-03, NL-5656 AA Eindhoven, Netherlands.
EM jef.jacobs@philips.com
RI Krause, Paul John/AFD-8391-2022; Kusters, Rob/B-3093-2010
OI Kusters, Rob/0000-0003-4069-5655
CR [Anonymous], GUIDE QUALITY CONTRO
   [Anonymous], 1992, PRACTICAL SOFTWARE M
   [Anonymous], 10441993 IEEE
   Boehm BW., 1981, Software Engineering Economics
   Briand LC, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P124, DOI 10.1109/ISSRE.2000.885866
   CARD D, 1998, IEEE SOFTWARE    JAN, P56
   CARMEL E, 1998, GLOBAL SOFTWARE TEAM
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   CHULANI S, 1999, THESIS U SO CALIFORN
   Ebert C, 2001, IEEE SOFTWARE, V18, P62, DOI 10.1109/52.914748
   Ebert C, 2001, PROC INT CONF SOFTW, P545, DOI 10.1109/ICSE.2001.919129
   FREDERICKS M, 1998, DACSSOAR982 AIR FOR
   GARVIN DA, 1984, SLOAN MANAGE REV, V26, P25
   HAMMAR M, 2000, THESIS U LINKOPING S
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Karolak D.W., 1998, Global Software Development: Managing Virtual Teams and Environments
   Li M, 2003, IEEE T SOFTWARE ENG, V29, P811, DOI 10.1109/TSE.2003.1232286
   LONCHAMP J, 2002, COLLABORATION FLOW M
   Maidantchik C., 2002, P INT WORKSH GLOB SO
   MAYS RG, 1990, IBM SYST J, V29, P4, DOI 10.1147/sj.291.0004
   MCMAHON PE, 2001, CROSSTALK        NOV, P4
   NUNAMAKER JF, 1993, GROUP SUPPORT SYSTEM
   ROOIJMANS J, 1996, IEEE SOFTWARE    JAN, P55
   van Moll J, 2004, INFORM SOFTWARE TECH, V46, P665, DOI 10.1016/j.infsof.2003.12.001
NR 24
TC 17
Z9 20
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 15
PY 2005
VL 47
IS 6
BP 399
EP 410
DI 10.1016/j.infsof.2004.09.006
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 916VO
UT WOS:000228414700003
DA 2024-07-18
ER

PT J
AU Park, H
   Suh, W
   Lee, H
AF Park, H
   Suh, W
   Lee, H
TI A role-driven component-oriented methodology for developing
   collaborative commerce systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE collaborative commerce; collaboration; role; component; methodology
AB As the commerce environment becomes more competitive, companies are compelled to adopt a collaborative commerce (c-commerce) paradigm to sustain a competitive edge over the Internet. C-commerce demands a variety of collaborative interactions among multiple stakeholders. In order to develop c-commerce systems, this paper proposes a role-driven component-oriented methodology (RCOM), which consists of four phases: collaboration analysis, component analysis, component design, and implementation. The roles can help implement well-defined business functions, while the components enable the production of reusable artifacts in a systematic fashion. Accordingly, RCOM is likely to help improve the system development process. To demonstrate the practical usefulness of this methodology, a real-life case is illustrated. (C) 2004 Elsevier B.V. All rights reserved.
C1 Korea Adv Inst Sci & Technol, Grad Sch Management, Seoul 130012, South Korea.
   Inha Univ, Coll Business Adm, Div Business Adm, Inchon 402751, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST); Inha
   University
RP Korea Adv Inst Sci & Technol, Grad Sch Management, 207-43 Chongryangri Dong, Seoul 130012, South Korea.
EM hsl@kgsm.kaist.ac.kr; hkpark@kgsm.kaist.ac.kr; wjsuh@inha.ac.kr
RI Lee, Heeseok/C-1528-2011
CR Afuah A., 2000, INTERNET BUSINESS MO
   ALBANO A, 1993, P 19 INT C VER LARG, P39
   [Anonymous], 1994, Human-Computer Interaction
   [Anonymous], 2002, BUSINESS HORIZONS
   [Anonymous], HARVARD BUSINESS REV
   BARNEY J, 1991, J MANAGE, V17, P99, DOI 10.1177/014920639101700108
   Barry C., 2001, IEEE Multimedia, V8, P52, DOI 10.1109/93.917971
   Bock C, 1998, J OBJECT-ORIENT PROG, V11, P51
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   BURDICK D, 1999, WHAT PEOPLE ARE SAYI
   Chen YM, 2000, ROBOT CIM-INT MANUF, V16, P9, DOI 10.1016/S0736-5845(99)00035-6
   CHOOBINEH J, 1992, COMMUN ACM, V35, P108, DOI 10.1145/129630.129636
   CHU WW, 1997, P 16 INT C CONC MOD, P257
   Cunliffe D, 2000, INTERNET RES, V10, P295, DOI 10.1108/10662240010342577
   D'Souza D., 1998, OBJECTS COMPONENTS F
   Dix A.J., 1998, HUMAN COMPUTER INTER, V2nd
   Eddon G., 1998, Inside Distributed COM
   Elmasri R., 1985, Data & Knowledge Engineering, V1, P75, DOI 10.1016/0169-023X(85)90027-8
   *GARTN, 1999, GARTN GROUP ID C COM
   Ginige A., 2001, IEEE Multimedia, V8, P14, DOI 10.1109/93.923949
   Gottlob G, 1996, ACM T INFORM SYST, V14, P268, DOI 10.1145/230538.230540
   Hafeez K, 2002, IEEE T ENG MANAGE, V49, P28, DOI 10.1109/17.985745
   HAINES CG, 1997, SOFTWARE TECHNOLOGY
   Hamel G., 1994, The Concept of Core Competence
   Henderson P, 2001, INFORM SOFTWARE TECH, V43, P161, DOI 10.1016/S0950-5849(00)00156-7
   Holsapple C., 2000, Knowledge and Process Management, V7, P151, DOI [10.1002/1099-1441(200007/09)7:33.0.co;2-u, DOI 10.1002/1099-1441(200007/09)7:33.0.CO;2-U, 10.1002/1099-1441(200007/09)7:3<151::AID-KPM83>3.0.CO;2-U, DOI 10.1002/1099-1441(200007/09)7:3<151::AID-KPM83>3.0.CO;2-U]
   *INS INC, 1999, CURR INV E COMM
   JACOBSON I, 1995, OBJECT ORIENTED SOFT
   Kendall E. A., 2001, Agent-Oriented Software Engineering. First International Workshop, AOSE 2000. Revised Papers (Lecture Notes in Computer Science Vol.1957), P163
   KENDALL EA, 1999, INT C AG SYST APPL M, P204
   Klein J, 1998, R&D MANAGE, V28, P37, DOI 10.1111/1467-9310.00079
   Kunda D, 2000, INFORM SOFTWARE TECH, V42, P715, DOI 10.1016/S0950-5849(00)00115-4
   Lee H, 2001, J ORG COMP ELECT COM, V11, P77, DOI 10.1207/S15327744JOCE1102_01
   LEE H, 1995, J MIS RES, V5, P101
   *OBJ MAN GROUP, 2002, OMG CORBA
   OBRIEN A, 1998, 2 EUR C PROD PROC MO
   ONEIL J, 1998, JAVA BEAMS PROGRAMMI
   Palmer JW, 2002, INFORM SYST RES, V13, P151, DOI 10.1287/isre.13.2.151.88
   Prahalad C.K., 1990, Harvard Business Review, V68, P79
   *RAT SOFTW, 2001, UML DOC BEH EL PACK
   Rolland C, 1998, DATA KNOWL ENG, V25, P125, DOI 10.1016/S0169-023X(97)86223-4
   Rosenman M, 1999, RES ENG DES, V11, P193, DOI 10.1007/s001630050014
   Sanchez R., 1996, DYNAMICS COMPETENCE, P1
   SESSIONS R, 1998, DCOM MICROSOFTS VISI
   Shin K, 2002, J SYST SOFTWARE, V60, P195, DOI 10.1016/S0164-1212(01)00092-9
   SMITH G, 1998, 2 INT C PAR DISTR CO, P31
   Suh W, 2001, J SYST SOFTWARE, V56, P115, DOI 10.1016/S0164-1212(00)00092-3
   Szyperski C., 2002, COMPONENT SOFTWARE, V2nd
   Taylor MJ, 2002, INFORM SOFTWARE TECH, V44, P381, DOI 10.1016/S0950-5849(02)00024-1
   TOUSSAINT PJ, 1998, THESIS LEIDEN U NETH
   van der Aalst WMP, 1999, INFORM SYST, V24, P639, DOI 10.1016/S0306-4379(00)00003-X
   YIM H, 1999, J CALS, V4, P25
   YIM SK, 1997, THESIS KOREA ADV I S
   ZANG P, 2002, INT J ELECTRON COMM, V6, P9
   ZHAO L, 1999, IEEE SOFTWARE    SEP, P86
NR 55
TC 25
Z9 26
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 15
PY 2004
VL 46
IS 12
BP 819
EP 837
DI 10.1016/j.infsof.2004.02.002
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 840GZ
UT WOS:000222846600004
DA 2024-07-18
ER

PT J
AU Li, M
   Walker, DW
   Rana, OF
   Huang, Y
AF Li, M
   Walker, DW
   Rana, OF
   Huang, Y
TI Migrating legacy codes to distributed computing environments: a CORBA
   approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE problem solving environments; legacy code reuse; CORBA; software
   components; wrapper generator
AB This paper describes techniques used to migrate legacy codes as CORBA components to a distributed problem solving environment (PSE). It presents a CORBA compliant wrapper generator (WG), which can be used to automatically wrap high performance legacy codes in C or Fortran as CORBA components for reuse in the PSE. Using WG, a finite element based computational fluid dynamics (CFD) legacy code has been wrapped as a CORBA component and a PSE for simulating incompressible Navier-Stokes flows has been implemented. A user can submit a task to the wrapped CFD component through a Web page without knowing the exact implementation of the component. In this way, a user's desktop computing environment can be extended to a computing environment using a cluster of workstations or a parallel computer. (C) 2003 Elsevier B.V. All rights reserved.
C1 Brunel Univ, Dept Elect & Comp Engn, Uxbridge UB8 3PH, Middx, England.
   Cardiff Univ, Dept Comp Sci, Cardiff CF24 3XF, S Glam, Wales.
C3 Brunel University; Cardiff University
RP Brunel Univ, Dept Elect & Comp Engn, Uxbridge UB8 3PH, Middx, England.
EM maozhen.li@brunel.ac.uk
RI Rana, Omer/AAP-8523-2020; Rana, Omer F./B-5065-2010; Walker, David
   W/B-7978-2010
OI Rana, Omer/0000-0003-3597-2646; Walker, David/0000-0002-1360-6330
CR [Anonymous], 1997, COMPONENT SOFTWARE O
   Ashish N, 1997, PROCEEDINGS OF THE SECOND IFCIS INTERNATIONAL CONFERENCE ON COOPERATIVE INFORMATION SYSTEMS - COOPIS'97, P160, DOI 10.1109/COOPIS.1997.613813
   CARPENTER B, 1996, P JAV HIGH PERF SCI
   DAVID M, 1996, P IEEE ACMSUP COMP
   Floros N, 1999, FUTURE GENER COMP SY, V15, P723, DOI 10.1016/S0167-739X(99)00022-9
   Foster I, 1998, SEVENTH HETEROGENEOUS COMPUTING WORKSHOP (HCW '98), P4, DOI 10.1109/HCW.1998.666541
   Gallopoulos E., 1994, IEEE Computational Science and Engineering, V1, P11, DOI 10.1109/99.326669
   Keahey K, 1997, SIXTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH PERFORMANCE DISTRIBUTED COMPUTING, PROCEEDINGS, P31, DOI 10.1109/HPDC.1997.622360
   KEAHEY K, 1998, 1 NASA WORKSH PERF E, P28
   KIM HS, P JOINT M 4 WORLD MU
   LAKSHMAN YN, 1998, P 1998 INT S SYMB AL, P13
   LI M, 2000, P IEEE ACM SUP COMP
   Li MZ, 2001, FUTURE GENER COMP SY, V18, P213, DOI 10.1016/S0167-739X(00)00093-5
   *MPI FOR, 1995, MESS PASS INT STAND
   PRIOL T, 1998, P EUR 98 SOUTH UK, P1114
   RANA OF, 1999, P GEN COMP VAS SOFTW
   Rice JR, 1996, IEEE COMPUT SCI ENG, V3, P44, DOI 10.1109/99.537091
   Schmidt DC, 1998, COMPUT COMMUN, V21, P294, DOI 10.1016/S0140-3664(97)00165-5
   Souder T., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P47, DOI 10.1109/WCRE.1999.806946
   Vidal ME, 1998, 3RD IFCIS INTERNATIONAL CONFERENCE ON COOPERATIVE INFORMATION SYSTEMS - PROCEEDINGS, P148, DOI 10.1109/COOPIS.1998.706193
   Walker DW, 2000, CONCURRENCY-PRACT EX, V12, P1455, DOI 10.1002/1096-9128(20001225)12:15<1455::AID-CPE538>3.0.CO;2-#
   WANG N, 2000, SESS MIDDL C ACM IFI
   Wang Nanbor., 2000, COMPONENT BASED SOFT
   Williams PT, 1996, NUMER HEAT TR B-FUND, V29, P137, DOI 10.1080/10407799608914980
NR 24
TC 2
Z9 2
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 1
PY 2004
VL 46
IS 7
BP 457
EP 464
DI 10.1016/j.infsof.2003.09.014
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 809AM
UT WOS:000220609600003
DA 2024-07-18
ER

PT J
AU Zeadally, S
   Zhang, L
   Zhu, Z
   Lu, J
AF Zeadally, S
   Zhang, L
   Zhu, Z
   Lu, J
TI Network application programming interfaces (APIs) performance on
   commodity operating systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE API; networking; operating system; performance; socket
AB Network Application Programming Interfaces (APIs) are important components of network-based applications. They play a central role in the end-to-end performance ultimately delivered by networked applications. In addition, most network architectures exploit the underlying networking APIs in their designs. We present an empirical performance evaluation on the PC platform of the most popular networking APIs, namely: Winsock/BSD, Java, and RMI. To explore the impact of the underlying operating system and the Java Virtual Machine architecture on the networking APIs, we conducted performance tests on four widely used operating systems namely, Windows NT 4.0, Windows 2000, Linux, and Solaris 8. We found that RMI latency is 1.7 times higher over Java. Latency over Java is around two to three times higher than over native Windows or BSD sockets. Moreover, native sockets yield around 1.8 and 3.5 times higher throughput over Java and RMI, respectively. We hope that our results will be useful to application designers and developers and help them better optimize the end-to-end performance of their applications with a knowledge of the performance of the underlying networking APIs. (C) 2003 Elsevier B.V. All rights reserved.
C1 Wayne State Univ, Dept Comp Sci, High Speed Networking Lab, Detroit, MI 48202 USA.
C3 Wayne State University
RP Wayne State Univ, Dept Comp Sci, High Speed Networking Lab, 454 State Hall, Detroit, MI 48202 USA.
EM zeadally@cs.wayne.edu
CR Ahuja SP, 2000, 8TH INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS AND SIMULATION OF COMPUTER AND TELECOMMUNICATION SYSTEMS, PROCEEDINGS, P565, DOI 10.1109/MASCOT.2000.876585
   CHUAH C, 2002, P IEEE INT C COMM IC
   CONSTANTINE FB, 2001, JAVA VIRTUAL MACHINE
   DEERING S, 1883 RFC INT ENG TAS
   HUITEMA C, 1997, IPV6 NEW INTERNET PR
   Krintz C, 2001, CONCURR COMP-PRACT E, V13, P815, DOI 10.1002/cpe.580
   MAASSEN J, 1999, P ACM S PRINC PRACT
   McKusick Marshall Kirk, 1996, DESIGN IMPLEMENTATIO
   NESTER C, P ACM JAV C 1999 SAN, P152
   NIEUWPOORT R, P ACM 1999 JAV GRAND, P8
   RUSSINOVICH M, 1999, INSIDE WINDOWS 2000
   *SUN MICR, 1999, WHAT JAV PLATF
   *SUN MICR, 1999, JIN ARCH SPEC VERS 1
   *SUN MICR INC, 1999, JAV TM REM METH INV
   Thompson K, 1997, IEEE NETWORK, V11, P10, DOI 10.1109/65.642356
   WALDO J, 1999, CACM, V42
NR 16
TC 5
Z9 5
U1 1
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY 1
PY 2004
VL 46
IS 6
BP 397
EP 402
DI 10.1016/j.infsof.2003.08.005
PG 6
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803OT
UT WOS:000220241100004
DA 2024-07-18
ER

PT J
AU Yu, YT
   Ng, SP
   Poon, PL
   Chen, TY
AF Yu, YT
   Ng, SP
   Poon, PL
   Chen, TY
TI On the testing methods used by beginning software testers
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 18th ACM Symposium on Applied Computing
CY MAR 09-12, 2003
CL MELBOURNE, FL
SP ACM
DE black box testing; classification-tree method; software testing;
   specification-based testing; white box testing
AB This paper describes our experiences of the methods used by novice software testers to test their own programs, as well as their perception of the classification-tree method, which is a black box testing method first introduced by Grochtmann and Grimm. We conducted two case studies involving novice software testers. The subjects in the first study possessed one-year working experience while those in the second study had a wider range of working experiences. Both studies found that white box testing methods were initially far more popular than black box methods, but the majority of the subjects were convinced of the benefits of the classification-tree method after they had learned and used it. About two-third of them indicated their preference of the classification-tree method over the methods they originally used. (C) 2003 Elsevier B.V. All rights reserved.
C1 City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
   Swinburne Univ Technol, Sch Informat Technol, Hawthorn, Vic 3122, Australia.
   Hong Kong Polytech Univ, Sch Accounting & Finance, Kowloon, Hong Kong, Peoples R China.
C3 City University of Hong Kong; Swinburne University of Technology; Hong
   Kong Polytechnic University
RP City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
EM csytyu@cityu.edu.hk; sng@it.swin.edu.au; afplpoon@inet.polyu.edu.hk;
   tychen@it.swin.edu.au
RI Poon, Pak-Lok/ADQ-5493-2022
OI Chen, Tsong/0000-0003-3578-0994; Ng, Sebastian/0000-0002-2074-6673;
   POON, Pak Lok/0000-0003-2840-2418
CR Chen TY, 2002, 7TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P221, DOI 10.1109/HASE.2002.1173126
   Chen TY, 2000, INT J SOFTW ENG KNOW, V10, P647, DOI 10.1142/S0218194000000353
   Chen TY, 1998, 1998 INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: EDUCATION & PRACTICE, PROCEEDINGS, P324, DOI 10.1109/SEEP.1998.707666
   CORNELISSEN W, 1995, IEEE SOFTWARE, V12, P87, DOI 10.1109/52.406764
   Grochtmann M., 1993, Software Testing, Verification and Reliability, V3, P63, DOI 10.1002/stvr.4370030203
   Myers Glenford J., 2011, The Art of Software Testing
   Shepard T, 2001, COMMUN ACM, V44, P103, DOI 10.1145/376134.376180
   Singh H, 1997, FIRST IEEE INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P81, DOI 10.1109/ICFEM.1997.630406
   Yu YT, 2001, INT J SOFTW ENG KNOW, V11, P113, DOI 10.1142/S0218194001000475
   YU YT, 2003, P 18 ANN ACM S APPL, P1123
NR 10
TC 5
Z9 5
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 15
PY 2004
VL 46
IS 5
BP 329
EP 335
DI 10.1016/j.infsof.2003.09.006
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 778FU
UT WOS:000189229500009
DA 2024-07-18
ER

PT J
AU Ko, M
   Osei-Bryson, KM
AF Ko, M
   Osei-Bryson, KM
TI The productivity impact of information technology in the healthcare
   industry: an empirical study using a regression spline-based approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE information technology investments; productivity; regression splines;
   data mining; multivariate adaptive regression splines
ID FIRM PERFORMANCE; PROFITABILITY; EFFICIENCY; SYSTEMS
AB This paper explores the productivity impact of information technology (IT) in the healthcare industry using a regression spline (RS)-based approach. Application of the RS-based approach offered additional valuable insights that contribute to our understanding of the complex relationship between investments in IT and organizational productivity. For example, the results of this study suggest that investments in the IT Stock has a positive impact on productivity only under certain conditions, and that this impact of IT is not uniform but is conditioned both by the amount invested in the IT Stock and the investments in Non-IT Capital. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Texas, Coll Business, Dept Informat Syst, San Antonio, TX 78249 USA.
   Virginia Commonwealth Univ, Sch Business, Dept Informat Syst, Richmond, VA 23284 USA.
   Virginia Commonwealth Univ, Sch Business, Informat Syst Res Inst, Richmond, VA 23284 USA.
C3 University of Texas System; University of Texas Health Science Center at
   San Antonio; Virginia Commonwealth University; Virginia Commonwealth
   University
RP Ko, M (corresponding author), Univ Texas, Coll Business, Dept Informat Syst, San Antonio, TX 78249 USA.
EM mko@utsa.edu; kweku.muata@isy.vcu.edu
CR [Anonymous], 1990, GEN ADDITIVE MODEL
   Barua A., 2000, Framing the domains of IT management: Projecting the future through the past
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   Brynjolfsson E, 1996, MANAGE SCI, V42, P541, DOI 10.1287/mnsc.42.4.541
   BRYNJOLFSSON E, 1993, COMMUN ACM, V36, P67, DOI 10.1145/163298.163309
   Dewan S, 1997, MANAGE SCI, V43, P1660, DOI 10.1287/mnsc.43.12.1660
   Eubank RL., 1988, Spline Smoothing and Nonparametric Regression
   EVANS D, 2000, FINANCE DEV RES PROG, P1
   Friedman J., 2001, ELEMENTS STAT LEARNI, V1, DOI DOI 10.1007/978-0-387-84858-7
   FRIEDMAN JH, 1991, ANN STAT, V19, P1, DOI 10.1214/aos/1176347963
   GARRETSON R, 1999, INFOWORLD, V21, P32
   Henderson J., 1980, Microeconomic theory, V2nd
   Hitt LM, 1996, MIS QUART, V20, P121, DOI 10.2307/249475
   HOOGEVEEN D, 2002, P 35 HAW INT C SYST
   Lee B, 2000, J MANAGE INFORM SYST, V16, P99, DOI 10.1080/07421222.2000.11518267
   Li MF, 1999, INFORM MANAGE-AMSTER, V35, P43, DOI 10.1016/S0378-7206(98)00075-5
   Loveman G.W., 1994, INFORM TECHNOLOGY CO, P84
   MARKUS L, 1993, STRATEGIC INFORMATIO, P375
   McKeen JD., 1993, Strategic Information Technology Management: Perspectives on Organizational Growth and Competitive Advantage, P405
   Menon NM, 2000, INFORM SYST RES, V11, P83, DOI 10.1287/isre.11.1.83.11784
   PRASAD B, 1997, 9709 WHART SCH FIN I
   SHAO B, 2000, THESIS STATE U NEW Y
   Shao BBM, 2000, J COMPUT INFORM SYST, V41, P25
   Shao BBM, 2001, INFORM SOFTWARE TECH, V43, P447, DOI 10.1016/S0950-5849(01)00150-1
   Sircar S, 2000, J MANAGE INFORM SYST, V16, P69, DOI 10.1080/07421222.2000.11518266
   Soh C., 1995, P 16 INT C INFORM SY, P29, DOI DOI 10.1504/IJSTM.2010.029673
   Steinberg D., 1999, MARS user guide
   SUMNER AT, 1995, HEALTH CARE MANAGE R, V20, P92, DOI 10.1097/00004010-199521000-00012
   Targett D., 1999, IT PRODUCTIVITY PARA
   Teo TSH, 2000, INT J INFORM MANAGE, V20, P269, DOI 10.1016/S0268-4012(00)00016-5
   WARD S, 2002, US TODAY        0520
   Weill P, 1992, INFORM SYST RES, V3, P307, DOI 10.1287/isre.3.4.307
NR 32
TC 7
Z9 9
U1 0
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN 1
PY 2004
VL 46
IS 1
BP 65
EP 73
DI 10.1016/S0950-5849(03)00110-1
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 762HG
UT WOS:000187965600005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Paik, I
   Han, T
   Oh, D
   Ha, S
   Park, D
AF Paik, I
   Han, T
   Oh, D
   Ha, S
   Park, D
TI An affiliated search system for an electronic commerce and software
   component architecture
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE information search system; software component; Internet business model;
   component-based software development; electronic commerce
AB This paper describes an Electronic Commerce Goods Search System (ECGSS) that has functions that increase the precision of search results through training of the search system and uses affiliated business transaction processes. The software component architecture for ECGSS also allows the effective deployment of the system on every local business site, in view of the evolving trend in information technology toward easier configuration and re-usability. A general information gathering system with the infrastructure to accept every Internet communication protocol and access control is described. In this affiliated business transaction model, we classify Internet sites into two groups: a cooperative sites group, and a non-cooperative sites group. While designing the components, we optimized their specifications with respect to the whole architecture analysis, dependencies, and interface types using a component-based software development process. Experiments on the effectiveness of the user training function for the search system and the response time for simple queries for each communication protocol are presented. Comparisons of commercial search solutions and architectural standards of several organizations are also given. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Univ Aizu, Sch Comp Sci, Fukushima 9658580, Japan.
   Morasoft Co, Sungbuk Ku, Seoul, South Korea.
   Soonchunhyang Univ, Sch Comp Sci & Engn, Asan, Choongnam Do, South Korea.
C3 University of Aizu; Soonchunhyang University
RP Univ Aizu, Sch Comp Sci, Fukushima 9658580, Japan.
EM paikic@u-aizu.ac.jp
CR Brown AW, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.714622
   CHANG CH, 1997, P 6 INT WWW C SANT C
   HA S, 2000, P SPRING C I KOR MUL
   HAN T, 2001, P SOFTW ENG ART INT, P699
   Herzum P., 2000, BUSINESS COMPONENT F
   KALAKOTA R, 1999, E BUSINESS ROADMAP
   *KOR SOFTW COMP CO, 2000, P 1 JOINT C SOFTW CO
   KRUCHTEN P, 1998, INT WORKSH COMP BAS
   MARCHIORI M, 1997, P 6 INT WWW C SANT C
   NAMKYU C, 2000, KISS SIG SE WORKSH S
   OH D, 2000, P SCI COMP INF 2000
   ORFALI R, 1998, CLIENT SERVER PROGRA
   PAIK I, 1997, J KOREAN INFORMATION, V3, P631
   PAIK I, 1999, P ASS MAN INT ASS MA, P189
   PAIK I, 1997, P TOOLS, V24, P471
   PAIK I, 2000, P SOFTW ENG ART INT, P392
   PAIK I, 2000, P KOR INF SCI SOC C, P337
   PARK D, 2000, P C INF SEC AS 2000
   SEO K, 2000, CONCEPTUAL FRAMEWORK
   STLAURENT, 1999, BUILDING XML APPL
   Turban E., 2000, ELECT COMMERCE MANAG
   Woods S, 2001, IEEE INTERNET COMPUT, V5, P96, DOI 10.1109/MIC.2001.939456
   YACOUB S, 1999, P INT WORKSH COMP BA
   2000, COMMERCENET ECOMMERC
NR 24
TC 2
Z9 4
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 1
PY 2003
VL 45
IS 8
BP 479
EP 497
DI 10.1016/S0950-5849(03)00028-4
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 686WL
UT WOS:000183343900003
DA 2024-07-18
ER

PT J
AU Ngo, DCL
   Law, BL
AF Ngo, DCL
   Law, BL
TI An expert screen design and evaluation assistant that uses
   knowledge-based backtracking
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE automatic layout; propose and revise; design metrics
AB Current user interface builders provide only low-level assistance, because they have knowledge of neither the application, nor the principles by which interface elements are combined effectively. We describe a design tool that unites the knowledge components essential for effective dialog box layout. The knowledge base model consists of (1) style knowledge, which provides design-time constraints on interface specifications; (2) style application system, which handles the actual layout of dialog boxes based on the style knowledge base; (3) design knowledge, which provides quantitative metrics to analyse the spatial properties of the dialog box layout; and (4) design evaluation system, which uses evaluation metrics to compare and evaluate alternative designs. As our empirical study shows, the redesigns using the design tool had significant effect on the preference data. (C) 2002 Elsevier Science B.V. All rights reserved.
C1 Multimedia Univ Jalan, Fac Informat Sci & Technol, Melaka 75450, Malaysia.
C3 Multimedia University
RP Ngo, DCL (corresponding author), 32 Jalan Tempua 5, Puchong 47100, Selangor, Malaysia.
RI Ngo, David C. L./E-3307-2012
CR AAMODT A, 1994, AI COMMUN, V7, P39
   [Anonymous], 1968, ULM Z HOCHSCHULE GES
   BANECEK J, 1995, TRENCODEDCCS195
   BEACH RJ, 1985, THESIS U WATERLOO
   CARDELLI L, 1988, UIST 88 P
   CARDELLI L, 1988, UIST 88 P ACM NEW YO
   FEINER S, 1988, GRAPH INT 88 P
   Galitz W., 1997, The Essential Guide to User Interface Design: An Introduction to GUI design principles and techniques
   GOEL AK, 1992, AI MAG, V13, P50
   GRAY PD, 1996, HCI 96 PEOPLE COMPUT, V11
   HILTZ SR, 1990, MANAGE SCI, V36, P739, DOI 10.1287/mnsc.36.6.739
   HORAK J, 1995, TRENCODECVUT195 CZEC
   HUDSON S, 1989, UIST 89 P ACM NEW YO
   KIM WC, 1993, INTERCHI 93 P ACM NE
   KUROSU M, 1995, CHI 95 P ASS COMP MA
   MARCUS S, 1988, AI MAG, V9, P95
   Mullet K., 1995, DESIGNING VISUAL INT
   MYERS BA, 1991, UIST 91 P ACM NEW YO
   Ngo DCL, 2000, DISPLAYS, V21, P3, DOI 10.1016/S0141-9382(00)00026-3
   Ngo DCL, 2000, J INF SCI ENG, V16, P97
   OLSEN DR, 1989, SIGCHI 89 P ACM NEW
   SINGH G, 1991, ACM T GRAPHIC, P213
   SINGH G, 1988, UIST 88 P ACM NEW YO
   STEVENS A, 1983, IEEE COMPUT GRAPH, V3, P25, DOI 10.1109/MCG.1983.262988
   STREVELER DJ, 1984, INTERACT 84 P N HOLL
   THACKER P, 1995, HUMAN FACTORS PERSPE, P115
   TULLIS T, 1983, THESIS RICE U LAWREN
   TULLIS T, 1988, ADV HUMAN COMPUTER I, V2, P214
   ZANDEN BV, 1990, SIGCHI 90 P 90 ACM N
NR 29
TC 3
Z9 3
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 15
PY 2003
VL 45
IS 6
BP 293
EP 304
AR PII S0950-5849(02)00189-1
DI 10.1016/S0950-5849(02)00189-1
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 673GN
UT WOS:000182572500001
DA 2024-07-18
ER

PT J
AU Chatzigeorgiou, A
AF Chatzigeorgiou, A
TI Performance and power evaluation of C++ object-oriented programming in
   embedded processors
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE embedded systems; object-oriented programming; low power design
AB The development of high-performance and lower power portable devices relies on both the underlying hardware architecture and technology as well as on the application software that executes on embedded processor cores. One way to confront the increasing complexity and decreasing time-to-market of embedded software is by means of modular and reusable code, forcing software designers to use objected oriented programming languages such as C+ + [6]. However, the object-oriented approach is known to introduce a significant performance penalty compared to classical procedural programming. In this paper, the object oriented programming style is evaluated in terms of both performance and power for embedded applications. Profiling results indicate that C++ programs apart from being slower than their corresponding C versions, consume significantly more energy. Further analysis shows that this is mainly due to the increased instruction count, larger code size and increased number of accesses to the data memory for the object-oriented versions. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Univ Macedonia, Dept Appl Informat, Thessaloniki 54006, Greece.
C3 University of Macedonia
RP Chatzigeorgiou, A (corresponding author), Univ Macedonia, Dept Appl Informat, 156 Egnatia Str, Thessaloniki 54006, Greece.
RI Chatzigeorgiou, Alexandros/AAL-6077-2021
CR *ADV RISC MACH, 1995, ARM SOFTW DEV TOOLK
   AIGNER G, 1996, 10 EUR C OBJ OR PROG
   [Anonymous], 2002, Numerical Recipes in C++: The Art of Scientific Computing
   [Anonymous], 1995, Software Engineering
   Benini L, 2000, ACM T DES AUTOMAT EL, V5, P115, DOI 10.1145/335043.335044
   CALDER B, 1994, J PROGRAM LANG, V2, P313
   CHANDRAKASAN A, 1995, LOW POWER DIGITAL CM
   COCKX AJ, 2001, 9 INT S HARDW SOFTW
   Diwan A, 2001, ACM T PROGR LANG SYS, V23, P30, DOI 10.1145/383721.383732
   DRIESEN K, 1996, 11 ANN ACM C OBJ OR, P306
   Furber S.B., 2000, ARM SYSTEM ON CHIP A
   Haney S. W., 1994, Computers in Physics, V8, P690, DOI 10.1063/1.168486
   Harrison R, 1996, SOFTWARE ENG J, V11, P247, DOI 10.1049/sej.1996.0030
   HOLZLE U, 1996, THEOR PRACT OBJ SYST, V1, P167
   LANDMAN PE, 1995, IEEE T VLSI SYST, V3, P173, DOI 10.1109/92.386219
   PLAUGER PJ, 1999, EMB SYST C CHIC ILLN
   ROBINSON AD, 1996, PAR OBJ OR METH APPL
   Robison A. D., 1996, Computers in Physics, V10, P458
   ROTITHOR H, 1999, DIGITAL TECHNICAL J, V10, P32
   Simunic T, 2001, IEEE T VLSI SYST, V9, P15, DOI 10.1109/92.920814
   SINEVRIOTIS G, 1999, 9 INT WORKSH POW TIM, P261
   SINEVRIOTIS G, 2001, SOFLOPO LOW POWER SO
   Tiwari V., 1994, IEEE Transactions on Very Large Scale Integration (VLSI) Systems, V2, P437, DOI 10.1109/92.335012
   Wuytack S, 1998, IEEE T VLSI SYST, V6, P529, DOI 10.1109/92.736124
   ZENDRA O, 1997, OOPSLA 978, P125
   [No title captured]
NR 26
TC 6
Z9 7
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 15
PY 2003
VL 45
IS 4
BP 195
EP 201
AR PII S0950-5849(02)00205-7
DI 10.1016/S0950-5849(02)00205-7
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 653FW
UT WOS:000181425400002
DA 2024-07-18
ER

PT J
AU Chiang, CC
AF Chiang, CC
TI The use of adapters to support interoperability of components for
   reusability
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE adapters; components; interoperability; middleware; reusability
AB Interoperability of heterogeneous applications is defined as the ability for multiple software applications written in different programming languages running on different platforms with different operating systems to communicate and interact with one another over different computer networks. The emerging middleware technologies, including CORBA, COM/DCOM, and Enterprise JavaBeans offer an industrial defacto standard communication infrastructure to support the interoperability of heterogeneous applications in components. However, the implementation of a component suffers from high interaction complexities in the component that seriously degrades the application independence. Software components should be built to be independent of the context in which they are used, allowing them to be reused in many different computing environments. In this paper, we are presenting an adapter to isolate, encapsulate, and manage a component's interactions outside the component. The dynamic interface binding was designed to allow an adapter to examine the signature of the requested services at runtime such as operation names, parameters orders, parameters types, and parameters sizes. The interfaces of interconnecting components are bound at runtime. In addition, the interface language mapping allows an interface in a specific programming language to be automatically generated from an IDL interface. The use of adapters increases the reusability of components and also simplifies the integration of the components to an application. (C) 2002 Elsevier Science B.V. All rights reserved.
C1 Univ Arkansas, Dept Comp Sci, Little Rock, AR 72204 USA.
C3 University of Arkansas System; University of Arkansas Fayetteville;
   University of Arkansas Little Rock
RP Chiang, CC (corresponding author), Univ Arkansas, Dept Comp Sci, 2801,S Univ Ave, Little Rock, AR 72204 USA.
CR [Anonymous], 1989, BUZANDARAN PATMUTIWN, P77
   BEACH BW, 1992, P 14 INT C SOFTW ENG, P120
   EMMERICH W., 2000, P C FUTURE SOFTWARE, P117, DOI DOI 10.1145/336512.336542
   Jololian L. K., 2001, Journal of Systems Integration, V10, P269, DOI 10.1023/A:1011258012373
   Juric MB, 2000, INFORM SOFTWARE TECH, V42, P915, DOI 10.1016/S0950-5849(00)00128-2
   Mowbray T.J., 1995, ESSENTIAL CORBA SYST
   PRITCHARD J, 1999, COM CORBA SIDE SIDE
   RINE D, 1999, P 5 S SOFTW REUS MAY, P37
   SULLIVAN K, 1990, ACM SIGSOFT SOFTWARE, V15, P22
   WALLACE N, 1999, COM DCOM BLUE BOOK
   WHITE E, 1992, P 5 ACM SIGSOFT S SO, P99
   [No title captured]
NR 12
TC 22
Z9 23
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 1
PY 2003
VL 45
IS 3
BP 149
EP 156
AR PII S0950-5849(02)00194-5
DI 10.1016/S0950-5849(02)00194-5
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 643KW
UT WOS:000180861300004
DA 2024-07-18
ER

PT J
AU Nanopoulos, A
   Zakrzewicz, M
   Morzy, T
   Manolopoulos, Y
AF Nanopoulos, A
   Zakrzewicz, M
   Morzy, T
   Manolopoulos, Y
TI Efficient storage and querying of sequential patterns in database
   systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE pattern post-processing; sequential patterns; persistency signatures
ID KNOWLEDGE
AB The number of patterns discovered by data mining can become tremendous, in some cases exceeding the size of the original database. Therefore, there is a requirement for querying previously generated mining results or for querying the database against discovered patters. In this paper, we focus on developing methods for the storage and querying of large collections of sequential patterns. We describe a family of algorithms, which address the problem of considering the ordering among elements, that is crucial when dealing with sequential patterns. Moreover, we take into account the fact that the distribution of elements within sequential patterns is highly skewed, to propose a novel approach for the effective encoding of patterns. Experimental results, which examine a variety of factors, illustrate the efficiency of the proposed method. (C) 2002 Elsevier Science B.V. All rights reserved.
C1 Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki, Greece.
   Poznan Univ Tech, Inst Comp Sci, Poznan, Poland.
C3 Aristotle University of Thessaloniki; Poznan University of Technology
RP Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki, Greece.
EM alex@delab.csd.auth.gr; maciej.zakrzewicz@cs.put.poznan.pl;
   tadeusz.morzy@cs.put.poznan.pl; manolopo@delab.csd.auth.gr
RI Manolopoulos, Yannis/AAI-7767-2020; Zakrzewicz, Maciej/M-2873-2014
OI Zakrzewicz, Maciej/0000-0002-1995-6294
CR AGRAWAL R, 1995, PROC INT CONF DATA, P3, DOI 10.1109/ICDE.1995.380415
   AGRAWAL R, 1996, P 2 INT C KNOWL DISC, P287
   [Anonymous], P 1998 ACM SIGMOD IN
   [Anonymous], 1999, MODERN INFORM RETRIE
   Cooley R., 1999, Knowledge and Information Systems, V1, P5
   Das G, 1997, LECT NOTES COMPUT SC, V1264, P12
   DIAMANTINI C, 1999, P INT WORKSH DAT EXP, P193
   FALOUTSOS C, 1984, ACM T OFF INF SYST, V2, P267, DOI 10.1145/2275.357411
   Fayyad U, 1996, COMMUN ACM, V39, P27, DOI 10.1145/240455.240464
   Giegerich R., 1999, Proc. 3rd Workshop on Algorithm Engineering (WAE'99), P30
   GRAVANO L, 2001, B IEEE TECHNICAL COM, V24, P28
   Han J., 1996, P 2 INT C DATA MININ, P250
   Helmer S, 1997, PROCEEDINGS OF THE TWENTY-THIRD INTERNATIONAL CONFERENCE ON VERY LARGE DATABASES, P386
   HELMER S, 1999, REIHE INFORMATIK, V2, P20
   Hulgeri A., 2001, IEEE DATA ENG B, V24, P22
   Imielinski T, 1996, COMMUN ACM, V39, P58, DOI 10.1145/240455.240472
   Imielinski T, 1999, DATA MIN KNOWL DISC, V3, P373, DOI 10.1023/A:1009816913055
   IMIELINSKI T, 1996, P 2 INT C KNOWL DISC, P256
   KITAGAWA M, 1993, P ACM SIGMOD JUN, P247
   MANBER U, 1993, SIAM J COMPUT, V22, P935, DOI 10.1137/0222058
   Meo R, 1996, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P122
   Morzy T., 1998, Proceedings Fourth International Conference on Knowledge Discovery and Data Mining, P284
   MORZY T, 2001, P E EUR C ADV DAT IN, P141
   Morzy T., 1997, P 1 E EUR S ADV DAT, P311
   MORZY T, 2000, P INT C DAT WAR KNOW, P382
   NANOPOULOS A, 2000, P E EUR C ADV DAT IN, P215
   NANOPOULOS A, 2002, IN PRESS IEEE T KNOW
   Navarro G, 2001, ACM COMPUT SURV, V33, P31, DOI 10.1145/375360.375365
   NAVARRO G, 2000, P 11 ANN S COMB PATT, P350
   Netz A, 2001, PROC INT CONF DATA, P379, DOI 10.1109/ICDE.2001.914850
   Ng R.T., 1998, Proc. of ACM-SIGMOD Intl Conf. on Management of Data, P13
   PEI J, 2000, P PAC AS C KNOWL DIS
   PERKOWICZ M, 1997, P 15 INT JOINT C AI
   RIEDEL E, 2000, P ACM INT C MAN DAT, P13
   Tousidou E, 2000, COMPUT J, V43, P301, DOI 10.1093/comjnl/43.4.301
   Tronicek Z., 2001, Combinatorial Pattern Matching. 12th Annual Symposium, CPM 2001. Proceedings (Lecture Notes in Computer Science Vol. 2089), P143
   VIRMANI A, 1998, THESIS RUTGERS U
   ZAKREWICZ M, 2001, P PAC AS C KNOWL DIS, P306
NR 38
TC 3
Z9 3
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN 1
PY 2003
VL 45
IS 1
BP 23
EP 34
AR PII S0950-5849(02)00158-1
DI 10.1016/S0950-5849(02)00158-1
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 633RD
UT WOS:000180295500004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhao, ZJ
   Toda, T
   Kitamura, T
AF Zhao, Zhenjiang
   Toda, Takahisa
   Kitamura, Takashi
TI Diversity-aware fairness testing of machine learning classifiers through
   hashing-based sampling
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Algorithm fairness; Fairness testing; SAT/SMT solving; Constraint
   sampling; Hashing-based technique
AB Context: There are growing concerns about algorithmic fairness, as some machine learning (ML)-based algorithms have been found to exhibit biases against protected attributes such as gender, race, age and so on. Individual fairness requires an ML classifier to produce similar outputs for similar individuals. Verification Based Testing (VET) is a state-of-the-art black-box testing algorithm for individual fairness that leverages constraint solving to generate test cases. Objective: Generating diverse test cases is expected to facilitate efficient detection of diverse discriminatory data instances (i. e., cases that violate individual fairness). Hashing-based sampling techniques draw a sample approximately uniformly at random from the set of solutions of given Boolean constraints. We propose VET-X, which improves VET with hashing-based sampling, aiming to improve its testing performance. Method: We realize hashing-based sampling for VET. The challenge is that the off-the-shelf hashing-based sampling techniques cannot be integrated in a straightforward manner because the constraints in VET are generally not Boolean. Moreover, we propose several enhancement techniques to make VET-X more efficient. Results: To evaluate our method, we conduct experiments, where VET-X is compared to VET, SG and ExpGA (other well-known fairness testing algorithms) over a set of configurations consisting of several datasets, protected attributes, and ML classifiers. The results show that, with each configuration, VET-X detects more discriminatory data instances with higher diversity than VET and SG. VET-X detects discriminatory data instances with higher diversity than ExpGA, though the number of discriminatory data instances detected by VET-X is lesser than ExpGA. Conclusion: Our proposed method performs better than other state-of-the-art black-box fairness testing algorithms, particularly in terms of diversity. Our method can serve to efficiently identify flaws in ML classifiers with respect to individual fairness for subsequent improvements of an ML classifier. On the other hand, although our method is specific to individual fairness, it could work for testing other aspects of a software system such as security and counterfactual explanations with some technical adaptations, which remains for future work.
C1 [Zhao, Zhenjiang; Toda, Takahisa] Univ Electrocommun, Grad Sch Informat & Engn, Tokyo, Japan.
   [Kitamura, Takashi] Natl Inst Adv Ind Sci & Technol, Tokyo, Japan.
C3 University of Electro-Communications - Japan; National Institute of
   Advanced Industrial Science & Technology (AIST)
RP Zhao, ZJ (corresponding author), Univ Electrocommun, Grad Sch Informat & Engn, Tokyo, Japan.
EM zhenjiang@disc.lab.uec.ac.jp; toda@disc.lab.uec.ac.jp;
   t.kitamura@aist.go.jp
RI Kitamura, Takashi/N-6028-2016
OI Zhao, Zhenjiang/0000-0002-5965-5832
FU New Energy and Industrial Technology Development Organization (NEDO)
   [JPMJSP2131, JPNP20006]; JST SPRING [JPMJSP2131]
FX We would like to appreciate the reviewers and editor for their valuable
   comments, which are helpful for improving this work. This paper is
   partly based on results obtained from a project, JPNP20006, commissioned
   by the New Energy and Industrial Technology Development Organization
   (NEDO) . This paper is supported by JST SPRING, Grant Number JPMJSP2131.
CR Aggarwal A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P625, DOI 10.1145/3338906.3338937
   Angwin Julia, 2016, ProPublica
   [Anonymous], 1994, Mathematical Statistics and Data Analysis
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Baluta T, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1249, DOI 10.1145/3319535.3354245
   Baste J, 2022, ARTIF INTELL, V303, DOI 10.1016/j.artint.2021.103644
   Becker B., 1996, Adult. UCI Machine Learning Repository, DOI DOI 10.24432/C5XW20
   Biere A., 2021, Handbook of Satisfiability
   Byanjankar A, 2015, 2015 IEEE SYMPOSIUM SERIES ON COMPUTATIONAL INTELLIGENCE (IEEE SSCI), P719, DOI 10.1109/SSCI.2015.109
   Chakraborty Supratik, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P304, DOI 10.1007/978-3-662-46681-0_25
   Chakraborty Supratik, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P608, DOI 10.1007/978-3-642-39799-8_40
   Chakraborty S, 2014, DES AUT CON, DOI 10.1145/2593069.2593097
   Crawford J, 1996, MOR KAUF R, P148
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   De Moura L, 2011, COMMUN ACM, V54, P69, DOI 10.1145/1995376.1995394
   Delannoy R., 2022, P 37 ANN ACMIEEE S L, DOI [10.1145/3531130.3533338, DOI 10.1145/3531130.3533338]
   Dua D., 2017, UCI MACHINE LEARNING
   Duenas-Osorio L, 2017, AAAI CONF ARTIF INTE, P4488
   Dwork Cynthia, 2012, P 3 INN THEOR COMP S, P214, DOI DOI 10.1145/2090236.2090255
   Ermon S., 2013, P 30 INT C INT C MAC, V28
   Fan M, 2022, PROC INT CONF SOFTW, P871, DOI 10.1145/3510003.3510137
   Fawzi A, 2018, MACH LEARN, V107, P481, DOI 10.1007/s10994-017-5663-3
   Fodor I. K, 2002, SURVEY DIMENSION RED
   Gabor T, 2018, PR INT CONF AUTONOM, P131, DOI 10.1109/ICAC.2018.00023
   Galhotra S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P498, DOI 10.1145/3106237.3106277
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Gomes C. P., 2006, Advances in Neural Information Processing Systems
   Gomes CP, 2007, LECT NOTES COMPUT SC, V4501, P100
   Goodfellow I.J., 2015, PROC 3 INT C LEARN R
   Hebrard E., 2005, P 20 NATL C ARTIFICI, P372
   Hebrard E, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P106
   Hoffman M, 2018, Q J ECON, V133, P765, DOI 10.1093/qje/qjx042
   Hofmann H., 1994, UCI MACHINE LEARNING, DOI DOI 10.24432/C5NC77
   Ivrii A, 2016, CONSTRAINTS, V21, P41, DOI 10.1007/s10601-015-9204-z
   Karimi AH, 2020, PR MACH LEARN RES, V108, P895
   Kitamura T, 2022, LECT NOTES COMPUT SC, V13711, P101, DOI 10.1007/978-3-031-21251-2_7
   Kuhn R., 2016, Automated combinatorial testing for software
   Kuhn R.D., 2013, Introduction to combinatorial testing
   Kurakin A., 2017, Proc. of ICLR 2017
   Laugel T, 2023, PROCEEDINGS OF THE 6TH ACM CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, FACCT 2023, P1859, DOI 10.1145/3593013.3594122
   Le S, 2008, J STAT SOFTW, V25, P1, DOI 10.18637/jss.v025.i01
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Morales D.P., 2021, INT C INT SCI, P183
   Moro S., 2012, UCI Machine Learning Repository, DOI DOI 10.24432/C5K306
   Moro S, 2014, DECIS SUPPORT SYST, V62, P22, DOI 10.1016/j.dss.2014.03.001
   Mothilal RK, 2020, FAT* '20: PROCEEDINGS OF THE 2020 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P607, DOI 10.1145/3351095.3372850
   Oneto L., 2019, Studies in Computational Intelligence, V896, P155
   Oneto L, 2020, PR INT CONF DATA SC, P30, DOI 10.1109/DSAA49011.2020.00015
   Patel AR, 2022, IEEE ICST WORKSHOP, P94, DOI 10.1109/ICSTW55395.2022.00030
   Perera A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10116-7
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Russell C, 2019, FAT*'19: PROCEEDINGS OF THE 2019 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P20, DOI 10.1145/3287560.3287569
   Sano Shinya, 2022, P 34 INT C SOFTW ENG, P200
   Sharma Arnab, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P200, DOI 10.1145/3395363.3397352
   Sharma A, 2021, 20TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2021), P738, DOI 10.1109/ICMLA52953.2021.00123
   Sharma A, 2020, LECT NOTES COMPUT SC, V12543, P255, DOI 10.1007/978-3-030-64881-7_16
   Shrotri AA, 2022, AAAI CONF ARTIF INTE, P8304
   Thanh Binh Luong, 2011, P 17 ACM SIGKDD INT, P502
   Udeshi S, 2018, IEEE INT CONF AUTOM, P98, DOI 10.1145/3238147.3238165
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wineberg M, 2003, LECT NOTES COMPUT SC, V2724, P1493
   Wu XJ, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4640
   Zhang PX, 2020, PROC INT CONF SOFTW, P949, DOI 10.1145/3377811.3380331
   Zhao Z, 2022, LECT NOTES COMPUT SC, V13711, P35, DOI 10.1007/978-3-031-21251-2_3
NR 65
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2024
VL 167
AR 107390
DI 10.1016/j.infsof.2023.107390
EA DEC 2023
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GA4N6
UT WOS:001149925800001
DA 2024-07-18
ER

PT J
AU Yu, X
   Rao, JQ
   Liu, L
   Lin, GC
   Hu, WH
   Keung, JW
   Zhou, JW
   Xiang, JW
AF Yu, Xiao
   Rao, Jiqing
   Liu, Lei
   Lin, Guancheng
   Hu, Wenhua
   Keung, Jacky Wai
   Zhou, Junwei
   Xiang, Jianwen
TI Improving effort-aware defect prediction by directly learning to rank
   software modules
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software Defect Prediction; Effort aware; Genetic algorithm
ID PROGRAM DEPENDENCE GRAPH; MODELS; NUMBER
AB Context: Effort-Aware Defect Prediction (EADP) ranks software modules according to the defect density of software modules, which allows testers to find more bugs while reviewing a certain amount of Lines Of Code (LOC). Most existing methods regard the EADP task as a regression or classification problem. Optimizing the regression loss or classification accuracy might result in poor effort-aware performance. Objective: Therefore, we propose a method called EALTR to improve the EADP performance by directly maximizing the Proportion of the found Bugs (PofB@20%) value when inspecting the top 20% LOC. Method: EALTR uses the linear regression model to build the EADP model, and then employs the composite differential evolution algorithm to generate a set of coefficient vectors for the linear regression model. Finally, EALTR selects the coefficient vector that achieves the highest PofB@20% value on the training dataset to construct the EADP model. To further reduce the Initial False Alarms (IFA) value of EALTR, we propose a re-ranking strategy in the prediction phase. Results: Our experimental results on eleven project datasets with 41 releases show that EALTR can find 5.83%- 54.47% more bugs than the baseline methods whose IFA values are less than 10 and the re-ranking strategy significantly reduces the IFA value by 16.95%. Conclusion: Our study verifies the effectiveness of directly optimizing the effort-aware metric (i.e., PofB@20%) to build the EADP model. EALTR is recommended as an effective EADP method, since it can help software testers find more bugs.
C1 [Yu, Xiao; Rao, Jiqing; Liu, Lei; Lin, Guancheng; Hu, Wenhua; Zhou, Junwei; Xiang, Jianwen] Wuhan Univ Technol, Sch Comp Sci & Artificial Intelligence, Hubei Key Lab Transportat Internet Things, Wuhan, Peoples R China.
   [Yu, Xiao; Xiang, Jianwen] Wuhan Univ Technol, Chongqing Res Inst, Chongqing, Peoples R China.
   [Keung, Jacky Wai] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Peoples R China.
C3 Wuhan University of Technology; Wuhan University of Technology; City
   University of Hong Kong
RP Xiang, JW (corresponding author), Wuhan Univ Technol, Sch Comp Sci & Artificial Intelligence, Hubei Key Lab Transportat Internet Things, Wuhan, Peoples R China.
EM xiaoyu@whut.edu.cn; jqrao@whut.edu.cn; leiliu_cs@hotmail.com;
   gclin@whut.edu.cn; whu10@whut.edu.cn; jacky.keung@cityu.edu.hk;
   junweizhou@whut.edu.cn; jwxiang@whut.edu.cn
OI Liu, Lei/0009-0009-9632-4678; Yu, Xiao/0000-0002-4473-3068; Keung,
   Jacky/0000-0002-3803-9600
FU National Key Research and Development Program [2022YFB3104001]; National
   Natural Science Foundation of China [61806151, 62202350]; Key Research
   and Development Program of Hubei Province [2022BAA050, 2020AAA001]; Key
   Research and Development Program of Hainan Province [ZDYF2021GXJS014];
   Natural Science Foundation of Chongqing [cstc2021jcyj-msxmX1146,
   cstc2021jcyj-msxmX1115]
FX <B>Acknowledgments</B> This work is partially supported by the National
   Key Research and Development Program (Grant No. 2022YFB3104001) , the
   National Natural Science Foundation of China (Grant No. 61806151,
   62202350) , the Key Research and Development Program of Hubei Province
   (Grant No. 2022BAA050, 2020AAA001) , the Key Research and Development
   Program of Hainan Province (Grant No. ZDYF2021GXJS014) , and the Natural
   Science Foundation of Chongqing (Grant No. cstc2021jcyj-msxmX1146,
   cstc2021jcyj-msxmX1115) .
CR [Anonymous], 2007, The promise repository of empirical software engineering data
   Arun C, 2022, SOFT COMPUT, V26, P12915, DOI 10.1007/s00500-021-06112-6
   Bai JJ, 2022, INFORM SOFTWARE TECH, V150, DOI 10.1016/j.infsof.2022.106985
   Bennin KE, 2022, IET SOFTW, V16, P185, DOI 10.1049/sfw2.12052
   Bennin KE, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P214, DOI 10.1109/QRS.2016.33
   Bennin KE, 2016, P INT COMP SOFTW APP, P154, DOI 10.1109/COMPSAC.2016.144
   Çarka J, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10186-7
   Chen X, 2019, INFORM SOFTWARE TECH, V106, P161, DOI 10.1016/j.infsof.2018.10.003
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   Chen YX, 2022, IEEE T GEOSCI REMOTE, V60, DOI 10.1109/TGRS.2022.3155283
   Chen YX, 2020, IEEE T GEOSCI REMOTE, V58, P7049, DOI 10.1109/TGRS.2020.2979273
   Chen YX, 2020, PATTERN RECOGN, V105, DOI 10.1016/j.patcog.2020.107368
   Chen YZ, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21196417
   Cheng T, 2022, FRONT COMPUT SCI-CHI, V16, DOI 10.1007/s11704-021-1013-5
   Du X, 2022, AXIOMS, V11, DOI 10.3390/axioms11050205
   Feng S, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106662
   Feng S, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106432
   Ferreira JA, 2006, ANN STAT, V34, P1827, DOI 10.1214/009053606000000425
   Gao KH, 2007, IEEE T RELIAB, V56, P223, DOI 10.1109/TR.2007.896761
   Gao YX, 2022, INFORM SOFTWARE TECH, V151, DOI 10.1016/j.infsof.2022.107016
   Gong LA, 2023, IEEE T SOFTWARE ENG, V49, P2440, DOI 10.1109/TSE.2022.3220740
   Gong LN, 2022, IEEE T SOFTWARE ENG, V48, P5030, DOI 10.1109/TSE.2021.3131950
   Gong LN, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2172
   He CC, 2021, SCIENTOMETRICS, V126, P4005, DOI 10.1007/s11192-021-03943-w
   Hosseini S., 2016, P 12 INT C PRED MOD, P1
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Huang QG, 2022, IET SOFTW, V16, P200, DOI 10.1049/sfw2.12053
   Kamei Y, 2010, PROC IEEE INT CONF S
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Khatri Y., 2022, Inf. Softw. Technol
   Li DM, 2021, IEEE I C SQRS-C, P350, DOI 10.1109/QRS-C55045.2021.00059
   Li FY, 2023, IET SOFTW, V17, P168, DOI 10.1049/sfw2.12099
   Li WW, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106364
   Liu C, 2019, INFORM SOFTWARE TECH, V107, P125, DOI 10.1016/j.infsof.2018.11.005
   Ma XX, 2022, INFORM SOFTWARE TECH, V147, DOI 10.1016/j.infsof.2022.106906
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Ni C., 2020, IEEE Transactions on Software Engineering
   Ni C, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3508479
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pornprasit C, 2023, IEEE T SOFTWARE ENG, V49, P84, DOI 10.1109/TSE.2022.3144348
   Qiao L, 2019, PLOS ONE, V14, DOI 10.1371/journal.pone.0211359
   Qu Y, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106605
   Qu Y, 2021, IEEE T SOFTWARE ENG, V47, P348, DOI 10.1109/TSE.2019.2892959
   Rao JQ, 2021, IEEE I C SQRS-C, P372, DOI 10.1109/QRS-C55045.2021.00062
   Ryu D, 2016, APPL SOFT COMPUT, V49, P1062, DOI 10.1016/j.asoc.2016.04.009
   Shuai B, 2013, 2013 9TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND SECURITY (CIS), P260, DOI 10.1109/CIS.2013.61
   Stradowski S, 2023, INFORM SOFTWARE TECH, V155, DOI 10.1016/j.infsof.2022.107128
   Tong HN, 2022, INFORM SOFTWARE TECH, V142, DOI 10.1016/j.infsof.2021.106747
   Ulan M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09984-2
   Wahono Romi Satria, 2014, Journal of Software, V9, P1324, DOI 10.4304/jsw.9.5.1324-1333
   Wahono RS, 2014, ADV SCI LETT, V20, P239, DOI 10.1166/asl.2014.5283
   Wang Y, 2011, IEEE T EVOLUT COMPUT, V15, P55, DOI 10.1109/TEVC.2010.2087271
   Weyuker EJ, 2010, EMPIR SOFTW ENG, V15, P277, DOI 10.1007/s10664-009-9111-2
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xie H, 2022, PROC INT CONF SOFTW, P48, DOI 10.1145/3510003.3510136
   Xu Z, 2022, IEEE T RELIAB, V71, P204, DOI 10.1109/TR.2021.3066170
   Xu Z, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P10, DOI 10.1109/QRS.2019.00015
   Xu Z, 2019, J COMPUT SCI TECH-CH, V34, P1039, DOI 10.1007/s11390-019-1959-z
   Yan M, 2017, INT SYMP EMP SOFTWAR, P344, DOI 10.1109/ESEM.2017.48
   Yang DH, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3561382
   Yang XX, 2015, IEEE T RELIAB, V64, P234, DOI 10.1109/TR.2014.2370891
   Yang XG, 2021, INT J SOFTW ENG KNOW, V31, P289, DOI 10.1142/S0218194021500108
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yu X, 2023, INFORM SOFTWARE TECH, V157, DOI 10.1016/j.infsof.2023.107165
   Yu X, 2022, INFORM SOFTWARE TECH, V146, DOI 10.1016/j.infsof.2022.106847
   Yu X, 2020, IEEE T RELIAB, V69, P139, DOI 10.1109/TR.2019.2931559
   Yu X, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P298, DOI [10.1109/SANER.2019.8668033, 10.1109/saner.2019.8668033]
   Yu X, 2018, SOFT COMPUT, V22, P3461, DOI 10.1007/s00500-018-3093-1
   Yu X, 2017, INT J SOFTW ENG KNOW, V27, P1427, DOI 10.1142/S0218194017400046
   Yu X, 2017, PROC INT SYMP SOFTW, P78, DOI 10.1109/ISSRE.2017.18
   Yu X, 2017, J SYST SOFTWARE, V134, P44, DOI 10.1016/j.jss.2017.08.025
   Yu X, 2016, IEEE INT SYMP SOFTW, P181, DOI 10.1109/ISSREW.2016.35
   Zhang NN, 2022, IET SOFTW, V16, P29, DOI 10.1049/sfw2.12029
   Zhang Z, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3576043
   Zhao KS, 2022, IET SOFTW, V16, P259, DOI 10.1049/sfw2.12040
   Zhao KS, 2021, IEEE T RELIAB, V70, P848, DOI 10.1109/TR.2021.3060937
   Zhao YY, 2022, INFORM SOFTWARE TECH, V149, DOI 10.1016/j.infsof.2022.106939
   Zhen Y., 2022, ACM Trans. Softw. Eng. Methodol.
   Zhimin He, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P45, DOI 10.1109/ESEM.2013.20
   Zhou CY, 2022, INFORM SOFTWARE TECH, V152, DOI 10.1016/j.infsof.2022.107057
   Zhou TC, 2019, INFORM SOFTWARE TECH, V114, P204, DOI 10.1016/j.infsof.2019.07.003
   Zhou ZH, 2020, Arxiv, DOI arXiv:1702.08835
NR 84
TC 5
Z9 5
U1 5
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2024
VL 165
AR 107250
DI 10.1016/j.infsof.2023.107250
EA OCT 2023
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Y9VP4
UT WOS:001108667800001
DA 2024-07-18
ER

PT J
AU Laiq, M
   bin Ali, N
   Börstler, J
   Engström, E
AF Laiq, Muhammad
   bin Ali, Nauman
   Borstler, Jurgen
   Engstrom, Emelie
TI A data-driven approach for understanding invalid bug reports: An
   industrial case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software maintenance; Invalid bug reports; Bug management; Topic
   modeling; LDA; Bug classification; Software analytics
ID SEVERITY; MODEL
AB Context: Bug reports created during software development and maintenance do not always describe deviations from a system's valid behavior. Such invalid bug reports may consume significant resources and adversely affect the prioritization and resolution of valid bug reports. There is a need to identify preventive actions to reduce the inflow of invalid bug reports. Existing research has shown that manually analyzing invalid bug report descriptions provides cues regarding preventive actions. However, such a manual approach is not cost-effective due to the time required to analyze a sufficiently large number of bug reports needed to identify useful patterns. Furthermore, the analysis needs to be repeated as the underlying causes of invalid bug reports change over time.Objective: In this study, we propose and evaluate the use of Latent Dirichlet Allocation (LDA), a topic modeling approach, to support practitioners in suggesting preventive actions to avoid the creation of similar invalid bug reports in the future. Method: In an industrial case study, we first manually analyzed descriptions of invalid bug reports to identify common patterns in their descriptions. We further investigated to what extent LDA can support this manual process. We used expert-based validation to evaluate the relevance of identified common patterns and their usefulness in suggesting preventive measures. Results: We found that invalid bug reports have common patterns that are perceived as relevant, and they can be used to devise preventive measures. Furthermore, the identification of common patterns can be supported with automation.Conclusion: Using LDA, practitioners can effectively identify representative groups of bug reports (i.e., relevant common patterns) from a large number of bug reports and analyze them further to devise preventive measures.
C1 [Laiq, Muhammad; bin Ali, Nauman; Borstler, Jurgen] Blekinge Inst Technol, Dept Software Engn, SE-37179 Karlskrona, Sweden.
   [Engstrom, Emelie] Lund Univ, Dept Software Engn, SE-22100 Lund, Sweden.
C3 Blekinge Institute Technology; Lund University
RP Laiq, M (corresponding author), Blekinge Inst Technol, Dept Software Engn, SE-37179 Karlskrona, Sweden.
EM muhammad.laiq@bth.se; nauman.ali@bth.se; jurgen.borstler@bth.se;
   emelie.engstrom@cs.lth.se
RI Ali, Nauman bin/J-4293-2015; Engström, Emelie/AAG-7808-2019
OI Ali, Nauman bin/0000-0001-7266-5632; Engström,
   Emelie/0000-0001-6736-9425
FU ELLIIT - Swedish government; GIST project; Knowledge Foundation in
   Sweden;  [20220235]
FX This work has been supported by ELLIIT, a strategic research environment
   in information technology and mobile communications funded by the
   Swedish government. The work has also been supported by a research grant
   for the GIST project (reference number 20220235) from the Knowledge
   Foundation in Sweden.
CR Akilan T, 2020, IEEE SYS MAN CYBERN, P1622, DOI [10.1109/smc42975.2020.9283289, 10.1109/SMC42975.2020.9283289]
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   Bachmann A, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P119
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Belle AB, 2016, INFORM SOFTWARE TECH, V74, P1, DOI 10.1016/j.infsof.2016.01.008
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bibyan Ritu, 2022, Proceedings of Data Analytics and Management: ICDAM 2021. Lecture Notes on Data Engineering and Communications Technologies (90), P363, DOI 10.1007/978-981-16-6289-8_31
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Canfora G, 2014, EMPIR SOFTW ENG, V19, P1, DOI 10.1007/s10664-012-9214-z
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Chaparro O, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P218, DOI [10.1109/SANER.2019.8667985, 10.1109/saner.2019.8667985]
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Damevski K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P932, DOI 10.1145/3180155.3182541
   Fan YR, 2020, IEEE T SOFTWARE ENG, V46, P495, DOI 10.1109/TSE.2018.2864217
   He JJ, 2020, PROC INT SYMP SOFTW, P184, DOI 10.1109/ISSRE5003.2020.00026
   Hindle A., 2011, Automated topic naming to support cross-project analysis of software maintenance activities, P163
   Hindle A, 2015, EMPIR SOFTW ENG, V20, P479, DOI 10.1007/s10664-014-9312-1
   Jian Sun, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P407, DOI 10.1109/ICST.2011.43
   Jiang H, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3344158
   Jie Zou, 2016, 2016 9th International Conference on Service Science (ICSS). Proceedings, P60, DOI 10.1109/ICSS.2016.16
   Joorabchi ME, 2014, P 11 WORK C MIN SOFT, P62, DOI [10.1145/2597073.2597098, DOI 10.1145/2597073.2597098]
   Just S, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P82, DOI 10.1109/VLHCC.2008.4639063
   Kim J, 2022, IEEE ACCESS, V10, P94643, DOI 10.1109/ACCESS.2022.3204689
   Laiq M, 2022, LECT NOTES COMPUT SC, V13709, P497, DOI 10.1007/978-3-031-21388-5_34
   Limsettho N, 2016, INT J SOFTW ENG KNOW, V26, P1027, DOI 10.1142/S0218194016500352
   Limsettho N, 2014, INT WORKSH EMPIR ENG, P7, DOI 10.1109/IWESEP.2014.8
   Lin TY, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P539, DOI 10.1145/2566486.2567980
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Luo Q, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P559, DOI 10.1145/2950290.2950344
   Martin W, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P435, DOI 10.1145/2950290.2950320
   Mehrotra R, 2013, SIGIR'13: THE PROCEEDINGS OF THE 36TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH & DEVELOPMENT IN INFORMATION RETRIEVAL, P889
   Panichella A, 2019, LECT NOTES COMPUT SC, V11664, P11, DOI 10.1007/978-3-030-27455-9_2
   Panichella S, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106665
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pettinato M, 2019, INFORM SOFTWARE TECH, V114, P121, DOI 10.1016/j.infsof.2019.06.011
   Rahman MM, 2020, PROC IEEE INT CONF S, P605, DOI 10.1109/ICSME46990.2020.00063
   Rana Rakesh, 2014, Proceedings of the 9th International Conference on Software Engineering and Applications ICSOFT-EA 2014, P383
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Shimagaki J, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268927
   Silva CC, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10026-0
   Souza LBL, 2019, INFORM SOFTWARE TECH, V111, P37, DOI 10.1016/j.infsof.2019.03.009
   Su Y, 2017, J SYST SOFTWARE, V125, P197, DOI 10.1016/j.jss.2016.12.005
   Tang J, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P5
   Tao Zhang, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P223, DOI 10.1109/APSEC.2014.43
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Wang YJ, 2020, KNOWL INF SYST, V62, P2461, DOI 10.1007/s10115-019-01426-2
   Wang YJ, 2018, IEEE DATA MINING, P607, DOI 10.1109/ICDM.2018.00076
   Yang G, 2019, KSII T INTERNET INF, V13, P1583, DOI 10.3837/tiis.2019.03.026
   Yang G, 2014, P INT COMP SOFTW APP, P97, DOI 10.1109/COMPSAC.2014.16
   Zanetti MS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1032, DOI 10.1109/ICSE.2013.6606653
   Zhang J, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-014-5241-2
   Zhang W, 2014, INT C CLOUD COMP BIG, P62, DOI 10.1109/CCBD.2014.14
   Zhang XF, 2017, ASIA PAC SOFWR ENG, P328, DOI 10.1109/APSEC.2017.39
   Zhao WNX, 2011, LECT NOTES COMPUT SC, V6611, P338, DOI 10.1007/978-3-642-20161-5_34
   Zibran MF, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P713, DOI 10.1145/2889160.2892646
   Zou J, 2016, IEICE T INF SYST, VE99D, P1762, DOI 10.1587/transinf.2016EDP7052
   Zou WQ, 2020, IEEE T SOFTWARE ENG, V46, P836, DOI 10.1109/TSE.2018.2870414
NR 57
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107305
DI 10.1016/j.infsof.2023.107305
EA AUG 2023
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA P8ZS8
UT WOS:001053508400001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Lin, W
   Ding, M
   Lin, KP
   Ding, ZH
AF Lin, Wang
   Ding, Mi
   Lin, Kaipeng
   Ding, Zuohua
TI Formal synthesis of neural Craig interpolant via counterexample guided
   deep learning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Nonlinear Craig interpolant; Formal method; Counterexample Guided
   Inductive Synthesis; Deep neural networks
ID CYLINDRICAL ALGEBRAIC DECOMPOSITION; LOWER BOUNDS; GENERATION
AB Context: Craig interpolation is a significant and efficient application to formal verification and synthesis. However, there still remains a challenge in the synthesis of Craig interpolation for nonlinear theory.Objective: For quantifier-free theories of nonlinear arithmetic, this paper proposes a new approach to generate nonlinear Craig interpolants represented as deep neural networks.Method: The approach exploits a CEGIS framework where a learner yields a neural candidate interpolant satisfying the interpolant conditions against training data sets, and a verifier adopts computer algebra methods to confirm the correctness of the candidate or to generate counterexamples for further refining the candidate. Results: We implement the tool SyntheNI based on our CEGIS procedure, and assess the performance against a collection of benchmark examples. The tool SyntheNI performs better than existing methods in the aspect of the iteration number and the computational time. As an application, the tool SyntheNI is used to synthesize loop invariants.Conclusion: The SyntheNI can generate nonlinear Craig interpolants for quantifier free nonlinear real arith-metic. The experimental evaluation confirms the high performance of our synthesis method.
C1 [Lin, Wang; Ding, Mi; Lin, Kaipeng; Ding, Zuohua] Zhejiang Sci Tech Univ, Sch Comp Sci & Technol, Hangzhou, Peoples R China.
C3 Zhejiang Sci-Tech University
RP Ding, ZH (corresponding author), Zhejiang Sci Tech Univ, Sch Comp Sci & Technol, Hangzhou, Peoples R China.
EM zouhuading@hotmail.com
RI LIN, WANG/JWA-3182-2024
FU National Natural Science Foun-dation of China [62272416, 62132014];
   Zhejiang ProvincialKey Research and Development Program of China
   [2022C01045]; State Key Laboratory of Synthetical Automation for Process
   Industries [2021-KF-21-07]
FX Acknowledgements This work was supported by the National Natural Science
   Foun-dation of China (No. 62272416, 62132014) , the Zhejiang
   ProvincialKey Research and Development Program of China (No. 2022C01045)
   , and the State Key Laboratory of Synthetical Automation for Process
   Industries (No. 2021-KF-21-07) .
CR Bai Xue, 2020, Dependable Software Engineering. Theories, Tools, and Applications. 6th International Symposium, SETTA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12153), P143, DOI 10.1007/978-3-030-62822-2_9
   Brillout A, 2010, LECT NOTES ARTIF INT, V6173, P384, DOI 10.1007/978-3-642-14203-1_33
   Chen MS, 2019, LECT NOTES ARTIF INT, V11716, P178, DOI 10.1007/978-3-030-29436-6_11
   Cimatti A, 2008, LECT NOTES COMPUT SC, V4963, P397, DOI 10.1007/978-3-540-78800-3_30
   Cimatti A, 2013, LECT NOTES COMPUT SC, V7795, P93
   Clarke E, 2003, TIME-ICTL 2003: 10TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING AND FOURTH INTERNATIONAL CONFERENCE ON TEMPORAL LOGIC, PROCEEDINGS, P7
   COLLINS GE, 1991, J SYMB COMPUT, V12, P299, DOI 10.1016/S0747-7171(08)80152-6
   Craig W., 1957, J SYMBOLIC LOGIC, V22, P269
   Ding M, 2022, PROC INT SYMP SOFTW, P263, DOI 10.1109/ISSRE55969.2022.00034
   Gan T, 2020, LECT NOTES COMPUT SC, V12224, P415, DOI 10.1007/978-3-030-53288-8_20
   Gan T, 2016, LECT NOTES ARTIF INT, V9706, P195, DOI 10.1007/978-3-319-40229-1_14
   Gao SC, 2016, LECT NOTES COMPUT SC, V9636, P625, DOI 10.1007/978-3-662-49674-9_41
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   Jung Y, 2011, LECT NOTES COMPUT SC, V6605, P205, DOI 10.1007/978-3-642-19835-9_17
   Kovács L, 2009, LECT NOTES ARTIF INT, V5663, P199, DOI 10.1007/978-3-642-02959-2_17
   Krajicek J, 1997, J SYMBOLIC LOGIC, V62, P457, DOI 10.2307/2275541
   Kupferschmid S, 2011, LECT NOTES COMPUT SC, V6919, P240, DOI 10.1007/978-3-642-24310-3_17
   Lasserre JB, 2005, SIAM J OPTIMIZ, V15, P383, DOI 10.1137/040603942
   LESHNO M, 1993, NEURAL NETWORKS, V6, P861, DOI 10.1016/S0893-6080(05)80131-5
   Lin SW, 2017, IEEE INT CONF AUTOM, P793, DOI 10.1109/ASE.2017.8115690
   Lin Wang, 2022, 2022 9th International Conference on Dependable Systems and Their Applications (DSA), P116, DOI 10.1109/DSA56465.2022.00023
   Liyun Dai, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P364, DOI 10.1007/978-3-642-39799-8_25
   McMillan KL, 2008, LECT NOTES COMPUT SC, V4963, P413, DOI 10.1007/978-3-540-78800-3_31
   McMillan K. L., 2011, 2011 Formal Methods in Computer-Aided Design (FMCAD), P19
   McMillan KL, 2003, LECT NOTES COMPUT SC, V2725, P1
   Okudono T, 2017, LECT NOTES COMPUT SC, V10695, P491, DOI 10.1007/978-3-319-71237-6_24
   Peruffo A., 2021, LNCS, P370
   Pudlak P, 1997, J SYMBOLIC LOGIC, V62, P981, DOI 10.2307/2275583
   PUTINAR M, 1993, INDIANA U MATH J, V42, P969, DOI 10.1512/iumj.1993.42.42045
   Sharma Rahul, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P71, DOI 10.1007/978-3-642-31424-7_11
   Strzebonski AW, 2006, J SYMB COMPUT, V41, P1021, DOI 10.1016/j.jsc.2006.06.004
   Tjeng V, 2019, Arxiv, DOI arXiv:1711.07356
   Yorsh G, 2005, LECT NOTES ARTIF INT, V3632, P353
NR 33
TC 0
Z9 0
U1 2
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2023
VL 163
AR 107298
DI 10.1016/j.infsof.2023.107298
EA JUL 2023
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA P1XT4
UT WOS:001048648400001
DA 2024-07-18
ER

PT J
AU Xiao, X
   Xiao, RJ
   Li, Q
   Lv, JH
   Cui, SY
   Liu, QX
AF Xiao, Xi
   Xiao, Renjie
   Li, Qing
   Lv, Jianhui
   Cui, Shunyan
   Liu, Qixu
TI BugRadar: Bug localization by knowledge graph link prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bug localization; Knowledge graph; Collaborative filtering
ID NEURAL-NETWORKS; VULNERABILITY
AB Context : Information Retrieval-based Bug Localization (IRBL) aims to design automatic systems that find buggy files according to bug reports, which can reduce the time consumption to fix bugs for programmers. There has been extensive research on IRBL techniques in recent years. However, these methods cannot make full use of the structure information in bug reports and source files.Objective : In this paper, we propose a novel scheme BugRadar. It combines text features and structure features from bug reports and source files for bug localization. Especially, BugRadar leverages a knowledge graph to make use of structure features.Method : We originally propose a knowledge graph named TriGraph based on structure features and apply hyperbolic attention embedding to get the link prediction scores. For text features, we propose Partial Text Similarity which improves traditional Text Similarity and Method Level Text Similarity. We also propose Word Collaborative Filtering Score which leverages historical bug reports with more attention on important terms. Finally, we calculate the final suspicious scores based on the structure features, text features, and fixing time information from bug fixing history with a neural network.Results : We apply our scheme to four projects (Tomcat, SWT, JDT, and Birt) in a popular dataset and get approving results. BugRadar gets better results than other state-of-the-art methods on three projects out of the four. It achieves a relative improvement of 8.8% in SWT and 9.8% in JDT for Mean Average Precision compared to the previous best scheme KGBugLocator and 11.4% in Birt compared to Adaptive Regression.Conclusions : BugRadar can achieve approving performance on large-scale projects with enough historical bug reports. It verifies that knowledge graphs are capable of representing the structure features for bug localization. The novel Partial Text Similarity and Word Collaborative Filtering Score are both effective improvements for using text features.
C1 [Xiao, Xi; Xiao, Renjie] Tsinghua Univ, Shenzhen Int Grad Sch, Taoyuan St, Shenzhen 518055, Guangdong, Peoples R China.
   [Li, Qing; Lv, Jianhui] Peng Cheng Lab, 2 Xingkeyi St, Shenzhen 518057, Guangdong, Peoples R China.
   [Cui, Shunyan] Guangdong Prov Key Lab Cyber & Informat Secur Vuln, 116 Yiheng Rd, Guangzhou 510643, Guangdong, Peoples R China.
   [Liu, Qixu] Chinese Acad Sci, Inst Informat Engn, 19 Shucun Rd, Beijing 100085, Peoples R China.
C3 Tsinghua University; Peng Cheng Laboratory; Chinese Academy of Sciences
RP Li, Q (corresponding author), Peng Cheng Lab, 2 Xingkeyi St, Shenzhen 518057, Guangdong, Peoples R China.
EM xiaox@sz.tsinghua.edu.cn; xiaox@sz.tsinghua.edu.cn; liq@pcl.ac.cn;
   lvjh@pcl.ac.cn; cuisy@gditsec.org.cn; liuqixu@iie.ac.cn
RI Li, Qing/U-8779-2018
FU National Natural Science Foundation of China [61972219]; Research and
   Development Program of Shenzhen [JCYJ20190813174403598, JCYJ202103241200
   12033]; Overseas Research Cooperation Fund of Tsinghua Shenzhen
   International Graduate School [HW2021013]; Youth Innovation Promotion
   Association CAS, China [2019163]; Shenzhen Science and Technology
   Innovation Commission, China (Research Center for Computer Network
   (Shenzhen) Ministry of Education); Key Laboratory of Network Assessment
   Technology, Institute of Information Engineering, Chinese Academy of
   Sciences, Beijing, China
FX This work was supported in part by the National Natural Science
   Foundation of China (61972219) , the Research and Development Program of
   Shenzhen (JCYJ20190813174403598, JCYJ202103241200 12033) , the Overseas
   Research Cooperation Fund of Tsinghua Shenzhen International Graduate
   School (HW2021013) , the Youth Innovation Promotion Association CAS,
   China (2019163) , Shenzhen Science and Technology Innovation Commission,
   China (Research Center for Computer Network (Shenzhen) Ministry of
   Education) and the Key Laboratory of Network Assessment Technology,
   Institute of Information Engineering, Chinese Academy of Sciences,
   Beijing, China.
CR Akbar SA, 2020, IEEE WORK CONF MIN S, P21, DOI 10.1145/3379597.3387474
   Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Binkley D, 2009, INT C PROGRAM COMPRE, P158, DOI 10.1109/ICPC.2009.5090039
   Bird S., 2009, NATURAL LANGUAGE PRO
   Bollacker K., 2008, P 2008 ACM SIGMOD IN, P1247, DOI 10.1145/1376616.1376746
   Cao JM, 2020, IEEE INT CONF AUTOM, P1214, DOI 10.1145/3324884.3418934
   Chami I., 2020, P 58 ANN M ASS COMP, P6901, DOI 10.18653/V1/2020.ACL-MAIN.617
   Chen T, 2014, PROCEEDINGS OF THE FIFTH INTERNATIONAL SYMPOSIUM ON TEST AUTOMATION & INSTRUMENTATION, VOLS 1 AND 2, P82
   Church KW, 2017, NAT LANG ENG, V23, P155, DOI 10.1017/S1351324916000334
   Davies S, 2013, 2013 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P126, DOI 10.1109/ISSREW.2013.6688891
   Fejzer M, 2021, IEEE T SOFTWARE ENG, V48, P2557, DOI 10.1109/TSE.2021.3064447
   Feng XT, 2023, IEEE-CAA J AUTOMATIC, V10, P25, DOI 10.1109/JAS.2022.105860
   Gulcehre C, 2018, Arxiv, DOI arXiv:1805.09786
   Hu XY, 2022, COMPUT SCI REV, V46, DOI 10.1016/j.cosrev.2022.100500
   Huo X., 2016, IJCAI, P1606
   Kim M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09946-8
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Li ZL, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106410
   Liang HL, 2019, IEEE ACCESS, V7, P116309, DOI 10.1109/ACCESS.2019.2936948
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Moreno L, 2014, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME.2014.37
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Nickel M, 2018, PR MACH LEARN RES, V80
   Pagliardini M., 2018, NAACL, P528
   Polisetty S, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P16, DOI 10.1145/3345629.3345632
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Sarkar R, 2012, LECT NOTES COMPUT SC, V7034, P355
   Staff T, 2018, REAL LIFE EXAMPLES S
   Suchanek F.M., 2007, P 16 INT C WORLD WID, DOI [10.1145/1242572.1242667, DOI 10.1145/1242572.1242667]
   Thunes C., 2021, JAVALANG
   Thung F, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P767, DOI 10.1145/2635868.2661678
   Uneno Y, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P183, DOI 10.1109/QRS.2016.30
   Vrandecic D, 2014, COMMUN ACM, V57, P78, DOI 10.1145/2629489
   Wang SW, 2016, J SOFTW-EVOL PROC, V28, P921, DOI 10.1002/smr.1801
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Wright CS, 2011, LECT NOTES COMPUT SC, V6694, P198, DOI 10.1007/978-3-642-21323-6_25
   Xiao Y, 2019, INFORM SOFTWARE TECH, V105, P17, DOI 10.1016/j.infsof.2018.08.002
   Xiao Y, 2017, ASIA PAC SOFWR ENG, P338, DOI 10.1109/APSEC.2017.40
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhang JL, 2020, INT C PROGRAM COMPRE, P219, DOI 10.1145/3387904.3389281
   Zhang J, 2022, IEEE-CAA J AUTOMATIC, V9, P377, DOI 10.1109/JAS.2021.1004261
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zhu XG, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3512345
   Zou WQ, 2020, IEEE T SOFTWARE ENG, V46, P836, DOI 10.1109/TSE.2018.2870414
NR 49
TC 0
Z9 0
U1 3
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2023
VL 162
AR 107274
DI 10.1016/j.infsof.2023.107274
EA JUN 2023
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA N2RC5
UT WOS:001035536500001
DA 2024-07-18
ER

PT J
AU Tao, CQ
   Tao, YL
   Guo, HJ
   Huang, ZQ
   Sun, XB
AF Tao, Chuanqi
   Tao, Yali
   Guo, Hongjing
   Huang, Zhiqiu
   Sun, Xiaobing
TI DLRegion: Coverage-guided fuzz testing of deep neural networks with
   region-based neuron selection strategies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Deep neural networks; Coverage-guided fuzz testing; Adversarial inputs
AB Context: Deep Learning (DL) systems have been increasingly applied to safety-critical scenarios, such as autonomous driving or medical diagnoses. However, it often exhibits erroneous behaviors that can cause serious consequences. Therefore, it is important to ensure the quality of the DL systems through systematically testing. Recent research works have proposed many testing techniques for deep neural networks (DNNs), among which the coverage-guided fuzz testing has achieved remarkable results. The neuron selection strategy is the key ingredient of the technique. It can affect the technique's effectiveness. However, current neuron selection strategies did not utilize the output distribution of each neuron on the training data, which can characterize the behavior of the neuron. Objective: This paper introduces DLRegion, a coverage-guided fuzz testing technique of DNNs with region -based neuron selection strategies. DLRegion can expose erroneous behaviors of DNNs while maximizing coverage. Methods: DLRegion first incorporates a seed selection strategy based on the level of confidence in the classification of the inputs to select seed inputs to mutate. DLRegion also proposes region-based neuron selection strategies, which utilize the region where the output value of each neuron is in its output distribution to select valuable neurons to activate for covering more internal states. Results: Empirical studies on three well-known datasets, guided by five existing criteria demonstrate that: (1) the proposed seed selection strategy very effectively improves coverage and defect detection; (2) selecting neurons in different regions has obvious differences in achieving model coverage and detecting defects; (3) DLRegion outperforms other existing techniques by coverage under different criteria and effectively identifies the quantity and diversity of defects; (4) the effectiveness of DLRegion in improving the model robustness. Conclusion: DLRegion not only can cover more internal logic of the DNNs but also can effectively detect DNNs' erroneous behaviors. Moreover, DLRegion can improve the robustness of the model.
C1 [Tao, Chuanqi; Tao, Yali; Guo, Hongjing; Huang, Zhiqiu] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 211100, Peoples R China.
   [Tao, Chuanqi; Huang, Zhiqiu] Nanjing Univ Aeronaut & Astronaut, Minist Key Lab Safety Crit Software Dev & Verifica, Nanjing, Peoples R China.
   [Tao, Chuanqi] Collaborat Innovat Ctr Novel Software Technol & In, Nanjing, Peoples R China.
   [Tao, Chuanqi] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Sun, Xiaobing] Yangzhou Univ, Coll Informat Engn, Yangzhou, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics; Nanjing University of
   Aeronautics & Astronautics; Nanjing University; Yangzhou University
RP Tao, CQ (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 211100, Peoples R China.
EM taochuanqi@nuaa.edu.cn
FU National Natural Science Foundation of China [62202223]; Open Fund of
   the State Key Laboratory for Novel Software Technology [KFKT2021B32];
   Natural Science Foundation of Jiangsu Province of China [BK20220881]
FX Acknowledgments This work is supported by the National Natural Science
   Foundation of China (NO. 62202223) , Open Fund of the State Key
   Laboratory for Novel Software Technology (KFKT2021B32) , the Natural
   Science Foundation of Jiangsu Province of China (NO. BK20220881) .
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   [Anonymous], 2018, ALEXA SIRI CAN HEAR
   Bojarski Mariusz, 2016, arXiv
   Byun T, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P63, DOI 10.1109/AITest.2019.000-6
   Chen Y., 2018, ENFUZZ ENSEMBLE LEAR
   Chollet F, 2015, KERAS
   Ciresan D, 2012, PROC CVPR IEEE, P3642, DOI 10.1109/CVPR.2012.6248110
   Du XN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P477, DOI 10.1145/3338906.3338954
   Duan RJ, 2020, PROC CVPR IEEE, P997, DOI 10.1109/CVPR42600.2020.00108
   Gerasimou S, 2020, PROC INT CONF SOFTW, P702, DOI 10.1145/3377811.3380391
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Kim Been, 2018, P MACHINE LEARNING R, P2
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Krizhevsky N., 2014, The CIFAR-10 dataset
   Lai SW, 2015, AAAI CONF ARTIF INTE, P2267
   LeCun Y., 2010, MNIST HANDWRITTEN DI
   Liang J, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P562, DOI 10.1109/SANER.2018.8330260
   Ma L., P 33 ACM IEEE INT C
   Ma L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P614, DOI [10.1109/saner.2019.8668044, 10.1109/SANER.2019.8668044]
   Ma SQ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P175, DOI 10.1145/3236024.3236082
   Ma W, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3417330
   Netzer Y., 2011, SVHN DATASET
   Odena A, 2019, PR MACH LEARN RES, V97
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Rajpurkar P, 2017, Arxiv, DOI arXiv:1711.05225
   Sekhon J, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P85, DOI 10.1109/ICSE-NIER.2019.00030
   Seokhyun Lee, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P165, DOI 10.1145/3395363.3397346
   Sun Y., 2018, Testing deep neural networks
   Sun YC, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P320, DOI 10.1109/ICSE-Companion.2019.00134
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   U. Accident, 2018, FAT CRASH SELF DRIV
   Wang JY, 2021, PROC INT CONF SOFTW, P300, DOI 10.1109/ICSE43902.2021.00038
   Wang MZ, 2018, PROC IEEE ACM INT C, P61, DOI 10.1145/3183440.3183494
   Wang Z, 2021, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE43902.2021.00046
   Wilcoxon Frank., 1963, CRITICAL VALUES PROB
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Yang Feng, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P177, DOI 10.1145/3395363.3397357
   Zhang P., 2019, CAGFUZZ COVERAGE GUI
NR 39
TC 2
Z9 2
U1 1
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2023
VL 162
AR 107266
DI 10.1016/j.infsof.2023.107266
EA JUN 2023
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA K3SA6
UT WOS:001015659200001
DA 2024-07-18
ER

PT J
AU Liu, TY
   Wang, C
   Huang, K
   Liang, P
   Zhang, BQ
   Daneva, M
   van Sinderen, M
AF Liu, Tianyang
   Wang, Chong
   Huang, Kun
   Liang, Peng
   Zhang, Beiqi
   Daneva, Maya
   van Sinderen, Marten
TI ROSEMATCHER: Identifying the impact of user reviews on app updates
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE User reviews; Release notes; App store; Natural language processing
AB Context: The release planning of mobile apps has become an area of active research, with most studies centering on app analysis through release notes in the Apple App Store and tracking user reviews via issue trackers. However, the correlation between these release notes and user reviews in App Store remains understudied.Objective: In this paper, we introduce ROSEMATCHER, a novel automatic approach to match relevant user reviews with app release notes, and identify matched pairs with high confidence.Methods: We collected 944 release notes and 1,046,862 user reviews from 5 mobile apps in the Apple App Store as research data to evaluate the effectiveness and accuracy of ROSEMATCHER, and conducted deep content analysis on matched pairs.Results: Our evaluation shows that ROSEMATCHER can reach a hit ratio of 0.718 for identifying relevant matched pairs, and with the manual labeling and content analysis of 984 relevant pairs, we identify 8 roles that user reviews play in app updates according to the relationship between release notes and user reviews in the relevant matched pairs.Conclusions: Our findings indicate that both app development teams and users pay close attention to release notes and user reviews, with release notes typically addressing feature requests, bug reports, and complaints, and user reviews offering positive, negative, and constructive feedback. Overall, the study highlights the importance of the communication between app development teams and users in the release planning of mobile apps, with relevant reviews tending to be posed within a short period before and after the release of release notes, with the average time interval between the post time of release notes and user reviews being approximately one year.
C1 [Liu, Tianyang; Wang, Chong; Huang, Kun; Liang, Peng; Zhang, Beiqi] Wuhan Univ, Sch Comp Sci, Wuhan 430072, Hubei, Peoples R China.
   [Liu, Tianyang] Univ Calif San Diego, Dept Comp Sci & Engn, La Jolla, CA 92093 USA.
   [Wang, Chong; Daneva, Maya; van Sinderen, Marten] Univ Twente, Fac Elect Engn Math & Comp Sci, NL-7500 AE Enschede, Netherlands.
C3 Wuhan University; University of California System; University of
   California San Diego; University of Twente
RP Wang, C; Liang, P (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan 430072, Hubei, Peoples R China.
EM til040@ucsd.edu; cwang@whu.edu.cn; hunk_fe@whu.edu.cn;
   liangp@whu.edu.cn; zhangbeiqi@whu.edu.cn; m.daneva@utwente.nl;
   m.j.vansinderen@utwente.nl
RI Huang, Kun/W-4724-2017; Liu, Tianyang/HOC-6916-2023
OI Liu, Tianyang/0000-0001-7754-7029; WANG, Chong/0000-0003-4576-5392
FU National Key Research and De-velopment Program of China
   [2022YFF0902701]; National Natural Science Foundation of China
   [61702378, 61972292, 62032016, 62172311]
FX Acknowledgments This work is supported by the National Key Research and
   De-velopment Program of China under Grant No. 2022YFF0902701 and the
   National Natural Science Foundation of China under Grant Nos. 61702378,
   61972292, 62032016, and 62172311.
CR Appcues, 2020, WRIT REL NOT 5 GREAT
   Apple, APPL APP STOR
   Bird S., 2004, P ACL INTERACTIVE PO, P214
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chowdhery A, 2022, Arxiv, DOI [arXiv:2204.02311, DOI 10.48550/ARXIV.2204.02311]
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Guo H, 2020, PROC INT CONF SOFTW, P628, DOI 10.1145/3377811.3380924
   Guzman E, 2016, INT REQUIR ENG CONF, P96, DOI 10.1109/RE.2016.67
   Haering M, 2021, PROC INT CONF SOFTW, P970, DOI 10.1109/ICSE43902.2021.00092
   Haring M., 2021, arXiv, DOI DOI 10.48550/ARXIV.2102.07134
   Hassan S., 2017, EMPIR SOFTW ENG
   Hassan S, 2020, IEEE T SOFTWARE ENG, V46, P773, DOI 10.1109/TSE.2018.2869395
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Honnibal Matthew, 2020, SPACY IND STRENGTH N
   Islam A., 2008, ACM Trans. Knowl. Discov. Data, V2, P1, DOI [10.1145/1376815.1376819, DOI 10.1145/1376815.1376819]
   Jijkoun V., 2005, RECOGNIZING TEXTUAL
   Kenter T, 2015, P 24 ACM INT C INFOR, P1411, DOI 10.1145/2806416.2806475
   Li H., 2010, USER SATISFACTION AN
   Liu HX, 2021, INFORM SCIENCES, V580, P129, DOI 10.1016/j.ins.2021.08.050
   Liu T., IDENTIFYING IMPACT U
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1346, DOI 10.1007/s10664-015-9388-2
   Mikolov T., 2013, P WORKSHOP ICLR 2013
   Navarro G, 2001, ACM COMPUT SURV, V33, P31, DOI 10.1145/375360.375365
   Nayebi M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P552, DOI 10.1109/SANER.2016.116
   Nigam K, 2000, MACH LEARN, V39, P103, DOI 10.1023/A:1007692713085
   Noei E, 2021, IEEE T SOFTWARE ENG, V47, P367, DOI 10.1109/TSE.2019.2893171
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Saidani A.O. I., 2022, EMPIR SOFTW ENG
   Scalabrino S, 2019, IEEE T SOFTWARE ENG, V45, P68, DOI 10.1109/TSE.2017.2759112
   Sorbo A.D., 2020, J SOFTW EVOL PROCESS
   Stanik C, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P220, DOI 10.1109/REW.2019.00046
   Statista, 2022, NUMB APPS AV LEAD AP
   Statista, Most popular Apple App Store categories as of 1st quarter 2022 2022
   Touvron H, 2023, Arxiv, DOI arXiv:2302.13971
   Tushev M, 2022, PROC INT CONF SOFTW, P762, DOI 10.1145/3510003.3510201
   Vaswani A, 2017, ADV NEUR IN, V30
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Wang C., 2019, 3 CROWDRE
   Wang C, 2021, ASIA PAC SOFWR ENG, P520, DOI 10.1109/APSEC53868.2021.00061
   Wang WH, 2020, Arxiv, DOI [arXiv:2002.10957, DOI 10.48550/ARXIV.2002.10957]
   Wang Xuezhi, 2022, PREPRINT, DOI DOI 10.48550/ARXIV.2203.11171
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Wolf T, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING: SYSTEM DEMONSTRATIONS, P38
   Yang AZH, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10086-2
   Zhang SS, 2022, Arxiv, DOI arXiv:2205.01068
   Zhou Y, 2021, IEEE T SOFTWARE ENG, V47, P2755, DOI 10.1109/TSE.2020.2967383
NR 52
TC 2
Z9 2
U1 5
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2023
VL 161
AR 107261
DI 10.1016/j.infsof.2023.107261
EA MAY 2023
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA K4JQ0
UT WOS:001016120800001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Flageol, W
   Menaud, E
   Guéhéneuc, YG
   Badri, M
   Monnier, S
AF Flageol, William
   Menaud, Eloi
   Gueheneuc, Yann-Gael
   Badri, Mourad
   Monnier, Stefan
TI A mapping study of language features improving object-oriented design
   patterns
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic mapping study; Design patterns; Object-oriented programming;
   Language features; Software measures; Programming paradigms
ID OF-THE-ART; IMPLEMENTATION; JAVA
AB Context: Object-Oriented Programming design patterns are well-known in the industry and taught in universities as part of software engineering curricula. Many primary studies exist on the impact of design patterns on software, in addition to secondary studies summarizing these publications. Some primary studies have proposed new language features and used them to re-implement design patterns as a way to show improvements. While secondary studies exist, they mainly focus on measuring the impact of design patterns on software. Objectives: We performed a systematic mapping study to catalogue language features in the literature claiming to improve object-oriented design patterns implementations, as well as how primary studies measure these improvements. Methods: We performed a search in three databases, yielding a total of 874 papers, from which we obtained 34 relevant papers. We extracted and studied data about the language features claiming to improve design patterns implementations, the most often cited design patterns, the measures used to assess the improvements, and the case studies and experiments with which these improvements were studied. Results: Using the results, we catalogue 18 language features claimed in the literature to improve design patterns and categorize them into paradigms. We find that some design patterns are more prevalent than others, such as Observer and Visitor. Measures related to code size, code scattering and understandability are preferred. Case studies are done in-vitro, and experiments are rare. Conclusion: This catalogue is useful to identify trends and create a road map for research on language features to improve object-oriented design patterns. Considering the prevalence of design patterns, improving their implementation and adding language features to better solve their underlying concerns is an efficient way to improve object-oriented programming. We intend in the future to use this as a basis to research specific language features that may help in improving object-oriented programming.
C1 [Flageol, William; Gueheneuc, Yann-Gael] Concordia Univ, 1455 Blvd Maisonneuve Ouest, Montreal, PQ H3G 1M8, Canada.
   [Menaud, Eloi] IMT Atlantique, 4 Rue Alfred Kastler, F-44300 Nantes, France.
   [Badri, Mourad] Univ Quebec Trois Rivieres, 3351 Blvd Forges, Trois Rivieres, PQ G8Z 4M3, Canada.
   [Monnier, Stefan] Univ Montreal, CP 6128 Ctr Ville, Montreal, PQ H3C 3J7, Canada.
C3 Concordia University - Canada; IMT - Institut Mines-Telecom; IMT
   Atlantique; University of Quebec; University of Quebec Trois Rivieres;
   Universite de Montreal
RP Flageol, W (corresponding author), Concordia Univ, 1455 Blvd Maisonneuve Ouest, Montreal, PQ H3G 1M8, Canada.
EM w_flage@encs.concordia.ca
OI Flageol, William/0000-0002-0999-8431; Gueheneuc,
   Yann-Gael/0000-0002-4361-2563
FU Fonds de Recherche du Quebec en Nature et Technologies [273582]
FX This work was supported by the Fonds de Recherche du Quebec en Nature et
   Technologies (Grant No: 273582) .
CR Aljasser K, 2016, COMPUT LANG SYST STR, V45, P1, DOI 10.1016/j.cl.2015.11.002
   Ampatzoglou A, 2013, J SYST SOFTWARE, V86, P1945, DOI 10.1016/j.jss.2013.03.063
   Ampatzoglou Apostolos., 2013, Proceedings of the 17th Panhellenic Conference on Informatics, PCI, P122
   atdalov Oksana Nikiforova, 2016, 11 INT C SOFTWARE EN
   Axelsen EW, 2009, ACP4IS'09: 8TH WORKSHOP ON ASPECTS, COMPONENTS AND PATTERNS FOR INFRASTRUCTURE SOFTWARE, P37
   Baca P, 2011, 2011 2ND EASTERN EUROPEAN REGIONAL CONFERENCE ON THE ENGINEERING OF COMPUTER BASED SYSTEMS (ECBS-EERC), P19, DOI 10.1109/ECBS-EERC.2011.13
   Bartsch Marc, 2007, P 12 EURO, P797
   Bernardi ML, 2006, 13TH IEEE INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P206
   Borella J, 2003, P VIKING PATTERN LAN
   Burton Eden, 2014, P 19 EUROPEAN C PATT, P1, DOI [10.1145/2721956.2721991, DOI 10.1145/2721956.2721991]
   Cacho N, 2014, J SYST SOFTWARE, V98, P117, DOI 10.1016/j.jss.2014.08.041
   Ceccato M., 2004, 1 WORKSH ASP REV ENG
   Chambers C., 2000, Conference Record of POPL'00: 27th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages. Papers Presented at the Symposium, P277, DOI 10.1145/325694.325731
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Dürschmid T, 2016, COMPANION PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SYSTEMS, PROGRAMMING, LANGUAGES AND APPLICATIONS: SOFTWARE FOR HUMANITY (SPLASH COMPANION'16), P45, DOI 10.1145/2984043.2998537
   El Maghawry N., 2010, 7 INT C INFORMATICS, P1
   Elsevier, ABOUT US
   Felix Jose M., 2014, Journal of Software, V9, P2454, DOI 10.4304/jsw.9.9.2454-2460
   Ferreira L., 1998, P 5 C PATT LANG PROG
   Fortuin H, 2010, J OBJECT TECHNOL, V9, P57, DOI 10.5381/jot.2010.9.1.c5
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garcia A, 2006, LECT NOTES COMPUT SC, V3880, P36
   Ghaleb TA, 2021, INT J SOFTW ENG KNOW, V31, P1043, DOI 10.1142/S0218194021500327
   Gibbons Jeremy., 2006, WGP 06, P1, DOI [10.1145/1159861.1159863, DOI 10.1145/1159861.1159863]
   Giunta Rosario, 2010, P 2010 ACM S APPL CO, P2183, DOI [10.1145/1774088.1774548, DOI 10.1145/1774088.1774548]
   Giunta Rosario, 2012, P 27 ANN ACM S APPL, P1243, DOI [10.1145/2245276.2231971, DOI 10.1145/2245276.2231971]
   Gomes Joao L., 2010, P 2010 ACM S APPL CO, P2119, DOI [10.1145/1774088.1774534, DOI 10.1145/1774088.1774534]
   Hachani Q., 2002, WORKSHOP
   Hannemann J, 2002, ACM SIGPLAN NOTICES, V37, P161, DOI 10.1145/583854.582436
   Hussein B, 2020, INT J SOFTW INNOV, V8, P92, DOI 10.4018/IJSI.2020010106
   Kerievsky J., 2004, REFACTORING PATTERNS
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Krishnamurthi S., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P91, DOI 10.1007/BFb0054088
   Kuhlemann M, 2008, LECT NOTES BUS INF P, V11, P121
   Liu JC, 2010, INT CONF COMP SCI, P284, DOI 10.1109/ICCSIT.2010.5564893
   Lokke F.S., 2009, THESIS U AARHUS
   Mai Yun, 2001, EUROPEAN C PATTERN L, P299
   Maier I, 2013, LECT NOTES COMPUT SC, V7920, P707, DOI 10.1007/978-3-642-39038-8_29
   Masuhara H., 2016, P 8 INT WORKSHOP CON, P21
   Mayvan BB, 2017, J SYST SOFTWARE, V125, P93, DOI 10.1016/j.jss.2016.11.030
   Nordberg III M.E., 1996, P 3 C PATT LANG PROG
   Norvig P., 1996, Design Patterns in Dynamic Programming
   Oliveira BCDS, 2008, ACM SIGPLAN NOTICES, V43, P439, DOI 10.1145/1449955.1449799
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   PostSharp, C DES PATT BOIL
   Sakamoto Kazunori, 2013, INT C SOFTWARE ENG K, P600
   Salvaneschi G, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P564, DOI 10.1145/2635868.2635895
   Salvaneschi Guido, 2014, P 13 INT C MOD, P25, DOI DOI 10.1145/2577080.2577083
   SantAnna Claudio, 2004, J BRAZ COMPUT SOC, V10, P42, DOI [10.1590/S0104-65002004000300004, DOI 10.1590/S0104-65002004000300004]
   Springer Matthias., 2016, P 8 INT WORKSHOP CON, P21, DOI [DOI 10.1145/2951965, 10.1145/2951965.2951968, DOI 10.1145/2951965.2951968]
   Teebiga R, 2016, PROCEEDINGS OF 2016 INTERNATIONAL CONFERENCE ON ADVANCED COMMUNICATION CONTROL AND COMPUTING TECHNOLOGIES (ICACCCT), P751, DOI 10.1109/ICACCCT.2016.7831740
   Tennyson MF, 2010, IEEE, DOI [10.1109/ICSTE.2010.5608911, DOI 10.1109/ICSTE.2010.5608911]
   The AspectJ Project, US
   von Dincklage Daniel, 2000, P 33 INT C TECHN OBJ
   Zhang C, 2012, IEEE T SOFTWARE ENG, V38, P1213, DOI 10.1109/TSE.2011.79
   Zhang Weixin, 2017, EVF EXTEN, P32, DOI [10.4230/LIPICS.ECOOP.2017.29, DOI 10.4230/LIPICS.ECOOP.2017.29]
NR 58
TC 0
Z9 0
U1 2
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2023
VL 160
AR 107222
DI 10.1016/j.infsof.2023.107222
EA MAY 2023
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H8VR7
UT WOS:000998678000001
DA 2024-07-18
ER

PT J
AU Lessenich, O
   Sobernig, S
AF Lessenich, Olaf
   Sobernig, Stefan
TI Usefulness and usability of heuristic walkthroughs for evaluating
   domain-specific developer tools in industry: Evidence from four field
   simulations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Domain-specific language; Integrated development environment; User
   experience; Programmer experience; Review; Heuristic walkthrough
AB Context: The usage of domain-specific languages (DSLs) is an approach to reduce complexity in software development by expert developers for selected application domains. To support expert developers, a DSL is often combined with a tailored, domain-specific developer tool, offering similar functionality as general-purpose programming environments (IDEs like Eclipse for Java) while integrating with a domain-specific toolchain (e.g., code or documentation generators, simulators). General-purpose development environments have been successfully evaluated for the programmer experience (PX) and for anomalies using heuristic walkthroughs as a mixed review technique combining cognitive walkthroughs and a heuristic evaluation. Objective: In this paper, we report on the usefulness and acceptance of heuristic walkthroughs as an PX evaluation technique applied to domain-specific languages and IDEs in an industry context. Methods: Heuristic walkthroughs are used in four interventions (field simulations) to assess the programming experience and usability of domain-specific, Eclipse-based IDEs in a concrete industry setting. Data on the usefulness and acceptance (perceived satisfaction) of the walkthroughs themselves are collected and analysed. Results: Our studies show that, in practice, the instrument of walkthroughs is useful for revealing practically relevant PX anomalies, while maintaining acceptance by practitioners participating in the walkthroughs. Conclusion: The documented variant of heuristic walkthroughs is eligible to become adopted for future field studies in academic research and for evaluation projects in industry, in support of developing domain-specific developer tooling in an evidence-driven manner.
C1 [Lessenich, Olaf; Sobernig, Stefan] WU Vienna, Welthandelspl 1, A-1020 Vienna, Austria.
RP Sobernig, S (corresponding author), WU Vienna, Welthandelspl 1, A-1020 Vienna, Austria.
EM olaf.lessenich@wu.ac.at; stefan.sobernig@wu.ac.at
OI Lessenich, Olaf/0000-0002-8996-1996
FU AustrianFederal Ministry for Transport, Innovation and Technology
   (BMVIT) [867535]
FX This work was partly funded by the Austrian research promotion agency
   (FFG) under the scope of the HybriDLUX project within the funding
   programme ICT of the Future (6th call 2017) of the AustrianFederal
   Ministry for Transport, Innovation and Technology (BMVIT),contract
   867535
CR Barisic A, 2018, COMPUT LANG SYST STR, V51, P118, DOI 10.1016/j.cl.2017.06.005
   Bias Randolph., 1994, USABILITY INSPECTION, P63
   Burghard C., 2016, JOINT PROC INT WORKS, P28
   Burghard C, 2020, EUROMICRO CONF PROC, P141, DOI 10.1109/SEAA51224.2020.00032
   Edgar N., 2007, USER INTERFACE GUIDE
   Erdweg S, 2015, COMPUT LANG SYST STR, V44, P24, DOI 10.1016/j.cl.2015.08.007
   Faulring A., 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P37, DOI 10.1109/CHASE.2012.6223018
   Figl K, 2011, LECT NOTES COMPUT SC, V6998, P78, DOI 10.1007/978-3-642-24606-7_7
   Freire Marilia Aranha, 2013, P INT C SOFTWARE ENG, P504
   Freire M, 2014, INT J SOFTW ENG KNOW, V24, P1509, DOI 10.1142/S0218194014400178
   Gabriel P., 2011, P 13 C IB SOFTW ENG, P149, DOI [10.48550/ARXIV.1109.6794, DOI 10.48550/ARXIV.1109.6794]
   GerhardtPowals J, 1996, INT J HUM-COMPUT INT, V8, P189, DOI 10.1080/10447319609526147
   Gray J., 2008, COMPANION 23 ACM SIG, P791, DOI DOI 10.1145/1449814.1449863
   Greenstein M, 2017, EXP PSYCHOL, V64, P398, DOI 10.1027/1618-3169/a000383
   Häser F, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916010
   Hoisl B, 2017, INFORM SOFTWARE TECH, V92, P49, DOI 10.1016/j.infsof.2017.07.008
   Hollingsed T, 2007, SIGDOC'07: PROCEEDINGS OF THE 25TH ACM INTERNATIONAL CONFERENCE ON DESIGN OF COMMUNICATION, P249
   Jordan P. W., 1996, Industry
   Kahraman G, 2015, SOFTW SYST MODEL, V14, P1505, DOI 10.1007/s10270-013-0387-8
   Kitchenham B, 1997, COMPUT CONTROL ENG J, V8, P120, DOI 10.1049/cce:19970304
   Kline R, 2002, IEEE 2002 SYMPOSIA ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P34, DOI 10.1109/HCC.2002.1046339
   Kline RB, 2005, INT J HUM-COMPUT ST, V63, P607, DOI 10.1016/j.ijhcs.2005.05.002
   Kölling M, 2016, ACM T COMPUT EDUC, V16, DOI 10.1145/0000000.0000000
   Kosar T, 2016, INFORM SOFTWARE TECH, V71, P77, DOI 10.1016/j.infsof.2015.11.001
   Lewis C., 1990, SIGCHI Bulletin, P235
   Lewis C., 1993, TASK CENTERED USER I
   Mahatody T, 2010, INT J HUM-COMPUT INT, V26, P741, DOI 10.1080/10447311003781409
   Menold N, 2020, SOCIOL METHOD RES, V49, P79, DOI 10.1177/0049124117729694
   Morales Jenny, 2020, Social Computing and Social Media. Participation, User Experience, Consumer Experience, and Applications of Social Computing. 12th International Conference, SCSM 2020 Held as Part of the 22nd HCI International Conference, HCII 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12195), P205, DOI 10.1007/978-3-030-49576-3_15
   Morales J, 2019, IEEE ACCESS, V7, P71079, DOI 10.1109/ACCESS.2019.2920124
   Myers B.A., 2019, RETHINKING PRODUCTIV, P147, DOI [10.1007/978-1-4842-4221-6_13, DOI 10.1007/978-1-4842-4221-6_13]
   Myers BA, 2016, COMPUTER, V49, P44, DOI 10.1109/MC.2016.200
   Nielsen, 1994, USABILITY ENG
   Nielsen J., 1994, Heuristic evaluation. Usability inspection methods, V17, P25
   Poltronieri Rodrigues I., 2017, Lecture Notes in Computer Science, V10271, P522, DOI DOI 10.1007/978-3-319-58071-5_39
   Sears A, 1997, INT J HUM-COMPUT INT, V9, P213, DOI 10.1207/s15327590ijhc0903_2
   Software Reviews Working Group, 2008, IEEE STAND SOFTW REV, P1028, DOI [10.1109/IEEESTD.2008.4601584, DOI 10.1109/IEEESTD.2008.4601584]
   Spencer R., 2000, CHI 2000 Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2000. The Future is Here, P353, DOI 10.1145/332040.332456
   Stieglbauer G, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P642, DOI 10.5220/0006754406420651
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Storey Margaret-Anne., 2003, ECLIPSE 03, P35, DOI DOI 10.1145/965660.965668
   Voelter M, 2009, J OBJECT TECHNOL, V8, P79, DOI 10.5381/jot.2009.8.6.c6
   Weber T, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P228, DOI 10.1109/MODELS-C.2019.00037
   Wharton C., 1994, Usability inspection methods, P105
   Wittenburg Peter, 2006, 5 INT C LANG RES EV, V2006
NR 45
TC 0
Z9 0
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2023
VL 160
AR 107220
DI 10.1016/j.infsof.2023.107220
EA APR 2023
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA G4BG1
UT WOS:000988622900001
OA hybrid
DA 2024-07-18
ER

PT J
AU Ferreira, F
   Valente, MT
AF Ferreira, Fabio
   Valente, Marco Tulio
TI Detecting code smells in React-based Web apps
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE JavaScript; React; Anti -patterns; Code smells; Maintainability;
   Software design
ID THRESHOLDS
AB Context: Facebook's React is a widely popular JavaScript library to build rich and interactive user interfaces (UI). However, due to the complexity of modern Web UIs, React applications can have hundreds of components and source code files. Therefore, front-end developers are facing increasing challenges when designing and modularizing React-based applications. As a result, it is natural to expect maintainability problems in React-based UIs due to suboptimal design decisions.Objective: To help developers with these problems, we propose a catalog with twelve React-related code smells and a prototype tool to detect the proposed smells in React-based Web apps.Method: The smells were identified by conducting a grey literature review and by interviewing six professional software developers. We also use the tool in the top-10 most popular GitHub projects that use React and conducted a historical analysis to check how often developers remove the proposed smells.Results: We detect 2,565 instances of the proposed code smells. The results show that the removal rates range from 0.9% to 50.5%. The smell with the most significant removal rate is Large File (50.5%). The smells with the lowest removal rates are Inheritance Instead of Composition (IIC) (0.9%), and Direct DOM Manipulation (14.7%). Conclusion: The list of React smells proposed in this paper as well as the tool to detect them can assist developers to improve the source code quality of React applications. While the catalog describes common problems with React applications, our tool helps to detect them. Our historical analysis also shows the importance of each smell from the developers' perspective, showing how often each smell is removed.
C1 [Ferreira, Fabio; Valente, Marco Tulio] Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, Brazil.
   [Ferreira, Fabio] IF Sudeste MG, Ctr Informat, Campus Barbacena, Barbacena, Brazil.
C3 Universidade Federal de Minas Gerais
RP Ferreira, F (corresponding author), IF Sudeste MG, Ctr Informat, Campus Barbacena, Barbacena, Brazil.
EM fabio.ferreira@ifsudestemg.edu.br
RI ; Ferreira, Fabio/HGU-3176-2022
OI Valente, Marco Tulio/0000-0002-8180-7548; Ferreira,
   Fabio/0000-0003-4485-3219
CR Alves TL, 2010, PROC IEEE INT CONF S
   Aniche M, 2018, EMPIR SOFTW ENG, V23, P2121, DOI 10.1007/s10664-017-9540-2
   Bajammal M, 2018, IEEE INT CONF AUTOM, P601, DOI 10.1145/3238147.3238194
   Barik T, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P882, DOI 10.1145/2786805.2803200
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Fakhoury S, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P602, DOI 10.1109/SANER.2018.8330265
   Fard AM, 2013, IEEE INT WORK C SO, P116, DOI 10.1109/SCAM.2013.6648192
   Ferreira F, 2022, SOFTWARE PRACT EXPER, V52, P947, DOI 10.1002/spe.3044
   Fontana FA, 2015, INT WORKS EMERG TREN, P44, DOI 10.1109/WETSoM.2015.14
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916008
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hora A, 2021, IEEE WORK CONF MIN S, P317, DOI 10.1109/MSR52588.2021.00044
   Nguyen HV, 2012, IEEE INT CONF AUTOM, P282, DOI 10.1145/2351676.2351724
   Kamei F, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106609
   Lanza M, 2007, Object-oriented Metrics in Practice: Using Software Metrics To Characterize, Evaluate, and Improve the Design of Object-oriented Systems
   Liu H, 2021, IEEE T SOFTWARE ENG, V47, P1811, DOI 10.1109/TSE.2019.2936376
   Martin R. C., 2018, Clean Architecture: A Craftsman's Guide to Software Structure and Design
   Mazinanian D, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P496, DOI 10.1145/2635868.2635879
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mesbah A, 2012, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2012.6227174
   Mikowski M., 2013, SINGLE PAGE WEB APPL
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Nederlof A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P4, DOI 10.1145/2591062.2591170
   Oliveira P, 2014, PROC IEEE INT CONF S, P629, DOI 10.1109/ICSME.2014.112
   Oliveira P, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P254, DOI 10.1109/CSMR-WCRE.2014.6747177
   Ousterhout John, 2018, A philosophy of software design
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Pantiuchina J, 2018, PROC IEEE INT CONF S, P80, DOI 10.1109/ICSME.2018.00017
   Vegi LFM, 2022, 30 INT C PROGR COMPR, P1, DOI [10.1145/3524610.3527881, DOI 10.1145/3524610.3527881]
   Zhang H, 2020, PROC INT CONF SOFTW, P1422, DOI 10.1145/3377811.3380336
NR 37
TC 3
Z9 3
U1 6
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2023
VL 155
AR 107111
DI 10.1016/j.infsof.2022.107111
EA DEC 2022
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7F4NK
UT WOS:000901826200019
DA 2024-07-18
ER

PT J
AU Leelaprute, P
   Amasaki, S
AF Leelaprute, Pattara
   Amasaki, Sousuke
TI A comparative study on vectorization methods for non-functional
   requirements classification
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements classification; Vectorization methods; Comparative study
AB Context: Identifying non-functional requirements (NFRs) and their categories at the early phase is crucial for analysts to design software systems and recognize constraints. Automatic non-functional requirements classification methods have been studied for reducing the costs of that labor-intensive task. Our previous study focused on the differences among vectorization methods that converted requirements written in natural language into numerical vectors for classification. It had some limitations regarding the number of datasets used, the types of vectorization methods supporting pre-trained data, and the performance evaluation procedure.
   Objective: To examine whether different vectorization methods lead to differences in the classification performance of NFRs and their categories with extended settings.
   Methods: Comparative experiments were conducted with five open data. Nine vectorization methods, including ones with pre-trained data and four supervised classification methods, were supplied. Performance was evaluated with AUC and Scott-Knott ESD test.
   Results: Some advanced methods could achieve better performance than traditional ones when combined with some classifiers. The use of pre-trained data was useful for some categories.
   Conclusion: It is beneficial to consider using some combinations of vectorization methods and classifiers for classifying non-functional requirements categories.
C1 [Leelaprute, Pattara] Kasetsart Univ, Bangkok, Thailand.
   [Amasaki, Sousuke] Okayama Prefectural Univ, Soja, Japan.
C3 Kasetsart University; Okayama Prefectural University
RP Leelaprute, P (corresponding author), Kasetsart Univ, Bangkok, Thailand.
EM pattara.l@ku.ac.th; amasaki@cse.oka-pu.ac.jp
FU JSPS KAKENHI [21K11833]
FX This work was partially supported by JSPS KAKENHI #21K11833.
CR Abad ZSH, 2017, INT REQUIR ENG CONF, P496, DOI 10.1109/RE.2017.36
   Amasaki S, 2018, EUROMICRO CONF PROC, P175, DOI 10.1109/SEAA.2018.00036
   Arora S, 2019, 5 INT C LEARN REPR I
   Binkhonain M., 2019, EXPERT SYSTEMS APPL, V1, DOI DOI 10.1016/J.ESWAX.2019.100001
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Casamayor A, 2010, INFORM SOFTWARE TECH, V52, P436, DOI 10.1016/j.infsof.2009.10.010
   Chen CY, 2017, PROC INT CONF SOFTW, P450, DOI 10.1109/ICSE.2017.48
   Cleland-Huang J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P39
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   COX DR, 1958, BIOMETRIKA, V45, P562, DOI 10.2307/2333203
   Dalpiaz F, 2019, INT REQUIR ENG CONF, P142, DOI 10.1109/RE.2019.00025
   Dekhtyar A, 2017, INT REQUIR ENG CONF, P484, DOI 10.1109/RE.2017.26
   Devlin J, 2019, P 2019 C N AM CHAPT, P4171
   Domingos P, 1997, MACH LEARN, V29, P103, DOI 10.1023/A:1007413511361
   Falessi D, 2013, IEEE T SOFTWARE ENG, V39, P18, DOI 10.1109/TSE.2011.122
   Fan Q, 2017, INT SYMP EMP SOFTWAR, P121, DOI 10.1109/ESEM.2017.19
   Gnanasekaran R.K., 2021, CEUR WORKSHOP PROC, V2857
   Hey T, 2020, INT REQUIR ENG CONF, P169, DOI 10.1109/RE48521.2020.00028
   Khatiwada S, 2018, INFORM SOFTWARE TECH, V93, P45, DOI 10.1016/j.infsof.2017.08.012
   Knauss E., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P251, DOI 10.1109/RE.2012.6345811
   Ko Y, 2007, INFORM SOFTWARE TECH, V49, P1128, DOI 10.1016/j.infsof.2006.11.007
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P490, DOI 10.1109/RE.2017.82
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P61, DOI 10.1109/RE.2017.86
   LAU JH, 2016, P 1 WORKSH REPR LEAR, P78, DOI DOI 10.18653/V1/W16-1609
   Lu Mengmeng., 2017, P 21 INT C EVALUATIO, P344, DOI [10.1145/3084226.3084241, DOI 10.1145/3084226.3084241]
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Mekala D, 2017, PROC C EMPIRICAL MET, P659, DOI 10.18653/v1/D17-1069]
   Mikolov T., 2013, PROC WORKSHOP INT C
   Munaiah N, 2017, INT REQUIR ENG CONF, P506, DOI 10.1109/RE.2017.79
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Rahman MA, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P25, DOI 10.1145/3340482.3342745
   Reimers N, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3982
   Slankas J, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON NATURAL LANGUAGE ANALYSIS IN SOFTWARE ENGINEERING (NATURALISE), P9, DOI 10.1109/NAturaLiSE.2013.6611715
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Winkler J, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P39, DOI [10.1109/REW.2016.16, 10.1109/REW.2016.021]
   Zhang W., 2011, 23 INT C SOFTWARE EN, P190
   Zhao T, 2017, ASIA PAC SOFWR ENG, P81, DOI 10.1109/APSEC.2017.14
NR 40
TC 3
Z9 3
U1 1
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2022
VL 150
AR 106991
DI 10.1016/j.infsof.2022.106991
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4P3BJ
UT WOS:000855271700004
DA 2024-07-18
ER

PT J
AU Ma, XX
   Keung, J
   Yang, Z
   Yu, X
   Li, YS
   Zhang, H
AF Ma, Xiaoxue
   Keung, Jacky
   Yang, Zhen
   Yu, Xiao
   Li, Yishu
   Zhang, Hao
TI CASMS: Combining clustering with attention semantic model for
   identifying security bug reports
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Security bug report; Clustering; Hybrid neural networks
ID DEFECT PREDICTION; WORD EMBEDDINGS; CLASSIFICATION; ALGORITHM; RANKING
AB Context: Inappropriate public disclosure of security bug reports (SBRs) is likely to attract malicious attackers to invade software systems; hence being able to detect SBRs has become increasingly important for software maintenance. Due to the class imbalance problem that the number of non-security bug reports (NSBRs) exceeds the number of SBRs, insufficient training information, and weak performance robustness, the existing techniques for identifying SBRs are still less than desirable.
   Objective: This prompted us to overcome the challenges of the most advanced SBR detection methods.
   Method: In this work, we propose the CASMS approach to efficiently alleviate the imbalance problem and predict bug reports. CASMS first converts bug reports into weighted word embeddings based on tf - idf and word2vec techniques. Unlike the previous studies selecting the NSBRs that are the most dissimilar to SBRs, CASMS then automatically finds a certain number of diverse NSBRs via the Elbow method and kappa-means clustering algorithm. Finally, the selected NSBRs and all SBRs train an effective Attention CNN-BLSTM model to extract contextual and sequential information.
   Results: The experimental results have shown that CASMS is superior to the three baselines (i.e., FARSEC, SMOTUNED, and LTRWES) in assessing the overall performance (g-measure) and correctly identifying SBRs (recall), with improvements of 4.09%-24.26% and 10.33%-36.24%, respectively. The best results are easily obtained under the limited ratio ranges of the two-class training set (1:1 to 3:1), with around 20 experiments for each project. By evaluating the robustness of CASMS via the standard deviation indicator, CASMS is more stable than LTRWES.
   Conclusion: Overall, CASMS can alleviate the data imbalance problem and extract more semantic information to improve performance and robustness. Therefore, CASMS is recommended as a practical approach for identifying SBRs.
C1 [Ma, Xiaoxue; Keung, Jacky; Yang, Zhen; Li, Yishu; Zhang, Hao] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Peoples R China.
   [Yu, Xiao] Wuhan Univ Technol, Sch Comp Sci & Artificial Intelligence, Wuhan, Peoples R China.
   [Yu, Xiao] Wuhan Univ Technol Chongqing Res Inst, Chongqing, Peoples R China.
C3 City University of Hong Kong; Wuhan University of Technology
RP Yu, X (corresponding author), Wuhan Univ Technol, Sch Comp Sci & Artificial Intelligence, Wuhan, Peoples R China.
EM xiaoxuema3-c@my.cityu.edu.hk; jacky.keung@cityu.edu.hk;
   zhyang8-c@my.cityu.edu.hk; xiaoyu@whut.edu.cn;
   yishuli5-c@my.cityu.edu.hk; hzhang339-c@my.cityu.edu.hk
OI Yu, Xiao/0000-0002-4473-3068; ZHANG, Hao/0000-0003-4419-660X; Yang,
   Zhen/0000-0003-0670-4538; LI, Yishu/0000-0003-4017-4294; MA,
   Xiaoxue/0000-0002-5476-6074; Keung, Jacky/0000-0002-3803-9600
FU General Research Fund of the Research Grants Council of Hong Kong
   [11208017]; City University of Hong Kong [7005028, 7005217, 9678149,
   9440227, 9440180, 9220103, 9229029, 9229098]; Intel [9220097]; Natural
   Science Foundation of Chongqing City [cstc2021jcyj-msxmX1115]; Sanya
   Science and Education Innovation Park of Wuhan University of Technology
   [2020KF0059]
FX This work is supported in part by the General Research Fund of the
   Research Grants Council of Hong Kong (No. 11208017) and the research
   funds of City University of Hong Kong (7005028 and 7005217), and the
   Research Fund by Intel (9220097), the Natural Science Foundation of
   Chongqing City (cstc2021jcyj-msxmX1115), the project supported by Sanya
   Science and Education Innovation Park of Wuhan University of Technology
   (2020KF0059), and the funding supports from other industry partners of
   City University of Hong Kong (9678149, 9440227, 9440180, 9220103,
   9229029 and 9229098).
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Afzal W, 2010, ASIA PAC SOFWR ENG, P414, DOI 10.1109/APSEC.2010.54
   Aizawa A, 2003, INFORM PROCESS MANAG, V39, P45, DOI 10.1016/S0306-4573(02)00021-3
   Alelyani S, 2014, CH CRC DATA MIN KNOW, P29
   Almhana R, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106474
   Lam AN, 2015, IEEE INT CONF AUTOM, P476, DOI 10.1109/ASE.2015.73
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Bishop C. M., 1995, NEURAL NETWORKS PATT
   Bland JM, 1996, BRIT MED J, V313, P744
   Boutsidis C., 2009, NIPS'09, V22, P153
   Bozorgi M., 2010, Proceedings of of 16th International Conference of on Knowledge discovery and data mining, P105
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chorowski J, 2015, Arxiv, DOI arXiv:1506.07503
   COVER TM, 1967, IEEE T INFORM THEORY, V13, P21, DOI 10.1109/TIT.1967.1053964
   Dai XF, 2017, IEEE SOUTHEASTCON
   Deshmukh J, 2017, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME.2017.69
   Dharmarajan A, 2013, 2013 IEEE INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND COMPUTING RESEARCH (ICCIC), P703
   Di Carlo V, 2019, AAAI CONF ARTIF INTE, P6326
   Ebrahimi N, 2019, INFORM SOFTWARE TECH, V113, P98, DOI 10.1016/j.infsof.2019.05.007
   ELMAN JL, 1990, COGNITIVE SCI, V14, P179, DOI 10.1207/s15516709cog1402_1
   Esposito M, 2020, INFORM SCIENCES, V514, P88, DOI 10.1016/j.ins.2019.12.002
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Gao J, 2017, INT CONF SOFTW ENG, P33, DOI 10.1109/ICSESS.2017.8342858
   Garg N, 2018, P NATL ACAD SCI USA, V115, pE3635, DOI 10.1073/pnas.1720347115
   Gegick Michael, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P11, DOI 10.1109/MSR.2010.5463340
   Gleeson JP, 2010, PHYS REV E, V81, DOI 10.1103/PhysRevE.81.066114
   Goseva-Popstojanova K, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P344, DOI 10.1109/QRS.2018.00047
   Goseva-Popstojanova K, 2017, PROC INT SYMP SOFTW, P152, DOI 10.1109/ISSRE.2017.42
   Goseva-Popstojanova K, 2015, INFORM SOFTWARE TECH, V68, P18, DOI 10.1016/j.infsof.2015.08.002
   Graves A, 2005, LECT NOTES COMPUT SC, V3697, P799
   Graves A, 2013, 2013 IEEE WORKSHOP ON AUTOMATIC SPEECH RECOGNITION AND UNDERSTANDING (ASRU), P273, DOI 10.1109/ASRU.2013.6707742
   Hamill M, 2017, INFORM SOFTWARE TECH, V87, P1, DOI 10.1016/j.infsof.2017.01.002
   Harry Z., 2004, FLAIRS2004 C
   Huang M, 2009, 2009 INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND COMPUTATIONAL INTELLIGENCE, VOL IV, PROCEEDINGS, P260, DOI 10.1109/AICI.2009.228
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Jianfeng Gao, 2004, Proceedings of Sheffield SIGIR 2004. The Twenty-Seventh Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P170
   Jiang Y, 2020, INFORM SOFTWARE TECH, V124, DOI 10.1016/j.infsof.2020.106314
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Kanungo T, 2002, IEEE T PATTERN ANAL, V24, P881, DOI 10.1109/TPAMI.2002.1017616
   Khan K, 2014, 2014 FIFTH INTERNATIONAL CONFERENCE ON THE APPLICATIONS OF DIGITAL INFORMATION AND WEB TECHNOLOGIES (ICADIWT), P232, DOI 10.1109/ICADIWT.2014.6814687
   Khandelwal U, 2018, Arxiv, DOI arXiv:1805.04623
   Kim M, 2020, INFORM SOFTWARE TECH, V125, DOI 10.1016/j.infsof.2020.106334
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kodinariya T.M., 2013, International Journal of Advance Research in Computer Science and Management Studies, V1, P90, DOI DOI 10.18576/AMIS/100428
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li T, 2004, PROCEEDINGS OF THE 2004 INTERNATIONAL CONFERENCE ON MANAGEMENT SCIENCE & ENGINEERING, VOLS 1 AND 2, P531
   Li ZL, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106410
   Lilleberg J, 2015, PROCEEDINGS OF 2015 IEEE 14TH INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS & COGNITIVE COMPUTING (ICCI*CC), P136, DOI 10.1109/ICCI-CC.2015.7259377
   Liu B, 2019, IEEE ACM T COMPUT BI, V16, P1203, DOI 10.1109/TCBB.2018.2789880
   Liu F, 2021, IEEE T FUZZY SYST, V29, P986, DOI 10.1109/TFUZZ.2020.2966182
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Murtagh F., 2011, PREPRINT
   Neysiani BS, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106344
   Ohira M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P518, DOI 10.1109/MSR.2015.78
   Panichella S, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106665
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Peters F, 2019, IEEE T SOFTWARE ENG, V45, P615, DOI 10.1109/TSE.2017.2787653
   Quang D, 2016, NUCLEIC ACIDS RES, V44, DOI 10.1093/nar/gkw226
   Ramos Juan., 2003, USING TF IDF DETERMI, V242, P29
   Rong X, 2016, Arxiv, DOI arXiv:1411.2738
   Madiraju NS, 2018, Arxiv, DOI arXiv:1802.01059
   Seif G., 2018, DATA SCI
   Shanahan JG, 2003, LECT NOTES ARTIF INT, V2837, P361
   Shi XJ, 2015, ADV NEUR IN, V28
   Shu R, 2019, Arxiv, DOI arXiv:1905.06872
   Stein RA, 2019, INFORM SCIENCES, V471, P216, DOI 10.1016/j.ins.2018.09.001
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Tan P. N., 2016, INTRO DATA MINING
   Tian Y, 2015, EMPIR SOFTW ENG, V20, P1354, DOI 10.1007/s10664-014-9331-y
   Tomas M., 2013, arXiv, DOI DOI 10.48550/ARXIV.1310.4546
   Tong Y, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106668
   Tshitoyan V, 2019, NATURE, V571, P95, DOI 10.1038/s41586-019-1335-8
   Weyuker EJ, 2008, EMPIR SOFTW ENG, V13, P539, DOI 10.1007/s10664-008-9082-8
   Wijayasekara D, 2012, C HUM SYST INTERACT, P89, DOI 10.1109/HSI.2012.22
   Wu YM, 2019, IEEE-ACM T AUDIO SPE, V27, P355, DOI 10.1109/TASLP.2018.2879399
   Xiang SM, 2008, PATTERN RECOGN, V41, P3600, DOI 10.1016/j.patcog.2008.05.018
   Xiao LZ, 2018, INT SYM COMPUT INTEL, P71, DOI 10.1109/ISCID.2018.00023
   Xu D., 2015, Annals of Data Science, V2, P165, DOI [DOI 10.1007/S40745-015-0040-1, 10.1007/s40745-015-0040-1]
   Xu K, 2015, PR MACH LEARN RES, V37, P2048
   Xu XW, 1998, PROC INT CONF DATA, P324, DOI 10.1109/ICDE.1998.655795
   Ye X, 2016, IEEE T SOFTWARE ENG, V42, P379, DOI 10.1109/TSE.2015.2479232
   Zhang T, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1553, DOI 10.1145/2695664.2695872
   Zhou CT, 2015, Arxiv, DOI [arXiv:1511.08630, DOI 10.48550/ARXIV.1511.08630]
NR 87
TC 13
Z9 13
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2022
VL 147
AR 106906
DI 10.1016/j.infsof.2022.106906
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7V6AH
UT WOS:000912894400001
DA 2024-07-18
ER

PT J
AU Barbosa, G
   de Souza, EF
   dos Santos, LBR
   da Silva, M
   Balera, JM
   Vijaykumar, NL
AF Barbosa, Gerson
   de Souza, Erica Ferreira
   dos Santos, Luciana Brasil Rebelo
   da Silva, Marlon
   Balera, Juliana Marino
   Vijaykumar, Nandamudi Lankalapalli
TI A Systematic Literature Review on prioritizing software test cases using
   Markov chains
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic Literature Review; Markov Chains; Test case prioritization
ID COVERAGE; MODEL; CONTEXT; COST
AB Context: Software Testing is a costly activity since the size of the test case set tends to increase as the construction of the software evolves. Test Case Prioritization (TCP) can reduce the effort and cost of software testing. TCP is an activity where a subset of the existing test cases is selected in order to maximize the possibility of finding defects. On the other hand, Markov Chains representing a reactive system, when solved, can present the occupation time of each of their states. The idea is to use such information and associate priority to those test cases that consist of states with the highest probabilities.Objective: The objective of this paper is to conduct a survey to identify and understand key initiatives for using Markov Chains in TCP. Aspects such as approaches, developed techniques, programming languages, analytical and simulation results, and validation tests are investigated.Methods: A Systematic Literature Review (SLR) was conducted considering studies published up to July 2021 from five different databases to answer the three research questions.Results: From SLR, we identified 480 studies addressing Markov Chains in TCP that have been reviewed in order to extract relevant information on a set of research questions.Conclusion: The final 12 studies analyzed use Markov Chains at some stage of test case prioritization in a distinct way, that is, we found that there is no strong relationship between any of the studies, not only on how the technique was used but also in the context of the application. Concerning the fields of application of this subject, 6 forms of approach were found: Controlled Markov Chain, Usage Model, Model-Based Test, Regression Test, Statistical Test, and Random Test. This demonstrates the versatility and robustness of the tool. A large part of the studies developed some prioritization tool, being its validation done in some cases analytically and in others numerically, such as: Measure of the software specification, Optimal Test Transition Probabilities, Adaptive Software Testing, Automatic Prioritization, Ant Colony Optimization, Model Driven approach, and Monte Carlo Random Testing.
C1 [Barbosa, Gerson] Univ Estadual Paulista UNESP, Guaratingueta, Brazil.
   [de Souza, Erica Ferreira] Univ Tecnol Fed Parana UTFPR, Cornelio Procopio, Brazil.
   [dos Santos, Luciana Brasil Rebelo] Inst Fed Educ, Ciencia & Tecnol Sao Paulo IFSP, Jacarei, Brazil.
   [da Silva, Marlon] Inst Fed Educ, Cienciae Tecnol Sao Paulo IFSP, Campos Jordao, Brazil.
   [Barbosa, Gerson; Balera, Juliana Marino; Vijaykumar, Nandamudi Lankalapalli] Inst Nacl Pesquisas Espaciais INPE, Sao Jose Dos Campos, Brazil.
C3 Universidade Estadual Paulista; Universidade Tecnologica Federal do
   Parana; Instituto Federal de Sao Paulo (IFSP); Instituto Nacional de
   Pesquisas Espaciais (INPE)
RP de Souza, EF (corresponding author), Univ Tecnol Fed Parana UTFPR, Cornelio Procopio, Brazil.
EM gerson.barbosa@unesp.br; ericasouza@utfpr.edu.br; lurebelo@ifsp.edu.br;
   marlon.silva@ifsp.edu.br; juliana.balera@inpe.br; vijay.nl@inpe.br
RI Barbosa, Gerson/ABA-5381-2020; Santos, Luciana Brasil Rebelo
   dos/GLU-6384-2022; Souza, Erica/IVV-7492-2023; da Silva,
   Marlon/W-6478-2018
OI Barbosa, Gerson/0000-0002-1147-2519; Santos, Luciana Brasil Rebelo
   dos/0000-0002-5193-6218; Vijaykumar, Nandamud/0000-0002-9025-0841; da
   Silva, Marlon/0000-0002-6413-7888
FU CNPq, Brazil [432247/2018-1]
FX Acknowledgments Dr. Erica Ferreira de Souza is supported by a research
   grant from the Brazilian funding agency CNPq, Brazil, with reference
   number: 432247/2018-1.
CR Al-tekreeti M, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P225, DOI 10.5220/0006609302250236
   [Anonymous], 1990, IEEE Softw. Eng. Stand. Collect. IEEE, P610
   [Anonymous], 2015, 1 INT WORKSH RES EMB
   Arantes A.O, 2008, P 10 INT C INF INT W, P374
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Biolchini J, 2005, SYSTEMATIC REV SOFTW
   Bremaud P., 2013, Markov chains: Gibbs fields, Monte Carlo simulation, and queues, V31
   Briand LC, 2004, PROC INT CONF SOFTW, P86, DOI 10.1109/ICSE.2004.1317431
   Cai K.-Y, 2011, SOFTW ENG INT J SEIJ, V1, P38
   Cai KY, 2004, INFORM SOFTWARE TECH, V46, P989, DOI 10.1016/j.infsof.2004.07.006
   Cai KY, 2001, SECOND ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P157, DOI 10.1109/APAQS.2001.990014
   Cai KY, 2002, INFORM SOFTWARE TECH, V44, P841, DOI 10.1016/S0950-5849(02)00108-8
   Catal C, 2013, SOFTWARE QUAL J, V21, P445, DOI 10.1007/s11219-012-9181-z
   Cinlar E., 1975, INTRO STOCHASTIC PRO, P420
   de Souza EF, 2017, SOFTWARE QUAL J, V25, P373, DOI 10.1007/s11219-015-9300-8
   Delamaro ME., 2007, INTRO AO TESTE SOFTW
   Devroey X, 2017, SOFTW SYST MODEL, V16, P153, DOI 10.1007/s10270-015-0479-8
   Di Nardo D, 2015, SOFTW TEST VERIF REL, V25, P371, DOI 10.1002/stvr.1572
   Di Nardo D, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P302, DOI 10.1109/ICST.2013.27
   Dorigo M, 2006, HDB METAHEURISTICS, V26
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Endo AT, 2013, INFORM SOFTWARE TECH, V55, P1045, DOI 10.1016/j.infsof.2013.01.001
   Ferreira É, 2008, 2008 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE FOR MODELLING CONTROL & AUTOMATION, VOLS 1 AND 2, P157, DOI 10.1109/CIMCA.2008.147
   Gibbons A., 1985, Algorithmic graph theory
   Gökçe N, 2015, TURK J ELECTR ENG CO, V23, P623, DOI 10.3906/elk-1209-109
   Gutjahr WJ, 2000, PERFORM EVALUATION, V40, P199, DOI 10.1016/S0166-5316(99)00052-8
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Karras D.A, 2017, P 7 INT S BUS MOD SO, P99
   Kashevnik A, 2012, PROC CONF OPEN INNOV, P43
   Kashyap A., 2012, Int. J. Comput. Appl., V46, P13
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Khatri SK, 2015, INT J SYST ASSUR ENG, V6, P3, DOI 10.1007/s13198-014-0237-2
   Kitchenham B., 2007, 2007001 EBSE
   Korel Bogdan., 2007, Proceedings of the 3rd International Workshop on Advances in Model-Based Testing, P34
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Lin L, 2017, P 29 INT C SOFTW ENG, P462
   Lou YL, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P46, DOI 10.1109/ISSRE.2015.7381798
   Mariano M.M, 2020, J ELECTRON TEST, V1, P1
   Mathur A.P., 2012, FDN SOFTWARE TESTING
   Morozov A, 2017, 2017 ANNUAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2017), P20, DOI 10.1109/SATE.2017.11
   Muthyala K., 2011, Indian J. Comput. Sci. Eng, V2, P500
   Nejad FM, 2016, 2016 1ST CONFERENCE ON SWARM INTELLIGENCE AND EVOLUTIONARY COMPUTATION (CSIEC 2016), P142, DOI 10.1109/CSIEC.2016.7482129
   Odumuyiwa V, 2019, 2019 15 INT C EL COM, P1
   Oliveira Arantes Alessandro, 2014, International Journal of Web Engineering and Technology, V9, P62, DOI 10.1504/IJWET.2014.063041
   Pai M, 2004, NATL MED J INDIA, V17, P86
   Raiyani A.G., 2011, INT J SOFTW ENG RES, V1
   Regnell B, 2000, J SYST SOFTWARE, V50, P117, DOI 10.1016/S0164-1212(99)00084-9
   Roongruangsuwan S., 2010, INT WORKSH DES EV RE, P75
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Saad Y, 1992, Numerical Methods for Large Eigenvalue Problems
   Santiago Valdivino, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P63, DOI 10.1109/ICSTW.2008.7
   Sayyari F, 2015, SECOND INTERNATIONAL CONGRESS ON TECHNOLOGY, COMMUNICATION AND KNOWLEDGE (ICTCK 2015), P435, DOI 10.1109/ICTCK.2015.7582709
   Siegl S, 2011, DES AUT TEST EUROPE, P118
   Sun CA, 2019, IEEE T COMPUT, V68, P157, DOI 10.1109/TC.2018.2866040
   Tijms H. C., 2003, 1 COURSE STOCHASTIC
   Tijms H.C., 1994, STOCHASTIC MODELS AL, V303
   Coutinho AEVB, 2016, SOFTWARE QUAL J, V24, P407, DOI 10.1007/s11219-014-9265-z
   Walton G, 2000, INFORM SOFTWARE TECH, V42, P859, DOI 10.1016/S0950-5849(00)00102-6
   WHITTAKER JA, 1994, IEEE T SOFTWARE ENG, V20, P812, DOI 10.1109/32.328991
   Yan J, 2012, ADV MATER RES-SWITZ, V433-440, P4691, DOI 10.4028/www.scientific.net/AMR.433-440.4691
   Zhou B, 2012, IEICE T INF SYST, VE95D, P2219, DOI 10.1587/transinf.E95.D.2219
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 64
TC 6
Z9 6
U1 2
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2022
VL 147
AR 106902
DI 10.1016/j.infsof.2022.106902
EA MAR 2022
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0V1OR
UT WOS:000788115100003
DA 2024-07-18
ER

PT J
AU Grua, EM
   De Sanctis, M
   Malavolta, I
   Hoogendoorn, M
   Lago, P
AF Grua, Eoin Martino
   De Sanctis, Martina
   Malavolta, Ivano
   Hoogendoorn, Mark
   Lago, Patricia
TI An evaluation of the effectiveness of personalization and
   self-adaptation for e-Health
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Self-adaptive systems; Personalization; Reference architecture; Mobile
   apps; e-Health
AB Context. There are many e-Health mobile apps on the apps store, from apps to improve a user's lifestyle to mental coaching. Whilst these apps might consider user context when they give their interventions, prompts, and encouragements, they still tend to be rigid e.g., not using user context and experience to tailor themselves to the user.Objective. To better engage and tailor to the user, we have previously proposed a Reference Architecture for enabling self-adaptation and AI personalization in e-Health mobile apps. In this work we evaluate the end users' perception, usability, performance impact, and energy consumption contributed by this Reference Architecture.Method. We do so by implementing a Reference Architecture compliant app and conducting two experiments: a user study and a measurement-based experiment. Results. Although limited in the number of participants, the results of our user study show that usability of the Reference Architecture compliant app is similar to the control app. Users' perception was found to be positively influenced by the compliant app when compared to the control group. Results of our measurement based experiment showed some differences in performance and energy consumption measurements between the two apps. The differences are, however, deemed minimal.Conclusions. Our experiments show promising results for an app implemented following our proposed Reference Architecture. This is preliminary evidence that the use of personalization and self-adaptation techniques can be beneficial within the domain of e-Health apps.
C1 [Grua, Eoin Martino; Malavolta, Ivano; Hoogendoorn, Mark; Lago, Patricia] Vrije Univ Amsterdam, Amsterdam, Netherlands.
   [De Sanctis, Martina] Gran Sasso Sci Inst, Laquila, Italy.
   [Lago, Patricia] Chalmers Univ Technol, Gothenburg, Sweden.
C3 Vrije Universiteit Amsterdam; Gran Sasso Science Institute (GSSI);
   Chalmers University of Technology
RP Grua, EM (corresponding author), Vrije Univ Amsterdam, Amsterdam, Netherlands.
EM e.m.grua@vu.nl; martina.desanctis@gssi.it; i.malavolta@vu.nl;
   m.hoogendoorn@vu.nl; p.lago@vu.nl
RI Lago, Patricia/ABH-2308-2020; Malavolta, Ivano/E-9018-2017
OI Lago, Patricia/0000-0002-2234-0845; Malavolta,
   Ivano/0000-0001-5773-8346; Grua, Eoin Martino/0000-0002-5471-4338
FU PON (Programma Operativo Nazionale) [AIM1880573 Linea 1]; Italian
   National Project at GSSI
FX Acknowledgments This work is partially supported by the PON (Programma
   Operativo Nazionale) AIM1880573 Linea 1, Italian National Project at
   GSSI.
CR Ballesteros J, 2020, J BIOMED INFORM, V108, DOI 10.1016/j.jbi.2020.103494
   Baresi L, 2021, IEEE SOFTWARE, V38, P88, DOI 10.1109/MS.2020.2994306
   Brooke John., 1996, Usability evaluation in industry, V189, P4, DOI DOI 10.1201/9781498710411
   Burley C., 2020, 2020 Systems and Information Engineering Design Symposium (SIEDS), P1
   Cañete A, 2020, INFORM SOFTWARE TECH, V118, DOI 10.1016/j.infsof.2019.106220
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Computing A., 2006, IBM White Paper, 31, V31, P1
   Di Nucci D, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P103, DOI 10.1109/SANER.2017.7884613
   Fan HY, 2006, J ORG COMP ELECT COM, V16, P179, DOI 10.1207/s15327744joce1603&4_2
   Fling B., 2009, MOBILE DESIGN DEV PR
   Gamberini L., 2021, HCI INT 2021 POSTERS, P315
   Grua E.M., 2020, EUR C SOFTW ARCH, P195
   Grua E. M., 2021, Softw. Sustain., P301, DOI DOI 10.1007/978-3-030-69970-3_13
   Grua EM, 2019, 2019 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE (WI 2019), P270, DOI 10.1145/3350546.3352529
   Inc. Global Industry Analysts, 2019, MHLTH MOB HLTH SERV
   Kim KJ, 2004, LECT NOTES COMPUT SC, V3397, P409
   Malavolta I, 2020, 2020 35TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2020), P61, DOI 10.1145/3417113.3422184
   McKnight P.E., 2010, Mann-Whitney U Test, The Corsini Encyclopedia of Psychology
   Mizouni R, 2014, EXPERT SYST APPL, V41, P7549, DOI 10.1016/j.eswa.2014.05.049
   Moreira MWL, 2019, IEEE SYST J, V13, P3536, DOI 10.1109/JSYST.2018.2890121
   Paschou M, 2013, SIMUL MODEL PRACT TH, V34, P186, DOI 10.1016/j.simpat.2012.08.002
   Preuveneers D, 2016, P ANN HICSS, P3229, DOI 10.1109/HICSS.2016.405
   Raheel S, 2016, 2016 IEEE INTERNATIONAL MULTIDISCIPLINARY CONFERENCE ON ENGINEERING TECHNOLOGY (IMCET), P64, DOI 10.1109/IMCET.2016.7777428
   Sartori F., 2021, INF SYST DEV CROSS B
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Lopez FS, 2017, L N INST COMP SCI SO, V178, P99, DOI 10.1007/978-3-319-49616-0_9
   Van Solingen R., ENCY SOFTWARE ENG, DOI [10. 1002/0471028959, DOI 10.1002/0471028959]
   Weyns Danny, 2019, Handbook of software engineering, P399, DOI [10.1007/978-3-030-00262-6\_11, 10.1007/978-3-030-00262-6_11, DOI 10.1007/978-3-030-00262-6_11]
NR 28
TC 2
Z9 3
U1 3
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2022
VL 146
AR 106841
DI 10.1016/j.infsof.2022.106841
EA FEB 2022
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0J8ZG
UT WOS:000780387700009
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Mo, R
   Wei, SZ
   Feng, Q
   Li, ZY
AF Mo, Ran
   Wei, Shaozhi
   Feng, Qiong
   Li, Zengyang
TI An exploratory study of bug prediction at the method level
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Method-level bug prediction; Code metrics; History measures
ID QUANTITATIVE-ANALYSIS; EMPIRICAL-ANALYSIS; SOFTWARE; FAULTS; METRICS
AB Context: During the past decades, researchers have proposed numerous studies to predict bugs at different granularity levels, such as the file level, package level, module level, etc. However, the prediction models at the method level are rarely investigated. Objective: In this paper, we investigate to predict bug-prone methods based on method-level code metrics or history measures, and analyze the prediction importance of each metric. Method: To proceed our study, we first propose a series of code metrics and history measures for conducting method-level bug predictions. Next, we compare the performance of different types of prediction models. Finally, we conduct analyses about the prediction power of each metric, based on which, we further analyze whether we can simplify the prediction models. Results: Through our evaluation on eighteen large-scale projects, we have presented: (1) conducting method level bug prediction has potentials of saving a large portion of effort on code reviews and inspections; (2) models using the proposed code metrics or history measures could achieve a good prediction performance; (3) the prediction importance of each metric distributes differently; (4) a highly simplified prediction model could be derived by just using a few important metrics. Conclusion: This study presents how to systematically build models for predicting bug-prone methods, and provides empirical evidence for developers to best select metrics to build method-level bug prediction models.
C1 [Mo, Ran; Wei, Shaozhi; Li, Zengyang] Cent China Normal Univ, Hubei Prov Key Lab Artificial Intelligence & Smar, Wuhan, Hubei, Peoples R China.
   [Feng, Qiong] Cent China Normal Univ, Sch Comp, Wuhan, Hubei, Peoples R China.
   Nanjing Univ Sci & Technol, Wuhan, Hubei, Peoples R China.
C3 Central China Normal University; Central China Normal University;
   Nanjing University of Science & Technology
RP Feng, Q (corresponding author), Cent China Normal Univ, Sch Comp, Wuhan, Hubei, Peoples R China.
EM moran@mail.ccnu.edu; wsz@mails.ccnu.edu.cn; qiongfeng@njust.edu.cn;
   zengyangli@mail.ccnu.edu.cn
OI Mo, Ran/0000-0001-7556-153X
FU National Natural Science Foundation of China [62002129]; Hubei
   Provincial Natural Science Foundation of China [2020CFB473]; Fundamental
   Research Funds for the Central Universities, China [CCNU19TD003]
FX This work is supported by the National Natural Science Foundation of
   China under the grant No. 62002129, the Hubei Provincial Natural Science
   Foundation of China under the grant No. 2020CFB473, and the Fundamental
   Research Funds for the Central Universities, China under the grant No.
   CCNU19TD003.
CR Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   Aniche M, 2016, PROC IEEE INT CONF S, P234, DOI 10.1109/ICSME.2016.12
   [Anonymous], 2010, 2010 IEEE International Conference on Software Maintenance, DOI [10.1109/ICSM.2010.5609564, DOI 10.1109/ICSM.2010.5609564]
   [Anonymous], 2006, ISESE '06: Proceedings of the 5th International Symposium on Empirical Software Engineering. Volume II: Short Papers and Posters, DOI DOI 10.1145/1159733.1159739.
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chih-Song Kuo, 2010, 2010 IEEE International Conference on Industrial Engineering & Engineering Management (IE&EM 2010), P611, DOI 10.1109/IEEM.2010.5674517
   CHINCHOR N, 1992, FOURTH MESSAGE UNDERSTANDING CONFERENCE (MUC-4), P22
   Concas G, 2011, IEEE T SOFTWARE ENG, V37, P872, DOI 10.1109/TSE.2011.54
   de Carvalho AB, 2010, J SYST SOFTWARE, V83, P868, DOI 10.1016/j.jss.2009.12.023
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Gao K., 2015, 27 INT C SOFTWARE EN, P439, DOI [10.18293/SEKE2015, DOI 10.18293/SEKE2015-182]
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   HOLTE RC, 1993, MACH LEARN, V11, P63, DOI 10.1023/A:1022631118932
   Kamei Y, 2010, PROC IEEE INT CONF S
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Landman D, 2014, PROC IEEE INT CONF S, P221, DOI 10.1109/ICSME.2014.44
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mishra B., 2012, INT J COMPUT APPL
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pai GJ, 2007, IEEE T SOFTWARE ENG, V33, P675, DOI [10.1109/TSE.2007.70722, 10.1109/TSE.2007.70722.]
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Shatnawi R., 2012, 2012 International Conference on Innovations in Information Technology (IIT), P54, DOI 10.1109/INNOVATIONS.2012.6207774
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Sokolova M, 2009, INFORM PROCESS MANAG, V45, P427, DOI 10.1016/j.ipm.2009.03.002
   STONE M, 1974, J R STAT SOC B, V36, P111, DOI 10.1111/j.2517-6161.1974.tb00994.x
   Walkinshaw N, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239244
   Witten IH, 2011, MOR KAUF D, P1
   Yan M, 2017, INT SYMP EMP SOFTWAR, P344, DOI 10.1109/ESEM.2017.48
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 49
TC 9
Z9 9
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2022
VL 144
AR 106794
DI 10.1016/j.infsof.2021.106794
EA DEC 2021
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YK3DU
UT WOS:000745098800013
DA 2024-07-18
ER

PT J
AU Gregory, P
   Strode, DE
   Sharp, H
   Barroca, L
AF Gregory, Peggy
   Strode, Diane E.
   Sharp, Helen
   Barroca, Leonor
TI An onboarding model for integrating newcomers into agile project teams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile onboarding adjustments; Onboarding activities; Scrum;
   Self-organizing team onboarding; Sustaining agile; Team onboarding;
   Newcomers
ID CHALLENGES; REFLECTION
AB Context: A stable team is deemed optimal for agile software development project success; however, all teams change membership over time. Newcomers joining an agile project team must rapidly assimilate into the organisational and project environment. They must do this while learning how to contribute effectively and without seriously interrupting project progress. Objective: This paper addresses how newcomers integrate into an established agile project team and how agile practices assist with onboarding. Method: A single, qualitative case study approach was used, investigating a co-located agile project team in a large IT department who regularly onboard inexperienced newcomers. Analysis was abductive, consisting of inductive coding and theming using categories from an existing onboarding theory. Results: We describe the team's onboarding practices and adjustments and present an agile onboarding model that encompasses onboarding activities, individual adjustments, and workplace adjustments. Conclusions: A mixture of general and specific agile onboarding practices contribute to successful onboarding in an agile team. We provide practical guidelines to improve onboarding practice in agile teams. Our major new contribution is an extended model of onboarding for agile teams.
C1 [Gregory, Peggy] Univ Cent Lancashire, Sch Psychol Comp Sci, Preston, Lancs, England.
   [Strode, Diane E.] Whitireia Polytech, Sch Informat Technol, Wellington, New Zealand.
   [Sharp, Helen; Barroca, Leonor] Open Univ, Sch Comp & Commun, Milton Keynes, Bucks, England.
C3 University of Central Lancashire; Whitireia Community Polytechnic; Open
   University - UK
RP Gregory, P (corresponding author), Univ Cent Lancashire, Sch Psychol Comp Sci, Preston, Lancs, England.
EM ajgregory@uclan.ac.uk; diane.strode@whitireia.ac.nz;
   helen.sharp@open.ac.uk; leonor.barroca@open.ac.uk
OI Gregory, Peggy/0000-0001-7891-6666; Barroca, Leonor/0000-0002-6054-5366;
   Sharp, Helen/0000-0003-4376-1734; Strode, Diane/0000-0002-8419-592X
FU Agile Business Consortium (ABC Ltd.)
FX We acknowledge the contributions of the research participants, Dr Raid
   AlQaisi who helped with data collection, and the co-funding provided by
   the Agile Business Consortium (ABC Ltd.) for the Agile Research Network
   (agileresearchnetwork.org).
CR Andriyani Y, 2017, LECT NOTES BUS INF P, V283, P3, DOI 10.1007/978-3-319-57633-6_1
   [Anonymous], 2016, SYRIA STUDIES
   [Anonymous], 2004, XP Ser
   Babb J, 2014, IEEE SOFTWARE, V31, P51, DOI 10.1109/MS.2014.54
   BANDURA A, 1982, AM PSYCHOL, V37, P122, DOI 10.1037/0003-066X.37.2.122
   Barroca L, 2018, EUROMICRO CONF PROC, P22, DOI 10.1109/SEAA.2018.00013
   Bauer T.N., 2011, Maintaining, expanding, and contracting the organization, V3, P51, DOI [DOI 10.1037/12171-002, 10.1037/12171-002]
   Bauer T. N., 2010, ONBOARDING NEW EMPLO
   Britto R, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110699
   Britto R, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1921
   Buchan J, 2019, INT SYMP EMP SOFTWAR, P306
   Calefato F., 2020, CASE STUDY TOOL SUPP, P11, DOI [10.1145/ 3372787.3390436, DOI 10.1145/3372787.3390436]
   Cockburn A., 2006, AGILE SOFTWARE DEV C
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Conboy K, 2011, IEEE SOFTWARE, V28, P48, DOI 10.1109/MS.2010.132
   da Camara R., 2020, ARXIV PREPRINT ARXIV
   Dagenais B., 2010, Proc. of the ICSE 10, P275, DOI DOI 10.1145/1806799.1806842
   Davis V., 2001, Management Review News, V24, P43, DOI DOI 10.1108/01409170110782504
   Dingsoyr T., 2013, TEAM PERFORMANCE AGI, P46, DOI [10.1007/978-3-642-38314-4_4, DOI 10.1007/978-3-642-38314-4_4]
   Eisenhardt KM, 2007, ACAD MANAGE J, V50, P25, DOI 10.5465/AMJ.2007.24160888
   Fagerholm F, 2014, IEEE SOFTWARE, V31, P54, DOI 10.1109/MS.2014.107
   Fowler M., 2001, Software Development, V9, P28
   Gandomani TJ, 2015, J SYST SOFTWARE, V107, P204, DOI 10.1016/j.jss.2015.06.006
   Gregory P, 2020, LECT NOTES BUS INF P, V383, P20, DOI 10.1007/978-3-030-49392-9_2
   Gregory P, 2016, INFORM SOFTWARE TECH, V77, P92, DOI 10.1016/j.infsof.2016.04.006
   Handke L, 2021, EUR J WORK ORGAN PSY, V30, P624, DOI 10.1080/1359432X.2020.1806921
   Hoda R, 2016, J SYST SOFTWARE, V117, P245, DOI 10.1016/j.jss.2016.02.049
   Kähkönen T, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P2
   Ketokivi M, 2014, J OPER MANAG, V32, P232, DOI 10.1016/j.jom.2014.03.004
   Klein H., 2012, OXFORD HDB ORG SOCIA, P267, DOI DOI 10.1093/OXFORDHB/9780199763672.013.0014
   Kuusinen K, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962623
   Lave J., 1991, Situated Learning: Legitimate Peripheral Partic- ipation
   Leung Lawrence, 2015, J Family Med Prim Care, V4, P324, DOI 10.4103/2249-4863.161306
   Miler J, 2019, FED CONF COMPUT SCI, P841, DOI 10.15439/2019F198
   Mordi A., 2020, ECIS
   Pavlina K., 2020, Assessing best practices for the virtual onboarding of new hires in the technology industry [Master's thesis
   Plonka L, 2015, INT J HUM-COMPUT ST, V73, P66, DOI 10.1016/j.ijhcs.2014.09.001
   Saldana J., 2015, CODING MANUAL QUALIT
   Schwaber K., 2020, Scrum Guide
   Sharma GG, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110442
   Sharp H, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P61, DOI 10.1007/978-3-642-12575-1_4
   Sharp H, 2009, INTERACT COMPUT, V21, P108, DOI 10.1016/j.intcom.2008.10.006
   Stavru S, 2014, J SYST SOFTWARE, V94, P87, DOI 10.1016/j.jss.2014.03.041
   Steinmacher I, 2014, IFIP ADV INF COMM TE, V427, P199
   Stray V, 2017, LECT NOTES BUS INF P, V283, P274, DOI 10.1007/978-3-319-57633-6_20
   Stray VG, 2011, LECT NOTES BUS INF P, V77, P146
   Timmermans S, 2012, SOCIOL THEOR, V30, P167, DOI 10.1177/0735275112457914
   Van Maanen J., 1977, Toward a theory of organizational socialization
   van Manen H, 2014, LECT NOTES COMPUT SC, V8892, P48, DOI 10.1007/978-3-319-13835-0_4
   Version One, 2019, 13 ANN STATE AGILE R
   WENGER E., 2011, STEP LEADERSHIP WORK
   Whitworth E, 2007, AGILE 2007, PROCEEDINGS, P26, DOI 10.1109/AGILE.2007.60
   Yates R, 2020, EMPIR SOFTW ENG, V25, P940, DOI 10.1007/s10664-019-09741-6
   Yin K., 2018, Case study research and applications: Design and methods
NR 54
TC 4
Z9 5
U1 14
U2 97
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2022
VL 143
BP 1
EP 14
DI 10.1016/j.infsof.2021.106792
EA DEC 2021
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YJ4ZN
UT WOS:000744542000001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Punnoose, R
   Kumar, D
AF Punnoose, Rohit
   Kumar, De Supriya
TI Phase-wise migration of multiple legacy applications-A graph-theoretic
   approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Legacy application migration; Enterprise topology graph; Bipartite
   graph; Community detection
ID COMMUNITY STRUCTURE; SYSTEMS; CLOUD
AB Context: Many organizations undertake large-scale projects of application migration due to availability of scalable and cost-efficient technologies. Such legacy application migration projects are very complex since the process involves in-depth profiling of the applications.
   Objective: During the initial profiling phase, it is imperative to understand the underlying complexities of individual applications, as well as the interdependencies among applications in the organization. This analysis phase can take considerable time and effort, depending on number and complexity of the applications. The main goal of this paper is to provide a framework that provides a cost-effective and quick approach to study the interdependencies between legacy applications with minimal prior knowledge of application usage.
   Method: In this paper, we propose a framework that uses community detection algorithms and other established techniques from graph theory, to discover interdependencies of legacy applications within an organization, group these highly interdependent legacy applications in clusters, and finally sequence the clusters for migration to a modern platform. We study the proposed framework through three case studies, using network datasets from a large US organization.
   Results: The experimental results from the proposed framework suggests that legacy applications can be grouped into clusters with high interdependencies between each other. Also, the framework shows how organizations can then appropriately sequence the clusters of legacy applications into a phase-wise migration project, thereby reducing migration costs.
   Conclusion: The proposed framework provides a valuable design input to organizations on how to determine the interdependencies between the various legacy applications that are in scope for migration to a modern platform. Such large-scale migration projects can be simplified and broken down to use a systematic approach, thereby reducing migration costs and data integrity challenges.
C1 [Punnoose, Rohit; Kumar, De Supriya] XLRI Xavier Sch Management, Circuit House Area East, Jamshedpur 831001, Bihar, India.
C3 XLRI -Xavier School of Management
RP Punnoose, R (corresponding author), XLRI Xavier Sch Management, Circuit House Area East, Jamshedpur 831001, Bihar, India.
EM r14012@astra.xlri.ac.in; skde@xlri.ac.in
RI De, Supriya Kumar/AAQ-6214-2020; PUNNOOSE, ROHIT/P-1982-2018
OI De, Supriya Kumar/0000-0002-2530-4604; PUNNOOSE,
   ROHIT/0000-0002-8143-7989
CR BENNETT K, 1995, IEEE SOFTWARE, V12, P19, DOI 10.1109/52.363157
   Beserra P. V., 2012, 2012 IEEE 6th International Workshop on the Maintenance and Evolution of Service-Oriented and Cloud-Based Systems (MESOCA 2012), P7, DOI 10.1109/MESOCA.2012.6392602
   Binz T., 2012, 2012 IEEE 5th International Conference on Cloud Computing (CLOUD), P742, DOI 10.1109/CLOUD.2012.143
   Binz T, 2012, IEEE INT ENTERP DIST, P61, DOI 10.1109/EDOC.2012.17
   Bisbal J, 1999, IEEE SOFTWARE, V16, P103, DOI 10.1109/52.795108
   Borges M, 2018, INFORM SOFTWARE TECH, V95, P346, DOI 10.1016/j.infsof.2017.11.014
   Brandes U, 2003, LECT NOTES COMPUT SC, V2832, P568
   Brodie M.L., 1995, LEGACY INFORM SYSTEM
   Canfora G, 2001, INFORM SOFTWARE TECH, V43, P401, DOI 10.1016/S0950-5849(01)00149-5
   Colosimo M, 2009, INFORM SOFTWARE TECH, V51, P433, DOI 10.1016/j.infsof.2008.05.012
   Davenport TH, 1998, HARVARD BUS REV, V76, P121
   Emmons S, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0159161
   Fahmideh M, 2019, EUR J INFORM SYST, V28, P233, DOI 10.1080/0960085X.2018.1524417
   Fortunato S, 2010, PHYS REP, V486, P75, DOI 10.1016/j.physrep.2009.11.002
   Gao M, 2017, INFORM SCIENCES, V376, P158, DOI 10.1016/j.ins.2016.10.015
   Gholami MF, 2017, INFORM SYST, V67, P100, DOI 10.1016/j.is.2017.03.008
   Gholami MF, 2016, J SYST SOFTWARE, V120, P31, DOI 10.1016/j.jss.2016.06.068
   Girvan M, 2002, P NATL ACAD SCI USA, V99, P7821, DOI 10.1073/pnas.122653799
   Guimerà R, 2007, PHYS REV E, V76, DOI 10.1103/PhysRevE.76.036102
   Kazman R., 2002, 2002TR034 CMUSEI, DOI [10.1184/R1/6572024.v1, DOI 10.1184/R1/6572024.V1]
   Kelly S., 1999, COMMUN ASSOC INF SYS, V2
   Khadka R, 2013, MIGRATING LEGACY APPLICATIONS: CHALLENGES IN SERVICE ORIENTED ARCHITECTURE AND CLOUD COMPUTING ENVIRONMENTS, P40, DOI 10.4018/978-1-4666-2488-7.ch003
   Klaus H., 2000, Information Systems Frontiers, V2, P141, DOI 10.1023/A:1026543906354
   Kumar P, 2017, DECIS SUPPORT SYST, V96, P103, DOI 10.1016/j.dss.2017.02.010
   Lewis G., 2008, CMUSEI2008TN008
   Liu X, 2020, IEEE T KNOWL DATA EN, V32, P1736, DOI 10.1109/TKDE.2019.2911943
   Newman MEJ, 2006, PHYS REV E, V74, DOI 10.1103/PhysRevE.74.036104
   Newman MEJ, 2006, P NATL ACAD SCI USA, V103, P8577, DOI 10.1073/pnas.0601602103
   Newman MEJ, 2004, PHYS REV E, V69, DOI 10.1103/PhysRevE.69.026113
   Pons P, 2005, LECT NOTES COMPUT SC, V3733, P284
   PORTER ME, 1985, HARVARD BUS REV, V63, P149
   Raghavan UN, 2007, PHYS REV E, V76, DOI 10.1103/PhysRevE.76.036106
   Reddy SB, 2002, IND MANAGE DATA SYST, V102, P5, DOI 10.1108/02635570210414613
   Ritter D, 2017, INFORM SYST, V67, P36, DOI 10.1016/j.is.2017.03.003
   Schaeffer SE, 2007, COMPUT SCI REV, V1, P27, DOI 10.1016/j.cosrev.2007.05.001
   Settu R., 2013, CLOUD COMPUTING, P243, DOI DOI 10.1007/978-1-4471-5107-4_12
   Shi JB, 2000, IEEE T PATTERN ANAL, V22, P888, DOI 10.1109/34.868688
   Sneed H, 2019, J SYST SOFTWARE, V155, P162, DOI 10.1016/j.jss.2019.05.012
   TOSCA O., 2013, TOPOLOGY ORCHESTRATI
   Tran V., 2011, Proceedings of the 2nd International Workshop on Software Engineering for Cloud Computing, P22, DOI [10.1145/1985500.1985505, DOI 10.1145/1985500.1985505]
   Yang J, 2015, KNOWL INF SYST, V42, P181, DOI 10.1007/s10115-013-0693-z
   Yang Z, 2016, SCI REP-UK, V6, DOI 10.1038/srep30750
   Zhang GT, 2019, INFORM MANAGE-AMSTER, V56, P343, DOI 10.1016/j.im.2018.07.008
   Zhou T, 2009, EUR PHYS J B, V71, P623, DOI 10.1140/epjb/e2009-00335-8
NR 44
TC 0
Z9 1
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2021
VL 137
AR 106606
DI 10.1016/j.infsof.2021.106606
EA MAY 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SQ8FQ
UT WOS:000660586400010
DA 2024-07-18
ER

PT J
AU Saidani, I
   Ouni, A
   Mkaouer, MW
   Palomba, F
AF Saidani, Islem
   Ouni, Ali
   Mkaouer, Mohamed Wiem
   Palomba, Fabio
TI On the impact of Continuous Integration on refactoring practice: An
   exploratory study on TravisTorrent
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Continuous integration; Refactoring; Exploratory study; Mining software
   repositories; Multiple Regression Analysis
AB Context: The ultimate goal of Continuous Integration (CI) is to support developers in integrating changes into production constantly and quickly through automated build process. While CI provides developers with prompt feedback on several quality dimensions after each change, such frequent and quick changes may in turn compromise software quality without Refactoring. Indeed, recent work emphasized the potential of CI in changing the way developers perceive and apply refactoring. However, we still lack empirical evidence to confirm or refute this assumption. Objective: We aim to explore and understand the evolution of refactoring practices, in terms of frequency, size and involved developers, after the switch to CI in order to emphasize the role of this process in changing the way Refactoring is applied. Method: We collect a corpus of 99,545 commits and 89,926 refactoring operations extracted from 39 opensource GitHub projects that adopt Travis CI and analyze the changes using Multiple Regression Analysis (MRA). Results: Our study delivers several important findings. We found that the adoption of CI is associated with a drop in the refactoring size as recommended, while refactoring frequency as well as the number (and its related rate) of developers that perform refactoring are estimated to decrease after the shift to CI, indicating that refactoring is less likely to be applied in CI context. Conclusion: Our study uncovers insights about CI theory and practice and adds evidence to existing knowledge about CI practices related especially to quality assurance. Software developers need more customized refactoring tool support in the context of CI to better maintain and evolve their software systems.
C1 [Saidani, Islem; Ouni, Ali] Univ Quebec, ETS Montreal, Montreal, PQ, Canada.
   [Mkaouer, Mohamed Wiem] Rochester Inst Technol, Rochester, NY 14623 USA.
   [Palomba, Fabio] Univ Salerno, SeSa Lab, Fisciano, Italy.
C3 University of Quebec; Ecole de Technologie Superieure - Canada;
   University of Quebec Montreal; Rochester Institute of Technology;
   University of Salerno
RP Saidani, I (corresponding author), Univ Quebec, ETS Montreal, Montreal, PQ, Canada.
EM islem.saidani.1@ens.etsmlt.ca; ali.ouni@etsmtl.ca; mwmvse@rit.edu;
   fpalomba@unisa.it
RI Ouni, Ali/Y-8280-2019; Mkaouer, Mohamed Wiem/N-7476-2017
OI Ouni, Ali/0000-0003-4708-0362; Mkaouer, Mohamed Wiem/0000-0001-6010-7561
CR Abdalkareem Rabe, 2019, IEEE T SOFTW ENG
   Alizadeh Vahid, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P823, DOI 10.1109/ASE.2019.00081
   AlOmar EA, 2019, INT SYMP EMP SOFTWAR, P42
   [Anonymous], 2007, CONTINUOUS INTEGRATI
   [Anonymous], 2014, APPL MULTIPLE REGRES, DOI DOI 10.4324/9781410606266
   [Anonymous], 2018, REFACTORING IMPROVIN
   Bavota G, 2012, PROC INT CONF SOFTW, P1419, DOI 10.1109/ICSE.2012.6227233
   Beller M, 2017, IEEE WORK CONF MIN S, P447, DOI 10.1109/MSR.2017.24
   Bernardo JH, 2018, IEEE WORK CONF MIN S, P131, DOI 10.1145/3196398.3196421
   Cook Thomas D, 1979, QUASIEXPERIMENTATION, P81
   Edwards AllenL., 1985, MULTIPLE REGRESSION
   Felidre W., 2019, 2019 ACM IEEE INT SY, P1
   Fokaefs M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1037, DOI 10.1145/1985793.1985989
   Fowler M., 2006, Continuous integration
   Fowler Martin, 1999, J BRANT W OPDYKE ROB J BRANT W OPDYKE ROB
   Gupta Y, 2017, IEEE WORK CONF MIN S, P491, DOI 10.1109/MSR.2017.37
   Habchi S, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P87, DOI 10.1109/MOBILESoft.2019.00022
   Hilton M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P197, DOI 10.1145/3106237.3106270
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Imbens GW, 2008, J ECONOMETRICS, V142, P615, DOI 10.1016/j.jeconom.2007.05.001
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Lambiase S, 2020, INT C PROGRAM COMPRE, P441, DOI 10.1145/3387904.3389296
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   Lianping Chen, 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P195, DOI 10.1109/WICSA.2014.45
   Lu Y, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1918
   Moser R, 2006, LECT NOTES COMPUT SC, V4039, P287
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Negara Stas, 2012, USING CONTINUOUS COD USING CONTINUOUS COD
   Palomba F, 2018, IEEE T SOFTWARE ENG, V44, P977, DOI 10.1109/TSE.2017.2752171
   Pantiuchina J, 2018, INT C PROGRAM COMPRE, P312, DOI 10.1145/3196321.3196365
   Rahman A, 2018, PROCEEDINGS OF THE 4TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN'18), P8, DOI 10.1145/3278142.3278149
   Saidani Islem, 2020, REPLICATION PACKAGE
   Schelle Graham, 2016, 2016 International Conference on Reconfigurable Computing and FPGAs (ReConFig), DOI 10.1109/ReConFig.2016.7857138
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Silva D, 2017, IEEE WORK CONF MIN S, P269, DOI 10.1109/MSR.2017.14
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Stamelos I.G., 2007, AGILE SOFTWARE DEV Q
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Steinmacher I, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P25, DOI 10.1109/CHASE.2013.6614728
   Szoke G, 2014, IEEE INT WORK C SO, P95, DOI 10.1109/SCAM.2014.18
   Tan Liang, SURVEY REFACTORING D
   Tsantalis N., 2013, C CTR ADV STUD COLL, P132, DOI [10.5555/2555523.2555539, DOI 10.5555/2555523.2555539]
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Ujihara N, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P482, DOI 10.1109/SANER.2017.7884658
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Vassallo C, 2019, SCI COMPUT PROGRAM, V180, P1, DOI 10.1016/j.scico.2019.05.002
   Vassallo C, 2018, IEEE INT CONF AUTOM, P790, DOI 10.1145/3238147.3240729
   Vassallo C, 2018, PROC IEEE INT CONF S, P564, DOI 10.1109/ICSME.2018.00068
   Vassallo C, 2017, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2017.67
   Wang Y, 2009, PROC IEEE INT CONF S, P413, DOI 10.1109/ICSM.2009.5306290
   Wedyan F, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P141, DOI 10.1109/ICST.2009.21
   Widder DG, 2018, IEEE WORK CONF MIN S, P165, DOI 10.1145/3196398.3196422
   Wyrich M, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P24, DOI 10.1109/BotSE.2019.00015
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
   Yu Y, 2016, SCI CHINA INFORM SCI, V59, DOI 10.1007/s11432-016-5595-8
   Yu Yue, 2016, ARXIV PREPRINT ARXIV
   Zampetti F, 2020, EMPIR SOFTW ENG, V25, P1095, DOI 10.1007/s10664-019-09785-8
   Zhang C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P176, DOI 10.1145/3338906.3338917
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
NR 59
TC 9
Z9 17
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2021
VL 138
AR 106618
DI 10.1016/j.infsof.2021.106618
EA MAY 2021
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TI1GV
UT WOS:000672531500003
DA 2024-07-18
ER

PT J
AU Nong, Y
   Cai, HP
   Ye, PF
   Li, L
   Chen, F
AF Nong, Yu
   Cai, Haipeng
   Ye, Pengfei
   Li, Li
   Chen, Feng
TI Evaluating and comparing memory error vulnerability detectors
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Memory error vulnerability; Vulnerability detection; Open-source tools;
   Code analysis; Empirical evaluation; Comparative study; Benchmark
   selection
ID CHECKING
AB Context: Memory error vulnerabilities have been consequential and several well-known, open-source memory error vulnerability detectors exist, built on static and/or dynamic code analysis. Yet there is a lack of assessment of such detectors based on rigorous, quantitative accuracy and efficiency measures while not being limited to specific application domains.
   Objective: Our study aims to assess and explain the strengths and weaknesses of state-of-the-art memory error vulnerability detectors based on static and/or dynamic code analysis, so as to inform tool selection by practitioners and future design of better detectors by researchers and tool developers.
   Method: We empirically evaluated and compared five state-of-the-art memory error vulnerability detectors against two benchmark datasets of 520 and 474 C/C++ programs, respectively. We conducted case studies to gain in-depth explanations of successes and failures of individual tools.
   Results: While generally fast, these detectors had largely varied accuracy across different vulnerability categories and moderate overall accuracy. Complex code (e.g., deep loops and recursions) and data (e.g., deeply embedded linked lists) structures appeared to be common, major barriers. Hybrid analysis did not always outperform purely static or dynamic analysis for memory error vulnerability detection. Yet the evaluation results were noticeably different between the two datasets used. Our case studies further explained the performance variations among these detectors and enabled additional actionable insights and recommendations for improvements.
   Conclusion: There was no single most effective tool among the five studied. For future research, integrating different techniques is a promising direction, yet simply combining different classes of code analysis (e.g., static and dynamic) may not. For practitioners to choose right tools, making various tradeoffs (e.g., between precision and recall) might be inevitable.
C1 [Nong, Yu; Cai, Haipeng; Ye, Pengfei] Washington State Univ, Sch Elect Engn & Comp Sci, Pullman, WA 99164 USA.
   [Li, Li] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
   [Chen, Feng] Univ Texas Dallas, Dept Comp Sci, Dallas, TX 75080 USA.
C3 Washington State University; Monash University; University of Texas
   System; University of Texas Dallas
RP Cai, HP (corresponding author), Washington State Univ, Sch Elect Engn & Comp Sci, Pullman, WA 99164 USA.
EM yu.nong@wsu.edu; haipeng.cai@wsu.edu; pengfei.ye@wsu.edu;
   Li.Li@monash.edu; Feng.Chen@utdallas.edu
RI Li, Li/AAR-3316-2020; Nong, Yu/AEU-7962-2022; Cai, Haipeng/K-7802-2015
OI Cai, Haipeng/0000-0002-5224-9970; Li, Li/0000-0003-2990-1614
FU Army Research Office, United States of America [W911NF-21-1-0027]
FX We thank the anonymous reviewers for their constructive comments. This
   research was sponsored by the Army Research Office, United States of
   America and was accomplished under Grant Number W911NF-21-1-0027. The
   views and conclusions contained in this document are those of the
   authors and should not be interpreted as representing the official
   policies, either expressed or implied, of the Army Research Office or
   the U.S. Government. The U.S. Government is authorized to reproduce and
   distribute reprints for Government purposes notwithstanding any
   copyright notation herein.
CR Amankwah R., 2017, Int. J. Comput. Appl., V169, P22, DOI [10.5120/ijca2017914750, DOI 10.5120/IJCA2017914750]
   [Anonymous], 2005, P 12 NETW DISTR SYST
   Antunes Nuno, 2010, 2010 IEEE International Conference on Web Services (ICWS), P203, DOI 10.1109/ICWS.2010.76
   Antunes N, 2015, I C DEPEND SYS NETWO, P505, DOI 10.1109/DSN.2015.30
   Antunes N, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING, P260, DOI 10.1109/SCC.2009.23
   Antunes N, 2009, IEEE 15TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P301, DOI 10.1109/PRDC.2009.54
   Austin A, 2013, INFORM SOFTWARE TECH, V55, P1279, DOI 10.1016/j.infsof.2012.11.007
   Austin A, 2011, INT SYMP EMP SOFTWAR, P97, DOI 10.1109/ESEM.2011.18
   Beyer D, 2012, LECT NOTES COMPUT SC, V7214, P504, DOI 10.1007/978-3-642-28756-5_38
   Bruening D, 2011, PROCEED CGO, P213, DOI 10.1109/CGO.2011.5764689
   Cai HP, 2018, IEEE WORK CONF MIN S, P265, DOI 10.1145/3196398.3196433
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Fonseca J, 2007, 13TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P365, DOI 10.1109/PRDC.2007.55
   Fu XQ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1115, DOI 10.1145/3338906.3341179
   Ghaffarian SM, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092566
   Gong J, 2016, 2016 IEEE FIRST INTERNATIONAL CONFERENCE ON DATA SCIENCE IN CYBERSPACE (DSC 2016), P642, DOI 10.1109/DSC.2016.33
   Henning J. L., 2006, SIGARCH COMPUT ARCHI, V34, P1, DOI [DOI 10.1145/1186736.1186737, 10.1145/1186736.1186737]
   Kals S., 2006, P 15 INT C WORLD WID, P247, DOI [DOI 10.1145/1135777.1135817, 10.1145/1135777.1135817]
   Kroening Daniel, 2014, TOOLS ALGORITHMS CON, P389, DOI [10.1007/978-3-642-54862-8_26, DOI 10.1007/978-3-642-54862-8_26]
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Li G., 2010, Proceedings of the eighteenth ACM SIGSOFT international symposium on Founda- tions of software engineering, FSE '10, P187
   Li W, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1621, DOI 10.1145/3368089.3417923
   Milicevic A, 2011, LECT NOTES COMPUT SC, V6617, P282, DOI 10.1007/978-3-642-20398-5_21
   Nethercote N, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P89, DOI 10.1145/1250734.1250746
   Nethercote N, 2007, VEE'07: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON VIRTUAL EXECUTION ENVIRONMENTS, P65
   Nicolau A., 1985, LOOP QUANTIZATION UN
   Nong Y, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P557, DOI [10.1109/saner48275.2020.9054851, 10.1109/SANER48275.2020.9054851]
   Petukhov A., 2008, Detecting security vulnerabilities in web applications using dynamic analysis with penetration testing, P1
   Pozza D, 2006, 2006 1ST INTERNATIONAL CONFERENCE ON COMMUNICATION SYSTEMS SOFTWARE & MIDDLEWARE, VOLS 1 AND 2, P527
   Rasool A., 2019, WHICH IS MOST VULNER
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Serebryany Konstantin, 2012, USENIX, P309
   Seward J, 2005, USENIX Association Proceedings of the General Track: 2005 UNENIX Annual Technical Conference, P17
   Shen HL, 2010, IEEE IMAGE PROC, P521, DOI 10.1109/ICIP.2010.5652058
   Shiraishi S, 2015, 2015 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P12, DOI 10.1109/ISSREW.2015.7392027
   Shirey RobertW., 2000, INTERNET SECURITY GL
   Silberman Peter, 2004, IDEFENSE
   Stepanov E, 2015, INT SYM CODE GENER, P46, DOI 10.1109/CGO.2015.7054186
   Vieira M, 2009, I C DEPEND SYS NETWO, P566, DOI 10.1109/DSN.2009.5270294
   Walpole RE., 2011, PROBABILITY STAT ENG, V9th
NR 42
TC 8
Z9 8
U1 3
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2021
VL 137
AR 106614
DI 10.1016/j.infsof.2021.106614
EA MAY 2021
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SQ8FQ
UT WOS:000660586400011
OA Bronze
DA 2024-07-18
ER

PT J
AU Santos, PS
   Barcellos, MP
   Falbo, RD
   Almeida, JPA
AF Santos Junior, Paulo Sergio
   Barcellos, Monalessa Perini
   Falbo, Ricardo de Almeida
   Almeida, Joao Paulo A.
TI From a Scrum Reference Ontology to the Integration of Applications for
   Data-Driven Software Development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Ontology; Scrum; Semantic Interoperability; Application Integration
ID INFORMATION-SYSTEMS; PRINCIPLES
AB Context: Organizations often use different applications to support the Scrum process, including project management tools, source repository and quality assessment tools. These applications store useful data for decisionmaking. However, data items often remain spread in different applications, each of which adopt different data and behavioral models, posing a barrier for integrated data usage. As a consequence, data-driven decisions in agile development are uncommon, missing valuable opportunities for informed decision making.
   Objective: Considering the need to address semantic issues to properly integrate applications that support the agile development process, we aim to provide a common and comprehensive conceptualization about Scrum in the software development context and apply this conceptualization to support application integration. Method: We have developed the Scrum Reference Ontology (SRO) and used it to semantically integrate Azure DevOps and Clockify.
   Results: SRO served as a reference model to build software artifacts in a semantic integration architecture that enables applications to automatically share, exchange and combine data and services. The integrated solution was used in the software development unit of a Brazilian government agency. Results demonstrate that the integrated solution contributed to improving estimates, provided data that helped allocate teams, manage team productivity and project performance, and enabled to identify and fix problems in the Scrum process execution.
   Conclusions: SRO can serve as an interlingua for application integration in the context of Scrum-process support. By capturing the conceptualization underlying Scrum, the reference ontology can address semantic conflicts and thereby support the development of integrated data-driven solutions for decision making.
C1 [Santos Junior, Paulo Sergio; Barcellos, Monalessa Perini; Falbo, Ricardo de Almeida; Almeida, Joao Paulo A.] Univ Fed Espirito Santo, Dept Comp Sci, Ontol & Conceptual Modeling Res Grp NEMO, Vitoria, ES, Brazil.
   [Santos Junior, Paulo Sergio] Fed Inst Espirito Santo, Dept Informat, Serra, ES, Brazil.
C3 Universidade Federal do Espirito Santo; Instituto Federal do Espirito
   Santo (IFES)
RP Almeida, JPA (corresponding author), Univ Fed Espirito Santo, Dept Comp Sci, Ontol & Conceptual Modeling Res Grp NEMO, Vitoria, ES, Brazil.
EM paulo.junior@ifes.edu.br; monalessa@inf.ufes.edu.br; falbo@inf.ufes.br;
   jpalmeida@ieee.org
RI Barcellos, Monalessa/JFJ-4331-2023
OI Barcellos, Monalessa/0000-0002-6225-9478; Santos Junior, Paulo
   Sergio/0000-0003-4354-9418
FU CNPq [313687/2020-0, 312123/2017-5]; Fapes [180/2017]
FX This work is partly funded by CNPq (grants number 313687/2020-0 and
   312123/2017-5) and Fapes (grant number 180/2017).
CR [Anonymous], 2005, Ontological foundations for structural conceptual models
   [Anonymous], 2005, P C DAT MIN DAT WAR
   Ayed H, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P66, DOI 10.1109/QUATIC.2012.11
   Bastos EC, 2018, J DATA SEMANT, V7, P107, DOI 10.1007/s13740-018-0089-z
   Bosch J., 2014, CONTINUOUS SOFTWARE, P3
   Brynjolfsson E., 2011, Strength in numbers: how does data-driven decisionmaking affect firm performance?, DOI [DOI 10.2139/SSRN.1819486, 10.2139/ssrn.1819486., 10.2139/ssrn.1819486]
   Calhau RF, 2010, IEEE INT ENTERP DIST, P111, DOI 10.1109/EDOC.2010.32
   Carraretto R, 2012, THESIS FEDERAL U ESP
   Chatley R, 2019, 2019 IEEE/ACM JOINT 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING AND 1ST INTERNATIONAL WORKSHOP ON DATA-DRIVEN DECISIONS, EXPERIMENTATION AND EVOLUTION (RCOSE-DDREE 2019), P8, DOI 10.1109/RCoSE/DDrEE.2019.00009
   Cohn Mike., 2010, SUCCEEDING AGILE SOF
   Cossentino M, 2007, LECT NOTES ARTIF INT, V4659, P237
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   Damiani E., 2007, METAMODEL MODELING M, DOI [10.1007/978-3-540-73101-6_11, DOI 10.1007/978-3-540-73101-6_11]
   de Almeida Falbo Ricardo, 2014, P ONTO COM ODISE
   Destefanis G, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.73
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Fonseca VS, 2017, SCI COMPUT PROGRAM, V135, P20, DOI 10.1016/j.scico.2016.10.004
   Gomez-Perez A., 2012, INTRO ONTOLOGY ENG N, P1, DOI [10.1007/978-3-642- 24794-1, DOI 10.1007/978-3-642-24794-1, 10.1007/978-3-642-24794-1]
   Guizzardi G, 2007, FR ART INT, V155, P18
   HARMSEN F, 1994, IFIP TRANS A, V55, P169
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hevner R., 2007, Scandinavian Journal of Information Systems, V19, P4
   Izza S, 2009, ENTERP INF SYST-UK, V3, P1, DOI 10.1080/17517570802521163
   Johanssen JO, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2169
   Julian B, 2019, LECT NOTES BUS INF P, V355, P3, DOI 10.1007/978-3-030-19034-7_1
   Kenneth R., 2012, ESSENTIAL SCRUM PRAC, V27, P427
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kiv S, 2019, LECT NOTES BUS INF P, V355, P19, DOI 10.1007/978-3-030-19034-7_2
   Kleebaum A, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P23, DOI 10.1145/3194760.3194765
   Lin YS, 2012, LECT NOTES BUS INF P, V116, P189
   Malik H, 2008, PROC IEEE INT CONF S, P177, DOI 10.1109/ICSM.2008.4658066
   Mattila AL, 2017, LECT NOTES BUS INF P, V283, P259, DOI 10.1007/978-3-319-57633-6_18
   Nardi JC, 2013, COLLABORATIVE TRUSTE, P238
   Olsson HH, 2012, EUROMICRO CONF PROC, P392, DOI 10.1109/SEAA.2012.54
   Parsons D., 2010, P 9 INT C APPL PRINC, P5, DOI [10.13140/2.1.3298.6883, DOI 10.13140/2.1.3298.6883]
   Pokraev S.V., 2009, THESIS U TWENTE NED
   Renault LDC, 2015, PROCEEDINGS OF THE 17TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY (SBQS), P220, DOI 10.1145/3275245.3275269
   Rising L, 2000, IEEE SOFTWARE, V17, P26, DOI 10.1109/52.854065
   Ruy F., 2017, P 16 BRAZ S SOFTW QU, P296
   Ruy FB, 2016, LECT NOTES COMPUT SC, V10024, P527, DOI 10.1007/978-3-319-49004-5_34
   Satpathy T., 2013, A Guide to the Scrum Body of Knowledge (SBOK Guide)
   Scherp A, 2011, APPL ONTOL, V6, P177, DOI 10.3233/AO-2011-0096
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Studer R, 1998, DATA KNOWL ENG, V25, P161, DOI 10.1016/S0169-023X(97)00056-6
   Sutherland K., 2020, SCRUM GUIDE THE DEFI
   Svensson RB, 2019, LECT NOTES BUS INF P, V355, P69, DOI 10.1007/978-3-030-19034-7_5
   Themistocleous M, 2004, EUR J OPER RES, V159, P393, DOI 10.1016/j.ejor.2003.08.023
   Vernadat FB, 2007, ANNU REV CONTROL, V31, P137, DOI 10.1016/j.arcontrol.2007.03.004
   Wache H., 2002, INT J ARTIF INTELL
   Wegner P, 1996, ACM COMPUT SURV, V28, P285, DOI 10.1145/234313.234424
NR 51
TC 4
Z9 4
U1 6
U2 24
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2021
VL 136
AR 106570
DI 10.1016/j.infsof.2021.106570
EA APR 2021
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SJ2MZ
UT WOS:000655363900010
DA 2024-07-18
ER

PT J
AU Rabin, MRI
   Bui, NDQ
   Wang, K
   Yu, YJ
   Jiang, LX
   Alipour, MA
AF Rabin, Md Rafiqul Islam
   Bui, Nghi D. Q.
   Wang, Ke
   Yu, Yijun
   Jiang, Lingxiao
   Alipour, Mohammad Amin
TI On the generalizability of Neural Program Models with respect to
   semantic-preserving program transformations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Neural models; Code representation; Model evaluation; Program
   transformation; Generalizability
ID NETWORKS
AB Context: With the prevalence of publicly available source code repositories to train deep neural network models, neural program models can do well in source code analysis tasks such as predicting method names in given programs that cannot be easily done by traditional program analysis techniques. Although such neural program models have been tested on various existing datasets, the extent to which they generalize to unforeseen source code is largely unknown.
   Objective: Since it is very challenging to test neural program models on all unforeseen programs, in this paper, we propose to evaluate the generalizability of neural program models with respect to semantic-preserving transformations: a generalizable neural program model should perform equally well on programs that are of the same semantics but of different lexical appearances and syntactical structures.
   Method: We compare the results of various neural program models for the method name prediction task on programs before and after automated semantic-preserving transformations. We use three Java datasets of different sizes and three state-of-the-art neural network models for code, namely code2vec, code2seq, and GGNN, to build nine such neural program models for evaluation.
   Results: Our results show that even with small semantically preserving changes to the programs, these neural program models often fail to generalize their performance. Our results also suggest that neural program models based on data and control dependencies in programs generalize better than neural program models based only on abstract syntax trees (ASTs). On the positive side, we observe that as the size of the training dataset grows and diversifies the generalizability of correct predictions produced by the neural program models can be improved too.
   Conclusion: Our results on the generalizability of neural program models provide insights to measure their limitations and provide a stepping stone for their improvement.
C1 [Rabin, Md Rafiqul Islam; Alipour, Mohammad Amin] Univ Houston, Houston, TX 77004 USA.
   [Wang, Ke] Visa Res, Foster City, CA USA.
   [Bui, Nghi D. Q.; Jiang, Lingxiao] Singapore Management Univ, Singapore, Singapore.
   [Yu, Yijun] Open Univ, Milton Keynes, Bucks, England.
C3 University of Houston System; University of Houston; Singapore
   Management University; Open University - UK
RP Rabin, MRI (corresponding author), Univ Houston, Houston, TX 77004 USA.
EM mrabin@uh.edu
RI Rabin, Md Rafiqul Islam/C-7862-2019; Jiang, Lingxiao/E-8553-2012;
   Alipour, Mohammad Amin/V-2011-2018
OI Rabin, Md Rafiqul Islam/0000-0001-5575-0528; Jiang,
   Lingxiao/0000-0002-4336-8548; Alipour, Mohammad
   Amin/0000-0002-6479-7202; Wang, Ke/0000-0003-0844-5023; Yu,
   Yijun/0000-0002-7154-8570
CR Allamams M, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P143, DOI 10.1145/3359591.3359735
   Allamanis M., 2018, INT C LEARN REPR ICL
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alon Uri, 2019, INT C LEARN REPR
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   [Anonymous], 2018, P 35 INT C MACH LEAR
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Beck D, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P273
   Bielik P., 2020, P INT C MACH LEARN
   Brockschmidt Marc, 2018, ICLR
   Bui NDQ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P38, DOI 10.1109/ASE.2019.00014
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Chen Z, 2020, IEEE WINT CONF APPL, P1169, DOI 10.1109/WACV45572.2020.9093418
   Compton R., 2020, 17 INT C MIN SOFTW R
   Dinella E., 2019, INT C LEARN REPR
   Dong YP, 2018, PROC CVPR IEEE, P9185, DOI 10.1109/CVPR.2018.00957
   Fernandes P, 2019, ICLR
   Gehr T, 2018, P IEEE S SECUR PRIV, P3, DOI 10.1109/SP.2018.00058
   Goodfellow I. J., 2015, 3 INT C LEARNING REP
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Hellendoorn VJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P152, DOI 10.1145/3236024.3236051
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   HORNIK K, 1989, NEURAL NETWORKS, V2, P359, DOI 10.1016/0893-6080(89)90020-8
   Huang XW, 2017, LECT NOTES COMPUT SC, V10426, P3, DOI 10.1007/978-3-319-63387-9_1
   Jia R., 2017, P 2017 C EMP METH NA, P2021, DOI [10.18653/v1/D17-1215, DOI 10.18653/V1/D17-1215, DOI 10.18653/V1/D17-1215.URL]
   Kang HJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1, DOI 10.1109/ASE.2019.00011
   Karampatsis R., 2019, ARXIV PREPRINT ARXIV
   Kurakin Alexey, 2017, INT C LEARN REPR
   Lai SW, 2015, AAAI CONF ARTIF INTE, P2267
   Li J., 2016, ARXIV161208220
   Li Y., 2016, ICLR, P1, DOI DOI 10.48550/ARXIV.1511.05493
   Liu K, 2019, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2019.00019
   Maddison CJ, 2014, PR MACH LEARN RES, V32, P649
   Moosavi-Dezfooli SM, 2016, PROC CVPR IEEE, P2574, DOI 10.1109/CVPR.2016.282
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Pan HX, 2018, 2018 10TH INTERNATIONAL CONFERENCE ON ADVANCED INFOCOMM TECHNOLOGY (ICAIT), P189, DOI 10.1109/ICAIT.2018.8686689
   Pu YW, 2016, COMPANION PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SYSTEMS, PROGRAMMING, LANGUAGES AND APPLICATIONS: SOFTWARE FOR HUMANITY (SPLASH COMPANION'16), P39, DOI 10.1145/2984043.2989222
   Rabin Md Rafiqul Islam, 2020, RL+SE&PL 2020: Proceedings of the 1st ACM SIGSOFT International Workshop on Representation Learning for Software Engineering and Program Languages, P29, DOI 10.1145/3416506.3423580
   Rabin Md Rafiqul Islam, 2019, 34 IEEE ACM INT C AU
   Ramakrishnan G., 2020, ARXIV200203043
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Sarikaya R, 2014, IEEE-ACM T AUDIO SPE, V22, P778, DOI 10.1109/TASLP.2014.2303296
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Scheibler K., 2015, MBMV, P30
   Sundararajan M, 2017, PR MACH LEARN RES, V70
   Szegedy C, 2014, Arxiv, DOI [arXiv:1312.6199, DOI 10.1109/CVPR.2015.7298594]
   Tarlow D., 2020, P IEEEACM 42 INT C S, P19, DOI 10.1145/3387940.3392181
   Velickovic Petar, 2018, INT C LEARN REPR
   Wang K., 2019, ARXIV PREPRINT ARXIV
   Wang K., 2018, INT C LEARNING REPRE
   Wang K., 2019, ARXIV190505251
   Wang K, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P121, DOI 10.1145/3385412.3385999
   Wang Y., 2019, ARXIV190705579
   Xu Kun, 2018, ARXIV180400823
   Yefet N, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428230
   Yu XY, 2019, IEEE T NEUR NET LEAR, V30, P2805, DOI 10.1109/TNNLS.2018.2886017
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang SS, 2020, CHIN CONT DECIS CONF, P3957, DOI 10.1109/CCDC49329.2020.9163940
   Zhang X., 2020, Adv. Neural Inf. Process. Syst., V33
   Zhao ZF, 2018, ACSR ADV COMPUT, V78, P1
   Zügner D, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P6246, DOI 10.1145/3219819.3220078
NR 64
TC 26
Z9 27
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2021
VL 135
AR 106552
DI 10.1016/j.infsof.2021.106552
EA FEB 2021
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RQ5WO
UT WOS:000642489200003
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Käppel, M
   Schönig, S
   Jablonski, S
AF Kaeppel, Martin
   Schoenig, Stefan
   Jablonski, Stefan
TI Leveraging Small Sample Learning for Business Process Management
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Small Sample Learning; BPM; Process Prediction; Machine Learning;
   Process Mining
AB Context: Tool support for business process management (BPM) is improving more and more. Often, machine learning techniques are used to recognize certain execution patterns, to optimize workflows and to observe or predict processes. Frequently, many organisations cannot meet the fundamental prerequisites of machine learning methods since less data is recorded and therefore available for analysis. Most machine learning techniques rely on big and sufficient data source sets that can be analyzed. Small Sample Learning (SSL) tackles the issue of implementing machine learning methods in environments where only quantitatively insufficient datasets are available. These methods are strongly tailored to computer vision or natural language processing problems, which is why they are still neglected in the BPM area.
   Objective: This paper motivates the use of SSL methods in the BPM area and fosters a research stream that is concerned with the transferability to and the application of these methods in the BPM area.
   Method: We propose a concept for leveraging SSL methods in BPM and illustrate the idea exemplarly in the field of process mining.
   Results: Reasons for the need of SSL methods in the BPM area and a conceptual approach for transferring existing SSL methods to the BPM area. The feasibility of our apprach is shown by a brief overview of a primary study leveraging SSL methods for process prediction. Conclusions: Many areas of process mining or BPM in general depend on a sufficient amount of (training) data. Often small and medium sized companies lack "big data", which is why advantages of machine learning and data analysis in the context of BPM cannot be applied. Existing methods that deal with insufficient data are very domain-specific and must be transferred to the process mining area respectively the BPM area.
C1 [Kaeppel, Martin; Jablonski, Stefan] Univ Bayreuth, Bayreuth, Germany.
   [Schoenig, Stefan] Univ Regensburg, Regensburg, Germany.
C3 University of Bayreuth; University of Regensburg
RP Käppel, M (corresponding author), Univ Bayreuth, Bayreuth, Germany.
EM martin.kaeppel@uni-bayreuth.de; stefan.schoenig@ur.de;
   stefan.jablonski@uni-bayreuth.de
CR [Anonymous], BUSINESS PROCESS MAN
   [Anonymous], 2021, INFORM SOFTWARE TECH, V132
   [Anonymous], 2018, P 13 INT C EV NOV AP, P314, DOI [10.5220/0006772003140319, DOI 10.5220/0006772003140319]
   Dumas M., 2018, FUNDAMENTALS BUSINES, DOI DOI 10.1007/978-3-642-33143-5.PDF
   Lampert CH, 2014, IEEE T PATTERN ANAL, V36, P453, DOI 10.1109/TPAMI.2013.140
   Meng D., 2018, CORRABS180804572
   Shorten C, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0197-0
   Teinemaa I, 2019, ACM T KNOWL DISCOV D, V13, DOI 10.1145/3301300
   van der Aalst WMP, 2016, PROCESS MINING DATA, V2nd, DOI DOI 10.1007/978-3-662-49851-4
   van Zelst SJ, 2018, KNOWL INF SYST, V54, P407, DOI 10.1007/s10115-017-1060-2
NR 10
TC 3
Z9 3
U1 1
U2 27
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2021
VL 132
AR 106472
DI 10.1016/j.infsof.2020.106472
EA JAN 2021
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LA
UT WOS:000614249900006
DA 2024-07-18
ER

PT J
AU Zhao, XY
   Salako, KZ
   Strigini, L
   Robu, V
   Flynn, D
AF Zhao, Xingyu
   Salako, Kizito
   Strigini, Lorenzo
   Robu, Valentin
   Flynn, David
TI Assessing safety-critical systems from operational testing: A study on
   autonomous vehicles
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Autonomous systems; Safety assurance; Statistical testing;
   Safety-critical systems; Ultra-high reliability; Conservative Bayesian
   inference; AI safety; Proven in use; Globally at least equivalent;
   Software reliability growth models
ID ONE CHANNEL; RELIABILITY; PROBABILITY; FAILURE; DEMAND
AB Context: Demonstrating high reliability and safety for safety-critical systems (SCSs) remains a hard problem. Diverse evidence needs to be combined in a rigorous way: in particular, results of operational testing with other evidence from design and verification. Growing use of machine learning in SCSs, by precluding most established methods for gaining assurance, makes evidence from operational testing even more important for supporting safety and reliability claims.
   Objective: We revisit the problem of using operational testing to demonstrate high reliability. We use Autonomous Vehicles (AVs) as a current example. AVs are making their debut on public roads: methods for assessing whether an AV is safe enough are urgently needed. We demonstrate how to answer 5 questions that would arise in assessing an AV type, starting with those proposed by a highly-cited study.
   Method: We apply new theorems extending our Conservative Bayesian Inference (CBI) approach, which exploit the rigour of Bayesian methods while reducing the risk of involuntary misuse associated (we argue) with now-common applications of Bayesian inference; we define additional conditions needed for applying these methods to AVs.
   Results: Prior knowledge can bring substantial advantages if the AV design allows strong expectations of safety before road testing. We also show how naive attempts at conservative assessment may lead to over-optimism instead; why extrapolating the trend of disengagements (take-overs by human drivers) is not suitable for safety claims; use of knowledge that an AV has moved to a "less stressful" environment.
   Conclusion: While some reliability targets will remain too high to be practically verifiable, our CBI approach removes a major source of doubt: it allows use of prior knowledge without inducing dangerously optimistic biases. For certain ranges of required reliability and prior beliefs, CBI thus supports feasible, sound arguments. Useful conservative claims can be derived from limited prior knowledge.
C1 [Zhao, Xingyu; Robu, Valentin; Flynn, David] Heriot Watt Univ, Sch Engn & Phys Sci, Smart Syst Grp, Edinburgh EH14 4AS, Scotland.
   [Salako, Kizito; Strigini, Lorenzo] Univ London, Ctr Software Reliabil, Sch Math Comp Sci & Engn, London EC1V 0HB, England.
C3 Heriot Watt University; City University London; University of London
RP Zhao, XY (corresponding author), Heriot Watt Univ, Sch Engn & Phys Sci, Smart Syst Grp, Edinburgh EH14 4AS, Scotland.
EM xingyu.zhao@hw.ac.uk; k.o.salako@city.ac.uk; l.strigini@city.ac.uk;
   v.robu@hw.ac.uk; d.flynn@hw.ac.uk
RI Zhao, Xingyu/HZI-1451-2023; Flynn, David B/A-9783-2013; Robu,
   Valentin/AAS-6994-2020; ZHAO, Xingyu/JNR-1669-2023; Zhao,
   Xingyu/AAG-9306-2021
OI Zhao, Xingyu/0000-0002-3474-349X; Robu, Valentin/0000-0002-9280-2072;
   Zhao, Xingyu/0000-0002-3474-349X; Flynn, David/0000-0002-1024-3618
FU Intel Collaborative Research Institute on Safe Automated Vehicles
   (ICRI-SAVe); UK EPSRC through the Offshore Robotics for Certification of
   Assets (ORCA) [EP/R026173/1]; ORCA's Partnership Resource Fund through
   Continual Verification and Assurance of Robotic Systems under
   Uncertainty (COVE); ISCF [EP/R026173/1] Funding Source: UKRI
FX This work was supported in part by the Intel Collaborative Research
   Institute on Safe Automated Vehicles (ICRI-SAVe), by the UK EPSRC
   through the Offshore Robotics for Certification of Assets (ORCA)
   [EP/R026173/1], and ORCA's Partnership Resource Fund through Continual
   Verification and Assurance of Robotic Systems under Uncertainty (COVE).
   We thank Bev Littlewood for insightful comments on earlier versions of
   the paper; and the anonymous reviewers who gave very helpful comments
   for the final version of the paper.
CR Alves Erin., 2018, NASACR2018220080
   Anderson JD, 2016, ROUTLEDGE ENCYCLOPAEDIA OF EDUCATIONAL THINKERS, P443
   [Anonymous], 2003, NUREGCR6823 US NUCL
   Banerjee SS, 2018, I C DEPEND SYS NETWO, P586, DOI 10.1109/DSN.2018.00066
   Banks A., 2020, LNCS
   Berger JO, 2003, STAT SCI, V18, P1, DOI 10.1214/ss/1056397485
   Bertolino A., 1998, Software Testing, Verification and Reliability, V8, P155, DOI 10.1002/(SICI)1099-1689(1998090)8:3<155::AID-STVR163>3.0.CO;2-B
   Bishop P, 2017, RELIAB ENG SYST SAFE, V158, P246, DOI 10.1016/j.ress.2016.08.019
   Bishop P, 2011, IEEE T SOFTWARE ENG, V37, P708, DOI 10.1109/TSE.2010.67
   Bloomfield R, 2019, COMPUTER, V52, P82, DOI 10.1109/MC.2019.2914775
   BROCKLEHURST S, 1990, IEEE T SOFTWARE ENG, V16, P458, DOI 10.1109/32.54297
   BROCKLEHURST S, 1996, HDB SOFTWARE RELIABI, P119
   Burton S, 2020, ARTIF INTELL, V279, DOI 10.1016/j.artint.2019.103201
   BUTLER RW, 1993, IEEE T SOFTWARE ENG, V19, P3, DOI 10.1109/32.210303
   CENELEC, 2018, 501292018 CENELEC EN
   Cukic B, 2000, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P321, DOI 10.1109/HASE.2000.895477
   Dixit VV, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0168054
   Favarò F, 2018, ACCIDENT ANAL PREV, V110, P136, DOI 10.1016/j.aap.2017.11.001
   Favarò FM, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0184952
   Fisher M, 2018, IEEE INT SYMP SOFTW, P341, DOI [10.1109/1SSREW.2018.00028, 10.1109/ISSREW.2018.00028]
   Fisher M, 2013, COMMUN ACM, V56, P84, DOI [10.1145/2494558, 10.1145/2500468.2494558]
   Goseva-Popstojanova K, 2000, IEEE T RELIAB, V49, P37, DOI 10.1109/24.855535
   Huang XW, 2017, LECT NOTES COMPUT SC, V10426, P3, DOI 10.1007/978-3-319-63387-9_1
   IEC, 2010, Standard IEC 61508:2010
   Johnson Chris W., 2018, 26 SAFETY CRITICAL S, P15
   Kalra N, 2016, TRANSPORT RES A-POL, V94, P182, DOI 10.1016/j.tra.2016.09.010
   Koopman P., 2019, 27 SAFETY CRITICAL S
   Koopman P, 2017, IEEE INTEL TRANSP SY, V9, P90, DOI 10.1109/MITS.2016.2583491
   Koopman Philip, 2019, SAE Int. J. Adv. Current Pract. Mobil., V1, P512, DOI DOI 10.4271/2019-01-0123
   LITTLEWOOD B, 1993, COMMUN ACM, V36, P69, DOI 10.1145/163359.163373
   Littlewood B., 2011, SAF SYST NEWSLETTER, V20
   Littlewood B, 2020, RELIAB ENG SYST SAFE, V197, DOI 10.1016/j.ress.2019.106752
   Littlewood B, 2012, IEEE T SOFTWARE ENG, V38, P1178, DOI 10.1109/TSE.2011.80
   Liu P, 2019, RISK ANAL, V39, P315, DOI 10.1111/risa.13116
   Lv C, 2018, IEEE-CAA J AUTOMATIC, V5, P58, DOI 10.1109/JAS.2017.7510745
   MAY J, 1995, SOFTWARE ENG J, V10, P206, DOI 10.1049/sej.1995.0026
   MILLER DR, 1986, IEEE T SOFTWARE ENG, V12, P12, DOI 10.1109/TSE.1986.6312915
   Pathak S, 2018, APPL INTELL, V48, P886, DOI 10.1007/s10489-017-0999-8
   Popov P., 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P41, DOI 10.1109/ISSRE.2010.10
   Shashua A., 2017, PLAN DEV SAFE AUTONO
   Smidts C., 2002, P 27 ANN NASA GODD S, P82
   Sorkin R. D., 1985, HUMAN COMPUTER INTER, V1, P49, DOI [DOI 10.1207/S15327051HCI0101_2, 10.1207/s15327051hci01012, DOI 10.1207/S15327051HCI0101_]
   Strigini L., 1996, Software Testing, Verification and Reliability, V6, P33, DOI 10.1002/(SICI)1099-1689(199603)6:1<33::AID-STVR109>3.0.CO;2-G
   Strigini Lorenzo, 2013, Computer Safety, Reliability and Security. 32nd International Conference, SAFECOMP 2013. Proceedings: LNCS 8153, P106, DOI 10.1007/978-3-642-40793-2_10
   Strigini L, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P249, DOI 10.1109/DSN.2003.1209935
   Strigini L., 1997, PASCONWO6CCN2TN12 CI
   Strigini L, 2014, RELIAB ENG SYST SAFE, V128, P66, DOI 10.1016/j.ress.2014.02.004
   Syguda S., 2019, SAFETY 1 AUTOMATED D
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   TOMEK LA, 1993, IEEE T SOFTWARE ENG, V19, P1071, DOI 10.1109/32.256854
   Utkin L. V., 2018, J UNCERTAIN SYSTEMS, V12, P292
   Walter G, 2017, INT J APPROX REASON, V80, P67, DOI 10.1016/j.ijar.2016.08.005
   Waymo, 2018, TECHNICAL REPORT
   Zhao XY, 2019, PROC INT SYMP SOFTW, P13, DOI 10.1109/ISSRE.2019.00012
   Zhao XY, 2019, AAAI CONF ARTIF INTE, P8066
   Zhao XY, 2018, RELIAB ENG SYST SAFE, V175, P265, DOI 10.1016/j.ress.2018.03.032
   Zhao XY, 2017, RELIAB ENG SYST SAFE, V158, P230, DOI 10.1016/j.ress.2016.09.002
   Zhao XY, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P130, DOI 10.1109/ISSRE.2015.7381807
NR 58
TC 21
Z9 21
U1 3
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2020
VL 128
AR 106393
DI 10.1016/j.infsof.2020.106393
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NZ0FW
UT WOS:000576767100001
OA Green Accepted, Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Urbieta, M
   Antonelli, L
   Rossi, G
   Leite, JCSD
AF Urbieta, Matias
   Antonelli, Leandro
   Rossi, Gustavo
   Sampaio do Prado Leite, Julio Cesar
TI The impact of using a domain language for an agile requirements
   management
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Domain knowledge; Agile methods; User stories; Language extended lexicon
AB Context : The development of software systems is a complex activity because of its nature and the management of its construction. It is challenging to create and follow a plan. Moreover, budget overrun is a common consequence of this situation. Agile methods, like Scrum, help to mitigate this problem using incremental and iterative development. Agile methods jump start new developments, but it is difficult to be agile after several months when the software has to deal with many requirements that are scattered and tangled across several User Stories written in different Sprints. Objective : In this paper, we propose a traceability approach anchored on an index structure to access specific User Stories from a large set. Our proposed strategy has the goal to consolidate the information dispersed in different User Stories into a particular lexicon: The Language Extended Lexicon (LEL). Method : The proposed approach consists of a set of rules which extract the information dispersed in the User Stories and organize it in symbols of the Lexicon. Thus, the Lexicon supplies a consolidated and organized structure to mitigate the problem of tangled information that generates lack of traceability among different sprints. Results : We assessed how the Lexicon built by our approach improves everyday activities related to requirement management. The assessment is based on a quantitative evaluation with 36 subjects. Conclusion : The approach presents benefits for requirement tracing in agile methodologies supported by the preliminary results of the evaluation. We have developed an application (a prototype) that automates the LEL derivation rules from a set of User Stories.
C1 [Urbieta, Matias; Antonelli, Leandro; Rossi, Gustavo] UNLP, Fac Informat, Lifia, La Plata, Argentina.
   [Urbieta, Matias; Rossi, Gustavo] Consejo Nacl Invest Cient & Tecn, Bs As, Argentina.
   [Sampaio do Prado Leite, Julio Cesar] Pontificia Univ Catolica Rio de Janeiro, Dep Informat, Rio de Janeiro, RJ, Brazil.
C3 National University of La Plata; Consejo Nacional de Investigaciones
   Cientificas y Tecnicas (CONICET)
RP Urbieta, M (corresponding author), UNLP, Fac Informat, Lifia, La Plata, Argentina.; Urbieta, M (corresponding author), Consejo Nacl Invest Cient & Tecn, Bs As, Argentina.
EM murbieta@lifia.info.unlp.edu.ar; lanto@lifia.info.unlp.edu.ar;
   gustavo@lifia.info.unlp.edu.ar
OI Sampaio do Prado Leite, Julio Cesar/0000-0002-0355-0265
CR Alaa G, 2014, 2014 9th International Conference on Informatics and Systems (INFOS)
   Oliveira ADA, 2007, P INT C CHIL COMPUT, P40, DOI 10.1109/SCCC.2007.20
   [Anonymous], 2000, EXPT SOFTWARE ENG IN
   [Anonymous], 2005, PROBABILITY STAT ENG
   Arora C, 2017, IEEE T SOFTWARE ENG, V43, P918, DOI 10.1109/TSE.2016.2635134
   Barbosa R, 2016, I C DEPENDABLE SYST, P2, DOI [10.1109/DSN-W.2016.7, 10.1109/DSN-W.2016.27]
   Brooks Frederick P., 1995, The mythical man-month
   Chinosi M, 2012, COMPUT STAND INTER, V34, P124, DOI 10.1016/j.csi.2011.06.002
   Cleland-Huang J., 2012, Software and Systems Traceability, P265, DOI [DOI 10.1007/978144712239512, 10.1007/978-1-4471-2239-5, DOI 10.1007/978-1-4471-2239-5]
   Cohn M., 2008, USER STORY TEMPLATE
   Cysneiros L.M., 2001, P WORKSHOP ENGENHARI, P139
   Darimont R, 2017, INT REQUIR ENG CONF, P456, DOI 10.1109/RE.2017.44
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dimitrijevic S, 2015, INFORM SOFTWARE TECH, V57, P352, DOI 10.1016/j.infsof.2014.05.012
   Dwarakanath A, 2013, S VIS LANG HUM CEN C, P314, DOI 10.1109/RE.2013.6636736
   Franch X, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P943, DOI 10.1109/ICSE.2015.298
   Fu RR, 2017, I C COMM SOFTW NET, P1477, DOI 10.1109/ICCSN.2017.8230353
   Gemkow T, 2018, INT REQUIR ENG CONF, P412, DOI 10.1109/RE.2018.00052
   Juristo N., 2010, BASICS SOFTWARE ENG
   Kasauli R, 2017, INT REQUIR ENG CONF, P352, DOI 10.1109/RE.2017.60
   Kaur K, 2015, 1ST INTERNATIONAL CONFERENCE ON COMPUTING COMMUNICATION CONTROL AND AUTOMATION ICCUBEA 2015, P832, DOI 10.1109/ICCUBEA.2015.166
   Leite J., 1993, P IEEE INT S REQUIRE, P243, DOI [DOI 10.1109/ISRE.1993.324851, 10.1109/ISRE.1993.324851]
   Lous P, 2017, INT CONF GLOBAL SOFT, P1, DOI 10.1109/ICGSE.2017.13
   Lucassen G, 2016, REQUIR ENG, V21, P383, DOI 10.1007/s00766-016-0250-x
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Mäder P, 2013, IEEE SOFTWARE, V30, P58, DOI 10.1109/MS.2013.60
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Mavin A, 2012, IEEE SOFTWARE, V29, P17, DOI 10.1109/MS.2012.36
   Neumann P.G., RISKS DIGEST FORUM R
   Niazi Mahmood, 2013, 2013 Science and Information Conference (SAI), P202
   Patton J., 2014, USER STORY MAPPING D
   Schön EM, 2017, LECT NOTES BUS INF P, V283, P37, DOI 10.1007/978-3-319-57633-6_3
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sim S.E., 2013, MANAGING REQUIREMENT, P199, DOI [10.1007/978-3-642-34419-0_9., DOI 10.1007/978-3-642-34419-0_9]
   Soares HF, 2015, 2015 12TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY - NEW GENERATIONS, P385, DOI 10.1109/ITNG.2015.68
   Trkman M, 2016, INFORM SOFTWARE TECH, V71, P58, DOI 10.1016/j.infsof.2015.10.006
   Wood L. E., 1997, Interactions, V4, P48, DOI 10.1145/245129.245134
   Wysocki R.K., 2013, Effective project management: Traditional, Agile, Extreme, V7th
NR 39
TC 6
Z9 6
U1 2
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2020
VL 127
AR 106375
DI 10.1016/j.infsof.2020.106375
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NR0EE
UT WOS:000571236700014
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Lima, JAP
   Vergilio, SR
AF Prado Lima, Jackson A.
   Vergilio, Silvia R.
TI Test Case Prioritization in Continuous Integration environments: A
   systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software testing; Continuous Integration; Test Case Prioritization
ID REGRESSION TEST PRIORITIZATION; SELECTION; DELIVERY; SEARCH; WELL
AB Context Continuous Integration (CI) environments allow frequent integration of software changes, making software evolution more rapid and cost-effective. In such environments, the regression test plays an important role, as well as the use of Test Case Prioritization (TCP) techniques. Such techniques attempt to identify the test case order that maximizes certain goals, such as early fault detection. This research subject has been raising interest because some new challenges are faced in the CI context, as TCP techniques need to consider time constraints of the CI environments.
   Objective: This work presents the results of a systematic mapping study on Test Case Prioritization in Continuous Integration environments (TCPCI) that reports the main characteristics of TCPCI approaches and their evaluation aspects.
   Method: The mapping was conducted following a plan that includes the definition of research questions, selection criteria and search string, and the selection of search engines. The search returned 35 primary studies classified based on the goal and kind of used TCP technique, addressed CI particularities and testing problems, and adopted evaluation measures.
   Results: The results show a growing interest in this research subject. Most studies have been published in the last four years. 80% of the approaches are history-based, that is, are based on the failure and test execution history. The great majority of studies report evaluation results by comparing prioritization techniques. The preferred measures are Time and number/percentage of Faults Detected. Few studies address CI testing problems and characteristics, such as parallel execution and test case volatility.
   Conclusions: We observed a growing number of studies in the field. Future work should explore other information sources such as models and requirements, as well as CI particularities and testing problems, such as test case volatility, time constraint, and flaky tests, to solve existing challenges and offer cost-effective approaches to the software industry.
C1 [Prado Lima, Jackson A.; Vergilio, Silvia R.] Fed Univ Parana UFPR, Dept Informat, CP 19081, BR-81531980 Curitiba, Parana, Brazil.
C3 Universidade Federal do Parana
RP Lima, JAP (corresponding author), Fed Univ Parana UFPR, Dept Informat, CP 19081, BR-81531980 Curitiba, Parana, Brazil.
EM japlima@inf.ufpr.br; silvia@inf.ufpr.br
RI Prado Lima, Jackson/L-8938-2016; Lima, Jackson A. Prado/AAE-8146-2020
OI Prado Lima, Jackson/0000-0003-4993-777X; Lima, Jackson A.
   Prado/0000-0003-4993-777X
FU CAPES; CNPq [305968/2018-1]
FX This work is supported by the Brazilian agencies CAPES and CNPq. (Grant:
   305968/2018-1).
CR Abdullah A, 2018, 2018 25TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC), P91, DOI 10.1109/ASWEC.2018.00020
   Alégroth E, 2018, IEEE INT CONF SOFTW, P172, DOI 10.1109/ICST.2018.00026
   Ali S, 2020, SOFTWARE QUAL J, V28, P397, DOI 10.1007/s11219-019-09463-4
   [Anonymous], 2008, ISSTA
   Beller M., 2017, P 14 WORKING C MININ
   Bo Jiang, 2016, 2016 IEEE International Conference on Software Quality, Reliability and Security (QRS). Proceedings, P439, DOI 10.1109/QRS.2016.66
   Bo Jiang, 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P21, DOI 10.1109/QSIC.2011.37
   Bo Jiang, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P377, DOI 10.1109/QSIC.2010.64
   Busjaeger B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P975, DOI 10.1145/2950290.2983954
   Catal C, 2013, SOFTWARE QUAL J, V21, P445, DOI 10.1007/s11219-012-9181-z
   Chen JJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P656, DOI 10.1145/3236024.3236053
   Cho Y, 2016, ASIA PAC SOFWR ENG, P385, DOI [10.1109/APSEC.2016.066, 10.1109/APSEC.2016.24]
   Eck A., 2014, P 20 AMERICAS C INFO
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Elbaum Sebastian, 2014, The Google Dataset of Testing Results
   Eyl M, 2016, LECT NOTES BUS INF P, V238, P199, DOI 10.1007/978-3-319-27033-3_14
   Ferreira TN, 2017, IEEE COMPUT INTELL M, V12, P34, DOI 10.1109/MCI.2017.2670461
   Ferreira TN, 2017, INFORM SOFTWARE TECH, V90, P55, DOI 10.1016/j.infsof.2017.05.003
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916008
   Haghighatkhah A, 2018, J SYST SOFTWARE, V146, P80, DOI 10.1016/j.jss.2018.08.061
   Hellmann Theodore D., 2012, Proceedings of the 2012 Agile Conference, P55, DOI 10.1109/Agile.2012.8
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Jiang B, 2012, INFORM SOFTWARE TECH, V54, P739, DOI 10.1016/j.infsof.2012.01.006
   Jiang B, 2009, P INT COMP SOFTW APP, P99, DOI 10.1109/COMPSAC.2009.23
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Karvonen T, 2017, INFORM SOFTWARE TECH, V86, P87, DOI 10.1016/j.infsof.2017.01.009
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Kim J., 2017, P 32 ACM S APPL COMP, P1409
   Knauss E, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P19, DOI 10.1109/RCoSE.2015.11
   Kumar A, 2014, COMPUSOFT INT J ADV, V3, P793, DOI DOI 10.6084/ijact.v3i5.320
   Kwon JH, 2017, ASIA PAC SOFWR ENG, P160, DOI 10.1109/APSEC.2017.22
   Laukkanen E, 2017, INFORM SOFTWARE TECH, V82, P55, DOI 10.1016/j.infsof.2016.10.001
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   Lex A, 2014, IEEE T VIS COMPUT GR, V20, P1983, DOI 10.1109/TVCG.2014.2346248
   Liang JJ, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P688, DOI 10.1145/3180155.3180213
   Liu WL, 2007, INT C COMP AID DES C, P252
   Mäntylä MV, 2015, EMPIR SOFTW ENG, V20, P1384, DOI 10.1007/s10664-014-9338-4
   Marijan D, 2019, SOFTWARE PRACT EXPER, V49, P192, DOI 10.1002/spe.2661
   Marijan D, 2018, P INT COMP SOFTW APP, P22, DOI 10.1109/COMPSAC.2018.00012
   Marijan D, 2017, IEEE INT CONF SOFTW, P524, DOI 10.1109/ICST.2017.60
   Marijan D, 2017, IEEE HI ASS SYS ENGR, P100, DOI 10.1109/HASE.2017.26
   Marijan D, 2016, PROC IEEE INT CONF S, P568, DOI 10.1109/ICSME.2016.77
   Marijan D, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P157, DOI 10.1109/QRS.2015.31
   Marijan D, 2013, PROC IEEE INT CONF S, P540, DOI 10.1109/ICSM.2013.91
   Moher D, 2009, ANN INTERN MED, V151, P264, DOI [10.7326/0003-4819-151-4-200908180-00135, 10.1136/bmj.b2700, 10.1371/journal.pmed.1000097, 10.1186/2046-4053-4-1, 10.1136/bmj.i4086, 10.1136/bmj.b2535, 10.1016/j.ijsu.2010.02.007, 10.1016/j.ijsu.2010.07.299]
   Najafi A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P213, DOI 10.1109/ICSE-SEIP.2019.00031
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Pradhan D, 2019, J SYST SOFTWARE, V153, P86, DOI 10.1016/j.jss.2019.03.064
   Prado Lima J.A., 2020, SUPPLEMENTARY MAT TE, DOI [10.17605/0SF.10/ZFE64, DOI 10.17605/0SF.10/ZFE64]
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Singh Y, 2012, INFORM-J COMPUT INFO, V36, P379
   Spieker H, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P12, DOI 10.1145/3092703.3092709
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Strandberg PE, 2017, IEEE SOFTWARE, V34, P30, DOI 10.1109/MS.2017.92
   Strandberg PE, 2016, PROC INT SYMP SOFTW, P12, DOI 10.1109/ISSRE.2016.23
   Wen W, 2018, INT CONF CLOUD COMPU, P636, DOI 10.1109/CCIS.2018.8691385
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Xiao L., 2018, IJET, Int. J. Eng. Technol., V7, P332, DOI [10.14419/ijet.v7i2.28.13207, DOI 10.14419/IJET.V7I2.28.13207]
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S., 2011, P 8 EUROPEAN SOFTWAR
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Yu Z, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P883, DOI 10.1145/3338906.3340448
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
   Zhu YC, 2018, PROC IEEE INT CONF S, P69, DOI 10.1109/ICSME.2018.00016
NR 69
TC 47
Z9 48
U1 2
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2020
VL 121
AR 106268
DI 10.1016/j.infsof.2020.106268
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT0NB
UT WOS:000518706200001
DA 2024-07-18
ER

PT J
AU Blasco, D
   Cetina, C
   Pastor, O
AF Blasco, Daniel
   Cetina, Carlos
   Pastor, Oscar
TI A fine-grained requirement traceability evolutionary algorithm: Kromaia,
   a commercial video game case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirement; Traceability; Evolutionary computation; Video game; Source
   code
ID CODE
AB Context: Commercial video games usually feature an extensive source code and requirements that are related to code lines from multiple methods. Traceability is vital in terms of maintenance and content update, so it is necessary to explore such search spaces properly.
   Objective: This work presents and evaluates CODFREL (Code Fragment-based Requirement Location), our approach to fine-grained requirement traceability, which lies in an evolutionary algorithm and includes encoding and genetic operators to manipulate code fragments that are built from source code lines. We compare it with a baseline approach (Regular-LSI) by configuring both approaches with different granularities (code lines / complete methods).
   Method: We evaluated our approach and Regular-LSI in the Kromaia video game case study, which is a commercial video game released on PC and PlayStation 4. The approaches are configured with method and code line granularity and work on 20 requirements that are provided by the development company. Our approach and Regular-LSI calculate similarities between requirements and code fragments or methods to propose possible solutions and, in the case of CODFREL, to guide the evolutionary algorithm.
   Results: The results, which compare code line and method granularity configurations of CODFREL with different granularity configurations of Regular-LSI, show that our approach outperforms Regular-LSI in precision and recall, with values that are 26 and 8 times better, respectively, even though it does not achieve the optimal solutions. We make an open-source implementation of CODFREL available.
   Conclusions: Since our approach takes into consideration key issues like the source code size in commercial video games and the requirement dispersion, it provides better starting points than Regular-LSI in the search for solution candidates for the requirements. However, the results and the influence of domain-specific language on them show that more explicit knowledge is required to improve such results.
C1 [Blasco, Daniel; Cetina, Carlos; Pastor, Oscar] Univ San Jorge, SVIT Res Grp, Autovia A-23 Zaragoza Huesca Km 299, Zaragoza 50830, Spain.
C3 Universidad San Jorge
RP Blasco, D (corresponding author), Univ San Jorge, SVIT Res Grp, Autovia A-23 Zaragoza Huesca Km 299, Zaragoza 50830, Spain.
EM dblasco@usj.es; ccetina@usj.es; opastor@dsic.upv.es
RI Blasco, Daniel/AAM-6985-2021; López, Oscar Pastor/S-4216-2016; Cetina,
   Carlos/P-8682-2017
OI Blasco, Daniel/0000-0002-0964-8482; Cetina, Carlos/0000-0001-8542-5515
FU Ministry of Economy and Competitiveness (MINECO) through the Spanish
   National R + D + i Plan; ERDF funds under the Project ALPS
   [RTI2018-096411-B-I00]
FX This work has been partially supported by the Ministry of Economy and
   Competitiveness (MINECO) through the Spanish National R + D + i Plan and
   ERDF funds under the Project ALPS (RTI2018-096411-B-I00).
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   Affenzeller M, 2009, NUMER INSIGHT, P1, DOI 10.1201/9781420011326
   [Anonymous], 2017, TOOIK PROC NAT LANG
   [Anonymous], 2017, EFFICIENT JAVA MATRI
   [Anonymous], 2008, Modern information retrieval: the concepts and technology behind search
   [Anonymous], 2017, GRAND CHALLENGES TRA
   Antoniol G., 2017, DEP COMPUTER SCI ENG, P23, DOI [10.7274/ROGM85D1, DOI 10.7274/ROGM85D1]
   Arcega L, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P90, DOI 10.1145/3239372.3239392
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Bavota G, 2014, INFORM SOFTWARE TECH, V56, P163, DOI 10.1016/j.infsof.2013.08.004
   Borg M, 2014, EMPIR SOFTW ENG, V19, P1565, DOI 10.1007/s10664-013-9255-y
   Capobianco G, 2009, WORK CONF REVERSE EN, P195, DOI 10.1109/WCRE.2009.14
   Capobianco G, 2009, INT C PROGRAM COMPRE, P148, DOI 10.1109/ICPC.2009.5090038
   Cleland-Huang J, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P6, DOI 10.1109/TEFSE.2009.5069575
   Davis L., 1991, Handbook of Genetic Algorithms
   De Lucia A, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P32, DOI 10.1109/CSMR.2005.7
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2006, PROC IEEE INT CONF S, P274
   De Lucia A, 2009, EMPIR SOFTW ENG, V14, P57, DOI 10.1007/s10664-008-9090-8
   Dekhtyar A, 2007, INT REQUIR ENG CONF, P141, DOI 10.1109/RE.2007.17
   Dit B, 2016, PROC IEEE INT CONF S, P641, DOI 10.1109/ICSME.2016.85
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Font J, 2017, COMPUT LANG SYST STR, V48, P20, DOI 10.1016/j.cl.2016.08.003
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Ghazarian A, 2010, RES AGENDA SOFTWARE
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Guo J., 2014, ASE, P755
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Lin J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P363
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Parvathy AG, 2008, ICEIS 2008: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL ISAS-2, P64
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Rempel P, 2017, IEEE T SOFTWARE ENG, V43, P777, DOI 10.1109/TSE.2016.2622264
   Revelle Meghan, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P14, DOI 10.1109/ICPC.2010.10
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Singhal A., 2001, IEEE DATA ENG B, V24, P35
   Spanoudakis G, 2005, HANDBOOK OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, VOL 3: RECENT ADVANCES, P395, DOI 10.1142/9789812775245_0014
   Stehman SV, 1997, REMOTE SENS ENVIRON, V62, P77, DOI 10.1016/S0034-4257(97)00083-7
   Sultanov H., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P211, DOI 10.1109/RE.2010.33
   Unterkalmsteiner M, 2016, EMPIR SOFTW ENG, V21, P2324, DOI 10.1007/s10664-015-9410-8
   van der Ven J.S., 2006, 2006 RATIONALE MANAG, P4, DOI [10.1007/978-3-540-30998-7_16., DOI 10.1007/978-3-540-30998-7_16]
   WATKINS R, 1994, IEEE SOFTWARE, V11, P104, DOI 10.1109/52.300100
   Wohlin C., 2012, EXPT SOFTWARE ENG, P104
   Zou XC, 2010, EMPIR SOFTW ENG, V15, P119, DOI 10.1007/s10664-009-9114-z
NR 45
TC 8
Z9 9
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2020
VL 119
AR 106235
DI 10.1016/j.infsof.2019.106235
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KL2WU
UT WOS:000513290100005
OA Green Published
DA 2024-07-18
ER

PT J
AU Borrego, G
   Morán, AL
   Palacio, RR
   Vizcaíno, A
   García, FO
AF Borrego, Gilberto
   Moran, Alberto L.
   Palacio, Ramon R.
   Vizcaino, Aurora
   Garcia, Felix O.
TI Towards a reduction in architectural knowledge vaporization during agile
   global software development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile global software development; Architectural knowledge; Knowledge
   vaporization; Documentation debt
ID MANAGEMENT
AB Context: The adoption of agile methods is a trend in global software development (GSD), but may result in many challenges. One important challenge is architectural knowledge (AK) management, since agile developers prefer sharing knowledge through face-to-face interactions, while in GSD the preferred manner is documents. Agile knowledge-sharing practices tend to predominate in GSD companies that practice agile development (AGSD), leading to a lack of documents, such as architectural designs, data models, deployment specifications, etc., resulting in the loss of AK over time, i.e., it vaporizes.
   Objective: In a previous study, we found that there is important AK in the log files of unstructured textual electronic media (UTEM), such as instant messengers, emails, forums, etc., which are the preferred means employed in AGSD to contact remote teammates. The objective of this paper is to present and evaluate a proposal with which to recover AK from UTEM logs. We developed and evaluated a prototype that implements our proposal in order to determine its feasibility.
   Method: The evaluation was performed by conducting a study with agile/global developers and students, who used the prototype and different UTEM to execute tasks that emulate common situations concerning AGSD teams' lack of documentation during development phases.
   Results: Our prototype was considered a useful, usable and unobtrusive tool when retrieving AK from UTEM logs. The participants also preferred our prototype when searching for AK and found AK faster with the prototype than with UTEM when the origin of the AK required was unknown.
   Conclusion: The participants' performance and perceptions when using our prototype provided evidence that our proposal could reduce AK vaporization in AGSD environments. These results encourage us to evaluate our proposal in a long-term test as future work.
C1 [Borrego, Gilberto; Moran, Alberto L.] Univ Autonoma Baja California, Mexicali, Baja California, Mexico.
   [Palacio, Ramon R.] Inst Tecnol Sonora, Obregon, Mexico.
   [Vizcaino, Aurora; Garcia, Felix O.] Univ Castilla La Mancha, Ciudad Real, Spain.
C3 Universidad Autonoma de Baja California; Universidad de Castilla-La
   Mancha
RP Borrego, G (corresponding author), Univ Autonoma Baja California, Mexicali, Baja California, Mexico.
EM gilberto.borrego@uabc.edu.mx
RI Borrego, Gilberto/I-9039-2019; Furtado, Kássia/AAU-5007-2020; Borrego,
   Gilberto/AAR-3455-2021; Palacio, Ramon R./AAQ-4991-2020; Garcia,
   Felix/D-4299-2011; Vizcaino, Aurora/D-4452-2011
OI Borrego, Gilberto/0000-0001-7315-5693; Borrego,
   Gilberto/0000-0001-7315-5693; Garcia, Felix/0000-0001-6460-0353;
   Vizcaino, Aurora/0000-0002-2072-5581
FU National Council of Science and Technology (whose acronym in Spanish is
   Conacyt) of Mexico [394125]; GINSENG (Ministerio de Economia y
   Competitividad y Fondo Europeo de Desarrollo Regional FEDER) -
   "Consejeria de Educacion, Cultura y Deportes de la Direccion General de
   Universidades, Investigacion e Innovacion de la JCCM" of Spain
   [T1N2015-70259-C2-1-R]; G3Softproject - "Consejeria de Educacion,
   Cultura y Deportes de la Direccion General de Universidades,
   Investigacion e Innovacion de la JCCM" of Spain [SBPLY/17/180501/000150]
FX This work was supported by the National Council of Science and
   Technology (whose acronym in Spanish is Conacyt) of Mexico, with
   scholarship number 394125 for the first author. This work is also
   partially supported by: GINSENG (T1N2015-70259-C2-1-R, Ministerio de
   Economia y Competitividad y Fondo Europeo de Desarrollo Regional FEDER);
   and G3Softproject (SBPLY/17/180501/000150) funded by "Consejeria de
   Educacion, Cultura y Deportes de la Direccion General de Universidades,
   Investigacion e Innovacion de la JCCM" of Spain.
CR Al-Kofahi J., 2010, Proc. Int'l Conf. Software Maintenance (ICSM 10), P1
   Ali N., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P347, DOI 10.1109/ICGSE.2010.48
   Aniche M, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P63, DOI 10.1145/2973839.2973846
   [Anonymous], P 15 EUR C PATT LANG
   [Anonymous], P 2010 ACM IEEE INT
   [Anonymous], 2011, ISO/IEC TR 29110-5-1-2, DOI DOI 10.1109/IEEESTD.2011.6129467
   [Anonymous], KNOWLEDGE MANAGEMENT
   [Anonymous], AGILE SOFTWARE ARCHI
   [Anonymous], 2010, P 2 INT WORKSH REC S
   [Anonymous], TRANSFORM HEALTHCARE
   [Anonymous], 1997, VIDEO MEDIATED COMMU
   Awar KB, 2017, PROCEEDINGS OF 2017 INTERNATIONAL CONFERENCE ON COMMUNICATION, COMPUTING AND DIGITAL SYSTEMS (C-CODE), P228, DOI 10.1109/C-CODE.2017.7918933
   Babar MA, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P69, DOI 10.1007/978-3-642-02374-3_5
   Bagheri E, 2016, AUTOMAT SOFTW ENG, V23, P147, DOI 10.1007/s10515-014-0146-2
   Bangor A, 2008, INT J HUM-COMPUT INT, V24, P574, DOI 10.1080/10447310802205776
   Beck K., 2001, Agile manifesto
   Beecham Sarah, 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P55, DOI 10.1109/ICGSE.2010.15
   Borrego G, 2017, INT CONF GLOBAL SOFT, P51, DOI 10.1109/ICGSE.2017.14
   Borrego G, 2017, IET SOFTW, V11, P77, DOI 10.1049/iet-sen.2016.0197
   Borrego G, 2016, INT CONF GLOBAL SOFT, P109, DOI 10.1109/ICGSE.2016.29
   Bosch J, 2004, LECT NOTES COMPUT SC, V3047, P194
   Brooke J., 1996, USABILITY EVALUATION, P189, DOI DOI 10.1201/9781498710411-35
   Cabral ARY, 2014, J INF KNOWL MANAG, V13, DOI 10.1142/S0219649214500105
   Capilla R, 2016, J SYST SOFTWARE, V116, P191, DOI 10.1016/j.jss.2015.08.054
   Che MR, 2015, INT J SOFTW ENG KNOW, V25, P1677, DOI 10.1142/S0218194015400380
   Clear T., 2003, SIGCSE Bulletin, V35, P12, DOI 10.1145/782941.782949
   Clerc V., 2011, 2011 Sixth IEEE International Conference on Global Software Engineering Workshop, P1, DOI 10.1109/ICGSE-W.2011.17
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Dalkir K., 2011, KNOWLEDGE MANAGEMENT
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Dekel U, 2008, CSCW: 2008 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, CONFERENCE PROCEEDINGS, P1
   Dingsoyr T, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P59, DOI 10.1007/978-3-642-02374-3_4
   Dorairaj Siva, 2012, Proceedings of the 2012 Agile Conference, P64, DOI 10.1109/Agile.2012.17
   Estler H., 2012, Global Software Engineering (ICGSE), 2012 IEEE Seventh International Conference on, P11
   Farenhorst R, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P21, DOI 10.1007/978-3-642-02374-3_2
   Forward A, 2007, SERA 2007: 5TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT, AND APPLICATIONS, PROCEEDINGS, P451, DOI 10.1109/SERA.2007.81
   Galster Matthias, 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P239, DOI 10.1109/WICSA.2014.28
   Gaubatz P, 2015, J SYST SOFTWARE, V103, P128, DOI 10.1016/j.jss.2015.01.056
   Gervigny MLI, 2017, 2017 INTERNATIONAL CONFERENCE ON INFOCOM TECHNOLOGIES AND UNMANNED SYSTEMS (TRENDS AND FUTURE DIRECTIONS) (ICTUS), P413
   Ghani I, 2015, KSII T INTERNET INF, V9, P3231, DOI 10.3837/tiis.2015.08.029
   Gutwin C., 1996, People and Computers XI. Proceedings of HCI '96, P281
   Hamed AMM, 2013, 2013 INTERNATIONAL CONFERENCE ON COMPUTING, ELECTRICAL AND ELECTRONICS ENGINEERING (ICCEEE), P160, DOI 10.1109/ICCEEE.2013.6633925
   Holmstrom H, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ICGSE.2006.261210
   Holz H, 2003, TWELFTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P291
   Jalali S, 2012, J SOFTW-EVOL PROC, V24, P643, DOI 10.1002/smr.561
   Kruchten P, 2006, LECT NOTES COMPUT SC, V4214, P43
   Levy M, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P60, DOI 10.1109/CHASE.2009.5071412
   Li ZN, 2014, TEXTS COMPUT SCI, P183
   Monasor M. J., 2009, ADV SOFTW ENG, V2009, P14, DOI DOI 10.1155/2009/710971
   Nonaka I, 2000, LONG RANGE PLANN, V33, P5, DOI 10.1016/S0024-6301(99)00115-6
   Nonaka I, 1995, KNOWLEDGE CREATING C
   Paul S, 2015, 2015 INTERNATIONAL CONFERENCE ON COMPUTING, COMMUNICATION & AUTOMATION (ICCCA), P765, DOI 10.1109/CCAA.2015.7148513
   Ramesh B, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1164394.1164418
   Razzak MA, 2015, INT CONF GLOBAL SOFT, P81, DOI 10.1109/ICGSE.2015.22
   Razzak MA, 2014, ACSIS-ANN COMPUT SCI, V2, P1431
   Richter H, 2004, INT J SOFTW ENG KNOW, V14, P3, DOI 10.1142/S0218194004001543
   Ryan S, 2013, INFORM SOFTWARE TECH, V55, P1614, DOI 10.1016/j.infsof.2013.02.013
   Sauro J, 2012, QUANTIFYING THE USER EXPERIENCE: PRACTICAL STATISTICS FOR USER RESEARCH, P1
   Selic B, 2009, IEEE SOFTWARE, V26, P11, DOI 10.1109/MS.2009.167
   Sherman S, 2016, ADV INTELL SYST, V416, P537, DOI 10.1007/978-3-319-27478-2_41
   Shore J., 2007, ART AGILE DEV
   Sneed HM, 2014, LECT NOTES BUS INF P, V166, P48
   Sohan SM, 2010, LECT NOTES BUS INF, V48, P103
   Storey MA, 2009, IEEE T SOFTWARE ENG, V35, P470, DOI 10.1109/TSE.2009.15
   Tang A, 2010, J SYST SOFTWARE, V83, P352, DOI 10.1016/j.jss.2009.08.032
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Treude C, 2009, PROC INT CONF SOFTW, P12, DOI 10.1109/ICSE.2009.5070504
   Uikey Nitin., 2011, International Journal of Software Engineering, V2, P13
   Wohlin C., 2012, Experimentation in Software Engineering
   Yang C, 2016, J SYST SOFTWARE, V111, P157, DOI 10.1016/j.jss.2015.09.028
   Zernadji Tarek, 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P139, DOI 10.1109/WICSA.2014.35
NR 71
TC 24
Z9 26
U1 1
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2019
VL 112
BP 68
EP 82
DI 10.1016/j.infsof.2019.04.008
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IA9TG
UT WOS:000469899100006
OA Green Published
DA 2024-07-18
ER

PT J
AU Qi, XF
   Hua, YL
   Wang, P
   Wang, ZY
AF Qi, Xiao-Fang
   Hua, Yun-Long
   Wang, Peng
   Wang, Zi-Yuan
TI Leveraging keyword-guided exploration to build test models for web
   applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Web apps; Model generation; Software testing; Coverage; Automated
   testing
AB Context: Dynamic exploration techniques, which automatically exercise possible user interface elements, have been used to explore user interface state flow graphs as test models for web applications. An exhaustive exploration may incur the well-known state explosion problem. In a limited amount of time, most existing dynamic exploration techniques tend to become mired in local or irrelevant regions of the web application due to not considering functionality semantics information. Hence, generated test models have often inadequate functionality coverage for deriving effective test cases.
   Objective: This paper proposes a keyword-guided exploration strategy for automatic construction of web application test models. The goal is to generate incomplete test models with adequate functionality coverage in a given time budget for deriving test cases w.r.t. specified functionalities.
   Method: Given very few keywords that describe specified functionalities, our strategy guides the exploration to discover user interface states and transitions among them that are relevant to the specified functionalities by computing similarity scores between text contents in web pages and given keywords. We use nine representative web applications to perform dynamic explorations in a given time budget and empirically evaluate functionality coverage, and other metrics, e.g., code coverage, the size of test model, the number of the test suite, path diversity, and DOM diversity.
   Results: Our keyword-guided exploration strategy achieves a higher functionality coverage as compared with the generic and feedback-directed exploration strategies. Yet the significant improvement of functionality coverage achieved by our strategy is not exchanged at the cost of other metrics.
   Conclusion: Our keyword-guided exploration strategy is more effective than the generic and feedback-directed exploration strategies in terms of functionality coverage. In a limited amount of time, test models generated with our strategy can be used to derive effective web application test cases.
C1 [Qi, Xiao-Fang; Hua, Yun-Long; Wang, Peng] Southeast Univ, Sch Comp Sci & Engn, Nanjing 211189, Jiangsu, Peoples R China.
   [Qi, Xiao-Fang; Wang, Peng] Southeast Univ, Minist Educ, Key Lab Comp Network & Informat Integrat, Nanjing 211189, Jiangsu, Peoples R China.
   [Wang, Zi-Yuan] Nanjing Univ Posts & Telecommun, Sch Comp Sci & Technol, Nanjing 210023, Jiangsu, Peoples R China.
C3 Southeast University - China; Southeast University - China; Nanjing
   University of Posts & Telecommunications
RP Qi, XF (corresponding author), Southeast Univ, Sch Comp Sci & Engn, Nanjing 211189, Jiangsu, Peoples R China.
EM xfqi@seu.edu.cn; pwang@seu.edu.cn; wangziyuan@njupt.edu.cn
RI Wang, Ziyuan/GSE-4594-2022
FU National Key R&D Program of China [2018YFB1003902]; National Science
   Foundation of China [61472026, 614720177]
FX This work is supported by the National Key R&D Program of China under
   Grant No. 2018YFB1003902 and the National Science Foundation of China
   under Grant No. 61472026 and 614720177.
CR Benedikt M., 2002, Proceedings 11th International Conference on World Wide Web WWW02, page, P654
   Cai R., 2008, Proceedings of the 17th international conference on World Wide Web, P447, DOI [DOI 10.1145/1367497.1367558, 10.1145/1367497.1367558]
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Choudhary Suryakant, 2013, Web Engineering. 13th International Conference, ICWE 2013. Proceedings: LNCS 7977, P291, DOI 10.1007/978-3-642-39200-9_25
   Dincturk Mustafa Emre, 2012, Web Engineering. Proceedings 12th International Conference, ICWE 2012, P362, DOI 10.1007/978-3-642-31753-8_29
   Fard A. M., 2013, PROC IEEE 24 INT S S, P278
   Huang XG, 2014, 2014 14TH INTERNATIONAL SYMPOSIUM ON COMMUNICATIONS AND INFORMATION TECHNOLOGIES (ISCIT), P60
   Madhavan J, 2008, PROC VLDB ENDOW, V1, P1241
   Mesbah A, 2015, ADV COMPUT, V97, P201, DOI 10.1016/bs.adcom.2014.12.003
   Mesbah A, 2012, ACM T WEB, V6, DOI 10.1145/2109205.2109208
   Mesbah A, 2012, IEEE T SOFTWARE ENG, V38, P35, DOI 10.1109/TSE.2011.28
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Mirshokraie S, 2015, IEEE T SOFTWARE ENG, V41, P429, DOI 10.1109/TSE.2014.2371458
   Mirzaaghaei M., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, ISSTA 2014, P71, DOI DOI 10.1145/2610384.2610406
   Ocariza F. S.  Jr., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P31, DOI 10.1109/ICST.2012.83
   Ricca F, 2001, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2001.919078
   Roest D., 2010, P 3 INT C SOFTW TEST, P128
   Thummalapenta S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P162, DOI 10.1109/ICSE.2013.6606562
   van Deursen A, 2015, SCI COMPUT PROGRAM, V97, P173, DOI 10.1016/j.scico.2014.09.005
   Wang WH, 2016, SOFTW TEST VERIF REL, V26, P318, DOI 10.1002/stvr.1599
   Wang WH, 2009, PROC IEEE INT CONF S, P211, DOI 10.1109/ICSM.2009.5306321
   2014, PROC OF THE INTERNAT, P837, DOI DOI 10.1145/2568225.2568257
NR 22
TC 2
Z9 2
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2019
VL 111
BP 110
EP 119
DI 10.1016/j.infsof.2019.03.016
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HW6ST
UT WOS:000466821600007
DA 2024-07-18
ER

PT J
AU Kessentini, W
   Sahraoui, H
   Wimmer, M
AF Kessentini, Wael
   Sahraoui, Houari
   Wimmer, Manuel
TI Automated metamodel/model co-evolution: A search-based approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Metamodel/model co-evolution; Model migration; Coupled evolution; Search
   based software engineering
ID MODEL MIGRATION
AB Context Metamodels evolve over time to accommodate new features, improve existing designs, and fix errors identified in previous releases. One of the obstacles that may limit the adaptation of new metamodels by developers is the extensive manual changes that have been applied to migrate existing models. Recent studies addressed the problem of automating the metamodel/model co-evolution based on manually defined migration rules. The definition of these rules requires the list of changes at the metamodel level which are difficult to fully identify. Furthermore, different possible alternatives may be available to translate a metamodel change to a model change. Thus, it is hard to generalize these co-evolution rules.
   Objective: We propose an alternative automated approach for the metamodel/model co-evolution. The proposed approach refines an initial model instantiated from the previous metamodel version to make it as conformant as possible to the new metamodel version by finding the best compromise between three objectives, namely minimizing (i) the non-conformities with new metamodel version, (ii) the changes to existing models, and (iii) the textual and structural dissimilarities between the initial and revised models.
   Method: We formulated the metamodel/model co-evolution as a multi-objective optimization problem to handle the different conflicting objectives using the Non-dominated Sorting Genetic Algorithm II (NSGA-II) and the Multi-Objective Particle Swarm Optimization (MOPSO). Results: We evaluated our approach on several evolution scenarios extracted from different widely used meta models. The results confirm the effectiveness of our approach with average manual correctness, precision and recall respectively higher than 91%, 88% and 89% on the different co-evolution scenarios.
   Conclusion: A comparison with our previous work confirms the out-performance of our multi-objective formulation.
C1 [Kessentini, Wael; Sahraoui, Houari] Univ Montreal, DIRO, Montreal, PQ, Canada.
   [Wimmer, Manuel] TU Wien, CDL MINT, Vienna, Austria.
C3 Universite de Montreal; Technische Universitat Wien
RP Kessentini, W (corresponding author), Univ Montreal, DIRO, Montreal, PQ, Canada.
EM kessentw@iro.umontreal.ca
FU Austrian Federal Ministry of Science, Research and Economy, National
   Foundation for Research, Technology and Development; Austrian Science
   Fund (FWF) [P 28519-N31]; Canada NSERC [RGPIN/06702-2014]
FX This work has been partially funded by the Austrian Federal Ministry of
   Science, Research and Economy, National Foundation for Research,
   Technology and Development, and by the Austrian Science Fund (FWF) P
   28519-N31, and by the Canada NSERC grant RGPIN/06702-2014.
CR Anguel F, 2014, INT CONF COMP SCI, P142, DOI 10.1109/CSIT.2014.6805992
   Anguel F, 2015, IFIP ADV INF COMM TE, V456, P563, DOI 10.1007/978-3-319-19578-0_46
   [Anonymous], 2013, P 17 INT SOFTW PROD, DOI [DOI 10.1145/2491627.2491635, 10.1145/2491627.2491635]
   [Anonymous], 2014, EVOLVING SOFTWARE SY
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Banerjee J., 1987, SIGMOD Record, V16, P311, DOI 10.1145/38714.38748
   Batot E, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P210, DOI 10.1109/MODELS.2017.25
   Brambilla M., 2017, Model-Driven Software Engineering in Practice, Second Edition, ser. Synthesis Lectures on Software Engineering, VSecond
   Cariou E, 2011, LECT NOTES COMPUT SC, V6698, P3, DOI 10.1007/978-3-642-21470-7_2
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Cicchetti Antonio, 2011, 2 INT WORKSH MOD COM, P16
   Deb K., 2000, Parallel Problem Solving from Nature PPSN VI. 6th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1917), P849
   Demuth A, 2016, J SYST SOFTWARE, V111, P281, DOI 10.1016/j.jss.2015.03.003
   Di Ruscio D, 2016, LECT NOTES COMPUT SC, V9764, P231, DOI 10.1007/978-3-319-42061-5_15
   Di Ruscio D, 2011, LECT NOTES COMPUT SC, V6563, P143, DOI 10.1007/978-3-642-19440-5_9
   Fleck M, 2016, J SOFTW-EVOL PROC, V28, P1081, DOI 10.1002/smr.1804
   Garcés K, 2009, LECT NOTES COMPUT SC, V5562, P34, DOI 10.1007/978-3-642-02674-4_4
   Ghannem A, 2014, J SOFTW-EVOL PROC, V26, P692, DOI 10.1002/smr.1644
   Gruschko B., 2007, P INT WORKSH MOD DRI, P1
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hebig R, 2017, IEEE T SOFTWARE ENG, V43, P396, DOI 10.1109/TSE.2016.2610424
   Herrmannsdoerfer Markus, 2009, Software Language Engineering. Second International Conference, SLE 2009. Revised Selected Papers, P3
   Herrmannsdoerfer M, 2009, LECT NOTES COMPUT SC, V5653, P52, DOI 10.1007/978-3-642-03013-0_4
   Herrmannsdoerfer M, 2011, ELECTRON PROC THEOR, P1, DOI 10.4204/EPTCS.74.1
   Herrmannsdoerfer M, 2011, LECT NOTES COMPUT SC, V6563, P163, DOI 10.1007/978-3-642-19440-5_10
   Herrmannsdoerfer M, 2011, LECT NOTES COMPUT SC, V6563, P286, DOI 10.1007/978-3-642-19440-5_18
   Hu XH, 2002, IEEE C EVOL COMPUTAT, P1677, DOI 10.1109/CEC.2002.1004494
   Iovino L, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.3.a3
   Kessentini M, 2017, EMPIR SOFTW ENG, V22, P670, DOI 10.1007/s10664-016-9442-8
   Kessentini W., 2015, P ACM STUD RES COMP, P13
   Kessentini W, 2016, LECT NOTES COMPUT SC, V9764, P138, DOI 10.1007/978-3-319-42061-5_9
   Khelladi DE, 2016, INFORM SYST, V62, P220, DOI 10.1016/j.is.2016.05.002
   Li XD, 2003, LECT NOTES COMPUT SC, V2723, P37
   LouisMRose Richard F, 2009, PROC JOINT MODSE MCC, P6
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P473, DOI 10.1007/s11219-015-9284-4
   Mansoor U, 2015, J SYST SOFTWARE, V103, P423, DOI 10.1016/j.jss.2014.11.043
   Mantz F., 2013, ECEASST, V61, P1
   Mantz F, 2015, SCI COMPUT PROGRAM, V104, P2, DOI 10.1016/j.scico.2015.01.002
   Meyer B., 2010, P 3D DAT PROC VIS TR, P1
   Meyers B, 2011, SCI COMPUT PROGRAM, V76, P1223, DOI 10.1016/j.scico.2011.01.002
   Mkaouer MW, 2014, LECT NOTES COMPUT SC, V8636, P168
   Mostaghim S, 2003, PROCEEDINGS OF THE 2003 IEEE SWARM INTELLIGENCE SYMPOSIUM (SIS 03), P26, DOI 10.1109/sis.2003.1202243
   Muflikhah L, 2009, PROCEEDINGS OF THE 2009 INTERNATIONAL CONFERENCE ON COMPUTER TECHNOLOGY AND DEVELOPMENT, VOL 1, P58, DOI 10.1109/ICCTD.2009.206
   Narayanan A, 2009, LECT NOTES COMPUT SC, V5795, P706, DOI 10.1007/978-3-642-04425-0_57
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Paige RF, 2016, J SYST SOFTWARE, V111, P272, DOI 10.1016/j.jss.2015.08.047
   Richters M., 2001, TECHNICAL REPORT
   Roddick J. F., 1992, SIGMOD Rec, V21, P35, DOI [DOI 10.1145/141818.141826, 10.1145/141818.14 1826, 10.1145/141818.141826]
   Rose LM, 2014, SOFTW SYST MODEL, V13, P323, DOI 10.1007/s10270-012-0245-0
   Rose LM, 2010, LECT NOTES COMPUT SC, V6142, P184, DOI 10.1007/978-3-642-13688-7_13
   Sahin D, 2015, J SOFTW-EVOL PROC, V27, P821, DOI 10.1002/smr.1735
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schonenberger J., 2014, P 10 AS PAC C CONC M
   Sprinkle J, 2004, J VISUAL LANG COMPUT, V15, P291, DOI 10.1016/j.jvlc.2004.01.006
   Taentzer G, 2013, LECT NOTES COMPUT SC, V8107, P254, DOI 10.1007/978-3-642-41533-3_16
   Vermolen S, 2008, LECT NOTES COMPUT SC, V5301, P630, DOI 10.1007/978-3-540-87875-9_44
   Wachsmuth G, 2007, LECT NOTES COMPUT SC, V4609, P600
   Williams J.R., 2012, 6th International Workshop on Models and Evolution, Proceedings of the ACM/IEEE 15th International Conference on Model Driven Engineering Languages and Systems, Innsbruck Austria, 15 October 2012, P39
   Wimmer M., 2010, P 2 INT WORKSH MOD T, V711, P65
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 63
TC 20
Z9 21
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2019
VL 106
BP 49
EP 67
DI 10.1016/j.infsof.2018.09.003
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HF6XJ
UT WOS:000454381300003
DA 2024-07-18
ER

PT J
AU Xu, Z
   Liu, J
   Luo, XP
   Yang, ZJ
   Zhang, YF
   Yuan, PP
   Tang, YT
   Zhang, T
AF Xu, Zhou
   Liu, Jin
   Luo, Xiapu
   Yang, Zijiang
   Zhang, Yifeng
   Yuan, Peipei
   Tang, Yutian
   Zhang, Tao
TI Software defect prediction based on kernel PCA and weighted extreme
   learning machine
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Feature extraction; Nonlinear mapping; Kernel principal component
   analysis; Weighted extreme learning machine
ID NEURAL-NETWORKS; COMPONENT ANALYSIS; QUALITY; CLASSIFICATION; FRAMEWORK
AB Context: Software defect prediction strives to detect defect-prone software modules by mining the historical data. Effective prediction enables reasonable testing resource allocation, which eventually leads to a more reliable software.
   Objective: The complex structures and the imbalanced class distribution in software defect data make it challenging to obtain suitable data features and learn an effective defect prediction model. In this paper, we propose a method to address these two challenges.
   Method: We propose a defect prediction framework called KPWE that combines two techniques, i.e., Kernel Principal Component Analysis (KPCA) and Weighted Extreme Learning Machine (WELM). Our framework consists of two major stages. In the first stage, KPWE aims to extract representative data features. It leverages the KPCA technique to project the original data into a latent feature space by nonlinear mapping. In the second stage, KPWE aims to alleviate the class imbalance. It exploits the WELM technique to learn an effective defect prediction model with a weighting-based scheme.
   Results: We have conducted extensive experiments on 34 projects from the PROMISE dataset and 10 projects from the NASA dataset. The experimental results show that KPWE achieves promising performance compared with 41 baseline methods, including seven basic classifiers with KPCA, five variants of KPWE, eight representative feature selection methods with WELM, 21 imbalanced learning methods.
   Conclusion: In this paper, we propose KPWE, a new software defect prediction framework that considers the feature extraction and class imbalance issues. The empirical study on 44 software projects indicate that KPWE is superior to the baseline methods in most cases.
C1 [Xu, Zhou; Liu, Jin; Zhang, Yifeng] Wuhan Univ, Sch Comp Sci, Wuhan, Hubei, Peoples R China.
   [Xu, Zhou; Luo, Xiapu; Tang, Yutian] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
   [Yang, Zijiang] Western Michigan Univ, Dept Comp Sci, Kalamazoo, MI 49008 USA.
   [Yuan, Peipei] Huazhong Univ Sci & Technol, Sch Elect Informat & Commun, Wuhan, Hubei, Peoples R China.
   [Zhang, Tao] Harbin Engn Univ, Coll Comp Sci & Technol, Harbin, Heilongjiang, Peoples R China.
   [Liu, Jin] Chinese Acad Sci, Inst Informat Engn, Key Lab Network Assessment Technol, Beijing, Peoples R China.
C3 Wuhan University; Hong Kong Polytechnic University; Western Michigan
   University; Huazhong University of Science & Technology; Harbin
   Engineering University; Chinese Academy of Sciences; Institute of
   Information Engineering, CAS
RP Liu, J (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan, Hubei, Peoples R China.; Liu, J (corresponding author), Chinese Acad Sci, Inst Informat Engn, Key Lab Network Assessment Technol, Beijing, Peoples R China.
EM jinliu@whu.edu.cn
RI Tang, Yutian/E-1415-2017; Tang, Yutian/L-8327-2019; Zhang,
   Tao/E-5634-2012
OI Tang, Yutian/0000-0001-5677-4564; Zhang, Tao/0000-0002-6272-4069; Yuan,
   Peipei/0000-0002-7773-5780
FU National Natural Science Foundation of China [61572374, U1636220,
   61472423, 61602258]; Open Fund of Key Laboratory of Network Assessment
   Technology from CAS; Academic Team Building Plan for Young Scholars from
   Wuhan University [WHU2016012]; National Science Foundation
   [DGE-1522883]; Hong Kong RGC Project [CityU C1008-16G]; Hong Kong
   General Research Fund [PolyU 152279/16E, 152223/17E]; China Postdoctoral
   Science Foundation [2017M621247]
FX The authors would like to acknowledge the support provided by the grands
   of the National Natural Science Foundation of China (61572374, U1636220,
   61472423, 61602258), Open Fund of Key Laboratory of Network Assessment
   Technology from CAS, the Academic Team Building Plan for Young Scholars
   from Wuhan University (WHU2016012), the National Science Foundation
   (DGE-1522883), Hong Kong RGC Project (CityU C1008-16G), Hong Kong
   General Research Fund (PolyU 152279/16E, 152223/17E), and the China
   Postdoctoral Science Foundation (2017M621247).
CR Abdi H, 2010, WIRES COMPUT STAT, V2, P433, DOI 10.1002/wics.101
   [Anonymous], 1998, Learning with kernels
   Asuncion A., 2007, Uci machine learning repository
   Bennin KE, 2017, ASIA PAC SOFWR ENG, P630, DOI 10.1109/APSEC.2017.76
   Bennin KE, 2017, INT SYMP EMP SOFTWAR, P364, DOI 10.1109/ESEM.2017.50
   Cao H., 2012, ADV SCI LETT, V9, P423
   Catal C, 2009, INFORM SCIENCES, V179, P1040, DOI 10.1016/j.ins.2008.12.001
   Chen L, 2015, ICMR'15: PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON MULTIMEDIA RETRIEVAL, P67, DOI 10.1145/2671188.2749358
   Chen X, 2017, P INT COMP SOFTW APP, P54, DOI 10.1109/COMPSAC.2017.65
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Ding SF, 2015, ARTIF INTELL REV, V44, P103, DOI 10.1007/s10462-013-9405-z
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Fletcher R., 1987, Practical Methods of Optimization, DOI [DOI 10.1002/9781118723203, 10.1002/9781118723203]
   Gao KH, 2011, SOFTWARE PRACT EXPER, V41, P579, DOI 10.1002/spe.1043
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gray David, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P96, DOI 10.1049/ic.2011.0012
   Guo L, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P417
   Herbold S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1063, DOI 10.1145/3180155.3182542
   Herzig K, 2013, PROC INT SYMP SOFTW, P118, DOI 10.1109/ISSRE.2013.6698911
   Hryszko J., 2017, ARXIV170306300
   Hsu CW, 2002, IEEE T NEURAL NETWOR, V13, P415, DOI 10.1109/72.991427
   Huang G, 2015, NEURAL NETWORKS, V61, P32, DOI 10.1016/j.neunet.2014.10.001
   Huang GB, 2006, NEUROCOMPUTING, V70, P489, DOI 10.1016/j.neucom.2005.12.126
   Huang GB, 2006, IEEE T NEURAL NETWOR, V17, P879, DOI 10.1109/TNN.2006.875977
   Islam Z., 2011, Proceedings of the Ninth Australasian Data Mining Conference, V121, P195
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Jing XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P414, DOI 10.1145/2568225.2568320
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Johnson C. R., 1990, MATRIX THEORY APPL, P40
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Jureczko M., 2010, Model Methods Syst Dependability Oficyna Wydawnicza Politech Wroclawskiej, P69
   Kamei Yasutaka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P196
   Khoshgoftaar TM, 2002, 7TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P51, DOI 10.1109/HASE.2002.1173102
   Khoshgoftaar TM, 1997, IEEE T NEURAL NETWOR, V8, P902, DOI 10.1109/72.595888
   Khoshgoftaar TM, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P198, DOI 10.1109/ISSRE.2000.885872
   Kim KI, 2005, IEEE T PATTERN ANAL, V27, P1351, DOI 10.1109/TPAMI.2005.181
   Knab P., 2006, P 2006 INT WORKSHOP, P119
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li J.-B., 2014, KERNEL LEARNING ALGO, P71
   Li ZQ, 2019, IEEE T SOFTWARE ENG, V45, P391, DOI 10.1109/TSE.2017.2780222
   Li ZQ, 2018, AUTOMAT SOFTW ENG, V25, P201, DOI 10.1007/s10515-017-0220-7
   Liu F., 2014, COMPUT SIMULAT
   Liu MX, 2014, IEEE T RELIAB, V63, P676, DOI 10.1109/TR.2014.2316951
   Liu XY, 2009, IEEE T SYST MAN CY B, V39, P539, DOI 10.1109/TSMCB.2008.2007853
   Luo GC, 2012, IEICE T INF SYST, VE95D, P2006, DOI 10.1587/transinf.E95.D.2006
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Ma Y, 2012, IEICE T INF SYST, VE95D, P267, DOI 10.1587/transinf.E95.D.267
   Macho C, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P541, DOI 10.1109/SANER.2016.22
   Malhotra R., 2014, P 8 INT C BIOINSP IN, P320
   Malhotra R, 2016, APPL SOFT COMPUT, V49, P1034, DOI 10.1016/j.asoc.2016.04.032
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T., 2003, EMPRICAL SOFTW UNPUB
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mesquita DPP, 2016, APPL SOFT COMPUT, V49, P1085, DOI 10.1016/j.asoc.2016.06.023
   Myers Glenford J., 2011, The Art of Software Testing
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Neumann DE, 2002, IEEE T SOFTWARE ENG, V28, P904, DOI 10.1109/TSE.2002.1033229
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Peng J., 2003, P 10 INT C IM PROC I, V1, P1
   Pizzileo B, 2012, IEEE T FUZZY SYST, V20, P1076, DOI 10.1109/TFUZZ.2012.2193587
   Qu HN, 2010, PATTERN RECOGN, V43, P3448, DOI 10.1016/j.patcog.2010.05.002
   RAO CR, 1971, SANKHYA SER A, V33, P289
   Ren JS, 2014, J APPL MATH, DOI 10.1155/2014/785435
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Scholkopf B., 1997, Artificial Neural Networks - ICANN '97. 7th International Conference Proceedings, P583, DOI 10.1007/BFb0020217
   Scholkopf B, 1998, NEURAL COMPUT, V10, P1299, DOI 10.1162/089976698300017467
   Shanthini A., 2014, INT J APPL INFORM SY
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shivaji S., 2013, THESIS
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Shivaji S, 2009, IEEE INT CONF AUTOM, P600, DOI 10.1109/ASE.2009.76
   Siers MJ, 2015, INFORM SYST, V51, P62, DOI 10.1016/j.is.2015.02.006
   Siers MJ, 2014, LECT NOTES ARTIF INT, V8862, P929, DOI 10.1007/978-3-319-13560-1_80
   Song QB, 2013, IEEE T KNOWL DATA EN, V25, P1, DOI 10.1109/TKDE.2011.181
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Sun ZB, 2012, IEEE T SYST MAN CY C, V42, P1806, DOI 10.1109/TSMCC.2012.2226152
   Tantithamthavom C., 2018, ARXIV180110269
   Thepade Sudeep D., 2015, 2015 International Conference on Communication, Information & Computing Technology (ICCICT), P1, DOI 10.1109/ICCICT.2015.7045727
   Thwin MMT, 2005, J SYST SOFTWARE, V76, P147, DOI 10.1016/j.jss.2004.05.001
   Tian J., 2005, Software Quality Engineering: Testing, Quality Assurance, and Quantifiable Improvement
   Wang TJ, 2016, AUTOMAT SOFTW ENG, V23, P569, DOI 10.1007/s10515-015-0179-1
   WOLD S, 1987, CHEMOMETR INTELL LAB, V2, P37, DOI 10.1016/0169-7439(87)80084-9
   Xia X, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P311, DOI 10.1109/SANER.2015.7081841
   Xu Z, 2016, PROC INT SYMP SOFTW, P309, DOI 10.1109/ISSRE.2016.13
   Yan Z, 2010, LECT NOTES COMPUT SC, V6064, P17
   Yang XX, 2015, IEEE T RELIAB, V64, P234, DOI 10.1109/TR.2014.2370891
   Yu WC, 2015, NEUROCOMPUTING, V149, P308, DOI 10.1016/j.neucom.2014.03.077
   Zar J.H, 2010, Biostatistical Analysis
   Zhang Y, 2015, P INT COMP SOFTW APP, P264, DOI 10.1109/COMPSAC.2015.58
   Zhang ZW, 2017, AUTOMAT SOFTW ENG, V24, P47, DOI 10.1007/s10515-016-0194-x
   Zheng J, 2010, EXPERT SYST APPL, V37, P4537, DOI 10.1016/j.eswa.2009.12.056
   Zhong C., 2011, INT J DIGITAL CONTEN, V5
   Zong WW, 2013, NEUROCOMPUTING, V101, P229, DOI 10.1016/j.neucom.2012.08.010
NR 97
TC 101
Z9 107
U1 0
U2 44
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2019
VL 106
BP 182
EP 200
DI 10.1016/j.infsof.2018.10.004
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HF6XJ
UT WOS:000454381300011
DA 2024-07-18
ER

PT J
AU Svogor, I
   Crnkovic, I
   Vrcek, N
AF Svogor, Ivan
   Crnkovic, Ivica
   Vrcek, Neven
TI An extensible framework for software configuration optimization on
   heterogeneous computing systems: Time and energy case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Cyber-physical systems; Software components; Power consumption;
   Execution time; Robot experiment; Heterogeneous computing; Component
   based software
ID ALGORITHMS; AWARE
AB Context Application of component based software engineering methods to heterogeneous computing (HC) enables different software configurations to realize the same function with different non-functional properties (NFP). Finding the best software configuration with respect to multiple NFPs is a non-trivial task.
   Objective: We propose a Software Component Allocation Framework (SCAF) with the goal to acquire a (sub-) optimal software configuration with respect to multiple NFPs, thus providing performance prediction of a software configuration in its early design phase. We focus on the software configuration optimization for the average energy consumption and average execution time.
   Method: We validated SCAF through its instantiation on a real-world demonstrator and a simulation. Firstly, we verified the correctness of our model through comparing the performance prediction of six software configurations to the actual performance, obtained through extensive measurements with a confidence interval of 95%. Secondly, to demonstrate how SCAF scales up, we performed software configuration optimization on 55 generated use-cases (with solution spaces ranging from 10(30) to 30(70)) and benchmark the results against best performing random configurations.
   Results: The performance of a configuration as predicted by our framework matched the configuration implemented and measured on a real-world platform. Furthermore, by applying the genetic algorithm and simulated annealing to the weight function given in SCAF, we obtain sub-optimal software configurations differing in performance at most 7% and 13% from the optimal configuration (respectfully).
   Conclusion: SCAF is capable of correctly describing a HC platform and reliably predict the performance of software configuration in the early design phase. Automated in the form of an Eclipse plugin, SCAF allows software architects to model architectural constraints and preferences, acting as a multi-criterion software architecture decision support system. In addition to said, we also point out several interesting research directions, to further investigate and improve our approach.
C1 [Svogor, Ivan] Polytech Montreal, Montreal, PQ, Canada.
   [Svogor, Ivan; Vrcek, Neven] Univ Zagreb, Fac Org & Informat, Varazhdin, Croatia.
   [Crnkovic, Ivica] Chalmers Univ Technol, Gothenburg, Sweden.
C3 Universite de Montreal; Polytechnique Montreal; University of Zagreb;
   Chalmers University of Technology
RP Svogor, I (corresponding author), Montreal Polytech, Dept Comp & Software Engn, Montreal, PQ H3T 1J4, Canada.
EM isvogor@foi.hr
RI Vrček, Neven/AAP-8266-2021
OI Vrček, Neven/0000-0002-4037-1522; Ivica, Crnkovic/0000-0002-5278-755X
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   [Anonymous], 2013, 50 ACM EDAC IEEE DES, DOI DOI 10.1145/2463209.2488734
   [Anonymous], 1994, AHP SERIES
   Ascia G, 2004, INTERNATIONAL CONFERENCE ON HARDWARE/SOFTWARE CODESIGN AND SYSTEM SYNTHESIS, P182
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Capilla R., 2017, J SYST SOFTW
   Choi SH, 2014, IEEE T IND ELECTRON, V61, P882, DOI 10.1109/TIE.2013.2254095
   Collange S, 2009, LECT NOTES COMPUT SC, V5544, P914, DOI 10.1007/978-3-642-01970-8_92
   Crnkovic I., 2002, BUILDING RELIABLE CO
   Crnkovic I, 2011, IEEE T SOFTWARE ENG, V37, P593, DOI 10.1109/TSE.2010.83
   El-Sayed H., 2001, Performance Evaluation Review, V29, P301, DOI 10.1145/384268.378799
   Feljan J, 2014, EUROMICRO CONF PROC, P237, DOI 10.1109/SEAA.2014.22
   Fortin FA, 2012, J MACH LEARN RES, V13, P2171
   Fowers J, 2012, FPGA 12: PROCEEDINGS OF THE 2012 ACM-SIGDA INTERNATIONAL SYMPOSIUM ON FIELD PROGRAMMABLE GATE ARRAYS, P47
   Grosskop K, 2013, ADV COMPUT, V88, P199, DOI 10.1016/B978-0-12-407725-6.00005-8
   Hartmanis J., 1982, SIAM Rev., V24, P90
   Hu JC, 2005, IEEE T COMPUT AID D, V24, P551, DOI 10.1109/TCAD.2005.844106
   Islam S, 2006, NINTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT AND COMPONENT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P485, DOI 10.1109/ISORC.2006.26
   Jagroep E., 2017, INF SOFTW TECHNOL
   Kestur S, 2010, IEEE COMP SOC ANN, P288, DOI 10.1109/ISVLSI.2010.84
   Koziolek A., 2011, Proceedings of the 14th international ACM Sigsoft symposium on Component based software engineering - CBSE'11 p, P103, DOI DOI 10.1145/2000229.2000244
   Kwok YK, 1999, ACM COMPUT SURV, V31, P406, DOI 10.1145/344588.344618
   Leupers R., 2006, HARDW SOFTW COD SYST, P167
   Malek S, 2012, IEEE T SOFTWARE ENG, V38, P73, DOI 10.1109/TSE.2011.3
   Marcon CAM, 2008, IET COMPUT DIGIT TEC, V2, P471, DOI 10.1049/iet-cdt:20070111
   Martens A., 2010, P 1 JOINT WOSP SIPEW, P105, DOI [DOI 10.1145/1712605.1712624, 10.1145]
   Martens A, 2010, LECT NOTES COMPUT SC, V6093, P84, DOI 10.1007/978-3-642-13821-8_8
   Marwedel P., 2010, EMBEDDED SYSTEM DESI
   Murali S, 2006, DES AUT TEST EUROPE, P116
   Pascual GG, 2015, J SYST SOFTWARE, V103, P392, DOI 10.1016/j.jss.2014.12.041
   Pimentel AD, 2006, IEEE T COMPUT, V55, P99, DOI 10.1109/TC.2006.16
   Poovendran R, 2010, P IEEE, V98, P1363, DOI 10.1109/JPROC.2010.2050377
   Ramírez A, 2015, INFORM SCIENCES, V305, P234, DOI 10.1016/j.ins.2015.01.017
   Rekha S., 2018, INF SOFTW TECHNOL
   Rhee CE, 2004, PR IEEE COMP DESIGN, P438
   Svogor I., 2016, Proceedings of the 2015 European Conference on Software Architecture Workshops - ECSAW, V15, P1, DOI DOI 10.1145/2797433.2797501
   Svogor I., 2015, P 2015 EUR C SOFTW A, DOI [10.1145/2797433.2797449, DOI 10.1145/2797433.2797449]
   Thiele L, 2007, INT CONF APPL CONCUR, P29, DOI 10.1109/ACSD.2007.53
   Trefethen AE, 2013, J COMPUT SCI-NETH, V4, P444, DOI 10.1016/j.jocs.2013.01.005
   Vale T, 2016, J SYST SOFTWARE, V111, P128, DOI 10.1016/j.jss.2015.09.019
   Wolf W., 2012, COMPUTERS COMPONENTS, DOI [10.1016/8978-0-12-388436-7.00004-0, DOI 10.1016/8978-0-12-388436-7.00004-0]
   Wolf W, 2009, COMPUTER, V42, P88, DOI 10.1109/MC.2009.81
NR 43
TC 9
Z9 9
U1 3
U2 8
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2019
VL 105
BP 30
EP 42
DI 10.1016/j.infsof.2018.08.003
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HD5RF
UT WOS:000452586900003
DA 2024-07-18
ER

PT J
AU Campos, J
   Ge, Y
   Albunian, N
   Fraser, G
   Eler, M
   Arcuri, A
AF Campos, Jose
   Ge, Yan
   Albunian, Nasser
   Fraser, Gordon
   Eler, Marcelo
   Arcuri, Andrea
TI An empirical evaluation of evolutionary algorithms for unit test suite
   generation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Evolutionary algorithms; Test suite generation; Empirical study
ID OPTIMIZATION; BONFERRONI
AB Context Evolutionary algorithms have been shown to be effective at generating unit test suites optimised for code coverage. While many specific aspects of these algorithms have been evaluated in detail (e.g., test length and different kinds of techniques aimed at improving performance, like seeding), the influence of the choice of evolutionary algorithm has to date seen less attention in the literature.
   Objective: Since it is theoretically impossible to design an algorithm that is the best on all possible problems, a common approach in software engineering problems is to first try the most common algorithm, a genetic algorithm, and only afterwards try to refine it or compare it with other algorithms to see if any of them is more suited for the addressed problem. The objective of this paper is to perform this analysis, in order to shed light on the influence of the search algorithm applied for unit test generation.
   Method: We empirically evaluate thirteen different evolutionary algorithms and two random approaches on a selection of non-trivial open source classes. All algorithms are implemented in the Evosuite test generation tool, which includes recent optimisations such as the use of an archive during the search and optimisation for multiple coverage criteria.
   Results: Our study shows that the use of a test archive makes evolutionary algorithms clearly better than random testing, and it confirms that the DynaMOSA many-objective search algorithm is the most effective algorithm for unit test generation.
   Conclusion: Our results show that the choice of algorithm can have a substantial influence on the performance of whole test suite optimisation. Although we can make a recommendation on which algorithm to use in practice, no algorithm is clearly superior in all cases, suggesting future work on improved search algorithms for unit test generation.
C1 [Campos, Jose; Ge, Yan; Albunian, Nasser; Fraser, Gordon] Univ Sheffield, Dept Comp Sci, Sheffield, S Yorkshire, England.
   [Fraser, Gordon] Univ Passau, Chair Software Engn 2, Passau, Germany.
   [Eler, Marcelo] Univ Sao Paulo, Sao Paulo, SP, Brazil.
   [Arcuri, Andrea] Kristiania Univ Coll, Oslo, Norway.
   [Arcuri, Andrea] Univ Luxembourg, Luxembourg, Luxembourg.
C3 University of Sheffield; University of Passau; Universidade de Sao
   Paulo; Kristiania University College; University of Luxembourg
RP Fraser, G (corresponding author), Univ Sheffield, Dept Comp Sci, Sheffield, S Yorkshire, England.; Fraser, G (corresponding author), Univ Passau, Chair Software Engn 2, Passau, Germany.
EM jose.campos@sheffield.ac.uk; yge5@sheffield.ac.uk;
   nmalbunian1@sheffield.ac.uk; gordon.fraser@uni-passau.de;
   marceloeler@usp.br; andrea.arcuri@kristiania.no
RI Eler, Marcelo/C-6414-2014
OI Eler, Marcelo/0000-0001-5872-0607; Medeiros de Campos, Jose
   Carlos/0000-0001-7565-8382
FU EPSRC [EP/N023978/1]; Sao Paulo Research Foundation (FAPESP)
   [2015/26044-0]; European Research Council (ERC) under the European
   Union's Horizon 2020 research and innovation programme [694277];
   Research Council of Norway [274385]; EPSRC [EP/N023978/2, EP/N023978/1]
   Funding Source: UKRI; Fundacao de Amparo a Pesquisa do Estado de Sao
   Paulo (FAPESP) [15/26044-0] Funding Source: FAPESP
FX This work is supported by EPSRC project EP/N023978/1, Sao Paulo Research
   Foundation (FAPESP) grant 2015/26044-0, the European Research Council
   (ERC) under the European Union's Horizon 2020 research and innovation
   programme (grant agreement no. 694277) and the Research Council of
   Norway (grant agreement no. 274385).
CR Agrawal AP, 2018, DATA ENG INTELLIGENT, P397, DOI DOI 10.1007/978-981-10-3223-3_38
   Aleti A, 2017, AUTOMAT SOFTW ENG, V24, P603, DOI 10.1007/s10515-016-0197-7
   [Anonymous], 2014, P ACM IEEE INT C AUT, DOI DOI 10.1145/2642937.2642986
   [Anonymous], 2016, 2016 IEEE HIGH PERF, DOI [DOI 10.1109/HPEC.2016.7761649, DOI 10.3835/PLANTGEN0ME2015.11.0118]
   [Anonymous], LIPS VS MOSA REPLICA
   [Anonymous], EVOLUTIONARY ALGORIT
   [Anonymous], OPERATIONS RES COMPU
   [Anonymous], 2007, P 2007 INT S SOFTW T, DOI DOI 10.1145/1273463.1273475
   [Anonymous], MANY INDEPENDENT OBJ
   Arcuri Andrea, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P205, DOI 10.1109/ICST.2010.17
   Arcuri A, 2018, INFORM SOFTWARE TECH, V104, P195, DOI 10.1016/j.infsof.2018.05.003
   Arcuri A, 2017, IEEE INT CONF SOFTW, P126, DOI 10.1109/ICST.2017.19
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Basak A, 2013, 2013 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P598
   Campos J, 2017, LECT NOTES COMPUT SC, V10452, P33, DOI 10.1007/978-3-319-66299-2_3
   Daka E, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P107, DOI 10.1145/2786805.2786838
   Deb K., 2000, Parallel Problem Solving from Nature PPSN VI. 6th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1917), P849
   Doerr B, 2015, THEOR COMPUT SCI, V567, P87, DOI 10.1016/j.tcs.2014.11.028
   Fraser G., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P31, DOI 10.1109/QSIC.2011.19
   Fraser G, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685612
   Fraser G, 2013, SOFTW TEST VERIF REL, V23, P553, DOI 10.1002/stvr.1495
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gay G, 2017, IEEE INT CONF SOFTW, P345, DOI 10.1109/ICST.2017.38
   Ghani K, 2009, IEEE C EVOL COMPUTAT, P2940, DOI 10.1109/CEC.2009.4983313
   Jansen T, 2005, EVOL COMPUT, V13, P413, DOI 10.1162/106365605774666921
   Karnopp DC., 1963, Automatica, V1, P111, DOI [DOI 10.1016/0005-1098(63)90018-9, 10.1016/0005-1098(63)90018-9]
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Knowles J, 1999, P 1999 C EV COMP CEC, P98, DOI [DOI 10.1109/CEC.1999.781913, 10.1109/cec.1999.781913]
   Lam AYS, 2012, MEMET COMPUT, V4, P3, DOI 10.1007/s12293-012-0075-1
   Lam AYS, 2010, IEEE T EVOLUT COMPUT, V14, P381, DOI 10.1109/TEVC.2009.2033580
   Lopez-Herrejon RE, 2014, 2014 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P387, DOI 10.1109/CEC.2014.6900473
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Mühlenbein H, 1993, EVOL COMPUT, V1, P25, DOI 10.1162/evco.1993.1.1.25
   Nakagawa S, 2004, BEHAV ECOL, V15, P1044, DOI 10.1093/beheco/arh107
   Omar E, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1271, DOI 10.1145/2576768.2598286
   Panichella A., 2017, IEEE T SOFTWARE ENG, VPP, DOI [10.1109/TSE.2017.2663435.1-1, DOI 10.1109/TSE.2017.2663435.1-1]
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Perneger TV, 1998, BRIT MED J, V316, P1236, DOI 10.1136/bmj.316.7139.1236
   Ramírez A, 2016, EMPIR SOFTW ENG, V21, P2546, DOI 10.1007/s10664-015-9399-z
   Rechenberg I., 1978, SIMULATIONSMETHODEN, DOI 10.1007/978-3-642-81283-5_8
   Rojas Jose Miguel, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P93, DOI 10.1007/978-3-319-22183-0_7
   Rojas JM, 2017, EMPIR SOFTW ENG, V22, P852, DOI 10.1007/s10664-015-9424-2
   Rojas JM, 2016, SOFTW TEST VERIF REL, V26, P366, DOI 10.1002/stvr.1601
   Sahin O, 2016, APPL SOFT COMPUT, V49, P1202, DOI 10.1016/j.asoc.2016.09.045
   Salcedo-Sanz S, 2014, SCI WORLD J, DOI 10.1155/2014/739768
   Scalabrino S, 2016, LECT NOTES COMPUT SC, V9962, P64, DOI 10.1007/978-3-319-47106-8_5
   Shamshiri S, 2018, SOFTW TEST VERIF REL, V28, DOI 10.1002/stvr.1660
   Shamshiri S, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1367, DOI 10.1145/2739480.2754696
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Varshney S, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON COMPUTING, COMMUNICATION AND AUTOMATION (ICCCA), P796, DOI 10.1109/CCAA.2016.7813848
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
   Zitzler E, 2000, EVOL COMPUT, V8, P173, DOI 10.1162/106365600568202
NR 54
TC 55
Z9 59
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2018
VL 104
BP 207
EP 235
DI 10.1016/j.infsof.2018.08.010
PG 29
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ1PB
UT WOS:000449138900015
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Hosseinzadeh, S
   Rauti, S
   Laurén, S
   Mäkelä, JM
   Holvitie, J
   Hyrynsalmi, S
   Leppänen, V
AF Hosseinzadeh, Shohreh
   Rauti, Sampsa
   Lauren, Samuel
   Makela, Jari-Matti
   Holvitie, Johannes
   Hyrynsalmi, Sami
   Leppanen, Ville
TI Diversification and obfuscation techniques for software security: A
   systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Diversification; Obfuscation; Software security; Systematic literature
   review
ID CONTROL FLOW OBFUSCATION; SOURCE CODE OBFUSCATION; PROTECTION METHOD;
   THEORETICAL BASIS; DIVERSITY; JAVA; RANDOMIZATION; DEFENSE;
   IMPLEMENTATION; FRAMEWORK
AB Context Diversification and obfuscation are promising techniques for securing software and protecting computers from harmful malware. The goal of these techniques is not removing the security holes, but making it difficult for the attacker to exploit security vulnerabilities and perform successful attacks.
   Objective: There is an increasing body of research on the use of diversification and obfuscation techniques for improving software security; however, the overall view is scattered and the terminology is unstructured. Therefore, a coherent review gives a clear statement of state-of-the-art, normalizes the ongoing discussion and provides baselines for future research.
   Method: In this paper, systematic literature review is used as the method of the study to select the studies that discuss diversification/obfuscation techniques for improving software security. We present the process of data collection, analysis of data, and report the results.
   Results: As the result of the systematic search, we collected 357 articles relevant to the topic of our interest, published between the years 1993 and 2017. We studied the collected articles, analyzed the extracted data from them, presented classification of the data, and enlightened the research gaps.
   Conclusion: The two techniques have been extensively used for various security purposes and impeding various types of security attacks. There exist many different techniques to obfuscate/diversify programs, each of which targets different parts of the programs and is applied at different phases of software development life-cycle. Moreover, we pinpoint the research gaps in this field, for instance that there are still various execution environments that could benefit from these two techniques, including cloud computing, Internet of Things (IoT), and trusted computing. We also present some potential ideas on applying the techniques on the discussed environments.
C1 [Hosseinzadeh, Shohreh; Rauti, Sampsa; Lauren, Samuel; Makela, Jari-Matti; Holvitie, Johannes; Leppanen, Ville] Univ Turku, Dept Future Technol, Vesilinnantie 5, SF-20500 Turku, Finland.
   [Hyrynsalmi, Sami] Tampere Univ Technol, Lab Pervas Comp, Pohjoisranta 11 A, Port 28100, Finland.
C3 University of Turku; Tampere University
RP Hosseinzadeh, S (corresponding author), Univ Turku, Dept Future Technol, Vesilinnantie 5, SF-20500 Turku, Finland.
EM shohos@utu.fi; sjprau@utu.fi; smrlau@utu.fi; jmjmak@utu.fi;
   jjholv@utu.fi; sami.hyrynsalmi@tut.fi; ville.leppanen@utu.fi
RI Hyrynsalmi, Sami/U-6315-2017
OI Hyrynsalmi, Sami/0000-0002-5073-3750; Leppanen,
   Ville/0000-0001-5296-677X; Hosseinzadeh, Shohreh/0000-0002-9282-3981;
   Makela, Jari-Matti/0000-0003-0024-9992
FU Tekes - the Finnish Funding Agency for Innovation [3772/31/2014]; DIMECC
   Oy; Cyber Trust research program
FX The authors gratefully acknowledge Tekes - the Finnish Funding Agency
   for Innovation [grant number 3772/31/2014], DIMECC Oy, and the Cyber
   Trust research program for their support.
CR Abadi M, 2012, ACM T INFORM SYST SE, V15, DOI 10.1145/2240276.2240279
   Abrath B., 2016, P 6 WORKSH SOFTW SEC
   Abrath B, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE PROTECTION (SPRO), P24, DOI 10.1109/SPRO.2015.13
   Allier S, 2015, IEEE SOFTWARE, V32, P83, DOI 10.1109/MS.2014.150
   Amarilli A, 2011, LECT NOTES COMPUT SC, V6633, P1, DOI 10.1007/978-3-642-21040-2_1
   Anckaert B., 2004, P 4 ACM WORKSH DIG R, P63
   Anckaert B, 2007, LECT NOTES COMPUT SC, V4752, P153
   Anckaert B, 2009, 2009 THIRD INTERNATIONAL CONFERENCE ON EMERGING SECURITY INFORMATION, SYSTEMS, AND TECHNOLOGIES, P242, DOI 10.1109/SECURWARE.2009.44
   Anckaert B, 2007, QOP'07: PROCEEDINGS OF THE 2007 ACM WORKSHOP ON QUALITY OF PROTECTION, P15
   [Anonymous], 2001, ISC'01: Proceedings of the 4th International Conference on Information Security
   [Anonymous], 2006, Proceedings of the ACM Workshop on Digital Rights Management, DRM'06
   [Anonymous], 2015, NDSS
   [Anonymous], 2015, NDSS
   [Anonymous], 2015, CODASPY 2015 P 5 ACM, DOI DOI 10.1145/2699026.2699099
   [Anonymous], 2009, Surreptitious Software: Obfuscation, Watermarking, and Tamperproofing for Software Protection: Obfuscation, Watermarking, and Tamperproofing for Software Protection
   [Anonymous], 2013, ACM SIGSAC S INFORM
   [Anonymous], 2009, ACM S APPL COMPUTING
   Armoogum S., 2011, J INF SYST MANAG, V1, P83
   Arockiam L, 2014, INT CONF COMP COMMUN
   Avidan E, 2015, INT C PROGRAM COMPRE, P178, DOI 10.1109/ICPC.2015.27
   Aycock J., OBFUSCATION OPTIMIZA, P173
   Backes M, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P433
   BADGER L, 2002, 01036 NAI LABS
   Baiardi F., 2011, 2011 Sixth International Conference on Availability, Reliability and Security, P51, DOI 10.1109/ARES.2011.17
   Bain C, 2002, INT FED INFO PROC, V83, P77
   Bakken D. E., IEEE SECUR PRIV, V2
   Balachandran Vivek, 2013, Information Security Practice and Experience. 9th International Conference, ISPEC 2013. Proceedings, P309, DOI 10.1007/978-3-642-38033-4_22
   Balachandran V., 2013, IEEE T INF FORENSICS, V8
   Balachandran V, 2016, COMPUT SECUR, V61, P72, DOI 10.1016/j.cose.2016.05.003
   Balachandran V, 2014, IEEE SYS MAN CYBERN, P463, DOI 10.1109/SMC.2014.6973951
   Balachandran V, 2014, 2014 EIGHTH INTERNATIONAL CONFERENCE ON COMPLEX, INTELLIGENT AND SOFTWARE INTENSIVE SYSTEMS (CISIS),, P133, DOI 10.1109/CISIS.2014.20
   Balakrishnan A., 2005, TECHNICAL REPORT
   Banescu S, 2016, ANN COMPUT SECURITY, P189, DOI 10.1145/2991079.2991114
   Banescu S, 2016, SPRO'16: PROCEEDINGS OF THE 2016 ACM WORKSHOP ON SOFTWARE PROTECTION, P39, DOI 10.1145/2995306.2995312
   Banescu S, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE PROTECTION (SPRO), P45, DOI 10.1109/SPRO.2015.16
   Barrantes E. G., 2005, ACM Transactions on Information and Systems Security, V8, P3, DOI 10.1145/1053283.1053286
   Batchelder M, 2007, LECT NOTES COMPUT SC, V4420, P96
   Baudry B., 2015, CORR
   Baudry B., 2014, ISSTA
   Baudry B, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2807593
   Behera CK, 2015, PROCEDIA COMPUT SCI, V70, P757, DOI 10.1016/j.procs.2015.10.114
   Beibei Zhao, 2017, Cyberspace Safety and Security. 9th International Symposium, CSS 2017. Proceedings: LNCS 10581, P367, DOI 10.1007/978-3-319-69471-9_27
   Bertholon Benoit, 2013, 2013 IEEE International Symposium on Parallel and Distributed Processing, Workshops and PhD Forum (IPDPSW), P435, DOI 10.1109/IPDPSW.2013.234
   Bhatkar S, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 12TH USENIX SECURITY SYMPOSIUM, P105
   Bhatkar S, 2008, LECT NOTES COMPUT SC, V5137, P1, DOI [10.1007/978-3-540-70542-0_1, 10.1145/1556444.1556449]
   Bhatkar Sandeep., 2005, Proceedings of the 14th Conference on USENIX Security Symposium - Volume 14, SSYM'05, V14, P17
   Birrer Bobby D, 2007, 3 INT S INF ASS SEC, P369
   Blazy S., 2014, P 4 ACM C DATA APPL, P123, DOI [10.1145/2557547.2557577, DOI 10.1145/2557547.2557577]
   Blazy S, 2016, PROCEEDINGS OF THE 5TH ACM SIGPLAN CONFERENCE ON CERTIFIED PROGRAMS AND PROOFS (CPP'16), P176, DOI 10.1145/2854065.2854082
   Blazy S, 2015, IEEE INT WORK C SO, P111, DOI 10.1109/SCAM.2015.7335407
   Borck H, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P604, DOI 10.1109/SANER.2016.95
   Boyd SW, 2010, IEEE T DEPEND SECURE, V7, P255, DOI 10.1109/TDSC.2008.58
   Boyd SW, 2004, LECT NOTES COMPUT SC, V3089, P292
   Braden Kjell, 2016, P NETW DISTR SYST SE
   Bruschi D, 2007, IEEE IPCCC, P434, DOI 10.1109/PCCC.2007.358924
   Cadar Cristian, 2008, TECHNICAL REPORT
   Cai GL, 2016, FRONT INFORM TECH EL, V17, P1122, DOI 10.1631/FITEE.1601321
   Canavese D, 2017, LECT NOTES COMPUT SC, V10547, P193, DOI 10.1007/978-3-319-68063-7_13
   Capiluppi A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P71, DOI 10.1109/WCRE.2012.17
   Cappaert J., 2010, P 10 ANN ACM WORKSH, DOI 10.1145/1866870.1866877
   Ceccato M., 2008, QoP, P39
   Ceccato M, 2016, LECT NOTES COMPUT SC, V9962, P159, DOI 10.1007/978-3-319-47106-8_11
   Ceccato M, 2015, EMPIR SOFTW ENG, V20, P1486, DOI 10.1007/s10664-014-9321-0
   Ceccato M, 2014, EMPIR SOFTW ENG, V19, P1040, DOI 10.1007/s10664-013-9248-x
   Ceccato M, 2011, IEEE SOFTWARE, V28, P28, DOI 10.1109/MS.2010.158
   Ceccato M, 2009, INT C PROGRAM COMPRE, P178, DOI 10.1109/ICPC.2009.5090041
   Chakraborty RS, 2011, LECT NOTES COMPUT SC, V7011, P30, DOI 10.1007/978-3-642-24586-2_5
   Chan JT, 2004, J SYST SOFTWARE, V71, P1, DOI 10.1016/S0164-1212(02)00066-3
   Chen P. -Y., 2005, P WORKSH EC INF SEC, P20
   Chen P, 2013, IET INFORM SECUR, V7, P283, DOI 10.1049/iet-ifs.2012.0142
   Chen TY, 2016, COMPUTER, V49, P48, DOI 10.1109/MC.2016.176
   Chen X, 2017, 2017 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P), P514, DOI 10.1109/EuroSP.2017.17
   Chen Y, 2016, CODASPY'16: PROCEEDINGS OF THE SIXTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY, P50, DOI 10.1145/2857705.287726
   Chew M., 2002, Technical report
   Cho S, 2008, LECT NOTES COMPUT SC, V5287, P406
   Cho T, 2017, IEEE ACCESS, V5, P6361, DOI 10.1109/ACCESS.2017.2693388
   Christodorescu M, 2011, ADV INFORM SECUR, V54, P117
   Clarke D, 2012, SYM REL DIST SYST, P121, DOI 10.1109/SRDS.2012.32
   Coffman J, 2016, SPRO'16: PROCEEDINGS OF THE 2016 ACM WORKSHOP ON SOFTWARE PROTECTION, P15, DOI 10.1145/2995306.2995309
   Cohen F. B., 1993, Computers & Security, V12, P565, DOI 10.1016/0167-4048(93)90054-9
   Collberg C., 2003, IEEE Security & Privacy, V1, P40, DOI 10.1109/MSECP.2003.1219058
   Collberg C., 1998, Conference Record of POPL '98: 25th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P184, DOI 10.1145/268946.268962
   Collberg C, 1998, 1998 INTERNATIONAL CONFERENCE ON COMPUTER LANGUAGES, PROCEEDINGS, P28, DOI 10.1109/ICCL.1998.674154
   Collberg C., 1997, TAXONOMY OBFUSCATING
   Collberg C, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P319
   Collberg CS, 2002, IEEE T SOFTWARE ENG, V28, P735, DOI 10.1109/TSE.2002.1027797
   Conti Mauro, 2016, Proceedings on Privacy Enhancing Technologies, V2016, P454, DOI 10.1515/popets-2016-0050
   Coppens B, 2013, IEEE SECUR PRIV, V11, P47, DOI 10.1109/MSP.2012.113
   Coppens B, 2013, ACM T ARCHIT CODE OP, V9, DOI 10.1145/2400682.2400683
   Coppens B, 2009, P IEEE S SECUR PRIV, P45, DOI 10.1109/SP.2009.19
   Costa R, 2012, P INT C WIR NETW ICW, P68
   Cox B, 2006, USENIX Association Proceedings of the 15th USENIX Security Symposium, P105
   Crane S, 2016, 2016 IEEE CYBERSECURITY DEVELOPMENT (IEEE SECDEV 2016), P124, DOI [10.1109/SecDev.2016.13, 10.1109/SecDev.2016.036]
   Crane S, 2013, PROCEEDINGS OF THE 2013 NEW SECURITY PARADIGMS WORKSHOP (NSPW'13), P95, DOI 10.1145/2535813.2535824
   Crane S, 2015, P IEEE S SECUR PRIV, P763, DOI 10.1109/SP.2015.52
   Cu QJ, 2010, WISEC 10: PROCEEDINGS ON THE THIRD ACM CONFERENCE ON WIRELESS NETWORK SECURITY, P145
   D'Anna L., 2003, 03015 NETW ASS LAB
   Dahn C, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P323, DOI 10.1109/WCRE.2003.1287263
   Darwish SM, 2010, ICCES'2010: THE 2010 INTERNATIONAL CONFERENCE ON COMPUTER ENGINEERING & SYSTEMS, P93, DOI 10.1109/ICCES.2010.5674830
   Davi Lucas., 2015, Isomeron: Code Randomization Resilient to (just-in-time) Return-oriented Programming
   De Keulenaer R, 2016, INT J INF SECUR, V15, P111, DOI 10.1007/s10207-015-0282-0
   De Sutter B, 2009, LECT NOTES COMPUT SC, V5461, P152, DOI 10.1007/978-3-642-00730-9_10
   Demissie BF, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE PROTECTION (SPRO), P38, DOI 10.1109/SPRO.2015.15
   Dolz D, 2008, J COMPUT SCI TECHNOL, V8, P71
   Drape S., 2006, P TENCON IEEE REG 10, P1
   Drape S., 2007, TECHNICAL REPORT
   Drape S., 2009, TECHNICAL REPORT
   Drape S., 2004, THESIS
   Drape S, 2007, 6TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE, PROCEEDINGS, P1019, DOI 10.1109/ICIS.2007.167
   Drape S, 2007, INFORM SCIENCES, V177, P202, DOI 10.1016/j.ins.2006.03.012
   Drape Stephen., 2002, PPDP 02, P133
   Dunaev Dmitriy, 2013, 2013 3rd Eastern European Regional Conference on the Engineering of Computer-Based Systems, P138, DOI 10.1109/ECBS-EERC.2013.25
   DuVarney D.C., 2003, Proceedings of the 2003 Workshop on New Security Paradigms, P29
   Ertaul L, 2005, SERP '05: PROCEEDINGS OF THE 2005 INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P209
   Ertaul Levent., 2004, IASTED Conf. on Software Engineering and Applications, P133
   Evans D., MOVING TARGET DEFENS, P29
   Falcarin P., 2011, 2011 World Congress on Internet Security (WorldCIS-2011), P114
   Fang H, 2011, LECT NOTES COMPUT SC, V7001, P168, DOI 10.1007/978-3-642-24861-0_12
   Fedler R., P 34 INT C COMP SAF, P362
   Foket C, 2014, IEEE T DEPEND SECURE, V11, P553, DOI 10.1109/TDSC.2014.2305990
   Forrest S, 1997, SIXTH WORKSHOP ON HOT TOPICS IN OPERATING SYSTEMS, PROCEEDINGS, P67, DOI 10.1109/HOTOS.1997.595185
   Franchetti MJ, 2013, IND INNOV SER, P1, DOI 10.1111/ina.12055
   Franz Michael., 2010, Proceedings of the 2010 Workshop on New Security Paradigms, NSPW '10, P7, DOI DOI 10.1145/1900546.1900550
   Fukushima Kazuhide, 2009, 2009 International Conference on Computational Science and Engineering (CSE), P665, DOI 10.1109/CSE.2009.20
   Fukushima K., 2006, INF MEDIA TECHNOL, V1
   Ge Jun., 2005, DRM'05: Proceedings of the 5th ACM workshop on Digital rights management, P83
   Géraud R, 2017, LECT NOTES COMPUT SC, V10674, P265, DOI 10.1007/978-3-319-70290-2_16
   Ghosh S, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE PROTECTION (SPRO), P10, DOI 10.1109/SPRO.2015.11
   Giacobazzi R., 2012, PEPM, P63, DOI DOI 10.1145/2103746.2103761
   Gionta J, 2016, IEEE CONF COMM NETW, P189, DOI 10.1109/CNS.2016.7860485
   Giuffrida C., 2012, Presented as part of the 21st USENIX Security Symposium (USENIX Security 12), P475
   Goto H, 2001, LECT NOTES COMPUT SC, V2119, P145
   Goto H., P INF SEC 3 INT WORK, P82
   GroSS T., 2017, Proceedings of the 4th Workshop on Security in Highly Connected IT Systems, P1
   Gupta A, 2013, Network and System Security-7th International Conference, NSS 2013, Madrid, Spain, June 3-4, 2013. Proceedings, P293, DOI [DOI 10.1007/978-3-642-38631-2_22, 10.1007/978-3-642-38631-2_22]
   Gupta A, 2013, IEEE CONF COMM NETW, P423, DOI 10.1109/CNS.2013.6682756
   Halevi S, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P783, DOI 10.1145/3133956.3133976
   Han J, 2009, LECT NOTES COMPUT SC, V5587, P127, DOI 10.1007/978-3-642-02918-9_8
   Han S, 2014, INT CONF COMPUT INFO, P399, DOI 10.1109/CIT.2014.104
   Hataba M., 2012, 2012 Seventh International Conference on P2P, Parallel, Grid, Cloud and Internet Computing (3PGCIC 2012), P369, DOI 10.1109/3PGCIC.2012.18
   Hataba M., 2015, P INT WORKSH DYN COM
   Hataba M, 2015, IEEE INT CON DIS, P120, DOI 10.1109/ICDCSW.2015.37
   Heffner K, 2004, LECT NOTES COMPUT SC, V3225, P428
   Heiderich M., 2011, WEB APPL OBFUSCATION
   Hiser J, 2012, P IEEE S SECUR PRIV, P571, DOI 10.1109/SP.2012.39
   Hohl F., 1998, Mobile agents and security, P92
   Holder W, 2017, PROCEEDINGS OF THE 7TH SOFTWARE SECURITY, PROTECTION, AND REVERSE ENGINEERING WORKSHOP 2017 (SSPREW), DOI 10.1145/3151137.3151140
   Hole KJ, 2015, IEEE SECUR PRIV, V13, P40, DOI 10.1109/MSP.2015.73
   Hole KJ, 2015, IEEE SECUR PRIV, V13, P48, DOI 10.1109/MSP.2013.48
   Holler A., P 7 INT WORKSH SOFTW, P16
   Homescu Andrei, 2017, IEEE Transactions on Dependable and Secure Computing, V14, P158, DOI 10.1109/TDSC.2015.2433252
   Homescu A., 2013, Proceedings of the ACM Conference on Computer and Communications Security (CCS), P993
   Hosseini SA, 2015, COMP COMM SEC ICCCS, P1, DOI DOI 10.1177/1464420715588218
   Hosseinzadeh Shohreh, 2017, Enterprise Security. Second International Workshop, ES 2015. Revised Selected Papers: LNCS 10131, P179, DOI 10.1007/978-3-319-54380-2_8
   Hosseinzadeh S., 2016, Internet of Things Principles and Paradigms, P259
   Hosseinzadeh S, 2016, COMPUTER SYSTEMS AND TECHNOLOGIES, COMPSYSTECH'16, P113, DOI 10.1145/2983468.2983479
   Hosseinzadeh S, 2015, INT CONF CLOUD COMP, P529, DOI 10.1109/CloudCom.2015.29
   Hou TW, 2006, IEE P-SOFTW, V153, P80, DOI 10.1049/ip-sen:20050010
   Hu JD, 2009, I C COMM SOFTW NET, P645, DOI 10.1109/ICCSN.2009.46
   Huang C, 2014, LECT NOTES COMPUT SC, V8566, P114, DOI 10.1007/978-3-662-43936-4_8
   Huang Y, 2011, ADV INFORM SECUR, V54, P131
   Huang YL, 2012, COMPUT SECUR, V31, P886, DOI 10.1016/j.cose.2012.08.003
   Hunt J., 1999, JAVA PRACTITIONERS P, P427
   Ismanto R.N., 2017, P 2017 7 INT C COMMU, P18
   Jackson T., 2013, MOVING TARGET DEFENS, P151
   Jackson T, 2011, ADV INFORM SECUR, V54, P77
   Jacob M, 2008, LECT NOTES COMPUT SC, V5312, P100, DOI 10.1007/978-3-540-89598-5_7
   Jakubowski MH, 2009, SECRYPT 2009: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SECURITY AND CRYPTOGRAPHY, P359
   Jakubowski MH, 2009, LECT NOTES COMPUT SC, V5824, P125, DOI 10.1007/978-3-642-04846-3_9
   Jangda Abhinav., 2015, Proceedings of the Second ACM Workshop on Moving Target Defense, P49, DOI DOI 10.1145/2808475.2808487
   Jiang XX, 2007, SYM REL DIST SYST, P209, DOI 10.1109/SRDS.2007.36
   Johansson B, 2017, PROCEEDINGS OF THE 7TH SOFTWARE SECURITY, PROTECTION, AND REVERSE ENGINEERING WORKSHOP 2017 (SSPREW), DOI 10.1145/3151137.3151139
   Joshi HP, 2015, IEEE SARNOFF SYMPOS, P161, DOI 10.1109/SARNOF.2015.7324662
   Junod P, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE PROTECTION (SPRO), P3, DOI 10.1109/SPRO.2015.10
   Kanani P, 2017, 2017 2ND INTERNATIONAL CONFERENCE ON COMMUNICATION SYSTEMS, COMPUTING AND IT APPLICATIONS (CSCITA), P11, DOI 10.1109/CSCITA.2017.8066544
   Kanter M, 2013, 2013 IEEE INTERNATIONAL CONFERENCE ON TECHNOLOGIES FOR HOMELAND SECURITY (HST), P396, DOI 10.1109/THS.2013.6699037
   Kanzaki Y, 2006, ELECTRON COMM JPN 3, V89, P47, DOI 10.1002/ecjc.20141
   Kanzaki Y, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P170, DOI 10.1109/CMPSAC.2003.1245338
   Kanzaki Y., 2015, P 5 PROGR PROT REV E
   Karnick M, 2006, PROCEEDINGS OF THE 10TH IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND APPLICATIONS, P166
   Kc G. S., 2003, Proceedings of the 10th ACM conference on Computer and communications security (CCS '03), P272
   Keromytis A. D., 2005, TECHNICAL REPORT
   Kil C, 2006, ANN COMPUT SECURITY, P339, DOI 10.1109/ACSAC.2006.9
   Kinoshita Y, 2007, ADVANCES IN INFORMATION PROCESSING AND PROTECTION, P263, DOI 10.1007/978-0-387-73137-7_23
   Kisserli N., 2007, SOFTWARE SECURITY TA, P10
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V3, P1
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Knight J. C., 2007, TECHNICAL REPORT
   Knight J. C., DEPENDABLE HISTORIC, P298
   Koivunen L, 2016, PROCEEDINGS OF 2016 INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND ASSURANCE (ICSSA), P1, DOI 10.1109/ICSSA.2016.7
   Koo H, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P23, DOI 10.1145/2897845.2897863
   Kovacheva A., 2013, P ADV INF TECHN 6 IN, P104
   Kuang KY, 2016, IEEE TRUST BIG, P489, DOI [10.1109/TrustCom.2016.100, 10.1109/TrustCom.2016.0101]
   Kulkarni A, 2014, 2014 IEEE 8TH INTERNATIONAL SYMPOSIUM ON SERVICE ORIENTED SYSTEM ENGINEERING (SOSE), P409, DOI 10.1109/SOSE.2014.57
   Kulkarni Aniket., 2014, P 22 INT C PROGRAM C, P295
   Laperdrix P, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P98, DOI 10.1109/SEAMS.2015.18
   Larsen P, 2015, IEEE SECUR PRIV, V13, P30, DOI 10.1109/MSP.2015.23
   Larsen P, 2014, P IEEE S SECUR PRIV, P276, DOI 10.1109/SP.2014.25
   Larsen P, 2014, IEEE SECUR PRIV, V12, P28, DOI 10.1109/MSP.2013.129
   LASZLO T, 2009, SECTIO COMPUTATORICA, V30, P3
   Lauren S., 2015, P 16 INT C COMP SYST, P284
   Laurén S, 2016, ACM PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ECSA-W), DOI 10.1145/2993412.2993417
   Laurén S, 2014, WOR CONGR INTERNET, P74, DOI 10.1109/WorldCIS.2014.7028170
   LeDoux C., 2012, P 50 ANN SE REG C TU, P130
   Lee B., 2010, P 5 ACM S INF COMP C, P271
   Li ZQ, 2019, IEEE T SOFTWARE ENG, V45, P391, DOI 10.1109/TSE.2017.2780222
   Liaw HT, 2014, SOFTWARE PRACT EXPER, V44, P1077, DOI 10.1002/spe.2193
   Liem C, 2008, PLAS'08: PROCEEDINGS OF THE ACM SIGPLAN THIRD WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY, P33, DOI 10.1145/1375696.1375702
   Lim Kyeonghwan, 2017, INT C RES AD CONV SY, P217, DOI [10.1145/3129676.3129708, DOI 10.1145/3129676.3129708]
   Lin ZQ, 2009, LECT NOTES COMPUT SC, V5587, P107
   Linger R. C., 1999, P 32 ANN HAW INT C, P1
   Linn C., 2003, P 10 ACM C COMP COMM, P290, DOI DOI 10.1145/948109.948149
   Liu H, 2017, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2017.28
   Liu H, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P680, DOI 10.1145/2889160.2891040
   Liu WW, 2016, 2016 2ND IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND COMMUNICATIONS (ICCC), P1397, DOI 10.1109/CompComm.2016.7924933
   Lu K., 2014, P 4 ACM C DAT APPL S, P265, DOI [10.1145/2557547.2557572, DOI 10.1145/2557547.2557572]
   Lu K., 2016, P NDSS 2016 INT SOC
   Macbride J., 2005, Proceedings of the IASTED International Conference on Software Engineering and Applications SEA 2005, P14
   Madou M., 2006, Proceedings of the 2006 International Conference on Software Engineering Research and Practice and Conference on Programming Languages and Compilers SERP'06, P527
   Madou M, 2006, LECT NOTES COMPUT SC, V3786, P194
   Madou M., 2006, THESIS
   Mahmood K, 2016, 2016 IEEE 3RD WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P329, DOI 10.1109/WF-IoT.2016.7845457
   Main A., 2003, CA Patent App, Patent No. [CA 2,363,795, 2363795]
   Maisuradze G, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P139
   Majumdar A, 2005, LECT NOTES ARTIF INT, V3683, P1065
   Majumdar Anirban, 2006, ADCOM 2006: Autonomic Computing Fourteenth International Conference on Advanced Computing and Communications, P605
   Majumdar A, 2006, LECT NOTES COMPUT SC, V4332, P353
   Majumdar A, 2007, DRM'07: PROCEEDINGS OF THE 2007 ACM WORKSHOP ON DIGITAL RIGHTS MANAGEMENT, P70
   Majumdar Anirban., 2006, Proceedings of the 29th Australasian Computer Science Conference ACSC 2006, P187
   Maki P., 2016, P IEEE ACM 9 INT C U, P304
   Mallett R, 2012, J DEV EFFECT, V4, P445, DOI 10.1080/19439342.2012.711342
   Manikyam R., 2016, P 6 WORKSH SOFTW SEC
   Marco D. d. A. H., 2013, P EM TRENDS ICT SEC
   Mavrogiannopoulos N, 2011, COMPUT SECUR, V30, P679, DOI 10.1016/j.cose.2011.08.007
   Memon JM, 2006, SECOND INTERNATIONAL CONFERENCE ON EMERGING TECHNOLOGIES 2006, PROCEEDINGS, P689, DOI 10.1109/ICET.2006.335944
   Michael C. C., 2000, P DARPA INF SURV C E, P1220
   Mohsen R, 2016, LECT NOTES COMPUT SC, V9482, P174, DOI 10.1007/978-3-319-30303-1_11
   Monden A., 2003, NAISTISTR2003013 GRA
   Monden Akito, 2004, P 2 WORKSH AUSTR INF, V32, P7
   Morton M, 2017, LECT NOTES COMPUT SC, V10379, P143, DOI 10.1007/978-3-319-62105-0_10
   Murphy M., 2014, Proceedings of the 1st ACM Workshop on Moving Target Defense, MTD '14, P87
   Naeem NA, 2007, INT C PROGRAM COMPRE, P253
   Nasim F., P 1 INT C COD CRYPT, P297
   Nguyen-Tuong A, 2008, I C DEPEND SYS NETWO, P187, DOI 10.1109/DSN.2008.4630087
   Nurmukhametov AR, 2015, PROGRAM COMPUT SOFT+, V41, P231, DOI 10.1134/S0361768815040052
   Ogiso T, 2003, IEICE T FUND ELECTR, VE86A, P176
   Ogiso T., 2002, P INT WORKSH INF SEC, P437
   Okhravi Hamed, 2014, Research in Attacks, Intrusions and Defenses. 17th International Symposium (RAID 2014). Proceedings: LNCS 8688, P405, DOI 10.1007/978-3-319-11379-1_20
   Okhravi H, 2014, IEEE SECUR PRIV, V12, P16, DOI 10.1109/MSP.2013.137
   Omar R, 2014, SCC'14: PROCEEDINGS OF THE 2ND INTERNATIONAL WORKSHOP ON SECURITY IN CLOUD COMPUTING, P51, DOI 10.1145/2600075.2600080
   Ourfina L., 2012, KYBERNETIKA, V48
   Palanques M, 2012, SYM REL DIST SYST, P402, DOI 10.1109/SRDS.2012.64
   Pappas V., 2013, Moving Target Defense II - Application of Game Theory and Adversarial Modeling, P175
   Pappas V, 2012, P IEEE S SECUR PRIV, P601, DOI 10.1109/SP.2012.41
   Park Younghee., 2012, Proceedings of the 7th ACM Symposium on Information, Computer and Communications Security, P93
   Pastrana Sergio, 2016, Detection of Intrusions and Malware, and Vulnerability Assessment. 13th International Conference, DIMVA 2016. Proceedings: LNCS 9721, P58, DOI 10.1007/978-3-319-40667-1_4
   Pawlowski Andre, 2016, Detection of Intrusions and Malware, and Vulnerability Assessment. 13th International Conference, DIMVA 2016. Proceedings: LNCS 9721, P165, DOI 10.1007/978-3-319-40667-1_9
   Peng Y, 2017, CHINA COMMUN, V14, P247, DOI 10.1109/CC.2017.8233664
   Peng Y, 2016, INT CONF CLOUD COMPU, P94, DOI 10.1109/CCIS.2016.7790231
   Petke J, 2016, PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'16 COMPANION), P1135, DOI 10.1145/2908961.2931689
   Piao YX, 2016, SECUR COMMUN NETW, V9, P457, DOI 10.1002/sec.936
   Pomonis M, 2017, PROCEEDINGS OF THE TWELFTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS (EUROSYS 2017), P420, DOI 10.1145/3064176.3064216
   Popov I. V., 2007, P 16 USENIX SEC S US
   Portokalidis G, 2010, 26TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2010), P41
   Portokalidis G, 2011, ADV INFORM SECUR, V54, P49
   Praveen S., 2007, P WORLD AC SCI ENG T, V21
   Protsenko M., TRUST PRIVACY SECURI, P99
   Protsenko M, 2015, PROCEEDINGS 10TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY ARES 2015, P129, DOI 10.1109/ARES.2015.98
   Pu C., 1996, ICMAS WORKSH IMM BAS
   Pucella R., 2006, 19th IEEE Computer Security Foundations Workshop
   Qin JC, 2008, ISCSCT 2008: INTERNATIONAL SYMPOSIUM ON COMPUTER SCIENCE AND COMPUTATIONAL TECHNOLOGY, VOL 1, PROCEEDINGS, P451, DOI 10.1109/ISCSCT.2008.48
   Qing S., 2012, P 7 INT C COMP SCI E, P1093
   Rauti S., P TRUST SYST 6 INT C, P15
   Rauti S., 2014, P 15 INT C COMP SYST, P286
   Rauti S., 2012, Proceedings of the 13th International Conference on Computer Systems and Technologies, P251
   Rauti S, 2014, INT J INF TECHNOL SE, V6, P39
   Rauti S, 2016, LECT NOTES COMPUT SC, V10014, P152, DOI 10.1007/978-3-319-47560-8_10
   Ring S, 2004, IEEE SECUR PRIV, V2, P38, DOI 10.1109/MSP.2004.57
   Rodes B, 2012, PROC INT CONF SOFTW, P1543, DOI 10.1109/ICSE.2012.6227041
   Roeder T, 2010, ACM T COMPUT SYST, V28, DOI 10.1145/1813654.1813655
   Rusu D., 2003, P NETW ED RES INT C, P214
   Sahin C, 2014, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSME.2014.35
   Sakabe Y, 2003, LECT NOTES COMPUT SC, V2828, P89
   Sakabe Y, 2006, INFORM MEDIA TECHNOL, V1, P134
   Samawi V, 2013, INT ARAB J INF TECHN, V10, P587
   Saputra H, 2004, ACM SIGPLAN NOTICES, V39, P240, DOI 10.1145/998300.997198
   Schrittwieser S., 2011, Code Obfuscation against Static and Dynamic Reverse Engineering, P270
   Schrittwieser S, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2886012
   Sebastian S, 2016, WORLD C FUTURISTIC T, P1
   Seibert J, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P54, DOI 10.1145/2660267.2660309
   Shacham H., 2004, ACM COMPUTER COMMUNI, P298, DOI 10.1145/1030083.1030124
   Shah P., 2002, 578 ECE COMP NETW SE
   Shan L, 2011, J SIGNAL PROCESS SYS, V65, P105, DOI 10.1007/s11265-010-0548-8
   Shevtsova OO, 2009, SIBCON-2009: INTERNATIONAL SIBERIAN CONFERENCE ON CONTROL AND COMMUNICATIONS, P113, DOI 10.1109/SIBCON.2009.5044838
   Sivadasan P., 2008, ARXIV08074309
   Sivadasan P., 2011, P INT C INF NETW TEC
   Sivadasan P., 2012, CORR
   Sivadasan P., 2009, P 2 BANG ANN COMP C
   Sivadasan P., 2009, CORR
   Skoudis Ed., 2004, MALWARE FIGHTING MAL
   Sosonkin Mikhail., 2003, P 2003 ACM WORKSHOP, P142, DOI 10.1145/947380.947399
   Spradlin J., 2012, US Patent App, Patent No. [12/ 972,433, 12972433]
   Stang D.M., 2013, Provenance, offset equivalent and palinspastic reconstruction of the Miocene Cajon Valley Formation, southern California, P1
   Stewart M., 2013, CORR
   Styugin M., 2016, P IEEE 10 INT C APPL, P1
   Tam V, 2000, PROCEEDINGS OF THE FIRST INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS ENGINEERING, VOL I, P153, DOI 10.1109/WISE.2000.882387
   Tamada H., 2012, Proceedings of the 2012 13th ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel & Distributed Computing (SNPD 2012), P498, DOI 10.1109/SNPD.2012.32
   Tamada Haruaki, 2008, Proceedings of the IASTED International Conference on Software Engineering, as part of the 26th IASTED International Multi-Conference on Applied Informatics, P125
   Tamboli T, 2014, J COMPUT VIROL HACKI, V10, P177, DOI 10.1007/s11416-013-0194-3
   Tang XX, 2017, LECT NOTES COMPUT SC, V10157, P333, DOI 10.1007/978-3-319-53177-9_18
   Tello Brady, 2015, SIMULTECH 2015 - 5th International Conference on Simulation and Modeling Methodologies, Technologies and Applications. Proceedings, P36
   Teng Long, 2010, Proceedings of the 2010 Fifth International Conference on Frontier of Computer Science and Technology (FCST 2010), P246, DOI 10.1109/FCST.2010.85
   Thompson W, 2004, PARALLEL AND DISTRIBUTED COMPUTING SYSTEMS, P516
   Tiella R, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P182, DOI 10.1109/SANER.2017.7884620
   Togan M., 2017, 2017 9 INT C EL COMP, P1
   Totel E, 2006, LECT NOTES COMPUT SC, V3858, P43
   Tsai HY, 2009, IEEE T INF FOREN SEC, V4, P257, DOI 10.1109/TIFS.2008.2011077
   Tunc C, 2014, 2014 INTERNATIONAL CONFERENCE ON CLOUD AND AUTONOMIC COMPUTING (ICCAC 2014), P44, DOI 10.1109/ICCAC.2014.35
   Uitto J., 2016, P 11 ANN CYB INF SEC
   van Oorschot PC, 2003, LECT NOTES COMPUT SC, V2851, P1
   Veeranna N., 2017, P LATS, P1
   Viticchié A, 2016, IEEE INT WORK C SO, P11, DOI 10.1109/SCAM.2016.17
   Vrba Z, 2010, FIFTH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY: ARES 2010, PROCEEDINGS, P242, DOI 10.1109/ARES.2010.47
   Wang C., 2000, Technical Report
   Wang PP, 2016, AER ADV ENG RES, V95, P128
   Wang S, 2017, PROC IEEE INT CONF S, P284, DOI 10.1109/ICSME.2017.61
   Wang YZ, 2015, COMPUT SECUR, V52, P106, DOI 10.1016/j.cose.2015.04.005
   Wartell R., 2012, Proceedings of the 2012 ACM conference on Computer and communications security, P157
   Wayner P., 2009, DISAPPEARING CRYPTOG, V3
   Williams D, 2009, IEEE SECUR PRIV, V7, P26, DOI 10.1109/MSP.2009.18
   Williams-King D, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P367
   Witkowska J, 2006, BioMetrics, Computer Security Systems and Artificial Intelligence Applications, P175, DOI 10.1007/978-0-387-36503-9_16
   Wroblewski Gregory, 2002, THESIS
   Wu JH, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON ROBOTICS AND BIOMIMETICS, VOLS 1-5, P2013, DOI 10.1109/ROBIO.2007.4522476
   Wu JH, 2009, ICCSSE 2009: PROCEEDINGS OF 2009 4TH INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE & EDUCATION, P380, DOI 10.1109/ICCSE.2009.5228424
   Wu M., 2016, P 21 OPT COMM C 2016, P1
   Wu R, 2012, 2012 SEVENTH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES), P143, DOI 10.1109/ARES.2012.11
   Wu YD, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON INTERNET OF THINGS (ITHINGS) AND IEEE GREEN COMPUTING AND COMMUNICATIONS (GREENCOM) AND IEEE CYBER, PHYSICAL AND SOCIAL COMPUTING (CPSCOM) AND IEEE SMART DATA (SMARTDATA), P115, DOI 10.1109/iThings-GreenCom-CPSCom-SmartData.2016.45
   Xiang GL, 2010, PROCEEDINGS OF THE NINTH INTERNATIONAL SYMPOSIUM ON DISTRIBUTED COMPUTING AND APPLICATIONS TO BUSINESS, ENGINEERING AND SCIENCE (DCABES 2010), P479, DOI 10.1109/DCABES.2010.104
   Xiao SC, 2009, P INT COMP SOFTW APP, P383, DOI 10.1109/COMPSAC.2009.58
   Xie X, 2016, IET INFORM SECUR, V10, P18, DOI 10.1049/iet-ifs.2013.0137
   Xie X, 2014, LECT NOTES COMPUT SC, V8588, P520, DOI 10.1007/978-3-319-09333-8_58
   Xu DP, 2016, LECT NOTES COMPUT SC, V9866, P323, DOI 10.1007/978-3-319-45871-7_20
   Xu H., 2016, P 2 ACM INT WORKSH C, P22
   Xu HZ, 2009, J COMPUT SECUR, V17, P331, DOI 10.3233/JCS-2009-0322
   Xu J, 2003, SYM REL DIST SYST, P260
   Xuesong Zhang, 2010, Convergence and Hybrid Information Technologies, P277
   Yamauchi H, 2006, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTER SCIENCE AND TECHNOLOGY, P286
   Yan Zhuang, 2014, 2014 25th International Workshop on Database and Expert Systems Applications (DEXA), P313, DOI 10.1109/DEXA.2014.69
   Yang Le, 2012, 2012 International Conference on Computer Science and Service System (CSSS), P50, DOI 10.1109/CSSS.2012.21
   Yao XL, 2012, INT C MULTIMED INFO, P336, DOI 10.1109/MINES.2012.25
   Yau S. S., 2010, P 2 AS PAC S INT INT
   Yi D, 2009, 2009 WRI WORLD CONGRESS ON SOFTWARE ENGINEERING, VOL 4, PROCEEDINGS, P379, DOI 10.1109/WCSE.2009.402
   Yuan Yu Wei, 2010, Proceedings 2010 International Multiconference on Computer Science and Information Technology (IMCSIT 2010), P775
   Zambon A., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P114, DOI 10.1109/SCAM.2012.14
   Zhang C, 2013, P IEEE S SECUR PRIV, P559, DOI 10.1109/SP.2013.44
   Zhang MW, 2017, ANN COMPUT SECURITY, P128, DOI 10.1145/3134600.3134634
   Zhang XS, 2008, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON INFORMATION SECURITY AND ASSURANCE, P360, DOI 10.1109/ISA.2008.49
   Zhang YJ, 2016, 2016 INTERNATIONAL CONFERENCE ON CYBER-ENABLED DISTRIBUTED COMPUTING AND KNOWLEDGE DISCOVERY PROCEEDINGS - CYBERC 2016, P1, DOI 10.1109/CyberC.2016.10
   Zhangyong Tang, 2009, 2009 Fourth International Conference on Innovative Computing, Information and Control (ICICIC 2009), P1067, DOI 10.1109/ICICIC.2009.312
   Zhi Wang, 2012, Proceedings of the 2012 IEEE 36th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW), P553, DOI 10.1109/COMPSACW.2012.102
   Zhu CZ, 2005, LECT NOTES COMPUT SC, V3619, P1263
   Zhu W, 2007, THESIS
   Zhu W, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GRANULAR COMPUTING, P770, DOI 10.1109/GRC.2006.1635914
NR 364
TC 47
Z9 57
U1 2
U2 30
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2018
VL 104
BP 72
EP 93
DI 10.1016/j.infsof.2018.07.007
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ1PB
UT WOS:000449138900005
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU López, J
   Kushik, N
   Yevtushenko, N
AF Lopez, Jorge
   Kushik, Natalia
   Yevtushenko, Nina
TI Source code optimization using equivalent mutants
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Program / code optimization; Mutation (software) testing
AB Context: A mutant is a program obtained by syntactically modifying a program's source code; an equivalent mutant is a mutant, which is functionally equivalent to the original program. Mutants are primarily used in mutation testing, and when deriving a test suite, obtaining an equivalent mutant is considered to be highly negative, although these equivalent mutants could be used for other purposes.
   Objective: We present an approach that considers equivalent mutants valuable, and utilizes them for source code optimization. Source code optimization enhances a program's source code preserving its behavior.
   Method: We showcase a procedure to achieve source code optimization based on equivalent mutants and discuss proper mutation operators.
   Results: Experimental evaluation with Java and C programs demonstrates the applicability of the proposed approach.
   Conclusion: An algorithmic approach for source code optimization using equivalent mutants is proposed. It is showcased that whenever applicable, the approach can outperform traditional compiler optimizations.
C1 [Lopez, Jorge; Kushik, Natalia] Univ Paris Saclay, CNRS, SAMOVAR, Telecom SudParis, 9 Rue Charles Fourier, F-91000 Evry, France.
   [Yevtushenko, Nina] Russian Acad Sci, Ivannikov Inst Syst Programming, 25 Alexander Solzhenitsyn St, Moscow 109004, Russia.
C3 Universite Paris Cite; Universite Paris Saclay; IMT - Institut
   Mines-Telecom; Institut Polytechnique de Paris; Telecom SudParis;
   Institut Mines-Telecom Business School; Centre National de la Recherche
   Scientifique (CNRS); Ivannikov Institute for System Programming of the
   RAS; Russian Academy of Sciences
RP López, J (corresponding author), Univ Paris Saclay, CNRS, SAMOVAR, Telecom SudParis, 9 Rue Charles Fourier, F-91000 Evry, France.
EM jorge.lopez@telecom-sudparis.eu; natalia.kushik@telecom-sudparis.eu;
   evtushenko@ispras.ru
RI López, Jorge Eduardo/HJA-7565-2022; Kushik, Natalia G./P-1756-2014;
   Yevtushenko, Nina/HFZ-9351-2022
OI Kushik, Natalia/0000-0002-8691-6655
CR [Anonymous], ADV COMPUTERS
   [Anonymous], 2006, COMPILERS PRINCIPLES
   Arcaini P, 2017, INFORM SOFTWARE TECH, V81, P52, DOI 10.1016/j.infsof.2016.01.019
   Dorofeeva R, 2010, INFORM SOFTWARE TECH, V52, P1286, DOI 10.1016/j.infsof.2010.07.001
   Grün BJM, 2009, IEEE ICST WORKSHOP, P192, DOI 10.1109/ICSTW.2009.37
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Papadakis M., 2015, 2015 IEEE ACM 37 IEE, V1, P936
NR 7
TC 9
Z9 9
U1 1
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2018
VL 103
BP 138
EP 141
DI 10.1016/j.infsof.2018.06.013
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GU9ZY
UT WOS:000445717000009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Younas, M
   Jawawi, DNA
   Ghani, I
   Fries, T
   Kazmi, R
AF Younas, Muhammad
   Jawawi, Dayang N. A.
   Ghani, Imran
   Fries, Terrence
   Kazmi, Rafaqut
TI Agile development in the cloud computing environment: A systematic
   review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Agile; Agile software development; Agile methodology; Cloud computing;
   Systematic review
AB Background: Agile software development is based on a set of values and principles. The twelve principles are inferred from agile values. Agile principles are composition of evolutionary requirement, simple design, continuous delivery, self-organizing team and face-to-face communication. Due to changing market demand, agile methodology faces problems such as scalability, more effort and cost required in setting up hardware and software infrastructure, availability of skilled resource and ability to build application from multiple locations. Twelve (12) principles may be practiced more appropriately with the support of cloud computing. This merger of agile and cloud computing may provide infrastructure optimization and automation benefits to agile practitioners.
   Objective: This Systematic Literature Review (SLR) identifies the techniques employed in cloud computing environment that are useful for agile development. In addition, SLR discusses the significance of cloud and its challenges.
   Method: By applying the SLR procedure, the authors select thirty-seven (37) studies out of six-hundred-forty-seven (647) from 2010 to 2017.
   Result: The result of SLR shows that the techniques using existing tools were reported in 35%, simulations in 20% and application developed in 15% of the studies. Evaluation of techniques was reported in 32% of the studies. The impact of cloud computing was measured by the classification of four major categories such as transparency 32%, collaboration 50%, development infrastructure 29% and cloud quality attributes in 39%. Furthermore, a large number of tools were reported in primary studies. The challenges posed by cloud adoption in agile was reported as interoperability 13%, security & privacy 18% and rest of the primary studies did not report any other research gaps.
   Conclusions: The study concludes that agile development in cloud computing environment is an important area in software engineering. There are many open challenges and gaps. In particular, more quality tools, evaluation research and empirical studies are required in this area.
C1 [Younas, Muhammad; Jawawi, Dayang N. A.; Kazmi, Rafaqut] Univ Teknol Malaysia, Skudai, Malaysia.
   [Younas, Muhammad] Govt Coll Univ Faisalabad, Faisalabad, Punjab, Pakistan.
   [Ghani, Imran; Fries, Terrence] Indiana Univ Penn, Indiana, PA USA.
C3 Universiti Teknologi Malaysia; Government College University Faisalabad;
   Pennsylvania State System of Higher Education (PASSHE); Indiana
   University of Pennsylvania
RP Younas, M (corresponding author), Univ Teknol Malaysia, Skudai, Malaysia.; Younas, M (corresponding author), Govt Coll Univ Faisalabad, Faisalabad, Punjab, Pakistan.
EM younas.76@gmail.com
RI Jawawi, Dayang N. A./A-7251-2013; Younas, Muhammad/A-1176-2017; Younas,
   Muhammad/KGL-0586-2024
OI Younas, Muhammad/0000-0003-4161-7843; Younas,
   Muhammad/0000-0003-4161-7843; Kazmi, Rafaqat/0000-0002-8111-1911
FU Ministry of Science, Technology and Innovation (MOSTI) [4S113]; UTM
   Research University grant [13H63]
FX We are thankful to Ministry of Science, Technology and Innovation
   (MOSTI) to support this research under eScience grant vote: 4S113. We
   are also thankful to Universiti Teknologi Malaysia (UTM) for providing
   us with the research facilities and UTM Research University grant vote:
   13H63.
CR Abell A., 2011, P ACM 14 INT WORKSH, P17
   Abhishek S., 2014, ROADMAP SOFTWARE ENG
   Akerele O, 2013, 2013 AGILE CONFERENCE (AGILE), P60, DOI 10.1109/AGILE.2013.28
   Allen B.K., 2015, J RES INNOV TEACH PU, V8, P99
   Almudarra F, 2015, PROCEDIA COMPUT SCI, V52, P1133, DOI 10.1016/j.procs.2015.05.131
   [Anonymous], 2015, 2015 INT C PERVASIVE
   [Anonymous], 2001, Undertaking Systematic Reviews of Research Effectiveness CDC's Guidance for Those Carrying Out or Commissioning Reviews
   [Anonymous], 2015, SOUTHEASTCON 2015
   [Anonymous], 2008, SYSTEMATIC REV SOCIA
   Bagiwa Idris Lawal, 2016, The International Journal of Internet, Broadcasting and Communication, V8, P1
   Benfenatki H, 2014, 2014 IEEE 23RD INTERNATIONAL WETICE CONFERENCE (WETICE), P275, DOI 10.1109/WETICE.2014.55
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Caithness N., 2013, SIMPLE DROP COMPUTE
   Chung Yung, 2015, Journal of Software, V10, P1310, DOI 10.17706/jsw.10.11.1310-1318
   Cocco L, 2012, EUROMICRO CONF PROC, P446, DOI 10.1109/SEAA.2012.67
   Cohen B, 2013, COMPUTER, V46, P97, DOI 10.1109/MC.2013.323
   Concas G., 2013, P INT C SOFTW ENG RE, P1
   Dumbre A., 2011, PRACTICING AGILE SOF
   Durrani U., 2013, 22 AUSTR SOFTW ENG C, V19
   Farroha D., 2012, MIL COMM C 2012 MILC, P1
   Franken S, 2015, PROCEDIA COMPUT SCI, V68, P188, DOI 10.1016/j.procs.2015.09.234
   Ghosh M.M.A., 2016, INT J RES ENG SCI IJ, V2016
   Gopularam B.P., 2012, ADV COMP ICOAC 2012, P1
   Gopularam BP, 2012, 2012 18TH ANNUAL INTERNATIONAL CONFERENCE ON ADVANCED COMPUTING AND COMMUNICATIONS (ADCOM), P54
   Gregorio Donna D, 2012, SYST C SYSCON 2012 I, P1
   Guha R., 2010, Electronic System Design (ISED), 2010 International Symposium on, P213, DOI [10.1109/ISED.2010.48, DOI 10.1109/ISED.2010.48]
   Haig-Smith Timothy, 2016, Journal of Issues in Informing Science and Information Technology, V13, P121
   Hasaba S.A.M., 2014, OVERVIEW APPL CLOUD
   Highsmith James A., 2001, History: The Agile Manifesto
   Ivanov V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P890, DOI 10.1145/3106237.3117778
   Jeon S., 2011, SOFTW ENG RES MAN AP, P203
   Jyothi V.E., 2014, INT J CURRENT ENG TE, V4, P2014
   Kalem S, 2013, 2013 36TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P1079
   Karouw S, 2016, 2016 INTERNATIONAL CONFERENCE ON INFORMATICS AND COMPUTING (ICIC), P257, DOI 10.1109/IAC.2016.7905725
   Karunakaran S., 2013, SOFTWARE ENG FRAMEWO, P213
   Keefe K., 2004, P 6 C AUSTRALASIAN C, V30, P151
   Keele S., GUIDELINES PERFORMIN
   Madni SHH, 2016, J NETW COMPUT APPL, V68, P173, DOI 10.1016/j.jnca.2016.04.016
   Manifesto, 2001, MAN AG SOFTW DEV 200
   Manuja M, 2014, IEEE INT ADV COMPUT, P1392, DOI 10.1109/IAdCC.2014.6779530
   Mell P, 2010, COMMUN ACM, V53, P50
   Miglierina M, 2014, INT SYMP SYMB NUMERI, P422, DOI 10.1109/SYNASC.2014.63
   Moher D., 2015, Systematic Reviews, V1, DOI DOI 10.1186/2046-4053-4-1
   Mwansa G, 2014, IEEE INT CONF CLOUD, P818, DOI 10.1109/CLOUD.2014.113
   Nazir Ambreen, 2013, International Journal of Modern Education and Computer Science, V5, P28, DOI 10.5815/ijmecs.2013.11.04
   Nikitina N., 2011, International Conference on Software Engineering, P159
   Paasivaara M, 2014, INT CONF GLOBAL SOFT, P16, DOI 10.1109/ICGSE.2014.22
   Palmer S.R., 2001, A Practical Guide to Feature-Driven Development, V1st
   Patidar S., 2011, Proceedings of the 2011 World Congress on Information and Communication Technologies (WICT), P1009, DOI 10.1109/WICT.2011.6141386
   Petersen K., 2008, 86877 EASE
   Portelli B., 2010, BEAUTY AGILE CLOUD 2
   Qureshi M.R.J., 2015, INT J INFORM ENG ELE, V2015
   r. Shriver, 2012, AGILE CLOUD DEV FUTU
   Raj G, 2015, 2015 1ST INTERNATIONAL CONFERENCE ON FUTURISTIC TRENDS ON COMPUTATIONAL ANALYSIS AND KNOWLEDGE MANAGEMENT (ABLAZE), P219, DOI 10.1109/ABLAZE.2015.7154995
   Raj P., 2013, SOFTWARE ENG FRAMEWO, P25
   Rivero Jose Matias, 2013, Web Engineering. 13th International Conference, ICWE 2013. Proceedings: LNCS 7977, P7, DOI 10.1007/978-3-642-39200-9_4
   Satchwill B., 2011, SECLOUD'11: Proceeding of the 2nd international workshop on Software engineering for cloud computing, SECLOUD'11 Proceedings of the 2nd International Workshop on Software Engineering for Cloud Computing, P1
   Singh S., 2013, Int J u e Serv Sci Technol, V6, P191, DOI [10.14257/ijunesst.2013.6.5.17, DOI 10.14257/IJUNESST.2013.6.5.17]
   Tsai WT, 2014, IEEE INTERNET COMPUT, V18, P78, DOI 10.1109/MIC.2014.46
   Tuli Anupriya, 2014, ACM SIGSOFT Software Engineering Notes, V39, DOI 10.1145/2632434.2632447
   van Tulder M, 2003, SPINE, V28, P1290, DOI 10.1097/01.BRS.0000065484.95996.AF
   VersionOne, 2017, 11 STAT AG REP 2017
   Wang W., 2011, CLOUD
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Younas Muhammad, 2016, [Journal of Internet Computing and Services, 인터넷정보학회논문지], V17, P67
   Zarinah L.I.S.S.S., 2013, SCI INT J LAHORE, P1045
   Zelkowitz MV, 1997, INFORM SOFTWARE TECH, V39, P735, DOI 10.1016/S0950-5849(97)00025-6
NR 67
TC 19
Z9 20
U1 2
U2 45
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2018
VL 103
BP 142
EP 158
DI 10.1016/j.infsof.2018.06.014
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GU9ZY
UT WOS:000445717000010
DA 2024-07-18
ER

PT J
AU Uzun, B
   Tekinerdogan, B
AF Uzun, Burak
   Tekinerdogan, Bedir
TI Model-driven architecture based testing: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Model-based testing; Software architecture; Systematic review
AB Context Model-driven architecture based testing (MDABT) adopts architectural models of a system under test and/or its environment to derive test artifacts. In the literature, different MDABT approaches have been provided together with the corresponding lessons results and lessons learned.
   Objective: The overall objective of this paper is to identify the published concerns for applying MDABT, identify the proposed solutions, and describe the current research directions for MDABT.
   Method: To this end we have provided a systematic literature review (SLR) that is conducted by a multi-phase study selection process using the published literature in major software engineering journals and conference proceedings.
   Results: We reviewed 739 papers that are discovered using a well-planned review protocol, and 31 of them were assessed as primary studies related to our research questions. Based on the analysis of the data extraction process, we discuss the primary trends and approaches and present the identified obstacles.
   Conclusion: This study shows that although a generic process the approaches different in various ways with different goals, modeling abstractions and results. Further, based on the synthesis process in the SLR we can state that the potential of MDABT has not been fully exploited yet.
C1 [Uzun, Burak; Tekinerdogan, Bedir] Wageningen Univ, Informat Technol Grp, Wageningen, Netherlands.
C3 Wageningen University & Research
RP Tekinerdogan, B (corresponding author), Wageningen Univ, Informat Technol Grp, Wageningen, Netherlands.
EM burak.uzun@wur.nl; bedir.tekinerdogan@wur.nl
RI Tekinerdogan, Bedir/K-3639-2019
OI Tekinerdogan, Bedir/0000-0002-8538-7261
CR [Anonymous], 2014, 10591993 ANSIIEEE
   [Anonymous], 2011, 420102007 ISOIEC
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Clarke Edmund M., 2001, Model Checking
   Demirli E, 2011, LECT NOTES COMPUT SC, V6903, P336, DOI 10.1007/978-3-642-23798-0_36
   Felderer M, 2016, SOFTW TEST VERIF REL, V26, P119, DOI 10.1002/stvr.1580
   Fowler M., 2011, DOMAIN SPECIFIC LANG
   Garlan David, 2010, SEI Series in Software Engineering, Vsecond
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Gurbuz HG, 2018, SOFTWARE QUAL J, V26, P1327, DOI 10.1007/s11219-017-9386-2
   Hartman A., 2006, CHOOSING TEST MODELI, DOI [10.1007/978-3-540-70889-616, DOI 10.1007/978-3-540-70889-616]
   Kitchenham B., 2016, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B., 2007, ENGINEERING, V45, P1051
   Makinen M.A., 2007, THESIS
   Mellor StephenJ., 2004, MDA Distilled: Principles of Model-Driven Architecture
   Mistrik I., 2015, Software quality assurance: In large scale and complex software-intensive systems, V1st
   Muccini H, 2004, IEEE T SOFTWARE ENG, V30, P160, DOI 10.1109/TSE.2004.1271170
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   Myers GJ, 2012, ART OF SOFTWARE TESTING, 3RD EDITION, P1
   Neto A.C.D., 2007, P 2007 ACM S APPL CO
   Nguyen C.D., 2012, Proceedings of the 2012 International Symposium on Software Testing and Analysis, P100, DOI 10.1145/04000800.2336765
   Rafi D. M., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P36, DOI 10.1109/IWAST.2012.6228988
   Souza N.M., 2016, INT C CHIL COMP SCI, V35
   Tekinerdogan B., 2014, COMPUTER SCI HDB, VI
   Tekinerdogan B., Sofware Quality Assurance in Large Scale and Complex Software-Intensive Systems Elservier, -, P221
   Tekinerdogan B, 2016, SOFTWARE QUALITY ASSURANCE: IN LARGE SCALE AND COMPLEX SOFTWARE-INTENSIVE SYSTEMS, P1, DOI 10.1016/B978-0-12-802301-3.00001-6
   Utting M., 2011, SOFTWARE TEST VERIF
   Utting M., 2007, PRACTICAL MODEL BASE
   Zhang PC, 2010, J SYST SOFTWARE, V83, P723, DOI 10.1016/j.jss.2009.11.709
NR 29
TC 16
Z9 19
U1 0
U2 20
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2018
VL 102
BP 30
EP 48
DI 10.1016/j.infsof.2018.05.004
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO6AL
UT WOS:000440116400003
DA 2024-07-18
ER

PT J
AU Sherman, S
   Hadar, I
   Luria, G
AF Sherman, Sofia
   Hadar, Irit
   Luria, Gil
TI Leveraging organizational climate theory for understanding
   industry-academia collaboration
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Industry-academia collaboration; Empirical research; Software
   engineering; Stakeholder involvement; Organizational climate; Management
   commitment
ID SOFTWARE ENGINEERING RESEARCH; SAFETY CLIMATE; WORK-ENVIRONMENT; ETHICAL
   CLIMATE; ROAD-SAFETY; BEHAVIOR; LEADERSHIP; INTERVENTION; CONSTRUCTION;
   PERFORMANCE
AB Context Industry-academia collaboration (IAC) in the field of software engineering is widely discussed in the literature, highlighting its importance and benefits. However, along with the benefits, academic researchers face challenges while performing empirical studies in industry, risking their success. Awareness of these challenges and the importance of addressing them has recently grown, and became the center of discussion in several publication venues.
   Objective: In this paper, we aim to address one of the key challenges affecting the success of IAC: stakeholder involvement. To this end, we propose a vision for leveraging organizational climate theory toward an effective management of IAC in software engineering research. Organizational climate is defined as the organization's priorities as perceived by its employees and was found to be an effective means of predicting employee behavior. Method: To provide a basis and motivation for our vision, we conducted a literature review, focused on the workshop series of CESI, Conducting Empirical Studies in Industry, in order to elicit the relevant reported challenges of IAC, and to analyze them through the lens of the organizational climate theory.
   Results: Emergent categories of the elicited challenges of IAC are related to the two basic components that determine the emergence of organizational climate: management commitment and communication. This result demonstrates that analyzing stakeholder involvement-related challenges of IAC through the lens of organizational climate theory provides an indication of the climate components that should be enhanced in order to address these challenges.
   Conclusion: The above analysis lays the foundation for our vision that organizational climate may serve as an effective means of addressing the discussed challenges. We propose that developing measures of organizational research collaboration climate and deploying respective interventions for improvement would be instrumental for enhancing stakeholder involvement in IAC. We further propose a research outline toward fulfilling these potential contributions.
C1 [Sherman, Sofia; Hadar, Irit] Univ Haifa, Dept Informat Syst, Haifa, Israel.
   [Luria, Gil] Univ Haifa, Dept Human Serv, Haifa, Israel.
C3 University of Haifa; University of Haifa
RP Sherman, S (corresponding author), Univ Haifa, Dept Informat Syst, Haifa, Israel.
EM sofiash@mta.ac.il
FU Center for Cyber Law Policy (CCLP)
FX This research was supported by the Center for Cyber Law & Policy (CCLP),
   established by the University of Haifa in collaboration with the Israeli
   National Cyber Bureau.
CR Aarons GA, 2014, ANNU REV PUBL HEALTH, V35, P255, DOI 10.1146/annurev-publhealth-032013-182447
   Aarons Gregory A, 2006, Psychol Serv, V3, P61
   [Anonymous], COLLABORATIVE DUET F
   [Anonymous], HUM REL
   [Anonymous], 1990, Basics of qualitative research
   [Anonymous], IND CORPORATE CHANGE
   [Anonymous], 2012, HDB PSYCHOL, DOI DOI 10.1002/9781118133880.HOP212017
   [Anonymous], 2001, The Journal of Technology Transfer, DOI [10.1023/A:1007848631448, DOI 10.1023/A:1007848631448]
   [Anonymous], P 3 INT WORKSH COND
   [Anonymous], 2004, P 26 INT C SOFTW ENG
   [Anonymous], P 1 INT WORKSH COND
   [Anonymous], J BUS ETHICS
   Barling J, 2002, J APPL PSYCHOL, V87, P488, DOI 10.1037//0021-9010.87.3.488
   Bass JM, 2014, INT CONF GLOBAL SOFT, P6, DOI 10.1109/ICGSE.2014.24
   Brooks Frederick P., 1995, The mythical man-month
   BROWN RL, 1986, ACCIDENT ANAL PREV, V18, P455, DOI 10.1016/0001-4575(86)90019-9
   Causevic A, 2013, IEEE-ACM INT WKSP CO, P15, DOI 10.1109/CESI.2013.6618464
   Chong J, 2006, CSCW 06, P29, DOI [DOI 10.1145/1180875.1180882, 10.1145/1180875.1180882]
   Clarke S, 2006, J OCCUP HEALTH PSYCH, V11, P315, DOI 10.1037/1076-8998.11.4.315
   Cooper MD, 2004, J SAFETY RES, V35, P497, DOI 10.1016/j.jsr.2004.08.004
   Deshpande SP, 1996, J BUS ETHICS, V15, P655, DOI 10.1007/BF00411800
   Dieste O, 2013, IEEE-ACM INT WKSP CO, P2, DOI 10.1109/CESI.2013.6618462
   Dirks KT, 1999, J APPL PSYCHOL, V84, P445, DOI 10.1037/0021-9010.84.3.445
   EISENBERGER R, 1990, J APPL PSYCHOL, V75, P51, DOI 10.1037//0021-9010.75.1.51
   Etzkowitz H, 1998, RES POLICY, V27, P823, DOI 10.1016/S0048-7333(98)00093-6
   Fernandez DM, 2016, IEEE-ACM INT WKSP CO, P25, DOI [10.1109/CESI.2016.015, 10.1145/2896839.2896844]
   Fitzgerald B., 2003, INFORM SCIENTIST, V6, P13, DOI DOI 10.28945/510
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Gershon RRM, 2000, AM J INFECT CONTROL, V28, P211, DOI 10.1067/mic.2000.105288
   Grbac TG, 2016, IEEE-ACM INT WKSP CO, P21, DOI [10.1109/CESI.2016.014, 10.1145/2896839.2896840]
   Grosch JW, 1999, AM J IND MED, P122
   Hadar I., 2017, EMPIR SOFTW ENG, P1
   Hall BH., 2001, The Journal of Technology Transfer, V26, P87, DOI DOI 10.1023/A:1007888312792
   Huang YH, 2013, TRANSPORT RES F-TRAF, V17, P5, DOI 10.1016/j.trf.2012.08.011
   ISABELLA LA, 1990, ACAD MANAGE J, V33, P7, DOI 10.5465/256350
   Jaramillo F, 2013, J BUS RES, V66, P2301, DOI 10.1016/j.jbusres.2012.03.013
   JONES AP, 1979, ORGAN BEHAV HUM PERF, V23, P201, DOI 10.1016/0030-5073(79)90056-4
   Kajko-Mattsson M, 2005, EMPIR SOFTW ENG, V10, P31, DOI 10.1023/B:LIDA.0000048322.42751.ca
   Kapp EA, 2012, SAFETY SCI, V50, P1119, DOI 10.1016/j.ssci.2011.11.011
   Karim MR, 2016, IEEE-ACM INT WKSP CO, P7, DOI [10.1145/2896839.2896845, 10.1109/CESI.2016.012]
   Kozlowski SWJ, 2006, PSYCHOL SCI, P77, DOI 10.1111/j.1529-1006.2006.00030.x
   Lang M., 2003, Informing Science, V6, P21
   Lavallée M, 2015, IEEE-ACM INT WKSP CO, P12, DOI 10.1109/CESI.2015.10
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Lewin K, 1939, J SOC PSYCHOL, V10, P271, DOI 10.1080/00224545.1939.9713366
   Luria G., 2008, J QUALITY MANAGEMENT, V15, P27, DOI DOI 10.1080/10686967.2008.11918054
   Luria G, 2008, J SAFETY RES, V39, P273, DOI 10.1016/j.jsr.2007.12.003
   Luria G, 2008, LEADERSHIP QUART, V19, P42, DOI 10.1016/j.leaqua.2007.12.004
   Luria G, 2016, WILEY BLACK HB ORG P, P357
   Luria G, 2014, SAFETY SCI, V70, P288, DOI 10.1016/j.ssci.2014.07.003
   Luria G, 2010, ACCIDENT ANAL PREV, V42, P1288, DOI 10.1016/j.aap.2010.02.006
   Martinez -Fernandez Silverio, 2014, Proceedings of the 2nd International Workshop on Conducting Empirical Studies in Industry, P15, DOI [10.1115/2593690.2593696, DOI 10.1115/2593690.2593696]
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Meyer-Krahmer F, 1998, RES POLICY, V27, P835, DOI 10.1016/S0048-7333(98)00094-8
   Misirli A., 2014, P 2 INT WORKSH COND, P25, DOI [10.1145/2593690.2593691, DOI 10.1145/2593690.2593691]
   Mohamed S, 2002, J CONSTR ENG M, V128, P375, DOI 10.1061/(ASCE)0733-9364(2002)128:5(375)
   Moody D. L., 2003, Informing Science, V6, P31
   NICHOLSON N, 1985, ACAD MANAGE REV, V10, P397, DOI 10.2307/258123
   Osterweil LJ, 2008, COMPUTER, V41, P39, DOI 10.1109/MC.2008.85
   Parnin C, 2011, SOFTWARE QUAL J, V19, P5, DOI 10.1007/s11219-010-9104-9
   Patil S, 2011, INFORM SOFTWARE TECH, V53, P969, DOI 10.1016/j.infsof.2011.01.013
   Perkmann M, 2013, RES POLICY, V42, P423, DOI 10.1016/j.respol.2012.09.007
   Prechelt L, 2015, IEEE-ACM INT WKSP CO, P19, DOI 10.1109/CESI.2015.11
   RENTSCH JR, 1990, J APPL PSYCHOL, V75, P668, DOI 10.1037/0021-9010.75.6.668
   Ribeiro TV, 2015, IEEE-ACM INT WKSP CO, P26, DOI 10.1109/CESI.2015.12
   Rodriguez P., 2014, Proceedings of the 2nd International Workshop on Conducting Empirical Studies in Industry - CESI 2014, P9
   Sackmann S.A., 1991, J APPL BEHAV SCI, V27, P295
   SCHNEIDER B, 1992, J APPL PSYCHOL, V77, P705, DOI 10.1037/0021-9010.77.5.705
   Schneider B., 2000, HDB ORG CULTURE CLIM, P21
   Schneider B, 2017, J APPL PSYCHOL, V102, P468, DOI 10.1037/apl0000090
   Schneider B, 2013, ANNU REV PSYCHOL, V64, P361, DOI 10.1146/annurev-psych-113011-143809
   Sherman S, 2013, IEEE-ACM INT WKSP CO, P47, DOI 10.1109/CESI.2013.6618470
   Siu OL, 2004, ACCIDENT ANAL PREV, V36, P359, DOI 10.1016/S0001-4575(03)00016-2
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Soderstrom M., 2003, Informing Science, V6, P49
   Stamper R, 2000, BEHAV INFORM TECHNOL, V19, P15, DOI 10.1080/014492900118768
   Strauss A., 1994, HDB QUALITATIVE RES, P273, DOI DOI 10.1007/BF00988593
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Suddaby R, 2006, ACAD MANAGE J, V49, P633, DOI 10.5465/AMJ.2006.22083020
   Taubman-Ben-Ari O, 2012, ACCIDENT ANAL PREV, V47, P1, DOI 10.1016/j.aap.2012.01.003
   Thompson DN, 2011, J NURS ADMIN, V41, P479, DOI 10.1097/NNA.0b013e3182346e31
   Tsai MT, 2010, EXPERT SYST APPL, V37, P8479, DOI 10.1016/j.eswa.2010.05.029
   Varonen U, 2000, ACCIDENT ANAL PREV, V32, P761, DOI 10.1016/S0001-4575(99)00129-3
   WEICK KE, 1993, ADMIN SCI QUART, V38, P357, DOI 10.2307/2393372
   WEICK KE, 1993, ADMIN SCI QUART, V38, P628, DOI 10.2307/2393339
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   WIMBUSH JC, 1994, J BUS ETHICS, V13, P637, DOI 10.1007/BF00871811
   Wohlin C, 2013, IEEE-ACM INT WKSP CO, P43, DOI 10.1109/CESI.2013.6618469
   Zohar D, 2005, J APPL PSYCHOL, V90, P616, DOI 10.1037/0021-9010.90.4.616
   ZOHAR D, 1980, J APPL PSYCHOL, V65, P96, DOI 10.1037/0021-9010.65.1.96
   Zohar D, 2004, J APPL PSYCHOL, V89, P322, DOI 10.1037/0021-9010.89.2.322
   Zohar D, 2003, J SAFETY RES, V34, P567, DOI 10.1016/j.jsr.2003.05.006
   Zohar D, 2000, J APPL PSYCHOL, V85, P587, DOI 10.1037//0021-9010.85.4.587
   Zohar D, 2014, J APPL PSYCHOL, V99, P113, DOI 10.1037/a0034096
NR 94
TC 5
Z9 7
U1 1
U2 33
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2018
VL 98
BP 148
EP 160
DI 10.1016/j.infsof.2017.12.006
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GD8LP
UT WOS:000430764200012
DA 2024-07-18
ER

PT J
AU Calderon, A
   Boubeta-Puig, J
   Ruiz, M
AF Calderon, Alejandro
   Boubeta-Puig, Juan
   Ruiz, Mercedes
TI MEdit4CEP-Gam: A model-driven approach for user-friendly gamification
   design, monitoring and code generation in CEP-based systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Gamification; Model-Driven Engineering; Complex event processing;
   Strategy design; Monitoring; Graphical modelling editor
ID EDUCATION
AB Context Gamification has been proven to increase engagement and motivation in multiple and different non game contexts such as healthcare, education, workplace, and marketing, among others. However, many of these applications fail to achieve the desired benefits of gamification, mainly because of a poor design.
   Objective: This paper explores the conceptualization, implementation and monitoring phases of meaningful gamification strategies and proposes a solution for strategy experts that hides the implementation details and helps them focus only on what is crucial for the success of the strategy. The solution makes use of Model-Driven Engineering (MDE) and Complex Event Processing (CEP) technology.
   Method: An easy-to-use graphical editor is used to provide the high-level models that represent the design of the gamification strategy and its deployment and monitoring. These models contain the event pattern definitions to be automatically transformed into code. This code is then deployed both in a CEP engine to detect the conditions expressed in such patterns and in an enterprise service bus to execute the corresponding pattern actions.
   Results: The paper reports on the use of both a graphical modeling editor for gamification domain definition and a graphical modeling editor for gamification strategy design, monitoring and code generation in event-based systems. It also shows how the proposal can be used to design and automate the implementation and monitoring of a gamification strategy in an educational domain supported by a well-known Learning Management System (LMS) such as Moodle.
   Conclusion: It can be concluded that this unprecedented model-driven approach leveraging gamification and CEP technology provides strategy experts with the ability to graphically define gamification strategies, which can be directly transformed into code executable by event-based systems. Therefore, this is a novel solution for bringing CEP closer to any strategy expert, positively influencing the gamification strategy design, implementation and real-time monitoring processes.
C1 [Calderon, Alejandro; Boubeta-Puig, Juan; Ruiz, Mercedes] Univ Cadiz, Dept Comp Sci & Engn, Sch Engn, Ave Univ Cadiz 10, Cadiz 11519, Spain.
C3 Universidad de Cadiz
RP Calderon, A (corresponding author), Univ Cadiz, Dept Comp Sci & Engn, Sch Engn, Ave Univ Cadiz 10, Cadiz 11519, Spain.
EM alejandro.calderon@uca.es; juan.boubeta@uca.es; mercedes.ruiz@uca.es
RI Boubeta-Puig, Juan/L-9429-2014; Ruiz, Mercedes/L-7317-2013; Calderón,
   Alejandro/F-9555-2016
OI Boubeta-Puig, Juan/0000-0002-8989-7509; Ruiz,
   Mercedes/0000-0002-8527-4734; Calderón, Alejandro/0000-0002-0924-7478
FU Spanish National Research Agency (AEI); ERDF funds under project amuSE
   [TIN2013-46928-C3-2-R]; ERDF funds under project BadgePeople
   [TIN2016-76956-C3-3-R]; ERDF funds under project DArDOS
   [TIN2015-65845-C3-3-R]
FX This work was funded by the Spanish National Research Agency (AEI) with
   ERDF funds under projects amuSE (TIN2013-46928-C3-2-R), BadgePeople
   (TIN2016-76956-C3-3-R) and DArDOS (TIN2015-65845-C3-3-R).
CR Andrade FRH, 2016, LECT NOTES COMPUT SC, V9684, P176, DOI 10.1007/978-3-319-39583-8_17
   [Anonymous], THESIS
   [Anonymous], 2014, 44 JAHRESTAGUNG GESE
   [Anonymous], 2017, THE EPSILON BOOK
   [Anonymous], ECLIPSE MODELING FRA
   [Anonymous], PAIN SQUAD MOBILE AP
   [Anonymous], 16 ANN C EUR AC MAN
   [Anonymous], 2015, IMPLEMENTING GAMIFIC
   Baldeón J, 2016, PROCEEDINGS OF THE XVII INTERNATIONAL CONFERENCE ON HUMAN COMPUTER INTERACTION INTERACCION 2016, DOI 10.1145/2998626.2998673
   Boubeta-Puig J, 2015, KNOWL-BASED SYST, V89, P97, DOI 10.1016/j.knosys.2015.06.021
   Boubeta-Puig J, 2015, EXPERT SYST APPL, V42, P8095, DOI 10.1016/j.eswa.2015.06.045
   Chandy K., 2010, Event Processing: Designing IT Systems for Agile Companies, V1st
   Cugola G, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187677
   Darejeh A, 2016, INT J HUM-COMPUT INT, V32, P613, DOI 10.1080/10447318.2016.1183330
   de-Marcos L, 2014, COMPUT EDUC, V75, P82, DOI 10.1016/j.compedu.2014.01.012
   Deterding S., 2011, P 15 INT AC MINDTREK, P9, DOI [10.1145/2181037.2181040, DOI 10.1145/2181037.2181040]
   Dichev C, 2017, INT J EDUC TECHNOL H, V14, DOI 10.1186/s41239-017-0042-5
   Dicheva D, 2015, EDUC TECHNOL SOC, V18, P75
   Etzion O., 2010, Event Processing in Action, Vfirst
   Ferro LS, 2014, LECT NOTES COMPUT SC, V8770, P11, DOI 10.1007/978-3-662-45212-7_2
   Hamari J, 2014, P ANN HICSS, P3025, DOI 10.1109/HICSS.2014.377
   Heilbrunn B, 2014, INT CONF UTIL CLOUD, P603, DOI 10.1109/UCC.2014.93
   Herranz E, 2016, J UNIVERS COMPUT SCI, V22, P1509
   Herzig Philipp, 2013, 2013 IEEE/ACM 6th International Conference on Utility and Cloud Computing (UCC), P494, DOI 10.1109/UCC.2013.96
   Herzig Philipp, 2013, Theory, Practice, and Applications of Rules on the Web. 7th International Symposium, RuleML 2013. Proceedings. LNCS 8035, P129, DOI 10.1007/978-3-642-39617-5_14
   Herzig P., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P219, DOI 10.1109/WICSA-ECSA.212.33
   Herzig P., 2014, THESIS
   Kapp K.M., 2013, GAMIFICATION LEARNIN
   Kim TW, 2016, ETHICS INF TECHNOL, V18, P157, DOI 10.1007/s10676-016-9401-5
   Kruchten P.., 2004, RATIONAL UNIFIED PRO
   Luckham D, 2012, EVENT PROCESSING FOR BUSINESS: ORGANIZING THE REAL-TIME ENTERPRISE, P1
   Maican C, 2016, COMPUT HUM BEHAV, V61, P186, DOI 10.1016/j.chb.2016.03.023
   Marczewski A., 2018, Even Ninja Monkeys Like to Play
   Matallaoui A, 2015, P ANN HICSS, P643, DOI 10.1109/HICSS.2015.84
   Mom A., 2015, P 7 INT C GAMES VIRT, P1
   Richards Chad., 2014, Proceedings of the first ACM SIGCHI annual symposium on Computer-human interaction in play, P217, DOI [DOI 10.1145/2658537.2658683, 10.1145/2658537.2658683]
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Werbach K., 2012, For the win: How game thinking can revolutionize your business
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Yildirim I, 2017, INTERNET HIGH EDUC, V33, P86, DOI 10.1016/j.iheduc.2017.02.002
   Zichermann G., 2011, GAMIFICATION DESIGN
NR 41
TC 33
Z9 37
U1 0
U2 29
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 238
EP 264
DI 10.1016/j.infsof.2017.11.009
PG 27
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FX4EZ
UT WOS:000426026800017
DA 2024-07-18
ER

PT J
AU Ferreira, TN
   Vergilio, SR
   de Souza, JT
AF Ferreira, Thiago Nascimento
   Vergilio, Silvia Regina
   de Souza, Jerffeson Teixeira
TI Incorporating user preferences in search-based software engineering: A
   systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Preference-based algorithms; Search-based software engineering;
   Systematic mapping
ID ANT COLONY OPTIMIZATION; EVOLUTIONARY
AB Context: Search-based algorithms have been successfully applied to solve software engineering problems in the field known as Search-based Software Engineering (SBSE). However, in practice, the user may reject the obtained solutions, since many characteristics of the problem cannot be mathematically modeled. To cope with this situation, preference-based algorithms have been investigated and raised interest in the SBSE field.
   Objective: To identify the quantity and type of research on SBSE preference-based approaches and to contribute to this new research subject, named here Preference and Search-Based Software Engineering (PSBSE),
   Method: We conducted a systematic mapping, following a research plan to locate, assess, extract and group the outcomes from relevant studies.
   Results: Few software engineering activities have been addressed. The most used algorithms are evolutionary and single-objective. In most studies the preferences are provided interactively and, in many cases, the user preferences are incorporated in the fitness functions. We observe a lack of evaluation measures and works comparing existing approaches.
   Conclusions: The use of preference-based algorithms in SBSE is an underexplored subject, and many research opportunities exist. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Ferreira, Thiago Nascimento; Vergilio, Silvia Regina] DInf Fed Univ Parana, CP 19081, BR-81531980 Curitiba, Parana, Brazil.
   [de Souza, Jerffeson Teixeira] Univ Estadual Ceara, 1700 Dr Silas Munguba Ave, Fortaleza, Ceara, Brazil.
C3 Universidade Estadual do Ceara
RP Ferreira, TN (corresponding author), DInf Fed Univ Parana, CP 19081, BR-81531980 Curitiba, Parana, Brazil.
EM tnferreira@inf.ufpr.br; silvia@inf.ufpr.br; jerffeson.souza@uece.br
OI Souza, Jerffeson/0000-0001-8361-4806
FU Brazilian agency CAPES; Brazilian agency CNPq [307762/2015-7,
   473899/2013-2]
FX This work is supported by Brazilian agencies CAPES and CNPq, grants:
   307762/2015-7 and 473899/2013-2.
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Amal B, 2014, LECT NOTES COMPUT SC, V8636, P31
   Amandeep, 2004, LECT NOTES COMPUT SC, V3009, P248
   [Anonymous], 2009, TECHNICAL REPORT
   [Anonymous], 2002, P IADIS INT C WWWINT, DOI DOI 10.1109/CEC.2008.4631016
   [Anonymous], P 18 INT SOFTW PROD
   [Anonymous], SBSE REPOSITORY REPO
   [Anonymous], THESIS
   Araújo AA, 2014, LECT NOTES COMPUT SC, V8636, P228
   Araújo Ana Lucia, 2016, Almanack, P1
   Barros M. de Oliveira, 2011, TECHNICAL REPORT
   Bavota Gabriele, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P75, DOI 10.1007/978-3-642-33119-0_7
   Bechikh S, 2015, ADV COMPUT, V98, P141, DOI 10.1016/bs.adcom.2015.03.001
   Binkley D, 2015, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2015.7335396
   Branke J, 2008, LECT NOTES COMPUT SC, V5252, P157, DOI 10.1007/978-3-540-88908-3_6
   Coello CAC, 2000, IEEE C EVOL COMPUTAT, P30, DOI 10.1109/CEC.2000.870272
   Dantas Altino, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P341, DOI 10.1007/978-3-319-22183-0_32
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   El Yamany Ahmed Eid, 2015, 7th International Conference on Information Technology, P657, DOI 10.15849/icit.2015.0114
   Eliaz K, 2007, J ECON THEORY, V132, P236, DOI 10.1016/j.jet.2005.07.008
   Feldt R., 2002, 0216 CHALM U TECHN D
   Ferreira TD, 2016, APPL SOFT COMPUT, V49, P1283, DOI 10.1016/j.asoc.2016.06.027
   FISHBURN PC, 1974, MANAGE SCI, V20, P1442, DOI 10.1287/mnsc.20.11.1442
   Ghannem Adnane, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P96, DOI 10.1007/978-3-642-39742-4_9
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Kalboussi Sabrine, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P245, DOI 10.1007/978-3-642-39742-4_19
   Kalboussi S, 2013, PROC INT C TOOLS ART, P229, DOI 10.1109/ICTAI.2013.43
   Lin Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/2950290.2950317
   Marculescu B, 2016, INFORM SOFTWARE TECH, V78, P66, DOI 10.1016/j.infsof.2016.05.009
   Marculescu B, 2015, APPL SOFT COMPUT, V29, P26, DOI 10.1016/j.asoc.2014.12.025
   Marculescu B, 2013, 2013 12TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2013), VOL 2, P102, DOI 10.1109/ICMLA.2013.113
   Marculescu B, 2013, ASIA PAC SOFWR ENG, P87, DOI 10.1109/APSEC.2013.120
   Maurice S, 2006, VALUE-BASED SOFTWARE ENGINEERING, P247, DOI 10.1007/3-540-29263-2_12
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Miettinen K., 2012, Nonlinear multiobjective optimization
   Miettinen K, 2008, LECT NOTES COMPUT SC, V5252, P1, DOI 10.1007/978-3-540-88908-3_1
   Miettinen K, 2008, LECT NOTES COMPUT SC, V5252, P27, DOI 10.1007/978-3-540-88908-3_2
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Mkaouer M. W., 2015, ACM T SOFTW ENG METH, V24
   Mkaouer MW, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P61, DOI 10.1109/CMSBSE.2013.6605712
   Mkaouer W, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1263, DOI 10.1145/2576768.2598366
   Ngo-The A, 2008, SOFT COMPUT, V12, P95, DOI [10.1007/S00500-007-0219-2, 10.1007/s00500-007-0219-2]
   O'Keeffe M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P247
   Özcan E, 2013, 2013 13TH UK WORKSHOP ON COMPUTATIONAL INTELLIGENCE (UKCI), P327, DOI 10.1109/UKCI.2013.6651324
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Quiroz JC, 2007, IEEE C EVOL COMPUTAT, P1366, DOI 10.1109/CEC.2007.4424630
   Quiroz JC, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P2151
   Quiroz JuanC., 2007, CHI'07 Extended Abstracts on Human Factors in Computing Systems, P2621, DOI [https://doi.org/10.1145/1240866.1241052, DOI 10.1145/1240866.1241052]
   Rachmawati L, 2006, IEEE C EVOL COMPUTAT, P954
   Räihä O, 2010, COMPUT SCI REV, V4, P203, DOI 10.1016/j.cosrev.2010.06.001
   Ruhe G, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P262, DOI 10.1109/ISESE.2003.1237987
   Ruhe G., 2005, Proceedings of the 38th Annual Hawaii International Conference on System Science, p313b
   Saliu O, 2005, 29TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P14, DOI 10.1109/SEW.2005.42
   Simons CL, 2014, SWARM INTELL-US, V8, P139, DOI 10.1007/s11721-014-0094-2
   Simons CL, 2012, IEEE T SYST MAN CY C, V42, P1797, DOI 10.1109/TSMCC.2012.2225103
   Simons CL, 2010, IEEE T SOFTWARE ENG, V36, P798, DOI 10.1109/TSE.2010.34
   Simons CL, 2009, IEEE SYS MAN CYBERN, P2503, DOI 10.1109/ICSMC.2009.5346344
   Simons CL, 2008, IEEE C EVOL COMPUTAT, P869, DOI 10.1109/CEC.2008.4630898
   Sorn D, 2013, 2013 INTERNATIONAL COMPUTER SCIENCE AND ENGINEERING CONFERENCE (ICSEC), P201, DOI 10.1109/ICSEC.2013.6694779
   Takagi H, 2001, P IEEE, V89, P1275, DOI 10.1109/5.949485
   Tonella P., 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P57, DOI 10.1109/SSBSE.2010.17
   Tonella P, 2013, INFORM SOFTWARE TECH, V55, P173, DOI 10.1016/j.infsof.2012.07.003
   Vathsavayi S, 2013, P EST ACAD SCI, V62, P16, DOI 10.3176/proc.2013.1.03
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Zeleny M., 1973, MULTIPLE CRITERIA DE, V286
   Zhang Y, 2008, LECT NOTES COMPUT SC, V5025, P88, DOI 10.1007/978-3-540-69062-7_8
   Zitzler E, 2008, LECT NOTES COMPUT SC, V5252, P373, DOI 10.1007/978-3-540-88908-3_14
NR 72
TC 24
Z9 24
U1 0
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2017
VL 90
BP 55
EP 69
DI 10.1016/j.infsof.2017.05.003
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EZ9JK
UT WOS:000405046400004
DA 2024-07-18
ER

PT J
AU Dey, S
   Lee, SW
AF Dey, Sangeeta
   Lee, Seok-Won
TI REASSURE: Requirements elicitation for adaptive socio-technical systems
   using repertory grid
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements elicitation; Adaptive systems; Socio-technical systems;
   Repertory grid
AB Context: Socio-technical systems are expected to understand the dynamics of the execution environment and behave accordingly. Significant work has been done on formalizing and modeling requirements of such adaptive systems. However, not enough attention is paid on eliciting requirements from users and introducing flexibility in the system behavior at an early phase of requirements engineering. Most of the work is based on an assumption that general users' cognitive level would be able to support the inherent complexity of variability acquisition.
   Objective: Our main focus is on providing help to the users with ordinary cognitive level to express their expectations from the complex system considering various contexts. This work also helps the designers to explore the design variability based on the general users' preferences.
   Method: We explore the idea of using a cognitive technique Repertory Grid (RG) to acquire knowledge from users and experts along multiple dimensions of problem and design space. We propose REASSURE methodology which guides requirements engineers to explore the intentional and design variability in an organized way. We also provide a tool support to analyze the knowledge captured in multiple repertory grid files and detect potential conflicts in the intentional variability. Finally, we evaluate the proposed idea by performing an empirical study using smart home system domain.
   Results: The result of our study shows that a greater number of requirements can be elicited after applying our approach. With the help of the provided tool support, it is even possible to detect a greater number of conflicts in user's requirements than the traditional practices.
   Conclusion: We envision RG as a technique to filter design options based on the intentional variability in various contexts. The promising results of empirical study open up new research questions: "how to elicit requirements from multiple stakeholders and reach consensus for multi-dimensional problem domain". (C) 2017 Elsevier B.V. All rights reserved.
C1 [Dey, Sangeeta; Lee, Seok-Won] Ajou Univ, Dept Software & Comp Engn, Dept Comp Engn, Suwon 443749, South Korea.
C3 Ajou University
RP Lee, SW (corresponding author), Ajou Univ, Dept Software & Comp Engn, Dept Comp Engn, Suwon 443749, South Korea.
EM leesw@ajou.ac.kr
FU National Research Foundation of Korea (NRF) - Ministry of Science, ICT &
   Future Planning [2013M3C4A7056233]
FX This research was supported by Next-Generation Information Computing
   Development Program through the National Research Foundation of Korea
   (NRF) funded by the Ministry of Science, ICT & Future Planning (No.
   2013M3C4A7056233).
CR Ali R., 2010, REQUIREMENTS ENG
   Baresi L, 2010, REQUIREMENTS ENG
   Becker C., 2015, INT C SOFTW ENG
   Berry D.M., 2005, INT WORKSH REQ ENG F
   Brun Y., 2013, Collection Software Engineering fo r Self-Adaptive Systems II (SEAMS), volume 7475 of Lecture Notes in Computer Science (LNCS), V7475, P33, DOI [10.1007/978-3-642-35813-5_2, DOI 10.1007/978-3-642-35813-5_2]
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5795, P468, DOI 10.1007/978-3-642-04425-0_36
   Chopra AK, 2014, INT REQUIR ENG CONF, P53, DOI 10.1109/RE.2014.6912247
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   Dey S., 2015, REQ ENG RE C
   Frakes W, 1998, ANN SOFTW ENG, V5, P125, DOI 10.1023/A:1018972323770
   Gaines B. R., 1993, Knowledge Engineering Review, V8, P49, DOI 10.1017/S0269888900000060
   Hartmann H., 2008, SOFTW PROD LIN C
   Jureta I.J., 2014, ACM T MANAGE INF SYS
   Kang Kyo C, 1990, Technical Report
   Lapouchnian A., 2011, Proceedings of the 5th International i* Workshop 2011, Trento, Italy, August 28-29, 2011, V766, P96
   Lapouchnian A, 2009, LECT NOTES COMPUT SC, V5829, P115, DOI 10.1007/978-3-642-04840-1_11
   Lee S.W., 2004, P 16 INT C SOFTWARE, P117
   Liaskos Sotirios, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P77, DOI 10.1007/978-3-642-21640-4_8
   Liaskos S., 2007, VAMOS 07, V7, P17
   Liaskos S, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P79
   Mohan K., 2003, P HAW INT C SYST SCI
   Niu N., 2006, P INT WORKSH EARL AS
   Niu N, 2007, IEEE SOFTWARE, V24, P53, DOI 10.1109/MS.2007.52
   Perry DE, 2004, PROC INT CONF SOFTW, P736, DOI 10.1109/ICSE.2004.1317512
   Qureshi Nauman A., 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P263, DOI 10.1007/978-3-642-28714-5_24
   Salifu M., 2007, INT WORKSH VAR MOD S
   Shaw MLG, 1996, SOFTWARE ENG J, V11, P149, DOI 10.1049/sej.1996.0022
   Souza V. E. S., 2012, P 7 INT S SOFTW ENG
   Souza VES, 2011, P 6 INT S SOFTW ENG
   Sutcliffe A, 2013, S VIS LANG HUM CEN C, P92, DOI 10.1109/RE.2013.6636709
   Tofan D., 2011, P 33 INT C SOFTW ENG
   Tofan D, 2011, LECT NOTES COMPUT SC, V6903, P244, DOI 10.1007/978-3-642-23798-0_27
   Whittle J, 2010, REQUIR ENG, V15, P177, DOI 10.1007/s00766-010-0101-0
   Yin D.R. K., 2017, Case Study Research and Applications: Design and Methods
   Yu YJ, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P645
NR 35
TC 17
Z9 20
U1 0
U2 9
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2017
VL 87
BP 160
EP 179
DI 10.1016/j.infsof.2017.03.004
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EV2QD
UT WOS:000401599300011
DA 2024-07-18
ER

PT J
AU Patrick, M
   Jia, Y
AF Patrick, Matthew
   Jia, Yue
TI KD-ART: Should we intensify or diversify tests to kill mutants?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mutation analysis; Adaptive random testing; Intensification and
   diversification
ID STRATEGY
AB Context: Adaptive Random Testing (ART) spreads test cases evenly over the input domain. Yet once a fault is found, decisions must be made to diversify or intensify subsequent inputs. Diversification employs a wide range of tests to increase the chances of finding new faults. Intensification selects test inputs similar to those previously shown to be successful.
   Objective: Explore the trade-off between diversification and intensification to kill mutants.
   Method: We augment Adaptive Random Testing (ART) to estimate the Kernel Density (KD-ART) of input values found to kill mutants. KD-ART was first proposed at the 10th International Workshop on Mutation Analysis. We now extend this work to handle real world non numeric applications. Specifically we incorporate a technique to support programs with input parameters that have composite data types (such as arrays and structs).
   Results: Intensification is the most effective strategy, for the numerical programs (it achieves 8.5% higher mutation score than ART). By contrast, diversification seems more effective for programs with composite inputs. KD-ART kills mutants 15.4 times faster than ART.
   Conclusion: Intensify tests for numerical types, but diversify them for composite types. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Patrick, Matthew] Univ Cambridge, Epidemiol & Modelling Grp, Dept Plant Sci, Cambridge CB2 3EA, England.
   [Jia, Yue] UCL, CREST, Dept Comp Sci, London WC1E 6BT, England.
C3 University of Cambridge; University of London; University College London
RP Patrick, M (corresponding author), Univ Cambridge, Epidemiol & Modelling Grp, Dept Plant Sci, Cambridge CB2 3EA, England.
EM mtp33@cam.ac.uk; yue.jia@ucl.ac.uk
CR Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2015, 8 IEEE INT C SOFTWAR
   [Anonymous], 2011, P 8 EUR SOFTW ENG C, DOI DOI 10.1145/2025113.2025144
   [Anonymous], 1994, Encyclopedia of software Engineering
   [Anonymous], 2008, 7542008 IEEE, P1, DOI DOI 10.1109/IEEESTD.2008.4610935
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   Arcuri Andrea., 2011, ISSTA
   Ayari K, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1074
   Chan FT, 1996, INFORM SOFTWARE TECH, V38, P775, DOI 10.1016/0950-5849(96)01103-2
   Chan KP, 2006, INT J SOFTW ENG KNOW, V16, P553, DOI 10.1142/S0218194006002926
   Chen T.Y., 2009, P 2009 ACM S APPL CO, P422
   Chen TY, 2008, J SYST SOFTWARE, V81, P2146, DOI 10.1016/j.jss.2008.03.062
   Chen TY, 2013, IEEE T RELIAB, V62, P226, DOI 10.1109/TR.2013.2240898
   Chen TY, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363107
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chen TY, 2009, J SYST SOFTWARE, V82, P1419, DOI 10.1016/j.jss.2009.05.017
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Chow C, 2013, INT CONF QUAL SOFTW, P268, DOI 10.1109/QSIC.2013.19
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Fraser G., P 19 INT S SOFTW TES, P147
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Huang R., 2014, P ACM S APPL COMP, P1058, DOI [10.1145/2554850.2554854, DOI 10.1145/2554850.2554854]
   Huang RB, 2012, P INT COMP SOFTW APP, P52, DOI 10.1109/COMPSAC.2012.15
   Jia Y, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P94, DOI 10.1109/TAIC-PART.2008.18
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kuo FC, 2009, INT CONF QUAL SOFTW, P51, DOI 10.1109/QSIC.2009.15
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Liu H, 2012, SOFTWARE PRACT EXPER, V42, P1055, DOI 10.1002/spe.1113
   Mayer J., 2005, P 20 IEEEACM INT C A, P333, DOI DOI 10.1145/1101908
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Mondal D., 2015, 8th International Conference on Software Testing, Verification and Validation, ICST15, P1
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Papadakis M., 2010, P 5 INT WORKSH MUT A
   Papadakis M., 2016, P 37 INT C SOFTW ENG, P936
   PARZEN E, 1962, ANN MATH STAT, V33, P1065, DOI 10.1214/aoms/1177704472
   Patrick M., 2015, P 10 INT WORKSH MUT, P1, DOI [10.1109/icstw.2015.7107451, DOI 10.1109/ICSTW.2015.7107451]
   Patrick M, 2015, J SYST SOFTWARE, V103, P328, DOI 10.1016/j.jss.2014.11.033
   Press W.H., 2002, NUMERICAL RECIPES C, DOI [10.1016/0898-1221(90)90201-T, DOI 10.1016/0898-1221(90)90201-T]
   Rogstad E, 2013, INFORM SOFTWARE TECH, V55, P1781, DOI 10.1016/j.infsof.2013.04.004
   ROSENBLATT M, 1956, ANN MATH STAT, V27, P832, DOI 10.1214/aoms/1177728190
   Schneckenburger C., 2007, P 4 INT WORKSH SOFTW, P90
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Seung-Hun Shin, 2010, IEEE 34th Annual Computer Software and Applications Conference Workshops (COMPSACW 2010), P335, DOI 10.1109/COMPSACW.2010.65
   Tappenden AF, 2009, IEEE T RELIAB, V58, P619, DOI 10.1109/TR.2009.2034288
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   WHITE LJ, 1980, IEEE T SOFTWARE ENG, V6, P247, DOI 10.1109/TSE.1980.234486
   Yang XS, 2011, LECT NOTES COMPUT SC, V6630, P21
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
NR 53
TC 11
Z9 12
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2017
VL 81
SI SI
BP 36
EP 51
DI 10.1016/j.infsof.2016.04.009
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EB8IH
UT WOS:000387634200004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rouhi, A
   Zamani, B
AF Rouhi, Alireza
   Zamani, Bahman
TI Towards a formal model of patterns and pattern languages
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Formal modeling; Revised and extended GEBNF; Design patterns; Patterns'
   inter-relationships; Pattern languages
ID SPECIFICATION; VERIFICATION
AB Context Software patterns are solutions to recurring design problems. Patterns behave socially in the forms of Pattern Languages (PLs) to resolve problems. In a simple statement, a PL is a network of related patterns which provides a step-by-step process to solve a given problem in a specific context. Despite the popularity of applying PLs in practice, lack of formal basis on the patterns' inter-relationships in general, and PLs in particular, makes development of supporting tools difficult.
   Objective: Based on the algebra of design patterns, we aimed at presenting a new formalism for patterns and PLs.
   Method: We revised and extended the Graphic extension of EBNF (GEBNF) and applied it to model Unified Modeling Language (UML) class and sequence diagrams which are required to model the popular design patterns. Also, we presented the formal semantics of commonly used patterns' inter-relationships which pave the way for presenting our PL formalism. To show the applicability of our presented formalism on patterns and PLs, we presented the formal model of the Broker PL as a case study.
   Results: Use of the presented formalism to model patterns and PLs will make them more expressive, readable, and understandable as well.
   Conclusion: We have proposed a formalism for defining a PL in a more accurate manner. This formalism facilitates formal verification of patterns and PLs, particularly when it is intended to build a tool for such verification. (C) 2016 Published by Elsevier B.V.
C1 [Rouhi, Alireza; Zamani, Bahman] Univ Isfahan, Dept Software Engn, Esfahan, Iran.
C3 University of Isfahan
RP Zamani, B (corresponding author), Univ Isfahan, Dept Software Engn, Esfahan, Iran.
EM rouhi@eng.ui.ac.ir; zamani@eng.ui.ac.ir
RI Rouhi, Alireza/L-2209-2018
OI Rouhi, Alireza/0000-0003-1494-3467; Zamani, Bahman/0000-0001-6424-1442
CR [Anonymous], 2007, PATTERN ORIENTED SOF
   Bayley Ian, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P203, DOI 10.1109/COMPSAC.2008.67
   Bayley I., 2012, INT J ADV SOFTWARE, V4, P354
   Bayley I, 2008, INT CONF QUAL SOFTW, P27, DOI 10.1109/QSIC.2008.32
   Bayley I, 2007, SEFM 2007: FIFTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P25, DOI 10.1109/SEFM.2007.43
   Bayley I, 2010, J SYST SOFTWARE, V83, P209, DOI 10.1016/j.jss.2009.09.039
   Bergmayr Alexander, 2013, CEUR WORKSHOP PROC, V1104, P22
   Blewitt A., 2007, DESIGN PATTERN FORMA, P109
   Bottoni P, 2010, INFORM SOFTWARE TECH, V52, P821, DOI 10.1016/j.infsof.2010.03.005
   Brachman R.J., 2004, Knowledge Representation and Reasoning, V1st
   Buschmann F., 2007, PATTERN ORIENTED SOF, V4
   Bushmann F., 1996, PATTERN ORIENTED SOF, V1
   Dey S, 2010, J OBJECT TECHNOL, V9, P99, DOI 10.5381/jot.2010.9.6.a5
   Dong J, 2003, 200S IEEE SYMPOSIUM ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, P123
   Dong J, 2007, J SYST SOFTWARE, V80, P1755, DOI 10.1016/j.jss.2007.03.005
   Dong J, 2010, INFORM SOFTWARE TECH, V52, P274, DOI 10.1016/j.infsof.2009.10.001
   Eden AH, 2013, FORM METHOD SYST DES, V43, P1, DOI 10.1007/s10703-012-0181-1
   Eden A. H., 1999, TECHNICAL REPORT
   Eden A.H., 2011, CODECHARTS ROADMAPS
   Eden AH, 2002, INFORM SYST FRONT, V4, P379, DOI 10.1023/A:1020835709566
   Elaasar M., 2012, THESIS
   Eysholdt M., 2010, P ACM INT C COMPANIO, P307, DOI DOI 10.1145/1869542.1869625
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   France RB, 2004, IEEE T SOFTWARE ENG, V30, P193, DOI 10.1109/TSE.2004.1271174
   Gamma Erich., 1994, DESIGN PATTERNS
   Gasparis E., DESIGN PATTERNS FORM, P357
   Group O.M., 2011, OMG UN MOD LANG OMG
   Hakeem H, 2014, 2014 38TH ANNUAL IEEE INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE WORKSHOPS (COMPSACW 2014), P486, DOI 10.1109/COMPSACW.2014.129
   Hamid Brahim, 2014, Engineering Secure Software and Systems. 6th International Symposium, ESSoS 2014. Proceedings: LNCS 8364, P95, DOI 10.1007/978-3-319-04897-0_7
   Hegedus P, 2012, COMM COM INF SC, V340, P138
   Huston B, 2001, J SYST SOFTWARE, V58, P261, DOI 10.1016/S0164-1212(01)00043-7
   Kim SK, 2009, FORM ASP COMPUT, V21, P397, DOI 10.1007/s00165-008-0090-7
   Kodituwakku S.R., 2003, P 2002 C PATT LANG P, V13, P63
   Kurtev I, 2008, LECT NOTES COMPUT SC, V5088, P377
   Linz P, 2011, An Introduction to Formal Languages and Automata
   Nicholson J, 2014, SCI COMPUT PROGRAM, V80, P211, DOI 10.1016/j.scico.2013.05.007
   Noble J, 1998, 1998 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P98, DOI 10.1109/ASWEC.1998.730917
   Porter R, 2005, SCI COMPUT PROGRAM, V56, P231, DOI 10.1016/j.scico.2004.11.014
   Riaz M, 2015, INFORM SOFTWARE TECH, V65, P14, DOI 10.1016/j.infsof.2015.04.002
   Rouhi A., 2016, TECHNICAL REPORT
   Rouhi A., 2015, TECHNICAL REPORT
   Saaltink M., 1997, ZUM '97: The Z Formal Specification Notation. 10th International Conference of Z Users Proceedings, P72, DOI 10.1007/BFb0027284
   Schmidt D., 2000, Pattern-Oriented Software Architecture, Patterns for Concurrent and Networked Objects, V2
   Schmidt D.C., 2013, OVERVIEW PATTERN REL
   Schmidt D.C., 2000, LEADER FOLLOWERS
   Schmidt D.C., 1996, COMMUN ACM, V39, P37, DOI DOI 10.1145/236156.236164
   Schmidt DC, 1999, IEEE COMMUN MAG, V37, P54, DOI 10.1109/35.755450
   Taibi T, 2003, INFORM SOFTWARE TECH, V45, P157, DOI 10.1016/S0950-5849(02)000195-7
   Woodcock J., 1996, USING Z SPECIFICIATI
   Zamani B., 2009, THESIS
   Zamani B, 2013, INFORM SCIENCES, V237, P343, DOI 10.1016/j.ins.2013.02.038
   Zdun U, 2007, SOFTWARE PRACT EXPER, V37, P983, DOI 10.1002/spe.799
   Zhu H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491517
   Zhu H, 2012, FRONT COMPUT SCI-CHI, V6, P40, DOI 10.1007/s11704-012-2902-4
   ZIMMER W, 1995, PATTERN LANGUAGES OF PROGRAM DESIGN, P345
NR 55
TC 6
Z9 6
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2016
VL 79
BP 1
EP 16
DI 10.1016/j.infsof.2016.06.002
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DW0AE
UT WOS:000383302500001
DA 2024-07-18
ER

PT J
AU Neiva, FW
   David, JMN
   Braga, R
   Campos, F
AF Neiva, Francila Weidt
   David, Jose Maria N.
   Braga, Regina
   Campos, Fernanda
TI Towards pragmatic interoperability to support collaboration: A
   systematic review and mapping of the literature
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Pragmatic interoperability; Collaboration; Collaborative systems;
   Groupware; Interoperability
AB Context: Many researchers have argued that providing interoperability support only considering the format and meaning (i.e. syntax and semantic) of data exchange is not enough to achieve complete, effective and meaningful collaboration. Pragmatic interoperability has been highlighted as a key requirement to enhance collaboration. However, fulfilling this requirement is not a trivial task and there is a lack of works discussing solutions to achieve this level of interoperability.
   Objectives: The aim of this study is to present a systematic review and mapping of the literature in order to identify, analyse and classify the published solutions to achieve pragmatic interoperability.
   Method: To conduct a systematic review and mapping in accordance with the guidelines proposed in the evidence-based software engineering literature.
   Results: Our study identified 13 papers reporting pragmatic interoperability computational solutions. The first paper in our set of selected papers was published in 2004; the main strategies used to address pragmatic interoperability issues were service discovery, composition and/or selection and ontologies. The application domain of the identified solutions was mainly e-business. In addition, most of the identified solutions were software architectures.
   Conclusion: Mature proposals addressing pragmatic interoperability are still rare in the literature. Although many works have discussed the importance of pragmatic interoperability, it is necessary that researchers report solutions that implement and evaluate pragmatic interoperability in order to make progress in this area. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Neiva, Francila Weidt; David, Jose Maria N.; Braga, Regina; Campos, Fernanda] Univ Fed Juiz de Fora, Juiz De Fora, MG, Brazil.
C3 Universidade Federal de Juiz de Fora
RP Neiva, FW (corresponding author), Univ Fed Juiz de Fora, Juiz De Fora, MG, Brazil.
EM francila.weidt.neiva@ice.ufjf.br; jose.david@ufjf.edu.br;
   regina.braga@ufjf.edu.br; fernanda.campos@ufjf.edu.br
RI Campos, Fernanda/GRR-6776-2022; David, José Maria/AAY-8694-2020
OI David, José Maria/0000-0002-3378-015X; Braga, Regina/0000-0002-4888-0778
CR [Anonymous], P 2 INT C PRAGM WEB
   Asuncion CH, 2010, IFIP ADV INF COMM TE, V326, P164
   Asuncion CH, 2011, LECT NOTES BUS INF P, V76, P132
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Bravo M, 2008, LECT NOTES COMPUT SC, V5333, P128
   Costa C, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P90, DOI 10.1109/ICGSE.2013.19
   David Jose Maria N., 2009, Proceedings Simposio Brasileiro de Sistemas Colaborativos (SBSC 2009), P193, DOI 10.1109/SBSC.2009.20
   Ellis C. A., 1991, Communications of the ACM, V34, P39, DOI 10.1145/99977.99987
   Ferreira L, 2012, INF RESOUR MANAG J, V25, P1, DOI 10.4018/irmj.2012040101
   Gan MX, 2009, ICEBE 2009: IEEE INTERNATIONAL CONFERENCE ON E-BUSINESS ENGINEERING, PROCEEDINGS, P340, DOI 10.1109/ICEBE.2009.53
   Gao M, 2008, IEEE/SOLI'2008: PROCEEDINGS OF 2008 IEEE INTERNATIONAL CONFERENCE ON SERVICE OPERATIONS AND LOGISTICS, AND INFORMATICS, VOLS 1 AND 2, P1023, DOI 10.1109/SOLI.2008.4686548
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Gustayson P.L., 1998, SIM INT WORKSH
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kutvonen L., 2008, 12 ENT DISTR OBJ COM, P423
   Kutvonen L., 2007, AGENT WEB SERVICE TE, P288
   Lee J, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P24
   Lee Y, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P384, DOI 10.1109/ICWS.2004.1314762
   Liang L, 2007, ALPIT 2007: PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON ADVANCED LANGUAGE PROCESSING AND WEB INFORMATION TECHNOLOGY, P530, DOI 10.1109/ALPIT.2007.113
   Liu SX, 2014, IEEE ACM INT SYMP, P811, DOI 10.1109/CCGrid.2014.38
   Montero I, 2008, P IEEE I C SERV COMP, P605, DOI 10.1109/SCC.2008.130
   Morris Charles., 1938, FDN THEORY SIGNS, V1
   Neiva FW, 2014, INT C COMP SUPP COOP, P53, DOI 10.1109/CSCWD.2014.6846816
   Papazoglou MP, 2007, COMPUTER, V40, P38, DOI 10.1109/MC.2007.400
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Rukanova B, 2006, ENTERPRISE INFORMATION SYSTEMS VI, P203, DOI 10.1007/1-4020-3675-2_24
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Ruokolainen T., 2009, THESIS
   Schoop M, 2006, COMMUN ACM, V49, P75, DOI 10.1145/1125944.1125979
   Steinmacher I, 2013, COMPUT SUPP COOP W J, V22, P113, DOI 10.1007/s10606-012-9164-4
   Tamani E, 2006, LECT NOTES COMPUT SC, V4278, P1285
   Tolk A., 2003, P 2003 FALL SIM INT, P1
   Tolk A, 2006, WMSCI 2006: 10TH WORLD MULTI-CONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS, VOL IV, PROCEEDINGS, P105
   Usman M., 2014, PROMISE '14: Proceedings of the 10th International Conference on Predictive Models in Software Engineering, page, P82
   Yang MC, 2005, DESIGN STUD, V26, P649, DOI 10.1016/j.destud.2005.04.005
   Zhang HF, 2010, PROCEEDINGS OF THE SECOND INTERNATIONAL POSTGRADUATE CONFERENCE ON INFRASTRUCTURE AND ENVIRONMENT, VOL 2, P111, DOI 10.1109/SOLI.2010.5551598
NR 39
TC 38
Z9 39
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2016
VL 72
BP 137
EP 150
DI 10.1016/j.infsof.2015.12.013
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DX9HP
UT WOS:000384704500009
DA 2024-07-18
ER

PT J
AU Hettiarachchi, C
   Do, H
   Choi, B
AF Hettiarachchi, Charitha
   Do, Hyunsook
   Choi, Byoungju
TI Risk-based test case prioritization using a fuzzy expert system
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Regression testing; Requirements risks-based testing; Test case
   prioritization; Fuzzy expert system; Empirical study
ID METRICS
AB Context: The use of system requirements and their risks enables software testers to identify more important test cases that can reveal the faults associated with system components. Objective: The goal of this research is to make the requirements risk estimation process more systematic and precise by reducing subjectivity using a fuzzy expert system. Further, we provide empirical results that show that our proposed approach can improve the effectiveness of test case prioritization.
   Method: In this research, we used requirements modification status, complexity, security, and size of the software requirements as risk indicators and employed a fuzzy expert system to estimate the requirements risks. Further, we employed a semi-automated process to gather the required data for our approach and to make the risk estimation process less subjective.
   Results: The results of our study indicated that the prioritized tests based on our new approach can detect faults early, and also the approach can be effective at finding more faults earlier in the high-risk system components compared to the control techniques.
   Conclusion: We proposed an enhanced risk-based test case prioritization approach that estimates requirements risks systematically with a fuzzy expert system. With the proposed approach, testers can detect more faults earlier than with other control techniques. Further, the proposed semi-automated, systematic approach can easily be applied to industrial applications and can help improve regression testing effectiveness. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Hettiarachchi, Charitha] N Dakota State Univ, Fargo, ND 58102 USA.
   [Do, Hyunsook] Univ N Texas, Denton, TX 76203 USA.
   [Choi, Byoungju] Ewha Womans Univ, Seoul, South Korea.
C3 North Dakota State University Fargo; University of North Texas System;
   University of North Texas Denton; Ewha Womans University
RP Hettiarachchi, C (corresponding author), N Dakota State Univ, Fargo, ND 58102 USA.
EM charitha.hettiarachc@ndsu.edu; hyunsook.do@unt.edu; bjchoi@ewha.ac.kr
RI Hettiarachchi, Charitha/HRC-8530-2023
OI Choi, Byoungju/0000-0003-3985-7645
FU NSF CAREER Award [CCF-1564238]; MSIP (Ministry of Science, ICT, and
   Future Planning), Korea, under the ITRC (Information Technology Research
   Center) support program [NIPA-2014-H0301-14-1023]; Direct For Computer &
   Info Scie & Enginr; Division of Computing and Communication Foundations
   [1564238] Funding Source: National Science Foundation
FX This work was supported, in part, by NSF CAREER Award CCF-1564238 to
   University of North Texas. This work was also funded by the MSIP
   (Ministry of Science, ICT, and Future Planning), Korea, under the ITRC
   (Information Technology Research Center) support program
   (NIPA-2014-H0301-14-1023) supervised by NIPA (National IT Industry
   Promotion Agency)
CR Ahmed MA, 2005, INFORM SOFTWARE TECH, V47, P31, DOI 10.1016/j.infsof.2004.05.004
   Amland S, 2000, J SYST SOFTWARE, V53, P287, DOI 10.1016/S0164-1212(00)00019-4
   [Anonymous], 2008, AST, DOI DOI 10.1145/1370042.1370057
   [Anonymous], 1996, 104411995 IEEE
   [Anonymous], 1995, P 12 INT C TEST COMP
   [Anonymous], INT S SOFTW TEST AN
   [Anonymous], P INT C SOFTW MAINT
   [Anonymous], P INT MULTICONFERENC
   Arafeen M.J., 2013, P INT C SOFTW TEST V
   Bach J, 1999, COMPUTER, V32, P113
   Carr V, 2001, ADV ENG SOFTW, V32, P847, DOI 10.1016/S0965-9978(01)00036-9
   Do H., 2006, P ACM SIGSOFT S FDN
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Do H, 2010, IEEE T SOFTWARE ENG, V36, P593, DOI 10.1109/TSE.2010.58
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Erdogan G, 2014, INT J SOFTW TOOLS TE, V16, P627, DOI 10.1007/s10009-014-0330-5
   Fasanghari M, 2010, EXPERT SYST APPL, V37, P6138, DOI 10.1016/j.eswa.2010.02.114
   Felderer M, 2014, INT J SOFTW TOOLS TE, V16, P559, DOI 10.1007/s10009-014-0332-3
   Felderer M, 2014, SOFTWARE QUAL J, V22, P543, DOI 10.1007/s11219-013-9226-y
   Hadjimichael M, 2009, EXPERT SYST APPL, V36, P6512, DOI 10.1016/j.eswa.2008.07.081
   Hajipour V, 2013, MEASUREMENT, V46, P2770, DOI 10.1016/j.measurement.2013.04.015
   Harrold MJ, 2001, IEEE T SOFTWARE ENG, V27, P248, DOI 10.1109/32.910860
   Hettiarachchi C, 2014, INT CONF SOFTW SECUR, P157, DOI 10.1109/SERE.2014.29
   Kadhim A., 2011, International Journal of Innovative Technology Creative Engineering, IJITCE, P16
   Kazemifard M, 2011, APPL SOFT COMPUT, V11, P2260, DOI 10.1016/j.asoc.2010.08.006
   Krishnamoorthi R, 2009, INFORM SOFTWARE TECH, V51, P799, DOI 10.1016/j.infsof.2008.08.007
   Kumaran G., 2004, Proceedings of Sheffield SIGIR 2004. The Twenty-Seventh Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P297, DOI 10.1145/1008992.1009044
   Li Q, 2012, J SOFTW-EVOL PROC, V24, P783, DOI 10.1002/smr.512
   Malishevsky AG, 2002, PROC IEEE INT CONF S, P204, DOI 10.1109/ICSM.2002.1167767
   MAMDANI EH, 1975, INT J MAN MACH STUD, V7, P1, DOI 10.1016/S0020-7373(75)80002-2
   Microsoft, 2014, QUICK START GUID MAN
   Mirarab S, 2007, LECT NOTES COMPUT SC, V4422, P276
   National Institute of Standards and Technology, 2006, MIN SEC REQ FED INF
   Ngai EWT, 2005, DECIS SUPPORT SYST, V40, P235, DOI 10.1016/j.dss.2003.12.002
   Riaz M, 2014, INT REQUIR ENG CONF, P183, DOI 10.1109/RE.2014.6912260
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Saaty T.L., 1980, ANAL HIERARCHY PROCE
   SCHNEIDEWIND NF, 1979, IEEE T SOFTWARE ENG, V5, P276, DOI 10.1109/TSE.1979.234188
   Schwartz A, 2013, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSM.2013.11
   Sherriff M, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P81, DOI 10.1109/ISSRE.2007.25
   Srikanth H, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P62, DOI 10.1109/ISESE.2005.1541815
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wallace D.R., 2001, PROCEEDING ACS IEEE, P301
   Xu ZW, 2005, PROCEEDINGS OF THE 2005 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P120
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoon M., 2012, J SOFTWARE ENG APPL, V5, P823
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
   ZAGE WM, 1993, IEEE SOFTWARE, V10, P75, DOI 10.1109/52.219620
   Zech P., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P411, DOI 10.1109/ICST.2011.23
NR 50
TC 44
Z9 46
U1 1
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2016
VL 69
BP 1
EP 15
DI 10.1016/j.infsof.2015.08.008
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CW5RA
UT WOS:000365053100001
OA Bronze
DA 2024-07-18
ER

PT J
AU Saha, RK
   Khurshid, S
   Perry, DE
AF Saha, Ripon K.
   Khurshid, Sarfraz
   Perry, Dewayne E.
TI Understanding the triaging and fixing processes of long lived bugs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bug tracking; Bug triaging; Bug survival time
AB Context: Bug fixing is an integral part of software development and maintenance. A large number of bugs often indicate poor software quality, since buggy behavior not only causes failures that may be costly but also has a detrimental effect on the user's overall experience with the software product. The impact of long lived bugs can be even more critical since experiencing the same bug version after version can be particularly frustrating for user. While there are many studies that investigate factors affecting bug fixing time for entire bug repositories, to the best of our knowledge, none of these studies investigates the extent and reasons of long lived bugs.
   Objective: In this paper, we investigate the triaging and fixing processes of long lived bugs so that we can identify the reasons for delay and improve the overall bug fixing process.
   Methodology: We mine the bug repositories of popular open source projects, and analyze long lived bugs from five different perspectives: their proportion, severity, assignment, reasons, as well as the nature of fixes.
   Results: Our study on seven open-source projects shows that there are a considerable number of long lived bugs in each system and over 90% of them adversely affect the user's experience. The reasons for these long lived bugs are diverse including long assignment time, not understanding their importance in advance, etc. However, many bug-fixes were delayed without any specific reasons. Furthermore, 40% of long lived bugs need only small fixes.
   Conclusion: Our overall results suggest that a significant number of long lived bugs may be minimized through careful triaging and prioritization if developers could predict their severity, change effort, and change impact in advance. We believe our results will help both developers and researchers better to understand factors behind delays, improve the overall bug fixing process, and investigate analytical approaches for prioritizing bugs based on bug severity as well as expected bug fixing effort. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Saha, Ripon K.; Khurshid, Sarfraz; Perry, Dewayne E.] Univ Texas Austin, Dept Elect & Comp Engn, Ctr Adv Res Software Engn ARiSE, Austin, TX 78712 USA.
C3 University of Texas System; University of Texas Austin
RP Saha, RK (corresponding author), Univ Texas Austin, Dept Elect & Comp Engn, Ctr Adv Res Software Engn ARiSE, Austin, TX 78712 USA.
EM ripon@utexas.edu; khurshid@ece.utexas.edu; perry@ece.utexas.edu
RI Saha, Ripon/ABC-4586-2020
FU NSF [CCF-0820251, CCF-0845628]
FX We thank Ahmed Lamkanfi at the University of Antwerp for extending their
   bug Java dataset significantly for our study, and Julia Lawall at
   Inria/LIP6/UPMC/Sorbonne University, France, for her help creating C
   dataset. This research was supported in part by NSF Grants CCF-0820251
   and CCF-0845628.
CR Anbalagan P, 2009, PROC IEEE INT CONF S, P523, DOI 10.1109/ICSM.2009.5306337
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   Canfora G., 2011, 2011 18th Working Conference on Reverse Engineering, P191, DOI 10.1109/WCRE.2011.31
   Chen T, 2014, PROCEEDINGS OF THE FIFTH INTERNATIONAL SYMPOSIUM ON TEST AUTOMATION & INSTRUMENTATION, VOLS 1 AND 2, P82
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   Ferry D. E., 1993, Software Engineering - ESEC '93. 4th European Software Engineering Conference Proceedings, P48
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Guo PJ, 2011, P ACM 2011 C COMP SU, P395, DOI [10.1145/1958824.1958887., DOI 10.1145/1958824.1958887]
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Japkowicz N., 2000, Learning from Imbalanced Data Sets. Papers from the AAAI Workshop (Technical Report WS-00-05), P10
   Jihun Park, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P40, DOI 10.1109/MSR.2012.6224298
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lamkanfi A, 2013, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2013.6624028
   Marks L., 2011, P 7 INT C PRED MOD S, DOI [10.1145/2020390.202040, DOI 10.1145/2020390.202040]
   Nguyen Tien N, 2010, Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering-Volume 1, ICSE '10, P315
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Saha RK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P144, DOI 10.1109/CSMR-WCRE.2014.6747164
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Shokripour R, 2013, IEEE WORK CONF MIN S, P2, DOI 10.1109/MSR.2013.6623997
   Thung F, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P420, DOI 10.1109/ICSM.2012.6405302
   Tian Y, 2013, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2013.31
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 32
TC 29
Z9 32
U1 0
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2015
VL 65
BP 114
EP 128
DI 10.1016/j.infsof.2015.03.002
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CK3IP
UT WOS:000356110100008
DA 2024-07-18
ER

PT J
AU Lytra, I
   Gaubatz, P
   Zdun, U
AF Lytra, Ioanna
   Gaubatz, Patrick
   Zdun, Uwe
TI Two controlled experiments on model-based architectural decision making
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Architectural design decision; Architectural decision model;
   Architectural knowledge; Controlled experiment
ID PATTERNS
AB Context: In recent years, architectural design decisions are becoming more and more common for documenting software architectures. Rather than describing the structure of software systems, architectural decisions capture the design rationale and - often reusable - architectural knowledge. Many approaches and tools have been proposed in the literature to support architectural decision making and documentation (for instance, based on models, ontologies, or templates). In this context, the capturing, organization, and effective reuse of architectural knowledge has gained a lot of attention.
   Objective: However, there is little empirical evidence about the supportive effect of reusable architectural knowledge on the effectiveness and efficiency of architectural decision making.
   Method: To investigate these aspects, we conducted two separate controlled experiments with software architecture students in which we tested the supportive effect of reusable decision models in decision making and documentation.
   Results: Our results show that the use of reusable decision models can significantly increase both the efficiency and the effectiveness of novice architects.
   Conclusion: We can report, that our findings are in line with similar studies and support the claims regarding reusable architectural design decisions in principle. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Lytra, Ioanna; Gaubatz, Patrick; Zdun, Uwe] Univ Vienna, Software Architecture Res Grp, A-1090 Vienna, Austria.
C3 University of Vienna
RP Lytra, I (corresponding author), Univ Vienna, Fac Comp Sci, Wahringerstr 29, A-1090 Vienna, Austria.
EM ioanna.lytra@univie.ac.at; patrick.gaubatz@univie.ac.at;
   uwe.zdun@univie.ac.at
RI Zdun, Uwe/AFR-2161-2022
CR Abrams S, 2006, IBM SYST J, V45, P481, DOI 10.1147/sj.453.0481
   Al-Naeem T, 2005, PROC INT CONF SOFTW, P244
   Ameller D., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P315, DOI 10.1109/RE.2012.6345821
   [Anonymous], 2018, R: A Language and Environment for Statistical Computing
   BABAR MA, 2007, P 2 WORKSH SHARING R
   Bu WF, 2009, 2009 ICSE WORKSHOP ON SHARING AND REUSING ARCHITECTURAL KNOWLEDGE, P33, DOI 10.1109/SHARK.2009.5069113
   CAPILLA R, 2007, P 2 WORKSH SHARING R
   Clements P., 2002, DOCUMENTING SOFTWARE
   Falessi D, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978812
   Farenhorst R, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P125, DOI 10.1109/WICSA.2008.20
   Galster Matthias, 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P239, DOI 10.1109/WICSA.2014.28
   Harrison NB, 2007, IEEE SOFTWARE, V24, P38, DOI 10.1109/MS.2007.124
   Herold S., 2007, COMMON COMPONENT MOD, P16
   Hoorn JF, 2011, J SYST SOFTWARE, V84, P1424, DOI 10.1016/j.jss.2010.11.909
   Jansen A., 2007, WORKING IEEEIFIP C S, P4
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Konersmann M., 2013, 9 INT ACM SIGS C QUA, P163
   Lee L, 2007, CAN CON EL COMP EN, P686
   Lytra Ioanna, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P224, DOI 10.1007/978-3-642-39031-9_20
   Lytra I., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P111, DOI 10.1109/WICSA-ECSA.212.19
   MacLean A., 1991, Human-Computer Interaction, V6, P201, DOI 10.1207/s15327051hci0603&4_2
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Maurer TJ, 1998, J APPL PSYCHOL, V83, P324, DOI 10.1037/0021-9010.83.2.324
   Mayr C, 2009, LECT NOTES COMPUT SC, V5751, P1
   Miesbauer Cornelia, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P130, DOI 10.1007/978-3-642-39031-9_12
   Nowak Marcin, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P146, DOI 10.1007/978-3-642-39031-9_13
   Nowak Marian, 2010, PEDAGOGIKA CHRZESCIJ, P13
   SCHUSTER N, 2007, P 19 INT C SOFTW ENG, P255
   Shahin M., 2010, WORKSH SHAR REUS ARC, P88
   Shahin M, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P293, DOI 10.1109/WICSA.2009.5290823
   Shahrom M., 2011, Proceedings 2011 19th International Conference on Geoinformatics, DOI 10.1109/GeoInformatics.2011.5981170
   Shapiro S. S., BIOMETRIKA, V3
   Tang A, 2010, J SYST SOFTWARE, V83, P352, DOI 10.1016/j.jss.2009.08.032
   Tofan D, 2014, INFORM SOFTWARE TECH, V56, P850, DOI 10.1016/j.infsof.2014.03.009
   Tyree J, 2005, IEEE SOFTWARE, V22, P19, DOI 10.1109/MS.2005.27
   van Heesch U, 2013, J SYST SOFTWARE, V86, P1545, DOI 10.1016/j.jss.2013.01.057
   van Heesch U, 2012, SCI COMPUT PROGRAM, V77, P551, DOI 10.1016/j.scico.2011.11.008
   VIGDERHOUS G, 1977, PAC SOCIOL REV, V20, P61
   Weinreich R, 2014, LECT NOTES COMPUT SC, V8627, P1, DOI 10.1007/978-3-319-09970-5_1
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zalewski A, 2011, LECT NOTES COMPUT SC, V6903, P83, DOI 10.1007/978-3-642-23798-0_9
   Zannier C., 2005, SIGSOFT SOFTWARE ENG, V30, P1
   Zdun U., 2009, P 14 EUROPEAN C PATT, P1
   Zimmerman O, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P157, DOI 10.1109/WICSA.2008.19
   ZIMMERMANN O, 2007, 3 INT C QUAL SOFTW A, V4880, P15
   Zimmermann O., 2007, P WORKSH SOFTW ENG M, P46
   Zimmermann O, 2011, IEEE SOFTWARE, V28, P64, DOI 10.1109/MS.2011.3
NR 48
TC 7
Z9 7
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2015
VL 63
BP 58
EP 75
DI 10.1016/j.infsof.2015.03.006
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH6LV
UT WOS:000354149000005
DA 2024-07-18
ER

PT J
AU Scheller, T
   Kühn, E
AF Scheller, Thomas
   Kuehn, Eva
TI Automated measurement of API usability: The API Concepts Framework
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE API usability; API design; Complexity measures; Metrics
ID METRICS
AB Context: Usability is an important software quality attribute for APIs. Unfortunately, measuring it is not an easy task since many things like experienced evaluators, suitable test users, and a functional product are needed. This makes existing usability measurement methods difficult to use, especially for non-professionals.
   Objective: To make API usability measurement easier, an automated and objective measurement method would be needed. This article proposes such a method. Since it would be impossible to find and integrate all possible factors that influence API usability in one step, the main goal is to prove the feasibility of the introduced approach, and to define an extensible framework so that additional factors can easily be defined and added later.
   Method: A literature review is conducted to find potential factors influencing API usability. From these factors, a selected few are investigated more closely with usability studies. The statistically evaluated results from these studies are used to define specific elements of the introduced framework. Further, the influence of the user as a critical factor for the framework's feasibility is evaluated.
   Results: The API Concepts Framework is defined, with an extensible structure based on concepts that represent the user's actions, measurable properties that define what influences the usability of these concepts, and learning effects that represent the influence of the user's experience. A comparison of values calculated by the framework with user studies shows promising results.
   Conclusion: It is concluded that the introduced approach is feasible and provides useful results for evaluating API usability. The extensible framework easily allows to add new concepts and measurable properties in the future. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Scheller, Thomas; Kuehn, Eva] Vienna Univ Technol, Inst Comp Languages, A-1040 Vienna, Austria.
C3 Technische Universitat Wien
RP Scheller, T (corresponding author), Vienna Univ Technol, Inst Comp Languages, Argentinierstr 8, A-1040 Vienna, Austria.
EM ts@complang.tuwien.ac.at; eva@complang.tuwien.ac.at
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 2005, QUEUE
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 1993, Usability Engineering
   [Anonymous], 2008, Practical API design: Confessions of a Java framework architect
   [Anonymous], 2001, StandardISO/IEC9126
   Bertoa MF, 2006, J SYST SOFTWARE, V79, P427, DOI 10.1016/j.jss.2005.06.026
   Bloch J., 2006, 21 ACM SIGPLAN S OBJ, P506, DOI DOI 10.1145/1176617.1176622
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Clarke S, 2004, DR DOBBS J, V29, pS6
   Clarke S., 2010, MAKING SOFTWARE WHAT
   Clarke S., 2003, P JOINT C EASE PPIG
   Clarke S., ATTRIBUTES API USABI
   Cwalina K., 2005, Framework design guidelines: Conventions, idioms, and patterns for reusable
   de Souza CRB, 2009, PROC INT CONF SOFTW, P299, DOI 10.1109/ICSE-COMPANION.2009.5071006
   Duala-Ekoko E, 2011, LECT NOTES COMPUT SC, V6813, P79, DOI 10.1007/978-3-642-22655-7_5
   Ellis B, 2007, PROC INT CONF SOFTW, P302
   Fincher S., 2002, Proceedings of the 14th Annual Workshop of the Psychology of Programming Interest Group, June, Brunei University, UK, P156
   Fowler M, 2004, INVERSION CONTROL CO
   Fowler M., 2010, ADDISON WESLEY SIGNA
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gemmell M., API DESIGN
   Gill NasibS., 2004, ACM SIGSOFT Software Engineering Notes, V29, P4
   Henning M., 2007, ACM Queue, V5, P25, DOI 10.1145/1255421.1255422
   Hertzum M, 2003, INT J HUM-COMPUT INT, V15, P183, DOI 10.1207/S15327590IJHC1501_14
   Hvannberg ET, 2007, INTERACT COMPUT, V19, P225, DOI 10.1016/j.intcom.2006.10.001
   Ko AJ, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P199
   Laugwitz B, 2008, LECT NOTES COMPUT SC, V5298, P63, DOI 10.1007/978-3-540-89350-9_6
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Michura J, 2005, ITCC 2005: INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: CODING AND COMPUTING, VOL 2, P404, DOI 10.1109/ITCC.2005.193
   Oman P., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P337, DOI 10.1109/ICSM.1992.242525
   Piccioni M., 2013, EMPIRICAL STUDY API
   Rama G.M., 2013, SOFTWARE PRACTICE EX
   Scheller Thomas, 2013, Human Factors in Computing and Informatics. Proceedings of the First International Conference (SouthCHI 2013): LNCS 7946, P54, DOI 10.1007/978-3-642-39062-3_4
   Scheller T., API CONCEPTS FRAMEWO
   Scheller T., 2013, 12 IASTED INT C SOFT, P760
   Scheller T, 2012, 2012 IEEE 19TH INTERNATIONAL CONFERENCE AND WORKSHOPS ON ENGINEERING OF COMPUTER BASED SYSTEMS (ECBS), P232, DOI 10.1109/ECBS.2012.27
   Stylos J, 2007, PROC INT CONF SOFTW, P529
   Stylos J, 2009, S VIS LANG HUM CEN C, P119, DOI 10.1109/VLHCC.2009.5295283
   Stylos Jeffrey., 2008, Proc. of the 16th International Symposium on Foundations of Software Eng, P105
   Welker K. D, 2001, CROSSTALK, V14, P18
   Zibran M. F., 2011, 2011 18th Working Conference on Reverse Engineering, P151, DOI 10.1109/WCRE.2011.26
NR 42
TC 37
Z9 40
U1 2
U2 28
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2015
VL 61
BP 145
EP 162
DI 10.1016/j.infsof.2015.01.009
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF7PI
UT WOS:000352748400009
DA 2024-07-18
ER

PT J
AU Han, AR
   Bae, DH
   Cha, S
AF Han, Ah-Rim
   Bae, Doo-Hwan
   Cha, Sungdeok
TI An efficient approach to identify multiple and independent Move Method
   refactoring candidates
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Refactoring identification process; Refactoring selection; Multiple
   simultaneous refactorings; Maintainability improvement; Refactoring
   effect dependency
ID PARALLEL ALGORITHM
AB Context: Application of a refactoring operation creates a new set of dependency in the revised design as well as a new set of further refactoring candidates. In the studies of stepwise refactoring recommendation approaches, applying one refactoring at a time has been used, but is inefficient because the identification of the best candidate in each iteration of refactoring identification process is computation-intensive. Therefore, it is desirable to accurately identify multiple and independent candidates to enhance efficiency of refactoring process.
   Objective: We propose an automated approach to identify multiple refactorings that can be applied simultaneously to maximize the maintainability improvement of software. Our approach can attain the same degree of maintainability enhancement as the method of the refactoring identification of the single best one, but in fewer iterations (lower computation cost).
   Method: The concept of maximal independent set (MIS) enables us to identify multiple refactoring operations that can be applied simultaneously. Each MIS contains a group of refactoring candidates that neither affect (i.e., enable or disable) nor influence maintainability on each other. Refactoring effect delta table quantifies the degree of maintainability improvement each elementary candidate. For each iteration of the refactoring identification process, multiple refactorings that best improve maintainability are selected among sets of refactoring candidates (MISs).
   Results: We demonstrate the effectiveness and efficiency of the proposed approach by simulating the refactoring operations on several large-scale open source projects such as jEdit, Columba, and jGit. The results show that our proposed approach can improve maintainability by the same degree or to a better extent than the competing method, choosing one refactoring candidate at a time, in a significantly smaller number of iterations. Thus, applying multiple refactorings at a time is both effective and efficient.
   Conclusion: Our proposed approach helps improve the maintainability as well as the productivity of refactoring identification. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Han, Ah-Rim; Cha, Sungdeok] Korea Univ, Dept Comp Sci, Seoul 136701, South Korea.
   [Bae, Doo-Hwan] Korea Adv Inst Sci & Technol, Dept Comp Sci, Taejon 305701, South Korea.
C3 Korea University; Korea Advanced Institute of Science & Technology
   (KAIST)
RP Cha, S (corresponding author), Korea Univ, Dept Comp Sci, Seoul 136701, South Korea.
EM arhan@korea.ac.kr; bae@se.kaist.ac.kr; scha@korea.ac.kr
RI Bae, Doo-Hwan/C-1538-2011
FU Basic Science Research Program through the National Research Foundation
   of Korea (NRF) - Ministry of Education [NRF-2014R1A1A2054098]; MSIP
   (Ministry of Science, ICT and Future Planning), Korea, under the ITRC
   (Information Technology Research Center) support program
   [NIPA-2014-H0301-14-1023]
FX This research was supported by Basic Science Research Program through
   the National Research Foundation of Korea (NRF) funded by the Ministry
   of Education (NRF-2014R1A1A2054098). This research was supported by the
   MSIP (Ministry of Science, ICT and Future Planning), Korea, under the
   ITRC (Information Technology Research Center) support program
   (NIPA-2014-H0301-14-1023) supervised by the NIPA (National IT Industry
   Promotion Agency).
CR ALON N, 1986, J ALGORITHM, V7, P567, DOI 10.1016/0196-6774(86)90019-2
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bonja C., 2006, ACM SE 44 P 44 ANN S, P91
   Davidor Y., 1990, P 1 WORKSHOP FDN GEN, P23
   Demeyer S., 2002, Object-Oriented Reengineering Patterns
   Eiben A. E., 1994, Proceedings of the First IEEE Conference on Evolutionary Computation. IEEE World Congress on Computational Intelligence (Cat. No.94TH0650-2), P542, DOI 10.1109/ICEC.1994.350002
   Fokaefs M., 2012, J SYST SOFTW
   Ghezzi C, 2002, Fundamentals of Software Engineering
   Han A.-R., 2014, MULTIPLE REFACTORING
   Han AR, 2013, INFORM SOFTWARE TECH, V55, P966, DOI 10.1016/j.infsof.2012.12.002
   Harman M., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P414, DOI 10.1109/ICSTW.2011.38
   Higo Y, 2008, J SOFTW MAINT EVOL-R, V20, P435, DOI 10.1002/smr.394
   Hotta K, 2012, EUR CON SFTWR MTNCE, P53, DOI 10.1109/CSMR.2012.16
   Jeon SU, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P337, DOI 10.1109/APSEC.2002.1183003
   JOHNSON DS, 1988, INFORM PROCESS LETT, V27, P119, DOI 10.1016/0020-0190(88)90065-8
   Kerievsky J., 2005, Refactoring to Patterns
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Lee S, 2011, SOFTWARE PRACT EXPER, V41, P521, DOI 10.1002/spe.1031
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Liu H, 2008, IET SOFTW, V2, P446, DOI 10.1049/iet-sen:20070033
   Liu H, 2012, IEEE T SOFTWARE ENG, V38, P220, DOI 10.1109/TSE.2011.9
   LUBY M, 1986, SIAM J COMPUT, V15, P1036, DOI 10.1137/0215074
   Mens T., 2007, SOFTW SYST MODEL
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Qayum F., 2011, ECEASST, V38
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Sales V, 2013, WORK CONF REVERSE EN, P232, DOI 10.1109/WCRE.2013.6671298
   Seng O., 2006, P 8 ANN C GEN EV COM, P1916
   Tsantalis N, 2011, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2011.7
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Van Gorp P, 2003, LECT NOTES COMPUT SC, V2863, P144
   Vaucher S, 2009, WORK CONF REVERSE EN, P145, DOI 10.1109/WCRE.2009.23
   Zibran MF, 2011, IEEE INT WORK C SO, P105, DOI 10.1109/SCAM.2011.21
   Zibran MF, 2011, CONF PROC INT SYMP C, P266, DOI 10.1109/ICPC.2011.45
   Zibran MF, 2013, IET SOFTW, V7, P167, DOI 10.1049/iet-sen.2012.0058
NR 35
TC 12
Z9 17
U1 0
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2015
VL 59
BP 53
EP 66
DI 10.1016/j.infsof.2014.10.007
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CB1ZT
UT WOS:000349427200004
DA 2024-07-18
ER

PT J
AU Panach, JI
   Juristo, N
   Valverde, F
   Pastor, O
AF Panach, Jose Ignacio
   Juristo, Natalia
   Valverde, Francisco
   Pastor, Oscar
TI A framework to identify primitives that represent usability within
   Model-Driven Development methods
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model-Driven Development; Usability; Conceptual model
ID INFORMATION
AB Context: Nowadays, there are sound methods and tools which implement the Model-Driven Development approach (MDD) satisfactorily. However, MDD approaches focus on representing and generating code that represents functionality, behaviour and persistence, putting the interaction, and more specifically the usability, in a second place. If we aim to include usability features in a system developed with a MDD tool, we need to extend manually the generated code.
   Objective: This paper tackles how to include functional usability features (usability recommendations strongly related to system functionality) in MDD through conceptual primitives.
   Method: The approach consists of studying usability guidelines to identify usability properties that can be represented in a conceptual model. Next, these new primitives are the input for a model compiler that generates the code according to the characteristics expressed in them. An empirical study with 66 subjects was conducted to study the effect of including functional usability features regarding end users' satisfaction and time to complete tasks. Moreover, we have compared the workload of two MDD analysts including usability features by hand in the generated code versus including them through conceptual primitives according to our approach.
   Results: Results of the empirical study shows that after including usability features, end users' satisfaction improves while spent time does not change significantly. This justifies the use of usability features in the software development process. Results of the comparison show that the workload required to adapt the MDD method to support usability features through conceptual primitives is heavy. However, once MDD supports these features, MDD analysts working with primitives are more efficient than MDD analysts implementing these features manually.
   Conclusion: This approach brings us a step closer to conceptual models where models represent not only functionality, behaviour or persistence, but also usability features. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Panach, Jose Ignacio] Univ Valencia, Dept Informat, Escola Tecn Super Engn, Valencia 46100, Spain.
   [Juristo, Natalia] Univ Politecn Madrid, Boadilla Del Monte 28660, Spain.
   [Valverde, Francisco; Pastor, Oscar] Univ Politecn Valencia, Ctr Invest Metodos Prod Software ProS, Valencia 46022, Spain.
C3 University of Valencia; Universidad Politecnica de Madrid; Universitat
   Politecnica de Valencia
RP Panach, JI (corresponding author), Univ Valencia, Dept Informat, Escola Tecn Super Engn, Avenida Univ, S-N, Valencia 46100, Spain.
EM joigpana@uv.es; natalia@fi.upm.es; fvalverde@pros.upv.es;
   opastor@pros.upv.es
RI Panach, Jose Ignacio/ABF-2099-2020; Pastor Lopez, Oscar/S-4216-2016
OI Panach, Jose Ignacio/0000-0002-7043-6227; Pastor Lopez,
   Oscar/0000-0002-1320-8471; Valverde, Francisco/0000-0002-2316-664X
FU Spanish Ministry of Science and Innovation Project SMART ADAPT
   [TIN201342981-P, TIN2011-23216]; ERDF; Generalitat Valenciana-funded
   ORCA Project [PROMETEO/2009/015]; UV [UV-INV-PRECOMP13-115032]
FX This work was developed with the support of the Spanish Ministry of
   Science and Innovation Project SMART ADAPT (TIN201342981-P),
   TIN2011-23216 and was co-financed by ERDF. It also has the support of
   Generalitat Valenciana-funded ORCA Project (PROMETEO/2009/015) and UV
   (UV-INV-PRECOMP13-115032).
CR Abrahao S, 2008, HUM-COMPUT INT-SPRIN, P3, DOI 10.1007/978-1-84628-941-5_1
   Acerbis R, 2007, LECT NOTES COMPUT SC, V4607, P501
   [Anonymous], 2001, 912612001 ISOIEC
   [Anonymous], 1998, ISO 9241-11
   Aquino N., 2008, 7 INT C COMP AID DES, P35
   Bass L, 2003, J SYST SOFTWARE, V66, P187, DOI 10.1016/S0164-1212(02)00076-6
   Bastien J.M. C., 1993, INRIA, P79
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Coram T., 1996, PATTERN LANGUAGE USE
   Escalona MJ, 2008, IEEE T SOFTWARE ENG, V34, P377, DOI 10.1109/TSE.2008.27
   Fernandez A, 2009, LECT NOTES COMPUT SC, V5802, P497, DOI 10.1007/978-3-642-04409-0_49
   Folmer E, 2004, J SYST SOFTWARE, V70, P61, DOI 10.1016/S0164-1212(02)00159-0
   Henninger S., 2005, P SEM WEB EN SOFTW E, P41
   Panach JI, 2013, COMPUT SCI INF SYST, V10, P999, DOI 10.2298/CSIS120213016P
   Juristo N., 2013, BASICS SOFTWARE ENG
   Juristo N, 2007, IEEE T SOFTWARE ENG, V33, P744, DOI 10.1109/TSE.2007.70741
   Juristo N, 2007, J SYST SOFTWARE, V80, P1506, DOI 10.1016/j.jss.2007.01.006
   Kent S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P286
   Koch N., 2008, UML BASED WEB ENG AP, P157
   Mellor SJ, 2003, IEEE SOFTWARE, V20, P14, DOI 10.1109/MS.2003.1231145
   Molina F, 2009, ADV ENG SOFTW, V40, P1306, DOI 10.1016/j.advengsoft.2009.01.018
   Molina P.J., 2002, COMP AID DES US INT
   Ormeno Yeshica Isela, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P672, DOI 10.1007/978-3-642-38709-8_43
   Panach J.I., 2010, THESIS U POLITECNICA
   Panach Navarrete Jose Ignacio, 2012, Conceptual Modeling. Proceedings 31st International Conference, ER 2012, P525, DOI 10.1007/978-3-642-34002-4_41
   Pastor O, 2001, INFORM SYST, V26, P507, DOI 10.1016/S0306-4379(01)00035-7
   Pastor O., 2007, MODEL DRIVEN ARCHITE
   Paternò F, 2011, J SYST SOFTWARE, V84, P1806, DOI 10.1016/j.jss.2011.05.025
   Perzel K., 1999, PLOP 99 C
   Raneburger D., 2011, OPTIMIZED GUI GENERA, V340
   Sauro J, 2012, QUANTIFYING THE USER EXPERIENCE: PRACTICAL STATISTICS FOR USER RESEARCH, P1
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Sottet JS, 2007, J MULTIMODAL USER IN, V1, P1, DOI 10.1007/BF02910054
   Tao YL, 2007, LECT NOTES ENG COMP, P1066
   Tidwell J., 2010, Designing interfaces: Patterns for effective interaction design
   Welie M.v., 2000, 7 PATT LANG PROGR C
   Wohlin C., 2012, EXPT SOFTWARE ENG IN
NR 39
TC 9
Z9 9
U1 0
U2 9
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 338
EP 354
DI 10.1016/j.infsof.2014.07.002
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800020
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Becker, K
   Pedroso, BDC
   Pimenta, MS
   Jacobi, RP
AF Becker, Karin
   Costa Pedroso, Bruno de Souza
   Pimenta, Marcelo Soares
   Jacobi, Ricardo Pezzuol
TI Besouro: A framework for exploring compliance rules in automatic TDD
   behavior assessment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE TDD; Conformance assessment; Framework
ID TEST-DRIVEN DEVELOPMENT; SOFTWARE-DEVELOPMENT; EXPERIENCE
AB Context: The improvements promoted by Test-Driven Design (TDD) have not been confirmed by quantitative assessment studies. To a great extent, the problem lies in the lack of a rigorous definition for TDD. An emerging approach has been to measure the conformance of TDD practices with the support of automated systems that embed an operational definition, which represent the specific TDD process assumed and the validation tests used to determine its presence and quantity. The empirical construction of TDD understanding and consensus building requires the ability of comparing different definitions, evaluating them with regard to practitioners' perception, and exploring code information for improvement of automatic assessment.
   Objective: This paper describes Besouro, a framework targeted at the development of systems for automatic TDD behavior assessment. The main rationale of Besouro's design is the ability to compare distinct operational definitions, evaluate them with regard to users' perception, and explore code information for further analysis and conformance assessment improvement.
   Method: We developed an architecture with clear separation of concerns, which enables to vary: (a) the atomic events and respective metrics to be collected from developing and testing environments; (b) the organization of atomic events in streams of actions or processes; and (c) the classification and assessment components for each set of operational definitions adopted. The architecture also includes a mechanism for on-line user assessment awareness and feedback, and integrates event-related information with the respective code in a code version system.
   Results: We illustrate the usefulness of Besouro's features for understanding the actions and processes underlying TDD through a prototype developed to support an experiment based on user feedback. We show how it was possible to compare variations of a same operational definition by exploring users' feedback, and use source code to improve the automatic classification of TDD practices.
   Conclusion: Understanding the actions and processes underlying successful TDD application is key for leveraging TDD benefits. In the absence of a rigorous definition for TDD, the proposed approach aims at building consensus from experimentation and empirical validation. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Becker, Karin; Pimenta, Marcelo Soares] Univ Fed Rio Grande do Sul, Inst Informat, Porto Alegre, RS, Brazil.
   [Costa Pedroso, Bruno de Souza; Jacobi, Ricardo Pezzuol] Univ Brasilia, Dept Comput, Brasilia, DF, Brazil.
C3 Universidade Federal do Rio Grande do Sul; Universidade de Brasilia
RP Becker, K (corresponding author), Univ Fed Rio Grande do Sul, Inst Informat, Porto Alegre, RS, Brazil.
EM karin.becker@inf.ufrgs.br; brunopedroso@gmail.com;
   mpimenta@inf.ufrgs.br; jacobi@unb.br
RI Becker, Karin/E-8963-2013
OI Becker, Karin/0000-0003-4967-1027; Jacobi, Ricardo/0000-0002-4520-7641
CR Aniche Mauricio Finavaro, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P469, DOI 10.1109/ICSTW.2010.16
   [Anonymous], 2012, EXPERIMENTATION SOFT
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   Beck K, 2001, IEEE SOFTWARE, V18, P87, DOI 10.1109/52.951502
   Beck K., 2000, EXTREME PROGRAMMING
   Bouwers E, 2012, COMMUN ACM, V55, P54, DOI 10.1145/2209249.2209266
   Desai C., 2008, ACM SIGCSE B, V40, P97
   Desai C., 2007, P 40 SIGCSE TECHN S, P148
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Erdogmus Hakan, 2010, Encyclopedia of Software Engineering, P1211
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   Hammond S., 2012, P 50 ANN SE REG C AC, P158
   Höst M, 2005, PROC INT CONF SOFTW, P470
   Janzen D, 2005, COMPUTER, V38, P43, DOI 10.1109/MC.2005.314
   Janzen DS, 2008, IEEE SOFTWARE, V25, P77, DOI 10.1109/MS.2008.34
   Janzen DS, 2007, PROC INT CONF SOFTW, P719, DOI 10.1109/ICSE.2007.8
   Janzen DS, 2008, SIGCSE'08: PROCEEDINGS OF THE 39TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P532, DOI 10.1145/1352322.1352315
   JESS, JESS RUL SYST
   Johnson P. M., 2007, P AGILE 2007 AUG 13, P15
   Johnson P, 2009, INT SYMP EMP SOFTWAR, P168, DOI 10.1109/ESEM.2009.5315989
   Kollanus S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P403, DOI 10.1109/QUATIC.2010.73
   Kollanus S, 2008, ITICSE '08: PROCEEDINGS OF THE 13TH ANNUAL CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P124
   Koskela L., 2008, Test Driven: Practical TDD and Acceptance TDD for Java Developers
   Kou HB, 2010, AUTOMAT SOFTW ENG, V17, P57, DOI 10.1007/s10515-009-0058-8
   Madeyski L., 2013, P 8 INT C EV NOV APP, P260
   Madeyski L, 2007, LECT NOTES COMPUT SC, V4764, P200
   Madeyski L, 2010, TEST-DRIVEN DEVELOPMENT, P1, DOI 10.1007/978-3-642-04288-1
   Mishali O, 2008, LECT NOTES BUS INF P, V9, P63
   Muller Matthias M., 2007, EMPIR SOFTW ENG, V12, P593
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   OBERHAUSER R, 2009, P 1 INT C ADV SYST T, P19
   Pancur M, 2011, INFORM SOFTWARE TECH, V53, P557, DOI 10.1016/j.infsof.2011.02.002
   Pedroso B, 2010, LECT NOTES BUS INF P, V48, P393
   Shull F, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.152
   Tikir M.M., 2002, P INT S SOFTW TEST A, V27, P86
   Vandervert L., 1988, HDB TEACHING STAT RE, P132
   Wake W., 2001, TEST 1 STOPLIGHT
   Wang YH, 2004, LECT NOTES COMPUT SC, V3134, P32
NR 39
TC 8
Z9 10
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 494
EP 508
DI 10.1016/j.infsof.2014.06.003
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500028
DA 2024-07-18
ER

PT J
AU Dittrich, Y
AF Dittrich, Yvonne
TI Software engineering beyond the project - Sustaining software ecosystems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software ecosystems; Software product development; Qualitative empirical
   research
ID DESIGN; AGILE; MODEL
AB Context: The main part of software engineering methods, tools and technologies has developed around projects as the central organisational form of software development. A project organisation depends on clear bounds regarding scope, participants, development effort and lead-time. What happens when these conditions are not given? The article claims that this is the case for software product specific ecosystems. As software is increasingly developed, adopted and deployed in the form of customisable and configurable products, software engineering as a discipline needs to take on the challenge to support software ecosystems.
   Objective: The article provides a holistic understanding of the observed and reported practices as a starting point to device specific support for the development in software ecosystems.
   Method: A qualitative interview study was designed based on previous long-term ethnographical inspired research.
   Results: The analysis results in a set of common features of product development and evolution despite differences in size, kind of software and business models. Design is distributed and needs to be coordinated across heterogeneous design constituencies that, together with the software, build a product specific socio-technical ecosystem. The technical design has to support the deference of part of the development not only to 3rd-party developers but also to local designers tailoring the software in the use organisation. The technical interfaces that separate the work of different design constituencies are contested and need to be maintained permanently. Development takes place as cycles within cycles overlaying development cycles with different rhythms to accommodate different evolution drivers.
   Conclusion: The reported practices challenge some of the very core assumptions of traditional software engineering, but makes perfect sense, considering that the frame of reference for product development is not a project but continuous innovation across the respective ecosystem. The article provides a number of concrete points for further research. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Dittrich, Yvonne] IT Univ Copenhagen, DK-2300 Copenhagen S, Denmark.
C3 IT University Copenhagen
RP Dittrich, Y (corresponding author), IT Univ Copenhagen, Rued Langgaards Vej 7, DK-2300 Copenhagen S, Denmark.
EM ydi@itu.dk
OI Dittrich, Yvonne/0000-0003-4757-3394
CR Andersen R, 2009, LECT NOTES COMPUT SC, V5435, P31
   Andersson C., 2010, THESIS IT U COPENHAG
   [Anonymous], 2002, CMMI SOFTW ENG CMMI
   Ardito C, 2012, J VISUAL LANG COMPUT, V23, P78, DOI 10.1016/j.jvlc.2011.11.005
   Barbero M, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P277, DOI 10.1109/ECBS.2008.42
   Beck K., 2000, EXTREME PROGRAMMING
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4143, P36
   Bjarnason E, 2012, INFORM SOFTWARE TECH, V54, P1107, DOI 10.1016/j.infsof.2012.04.006
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Bosch J., 2012, J SYST SOFTW, V85
   Bosch J., 2012, 2012 JOINT WORK IEEE, P244
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Bosch Jan, 2009, 2009 13 INT SOFTW PR, V9, P111, DOI DOI 10.1145/1753235.1753251
   Cockburn A., 2002, AGILE SOFTWARE DEV
   Cordero Carballo P.E., 2006, THESIS IT U COPENHAG
   Czarnecki K., 2002, GENERATIVE PROGRAMMI
   de Souza CRB, 2011, IEEE T SOFTWARE ENG, V37, P325, DOI 10.1109/TSE.2011.19
   Dittrich Y., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P103, DOI 10.1109/ICGSE.2011.21
   Dittrich Y., 2008, TECHNICAL REPORT
   Dittrich Y, 2008, EMPIR SOFTW ENG, V13, P231, DOI 10.1007/s10664-007-9057-1
   Dittrich Y, 2009, IEEE SOFTWARE, V26, P41, DOI 10.1109/MS.2009.173
   Eriksson J., 2007, Journal of Organizational and End User Computing, V19, P47, DOI 10.4018/joeuc.2007040103
   Fischer G, 2006, HUM COM INT, V9, P427
   Floyd C., 1989, 2 EUR SOFTW ENG C U
   Gorschek T, 2006, REQUIR ENG, V11, P79, DOI 10.1007/s00766-005-0020-7
   Hanssen GK, 2012, J SYST SOFTWARE, V85, P1455, DOI 10.1016/j.jss.2011.04.020
   Hansson C., 2006, P HAW INT C SYST SCI
   HANSSON C, 2004, EXTREME PROGRAMMING
   Hansson C, 2006, J SYST SOFTWARE, V79, P1295, DOI 10.1016/j.jss.2005.12.020
   Hess J, 2013, INT J HUM-COMPUT ST, V71, P570, DOI 10.1016/j.ijhcs.2013.01.003
   Hippel E. von., 2005, Democratizing Innovation
   IEEE Computer Society, 2004, GUID SOFTW ENG BOD K
   IEEE Computer Society and ISO/IEC JTC 1/SC7, SEVOCAB SOFTW ENG VO
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Jansen S., 2009, P 1 INT WORKSHOP SOF, P34
   Jansen S, 2012, J SYST SOFTWARE, V85, P1495, DOI 10.1016/j.jss.2011.12.007
   Johannessen LK, 2009, COMPUT SUPP COOP W J, V18, P607, DOI 10.1007/s10606-009-9097-8
   Karlsson L, 2007, EMPIR SOFTW ENG, V12, P3, DOI 10.1007/s10664-006-7240-4
   Khurum M., 2007, P AS PAC SOFTW ENG C
   Khurum M, 2009, THESIS BLEKINGE I TE
   Ko AJ, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922658
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   LIEBERMAN H, 2006, HUMAN COMPUTER INTER, V9
   LIENTZ BP, 1981, COMMUN ACM, V24, P763, DOI 10.1145/358790.358796
   Madhavji N.H., 2006, Software evolution and feedback
   Mens T., 2008, Software Evolution
   Midleton-Kelly E., 2006, SOFTWARE EVOLUTION F
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Pedersen J., 2008, THESIS IT U COPENHAG
   Pollock N, 2007, SOC STUD SCI, V37, P254, DOI 10.1177/0306312706066022
   Rautiainen K., 2004, THESIS HELSINKI U TE
   Robson C., 2002, Real world research
   Ronkko K., 2008, PDC'08, P71
   Ronkko K., 2004, Proc. 8th Conf. Participatory Des.: Artful Integr.: Interweaving Media, V1, P112, DOI DOI 10.1145/1011870.1011884
   Scacchi W, 2012, J SYST SOFTWARE, V85, P1479, DOI 10.1016/j.jss.2012.03.033
   Schwaber K., 2001, Agile software development with scrum
   Sestoft P., 2008, LNCS, V5316
   Strauss A., 1990, BASICS QUALITATIVE R
   Unphon Hataichanok, 2008, Proceedings of the IASTED International Conference on Software Engineering, as part of the 26th IASTED International Multi-Conference on Applied Informatics, P178
   Unphon H., 2010, THESIS IT U COPENHAN
   Unphon H, 2010, J SYST SOFTWARE, V83, P2211, DOI 10.1016/j.jss.2010.06.043
   van de Weerd I., 2009, THESIS UTRECHT U NET
   Vaucouleur S., 2009, THESIS IT U COPENHAG
   Wessels B, 2008, INFORM SOC, V24, P30, DOI 10.1080/01972240701774683
   Zorn-Pauli Gabriele, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P269, DOI 10.1007/978-3-642-37422-7_19
   Zullighoven H., 2004, Object-oriented construction handbook: Developing applicationoriented software with the tools & materials approach
NR 66
TC 33
Z9 38
U1 1
U2 26
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2014
VL 56
IS 11
SI SI
BP 1436
EP 1456
DI 10.1016/j.infsof.2014.02.012
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AO4ZD
UT WOS:000341349000003
DA 2024-07-18
ER

PT J
AU Soumeya, D
   Djamel, M
AF Soumeya, Debboub
   Djamel, Meslati
TI Study of advanced separation of concerns approaches using the GoF design
   patterns: A quantitative and qualitative comparison
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Advanced separation of concerns; Aspect oriented programming; Empirical
   assessment; AspectJ; JBoss AOP; CaesarJ
ID ASPECTJ
AB Context: Since the emergence of the aspect oriented paradigm, several studies have been conducted to test the contribution of this new paradigm compared to the object paradigm. However, in addition to this type of studies, we need also comparative studies that assess the aspect approaches mutually. The motivations of the latter include the enhancement of each aspect approach, devising hybrid approaches or merely helping developers choosing the suitable approach according to their needs. Comparing advanced separation of concerns approaches is the context of our work.
   Objective: We aim at making an assessment of how the aspect approaches deal with crosscutting concerns. This assessment is based on quantitative attributes such as coupling and cohesion that evaluate the modularity as well as on qualitative observations.
   Method: We selected three of well-known aspect approaches: AspectJ, JBoss AOP and CaesarJ, all the three based on Java. We conducted then, a comparative study using the GoF design patterns. In order to be fair we asked a group of Master students to achieve the implementation of all patterns with the three approaches. The use of these implementations as hypothetical benchmarks allowed us to achieve two kinds of comparison: a quantitative one based on structural and performance metrics, and qualitative one based on observations collected during the implementation phase.
   Results: The quantitative comparison shows some advantages like the using of fewer components with AspectJ and the strong cohesion with CaesarJ and weaknesses, as the high internal coupling caused by the inner classes of CaesarJ. The qualitative comparison gives comments about the approach understandability and others qualitative concepts.
   Conclusion: This comparison highlighted strengths and weaknesses of each approach, and provided a referential work that can help choosing the right approach during software development, enhancing aspect approaches or devising hybrid approaches that combine best features. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Soumeya, Debboub; Djamel, Meslati] Badji Mokhtar Annaba Univ, LISCO Lab, Dept Comp Sci, Annaba, Algeria.
C3 Universite Badji Mokhtar - Annaba
RP Soumeya, D (corresponding author), Badji Mokhtar Annaba Univ, LISCO Lab, Dept Comp Sci, Annaba, Algeria.
EM Debboub.soumeya@gmail.com; meslati_djamel@yahoo.com
CR Aracic I, 2006, LECT NOTES COMPUT SC, V3880, P135
   Bartolomei Thiago T., 2006, 3 INT WORKSH SOFTW Q
   Braz S., 2009, THESIS NOVA LISBOA U
   Ceccato M., 2004, 1 WORKSH ASP REV ENG
   Dantas F., 2010, 2010 BRAZILIAN S SOF
   Eckel B., 2000, THINKING C
   El Maghawry N., 2010, 7 INT C INF SYST CAI
   Elish Mahmoud O., 2011, Journal of Software, V6, P2508, DOI 10.4304/jsw.6.12.2508-2514
   Figueiredo E., 2006, P ECOOP 06 FRANC
   Gamma E., 1995, Design Patterns: Abstractions and Reuse of Object-Oriented Designs
   Garcia A, 2006, LECT NOTES COMPUT SC, V3880, P36
   Greenwood P., 2007, LECT NOTES COMPUTER, V4609
   Grek J., 2007, THESIS U EC PRAGUE C
   Guyomarch J., 2005, 9 ECOOP WORKSH QUANT
   Hachani 0., 2006, P INFORSID06 HAMM TU
   Hachani O., 2002, 8 INT C OBJ OR INF S
   Hachani O., 2006, THESIS JOSEPH FOURIE
   Hachani O., 2005, P INFORSID FRANC
   Hannemann J, 2002, ACM SIGPLAN NOTICES, V37, P161, DOI 10.1145/583854.582436
   Kersten M., 2005, IBM DEV WORKS
   Kumar A., 2010, THESIS SCH MATH COMP
   Laddad R., 2009, ASPECTJ ACTION, V2nd
   Meslati D., 2006, J COMPUT INFORM TECH, V14
   Meslati D, 2009, INFORMATICA-LITHUAN, V20, P555
   MEZINI M, 2003, P 2 INT C ASP OR SOF
   Myers GlenfordJ., 1978, Composite Structure Design
   Pawlak R., 2005, FDN AOP J2EE
   Sant'anna C., 2003, P 17 BRAZ S SOFTW EN
   SOUSA E, 2008, FCTUNLDISWE200801 NE
   Vladimir O.S., 2008, USING ASPECT ORIENTE
   Zakaria A., 2003, WORKSH ASP OR MOD AO
NR 31
TC 0
Z9 0
U1 0
U2 17
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2014
VL 56
IS 10
BP 1345
EP 1359
DI 10.1016/j.infsof.2014.04.015
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AN8JO
UT WOS:000340850700011
DA 2024-07-18
ER

PT J
AU Sunye, G
   de Almeida, EC
   Le Traon, Y
   Baudry, B
   Jezequel, JM
AF Sunye, Gerson
   de Almeida, Eduardo Cunha
   Le Traon, Yves
   Baudry, Benoit
   Jezequel, Jean-Marc
TI Model-based testing of global properties on large-scale distributed
   systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Distributed software; Model-based testing
ID VERIFICATION; SERVICE; DESIGN; DHT
AB Context: Large-scale distributed systems are becoming commonplace with the large popularity of peerto-peer and cloud computing. The increasing importance of these systems contrasts with the lack of integrated solutions to build trustworthy software. A key concern of any large-scale distributed system is the validation of global properties, which cannot be evaluated on a single node. Thus, it is necessary to gather data from distributed nodes and to aggregate these data into a global view. This turns out to be very challenging because of the system's dynamism that imposes very frequent changes in local values that affect global properties. This implies that the global view has to be frequently updated to ensure an accurate validation of global properties.
   Objective: In this paper, we present a model-based approach to define a dynamic oracle for checking global properties. Our objective is to abstract relevant aspects of such systems into models. These models are updated at runtime, by monitoring the corresponding distributed system.
   Method: We conduce real-scale experimental validation to evaluate the ability of our approach to check global properties. In this validation, we apply our approach to test two open-source implementations of distributed hash tables. The experiments are deployed on two clusters of 32 nodes.
   Results: The experiments reveal an important defect on one implementation and show clear performance differences between the two implementations. The defect would not be detected without a global view of the system.
   Conclusion: Testing global properties on distributed software consists of gathering data from different nodes and building a global view of the system, where properties are validated. This process requires a distributed test architecture and tools for representing and validating global properties. Model-based techniques are an expressive mean for building oracles that validate global properties on distributed systems. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Sunye, Gerson] Lina Univ Nantes, F-44322 Nantes 03, France.
   [de Almeida, Eduardo Cunha] Ctr Politecn, Dept Informat, BR-81531980 Curitiba, Parana, Brazil.
   [Le Traon, Yves] Fac Sci Technol & Commun, L-1359 Luxembourg, Luxembourg.
   [Baudry, Benoit; Jezequel, Jean-Marc] IRISA Rennes, F-35042 Rennes, France.
C3 Universite de Rennes
RP Sunye, G (corresponding author), Lina Univ Nantes, 2 Rue Houssiniere, F-44322 Nantes 03, France.
EM gerson.sunye@univ-nantes.fr; eduardo@inEufpr.br; yves.letraon@uni.lu;
   bbaudry@irisa.fr; jezequel@irisa.fr
RI Jezequel, Jean-Marc/AAF-3854-2019; Cunha de Almeida,
   Eduardo/AAD-8521-2022; de Almeida, Eduardo/JJC-2493-2023; LE TRAON,
   Yves/T-2911-2019
OI Jezequel, Jean-Marc/0000-0002-0582-9745; Cunha de Almeida,
   Eduardo/0000-0002-6644-956X; LE TRAON, Yves/0000-0002-1045-4861
CR Almeida], 2010, Proceedings of ASE, P169, DOI 10.1145/1858996.1859030
   ALMEIDA E, 2010, ICTSS 2010
   [Anonymous], UCBEECS201098
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], 2000, PATTERN ORIENTED SOF
   [Anonymous], 2009, IEEE COMPUTER
   Arak Villu., 2007, WHAT HAPPENED AUGUST
   Armbrust M, 2010, COMMUN ACM, V53, P50, DOI 10.1145/1721654.1721672
   Bakhshi Rena, 2007, Operating Systems Review, V41, P28, DOI 10.1145/1317379.1317385
   Baresi L, 2007, PROC INT CONF SOFTW, P199
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   CRUZ A, 2009, UPDATE TODAYS GMAIL
   Dao D, 2009, LECT NOTES COMPUT SC, V5501, P94, DOI 10.1007/978-3-642-00722-4_8
   de Almeida EC, 2010, EMPIR SOFTW ENG, V15, P346, DOI 10.1007/s10664-009-9124-x
   DEALMEIDA EC, 2008, 23 IEEE ACM ASE SEPT
   DEALMEIDA EC, 2008, 19 ISSRE 11 14 NOV
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   FLOYD RW, 1962, COMMUN ACM, V5, P345, DOI 10.1145/367766.368168
   Fouquet Francois, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P87, DOI 10.1007/978-3-642-33666-9_7
   Ganesan P, 2004, INT CON DISTR COMP S, P263
   Garlan D, 2003, LECT NOTES COMPUT SC, V2648, P166
   Grabowski J, 2000, INT FED INFO PROC, V48, P161
   Hsueh MC, 1997, COMPUTER, V30, P75, DOI 10.1109/2.585157
   JELASITY M, 2006, ICD CSW 06, P11
   Jézéquel JM, 2008, SOFTW SYST MODEL, V7, P209, DOI 10.1007/s10270-008-0080-5
   JOSHI P, 2011, UCBEECS20113
   Jung G., 2007, WRASQ '07: Proceedings of the 2007 workshop on Automating service quality, P10
   KACER J, 2002, ACM INT C P SERIES, V25, P13
   KINDLER E, 1994, B EUR ASS THEOR COMP, V53
   Klingberg T., 2002, Gnutella protocol specification
   KREUTZER W, 1997, WSC 97, P483
   LIU X, 2007, NETW SYST DES IMPL N
   Meira J. A., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P642, DOI 10.1109/ICST.2012.153
   Montresor A, 2009, IEEE INT CONF PEER, P99, DOI 10.1109/P2P.2009.5284506
   Muller PA, 2005, LECT NOTES COMPUT SC, V3713, P264, DOI 10.1007/11557432_19
   *OMG, 2006, FORMAL060101 OMG
   Petrenko A, 2000, INT FED INFO PROC, V48, P261
   RABBE L, 2010, CIO UPDATE POSTMODER
   Rhea S, 2005, ACM SIGCOMM COMP COM, V35, P73, DOI 10.1145/1090191.1080102
   RINGS T, 2008, INT C SOFTW TEST VER, P210, DOI DOI 10.1109/ICST.2008.24
   Rowstron A., 2001, Proceedings of the Middleware 2001, P329, DOI DOI 10.1007/3-540-45518-3_18
   Rutherford MJ, 2008, IEEE T SOFTWARE ENG, V34, P452, DOI 10.1109/TSE.2008.33
   SITEPU HI, 2008, BROADCOM, P76
   Stoica I, 2001, ACM SIGCOMM COMP COM, V31, P149, DOI 10.1145/964723.383071
   TAYLOR I, 2006, 2 INT C DISTR FRAM M, P1
   Ulrich A, 1999, INT FED INFO PROC, V21, P93
   WALTER T, 1998, TEST ARCHITECTURES D
   Wang AD, 2009, LECT NOTES COMPUT SC, V5418, P61, DOI 10.1007/978-3-540-92995-6_5
   WANG Y, 2005, ASE, P164, DOI DOI 10.1145/1101908.1101934
   Xu J, 2004, IEEE J SEL AREA COMM, V22, P151, DOI 10.1109/JSAC.2003.818805
   Zhou ZZ, 2006, CONSUM COMM NETWORK, P1028
   1991, OP SYST INT CONF TES
NR 52
TC 9
Z9 9
U1 0
U2 13
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2014
VL 56
IS 7
BP 749
EP 762
DI 10.1016/j.infsof.2014.02.002
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH3FW
UT WOS:000336010100004
OA Green Published
DA 2024-07-18
ER

PT J
AU Rinkevics, K
   Torkar, R
AF Rinkevics, K.
   Torkar, R.
TI Equality in cumulative voting: A systematic review with an improvement
   proposal
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Cumulative voting; Prioritization; Requirements engineering;
   Compositional data; Log-ratio
ID COMPOSITIONAL DATA-ANALYSIS; REQUIREMENTS; PRIORITIZATION; ELECTION;
   ILLINOIS
AB Context: Prioritization is an essential part of requirements engineering, software release planning and many other software engineering disciplines. Cumulative Voting (CV) is known as a relatively simple method for prioritizing requirements on a ratio scale. Historically, CV has been applied in decision-making in government elections, corporate governance, and forestry. However, CV prioritization results are of a special type of data-compositional data.
   Objectives: The purpose of this study is to aid decision-making by collecting knowledge on the empirical use of CV and develop a method for detecting prioritization items with equal priority.
   Methods: We present a systematic literature review of CV and CV analysis methods. The review is based on searching electronic databases and snowball sampling of the found primary studies. Relevant studies are selected based on titles, abstracts, and full text inspection. Additionally, we propose Equality of Cumulative Votes (ECVs)-a CV result analysis method that identifies prioritization items with equal priority.
   Results: CV has been used in not only requirements prioritization and release planning but also in e.g. software process improvement, change impact analysis and model driven software development. The review presents a collection of state of the practice studies and CV result analysis methods. In the end, ECV was applied to 27 prioritization cases from 14 studies and identified nine groups of equal items in three studies.
   Conclusions: We believe that the analysis of the collected studies and the CV result analysis methods can help in the adoption of CV prioritization method. The evaluation of ECV indicates that it is able to detect prioritization items with equal priority and thus provide the practitioner with a more fine-grained analysis. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Rinkevics, K.; Torkar, R.] Blekinge Inst Technol, S-37179 Karlskrona, Sweden.
   [Torkar, R.] Chalmers Univ Technol, S-41296 Gothenburg, Sweden.
   [Torkar, R.] Univ Gothenburg, S-41296 Gothenburg, Sweden.
C3 Blekinge Institute Technology; Chalmers University of Technology;
   University of Gothenburg
RP Torkar, R (corresponding author), Blekinge Inst Technol, S-37179 Karlskrona, Sweden.
EM richard.torkar@bth.se
CR Ahl V., 2005, Master's Thesis
   Aitchison J, 2005, MATH GEOL, V37, P829, DOI 10.1007/s11004-005-7383-7
   AITCHISON J, 1983, BIOMETRIKA, V70, P57
   Anderson T.W., 1986, STAT ANAL DATA, V2nd, DOI DOI 10.1007/978-94-009-4109-0
   [Anonymous], 1970, Sociological Methodology, DOI DOI 10.2307/270787
   [Anonymous], 2003, CONTENT ANAL INTRO I
   Baca D, 2010, LECT NOTES COMPUT SC, V6156, P176, DOI 10.1007/978-3-642-13792-1_15
   Barney S, 2008, J SYST ARCHITECT, V54, P576, DOI 10.1016/j.sysarc.2007.12.004
   Barney S, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P313, DOI 10.1109/SEAA.2009.44
   Barney S, 2009, LECT NOTES COMPUT SC, V5543, P256, DOI 10.1007/978-3-642-01680-6_24
   Berander P, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P69, DOI 10.1007/3-540-28244-0_4
   Berander P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P167
   Berander P, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P316, DOI 10.1109/ISESE.2003.1237992
   Berander P., 2006, INT S EMPIRICAL SOFT, P316
   Berander P., 2004, P 8 INT C EMP ASS SO
   Berander P, 2006, INT J SOFTW ENG KNOW, V16, P819, DOI 10.1142/S0218194006003026
   Berander P, 2009, J SYST SOFTWARE, V82, P836, DOI 10.1016/j.jss.2008.11.841
   BHAGAT S, 1984, J LAW ECON, V27, P339, DOI 10.1086/467069
   Bowler S, 2001, J POLIT, V63, P902, DOI 10.1111/0022-3816.00093
   Brockington D, 2003, POLIT BEHAV, V25, P1, DOI 10.1023/A:1022946710610
   Chatzipetrou P, 2010, EUROMICRO CONF PROC, P361, DOI 10.1109/SEAA.2010.35
   COLE RL, 1990, WESTERN POLIT QUART, V43, P191, DOI 10.2307/448513
   Cooper D, 2012, PUBLIC CHOICE, V150, P363, DOI 10.1007/s11127-010-9707-5
   Feldt R., 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P225, DOI 10.1109/ICST.2010.37
   Filzmoser P, 2008, MATH GEOSCI, V40, P233, DOI 10.1007/s11004-007-9141-5
   Filzmoser P, 2009, ENVIRONMETRICS, V20, P621, DOI 10.1002/env.966
   Fogelström ND, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P217, DOI 10.1109/SEAA.2009.66
   GOODMAN LA, 1961, ANN MATH STAT, V32, P148, DOI 10.1214/aoms/1177705148
   Groves R.M., 2009, Survey Methodology, V2nd
   Hatton S, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P517, DOI 10.1109/ASWEC.2008.22
   Hatton S, 2007, LECT NOTES COMPUT SC, V4802, P235
   Heikkila V., 2010, 2010 43 HAW INT C SY, P1
   Hiltunen V, 2008, FOREST POLICY ECON, V10, P117, DOI 10.1016/j.forpol.2007.06.002
   Hoover A, 2003, IEEE T MED IMAGING, V22, P951, DOI 10.1109/TMI.2003.815900
   Hu G., 2006, P 17 AUSTR C INF SYS
   Ihaka R., 1996, J COMPUTATIONAL GRAP, V5, P299, DOI [DOI 10.1080/10618600.1996.10474713, 10.2307/1390807, DOI 10.2307/1390807]
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Jonsson P., 2005, STUDY PRIORITISATION
   JONSSON P, 2005, P 17 INT C SOFTW ENG, P707
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   KHAN KA, 2006, THESIS BLEKINGE I TE
   Kitchenham B., 2007, 2007001 EBSE KEEL U
   Kitchenham B., 2004, ARXIV
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   KUKLINSKI J, 1973, WESTERN POLIT QUART, V26, P726, DOI 10.2307/447147
   Kuzniarz L, 2011, INFORM SOFTWARE TECH, V53, P214, DOI 10.1016/j.infsof.2010.10.004
   Laukkanen S, 2005, SILVA FENN, V39, P249, DOI 10.14214/sf.387
   Laukkanen S, 2004, CAN J FOREST RES, V34, P1511, DOI [10.1139/x04-044, 10.1139/X04-044]
   Leffingwell D., 1999, MANAGING SOFTWARE RE, V1
   Martín-Fernández JA, 2003, MATH GEOL, V35, P253, DOI 10.1023/A:1023866030544
   Pawlowsky Glahn V, 2007, LECT NOTES COMPOSITI
   Pawlowsky-Glahn V, 2006, GEOL SOC SPEC PUBL, V264, P1, DOI 10.1144/GSL.SP.2006.264.01.01
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   Regnell B., 2001, Requirements Engineering, V6, P51, DOI 10.1007/s007660170015
   Regnell B., 2000, P REFSQ2000 6 INT WO, P1
   Rinkevics K., 2011, ECV IMPLEMENTATION S
   Rinkevics K., 2011, DATA EXTRACTION QUAL
   Rovegård P, 2008, IEEE T SOFTWARE ENG, V34, P516, DOI 10.1109/TSE.2008.32
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saaty T.L., 1980, ANAL HIERARCHY PROCE
   SAWYER J, 1962, AM POLIT SCI REV, V56, P936, DOI 10.2307/1952795
   Staron M, 2006, LECT NOTES COMPUT SC, V4034, P177
   Svahnberg Mikael, 2009, 2009 Third International Workshop on Software Product Management (IWSPM 2009), P35, DOI 10.1109/IWSPM.2009.1
   Svahnberg M, 2008, 2008 REQUIREMENTS ENGINEERING EDUCATION AND TRAINING, P22, DOI 10.1109/REET.2008.4
   Tahir T., 2010, 2010 6th International Conference on Emerging Technologies (ICET), P282, DOI 10.1109/ICET.2010.5638475
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C, 2006, VALUE-BASED SOFTWARE ENGINEERING, P179, DOI 10.1007/3-540-29263-2_9
   ZAHEDI F, 1986, INTERFACES, V16, P96, DOI 10.1287/inte.16.4.96
NR 70
TC 15
Z9 15
U1 0
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2013
VL 55
IS 2
BP 267
EP 287
DI 10.1016/j.infsof.2012.08.004
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 060EO
UT WOS:000312759500007
DA 2024-07-18
ER

PT J
AU de Roo, A
   Sözer, H
   Aksit, M
AF de Roo, Arjan
   Sozer, Hasan
   Aksit, Mehmet
TI Verification and analysis of domain-specific models of physical
   characteristics in embedded control software
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Runtime verification; Domain-specific languages; Embedded systems;
   Control software; Aspect-oriented software development
ID EFFICIENT; TAXONOMY; SAFETY
AB Context: A considerable portion of the software systems today are adopted in the embedded control domain. Embedded control software deals with controlling a physical system, and as such models of physical characteristics become part of the embedded control software.
   Objective: Due to the evolution of system properties and increasing complexity, faults can be left undetected in these models of physical characteristics. Therefore, their accuracy must be verified at runtime. Traditional runtime verification techniques that are based on states/events in software execution are inadequate in this case. The behavior suggested by models of physical characteristics cannot be mapped to behavioral properties of software. Moreover, implementation in a general-purpose programming language makes these models hard to locate and verify. Therefore, this paper proposes a novel approach to perform runtime verification of models of physical characteristics in embedded control software.
   Method: The development of an approach for runtime verification of models of physical characteristics and the application of the approach to two industrial case studies from the printing systems domain.
   Results: This paper presents a novel approach to specify models of physical characteristics using a domain-specific language, to define monitors that detect inconsistencies by exploiting redundancy in these models, and to realize these monitors using an aspect-oriented approach. We complement runtime verification with static analysis to verify the composition of domain-specific models with the control software written in a general-purpose language.
   Conclusions: The presented approach enables runtime verification of implemented models of physical characteristics to detect inconsistencies in these models, as well as broken hardware components and wear and tear of hardware in the physical system. The application of declarative aspect-oriented techniques to realize runtime verification monitors increases modularity and provides the ability to statically verify this realization. The complementary static and runtime verification techniques increase the reliability of embedded control software. (C) 2012 Elsevier B.V. All rights reserved.
C1 [de Roo, Arjan] Univ Twente, Fac Elect Engn Math & Comp Sci, Software Engn Grp, NL-7500 AE Enschede, Netherlands.
   [Sozer, Hasan] Ozyegin Univ, Dept Comp Sci, Sch Engn, TR-34794 Istanbul, Turkey.
C3 University of Twente; Ozyegin University
RP de Roo, A (corresponding author), Univ Twente, Fac Elect Engn Math & Comp Sci, Software Engn Grp, POB 217, NL-7500 AE Enschede, Netherlands.
EM roo@ewi.utwente.nl
RI Sözer, Hasan/A-4722-2015; Sözer, Hasan/AAR-8697-2020
OI Sözer, Hasan/0000-0002-2968-4763; Sözer, Hasan/0000-0002-2968-4763
FU Netherlands Ministry of Economic Affairs under the Embedded Systems
   Institute program
FX This work has been carried out as part of the OCTOPUS project under the
   responsibility of the Embedded Systems Institute. This project is
   partially supported by the Netherlands Ministry of Economic Affairs
   under the Embedded Systems Institute program. We thank Jacques Verriet
   from ESI and Lodewijk Bergmans from our group for reviewing an earlier
   version of this paper and providing useful feedback.
CR Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Allan C, 2005, ACM SIGPLAN NOTICES, V40, P345, DOI 10.1145/1103845.1094839
   Arcaini P., 2011, 2nd International Conference on Runtime Verification (RV'11), volume 7186 of Lecture Notes in Computer Science, V7186, P223
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Bapty T., 1999, ISIS9901 VAND U
   Barringer H, 2004, LECT NOTES COMPUT SC, V2937, P44
   Bauer L, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1525880.1525882
   Bockisch C.M., 2008, THESIS TU DARMSTADT
   Broenink J. F., 1997, Journal A, V38, P22
   Chen F, 2007, ACM SIGPLAN NOTICES, V42, P569, DOI 10.1145/1297105.1297069
   Chiappini A, 1999, LECT NOTES COMPUT SC, V1698, P410
   Ciraci S, 2010, LECT NOTES COMPUT SC, V6418, P198, DOI 10.1007/978-3-642-16612-9_16
   Clarke EM, 1999, MODEL CHECKING, P1
   D'Silva V, 2008, IEEE T COMPUT AID D, V27, P1165, DOI 10.1109/TCAD.2008.923410
   de Roo A., 2011, Proceedings of the 2011 Fifth International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2011), P41, DOI 10.1109/SSIRI.2011.14
   de Roo A., 2007, THESIS U TWENTE
   de Roo A., 2012, THESIS ENSCHEDE
   de Roo A., 2008, 1 INT WORKSH ADV SOF
   DEKLEER J, 1987, ARTIF INTELL, V32, P97, DOI 10.1016/0004-3702(87)90063-4
   Delgado N, 2004, IEEE T SOFTWARE ENG, V30, P859, DOI 10.1109/TSE.2004.91
   DURR PEA, 2008, THESIS U TWENTE ENSC
   Feldman A., 2009, P DX, V9, P403
   Goldman M., 2006, P FDN ASP LANG WORKS, P11
   Griesmayer A, 2005, LECT NOTES ARTIF INT, V3533, P783
   Havinga W., 2007, AOSD'07, P85
   Hilsdale E., 2004, INT C ASPECT ORIENTE, P26
   ISO, 2009, 8000022009 ISO
   Kim M, 2004, FORM METHOD SYST DES, V24, P129, DOI 10.1023/B:FORM.0000017719.43755.7c
   Kleijn C, 2009, 20 SIM 4 1 REFERENCE
   Kniesel G, 2009, LECT NOTES COMPUT SC, V5490, P135, DOI 10.1007/978-3-642-02059-9_5
   Krishnamurthi S., 2004, Software Engineering Notes, V29, P137, DOI 10.1145/1041685.1029916
   Maggi F.M., 2012, Runtime Verification: Second International Conference, RV 2011, San Francisco, CA, USA, September 27-30, 2011, Revised Selected Papers 2, P131
   Malakuti Somayeh, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P31, DOI 10.1109/ISSRE.2009.12
   Malakuti S., 2011, THESIS U TWENTE
   Martin M, 2005, ACM SIGPLAN NOTICES, V40, P365, DOI 10.1145/1103845.1094840
   Pike L., 2011, Proceedings of the Second International Conference on Runtime Verification (RV 2011), P310
   REITER R, 1987, ARTIF INTELL, V32, P57, DOI 10.1016/0004-3702(87)90062-2
   Sen K, 2004, PROC INT CONF SOFTW, P418, DOI 10.1109/ICSE.2004.1317464
   Sontag E. D, 1998, Mathematical Control Theory: Deterministic Finite Dimensional Systems, V6
   Storzer M., 2003, FOAL 2003 Proceedings-Foundations of Aspect-Oriented Languages, P35
   The 20-sim tooling, 2012, 20 SIM TOOL
   University of Twente, 2012, ANN REF MAN
   Woodcock J, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592436
   Zoeteweij Peter, 2008, 2008 Second IEEE International Conference on Secure System Integration and Reliability Improvement (SSIRI), P103, DOI 10.1109/SSIRI.2008.48
NR 44
TC 4
Z9 4
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2012
VL 54
IS 12
BP 1432
EP 1453
DI 10.1016/j.infsof.2012.07.005
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 015HE
UT WOS:000309436200010
OA Green Published
DA 2024-07-18
ER

PT J
AU Al Dallal, J
AF Al Dallal, Jehad
TI Constructing models for predicting extract subclass refactoring
   opportunities using object-oriented quality metrics
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Object-oriented design; Extract subclass refactoring; Class quality;
   Class cohesion; Class coupling; Logistic regression analysis
ID OPEN SOURCE SOFTWARE; PRACT.-EXPER. 2000; CLASS COHESION; FAULT
   PREDICTION; IDENTIFICATION; CHAE,HEUNG,SEOK; KWON,YONG,RAE; SUITE
AB Context: Refactoring is a maintenance task that refers to the process of restructuring software source code to enhance its quality without affecting its external behavior. Inspecting and analyzing the source code of the system under consideration to identify the classes in need of extract subclass refactoring (ESR) is a time consuming and costly process.
   Objective: This paper explores the abilities of several quality metrics considered individually and in combination to predict the classes in need of ESR.
   Method: For a given a class, this paper empirically investigates, using univariate logistic regression analysis, the abilities of 25 existing size, cohesion, and coupling metrics to predict whether the class is in need of restructuring by extracting a subclass from it. In addition, models of combined metrics based on multivariate logistic regression analysis were constructed and validated to predict the classes in need of ESR, and the best model is justifiably recommended. We explored the statistical relations between the values of the selected metrics and the decisions of the developers of six open source Java systems with respect to whether the classes require ESR.
   Results: The results indicate that there was a strong statistical relation between some of the quality metrics and the decision of whether ESR activity was required. From a statistical point of view, the recommended model of metrics has practical thresholds that lead to an outstanding classification of the classes into those that require ESR and those that do not.
   Conclusion: The proposed model can be applied to automatically predict the classes in need of ESR and present them as suggestions to developers working to enhance the system cluing the maintenance phase. In addition, the model is capable of ranking the classes of the system under consideration according to their degree of need of ESR. (C) 2012 Elsevier B.V. All rights reserved.
C1 Kuwait Univ, Dept Informat Sci, Safat 13060, Kuwait.
C3 Kuwait University
RP Al Dallal, J (corresponding author), Kuwait Univ, Dept Informat Sci, POB 5969, Safat 13060, Kuwait.
EM j.aldallal@ku.edu.kw
RI Al Dallal, Jehad/HTL-9247-2023
OI Al Dallal, Jehad/0000-0003-3679-4351
FU Kuwait University Research Grant [WI06/09]
FX The author would like to acknowledge the support of this work by Kuwait
   University Research Grant WI06/09. In addition, the author would like to
   thank Anas Abdin for assisting in collecting the quality results.
CR Abdi H., 2007, Encyclopedia of measurement and statistics, DOI DOI 10.4135/9781412952644.N299
   Al Dallal J., 2010, INT J COMPUTER SCI, V4, P45
   Al Dallal J, 2013, SOFTWARE PRACT EXPER, V43, P685, DOI 10.1002/spe.2127
   Al Dallal J, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089118
   Al Dallal J, 2012, J SYST SOFTWARE, V85, P1042, DOI 10.1016/j.jss.2011.12.006
   Al Dallal J, 2012, INFORM SOFTWARE TECH, V54, P396, DOI 10.1016/j.infsof.2011.11.007
   Al Dallal J, 2011, INFORM SOFTWARE TECH, V53, P914, DOI 10.1016/j.infsof.2011.03.004
   Al Dallal J, 2011, IEEE T SOFTWARE ENG, V37, P788, DOI 10.1109/TSE.2010.97
   Al Dallal J, 2010, INFORM SOFTWARE TECH, V52, P1346, DOI 10.1016/j.infsof.2010.08.006
   Al Dallal J, 2007, PROC WRLD ACAD SCI E, V25, P448
   Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   [Anonymous], 12 AS PAC SOFTW ENG
   [Anonymous], WORKSH PRED MOD SOFT
   [Anonymous], ACM SIGSOFT SOFTWARE
   [Anonymous], INT WORKSH EV LARG S
   [Anonymous], 9 PANH C INF THESS G
   [Anonymous], 2002, THESIS SE U
   [Anonymous], 10 INT WORKSH SOFTW
   [Anonymous], 4 WORKSH REF TOOLS W
   [Anonymous], 2007, SIE07001 FLIND U SCH
   [Anonymous], 2010, ASE 10 P IEEE ACM IN, DOI DOI 10.1145/1858996.1859024
   [Anonymous], THESIS U FEDERAL RIO
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Badri L., 2004, J OBJECT TECHNOL, V3, P145
   Barnett V., 1994, OUTLIERS STAT DATA, P584
   Bavota G, 2011, J SYST SOFTWARE, V84, P397, DOI 10.1016/j.jss.2010.11.918
   Bieman J. M., 1995, SIGSOFT Software Engineering Notes, P259, DOI 10.1145/223427.211856
   Bonja C., 2006, ACM SE 44 P 44 ANN S, P91
   Boshnakoska D, 2011, COMM COM INF SC, V83, P226
   Briand L, 1997, PROC INT CONF SOFTW, P412, DOI 10.1145/253228.253367
   Briand L. C., 2001, Empirical Software Engineering, V6, P11, DOI 10.1023/A:1009815306478
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 2002, ADV COMPUT, V56, P97, DOI 10.1016/S0065-2458(02)80005-5
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P722, DOI 10.1109/32.815329
   Bryton S, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P570, DOI 10.1109/ICSEA.2009.90
   Chae HS, 2000, SOFTWARE PRACT EXPER, V30, P1405, DOI 10.1002/1097-024X(200010)30:12<1405::AID-SPE330>3.0.CO;2-3
   Chae HS, 2004, IEEE T SOFTWARE ENG, V30, P826, DOI 10.1109/TSE.2004.88
   Chen ZQ, 2002, PROC IEEE INT CONF S, P377, DOI 10.1109/ICSM.2002.1167794
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   Counsell S, 2006, ACM T SOFTW ENG METH, V15, P123, DOI 10.1145/1131421.1131422
   Czibula IG, 2006, INT J COMPUT SCI NET, V6, P40
   De Lucia A, 2008, PROC IEEE INT CONF S, P27, DOI 10.1109/ICSM.2008.4658051
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Etzkorn LH, 2004, INFORM SOFTWARE TECH, V46, P677, DOI 10.1016/j.infsof.2003.12.002
   Fernandez L., 2006, INF THEOR APPL, V13, P82
   Fokaefs M, 2009, PROC IEEE INT CONF S, P93, DOI 10.1109/ICSM.2009.5306332
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Hines WW, 2003, Probability and statistics in engineering
   Hitz M., 1995, International Symposium on Applied Corporate Computing, P25
   Hosmer W., 2000, Applied Logistic Regression, VSecond
   Kosker Y, 2009, EXPERT SYST APPL, V36, P10000, DOI 10.1016/j.eswa.2008.12.066
   Lee YS., 1995, Proc. International Conference on Software Quality, Maribor, P81
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   O'Keeffe M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P247
   Olson D.L., 2008, ADV DATA MINING TECH, DOI https://doi.org/10.1007/978-3-540-76917-0
   Piveta E., 2009, P 2009 ACM S APPL CO, P1867
   Rousseeuw PJ, 1999, AM STAT, V53, P382, DOI 10.2307/2686061
   Samoladas I, 2008, INT FED INFO PROC, V275, P237
   Shatnawi R, 2010, J SOFTW MAINT EVOL-R, V22, P1, DOI 10.1002/smr.404
   Spinellis D, 2009, ELECTRON NOTES THEOR, V233, P5, DOI 10.1016/j.entcs.2009.02.058
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Tsantalis N, 2010, J SYST SOFTWARE, V83, P391, DOI 10.1016/j.jss.2009.09.017
   Tsantalis N, 2009, EUR CON SFTWR MTNCE, P119, DOI 10.1109/CSMR.2009.23
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Wang JM, 2005, INFORM SOFTWARE TECH, V47, P167, DOI 10.1016/j.infsof.2004.07.001
   Xu BW, 2003, SOFTWARE PRACT EXPER, V33, P583, DOI 10.1002/spe.505
   Xu BW, 2001, SOFTWARE PRACT EXPER, V31, P1381, DOI 10.1002/spe.413
   Zhou YM, 2002, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.2002.1167746
NR 76
TC 30
Z9 33
U1 1
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2012
VL 54
IS 10
BP 1125
EP 1141
DI 10.1016/j.infsof.2012.04.004
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 983QK
UT WOS:000307133600006
DA 2024-07-18
ER

PT J
AU Mishra, D
   Mishra, A
   Ostrovska, S
AF Mishra, Deepti
   Mishra, Alok
   Ostrovska, Sofiya
TI Impact of physical ambiance on communication, collaboration and
   coordination in agile software development: An empirical evaluation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Collaboration; Communication; Coordination; Physical settings; Agile
   software development
ID WORK; KNOWLEDGE; DISTANCE; DESIGN; PEOPLE
AB Context: Communication, collaboration and coordination are key enablers of software development and even more so in agile methods. The physical environment of the workspace plays a significant role in effective communication, collaboration, and coordination among people while developing software.
   Objective: In this paper, we have studied and further evaluated empirically the effect of different constituents of physical environment on communication, coordination, and collaboration, respectively. The study aims to provide a guideline for prospective agile software developers.
   Method: A survey was conducted among software developers at a software development organization. To collect data, a survey was carried out along with observations, and interviews.
   Results: It has been found that half cubicles are 'very effective' for the frequency of communication. Further, half cubicles were discovered 'effective' but not 'very effective' for the quality/effectiveness of communication. It is found that half-height cubicles and status boards are 'very effective' for the coordination among team members according to the survey. Communal/discussion space is found to be 'effective' but not 'very effective' for coordination among team members. Our analysis also reveals that half-height glass barriers are 'very effective' during the individuals problem-solving activities while working together as a team. Infact, such a physically open environment appears to improve communication, coordination, and collaboration.
   Conclusion: According to this study, an open working environment with only half-height glass barriers and communal space plays a major role in communication among team members. The presence of status boards significantly help in reducing unnecessary communication by providing the required information to individuals and therefore, in turn reduce distractions a team member may confront in their absence. As communication plays a significant role in improving coordination and collaboration, it is not surprising to find the effect of open working environment and status boards in improving coordination and collaboration. An open working environment increases the awareness among software developers e.g. who is doing what, what is on the agenda, what is taking place, etc. That in turn, improves coordination among them. A communal/discussion space helps in collaboration immensely. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Mishra, Deepti] Atilim Univ, Dept Comp Engn, TR-06836 Ankara, Turkey.
   [Mishra, Alok] Atilim Univ, Dept Software Engn, TR-06836 Ankara, Turkey.
   [Mishra, Alok] Univ S Pacific, Sch Comp Informat & Math Sci, Suva, Fiji.
   [Mishra, Alok] U21Global, Singapore, Singapore.
   [Ostrovska, Sofiya] Atilim Univ, Dept Math, TR-06836 Ankara, Turkey.
C3 Atilim University; Atilim University; University of the South Pacific;
   Atilim University
RP Mishra, D (corresponding author), Atilim Univ, Dept Comp Engn, TR-06836 Ankara, Turkey.
EM deepti@atilim.edu.tr; alok@atilim.edu.tr; ostrovska@atilim.edu.tr
RI Ostrovska, Sofiya/AAA-2156-2020; Mishra, Deepti/K-4292-2013; Mishra,
   Deepti/AAZ-1322-2020; Mishra, Alok/AAE-2673-2019
OI Mishra, Deepti/0000-0001-5144-3811; Mishra, Alok/0000-0003-1275-2050
CR Abrahamson P., 2002, Agile Software Development Methods, Review and Analysis, P107
   Al-Ani B., 2008, Proc. Int'l Workshop Cooperative and Human Aspects of Software Eng. (CHASE 08), P1, DOI DOI 10.1145/1370114.1370115
   Ambler S. W., 2002, Cutter IT Journal, V15, P33
   Ambler S.W., 2005, SOFTWARE QUALITY PRO, V7, P34
   Annu G., INTERGROUP COORDINAT
   [Anonymous], 2002, Agile software development
   [Anonymous], COMPUTER SUPPORTED C
   [Anonymous], 2005, Extreme programming explained: Embrace change
   [Anonymous], CHI 97 WORKSH AW COL
   [Anonymous], P JOINT C EMP ASS SO
   Beck K., 2000, EXTREME PROGRAMMING
   Beck K., 2011, MANIFESTO AGILE SOFT
   Becker F., 2001, INT WORKPLACE STUDIE
   BOEHM BW, 1987, COMPUTER, V20, P43, DOI 10.1109/MC.1987.1663694
   Boger Elisa, 2003, J Emerg Nurs, V29, P39, DOI 10.1067/men.2003.13
   Brill M., 2001, BOSTI ASS DISPROVING
   Bryant S, 2006, LECT NOTES COMPUT SC, V4044, P53
   Carter S., 2004, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V13, P305, DOI 10.1007/s10606-004-2805-5
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Coplien JamesO., 2005, Organizational Patterns of Agile Software Development, V1st
   Crowston K, 2007, IEEE T PROF COMMUN, V50, P185, DOI 10.1109/TPC.2007.902654
   Csikszentmihalyi M., 2008, FLOW PSYCHOL OPTIMAL
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   de Souza C.R.B., 2007, P EUR C COMP SUPP CO
   Dube L., 2004, Virtual Teams: Projects, Protocols and Processes, P1, DOI DOI 10.4018/978-1-59140-166-7.CH001
   EDSTROM A, 1997, HUM RELAT, V30, P580
   Ehrlich K, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P149, DOI 10.1109/ICGSE.2006.261228
   Elliott JJ, 2000, INFORM SOFTWARE TECH, V42, P973, DOI 10.1016/S0950-5849(00)00149-X
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   FINSTERWALDER M, 2001, XP2001 WORKSH CUST I
   France DJ, 2005, INT J MED INFORM, V74, P827, DOI 10.1016/j.ijmedinf.2005.03.015
   Gonçalves MK, 2009, INT C COMP SUPP COOP, P498, DOI 10.1109/CSCWD.2009.4968108
   Gutwin C., 2004, Computer Supported Cooperative Work Conference Proceedings, P72, DOI 10.1145/1031607.1031621
   Gutwin C., 2001, CSCW 01
   Hanakawa N., 2004, P 11 AS PAC SOFTW EN
   Heath C., 2002, COMPUTER SUPPORTED C, V11, P317
   Heerwagen JH, 2004, BUILD RES INF, V32, P510, DOI 10.1080/09613210412331313025
   Herbsleb J., 2003, IEEE T SOFTWARE ENG, V29, P1
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Highsmith J., 2002, Agile software development ecosystems
   JAIN AK, 1989, DALLAS GLOBECOM 89, VOLS 1-3, P642, DOI 10.1109/GLOCOM.1989.64048
   Jensen Jackie, 2004, J Healthc Inf Manag, V18, P26
   Kaplan R., 1992, NC163 USDA FOR SERV
   Korkala M, 2006, AGILE 2006, PROCEEDINGS, P76, DOI 10.1109/AGILE.2006.1
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Kwan I, 2011, IEEE T SOFTWARE ENG, V37, P307, DOI 10.1109/TSE.2011.29
   Lahlou S, 1999, LECT NOTES COMPUT SC, V1670, P150
   Layman L, 2006, INFORM SOFTWARE TECH, V48, P781, DOI 10.1016/j.infsof.2006.01.004
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Marczak S., 2008, P INT C REQ ENG SEPT
   Marinakis HA, 2003, ANN EMERG MED, V41, P186, DOI 10.1067/mem.2003.39
   MCGEE J, 2002, KNOWLEDGE WORK CRAFT
   Melnik G, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P21
   Mishra D, 2008, LECT NOTES COMPUT SC, V5220, P196, DOI 10.1007/978-3-540-88011-0_27
   Mishra D, 2009, HUM FACTORS ERGONOM, V19, P438, DOI 10.1002/hfm.20164
   Nakakoji K., 2010, SUPPORTING EXPERTISE
   Nelson K. M., 2000, Information Technology & Management, V1, P171, DOI 10.1023/A:1019168807572
   Nelson KM, 1996, MIS QUART, V20, P409, DOI 10.2307/249562
   Olson GM, 2000, HUM-COMPUT INTERACT, V15, P139, DOI 10.1207/S15327051HCI1523_4
   Ovedovitz A.C., 2001, BUSINESS SPASTITICS
   Patel C., 2006, P 39 HAW INT C SYST
   Paulk M.C., 1993, 20041068 USGS
   Perlow LA, 1999, ADMIN SCI QUART, V44, P57, DOI 10.2307/2667031
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Robinson H, 2007, INFORM SOFTWARE TECH, V49, P540, DOI 10.1016/j.infsof.2007.02.007
   Ross C. Ferruri, 2005, FORRESTER RES, V28, P1
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schmidt K., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P285, DOI 10.1023/A:1021272909573
   Schwaber C., 2005, FORRESTER RES, V11, P1
   Sharp H, 2008, INT J HUM-COMPUT ST, V66, P506, DOI 10.1016/j.ijhcs.2007.10.004
   Sharp H, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P61, DOI 10.1007/978-3-642-12575-1_4
   Sharp H, 2009, INTERACT COMPUT, V21, P108, DOI 10.1016/j.intcom.2008.10.006
   Shroff G., 2005, INT C COLL COMP NETW
   Spencer R, 2004, ANN EMERG MED, V44, P268, DOI 10.1016/j.annemergmed.2004.04.006
   Trivedi KishorS., 2002, PROBABILITY STAT REL, V2nd
   VESSEY I, 1995, COMMUN ACM, V38, P83, DOI 10.1145/204865.204882
   Wears R., 2007, COGNITION TECHNOLOGY, V9
   Williams L, 2003, COMPUTER, V36, P39, DOI 10.1109/MC.2003.1204373
   Wu L, 2005, 12th Asia-Pacific Software Engineering Conference, Proceedings, P33
   WYON DP, 1996, P IAQ 96 PATHS BETT
   Xiao Y, 2007, ANN EMERG MED, V50, P387, DOI 10.1016/j.annemergmed.2007.03.027
   Ye Y., 2005, 12 AS PAC SOFTW ENG
   Yuan M., 2006, P 39 HAW INT C SYST
NR 83
TC 38
Z9 49
U1 3
U2 39
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2012
VL 54
IS 10
BP 1067
EP 1078
DI 10.1016/j.infsof.2012.04.002
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 983QK
UT WOS:000307133600002
DA 2024-07-18
ER

PT J
AU Karus, S
   Dumas, M
AF Karus, Slim
   Dumas, Marlon
TI Code churn estimation using organisational and code metrics: An
   experimental comparison
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE XML; XSLT; Code metrics; Organisational metrics; Code churn estimation;
   Software maintenance
ID DEVELOPMENT COST ESTIMATION; OBJECT-ORIENTED METRICS; SOFTWARE;
   MAINTAINABILITY; NETWORKS
AB Context: Source code revision control systems contain vast amounts of data that can be exploited for various purposes. For example, the data can be used as a base for estimating future code maintenance effort in order to plan software maintenance activities. Previous work has extensively studied the use of metrics extracted from object-oriented source code to estimate future coding effort. In comparison, the use of other types of metrics for this purpose has received significantly less attention.
   Objective: This paper applies machine learning techniques to unveil predictors of yearly cumulative code churn of software projects on the basis of metrics extracted from revision control systems.
   Method: The study is based on a collection of object-oriented code metrics, XML code metrics, and organisational metrics. Several models are constructed with different subsets of these metrics. The predictive power of these models is analysed based on a dataset extracted from eight open-source projects.
   Results: The study shows that a code churn estimation model built purely with organisational metrics is superior to one built purely with code metrics. However, a combined model provides the highest predictive power.
   Conclusion: The results suggest that code metrics in general, and XML metrics in particular, are complementary to organisational metrics for the purpose of estimating code churn. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Karus, Slim] Univ Tartu, Inst Comp Sci, Fac Math & Comp Sci, EE-50409 Tartu, Estonia.
C3 University of Tartu
RP Karus, S (corresponding author), Univ Tartu, Inst Comp Sci, Fac Math & Comp Sci, J Liivi 2, EE-50409 Tartu, Estonia.
EM siim.karus@ut.ee; marlon.dumas@ut.ee
RI Dumas, Marlon/H-2757-2015
OI Dumas, Marlon/0000-0002-9247-7476
FU Software Engineering Group at University of Zurich [ESF DoRa 6]; ERDF
   via the Estonian Centre of Excellence in Computer Science
FX This research was started during a visit of the first author to the
   Software Engineering Group at University of Zurich (visit funded by the
   ESF DoRa 6 Program). We thank Harald Gall and the members of his group
   for their valuable advice. The work is also funded by ERDF via the
   Estonian Centre of Excellence in Computer Science.
CR Boehm B, 2000, ANN SOFTW ENG, V10, P177, DOI 10.1023/A:1018991717352
   Hall GA, 2000, J SYST SOFTWARE, V54, P111, DOI 10.1016/S0164-1212(00)00031-5
   HECKERMAN D, 1995, MACH LEARN, V20, P197, DOI 10.1023/A:1022623210503
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   KARUS S, ARXIVEPRINTSARXIV101
   Karus S., 2011, Proceedings of the 8th Working Conference on Mining Software Repositories, P13
   Karus S, 2011, SCI COMPUT PROGRAM, V76, P1161, DOI 10.1016/j.scico.2010.12.006
   KHOSHGOFTAAR TM, 1996, ISSRE 96, P364
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Munson JC, 1998, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSM.1998.738486
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Smith MG, 2003, LECT NOTES COMPUT SC, V2610, P229
   Thwin MMT, 2005, J SYST SOFTWARE, V76, P147, DOI 10.1016/j.jss.2004.05.001
   van Koten C, 2006, INFORM SOFTWARE TECH, V48, P59, DOI 10.1016/j.infsof.2005.03.002
   Zhou Yuming, 2008, Wuhan University Journal of Natural Sciences, V13, P14, DOI 10.1007/s11859-008-0104-6
NR 16
TC 13
Z9 14
U1 0
U2 8
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2012
VL 54
IS 2
BP 203
EP 211
DI 10.1016/j.infsof.2011.09.004
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 864ES
UT WOS:000298220400005
DA 2024-07-18
ER

PT J
AU Davidsen, MK
   Krogstie, J
AF Davidsen, Magne Kristoffer
   Krogstie, John
TI A longitudinal study of development and maintenance
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Application evolution; Application maintenance; Survey investigation
ID NORWAY
AB Context: The information systems we see around us today are at first sight very different from those that were developed 15 years ago and more. On the other hand, it seems that we are still struggling with many of the same problems, such as late projects and unfulfilled customer demands.
   Objective: The paper presents finding relative to the distribution of work between maintenance and development tasks, comparing to the results reported earlier to assess the stability of important metrics within the area.
   Method: This paper presents the main results of a survey-investigation performed in 2008 in 67 Norwegian organizations comparing the distribution of work to results from similar investigations performed in Norway in 1993, 1998, and 2003. Some comparisons to similar investigations performed in USA before this is also provided.
   Results: The amount of application portfolio upkeep (work made to keep up the functional coverage of the application system portfolio of the organization, including the development of replacement systems), is at the same level as reported in 1998 and 2003. The level of application maintenance is also on the same level as the similar investigations conducted in 2003 and 1998. There was a significant increase in both maintenance and application portfolio upkeep from 1993 to 1998, which could partly be attributed to be the extra maintenance and replacement-oriented work necessary to deal with the "year 2000 problem", but this seemed to be reversed in 2003 and 2008. As for the 2003 investigation, the slow IT-market in general seemed to have influenced the results negatively seen from the point of view of application systems support efficiency in organization. No similar explanation can be used for the 2008 numbers.
   Conclusion: Based on the last surveys it seems than a stable level of work distribution both on maintenance and application portfolio upkeep have been reached, although the underlying development technologies are still undergoing large changes. This is contrary to others claiming that the amount of maintenance is still increasing. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Davidsen, Magne Kristoffer; Krogstie, John] Norwegian Univ Sci & Technol NTNU, Dept Comp & Informat Sci, Trondheim, Norway.
C3 Norwegian University of Science & Technology (NTNU)
RP Krogstie, J (corresponding author), NTNU, IDI, N-7491 Trondheim, Norway.
EM krogstie@idi.ntnu.no
OI Krogstie, John/0000-0003-4830-1876
CR Arfa L. B., 1990, Proceedings. Conference on Software Maintenance 1990 (Cat. No.90CH2921-5), P124, DOI 10.1109/ICSM.1990.131341
   BERGERSEN L, 1990, THESIS ORAL NTH TRON
   BOEHM, 1999, INFORM SOFTWARE TECH, V41, P397
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Burton Swanson E., 1976, Proceedings of International Conference on Software Engineering (ICSE), P492
   Chapin N, 2001, J SOFTW MAINT EVOL-R, V13, P3, DOI 10.1002/smr.220
   GUPTA A, 2009, THESIS NTNU, P90
   GUPTA A, 2006, P INT C SOFTW ENG AD, P12
   Holgeid KK, 2000, INFORM SOFTWARE TECH, V42, P687, DOI 10.1016/S0950-5849(00)00111-7
   *IEEE, 1991, IEEE STAND GLOSS SOF
   Jones C., 2006, The Economics of Software Maintenance in the Twenty First Century
   JORGENSEN M, 1994, 188 U OSL
   KAJKOMATTSSON M, 2004, P 20 IEEE INT C SOFT
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Krogstie J, 1995, J SOFTW MAINT-RES PR, V7, P383, DOI 10.1002/smr.4360070603
   KROGSTIE J, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P304, DOI 10.1109/ICSM.1994.336764
   KROGSTIE J, 1996, J AUTOMATED SOFTWARE, V3, P347
   Krogstie J, 2006, INFORM SOFTWARE TECH, V48, P993, DOI 10.1016/j.infsof.2005.12.008
   KUNG HJ, 2004, P 20 IEEE INT C SOFT
   LEE MG, 2005, ICSM 05
   Lehman MeirM., 1997, Lecture Notes in Computer Science, V1149, P108
   Lewis G., 2008, SERVICE ORIENTED ARC
   Lientz B P., 1980, Software Maintenance Management
   LIENTZ BP, 1978, COMMUN ACM, V21, P466, DOI 10.1145/359511.359522
   MADHAVJI N, 2002, P ICSM 2002 3 6 OCT
   Mohagheghi P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P7
   NIKORA AP, 2003, P 19 IEEE INT C SOFT
   Nosek J. T., 1990, Journal of Software Maintenance: Research and Practice, V2, P157, DOI 10.1002/smr.4360020303
   Rajlich VT, 2000, COMPUTER, V33, P66, DOI 10.1109/2.869374
   Schach SR, 2003, EMPIR SOFTW ENG, V8, P351, DOI 10.1023/A:1025368318006
   SOUSA H, 1998, P ICSM 98, P268
   SWANSON EB, 1989, WILEY SERIES INFORM
   Yip SWL, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P88, DOI 10.1109/ICSM.1995.526530
NR 33
TC 10
Z9 12
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2010
VL 52
IS 7
BP 707
EP 719
DI 10.1016/j.infsof.2010.03.003
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 605JA
UT WOS:000278342600001
DA 2024-07-18
ER

PT J
AU Heider, W
   Froschauer, R
   Grünbacher, P
   Rabiser, R
   Dhungana, D
AF Heider, Wolfgang
   Froschauer, Roman
   Gruenbacher, Paul
   Rabiser, Rick
   Dhungana, Deepak
TI Simulating evolution in model-based product line engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Product line engineering; Maintenance and evolution; Model-based
   development; Simulation; Industrial automation systems
AB Context: Numerous approaches are available for modeling product lines and their variability. However, the long-term impacts of model-based development on maintenance effort and model complexity can hardly be investigated due to a lack of empirical data. Conducting empirical research in product line engineering is difficult as companies are typically reluctant to provide access to data from their product lines. Also, many benefits of product lines can be measured only in longitudinal studies, which are difficult to perform in most environments.
   Objective: In this paper, we thus aim to explore the benefit of simulation to investigate the evolution of model-based product lines.
   Method: We present a simulation approach for exploring the effects of product line evolution on model complexity and maintenance effort. Our simulation considers characteristics of product lines (e.g., size, dependencies in models) and we experiment with different evolution profiles (e.g., technical refactoring vs. placement of new products).
   Results: We apply the approach in a simulation experiment that uses data from real-world product lines from the domain of industrial automation systems to demonstrate its feasibility. Conclusion: Our results demonstrate that simulation contributes to understanding the effects of maintenance and evolution in model-based product lines. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Heider, Wolfgang; Gruenbacher, Paul; Rabiser, Rick] Johannes Kepler Univ Linz, Christian Doppler Lab Automated Software Engn, A-4040 Linz, Austria.
   [Froschauer, Roman] Upper Austrian Univ Appl Sci, A-4600 Wels, Austria.
   [Dhungana, Deepak] Univ Limerick, Lero Irish Software Engn Res Ctr, Limerick, Ireland.
C3 Johannes Kepler University Linz; University of Limerick
RP Heider, W (corresponding author), Johannes Kepler Univ Linz, Christian Doppler Lab Automated Software Engn, Altenberger Str 69, A-4040 Linz, Austria.
EM heider@ase.jku.at; roman.froschauer@fh-wels.at; gruenbacher@ase.jku.at;
   rabiser@ase.jku.at; deepak.dhungana@lero.ie
RI Grunbacher, Paul/C-2970-2013; Rabiser, Rick/B-8673-2017
OI Grunbacher, Paul/0000-0002-1951-5288; Froschauer,
   Roman/0000-0001-6952-285X; Rabiser, Rick/0000-0003-3862-1112; Dhungana,
   Deepak/0000-0001-9327-9896
FU Christian Doppler Forschungsgesellschaft, Austria; Siemens VAI Metals
   Technologies
FX This work has been supported by the Christian Doppler
   Forschungsgesellschaft, Austria and Siemens VAI Metals Technologies. We
   also want to thank Andreas Schimmel from Technical University of Vienna
   for providing data of IEC 61499 applications used in our simulations.
CR Ajila SA, 2007, J SYST SOFTWARE, V80, P74, DOI 10.1016/j.jss.2006.05.034
   [Anonymous], 2003, 611313 IEC
   [Anonymous], 2008, 61499 IEC
   [Anonymous], 2005, 61499 IEC
   Asikainen T, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P31, DOI 10.1109/SPLINE.2006.1691575
   Atkinson Colin., 2002, COMPONENT BASED PROD
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Boehm B, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P156
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   CHEN Y, 2006, SOFTW PROCESS IMPROV, V11, P385
   CHRISTENSEN JH, 2007, FUNCTION BLOCK BASED
   Czarnecki Krysztof., 1999, GENERATIVE PROGRAMMI
   Dashofy EM, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P103, DOI 10.1109/WICSA.2001.948416
   Deelstra S, 2005, J SYST SOFTWARE, V74, P173, DOI 10.1016/j.jss.2003.11.012
   Deelstra S, 2009, INFORM SOFTWARE TECH, V51, P195, DOI 10.1016/j.infsof.2008.04.002
   DENG G, 2008, DESIGNING SOFTWARE I, P1280
   *DG RES, 2003, WORK DOC MAN 2003 C
   DHUNGANA D, 2007, P IFIP WG 8 1 WORK C, P238
   Dhungana D, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P319, DOI 10.1109/SPLC.2008.26
   Drappa A, 1999, J SYST SOFTWARE, V46, P113, DOI 10.1016/S0164-1212(99)00005-9
   Erdos P., 1959, Publicationes Mathematicae Debrecen, V6, P18
   FLOYD RW, 1962, COMMUN ACM, V5, P345, DOI 10.1145/367766.368168
   FROSCHAUER R, 2008, P 12 INT SOFTW PROD, P39
   Froschauer R, 2009, IEEE INTL CONF IND I, P905, DOI 10.1109/INDIN.2009.5195923
   Froschauer R, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P35, DOI 10.1109/SEAA.2008.21
   Gokhale SS, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P192, DOI 10.1109/ISSRE.1998.730882
   Gomaa H., 2005, DESIGNING SOFTWARE P
   HEIDER W, 2010, P 4 INT WORKSH VAR M, P167
   HEIDER W, 2009, P 1 INT WORKSH MOD D, P59
   Jain A, 2006, CONF SOFTW ENG EDUC, P103
   Johnsson S., 2000, P 1 ICSE 2000 WORKSH, P27
   KANG K, 1990, TR21 CMUSEI
   Kellner MI, 1999, J SYST SOFTWARE, V46, P91, DOI 10.1016/S0164-1212(99)00003-5
   Lehman MM, 2005, INT SER SOFTW ENG, V10, P87
   Lewis R. W., 2001, 61499 IEC
   Matinlassi M, 2004, PROC INT CONF SOFTW, P127, DOI 10.1109/ICSE.2004.1317435
   MCCABE TJ, 1989, COMMUN ACM, V32, P1415, DOI 10.1145/76380.76382
   McGregor J.D., 2003, CMUSEI2003TR005
   Mende T, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P163
   NAVARRO EO, 2006, P INT C SIM ED HUNTS
   OMG, 2003, MDA GUID VERS 1 0 1
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Port Dan, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P268, DOI 10.1109/ASE.2008.37
   Schmid K, 2004, SCI COMPUT PROGRAM, V53, P259, DOI 10.1016/j.scico.2003.04.002
   Sinnema M, 2007, INFORM SOFTWARE TECH, V49, P717, DOI 10.1016/j.infsof.2006.08.001
   Siy H., 1998, PRINC SOFTW EV WORKS, P29
   Strasser T, 2006, DIS 2006: IEEE WORKSHOP ON DISTRIBUTED INTELLIGENT SYSTEMS: COLLECTIVE INTELLIGENCE AND ITS APPLICATIONS, PROCEEDINGS, P127
   SUENDER C, 2008, THESIS TU VIENNA
   SUENDER C, 2006, INT J MANUFACTURING, V1, P405
   Svahnberg M, 1999, J SOFTW MAINT-RES PR, V11, P391, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<391::AID-SMR199>3.0.CO;2-8
   Thramboulidis K, 2004, ICM '04: PROCEEDINGS OF THE IEEE INTERNATIONAL CONFERENCE ON MECHATRONICS 2004, P497, DOI 10.1109/ICMECH.2004.1364489
   VYATKIN V, 1999, P 7 IEEE INT C EM TE, P261
   WECK W, 1996, 10 EUR C OBJ OR PROG
   ZIMMERMANN T, 2007, P 18 IEEE INT S SOFT
NR 54
TC 9
Z9 9
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2010
VL 52
IS 7
BP 758
EP 769
DI 10.1016/j.infsof.2010.03.007
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 605JA
UT WOS:000278342600005
DA 2024-07-18
ER

PT J
AU Andrews, AA
   Offutt, J
   Dyreson, C
   Mallery, CJ
   Jerath, K
   Alexander, R
AF Andrews, Anneliese A.
   Offutt, Jeff
   Dyreson, Curtis
   Mallery, Christopher J.
   Jerath, Kshamta
   Alexander, Roger
TI Scalability issues with using FSMWeb to test web applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Web application testing; Finite state machine modeling; Test design and
   selection
AB Web applications are fast becoming more widespread, larger, more interactive, and more essential to the international use of computers. It is well understood that web applications must be highly dependable, and as a field we are just now beginning to understand how to model and test Web applications. One straightforward technique is to model Web applications as finite state machines. However, large numbers of input fields, input choices and the ability to enter values in any order combine to create a state space explosion problem. This paper evaluates a solution that uses constraints on the inputs to reduce the number of transitions, thus compressing the FSM. The paper presents an analysis of the potential savings of the compression technique and reports actual savings from two case studies. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Andrews, Anneliese A.] Univ Denver, Denver, CO 80208 USA.
   [Offutt, Jeff] George Mason Univ, Volgenau Sch Informat Technol & Engn, Fairfax, VA 22030 USA.
   [Dyreson, Curtis; Mallery, Christopher J.; Jerath, Kshamta] Washington State Univ, Sch EE & CS, Pullman, WA 99164 USA.
   [Alexander, Roger] Schweitzer Engn Labs Inc, Pullman, WA 99163 USA.
C3 University of Denver; George Mason University; Washington State
   University; Schweitzer Engineering Laboratories, Inc.
RP Andrews, AA (corresponding author), Univ Denver, 360 S Gaylord St,JCH 116, Denver, CO 80208 USA.
EM andrews@cs.du.edu; offutt@gmu.edu; cdyreson@eecs.wsu.edu;
   cmallery@eecs.wsu.edu; kjerath@eecs.wsu.edu; rtalexander@mac.com
OI Dyreson, Curtis/0000-0003-0236-1515
CR AMMANN P, 1994, COMPASS '94 - PROCEEDINGS OF THE NINTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P69, DOI 10.1109/CMPASS.1994.318466
   Andrews AKA, 2002, SOFTWARE QUAL J, V10, P225, DOI 10.1023/A:1021686406575
   Andrews Anneliese A., 2004, SOFTWARE SYSTEMS MOD, V4, P326
   [Anonymous], P 2 INT C SOFTW ENG
   [Anonymous], INTRO ALGORITHMS
   [Anonymous], UN MOD LANG SPEC
   Binder R.V., 2000, AW OBJ TECHNOL S
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Coda F, 1998, NINTH INTERNATIONAL WORKSHOP ON SOFTWARE SPECIFICATION AND DESIGN, PROCEEDINGS, P8, DOI 10.1109/IWSSD.1998.667914
   Conallen J, 1999, COMMUN ACM, V42, P63, DOI 10.1145/317665.317677
   Derrick J., 1999, Software Testing, Verification and Reliability, V9, P27, DOI 10.1002/(SICI)1099-1689(199903)9:1<27::AID-STVR172>3.0.CO;2-B
   Di Lucca GA, 2002, PROC IEEE INT CONF S, P310, DOI 10.1109/ICSM.2002.1167787
   Dick J., 1993, FME'93: Industrial-Strength Formal Methods. First International Symposium of Formal Methods Europe Proceedings, P268, DOI 10.1007/BFb0024651
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P187, DOI 10.1109/TSE.2005.36
   Elbaum S, 2003, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.2003.1201187
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   Gao JZ, 1995, P INT COMP SOFTW APP, P232, DOI 10.1109/CMPSAC.1995.524785
   Gellersen HW, 1999, IEEE INTERNET COMPUT, V3, P60, DOI 10.1109/4236.747323
   GONENC G, 1970, IEEE T COMPUT, VC 19, P551, DOI 10.1109/T-C.1970.222975
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   HOPCRAFT JE, 2001, INTRO AUTOMATA THEOR
   HOWDEN WE, 1975, IEEE T COMPUT, VC 24, P554, DOI 10.1109/T-C.1975.224259
   Huang J.C., 1975, ACM Computing Surveys, V7, P113
   ISAKOWITZ T, 1995, COMMUN ACM, V28, P34
   Kung D, 2004, P INT COMP SOFTW APP, P174
   KUNG D, 1994, P INT COMP SOFTW APP, P222, DOI 10.1109/CMPSAC.1994.342801
   Kung DC, 2000, FIRST ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P111, DOI 10.1109/APAQ.2000.883784
   Kung DC, 2000, P INT COMP SOFTW APP, V24, P537, DOI 10.1109/CMPSAC.2000.884778
   Li JF, 2000, 36TH INTERNATIONAL CONFERENCE ON TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS, PROCEEDINGS, P265, DOI 10.1109/TOOLS.2000.885926
   Liu CH, 2000, FIRST ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P7, DOI 10.1109/APAQ.2000.883773
   Liu CH, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P84, DOI 10.1109/ISSRE.2000.885863
   LUO G, 1994, IEEE T SOFTWARE ENG, V20, P149, DOI 10.1109/32.265636
   MANOLA F, 1999, INTERNET COMPUTI JAN, P60
   NAITO S, 1981, P IEEE COMPUT C, P283
   Nielson J., 2000, Designing Web usability: The practice of simplicity
   *OBJ MAN GROUP, 1995, OBJ MAN ARCH GUID
   Offutt A. J., 1999, Proceedings Fifth IEEE International Conference on Engineering of Complex Computer Systems (ICECCS'99) (Cat. No.PR00434), P119, DOI 10.1109/ICECCS.1999.802856
   Offutt J, 1999, LECT NOTES COMPUT SC, V1723, P416
   Offutt J, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P187, DOI 10.1109/ISSRE.2004.13
   Offutt J, 2003, SOFTW TEST VERIF REL, V13, P25, DOI 10.1002/stvr.264
   Offutt J, 2002, IEEE SOFTWARE, V19, P25, DOI 10.1109/52.991329
   PAPADIMITRIOU V, 2006, THESIS G MASON U
   RAN L, 2004, THESIS WASHINGTON ST
   RAN L, 2004, P 5 INT C WEB INF SY, P181
   Ricca F, 2001, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2001.919078
   SABNANI K, 1988, COMPUT NETWORKS ISDN, V15, P285, DOI 10.1016/0169-7552(88)90064-5
   Sampath S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P132, DOI 10.1109/ASE.2004.1342731
   Sampath S, 2007, IEEE T SOFTWARE ENG, V33, P643, DOI 10.1109/TSE.2007.70723
   Sprenkle S, 2005, PROC IEEE INT CONF S, P587
   Turner C. D., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P302, DOI 10.1109/ICSM.1993.366932
   WU Y, 2002, ISETR0208 G MAS U DE
   WU Y, 2009, MODELING TESTING DYN
   Xu L, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P652, DOI 10.1109/CMPSAC.2003.1245411
NR 53
TC 17
Z9 21
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2010
VL 52
IS 1
BP 52
EP 66
DI 10.1016/j.infsof.2009.06.002
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 527ND
UT WOS:000272372900004
DA 2024-07-18
ER

PT J
AU Engström, E
   Runeson, P
   Skoglund, M
AF Engstrom, Emelie
   Runeson, Per
   Skoglund, Mats
TI A systematic review on regression test selection techniques
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Regression testing; Test selection; Systematic review; Empirical studies
AB Regression testing is verifying that previously functioning software remains after a change. With the goal of finding a basis for further research in a joint industry-academia research project, we conducted a systematic review of empirical evaluations of regression test selection techniques. We identified 27 papers reporting 36 empirical studies, 21 experiments and 15 case studies. In total 28 techniques for regression test selection are evaluated. We present a qualitative analysis of the findings, an overview of techniques for regression test selection and related empirical evidence. No technique was found clearly superior since the results depend on many varying factors. We identified a need for empirical studies where concepts are evaluated rather than small variations in technical implementations. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Engstrom, Emelie; Runeson, Per; Skoglund, Mats] Lund Univ, Dept Comp Sci, SE-22100 Lund, Sweden.
C3 Lund University
RP Runeson, P (corresponding author), Lund Univ, Dept Comp Sci, SE-22100 Lund, Sweden.
EM emelie.engstrom@cs.lth.se; per.runeson@cs.lth.se;
   mats.skoglund@cs.lth.se
RI Runeson, Per/H-5113-2019; Engström, Emelie/AAG-7808-2019
OI Runeson, Per/0000-0003-2795-4851; Engström, Emelie/0000-0001-6736-9425
FU Swedish Governmental Agency for Innovation Systems [2005-02483]; Swedish
   Research Council [622-2004-552]
FX The authors acknowledge Dr. Carina Andersson for her contribution to the
   first two stages of the study. The authors are thankful to librarian
   Maria Johnsson for excellent support in the search procedures. The
   authors also appreciate review comments from Prof. Sebastian Elbaum and
   the anonymous reviewers, which substantially have improved the paper.
   This work is partly funded by the Swedish Governmental Agency for
   Innovation Systems under Grant 2005-02483 for the UPPREPA project, and
   partly funded by the Swedish Research Council under Grant 622-2004-552
   for a senior researcher position in software engineering.
CR Agrawal H., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P348, DOI 10.1109/ICSM.1993.366927
   [Anonymous], 2003, CASE STUDY RES DESIG
   [Anonymous], BIOMETRICS
   Baradhi G, 1997, AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE - PROCEEDINGS, P174, DOI 10.1109/ASWEC.1997.623769
   Bible J, 2001, ACM T SOFTW ENG METH, V10, P149, DOI 10.1145/367008.367015
   Binkley D, 1998, INFORM SOFTWARE TECH, V40, P583, DOI 10.1016/S0950-5849(98)00085-8
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   CHEN YF, 1994, PROC INT CONF SOFTW, P211
   DIESTE O, 2008, EMPIRICAL SOFTWARE E
   DO H, 2005, EMPIRICAL SOFTWARE E, V10
   Do Hyunsook., 2006, P ACM SIGSOFT INT S, P141, DOI DOI 10.1145/1181775.1181793
   DYBA T, 2007, 1 INT S EMP SOFTW EN, P225, DOI DOI 10.1109/ESEM.2007.59
   Elbaum S, 2003, SOFTW TEST VERIF REL, V13, P65, DOI 10.1002/stvr.263
   ENGSTROM E, 2008, ESEM 08
   FISCHER K, 1981, NTC 81, P6
   Frankl PG, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P195, DOI 10.1109/ISESE.2003.1237978
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   Gupta KC, 1996, INT J MICROWAVE MILL, V6, P83
   Gupta R., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P299, DOI 10.1109/ICSM.1992.242531
   Haftmann F, 2007, VLDB J, V16, P145, DOI 10.1007/s00778-006-0028-8
   Harrold M. J., 1988, Proceedings of the Conference on Software Maintenance - 1988 (IEEE Cat. No.88CH2615-3), P362, DOI 10.1109/ICSM.1988.10188
   HARROLD MJ, 2001, SIGPLAN NOTICES, P312
   HARTMANN J, 1990, IEEE SOFTWARE, V7, P31, DOI 10.1109/52.43047
   Hartmann J., 1988, Proceedings of the Conference on Software Maintenance - 1988 (IEEE Cat. No.88CH2615-3), P368, DOI 10.1109/ICSM.1988.10189
   Hsia P, 1997, J SOFTW MAINT-RES PR, V9, P217, DOI 10.1002/(SICI)1096-908X(199707/08)9:4<217::AID-SMR152>3.0.CO;2-2
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Juristo N, 2006, IEEE SOFTWARE, V23, P72, DOI 10.1109/MS.2006.166
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kim JM, 2005, SOFTW TEST VERIF REL, V15, P257, DOI 10.1002/stvr.326
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Klösch RR, 2002, J SYST SOFTWARE, V62, P11, DOI 10.1016/S0164-1212(01)00131-5
   Koju T, 2003, PROC IEEE INT CONF S, P420
   Leung H. K. N., 1990, Journal of Software Maintenance: Research and Practice, V2, P209, DOI 10.1002/smr.4360020403
   Leung H. K. N., 1990, Proceedings. Conference on Software Maintenance 1990 (Cat. No.90CH2921-5), P290, DOI 10.1109/ICSM.1990.131377
   Lv XJ, 2006, PROCEEDINGS OF THE 2006 IEEE INTERNATIONAL CONFERENCE ON VEHICULAR ELECTRONICS AND SAFETY, P512
   Mansour N, 1997, P INT COMP SOFTW APP, P511, DOI 10.1109/CMPSAC.1997.625060
   Mansour N, 2001, J SYST SOFTWARE, V57, P79, DOI 10.1016/S0164-1212(00)00119-9
   Mao C, 2005, P 12 AS PAC SOFTW EN
   Memon AM, 2004, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND APPLICATIONS, VOLS 1AND 2, P477
   Orso A, 2001, PROC IEEE INT CONF S, P716, DOI 10.1109/ICSM.2001.972790
   Orso A., 2004, Scaling regression testing to large software systems, P241
   Pasala A, 2005, 12TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P401, DOI 10.1109/APSEC.2005.31
   REN X, 2004, 19 ANN ACM C OBJ OR, P432
   Rothermel G, 2004, ACM T SOFTW ENG METH, V13, P277, DOI 10.1145/1027092.1027093
   Rothermel G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P130, DOI 10.1109/ICSE.2002.1007962
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Rothermel G, 1998, IEEE T SOFTWARE ENG, V24, P401, DOI 10.1109/32.689399
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Rothermel G, 2000, SOFTW TEST VERIF REL, V10, P77, DOI 10.1002/1099-1689(200006)10:2<77::AID-STVR197>3.0.CO;2-E
   Rothermel G., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P358, DOI 10.1109/ICSM.1993.366926
   RUNESON P, 2008, TESTBENCH WORKSH INT
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sajeev ASM, 2003, ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P78, DOI 10.1109/APSEC.2003.1254360
   SHADISH T, 2002, EXPT QUASIEXPERIMENT, P623
   SKOGLUND M, 2005, 2005 INT S EMP SOFTW
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   Vokolos FI, 1998, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.1998.738488
   Vokolos FI, 1997, RELIABILITY, QUALITY AND SAFETY OF SOFTWARE-INTENSIVE SYSTEMS, P3
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   White L, 2004, PROC IEEE INT CONF S, P18, DOI 10.1109/ICSM.2004.1357786
   White L, 2005, PROC IEEE INT CONF S, P695
   White L., 1997, SOFTWARE QUALITY WEE
   White L. J., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P262, DOI 10.1109/ICSM.1992.242535
   Willmor D, 2005, PROC IEEE INT CONF S, P421
   WU Y, 1999, P 10 INT S SOFTW REL, P270
   YANPING C, 2002, P 2002 C CTR ADV STU
   Zheng J, 2006, FIFTH INTERNATIONAL CONFERENCE ON COMMERCIAL-OFF-THE-SHELF (COTS) - BASED SOFTWARE SYSTEM, PROCEEDINGS, P137
   ZHENG J, 2005, P 20 IEEE ACM INT C
   Zheng J, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P225
NR 72
TC 175
Z9 190
U1 1
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2010
VL 52
IS 1
BP 14
EP 30
DI 10.1016/j.infsof.2009.07.001
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 527ND
UT WOS:000272372900002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Stone, A
   Strout, M
   Behere, S
AF Stone, Andrew
   Strout, Michelle
   Behere, Shweta
TI May/must analysis and the DFAGen data-flow analysis generator
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
CT 8th IEEE International Working Conference on Source Code Analysis and
   Manipulation
CY SEP 28-29, 2008
CL Beijing, PEOPLES R CHINA
SP IEEE Comp Soc, Semant Designs, SAP, Reengn Forum, Ctr Res Evolut Search & Testing
DE Data-flow analysis; May; Must; Static analysis; Program analysis;
   Compilers
ID OPTIMIZATION
AB Data-flow analysis is a common technique for gathering program information for use in program transformations such as register allocation, dead-code elimination, common subexpression elimination, and scheduling. Current tools for generating data-flow analysis implementations enable analysis details to be specified orthogonally to the iterative analysis algorithm but still require implementation details regarding the may and must use and definition sets that occur due to the effects of pointers, side effects, arrays, and user-defined structures. This paper presents the Data-Flow Analysis Generator tool (DFAGen), which enables analysis writers to generate analyses for separable and nonseparable data-flow analyses that are pointer, aggregate, and side-effect cognizant from a specification that assumes only scalars. By hiding the compiler-specific details behind predefined set definitions, the analysis specifications for the DFAGen tool are typically less than ten lines long and similar to those in standard compiler textbooks. The main contribution of this work is the automatic determination of when to use the may or must variant of a predefined set usage in the analysis specification. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Stone, Andrew; Strout, Michelle] Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
   [Behere, Shweta] Avaya Inc, Milpitas, CA 95035 USA.
C3 Colorado State University; Avaya
RP Stone, A (corresponding author), Colorado State Univ, Dept Comp Sci, 1873 Campus Delivery, Ft Collins, CO 80523 USA.
EM stonea@cs.colostate.edu; mstrout@cs.colostate.edu; behere@avaya.com
RI Behere, Shweta/V-8387-2019
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   Alt M., 1995, Static Analysis. Second International Symposium, SAS'95. Proceedings, P33
   [Anonymous], P PLDI
   [Anonymous], 2007, COMPILERS PRINCIPLES
   [Anonymous], 2009, P 30 ACM SIGPLAN C P
   Appel A.W., 2002, MODERN COMPILER IMPL, V2nd
   Cooper KeithD., 2004, Engineering a Compiler
   Dwyer MB, 1996, PROC INT CONF SOFTW, P554, DOI 10.1109/ICSE.1996.493449
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   GUYER SZ, 1999, 2 C DOM SPEC LANG
   GUYER SZ, 2000, LNCS, V2017
   Hall Mary, 1993, P 6 WORKSH LANG COMP, P522
   HALL MW, 1995, CRPCTR95522S RIC U
   Hascoët L, 2005, FUTURE GENER COMP SY, V21, P1401, DOI 10.1016/j.future.2004.11.009
   Khedker UP, 1999, ACM SIGPLAN NOTICES, V34, P47, DOI 10.1145/606666.606676
   KNOOP J, 1993, 9309 C ALBR U KIEL I
   KREASECK B, 2006, P 3 INT WORKSH AUT D
   MARTIN F, 1998, INT J SOFTW TOOLS TE, V2, P46
   MOONEN L, 1997, 2 INT WORKSH THEOR P
   MOREL E, 1979, COMMUN ACM, V22, P96, DOI 10.1145/359060.359069
   Muchnick S., 1997, ADV COMPILER DESIGN
   NIELSON F, 2005, PRINCIPLES PROGRAM A, pCH2
   QUINLAN D, 1997, 16 INT PAR DISTR PRO, P105
   Reps ThomasW., 1995, P ACM S PRINCIPLES P, P49
   Ryder BG, 2001, ACM T PROGR LANG SYS, V23, P105, DOI 10.1145/383043.381532
   Srikant Y.N., 2007, The Compiler Design Handbook: Optimizations and Machine Code Generation
   Steensgaard Bjarne., 1996, POINTS TO ANAL ALMOS, P32
   STONE A, 2008, P 8 INT WORK C SOURC
   STROUT MM, 2005, P 6 ACM SIGPLAN SIGS
   TJIANG SW, 1992, ACM SIGPLAN C PROGR
   YI K, 1993, P 20 ACM SIGPLAN SIG
   Zeng J, 2006, ELECTRON NOTES THEOR, V164, P103, DOI 10.1016/j.entcs.2006.10.008
   [No title captured], DOI [10.1145/512927.512945, DOI 10.1145/512927.512945]
NR 33
TC 4
Z9 4
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2009
VL 51
IS 10
BP 1440
EP 1453
DI 10.1016/j.infsof.2009.04.014
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 481VN
UT WOS:000268840400006
DA 2024-07-18
ER

PT J
AU Wohed, P
   Russell, N
   ter Hofstede, AHM
   Andersson, B
   van der Aalst, WMP
AF Wohed, Petia
   Russell, Nick
   ter Hofstede, Arthur H. M.
   Andersson, Birger
   van der Aalst, Wil M. P.
TI Patterns-based evaluation of open source BPM systems: The cases of jBPM,
   OpenWFE, and Enhydra Shark
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE jBPM; OpenWFE; Enhydra shark; Business process management (BPM); Open
   source software; Workflow patterns
ID WORKFLOW; IDENTIFICATION; REPRESENTATION
AB In keeping with the proliferation of free software development initiatives and the increased interest in the business process management domain, many open source workflow and business process management systems have appeared during the last few years and are now under active development. This upsurge gives rise to two important questions: What are the capabilities of these systems? and How do they compare to each other and to their closed source counterparts? In other words: What is the state-of-the-art in the area?. To gain an insight into these questions, we have conducted an in-depth analysis of three of the major open source workflow management systems - jBPM, OpenWFE, and Enhydra Shark, the results of which are reported here. This analysis is based on the workflow patterns framework and provides a continuation of the series of evaluations performed using the same framework on closed source systems, business process modelling languages, and web-service composition standards. The results from evaluations of the three open source systems are compared with each other and also with the results from evaluations of three representative closed source systems: Staffware, WebSphere MQ and Oracle BPEL PM. The overall conclusion is that open source systems are targeted more toward developers rather than business analysts. They generally provide less support for the patterns than closed source systems, particularly with respect to the resource perspective, i.e. the various ways in which work is distributed amongst business users and managed through to completion. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Wohed, Petia; Andersson, Birger] Stockholm Univ KTH, DSV, S-16040 Stockholm, Sweden.
   [ter Hofstede, Arthur H. M.; van der Aalst, Wil M. P.] Queensland Univ Technol, Brisbane, Qld 4001, Australia.
   [Russell, Nick; van der Aalst, Wil M. P.] Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
C3 Royal Institute of Technology; Queensland University of Technology
   (QUT); Eindhoven University of Technology
RP Wohed, P (corresponding author), Stockholm Univ KTH, DSV, S-16040 Stockholm, Sweden.
EM petia@dsv.su.se; n.c.russell@tue.nl; a.terhofstede@qut.edu.au;
   ba@dsv.su.se; w.m.p.v.d.aalst@tue.nl
RI van der Aalst, Wil/G-1248-2011; Dumas, Marlon/H-2757-2015; ter Hofstede,
   Arthur/I-9787-2012
OI van der Aalst, Wil/0000-0002-0955-6940; Dumas,
   Marlon/0000-0002-9247-7476; Wohed, Petia/0000-0001-9154-2064; ter
   Hofstede, Arthur/0000-0002-2730-0201
CR Bunge M., 1977, TREATISE BASIC PHYLO, V3
   Cumberlidge M., 2007, BUSINESS PROCESS MAN, VFirst
   Curbera F., 2003, BUSINESS PROCESS EXE
   *ENH ORG, OP SOURC JAV XPDL WO
   Green P, 2007, DATA KNOWL ENG, V62, P274, DOI 10.1016/j.datak.2006.08.004
   Guarino N, 1998, FR ART INT, V46, P3
   Harmon P., 2007, Exploring BPMS with Free or Open Source Products
   Jablonski S., 1996, WORKFLOW MANAGEMENT
   *JAV SOURC NET, OP SOURC WORKFL ENG
   *JBOSS, JBOSS JBPM 3 1 WORKF
   *JBOSS JBPM FOR, REQ VAR
   *JBOSS JBPM FOR, DAT TRIGG TASK END
   Kiepuszewski B, 2000, LECT NOTES COMPUT SC, V1789, P431
   KROGSTIE J, 2003, INFORM SYSTEM ENG CO
   KROGSTIE J, 2003, EVALUATING UML USING, P1
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   MADL A, 2007, TOGETHER WORKFLOW ED
   *MAN, OP SOURC WORKFL ENG
   METTRAUX J, OPENWFE MANUAL OPEN
   Opdahl A. L., 2002, Software and Systems Modeling, V1, P43
   *OPENWFE, OPENWFERU TIM EXPR S
   *OPENWFE, OPENWFERU WORKFL PAT
   Puhlmann R, 2005, LECT NOTES COMPUT SC, V3649, P153, DOI 10.1007/11538394_11
   Recker J.C., 2006, GOOD IS BPMN REALLY
   Rosemann M, 2006, LECT NOTES COMPUT SC, V4001, P447, DOI 10.1007/11767138_30
   Russell N, 2005, LECT NOTES COMPUT SC, V3716, P353
   Russell N, 2005, LECT NOTES COMPUT SC, V3520, P216
   Russell N., 2006, Workflow Control-Flow Patterns: A Revised View
   Russell NC, 2007, THESIS QUEENSLAND U
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Van Der Geest S, 2002, AGEING SOC, V22, P7, DOI 10.1017/S0144686X02008541
   VANDERAALST WMP, 2003, BPM0309
   WAHL T, 2005, P WORKSH EV MOD METH, P533
   Wand Y, 1993, INFORM SYST J, V3, P217, DOI 10.1111/j.1365-2575.1993.tb00127.x
   WfMC, 2002, WORKFL PROC DEF INT
   Wohed P, 2006, LECT NOTES COMPUT SC, V4102, P161
   Wohed P, 2005, LECT NOTES COMPUT SC, V3716, P63
   Wohed P, 2003, LECT NOTES COMPUT SC, V2813, P200
   WOHED P, 2004, BETA WORKING PAPER S, V129
   Wyssusek B., 2006, Scandinavian Journal of Information Systems, V18, P63
NR 41
TC 27
Z9 31
U1 0
U2 30
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2009
VL 51
IS 8
BP 1187
EP 1216
DI 10.1016/j.infsof.2009.02.002
PG 30
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 464KT
UT WOS:000267504500001
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Jee, E
   Yoo, J
   Cha, S
   Bae, D
AF Jee, Eunkyoung
   Yoo, Junbeom
   Cha, Sungdeok
   Bae, Doohwan
TI A data flow-based structural testing technique for FBD programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Structural testing; Test coverage criteria;
   Programmable logic controller; Function block diagram
AB With increased use of programmable logic controllers (PLCs) in implementing critical systems, quality assurance became an important issue. Regulation requires structural testing be performed for safety-critical systems by identifying coverage criteria to be satisfied and accomplishment measured. Classical coverage criteria, based on control flow graphs, are inadequate when applied to a data flow language function block diagram (FBD) which is a PLC programming language widely used in industry. We propose three structural coverage criteria for FBD programs, analyze relationship among them, and demonstrate their effectiveness using a real-world reactor protection system. Using test cases that had been manually prepared by FBD testing professionals, our technique found many aspects of the FBD logic that were not tested sufficiently. Domain experts, having found the approach highly intuitive, found the technique effective. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Cha, Sungdeok] Korea Univ, Dept Comp Sci & Engn, Seoul 136701, South Korea.
   [Jee, Eunkyoung; Bae, Doohwan] Korea Adv Inst Sci & Technol, Dept EECS, Div Comp Sci, Taejon 305701, South Korea.
   [Yoo, Junbeom] Konkuk Univ, Div Comp Sci & Engn, Seoul 143701, South Korea.
C3 Korea University; Korea Advanced Institute of Science & Technology
   (KAIST); Konkuk University
RP Cha, S (corresponding author), Korea Univ, Dept Comp Sci & Engn, Seoul 136701, South Korea.
EM scha@korea.ac.kr
RI Bae, Doo-Hwan/C-1538-2011
FU MKE (Ministry of Knowledge Economy), Korea; IITA
   [IITA-2009(C1090-0902-0032)]; Korea University; Korean Government
   [KRF-2008-331-D00524]
FX This work was partially supported by the MKE (Ministry of Knowledge
   Economy), Korea, Under the ITRC (I nformation Technology Research
   Center) support program supervised by the IITA (institute of Information
   Technology Advancement) (IITA-2009(C1090-0902-0032)), and also partially
   supported by a Korea University Grant and the Korean Research Foundation
   Grant funded by the Korean Government (KRF-2008-331-D00524).
CR Baresi L, 2000, IEEE SYS MAN CYBERN, P2437, DOI 10.1109/ICSMC.2000.884357
   DAVIS AL, 1982, COMPUTER, V15, P26, DOI 10.1109/MC.1982.1653939
   Dutertre B., YICES SMT SOLVER
   IEC: International Electrotechnical Commission, 1993, INT STAND PROGR CO 3
   Jee E, 2005, LECT NOTES COMPUT SC, V3688, P67
   Jee EY, 2006, ASPEC 2006: 13th Asia-Pacific Software Engineering Conference, Proceedings, P243
   *KOR AT EN RES I, 2006, KNICSRPSSTR141 KOR A
   LAKEHAL A, 2005, P 10 INT WORKSH FORM
   Lewis R. W., 1998, IEE CONTROL ENG SERI
   Mader A., 2000, P 5 INT WORKSH DISCR
   Pezze M., 2008, Software Testing and Analysis: Process, Principles and Techniques
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   *USNRC, 1997, 1171 USNRC
   YOO J, 2004, P 6 INT TOP M NUCL R
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 15
TC 34
Z9 38
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2009
VL 51
IS 7
SI SI
BP 1131
EP 1139
DI 10.1016/j.infsof.2009.01.003
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 456JD
UT WOS:000266840500004
DA 2024-07-18
ER

PT J
AU Beydoun, G
   Low, G
   Mouratidis, H
   Henderson-Sellers, B
AF Beydoun, G.
   Low, G.
   Mouratidis, H.
   Henderson-Sellers, B.
TI A security-aware metamodel for multi-agent systems (MAS)
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Security-based metamodelling; Model-based security; Modelling of secure
   agent-oriented information systems; Modelling of security features;
   Peer-to-peer security modelling
AB This paper adopts a model-based security (MBS) approach to identify security requirements during the early stages of multi-agent system development. Our adopted MBS approach is underpinned by a metamodel independent of any specific methodology. It allows for security considerations to be embedded within any situated agent methodology which then prescribes security considerations within its work products. Using a standard model-driven engineering (MDE) approach, these work products are initially constructed as high abstraction models and then transformed into more precise models until code-specific models can be produced. A multi-agent system case study is used to illustrate the applicability of the proposed security-aware metamodel. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Mouratidis, H.] Univ E London, Sch Comp & Technol, London E16 2RD, England.
   [Beydoun, G.] Univ Wollongong, Fac Informat, Wollongong, NSW 2522, Australia.
   [Low, G.] Univ New S Wales, Sch Informat Syst, Technol & Management Australian Sch Business, Sydney, NSW 2052, Australia.
   [Henderson-Sellers, B.] Univ Technol Sydney, Fac Informat Technol, Broadway, NSW 2007, Australia.
C3 University of East London; University of Wollongong; University of New
   South Wales Sydney; University of Technology Sydney
RP Mouratidis, H (corresponding author), Univ E London, Sch Comp & Technol, 4-6 Univ Way, London E16 2RD, England.
EM beydoun@uow.edu.au; g.low@unsw.edu.au; haris@uel.ac.uk;
   brian@it.uts.edu.au
RI Beydoun, Ghassan/E-8952-2011; Beydoun, Ghassan/L-5554-2017
OI Beydoun, Ghassan/0000-0001-8087-5445; Mouratidis,
   Haralambos/0000-0002-2599-0712
CR [Anonymous], SECURITY ORIENTED AP
   BEYDOUN G, 2007, P WORKSH EXPL MOD ME, P179
   BEYDOUN G, SOFTWARE ENG MULTIAG, V4, P126
   BEYDOUN G, 2006, LECT NOTES COMPUT SC, P111
   BORSELIUS N, 2002, INT C SEC MAN SAM02, P31
   Bradshaw M.J., 1997, SOFTWARE AGENTS
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Esteva M., 2002, Proceedings of the First International Joint Conference on Autonomous Agents and Multiagent Systems, P1045
   Esteva M., 2003, Electronic Institutions: from specification to development
   Giorgini P., 2004, 2 INT C TRUST MAN IT
   HENDERSONSELLER.B, 2002, AGENT ORIENTED METHO, P368
   Huget M.-P., 2002, OOPSLA WORKSH AG OR
   Iglesias CA, 1999, LECT NOTES ARTIF INT, V1555, P317
   JANSEN W, 1999, NATL I STANDARDS TEC
   Jennings NR, 2001, COMMUN ACM, V44, P35, DOI 10.1145/367211.367250
   JURJENS J, 2005, SOUND METHODS EFFECT, P322
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Liu L., 2002, 2 S REQ ENG INF SEC
   McGraw G., 2006, SOFTWARE SECURITY
   MINE T, 2004, DESIGN IMPLEMENTATIO, P31
   Mouratidis H, 2007, INTEGRATING SECURITY AND SOFTWARE ENGINEERING: ADVANCES AND FUTURE VISIONS, P1
   Mouratidis H., 2003, MODELLING SECURE MUL, P859
   MOURATIDIS H, 2005, 4 INT JOINT C AUT AG, P578
   Odell James., 2000, AOIS WORKSHOP AAAI 2, P3
   *OMG, 2001, FORMAL010968 OMG
   *OMG, 2003, OMG030601
   *OMG, 2005, FORMAL050704 OMG
   Padgham L., 2005, DEV INTELLIGENT AGEN
   Pastor O., 2007, MODEL DRIVEN ARCHITE
   Rodriguez J.A., 2003, DESIGN CONSTRUCTION
   Roth V., 2001, INT WORKSH SEC MOB M
   SILVA V, 2004, AUTON AGENT MULTI-AG, V9, P145
   TRAN QNN, 2006, DESIGN PEER TO PEER, P52
   Wooldridge M., 2001, Agent-Oriented Software Engineering. First International Workshop, AOSE 2000. Revised Papers (Lecture Notes in Computer Science Vol.1957), P1
   Wooldridge M. J., 2002, INTRO MULTIAGENT SYS
   Yee B., 2003, 23 INT C DISTR COMP
NR 37
TC 30
Z9 33
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2009
VL 51
IS 5
SI SI
BP 832
EP 845
DI 10.1016/j.infsof.2008.05.003
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 425OY
UT WOS:000264648200003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Acuña, ST
   Gómez, M
   Juristo, N
AF Acuna, Silvia T.
   Gomez, Marta
   Juristo, Natalia
TI How do personality, team processes and task characteristics relate to
   job satisfaction and software quality?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Personality factors; Team processes; Task characteristics; Software
   quality; Job satisfaction
ID DECISION-MAKING; PERFORMANCE; AUTONOMY; ABILITY; MODEL
AB This article analyses the relationships between personality, team processes, task characteristics, product quality and satisfaction in software development teams. The data analysed here were gathered from a sample of 35 teams of students (105 participants). These teams applied an adaptation of an agile methodology, extreme Programming (XP), to develop a software product. We found that the teams with the highest job satisfaction are precisely the ones whose members score highest for the personality factors agreeableness and conscientiousness. The satisfaction levels are also higher when the members can decide how to develop and organize their work. On the other hand, the level of satisfaction and cohesion drops the more conflict there is between the team members. Finally, the teams exhibit a significant positive correlation between the personality factor extraversion and software product quality. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Gomez, Marta] Univ San Pablo CEU, Escuela Politecn Super, Madrid, Spain.
   [Acuna, Silvia T.] Univ Autonoma Madrid, Escuela Politecn Super, E-28049 Madrid, Spain.
   [Juristo, Natalia] Univ Politecn Madrid, Fac Informat, E-28040 Madrid, Spain.
C3 San Pablo CEU University; Autonomous University of Madrid; Universidad
   Politecnica de Madrid
RP Gómez, M (corresponding author), Univ San Pablo CEU, Escuela Politecn Super, Madrid, Spain.
EM silvia.acunna@uam.es; mgomez.eps@ceu.es; natalia@fi.upm.es
RI Acuna, Silvia/A-7395-2008
OI Acuna, Silvia/0000-0003-2135-6113
CR Acuña ST, 2004, SOFTWARE PRACT EXPER, V34, P675, DOI 10.1002/spe.586
   [Anonymous], P C SIGCPR
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 1973, Encounter groups: First facts
   [Anonymous], 2001, AGILE MANIFESTO
   BARRICK MR, 1991, PERS PSYCHOL, V44, P1, DOI 10.1111/j.1744-6570.1991.tb00688.x
   Barrick MR, 1998, J APPL PSYCHOL, V83, P377, DOI 10.1037/0021-9010.83.3.377
   Barry B, 1997, J APPL PSYCHOL, V82, P62, DOI 10.1037/0021-9010.82.1.62
   BECK K, 1989, SIGPLAN NOTICES, V24, P1, DOI 10.1145/74878.74879
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Bentley JL, 2000, PROGRAMMING PEARLS
   Bostrom R. P., 1981, Proceedings of the Eighteenth Annual Computer Personnel Research Conference, P248, DOI 10.1145/800051.801855
   BREAUGH JA, 1985, HUM RELAT, V38, P551, DOI 10.1177/001872678503800604
   Burdett G., 1995, Proceedings of the 1995 ACM SIGCPR Conference, P202, DOI 10.1145/212490.212599
   Chan D, 1998, J APPL PSYCHOL, V83, P234, DOI 10.1037/0021-9010.83.2.234
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Costa PT., 2002, NEO PERSONALITY INVE
   CURTIS B, 1992, COMMUN ACM, V35, P75, DOI 10.1145/130994.130998
   CURTIS B, 1990, PSYCHOL PROGRAMMING
   DeMarco T, 1999, PEOPLEWARE PRODUCTIV
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   English A, 2004, SMALL GR RES, V35, P643, DOI 10.1177/1046496404266320
   EVANS BK, 1992, HUM RELAT, V45, P1169, DOI 10.1177/001872679204501103
   GLADSTEIN DL, 1984, ADMIN SCI QUART, V29, P499, DOI 10.2307/2392936
   Hackman J., 1987, WORK REDESIGN
   HARDIMAN LT, 1997, IEEE COMPUT, V30, P10
   IEEE - Institute of Electrical and Electronics Engineers, 2004, GUID SOFTW ENG BOD K
   Jedlitschka A., 2005, REPORTING GUIDELINES
   JEHN KA, 1995, ADMIN SCI QUART, V40, P256, DOI 10.2307/2393638
   Katzenbach J., 2001, DISCIPLINE TEAMS MIN
   Kellner MI, 1999, J SYST SOFTWARE, V46, P91, DOI 10.1016/S0164-1212(99)00003-5
   KENNY DA, 1985, J PERS SOC PSYCHOL, V48, P339, DOI 10.1037/0022-3514.48.2.339
   Macias F, 2003, PROCEEDINGS OF THE FOURTH MEXICAN INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE (ENC 2003), P73, DOI 10.1109/ENC.2003.1232877
   Mannaro K, 2004, LECT NOTES COMPUT SC, V3092, P166
   Martin RC, 2000, IEEE SOFTWARE, V17, P12, DOI 10.1109/52.854062
   McDowell C, 2006, COMMUN ACM, V49, P90, DOI 10.1145/1145287.1145293
   McGrath J.E., 1984, GROUPS INTERACTION P
   Molleman E, 2004, SMALL GR RES, V35, P515, DOI 10.1177/1046496404264361
   Molleman E, 2000, INT J OPER PROD MAN, V20, P889, DOI 10.1108/01443570010332935
   Neuman GA, 1999, J APPL PSYCHOL, V84, P376, DOI 10.1037/0021-9010.84.3.376
   Pfleeger S.L., 2001, SOFTWARE ENG THEORY, V2nd
   Rutherfoord R. H., 2001, SIGCSE Bulletin, V33, P73, DOI 10.1145/507758.377486
   SOMMERVILLE I, 1996, TREND SOFTWARE, P89
   STOKES JP, 1983, INT J GROUP PSYCHOTH, V33, P449, DOI 10.1080/00207284.1983.11491345
   Teague J., 1998, Proceedings of the Third Australasian Conference on Computer Science Education, P155, DOI 10.1145/289393.289416
   TUCKMAN BW, 1965, PSYCHOL BULL, V63, P384, DOI 10.1037/h0022100
   TURLEY RT, 1995, J SYST SOFTWARE, V28, P19, DOI 10.1016/0164-1212(94)00078-2
   Umphress DA, 2002, IEEE SOFTWARE, V19, P78, DOI 10.1109/MS.2002.1032858
   Van der Vegt GS, 2001, PERS PSYCHOL, V54, P51
   Van Vianen A.E. M., 2001, EUR J WORK ORGAN PSY, V10, P97, DOI [10.1080/13594320143000573, DOI 10.1080/13594320143000573]
   Wellington C.A., 2005, P 35 ASEE IEEE FRONT
   WHITE KB, 1986, MIS QUART, V10, P215, DOI 10.2307/249253
   Wynekoop J. L., 2000, Information Technology & People, V13, P186, DOI 10.1108/09593840010377626
   Yang HL, 2004, INFORM MANAGE-AMSTER, V41, P335, DOI 10.1016/S0378-7206(03)00078-8
   Zakarian A, 1999, IIE TRANS, V31, P85, DOI 10.1080/07408179908969808
   ZUSER W, 2003, P 16 C SOFTW ENG ED
NR 56
TC 121
Z9 136
U1 1
U2 43
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2009
VL 51
IS 3
BP 627
EP 639
DI 10.1016/j.infsof.2008.08.006
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 400TM
UT WOS:000262891500007
DA 2024-07-18
ER

PT J
AU Bjornson, FO
   Wang, AI
   Arisholm, E
AF Bjornson, Finn Olav
   Wang, Alf Inge
   Arisholm, Erik
TI Improving the effectiveness of root cause analysis in post mortem
   analysis: A controlled experiment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Retrospective method; Software process improvement; Controlled
   experiment; Knowledge management; Post mortem analysis
ID POSTMORTEM
AB Retrospective analysis is a way to share knowledge following the completion of it project or major milestone. However, in the busy workday of a software project, there is rarely time for such reviews and there is a need for effective methods that will yield good results quickly without the need for external consultants or experts. Building on ail existing method for retrospective analysis and theories of group involvement, we propose improvements to the root cause analysis phase of a lightweight retrospective analysis method known as post mortem analysis (PMA). In particular, to facilitate brainstorming during the root cause analysis phase of the PMA, we propose certain processual changes to facilitate more active individual participation and the use of less rigidly structured diagrams. We conducted a controlled experiment to compare this new variation of the method with the existing one, and conclude that in our setting of small software teams with no access to ail experienced facilitator, the new variation is more effective when it conics to identifying possible root causes of problems and successes. The modified method also produced more specific starting points for improving the software development process. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Bjornson, Finn Olav; Wang, Alf Inge] Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, N-7491 Trondheim, Norway.
   [Arisholm, Erik] Simula Res Lab, Dept Software Engn, N-1325 Lysaker, Norway.
   [Arisholm, Erik] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
C3 Norwegian University of Science & Technology (NTNU); University of Oslo
RP Bjornson, FO (corresponding author), Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, Sem Saelandsvei 7-9, N-7491 Trondheim, Norway.
EM Finn.Olav.Bjornson@idi.ntnu.no; Alf.Inge.Wang@idi.ntnu.no;
   erika@simula.no
RI Wang, Alf Inge/AGH-1875-2022
CR [Anonymous], P 4 INT WORKSH LEARN
   Birk A, 2002, IEEE SOFTWARE, V19, P43, DOI 10.1109/MS.2002.1003452
   CLEMENTS P., 2002, EVALUATING SOFTWARE
   Cockburn A., 2002, AGILE SOFTWARE DEV
   Cohen J., 1988, STAT POWER ANAL BEHA
   COLLISON C, 2001, CAPSTONE PUBLICATION
   Desouza K. C., 2005, Software Process Improvement and Practice, V10, P203, DOI 10.1002/spip.224
   Dingsoyr T, 2005, INFORM SOFTWARE TECH, V47, P293, DOI 10.1016/j.infsof.2004.08.008
   DINGSOYR T, 2001, LECT NOTES COMPUTER, V2188, P167
   DYBA T, 2001, THESIS NORWEGIAN U S
   DYBA T, 2004, PROCESS IMPROVEMENT
   Faure C, 2004, J CREATIVE BEHAV, V38, P13, DOI 10.1002/j.2162-6057.2004.tb01229.x
   Glass RL, 2002, IEEE SOFTWARE, V19, P111
   Hodgkinson GP, 2004, ORGAN RES METHODS, V7, P3, DOI 10.1177/1094428103259556
   Keegan A, 2001, MANAGE LEARN, V32, P77, DOI 10.1177/1350507601321006
   Kerth N.L., 2001, Project retrospectives: A handbook for team reviews
   LARSEN D, 2003, P 21 PAC NW SOFTW QU
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   MYLLYAHO M, 2004, P ICSSEA PAR
   RISING L, 2003, J INFORM TECHNOLOGY, V16, P27
   Scupin R, 1997, HUM ORGAN, V56, P233, DOI 10.17730/humo.56.2.x335923511444655
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   Stålhane T, 2003, LECT NOTES COMPUT SC, V2765, P129
   van Bennekum A., 2001, Principles behind the Agile Manifesto
   Wang HY, 2005, CHINESE J CHEM PHYS, V18, P50
   Whitten N., 1995, Managing software development projects, V2nd
NR 26
TC 26
Z9 27
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2009
VL 51
IS 1
SI SI
BP 150
EP 161
DI 10.1016/j.infsof.2008.02.003
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 389FU
UT WOS:000262077500014
DA 2024-07-18
ER

PT J
AU Damij, N
   Damij, T
   Grad, J
   Jelenc, F
AF Damij, Nadja
   Damij, Talib
   Grad, Janez
   Jelenc, Franc
TI A methodology for business process improvement and IS development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID FRAMEWORK
AB This paper aims at discussing business process modelling and improvement as an essential work to create a successful and competitive enterprise. To achieve this goal, we use a methodology called TAD, which consists of six phases. The first three deal with business process identification, modelling and improvement. The methodology presents a new unique way for business process identification, modelling, and improvement. The last three phases continue with the implementation of the improved business process(es) by developing its information system. The business process "Surgery" is used as an example to show the implementation of the methodology. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Damij, Nadja; Damij, Talib] Univ Ljubljana, Fac Econ, Ljubljana 1000, Slovenia.
   [Grad, Janez] Univ Ljubljana, Fac Adm, Ljubljana 1000, Slovenia.
   [Jelenc, Franc] Univ Ljubljana, Univ Med Ctr, Ljubljana 1000, Slovenia.
C3 University of Ljubljana; University of Ljubljana; University Medical
   Centre Ljubljana; University of Ljubljana
RP Damij, T (corresponding author), Univ Ljubljana, Fac Econ, Kardeljeva Ploscad 17, Ljubljana 1000, Slovenia.
EM nadja.damij@gmail.com; tdamij@gmail.com; Janez.grad@fu.uni-lj.si;
   Franc.jelenc@kclj.si
CR Aguilar-Savén RS, 2004, INT J PROD ECON, V90, P129, DOI 10.1016/S0925-5273(03)00102-6
   AGUILARSAVEN R, 2002, INT C ADV PROD MAN S
   Al-Mashari M., 2000, BUS PROCESS MANAG J, V6, P10, DOI 10.1108/14637150010283045
   Chan MFS, 2002, INT J PROD ECON, V75, P113, DOI 10.1016/S0925-5273(01)00185-2
   Davenport T.H., 1993, PROCESS INNOVATION R
   DAVENPORT TH, 1990, SLOAN MANAGE REV, V31, P11
   HALES K, 1993, INFORM MANAGEMENT TE, V26
   Hammer M., 1994, REENGINEERING CORPOR
   Harrington H.J., 1997, Business Process Improvement Workbook: Documentation, Analysis, Design, and Management of Business Process Improvement
   Laguna M., 2005, Business Process Modeling, Simulation and Design
   LAVERY M, 1992, P C OIS DOC MAN
   Martinez MT, 2001, INT J PROD ECON, V74, P225, DOI 10.1016/S0925-5273(01)00129-3
   MEDINAMORA R, 1992, CSCW P TOR, P1
   Phalp KT, 1998, INFORM SOFTWARE TECH, V40, P731, DOI 10.1016/S0950-5849(98)00058-5
   Rumbaugh J., 1999, The unified software development process
   Scholz-Reiter B., 1996, BUSINESS PROCESS MOD
   Watson H.G., 1994, Business Systems Engineering, V1st
NR 17
TC 31
Z9 35
U1 1
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2008
VL 50
IS 11
BP 1127
EP 1141
DI 10.1016/j.infsof.2007.11.004
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 355LA
UT WOS:000259709200006
DA 2024-07-18
ER

PT J
AU Germain, E
   Robillard, PN
AF Germain, Eric
   Robillard, Pierre N.
TI Towards software process patterns: An empirical analysis of the behavior
   of student teams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
AB Traditional software engineering processes are composed of practices defined by roles, activities and artifacts. Software developers have their own understanding of practices and their own ways of implementing them, which could result in variations in software development practices. This paper presents an empirical study based on six teams of five students each, involving three different projects. Their process practices are monitored by time slips based on the effort expended on various process-related activities. This study introduces a new 3-pole graphical representation to represent the process patterns of effort expended on the various discipline activities. The purpose of this study is to quantify activity patterns in the actual process, which in turn demonstrates the variability of process performance. This empirical study provides three examples of patterns based on three empirical axes (engineering, coding and V&V). The idea behind this research is to make developers aware that there is wide variability in the actual process, and that process assessments might be weakly related to actual process activities. This study suggests that in-process monitoring is required to control the process activities. In-process monitoring is likely to provide causal information between the actual process activities and the quality of the implemented components. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Germain, Eric; Robillard, Pierre N.] Ecole Polytech, Dept Comp & Software Engn, Montreal, PQ H3C 3A7, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Robillard, PN (corresponding author), Ecole Polytech, Dept Comp & Software Engn, CP 6079,Succ Ctr Ville, Montreal, PQ H3C 3A7, Canada.
EM Pierre-n.robillard@polymtl.ca
RI Robillard, Pierre-Yves/I-4932-2019
CR [Anonymous], 2000, RATIONAL UNIFIED PRO
   Arbaoui S, 2002, ANN SOFTW ENG, V14, P311, DOI 10.1023/A:1020513911052
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Cugola G, 1998, IEEE T SOFTWARE ENG, V24, P982, DOI 10.1109/32.730546
   El Emam K, 2000, J SYST SOFTWARE, V51, P119, DOI 10.1016/S0164-1212(99)00117-X
   FLORAC WA, 1999, SEI S SOFTW, P1
   Germain É, 2005, J SYST SOFTWARE, V75, P17, DOI 10.1016/j.jss.2004.02.022
   Germain É, 2003, 16TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P224, DOI 10.1109/CSEE.2003.1191381
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   MacDonell SG, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P73, DOI 10.1109/METRIC.2003.1232457
   Münch J, 2004, J SYST SOFTWARE, V70, P3, DOI 10.1016/S0164-1212(02)00138-3
   Robillard P.N., 2003, Software engineering process with the UPEDU
   Robillard PN, 2005, IEEE SOFTWARE, V22, P60, DOI 10.1109/MS.2005.161
   Rout Terence P., 2007, Software Process Improvement and Practice, V12, P361, DOI 10.1002/spip.329
   SELBY RW, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P288, DOI 10.1109/ICSE.1991.130654
NR 15
TC 1
Z9 1
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2008
VL 50
IS 11
BP 1088
EP 1097
DI 10.1016/j.infsof.2007.10.018
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 355LA
UT WOS:000259709200003
DA 2024-07-18
ER

PT J
AU La-Ongsri, S
   Roddick, JF
   de Vries, D
AF La-Ongsri, Somluck
   Roddick, John F.
   de Vries, Denise
TI Accommodating mesodata into conceptual modelling methodologies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE mesodata modelling; MDER; MDORM; ER/EER; ORM; conceptual modelling
ID SUPPORT; SCHEMA; ORM
AB Mesodata modelling is a recently developed approach for enhancing a data model's capabilities by providing for more advanced semantics to be associated with the domain of an attribute. Mesodata supplies both an inter-value structure to the domain and a set of operations applicable to that structure that may be used to facilitate additional functionality in a database. We argue that conceptual modelling methodologies would be semantically richer if they were able to express the semantics of complex data types for attribute domains. This paper investigates the accommodation of mesodata into the entity-relationship and object role modelling, presenting the Mesodata Entity-Relationship (MDER) model and Mesodata. Object Role Modelling (MDORM), which show how the mesodata concept can be incorporated into conceptual modelling methodologies to include the semantics of complex-domain structures. (C) 2007 Elsevier B.V. All rights reserved.
C1 [La-Ongsri, Somluck; Roddick, John F.; de Vries, Denise] Flinders Univ S Australia, Sch Informat & Engn, Adelaide, SA 5001, Australia.
C3 Flinders University South Australia
RP Roddick, JF (corresponding author), Flinders Univ S Australia, Sch Informat & Engn, GPO Box 2100, Adelaide, SA 5001, Australia.
EM somluck@infoeng.flinders.edu.au; roddick@infoeng.flinders.edu.au;
   denise.devries@infoeng.flinders.edu.au
RI Roddick, John/B-1010-2016
OI Roddick, John/0000-0001-7024-0796; de Vries, Denise/0000-0001-9061-6471
CR [Anonymous], 1992, Conceptual Database Design-An entity-relationship Approach
   BAUMANN P, 1989, 8 INT C ENT REL APPR, P59
   Booch G., 2005, Unified Modelling Language User Guide, V2
   CHANKUANG N, 2004, INT C INF TECHN COD, V2, P421
   Codd E. F., 1979, ACM Transactions on Database Systems, V4, P397, DOI 10.1145/320107.320109
   CODD EF, 1970, COMMUN ACM, V13, P377, DOI 10.1145/357980.358007
   CREASY P, 1989, 15 INT C VER LARG DA, P104
   De Troyer O, 2005, LECT NOTES COMPUT SC, V3762, P700
   de Vries D, 2004, LECT NOTES COMPUT SC, V3289, P429
   de Vries D, 2004, LECT NOTES COMPUT SC, V3180, P663
   DEMEY J, 2002, INT WORKSH RUL MARK
   DEVRIES D, 2006, THESIS FLINDERS U
   DEVRIES D, 2007, CASE MESODATA EMPIRI, P49
   Elmasri R., 1985, Data & Knowledge Engineering, V1, P75, DOI 10.1016/0169-023X(85)90027-8
   Elmasri R., 2007, Fundamentals of Database Systems, V5th
   Engels G., 1992, Data & Knowledge Engineering, V9, P157, DOI 10.1016/0169-023X(92)90008-Y
   FALKENBERG E, 1993, LNCS, V823, P230
   Galindo J., 2006, Fuzzy databases: modeling, design and implementation
   Halpin T, 2004, AD TO DA RE, V3, P23
   Halpin T., 1999, Journal of Database Management, V10, P4, DOI 10.4018/jdm.1999100101
   Halpin T, 2003, LECT NOTES COMPUT SC, V2813, P567
   Halpin T., 2001, INFORM MODELING RELA
   HALPIN TA, 1995, LNCS, V1021, P191
   Henricksen K, 2005, LECT NOTES COMPUT SC, V3762, P626
   Illyes G., 1977, HETVENHET MAGYAR NEP
   Jarrar M, 2003, LECT NOTES COMPUT SC, V2800, P185
   KENT W, 1984, J SYST SOFTWARE, V4, P99, DOI 10.1016/0164-1212(84)90002-5
   KIM YG, 1995, COMMUN ACM, V38, P103, DOI 10.1145/203241.203265
   KLOPPROGE MR, 1981, 2ND P INT C E R APPR, P477
   LAENDER A, LNCS, V823, P242
   LEELAWATANANON T, 2004, 6 INT C ENT INF SYST, P479
   LEUNG CMR, 1988, INFORM SYST, V13, P219, DOI 10.1016/0306-4379(88)90018-X
   LEUNG CMR, 1987, AUST COMPUT J, V19, P69
   LUKOVIC I, 2003, 1 SERB HUNG JOINT S, P125
   MCBRIEN P, 1992, INT C INF SYST MAN D, P244
   Muller R. J., 1999, DATABASE DESIGN SMAR
   NIJSSEN G, 1985, IFIP WG 2 6 WORK C D, P189
   Nijssen G.M., 1989, CONCEPTUAL SCHEMA RE
   PERNUL G, 1993, LNCS, V823, P166
   Pierson EJ, 2005, LECT NOTES COMPUT SC, V3762, P636
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Pornphol P, 2004, IEEE SOUTHEASTCON, P54, DOI 10.1109/SECON.2004.1287898
   Proper HA, 2005, LECT NOTES COMPUT SC, V3762, P666
   PUNTHEERANURAK S, 2002, 24 INT C INF TECHN I, P57
   Sapia C, 1999, LECT NOTES COMPUT SC, V1552, P105
   Senko M. E., 1975, Information Systems, V1, P3, DOI 10.1016/0306-4379(75)90022-8
   SENKO ME, 1976, MODELLING DATA BASE, P73
   SONG IY, 1991, 10 INT C ENT REL APP, P417
   Stonebraker M., 1999, OBJECT RELATIONAL DB, V2nd
   TAUZOVICH B, 1991, 10 INT C ENT REL APP, P163
   THEODOULIDIS C, 1991, INFORM SYST, V16, P401, DOI 10.1016/0306-4379(91)90031-4
   VERHEIJEN G, 1982, P IFIP WG8 1 WORK C
   Wand Y, 1999, ACM T DATABASE SYST, V24, P494, DOI 10.1145/331983.331989
   Weber R, 1996, INFORM SYST J, V6, P147, DOI 10.1111/j.1365-2575.1996.tb00010.x
   Yuliana OY, 2005, ITCC 2005: INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: CODING AND COMPUTING, VOL 1, P255, DOI 10.1109/ITCC.2005.301
   Zimanyi E., 1997, P INT S DIG MED INF
NR 56
TC 2
Z9 3
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2008
VL 50
IS 5
BP 424
EP 435
DI 10.1016/j.infsof.2007.05.001
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 290WJ
UT WOS:000255153200005
DA 2024-07-18
ER

PT J
AU Qumer, A
   Henderson-Sellers, B
AF Qumer, A.
   Henderson-Sellers, B.
TI An evaluation of the degree of agility in six agile methods and its
   applicability for method engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE agile methods; method engineering; software engineering; methodology
ID SYSTEMS-DEVELOPMENT
AB While agile methods are in use in industry, little research has been undertaken into what is meant by agility and how a supposed agile method can be evaluated with regard to its veracity to belong to this category of software development methodological approaches. Here, an analytical framework, called 4-DAT, is developed and applied to six well-known agile methods and, for comparison, two traditional methods. The results indicate the degree of agility to be found in each method, from which a judgement can be made as to whether the appellation of "agile" to that method is appropriate. This information is shown to be useful, for example, when constructing a methodology from method fragments (method engineering) and when comparing agile and traditional methods. (c) 2007 Elsevier B.V. All rights reserved.
C1 [Qumer, A.; Henderson-Sellers, B.] Univ Technol Sydney, Fac Informat Technol, Sydney, NSW 2007, Australia.
C3 University of Technology Sydney
RP Qumer, A (corresponding author), Univ Technol Sydney, Fac Informat Technol, PO Box 123, Sydney, NSW 2007, Australia.
EM asif@it.uts.edu.au; brian@it.uts.edu.au
RI Gill, Asif/K-4375-2017
OI Gill, Asif/0000-0001-6239-6280
CR Abrahamsson P, 2003, 25 INT C SOFTW ENG
   [Anonymous], 2002, Agile software development
   [Anonymous], CHALLENGES STRATEGIE
   [Anonymous], 2002, VTT PUBLICATIONS
   [Anonymous], P EUR MED C INF SYST
   [Anonymous], LNCS
   Beck K., 2000, EXTREME PROGRAMMING
   Boehm B.W., 2004, Balancing Agility and Discipline: A Guide for the Perplexed
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Brinkkemper S, 1999, INFORM SYST, V24, P209, DOI 10.1016/S0306-4379(99)00016-2
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Chau T, 2003, TWELFTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P302
   Cockburn A., 1999, METHODOLOGY PER PROJ
   Cockburn A., 1998, SURVIVING OBJECT ORI
   DOVE R, 1997, MEANING LIFE MEANING
   *DSDM, 2003, DSDM CONS DYN SYST D
   FOWLER M, 2003, NEW METHODOLOGY
   Henderson-Sellers B, 2003, COMMUN ACM, V46, P73, DOI 10.1145/944217.944242
   Henderson-Sellers B., 1994, BOOKTWO of Object-Oriented Knowledge
   Highsmith JamesA., 2000, ADAPTIVE SOFTWARE DE
   Koch A.S., 2005, Agile Software Development : Evaluating The Methods For Your Organization
   Nguyen V P., 2003, Procs. 7th IASTED SEA Conference, P691
   Palmer S.R., 2002, PRACTICAL GUIDE FEAT
   QUMER A., 2006, IADIS International Conference Applied Computing, P503
   Ralyte J., 1999, Proceedings. Tenth International Workshop on Database and Expert Systems Applications. DEXA 99, P305, DOI 10.1109/DEXA.1999.795184
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Stapleton J., 1997, DSDM: The Method in Practice
   Ter Hofstede AHM, 1997, INFORM SYST, V22, P401, DOI 10.1016/S0306-4379(97)00024-0
   Tran Q.-N N., 2004, 6th International Bi-Conference Workshop on Agent-Oriented Information systems s, P386
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 42
TC 110
Z9 137
U1 1
U2 28
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2008
VL 50
IS 4
BP 280
EP 295
DI 10.1016/j.infsof.2007.02.002
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 261UL
UT WOS:000253105400003
DA 2024-07-18
ER

PT J
AU Rönkkö, K
AF Ronkko, Karl
TI Interpretation, interaction and reality construction in software
   engineering:: An explanatory model
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE social; interpretation; interaction; indexicality; communication;
   software development; natural language; methods development; management;
   software engineering practice
AB The incorporation of social issues in software engineering is limited. Still, during the last 20 years the social element inherent in software development has been addressed in a number of publications that identified a lack of common concepts, models, and theories for discussing software development from this point of view. It has been suggested that we need to take interpretative and constructive views more seriously if we are to incorporate the social element in software engineering. Up till now we have lacked papers presenting 'simple' models explaining why. This article presents a model that helps us better to understand interpretation, interaction and reality construction from a natural language perspective. The concepts and categories following with the model provide a new frame of reference useful in software engineering research, teaching, and methods development. (C) 2007 Elsevier B.V. All rights reserved.
C1 Blekinge Inst Technol, Sch Engn, SE-37325 Ronneby, Sweden.
C3 Blekinge Institute Technology
RP Rönkkö, K (corresponding author), Blekinge Inst Technol, Sch Engn, Box 520, SE-37325 Ronneby, Sweden.
EM Kari.Ronkko@bth.se
CR Aaen I, 2003, IEEE SOFTWARE, V20, P86, DOI 10.1109/MS.2003.1231159
   Andelfinger U, 2002, SOCIAL THINKING-SOFTWARE PRACTICE, P185
   Boehm B.W., 1988, IEEE COMPUTER, V21, P61
   Brooks Frederick P., 1995, The mythical man-month
   Button G., 1996, Computer Supported Cooperative Work (CSCW), V5, P369, DOI 10.1007/BF00136711
   Button G., 1994, REQUIREMENTS ENG SOC, P217
   Cockburn A., 2003, AGILE SOFTWARE DEV
   COULON A, 1995, SAGE SERIES QUALITAT, V36
   DeMarco T, 1999, PEOPLEWARE PRODUCTIV
   Eriksén S, 2002, SOCIAL THINKING-SOFTWARE PRACTICE, P425
   FINKELSTEIN A, 2000, P FUT SOFTW ENG
   FLOYD C, 1989, LECT NOTES COMPUT SC, V387, P48
   Floyd C., 1987, COMPUTERS DEMOCRACY, P192
   Floyd Christiane, 1992, SOFTWARE DEV REALITY
   FUGGETTA A, 2000, FUTURE SOFTWARE ENG, P25
   GARFINKEL H., 1996, Studies in ethnomethodology
   GERSON E, 1986, P 3 ACM SIGOIS C OFF, V7, P70
   Humphrey WattsS., 1997, Managing technical people: Innovation, teamwork, and the software process
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Mathiassen L., 1998, REFLECTIVE SYSTEMS D
   Miller KW, 2005, IEEE TECHNOL SOC MAG, V24, P36, DOI 10.1109/MTAS.2005.1563500
   Naur P., 1992, Computing: a human activity
   Norbjerg J, 2002, SOCIAL THINKING-SOFTWARE PRACTICE, P205
   PARNAS DL, 1986, IEEE T SOFTWARE ENG, V12, P251, DOI 10.1109/TSE.1986.6312940
   RONKKO K, 2005, J COMPUTER SUPPORTED
   RONKKO K, DISSERTATION SERIES
   SHARROCK W, 1997, SOCIAL SCI TECHNICAL, P79
   Smolander K, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P211, DOI 10.1109/ISESE.2002.1166942
   Wittgenstein Ludwig, 1968, PHILOS INVESTIGATION
NR 29
TC 8
Z9 10
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2007
VL 49
IS 6
BP 682
EP 693
DI 10.1016/j.infsof.2007.02.014
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 169NU
UT WOS:000246599700012
DA 2024-07-18
ER

PT J
AU Katsaros, P
   Iakovidou, N
   Soldatos, T
AF Katsaros, Panagiotis
   Iakovidou, Nantia
   Soldatos, Theodoros
TI Evaluation of composite object replication schemes for dependable server
   applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE fault-tolerance; performance; quality of service; distributed objects;
   simulation
ID SIMULATION; SYSTEMS; CORBA
AB Object oriented dependable server applications often rely on fault-tolerance schemes, which are comprised of different replication policies for the constituent objects (composite replication schemes). This paper introduces a simulation-based evaluation approach for quantifying the tradeoffs between fault-tolerance overhead and fault-tolerance effectiveness in composite replication schemes. Compared to other evaluation approaches: (a) we do not use the well-known reliability blocks based simulation, but a hybrid reliability and system's traffic simulation and (b) we make a clear distinction between the measures used for the fault-affected service response times from those used for the fault-unaffected ones. The first mentioned feature allows taking into account additional concerns other than fault-tolerance, like for example load balancing and multithreading. The second feature renders the proposed approach suitable for design studies that aim to determine either optimal replication properties for the constituent objects or quality of service (QoS) guarantees for the perceived service response times. We obtain results for a case system model, based on different assumptions on what happens when server-objects fail (loss scenarios). The presented results give insight in the design of composite method request-retry schemes with appropriate request timeouts. (c) 2005 Elsevier B.V. All rights reserved.
C1 Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
C3 Aristotle University of Thessaloniki
RP Katsaros, P (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
EM katsaros@csd.auth.gr; niakovid@csd.auth.gr; thsoldat@csd.auth.gr
RI Katsaros, Panagiotis/D-2546-2012; Katsaros, Panagiotis/JBR-8825-2023
OI Katsaros, Panagiotis/0000-0002-4309-5295; Soldatos,
   Theodoros/0000-0001-6051-6605
CR Bennani T, 2004, 2004 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P549
   Crnkovic I, 2005, LECT NOTES COMPUT SC, V3549, P257
   Das O, 2001, PERFORM EVALUATION, V45, P57, DOI 10.1016/S0166-5316(00)00065-1
   Felber P, 2000, LECT NOTES COMPUT SC, V1752, P254
   Fraga J, 2004, NINTH IEEE INTERNATIONAL WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE SYSTEMS, P179
   Garg S, 1999, DIG PAP INT SYMP FAU, P322, DOI 10.1109/FTCS.1999.781067
   Goswami KK, 1997, IEEE T COMPUT, V46, P60, DOI 10.1109/12.559803
   Guerraoui R, 2000, SOFTWARE PRACT EXPER, V30, P1375, DOI 10.1002/1097-024X(200010)30:12<1375::AID-SPE333>3.0.CO;2-R
   HENLEY EJ, 1981, RELIABILTY ENG RISK
   Katsaros P, 2004, 2004 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P762
   KATSAROS P, 2001, P 4 EUROSIM C MOD SI
   LAW AM, 1979, OPER RES, V27, P1011, DOI 10.1287/opre.27.5.1011
   LINDERMEIER M, 2000, INT S DISTR OBJ APPL
   Litoiu M, 2000, IEEE T SOFTWARE ENG, V26, P1168, DOI 10.1109/32.888630
   MARANGOZOVA V, 2002, P 1 IFIP ACM WORK C, P222
   MARZOLLA M, 2003, SIMULATION BASED PER
   NARASIMHAN P, 2002, J COMPUTER SYSTEMS S
   Nicola VF, 2001, IEEE T RELIAB, V50, P246, DOI 10.1109/24.974122
   *OBJ MAN GROUP, 1995, AB970505 OMG
   *OBJ MAN GROUP, 2001, 20010929 OMG TECHN C
   *OBJ MAN GROUP, 1999, COMM OBJ REQ BROK AR
   Paul HS, 2003, CONCURR COMP-PRACT E, V15, P1363, DOI 10.1002/cpe.743
   Ramamurthy B, 1997, DIG PAP INT SYMP FAU, P194, DOI 10.1109/FTCS.1997.614092
   Ren YJ, 2003, IEEE T COMPUT, V52, P31, DOI 10.1109/TC.2003.1159752
   SCHLICHTING RD, 1983, ACM T COMPUTER SYSTE, V1
   Schmidt DC, 1998, COMMUN ACM, V41, P54, DOI 10.1145/286238.286248
   Schnekenburger T, 2000, J SUPERCOMPUT, V15, P141, DOI 10.1023/A:1008151819268
NR 27
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2006
VL 48
IS 9
BP 795
EP 806
DI 10.1016/j.infsof.2005.10.004
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 073OC
UT WOS:000239751500004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Harman, M
   Lakhotia, A
   Binkley, D
AF Harman, Mark
   Lakhotia, Arun
   Binkley, David
TI Theory and algorithms for slicing unstructured programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE program slicing; amorphous slicing; unstructured control-flow
ID DEPENDENCE GRAPH; STATEMENTS
AB Program slicing identifies parts of a program that potentially affect a chosen computation. It has many applications in software engineering. including maintenance, evolution and re-engineering of legacy systems. However, these systems typically contain programs with unstructured control-flow, produced using goto statements; thus, effective slicing of unstructured programs remains an important topic of study.
   This paper shows that slicing unstructured programs inherently requires making trade-offs between three slice attributes: termination behaviour, size. and syntactic structure. It is shown how different applications of slicing require different tradeoffs. The three attributes are used as the basis of a three-dimensional theoretical framework, which classifies slicing algorithms for unstructured programs. The paper proves that for two combinations of these dimensions, no algorithm exists and presents algorithms for the remaining six combinations. (C) 2005 Elsevier B.V. All rights reserved.
C1 Kings Coll London, Dept Comp Sci, London WC2R 2LS, England.
   Univ Louisiana Lafayette, Lafayette, LA 70504 USA.
   Loyola Coll, Baltimore, MD 21210 USA.
C3 University of London; King's College London; University of Louisiana
   Lafayette; Loyola University Maryland
RP Harman, M (corresponding author), Kings Coll London, Dept Comp Sci, London WC2R 2LS, England.
EM mark@dcs.kcl.ac.uk
OI Lakhotia, Arun/0000-0001-9943-7795; Harman, Mark/0000-0002-5864-4488
CR AGRAWAL H, 1994, SIGPLAN NOTICES, V29, P302, DOI 10.1145/773473.178456
   [Anonymous], CSR9438 CENTR WISK I
   BALL T, 1993, 1 C AUT ALG DEB LINK, P206
   BECK J, 1993, IEEE ACM 15 C SOFTW, P509
   Binkley D., 1995, ACM Transactions on Software Engineering and Methodology, V4, P3, DOI 10.1145/201055.201056
   Binkley D, 2004, ADV COMPUT, V62, P105, DOI 10.1016/S0065-2458(03)62003-6
   Binkley D., 1993, ACM Letters on Programming Languages and Systems, V2, P31, DOI 10.1145/176454.176473
   Binkley D., 1996, Advances in Computers, V43, P1
   BINKLEY DW, 1999, ACM S APPL COMP MENG, P519
   CANFORA G, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P424, DOI 10.1109/ICSM.1994.336752
   Canfora G, 1998, INFORM SOFTWARE TECH, V40, P595, DOI 10.1016/S0950-5849(98)00086-X
   CHOI JD, 1994, ACM T PROGR LANG SYS, V16, P1097, DOI 10.1145/183432.183438
   Cimitile A, 1996, J SOFTW MAINT-RES PR, V8, P145, DOI 10.1002/(SICI)1096-908X(199605)8:3<145::AID-SMR127>3.0.CO;2-9
   De Lucia A, 2001, FIRST IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P142, DOI 10.1109/SCAM.2001.972675
   DeLucia A, 1996, FOURTH WORKSHOP ON PROGRAM COMPREHENSION, PROCEEDINGS, P9, DOI 10.1109/WPC.1996.501116
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   FISCHER CN, 1988, BENJAMIN CUMMINGS SE
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   Harman M, 2003, J SYST SOFTWARE, V68, P45, DOI 10.1016/S0164-1212(02)00135-8
   Harman M, 1998, J SOFTW MAINT-RES PR, V10, P415, DOI 10.1002/(SICI)1096-908X(199811/12)10:6<415::AID-SMR180>3.0.CO;2-Z
   Harman M, 1997, PROG COMPREHEN, P70, DOI 10.1109/WPC.1997.601266
   HARMAN M, 2001, SOFTWARE FOCUS, V2, P85
   HIND M, 2001, P 2001 ACM SIGPLAN S, P198
   HORWITZ S, 1989, ACM T PROGR LANG SYS, V11, P345, DOI 10.1145/65979.65980
   KAMKAR M, 1993, STUDIES SCI TECHNOLO
   Kumar S, 2002, LECT NOTES COMPUT SC, V2306, P96
   Lakhotia A, 1998, INFORM SOFTWARE TECH, V40, P677, DOI 10.1016/S0950-5849(98)00091-3
   Lyle J. R., 1987, Second International Conference on Computers and Applications (Cat. No.87CH2433-1), P877
   OTTENSTEIN KJ, 1984, SIGPLAN NOTICES, V19, P177, DOI 10.1145/390011.808263
   RAMSHAW L, 1988, J ACM, V35, P893, DOI 10.1145/48014.48021
   REPS T, 1989, LECT NOTES COMPUT SC, V352, P360
   SHAHMEHRI N, 1991, THESIS LINKOPING STU
   SHAPIRO M, 1997, LECT NOTES COMPUTER, V1302, P16
   Ward MP, 2002, P INT COMP SOFTW APP, P357, DOI 10.1109/CMPSAC.2002.1045029
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
NR 35
TC 11
Z9 11
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2006
VL 48
IS 7
BP 549
EP 565
DI 10.1016/j.infsof.2005.06.001
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 049QQ
UT WOS:000238031900010
DA 2024-07-18
ER

PT J
AU Chen, IX
   Yang, CZ
   Hsu, TL
AF Chen, Ing-Xiang
   Yang, Cheng-Zen
   Hsu, Tzu-Lin
TI Design and evaluation of a panoramic visualization environment on
   Semantic Web
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT International Workshop on Web and Mobile Information Systems
CY MAR, 2005
CL Taipei, TAIWAN
DE semantic web; information visualization; resource description framework
   (RDF); topic maps
ID ALGORITHM; GRAPHS
AB Information visualization has been popularly applied to the Semantic Web to facilitate the presentation of data semantics. Since, the past visualization interfaces, based either on RDF or on Topic Maps, only present a partial view of the Semantic Web space, an integrated view would be needed to demonstrate the panorama and help users access the Semantic Web resources. We have presented an Integrated Semantic Web interactive visualization environment (ISWIVE) to incorporate topic features from Topic Maps into RDF, and showed that both the detailed resource descriptions and the overall topic relationships can be clearly visualized. In this paper, we present an improved ISWIVE interface that provides a mixed-model visualization in a clearer layout and supports a concurrent display of both RDF and Topic Maps views. Quantitative analyses were conducted to show the enhancement of the improved ISWIVE interface and the differences between the textual interface and the original ISWIVE prototype. (C) 2006 Elsevier B.V. All fights reserved.
C1 Yuan Ze Univ, Dept Comp Sci & Engn, Chungli 320, Taiwan.
C3 Yuan Ze University
RP Yang, CZ (corresponding author), Yuan Ze Univ, Dept Comp Sci & Engn, 135 Yuantung Rd, Chungli 320, Taiwan.
EM czyang@syslab.cse.yzu.edu.tw
OI Yang, Cheng-Zen/0000-0003-0046-9645
CR [Anonymous], 1999, GRAPH DRAWING ALGORI
   BECKETT D, 2004, RDF SYNTAX SPECIFICA
   Berners-Lee T., 1998, SEMANTIC WEB ROAD MA
   Brickley D., 2004, RDF VOCABULARY DESCR
   CARD SK, 1999, READINGS INFORMATION
   CHEN IX, 2005, P 19 INT C ADV INF N, V2, P701
   Eklund P., 2002, P 7 AUSTR DOC COMP S
   Garshol Lars Marius, 2003, LIVING TOPIC MAPS RD
   GARSHOL LM, 2002, RDF SCHEMA TOPIC MAP
   Geroimenko V., 2003, Visualizing the Semantic Web: XML-based Internet and Information Visualization
   GRAND BL, 2002, P 6 INT C INF VIS IV, P344
   GRAND BL, 2000, P XML EUR 2000 PAR F
   Hadany R, 2001, DISCRETE APPL MATH, V113, P3, DOI 10.1016/S0166-218X(00)00389-9
   *ISOIEC, 2000, 13250 ISOIEC
   KAMADA T, 1989, INFORM PROCESS LETT, V31, P7, DOI 10.1016/0020-0190(89)90102-6
   KOBSA A, 2004, P IEEE S INF VIS 200
   LACHER MS, P EXTR MARK LANG 200
   LACHER MS, 2001, SUMMER, V3, P313
   MOORE G, 2001, P XML EUR 2001 BERL
   OGIEVETSKY N, 2001, P EXTR MARK LANG MON
   PIETRIGA E, 2002, P WWW 2002 11 WORLD
   ROBERTSON GG, 1991, P ACM CHI 91, P184
   VATANT B, 2001, MONDECA TOPIC NAVIGA
NR 23
TC 3
Z9 3
U1 1
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2006
VL 48
IS 6
BP 402
EP 409
DI 10.1016/j.infsof.2005.12.016
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 049QP
UT WOS:000238031800006
DA 2024-07-18
ER

PT J
AU Hong, S
   Kim, TH
AF Hong, S
   Kim, TH
TI Resource conscious development of middleware for control environments: a
   case of CORBA-based middleware for the CAN bus systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE distributed and embedded control systems; customized middleware;
   controller area network; embedded inter ORB protocol; compact common
   data representation
AB While it is imperative to exploit middleware technologies in developing software for distributed embedded control systems, it is also necessary to tailor them to meet the stringent resource constraints and performance requirements of embedded control systems. In this paper, we propose a CORBA-based middleware for Controller Area Network (CAN) bus systems. Our design goals are to reduce the memory footprint and remote method invocation overhead of the middleware and make it support group communication that is often needed in embedded control systems. To achieve these, we develop a transport protocol on the CAN and a group communication scheme based on the publisher/subscriber model by realizing subject-based addressing that utilizes the message filtering mechanism of the CAN. We also customize the method invocation and message passing protocol of CORBA so that CORBA method invocations are efficiently serviced on a low-bandwidth network such as the CAN. This customization includes packed data encoding and variable-length integer encoding for compact representation of IDL data types.
   We have implemented our CORBA-based middleware using GNU ORBit. We report on the memory footprint and method invocation latency of our implementation. (c) 2004 Elsevier B.V. All rights reserved.
C1 Hanyang Univ, Dept Comp Sci & Engn, Ansan 426791, Kyunggi Do, South Korea.
   Seoul Natl Univ, Sch Elect Engn & Comp Sci, Seoul 151742, South Korea.
C3 Hanyang University; Seoul National University (SNU)
RP Hong, S (corresponding author), Hanyang Univ, Dept Comp Sci & Engn, 1271 Sa 1 Dong, Ansan 426791, Kyunggi Do, South Korea.
EM sshong@redwood.snu.ac.kr; tkim@cse.hanyang.ac.kr
CR ALLENBRADLEY, 1997, DEVICENET SPECIFICAT, V2
   ALLENBRADLEY, 1997, DEVICENET SPECIFICAT, V1
   Birman K.P., 1994, RELIABLE DISTRIBUTED
   *BOSC, 1991, CAN SPEC VERS 2 0
   Brown N., 1998, DISTRIBUTED COMPONEN
   *CIA, 301 CIA
   HARRISON T, 1997, C OBJ OR PROGR SYST
   *HON INC, 1996, MICR SWITCH SPEC APP
   *INT CORP, 1996, 82527 SER COMM CONTR
   *ISO IS, 1993, 11898 ISOIS
   Kaiser J, 1999, 2ND IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING (ISORC'99), PROCEEDINGS, P172, DOI 10.1109/ISORC.1999.776373
   Kaiser J, 1998, FIRST INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING (ISORC '98), P298, DOI 10.1109/ISORC.1998.666801
   KIM K, 2000, IEEE INT S OBJ OR RE, P34
   *KVAS AB, 1998, PCCAM 2 0
   MAFFEIS S, 1995, USENIX C OBJ OR TECH
   *OBJ MAN GROUP, 2002, FORMAL020811 OBJ MAN
   *OBJ MAN GROUP, 2001, FORMAL010301 OBJ MAN
   OBJECT MANAGEMENT GROUP, 2004, COMM OBJ REQ BROK AR
   PARDOCASTELLOTE G, 1994, IEEE INT C ROB AUT M
   *RED HAT INC, 1999, ORBIT
   RUJKUMAR R, 1995, IEEE REALT TECHN APP
   SEO Y, 1998, ACM WORKSH LANG COMP
   ULLOA G, 1991, IEEE INT C IND EL CO
   Utz H, 2002, IEEE T ROBOTIC AUTOM, V18, P493, DOI 10.1109/TRA.2002.802930
   VANRENESSE R, 1995, ACM S PRINC DISTR CO
NR 25
TC 2
Z9 4
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 15
PY 2005
VL 47
IS 6
BP 411
EP 425
DI 10.1016/j.infsof.2004.09.012
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 916VO
UT WOS:000228414700004
DA 2024-07-18
ER

PT J
AU Thomas, BH
   Calder, P
AF Thomas, BH
   Calder, P
TI Supporting cartoon animation techniques in direct manipulation graphical
   user interfaces
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE animation; direct manipulation; graphics; toolkits; warp transformation
AB If judiciously applied, the techniques of cartoon animation can enhance the illusion of direct manipulation that many human computer interfaces strive to present. In particular, animation can convey a feeling of substance in the objects that a user manipulates, strengthening the sense that real work is being done. This paper describes algorithms and implementation issues to support cartoon style graphical object distortion effects for direct manipulation user interfaces. Our approach is based on suggesting a range of animation effects by distorting the view of the manipulated object. To explore the idea, we added a warping transformation capability to the InterViews user interface toolkit. (c) 2004 Elsevier B.V. All rights reserved.
C1 Univ S Australia, Sch Comp & Informat Sci, Mawson Lakes, SA 5095, Australia.
   Flinders Univ S Australia, Dept Comp Sci, Adelaide, SA 5001, Australia.
C3 University of South Australia; Flinders University South Australia
RP Univ S Australia, Sch Comp & Informat Sci, 1 Mawson Lakes Blvd, Mawson Lakes, SA 5095, Australia.
EM bruce.thomas@unisa.edu.au
RI ; Thomas, Bruce/A-1470-2008
OI Calder, Paul/0000-0002-9130-5955; Thomas, Bruce/0000-0002-9148-085X
CR *AD SYST INC, 1985, POSTSCR LANG REF MAN
   BAECKER R, 1991, P ACM CHI 01 C HUM F, V91, P1
   Baecker R., 1990, ART HUMAN COMPUTER I
   BEDERSON BB, 2000, P 13 ANN ACM S US IN, P171
   BHARAT K, 1993, P ACM SIGGRAPH S US, P69
   CALDER PR, 1990, P ACM SIGGRAPH 3 ANN, P92
   Chang B.-W., 1993, P 6 ANN ACM S USER I, P45, DOI DOI 10.1145/168642.168647
   CHATTY S, 1992, IFIP TRANS A, V18, P95
   DONSKOY M, 1997, P EXT ABSTR HUM FACT, P279
   Gonzales C, 1996, P CHI 96 C HUM FACT, P27
   Hudson S. E., 1993, Sixth Annual Symposium on User Interface Software and Technology. Proceedings of the ACM Symposium on User Interface Software and Technology, P57, DOI 10.1145/168642.168648
   Lasseter John., 1987, Proceedings of the 14th annual conference on Computer graphics and interactive techniques, P35
   Laurel B., 1991, COMPUTERS THEATRE
   Laybourne Kit., 1979, The Animation Book
   LINTON MA, 1989, IEEE COMPUTER    FEB, P8
   MACKINLAY JD, 1991, P ACM CHI 91 C HUM F, V91, P173
   Robertson G., 2000, CHI 2000 Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2000. The Future is Here, P494, DOI 10.1145/332040.332482
   Robertson G., 1998, UIST 98, P153, DOI DOI 10.1145/288392.288596
   Robertson G. G., 1991, Human Factors in Computing Systems. Reaching Through Technology. CHI '91. Conference Proceedings, P189, DOI 10.1145/108844.108883
   ROBERTSON GG, 1989, PROCEEDINGS OF THE ACM SIGGRAPH SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P10, DOI 10.1145/73660.73662
   Shneiderman B., 1983, IEEE COMPUTER, V16, P57, DOI DOI 10.1109/MC.1983.1654471
   Stasko J.T., 1993, USER INTERFACE SOFTW, P81
   STASKO JT, 1990, TANGO FRAMEWORK SYST, V1, P27
   SUKAVIRIYA P, 1990, P 3 ANN ACM SIGGRAPH, P152
   TANG SH, 1993, P ACM S US INT SOFTW, P35
   THIES MA, 1993, P 5 INT C HUM COMP I, V2, P713
   Thomas B. H., 1996, Proceedings Sixth Australian Conference on Computer-Human Interaction, P184, DOI 10.1109/OZCHI.1996.560009
   Thomas B. H., 2001, ACM Transactions on Computer-Human Interaction, V8, P198, DOI 10.1145/502907.502909
   THOMAS BH, 2000, 1 AUSTR US INT C CAN, P110
   THOMAS BH, 1995, CIS95007
   Wolberg G., 1992, DIGITAL IMAGE WARPIN
NR 31
TC 4
Z9 4
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 31
PY 2005
VL 47
IS 5
BP 339
EP 355
DI 10.1016/j.infsof.2004.09.003
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 911VW
UT WOS:000228035400004
DA 2024-07-18
ER

PT J
AU Grieskamp, W
   Tillmann, N
   Veanes, M
AF Grieskamp, W
   Tillmann, N
   Veanes, M
TI Instrumenting scenarios in a model-driven development environment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 3rd International Conference on Quality Software (QSIC 2003)
CY SEP 25-26, 2003
CL Beijing, PEOPLES R CHINA
DE model-driven development; scenarios; use-cases; validation;
   verification; automated testing
AB SpecExplorer is an integrated environment for model-driven development of NET software. In this paper we discuss how scenarios can be described in SpecExplorer's modeling language, Spec#, and how the SpecExplorer tool can be used to validate those scenarios by various means. (C) 2004 Elsevier B.V. All rights reserved.
C1 Microsoft Res, Redmond, WA 98052 USA.
C3 Microsoft
RP Veanes, M (corresponding author), Microsoft Res, 1 Microsoft Way, Redmond, WA 98052 USA.
EM wrwg@microsoft.com; nikolait@microsoft.com; margus@microsoft.com
CR [Anonymous], P 2 AS PAC C QUAL SO
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   BARNETT M, 2003, P 3 INT C QUAL SOFTW
   BARNETT M, 2004, LNCS, V2931, P264
   Broy M., 1998, Formal Engineering Methods (ICFEM'98)
   de Vries R., 2000, INT J SOFTW TOOLS TE, V2, P382
   Dulz W., 2003, P 3 INT C QUAL SOFTW
   FEIJS LMG, 2002, P IFIP 14 INT C TEST
   GLINZ M, 1995, SOFTWARE ENG
   Grieskamp W., 2002, Software Engineering Notes, V27, P112, DOI 10.1145/566171.566190
   KRUEGER I, 1999, MSC STATECHARTS DIST
   NACHMANSON L, 2004, ISSTA 04
NR 12
TC 12
Z9 14
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC 1
PY 2004
VL 46
IS 15
BP 1027
EP 1036
DI 10.1016/j.infsof.2004.07.007
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 876GF
UT WOS:000225484000005
DA 2024-07-18
ER

PT J
AU Lu, J
   Scaramuzza, M
AF Lu, J
   Scaramuzza, M
TI Building XML application in rich detailed genealogical information
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE genealogy; XML; Document Type Definition; XSL; XPath; XML schema;
   Internet
AB Genealogical information is rich and complex [2]. Numerous studies showed that XML technologies could be employed to deal with complex information systems [15]. This paper reports an investigation of building XML application in rich and complex genealogical information. XML technologies, such as XML DTD, schema, XSL and XPath, were employed to tackle this task. Three commercial software packages are used to obtain reference results for further comparison. It is found that XML application could store more specific data than those in the evaluated software; further more, it appears to offer more diverse display options compared with the evaluated software packages. Finally, it concluded that XML application is the better approach for dealing with rich detailed genealogical information and displaying them upon Internet. (C) 2002 Elsevier Science B.V. All rights reserved.
C1 Univ Huddersfield, Sch Comp & Math, Huddersfield HD1 3DH, W Yorkshire, England.
C3 University of Huddersfield
RP Univ Huddersfield, Sch Comp & Math, Huddersfield HD1 3DH, W Yorkshire, England.
EM j.lu@hud.ac.uk; joseph.scaramuzza@ntlworld.com
OI Lu, Joan/0000-0002-0585-2806
CR AHMED AT, 2002, J FUTURE GENERATION, V18, P539
   Anderson S., 1999, CHAMBERS DICT
   ARCINIEGAS AF, 1999, XML PROGRAMMING CPLU
   BOSAK J, 2000, XML JAVA FUTURE WEB
   CAGLE K, 2000, XML VISUAL BASIC
   *FORM INC, 2001, FAM OR 8 0
   Goldfarb Charles F., 2000, The XML Handbook
   HOFFMAN GB, 2001, GENEALOGY NEW TIMES
   *INCL SOFTW, 2001, ANC QUEST 3 0 STAND
   Jones C.A., 2002, Python XML
   LU Z, 2002, BUILDING XML APPL SC
   PAPINEAU A, 2002, GED4WEB OVERVIEW
   PATRIZIO A, 2000, JAVA XML COMPLEMENTA
   PRINKE RT, 2001, NEW ENGLAND COMPUTER, V6, P1
   Schweiger R, 2002, J AM MED INFORM ASSN, V9, P37, DOI 10.1136/jamia.2002.0090037
   Shin K, 2002, J SYST SOFTWARE, V60, P195, DOI 10.1016/S0164-1212(01)00092-9
   Sohn WS, 2002, COMPUT STAND INTER, V24, P45, DOI 10.1016/S0920-5489(01)00103-9
   TAKAHATA N, 1985, GENETICS, V110, P325
   Vander Veer E., 2000, XML Your visual blueprint for building expert Web pages
   WYLIE J, 1997, CITE SOURCES
   1998, ULTIMATE FAMILY TREE
   2001, WHOLLY GENES SOFTWAR
NR 22
TC 3
Z9 3
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB 1
PY 2003
VL 45
IS 2
BP 95
EP 108
AR PII S0950-5849(02)00173-8
DI 10.1016/S0950-5849(02)00173-8
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 640QC
UT WOS:000180698600003
DA 2024-07-18
ER

PT J
AU Ortu, M
   Destefanis, G
   Hall, T
   Bowes, D
AF Ortu, Marco
   Destefanis, Giuseppe
   Hall, Tracy
   Bowes, David
TI Fault-insertion and fault-fixing behavioural patterns in Apache Software
   Foundation Projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Faults analysis; LDA; Mining software repositories
AB Background: Developers inevitably make human errors while coding. These errors can lead to faults in code, some of which may result in system failures. It is important to reduce the faults inserted by developers as well as fix any that slip through.Aim: To investigate the fault insertion and fault fixing activities of developers. We identify developers who insert and fix faults, ask whether code topic 'experts' insert fewer faults, and experts fix more faults and whether patterns of insertion and fixing change over time. Methods: We perform a time-based analysis of developer activity on twelve Apache projects using Latent Dirichlet Allocation (LDA), Network Analysis and Topic Modelling. We also build three models (using Petri -net, Markov Chain and Hawkes Processes) which describe and simulate developers' bug-introduction and fixing behaviour.Results: We show that: the majority of the projects we analysed have developers who dominate in the insertion and fixing of faults; Faults are less likely to be inserted by developers with code topic expertise; Different projects have different patterns of fault inserting and fixing over time.Conclusions: We recommend that projects identify the code topic expertise of developers and use expertise information to inform the assignment of project work.
C1 [Ortu, Marco] Univ Cagliari, Cagliari, Italy.
   [Destefanis, Giuseppe] Brunel Univ London, London, England.
   [Hall, Tracy; Bowes, David] Univ Lancaster, Lancaster, England.
C3 University of Cagliari; Brunel University; Lancaster University
RP Destefanis, G (corresponding author), Brunel Univ London, London, England.
EM marco.ortu@unica.it; giuseppe.destefanis@brunel.ac.uk;
   tracy.hall@lancaster.ac.uk; d.h.bowes@lancaster.ac.uk
RI Destefanis, Giuseppe/JGE-0292-2023
OI Destefanis, Giuseppe/0000-0003-3982-6355
FU UK?s Engineering and Physical Sciences Research Council [EP/S005730/1,
   EP/S00 5749/2]
FX Acknowledgements This work is partly funded by grants from the UK?s
   Engineering and Physical Sciences Research Council (EP/S005730/1 and
   EP/S00 5749/2) .
CR [Anonymous], 2010, PROC 18 ACM SIGSOFT
   Baker F.T., 1979, CLASSICS SOFTWARE EN, P63
   Baltes S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P187, DOI 10.1145/3236024.3236061
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bissyandé TF, 2013, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2013.19
   Bjarnason E, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10027-z
   Blei DavidM., 2006, P ICML
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bowes D, 2020, PROCEEDINGS OF THE 16TH ACM INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, PROMISE 2020, P41, DOI 10.1145/3416508.3417117
   Bowes D, 2020, INT C PROGRAM COMPRE, P436, DOI 10.1145/3387904.3389299
   Bowes D, 2017, IEEE INT SYMP SOFTW, P44, DOI 10.1109/ISSREW.2017.11
   Brandes U, 2001, J MATH SOCIOL, V25, P163, DOI 10.1080/0022250X.2001.9990249
   Businge J., 2017, Proceedings of the 13th International Conference on Predictive Models and Data Analytics in Software Engineering. PROMISE, P33, DOI DOI 10.1145/3127005.3127009
   Catolino G, 2019, J SYST SOFTWARE, V152, P165, DOI 10.1016/j.jss.2019.03.002
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Constantinou E, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P63, DOI 10.1109/SEAA.2016.18
   Costa A, 2020, IEEE ACCESS, V8, P145687, DOI 10.1109/ACCESS.2020.3015017
   Dieste O, 2017, EMPIR SOFTW ENG, V22, P2457, DOI 10.1007/s10664-016-9471-3
   Eyolfson J., 2011, WORKING C MINING SOF, P153, DOI DOI 10.1145/1985441.1985464
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Foucault M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P829, DOI 10.1145/2786805.2786870
   Fry T, 2020, IEEE WORK CONF MIN S, P518, DOI 10.1145/3379597.3387500
   Greiler M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P2, DOI 10.1109/MSR.2015.8
   Hauff C, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P362, DOI 10.1109/MSR.2015.41
   HAWKES AG, 1971, BIOMETRIKA, V58, P83, DOI 10.1093/biomet/58.1.83
   Hill E, 2007, P THE 6 JOINT M EURO, P341
   Hokka H, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P516, DOI 10.1109/SANER50967.2021.00057
   Jaspan C, 2019, RETHINKING PRODUCTIV, P13, DOI [10.1007/978-1-4842-4221-6_2, DOI 10.1007/978-1-4842-4221-6_2]
   Jordan M.I., 1998, P NATO ADV STUDY I E, V89
   Kim YB, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0177630
   Kini SO, 2018, IEEE INT WORK C SO, P72, DOI 10.1109/SCAM.2018.00016
   Kouters E, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P592, DOI 10.1109/ICSM.2012.6405329
   Matsumoto S., 2010, P 6 INT C PREDICTIVE
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Montandon Joao Eduardo, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P276, DOI 10.1109/MSR.2019.00054
   NEUTS MF, 1979, J APPL PROBAB, V16, P764, DOI 10.2307/3213143
   Ortu Marco, 2017, Journal of Software Engineering Research and Development, V5, DOI 10.1186/s40411-017-0044-y
   Qiu YL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY - COMPANION (QRS-C 2015), P202, DOI 10.1109/QRS-C.2015.33
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Rigby PC, 2016, PROC INT CONF SOFTW, P1006, DOI 10.1145/2884781.2884851
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Röder M, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P399, DOI 10.1145/2684822.2685324
   Sablis A, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2297
   Sawyer S, 2004, COMMUN ACM, V47, P95, DOI 10.1145/1035134.1035140
   Shippey T, 2019, INFORM SOFTWARE TECH, V106, P142, DOI 10.1016/j.infsof.2018.10.001
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Snijders TAB, 2001, SOCIOL METHODOL, V31, P361, DOI 10.1111/0081-1750.00099
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Thung F, 2013, EUR CON SFTWR MTNCE, P323, DOI 10.1109/CSMR.2013.41
   Tuzun Eray, 2021, IEEE SOFTWARE
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Verner J, 2007, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON RESEARCH CHALLENGES IN INFORMATION SCIENCE: RCIS 2008, P71
   Wang J, 2019, COMM COM INF SC, V1042, P408, DOI 10.1007/978-981-15-1377-0_32
   Wiese IS, 2016, PROC IEEE INT CONF S, P345, DOI 10.1109/ICSME.2016.13
   Yadav A, 2019, INFORM SOFTWARE TECH, V112, P1, DOI 10.1016/j.infsof.2019.03.014
   Zhu WH, 2021, IEEE WORK CONF MIN S, P515, DOI 10.1109/MSR52588.2021.00065
NR 57
TC 1
Z9 1
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2023
VL 158
AR 107187
DI 10.1016/j.infsof.2023.107187
EA FEB 2023
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9X0VT
UT WOS:000949493300001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Elmishali, A
   Kalech, M
AF Elmishali, Amir
   Kalech, Meir
TI Issues-Driven features for software fault prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software defect prediction; Mining software repositories; Code
   debugging; Software prediction; Software quality; Software engineering
ID METRICS
AB Context: Software systems are an integral part of almost every modern industry. Unfortunately, the more complex the software, the more likely it will fail. A promising strategy is applying fault prediction models to predict which components may be defective. Since features are essential to the prediction model's success, extracting significant features can improve the model's accuracy. Previous research studies used software metrics as features in fault prediction models. One disadvantage of these features is that they measure the code developed rather than the requirements. On the other hand, faults are frequently the result of a mismatch between the software's behavior and its needs. Objective: We present a novel paradigm for constructing features that consider the requirements as well by combining novel requirement metrics, called Issues-Driven features, and traditional code metrics. Method: We experimentally compare the performance of Issues-Driven features and state-of-the-art traditional features on 86 open-source projects from two organizations. Results: The results show that Issues-Driven features are significantly better than state-of-the-art features and achieve an improvement of 6 to 13 percent in terms of AUC. Conclusions: The study concludes that integrating the requirements into fault prediction features overcomes the limitations of traditional software metrics that are agnostic to the requirements of the software.
C1 [Elmishali, Amir] Ben Gurion Univ Negev, IL-8410501 Beer Sheva, Israel.
   Ben Gurion Univ Negev, Cyber Secur Res Ctr, Beer Sheva, Israel.
C3 Ben Gurion University; Ben Gurion University
RP Elmishali, A (corresponding author), Ben Gurion Univ Negev, IL-8410501 Beer Sheva, Israel.
EM amirelm@post.bgu.ac.il; kalech@bgu.ac.il
RI Kalech, Meir/AAC-5476-2019
OI Kalech, Meir/0000-0001-7394-4713
FU Cyber Security Research Center at Ben-Gurion University of the Negev,
   Israel; ISF, Israel [1716/17]
FX Funding This study has been funded by the Cyber Security Research Center
   at Ben-Gurion University of the Negev, Israel and by the ISF, Israel
   grant #1716/17.
CR Abreu F.B., 1994, Proceedings of the 4th international conference on software quality, V186, P1, DOI DOI 10.5281/ZENODO.1217609
   Akimova EN, 2021, MATHEMATICS-BASEL, V9, DOI 10.3390/math9111180
   Altinger H, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P494, DOI 10.1109/MSR.2015.72
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   Borg M, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P7, DOI 10.1145/3340482.3342742
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Choudhary GR, 2018, COMPUT ELECTR ENG, V67, P15, DOI 10.1016/j.compeleceng.2018.02.043
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Elmishali A., 2021, 2021 IEEE 32ST INT S
   Elmishali A, 2019, AAAI CONF ARTIF INTE, P9446
   Elmishali A, 2018, ENG APPL ARTIF INTEL, V69, P147, DOI 10.1016/j.engappai.2017.12.011
   Elmishali A, 2016, AAAI CONF ARTIF INTE, P4003
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Herbold S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10092-4
   Herzig K, 2013, PROC INT SYMP SOFTW, P118, DOI 10.1109/ISSRE.2013.6698911
   Kaur I, 2021, INT J SYST ASSUR ENG, V12, P520, DOI 10.1007/s13198-021-01110-1
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kumar L, 2017, COMPUT STAND INTER, V53, P1, DOI 10.1016/j.csi.2017.02.003
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li N, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106287
   Li ZQ, 2018, IET SOFTW, V12, P161, DOI 10.1049/iet-sen.2017.0148
   Matsumoto S, 2010, P 6 INT C PREDICTIVE, P1, DOI DOI 10.1145/1868328.1868356
   Mehta S, 2021, NEURAL COMPUT APPL, V33, P10551, DOI 10.1007/s00521-021-05811-3
   Meiliana, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON CYBERNETICS AND COMPUTATIONAL INTELLIGENCE (CYBERNETICSCOM), P19, DOI 10.1109/CYBERNETICSCOM.2017.8311708
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Ni C, 2019, J SYST SOFTWARE, V152, P215, DOI 10.1016/j.jss.2019.03.012
   Omri S, 2020, P IEEE ACM 42 INT C, P209
   Pandey SK, 2021, EXPERT SYST APPL, V172, DOI 10.1016/j.eswa.2021.114595
   Paterson D, 2019, IEEE INT CONF SOFTW, P346, DOI 10.1109/ICST.2019.00041
   Piotrowski P., 2020, DATA CENTRIC BUSINES, V4, P77, DOI 10.1007/978-3-030-34706-2_5
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rathore SS, 2019, ARTIF INTELL REV, V51, P255, DOI 10.1007/s10462-017-9563-5
   Sayyad Shirabad J., 2005, The PROMISE Repository of Software Engineering Databases
   Sotto-Mayor B, 2021, SOFT COMPUT, V25, P14171, DOI 10.1007/s00500-021-06254-7
   Trautsch A, 2020, PROC IEEE INT CONF S, P127, DOI 10.1109/ICSME46990.2020.00022
   Wen WZ, 2019, 2019 IEEE 1ST INTERNATIONAL WORKSHOP ON INTELLIGENT BUG FIXING (IBF '19), P29, DOI [10.1109/ibf.2019.8665492, 10.1109/IBF.2019.8665492]
NR 36
TC 3
Z9 3
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2023
VL 155
AR 107102
DI 10.1016/j.infsof.2022.107102
EA NOV 2022
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7F4NK
UT WOS:000901826200015
DA 2024-07-18
ER

PT J
AU Kashiwa, Y
   Nishikawa, R
   Kamei, Y
   Kondo, M
   Shihab, E
   Sato, R
   Ubayashi, N
AF Kashiwa, Yutaro
   Nishikawa, Ryoma
   Kamei, Yasutaka
   Kondo, Masanari
   Shihab, Emad
   Sato, Ryosuke
   Ubayashi, Naoyasu
TI An empirical study on self-admitted technical debt in modern code review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Self-admitted technical debt; Modern code reviews
AB Technical debt is a sub-optimal state of development in projects. In particular, the type of technical debt incurred by developers themselves (e.g., comments that mean the implementation is imperfect and should be replaced with another implementation) is called self-admitted technical debt (SATD). In theory, technical debt should not be left for a long period because it accumulates more cost over time, making it more difficult to process. Accordingly, developers have traditionally conducted code reviews to find technical debt. In fact, we observe that many SATD comments are often introduced during modern code reviews (MCR) that are light-weight reviews with web applications. However, it is uncertain about the nature of SATD comments that are introduced in the review process: impact, frequency, characteristics, and triggers. Herein, this study empirically examines the relationship between SATD and MCR.Our case study of 156,372 review records from the Qt and OpenStack systems shows that (i) review records involving SATD are about 6%-7% less likely to be accepted by reviews than those without SATD; (ii) review records involving SATD tend to require two to three more revisions compared with those without SATD; (iii) 28-48% of SATD comments are introduced during code reviews; (iv) SATD during reviews works for communicating between authors and reviewers; and (v) 20% of the SATD comments are introduced due to reviewers' requests.
C1 [Kashiwa, Yutaro; Nishikawa, Ryoma; Kamei, Yasutaka; Kondo, Masanari; Ubayashi, Naoyasu] Kyushu Univ, Fukuoka, Japan.
   [Shihab, Emad] Concordia Univ, Montreal, PQ, Canada.
   [Sato, Ryosuke] Univ Tokyo, Tokyo, Japan.
C3 Kyushu University; Concordia University - Canada; University of Tokyo
RP Kashiwa, Y (corresponding author), Kyushu Univ, Fukuoka, Japan.
EM kashiwa@ait.kyushu-u.ac.jp
OI Sato, Ryosuke/0000-0001-8679-2747; Ubayashi, Naoyasu/0000-0003-1578-7195
FU JSPS, Japan; SNSF, Switzerland [JPJSJRP20191502]; JSPS, Japan
   [JP21H04877, JP21K17725]
FX We gratefully acknowledge the financial support of JSPS, Japan and SNSF,
   Switzerland for the project ``SENSOR'' (No. JPJSJRP20191502), and JSPS,
   Japan for the KAKENHI grants (JP21H04877, JP21K17725).
CR [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2008, Proceedings of the 2008 international working conference on Mining software repositories
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Bavota G, 2015, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSM.2015.7332454
   Baysal O, 2016, EMPIR SOFTW ENG, V21, P932, DOI 10.1007/s10664-015-9366-8
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Curtis B., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P49, DOI 10.1109/MTD.2012.6226000
   Fontana F. A., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P15, DOI 10.1109/MTD.2012.6225993
   Fucci G, 2020, PROC IEEE INT CONF S, P672, DOI 10.1109/ICSME46990.2020.00070
   Han XF, 2021, INT C PROGRAM COMPRE, P323, DOI 10.1109/ICPC52881.2021.00038
   Hugh C., 2009, Research methods and statistics in psychology, V5th
   Kamei E.d.S., 2016, QUASOQ TDA APSEC, P68
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Li YK, 2020, EUROMICRO CONF PROC, P495, DOI 10.1109/SEAA51224.2020.00083
   Li ZY, 2020, PROC IEEE INT CONF S, P629, DOI 10.1109/ICSME46990.2020.00065
   Liu ZX, 2018, PROC IEEE ACM INT C, P9, DOI 10.1145/3183440.3183478
   Maipradit R, 2020, IEEE INT WORK C SO, P54, DOI 10.1109/SCAM51674.2020.00011
   Maipradit R, 2020, EMPIR SOFTW ENG, V25, P3770, DOI 10.1007/s10664-020-09854-3
   Maldonado ED, 2017, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSME.2017.8
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Miyake Y, 2017, STUD COMPUT INTELL, V695, P17, DOI 10.1007/978-3-319-51472-7_2
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Palomba F, 2017, INT C PROGRAM COMPRE, P176, DOI 10.1109/ICPC.2017.38
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Shimagaki J, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P212, DOI 10.1145/2889160.2889243
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Thongtanunam P, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P168, DOI 10.1109/MSR.2015.23
   Vassallo C, 2016, PROC IEEE INT CONF S, P519, DOI 10.1109/ICSME.2016.72
   Wehaibi S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P179, DOI 10.1109/SANER.2016.72
   Wohlin C., 2000, J KLUWER INT SER SOF, V6
   Yli-Huumo J, 2016, J SYST SOFTWARE, V120, P195, DOI 10.1016/j.jss.2016.05.018
   Zampetti F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P38, DOI [10.1109/SANER.2019.8667996, 10.1109/saner.2019.8667996]
   Zampetti F, 2018, IEEE WORK CONF MIN S, P526, DOI 10.1145/3196398.3196423
NR 38
TC 10
Z9 10
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2022
VL 146
AR 106855
DI 10.1016/j.infsof.2022.106855
EA FEB 2022
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0J8ZG
UT WOS:000780387700006
OA Bronze
DA 2024-07-18
ER

PT J
AU Budgen, D
   Brereton, P
AF Budgen, David
   Brereton, Pearl
TI Short communication: Evolution of secondary studies in software
   engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic review; Mapping study; Qualitative study; Experience of
   authors
ID REVIEWS
AB Context: Other disciplines commonly employ secondary studies to address the needs of practitioners and policy-makers. Since being adopted by software engineering in 2004, many have been undertaken by researchers. Objective: To assess how the role of secondary studies in software engineering has evolved. Methods: We examined a sample of 131 secondary studies published in a set of five major software engineering journals for the years 2010, 2015 and 2020. These were categorised by their type (e.g. mapping study), their research focus (quantitative/qualitative and practice/methodological), as well as the experience of the first authors. Results: Secondary studies are now a well-established research tool. They are predominantly qualitative and there is extensive use of mapping studies to profile research in particular areas. A significant number are clearly produced as part of postgraduate study, although experienced researchers also conduct many secondary studies. They are sometimes also used as part of a multi-method study. Conclusion: Existing guidelines largely focus upon quantitative systematic reviews. Based on our findings, we suggest that more guidance is needed on how to conduct, analyse, and report qualitative secondary studies.
C1 [Budgen, David] Univ Durham, Dept Comp Sci, Durham DH1 3LE, England.
   [Brereton, Pearl] Keele Univ, Sch Comp & Maths, Keele ST5 5BG, Staffs, England.
C3 Durham University; Keele University
RP Budgen, D (corresponding author), Univ Durham, Dept Comp Sci, Durham DH1 3LE, England.
EM david.budgen@durham.ac.uk; o.p.brereton@keele.ac.uk
OI Budgen, David/0000-0001-7143-0241
CR Budgen David, 2022, Mendeley Data, V1, DOI 10.17632/GVT6Y7SDJY.1
   Budgen D, 2020, E-INFORMATICA, V14, P7, DOI 10.37190/e-Inf200101
   Budgen D, 2018, INFORM SOFTWARE TECH, V94, P234, DOI 10.1016/j.infsof.2017.10.012
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   van Aken JE, 2004, J MANAGE STUD, V41, P219, DOI 10.1111/j.1467-6486.2004.00430.x
NR 7
TC 6
Z9 6
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2022
VL 145
AR 106840
DI 10.1016/j.infsof.2022.106840
EA FEB 2022
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0J9PR
UT WOS:000780430800002
OA Green Published, hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Ferrari, A
   Bacco, M
   Gaber, K
   Jedlitschka, A
   Hess, S
   Kaipainen, J
   Koltsida, P
   Toli, E
   Brunori, G
AF Ferrari, Alessio
   Bacco, Manlio
   Gaber, Kirsten
   Jedlitschka, Andreas
   Hess, Steffen
   Kaipainen, Jouni
   Koltsida, Panagiota
   Toli, Eleni
   Brunori, Gianluca
TI Drivers, barriers and impacts of digitalisation in rural areas from the
   viewpoint of experts
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Requirements engineering; Sustainability
   requirements; Interviews; Digitalisation; Empirical study
ID TECHNICAL DEBT; SUSTAINABILITY; REQUIREMENTS; QUALITY
AB Context: The domain of rural areas, including rural communities, agriculture, and forestry, is going through a process of deep digital transformation. Digitalisation can have positive impacts on sustainability in terms of greater environmental control, and community prosperity. At the same time, it can also have disruptive effects, with the marginalisation of actors that cannot cope with the change. When developing a novel system for rural areas, requirements engineers should carefully consider the specific socio-economic characteristics of the domain, so that potential positive effects can be maximised, while mitigating negative impacts. Objective: The goal of this paper is to support requirements engineers with a reference catalogue of drivers, barriers and potential impacts associated to the introduction of novel ICT solutions in rural areas. Method: To this end, we interview 30 cross-disciplinary experts in digitalisation of rural areas, and we analyse the transcripts to identify common themes. Results: According to the experts, main drivers are economic, with the possibility of reducing costs, and regulatory, as institutions push for more precise tracing and monitoring of production; barriers are the limited connectivity, but also distrust towards technology and other socio-cultural aspects; positive impacts are socioeconomic (e.g., reduction of manual labour, greater productivity), while negative ones include potential dependency from technology, with loss of hands-on expertise, and marginalisation of certain actors (e.g., small farms, subjects with limited education). Conclusion: This paper contributes to the literature with a domain-specific catalogue that characterises digitalisation in rural areas. The catalogue can be used as a reference baseline for requirements elicitation endeavours in rural areas, to support domain analysis prior to the development of novel solutions, as well as fit-gap analysis for the adaptation of existing technologies.
C1 [Ferrari, Alessio; Bacco, Manlio] Natl Res Council CNR, Inst Informat Sci & Technol ISTI, I-56124 Pisa, Italy.
   [Gaber, Kirsten] Karlsruhe Inst Technol, Inst Technol Assessment & Syst Anal, POB 3640, D-76021 Karlsruhe, Germany.
   [Jedlitschka, Andreas; Hess, Steffen] Fraunhofer IESE, Fraunhofer Pl 1, D-67663 Kaiserslautern, Germany.
   [Kaipainen, Jouni] Kokkola Univ Consortium Chydenius, Univ Jyvaskyla, Talonpojankatu 2B, Kokkola 67701, Finland.
   [Koltsida, Panagiota; Toli, Eleni] Athena Res & Innovat Ctr Informat Commun & Knowle, Artemidos 6 & Epidavrou Maroussi, GR-15125 Athens, Greece.
   [Brunori, Gianluca] Univ Pisa, Dept Agr Food & Agroenvironm Sci DISAAA, Via Borghetto 80, I-56124 Pisa, Italy.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Scienza e
   Tecnologie dell'Informazione "Alessandro Faedo" (ISTI-CNR); Helmholtz
   Association; Karlsruhe Institute of Technology; University of Jyvaskyla;
   University of Pisa
RP Ferrari, A (corresponding author), Natl Res Council CNR, Inst Informat Sci & Technol ISTI, I-56124 Pisa, Italy.
EM alessio.ferrari@isti.cnr.it
RI Jedlitschka, Andreas/AAJ-5524-2020; Bacco, Felice Manlio/H-6132-2017;
   brunori, Gianluca/E-1687-2014
OI Jedlitschka, Andreas/0000-0003-3590-6331; Gaber,
   Kirsten/0000-0002-6768-9047; Bacco, Felice Manlio/0000-0001-6733-1873;
   Toli, Eleni/0000-0002-3907-2496; Kaipainen, Jouni/0000-0001-6400-552X;
   brunori, Gianluca/0000-0003-2905-9738; FERRARI,
   ALESSIO/0000-0002-0636-5663; Koltsida, Panagiota/0000-0001-5583-5396
FU European Union's Horizon 2020 research and innovation programme
   [818194]; H2020 Societal Challenges Programme [818194] Funding Source:
   H2020 Societal Challenges Programme
FX This work was supported by the European Union's Horizon 2020 re-search
   and innovation programme under grant agreement no. 818194. The following
   partners contributed in carrying out and transcribing the experts'
   interviews: James Hutton Institute; Research Institute of Organic
   Agriculture (FiBL) ; SISTEMA GmbH; University of Cordoba; European
   Association for Information on Local Development (AEIDL) ; Farmers'
   Parliament (ZSA) ; AMIGO srl; Wageningen Research; Wa-geningen
   University & Research; Nodibinajums Baltic Studies Centre; University of
   Lodz; Flanders Research Institute for Agriculture, Fish-eries and Food;
   National Research Institute for Agriculture, Food and Environment
   (INRAE) ; University of Debrecen; PEFC Italy.
CR García-Mireles GA, 2018, INFORM SOFTWARE TECH, V95, P108, DOI 10.1016/j.infsof.2017.10.002
   Salas-Zapata WA, 2019, SUSTAIN DEV, V27, P153, DOI 10.1002/sd.1885
   [Anonymous], 2011, ISO/IEC 25010:2011
   Auerbach C., 2003, QUALITATIVE DATA INT, V21
   Bacco M, 2019, ARRAY-NY, V3-4, DOI 10.1016/j.array.2019.100009
   Barnes AP, 2019, LAND USE POLICY, V80, P163, DOI 10.1016/j.landusepol.2018.10.004
   Barnes A, 2019, ENVIRON SCI POLICY, V93, P66, DOI 10.1016/j.envsci.2018.12.014
   Becker C, 2016, IEEE SOFTWARE, V33, P56, DOI 10.1109/MS.2015.158
   Becker C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P467, DOI 10.1109/ICSE.2015.179
   Benos L, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10061905
   Brito I. S., 2018, PROC RCIS, P1, DOI 10.1109/RCIS.2018.8406676
   Busse M, 2014, PRECIS AGRIC, V15, P403, DOI 10.1007/s11119-013-9337-2
   Cabot J, 2009, PROC INT CONF SOFTW, P207, DOI 10.1109/ICSE-COMPANION.2009.5070983
   Carbonell IM, 2016, INTERNET POLICY REV, V5, DOI 10.14763/2016.1.405
   Chitchyan R., 2015, 4 INT WORKSH REQ ENG
   Chitchyan R, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P533, DOI 10.1145/2889160.2889217
   Condori-Fernandez N, 2018, J SYST SOFTWARE, V137, P289, DOI 10.1016/j.jss.2017.12.005
   Cowie P, 2020, J RURAL STUD, V79, P169, DOI 10.1016/j.jrurstud.2020.08.042
   De Beer J, 2016, OWNERSHIP OPEN DATA
   Doerr J, 2018, INT REQUIR ENG CONF, P100, DOI 10.1109/RE.2018.00020
   Duboc L, 2020, REQUIR ENG, V25, P469, DOI 10.1007/s00766-020-00336-y
   Easterbrook S, 2014, PROCEEDINGS OF THE 2014 CONFERENCE ICT FOR SUSTAINABILITY, P235
   El Bilali Hamid, 2018, Information Processing in Agriculture, V5, P456, DOI 10.1016/j.inpa.2018.06.006
   Eric S., 2011, Social modeling for requirements engineering
   Fleming A, 2018, AGRON SUSTAIN DEV, V38, DOI 10.1007/s13593-018-0501-y
   GOODLAND R, 1995, ANNU REV ECOL SYST, V26, P1, DOI 10.1146/annurev.es.26.110195.000245
   Herrero M, 2021, LANCET PLANET HEALTH, V5, pE50, DOI 10.1016/S2542-5196(20)30277-1
   Hilty L.M., 2011, Information Technology and Sustainability: Essays on the Relationship between Information Technology and Sustainable Development
   Koziolek H., 2011, P JOINT ACM SIGSOFT, P3, DOI DOI 10.1145/2000259.2000263
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lace K, 2018, REFSQ WORKSH
   Lago P, 2015, COMMUN ACM, V58, P70, DOI 10.1145/2714560
   Lajoie-O'Malley A, 2020, ECOSYST SERV, V45, DOI 10.1016/j.ecoser.2020.101183
   Leung Lawrence, 2015, J Family Med Prim Care, V4, P324, DOI 10.4103/2249-4863.161306
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Mahaux M, 2011, LECT NOTES COMPUT SC, V6606, P19, DOI 10.1007/978-3-642-19858-8_3
   Mireles GAG, 2017, 2017 12 IB C INF SYS, P1, DOI DOI 10.23919/CISTI.2017.7975813
   Mondejar ME, 2021, SCI TOTAL ENVIRON, V794, DOI 10.1016/j.scitotenv.2021.148539
   Mussbacher G, 2014, IEEE INT WORKSH MODE, P7, DOI 10.1109/MoDRE.2014.6890821
   Nuseibeh B., 2017, P 3 ACM WORKSH CYB P, P1
   Paustian M, 2017, PRECIS AGRIC, V18, P701, DOI 10.1007/s11119-016-9482-5
   Penzenstadler Birgit, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P32, DOI 10.1049/ic.2012.0004
   Penzenstadler B., 2014, P 18 INT C EV ASS SO, P1
   Pierpaoli E, 2013, PROC TECH, V8, P61, DOI 10.1016/j.protcy.2013.11.010
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Regan A, 2019, NJAS-WAGEN J LIFE SC, V90-91, DOI 10.1016/j.njas.2019.02.003
   Righi RD, 2020, COMPUT ELECTRON AGR, V169, DOI 10.1016/j.compag.2019.105156
   Rijswijk K, 2021, J RURAL STUD, V85, P79, DOI 10.1016/j.jrurstud.2021.05.003
   Robertson M, 2007, FIELD CROP RES, V104, P60, DOI 10.1016/j.fcr.2006.12.013
   Roher K, 2013, INT WORKSH REQUIRE, P8, DOI 10.1109/RePa.2013.6602665
   Roher K, 2013, 2013 2ND INTERNATIONAL WORKSHOP ON USER EVALUATIONS FOR SOFTWARE ENGINEERING RESEARCHERS (USER), P16, DOI 10.1109/USER.2013.6603080
   Rolandi S., SUSTAINABILITY-BASEL, V13
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Saputri TRD, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106407
   Saputri TRD, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2254
   Sarja M, 2021, J CLEAN PROD, V286, DOI 10.1016/j.jclepro.2020.125492
   Schroeder K., 2021, WHATS COOKING DIGITA
   Seyff N, 2018, INT REQUIR ENG CONF, P304, DOI 10.1109/RE.2018.00038
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Trendov M., 2019, Digital technologies in agriculture and rural areas: Status report
   Vaismoradi M, 2013, NURS HEALTH SCI, V15, P398, DOI 10.1111/nhs.12048
   van der Burg S, 2019, NJAS-WAGEN J LIFE SC, V90-91, DOI 10.1016/j.njas.2019.01.001
   Van Lamsweerde A, 2009, REQUIREMENTS ENG SYS, V10
   Venters CC, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE-SEIS.2017.2
   Wolf W, 2009, COMPUTER, V42, P88, DOI 10.1109/MC.2009.81
   Pham YD, 2020, INT REQUIR ENG CONF, P358, DOI 10.1109/RE48521.2020.00048
   Zou WT, 2019, IEEE ACCESS, V7, P46621, DOI 10.1109/ACCESS.2019.2907999
NR 67
TC 35
Z9 35
U1 16
U2 88
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2022
VL 145
AR 106816
DI 10.1016/j.infsof.2021.106816
EA JAN 2022
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YK2ON
UT WOS:000745059100001
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Ríos, JCC
   Embury, SM
   Eraslan, S
AF Rios, Julio Cesar Cortes
   Embury, Suzanne M.
   Eraslan, Sukru
TI A unifying framework for the systematic analysis of Git workflows
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Git; Workflows; Feature-based modelling; Version control; Branching
AB Context: Git is a popular distributed version control system that provides flexibility and robustness for software development projects. Several workflows have been proposed to codify the way project contributors work collaboratively with Git. Some workflows are highly prescriptive while others allow more leeway but do not provide the same level of code quality assurance, thus, preventing their comparison to determine the most suitable for a specific set of requirements, or to ascertain if a workflow is being properly followed. Objective: In this paper, we propose a novel feature-based framework for describing Git workflows, based on a study of 26 existing instances. The framework enables workflows' comparison, to discern how, and to what extent, they exploit Git capabilities for collaborative software development. Methods: The framework uses feature-based modelling to map Git capabilities, regularly expressed as contribution guidelines, and a set of features that can be impartially applied to all the workflows considered. Through this framework, each workflow was characterised based on their publicly available descriptions. The characterisations were then vectorised and processed using hierarchical clustering to determine workflows' similarities and to identify which features are most popular, and more relevant for discriminatory purposes. Results: Comparative analysis evidenced that some workflows claiming to be closely related, when described and then characterised, turned out to have more differences than similarities. The analysis also showed that most workflows focus on the branching and code integration strategies, whilst others emphasise subtle differences from other popular workflows or describe a specific development route and are, thus, widely reused. Conclusion: The characterisation and clustering analysis demonstrated that our framework can be used to compare and analyse Git workflows.
C1 [Rios, Julio Cesar Cortes; Embury, Suzanne M.] Univ Manchester, Dept Comp Sci, Manchester M13 9PL, Lancs, England.
   [Eraslan, Sukru] Middle East Tech Univ, Northern Cyprus Campus,Mersin 10, TR-99738 Kalkanli, Guzelyurt, Turkey.
C3 University of Manchester; Middle East Technical University
RP Ríos, JCC (corresponding author), Univ Manchester, Dept Comp Sci, Manchester M13 9PL, Lancs, England.
EM juliocesar.cortesrios@manchester.ac.uk;
   suzanne.m.embury@manchester.ac.uk; seraslan@metu.edu.tr
RI Eraslan, Sukru/W-7666-2019
OI Eraslan, Sukru/0000-0002-9277-8375; Cortes Rios, Julio
   Cesar/0000-0003-0377-6421
FU Institute of Coding from the Office for Students (OfS); University of
   Manchester, United Kingdom; Higher Education Funding Council for England
   (HEFCE)
FX The work reported in this paper was supported by the Institute of
   Coding, which received funding from the Office for Students (OfS) and
   the University of Manchester, United Kingdom, and support from the
   Higher Education Funding Council for England (HEFCE).
CR Acher M, 2010, LECT NOTES COMPUT SC, V6138, P3, DOI 10.1007/978-3-642-13595-8_3
   [Anonymous], 2019, GIT TERMS EXPLAINED
   [Anonymous], 2009, The handbook of research synthesis and meta-analysis
   [Anonymous], 2016, P 4 INT WORKSH REL E
   Atlassian, 2010, ATLASSIAN COMPARING
   Atlassian, 2010, SIMPLE GIT
   Atlassian, 2020, DEFINITIONS BASIC GI
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Berger Thorsten, 2013, 7 INT WORKSH VAR MOD, DOI DOI 10.1145/2430502.2430513
   Chacon S., 2014, GIT DISTRIBUTED WORK
   Chromium, 2010, UPSTR 1
   Cleary K., 2014, P INT C SOFTW ENG RE, P1
   Cruz A.J., 2010, TYPES WORKFLOWS
   Czarnecki Krzysztof., 2012, P 6 INT WORKSHOP VAR, P173, DOI DOI 10.1145/2110147.2110167
   DataSift, 2010, INTRO GITFLOW
   Driessen V., 2010, A successful Git branching model
   Duran A, 2017, SOFTW SYST MODEL, V16, P1049, DOI 10.1007/s10270-015-0503-z
   E.P. Corporation, 2010, GIT WORKFL WORK
   EVERITT B, 1980, QUAL QUANT, V14, P75, DOI 10.1007/BF00154794
   Frigeri A., 2018, EUR PLAN SCI C
   Gadzinowski K., 2010, TRUNK BASED DEV GIT
   GitHub, 2010, GITHUB FLOW
   GitLab, 2010, GITLAB FLOW
   GORDON AD, 1987, J ROY STAT SOC A STA, V150, P119, DOI 10.2307/2981629
   Greiler M., 2016, MSR-TR-2016-27
   Hammant P., 2018, TRUNK BASED DEV
   Hellebrand R, 2016, 2016 3RD INTERNATIONAL WORKSHOP ON EMERGING IDEAS AND TRENDS IN ENGINEERING OF CYBER-PHYSICAL SYSTEMS (EITEC), P47, DOI 10.1109/EITEC.2016.7503696
   Hilton R., 2010, 3 FLOW
   Hulet S., 2016, GIT DEV WORKFLOWS GI
   Judin J., 2010, SUCCESSFUL GIT BRANC
   Kang K. C., 1990, Technical Report
   Lakhani A., 2019, 3 MOST POPULAR GIT W
   Lee JY, 1998, COMPUT AIDED DESIGN, V30, P1019, DOI 10.1016/S0010-4485(98)00055-4
   Lee K, 2002, LECT NOTES COMPUT SC, V2319, P62
   Loeliger J, 2012, Version Control with Git
   M. Corp, 2010, RELEASE FLOW
   M. Corp, 2010, USE GIT MICROSOFT
   Mezzalira L., 2014, GIT FLOW VS GITHUB F
   Montalvillo Leticia., 2015, Proceedings of the 19th International Conference on Software Product Line, SPLC 2015, Nashville, TN, USA, July 20-24, 2015, P111, DOI [10.1145/2791060.2791083, DOI 10.1145/2791060.2791083]
   Motavalli S, 1997, COMPUT IND ENG, V33, P349, DOI 10.1016/S0360-8352(97)00109-5
   Nordfjord E., 2016, GIT WORKFLOW COMP
   Outlaw M., 2010, COMPARING GIT WORKFL
   Patel S., 2020, PROBLEM GIT FLOW
   Peters S., 2013, GIT T TEAMS
   Phillips S, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P9
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Porto P., 2010, 4 BRANCHING WORKFLOW
   Ram K, 2013, SOURCE CODE BIOL MED, V8, DOI 10.1186/1751-0473-8-7
   Reed K., 2018, BOINC FLOW
   Ruka A., 2010, ONEFLOW GIT BRANCHIN
   S.F. Conservancy, 2018, GIT GITGLOSSARY DOCU
   S.F. Conservancy, 2018, GIT GITWORKFLOWS DOC
   Sharma V., 2020, COMPARING GIT BRANCH
   Strumpflohner J., 2013, GIT EXPLAINED BEGINN
   Tepavac I., 2015, CASE27 C CASE27, P1
   Viera AJ, 2005, FAM MED, V37, P360
   WARD JH, 1963, J AM STAT ASSOC, V58, P236, DOI 10.2307/2282967
   Works B., 2019, 5 TYPES GIT WORKFLOW
   Wunder, 2018, WUNDERFLOW
   Zepel, 2020, 5 GIT WORKFLOWS YOU
NR 60
TC 2
Z9 2
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2022
VL 145
AR 106811
DI 10.1016/j.infsof.2021.106811
EA JAN 2022
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YJ4XL
UT WOS:000744536600002
DA 2024-07-18
ER

PT J
AU Wohlin, C
   Rainer, A
AF Wohlin, Claes
   Rainer, Austen
TI Challenges and recommendations to publishing and using credible evidence
   in software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Evidence-based software engineering; EBSE; Credible evidence; Validity;
   Relevance
ID PREDICTION; COMPLEXITY; CRITIQUE; REVIEWS; NUMBER; SIZE
AB Context: An evidence-based scientific discipline should produce, consume and disseminate credible evidence. Unfortunately, mistakes are sometimes made, resulting in the production, consumption and dissemination of invalid or otherwise questionable evidence. In the worst cases, such questionable evidence achieves the status of accepted knowledge. There is, therefore, the need to ensure that producers and consumers seek to identify and rectify such situations. Objectives: To raise awareness of the negative impact of misinterpreting evidence and of propagating that misinterpreted evidence, and to provide guidance on how to improve on the type of issues identified.
   Methods: We use a case-based approach to present and analyse the production, consumption and dissemination of evidence. The cases are based on the literature and our professional experience. These cases illustrate a range of challenges confronting evidence-based researchers as well as the consequences to research when invalid evidence is not corrected in a timely way.
   Results: We use the cases and the challenges to formulate a framework and a set of recommendations to help the community in producing and consuming credible evidence.
   Conclusions: We encourage the community to collectively remain alert to the emergence and dissemination of invalid, or otherwise questionable, evidence, and to proactively seek to identify and rectify it.
C1 [Wohlin, Claes] Blekinge Inst Technol, SE-37179 Karlskrona, Sweden.
   [Rainer, Austen] Queens Univ Belfast, 18 Malone Rd,Comp Sci Bldg, Belfast BT9 5BN, Antrim, North Ireland.
C3 Blekinge Institute Technology; Queens University Belfast
RP Wohlin, C (corresponding author), Blekinge Inst Technol, SE-37179 Karlskrona, Sweden.
EM claes.wohlin@bth.se
OI Wohlin, Claes/0000-0003-0460-5253
CR Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   [Anonymous], 1994, CHAOS REP
   [Anonymous], 2007, Proceedings of the 3rd International Workshop on Predictor Models in Software Engineering
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Bell R., 2006, Proc. 2006 International Symposium on Software Testing and Analysis, P61
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Bossavit L, 2015, LEPRECHAUNS SOFTWARE
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   COMPTON BT, 1990, J SYST SOFTWARE, V12, P199, DOI 10.1016/0164-1212(90)90040-S
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   El Emam K, 2002, IEEE T SOFTWARE ENG, V28, P494, DOI 10.1109/TSE.2002.1000452
   Eveleens JL, 2010, IEEE SOFTWARE, V27, P30, DOI 10.1109/MS.2009.154
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Hatton L, 1997, IEEE SOFTWARE, V14, P89, DOI 10.1109/52.582978
   Hove S. E., 2005, Experiences from conducting semi-structured interviews in empirical software engineering research. Paper presented at: IEEE International Software Metrics Symposium (METRICS), P10, DOI DOI 10.1109/METRICS.2005.24
   Huang X, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1207, DOI 10.1145/3180155.3180235
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jorgensen M, 2006, INFORM SOFTWARE TECH, V48, P297, DOI 10.1016/j.infsof.2005.07.002
   Jorgensen M, 2012, J SYST SOFTWARE, V85, P2494, DOI 10.1016/j.jss.2012.05.068
   Kitchenham B, 2007, IEEE SOFTWARE, V24, P73, DOI 10.1109/MS.2007.49
   Kitchenham B, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P134, DOI 10.1145/3319008.3319009
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kontio J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P271
   Koru AG, 2010, IEEE SOFTWARE, V27, P81, DOI 10.1109/MS.2010.58
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Liebchen G. A., 2008, P 4 INT WORKSH PRED, P39, DOI [10.1145/1370788.1370799, DOI 10.1145/1370788.1370799]
   Liebchen Gernot, 2016, P 12 INT C PRED MOD, P7
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   MacDonell S, 2010, IEEE T SOFTWARE ENG, V36, P676, DOI 10.1109/TSE.2010.28
   Magazinius A, 2012, J SYST SOFTWARE, V85, P1770, DOI 10.1016/j.jss.2012.03.026
   Moll~eri J., 2016, PROC INT S EMPIR SOF
   Ostrand T. J., 2002, Software Engineering Notes, V27, P55, DOI 10.1145/566171.566181
   Ostrand T.J., 2007, Proceedings of the 2007 international symposium on Software testing and analysis (ISSTA '07), P219
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Oxford University Press, 2020, OXFORD DICT
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Prechelt L., 2010, MAKING SOFTWARE WHAT, P17
   Reyes RP, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1195, DOI 10.1145/3180155.3180161
   Rosenberg J, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P137, DOI 10.1109/METRIC.1997.637174
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schum D.A., 2001, The evidential foundations of probabilistic reasoning
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   SHEPPERD M, 1988, SOFTWARE ENG J, V3, P30, DOI 10.1049/sej.1988.0003
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Stensrud E, 2003, EMPIR SOFTW ENG, V8, P139, DOI 10.1023/A:1023010612345
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Weyuker EJ, 2008, EMPIR SOFTW ENG, V13, P539, DOI 10.1007/s10664-008-9082-8
   Wohlin C, P 18 C EV ASS SOFTW, P38
   Wohlin C, 2015, EMPIR SOFTW ENG, V20, P1427, DOI 10.1007/s10664-014-9319-7
   Yin R.K., 2014, Applications of case study research, V2nd
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 56
TC 10
Z9 10
U1 1
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2021
VL 134
AR 106555
DI 10.1016/j.infsof.2021.106555
EA FEB 2021
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RF4GK
UT WOS:000634797600005
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Sülün, E
   Tüzün, E
   Dogrusöz, U
AF Sulun, Emre
   Tuzun, Eray
   Dogrusoz, Ugur
TI RSTrace plus : Reviewer suggestion using software artifact traceability
   graphs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Suggesting reviewers; Reviewer recommendation; Graph mining; Software
   traceability; Pull-request review; Modern code review
ID RECOMMENDATION; LEARN
AB Context: Various types of artifacts (requirements, source code, test cases, documents, etc.) are produced throughout the lifecycle of a software. These artifacts are connected with each other via traceability links that are stored in modern application lifecycle management repositories. Throughout the lifecycle of a software, various types of changes can arise in any one of these artifacts. It is important to review such changes to minimize their potential negative impacts. To make sure the review is conducted properly, the reviewer(s) should be chosen appropriately.
   Objective: We previously introduced a novel approach, named RSTrace, to automatically recommend reviewers that are best suited based on their familiarity with a given artifact. In this study, we introduce an advanced version of RSTrace, named RSTrace+ that accounts for recency information of traceability links including practical tool support for GitHub.
   Methods: In this study, we conducted a series of experiments on finding the appropriate code reviewer(s) using RSTrace+ and provided a comparison with the other code reviewer recommendation approaches.
   Results: We had initially tested RSTrace+ on an open source project (Qt 3D Studio) and achieved a top-3 accuracy of 0.89 with an MRR (mean reciprocal ranking) of 0.81. In a further empirical evaluation of 40 open source projects, we compared RSTrace+ with Naive-Bayes, RevFinder and Profile based approach, and observed higher accuracies on the average.
   Conclusion: We confirmed that the proposed reviewer recommendation approach yields promising top-k and MRR scores on the average compared to the existing reviewer recommendation approaches. Unlike other code reviewer recommendation approaches, RSTrace+ is not limited to recommending reviewers for source code artifacts and can potentially be used for recommending reviewers for other types of artifacts. Our approach can also visualize the affected artifacts and help the developer to make assessments of the potential impacts of change to the reviewed artifact.
C1 [Sulun, Emre; Tuzun, Eray; Dogrusoz, Ugur] Bilkent Univ, Dept Comp Engn, Ankara, Turkey.
C3 Ihsan Dogramaci Bilkent University
RP Sülün, E (corresponding author), Bilkent Univ, Dept Comp Engn, Ankara, Turkey.
EM emre.sulun@bilkent.edu.tr; eraytuzun@cs.bilkent.edu.tr;
   ugur@cs.bilkent.edu.tr
RI Tuzun, Eray/AAD-7282-2021; Sülün, Emre/ABC-4258-2020; Dogrusoz,
   Ugur/ABI-7050-2020
OI Tuzun, Eray/0000-0002-5550-7816; Sülün, Emre/0000-0001-9513-1967;
   Dogrusoz, Ugur/0000-0002-7153-0784
CR Anvik J., 2006, 28th International Conference on Software Engineering Proceedings, P937, DOI 10.1145/1134285.1134457
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Dogan E, 2019, INT SYMP EMP SOFTWAR, P7
   Dueñas S, 2018, PROC IEEE ACM INT C, P1, DOI 10.1145/3183440.3183475
   Fejzer M, 2018, J INTELL INF SYST, V50, P597, DOI 10.1007/s10844-017-0484-1
   Hegeman T., 2018, SURVEY GRAPH ANAL AP
   Jeong G., 2009, RES SOFTW
   Jiang J, 2015, J COMPUT SCI TECH-CH, V30, P998, DOI 10.1007/s11390-015-1577-3
   Kagdi H, 2012, J SOFTW-EVOL PROC, V24, P3, DOI 10.1002/smr.530
   Kersten M, 2018, IEEE SOFTWARE, V35, P14, DOI 10.1109/MS.2018.1661330
   Kim J, 2018, SYMMETRY-BASEL, V10, DOI 10.3390/sym10040114
   Lee JB, 2013, ASIA PAC SOFWR ENG, P1, DOI 10.1109/APSEC.2013.103
   Lipcák J, 2018, EUROMICRO CONF PROC, P378, DOI 10.1109/SEAA.2018.00068
   MacLeod L, 2018, IEEE SOFTWARE, V35, P34, DOI 10.1109/MS.2017.265100500
   Naguib H, 2013, IEEE WORK CONF MIN S, P22, DOI 10.1109/MSR.2013.6623999
   Ouni A, 2016, PROC IEEE INT CONF S, P367, DOI 10.1109/ICSME.2016.65
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Peng ZH, 2018, PROCEEDINGS OF CHINESE CHI 2018: SIXTH INTERNATIONAL SYMPOSIUM OF CHINESE CHI (CHINESE CHI 2018), P152, DOI 10.1145/3202667.3202694
   Rahman MM, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P222, DOI 10.1145/2889160.2889244
   Rath M, 2019, DATA BRIEF, V25, DOI 10.1016/j.dib.2019.104005
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Sülün E, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P66, DOI 10.1145/3345629.3345637
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Tüzün E, 2019, J SYST SOFTWARE, V149, P63, DOI 10.1016/j.jss.2018.11.021
   Xia X, 2015, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSM.2015.7332472
   Xia ZL, 2017, 6TH INTERNATIONAL WORKSHOP ON SOFTWARE MINING (SOFTWAREMINING), P24, DOI 10.1109/SOFTWAREMINING.2017.8100850
   Yang C, 2018, J CENT SOUTH UNIV, V25, P1129, DOI 10.1007/s11771-018-3812-x
   Yang X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P820, DOI 10.1145/2635868.2661682
   Ye X, 2019, IEEE ACCESS, V7, P85382, DOI 10.1109/ACCESS.2019.2925560
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
   Zhang W.Q., 2014, Journal of Information Science, V57, P1, DOI DOI 10.1007/S11432-014-5221-6
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 35
TC 18
Z9 18
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2021
VL 130
AR 106455
DI 10.1016/j.infsof.2020.106455
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PI2JM
UT WOS:000600922900008
DA 2024-07-18
ER

PT J
AU Saltan, A
   Smolander, K
AF Saltan, Andrey
   Smolander, Kari
TI Bridging the state-of-the-art and the state-of-the-practice of SaaS
   pricing: A multivocal literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software-as-a-Service; SaaS; Pricing; Software Economics; Software
   Product Management; Multi-vocal Literature Review
AB Context: Pricing is an essential element of software business strategy and tactics. Informed pricing decision-making requires the involvement of different stakeholders and comprehensive data analysis. Achieving both appears to be challenging, and pricing remains one of the most under-managed processes in the software business. Simultaneously, a coherent SaaS pricing body of knowledge and verified solutions to assist SaaS providers while designing and implementing pricing are missing.
   Objective: There is a lack of integration among different research areas focused on SaaS pricing and, more importantly, between academia and industry. The primary aim of this paper is to clarify this misconception by classifying, thematically analyzing, and putting in correspondent academic state-of-the-art and industrial state-of-the-practice of SaaS pricing.
   Method: A multivocal literature review (MLR) approach was used for the study, exploring both "white" literature as well as "grey" literature. The body of literature of 387 bibliography items was collected using a formal protocol. Of these, 57 were white literature items, and 330 were grey. A multistage content analysis process was implemented to classify the rich literature body across multiple dimensions with further mapping, synthesis, and reporting.
   Results: A taxonomy of pricing-related concepts was created. It classifies SaaS pricing aspects, affecting factors, and challenges facing SaaS providers. The findings and interpretations are summarized to emphasize the major research themes and practical challenges of SaaS pricing practices' transformation and provide further research guidelines in this area.
   Conclusion: SaaS pricing is a maturing and prominent area of research that requires further investigation. The conducted MLR formed a clear picture of SaaS pricing research and practice and identified different SaaS pricing aspects and affecting factors. The study will enable both scholars and practitioners to assess the current state-of-the-art in research and practice.
C1 [Saltan, Andrey; Smolander, Kari] LUT Univ, Lappeenranta, Finland.
   [Saltan, Andrey] HSE Univ, St Petersburg, Russia.
C3 Lappeenranta-Lahti University of Technology LUT; HSE University
   (National Research University Higher School of Economics)
RP Saltan, A (corresponding author), LUT Univ, Lappeenranta, Finland.; Saltan, A (corresponding author), HSE Univ, St Petersburg, Russia.
EM andrey.saltan@lut.fi
RI Saltan, Andrey/G-2514-2015; Smolander, Kari/B-4581-2015
OI Saltan, Andrey/0000-0002-7921-986X; 
CR Accion Team, 2018, PRIC YOUR SAAS PROD
   Adams RJ, 2017, INT J MANAG REV, V19, P432, DOI 10.1111/ijmr.12102
   Altaf F, 2010, COMMUN ACM, V53, P139, DOI 10.1145/1646353.1646389
   [Anonymous], 2001, SOFTW SERV STRAT BAC
   [Anonymous], 2009 42 HAW INT C SY
   [Anonymous], MVP WORKSH SIMPL F 2
   [Anonymous], 2017, MVP WORKSH HARD WO 1
   [Anonymous], 2005, IADIS INT C E SOC
   [Anonymous], Pricing Solutions, Pricing Management Strategy-Core Pricing Services
   [Anonymous], SAAS TRENDS 2020
   Athey S, 2019, J ECON PERSPECT, V33, P209, DOI 10.1257/jep.33.1.209
   ATTEWELL P, 1992, ORGAN SCI, V3, P1, DOI 10.1287/orsc.3.1.1
   Avlonitis GeorgeJ., 2005, J SERV MARK, V19, P47
   Balaji S, 2018, EXPT SAAS PRICING ST
   Balasubramanian S, 2015, MARKET SCI, V34, P218, DOI 10.1287/mksc.2014.0894
   Baur Aaron Wolfgang, 2015, Journal of Systems and Information Technology, V17, P229, DOI 10.1108/JSIT-03-2015-0024
   Blissfully, SAAS TRENDS 2020
   Bontis N, 2000, INTERNET RES, V10, P246, DOI 10.1108/10662240010331993
   Campbell P., 2017, ANATOMY SAAS PRICING
   Campbell P., 2019, PRICING OBJECTIVES G
   Campbell P., 2019, PRICING STRUCTURE TI
   Campbell P., 2020, PRICING STRATEGY GUI
   Campbell Patrick, 2020, COMPL GUID CHANG YOU
   Chellappa RK, 2018, MANAGE SCI, V64, P2164, DOI 10.1287/mnsc.2016.2698
   Cheng HK, 2003, DECIS SUPPORT SYST, V35, P259, DOI 10.1016/S0167-9236(02)00073-8
   Deeter Byron., 2013, Software as a Service Pricing Strategies
   Dubey A., 2007, MCKIN Q, V6, P1
   Dutt A, 2018, INF SYST E-BUS MANAG, V16, P327, DOI 10.1007/s10257-017-0356-9
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Farace D., 2010, GREY LIT LIB INFORM
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Gartner, 2020, FOR PUBL CLOUD SERV
   Goldfein J., 2015, RIGHT WAY SHIP SOFTW
   Haines C., 2019, SAAS PRICING MODELS
   He YM, 2011, 2011 4TH IEEE INTERNATIONAL CONFERENCE ON BROADBAND NETWORK AND MULTIMEDIA TECHNOLOGY (4TH IEEE IC-BNMT2011), P375, DOI 10.1109/ICBNMT.2011.6155960
   Ibrahimi A, 2017, INT J ADV COMPUT SC, V8, P434
   Ingenbleek PTM, 2013, EUR J MARKETING, V47, P27, DOI 10.1108/03090561311285448
   Karunakaran S., 2013, AUSTR S SERV RES INN, P85
   Kienzler M, 2017, J BUS RES, V78, P101, DOI 10.1016/j.jbusres.2017.05.005
   Kimes S.E., YIELD MANAGEMENT TOO, DOI [10.1016/0272-6963(89)90035-1, DOI 10.1016/0272-6963(89)90035-1]
   Kitchenham B A., 2007, Guidelines for performing systematic literature reviews in software engineering p, P65
   Kitchenham BA, 2002, INFORM SOFTWARE TECH, V44, P13, DOI 10.1016/S0950-5849(01)00204-X
   Kittlaus H, 2008, SOFTWARE PRODUCT MAN
   Kittlaus H-B, 2017, SOFTWARE PRODUCT MAN
   Laatikainen G, 2013, LECT NOTES BUS INF P, V150, P117
   Law R., 2019, 3 PSYCHOL HACKS OPTI
   Leaflink Insights, 2020, WHOL CANN PRIC GUID
   Lee I., 2019, J REVENUE PRICING MA
   Lehmann S, 2009, BUS INF SYST ENG, V1, P452, DOI 10.1007/s12599-009-0075-y
   Lei SX, 2016, PR INT ASIA CONF IND, P1063, DOI 10.2991/978-94-6239-145-1_105
   Lemkin J., 2019, 2 BETTER WAYS DO IT
   Ma D, 2008, LECT NOTES COMPUT SC, V5206, P103
   Ma D, 2015, INFORM SYST RES, V26, P360, DOI 10.1287/isre.2015.0571
   McCaffrey M., 2013, FUTURE SOFTWARE PRIC
   Meehan J., 2011, Pricing and Profitability Management
   Mell P, 2010, COMMUN ACM, V53, P50
   MORRISON SA, 1990, AM ECON REV, V80, P389
   Murphy L., 2012, CUSTOMER CENTRIC GRO
   Ndukwu D., 2018, PRICING STRATEGIES G
   OGAWA RT, 1991, REV EDUC RES, V61, P265, DOI 10.3102/00346543061003265
   Ojala A, 2016, J SYST SOFTWARE, V122, P40, DOI 10.1016/j.jss.2016.08.070
   Osterwalder A, 2005, COMMUN ASSOC INF SYS, V16
   Ozer O., 2012, OXFORD HDB PRICING M, P1, DOI [10.1093/oxfordhb/9780199543175.013.0001, DOI 10.1093/OXFORDHB/9780199543175.013.0001]
   PayMotion Marketing Team, 2015, 6 COMM SAAS PRIC MIS
   PayMotion Team, 2017, PRIC POW 9 DOES WORK
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Poulos N., 2015, BEST PRODUCT PRICING
   Poyar K., 2018, 5 SIMPLE PRICING HAC
   Product Focus Team, 2014, PRODUCT MANAGEMENT J
   Saha M., 2017, MASTERING SAAS PRICI
   Saltan A., 2018, CEUR WORKSHOP PROC, P115
   SBI Team, 2019, 5 PRIC PITF AV TRANS
   Shapiro C., 1999, Information rules: A strategic guide to the network economy
   Shukairy A., 2020, SAAS PRICING STRATEG
   Smith E., 2016, CHANGE YOUR SAAS PRI
   Soni A., 2017, International Journal of Advanced Computer Research, V7, P60
   Spruit Marco, 2012, International Journal of Strategic Information Technology and Applications, V3, P38, DOI 10.4018/jsita.2012010103
   Synergy Research Group, DEC MEG NUMB 2020
   Tunguz T., 2016, STRUCTURAL PRICING C
   Tunguz T., 2018, 10 YEARS WORTH LEARN
   Walsh M., 2019, 4 STEP PRICING PROCE
   Weitzel Tim., 2000, Reconsidering Network Effect Theory
   Weldon P., 2014, REALISING VALUE GREY
   Wirth C., 2018, AWS SUMM
   Wise W., 2016, CAN I RAISE MY PRICE
   Zavadskaya V., 2017, SAAS PRICING MODELS
   Zhang K., 2006, IEEE INT C E BUS ENG, P1
NR 87
TC 7
Z9 7
U1 6
U2 34
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2021
VL 133
AR 106510
DI 10.1016/j.infsof.2021.106510
EA JAN 2021
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA QL2TC
UT WOS:000620932900003
OA hybrid
DA 2024-07-18
ER

PT J
AU Li, WW
   Zhang, WZ
   Jia, XY
   Huang, ZQ
AF Li, Weiwei
   Zhang, Wenzhou
   Jia, Xiuyi
   Huang, Zhiqiu
TI Effort-Aware semi-Supervised just-in-Time defect prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Defect prediction; Just-in-time; Tri-training; Effort-aware
ID SOFTWARE; MODELS
AB Context: Software defect prediction is an important technique that can help practitioners allocate their quality assurance efforts. In recent years, just-in-time (JIT) defect prediction has attracted considerable interest, as it enables developers to identify risky changes at check-in time.
   Objective: Many studies have conducted research from supervised and unsupervised perspectives. A model that does not rely on label information would be preferred. However, the performance of unsupervised models proposed by previous studies in the classification scenario was unsatisfactory due to the lack of supervised information. Furthermore, most supervised models fail to outperform simple unsupervised models in the ranking scenario. To overcome this weakness, we conduct research from the semi-supervised perspective that only requires a small quantity of labeled data for training.
   Method: In this paper, we propose a semi-supervised model for JIT defect prediction named Effort-Aware TriTraining (EATT), which is an effort-aware method using a greedy strategy to rank changes. We compare EATT with the state-of-the-art supervised and unsupervised models with respect to different labeled rate.
   Results: The experimental results on six open-source projects demonstrate that EATT outperforms existing supervised and unsupervised models for effort-aware JIT defect prediction, and has similar or superior performance in classifying defect-inducing changes.
   Conclusion: The results show that EATT can not only achieve high classification accuracy as supervised models, but also offer more practical value than other compared models from the perspective of the effort needed to review changes.
C1 [Li, Weiwei] Nanjing Univ Aeronaut & Astronaut, Coll Astronaut, Nanjing 210016, Peoples R China.
   [Zhang, Wenzhou; Jia, Xiuyi] Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, Nanjing 210094, Peoples R China.
   [Huang, Zhiqiu] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 210016, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics; Nanjing University of
   Science & Technology; Nanjing University of Aeronautics & Astronautics
RP Jia, XY (corresponding author), Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, Nanjing 210094, Peoples R China.
EM liweiwei@nuaa.edu.cn; wenzhou2671@163.com; jiaxy@njust.edu.cn;
   zqhuang@nuaa.edu.cn
RI Li, Weiwei/AAC-2192-2020
OI Li, Weiwei/0000-0001-5781-5401
FU National Key R&D Program of China [2018YFB1003902]; Natural Science
   Foundation of Jiangsu Province [BK20170809, BK20191287]; National
   Natural Science Foundation of China [61906090, 61773208]; Fundamental
   Research Funds for the Central Universities [30920021131]
FX This work is jointly supported by the National Key R&D Program of China
   (No. 2018YFB1003902), the Natural Science Foundation of Jiangsu Province
   (Nos. BK20170809, BK20191287), the National Natural Science Foundation
   of China (Nos. 61906090, 61773208), and the Fundamental Research Funds
   for the Central Universities (No. 30920021131).
CR Angluin D., 1988, Machine Learning, V2, P343, DOI 10.1007/BF00116829
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   Arshad A, 2018, IEEE ACCESS, V6, P25675, DOI 10.1109/ACCESS.2018.2835304
   Bailey C, 2011, INT SPR SEM ELECT TE, P1, DOI 10.1109/ISSE.2011.6053539
   Belkin M, 2004, MACH LEARN, V56, P209, DOI 10.1023/B:MACH.0000033120.25363.1e
   Belkin M, 2006, J MACH LEARN RES, V7, P2399
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Blei DM, 2004, ADV NEUR IN, V16, P17
   Blum A., 1998, Proceedings of the Eleventh Annual Conference on Computational Learning Theory, P92, DOI 10.1145/279943.279962
   Breiman L, 1996, MACH LEARN, V24, P123, DOI 10.1007/bf00058655
   Catal C, 2009, EXPERT SYST, V26, P458, DOI 10.1111/j.1468-0394.2009.00509.x
   Catolino G, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P99, DOI 10.1109/MOBILESoft.2019.00023
   Chapelle O, 2005, P INT WORKSH ART INT, P57
   Chapelle O., 2006, SEMISUPERVISED LEARN
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   DEMPSTER AP, 1977, J ROY STAT SOC B MET, V39, P1, DOI 10.1111/j.2517-6161.1977.tb01600.x
   Eyolfson J., 2011, WORKING C MINING SOF, P153, DOI DOI 10.1145/1985441.1985464
   Fan Y., 2019, IEEE T SOFTW ENG
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Goldman S., 2000, ICML, P327
   Grandvalet Y, 2004, Advances in neural information processing systems, V17
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   He Q, 2016, P INT COMP SOFTW APP, P113, DOI 10.1109/COMPSAC.2016.193
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Jiang YA, 2011, J COMPUT SCI TECH-CH, V26, P328, DOI 10.1007/s11390-011-9439-0
   Joachims T, 1999, MACHINE LEARNING, PROCEEDINGS, P200
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kondo M, 2019, EMPIR SOFTW ENG, V24, P1925, DOI 10.1007/s10664-018-9679-5
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Lafferty J. D., 2003, P INT C MACH LEARN, P912, DOI DOI 10.5555/3041838.3041953
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   Liu JP, 2017, INT SYMP EMP SOFTWAR, P11, DOI 10.1109/ESEM.2017.8
   Lu HH, 2014, P INT COMP SOFTW APP, P416, DOI 10.1109/COMPSAC.2014.65
   Lu HH, 2012, IEEE INT CONF AUTOM, P314, DOI 10.1145/2351676.2351734
   Luo Li P., 2006, 28th International Conference on Software Engineering Proceedings, P413, DOI 10.1145/1134285.1134343
   Ma Y, 2012, ENSEMBLE MACHINE LEARNING: METHODS AND APPLICATIONS, P1, DOI 10.1007/978-1-4419-9326-7
   Ma Y, 2014, J INTELL FUZZY SYST, V27, P2473, DOI 10.3233/IFS-141220
   Matsumoto S., 2010, P 6 INT C PRED MOD S, P18
   Miller DJ, 1997, ADV NEUR IN, V9, P571
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nigam K, 2000, MACH LEARN, V39, P103, DOI 10.1023/A:1007692713085
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Qiao L, 2019, PLOS ONE, V14, DOI 10.1371/journal.pone.0211359
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Seliya N, 2007, SOFTWARE QUAL J, V15, P327, DOI 10.1007/s11219-007-9013-8
   Seliya N, 2007, IEEE T SYST MAN CY A, V37, P201, DOI 10.1109/TSMCA.2006.889473
   SHAHSHAHANI BM, 1994, IEEE T GEOSCI REMOTE, V32, P1087, DOI 10.1109/36.312897
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Syed A., 2019, INVESTIGATING PRACTI
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wohlin C., 2012, Experimentation in Software Engineering
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Young S, 2018, INT WORK REAL ARTIF, P42
   Zhang ZW, 2017, AUTOMAT SOFTW ENG, V24, P47, DOI 10.1007/s10515-016-0194-x
   Zhou DY, 2004, ADV NEUR IN, V16, P321
   Zhou ZH, 2005, IEEE T KNOWL DATA EN, V17, P1529, DOI 10.1109/TKDE.2005.186
   Zhou ZH, 2010, KNOWL INF SYST, V24, P415, DOI 10.1007/s10115-009-0209-z
   Zhu X., 2017, ENCY MACHINE LEARNIN, P1142
NR 73
TC 32
Z9 32
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2020
VL 126
AR 106364
DI 10.1016/j.infsof.2020.106364
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NT9PE
UT WOS:000573271800006
DA 2024-07-18
ER

PT J
AU Neysiani, BS
   Babamir, SM
   Aritsugi, M
AF Neysiani, Behzad Soleimani
   Babamir, Seyed Morteza
   Aritsugi, Masayoshi
TI Efficient feature extraction model for validation performance
   improvement of duplicate bug report detection in software bug triage
   systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Duplicate detection; Bug reports; Information retrieval; Feature
   selection; Dimension reduction; Natural language processing; Textual
   similarity metric; Feature extraction
ID CLASSIFICATION
AB Context: There are many duplicate bug reports in the semi-structured software repository of various software bug triage systems. The duplicate bug report detection (DBRD) process is a significant problem in software triage systems.
   Objective: The DBRD problem has many issues, such as efficient feature extraction to calculate similarities between bug reports accurately, building a high-performance duplicate detector model, and handling continuous real-time queries. Feature extraction is a technique that converts unstructured data to structured data. The main objective of this study is to improve the validation performance of DBRD using a feature extraction model.
   Method: This research focuses on feature extraction to build a new general model containing all types of features. Moreover, it introduces a new feature extractor method to describe a new viewpoint of similarity between texts. The proposed method introduces new textual features based on the aggregation of term frequency and inverse document frequency of text fields of bug reports in uni-gram and bi-gram forms. Further, a new hybrid measurement metric is proposed for detecting efficient features, whereby it is used to evaluate the efficiency of all features, including the proposed ones.
   Results: The validation performance of DBRD was compared for the proposed features and state-of-the-art features. To show the effectiveness of our model, we applied it and other related studies to DBRD of the Android, Eclipse, Mozilla, and Open Office datasets and compared the results. The comparisons showed that our proposed model achieved (i) approximately 2% improvement for accuracy and precision and more than 4.5% and 5.9% improvement for recall and Fl-measure, respectively, by applying the linear regression (LR) and decision tree (DT) classifiers and (ii) a performance of 91%-99% (average -97%) for the four metrics, by applying the DT classifier as the best classifier.
   Conclusion: Our proposed features improved the validation performance of DBRD concerning runtime performance. The pre-processing methods (primarily stemming) could improve the validation performance of DBRD slightly (up to 0.3%), but rule-based machine learning algorithms are more useful for the DBRD problem. The results showed that our proposed model is more effective both for the datasets for which state-of-the-art approaches were effective (i.e., Mozilla Firefox) and those for which state-of-the-art approaches were less effective (i.e., Android). The results also showed that the combination of all types of features could improve the validation performance of DBRD even for the LR classifier with less validation performance, which can be implemented easily for software bug triage systems. Without using the longest common subsequence (LCS) feature, which is effective but time-consuming, our proposed features could cover the effectiveness of LCS with lower time-complexity and runtime overhead. In addition, a statistical analysis shows that the results are reliable and can be generalized to other datasets or similar classifiers.
C1 [Neysiani, Behzad Soleimani; Babamir, Seyed Morteza] Univ Kashan, Dept Software Engn, Kashan, Iran.
   [Aritsugi, Masayoshi] Kumamoto Univ, Fac Adv Sci & Technol, Big Data Sci & Technol, Kumamoto, Japan.
C3 University Kashan; Kumamoto University
RP Babamir, SM (corresponding author), Univ Kashan, Dept Software Engn, Kashan, Iran.
EM babamir@kashanu.ac.ir
RI Soleimani Neysiani, Behzad/E-7990-2019; Babamir, Seyed
   Morteza/F-5497-2011; Aritsugi, Masayoshi/AEN-1937-2022
OI Soleimani Neysiani, Behzad/0000-0001-8043-4818; Babamir, Seyed
   Morteza/0000-0002-1645-4002; Aritsugi, Masayoshi/0000-0003-0861-849X
FU University of Kashan [23451]
FX The authors would like to thank the University of Kashan for supporting
   this study under Grant #23451.
CR Aggarwal K, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1821
   Aggarwal K, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P211, DOI 10.1109/SANER.2015.7081831
   Alipour A., 2013, CONTEXTUAL APPROACH, P83
   Alipour A, 2013, IEEE WORK CONF MIN S, P183, DOI 10.1109/MSR.2013.6624026
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2018, IEEE 12 INT C APPL I
   [Anonymous], 2010, LEARN WORKSH
   [Anonymous], 2013, BUG REPORTS DATASET
   [Anonymous], 2012, P ACM SIGSOFT 20 INT
   Arno Candel Viraj Parmar., 2016, Deep learning with h2o
   Banerjee S, 2017, INFORM SOFTWARE TECH, V89, P1, DOI 10.1016/j.infsof.2016.09.006
   Budhiraja A, 2018, PROC IEEE ACM INT C, P193, DOI 10.1145/3183440.3195092
   Caldas CH, 2003, AUTOMAT CONSTR, V12, P395, DOI 10.1016/S0926-5805(03)00004-9
   Cavalcanti YC, 2013, SOFTWARE QUAL J, V21, P39, DOI 10.1007/s11219-011-9164-5
   Chatterjee S, 2012, PROCEEDINGS OF THE 2012 INTERNATIONAL CONFERENCE ON COMMUNICATIONS, DEVICES AND INTELLIGENT SYSTEMS (CODLS), P73, DOI 10.1109/CODIS.2012.6422139
   Cheusheva S., 2019, DO SPEARMAN CORRELAT
   Cook D., 2016, PRACTICAL MACHINELEA
   Deshmukh J, 2017, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME.2017.69
   Ebrahimi N, 2019, INFORM SOFTWARE TECH, V113, P98, DOI 10.1016/j.infsof.2019.05.007
   Editor M.B., 2015, ADVENTURES STAT
   Embley D. W., 1998, Proceedings of the 1998 ACM CIKM International Conference on Information and Knowledge Management, P52, DOI 10.1145/288627.288641
   Embley DW, 1999, DATA KNOWL ENG, V31, P227, DOI 10.1016/S0169-023X(99)00027-0
   Gomes LAF, 2019, INFORM SOFTWARE TECH, V115, P58, DOI 10.1016/j.infsof.2019.07.009
   Fodor I., 2002, A Survey of Dimension Reduction Techniques, P1
   Frost J., 2019, HYPOTHESIS TESTING
   Ganeshpurkar A, 2018, ADV PHARM PROD DEVL, P257, DOI 10.1016/B978-0-12-814421-3.00007-5
   Gopalan Raj P., 2014, 23rd Australian Software Engineering Conference (ASWEC 2014), P104, DOI 10.1109/ASWEC.2014.31
   Han J, 2012, MOR KAUF D, P1
   Hiew L., 2006, FACULTY GRADUATE STU, P58
   Hindle A., 2016, PEERJ PREPRINTS
   Hindle A, 2016, EMPIR SOFTW ENG, V21, P368, DOI 10.1007/s10664-015-9387-3
   Hmdle A., 2018, EMPIRICAL SOFTWARE E, P1
   Ingo M., 2019, RAPIDMINER STUDIO 9
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Karegowda AG, 2010, INT J INF TECHNOL KN, V2, P271, DOI DOI 10.1007/S12031-014-0367-7
   Kim S, 2011, I C DEPEND SYS NETWO, P486, DOI 10.1109/DSN.2011.5958261
   Lazar A, 2014, P 11 WORK C MIN SOFT, P392, DOI [DOI 10.1145/2597073.2597128, 10.1145/2597073.2597128]
   Lazar A., 2014, P 11 WORKING C MININ, P308
   Liang Feng, 2013, Web Technologies and Applications. 15th Asia-Pacific Web Conference, APWeb 2013. Proceedings, P709, DOI 10.1007/978-3-642-37401-2_69
   Lin MJ, 2016, J SYST SOFTWARE, V121, P223, DOI 10.1016/j.jss.2016.02.022
   Lucko G, 2010, J CONSTR ENG M, V136, P127, DOI 10.1061/(ASCE)CO.1943-7862.0000025
   Mi Q, 2018, INFORM SOFTWARE TECH, V99, P93, DOI 10.1016/j.infsof.2018.03.006
   Nagwani N.K., 2009, Proceedings of the International Conference on Advances in Computing, Communication and Control, P202
   Nam J, 2019, INFORM SOFTWARE TECH, V112, P164, DOI 10.1016/j.infsof.2019.04.014
   Neysiani B.S., 2019, CURRENT TRENDS COMPU, V1, P128, DOI DOI 10.32474/CTCSA.2019.01.000123
   Neysiani B.S., 2016, INT C INF TECHN COMM, VVolume 2016
   Neysiani B.Soleimani, 2019, IEEE 5 INT C WEB RES
   Neysiani B. Soleimani, 2019, 24 INT C INF TECHN I
   Neysiani B. Soleimani, 2020, IEEE 6 INT C WEB SEA
   Neysiani B. Soleimani, 2019, IEEE 5 INT C KNOWL B
   Neysiani B. Soleimani, 2019, INT C CONT ISS DAT S
   Neysiani B. Soleimani, 2019, 10 INT C INF KNOWL T
   Neysiani BS, 2019, SN APPL SCI, V1, DOI 10.1007/s42452-019-1419-y
   Pazzani M. J., 2007, The Adaptive Web. Methods and Strategies of Web Personalization, P325
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Pressman R., 2014, PRACTITIONERS APPROA, V8th
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Rakha MS, 2018, IEEE T SOFTWARE ENG, V44, P1245, DOI 10.1109/TSE.2017.2755005
   Rakha MS, 2016, EMPIR SOFTW ENG, V21, P1960, DOI 10.1007/s10664-015-9404-6
   Rasmussen K., 2007, ENCY MEASUREMENT AND
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Sabor KK, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P240, DOI 10.1109/QRS.2017.35
   Sharma LA, 2015, J INVESTIG CLIN DENT, V6, P85, DOI 10.1111/jicd.12064
   Su E, 2018, PROC IEEE ACM INT C, P210, DOI 10.1145/3183440.3195100
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Sureka A, 2010, ASIA PAC SOFWR ENG, P366, DOI 10.1109/APSEC.2010.49
   Swapna D., 2016, SPREIZEN INT J SCI T, P26
   Thung F., 2014, P 29 ACM IEEE INT C, P871
   Tian Y, 2012, EUR CON SFTWR MTNCE, P385, DOI 10.1109/CSMR.2012.48
   Tsuruda A, 2015, ASIA PAC SOFWR ENG, P151, DOI 10.1109/APSEC.2015.33
   Uysal AK, 2012, KNOWL-BASED SYST, V36, P226, DOI 10.1016/j.knosys.2012.06.005
   Wang SH, 2013, IEEE WORK CONF MIN S, P247, DOI 10.1109/MSR.2013.6624036
   Wang S, 2014, PHYS REV D, V89, DOI 10.1103/PhysRevD.89.063524
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Xu YS, 2022, T EMERG TELECOMMUN T, V33, DOI 10.1002/ett.4012
   Yan M, 2016, INFORM SOFTWARE TECH, V73, P37, DOI 10.1016/j.infsof.2016.01.005
   Yang XL, 2016, PROC INT SYMP SOFTW, P127, DOI 10.1109/ISSRE.2016.33
   Zaiontz C., 2020, Real Statistics
   Zaiontz C., 2019, REAL STAT USING EXCE
   Zhang J, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-014-5241-2
   Zhou Y, 2016, J SOFTW-EVOL PROC, V28, P150, DOI 10.1002/smr.1770
   Zou J, 2016, IEICE T INF SYST, VE99D, P1762, DOI 10.1587/transinf.2016EDP7052
NR 83
TC 14
Z9 14
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2020
VL 126
AR 106344
DI 10.1016/j.infsof.2020.106344
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NT9PE
UT WOS:000573271800011
DA 2024-07-18
ER

PT J
AU Abouzahra, A
   Sabraoui, A
   Afdel, K
AF Abouzahra, Anas
   Sabraoui, Ayoub
   Afdel, Karim
TI Model composition in Model Driven Engineering: A systematic literature
   review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Model composition; Model Driven Engineering; Systematic literature
   review
ID METAMODEL; TRANSFORMATIONS; MANAGEMENT; FRAMEWORK
AB Context: Model Driven Engineering (MDE) aims to alleviate complexity and improve reusability in software development. The development of complex software implies to divide it into independent parts before then assembled. This is how the problem of model composition has become an interesting and stills an emerging topic in MDE.
   Objective: Our goal is to analyze the current state of the art in model composition in the context of Model Driven Engineering.
   Method: We use the systematic literature review based on the guidelines proposed by Biolchini et al., Brereton et al., and Kitchenham and Charters. We propose five research questions and six quality assessments.
   Results: Of the 9270 search results, 56 have been considered relevant studies. These studies have resulted in 36 primary studies.
   Conclusion: The evaluation shows that most of approaches allow more than two models as inputs of the composition, allow composing heterogeneous models and enable the tuning of the composition schema, while the important limitations are about the maturity of implementations and the lack on the management of future evolutions or backwards compatibility.
C1 [Abouzahra, Anas; Sabraoui, Ayoub; Afdel, Karim] Ibn Zohr Univ, Lab Comp Syst, Agadir, Morocco.
   [Abouzahra, Anas; Sabraoui, Ayoub; Afdel, Karim] Ibn Zohr Univ, Vis LabSiV, Agadir, Morocco.
   [Abouzahra, Anas] Altran South West, Aeronaut Space & Def Div, Digital Engn Dept, Neuilly Sur Seine, France.
C3 Ibn Zohr University of Agadir; Ibn Zohr University of Agadir
RP Abouzahra, A (corresponding author), Ibn Zohr Univ, Lab Comp Syst, Agadir, Morocco.; Abouzahra, A (corresponding author), Ibn Zohr Univ, Vis LabSiV, Agadir, Morocco.; Abouzahra, A (corresponding author), Altran South West, Aeronaut Space & Def Div, Digital Engn Dept, Neuilly Sur Seine, France.
EM anas.abouzahra@edu.uiz.ac.ma
RI Karim, AFDEL/AAC-7992-2019
OI Karim, AFDEL/0000-0002-0828-2116; Anas, Abouzahra/0000-0001-5827-3819
FU LabSIV Laboratory of Ibn Zohr University; Aeronautics, Space and Defense
   Division of Altran South West France
FX We express our respected gratitude to the LabSIV Laboratory of Ibn Zohr
   University and to the Aeronautics, Space and Defense Division of Altran
   South West France for funding this research.
CR ABADI M, 1993, ACM T PROGR LANG SYS, V15, P73, DOI 10.1145/151646.151649
   Abouzahra A., 2018, ADV SCI TECHNOLOGY E, V6, P358, DOI [10.25046/aj030644, DOI 10.25046/AJ030644]
   Abouzahra A, 2017, 2017 EUROPEAN CONFERENCE ON ELECTRICAL ENGINEERING AND COMPUTER SCIENCE (EECS), P112, DOI 10.1109/EECS.2017.30
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   Anwar Adil, 2013, Model-Based Methodologies for Pervasive and Embedded Software. 8th International Workshop, MOMPES 2012. Revised Papers, P1, DOI 10.1007/978-3-642-38209-3_1
   Anwar A, 2011, 2011 16TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P188, DOI 10.1109/ICECCS.2011.26
   Barais O, 2008, SEVENTH INTERNATIONAL CONFERENCE ON COMPOSITION-BASED SOFTWARE SYSTEMS, PROCEEDINGS, P43, DOI 10.1109/ICCBSS.2008.12
   BATINI C, 1986, COMPUT SURV, V18, P323, DOI 10.1145/27633.27634
   Berg H., 2012, INT WORKSHOP SYSTEM, P160, DOI [10.1007/978-3-642-36757-1_10, DOI 10.1007/978-3-642-36757-1_10]
   Berg H, 2015, COMM COM INF SC, V580, P172, DOI 10.1007/978-3-319-27869-8_10
   Bernstein PA, 2000, SIGMOD REC, V29, P55, DOI 10.1145/369275.369289
   BEZIVIN J, 2004, EUR J INFORM PROF, V5, P21
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4066, P346
   Bill R, 2017, SLE'17: PROCEEDINGS OF THE 10TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, P67, DOI 10.1145/3136014.3136037
   Biolchini J., 2005, Systematic review in software engineering(05)
   Boeker M, 2013, BMC MED RES METHODOL, V13, DOI 10.1186/1471-2288-13-131
   Boronat A, 2007, ELECTRON NOTES THEOR, V166, P5, DOI 10.1016/j.entcs.2006.06.013
   Boubakir M, 2016, LECT NOTE NETW SYST, P327, DOI 10.1007/978-3-319-33410-3_23
   Bowles J, 2015, COMM COM INF SC, V506, P100, DOI 10.1007/978-3-319-25156-1_7
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Cottenier T, 2006, LECT NOTES COMPUT SC, V3844, P100
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Debreceni C, 2016, LECT NOTES COMPUT SC, V9633, P104, DOI 10.1007/978-3-662-49665-7_7
   Del Fabro MD, 2009, SOFTW SYST MODEL, V8, P305, DOI 10.1007/s10270-008-0094-z
   Del Fabro MD, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P963, DOI 10.1145/1244002.1244215
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   El Marzouki N, 2017, PROCEDIA COMPUT SCI, V104, P564, DOI 10.1016/j.procs.2017.01.173
   Elmarzouki N, 2016, 2016 INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY FOR ORGANIZATIONS DEVELOPMENT (IT4OD)
   Estublier J, 2005, 2005 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P31, DOI 10.1109/ASWEC.2005.25
   Estublier J, 2005, LECT NOTES COMPUT SC, V3713, P69, DOI 10.1007/11557432_6
   Felix Schwgerl., 2013, Proceedings of the workshop on ACadeMics Tooling with Eclipse, ACME@ECOOP 2013, Montpellier, France, July 2, 2013, p2:1, DOI DOI 10.1145/2491279.2491281
   Fleurey F, 2008, LECT NOTES COMPUT SC, V5002, P7
   Fuentes L, 2009, LECT NOTES COMPUT SC, V5560, P1, DOI 10.1007/978-3-642-03764-1_1
   Guerra E, 2013, SOFTW SYST MODEL, V12, P145, DOI 10.1007/s10270-011-0192-1
   Haber A, 2015, COMM COM INF SC, V580, P45, DOI 10.1007/978-3-319-27869-8_3
   Halpin T., 2015, Object-Role Modeling Fundamentals: A Practical Guide to Data Modeling with ORM
   Herrmann C, 2007, LECT NOTES COMPUT SC, V4530, P99
   Dam HK, 2016, J SYST SOFTWARE, V112, P137, DOI 10.1016/j.jss.2015.06.044
   Hovsepyan A, 2009, LECT NOTES BUS INF P, V33, P116
   Jézéquel JM, 2008, SOFTW SYST MODEL, V7, P209, DOI 10.1007/s10270-008-0080-5
   Jurack S, 2009, LECT NOTES COMPUT SC, V5795, P226, DOI 10.1007/978-3-642-04425-0_17
   Kienzle J, 2006, LECT NOTES COMPUT SC, V3844, P91
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kolovos D S., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering. BigMDE'13, V2, P1
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4199, P215
   Kramer Max E., 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P108, DOI 10.1007/978-3-642-38883-5_12
   Mansoor U, 2015, J SYST SOFTWARE, V103, P423, DOI 10.1016/j.jss.2014.11.043
   Meyers B., 2012, P 6 INT WORKSH MULT, P31, DOI [10.1145/2508443.2508449, DOI 10.1145/2508443.2508449]
   Mussbacher G, 2014, LECT NOTES COMPUT SC, V8767, P183, DOI 10.1007/978-3-319-11653-2_12
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Pottinger R.A., 2003, P 29 VLDB C, P826, DOI DOI 10.1016/B978-012722442-8/50081-1
   Rabbi F., 2017, INT C MODEL DRIVEN E, P198
   Rabbi F, 2017, MODELSWARD: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P41, DOI 10.5220/0006121400410052
   Rittgen P, 2010, INT J INF SYST MODEL, V1, P1, DOI 10.4018/jismd.2010070101
   Roychoudhury S, 2011, LECT NOTES COMPUT SC, V6580, P1, DOI 10.1007/978-3-642-22031-9_1
   Sabetzadeh Mehrdad, 2007, P INT WORKSH MOD SOF, P2, DOI [10.1109/MISE.2007.4, DOI 10.1109/MISE.2007.4]
   Sánchez P, 2008, LECT NOTES COMPUT SC, V5301, P766, DOI 10.1007/978-3-540-87875-9_53
   Santiago I, 2012, INFORM SOFTWARE TECH, V54, P1340, DOI 10.1016/j.infsof.2012.07.008
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Schmidt M, 2009, 2009 ICSE WORKSHOP ON COMPARISON AND VERSIONING OF SOFTWARE MODELS, P13, DOI 10.1109/CVSM.2009.5071716
   Schwägerl F, 2015, SCI COMPUT PROGRAM, V113, P51, DOI 10.1016/j.scico.2015.02.008
   Strüber D, 2013, LECT NOTES COMPUT SC, V7793, P6, DOI 10.1007/978-3-642-37057-1_2
   Weisemöller I, 2008, LECT NOTES COMPUT SC, V5301, P386, DOI 10.1007/978-3-540-87875-9_28
   Westfechtel B., 2010, P 1 INT WORKSH MOD C, P31, DOI DOI 10.1145/1826147.1826155
   Westfechtel B, 2014, SOFTW SYST MODEL, V13, P757, DOI 10.1007/s10270-012-0279-3
   Whittle J, 2009, LECT NOTES COMPUT SC, V5560, P191, DOI 10.1007/978-3-642-03764-1_6
   Yie A, 2010, LECT NOTES COMPUT SC, V6002, P225
   Yu IC, 2015, COMM COM INF SC, V580, P133, DOI 10.1007/978-3-319-27869-8_8
NR 82
TC 9
Z9 9
U1 1
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2020
VL 125
AR 106316
DI 10.1016/j.infsof.2020.106316
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LT0FE
UT WOS:000536752100002
DA 2024-07-18
ER

PT J
AU Di Martino, S
   Ferrucci, F
   Gravino, C
   Sarro, F
AF Di Martino, Sergio
   Ferrucci, Filomena
   Gravino, Carmine
   Sarro, Federica
TI Assessing the effectiveness of approximate functional sizing approaches
   for effort estimation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software effort estimation; Functional size measures; Approximate sizing
   approaches; FPA; COSMIC
ID FUNCTION POINT ANALYSIS; EFFORT PREDICTION; EFFECT SIZE; SOFTWARE;
   SYSTEMS; SEARCH; DESIGN
AB Context: Functional Size Measurement (FSM) methods, like Function Points Analysis (FPA) or COSMIC, are well-established approaches to estimate software size. Several approximations of these methods have been recently proposed as they require less time/information to be applied, however their effectiveness for effort prediction is not known.
   Objective: The effectiveness of approximated functional size measures for estimating the development effort is a key open question, since an approximate sizing approach may miss to capture factors affecting the effort. Therefore, we empirically investigated the use of approximate FPA and COSMIC sizing approaches, also compared with their standard versions, for effort estimation.
   Method: We measured 25 industrial software projects realised by a single company by using FPA, COSMIC, two approximate sizing approaches proposed by IFPUG for FPA (i.e. High Level and Indicative FPA), and three approximate sizing approaches proposed by the COSMIC organisation for COSMIC (i.e. Average Functional Process, Fixed Size Classification, and Equal Size Band). Then we investigated the quality of the regression models built using the obtained measures to estimate the development effort.
   Results: Models based on High Level FPA are effective, providing a prediction accuracy comparable to the one of the original FPA, while those based on the Indicative FPA method show poor estimation accuracy. Models based on COSMIC approximate sizing methods are also quite effective, in particular those based on the Equal Size Band approximation provided an accuracy similar to the one of standard COSMIC.
   Conclusion: Project managers should be aware that predictions based on High Level FPA and standard FPA can be similar, making this approximation very interesting and effective, while Indicative FPA should be avoided. COSMIC approximations can also provide accurate effort estimates, nevertheless, the Fixed Size Classification and Equal Size Band approaches introduce subjectivity in the measurement.
C1 [Di Martino, Sergio] Univ Naples Federico II, Dept DIETI, Naples, Italy.
   [Ferrucci, Filomena; Gravino, Carmine] Univ Salerno, Dept Comp Sci, Fisciano, Italy.
   [Sarro, Federica] UCL, Dept Comp Sci, London, England.
C3 University of Naples Federico II; University of Salerno; University of
   London; University College London
RP Sarro, F (corresponding author), UCL, Dept Comp Sci, London, England.
EM sergio.dimartino@unina.it; fferrucci@unisa.it; gravino@unisa.it;
   f.sarro@ucl.ac.uk
RI Di Martino, Sergio/F-2602-2012
OI Di Martino, Sergio/0000-0002-1019-9004; FERRUCCI,
   Filomena/0000-0002-0975-8972; Sarro, Federica/0000-0002-9146-442X;
   Gravino, Carmine/0000-0002-4394-9035
CR Abrahao S, 2018, INFORM SOFTWARE TECH, V104, P144, DOI 10.1016/j.infsof.2018.07.012
   ABRAN A, 1994, J SYST SOFTWARE, V25, P171, DOI 10.1016/0164-1212(94)90004-3
   Abran A., 2015, COSMIC FUNCTIONAL SI
   Abualkishik AZ, 2017, INFORM SOFTWARE TECH, V86, P1, DOI 10.1016/j.infsof.2017.02.005
   Albrech A., 1979, PROC JOINT SHAREGUID, P83
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], P SMEF 07
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2007, P 6 INT WORLD WID WE
   [Anonymous], [No title captured]
   [Anonymous], 2007, 1414312007 ISOIEC
   [Anonymous], 1992, MATH STAT
   [Anonymous], [No title captured]
   BREUSCH TS, 1979, ECONOMETRICA, V47, P1287, DOI 10.2307/1911963
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   Briand LionelC., RESOURCE ESTIMATION
   Castro Sotos A.E., 2009, STAT ED RES J, V8
   Conte D., 1986, SOFTWARE ENG METRICS
   Corazza A, 2013, EMPIR SOFTW ENG, V18, P506, DOI 10.1007/s10664-011-9187-3
   Corazza A., 2010, Proceedings of the 6th international conference on predictive models in software engineering, P4
   Costagliola G, 2006, J WEB ENG, V5, P93
   De Marco Lucia, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P349, DOI 10.1109/SEAA.2013.41
   De Marco L, 2014, PROC INT CONF CLOUD, P42
   De Vito G, 2014, EUROMICRO CONF PROC, P69, DOI 10.1109/SEAA.2014.30
   del Bianco V, 2014, INFORM SOFTWARE TECH, V56, P1253, DOI 10.1016/j.infsof.2014.04.009
   Devore J., 1999, APPL STAT ENG SCI
   Di Martino Sergio, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P324
   Di Martino S, 2016, INFORM SOFTWARE TECH, V72, P90, DOI 10.1016/j.infsof.2015.12.001
   Feng Ge, 2016, Shanghai Arch Psychiatry, V28, P355, DOI 10.11919/j.issn.1002-0829.216084
   Ferrucci Filomena, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P89, DOI 10.1109/SSBSE.2010.20
   Ferrucci F, 2010, EUROMICRO CONF PROC, P350, DOI 10.1109/SEAA.2010.59
   Ferrucci F, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P441, DOI 10.1109/SEAA.2008.60
   Ferrucci F., 2014, Softw. Proj. Manag. Chang. World, P373
   Ferrucci F., 2012, PROC 8 INT C PREDICT, P29
   Ferrucci F, 2015, LECT NOTES COMPUT SC, V9459, P271, DOI 10.1007/978-3-319-26844-6_20
   Ferrucci F, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P365, DOI 10.1109/SEAA.2015.23
   Ferrucci F, 2014, EUROMICRO CONF PROC, P293, DOI 10.1109/SEAA.2014.76
   Ferrucci F, 2011, LECT NOTES COMPUT SC, V6956, P274, DOI 10.1007/978-3-642-23716-4_28
   Ferrucci F, 2009, LECT NOTES COMPUT SC, V5891, P307, DOI 10.1007/978-3-642-05415-0_22
   Ferrucci F, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P306, DOI 10.1109/SEAA.2009.47
   Freund Rudolf J, 2006, Regression Analysis
   Gencel C, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363106
   Jones Capers., 2008, A New Business Model For Function Point Metrics
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kitchenham B, 1997, IEEE SOFTWARE, V14, P29, DOI 10.1109/MS.1997.582972
   Kitchenham B. A., 2004, "8th Internation Conference on Empirical Assessment in Software Engineering (EASE 2004)" Workshop - 26th International Conference on Software Engineering, P47, DOI 10.1049/ic:20040398
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Langdon WB, 2016, INFORM SOFTWARE TECH, V73, P16, DOI 10.1016/j.infsof.2016.01.003
   Lavazza L, 2019, INFORM SOFTWARE TECH, V109, P108, DOI 10.1016/j.infsof.2019.02.002
   Lavazza L, 2013, INFORM SOFTWARE TECH, V55, P1796, DOI 10.1016/j.infsof.2013.04.003
   MAXWELL K, 2002, SOFTWARE QUALITY I S
   Meli R., 2015, INT C ADV TRENDS SOF
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Mendes E., 2002, IEE Proceedings-Software, V149, P86, DOI 10.1049/ip-sen:20020337
   Mendes E., 2014, 18 INT C EVALUATION, P1, DOI [10.1145/2601248.2601284, DOI 10.1145/2601248.2601284]
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   Minku L, 2015, INT SYMP EMP SOFTWAR, P172, DOI 10.1109/ESEM.2015.7321199
   Morrow P, 2014, SOFTWARE QUAL J, V22, P611, DOI 10.1007/s11219-013-9215-1
   Myrtveit I, 2012, EMPIR SOFTW ENG, V17, P23, DOI 10.1007/s10664-011-9183-7
   Neumann Geoffrey, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P318, DOI 10.1007/978-3-319-22183-0_29
   Popovic J, 2012, COMPUT SCI INF SYST, V9, P455, DOI 10.2298/CSIS110316068P
   ROYSTON JP, 1982, J R STAT SOC C-APPL, V31, P115
   Sarro F, 2012, P 27 ANN ACM S APPL, P1221, DOI DOI 10.1145/2245276.2231968
   Sarro F, 2019, LECT NOTES COMPUT SC, V11664, P3, DOI 10.1007/978-3-030-27455-9_1
   Sarro F, 2018, INT REQUIR ENG CONF, P76, DOI 10.1109/RE.2018.00018
   Sarro F, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3234940
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Sommerville I., 2010, SOFTWARE ENG
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   SYMONS CR, 1988, IEEE T SOFTWARE ENG, V14, P2, DOI 10.1109/32.4618
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wilkie FG, 2011, INFORM SOFTWARE TECH, V53, P1236, DOI 10.1016/j.infsof.2011.05.008
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 86
TC 10
Z9 10
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2020
VL 123
AR 106308
DI 10.1016/j.infsof.2020.106308
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK1XD
UT WOS:000530651200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Oliveira, R
   de Mello, R
   Fernandes, E
   Garcia, A
   Lucena, C
AF Oliveira, Roberto
   de Mello, Rafael
   Fernandes, Eduardo
   Garcia, Alessandro
   Lucena, Carlos
TI Collaborative or individual identification of code smells? On the
   effectiveness of novice and professional developers
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code smell identification; Collaboration; Empirical study
ID BAD
AB Context: The code smell identification aims to reveal code structures that harm the software maintainability. Such identification usually requires a deep understanding of multiple parts of a system. Unfortunately, developers in charge of identifying code smells individually can struggle to identify, confirm, and refute code smell suspects. Developers may reduce their struggle by identifying code smells in pairs through the collaborative smell identification.
   Objective: The current knowledge on the effectiveness of collaborative smell identification remains limited. Some scenarios were not explored by previous work on effectiveness of collaborative versus individual smell identification. In this paper, we address a particular scenario that reflects various organizations worldwide. We also compare our study results with recent studies.
   Method: We have carefully designed and conducted a controlled experiment with 34 developers. We exploited a particular scenario that reflects various organizations: novices and professionals inspecting systems they are unfamiliar with. We expect to minimize some critical threats to validity of previous work. Additionally, we interviewed 5 project leaders aimed to understand the potential adoption of the collaborative smell identification in practice.
   Results: Statistical testing suggests 27% more precision and 36% more recall through the collaborative smell identification for both novices and professionals. These results partially confirm previous work in a not previously exploited scenario. Additionally, the interviews showed that leaders would strongly adopt the collaborative smell identification. However, some organization and tool constraints may limit such adoption. We derived recommendations to organizations concerned about adopting the collaborative smell identification in practice.
   Conclusion: We recommend that organizations allocate novice developers for identifying code smells in collaboration. Thus, these organizations can promote the knowledge sharing and the correct smell identification. We also recommend the allocation of developers that are unfamiliar with the system for identifying smells. Thus, organizations can allocate more experience developers in more critical tasks.
C1 [Oliveira, Roberto; de Mello, Rafael; Fernandes, Eduardo; Garcia, Alessandro; Lucena, Carlos] Pontifical Catholic Univ Rio de Janeiro PUC Rio, Rio De Janeiro, Brazil.
   [Oliveira, Roberto] State Univ Goias UEG, Posse, GO, Brazil.
C3 Pontificia Universidade Catolica do Rio de Janeiro
RP Oliveira, R (corresponding author), Pontifical Catholic Univ Rio de Janeiro PUC Rio, Rio De Janeiro, Brazil.; Oliveira, R (corresponding author), State Univ Goias UEG, Posse, GO, Brazil.
EM roberto.oliveira@ueg.br; rmaiani@inf.puc-rio.br;
   emfernandes@inf.puc-rio.br; afgarcia@inf.puc-rio.br;
   lucena@inf.puc-rio.br
RI de Mello, Rafael/AAF-9910-2021; Fernandes, Eduardo/F-8555-2017; Lucena,
   Carlos/GQP-2277-2022
OI de Mello, Rafael/0000-0002-9877-3946; Fernandes,
   Eduardo/0000-0002-1222-2247; Oliveira, Roberto/0000-0003-3153-4761
FU CNPq [434969/2018-4, 312149/2016-6, 409536/2017-2]; CAPES/Procad
   [175956]; FAPERJ [22520-7/2016]
FX This work was partially funded by CNPq (grants 434969/2018-4,
   312149/2016-6, and 409536/2017-2), CAPES/Procad (grant 175956), and
   FAPERJ (grant 22520-7/2016).
CR [Anonymous], 2012, P 11 ANN INT C ASP O
   [Anonymous], 2018, 14 INT C INF TECHN N
   [Anonymous], J SOFT ENG RES DEV
   [Anonymous], 11 BRAZ S SOFTW COMP
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 31 BRAZ S SOFTW ENG
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2016, SBSI 2016
   [Anonymous], 7 INT WORKSH OBJ OR
   [Anonymous], 2015, Journal of Software Engineering Research and Development, DOI [10.1186/s40411-015-0023-0, DOI 10.1186/S40411-015-0023-0]
   Arcoverde R., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P90, DOI 10.1109/RSSE.2012.6233419
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Begel A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P120
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   Bibiano AC, 2019, INT SYMP EMP SOFTWAR, P31
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Braught G, 2010, SIGCSE 10: PROCEEDINGS OF THE 41ST ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P249
   BROWN MB, 1974, J AM STAT ASSOC, V69, P364, DOI 10.2307/2285659
   Cedrim D, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P465, DOI 10.1145/3106237.3106259
   Chávez A, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P74, DOI 10.1145/3131151.3131171
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   de Mello RM, 2017, INT SYMP EMP SOFTWAR, P68, DOI 10.1109/ESEM.2017.13
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Fernandes E, 2019, 2019 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON REFACTORING (IWOR 2019), P9, DOI 10.1109/IWoR.2019.00009
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Fernandes E, 2017, LECT NOTES COMPUT SC, V10221, P48, DOI 10.1007/978-3-319-56856-0_4
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma Erich., 1994, DESIGN PATTERNS
   Garcia J, 2009, LECT NOTES COMPUT SC, V5581, P146, DOI 10.1007/978-3-642-02351-4_10
   Hayata T., 2011, 2011 IEEE International Conference on Service Operations and Logistics and Informatics (SOLI), P285, DOI 10.1109/SOLI.2011.5986572
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Lapkova D, 2015, 2015 38TH INTERNATIONAL CONFERENCE ON TELECOMMUNICATIONS AND SIGNAL PROCESSING (TSP), P486, DOI 10.1109/TSP.2015.7296310
   Macia I, 2012, EUR CON SFTWR MTNCE, P277, DOI 10.1109/CSMR.2012.35
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Oizumi W, 2016, PROC INT CONF SOFTW, P440, DOI 10.1145/2884781.2884868
   Oliveira A, 2019, P BRAZ SYMP SOFTW, P83, DOI 10.1145/3357141.3357142
   Oliveira J, 2019, INFORM SOFTWARE TECH, V110, P136, DOI 10.1016/j.infsof.2019.03.002
   Oliveira R, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P33, DOI 10.1109/ICSE-SEIP.2017.7
   Oliveira R, 2016, P BRAZ SYMP SOFTW, P61, DOI 10.1109/SBCARS.2016.18
   Paiva Thanis, 2017, Journal of Software Engineering Research and Development, V5, DOI 10.1186/s40411-017-0041-1
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Conceicao CFR, 2014, 2014 9TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P306, DOI 10.1109/QUATIC.2014.49
   Rosenberg J, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P137, DOI 10.1109/METRIC.1997.637174
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Sousa L, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P921, DOI 10.1145/3180155.3180239
   Tsantalis N, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P4, DOI 10.1109/SANER.2018.8330192
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Vidal S, 2019, SCI COMPUT PROGRAM, V182, P64, DOI 10.1016/j.scico.2019.07.003
   Vidal S, 2016, P BRAZ SYMP SOFTW, P41, DOI 10.1109/SBCARS.2016.11
   Wohlin C., 2012, Experimentation in Software Engineering
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Zaouia S, 2007, NATO SCI PEACE SEC B, P239, DOI 10.1007/978-1-4020-6380-0_17
NR 58
TC 10
Z9 12
U1 1
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2020
VL 120
AR 106242
DI 10.1016/j.infsof.2019.106242
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KM6FK
UT WOS:000514233800004
DA 2024-07-18
ER

PT J
AU Nam, J
   Wang, S
   Xi, Y
   Tan, L
AF Nam, Jaechang
   Wang, Song
   Xi, Yuan
   Tan, Lin
TI A bug finder refined by a large set of open-source projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Static bug finder; bug detection rules; bug patterns
AB Context: Static bug detection techniques are commonly used to automatically detect software bugs. The biggest obstacle to the wider adoption of static bug detection tools is false positives, i.e., reported bugs that developers do not have to act on.
   Objective: The objective of this study is to reduce false positives resulting from static bug detection tools and to detect new bugs by exploring the effectiveness of a feedback-based bug detection rule design.
   Method: We explored a large number of software projects and applied an iterative feedback-based process to design bug detection rules. The outcome of the process is a set of ten bug detection rules, which we used to build a feedback-based bug finder, FEEFIN. Specifically, we manually examined 1622 patches to identify bugs and fix patterns, and implement bug detection rules. Then, we refined the rules by repeatedly using feedback from a large number of software projects.
   Results: We applied FEEFIN to the latest versions of the 1880 projects on GitHub to detect previously unknown bugs. FEEFIN detected 98 new bugs, 63 of which have been reviewed by developers: 57 were confirmed as true bugs, and 9 were confirmed as false positives. In addition, we investigated the benefits of our FEEFIN process in terms of new and improved bug patterns. We verified our bug patterns with four existing tools, namely PMD, FindBugs, Facebook Infer, and Google Error Prone, and found that our FeeFin process has the potential to identify new bug patterns and also to improve existing bug patterns.
   Conclusion: Based on the results, we suggest that static bug detection tool designers identify new bug patterns by mining real-world patches from a large number of software projects. In addition, the FEEFIN process is helpful in mitigating false positives generated from existing tools by refining their bug detection rules.
C1 [Nam, Jaechang] Handong Global Univ, Pohang, Gyeongsangbuk D, South Korea.
   [Nam, Jaechang; Wang, Song; Xi, Yuan; Tan, Lin] Univ Waterloo, Waterloo, ON, Canada.
C3 Handong Global University; University of Waterloo
RP Nam, J (corresponding author), Handong Global Univ, Pohang, Gyeongsangbuk D, South Korea.
EM jcnam@handong.edu; song.wang@uwaterloo.ca; y25xi@uwaterloo.ca;
   lintan@uwaterloo.ca
OI Tan, Lin/0000-0002-6690-8332; Nam, Jaechang/0000-0003-1678-2185
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Brain Korea 21 PLUS project for POSTECH Computer Science & Engineering
   Institute; National Research Foundation of Korea (NRF) - Korea
   government (MSIT) [2018R1C1B6001919]
FX This work was supported by the Natural Sciences and Engineering Research
   Council of Canada (NSERC), and partially supported by Brain Korea 21
   PLUS project for POSTECH Computer Science & Engineering Institute, and
   the National Research Foundation of Korea (NRF) grant funded by the
   Korea government (MSIT) (no. 2018R1C1B6001919).
CR Aftandilian E., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P14, DOI 10.1109/SCAM.2012.28
   Aggarwal A, 2006, P INT COMP SOFTW APP, P343
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   [Anonymous], 2010, P 19 INT S SOFTW TES, DOI [10.1145/1831708.1831723, DOI 10.1145/1831708.1831723]
   [Anonymous], 2010, P 3 INT C SOFTW TEST
   [Anonymous], 2007, 6th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), DOI DOI 10.1145/1287624.1287632
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Baca D, 2008, PLAS'08: PROCEEDINGS OF THE ACM SIGPLAN THIRD WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY, P79, DOI 10.1145/1375696.1375707
   Boogerd C, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P149
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Chen BY, 2017, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.2017.15
   Chen P., INTFINDER AUTOMATICA, P336, DOI [10.1007/978-3-642-11145-7_26, DOI 10.1007/978-3-642-11145-7_26]
   Csallner C, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1348250.1348254
   Engler D., 2001, Operating Systems Review, V35, P57, DOI 10.1145/502059.502041
   Fluri B, 2006, INT C PROGRAM COMPRE, P35, DOI 10.1109/ICPC.2006.16
   Habib A., 2018, ASE 2018
   Hanam Q., 2014, P 11 WORKING C MININ, P152
   Hanam Q, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P144, DOI 10.1145/2950290.2950308
   Heckman S, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P161, DOI 10.1109/ICST.2009.45
   Heckman S, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P41
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kim S., 2007, 4 INT WORKSHOP MININ, P27, DOI DOI 10.1109/MSR.2007.26
   Kim S., 2007, EUROPEAN SOFTWARE EN, P45
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kremenek T., 2004, Software Engineering Notes, V29, P83, DOI 10.1145/1041685.1029909
   Lee S., 2019, 2019 INT C SOFTW TES
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Liang B, 2016, PROC INT CONF SOFTW, P333, DOI 10.1145/2884781.2884870
   Livshits V.B., 2005, ESEC SIGSOFT FSE, P296, DOI [DOI 10.1145/1095430.1081754, DOI 10.1145/1081706.1081754]
   Nam J, 2018, PROC IEEE ACM INT C, P315, DOI 10.1145/3183440.3194987
   Negara S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P803, DOI 10.1145/2568225.2568317
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Ruthruff JR, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P341, DOI 10.1145/1368088.1368135
   Sadowski C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P598, DOI 10.1109/ICSE.2015.76
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Wang S, 2016, IEEE INT CONF AUTOM, P708, DOI 10.1145/2970276.2970341
   Yüksel U, 2013, PROC IEEE INT CONF S, P532, DOI 10.1109/ICSM.2013.89
NR 43
TC 8
Z9 8
U1 0
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2019
VL 112
BP 164
EP 175
DI 10.1016/j.infsof.2019.04.014
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IA9TG
UT WOS:000469899100012
DA 2024-07-18
ER

PT J
AU Bischoff, V
   Farias, K
   Gonçales, LJ
   Barbosa, JLV
AF Bischoff, Vinicius
   Farias, Kleinner
   Goncales, Lucian Jose
   Victoria Barbosa, Jorge Luis
TI Integration of feature models: A systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Feature models; Model integration; Systematic mapping study
AB Context The integration of feature models has been widely investigated in the last decades, given its pivotal role for supporting the evolution of software product lines. Unfortunately, academia and industry have overlooked the production of a thematic analysis of the current literature. Hence, a thorough understanding of the state-of-the-art works remains still limited.
   Objective: This study seeks to create a panoramic view of the current literature to pinpoint gaps and supply insights of this research field.
   Method: A systematic mapping study was performed based on well-established empirical guidelines for answering six research questions. In total, 47 primary studies were selected by applying a filtering process from a sample of 2874 studies.
   Results: The main results obtained are: (1) most studies use a generic notation (68.09%, 32/47) for representing feature models; (2) only one study (2%, 1/47) compares feature models based on their syntactic and semantics; (3) there is no preponderant use of a particular integration technique in the selected studies; (4) most studies (70%, 33/47) provide a product-based strategy to evaluate the integrated feature models; (5) majority (70%, 33/47) automates the integration process; and (6) most studies (90%, 42/47) propose techniques, rather than focusing on producing practical knowledge derived from empirical studies.
   Conclusion: The results were encouraging and suggest that integration of feature models is still an evolving research area. This study provides insightful information for the definition of a more ambitious research agenda. Lastly, empirical studies exploring the required effort to apply the current integration techniques in real-world settings are highly recommended in future work.
C1 [Bischoff, Vinicius; Farias, Kleinner; Goncales, Lucian Jose; Victoria Barbosa, Jorge Luis] Univ Vale Rio dos Sinos Unisinos, Grad Program Appl Comp PPGCA, Sao Leopoldo, RS, Brazil.
C3 Universidade do Vale do Rio dos Sinos (Unisinos)
RP Farias, K (corresponding author), Univ Vale Rio dos Sinos Unisinos, Grad Program Appl Comp PPGCA, Sao Leopoldo, RS, Brazil.
EM viniciusbischof@edu.unisinos.br; kleinnerfarias@unisinos.br;
   lucianj@edu.unisinos.br; jbarbosa@unisinos.br
RI Barbosa, Jorge/L-9389-2013; Farias, Kleinner/ABH-4944-2020
OI Barbosa, Jorge/0000-0002-0358-2056; Farias,
   Kleinner/0000-0003-1891-3580; Goncales, Lucian/0000-0001-7367-9710
FU Conselho Nacional de Desenvolvimento Cientifico e Tecnologico (CNPq) -
   Brasil [14/2013, 480468/2013-3]; Coordenacao de Aperfeicoamento de
   Pessoal de Nivel Superior - Brasil (CAPES) [001]
FX This work was funded by Conselho Nacional de Desenvolvimento Cientifico
   e Tecnologico (CNPq) - Universal Project 14/2013 (grant number
   480468/2013-3) Brasil. This study was also financed in part by the
   Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior - Brasil
   (CAPES) - Finance Code 001.
CR Acher Mathieu, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P629, DOI 10.1007/978-3-642-31095-9_41
   Acher Mathieu, 2009, Software Language Engineering. Second International Conference, SLE 2009. Revised Selected Papers, P62
   Acher M, 2012, P 11 ANN INT C ASP O, P1, DOI [10.1145/2162049.2162051, DOI 10.1145/2162049.2162051]
   Acher M, 2013, LECT NOTES COMPUT SC, V8107, P352, DOI 10.1007/978-3-642-41533-3_22
   Acher M, 2010, LECT NOTES COMPUT SC, V6144, P17, DOI 10.1007/978-3-642-14046-4_2
   Acher M, 2010, LECT NOTES COMPUT SC, V6138, P3, DOI 10.1007/978-3-642-13595-8_3
   Andersen N., 2012, P 16 INT SOFTWARE PR, V1, P106, DOI DOI 10.1145/2362536
   [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], 2015, P 19 INT C SOFTW PRO, DOI DOI 10.1145/2791060.2791108
   [Anonymous], P 7 INT WORKSH VAR M
   Aoumeur N, 2009, 16TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P138, DOI 10.1109/ECBS.2009.48
   Apel S., 2014, DAGSTUHL REP, V4
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Asadi M., 2012, Software Product Line ., VII, P36
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Batory D., 2008, P GEN PROGR COMP ENG, P35
   Batory D, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P13
   Batory D, 2006, COMMUN ACM, V49, P45, DOI 10.1145/1183236.1183264
   Becan G, 2015, SPLC, P1, DOI [10.1145/2791060.2791068, DOI 10.1145/2791060.2791068]
   Benavides David, 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P160, DOI 10.1007/978-3-642-38977-1_11
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Beuche D., 2007, Overload J, V78, P5
   Brun Y., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), P168, DOI [10.1145/2025113.2025139, DOI 10.1145/2025113.2025139]
   Buhne S., 2005, SOFTW PROD LINE ENG, P193
   Capilla R., 2001, INT WORKSH SOFTW PRO, V2290, P319
   Clarke D., 2010, P 1 INT WORKSH FORM
   Classen A, 2008, LECT NOTES COMPUT SC, V4961, P16, DOI 10.1007/978-3-540-78743-3_2
   Czarnecki K, 2002, LECT NOTES COMPUT SC, V2487, P156
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Czarnecki K., 2000, GENERATIVE PROGRAMMI, V16
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   Dao TM, 2010, LECT NOTES COMPUT SC, V6287, P377, DOI 10.1007/978-3-642-15579-6_26
   Dehmouch I., 2014, 2014 IEEE 8 INT C RE, P1
   Eichelberger Holger, 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P32, DOI 10.1007/978-3-642-38977-1_3
   Eriksson M, 2005, LECT NOTES COMPUT SC, V3714, P33
   Farias Kleinner, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P676, DOI 10.1007/978-3-642-33666-9_43
   Farias K., 2015, 27 INT C SOFTW ENG K, P656
   Farias K., 2012, THESIS
   Farias K, 2015, SOFTW SYST MODEL, V14, P1349, DOI 10.1007/s10270-014-0408-2
   Farias K, 2014, SOFTW SYST MODEL, V13, P1473, DOI 10.1007/s10270-012-0308-2
   Farias K, 2013, LECT NOTES COMPUT SC, V8107, P639, DOI 10.1007/978-3-642-41533-3_39
   Fernández-Sáez AM, 2013, INFORM SOFTWARE TECH, V55, P1119, DOI 10.1016/j.infsof.2012.12.006
   Fleurey F., 2009, TECHNICAL REPORT, Vv
   Griss ML, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P76, DOI 10.1109/ICSR.1998.685732
   Guo JM, 2010, LECT NOTES COMPUT SC, V6287, P451
   Hartmann Herman., 2009, Proceedings of the 13th International Software Product Line Conference, P191
   Hein A, 2000, SPRINGER INT SER ENG, V576, P47
   Höfner P, 2011, SOFTW SYST MODEL, V10, P161, DOI 10.1007/s10270-009-0127-2
   Hubaux A, 2013, SEPARATING CONCERNS, V45, P51
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Khalfaoui K, 2015, 2015 6TH INTERNATIONAL CONFERENCE ON INFORMATION AND COMMUNICATION SYSTEMS (ICICS), P25, DOI 10.1109/IACS.2015.7103196
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kolesnikov S, 2014, ACM SIGPLAN NOTICES, V49, P115, DOI [10.1145/2637365.2517213, 10.1145/2517208.2517213]
   La Rosa M, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430545.2430547
   Passos Leonardo, 2013, VaMoS, P1
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Qiu D, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2631685
   Reder A, 2013, IEEE T SOFTWARE ENG, V39, P1531, DOI 10.1109/TSE.2013.30
   Riebisch Matthias, 2002, P 6 WORLD C INT DES, P1
   Schaefer I., 2012, International Journal on Software Tools for Technology Transfer (STTT), V14, P477, DOI [DOI 10.1007/S10009-012-0253-Y, 10.1007/s10009-012-0253-y]
   Scholz W., 2011, WORKSHOP P, V2, P7
   Segura S, 2008, LECT NOTES COMPUT SC, V5235, P489, DOI 10.1007/978-3-540-88643-3_15
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Thum T., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P191, DOI 10.1109/SPLC.2011.53
   Thum T., 2012, FIN0042012 U MAGD SC
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
   Wahyudianto, 2014, J. Comput. Commun., V2, P101, DOI [10.4236/jcc.2014.22018, DOI 10.4236/JCC.2014.22018]
   Weber, 2016, INT J COMPUTER SCI S, V5, P260
NR 74
TC 14
Z9 14
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2019
VL 105
BP 209
EP 225
DI 10.1016/j.infsof.2018.08.016
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HD5RF
UT WOS:000452586900012
DA 2024-07-18
ER

PT J
AU Souza, E
   Moreira, A
   Araújo, J
   Abrahao, S
   Insfran, E
   da Silveira, DS
AF Souza, Eric
   Moreira, Ana
   Araujo, Joao
   Abrahao, Silvia
   Insfran, Emilio
   da Silveira, Denis Silva
TI Comparing business value modeling methods: A family of experiments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Value model; Value-driven; Controlled experiment
ID SOFTWARE; ACCEPTANCE; DIAGRAMS
AB Context A value model is used to describe how an organization creates, delivers, and captures its business value. Value-driven development methods use the notion of "economic value exchange" to define more efficient business strategies and align Information Systems (IS) with organizational goals. Current value-driven methods are complex and there is insufficient empirical evidence regarding which of the existing methods are more effective.
   Objective: This paper compares two different value-driven methods to provide empirical evidence regarding both their efficacy when modeling business value and their likelihood of acceptance in practice.
   Method: This goal was addressed by performing a family of three controlled experiments with a group of novice software engineers and business analysts to compare the Dynamic Value Description (DVD) method with the e3value method, with respect to their effectiveness, efficiency, perceived ease of use, perceived usefulness and intention to use. The experiment was initially performed in Spain and then replicated in Portugal and Brazil with other participants with different backgrounds. A meta-analysis was performed to aggregate the empirical findings obtained in each experiment.
   Results: The results indicate that the DVD method is superior with respect to all the variables analyzed.
   Conclusion: The DVD method is a promising and alternative method to specify business value when compared to the well-known e3value method for the analyzed variables.
C1 [Souza, Eric; Moreira, Ana; Araujo, Joao] Univ NOVA Lisboa, Fac Ciencias & Tecnol, Dept Informat, NOVA LINCS, Lisbon, Portugal.
   [Abrahao, Silvia; Insfran, Emilio] Univ Politecn Valencia, Dept Comp Syst & Computat, Valencia, Spain.
   [da Silveira, Denis Silva] Univ Fed Pernambuco, Dept Adm Sci, Recife, PE, Brazil.
C3 Universidade Nova de Lisboa; Universitat Politecnica de Valencia;
   Universidade Federal de Pernambuco
RP Souza, E (corresponding author), Univ NOVA Lisboa, Fac Ciencias & Tecnol, Dept Informat, NOVA LINCS, Lisbon, Portugal.
EM er.souza@campus.fct.unl.pt; amm@fct.unl.pt; joao.araujo@fct.unl.pt;
   sabrahao@dsic.upv.es; einsfran@dsic.upv.es; dsilveira@ufpe.br
RI Araujo, Joao/G-2108-2011; da Silveira, Denis Silva/G-9682-2013; Abrahão,
   Silvia/AAK-6976-2020; Moreira, Ana/F-4770-2011; Araujo,
   Joao/M-3560-2013; Insfran, Emilio/O-6934-2015
OI da Silveira, Denis Silva/0000-0003-0482-7649; Abrahão,
   Silvia/0000-0003-3580-2014; Moreira, Ana/0000-0003-2046-2766; Araujo,
   Joao/0000-0001-5914-1631; Souza, Eric/0000-0002-5130-0439; Insfran,
   Emilio/0000-0003-0855-5564
FU Value@Cloud project (MINECO) [TIN2013-46300-R]; NOVA LINCS Research
   Laboratory [UID/CEC/04516/2013]; CAPES - Ciencia sem Fronteiras
   [99999.009047/2013-01]
FX We should first like to thank the participants from Spain, Portugal and
   Brazil who took part in these experiments, for their effort and valuable
   time. We would also like to thank the Value@Cloud project (MINECO
   TIN2013-46300-R), the NOVA LINCS Research Laboratory (Ref.
   UID/CEC/04516/2013), and CAPES - Ciencia sem Fronteiras (Ref.
   99999.009047/2013-01) for their financial support.
CR Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   Abrahao S, 2011, INFORM SCIENCES, V181, P3356, DOI 10.1016/j.ins.2011.04.005
   Andersson B, 2006, LECT NOTES COMPUT SC, V4215, P482
   [Anonymous], 2012, RStudio: integrated development environment for R
   [Anonymous], VALUE BASED SOFTWARE
   [Anonymous], 2006, PRACTICAL NONPARAMET
   [Anonymous], 2002, Applied Statistics for Software Managers
   [Anonymous], 1994, 23821 BISO IEC
   [Anonymous], 1978, Psychometric Theory
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Becker L.A., 1999, EFFECT SIZE CALCULAT
   Becker L. A., 2000, Effect size (ES)
   Biffi S., 2002, P EMP ASS SOFTW ENG
   Boehm B, 2006, VALUE-BASED SOFTWARE ENGINEERING, P3, DOI 10.1007/3-540-29263-2_1
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   Buhr R.J. A., 1995, USE CASE MAPS OBJECT
   Buzan T., 1996, MIND MAP BOOK USE RA
   Carver JC, 2014, EMPIR SOFTW ENG, V19, P267, DOI 10.1007/s10664-013-9290-8
   Chung L, 2009, LECT NOTES COMPUT SC, V5600, P363, DOI 10.1007/978-3-642-02463-4_19
   Cohen J., 1988, STAT POWER ANAL BEHA
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Denne M., 2003, Software by Numbers: Low-Risk, High-Return Development
   Derzsi Z., 2006, 18 INT C ADV INF SYS, P219
   Dijkstra Edsger W., 1982, On the Role of Scientific Thought, P60, DOI [DOI 10.1007/978-1-4612-5695-3, 10.1007/978-1-4612-5695-3_12, 10.1007/978-1-4612-5695-312, DOI 10.1007/978-1-4612-5695-312]
   Frakes WB., 1992, Information retrieval: Data structures and algorithms
   Gonzalez-Huerta J, 2015, INFORM SOFTWARE TECH, V57, P405, DOI 10.1016/j.infsof.2014.05.018
   Gordijn J, 2006, IEEE SOFTWARE, V23, P26, DOI 10.1109/MS.2006.71
   Gordijn J, 2001, IEEE INTELL SYST, V16, P11, DOI 10.1109/5254.941353
   Gordijn J, 2002, INT WORKSH E BUS MOD
   Gordijn J., 2002, THESIS VRIJE U AMSTE
   Gordijn J., 2005, BLED
   Greenland S., 2008, Meta-Analysis. Modern Epidemiolog
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hayes W., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P143, DOI 10.1109/METRIC.1999.809735
   Hedges L. V., 1984, STAT METHODS METAANA, V24, P25, DOI [DOI 10.1002/EV.1376, 10.1016/C2009-0-03396-0, DOI 10.1016/C2009-0-03396-0, 10.1002/ev.1376]
   Huemer C., 2008, P 3 INT WORKSH BUS I, V336
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kartseva V., 2006, LECT NOTES COMPUTER, V4001, DOI [10.1007/11767138_23, DOI 10.1007/11767138_23]
   King WR, 2006, INFORM MANAGE-AMSTER, V43, P740, DOI 10.1016/j.im.2006.05.003
   Kundisch D., 2012, 45 HAW INT C SYST SC, DOI [10.1109/HICSS.2012.139, DOI 10.1109/HICSS.2012.139]
   Lipsey M. W., 2001, PRACTICAL METAANALYS, DOI DOI 10.1016/J.AUTNEU.2007.06.087
   MCCARTHY WE, 1982, ACCOUNT REV, V57, P554
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Nunnally JC, 1978, PSYCHOMETRIC THEORY, V2nd
   Osterwalder A., 2004, The business model ontology a proposition in a design science approach
   Pai M, 2004, NATL MED J INDIA, V17, P86
   Rasiwasia A., 2013, THESIS
   Reiter D. J., 2001, MAKING SOFTWARE BUSI
   Rosenthal R., 1991, METAANALYTIC PROCEDU
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Scanniello G, 2014, J VISUAL LANG COMPUT, V25, P494, DOI 10.1016/j.jvlc.2014.03.002
   Souza E., 2017, LECT NOTES BUSINESS, V299
   Souza E., 2017, VALUE DRIVEN DEV MET
   Souza E., 2017, 17 INT C COMP SCI IT
   Souza E., 2017, 26 INT C INF SYST DE
   Souza E., 2016, HUFAMO 16 HELD MODEL, V2016
   Sutton AJ, 2001, J EVAL CLIN PRACT, V7, P135, DOI 10.1046/j.1365-2753.2001.00281.x
   White SA., 2004, IBM Cooperation, V2, P0
   Yu E., 2011, SOCIAL MODELING REQU, P756, DOI [10.1109/TSE.2009.67, DOI 10.1109/TSE.2009.67]
NR 62
TC 6
Z9 7
U1 1
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2018
VL 104
BP 179
EP 193
DI 10.1016/j.infsof.2018.08.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ1PB
UT WOS:000449138900012
OA Green Published
DA 2024-07-18
ER

PT J
AU Silva, DB
   Eler, MM
   Durelli, VHS
   Endo, AT
AF Silva, Davi Bernardo
   Eler, Marcelo Medeiros
   Durelli, Vinicius H. S.
   Endo, Andre Takeshi
TI Characterizing mobile apps from a source and test code viewpoint
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Android; Mobile computing; Open source; Software testing; Automated
   tests
AB Context while the mobile computing market has expanded and become critical, the amount and complexity of mobile apps have also increased. To assure reliability, these apps require software engineering methods, mainly verification, validation, and testing. However, mobile app testing is a challenging activity due to the diversity and limitations found in mobile devices. Thus, it would be interesting to characterize mobile apps in hopes of assisting in the definition of more efficient and effective testing approaches. Objective: this paper aims to identify and quantify the specific characteristics of mobile apps so that testers can draw from this knowledge and tailor software testing activities to mobile apps. We investigate the presence of automated tests, adopted frameworks, external connectivity, graphical user interface (GUI) elements, sensors, and different system configurations. Method: we developed a tool to support the automatic extraction of characteristics from Android apps. We conducted an empirical study with a sample of 663 open source mobile apps. Results: we found that one third of the projects perform automated testing. The frameworks used in these projects can be divided into three groups: unit testing, GUI testing, and mocking. There is a medium correlation between project size and test presence. Specific features of mobile apps (connectivity, GUI, sensors, and multiple configurations) are present in the projects, however, they are fully covered by tests. Conclusion: automated tests are still not developed in a systematic way. Interestingly, measures of app popularity (number of downloads and rating) do not seem to be correlated with the presence of tests. However, the results show a correlation of the project size and more critical domains with the existence of automated tests. Although challenges such as connectivity, sensors, and multiple configurations are present in the examined apps, only one tool has been identified to support the testing of these challenges.
C1 [Silva, Davi Bernardo; Endo, Andre Takeshi] Univ Tecnol Fed Parana UTFPR, Cornelio Procopio, Brazil.
   [Silva, Davi Bernardo] IFSC, Geraldo Werninghaus, Brazil.
   [Eler, Marcelo Medeiros] Univ Sao Paulo, Sao Paulo, Brazil.
   [Durelli, Vinicius H. S.] Univ Fed Sao Joao del Rei UFSJ, Sao Joao Del Rei, Brazil.
C3 Universidade Tecnologica Federal do Parana; Universidade de Sao Paulo;
   Universidade Federal de Sao Joao del-Rei
RP Endo, AT (corresponding author), Univ Tecnol Fed Parana UTFPR, Cornelio Procopio, Brazil.
EM davi.bernardo@ifsc.edu.br; marceloeler@usp.br; durelli@ufsj.edu.br;
   andreendo@utfpr.edu.br
RI Eler, Marcelo/AAC-9303-2019; Endo, Andre Takeshi/I-1861-2012
OI Eler, Marcelo/0000-0001-5872-0607; Endo, Andre
   Takeshi/0000-0002-8737-1749
FU CNPq/Brazil [445958/2014-6]; FAPESP/Brazil [2014/08713-9]
FX Andre T. Endo was partially financially supported by CNPq/Brazil (Grant
   number 445958/2014-6). Marcelo M. Eler is partially financially
   supported by FAPESP/Brazil (Grant number 2014/08713-9). The authors are
   grateful to the anonymous reviewers for their useful comments and
   suggestions.
CR Ableson W.F., 2012, ANDROID IN ACTION
   Abogharaf A., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P110, DOI 10.1109/IWAST.2012.6228978
   Ahmed Rumee S.T, DROIDTEST TESTING AN, P341
   [Anonymous], 2017, NUMB APPS AV LEAD AP
   [Anonymous], 2016, Ericsson Mobility Report
   Bhattacharya P, 2013, EUR CON SFTWR MTNCE, P133, DOI 10.1109/CSMR.2013.23
   CHEN G., 2000, TR2000381 DARTM COLL
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Cohen J., 1988, STAT POWER ANAL BEHA
   Gao J, 2014, COMPUTER, V47, P46, DOI 10.1109/MC.2013.445
   Guo Chenkai., 2014, Proceedings of the 9th International Workshop on Automation of Software Test, P8, DOI [10.1145/2593501.2593503, DOI 10.1145/2593501.2593503]
   Hu Cuixiong, 2011, Proceedings of the 6th International Workshop on Automation of Software Test, P77
   IDC, 2017, VOIC NEXT GEN MOB DE
   Jensen C S, 2013, P 2013 INT S SOFTW T, P67, DOI [10.1145/2483760.2483777, DOI 10.1145/2483760.2483777]
   Jing J, 1999, ACM COMPUT SURV, V31, P117, DOI 10.1145/319806.319814
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kochhar P. S., 2015, ICST'15, P1
   Linares-Vásquez M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P111, DOI 10.1109/MSR.2015.18
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Liu YP, 2014, IEEE T SOFTWARE ENG, V40, P911, DOI 10.1109/TSE.2014.2323982
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Muccini H., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P29, DOI 10.1109/IWAST.2012.6228987
   Peterson Kevin, 2013, TECHNICAL REPORT
   Picco G.P., 2014, P FUTURE SOFTWARE EN, P13, DOI DOI 10.1145/2593882.2593884
   Satyanarayanan M., 1996, Proceedings of the Fifteenth Annual ACM Symposium on Principles of Distributed Computing, P1, DOI 10.1145/248052.248053
   Schilit B., 1994, 1994 1 WORKSHOP MOBI, P85, DOI [DOI 10.1109/WMCSA.1994.16, 10.1109/WMCSA.1994.16]
   Silva Danilo., 2016, 24th International Symposium on the Foundations of Software Engineering (FSE), P1, DOI [10.1109/CLEI.2016.7833334, DOI 10.1109/CLEI.2016.7833334]
   Syer MarkD., 2013, Proceedings of the 2013 Conference of the Center for Advanced Studies on Collaborative Research, CASCON '13, P283
   Wasserman A.I., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research, P397, DOI [DOI 10.1145/1882362.1882443, 10.1145/1882362.1882443]
NR 31
TC 16
Z9 16
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2018
VL 101
BP 32
EP 50
DI 10.1016/j.infsof.2018.05.006
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GK3OE
UT WOS:000436054200003
DA 2024-07-18
ER

PT J
AU Siqueira, FL
AF Siqueira, Fabio Levy
TI Comparing the comprehensibility of requirements models: An experiment
   replication
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Tropos; Use case; Experiment; Replication; Comprehensibility
AB Context: There are several requirements modeling approaches with differences, for instance, in perspective, abstraction levels, modeling focus, and representation. Therefore, comparing and selecting a requirements modeling approach can be a difficult task. An important requirement for an approach is model comprehensibility.
   Objective: This paper replicates the experiment executed by Hadar et al. (2013) to compare the comprehensibility of Tropos requirements models and Use case models, along with the effort to comprehend the model, and the productivity.
   Method This replication varies the operationalization, protocol, population, and experimenters, addressing some future works proposed by the original experiment. Only one application domain of the original experiment was considered, but the same questionnaire was used to evaluate model comprehensibility. In addition to the two models of the original experiment, we also considered another Use case template.
   Results: Differently from the original experiment, the results of this replication indicate no difference in model comprehensibility and effort between Tropos and the two Use case models considered. As in the original experiment, the results indicate no difference in productivity.
   Conclusions: Differences in the experiment setting may explain the different results from the original experiment. Yet, it may be difficult to compare requirements approaches with complementary strengths and limitations as the requirements models must have equivalent content and complexity.
C1 [Siqueira, Fabio Levy] Univ Sao Paulo, Dept Engn Comp & Sistemas Digitais, Escola Politecn, Av Prof Luciano Gualberto,Trav 3, BR-15805508 Sao Paulo, SP, Brazil.
C3 Universidade de Sao Paulo
RP Siqueira, FL (corresponding author), Univ Sao Paulo, Dept Engn Comp & Sistemas Digitais, Escola Politecn, Av Prof Luciano Gualberto,Trav 3, BR-15805508 Sao Paulo, SP, Brazil.
EM levy.siqueira@usp.br
RI Siqueira, Fabio Levy/I-4680-2013
OI Siqueira, Fabio Levy/0000-0002-7550-2000
CR Alexander I., 2004, SCENARIOS STORIES US
   Amyot Daniel, 2011, Journal of Software, V6, P747, DOI 10.4304/jsw.6.5.747-768
   Anda B., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P402
   [Anonymous], SYST SOFTW ENG LIF C
   [Anonymous], 2010, P 2010 ACM S APPL CO
   [Anonymous], 2015, OMG UN MOD LANG OMG
   [Anonymous], 2002, Use Case Modeling
   Aranda Jorge., 2007, P INT WORKSHOP MODEL, P7
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Castro J., 2001, Advanced Information Systems Engineering. 13th International Conference, CAiSE 2001. Proceedings (Lecture Notes in Computer Science Vol.2068), P108
   Chung L., 2006, SOFTWARE ENG RES APP, V3647, P29
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Devore J.L., 2011, Probability and statistics for engineering the science, P768
   España S, 2009, LECT NOTES COMPUT SC, V5565, P530, DOI 10.1007/978-3-642-02144-2_41
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Hadar I, 2013, INFORM SOFTWARE TECH, V55, P1823, DOI 10.1016/j.infsof.2013.05.003
   Holtzblatt Karen., 2004, Scenarios, Stories, Use Cases Through the Development Life-cycle, P179
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Kulak D., 2003, USE CASES REQUIREMEN, V2 nd
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   NOETHER GE, 1987, J AM STAT ASSOC, V82, P645, DOI 10.2307/2289477
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Rolland C, 2007, CONCEPTUAL MODELLING IN INFORMATION SYSTEMS ENGINEERING, P141, DOI 10.1007/978-3-540-72677-7_9
   Siqueira F. L., 2011, ESSENTIAL TEXTUAL US, P419
   Tiwari S, 2015, INFORM SOFTWARE TECH, V67, P128, DOI 10.1016/j.infsof.2015.06.004
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Wohlin C., 2012, Experimentation in Software Engineering
   Yu E., 1995, MODELLING STRATEGIC
NR 29
TC 2
Z9 2
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2018
VL 96
BP 1
EP 13
DI 10.1016/j.infsof.2017.11.002
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FW8GG
UT WOS:000425567200001
DA 2024-07-18
ER

PT J
AU da Cruz, GAM
   Moriya-Huzita, EH
   Feltrim, VD
AF Maldonado da Cruz, Guilherme Augusto
   Moriya-Huzita, Elisa Hatsue
   Feltrim, Valeria Delisandra
TI ARSENAL-GSD: A framework for trust estimation in virtual teams based on
   sentiment analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Trust; Versioning system; Sentiment analysis; Virtual teams; Global
   software development
ID BEHAVIORS
AB Context: Technology advances has enabled the emergence of virtual teams. In these teams, people are in different places and possibly over different time zones, making use of computer mediated communication to interact. At the same time distribution brings benefits, it poses challenges as the difficulty to develop trust, which is essential for team efficiency.
   Objective: In this paper, we present ARSENAL-GSD, an automatic framework for detecting trust among members of global software development teams based on sentiment analysis.
   Methods: To design ARSENAL-GSD we made a literature review to identify trust evidences, especially those that could be captured or inferred from the automatic analysis of data generated by members' interactions in a versioning system. We applied a survey to validate the framework and evidences found.
   Results: On a scale of 0-9, evidences were evaluated as having importance greater or equal to 5.23, and the extraction techniques used to estimate them were considered as good enough. Regarding differences between subjects profile, no difference was found in responses of participants with theoretical knowledge/none and those with medium/high knowledge in GSD, except for the evidence mimicry, which was considered more important for the group of participants with medium/high knowledge in GSD.
   Conclusion: We concluded that our framework is valid and trust information provided by it could be used to allocate members to a new team and/or, to monitor them during project development.
C1 [Maldonado da Cruz, Guilherme Augusto; Moriya-Huzita, Elisa Hatsue; Feltrim, Valeria Delisandra] Univ Estadual Maringa, Dept Informat, 5-790 Colombo Ave, Maringa, PR, Brazil.
   [Maldonado da Cruz, Guilherme Augusto] 3258 Sophia Rasgulaeff Ave, Maringa, PR, Brazil.
C3 Universidade Estadual de Maringa
RP da Cruz, GAM (corresponding author), Univ Estadual Maringa, Dept Informat, 5-790 Colombo Ave, Maringa, PR, Brazil.
EM guilherme.maldonado@accion.com.br; emhuzita@din.uem.br;
   valeria.feltrim@din.uem.br
FU Coordination for the Improvement of Higher Education Personnel (CAPES)
FX This work was supported by the Coordination for the Improvement of
   Higher Education Personnel (CAPES).
CR Akgün AE, 2015, INFORM MANAGE-AMSTER, V52, P247, DOI 10.1016/j.im.2014.11.004
   Al-Ani B., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P25, DOI 10.1109/ICGSE.2011.25
   Al-Ani B, 2014, INFORM SOFTWARE TECH, V56, P309, DOI 10.1016/j.infsof.2013.11.001
   Al-Ani Ban., 2013, P ACM C COMPUTER SUP, P563, DOI [DOI 10.1145/2441776.2441840, 10.1145/2441776.2441840]
   [Anonymous], 2015, APACHE APACHE LUCENE
   [Anonymous], 2005, Technical Report
   [Anonymous], 2015, AP MATH COMM MATH AP
   [Anonymous], 2013, P 2013 C EMP METH NA
   Aranda G.N., TRUSTY TOOL IMPROVE, P224, DOI [10.1007/978-3-642-23801-7_18, DOI 10.1007/978-3-642-23801-7_18]
   Bird Steven, 2009, NATURAL LANGUAGE PRO, DOI DOI 10.1007/S10579-010-9124-X
   Borbora ZH, 2013, SOC NETW ANAL MIN, V3, P981, DOI 10.1007/s13278-013-0136-6
   Calefato F., 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P12, DOI 10.1109/CHASE.2012.6223009
   Calefato F, 2017, INT CONF GLOBAL SOFT, P56, DOI 10.1109/ICGSE.2017.1
   Calefato F, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION), P3, DOI [10.1109/SEmotion.2016.010, 10.1145/2897000.2897001]
   Calefato F, 2015, ELECTRON COMMER RES, V15, P453, DOI 10.1007/s10660-015-9194-3
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Conchúir EO, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P159, DOI 10.1109/ICGSE.2006.261229
   Dodd O., 2013, EUR FINANCIAL MANAGE
   GitHub, 2015, GITHUB API V3
   Gomes V., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P154, DOI 10.1109/ICGSE.2012.43
   Guzman E., 2014, Association for Computing Machinery, P352
   Guzman E., 2013, 2013 1 IEEE WORK C S, P1
   Hofstede G., 2010, Culture and Organizations. Software of the Mind
   Iacono CS, 1997, P ANN HICSS, P412, DOI 10.1109/HICSS.1997.665615
   IBM, 2015, ALCH API POW NEW AI
   IBM, 2017, WATS NAT LANG UND
   Jarvenpaa S. L., 1998, Journal of Management Information Systems, V14, P29
   Jarvenpaa SL, 2004, INFORM SYST RES, V15, P250, DOI 10.1287/isre.1040.0028
   Jongeling R, 2015, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSM.2015.7332508
   Jongeling Robbert, 2017, EMPIR SOFTW ENG, V2017, P1
   Khan Mohammad Saud, 2012, International Journal of Networking and Virtual Organisations, V10, P40, DOI 10.1504/IJNVO.2012.045210
   Kuo FY, 2009, J COMPUT-MEDIAT COMM, V14, P823, DOI 10.1111/j.1083-6101.2009.01472.x
   Li JC, 2010, P INT TECH M I NAVIG, P244
   Liu B., 2012, SYNTHESIS LECT HUMAN, V5, P1, DOI [DOI 10.2200/S00416ED1V01Y201204HLT016, 10.2200/s00416ed1v01y201204hlt016]
   Marczak S, 2014, INT CONF GLOBAL SOFT, P46, DOI 10.1109/ICGSE.2014.29
   Mitchell A, 2009, DATA BASE ADV INF SY, V40, P61
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Naveh B., 2015, WELCOME JGRAPHT FREE
   Pangil F, 2014, J KNOWL MANAG, V18, P92, DOI 10.1108/JKM-09-2013-0341
   Paul S., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P149, DOI 10.1109/HICSS.2012.593
   Peñarroja V, 2013, COMPUT HUM BEHAV, V29, P967, DOI 10.1016/j.chb.2012.12.020
   Rico R, 2009, SOC SCI INFORM, V48, P229, DOI 10.1177/0539018409102410
   Robbes R, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P155, DOI 10.1109/IWPSE.2005.32
   Rusman E, 2010, INT J HUM-COMPUT ST, V68, P834, DOI 10.1016/j.ijhcs.2010.07.003
   Scissors LE, 2008, CSCW: 2008 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, CONFERENCE PROCEEDINGS, P277
   Sengupta B., 2006, 28th International Conference on Software Engineering Proceedings, P731, DOI 10.1145/1134285.1134402
   Sherchan W, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2501654.2501661
   Siakas Kerstin V., 2008, International Journal of Technology, Policy and Management, V8, P59, DOI 10.1504/IJTPM.2008.016181
   Sinha V, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P520, DOI [10.1109/MSR.2016.069, 10.1145/2901739.2903501]
   Skopik F, 2009, WEBIST 2009: PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS AND TECHNOLOGIES, P471
   Striukova L., 2008, International Journal Networking and Virtual Organizations, V5, P103, DOI DOI 10.1504/IJNVO.2008.016005
   Thelwall M, 2010, J AM SOC INF SCI TEC, V61, P2544, DOI 10.1002/asi.21416
   Tourani P., 2014, CASCON, P34
   Treinen JJ, 2006, IBM SYST J, V45, P773, DOI 10.1147/sj.454.0773
   Turek Piotr, 2010, Proceedings of the 2010 IEEE Second International Conference on Social Computing (SocialCom 2010). the Second IEEE International Conference on Privacy, Security, Risk and Trust (PASSAT 2010), P17, DOI 10.1109/SocialCom.2010.13
   Wang Y, 2016, EMPIR SOFTW ENG, V21, P2233, DOI 10.1007/s10664-015-9407-3
   Wilson JM, 2006, ORGAN BEHAV HUM DEC, V99, P16, DOI 10.1016/j.obhdp.2005.08.001
   Yusof Shafiz Affendi Mohd, 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P475, DOI 10.1109/HICSS.2012.272
   Zhang Y, 2009, J COMPUT SCI TECH-CH, V24, P883, DOI 10.1007/s11390-009-9279-3
NR 59
TC 3
Z9 5
U1 0
U2 16
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 46
EP 61
DI 10.1016/j.infsof.2017.10.016
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FX4EZ
UT WOS:000426026800004
DA 2024-07-18
ER

PT J
AU Yasin, A
   Liu, L
   Li, T
   Wang, JM
   Zowghi, D
AF Yasin, Affan
   Liu, Lin
   Li, Tong
   Wang, Jianmin
   Zowghi, Didar
TI Design and preliminary evaluation of a cyber Security Requirements
   Education Game (SREG)
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Organizational security; Security requirements inception; Requirements
   engineering; Security awareness; Security education; Serious game;
   Social engineering; Cyber security; Empirical study
ID GAMIFICATION; EXPERIENCE; MANAGEMENT; ENGAGEMENT; MODEL
AB Context: Security, in digitally connected organizational environments of today, involves many different perspectives, including social, physical, and technical factors. In order to understand the interactions among these correlated aspects and elicit potential threats geared towards a given organization, different security requirements analysis approaches are proposed in the literature. However, the body of knowledge is yet to unleash its full potential due to the complex nature of security problems, and inadequate ways to improve security awareness of key players in the organization. Objective: Objective(s) of the research study is to improve the security awareness of players utilizing serious games via: (i) Know-how of security concepts and security protection; (ii) guided process of identifying valuable assets and vulnerabilities in a given organizational setting; (iii) guided process of defining successful security attacks to the organization. Method: Important methods used to address the above objectives include: (i) a comprehensive review of the literature to better understand security and game design elements; (ii) designing a serious game using cyber security knowledge and game-based techniques combined with security requirements engineering concepts; (iii) using empirical evaluation (observation and survey) to verify the effectiveness of the proposed game design. Result: The solution proposed is a serious game for security requirements education, which: (i) can be an effective and fun way of learning security related concepts; (ii) mimics a real life problem setting in a presentable and understandable way; (iii) motivates players to learn more about security related concepts in future. Conclusion: From this study, we conclude that the proposed Security Requirement Education Game (SREG) has positive results and is helpful for players of the game to get an understanding of security attacks and vulnerabilities.
C1 [Yasin, Affan; Liu, Lin; Wang, Jianmin] Tsinghua Univ, Sch Software, Beijing, Peoples R China.
   [Li, Tong] Beijing Univ Technol, Fac Informat Technol, Beijing, Peoples R China.
   [Zowghi, Didar] Univ Technol Sydney, Fac Engn & IT, Sydney, NSW, Australia.
C3 Tsinghua University; Beijing University of Technology; University of
   Technology Sydney
RP Liu, L (corresponding author), Tsinghua Univ, Sch Software, Beijing, Peoples R China.
EM yayf15@mails.tsinghua.edu.cn; linliu@tsinghua.edu.cn;
   litong@bjut.edu.cn; jimwang@tsinghua.edu.cn; Didar.Zowghi@uts.edu.au
RI wang, jian/GVS-0711-2022; Jiang, Yalin/ITV-2565-2023; Zowghi,
   Didar/AAF-2345-2019; Yasin, Affan/GON-8035-2022
OI Jiang, Yalin/0009-0003-3726-8828; Zowghi, Didar/0000-0002-6051-0155;
   Yasin, Affan/0000-0002-0166-2239; Wang, Jianmin/0000-0001-6841-7943
FU National Science and Technology Support Program Project [2015BAH14F02];
   Natural Science Foundation of China Project [61432020]; Beijing
   University of Technology Startup Funding Project [007000514116022]
FX Financial support from the National Science and Technology Support
   Program Project no. 2015BAH14F02, and Natural Science Foundation of
   China Project no. 61432020. Tong Li acknowledges the support of Beijing
   University of Technology Startup Funding Project no. 007000514116022. We
   thank Awaid Yasin for reviewing the paper.
CR Amory A, 1999, BRIT J EDUC TECHNOL, V30, P311, DOI 10.1111/1467-8535.00121
   Ampatzoglou A, 2010, INFORM SOFTWARE TECH, V52, P888, DOI 10.1016/j.infsof.2010.05.004
   Anderson L., 2009, TAXONOMY LEARNING TE
   [Anonymous], ADV PSYCHOL, DOI DOI 10.1016/S0166-4115(08)62601-1
   [Anonymous], 2004, P AAAI WORKSH CHALL
   [Anonymous], 2013, TAXONOMY LEARNING TE
   [Anonymous], 2013, PROC C COMPUTER COMM, DOI 10.1145/2508859.2516753
   [Anonymous], 2011, ACAD EXCHANGE Q
   Applegate SD, 2009, INF SECUR J, V18, P40, DOI 10.1080/19393550802623214
   Beckers K, 2016, INT REQUIR ENG CONF, P16, DOI 10.1109/RE.2016.39
   Bostrom G., 2006, P 2006 INT WORKSH SO, P11
   Callele D, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P240, DOI 10.1109/RE.2005.58
   Carlson Z, 2015, LECT NOTES ARTIF INT, V9388, P113, DOI 10.1007/978-3-319-25554-5_12
   Conteh NY, 2016, Int J Adv Comput Res, V6, P31, DOI DOI 10.19101/IJACR.2016.623006
   Crowe N, 2007, RTLDG ADV SOC, P217
   Davi L, 2011, LECT NOTES COMPUT SC, V6531, P346
   de la Hera Conde-Pumpido T., 2013, P DIGRA
   de-Marcos L, 2016, COMPUT EDUC, V95, P99, DOI 10.1016/j.compedu.2015.12.008
   Deterding S., 2011, P 15 INT AC MINDTREK, P9, DOI [10.1145/2181037.2181040, DOI 10.1145/2181037.2181040]
   Dix A., 2004, Human-computer interaction
   Firesmith D., 2004, J OBJECT TECHNOLOGY, V3, P61, DOI DOI 10.5381/JOT.2004.3.1.C6
   Habgood M J., 2005, Intrinsic Fantasy: Motivation and Affect in Educational Games Made by Children
   Hagood S., 2005, STRATEGIES, V19, P21
   Haley CB, 2008, IEEE T SOFTWARE ENG, V34, P133, DOI 10.1109/TSE.2007.70754
   Hamari J, 2016, COMPUT HUM BEHAV, V54, P170, DOI 10.1016/j.chb.2015.07.045
   Hamari J, 2015, INT J INFORM MANAGE, V35, P419, DOI 10.1016/j.ijinfomgt.2015.04.006
   Hamari J, 2015, COMPUT HUM BEHAV, V50, P333, DOI 10.1016/j.chb.2015.04.018
   Hannemann A., 2009, SOFTWARE ENG SOCIAL, P317
   Helser S, 2015, TECHN SOC ISTAS 2015, P1
   Hussain A, 2003, ACM SIGCOMM COMP COM, V33, P99
   Jan AU, 2011, COMPUT HUM BEHAV, V27, P845, DOI 10.1016/j.chb.2010.11.009
   Kapp K.M., 2013, GAMIFICATION LEARNIN
   Keavney A., 2016, TRAINING DEV, V43, P26
   Kierkegaard P, 2011, COMPUT LAW SECUR REV, V27, P503, DOI 10.1016/j.clsr.2011.07.013
   Kiezun A, 2009, PROC INT CONF SOFTW, P199, DOI 10.1109/ICSE.2009.5070521
   Klimmt Christoph., 2009, Serious Games: Mechanism and Effects, P248
   Kong AWK, 2006, IEEE T SYST MAN CY B, V36, P1201, DOI 10.1109/TSMCB.2006.876168
   Kotini I., 2015, GAMIFICATION ED BUSI, P219, DOI DOI 10.1007/978-3-319-10208-5_12
   Krombholz K, 2015, J INF SECUR APPL, V22, P113, DOI 10.1016/j.jisa.2014.09.005
   Kuvaas B, 2017, J ECON PSYCHOL, V61, P244, DOI 10.1016/j.joep.2017.05.004
   Landers R.N., 2015, Computers in Human Behavior
   Landers RichardN., 2011, Serious Games and Edutainment Applications, P399, DOI [DOI 10.1007/978-1-4471-2161-9_20, DOI 10.1007/978-1-4471-2161-920]
   Lombriser P, 2016, LECT NOTES COMPUT SC, V9619, P171, DOI 10.1007/978-3-319-30282-9_12
   Long T, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P377, DOI 10.1109/RE.2009.53
   Mainemelis C, 2001, ACAD MANAGE REV, V26, P548, DOI 10.2307/3560241
   McGraw D, 2015, PERS UBIQUIT COMPUT, V19, P85, DOI 10.1007/s00779-014-0809-9
   Mekler E.D., 2015, COMPUT HUM BEHAV, P1
   Metzger E. C., 2016, APPL GAMIFICATION CR, P457
   Mouton F., 2014, Social Engineering Attack Framework, P1, DOI DOI 10.1109/ISSA.2014.6950510
   Osuagwu EU, 2015, 2015 INTERNATIONAL CONFERENCE ON CYBERSPACE (CYBER-ABUJA), P91, DOI 10.1109/CYBER-Abuja.2015.7360515
   Pearce CL, 2002, GROUP DYN-THEOR RES, V6, P172, DOI 10.1037//1089-2699.6.2.172
   Pedreira O, 2015, INFORM SOFTWARE TECH, V57, P157, DOI 10.1016/j.infsof.2014.08.007
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Rahim FA, 2013, INT CONF RES INNOV, P504, DOI 10.1109/ICRIIS.2013.6716760
   Rogers K., 2004, STRATEGIES, V17, P17
   Saunders M. N. K., 2016, Business Students, V7th
   Seaborn K, 2015, INT J HUM-COMPUT ST, V74, P14, DOI 10.1016/j.ijhcs.2014.09.006
   Seixas LD, 2016, COMPUT HUM BEHAV, V58, P48, DOI 10.1016/j.chb.2015.11.021
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Smith R, 2008, INT REQUIR ENG CONF, P95, DOI 10.1109/RE.2008.33
   So HJ, 2008, COMPUT EDUC, V51, P318, DOI 10.1016/j.compedu.2007.05.009
   Souag A., SECURITY ONTOLOGY SE, P157
   Souag A, 2012, LECT NOTES BUS INF P, V112, P61
   Souza M.R., 2017, INF SOFTW TECHNOL
   Ståhl M, 2016, ELEARN SOFTW EDUC, P541, DOI 10.12753/2066-026X-15-079
   Sung HY, 2013, COMPUT EDUC, V63, P43, DOI 10.1016/j.compedu.2012.11.019
   Tondel IA, 2008, IEEE SOFTWARE, V25, P20, DOI 10.1109/MS.2008.19
   Tong Li, 2016, 2016 IEEE Tenth International Conference on Research Challenges in Information Science (RCIS), P1, DOI 10.1109/RCIS.2016.7549303
   Urh M, 2015, PROCD SOC BEHV, V197, P388, DOI 10.1016/j.sbspro.2015.07.154
   van der Merwe L, 2008, ADV DEV HUM RESOUR, V10, P216, DOI 10.1177/1523422307313321
   von Wangenheim CG, 2012, INFORM SOFTWARE TECH, V54, P286, DOI 10.1016/j.infsof.2011.10.005
   Wang Eric Ke, 2010, Proceedings of the 2010 IEEE/ACM Int'l Conference on Green Computing and Communications (GreenCom) and Int'l Conference on Cyber, Physical and Social Computing (CPSCom), P733, DOI 10.1109/GreenCom-CPSCom.2010.36
   Williams Imano, 2016, Journal of Software, V11, P81, DOI 10.17706/jsw.11.5.520-527
   Wohlin C., 2012, Experimentation in Software Engineering
   Wohlin C., EXPT SOFTWARE ENG, P123
NR 75
TC 42
Z9 45
U1 7
U2 60
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 179
EP 200
DI 10.1016/j.infsof.2017.12.002
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FX4EZ
UT WOS:000426026800014
DA 2024-07-18
ER

PT J
AU Taibi, D
   Janes, A
   Lenarduzzi, V
AF Taibi, Davide
   Janes, Andrea
   Lenarduzzi, Valentina
TI How developers perceive smells in source code: A replicated study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software maintenance; Code smells; Bad smells; Antipatterns; Refactoring
AB Context. In recent years, smells, also referred to as bad smells, have gained popularity among developers. However, it is still not clear how harmful they are perceived from the developers' point of view. Many developers talk about them, but only few know what they really are, and even fewer really take care of them in their source code.
   Objective. The goal of this work is to understand the perceived criticality of code smells both in theory, when reading their description, and in practice.
   Method. We executed an empirical study as a differentiated external replication of two previous studies. The studies were conducted as surveys involving only highly experienced developers (63 in the first study and 41 in the second one). First the perceived criticality was analyzed by proposing the description of the smells, then different pieces of code infected by the smells were proposed, and finally their ability to identify the smells in the analyzed code was tested.
   Results. According to our knowledge, this is the largest study so far investigating the perception of code smells with professional software developers. The results show that developers are very concerned about code smells in theory, nearly always considering them as harmful or very harmful (17 out of 23 smells). However, when they were asked to analyze an infected piece of code, only few infected classes were considered harmful and even fewer were considered harmful because of the smell.
   Conclusions. The results confirm our initial hypotheses that code smells are perceived as more critical in theory but not as critical in practice. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Taibi, Davide; Janes, Andrea; Lenarduzzi, Valentina] Free Univ Bozen Bolzano, Piazza Univ 1, I-39100 Bolzano, Italy.
C3 Free University of Bozen-Bolzano
RP Taibi, D (corresponding author), Free Univ Bozen Bolzano, Piazza Univ 1, I-39100 Bolzano, Italy.
EM davide.taibi@unibz.it; andrea.janes@unibz.it;
   valentina.lenarduzzi@unibz.it
RI Taibi, Davide/E-4935-2015; Janes, Andrea/IVV-0008-2023; Janes,
   Andrea/B-5388-2015
OI Taibi, Davide/0000-0002-3210-3990; Janes, Andrea/0000-0002-1423-6773;
   Janes, Andrea/0000-0002-1423-6773; Lenarduzzi,
   Valentina/0000-0003-0511-5133
CR [Anonymous], CHALL COMPL IT PROJ
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Basili VR, 2014, Aligning Organizations Through Measurement-the GQM+Strategies Approach
   Bland J.M., 1997, BMJ, V314
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Cronbach LJ, 1947, PSYCHOMETRIKA, V12, P1, DOI 10.1007/BF02289289
   Danphitsanuphan P., 2012, 2012 SPRING C ENG TE, P1
   Deligiannis I, 2004, J SYST SOFTWARE, V72, P129, DOI 10.1016/S0164-1212(03)00240-1
   Diaz-Ley M., 2008, IET SOFTWARE, V2
   Fenske W., 2015, VAMOS 15
   Fontana F.A., 2014, 2013 IEEE INT C SOFT
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   Gomez O.S., 2010, ESEM 10
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Hampp T., 2012, PROMISE 12
   ISO/IEC, 2010, 25010 ISOIEC
   Khomh F., 2009, WCRE 09
   Khomh F., 2009, 2009 16 WORK C REV E
   Kim M., 2005, SIGSOFT SOFTW ENG NO, V30
   Lenarduzzi V., 2017, DEV PERCEIVE CODE SM
   Li W., 2007, J SYST SOFTW, V80
   Malhotra R., 2015, WCI 15
   Martin J.B., 1999, FOWLER KENT BECK KEN
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Olbrich S., 2009, ESEM 09
   Olbrich Steffen M., 2010, ICSM 10
   Palomba F., 2014, ICSME 14
   Runeson P, 2003, P 7 INT C EMP ASS EV
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Strauss Anselm, 2015, Basics of Qualitative Research: Techniques and Procedures for Developing Grounded Theory
   Taba S.E.S., 2013, ICSM 13
   Webster BruceF., 1995, PITFALLS OBJECT ORIE
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yamashita A., 2012, INT C SOFTW MAINT IC
   Yamashita A., 2013, ICSE 13
   Yamashita A.F., 2013, P 20 WORK C REV ENG
   Yin R.K., 2009, DESIGN METHODS APPL
   Zazworka N., 2011, MTD 11
NR 38
TC 54
Z9 56
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2017
VL 92
BP 223
EP 235
DI 10.1016/j.infsof.2017.08.008
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ9UO
UT WOS:000413127200015
DA 2024-07-18
ER

PT J
AU Huijgens, H
   van Deursen, A
   van Solingen, R
AF Huijgens, Hennie
   van Deursen, Arie
   van Solingen, Rini
TI The effects of perceived value and stakeholder satisfaction on software
   project impact
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software economics; Evidence-based software engineering; Perceived
   value; stakeholder satisfaction; Cost duration index
ID RISKS; TESTS
AB Context: In this paper we present a multiple case study on the insights of software organizations into stakeholder satisfaction and (perceived) value of their software projects. Our study is based on the notion that quantifying and qualifying project size, cost, duration, defects, and estimation accuracy needs to be done in relation with stakeholder satisfaction and perceived value.
   Objectives: We contrast project metrics such as cost, duration, number of defects and estimation accuracy with stakeholder satisfaction and perceived value.
   Method: In order to find out whether our approach is practically feasible in an industrial setting, we performed two case studies; one in a Belgian telecom company and the other in a Dutch software company. Results: In this study we evaluate 22 software projects that were delivered during one release in the Belgian telecom company, and 4 additional large software releases (representing an extension of 174% in project size) that were delivered in a Dutch software company. Eighty-three (83) key stakeholders of two companies provide stakeholder satisfaction and perceived value measurements in 133 completed surveys.
   Conclusions: We conclude that a focus on shortening overall project duration, and improving communication and team collaboration on intermediate progress is likely to have a positive impact on stakeholder satisfaction and perceived value. Our study does not provide any evidence that steering on costs helped to improve these. As an answer to our research question - how do stakeholder satisfaction and perceived value relate to cost, duration, defects, size and estimation accuracy of software projects? - we found five take-away-messages. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Huijgens, Hennie; van Deursen, Arie; van Solingen, Rini] Delft Univ Technol, Mekelweg 4, NL-2628 CD Delft, Netherlands.
   [Huijgens, Hennie] Goverdson, Mekelweg 4, NL-2628 CD Delft, Netherlands.
   [van Solingen, Rini] Prowareness, Mekelweg 4, NL-2628 CD Delft, Netherlands.
C3 Delft University of Technology
RP Huijgens, H (corresponding author), Delft Univ Technol, Mekelweg 4, NL-2628 CD Delft, Netherlands.; Huijgens, H (corresponding author), Goverdson, Mekelweg 4, NL-2628 CD Delft, Netherlands.
EM h.k.m.huijgens@tudelft.nl
RI ; van Deursen, Arie/G-3084-2011
OI Huijgens, Hennie/0000-0003-4167-045X; van Deursen,
   Arie/0000-0003-4850-3312
CR Agarwal N., 2006, International Journal of Project Management, V24, P358, DOI 10.1016/j.ijproman.2005.11.009
   Díaz-Pace JA, 2016, J DATA SEMANT, V5, P37, DOI 10.1007/s13740-015-0053-0
   [Anonymous], EUR C SOFTW PROC IMP
   [Anonymous], ACM IEEE 9 INT S EMP
   [Anonymous], 2013, P LEAN ENT SOFTW SYS
   [Anonymous], SIGMETRICS PERF EV R
   [Anonymous], ACM P 2 INT WORKSH B
   [Anonymous], IEEE 9 AS PAC SOFTW
   [Anonymous], 20926 IFPUG FSM
   [Anonymous], 2014, SOFTW PROJ MANAG CHA
   [Anonymous], CHAOS REP
   [Anonymous], Handbook of Biological Statistics
   [Anonymous], INT J STW ENG APPL
   [Anonymous], ACM P 20 INT C EV AS
   [Anonymous], EUR J INF SYST
   [Anonymous], INT C ORG INF SYST
   [Anonymous], VALUE BASED SOFTWARE
   [Anonymous], 1998, CROSSTALK J DEFENSE
   [Anonymous], ACM P INT C SOFTW SY
   [Anonymous], STANDISH GROUP REPOR
   [Anonymous], PARIPEX INDIAN J RES
   [Anonymous], INT WORK C REQ ENG F
   [Anonymous], 2017, INFLUENCE HEIGHT SHE
   [Anonymous], IEEE P ISESE INT S E
   [Anonymous], 1 INT C SOFTW PROD L
   [Anonymous], 1988, PRINCIPLES SOFTWARE
   [Anonymous], AGILE CONTRACTING EX
   [Anonymous], 22 INT WORK C REQ EN
   [Anonymous], ACM P 2008 ANN RES C
   [Anonymous], SCI COMPUT PROGRAM
   [Anonymous], IEEE 6 INT C GLOB SO
   [Anonymous], P 20 INT C EV ASS SO
   [Anonymous], IEEE 44 HAW INT C SY
   [Anonymous], ACM COMP P 36 INT C
   [Anonymous], ACM SIGSOFT SOFTW EN
   [Anonymous], IEEE 6 INT C CLOUD S
   [Anonymous], 2007, HICSS 40
   [Anonymous], 2012, MANIFESTO AGILE SOFT
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Atkinson Mark J, 2004, Health Qual Life Outcomes, V2, P12, DOI 10.1186/1477-7525-2-12
   Atkinson R., 1999, International Journal of Project Management, V17, P337, DOI [DOI 10.1016/S0263-7863(98)00069-6, 10.1016/S0263-7863(98)00069-6]
   Auquier P, 2005, ANESTHESIOLOGY, V102, P1116, DOI 10.1097/00000542-200506000-00010
   Barki H., 1993, Journal of Management Information Systems, V10, P203
   Beck K., 2000, EXTREME PROGRAMMING
   Bhardwaj Mridul, 2016, ACM SIGSOFT Software Engineering Notes, V41, P1, DOI 10.1145/2853073.2853087
   Boehm B, 2000, ANN SOFTW ENG, V10, P177, DOI 10.1023/A:1018991717352
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Bryde DJ, 2005, BRIT J MANAGE, V16, P119, DOI 10.1111/j.1467-8551.2005.00438.x
   Dingsoyr T, 2016, INFORM SOFTWARE TECH, V77, P56, DOI 10.1016/j.infsof.2016.04.018
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   El Emam K, 2008, IEEE SOFTWARE, V25, P84, DOI 10.1109/MS.2008.107
   Eveleens JL, 2010, IEEE SOFTWARE, V27, P30, DOI 10.1109/MS.2009.154
   Glass R.L., 2005, IEEE Software, V22, P110
   Glass RL, 2006, COMMUN ACM, V49, P15, DOI 10.1145/1145287.1145301
   Hayes B.E., 1998, MEASURING CUSTOMER S
   HOCHBERG Y, 1988, BIOMETRIKA, V75, P800, DOI 10.2307/2336325
   Hopkins W., 2006, A new view of statistics
   Jiang J, 2000, J SYST SOFTWARE, V52, P3, DOI 10.1016/S0164-1212(99)00128-4
   Jorgensen M, 2006, INFORM SOFTWARE TECH, V48, P297, DOI 10.1016/j.infsof.2005.07.002
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Jorgensen M, 2016, INFORM SOFTWARE TECH, V78, P83, DOI 10.1016/j.infsof.2016.05.008
   Jorgensen M, 2012, INT J PROJ MANAG, V30, P839, DOI 10.1016/j.ijproman.2012.01.007
   KAPLAN RS, 1993, HARVARD BUS REV, V71, P134
   Kitchenham Barbara., 2016, Empirical Software Engineering, P1
   Pascoe G C, 1983, Eval Program Plann, V6, P185, DOI 10.1016/0149-7189(83)90002-2
   Sauer Chris., 2003, STATE IT PROJECT MAN
   Schmidt R, 2001, J MANAGE INFORM SYST, V17, P5, DOI 10.1080/07421222.2001.11045662
   Schwaber K., 2011, SCRUM GUIDE
   Smite D, 2016, IEEE SOFTWARE, V33, P60, DOI 10.1109/MS.2015.82
   Sonnekus R., 2004, Proceedings of PMSA Global Knowledge Project Management, South Africa, P183
   van Solingen R, 2004, IEEE SOFTWARE, V21, P32, DOI 10.1109/MS.2004.1293070
   Wu CL, 2001, REGION ANESTH PAIN M, V26, P196, DOI 10.1053/rapm.2001.22257
NR 72
TC 8
Z9 11
U1 0
U2 26
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2017
VL 89
BP 19
EP 36
DI 10.1016/j.infsof.2017.04.008
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EY3HD
UT WOS:000403861300003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Usman, M
   Britto, R
   Börstler, J
   Mendes, E
AF Usman, Muhammad
   Britto, Ricardo
   Borstler, Jurgen
   Mendes, Emilia
TI Taxonomies in software engineering: A Systematic mapping study and a
   revised taxonomy development method
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Taxonomy; Classification; Software engineering; Systematic mapping study
ID CLASSIFICATION
AB Context: Software Engineering (SE) is an evolving discipline with new subareas being continuously developed and added. To structure and better understand the SE body of knowledge, taxonomies have been proposed in all SE knowledge areas.
   Objective: The objective of this paper is to characterize the state-of-the-art research on SE taxonomies.
   Method: A systematic mapping study was conducted, based on 270 primary studies.
   Results: An increasing number of SE taxonomies have been published since 2000 in a broad range of venues, including the top SE journals and conferences. The majority of taxonomies can be grouped into the following SWEBOI(knowledge areas: construction (19.55%), design (19.55%), requirements (15.50%) and maintenance (11.81%). Illustration (45.76%) is the most frequently used approach for taxonomy validation. Hierarchy (53.14%) and faceted analysis (39.48%) are the most frequently used classification structures. Most taxonomies rely on qualitative procedures to classify subject matter instances, but in most cases (86.53%) these procedures are not described in sufficient detail. The majority of the taxonomies (97%) target unique subject matters and many taxonomy-papers are cited frequently. Most SE taxonomies are designed in an ad-hoc way. To address this issue, we have revised an existing method for developing taxonomies in a more systematic way.
   Conclusion: There is a strong interest in taxonomies in SE, but few taxonomies are extended or revised. Taxonomy design decisions regarding the used classification structures, procedures and descriptive bases are usually not well described and motivated. (C) 2017 The Authors. Published by Elsevier B.V.
C1 [Usman, Muhammad; Britto, Ricardo; Borstler, Jurgen] Blekinge Inst Technol BTH, Dept Software Engn DIPT, S-37179 Karlskrona, Sweden.
   [Mendes, Emilia] Blekinge Inst Technol BTH, Dept Comp Sci & Engn DIDD, S-37179 Karlskrona, Sweden.
C3 Blekinge Institute Technology; Blekinge Institute Technology
RP Usman, M (corresponding author), Blekinge Inst Technol BTH, Dept Software Engn DIPT, S-37179 Karlskrona, Sweden.
EM muhammad.usman@bth.se; ricardo.britto@bth.se; jurgen.borstler@bth.se;
   emilia.mendes@bth.se
RI Börstler, Jürgen/IWE-4001-2023; Mendes, Maria E/B-4207-2015; Harrison,
   Dylan/AFP-8142-2022
OI Börstler, Jürgen/0000-0003-0639-4234; Mendes, Emilia/0000-0003-0449-5322
FU CNPq (National Counsel of Technological and Scientific Development,
   Brazil); UFPI (Federal University of Piaui, Brazil); INES (National
   Institute of Science and Technology for Software Engineering, Brazil)
FX We would like to thank CNPq (National Counsel of Technological and
   Scientific Development, Brazil), UFPI (Federal University of Piaui,
   Brazil) and INES (National Institute of Science and Technology for
   Software Engineering, Brazil) for partially support this work.
CR [Anonymous], EMPIRICAL SOFTW ENG
   [Anonymous], 2010, OXFORD DICT ENGLISH
   Bayona-Oré S, 2014, SOFTWARE QUAL J, V22, P21, DOI 10.1007/s11219-012-9190-y
   Bloom B, 1956, TAXONOMY ED OBJECTIV
   BORSTLER J, 1995, SEKE '95, PROCEEDINGS, P204
   Bourque P., 2013, GUIDE SOFTWARE ENG B
   Britto Ricardo, 2016, Journal of Software Engineering Research and Development, V4, DOI 10.1186/s40411-016-0029-2
   Britto R., 2017, J WEB ENG
   Britto R, 2016, INT CONF GLOBAL SOFT, P154, DOI 10.1109/ICGSE.2016.11
   DOTY DH, 1994, ACAD MANAGE REV, V19, P230, DOI 10.2307/258704
   Fleishman E.A., 1984, TAXONOMIES HUMAN PER
   Fleiss J.L., 2004, Statistical Methods for Rates and Proportions, VThird, P1, DOI [10.1002/0471445428, DOI 10.1002/0471445428]
   Gibbs G., 2007, SAGE QUALITATIVE RES, V6
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   GLASS RL, 1995, IEEE SOFTWARE, V12, P63, DOI 10.1109/52.391837
   IEEE, 2008, 152882008 IEEE
   IEEE, 1987, 10021987 IEEE
   Kitchenham B., 2007, 2007001 EBSE
   Kwasnik BH, 1999, LIBR TRENDS, V48, P22
   Linnaeus C., 1758, SYSTEM NATURE 3 KING
   Mendes E, 2005, LECT NOTES COMPUT SC, V3579, P110
   MOFFITT TE, 1993, PSYCHOL REV, V100, P674, DOI 10.1037/0033-295X.100.4.674
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Pressman R., 2010, SOFTWARE ENG PRACTIT, P7
   PRIETODIAZ R, 1991, COMMUN ACM, V34, P88, DOI 10.1145/103167.103176
   Rowley Jennifer., 2000, ORG KNOWLEDGE, VThird
   Scharstein D, 2001, IEEE WORKSHOP ON STEREO AND MULTI-BASELINE VISION, PROCEEDINGS, P131, DOI 10.1023/A:1014573219977
   Smite D, 2014, EMPIR SOFTW ENG, V19, P105, DOI 10.1007/s10664-012-9217-9
   Tudge C., 2000, The Variety of Life
   Unterkalmsteiner M, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2523088
   Usman Muhammad., 2015, Supporting effort estimation in agile software development
   Vegas S, 2009, IEEE T SOFTWARE ENG, V35, P551, DOI 10.1109/TSE.2009.13
   Vessey I, 2005, INFORM SOFTWARE TECH, V47, P245, DOI 10.1016/j.infsof.2004.08.006
   Wheaton G.R., 1968, TECHNICAL REPORT
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C., 2014, P 8 ACM IEEE INT S E
NR 36
TC 90
Z9 93
U1 0
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2017
VL 85
BP 43
EP 59
DI 10.1016/j.infsof.2017.01.006
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EP7JG
UT WOS:000397553500003
OA hybrid
DA 2024-07-18
ER

PT J
AU Eloranta, VP
   Koskimies, K
   Mikkonen, T
AF Eloranta, Veli-Pekka
   Koskimies, Kai
   Mikkonen, Tommi
TI Exploring ScrumBut-An empirical study of Scrum anti-patterns
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 21st Asia-Pacific Software Engineering Conference (APSEC)
CY DEC 01-04, 2014
CL Jeju, SOUTH KOREA
DE Software development; Scrum; Anti-patterns; Empirical study
ID AGILE SOFTWARE-DEVELOPMENT
AB The wide-spread adoption of the agile movement has rapidly changed the landscape of software industry. In particular, Scrum is an agile process framework that has become extremely popular in industry. However, the practical implementation of Scrum in companies rarely follows the text book ideals, as companies often deviate from the proposed Scrum practices for various reasons. While some deviations may be well motivated and reasonable, companies can also be tempted to adjust Scrum for the company without clearly understanding the consequences of the deviations. In this paper our aim is to identify ways of potentially harmful mishandling of Scrum in industry based on empirical data collected in semi-structured interviews involving 18 teams in 11 companies. The (mal)practices that were identified at least in three different teams are presented in a semi-formal manner as anti-patterns. The study resulted in 14 anti-patterns that express the context of the deviation, the deviation itself, the broken core principles of Scrum, and the possible consequences of the deviation. In addition, where available, we have included company recommendations regarding the deviations. Furthermore, we identify potential risk areas in Scrum based on an analysis of the relationships between anti-patterns and Scrum concepts. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Eloranta, Veli-Pekka] Vincit Ltd, Tampere, Finland.
   [Koskimies, Kai; Mikkonen, Tommi] Tampere Univ Technol, Dept Pervas Comp, FIN-33101 Tampere, Finland.
C3 Tampere University
RP Eloranta, VP (corresponding author), Vincit Ltd, Tampere, Finland.
EM veli-pekka.eloranta@iki.fi; tommi.mikkonen@tut.fi
OI Mikkonen, Tommi/0000-0002-8540-9918
CR Agile alliance, 2001, MAN AG SOFTW
   [Anonymous], 2011, SCRUM GUIDE DEFINITI
   [Anonymous], 2008, GUIDE ADV EMPIRICAL, DOI DOI 10.1007/978-1-84800-044-511
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Cockburn A., 2004, Crystal clear: A human-powered methodology for small teams: A human-powered methodology for small teams
   COCKBURN A, 2001, AGILE SOFTWARE DEV, P256
   Coplien J. O., 2010, LEAN SOFTWARE ARCHIT, P376
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Eloranta V-P., 2015, INTERVIEW QUESTIONS
   Eloranta VP, 2013, ASIA PAC SOFWR ENG, P503, DOI 10.1109/APSEC.2013.72
   Jeffries R., FRACTIONAL SCRUM SCR
   Lindvall M, 2004, COMPUTER, V37, P26, DOI 10.1109/MC.2004.231
   Petersen K, 2009, J SYST SOFTWARE, V82, P1479, DOI 10.1016/j.jss.2009.03.036
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Salo O, 2008, IET SOFTW, V2, P58, DOI 10.1049/iet-sen:20070038
   Schwaber K., 1997, BUSINESS OBJECT DESI, DOI [10.1007/978-1-4471-0947-1_11, DOI 10.1007/978-1-4471-0947-1_11]
   Scrum homepage, SCRUMBUTS MOD SCRUM
   Sutherland J., 2001, Cutter IT Journal, V14, P5
   [No title captured]
NR 19
TC 44
Z9 47
U1 1
U2 21
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2016
VL 74
BP 194
EP 203
DI 10.1016/j.infsof.2015.12.003
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DJ7BX
UT WOS:000374368000014
DA 2024-07-18
ER

PT J
AU Deak, A
   Stålhane, T
   Sindre, G
AF Deak, Anca
   Stalhane, Tor
   Sindre, Guttorm
TI Challenges and strategies for motivating software testing personnel
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software development; Software testing; Motivation; Testers; Human
   factors; Management
ID SELF-DETERMINATION THEORY; JOB STRAIN; QUALITY; TIME
AB Context: Software testing is the key to ensuring a successful and reliable software product or service, yet testing is often considered uninteresting work compared to design or coding. As any human-based activity, the outcome of the final software product is dependent of human factors and an essential challenge for software development organizations is to find effective ways to enhance the motivation and job-satisfaction of their testers.
   Objective: Our study aims to cast light on how professional software testers can be motivated and we explore the policies and rules conceptualized and implemented inside software development projects.
   Method: This paper presents the results of an empirical study that collected data through semi-structured and in-depth interviews with 36 practitioners from 12 companies in Norway. The data collection was performed over a two years period and investigates the strategies applied by the companies for stimulating their testers, while considering the motivational and de-motivational factors influencing the testing personnel.
   Results: Our results provide a set of motivational and de-motivational factors for software testing personnel and present the strategies deployed by the companies for stimulating their testing staff.
   Conclusions: The study shows that combining testing responsibilities with development and ensuring a variety of engaging, challenging tasks and products does increase the satisfaction of testing personnel. However, despite the systematic and sincere effort invested in recognizing the importance of testing and motivating the testers, heavy emphasis is laid on minimizing project costs and duration. The results could help the companies in organizing and managing processes and stimulate their testing personnel, which will lead to better job satisfaction and productivity. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Deak, Anca; Stalhane, Tor; Sindre, Guttorm] Norwegian Univ Sci & Technol, Dept Comp Sci, N-7034 Trondheim, Norway.
C3 Norwegian University of Science & Technology (NTNU)
RP Deak, A (corresponding author), Norwegian Univ Sci & Technol, Dept Comp Sci, N-7034 Trondheim, Norway.
EM leaf357@gmail.com; stalhane@idi.ntnu.no; guttorm.sindre@idi.ntnu.no
OI Sindre, Guttorm/0000-0001-5739-8265
CR Alter S, 2008, EUR J INFORM SYST, V17, P448, DOI 10.1057/ejis.2008.37
   Amabile T.M., 1993, HUMAN RESOURCE MANAG, V3, P185, DOI [10.1016/1053-4822(93)90012-S, DOI 10.1016/1053-4822(93)90012-S]
   [Anonymous], CURRENT STATE SOFTWA
   [Anonymous], MINN S CHILD PSYCH
   [Anonymous], HDB COMPETENCE MOTIV
   [Anonymous], J INF SYST
   [Anonymous], EVALUATING TESTING A
   [Anonymous], 2013, Lean Enterprise Software and Systems, DOI DOI 10.1007/978-3-642-44930-7_4
   [Anonymous], AGIL DEV C
   [Anonymous], ADM SOCIAL WORK FACT
   [Anonymous], P 2010 ICSE WORKSH C
   [Anonymous], P 43 HAW INT C SYST
   [Anonymous], FACTORS INFLUENCING
   [Anonymous], REV FRANCAISE SOCIOL
   [Anonymous], 2009, PROC IEEE 13 INT MUL
   [Anonymous], PSYCHOSOCIAL FACTORS
   [Anonymous], ACM SIGSOFT SOFTW EN
   Austin RD, 2001, INFORM SYST RES, V12, P195, DOI 10.1287/isre.12.2.195.9699
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Beecham S, 2007, AGILE 2007, PROCEEDINGS, P37, DOI 10.1109/AGILE.2007.22
   Beer A, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P258, DOI 10.1109/SEAA.2008.28
   Bertolino A., 2007, SOFTWARE TESTING RES
   Bjarnason E, 2014, EMPIR SOFTW ENG, V19, P1809, DOI 10.1007/s10664-013-9263-y
   Boehm BW., 1981, Software Engineering Economics
   Boumans NPG, 2011, INT J AGING HUM DEV, V73, P331, DOI 10.2190/AG.73.4.d
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Causevic Adnan, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P393, DOI 10.1109/ICST.2010.52
   Csikszentmihalyi M., 1997, Finding flow: the psychology of engagement with everyday life
   De Cooman R, 2013, J APPL SOC PSYCHOL, V43, P1342, DOI 10.1111/jasp.12143
   de Jonge J, 2000, SOC SCI MED, V50, P1317, DOI 10.1016/S0277-9536(99)00388-3
   Deak A, 2014, LECT NOTES COMPUT SC, V8892, P1, DOI 10.1007/978-3-319-13835-0_1
   Deak A, 2013, IEEE ICST WORKSHOP, P102, DOI 10.1109/ICSTW.2013.18
   Deci EL, 2000, PSYCHOL INQ, V11, P227, DOI 10.1207/S15327965PLI1104_01
   Edwards S. H., 2004, P26, DOI 10.1145/971300.971312.
   Elbaum S, 2007, PROC INT CONF SOFTW, P688
   Fernández-Sanz L, 2009, COMM COM INF SC, V42, P1
   Franca A. Cesar C., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P154, DOI 10.1049/ic.2011.0019
   Gagné M, 2005, J ORGAN BEHAV, V26, P331, DOI 10.1002/job.322
   Garousi V, 2013, J SYST SOFTWARE, V86, P1354, DOI 10.1016/j.jss.2012.12.051
   Grindal M, 2006, TAIC PART - TESTING: ACADEMIC & INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P171, DOI 10.1109/TAIC-PART.2006.20
   Hall T, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1525880.1525883
   Hang B, 2011, ADV INTEL SOFT COMPU, V108, P567
   Henttonen K, 2005, STRATEG CHANG, V14, P107, DOI 10.1002/jsc.714
   HERZBERG F, 1968, HARVARD BUS REV, V46, P53
   Höst M, 2010, IEEE T EDUC, V53, P288, DOI 10.1109/TE.2009.2016106
   Kanij T, 2013, CONF SOFTW ENG EDUC, P239, DOI 10.1109/CSEET.2013.6595255
   Lenberg P, 2014, P 7 INT WORKSH COOP, P48, DOI DOI 10.1145/2593702.2593711
   Lindvall M, 2004, COMPUTER, V37, P26, DOI 10.1109/MC.2004.231
   Mäntylä MV, 2012, SOFTWARE QUAL J, V20, P145, DOI 10.1007/s11219-011-9157-4
   Martin D, 2007, PROC INT CONF SOFTW, P602
   Melo CD, 2012, EUROMICRO CONF PROC, P376, DOI 10.1109/SEAA.2012.45
   Myers M. D., 2007, Information and Organization, V17, P2, DOI 10.1016/j.infoandorg.2006.11.001
   Patton M.Q., Qualitative evaluation checklist, V2nd ed.
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   Rasmusson J, 2003, IEEE SOFTWARE, V20, P21, DOI 10.1109/MS.2003.1196316
   Robbins S.P., 1997, ESSENTIALS ORG BEHAV, V5th
   Robson C., 2002, Real world research
   Rooksby J, 2009, COMPUT SUPP COOP W J, V18, P559, DOI 10.1007/s10606-009-9098-7
   Runeson P, 2003, J SOFTW MAINT EVOL-R, V15, P41, DOI 10.1002/smr.265
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Ryan RM, 2000, AM PSYCHOL, V55, P68, DOI 10.1037/0003-066X.55.1.68
   Sargent LD, 2000, WORK STRESS, V14, P245, DOI 10.1080/02678370010025568
   Shah H, 2014, INFORM SOFTWARE TECH, V56, P6, DOI 10.1016/j.infsof.2013.04.005
   Sharp H, 2009, INFORM SOFTWARE TECH, V51, P219, DOI 10.1016/j.infsof.2008.05.009
   Smite D., 2006, Software Process Improvement and Practice, V11, P61, DOI 10.1002/spip.252
   Taipale Ossi., 2006, Proceedings of the 2006 ACM/IEEE international symposium on Empirical software engineering, P262
   Tessem J, 2007, LECT NOTES COMPUT SC, V4536, P54
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Toates F. M, 1986, MOTIVATIONAL SYSTEMS
   Wallgren LG, 2011, HUM FACTOR ERGON MAN, V21, P555, DOI 10.1002/hfm.20259
   Whitworth E, 2007, AGILE 2007, PROCEEDINGS, P26, DOI 10.1109/AGILE.2007.60
   Whitworth E, 2007, LECT NOTES COMPUT SC, V4536, P62
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zhu B, 2013, ADV INTEL SYS RES, V65, P841
NR 74
TC 33
Z9 40
U1 0
U2 26
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2016
VL 73
BP 1
EP 15
DI 10.1016/j.infsof.2016.01.002
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DI5KJ
UT WOS:000373537400001
DA 2024-07-18
ER

PT J
AU Qiu, D
   Li, BX
   Leung, H
AF Qiu, Dong
   Li, Bixin
   Leung, Hareton
TI Understanding the API usage in Java
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE API usage; Empirical study; Java
AB Context: Application Programming Interfaces (APIs) facilitate the use of programming languages. They define sets of rules and specifications for software programs to interact with. The design of language API is usually artistic, driven by aesthetic concerns and the intuitions of language architects. Despite recent studies on limited scope of API usage, there is a lack of comprehensive, quantitative analyses that explore and seek to understand how real-world source code uses language APIs.
   Objective: This study aims to understand how APIs are employed in practical development and explore their potential applications based on the results of API usage analysis.
   Method: We conduct a large-scale, comprehensive, empirical analysis of the actual usage of APIs on Java, a modern, mature, and widely-used programming language. Our corpus contains over 5000 open-source Java projects, totaling 150 million source lines of code (SLoC). We study the usage of both core (official) API library and third-party (unofficial) API libraries. We resolve project dependencies automatically, generate accurate resolved abstract syntax trees (ASTs), capture used API entities from over 1.5 million ASTs, and measure the usage based on our defined metrics: frequency, popularity and coverage.
   Results: Our study provides detailed quantitative information and yield insight, particularly, (1) confirms the conventional wisdom that the usage of APIs obeys Zipf distribution; (2) demonstrates that core API is not fully used (many classes, methods and fields have never been used); (3) discovers that deprecated API entities (in which some were deprecated long ago) are still widely used; (4) evaluates that the use of current compact profiles is under-utilized; (5) identifies API library coldspots and hotspots.
   Conclusions: Our findings are suggestive of potential applications across language API design, optimization and restriction, API education, library recommendation and compact profile construction. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Qiu, Dong; Li, Bixin] Southeast Univ, Sch Comp Sci & Engn, Nanjing, Jiangsu, Peoples R China.
   [Leung, Hareton] Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
C3 Southeast University - China; Hong Kong Polytechnic University
RP Li, BX (corresponding author), Southeast Univ, Sch Comp Sci & Engn, Nanjing, Jiangsu, Peoples R China.
EM dongqiu@seu.edu.cn; bx.li@seu.edu.cn; hareton.leung@polyu.edu.hk
FU National Natural Science Foundation of China [61572126]; Huawei
   Innovation Research Program (HIRP) [YB2013120195]; Scientific Research
   Foundation of Graduation School of Southeast University [YBJJ1313]
FX The work is supported by the National Natural Science Foundation of
   China under grant no. 61572126, the Huawei Innovation Research Program
   (HIRP) under grant no. YB2013120195 and the Scientific Research
   Foundation of Graduation School of Southeast University grant no.
   YBJJ1313.
CR Bauer V, 2012, EUR CON SFTWR MTNCE, P435, DOI 10.1109/CSMR.2012.55
   Baxter G, 2006, ACM SIGPLAN NOTICES, V41, P397, DOI 10.1145/1167515.1167507
   Bloch J., 2006, 21 ACM SIGPLAN S OBJ, P506, DOI DOI 10.1145/1176617.1176622
   Businge J., 2013, SOFTW QUAL J, V23, P107, DOI DOI 10.1007/s11219-013-9221-3
   COCKE J, 1990, IBM J RES DEV, V34, P4, DOI 10.1147/rd.341.0004
   Daughtry J.M., 2009, Proc. CHI 2009, P2771
   De Roover C, 2013, CONF PROC INT SYMP C, P152, DOI 10.1109/ICPC.2013.6613843
   Dyer R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P779, DOI 10.1145/2568225.2568295
   Gabel M, 2010, 18 ACM SIGSOFT INT S, P147
   Gil J, 2005, ACM SIGPLAN NOTICES, V40, P97, DOI 10.1145/1103845.1094819
   Grechanik M., 2010, P 2010 ACM IEEE INT, p[11, 1, 10]
   Heinemann L., 2012, THESIS TU MUNCHEN
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hoan AN, 2010, ACM SIGPLAN NOTICES, V45, P302, DOI 10.1145/1932682.1869486
   Holmes R., 2007, P OOPSLA WORKSH ECL, P70
   Java Platform, STAND ED 8 API SPEC
   Lammel R., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P1317, DOI 10.1145/1982185.1982471
   LIM WC, 1994, IEEE SOFTWARE, V11, P23, DOI 10.1109/52.311048
   Long F, 2011, The CERT Oracle Secure Coding Standard for Java
   Louridas P, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1391984.1391986
   Ma H, 2006, ASPEC 2006: 13TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P342
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Mendez D, 2013, IEEE INT WORK C SO, P43, DOI 10.1109/SCAM.2013.6648183
   Meyerovich LA, 2013, ACM SIGPLAN NOTICES, V48, P1, DOI 10.1145/2509136.2509515
   Mileva YM, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P57
   Mileva YM, 2010, LECT NOTES COMPUT SC, V6303, P173, DOI 10.1007/978-3-642-15585-7_17
   Nita Marius, 2010, P 32 ACM IEEE INT C, V1, P205
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Sandberg U., TIRED DATE CALENDAR
   Stylos J, 2009, S VIS LANG HUM CEN C, P119, DOI 10.1109/VLHCC.2009.5295283
   Stylos Jeffrey., 2008, Proc. of the 16th International Symposium on Foundations of Software Eng, P105
   Thummalapenta Suresh, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P327, DOI 10.1109/ASE.2008.43
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   Uddin G, 2012, PROC INT CONF SOFTW, P804, DOI 10.1109/ICSE.2012.6227138
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Wheeldon R, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P45, DOI 10.1109/SCAM.2003.1238030
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 39
TC 34
Z9 39
U1 5
U2 45
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2016
VL 73
BP 81
EP 100
DI 10.1016/j.infsof.2016.01.011
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI5KJ
UT WOS:000373537400007
DA 2024-07-18
ER

PT J
AU Do, T
   Khoo, SC
   Fong, ACM
   Pears, R
   Quanc, TT
AF TheAnh Do
   Khoo, Siau-Cheng
   Fong, Alvis Cheuk Ming
   Pears, Russel
   Tho Thanh Quanc
TI Goal-oriented dynamic test generation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Buffer overflow vulnerabilities; Dynamic symbolic execution; Data and
   control dependence analysis; Type inference analysis
ID SYMBOLIC EXECUTION
AB Context: Memory safety errors such as buffer overflow vulnerabilities are one of the most serious classes of security threats. Detecting and removing such security errors are important tasks of software testing for improving the quality and reliability of software in practice.
   Objective: This paper presents a goal-oriented testing approach for effectively and efficiently exploring security vulnerability errors. A goal is a potential safety violation and the testing approach is to automatically generate test inputs to uncover the violation.
   Method: We use type inference analysis to diagnose potential safety violations and dynamic symbolic execution to perform test input generation. A major challenge facing dynamic symbolic execution in such application is the combinatorial explosion of the path space. To address this fundamental scalability issue, we employ data dependence analysis to identify a root cause leading to the execution of the goal and propose a path exploration algorithm to guide dynamic symbolic execution for effectively discovering the goal.
   Results: To evaluate the effectiveness of our proposed approach, we conducted experiments against 23 buffer overflow vulnerabilities. We observed a significant improvement of our proposed algorithm over two widely adopted search algorithms. Specifically, our algorithm discovered security vulnerability errors within a matter of a few seconds, whereas the two baseline algorithms failed even after 30 min of testing on a number of test subjects.
   Conclusion: The experimental results highlight the potential of utilizing data dependence analysis to address the combinatorial path space explosion issue faced by dynamic symbolic execution for effective security testing. (C) 2015 Published by Elsevier B.V.
C1 [TheAnh Do; Fong, Alvis Cheuk Ming; Pears, Russel] Auckland Univ Technol, Auckland 1010, New Zealand.
   [Khoo, Siau-Cheng] Natl Univ Singapore, Singapore 117417, Singapore.
   [Tho Thanh Quanc] Ho Chi Minh City Univ Technol, Ho Chi Minh City, Vietnam.
C3 Auckland University of Technology; National University of Singapore;
   Vietnam National University Hochiminh City; Ho Chi Minh City University
   of Technology (HCMCUT)
RP Pears, R (corresponding author), Auckland Univ Technol, 2-14 Wakefield St, Auckland 1010, New Zealand.
EM russel.pears@aut.ac.nz
FU NUS [R-252-000-403-112, R-252-000-484-112]
FX It was partially done when the first author interned at the National
   University of Singapore (NUS), under the support of two NUS research
   Grants, R-252-000-403-112 and R-252-000-484-112.
CR Anand S, 2006, LECT NOTES COMPUT SC, V3925, P163
   Anand S., 2012, P ACM SIGSOFT 20 INT
   [Anonymous], 2007, INT C AUTOMATED SOFT
   [Anonymous], 2008, NDSS
   [Anonymous], 2010, Proceedings of the 19th international symposium on Software testing and analysis, DOI 10.1145/1831708.1831732
   Arlt S., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P301, DOI 10.1109/ISSRE.2012.25
   Baluda M, 2011, SOFTWARE QUAL J, V19, P725, DOI 10.1007/s11219-011-9150-y
   Binkley DW, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000796
   Bounimova E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P122, DOI 10.1109/ICSE.2013.6606558
   Burnim Jacob, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P443, DOI 10.1109/ASE.2008.69
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   CADAR C, 2011, P 33 INT C SOFTW ENG, P1066
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Cadar C, 2008, ACM T INFORM SYST SE, V12, DOI 10.1145/1455518.1455522
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   Common Weakness Enumeration, 2011 CWE SANS TOP 25
   Condit J, 2007, LECT NOTES COMPUT SC, V4421, P520
   Del Grosso C, 2008, COMPUT OPER RES, V35, P3125, DOI 10.1016/j.cor.2007.01.013
   Do T, 2013, COMM COM INF SC, V410, P3
   Ferguson R., 1996, ACM Transactions on Software Engineering and Methodology, V5, P63, DOI 10.1145/226155.226158
   Forrester J.E., 2000, Proceedings of the 4th conference on USENIX Windows Systems Symposium, V4, P6
   Godefroid P., 2007, SIGPLAN Notices, V42, P47, DOI [10.1145/1190216.1190226, 10.1145/1190215.1190226]
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P, 2012, COMMUN ACM, V55, P40, DOI 10.1145/2093548.2093564
   Godefroid Patrice, 2008, EMSOFT, P207
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Jensen C S, 2013, P 2013 INT S SOFTW T, P67, DOI [10.1145/2483760.2483777, DOI 10.1145/2483760.2483777]
   Ma KK, 2011, LECT NOTES COMPUT SC, V6887, P95, DOI 10.1007/978-3-642-23702-7_11
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kuznetsov V, 2012, ACM SIGPLAN NOTICES, V47, P193, DOI 10.1145/2345156.2254088
   Lakhotia K., 2013, INF SOFTW TECHNOL, V55
   LAKHOTIA K, 2010, P 22 IFIP WG 6 1 INT, V6435, P142
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   McMinn P, 2006, EVOL COMPUT, V14, P41
   Molnar D.A., 2009, THESIS U CALIFORNIA
   Pasareanu Corina S., 2009, International Journal on Software Tools for Technology Transfer, V11, P339, DOI 10.1007/s10009-009-0118-1
   Person S, 2011, ACM SIGPLAN NOTICES, V46, P504, DOI 10.1145/1993316.1993558
   Qi D., 2011, P 19 ACM SIGSOFT S 1, P278
   Rungta N, 2009, LECT NOTES COMPUT SC, V5578, P174, DOI 10.1007/978-3-642-02652-2_16
   Ruwase O., 2004, P 11 ANN NETW DISTR
   Santelices R.A., 2010, P 19 INT S SOFTW TES, P195, DOI [DOI 10.1145/1831708.1831733, 10.1145/1831708.1831733]
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Thummalapenta S, 2011, ACM SIGPLAN NOTICES, V46, P189, DOI 10.1145/2076021.2048083
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Wagner D., 2000, P NETWORK DISTRIBUTE
   Walpole J., 2000, Proceedings DARPA Information Survivability Conference and Exposition. DIS-CEX'00, P119
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Xie T, 2009, I C DEPEND SYS NETWO, P359, DOI 10.1109/DSN.2009.5270315
   Xin B., 2007, ISSTA 07 P INT S SOF, P185, DOI 10.1145/1273463.1273489
NR 51
TC 5
Z9 5
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2015
VL 66
BP 40
EP 57
DI 10.1016/j.infsof.2015.05.007
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CN8OG
UT WOS:000358699900004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Riaz, M
   Breaux, T
   Williams, L
AF Riaz, Maria
   Breaux, Travis
   Williams, Laurie
TI How have we evaluated software pattern application? A systematic mapping
   study of research design practices
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software pattern; Mapping study; Systematic review; Empirical
   evaluation; Empirical design
AB Context: Software patterns encapsulate expert knowledge for constructing successful solutions to recurring problems. Although a large collection of software patterns is available in literature, empirical evidence on how well various patterns help in problem solving is limited and inconclusive. The context of these empirical findings is also not well understood, limiting applicability and generalizability of the findings.
   Objective: To characterize the research design of empirical studies exploring software pattern application involving human participants.
   Method: We conducted a systematic mapping study to identify and analyze 30 primary empirical studies on software pattern application, including 24 original studies and 6 replications. We characterize the research design in terms of the questions researchers have explored and the context of empirical research efforts. We also classify the studies in terms of measures used for evaluation, and threats to validity considered during study design and execution.
   Results: Use of software patterns in maintenance is the most commonly investigated theme, explored in 16 studies. Object-oriented design patterns are evaluated in 14 studies while 4 studies evaluate architectural patterns. We identified 10 different constructs with 31 associated measures used to evaluate software patterns. Measures for 'efficiency' and 'usability' are commonly used to evaluate the problem solving process. While measures for 'completeness', 'correctness' and 'quality' are commonly used to evaluate the final artifact. Overall, 'time to complete a task' is the most frequently used measure, employed in 15 studies to measure 'efficiency'. For qualitative measures, studies do not report approaches for minimizing biases 27% of the time. Nine studies do not discuss any threats to validity.
   Conclusion: Subtle differences in study design and execution can limit comparison of findings. Establishing baselines for participants' experience level, providing appropriate training, standardizing problem sets, and employing commonly used measures to evaluate performance can support replication and comparison of results across studies. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Riaz, Maria; Williams, Laurie] N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   [Breaux, Travis] Carnegie Mellon Univ, Inst Software Res, Pittsburgh, PA 15213 USA.
C3 North Carolina State University; Carnegie Mellon University
RP Riaz, M (corresponding author), N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM mriaz@ncsu.edu; breaux@cs.cmu.edu; williams@csc.ncsu.edu
RI Riaz, Maria/JXR-6545-2024
OI Breaux, Travis/0000-0001-7127-8155
FU Army Research Office [W911NF-09-1-0273]
FX We thank the NCSU Realsearch Group and the CMU Requirements Engineering
   Lab for their valuable feedback on this paper. We give special thanks to
   Ben Smith and Jason King for their help with voting on the papers. This
   research was funded by the Army Research Office (W911NF-09-1-0273).
CR Ali M, 2013, INT C INFO SCI APPL
   Ampatzoglou A, 2013, J SYST SOFTWARE, V86, P1945, DOI 10.1016/j.jss.2013.03.063
   Ampatzoglou A, 2011, J SYST SOFTWARE, V84, P2265, DOI 10.1016/j.jss.2011.06.047
   [Anonymous], EMP SOFTW ENG MEAS E
   [Anonymous], EXPT QUASI EXPT DESI
   [Anonymous], 1988, Statistical power analysis for the behavioral sciences
   [Anonymous], 5 INT C COMP SCI APP
   [Anonymous], 14 INT C EV ASS SOFT
   [Anonymous], 1 ACM S BOOTC SCI SE
   [Anonymous], 12 INT C QUAL SOFTW
   [Anonymous], 2001, P 34 ANN HAW INT C S
   [Anonymous], EUR J OPER RES
   [Anonymous], IEEE T SOFTW ENG
   [Anonymous], 1977, PATTERN LANGUAGE TOW
   [Anonymous], 3 ACM SIGPLAN WORKSH
   [Anonymous], 12 EUR C SOFTW MAINT
   [Anonymous], 2 INT C EMP SOFTW EN
   [Anonymous], 2 INT WORKSH REPL EM
   [Anonymous], OBJECT TECHNOLOGY SE
   [Anonymous], 2008, USING MAPPING STUDIE
   [Anonymous], 2008, PROC 12 INT C EVAL A
   [Anonymous], CASCON2008
   [Anonymous], 2014, 1 INT WORKSH EV SEC
   [Anonymous], COMMUNICATIONS ACM
   [Anonymous], COMMUN ACM
   [Anonymous], 1 INT WORKSH REPL EM
   [Anonymous], 25 INT C SOFTW ENG
   [Anonymous], FUT SOFTW ENG FOSE 0
   Balijepally V, 2009, MIS QUART, V33, P91
   Basili V.R., 1992, Software Modeling and Measurement: The Goal/Question/Metric Paradigm
   Carver JC, 2010, EMPIR SOFTW ENG, V15, P35, DOI 10.1007/s10664-009-9109-9
   Charness N, 2008, HUM FACTORS, V50, P427, DOI 10.1518/001872008X312206
   COOPER G, 1987, J EDUC PSYCHOL, V79, P347, DOI 10.1037/0022-0663.79.4.347
   Creswell J. W., 2013, RES DESIGN QUALITATI
   Dieste O, 2009, EMPIR SOFTW ENG, V14, P513, DOI 10.1007/s10664-008-9091-7
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Jackson M, 2005, INFORM SOFTWARE TECH, V47, P903, DOI 10.1016/j.infsof.2005.08.004
   Jackson M., 2001, Problem Frames
   Kelton W.D., 2002, Simulation with ARENA
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P97, DOI 10.1007/s10664-007-9053-5
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kohls Christian., 2008, Proceedings of the 15th Conference on Pattern Languages of Programs, PLoP '08, p15:1
   Lane DM., ONLINE STAT ED INTER
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Robilliard PN, 1999, COMMUN ACM, V42, P87, DOI 10.1145/291469.291476
   Schumacher M., 2005, Security Patterns: Integrating Security and Systems Engineering, V1st
   Schummer T., 2007, Patterns for computer-mediated interaction fwiley software patterns series
   Staffs Keele, 2007, Tech. Rep.
   Viera AJ, 2005, FAM MED, V37, P360
   Vokác M, 2004, IEEE T SOFTWARE ENG, V30, P904, DOI 10.1109/TSE.2004.99
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yin R.K., 2014, Applications of case study research, V2nd
   Zhang C, 2012, IEEE T SOFTWARE ENG, V38, P1213, DOI 10.1109/TSE.2011.79
NR 55
TC 26
Z9 27
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2015
VL 65
BP 14
EP 38
DI 10.1016/j.infsof.2015.04.002
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CK3IP
UT WOS:000356110100002
DA 2024-07-18
ER

PT J
AU Rouhani, BD
   Mahrin, MN
   Nikpay, F
   Ahmad, RB
   Nikfard, P
AF Rouhani, Babak Darvish
   Mahrin, Mohd Naz'ri
   Nikpay, Fatemeh
   Ahmad, Rodina Binti
   Nikfard, Pourya
TI A systematic literature review on Enterprise Architecture Implementation
   Methodologies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Enterprise Architecture Implementation; Methodology; SLR; EAIM;
   Enterprise Architecture; Methodology
ID FRAMEWORK
AB Context: Enterprise Architecture (EA) is a strategy to align business and Information Technology (IT) within an enterprise. EA is managed, developed, and maintained throughout the EA Implementation Methodology (EAIM).
   Objective: The aims of this study are to identify the existing effective practices that are used by existing EAIMs, identify the factors that affect the effectiveness of EAIM, identify the current tools that are used by existing EAIMs, and identify the open problems and areas related to EAIM for improvement.
   Method: A Systematic Literature Review (SLR) was carried out. 669 papers were retrieved by a manual search in 6 databases and 46 primary studies were finally included.
   Result: From these studies 33% were journal articles, 41% were conference papers while 26% were contributions from the studies consisted of book chapters. Consequently, 28 practices, 19 factors, and 15 tools were identified and analysed.
   Conclusion: Several rigorous researches have been done in order to provide effective EAIM, however there are still problems in components of EAIM, including: there is lack of tool support for whole part of EA implementation, there are deficiency in addressing the EAIM's practices especially in modeling, management, and maintenance, there is lack of consideration on non-functional requirement in existing EAIM, there is no appropriate consideration on requirement analysis in most existing EAIM. This review provides researchers with some guidelines for future research on this topic. It also provides broad information on EAIM, which could be useful for practitioners. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Rouhani, Babak Darvish; Mahrin, Mohd Naz'ri] Univ Teknol Malaysia, Adv Informat Sch, Kuala Lumpur 54100, Malaysia.
   [Nikpay, Fatemeh; Ahmad, Rodina Binti] Univ Malaya, Fac Comp Sci & Informat Technol, Kuala Lumpur 50603, Malaysia.
   [Nikfard, Pourya] Univ Teknol Malaysia, Fac Comp, Skudai, Johor Baru, Malaysia.
C3 Universiti Teknologi Malaysia; Universiti Malaya; Universiti Teknologi
   Malaysia
RP Rouhani, BD (corresponding author), Univ Teknol Malaysia, Adv Informat Sch, Jalan Semarak, Kuala Lumpur 54100, Malaysia.
EM drbabak2@live.utm.my; mdnazrim@utm.my; fa.nikpay@siswa.um.edu.my;
   rodina@um.edu.my; npourya2@live.utm.my
RI Rouhani, Babak Darvish/A-8843-2013; Ahmad, Rodina/B-9582-2010; Rouhani,
   Babak Darvish/O-1787-2019; Mahrin, Mohd Naz'ri/A-2711-2014
OI Rouhani, Babak Darvish/0000-0003-4878-8653; Mahrin, Mohd
   Naz'ri/0000-0002-9604-9700
CR Ahlemann F., 2012, Strategic enterprise architecture management: Challenges, best practices, and future developments, P265
   Aier Stephan, 2011, International Journal of Internet and Enterprise Management, V7, P84, DOI 10.1504/IJIEM.2011.038384
   Aier S, 2009, LECT NOTES BUS INF P, V34, P55
   [Anonymous], 2012, INT FORUM STRATEGIC
   [Anonymous], 2008, INFORM COMMUNICATION
   [Anonymous], 2009, P 15 AM C INF SYST S
   Bente S., 2013, COLLABORATIVE ENTERP
   Chung H.M., 2002, P 35 HAW INT C SYST
   Clark T, 2012, LECT NOTES BUS INF P, V120, P48
   Cuenca L, 2010, IFIP ADV INF COMM TE, V322, P11
   Darvish Rouhani B., 2014, 2014 WORLD C INF SYS
   Goethals F., 2006, ENTERPRISE ARCHITECT
   Hagan PaulaJ., 2004, GUIDE EVOLVING ENTER
   Hoyland CA, 2012, PROCEDIA COMPUT SCI, V12, P37, DOI 10.1016/j.procs.2012.09.026
   Iyamu Tiko, 2009, 2009 IEEE Conference on Commerce and Enterprise Computing, P221, DOI 10.1109/CEC.2009.57
   Kambhampaty S, 2006, INT FED INFO PROC, P261
   Kitchenham B., PROCEDURES PERFORMIN, V33
   Kitchenham B.A., 2007, GUIDELINES PERFORMIN, V10
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Land MOT, 2009, ENTERP ENG SER, P85
   Lankhorst M., 2012, Enterprise Architecture at Work: Modelling, Communication and Analysis
   Leist S., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1546, DOI 10.1145/1141277.1141635
   Mahdavi-Hezavehi S, 2013, INFORM SOFTWARE TECH, V55, P320, DOI 10.1016/j.infsof.2012.08.010
   Malta P.M., 2012, DIALOGICAL ACTION RE
   Medini K, 2012, INT J COMPUT INTEG M, V25, P594, DOI 10.1080/0951192X.2011.646312
   Morganwalp J. M., 2004, International Journal of Technology, Policy and Management, V4, P81, DOI 10.1504/IJTPM.2004.004569
   Nakakawa A, 2009, LECT NOTES BUS INF P, V28, P109
   Niemann K.D., 2006, SAFEGUARDING CONTROL, P195
   Ortiz A, 1999, COMPUT IND, V40, P155, DOI 10.1016/S0166-3615(99)00021-4
   Pulkkinen M, 2005, P 38 ANN HAW INT C S, V38, p223c
   Rohloff M., 2005, ECIS 2005 P
   Rouhani BD, 2014, ADV INTELL SYST, V276, P239, DOI 10.1007/978-3-319-05948-8_23
   Rouhani BD, 2013, 2013 INTERNATIONAL CONFERENCE ON INFORMATICS AND CREATIVE MULTIMEDIA (ICICM), P1, DOI 10.1109/ICICM.2013.9
   Saha P, 2012, ENTERPRISE ARCHITECTURE FOR CONNECTED E-GOVERNMENT: PRACTICES AND INNOVATIONS, P1, DOI 10.4018/978-1-4666-1824-4
   Sasa A., 2011, J SYST SOFTW, V82, P27, DOI DOI 10.1016/J.JSS.2011.02.043
   Schöenherr M, 2009, LECT NOTES COMPUT SC, V5472, P400, DOI 10.1007/978-3-642-01247-1_40
   Spewak StevenH., 2006, Journal of Enterprise Architecture, P11
   Sundberg HP, 2007, ADVANCES IN INFORMATION SYSTEMS DEVELOPMENT, VOL 2, P287, DOI 10.1007/978-0-387-70802-7_24
   van der Raadt B, 2010, J SYST SOFTWARE, V83, P1954, DOI 10.1016/j.jss.2010.05.076
   Wang XY, 2009, HIS 2009: 2009 NINTH INTERNATIONAL CONFERENCE ON HYBRID INTELLIGENT SYSTEMS, VOL 3, PROCEEDINGS, P226, DOI 10.1109/HIS.2009.260
   Wegmann A., 2005, P CAJSE 05 FOR FAC E, P6
   Winter R., 2006, P IEEE INT ENTERPRIS, DOI [DOI 10.1109/EDOCW.2006.33, 10.1109/EDOCW.2006.33]
NR 43
TC 66
Z9 82
U1 0
U2 52
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2015
VL 62
BP 1
EP 20
DI 10.1016/j.infsof.2015.01.012
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG3KL
UT WOS:000353179000001
DA 2024-07-18
ER

PT J
AU Varnell-Sarjeant, J
   Andrews, AA
   Lucente, J
   Stefik, A
AF Varnell-Sarjeant, Julia
   Andrews, Anneliese Amschler
   Lucente, Joe
   Stefik, Andreas
TI Comparing development approaches and reuse strategies: An empirical
   evaluation of developer views from the aerospace industry
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical study; Software reuse; Embedded systems; Nonembedded systems
ID SOFTWARE REUSE; PROJECT SUCCESS; ARCHITECTURE; QUALITY; SYSTEMS
AB Context: There is a debate in the aerospace industry whether lessons from reuse successes and failures in nonembedded software can be applied to embedded software. Reuse supposedly reduces development time and errors. The aerospace industry was an early advocate of reuse, but in Aerospace, not all reuse experiences have been as successful as expected. Some major projects experienced large overruns in time, budget, as well as inferior performance, at least in part, due to the gap between reuse expectations and reuse outcomes. This seemed to be especially the case for embedded systems.
   Objective: Our goal is to discover software reuse practices in the aerospace industry. In particular, we wish to learn whether practitioners who develop embedded systems use the same development approaches and artifacts as software practitioners who develop nonembedded systems. We wish to learn whether reuse influences selection of development approaches and artifacts and whether outcomes are impacted.
   Method: We developed a survey given to software practitioners in a major Aerospace Corporation developing either embedded or nonembedded systems. The survey probed to identify development methods used, artifacts reused and outcomes resulting from the reuse. We used qualitative and quantitative methods such as descriptive statistics, MANOVA, Principle Component Analysis and an analysis of freeform comments to compare reuse practices between embedded systems and nonembedded systems development.
   Results: We found that embedded systems were more likely to include component based development, product line development and model based development in their development approach, whereas nonembedded systems were more likely to include Ad Hoc and COTS/GOTS in their development approach. Embedded systems developers tended to reuse more and different reuse artifacts.
   Conclusion: We found that, while outcomes were nearly identical, the development approaches and artifacts used did, in fact, differ. In particular, the tight coupling between code and the platform in embedded systems often dictated the development approach and reuse artifacts and identified some of the reasons. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Varnell-Sarjeant, Julia; Andrews, Anneliese Amschler; Lucente, Joe] Univ Denver, Dept Comp Sci, Denver, CO 80208 USA.
   [Stefik, Andreas] Univ Nevada, Dept Comp Sci, Las Vegas, NV 89154 USA.
C3 University of Denver; Nevada System of Higher Education (NSHE);
   University of Nevada Las Vegas
RP Varnell-Sarjeant, J (corresponding author), Univ Denver, Dept Comp Sci, Denver, CO 80208 USA.
EM jfvarnellsarj@me.com; andreas.stefik@unlv.edu; joelucente@du.edu;
   andrews@cs.du.edu
FU National Science Foundation [0934413]; Direct For Computer & Info Scie &
   Enginr; Division Of Computer and Network Systems [0934413] Funding
   Source: National Science Foundation
FX This material is based upon work supported in part by the National
   Science Foundation under Grant #0934413 to the University of Denver.
CR Anderson C., 1991, AEROSPACE SOFTWARE E
   Anguswamy R, 2012, INT SYMP EMP SOFTWAR, P161, DOI 10.1145/2372251.2372280
   [Anonymous], 2013, 265502013 ISOIEC
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2001, SOFTWARE PRODUCT LIN
   [Anonymous], 2016, STRESS AM IMPACT DIS
   Basili VR, 2007, EMPIR SOFTW ENG, V12, P107, DOI 10.1007/s10664-006-9030-4
   Bhatia S, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1377492.1377497
   Blickstein I., 2013, Defense Acquisition Research Journal: A Publication of the Defense Acquisition University, V20, P128
   Cai X, 2000, SEVENTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P372, DOI 10.1109/APSEC.2000.896722
   de Almeida E.S., 2005, IEEE INT C INF REUS, P66
   de Cima A. M., 1994, Proceedings. Third International Conference on Software Reuse: Advances in Software Reusability (Cat. No.94TH06940), P178, DOI 10.1109/ICSR.1994.365786
   Defense Information Systems Agency, 2013, TECHNICAL REPORT
   Devanbu P, 1996, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.1996.493415
   Eichmann D., 1997, TECHNICAL REPORT
   Estefan J., 2008, INCOSE SURVEY MBSE M, P1
   Ezran M., 1999, ICSE 99, P681
   FRAKES WB, 1995, COMMUN ACM, V38, P75, DOI 10.1145/203241.203260
   Frakes WB, 2000, 3RD IEEE SYMPOSIUM ON APPLICATION SPECIFIC SYSTEMS AND SOFTWARE ENGINEERING TECHNOLOGY, PROCEEDINGS, P79, DOI 10.1109/ASSET.2000.888037
   FRAKES WB, 1995, J SYST SOFTWARE, V30, P295, DOI 10.1016/0164-1212(94)00139-E
   Glasgow P.A., 2005, TECHNICAL REPORT
   Graaf B, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P354, DOI 10.1109/CSMR.2005.28
   Hall PAV, 1999, INFORM SOFTWARE TECH, V41, P963, DOI 10.1016/S0950-5849(99)00071-3
   Henninger S., 1997, ACM Transactions on Software Engineering and Methodology, V6, P111, DOI 10.1145/248233.248242
   Holmes R, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377657
   Ilk N, 2011, INFORM SYST FRONT, V13, P359, DOI 10.1007/s10796-010-9286-5
   International Organization for Standardization, 2006, TECHNICAL REPORT
   Jackson E.K., 2006, EMSOFT, P53
   Jacobson I, 1997, COMPUTER, V30, P36, DOI 10.1109/2.625300
   Jiao J, 2007, J INTELL MANUF, V18, P5, DOI 10.1007/s10845-007-0003-2
   Jin Guojie, 2011, Journal of Software, V6, P374, DOI 10.4304/jsw.6.3.374-385
   Kamalraj R., 2011, INT J COMPUT APPL, V27, P33
   KARLSSON EA, 1995, SOFTWARE REUSE HOLIS
   Khoshgoftaar T. M., 1994, Proceedings of the Second International Software Metrics Symposium (Cat. No.94TH06478), P61, DOI 10.1109/METRIC.1994.344227
   Khoshgoftaar TM, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P364, DOI 10.1109/ISSRE.1996.558896
   Köppen V, 2009, IETE TECH REV, V26, P350, DOI 10.4103/0256-4602.55278
   Lee E. A., 2002, ADV COMPUT, P1
   Lee EA, 2010, DES AUT CON, P737
   Li JY, 2004, LECT NOTES COMPUT SC, V3009, P538
   Lim W.C., 1998, Managing Software Reuse
   Macionis J.J., 2007, SOCIOLOGY
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   Mili A, 1998, ANN SOFTW ENG, V5, P349, DOI 10.1023/A:1018964121953
   Mohagheghi P, 2007, EMPIR SOFTW ENG, V12, P471, DOI 10.1007/s10664-007-9040-x
   Morisio M, 2002, IEEE T SOFTWARE ENG, V28, P340, DOI 10.1109/TSE.2002.995420
   NASA, 2004, NASA SOFTW ENG REQ A
   Nazareth DL, 2004, J SYST SOFTWARE, V73, P245, DOI [10.1016/S0164-1212(03)00248-6, 10.1016/s0164-1212(03)00248-6]
   Ohlsson M. C., 1999, 1999 IEEE Aerospace Conference. Proceedings (Cat. No.99TH8403), P69, DOI 10.1109/AERO.1999.790190
   Ohlsson MC, 1998, PROC IEEE INT CONF S, P6, DOI 10.1109/ICSM.1998.738484
   Orrego A, 2009, LECT NOTES COMPUT SC, V5543, P186, DOI 10.1007/978-3-642-01680-6_18
   Pearson K, 1901, PHILOS MAG, V2, P559, DOI 10.1080/14786440109462720
   Raatikainen M, 2004, LECT NOTES COMPUT SC, V3014, P403
   Rine DC, 1997, COMPUTER, V30, P43, DOI 10.1109/MC.1997.625303
   Rine DC, 2000, INFORM SOFTWARE TECH, V42, P47, DOI 10.1016/S0950-5849(99)00055-5
   Rine DC, 1998, J SYST SOFTWARE, V41, P17, DOI 10.1016/S0164-1212(97)10003-6
   Rothenberger M. A., 1999, SYSTEMS DEV SYSTEMAT
   Rothenberger MA, 2003, IEEE T SOFTWARE ENG, V29, P825, DOI 10.1109/TSE.2003.1232287
   Shiva SG, 2007, INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY, PROCEEDINGS, P603
   Studer R., 1998, IEEE T DATA KNOWL EN, V25
   Sullivan M.J., 2011, TRENDS NUNN MCCURDY
   Svahnberg M, 2005, EMPIR SOFTW ENG, V10, P149, DOI 10.1007/s10664-004-6190-y
   TICHY WF, 1995, J SYST SOFTWARE, V28, P9, DOI 10.1016/0164-1212(94)00111-Y
   Varnell-Sarjeant J., 2015, ADV COMPUTE IN PRESS, V97
   Welty C. A., 1999, 14th IEEE International Conference on Automated Software Engineering, P259, DOI 10.1109/ASE.1999.802304
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   Wohlin C, 2005, LECT NOTES COMPUT SC, V3547, P385
   Wohlin C, 2003, EMPIR SOFTW ENG, V8, P285, DOI 10.1023/A:1024476828183
   Wohlin C., 2012, Experimentation in Software Engineering
   Yan H, 2009, LECT NOTES COMPUT SC, V5791, P65
   Yin R.K., 2009, CASE STUDIES DESIGN, V4th
   Yong Peng, 2009, Proceedings of the 2009 Ninth IEEE International Conference on Computer and Information Technology. CIT 2009, P187, DOI 10.1109/CIT.2009.26
   Yongbeom Kim, 1998, Journal of Management Information Systems, V14, P113
   Zhang DH, 2003, ETFA 2003: IEEE CONFERENCE ON EMERGING TECHNOLOGIES AND FACTORY AUTOMATION, VOL 2, PROCEEDINGS, P516
   Zuniga G. L., 2001, Formal Ontology in Information Systems. Collected Papers from the Second International Conference, P187, DOI 10.1145/505168.505187
NR 74
TC 9
Z9 10
U1 0
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2015
VL 61
BP 71
EP 92
DI 10.1016/j.infsof.2015.01.002
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF7PI
UT WOS:000352748400005
DA 2024-07-18
ER

PT J
AU Nguyen-Duc, A
   Cruzes, DS
   Conradi, R
AF Anh Nguyen-Duc
   Cruzes, Daniela S.
   Conradi, Reidar
TI The impact of global dispersion on coordination, team performance and
   software quality - A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Global software development; Systematic literature review; Global
   dispersion; Performance; Software quality; Meta analysis
ID DISTANCE; COLLABORATION; CHALLENGES; LESSONS; SPEED
AB Context: Global software development (GSD) contains different context setting dimensions, which are essential for effective teamwork and success of projects. Although considerable research effort has been made in this area, as yet, no agreement has been reached about the impact of these dispersion dimensions on team coordination and project outcomes.
   Objective: This paper summarizes empirical evidence on the impact of global dispersion dimensions on coordination, team performance and project outcomes.
   Method: We performed a systematic literature review of 46 publications from 25 journals and 19 conference and workshop proceedings, which were published between 2001 and 2013. Thematic analysis was used to identify global dimensions and their measures. Vote counting was used to decide on the impact trends of dispersion dimensions on team performance and software quality.
   Results: Global dispersion dimensions are consistently conceptualized, but quantified in many different ways. Different dispersion dimensions are associated with a distinct set of coordination challenges. Overall, geographical dispersion tends to have a negative impact on team performance and software quality. Temporal dispersion tends to have a negative impact on software quality, but its impact on team performance is inconsistent and can be explained by type of performance.
   Conclusion: For researchers, we reveal several opportunities for future research, such as coordination challenges in inter-organizational software projects, impact of processes and practices mismatches on project outcomes, evolution of coordination needs and mechanism over time and impact of dispersion dimensions on open source project outcomes. For practitioners, they should consider the tradeoff between cost and benefits while dispersing tasks, alignment impact of dispersion dimensions with individual and organizational objectives, coordination mechanisms as situational approaches and collocation of development activities of high quality demand components in GSD projects. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Anh Nguyen-Duc; Cruzes, Daniela S.; Conradi, Reidar] NTNU, Dept Comp & Informat Sci IDI, Trondheim, Norway.
C3 Norwegian University of Science & Technology (NTNU)
RP Nguyen-Duc, A (corresponding author), NTNU, Dept Comp & Informat Sci IDI, Sem Saelands Vei 7-9, Trondheim, Norway.
EM anhn@idi.ntnu.no; dcruzes@idi.ntnu.no; Reidar.Conradi@idi.ntnu.no
OI Nguyen-Duc, Anh/0000-0002-7063-9200
CR Ågerfalk PJ, 2008, LECT NOTES COMPUT SC, V5007, P1, DOI 10.1007/978-3-540-79588-9_1
   Ågerfalk PJ, 2006, COMMUN ACM, V49, P26, DOI 10.1145/1164394.1164416
   Al-Ani B., 2008, J COMPUTER SCI ENG A, V1, P10
   Ali B.M., 2007, J SYST SOFTW, V80, P1438
   Anh N.D., 2013, ICGSE BAR IT
   Duc AN, 2011, IFIP ADV INF COMM TE, V365, P1
   Anh Nguyen Duc, 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P110, DOI 10.1109/CHASE.2012.6223003
   [Anonymous], 2007, TERMS DEF
   [Anonymous], 2008, Software Process: Improvement and Practice, DOI DOI 10.1002/SPIP.378
   [Anonymous], 2008, CORNELL LAW REV
   [Anonymous], 2004, INTEGRATIVE APPROACH
   [Anonymous], 2011, IEEE 11073-20601a-2010 (Amendment to IEEE Std 11073-20601-2008), P1, DOI [DOI 10.1109/IEEESTD.2011.6016198, DOI 10.1109/IEEESTD.2011.5712769]
   Bhat JM, 2006, IEEE SOFTWARE, V23, P38, DOI 10.1109/MS.2006.137
   BIRD C, 2009, 31 ICSE VANC BRIT CO, P518
   Blackburn JD, 1996, IEEE T SOFTWARE ENG, V22, P875, DOI 10.1109/32.553636
   Carmel E., 1999, GLOBAL SOFTWARE TEAM
   Carmel E, 2007, COMMUN ACM, V50, P40, DOI 10.1145/1290958.1290959
   Cataldo M., 2006, P 2006 20 06 ANN C C, P353, DOI DOI 10.1145/1180875.1180929
   Cataldo M, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P71
   Cataldo Marcelo., 2008, Proceedings of the 2008 International Workshop on Cooperative and Human Aspects of Software Engineering, CHASE '08, Co-located with the 13th International Conference on Software Engineering, ICSE 2008, May 10, 2008 - May 18, 2008, P25
   Clear T., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P144, DOI 10.1109/ICGSE.2012.14
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Curtis B., 1989, C ORG COMP COORD COL
   DALBERG V, 2006, INT C SOFTW ENG P 20, P51
   Damian D, 2006, LECT NOTES COMPUT SC, V3922, P155
   Damian D, 2006, IEEE SOFTWARE, V23, P17, DOI 10.1109/MS.2006.126
   Damian DE, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P319, DOI 10.1109/ICRE.2002.1048545
   Dieste Oscar, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P215
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Ebert C, 2001, IEEE SOFTWARE, V18, P62, DOI 10.1109/52.914748
   Ebert C., 2007, Software measurement: establish, extract, evaluate, execute
   Espinosa J. A., 2006, Information Technology & People, V19, P345, DOI 10.1108/09593840610718036
   Falagas ME, 2008, FASEB J, V22, P338, DOI 10.1096/fj.07-9492LSF
   FASSBINDER P, 2009, 4 ICGSE LIM IR, P262
   Fenton N.E., 1991, SOFTWARE METRICS REG
   Fricker S, 2010, LECT NOTES COMPUT SC, V6182, P60, DOI 10.1007/978-3-642-14192-8_7
   Grewal R, 2006, MANAGE SCI, V52, P1043, DOI 10.1287/mnsc.1060.0550
   Gupta M., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P185, DOI 10.1109/ICGSE.2011.30
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Holmström H, 2006, INFORM SYST MANAGE, V23, P7, DOI 10.1201/1078.10580530/46108.23.3.20060601/93703.2
   Ivarsson M, 2009, REQUIR ENG, V14, P155, DOI 10.1007/s00766-009-0080-1
   Jamieson Susan, 2004, Med Educ, V38, P1217, DOI 10.1111/j.1365-2929.2004.02012.x
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Knoben J, 2006, INT J MANAG REV, V8, P71, DOI 10.1111/j.1468-2370.2006.00121.x
   KOCAGUNELI E, 2013, 35 ICSE SAN FRANC US, P882
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lanubile F, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.39
   Malone ThomasW., 1990, CSCW 90, P357, DOI DOI 10.1145/99332.99367
   Manning S., 2010, DYNAMIC PERSPECTIVE
   Messerschmitt D., 2003, SOFTWARE ECOSYSTEM U
   Mohagheghi P., 2004, INT S EMP SOFTW ENG
   Montagud S, 2012, SOFTWARE QUAL J, V20, P425, DOI 10.1007/s11219-011-9146-7
   Munkvold BE, 2007, INFORM MANAGE-AMSTER, V44, P287, DOI 10.1016/j.im.2007.01.002
   Myers M., 2002, QUALITATIVE RES INFO
   Anh ND, 2012, INT SYMP EMP SOFTWAR, P129, DOI 10.1145/2372251.2372274
   Noll J., 2011, ACM INROADS, V1, P66, DOI [10.1145/1835428.1835445, DOI 10.1145/1835428.1835445]
   O'Leary MB, 2007, MIS QUART, V31, P433
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   Powell G., 2004, ADV INFORM SYST, V35, P6
   Prikladnicki R, 2012, J SOFTW-EVOL PROC, V24, P119, DOI 10.1002/smr.475
   Prikladnicki R, 2010, INFORM SOFTWARE TECH, V52, P779, DOI 10.1016/j.infsof.2010.03.009
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Ramasubbu N, 2008, MIS QUART, V32, P437
   Scacchi W., 2006, Software Process Improvement and Practice, V11, P95, DOI 10.1002/spip.255
   Serce FC, 2011, COMPUT HUM BEHAV, V27, P490, DOI 10.1016/j.chb.2010.09.017
   Smite D, 2008, LECT NOTES COMPUT SC, V5089, P345, DOI 10.1007/978-3-540-69566-0_28
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Smith Jr D. W., 2012, J EMPIR SOFTW ENG, P1
   Steinmacher I, 2010, LECT NOTES COMPUT SC, V6257, P185, DOI 10.1007/978-3-642-15714-1_15
   Swigger K.M., 4 ICGSE LIM IR, P267
   Torkar R, 2012, INT J SOFTW ENG KNOW, V22, P385, DOI 10.1142/S021819401250009X
   Waring T, 2005, INT J INFORM MANAGE, V25, P411, DOI 10.1016/j.ijinfomgt.2005.06.002
   Waring T., 2005, HDB GLOBAL OUTSOURCI, V25, P411
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C., 2003, EMPIRICAL RES METHOD
   Yamauchi Y., 2000, CSCW 2000. ACM 2000 Conference on Computer Supported Cooperative Work, P329, DOI 10.1145/358916.359004
NR 81
TC 88
Z9 100
U1 1
U2 39
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 277
EP 294
DI 10.1016/j.infsof.2014.06.002
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AU9YI
UT WOS:000345947500016
DA 2024-07-18
ER

PT J
AU Ayora, C
   Torres, V
   Weber, B
   Reichert, M
   Pelechano, V
AF Ayora, Clara
   Torres, Victoria
   Weber, Barbara
   Reichert, Manfred
   Pelechano, Vicente
TI <i>VIVACE</i>: A framework for the systematic evaluation of variability
   support in process-aware information systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Business process; Business process variability; Process-aware
   information systems; Process family; Systematic literature review
ID CONFIGURABLE PROCESS MODELS; BUSINESS PROCESS MODELS; MANAGING
   VARIABILITY; PROCESS VARIANTS; MANAGEMENT; WORKFLOW; REQUIREMENTS;
   CORRECTNESS; PATTERNS; PITFALLS
AB Context: The increasing adoption of process-aware information systems (PAISs) such as workflow management systems, enterprise resource planning systems, or case management systems, together with the high variability in business processes (e.g., sales processes may vary depending on the respective products and countries), has resulted in large industrial process model repositories. To cope with this business process variability, the proper management of process variants along the entire process lifecycle becomes crucial.
   Objective: The goal of this paper is to develop a fundamental understanding of business process variability. In particular, the paper will provide a framework for assessing and comparing process variability approaches and the support they provide for the different phases of the business process lifecycle (i.e., process analysis and design, configuration, enactment, diagnosis, and evolution).
   Method: We conducted a systematic literature review (SLR) in order to discover how process variability is supported by existing approaches.
   Results: The SLR resulted in 63 primary studies which were deeply analyzed. Based on this analysis, we derived the VIVACE framework. VIVACE allows assessing the expressiveness of a process modeling language regarding the explicit specification of process variability. Furthermore, the support provided by a process-aware information system to properly deal with process model variants can be assessed with VIVACE as well.
   Conclusions: VIVACE provides an empirically-grounded framework for process engineers that enables them to evaluate existing process variability approaches as well as to select that variability approach meeting their requirements best. Finally, it helps process engineers in implementing PAISs supporting process variability along the entire process lifecycle. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Ayora, Clara; Torres, Victoria; Pelechano, Vicente] Univ Politecn Valencia, Ctr Invest Metodos Prod Software, Valencia 46022, Spain.
   [Weber, Barbara] Univ Innsbruck, Dept Comp Sci, A-6020 Innsbruck, Austria.
   [Reichert, Manfred] Univ Ulm, Inst Databases & Informat Syst, D-89069 Ulm, Germany.
C3 Universitat Politecnica de Valencia; University of Innsbruck; Ulm
   University
RP Ayora, C (corresponding author), Univ Politecn Valencia, Ctr Invest Metodos Prod Software, Camino Vera S-N, Valencia 46022, Spain.
EM cayora@pros.upv.es; vtorres@pros.upv.es; barbara.weber@uibk.ac.at;
   manfred.reichert@uni-ulm.de; pele@pros.upv.es
RI Pelechano, Vicente/S-4344-2016; Reichert, Manfred U/ABB-4469-2020;
   Torres, Victoria/B-3828-2017
OI Pelechano, Vicente/0000-0003-1090-230X; Torres,
   Victoria/0000-0002-2039-2174; Weber, Barbara/0000-0002-6004-4860
FU MICINN under the project EVERYWARE [TIN2010-18011]
FX This work has been developed with the support of MICINN under the
   project EVERYWARE TIN2010-18011.
CR Acher M, 2010, LECT NOTES COMPUT SC, V6144, P17, DOI 10.1007/978-3-642-14046-4_2
   Aguilar-Savén RS, 2004, INT J PROD ECON, V90, P129, DOI 10.1016/S0925-5273(03)00102-6
   Aiello Marco, 2010, IEEE 34th Annual Computer Software and Applications Conference Workshops (COMPSACW 2010), P245, DOI 10.1109/COMPSACW.2010.50
   Alférez GH, 2014, J SYST SOFTWARE, V91, P24, DOI 10.1016/j.jss.2013.06.034
   [Anonymous], 2014, BUS PROC MOD NOT VER
   [Anonymous], P 3 INT C INT DEC TE
   [Anonymous], THESIS U TWENTE NETH
   [Anonymous], 2019, Business Process Management: Concepts, Languages, Architectures
   Ayora C., 2012, UIB201207 U ULM FAC
   Ayora C, 2013, LECT NOTES BUS INF P, V147, P246
   Ayora C, 2013, LECT NOTES BUS INF P, V132, P477
   Baier T, 2010, LECT NOTES BUS INF P, V50, P108
   Becker J., 2004, P IRMA 04
   Boffoli Nicola, 2012, Software Composition. Proceedings 11th International Conference, SC 2012, P178, DOI 10.1007/978-3-642-30564-1_12
   Bridgeland M., 2008, BUSINESS MODELING PR
   Bucchiarone A., 2013, P VAMOS 13, P1
   Bulanov Pavel, 2012, 9th International Conference on Service-Oriented Computing - ICSOC 2011 Workshops, P241, DOI 10.1007/978-3-642-31875-7_30
   CURTIS B, 1992, COMMUN ACM, V35, P75, DOI 10.1145/130994.130998
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   DERGUECH W, 2011, P WISE 11, V6997, P199
   Derguech W, 2012, LECT NOTES BUS INF P, V100, P119
   Derguech W, 2010, LECT NOTES BUS INF P, V50, P157
   Dijkman R, 2008, LECT NOTES COMPUT SC, V5240, P261, DOI 10.1007/978-3-540-85758-7_20
   Dijkman R, 2012, COMPUT IND, V63, P91, DOI 10.1016/j.compind.2011.12.003
   Dijkman R, 2011, INFORM SOFTWARE TECH, V53, P937, DOI 10.1016/j.infsof.2011.04.001
   Dijkman R, 2011, INFORM SYST, V36, P498, DOI 10.1016/j.is.2010.09.006
   Dohring M., 2013, INFORM SYST IN PRESS
   DOHRING M, 2011, P BPMDS 11, V81, P332
   Dumas M, 2005, PROCESS-AWARE INFORMATION SYSTEMS: BRIDGING PEOPLE AND SOFTWARE THROUGH PROCESS TECHNOLOGY, P1, DOI 10.1002/0471741442
   Frece A, 2012, J VISUAL LANG COMPUT, V23, P223, DOI 10.1016/j.jvlc.2012.02.003
   Galster M, 2014, IEEE SOFTWARE, V31, P77, DOI 10.1109/MS.2013.21
   Giese C, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P229
   Gómez-Pérez A, 2001, INT J INTELL SYST, V16, P391, DOI 10.1002/1098-111X(200103)16:3<391::AID-INT1014>3.0.CO;2-2
   Gottschalk F., 2007, Reference modeling, P59, DOI DOI 10.1007/978-3-7908-1966-3_3
   Gottschalk F., 2009, THESIS EINDHOVEN U T
   Gottschalk F, 2009, LECT NOTES COMPUT SC, V5565, P486, DOI 10.1007/978-3-642-02144-2_38
   Gottschalk F, 2008, LECT NOTES COMPUT SC, V5333, P263
   Groefsema H., 2011, P ICSOC 11, P496
   Gröner G, 2013, INFORM SYST, V38, P709, DOI 10.1016/j.is.2012.11.010
   Groner Gerd, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P551, DOI 10.1007/978-3-642-21640-4_41
   Hallerbach Alena, 2009, 2009 IEEE Conference on Commerce and Enterprise Computing, P98, DOI 10.1109/CEC.2009.62
   Hallerbach A, 2010, INT HANDB INFORM SYS, P237, DOI 10.1007/978-3-642-00416-2_11
   Hallerbach A, 2010, J SOFTW MAINT EVOL-R, V22, P519, DOI 10.1002/smr.491
   Hochstein A, 2005, 2005 IEEE International Conference on e-Technology, e-Commerce and e-Service, Proceedings, P704, DOI 10.1109/EEE.2005.86
   Hsieh HF, 2005, QUAL HEALTH RES, V15, P1277, DOI 10.1177/1049732305276687
   Jablonski S., 1996, WORKFLOW MANAGEMENT
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Joonseok Park, 2011, 2011 9th International Conference on Software Engineering Research, Management and Applications, P211, DOI 10.1109/SERA.2011.19
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Koetter F, 2011, LECT NOTES BUS INF P, V87, P74
   Korherr B, 2008, THESIS VIENNA U TECH
   KOSCHMIDER A, 2007, P SAC 07, P1263
   Künzle V, 2011, J SOFTW MAINT EVOL-R, V23, P205, DOI 10.1002/smr.524
   Kumar A, 2012, COMPUT IND, V63, P112, DOI 10.1016/j.compind.2011.12.002
   La Rosa M., 2009, HDB RES BUSINESS PRO
   La Rosa M, 2009, THESIS QUEENSLAND U
   La Rosa M, 2010, LECT NOTES COMPUT SC, V6426, P96
   La Rosa M, 2009, LECT NOTES BUS INF P, V17, P290
   La Rosa M, 2009, SOFTW SYST MODEL, V8, P251, DOI 10.1007/s10270-008-0090-3
   Lang A., 2012, THESIS ATHABASCA U
   Lanz A., 2012, REQUIR ENG J
   Lanz A, 2010, LECT NOTES BUS INF P, V50, P94
   Lapouchnian A, 2007, LECT NOTES COMPUT SC, V4714, P246
   LaRosa M., 2011, BUS PROCESS MANAG J, V12, P1
   Lazovik A, 2007, LECT NOTES COMPUT SC, V4831, P373
   Lenz R, 2007, DATA KNOWL ENG, V61, P39, DOI 10.1016/j.datak.2006.04.007
   Li C, 2008, P IEEE I C SERV COMP, P573, DOI 10.1109/SCC.2008.103
   Li C, 2011, DATA KNOWL ENG, V70, P409, DOI 10.1016/j.datak.2011.01.005
   Lonn Carl-Mikael, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P190, DOI 10.1007/978-3-642-31095-9_13
   Lu RP, 2009, DATA KNOWL ENG, V68, P642, DOI 10.1016/j.datak.2009.02.009
   De la Vara JL, 2010, LECT NOTES COMPUT SC, V6426, P132
   Mahmod N. M., 2010, 2010 IEEE Conference on Open Systems (ICOS 2010), P17, DOI 10.1109/ICOS.2010.5720057
   Martínez-Ruiz T, 2012, SOFTWARE QUAL J, V20, P229, DOI 10.1007/s11219-011-9147-6
   Meerkamm S., 2011, P ECIS 11
   Melao N, 2000, INFORM SYST J, V10, P105, DOI 10.1046/j.1365-2575.2000.00075.x
   Mendling J, 2008, DATA KNOWL ENG, V64, P312, DOI 10.1016/j.datak.2007.06.019
   Mendling J., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1505, DOI 10.1145/1141277.1141629
   Mikyeong Moon, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P263, DOI 10.1109/COMPSAC.2008.129
   Montero I, 2008, P IEEE I C SERV COMP, P605, DOI 10.1109/SCC.2008.130
   Müller D, 2006, LECT NOTES COMPUT SC, V4102, P368
   Ognjanovic I., 2012, 2012 IEEE International Conference on Services Computing (SCC), P25, DOI 10.1109/SCC.2012.6
   Pascalau Emilian, 2011, International Journal of Business Process Integration and Management, V5, P240, DOI 10.1504/IJBPIM.2011.042528
   Pascalau E, 2010, LECT NOTES BUS INF P, V67, P91
   PEDREIRA O, 2007, ACM SIGSOFT SOFTWARE, V32, P1
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Pinggera J., 2012, EMP RES PROC ORIENT, V30, P13
   Puhlmann F., 2006, TECHNICAL REPORT
   Qing Yao, 2012, 2012 Fifth International Joint Conference on Computational Sciences and Optimization (CSO), P169, DOI 10.1109/CSO.2012.43
   Recker J, 2006, LECT NOTES COMPUT SC, V3812, P497
   Reichert M, 2005, PROC INT CONF DATA, P1113
   Reichert M., 2009, CEUR WORKSH P, V489
   Reijers HA, 2009, DATA KNOWL ENG, V68, P221, DOI 10.1016/j.datak.2008.09.004
   REINHARTZ-BERGER I., 2005, EMISA, V75, P50
   Reinhartz-Berger I., 2012, J EMP SOFTW ENG, P1
   Reinhartz-Berger I, 2010, IEEE T SYST MAN CY A, V40, P1045, DOI 10.1109/TSMCA.2010.2044408
   Rocha RD, 2013, INFORM SOFTWARE TECH, V55, P1355, DOI 10.1016/j.infsof.2013.02.007
   Rosemann M, 2007, INFORM SYST, V32, P1, DOI 10.1016/j.is.2005.05.003
   Rosemann M, 2006, BUS PROCESS MANAG J, V12, P249, DOI 10.1108/14637150610657567
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Russell N., 2006, PROC INT C ADV INFOR, P288
   RUSSELL N, 2004, FITTR200401 QUEENSL
   Santos E, 2012, LECT NOTES BUS INF P, V113, P331
   Scherer R, 2011, IFIP ADV INF COMM TE, V362, P341
   Schnieders A, 2007, ENTERPRISE INTEROPERABILITY: NEW CHALLENGES AND APPROACHES, P67, DOI 10.1007/978-1-84628-714-5_7
   Schnieders Puhlmann, 2007, TECHNOLOGIES BUSINES, P63, DOI DOI 10.1007/1-4020-5634-6_6
   Schunselaar DMM, 2012, LECT NOTES BUS INF P, V117, P24
   Sinnema M, 2006, LECT NOTES COMPUT SC, V4039, P101
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Soffer P., 2005, Software Process Improvement and Practice, V10, P393, DOI 10.1002/spip.242
   Thomas O., 2008, J SOFTWARE, V3, P49
   Torres V., 2012, P BPM WORKSH 12, P560
   Nguyen T, 2011, LECT NOTES COMPUT SC, V7084, P404, DOI 10.1007/978-3-642-25535-9_27
   Valena G., 2013, INT J COMP SCI INFOR, V5
   van der Aalst WMP, 2012, INFORM SYST, V37, P574, DOI 10.1016/j.is.2011.08.004
   van der Aalst WMP, 2010, FORM ASP COMPUT, V22, P459, DOI 10.1007/s00165-009-0112-0
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   van der Aalst WMP, 2002, THEOR COMPUT SCI, V270, P125, DOI 10.1016/S0304-3975(00)00321-2
   VANDERAALST W, 2010, P BPM 10, V6336, P95
   Vergidis K, 2008, IEEE T SYST MAN CY C, V38, P69, DOI 10.1109/TSMCC.2007.905812
   Vervuurt M., 2007, THESIS U TWENTE
   Vogelaar JJCL, 2012, LECT NOTES BUS INF P, V100, P50
   Weber B., 2012, ENABLING FLEXIBILITY
   Weber B, 2008, DATA KNOWL ENG, V66, P438, DOI 10.1016/j.datak.2008.05.001
   Weber B, 2013, LECT NOTES BUS INF P, V147, P261
   Weber B, 2011, COMPUT IND, V62, P467, DOI 10.1016/j.compind.2010.12.012
   Weber B, 2009, COMPUT SCI-RES DEV, V23, P47, DOI [10.1007/s00450-009-0069-5, 10.1007/S00450-009-0069-5]
   Wen Yao, 2012, 2012 IEEE International Conference on Services Computing (SCC), P415, DOI 10.1109/SCC.2012.32
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   [No title captured]
NR 130
TC 47
Z9 50
U1 3
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 248
EP 276
DI 10.1016/j.infsof.2014.05.009
PG 29
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500015
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Claps, GG
   Svensson, RB
   Aurum, A
AF Claps, Gerry Gerard
   Svensson, Richard Berntsson
   Aurum, Aybueke
TI On the journey to continuous deployment: Technical and social challenges
   along the way
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Continuous deployment; Agile software development; Lean software
   development; Challenges and mitigation strategies
ID SOFTWARE-DEVELOPMENT
AB Context: Continuous Deployment (CD) is an emerging software development process with organisations such as Facebook, Microsoft, and IBM successfully implementing and using the process. The CD process aims to immediately deploy software to customers as soon as new code is developed, and can result in a number of benefits for organisations, such as: new business opportunities, reduced risk for each release, and prevent development of wasted software. There is little academic literature on the challenges organisations face when adopting the CD process, however there are many anecdotal challenges that organisations have voiced on their online blogs.
   Objective: The aim of this research is to examine the challenges faced by organisations when adopting CD as well as the strategies to mitigate these challenges.
   Method: An explorative case study technique that involves in-depth interviews with software practitioners in an organisation that has adopted CD was conducted to identify these challenges.
   Results: This study found a total of 20 technical and social adoption challenges that organisations may face when adopting the CD process. The results are discussed to gain a deeper understanding of the strategies employed by organisations to mitigate the impacts of these challenges.
   Conclusion: While a number of individual technical and social adoption challenges were uncovered by the case study in this research, most challenges were not faced in isolation. The severity of these challenges were reduced by a number of mitigation strategies employed by the case study organisation. It is concluded that organisations need to be well prepared to handle technical and social adoption challenges with their existing expertise, processes and tools before adopting the CD process. For practitioners, knowing how to address the challenges an organisation may face when adopting the CD process provides a level of awareness that they previously may not have had. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Claps, Gerry Gerard] Univ New S Wales, Sch Informat Syst Technol & Management, Sydney, NSW, Australia.
   [Svensson, Richard Berntsson] Chalmers Univ Gothenburg, Gothenburg, Sweden.
C3 University of New South Wales Sydney; Chalmers University of Technology
RP Aurum, A (corresponding author), 11 Barry St, Sydney, NSW 2031, Australia.
EM gerryclaps@gmail.com; richard@cse.gu.se; aybuke.aurum@gmail.com
CR Agarwal P., 2011, P 4 IND SOFTW ENG C, P51
   Alwardt Anthony L., 2009, Proceedings of the 2009 IEEE AUTOTESTCON. Systems Readiness Technology Conference "Mission Assurance Through Advanced ATE", P178, DOI 10.1109/AUTEST.2009.5314039
   [Anonymous], TESLA ADOBE WHY CONT
   [Anonymous], LEAN STARTUP TODAY E
   [Anonymous], CONTINUOUS DEPLOYMEN
   [Anonymous], IMVUS APROACH INTEGR
   [Anonymous], 2004, XP Ser
   [Anonymous], CONTINUOUS DEPLOYMEN
   [Anonymous], CONTINUOUS DEPLOYMEN
   [Anonymous], CONTINUOUS DEPLOYMEN
   [Anonymous], EMPIRICAL SOFTW ENG
   [Anonymous], 2012, ANNOUNCING CONTINUOU
   [Anonymous], MIT SLOAN MANAGE REV
   [Anonymous], MAKE CONTINUOUS DEPL
   [Anonymous], CONTINUOUS DEPLOYMEN
   [Anonymous], THESIS U NEW S WALES
   [Anonymous], CHAOS MANIFESTO THIN
   [Anonymous], P AGIL C
   [Anonymous], INTRO RES METHODS PE
   [Anonymous], P AGIL C
   Bass L, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON RELEASE ENGINEERING (RELENG), P5, DOI 10.1109/RELENG.2013.6607688
   Beck K., 2001, Agile manifesto
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Bocock L., 2011, Proceedings of the 2011 Agile Conference, P10, DOI 10.1109/AGILE.2011.44
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Coupaye T., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P65, DOI 10.1109/CSMR.2000.827313
   de Cesare S, 2010, COMMUN ACM, V53, P126, DOI 10.1145/1743546.1743580
   de Souza Pereira Moreira Gabriel, 2010, Proceedings of the Seventh International Conference on Information Technology: New Generations (ITNG 2010), P1177, DOI 10.1109/ITNG.2010.85
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Ellis L., 1994, RES METHODS SOCIAL S
   Ezzy D., 2002, QUALITATIVE ANAL
   Feitelson DG, 2013, IEEE INTERNET COMPUT, V17, P8, DOI 10.1109/MIC.2013.25
   Fogelstrom ND, 2010, J SOFTW MAINT EVOL-R, V22, P53, DOI [10.1002/spip.420, 10.1002/smr.453]
   Fowler M., CONTINUOUS INTEGRATI
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Huttermann M., 2012, DEVOPS DEV
   Li J., 2010, P 4 INT S EMPIRICAL, P1
   Middleton P, 2001, SOFTWARE QUAL J, V9, P241, DOI 10.1023/A:1013754402981
   Myers M. D., 2007, Information and Organization, V17, P2, DOI 10.1016/j.infoandorg.2006.11.001
   Olsson HH, 2012, EUROMICRO CONF PROC, P392, DOI 10.1109/SEAA.2012.54
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Robson C., 2002, Real world research
   Roche J, 2013, COMMUN ACM, V56, P38, DOI 10.1145/2524713.2524721
   Rossi C., 2012, SHIP EARLY SHIP TWIC
   Shalloway A., 2009, Lean-agile software development: achieving enterprise agility
   van der Storm T, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P233
   van der Storm T, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P335
   Vavpotic D, 2009, INFORM SOFTWARE TECH, V51, P528, DOI 10.1016/j.infsof.2008.06.001
   Williams L, 2012, COMMUN ACM, V55, P71, DOI 10.1145/2133806.2133823
   Yin R.K., 2011, Qualitative research from start to finish
NR 50
TC 81
Z9 90
U1 0
U2 28
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 21
EP 31
DI 10.1016/j.infsof.2014.07.009
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500002
DA 2024-07-18
ER

PT J
AU de Souza, EF
   Falbo, RD
   Vijaykumar, NL
AF de Souza, Erica Ferreira
   de Almeida Falbo, Ricardo
   Vijaykumar, Nandamudi L.
TI Knowledge management initiatives in software testing: A mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Knowledge management; Mapping study
AB Context: Software testing is a knowledge intensive process, and, thus, Knowledge Management (KM) principles and techniques should be applied to manage software testing knowledge.
   Objective: This study conducts a survey on existing research on KM initiatives in software testing, in order to identify the state of the art in the area as well as the future research. Aspects such as purposes, types of knowledge, technologies and research type are investigated.
   Method: The mapping study was performed by searching seven electronic databases. We considered studies published until December 2013. The initial resulting set was comprised of 562 studies. From this set, a total of 13 studies were selected. For these 13, we performed snowballing and direct search to publications of researchers and research groups that accomplished these studies.
   Results: From the mapping study, we identified 15 studies addressing KM initiatives in software testing that have been reviewed in order to extract relevant information on a set of research questions.
   Conclusions: Although only a few studies were found that addressed KM initiatives in software testing, the mapping shows an increasing interest in the topic in the recent years. Reuse of test cases is the perspective that has received more attention. From the KM point of view, most of the studies discuss aspects related to providing automated support for managing testing knowledge by means of a KM system. Moreover, as a main conclusion, the results show that KM is pointed out as an important strategy for increasing test effectiveness, as well as for improving the selection and application of suited techniques, methods and test cases. On the other hand, inadequacy of existing KM systems appears as the most cited problem related to applying KM in software testing. (C) 2014 Elsevier B.V. All rights reserved.
C1 [de Souza, Erica Ferreira; Vijaykumar, Nandamudi L.] Natl Inst Space Res INPE, BR-12227010 Sao Jose Dos Campos, SP, Brazil.
   [de Almeida Falbo, Ricardo] Fed Univ Espirito Santo UFES, Vitoria 29075910, ES, Spain.
C3 Instituto Nacional de Pesquisas Espaciais (INPE)
RP de Souza, EF (corresponding author), Natl Inst Space Res INPE, Av Astronautas 1758, BR-12227010 Sao Jose Dos Campos, SP, Brazil.
EM erica.souza@lac.inpe.br; falbo@inf.ufes.br; vijay.nl@inpe.br
RI Souza, Erica/IVV-7492-2023
FU FAPESP [2010/20557-1]; FAPES [52272362/11]; CNPq [485368/2013-7];
   Fundacao de Amparo a Pesquisa do Estado de Sao Paulo (FAPESP)
   [10/20557-1] Funding Source: FAPESP
FX The first author acknowledges FAPESP (Process: 2010/20557-1) for the
   financial grant. The second author acknowledges FAPES (Process Number
   52272362/11) and CNPq (Process Number 485368/2013-7) for the financial
   grant.
CR Abecker A, 2003, IN HAND I S, P435
   [Abran A. IEEE Computer Society IEEE Computer Society], 2004, GUIDE SOFTWARE ENG B
   Andrade J, 2013, INFORM SOFTWARE TECH, V55, P18, DOI 10.1016/j.infsof.2012.03.003
   [Anonymous], 2004, 10122004 IEEE STD, P120
   BEER A, 2008, SOFTW ENG ADV APPL S, P258
   Benjamins V.R., 1998, 2 INT C PRACTICAL AS, P5
   Bjornson FO, 2008, INFORM SOFTWARE TECH, V50, P1055, DOI 10.1016/j.infsof.2008.03.006
   Black Rex, 2008, ADV SOFTWARE TESTING
   Burnstein I., 2003, PRACTICAL SOFTWARE T
   Davies J., 2003, SEMANTIC WEB ONTOLOG
   Desai S. Shah, 2011, P INT C WORKSH EM TR, P767
   Elberzhager F, 2012, INFORM SOFTWARE TECH, V54, P1, DOI 10.1016/j.infsof.2011.06.003
   Itkonen J, 2013, IEEE T SOFTWARE ENG, V39, P707, DOI 10.1109/TSE.2012.55
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   JANJIC W, 2013, P 8 INT WORKSH AUT S, P100
   Karhu K, 2009, INFORM SOFTWARE TECH, V51, P663, DOI 10.1016/j.infsof.2008.09.001
   Kim H.M., 2000, AAAI WORKSH BRING KN, P20
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   KITCHENHAM BA, 2011, J INFORM SOFTWARE TE, V53, P638, DOI DOI 10.1016/J.INFSOF.2010.12.011
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Liao SH, 2003, EXPERT SYST APPL, V25, P155, DOI 10.1016/S0957-4174(03)00043-5
   Liu YP, 2009, ITCS: 2009 INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY AND COMPUTER SCIENCE, PROCEEDINGS, VOL 2, PROCEEDINGS, P90, DOI 10.1109/ITCS.2009.157
   Mathur A.P., 2012, FDN SOFTWARE TESTING
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Nonaka I., 1997, The knowledge-creating company
   Nonaka I, 2009, ORGAN SCI, V20, P635, DOI 10.1287/orsc.1080.0412
   O'Leary DE, 1998, COMPUTER, V31, P54, DOI 10.1109/2.660190
   O'Leary DE, 2001, IEEE INTELL SYST APP, V16, P24, DOI 10.1109/MIS.2001.912381
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Pfleeger S.L., 2009, SOFTWARE ENG THEORY
   Poon PL, 2011, SOFTWARE QUAL J, V19, P141, DOI 10.1007/s11219-010-9109-4
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   Souza E.F., 2013, P 25 INT C SOFTW ENG, P562
   Staab S, 2001, IEEE INTELL SYST APP, V16, P26, DOI 10.1109/5254.912382
   Taipale O., 2007, EMP SOFTW ENG MEAS E
   Tuomi I., 1999, P 32 HAW INT C SYST, P1
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C, 2013, J SYST SOFTWARE, V86, P2594, DOI 10.1016/j.jss.2013.04.076
   Xuexiang Li, 2012, 2012 Sixth International Conference on Internet Computing for Science and Engineering, P86, DOI 10.1109/ICICSE.2012.18
   Zack MH, 2000, KNOWLEDGE MANAGEMENT AND BUSINESS MODEL INNOVATION, P16
NR 40
TC 26
Z9 27
U1 1
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 378
EP 391
DI 10.1016/j.infsof.2014.05.016
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500022
DA 2024-07-18
ER

PT J
AU Pedreira, O
   García, F
   Brisaboa, N
   Piattini, M
AF Pedreira, Oscar
   Garcia, Felix
   Brisaboa, Nieves
   Piattini, Mario
TI Gamification in software engineering - A systematic mapping
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Gamification; Software engineering; Systematic mapping
ID SERIOUS GAMES
AB Context: Gamification seeks for improvement of the user's engagement, motivation, and performance when carrying out a certain task, by means of incorporating game mechanics and elements, thus making that task more attractive. Much research work has studied the application of gamification in software engineering for increasing the engagement and results of developers.
   Objective: The objective of this paper is to carry out a systematic mapping of the field of gamification in software engineering in an attempt to characterize the state of the art of this field identifying gaps and opportunities for further research.
   Method: We carried out a systematic mapping with a view to finding the primary studies in the existing literature, which were later classified and analyzed according to four criteria: the software process area addressed, the gamification elements used, the type of research method followed, and the type of forum in which they were published. A subjective evaluation of the studies was also carried out to evaluate them in terms of methodology, empirical evidence, integration with the organization, and replicability.
   Results: As a result of the systematic mapping we found 29 primary studies, published between January 2011 and June 2014. Most of them focus on software development, and to a lesser extent, requirements, project management, and other support areas. In the main, they consider very simple gamification mechanics such as points and badges, and few provide empirical evidence of the impact of gamification.
   Conclusions: Existing research in the field is quite preliminary, and more research effort analyzing the impact of gamification in SE would be needed. Future research work should look at other game mechanics in addition to the basic ones and should tackle software process areas that have not been fully studied, such as requirements, project management, maintenance, or testing. Most studies share a lack of methodological support that would make their proposals replicable in other settings. The integration of gamification with an organization's existing tools is also an important challenge that needs to be taken up in this field. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Pedreira, Oscar; Brisaboa, Nieves] Univ A Coruna, Database Lab, La Coruna, Spain.
   [Garcia, Felix; Piattini, Mario] Univ Castilla La Mancha, Inst Technol & Informat Syst, E-13071 Ciudad Real, Spain.
C3 Universidade da Coruna; Universidad de Castilla-La Mancha
RP Pedreira, O (corresponding author), Univ A Coruna, Database Lab, La Coruna, Spain.
EM opedreira@udc.es; felix.garcia@uclm.es; brisaboa@udc.es;
   mario.piattini@uclm.es
RI Piattini, Mario/F-6271-2013; Molina, Allison/ABH-2269-2021; Pedreira,
   Oscar/ABA-5296-2020; Brisaboa, Nieves R./S-4744-2016; Garcia,
   Felix/D-4299-2011
OI Piattini, Mario/0000-0002-7212-8279; Pedreira,
   Oscar/0000-0001-6176-4475; Brisaboa, Nieves R./0000-0001-8025-3048;
   Garcia, Felix/0000-0001-6460-0353
FU project: GOAL [CDTI EXP 00064563/ITC-20133062]; project: HYPERGRAPH
   (Ministerio de Ciencia e Innovacion) [TIN2009-14560-C03-02]; project:
   Grupo de Referencia Competitiva (Xunta de Galicia) [GRC2013/053]
FX This work has been funded by the following projects: GOAL (CDTI EXP
   00064563/ITC-20133062), HYPERGRAPH (Ministerio de Ciencia e Innovacion,
   ref. TIN2009-14560-C03-02 (PGE and FEDER)), and Grupo de Referencia
   Competitiva (Xunta de Galicia, ref. GRC2013/053 (FEDER)) for Oscar
   Pedreira and Nieves Brisaboa, and GEODAS-BC project (Ministerio de
   Economia y Competitividad and Fondo Europeo de Desarrollo Regional
   FEDER, TIN2012-37493-C03-01) for Felix Garcia and Mario Piattini.
CR [Anonymous], P HICSS 2014
   [Anonymous], 2011, GAMIFICATION DESIGN
   [Anonymous], 2008, 12 INT C EV ASS SOFT
   Atlassian, JIRA HER
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Connolly TM, 2012, COMPUT EDUC, V59, P661, DOI 10.1016/j.compedu.2012.03.004
   Currier J., 2008, Gamification: Game Mechanics is the New Marketing." from
   DAVIS A, 1993, IEEE SOFTWARE, V10, P79
   Deterding S., 2011, P 2011 MINDTREK C
   Deterding S., 2011, P 15 INT AC MINDTREK, P9, DOI [10.1145/2181037.2181040, DOI 10.1145/2181037.2181040]
   Graafland M, 2012, BRIT J SURG, V99, P1322, DOI 10.1002/bjs.8819
   Hugos M., 2012, ENTERPRISE GAMES
   Kapp K.M., 2013, GAMIFICATION LEARNIN
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   McMillan D., 2011, BUSINESSWEEK
   Naz H., 2009, P INT C COMP MOD SIM
   Paharia Rajat., 2013, Loyalty 3.0: How to Revolutionize Customer and Employee Engagement with Big Data and Gamification
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Pettey C., 2012, Gartner says by 2014, 80 percent of current gamified applications will fail to meet business objectives primarily due to poor design
   RedCritter, REDCRITTER TRACK
   Steinkuehler C., 2007, P 8 INT C COMP SUPP
   Studio M.V., 2014, VIS STUD ACH
   Werbach K., 2012, For the win: How game thinking can revolutionize your business
   Xu Y., 2012, Literature review on web application gamification and analytics
NR 24
TC 211
Z9 229
U1 0
U2 144
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 157
EP 168
DI 10.1016/j.infsof.2014.08.007
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500010
DA 2024-07-18
ER

PT J
AU Munir, H
   Moayyed, M
   Petersen, K
AF Munir, Hussan
   Moayyed, Misagh
   Petersen, Kai
TI Considering rigor and relevance when evaluating test driven development:
   A systematic review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Test-driven development (TDD); Test-last development (TLD); Internal
   code quality; External code quality; Productivity
ID XP EXPERIMENT; STUDENTS; PRODUCTIVITY; QUALITY
AB Context: Test driven development (TDD) has been extensively researched and compared to traditional approaches (test last development, TLD). Existing literature reviews show varying results for TDD.
   Objective: This study investigates how the conclusions of existing literature reviews change when taking two study quality dimension into account, namely rigor and relevance.
   Method: In this study a systematic literature review has been conducted and the results of the identified primary studies have been analyzed with respect to rigor and relevance scores using the assessment rubric proposed by Ivarsson and Gorschek 2011. Rigor and relevance are rated on a scale, which is explained in this paper. Four categories of studies were defined based on high/low rigor and relevance.
   Results: We found that studies in the four categories come to different conclusions. In particular, studies with a high rigor and relevance scores show clear results for improvement in external quality, which seem to come with a loss of productivity. At the same time high rigor and relevance studies only investigate a small set of variables. Other categories contain many studies showing no difference, hence biasing the results negatively for the overall set of primary studies. Given the classification differences to previous literature reviews could be highlighted.
   Conclusion: Strong indications are obtained that external quality is positively influenced, which has to be further substantiated by industry experiments and longitudinal case studies. Future studies in the high rigor and relevance category would contribute largely by focusing on a wider set of outcome variables (e.g. internal code quality). We also conclude that considering rigor and relevance in TDD evaluation is important given the differences in results between categories and in comparison to previous reviews. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Munir, Hussan] Lund Univ, Dept Comp Sci, SE-22100 Lund, Sweden.
   [Moayyed, Misagh] Unicon Inc, Gilbert, AZ USA.
   [Petersen, Kai] Blekinge Inst Technol, Sch Comp, Karlskrona, Sweden.
C3 Lund University; Blekinge Institute Technology
RP Petersen, K (corresponding author), Blekinge Inst Technol, Sch Comp, Karlskrona, Sweden.
EM hussan.munir@cs.lth.se; mmoayyed@unicon.net; kai.petersen@bth.se
RI Munir, Hussan/HKV-4509-2023
OI Munir, Hussan/0000-0001-9376-9844; Petersen, Kai/0000-0002-1532-8223
FU ELLIIT, the Strategic Area for ICT research; Swedish Government
FX The work has been funded by ELLIIT, the Strategic Area for ICT research,
   funded by the Swedish Government. We would also like to thank Jurgen
   Borstler for valuable feedback on the study.
CR Abrahamsson P, 2005, INT FED INFO PROC, V180, P227
   Aniche Mauricio Finavaro, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P469, DOI 10.1109/ICSTW.2010.16
   [Anonymous], 2004, XP Ser
   Bannerman S, 2011, EMPIR SOFTW ENG, V16, P177, DOI 10.1007/s10664-010-9137-5
   Barney S, 2012, IEEE T EDUC, V55, P319, DOI 10.1109/TE.2011.2172981
   Bhat T., 2006, Proceedings of the 2006 ACM/IEEE International Symposium on Empirical Software Engineering (ISESE '06), P356, DOI [DOI 10.1145/1159733.1159787, 10.1145/1159733.1159787]
   Canfora G., 2006, P 2006 ACMIEEE INT S, P364
   Causevic A., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P337, DOI 10.1109/ICST.2011.19
   Cibulski H., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P115, DOI 10.1109/ICSTW.2011.28
   Crispin I, 2006, IEEE SOFTWARE, V23, P70, DOI 10.1109/MS.2006.157
   Damm LO, 2006, J SYST SOFTWARE, V79, P1001, DOI 10.1016/j.jss.2005.10.015
   Desai Chetan, 2009, SIGCSE Bulletin, V41, P148, DOI 10.1145/1539024.1508921
   Desai Chetan, 2008, SIGCSE Bulletin, V40, P97, DOI 10.1145/1383602.1383644
   Dogsa T, 2011, SOFTWARE QUAL J, V19, P643, DOI 10.1007/s11219-011-9130-2
   Domino M.A., 2003, SIGMIS C COMPUTER PE, P44, DOI [DOI 10.1145/761849.761856, 10.1145/761849.761856]
   Domino MA, 2007, INFORM TECHNOL MANAG, V8, P297, DOI 10.1007/s10799-007-0016-8
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Edwards S. H., 2003, P INT C ED INF SYST
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Ficco M., 2011, ADV SOFTW ENG, V2011, P2
   Flohr T, 2005, LECT NOTES COMPUT SC, V3547, P474
   Flohr T, 2006, LECT NOTES COMPUT SC, V4034, P305
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gencel C., 2013, P INT WORKSH SOFTW M
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   George B., 2003, Proc. of the ACM SAC 2003. SAC 03, P1135, DOI [DOI 10.1145/952532.952753, 10.1145/952532.952753$, DOI 10.1145/952532.952753$]
   Geras A, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P405, DOI 10.1109/METRIC.2004.1357925
   Greenhalgh T, 2005, BRIT MED J, V331, P1064, DOI 10.1136/bmj.38636.593461.68
   GREENHALGH T., 2006, READ PAPER BASICS EV
   Gupta Atul, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P285
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Huang L, 2006, TAIC PART - TESTING: ACADEMIC & INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P197
   Huang L, 2009, INFORM SOFTWARE TECH, V51, P182, DOI 10.1016/j.infsof.2008.03.007
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Janzen DS, 2008, IEEE SOFTWARE, V25, P77, DOI 10.1109/MS.2008.34
   Janzen DS, 2007, PROC INT CONF SOFTW, P719, DOI 10.1109/ICSE.2007.8
   Janzen DS, 2006, CONF SOFTW ENG EDUC, P141, DOI 10.1109/CSEET.2006.25
   Janzen DS, 2008, SIGCSE'08: PROCEEDINGS OF THE 39TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P532, DOI 10.1145/1352322.1352315
   Jeffries R, 2007, IEEE SOFTWARE, V24, P24, DOI 10.1109/MS.2007.75
   Jonsson A., 2007, Educational Research Review, V2, P130, DOI [10.1016/j.edurev.2007.05.002, DOI 10.1016/J.EDUREV.2007.05.002]
   Kaufmann R., 2003, Companion of the 18th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, P298
   Khan KhalidS., 2001, Undertaking systematic reviews of research on effectiveness: CRD's guidance for carrying out or commissioning reviews, V4
   Kitchenham Barbara, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P126, DOI 10.1049/ic.2012.0016
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kollanus Sami, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P322, DOI 10.1007/978-3-642-21843-9_25
   Kollanus S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P403, DOI 10.1109/QUATIC.2010.73
   Kollanus S, 2008, ITICSE '08: PROCEEDINGS OF THE 13TH ANNUAL CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P124
   Kundel HL, 2003, RADIOLOGY, V228, P303, DOI 10.1148/radiol.2282011860
   Laranjeiro N, 2009, DEPEND: 2009 SECOND INTERNATIONAL CONFERENCE ON DEPENDABILITY, P122, DOI 10.1109/DEPEND.2009.25
   Madeyski L, 2007, LECT NOTES COMPUT SC, V4764, P200
   Madeyski L, 2005, FRONT ARTIF INTEL AP, V130, P113
   Madeyski L, 2010, TEST-DRIVEN DEVELOPMENT, P1, DOI 10.1007/978-3-642-04288-1
   Madeyski L, 2010, INFORM SOFTWARE TECH, V52, P169, DOI 10.1016/j.infsof.2009.08.007
   Maximilien EM, 2003, PROC INT CONF SOFTW, P564, DOI 10.1109/ICSE.2003.1201238
   McDaid K., 2008, P 4 INT WORKSH END U, P2529
   Melnik G, 2005, PROC INT CONF SOFTW, P481
   Moskal B., 2002, SIGCSE Bulletin, V34, P101, DOI 10.1145/563517.563380
   Muller M. M., 2002, IEE Proceedings-Software, V149, P131, DOI 10.1049/ip-sen:20020540
   Nagappan N, 2008, EMPIR SOFTW ENG, V13, P289, DOI 10.1007/s10664-008-9062-z
   Pancur M, 2003, IEEE REGION 8 EUROCON 2003, VOL B, PROCEEDINGS, P83
   Pancur M, 2011, INFORM SOFTWARE TECH, V53, P557, DOI 10.1016/j.infsof.2011.02.002
   Petersen K, 2011, INT SYMP EMP SOFTWAR, P351, DOI 10.1109/ESEM.2011.46
   Petersen K, 2011, INFORM SOFTWARE TECH, V53, P317, DOI 10.1016/j.infsof.2010.12.001
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Rafique Y, 2013, IEEE T SOFTWARE ENG, V39, P835, DOI 10.1109/TSE.2012.28
   Rahman S., 2007, 37 ANN FRONT ED C GL
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sanchez JC, 2007, AGILE 2007, PROCEEDINGS, P5, DOI 10.1109/AGILE.2007.43
   Sfetsos P., 2010, 7 INT C QUAL INF COM, P44
   Shull F, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.152
   Siniaalto Maria, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P275
   Siniaalto M., 2007, DOES TEST DRIVEN DEV, P143
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Slyngstad Odd Petter N., 2008, 2008 The Third International Conference on Software Engineering Advances (ICSEA), P214, DOI 10.1109/ICSEA.2008.8
   Turhan B., 2010, EFFECTIVE IS TEST DR, P207
   Vu JH, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P229, DOI 10.1109/ITNG.2009.11
   Wilkerson J.W., 2011, IEEE T SOFTW ENG, V38
   Williams L, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P34, DOI 10.1109/ISSRE.2003.1251029
   Wohlin C., 2012, Experimentation in Software Engineering
   Wohlin C, 2013, J SYST SOFTWARE, V86, P2594, DOI 10.1016/j.jss.2013.04.076
   Wohlin C, 2013, INFORM SOFTWARE TECH, V55, P919, DOI 10.1016/j.infsof.2013.02.002
   Xu SC, 2009, STUD COMPUT INTELL, V253, P229, DOI 10.1007/978-3-642-05441-9_20
   Yenduri S., 2006, Proceedings of the 2006 International Conference on Software Engineering Research and Practice and Conference on Programming Languages and Compilers SERP'06, P126
   Ynchausti R., 2001, P 2 INT C EXTR PROGR, P79
   Zelkowitz MV, 1998, NASA GODD SOFTW ENG, P52
   Zhang L, 2006, LECT NOTES COMPUT SC, V4044, P211
NR 89
TC 58
Z9 60
U1 1
U2 26
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2014
VL 56
IS 4
BP 375
EP 394
DI 10.1016/j.infsof.2014.01.002
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AD0DG
UT WOS:000332904000001
DA 2024-07-18
ER

PT J
AU Bavota, G
   De Lucia, A
   Oliveto, R
   Tortora, G
AF Bavota, Gabriele
   De Lucia, Andrea
   Oliveto, Rocco
   Tortora, Genoveffa
TI Enhancing software artefact traceability recovery processes with link
   count information
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Traceability recovery; Information retrieval; Link count information;
   Controlled experiments
ID REQUIREMENTS; CODE
AB Context: The intensive human effort needed to manually manage traceability information has increased the interest in using semi-automated traceability recovery techniques. In particular, Information Retrieval (IR) techniques have been largely employed in the last ten years to partially automate the traceability recovery process.
   Aim: Previous studies mainly focused on the analysis of the performances of IR-based traceability recovery methods and several enhancing strategies have been proposed to improve their accuracy. Very few papers investigate how developers (i) use IR-based traceability recovery tools and (ii) analyse the list of suggested links to validate correct links or discard false positives. We focus on this issue and suggest exploiting link count information in IR-based traceability recovery tools to improve the performances of the developers during a traceability recovery process.
   Method: Two empirical studies have been conducted to evaluate the usefulness of link count information. The two studies involved 135 University students that had to perform (with and without link count information) traceability recovery tasks on two software project repositories. Then, we evaluated the quality of the recovered traceability links in terms of links correctly and erroneously traced by the students.
   Results: The results achieved indicate that the use of link count information significantly increases the number of correct links identified by the participants.
   Conclusions: The results can be used to derive guidelines on how to effectively use traceability recovery approaches and tools proposed in the literature. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Bavota, Gabriele; De Lucia, Andrea; Tortora, Genoveffa] Univ Salerno, I-81041 Fisciano, SA, Italy.
   [Oliveto, Rocco] Univ Molise, I-86090 Pesche, IS, Italy.
C3 University of Salerno; University of Molise
RP Oliveto, R (corresponding author), Univ Molise, I-86090 Pesche, IS, Italy.
EM gbavota@unisa.it; adelucia@unisa.it; rocco.oliveto@unimol.it;
   tortora@unisa.it
RI De Lucia, Andrea/AAG-6781-2020
OI BAVOTA, Gabriele/0000-0002-2216-3148; De Lucia,
   Andrea/0000-0002-4238-1425
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   [Anonymous], PRACTICAL NONPARAMET
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P227, DOI 10.1109/CSMR.2000.827331
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Basili V., 1994, The Goal Question Metric Approach, P528
   Bavota G., ENHANCING SOFTWARE A
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P642, DOI 10.1109/ICSM.2012.6405343
   Capobianco G, 2009, WORK CONF REVERSE EN, P195, DOI 10.1109/WCRE.2009.14
   Capobianco G, 2009, INT C PROGRAM COMPRE, P148, DOI 10.1109/ICPC.2009.5090038
   Cleland-Huang J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P135, DOI 10.1109/RE.2005.78
   Cleland-Huang J, 2007, COMPUTER, V40, P27, DOI 10.1109/MC.2007.195
   De Lucia Andrea, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P39, DOI 10.1109/ASE.2008.14
   De Lucia A., 2009, P 25 INT C SOFTW ENG
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2006, PROC IEEE INT CONF S, P299
   De Lucia A, 2013, INFORM SOFTWARE TECH, V55, P741, DOI 10.1016/j.infsof.2012.08.002
   De Lucia A, 2011, CONF PROC INT SYMP C, P21, DOI 10.1109/ICPC.2011.34
   De Lucia A, 2010, SOFTWARE PRACT EXPER, V40, P1007, DOI 10.1002/spe.986
   De Lucia A, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P839, DOI 10.1145/1368088.1368216
   De Lucia A, 2009, EMPIR SOFTW ENG, V14, P57, DOI 10.1007/s10664-008-9090-8
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Devore J., 1999, APPL STAT ENG SCI
   Emenecker J., 2010, P 32 ACM IEEE INT C, V1, P155, DOI DOI 10.1145/1806799.1806825
   Enslen E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P71, DOI 10.1109/MSR.2009.5069482
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Ghabi A, 2012, IEEE INT CONF AUTOM, P200, DOI 10.1145/2351676.2351705
   Gibiec M., 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE '10, P245
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Guerrouj L, 2013, J SOFTW-EVOL PROC, V25, P575, DOI 10.1002/smr.539
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hayes JH, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.156
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   Kong WK, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P32
   Lawrie D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P113, DOI 10.1109/ICSM.2011.6080778
   Lawrie Dawn, 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P3, DOI 10.1109/WCRE.2010.10
   Lormans M, 2008, EMPIR SOFTW ENG, V13, P727, DOI 10.1007/s10664-008-9078-4
   Madani N., 2010, P 14 EUR C SOFTW MAI
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Markus Borg A.A., EMPIRICAL SOFTWARE E
   Oliveto R., 2010, P 18 INT C PROGR COM
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Settimi R, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P49, DOI 10.1109/IWPSE.2004.1334768
   Sirkin R., 2005, STAT SOCIAL SCI
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Xuchang Zou, 2008, Proceedings of the 2008 International Conference on Software Engineering Research & Practice, P157
   Yadla S, 2005, INNOV SYST SOFTW ENG, V1, P116, DOI 10.1007/s11334-005-0011-3
   Zou X., 2007, PROC INT WORKSHOP TR, P40
   Zou XC, 2006, P INT COMP SOFTW APP, P265
   Zou XC, 2010, EMPIR SOFTW ENG, V15, P119, DOI 10.1007/s10664-009-9114-z
NR 52
TC 6
Z9 10
U1 2
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2014
VL 56
IS 2
BP 163
EP 182
DI 10.1016/j.infsof.2013.08.004
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 285TN
UT WOS:000329418000004
DA 2024-07-18
ER

EF