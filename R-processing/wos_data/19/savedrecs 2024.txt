FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Grattan, N
   da Costa, DA
   Stanger, N
AF Grattan, Natalie
   da Costa, Daniel Alencar
   Stanger, Nigel
TI The need for more informative defect prediction: A systematic literature
   review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic literature review; Software quality; Software defect
   prediction; Explainable AI; Machine learning
ID MACHINE; SEVERITY; AI
AB Context: Software defect prediction is crucial for prioritising quality assurance tasks, however, there are still limitations to the use of defect models. For example, the outputs often do not provide the defect type, severity, or the cause of the defect. Current models are also often complex in implementation (they use low transparency classifiers such as random forest or support vector machines) and primarily output binary predictions. They lack directly actionable outputs, that is, outputs that provide additional information (e.g., defect severity or defect type) to aid in fixing the defect. One approach is to utilise tools of explainable AI. Objective: In order to improve current models and plan the direction for explainability in software defect prediction, we need to understand how explainable current models are. Methods: Starting from 861 papers from multiple databases, we investigated a sample of 132 papers in a systematic literature review. We extracted the following information to answer our research questions: (i) information about the outputs (e.g., how informative they were) and explainability methods used, (ii) how explainability and performance is measured and (iii) explainability in future research. Our results were summarised by manually labelling the data so that trends could be analysed across selected papers, along with a thematic analysis. Results: We found that 71% of current models used binary outputs, while 68% of models were not yet utilising any explainability techniques. Only 7% of studies considered explainability in their future research suggestions. Conclusion: There is still a lack of awareness among researchers for the need for explainability and motivation to invest further research into more explainable and more informative software defect prediction models.
C1 [Grattan, Natalie; da Costa, Daniel Alencar; Stanger, Nigel] Univ Otago, Informat Sci Dept, 362 Leith St, Dunedin 9016, New Zealand.
C3 University of Otago
RP Grattan, N (corresponding author), Univ Otago, Informat Sci Dept, 362 Leith St, Dunedin 9016, New Zealand.
EM natalie.grattan@postgrad.otago.ac.nz; danielcalencar@otago.ac.nz;
   nigel.stanger@otago.ac.nz
RI Nigel, Stanger/A-2192-2008
OI Nigel, Stanger/0000-0003-3450-7443
CR Chadegani AA, 2013, Arxiv, DOI [arXiv:1305.0377, DOI 10.5539/ASS.V9N5P18, 10.5539/ass.v9n5p18]
   Altmann A, 2010, BIOINFORMATICS, V26, P1340, DOI 10.1093/bioinformatics/btq134
   Angelov PP, 2021, WIRES DATA MIN KNOWL, V11, DOI 10.1002/widm.1424
   Bai JJ, 2022, INFORM SOFTWARE TECH, V150, DOI 10.1016/j.infsof.2022.106985
   Balasubramaniam S, 2022, ADV ENG SOFTW, V169, DOI 10.1016/j.advengsoft.2022.103138
   Arrieta AB, 2020, INFORM FUSION, V58, P82, DOI 10.1016/j.inffus.2019.12.012
   Batool I, 2022, COMPUT ELECTR ENG, V100, DOI 10.1016/j.compeleceng.2022.107886
   Bennin KE, 2016, P INT COMP SOFTW APP, P154, DOI 10.1109/COMPSAC.2016.144
   Bhatt U, 2020, FAT* '20: PROCEEDINGS OF THE 2020 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P648, DOI 10.1145/3351095.3375624
   Blanco-Justicia A, 2020, KNOWL-BASED SYST, V194, DOI 10.1016/j.knosys.2020.105532
   Castiglioni I, 2021, PHYS MEDICA, V83, P9, DOI 10.1016/j.ejmp.2021.02.006
   Chen L, 2016, SCI CHINA INFORM SCI, V59, DOI 10.1007/s11432-015-5426-3
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Crook B, 2023, Intern Req Engg Work, P316, DOI 10.1109/REW57809.2023.00060
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Doran D, 2017, Arxiv, DOI [arXiv:1710.00794, 10.48550/arXiv.1710.00794]
   Dwyer DB, 2018, ANNU REV CLIN PSYCHO, V14, P91, DOI [10.1146/annurev-clinpsy-032816045037, 10.1146/annurev-clinpsy-032816-045037]
   Falagas ME, 2008, FASEB J, V22, P338, DOI 10.1096/fj.07-9492LSF
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Funami Yasao, 1975, Department of Computer Science Technical Reports, V93
   Goebel R, 2018, LECT NOTES COMPUT SC, V11015, P295, DOI 10.1007/978-3-319-99740-7_21
   Gosiewska A, 2019, arXiv
   Goyal S, 2022, INT J SYST ASSUR ENG, V13, P681, DOI 10.1007/s13198-021-01326-1
   Gray David, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P96, DOI 10.1049/ic.2011.0012
   Guidotti R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3236009
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Harter DE, 2012, IEEE T SOFTWARE ENG, V38, P810, DOI 10.1109/TSE.2011.63
   Hassija V, 2024, COGN COMPUT, V16, P45, DOI 10.1007/s12559-023-10179-8
   Herbold S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1063, DOI 10.1145/3180155.3182542
   Hoa Khanh Dam, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P46, DOI 10.1109/MSR.2019.00017
   Dam HK, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P53, DOI 10.1145/3183399.3183424
   Hoffman RR, 2023, FRONT COMP SCI-SWITZ, V5, DOI 10.3389/fcomp.2023.1096257
   Holzinger A, 2020, KUNSTL INTELL, V34, P193, DOI 10.1007/s13218-020-00636-z
   Holzinger A, 2018, LECT NOTES COMPUT SC, V11015, P1, DOI 10.1007/978-3-319-99740-7_1
   Hong Y, 2008, 7TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE IN CONJUNCTION WITH 2ND IEEE/ACIS INTERNATIONAL WORKSHOP ON E-ACTIVITY, PROCEEDINGS, P469, DOI 10.1109/ICIS.2008.36
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Janssen M, 2022, SOC SCI COMPUT REV, V40, P478, DOI 10.1177/0894439320980118
   Jiarpakdee J, 2021, IEEE WORK CONF MIN S, P432, DOI 10.1109/MSR52588.2021.00055
   Jiarpakdee J, 2022, IEEE T SOFTWARE ENG, V48, P166, DOI 10.1109/TSE.2020.2982385
   Jindal R, 2017, INT J SYST ASSUR ENG, V8, P334, DOI 10.1007/s13198-016-0438-y
   Kamei Y, 2010, PROC IEEE INT CONF S
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Khani S, 2020, PLASMONICS, V15, P869, DOI [10.1007/s11468-019-01106-5, 10.23919/icacs.2019.8689135]
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering, VVolume 2, DOI [10.1145/1134285.1134500, DOI 10.1145/1134285.1134500]
   Kumar L, 2021, FED CONF COMPUT SCI, P477, DOI 10.15439/2021F100
   Son LH, 2019, SYMMETRY-BASEL, V11, DOI 10.3390/sym11020212
   Lee G, 2023, Soft Anal Evol Reeng, P179, DOI 10.1109/SANER56733.2023.00026
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Li N, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106287
   Li ZQ, 2021, IEEE T RELIAB, V70, P996, DOI 10.1109/TR.2021.3074660
   Li ZQ, 2018, IET SOFTW, V12, P161, DOI 10.1049/iet-sen.2017.0148
   Liang HL, 2019, IEEE ACCESS, V7, P83812, DOI 10.1109/ACCESS.2019.2925313
   Longo Luca, 2020, Machine Learning and Knowledge Extraction. 4th IFIP TC 5, TC 12, WG 8.4, WG 8.9, WG 12.9. International Cross-Domain Conference, CD-MAKE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12279), P1, DOI 10.1007/978-3-030-57321-8_1
   Ma LY, 2020, INT J RES MARK, V37, P481, DOI 10.1016/j.ijresmar.2020.04.005
   Manjula C, 2019, CLUSTER COMPUT, V22, pS9847, DOI 10.1007/s10586-018-1696-z
   Maplesden D, 2015, IEEE T SOFTWARE ENG, V41, P691, DOI 10.1109/TSE.2015.2396514
   Matloob Faseeha, 2021, Software defect prediction using ensemble learning: A systematic literature review
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Meng FQ, 2021, KSII T INTERNET INF, V15, P4028, DOI 10.3837/tiis.2021.11.009
   Mori T, 2019, EMPIR SOFTW ENG, V24, P779, DOI 10.1007/s10664-018-9638-1
   Pachouly J, 2022, ENG APPL ARTIF INTEL, V111, DOI 10.1016/j.engappai.2022.104773
   Pan ZX, 2022, IEEE T COMPUT, V71, P3308, DOI 10.1109/TC.2022.3150573
   Pascarella L, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110493
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petric J, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916007
   Pornprasit C, 2023, IEEE T SOFTWARE ENG, V49, P84, DOI 10.1109/TSE.2022.3144348
   Preece A., 2018, arXiv
   Rana Rakesh, 2014, Proceedings of the 9th International Conference on Software Engineering and Applications ICSOFT-EA 2014, P383
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Robnik-Sikonja M, 2008, IEEE T KNOWL DATA EN, V20, P589, DOI 10.1109/TKDE.2007.190734
   Roy S, 2022, PROC IEEE INT CONF S, P444, DOI 10.1109/ICSME55016.2022.00056
   Rudin C., 2018, Stat, V1050, P26
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Shin Jiho, 2021, arXiv
   Tian Y, 2016, EMPIR SOFTW ENG, V21, P2298, DOI 10.1007/s10664-015-9409-1
   Vieira ES, 2009, SCIENTOMETRICS, V81, P587, DOI 10.1007/s11192-009-2178-0
   von Eschenbach Warren J., 2021, Philosophy Technology, V34, P1607, DOI [DOI 10.1007/S13347-021-00477-0, 10.1007/s13347-021-00477-0]
   Wahono R. S., 2015, Journal of Software Engineering, V1, P1
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Wattanakriengkrai S, 2022, IEEE T SOFTWARE ENG, V48, P1480, DOI 10.1109/TSE.2020.3023177
   Wimalasooriya C, 2022, J SYST SOFTWARE, V186, DOI 10.1016/j.jss.2021.111166
   Winfield AFT, 2017, LECT NOTES COMPUT SC, V10454, P262, DOI 10.1007/978-3-319-64107-2_21
   Wood Thomas, 2021, CORE rankings portal
   Wu XX, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2021.106530
   Xu Z, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P209, DOI 10.1109/SANER.2018.8330210
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yao JX, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106664
   Zacharias J, 2022, ELECTRON MARK, V32, P2159, DOI 10.1007/s12525-022-00608-1
   Zhao YH, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3567550
NR 93
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2024
VL 171
AR 107456
DI 10.1016/j.infsof.2024.107456
EA APR 2024
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RU5T3
UT WOS:001230193400001
OA hybrid
DA 2024-08-05
ER

PT J
AU Alsaadi, B
   Saeedi, K
AF Alsaadi, Bashaer
   Saeedi, Kawther
TI Ensemble effort estimation for novice agile teams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software effort estimation; Agile; User story; Story points; Ensemble
   Estimation
ID SOFTWARE; MODEL
AB CONTEXT: To establish a reliable development plan, developers should investigate the software being developed. One main challenge for developers is estimating the effort required to develop the software. Agile teams deliver the software in a set of iterations, with each iteration containing user stories. Therefore, unlike traditional development, software development effort estimation (SDEE) in agile should focus on the user stories level. An inaccurate estimation has detrimental consequences for software development such as poor resource allocation or the delivery of low-quality software. However, limited works have developed new estimation methods for agile projects compared to traditional ones. OBJECTIVES: This study introduces an ensemble model for estimating efforts in agile user stories development. It also creates a new dataset with 140 user stories, aiming for future research use. METHODS: This research followed the Design Science Research methodology (DSR). Six individual models were examined to build the ensemble model. The top three models - Extra Trees, K-Nearest Neighbors, and MultiLayer Perceptron - were employed. The model's performance was assessed through Mean Absolute Error (MAE), Mean Squared Error (MSE), and Root Mean Squared Error (RMSE). Additionally, an experiment tested the model's efficacy on real software projects by novice teams. RESULTS: The results show that the ensemble model outperformed individual models, as it scored 0.78 in MAE, 1.62 in MSE, and 1.15 in RMSE. The experiment results showed that the model outperformed human estimation and proved its effectiveness in improving the accuracy of human estimation. CONCLUSION: The findings demonstrate the model's success in refining effort estimates for novice Agile teams, leading to fewer errors. Practically, it means enhanced project planning and resource management. Additionally, developers' estimation confidence improved, indicating a positive impact on team dynamics and decisionmaking.
C1 [Alsaadi, Bashaer] Saudi Elect Univ, Coll Comp & Informat, Informat Technol Dept, Jeddah, Saudi Arabia.
   [Alsaadi, Bashaer; Saeedi, Kawther] King Abdulaziz Univ, Fac Comp & Informat Technol, Informat Syst Dept, Jeddah, Saudi Arabia.
C3 Saudi Electronic University; King Abdulaziz University
RP Alsaadi, B (corresponding author), Saudi Elect Univ, Coll Comp & Informat, Informat Technol Dept, Jeddah, Saudi Arabia.; Alsaadi, B (corresponding author), King Abdulaziz Univ, Fac Comp & Informat Technol, Informat Syst Dept, Jeddah, Saudi Arabia.
EM b.alsaadi@seu.edu.sa
RI Alsaadi, Bashaer/KGL-8930-2024; Alsaadi, Bashaer/GQH-0609-2022
OI Alsaadi, Bashaer/0000-0002-5074-250X; 
CR Abrahamsson P, 2011, INT SYMP EMP SOFTWAR, P400, DOI 10.1109/ESEM.2011.58
   Alsaadi Bashaer, 2024, Mendeley Data, V1, DOI 10.17632/V42JH4NFZH.1
   Alsaadi B, 2022, ARTIF INTELL REV, V55, P5485, DOI 10.1007/s10462-021-10132-x
   Altaleb A, 2020, 2020 9TH INTERNATIONAL CONFERENCE ON INDUSTRIAL TECHNOLOGY AND MANAGEMENT (ICITM 2020), P291, DOI [10.1109/ICITM48982.2020.9080362, 10.1109/icitm48982.2020.9080362]
   Arora M, 2020, ADV INTELL SYST COMP, V1040, P573, DOI 10.1007/978-981-15-1451-7_59
   Berrar D., 2018, Tech. Rep., V1, P542, DOI [10.1016/B978-0-12-809633-8.20349-X, DOI 10.1016/B978-0-12-809633-8.20349-X, 10.1016/B978- 0-12- 809633-8.20349- X]
   Briand L. C., 2002, Encyclopedia of software engineering, P1160, DOI DOI 10.1002/0471028959.SOF282
   Choetkiertikul M, 2019, IEEE T SOFTWARE ENG, V45, P637, DOI 10.1109/TSE.2018.2792473
   Chongpakdee P, 2017, INT CONF SOFTW ENG, P149, DOI 10.1109/ICSESS.2017.8342885
   Dragicevic S, 2017, J SYST SOFTWARE, V127, P109, DOI 10.1016/j.jss.2017.01.027
   Espejo-Garcia B, 2021, AI-BASEL, V2, P34, DOI 10.3390/ai2010004
   Etikan I., 2016, American Journal of Theoretical and Applied Statistics, V5, P1, DOI [DOI 10.11648/J.AJTAS.20160501.11, 10.11648/j.ajtas.20160501.11]
   González-Ladrón-de-Guevara F, 2016, J SYST SOFTWARE, V113, P188, DOI 10.1016/j.jss.2015.11.040
   Hevner A.R., 2007, SCANDINAVIAN J INFOR, V1919, P4
   Hevner A, 2010, INTEGR SER INFORM SY, V22, P9, DOI 10.1007/978-1-4419-5653-8_2
   Hussain I, 2010, LECT NOTES COMPUT SC, V6177, P80, DOI 10.1007/978-3-642-13881-2_8
   Idri A, 2016, J SYST SOFTWARE, V118, P151, DOI 10.1016/j.jss.2016.05.016
   Jorgensen M, 2009, IEEE SOFTWARE, V26, P14, DOI 10.1109/MS.2009.47
   Khaledi-Nasab A, 2021, PHYS REV E, V103, DOI 10.1103/PhysRevE.103.012308
   Khuat Thanh Tung, 2016, Int. J. Comput. Sci. Inf. Secur.(IJCSIS), V14, P122
   Kotsiantis SB, 2006, PROC WRLD ACAD SCI E, V12, P278
   Liu HW, 2009, PATTERN RECOGN, V42, P1330, DOI 10.1016/j.patcog.2008.10.028
   López-Martínez J, 2018, CLUSTER COMPUT, V21, P715, DOI 10.1007/s10586-017-0996-z
   López-Martínez J, 2017, ADV INTELL SYST, V569, P205, DOI 10.1007/978-3-319-56535-4_21
   Lucassen G, 2016, REQUIR ENG, V21, P383, DOI 10.1007/s00766-016-0250-x
   Malgonde O, 2019, EMPIR SOFTW ENG, V24, P1017, DOI 10.1007/s10664-018-9647-0
   Matharu G. S., 2015, ACM SIGSOFT Software Engineering Notes, V40, P1, DOI [DOI 10.1145/2693208.2693233, 10.1145/2693208.2693233]
   Nassif AB, 2019, COMPUT INTEL NEUROSC, V2019, DOI 10.1155/2019/8367214
   Passing U, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P120, DOI 10.1109/ISESE.2003.1237971
   Potdar K., 2017, International journal of computer applications, V175, P7, DOI [DOI 10.5120/IJCA2017915495, 10.5120/ijca2017915495]
   Priya Varshini A., 2020, INDIAN J SCI TECHNOL, V13, P2094, DOI DOI 10.17485/IJST/v13i21.573
   Qi FM, 2017, INFORM SOFTWARE TECH, V92, P145, DOI 10.1016/j.infsof.2017.07.015
   Ross BC, 2014, PLOS ONE, V9, DOI 10.1371/journal.pone.0087357
   Rubin K. S., 2012, Essential Scrum-A Practical Guide to the Most Popular Agile Process
   Saini A, 2018, INT CONF RELI INFO, P779, DOI 10.1109/ICRITO.2018.8748381
   Sandhu MM, 2021, INT CONF PERVAS COMP, DOI 10.1109/PERCOM50583.2021.9439128
   Schwaber K., 2020, The scrum guide
   Serrador P, 2015, INT J PROJ MANAG, V33, P1040, DOI 10.1016/j.ijproman.2015.01.006
   Soares RGF, 2018, IEEE IJCNN
   Trendowicz A., 2014, Cost Model-COCOMO, V12, P277
   Tripanpitak K, 2021, IEEE ACCESS, V9, P10089, DOI 10.1109/ACCESS.2021.3050302
   Wautelet Y, 2014, LECT NOTES COMPUT SC, V8484, P211, DOI 10.1007/978-3-319-07881-6_15
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   Ziauddin Shahid Kamal Tipu, 2012, Advances in computer science and its applications (ACSA), V2, P314
NR 44
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2024
VL 170
DI 10.1016/j.infsof.2024.107447
EA MAR 2024
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QA9U4
UT WOS:001218285000001
DA 2024-08-05
ER

PT J
AU Noman, H
   Mahoto, N
   Bhatti, S
   Rajab, A
   Shaikh, A
AF Noman, Hira
   Mahoto, Naeem
   Bhatti, Sania
   Rajab, Adel
   Shaikh, Asadullah
TI Towards sustainable software systems: A software sustainability analysis
   framework
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software sustainability; Software design; Sustainability framework;
   Software impacts
ID INFORMATION
AB Context: In today's rapidly evolving technological landscape designing sustainable software systems requires considering the software impacts and its long-term viability. For professionals, a significant barrier lies in the need for practical guidelines and tangible frameworks for effectively incorporating sustainability considerations during software design and development. Objective: The study aims to help software practitioners consider sustainability during software design and development by providing systematic guidelines. We proposed a framework that enables professionals to do so by allowing them to foresee how and how much impact the software has on sustainability and its dimensions. Methods: The study presented a software sustainability analysis framework that helps to derive sustainability goals and extract sustainability improvement features for software systems based on their impacts on sustainability dimensions. The framework's application is exemplified through two Software applications, and sustainability guidelines have been provided. Results: Industry professionals with diverse roles were engaged to validate the framework's relevance and practicality. Their feedback was collected through discussion, and direct excerpts were reported. Validation results revealed that the framework effectively addresses the key challenges professionals face in integrating sustainability into their practices. Conclusion: Professionals acknowledged the importance of considering sustainability aspects in software design and development and appreciated the structured approach provided by the framework.
C1 [Noman, Hira; Mahoto, Naeem; Bhatti, Sania] Mehran Univ Engn & Technol, Dept Software Engn, Jamshoro 76062, Pakistan.
   [Rajab, Adel] Najran Univ, Coll Comp Sci & Informat Syst, Dept Comp Sci, Najran 61441, Saudi Arabia.
   [Shaikh, Asadullah] Najran Univ, Coll Comp Sci & Informat Syst, Dept Informat Syst, Najran 61441, Saudi Arabia.
C3 Mehran University Engineering & Technology; Najran University; Najran
   University
RP Shaikh, A (corresponding author), Najran Univ, Coll Comp Sci & Informat Syst, Dept Informat Syst, Najran 61441, Saudi Arabia.
EM hira.noman@faculty.muet.edu.pk; naeem.mahoto@faculty.muet.edu.pk;
   sania.bhatti@faculty.muet.edu.pk; adrajab@nu.edu.sa; asshaikh@nu.edu.sa
RI Shaikh, Asadullah/S-4815-2016
OI Shaikh, Asadullah/0000-0003-4806-6159; , Naeem Ahmed/0000-0002-3181-4811
FU Deanship of Scientific Research at Najran University, Saudi Arabia
   [NU/RG/SERC/12/37]
FX <B>Acknowledgments</B> The authors are thankful to the Deanship of
   Scientific Research at Najran University, Saudi Arabia for funding this
   work, under the Research Groups Funding program grant code
   (NU/RG/SERC/12/37) . Additionally, the authors wish to express their
   profound appreciation to the reviewers and to the editor for their
   insightful feedback, which greatly improved this article.
CR Andrae A., 2015, Challenges, V6, P117, DOI 10.3390/challe6010117
   [Anonymous], 2010, ISO 26000, P6
   [Anonymous], 1999, Website carbon calculator
   Balde CP, 2017, GLOBAL E WASTE MONIT
   Calero C., 2015, Green in software engineering, V3
   Calero C, 2022, IT PROF, V24, P41, DOI 10.1109/MITP.2021.3117344
   Condori-Fernandez N, 2020, SUSTAINABILITY-BASEL, V12, DOI 10.3390/su12041682
   Condori-Fernandez N, 2018, J SYST SOFTWARE, V137, P289, DOI 10.1016/j.jss.2017.12.005
   Dick M, 2010, IFIP ADV INF COMM TE, V328, P248
   Duboc L, 2020, REQUIR ENG, V25, P469, DOI 10.1007/s00766-020-00336-y
   Duboc L, 2019, INT REQUIR ENG CONF, P6, DOI 10.1109/RE.2019.00013
   Fernandez N.C., 2019, CEUR WORKSH P, V2382
   Fonseca A, 2019, IEEE SOFTWARE, V36, P79, DOI 10.1109/MS.2019.2924498
   García-Berná JA, 2021, J CLEAN PROD, V282, DOI 10.1016/j.jclepro.2020.124262
   Guldner A, 2018, PROGR IS, P251, DOI 10.1007/978-3-319-65687-8_22
   Hilty LM, 2006, ENVIRON MODELL SOFTW, V21, P1618, DOI 10.1016/j.envsoft.2006.05.007
   Hilty LM, 2015, ADV INTELL SYST, V310, P3, DOI 10.1007/978-3-319-09228-7_1
   iso, 2011, ISO/IEC 25010, ISO/ IEC 25010: 2011
   Jones N, 2018, NATURE, V561, P163, DOI 10.1038/d41586-018-06610-y
   Karita L, 2022, 36TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2022, P269, DOI 10.1145/3555228.3555236
   Kern E, 2018, FUTURE GENER COMP SY, V86, P199, DOI 10.1016/j.future.2018.02.044
   Khalifeh A, 2020, INT J MANAG PROJ BUS, V13, P1339, DOI 10.1108/IJMPB-12-2019-0289
   Koomey J.G., 2007, ESTIMATING TOTAL POW
   Lago P., 2021, Advances and New Trends in Environmental Informatics, P3
   Lago P, 2015, COMMUN ACM, V58, P70, DOI 10.1145/2714560
   Liu XT, 2008, IEEE T MOBILE COMPUT, V7, P995, DOI 10.1109/TMC.2007.70767
   Malmodin J, 2018, SUSTAINABILITY-BASEL, V10, DOI 10.3390/su10093027
   Naumann S, 2011, SUSTAIN COMPUT-INFOR, V1, P294, DOI 10.1016/j.suscom.2011.06.004
   Noman H, 2022, SUSTAINABILITY-BASEL, V14, DOI 10.3390/su14148596
   Oyedeji S., 2019, Sustain. Develop, V3, P5
   Penzenstadler B., 2011, SEM SUST SOFTW ENG
   Penzenstadler B., 2013, P 1 INT C ICT SUST, V94
   Penzenstadler B., 2014, P 3 INT WORKSH REQ E, V1216, P44
   Penzenstadler B, 2014, IEEE SOFTWARE, V31, P40, DOI 10.1109/MS.2014.22
   Penzenstadler Birgit, 2013, Proceedings of Software Engineering, Japan, P3, DOI DOI 10.1145/2451605.2451609
   Restrepo L, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111010
   Salam M, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1939
   Saputri TRD, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106407
   Statista, 2023, Number of office 365 users worldwide as of february 2023, by leading country
   Swacha J, 2022, SUSTAINABILITY-BASEL, V14, DOI 10.3390/su14010551
   Tanveer B, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2021), P267, DOI 10.1109/ASEW52652.2021.00059
   Venters C.C., 2014, J. Open Res. Softw., V2, P8, DOI DOI 10.5334/JORS.AO
   Venters CC, 2021, 2021 IEEE/ACM INTERNATIONAL WORKSHOP ON BODY OF KNOWLEDGE FOR SOFTWARE SUSTAINABILITY (BOKSS 2021), P3, DOI 10.1109/BoKSS52540.2021.00009
   Venters CC, 2018, J SYST SOFTWARE, V138, P174, DOI 10.1016/j.jss.2017.12.026
   Volpato T, 2019, 13TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2019), VOL 2, P245, DOI 10.1145/3344948.3344979
   Winkler T, 2019, IEEE TECHNOL SOC MAG, V38, P34, DOI 10.1109/MTS.2019.2930268
   World Commission on Environment and Development (WCED), 1987, OUR COMMON FUTURE, DOI DOI 10.1080/07488008808408783
   Pham YD, 2020, INT REQUIR ENG CONF, P358, DOI 10.1109/RE48521.2020.00048
NR 48
TC 0
Z9 0
U1 7
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2024
VL 169
AR 107411
DI 10.1016/j.infsof.2024.107411
EA FEB 2024
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JX4Z9
UT WOS:001176459700001
DA 2024-08-05
ER

PT J
AU Pretel, E
   Moya, A
   Navarro, E
   López-Jaquero, V
   González, P
AF Pretel, Elena
   Moya, Alejandro
   Navarro, Elena
   Lopez-Jaquero, Victor
   Gonzalez, Pascual
TI Analysing the synergies between Multi-agent Systems and Digital Twins: A
   systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Digital twin; Multi -agent system; MAS; Literature review; Internet of
   Things
ID INDUSTRY
AB Context: Digital Twins (DTs) are used to augment physical entities by exploiting assorted computational approaches applied to the virtual twin counterpart. A DT is generally described as a physical entity, its virtual counterpart, and the data connections between them. Multi-Agent Systems (MAS) paradigm is alike DTs in many ways. Agents of MAS are entities operating and interacting in a specific environment, while exploring and collecting data to solve some tasks. Objective: This paper presents the results of a systematic literature review (SLR) focused on the analysis of current proposals exploiting the synergies of DTs and MAS. This research aims to synthesize studies that focus on the use of MAS to support DTs development and MAS that exploit DTs, paving the way for future research. Method: A SLR methodology was used to conduct a detailed study analysis of 64 primary studies out of a total of 220 studies that were initially identified. This SLR analyses three research questions related to the synergies between MAS and DT. Results: The most relevant findings of this SLR and their implications for further research are the following: i) most of the analyzed proposals design digital shadows rather than DT; ii) they do not fully support the properties expected from a DT; iii) most of the MAS properties have not fully exploited for the development of DT; iv) ontologies are frequently used for specifying semantic models of the physical twin. Conclusions: Based on the results of this SLR, our conclusions for the community are presented in a research agenda that highlights the need of innovative theoretical proposals and design frameworks that guide the development of DT. They should be defined exploiting the properties of MAS to unleash the full potential of DT. Finally, ontologies for machine learning models should be designed for its use in DT.
C1 [Pretel, Elena; Moya, Alejandro; Navarro, Elena; Lopez-Jaquero, Victor; Gonzalez, Pascual] Univ Castilla La Mancha, Comp Syst Dept, LoUISE Res Grp, Avda Espana S-N, Albacete 02071, Spain.
C3 Universidad de Castilla-La Mancha
RP Navarro, E (corresponding author), Univ Castilla La Mancha, Comp Syst Dept, LoUISE Res Grp, Avda Espana S-N, Albacete 02071, Spain.
EM elena.navarro@uclm.es
RI Navarro, Elena/I-7452-2013; Gonzalez, Pascual/E-3693-2016
OI Navarro, Elena/0000-0001-9496-6890; Pretel, Elena/0000-0002-7703-9558;
   Lopez Jaquero, Victor Manuel/0000-0003-2093-4065; Gonzalez,
   Pascual/0000-0003-3549-5712; Moya, Alejandro/0000-0002-8071-9845
FU ERDF [MCIU/AEI/10.13039/501100011033, PID2022-PID2022-140907OB-I00,
   MICIU/AEI/10.13039/501100011033]; EU; Junta de Comunidades de
   Castilla-La Mancha/ERDF [SBPLY/21/180501/000030]; University of
   Castilla-La Mancha; Spanish Ministerio de Educaci [2023-GRIN-34436]
FX This paper is part of the R + D + i projects PID2019-108915RB-I00 funded
   by MCIU/AEI/10.13039/501100011033 and PID2022-PID2022-140907OB-I00
   funded by MICIU/AEI/10.13039/501100011033 and ERDF, EU. It has also been
   partially supported by Junta de Comunidades de Castilla-La Mancha/ERDF
   (SBPLY/21/180501/000030) and by the University of Castilla-La Mancha
   (2023-GRIN-34436). Elena Pretel holds a FPU21/02679 scholarship from
   Spanish Ministerio de Educacion y Formacion Profesional.r funded by
   MCIU/AEI/10.13039/501100011033 and PID2022-PID2022-140907OB-I00 funded
   by MICIU/AEI/10.13039/501100011033 and ERDF, EU. It has also been
   partially supported by Junta de Comunidades de Castilla-La Mancha/ERDF
   (SBPLY/21/180501/000030) and by the University of Castilla-La Mancha
   (2023-GRIN-34436) . Elena Pretel holds a FPU21/02679 scholarship from
   Spanish Ministerio de Educaci <acute accent> on y Formaci <acute accent>
   on Profesional.
CR Ahlgren J, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P1, DOI 10.1145/3463274.3463275
   Amirkhani A, 2022, ARTIF INTELL REV, V55, P3897, DOI 10.1007/s10462-021-10097-x
   Bakliwal K, 2018, IFAC PAPERSONLINE, V51, P1237, DOI 10.1016/j.ifacol.2018.08.421
   Barricelli BR, 2019, IEEE ACCESS, V7, P167653, DOI 10.1109/ACCESS.2019.2953499
   Borangiu T, 2020, ROM J INF SCI TECH, V23, P3
   Camps Valerie., 2011, Natural Computing Series, P105, DOI [10.1007/978-3-642-17348-65, DOI 10.1007/978-3-642-17348-65]
   Cho K-S, 2022, IET Conference Proceedings, V2022, P1158, DOI 10.1049/icp.2022.0897
   Clark T, 2020, ISOFT: PROCEEDINGS OF THE 13TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, DOI 10.1145/3385032.3385041
   Croatti A, 2020, J MED SYST, V44, DOI 10.1007/s10916-020-01623-5
   Cui YL, 2020, INT J ROBUST NONLIN, V30, P804, DOI 10.1002/rnc.4809
   Dalibor M, 2022, J SYST SOFTWARE, V193, DOI 10.1016/j.jss.2022.111361
   Dorri A, 2018, IEEE ACCESS, V6, P28573, DOI 10.1109/ACCESS.2018.2831228
   Errandonea I, 2020, COMPUT IND, V123, DOI 10.1016/j.compind.2020.103316
   Fan HL, 2023, IEEE T IND INFORM, V19, P7217, DOI 10.1109/TII.2022.3228682
   Filippi G, 2022, IEEE C EVOL COMPUTAT, DOI 10.1109/CEC55065.2022.9870306
   Galuzin V, 2022, MATHEMATICS-BASEL, V10, DOI 10.3390/math10101662
   Gayathri R, 2018, ICT EXPRESS, V4, P69, DOI [10.1016/j.icte.2018.04.008, 10.1016/j.jcte.2018.04.008]
   Goppert A., 2021, Adv. Automot. Prod. Technol.-Theory Appl., P3, DOI DOI 10.1007/978-3-662-62962-81
   Gorodetsky VI, 2019, LECT NOTES ARTIF INT, V11710, P52, DOI 10.1007/978-3-030-27878-6_5
   Grieves M, 2017, Transdisciplinary Perspectives on Complex Systems: New Findings and Approaches, P85, DOI [10.1007/978-3-319-38756-7_4, DOI 10.1007/978-3-319-38756-7_4, 10.1007/978-3-319-38756-74, DOI 10.1007/978-3-319-38756-74]
   Gronauer S, 2022, ARTIF INTELL REV, V55, P895, DOI 10.1007/s10462-021-09996-w
   Guo JK, 2022, MULTIMED TOOLS APPL, V81, P26941, DOI 10.1007/s11042-022-12536-5
   Hafez W, 2020, ADV INTELL SYST, V1038, P981, DOI 10.1007/978-3-030-29513-4_72
   Havard V, 2021, P I MECH ENG B-J ENG, V235, P2338, DOI 10.1177/0954405420979463
   Heininger R, 2021, SAT-CPS'21: PROCEEDINGS OF THE 2021 ACM WORKSHOP ON SECURE AND TRUSTWORTHY CYBER-PHYSICAL SYSTEMS, P3, DOI 10.1145/3445969.3450422
   Howard D.A., 2022 IEEE 2 INT C DI, V2022, DOI [10.1109/DTPI55838.2022.9998914, DOI 10.1109/DTPI55838.2022.9998914]
   Huang JR, 2023, SOL ENERGY, V252, P8, DOI 10.1016/j.solener.2023.01.044
   Jia G., 2022, 2022 IEEE 3 CHIN INT, P1, DOI [10.1109/CIYCEE55749.2022.9958999, DOI 10.1109/CIYCEE55749.2022.9958999]
   Jones D, 2020, CIRP J MANUF SCI TEC, V29, P36, DOI 10.1016/j.cirpj.2020.02.002
   Jung T, 2018, PROC CIRP, V72, P874, DOI 10.1016/j.procir.2018.03.084
   Jung Y, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11198979
   Kaur M.J., 2020, Digital Twin Technologies and Smart Cities, P3, DOI [DOI 10.1007/978-3-030-18732-3_1, DOI 10.1007/978-3-030-18732]
   Kazakov V.V., 2020, CEUR WORKSHOP P, V2569, P29
   Kim B, 2021, INT CONF ADV COMMUN, P68, DOI 10.23919/ICACT51234.2021.9370797
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kostromin R., 2020, 4 INT C FUT NETW DIS, P1, DOI [10.1145/3440749.3442599, DOI 10.1145/3440749.3442599]
   Kritzinger W, 2018, IFAC PAPERSONLINE, V51, P1016, DOI 10.1016/j.ifacol.2018.08.474
   Kritzler M, 2019, COMPANION OF THE WORLD WIDE WEB CONFERENCE (WWW 2019 ), P663, DOI 10.1145/3308560.3316510
   Kulmanov M, 2021, BRIEF BIOINFORM, V22, DOI 10.1093/bib/bbaa199
   Laryukhin V., 2019, Cybern. Phys., P257, DOI [10.35470/2226-4116-2019-8-4-257-261, DOI 10.35470/2226-4116-2019-8-4-257-261]
   Latsou C, 2023, J MANUF SYST, V67, P242, DOI 10.1016/j.jmsy.2023.02.008
   Latsou C, 2021, IFAC PAPERSONLINE, V54, P811, DOI 10.1016/j.ifacol.2021.08.096
   Lektauers A, 2022, 2022 63RD INTERNATIONAL SCIENTIFIC CONFERENCE ON INFORMATION TECHNOLOGY AND MANAGEMENT SCIENCE OF RIGA TECHNICAL UNIVERSITY (ITMS), DOI 10.1109/ITMS56974.2022.9937103
   Liu WS, 2023, IEEE T WIREL COMMUN, V22, P5725, DOI 10.1109/TWC.2023.3235997
   Liu Y, 2019, IEEE ACCESS, V7, P49088, DOI 10.1109/ACCESS.2019.2909828
   Lorente Q., 2022, IEEE INT C IND ENG E, P122, DOI [10.1109/IEEM55944.2022.9989843, DOI 10.1109/IEEM55944.2022.9989843]
   Mariani S, 2022, LECT NOTES ARTIF INT, V13441, P114, DOI 10.1007/978-3-031-20179-0_8
   Massel Lyudmila V., 2020, E3S Web of Conferences, V209, DOI 10.1051/e3sconf/202020902019
   García NM, 2019, ADCAIJ-ADV DISTRIB C, V8, P33, DOI 10.14201/ADCAIJ2019843340
   May MC, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app12031608
   Mehdi N, 2019, WINT SIMUL C PROC, P2178, DOI 10.1109/WSC40007.2019.9004928
   Meyer O, 2018, ECSA 2018: PROCEEDINGS OF THE 12TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE: COMPANION PROCEEDINGS, DOI 10.1145/3241403.3241413
   Minerva R, 2020, P IEEE, V108, P1785, DOI 10.1109/JPROC.2020.2998530
   Mo Fan, 2023, Flexible Automation and Intelligent Manufacturing: The Human-Data-Technology Nexus: Proceedings of FAIM 2022. Lecture Notes in Mechanical Engineering, P361, DOI 10.1007/978-3-031-18326-3_35
   Munkelt T, 2018, WINT SIMUL C PROC, P3241, DOI 10.1109/WSC.2018.8632305
   Niati A., 2020, 23 ACM IEEE INT C MO, P1, DOI [10.1145/3417990.3421438, DOI 10.1145/3417990.3421438]
   Nie QW, 2023, ROBOT CIM-INT MANUF, V82, DOI 10.1016/j.rcim.2023.102543
   Ocker F, 2021, IFAC PAPERSONLINE, V54, P837, DOI 10.1016/j.ifacol.2021.08.186
   Onggo BS, 2018, WINT SIMUL C PROC, P1358, DOI 10.1109/WSC.2018.8632407
   Park KT, 2021, INT J PROD RES, V59, P5721, DOI 10.1080/00207543.2020.1788738
   Petrillo A, 2017, J FRANKLIN I, V354, P8586, DOI 10.1016/j.jfranklin.2017.10.015
   Ramesh A, 2020, PROCEEDINGS OF THE ASME 2020 15TH INTERNATIONAL MANUFACTURING SCIENCE AND ENGINEERING CONFERENCE (MSEC2020), VOL 2A
   Ricci A, 2022, ACM T INTERNET TECHN, V22, DOI 10.1145/3507909
   Roda C, 2017, NEUROCOMPUTING, V231, P11, DOI 10.1016/j.neucom.2016.04.066
   Rolo GR, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11052202
   Singh M, 2021, APPL SYST INNOV, V4, DOI 10.3390/asi4020036
   Skobelev P., 2022, 16 INT C INN INT SYS, DOI [10.1109/INISTA55318.2022.9894246, DOI 10.1109/INISTA55318.2022.9894246]
   Skobelev P., 2022, 2022 8 INT C INF TEC, DOI [10.1109/ITNT55410.2022.9848748, DOI 10.1109/ITNT55410.2022.9848748]
   Skobelev P., 2021, P ITNT 2021 7 IEEE I, DOI DOI 10.1109/ITNT52450.2021.9649038
   Skobelev P. O., 2020, Journal of Physics: Conference Series, V1703, DOI 10.1088/1742-6596/1703/1/012022
   Skobelev P, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON SMART COMPUTING (SMARTCOMP), P268, DOI 10.1109/SMARTCOMP50058.2020.00062
   Skobelev P, 2020, PROCEEDINGS OF THE 2020 FOURTH WORLD CONFERENCE ON SMART TRENDS IN SYSTEMS, SECURITY AND SUSTAINABILITY (WORLDS4 2020), P522, DOI [10.1109/WorldS450073.2020.9210359, 10.1109/worlds450073.2020.9210359]
   Somers RJ, 2023, INFORM SOFTWARE TECH, V156, DOI 10.1016/j.infsof.2022.107145
   Stennikov V, 2022, COMPUTATION, V10, DOI 10.3390/computation10120222
   Temkin I, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21186277
   van Dinter R, 2022, INFORM SOFTWARE TECH, V151, DOI 10.1016/j.infsof.2022.107008
   Verkhova Galina V., 2021, 2021 XXIV International Conference on Soft Computing and Measurements (SCM), P204, DOI 10.1109/SCM52931.2021.9507179
   Wan H, 2020, IFAC PAPERSONLINE, V53, P372, DOI 10.1016/j.ifacol.2020.11.060
   Wan H, 2021, IFAC PAPERSONLINE, V54, P880, DOI 10.1016/j.ifacol.2021.08.104
   Wang XD, 2024, J INTELL MANUF, V35, P613, DOI 10.1007/s10845-022-02065-1
   Wassermann E, 2017, IEEE INTL CONF IND I, P89, DOI 10.1109/INDIN.2017.8104752
   Wen JB, 2023, IEEE T NETW SCI ENG, V10, P2791, DOI 10.1109/TNSE.2022.3198818
   Xie Jinghai, 2022, 2022 2nd International Conference on Electrical Engineering and Mechatronics Technology (ICEEMT), P418, DOI 10.1109/ICEEMT56362.2022.9862649
   Yuan Jingzhong, 2022, 2022 2nd International Conference on Electrical Engineering and Mechatronics Technology (ICEEMT), P397, DOI 10.1109/ICEEMT56362.2022.9862764
   Yun TS, 2020, WINT SIMUL C PROC, P620, DOI 10.1109/WSC48552.2020.9383874
   Zekri S, 2022, COMPUT INFORM, V41, P135, DOI 10.31577/cai_2022_1_135
   Zhang JP, 2024, INT J ADV MANUF TECH, V131, P5553, DOI 10.1007/s00170-023-10815-5
   Zhang K, 2022, IEEE T IND INFORM, V18, P1405, DOI 10.1109/TII.2021.3088407
   Zheng XC, 2020, PROCEDIA MANUF, V51, P309, DOI 10.1016/j.promfg.2020.10.044
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.62, 10.1109/APSEC.2016.031]
NR 90
TC 0
Z9 0
U1 6
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2024
VL 174
AR 107503
DI 10.1016/j.infsof.2024.107503
EA JUN 2024
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WS2M7
UT WOS:001256797700001
OA hybrid
DA 2024-08-05
ER

PT J
AU Zhao, JJ
   Chen, X
   Yang, G
   Shen, YH
AF Zhao, Junjie
   Chen, Xiang
   Yang, Guang
   Shen, Yiheng
TI Automatic smart contract comment generation via large language models
   and in-context learning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Smart contract comment; Large language model; In-context learning;
   Demonstration selection; Information retrieval
ID COMMIT MESSAGE GENERATION; TRANSFORMER
AB Context: Designing effective automatic smart contract comment generation approaches can facilitate developers' comprehension, boosting smart contract development and improving vulnerability detection. The previous approaches can be divided into two categories: fine-tuning paradigm -based approaches and information retrieval -based approaches. Objective: However, for the fine-tuning paradigm -based approaches, the performance may be limited by the quality of the gathered dataset for the downstream task and they may have knowledge -forgetting issues, which can reduce the generality of the fine-tuned model. While for the information retrieval -based approaches, it is difficult for them to generate high -quality comments if similar code does not exist in the historical repository. Therefore we want to utilize the domain knowledge related to smart contract code comment generation in large language models (LLMs) to alleviate the disadvantages of these two types of approaches. Method: In this study, we propose an approach SCCLLM based on LLMs and in -context learning. Specifically, in the demonstration selection phase, SCCLLM retrieves the top -k code snippets from the historical corpus by considering syntax, semantics, and lexical information. In the in -context learning phase, SCCLLM utilizes the retrieved code snippets as demonstrations for in -context learning, which can help to utilize the related knowledge for this task in the LLMs. In the LLMs inference phase, the input is the target smart contract code snippet, and the output is the corresponding comment generated by the LLMs. Results: We select a large corpus from a smart contract community Etherscan.io as our experimental subject. Extensive experimental results show the effectiveness of SCCLLM when compared with baselines in automatic evaluation and human evaluation. We also show the rationality of our customized demonstration selection strategy in SCCLLM by ablation studies. Conclusion: Our study shows using LLMs and in -context learning is a promising direction for automatic smart contract comment generation, which calls for more follow-up studies.
C1 [Zhao, Junjie; Chen, Xiang; Shen, Yiheng] Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
   [Yang, Guang] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
C3 Nantong University; Nanjing University of Aeronautics & Astronautics
RP Chen, X (corresponding author), Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
EM zhaojunjie225@gmail.com; xchencs@ntu.edu.cn; novelyg@outlook.com;
   yiheng.s@outlook.com
OI chen, xiang/0000-0002-1180-3891
FU National Natural Science Foundation of China [62202419]
FX The authors would like to thank the anonymous reviewers for their
   insightful comments and suggestions, which can substantially improve the
   quality of this work. Junjie Zhao and Xiang Chen have contributed
   equally to this work and they are co-first authors. This work is
   sup-ported in part by the National Natural Science Foundation of China
   (Grant no 62202419) .
CR Ahmad Wasi Uddin, 2020, P 58 ANN M ASS COMPU, P4998, DOI 10.18653/v1/2020.acl-main.449
   Chen SQ, 2020, IEEE INT CONF AUTOM, P385, DOI 10.1145/3324884.3416538
   De Lange M, 2022, IEEE T PATTERN ANAL, V44, P3366, DOI 10.1109/TPAMI.2021.3057446
   Dong QX, 2022, Arxiv, DOI [arXiv:2301.00234, DOI 10.48550/ARXIV.2301.00234]
   Dong YH, 2024, Arxiv, DOI arXiv:2304.07590
   Eliseeva A, 2023, Arxiv, DOI arXiv:2308.07655
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Gao TY, 2021, 59TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 11TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (ACL-IJCNLP 2021), VOL 1, P3816
   Gao ZP, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3401026
   Geng Mingyang, 2024, Large Language Models are Few-Shot Summarizers: Multi-Intent Comment Generation via In-Context Learning
   Gong Z, 2022, EUR CON SFTWR MTNCE, P13, DOI 10.1109/SANER53432.2022.00013
   Guang Yang, 2021, 2021 8th International Conference on Dependable Systems and Their Applications (DSA), P30, DOI 10.1109/DSA52907.2021.00013
   Haque S, 2022, INT C PROGRAM COMPRE, P36, DOI 10.1145/nnnnnnn.nnnnnnn
   Hou XY, 2024, Arxiv, DOI arXiv:2308.10620
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Li YJ, 2007, IEEE T PATTERN ANAL, V29, P1091, DOI 10.1109/TPAMI.2007.1070
   Li Z, 2023, IEEE T RELIAB, V72, P258, DOI 10.1109/TR.2022.3154773
   Li Z, 2021, J SYST SOFTWARE, V181, DOI 10.1016/j.jss.2021.111036
   Lin C.-Y., 2004, ANN M ASS COMP LING, P74
   Lin H, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111513
   Liu Che, 2023, arXiv
   Liu JW, 2023, Arxiv, DOI arXiv:2305.01210
   Liu K, 2023, IEEE T SOFTWARE ENG, V49, P4390, DOI 10.1109/TSE.2023.3292399
   Liu K, 2022, 13TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, INTERNETWARE 2022, P147, DOI 10.1145/3545258.3545260
   Liu K, 2022, EUR CON SFTWR MTNCE, P577, DOI 10.1109/SANER53432.2022.00075
   Liu PF, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3560815
   Liu X, 2023, Arxiv, DOI [arXiv:2305.15525, 10.48550/arXiv.2305.15525, DOI 10.48550/ARXIV.2305.15525]
   Liu Yi, 2023, arXiv, DOI DOI 10.48550/ARXIV.2305.12865
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Mu FW, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556917
   Nashid N, 2023, PROC INT CONF SOFTW, P2450, DOI 10.1109/ICSE48619.2023.00205
   Ningyu He, 2020, Financial Cryptography and Data Security. 24th International Conference, FC 2020. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12059), P654, DOI 10.1007/978-3-030-51280-4_35
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Raffel C, 2020, J MACH LEARN RES, V21
   Roy D, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1105, DOI 10.1145/3468264.3468588
   Singh R, 2013, Elements of survey sampling
   Siow JK, 2022, EUR CON SFTWR MTNCE, P554, DOI 10.1109/SANER53432.2022.00073
   Son J., 2022, P 29 INT C COMPUTATI, P5966
   Su J., 2021, ARXIV
   Sun ZY, 2020, AAAI CONF ARTIF INTE, V34, P8984
   Tao W, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10219-1
   Thakur S, 2023, Arxiv, DOI arXiv:2308.00708
   Wang JJ, 2024, Arxiv, DOI arXiv:2307.07221
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Xia CS, 2023, PROC INT CONF SOFTW, P1482, DOI 10.1109/ICSE48619.2023.00129
   Xia CS, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P959, DOI 10.1145/3540250.3549101
   Xia CS, 2023, Arxiv, DOI arXiv:2304.00385
   Yang G, 2023, J SYST SOFTWARE, V197, DOI 10.1016/j.jss.2022.111577
   Yang G, 2022, EUR CON SFTWR MTNCE, P361, DOI 10.1109/SANER53432.2022.00052
   Yang G, 2021, ASIA PAC SOFWR ENG, P213, DOI 10.1109/APSEC53868.2021.00029
   Yang G, 2022, KNOWL-BASED SYST, V237, DOI 10.1016/j.knosys.2021.107858
   Yang Z, 2021, INT C PROGRAM COMPRE, P1, DOI 10.1109/ICPC52881.2021.00010
   Yin W, 2022, P 2022 C EMPIRICAL M, P4738
   Yu C, 2022, PROC IEEE INT CONF S, P82, DOI 10.1109/ICSME55016.2022.00016
   Zhang J, 2020, PROC INT CONF SOFTW, P1385, DOI 10.1145/3377811.3380383
   Zhang T, 2022, PROC IEEE INT CONF S, P71, DOI 10.1109/ICSME55016.2022.00015
   Zhao TZ, 2021, PR MACH LEARN RES, V139
   Zhao WX, 2023, Arxiv, DOI arXiv:2303.18223
   Zheng ZB, 2020, FUTURE GENER COMP SY, V105, P475, DOI 10.1016/j.future.2019.12.019
   Zhu T., 2023, ACM Trans. Softw. Eng. Methodol.
   Zhuang Y, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3283
   Zhuo WJ, 2023, PROCEEDINGS OF THE 61ST ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2023): LONG PAPERS, VOL 1, P12135
   Zou WQ, 2021, IEEE T SOFTWARE ENG, V47, P2084, DOI 10.1109/TSE.2019.2942301
NR 66
TC 1
Z9 1
U1 8
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2024
VL 168
AR 107405
DI 10.1016/j.infsof.2024.107405
EA JAN 2024
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IF7T6
UT WOS:001164987100001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Venigalla, ASM
   Chimalakonda, S
AF Venigalla, Akhila Sri Manasa
   Chimalakonda, Sridhar
TI An exploratory study of software artifacts on GitHub from the lens of
   documentation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software artifacts; GitHub; Documentation; Issue reports; Pull-requests;
   Commit messages
ID VISUALIZATION; PROJECTS; CODE
AB Context: The abundance of software artifacts in open-source repositories has been analyzed by researchers from many perspectives, to address challenges in downstream tasks such as bug localization, code clone detection and so on. However, there is limited exploration of artifacts such as pull-requests and issues from a documentation perspective. Objective: We aim to explore the presence of information useful for documentation in different sources within the software projects. We present an exploratory analysis of 1.38M artifacts extracted from 950 GitHub repositories that analyses the content present in multiple software artifacts from a documentation perspective. Method: We arrive at a list of documentation types and sources through card-sorting and a developer survey. We apply topic modeling on the data extracted from 1.38M software artifacts based on these lists and study the extent of documentation-related information present in the software artifacts. The exploratory analysis of the artifacts listed is consolidated into the 'DocMine' dataset that comprises 50.63M textual sentences spanning across repositories written in four different programming languages. Results: We observe that about 28.1% of content extracted from the artifacts contains information related to features and modifications of the project at a higher level, and that pull-requests and issues comprise 18.26% and 17.85% of the extracted information. Conclusion: The presence of information about the projects in pull-requests and issues indicates immense scope in analyzing and processing multiple software artifacts for the purposes of generating software documentation and beyond. We envision that this study could open up a new line of research in software documentation.
C1 [Venigalla, Akhila Sri Manasa; Chimalakonda, Sridhar] Indian Inst Technol Tirupati, Dept Comp Sci & Engn, Res Intelligent Software & Human Analyt RISHA Lab, Tirupati, India.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Tirupati
RP Venigalla, ASM (corresponding author), Indian Inst Technol Tirupati, Dept Comp Sci & Engn, Res Intelligent Software & Human Analyt RISHA Lab, Tirupati, India.
EM cs19d504@iittp.ac.in; ch@iittp.ac.in
FU Science and Engineer-ing Research Board, Department of Science &
   Technology, Government of India [CRG/2022/008386]
FX We thank the participants of the user survey and interviews for their
   valuable insights and responses. We thank our then under-graduate
   student, Kowndinya Boyyalakuntla, for helping us in the card-sorting
   approach. We thank the reviewers of IST for helping us in the enhanc-ing
   the paper and thank A Eashaan Rao, for his support in proof-reading
   which helped us in improving the paper. A part of this work is partially
   supported by the grant CRG/2022/008386 from Science and Engineer-ing
   Research Board, Department of Science & Technology, Government of India.
CR Abid N, 2017, PROC IEEE INT CONF S, P307, DOI 10.1109/ICSME.2017.76
   Aghajani E, 2020, PROC INT CONF SOFTW, P590, DOI 10.1145/3377811.3380405
   Aghajani E, 2019, PROC INT CONF SOFTW, P1199, DOI 10.1109/ICSE.2019.00122
   Aghajani E, 2018, PROC IEEE INT CONF S, P727, DOI 10.1109/ICSME.2018.00090
   Ali S, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3375636
   AlOmar EA, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-021-00314-w
   Baltes S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10072-8
   Bao LF, 2021, IEEE T SOFTWARE ENG, V47, P1277, DOI 10.1109/TSE.2019.2918536
   Behutiye W, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111112
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Bock T, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3593803
   Bogart C, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447245
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Brown C, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1065, DOI 10.1145/3368089.3409722
   Campbell JC., 2003, The Art and Science of Analyzing Software Data, V3, P139, DOI DOI 10.1016/B978-0-12-411519-4.00006-9
   Chatterjee P., 2020, ACM Transactions on Software Engineering and Methodology (TOSEM)., V30, P1
   Chimalakonda S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1529, DOI 10.1145/3368089.3417044
   Coelho J, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240501
   Dabbish L., 2012, Proc. ACM Computer Supported Cooperative Work, P1277
   de Souza SCB., 2005, P 23 ANN INT C DESIG, P68, DOI 10.1145/1085313.1085331
   Di Sipio Claudio, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P71, DOI 10.1145/3383219.3383227
   Dilhara M, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3453478
   Dogan E, 2022, INFORM SOFTWARE TECH, V142, DOI 10.1016/j.infsof.2021.106737
   Ebert F, 2020, PROC IEEE INT CONF S, P849, DOI 10.1109/ICSME46990.2020.00108
   Ehsan O, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3412378
   Fang S, 2022, J SYST SOFTWARE, V185, DOI 10.1016/j.jss.2021.111160
   Fiechter A, 2021, 2021 WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2021), P155, DOI 10.1109/VISSOFT52517.2021.00030
   Forward A., 2002, Proceedings of the Symposium on Document Engineering, DocEng '02, DOI [10.1145/585058.585065, DOI 10.1145/585058.585065]
   Fowkes J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P254, DOI 10.1145/2950290.2950319
   Fronchetti F, 2019, IFIP ADV INF COMM TE, V556, P91, DOI 10.1007/978-3-030-20883-7_9
   Garousi G., 2013, P 17 INT C EVALUATIO, P24, DOI 10.1145/2460999.2461003
   Garousi G, 2015, INFORM SOFTWARE TECH, V57, P664, DOI 10.1016/j.infsof.2014.08.003
   Golzadeh M, 2022, EUR CON SFTWR MTNCE, P662, DOI 10.1109/SANER53432.2022.00084
   Golzadeh M, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2021.110911
   Guzman Emitza, 2014, P 11 WORK C MIN SOFT, P352
   Hassan F, 2017, PROC IEEE ACM INT C, P277, DOI 10.1109/ICSE-C.2017.114
   Hebig R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P173, DOI 10.1145/2976767.2976778
   Hu X, 2022, PROC INT CONF SOFTW, P1693, DOI 10.1145/3510003.3510152
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Jiang J, 2017, EMPIR SOFTW ENG, V22, P547, DOI 10.1007/s10664-016-9436-6
   Jiang J, 2017, INFORM SOFTWARE TECH, V91, P44, DOI 10.1016/j.infsof.2017.06.005
   Jiang YJ, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P45, DOI 10.1109/MSR.2015.12
   Kapitsaki GM, 2022, INFORM SOFTWARE TECH, V152, DOI 10.1016/j.infsof.2022.107034
   Kikas R, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P291, DOI [10.1109/MSR.2016.038, 10.1145/2901739.2901751]
   Kipyegen Noela J., 2013, International Journal of Computer Science Issues, V10, P223
   Kochhar PS, 2017, Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering, P298
   Krüger J, 2019, J SYST SOFTWARE, V152, P239, DOI 10.1016/j.jss.2019.01.057
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Le TDB, 2015, INT C PROGRAM COMPRE, P36, DOI 10.1109/ICPC.2015.13
   Lenarduzzi V, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110806
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Li BY, 2016, PROC IEEE INT CONF S, P631, DOI 10.1109/ICSME.2016.56
   Liao ZF, 2018, IEEE ACCESS, V6, P24003, DOI 10.1109/ACCESS.2018.2810295
   Liu SR, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106686
   Liu ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P176, DOI 10.1109/ASE.2019.00026
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   Mahmood S, 2011, INFORM PROCESS LETT, V111, P583, DOI 10.1016/j.ipl.2011.03.012
   Mazuera-Rozo A, 2022, J SYST SOFTWARE, V187, DOI 10.1016/j.jss.2022.111233
   Michaud HM, 2016, PROC IEEE INT CONF S, P290, DOI 10.1109/ICSME.2016.39
   Montandon Joao Eduardo, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P276, DOI 10.1109/MSR.2019.00054
   Moreno L, 2017, IEEE T SOFTWARE ENG, V43, P106, DOI 10.1109/TSE.2016.2591536
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Myllyaho L, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111096
   Nurmuliani N, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P240
   Nurwidyantoro A, 2022, INFORM SOFTWARE TECH, V141, DOI 10.1016/j.infsof.2021.106731
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Pantiuchina J, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3408302
   Pletea Daniel, 2014, P 11 WORK C MIN SOFT, P348
   Prana GAA, 2019, EMPIR SOFTW ENG, V24, P1296, DOI 10.1007/s10664-018-9660-3
   Raglianti M, 2022, PROC IEEE ACM INT C, P297, DOI [10.1109/ICSE-Companion55297.2022.9793831, 10.1145/3510454.3517068]
   Rahman Mohammad Masudur, 2014, P 11 WORKING C MININ, P364, DOI [10.1145/2597073.2597121, DOI 10.1145/2597073.2597121]
   Robles G, 2006, J SYST SOFTWARE, V79, P1233, DOI 10.1016/j.jss.2006.02.048
   Russo D, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3464938
   Schreck D., 2007, 9 INT WORKSHOP PRINC, P4
   Sheoran Jyoti, 2014, P 11 WORK C MIN SOFT, P336, DOI DOI 10.1145/2597073.2597114
   Spencer Donna, 2004, Boxes and arrows, V2004, P1
   Stettina C. J., 2011, P 29 ACM INT C DES C, DOI [DOI 10.1145/2038476.2038509, 10.1145/2038476.2038509]
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Tahaei M, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376768
   Theunissen T, 2022, INFORM SOFTWARE TECH, V142, DOI 10.1016/j.infsof.2021.106733
   Tian FC, 2022, INFORM SOFTWARE TECH, V141, DOI 10.1016/j.infsof.2021.106705
   Treude C, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1509, DOI 10.1145/3368089.3417045
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Uddin G, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3439769
   Valenzuela-Toledo P, 2022, EUR CON SFTWR MTNCE, P123, DOI 10.1109/SANER53432.2022.00026
   Vasa R., 2020, IEEE Trans. Softw. Eng
   Vendome C, 2015, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2015.32
   Venigalla ASM, 2023, IEEE WORK CONF MIN S, P407, DOI 10.1109/MSR59073.2023.00062
   Venigalla ASM, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P87, DOI 10.1109/ICSE-SEIS52602.2021.00018
   Vidoni M, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111265
   Wang HY, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3464689
   Wang W., 2020, IEEE Trans. Softw. Eng, P1
   Wattanakriengkrai S, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111117
   Yeasmin S, 2014, PROC IEEE INT CONF S, P421, DOI 10.1109/ICSME.2014.66
   Zagalsky A, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1906, DOI 10.1145/2675133.2675284
   Zhang T, 2022, PROC IEEE INT CONF S, P71, DOI 10.1109/ICSME55016.2022.00015
   Zhang Y, 2020, WORLD WIDE WEB, V23, P1589, DOI 10.1007/s11280-019-00770-1
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
   Zhou YQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P914, DOI 10.1145/3106237.3117771
   Zhou ZY, 2022, INFORM SOFTWARE TECH, V143, DOI 10.1016/j.infsof.2021.106761
NR 102
TC 0
Z9 0
U1 5
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2024
VL 169
AR 107425
DI 10.1016/j.infsof.2024.107425
EA FEB 2024
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ML5F3
UT WOS:001193782200001
DA 2024-08-05
ER

PT J
AU Krasanakis, E
   Symeonidis, A
AF Krasanakis, Emmanouil
   Symeonidis, Andreas
TI Forward-Oriented Programming: A meta-DSL for fast development of
   libraries
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Programming; Abstraction; Software engineering; Meta-Domain Specific
   Language; Component combination; Aspect variables; Software tool; Python
AB Libraries that implement Domain-Specific Language (DSL) components keep gaining traction when it comes to developing software for specific application domains. However, creating components that can be organically weaved into use cases is an extremely complex task. In this work, we introduce a meta-DSL to assist library development, called Forward-Oriented Programming (FOP). This combines lazy evaluation and aspectoriented programming principles to align crosscutting component configurations and alter their execution outcomes depending on usage in subsequent code. Theoretical analysis shows that FOP simplifies component development and makes their combination logic learnable by library users. We realize the paradigm with a Python package, called pyfop , and conduct a case study that compares it with purely functional and objectoriented library implementations. In the study, source code quality metrics demonstrate reduced time and effort to write library components, and increased comprehensibility. Configurations are shared without modifying distant code segments.
C1 [Krasanakis, Emmanouil; Symeonidis, Andreas] Aristotle Univ Thessaloniki, Thessaloniki 54124, Greece.
C3 Aristotle University of Thessaloniki
RP Krasanakis, E (corresponding author), Aristotle Univ Thessaloniki, Thessaloniki 54124, Greece.
EM manios.krasanakis@issel.ee.auth.gr
CR Abadi M., 2016, arXiv
   Bhatia S, 2014, 2014 INTERNATIONAL CONFERENCE ON ADVANCES IN ENGINEERING AND TECHNOLOGY RESEARCH (ICAETR)
   Bhattacherjee S, 2021, INT CONF MANAGE DATA, P194, DOI 10.1145/3448016.3452842
   Breitner J, 2018, J FUNCT PROGRAM, V28, DOI 10.1017/S0956796817000144
   CHIDAMBER SR, 1991, OOPSLA 91 CONFERENCE PROCEEDINGS : OBJECT-ORIENTED PROGRAMMING SYSTEMS, LANGUAGES, AND APPLICATIONS, P197, DOI 10.1145/118014.117970
   Elrad T, 2001, COMMUN ACM, V44, P28
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Filman R.E., 2000, WORKSH ADV SEP CONC
   Fowler M., 2010, Domain-specific Languages
   Halstead M.H., 1977, OPERATING PROGRAMMIN
   Imambi S., 2021, Pytorch. Programming with TensorFlow: Solution for Edge Computing Applications, P87, DOI [10.1007/978-3-030-57077-4_10, DOI 10.1007/978-3-030-57077-4_10]
   Judson T.W., 2022, Abstract Algebra: Theory and Applications, V2022
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 1996, ACM Computing Surveys, V28, P154, DOI [DOI 10.1145/242224.242420, 10.1145/242224.242420]
   Krasanakis E, 2021, J LOG ALGEBR METHODS, V123, DOI 10.1016/j.jlamp.2021.100714
   Krüger J, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P2076, DOI 10.1145/3167132.3167458
   Kurdi HA, 2013, INT J ADV COMPUT SC, V4, P22
   Launchbury J., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P144, DOI 10.1145/158511.158618
   Ma YT, 2010, J COMPUT SCI TECH-CH, V25, P1184, DOI 10.1007/s11390-010-9398-x
   Morad S, 2005, IEEE INTERNATIONAL CONFERENCE ON SOFTWARE - SCIENCE, TECHNOLOGY AND ENGINEERING, PROCEEDINGS, P110, DOI 10.1109/SWSTE.2005.11
   Nguyen D, 2000, SIGCSE BULL, V32, P21, DOI 10.1145/331795.331803
   Nita S.L., 2019, Haskell Quick Syntax Reference, P153
   Nusser A., 2012, The source is a Lie
   OpenJS Foundation & Contributors, 2024, Node-RED
   Pang C.-Y., 2022, Research Anthology on Agile Software, Software Development, and Testing, P1511
   Papamichail MD, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110423
   Rezaei R, 2014, COMPUT IND, V65, P1, DOI 10.1016/j.compind.2013.09.001
   Rose K., 2015, Internet Soc. (ISOC), V80, P1
   Saied MA, 2018, J SYST SOFTWARE, V145, P164, DOI 10.1016/j.jss.2018.08.032
   Selic B, 2007, 10th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing, Proceedings, P2, DOI 10.1109/ISORC.2007.10
   Steimann F, 2006, ACM SIGPLAN NOTICES, V41, P481, DOI 10.1145/1167515.1167514
   van Deursen A., 2002, Journal of Computing and Information Technology - CIT, V10, P1, DOI 10.2498/cit.2002.01.01
   Vaudour Fanny., 2020, GLOBAL BUSINESS ORG, V39, P31, DOI DOI 10.1002/JOE.21982
   Wasowski A., 2023, Domain-Specific Languages: Effective Modeling, Automation, and Reuse, P357
   Wegner P., 1990, OOPS Messenger, V1, P7
   Weinzierl S., 2000, arXiv
   Zhang G., 2021, 35 EUR C OBJ OR PROG
NR 37
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2024
VL 171
AR 107474
DI 10.1016/j.infsof.2024.107474
EA APR 2024
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SI4H4
UT WOS:001233807300001
DA 2024-08-05
ER

PT J
AU Chen, JF
   Wang, WJ
   Liu, B
   Cai, SH
   Towey, D
   Wang, SR
AF Chen, Jinfu
   Wang, Weijia
   Liu, Bo
   Cai, Saihua
   Towey, Dave
   Wang, Shengran
TI Hybrid semantics-based vulnerability detection incorporating a Temporal
   Convolutional Network and Self-attention Mechanism
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Deep learning; Software vulnerability detection; Temporal Convolutional
   Network; Self-attention Mechanism; Source-code picturization; Feature
   fusion
AB Context: Desirable characteristics in vulnerability -detection (VD) systems (VDSs) include both good detection capability (high accuracy, low false positive rate, low false negative rate, etc.) and low time overheads. The widely used VDSs based on models such as Recurrent Neural Networks (RNNs) have some problems, such as low time efficiency, failing to learn the vulnerability features better, and insufficient amounts of vulnerability features. Therefore, it is very important to construct an automatic detection model with high detection accuracy. Objective: This paper reports on training based on the source code to analyze and learn from the code's patterns and structures by deep -learning techniques to generate an efficient VD model that does not require manual feature design. Method: We propose a software VD model based on multi -feature fusion and deep neural networks called AIdetectorX-SP. It first uses a Temporal Convolutional Network (TCN) and adds a Self -attention Mechanism (SaM) to the TCN to build a model for extracting vulnerability logic features, then transforms the source code into an image input to a Convolutional Neural Network (CNN) to extract structural and semantic information. Finally, we use feature -fusion technology to design and implement an improved deep -learning -based VDS, called AIdetectorX Sequence with Picturization (AIdetectorX-SP). Results: We report on experiments conducted using publicly -available and widely -used datasets to evaluate the effectiveness of AIdetectorX-SP, with results indicating that AIdetectorX-SP is an effective VDS; that the combination of TCN and SaM can effectively extract vulnerability logic features; and that the pictorial code can extract code structure features, which can further improve the VD capability. Conclusion: In this paper, we propose a novel detection model for software vulnerability based on TCNs, SaM, and software picturization. The proposed model solves some shortcomings and limitations of existing VDSs, and obtains a high software -VD accuracy with a high degree of stability.
C1 [Chen, Jinfu; Wang, Weijia; Liu, Bo; Cai, Saihua; Wang, Shengran] Jiangsu Univ, Sch Comp Sci & Commun Engn, Zhenjiang 212013, Peoples R China.
   [Chen, Jinfu; Wang, Weijia; Liu, Bo; Cai, Saihua; Wang, Shengran] Jiangsu Univ, Jiangsu Key Lab Secur Technol Ind Cyberspace, Zhenjiang 212013, Peoples R China.
   [Towey, Dave] Univ Nottingham Ningbo China, Sch Comp Sci, Ningbo 315100, Zhejiang, Peoples R China.
C3 Jiangsu University; Jiangsu University; University of Nottingham Ningbo
   China
RP Chen, JF (corresponding author), Jiangsu Univ, Sch Comp Sci & Commun Engn, Zhenjiang 212013, Peoples R China.
EM jinfuchen@ujs.edu.cn
RI ; Towey, Dave/K-3160-2014
OI Chen, Jinfu/0000-0002-3124-5452; Towey, Dave/0000-0003-0877-4353
FU National Natural Science Foundation of China (NSFC) [62172194, 62202206,
   U183 6116]; Natural Science Foundation of Jiangsu Province, China
   [BK20220515]; China Postdoctoral Science Founda-tion, China
   [2023T160275]; Leading-edge Technology Program of Jiangsu Natural
   Science Foundation, China [BK20202001]; Qinglan Project of Jiangsu
   Province; Gradu-ate Research Innovation Project of Jiangsu Province
   [KYCX22_3667]
FX This work was partly supported by the National Natural Science
   Foundation of China (NSFC) (Grant nos. 62172194, 62202206, U183 6116) ,
   the Natural Science Foundation of Jiangsu Province, China (Grant no.
   BK20220515) , the China Postdoctoral Science Founda-tion, China (Grant
   no. 2023T160275) , the Leading-edge Technology Program of Jiangsu
   Natural Science Foundation, China (Grant no. BK20202001) , the Qinglan
   Project of Jiangsu Province, and the Gradu-ate Research Innovation
   Project of Jiangsu Province (Grant no. KYCX22_3667) .
CR Harer JA, 2018, Arxiv, DOI arXiv:1803.04497
   Albawi S, 2017, I C ENG TECHNOL
   Bai SJ, 2018, Arxiv, DOI [arXiv:1803.01271, DOI 10.48550/ARXIV.1803.01271]
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Sánchez MC, 2020, TSINGHUA SCI TECHNOL, V25, P270, DOI 10.26599/TST.2019.9010003
   Cao SC, 2022, PROC INT CONF SOFTW, P1456, DOI 10.1145/3510003.3510219
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Chalapathy R, 2019, Arxiv, DOI [arXiv:1901.03407, DOI 10.48550/ARXIV.1901.03407]
   Chen JF, 2023, J SYST SOFTWARE, V204, DOI 10.1016/j.jss.2023.111772
   Chen JY, 2020, PROC INT CONF SOFTW, P578, DOI 10.1145/3377811.3380389
   Chen T. He, 2015, R PACKAGE VERSION, V2, P1, DOI DOI 10.1145/2939672.2939785
   Cutler DR, 2007, ECOLOGY, V88, P2783, DOI 10.1890/07-0539.1
   Dahiru Tukur, 2008, Ann Ib Postgrad Med, V6, P21
   Dey R, 2017, MIDWEST SYMP CIRCUIT, P1597, DOI 10.1109/MWSCAS.2017.8053243
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C
   Fan GS, 2019, SCI PROGRAMMING-NETH, V2019, DOI 10.1155/2019/6230953
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Ferschke O., 2012, CLEF ONLINE WORKING, P1
   Greff K, 2017, IEEE T NEUR NET LEAR, V28, P2222, DOI 10.1109/TNNLS.2016.2582924
   Haber E, 2018, INVERSE PROBL, V34, DOI 10.1088/1361-6420/aa9a90
   Hewage P, 2020, SOFT COMPUT, V24, P16453, DOI 10.1007/s00500-020-04954-0
   Hinton N., 2012, Improving neural networks by preventing co-adaptation of feature detectors
   Huang G, 2017, PROC CVPR IEEE, P2261, DOI 10.1109/CVPR.2017.243
   Huang Y.-L., 2011, P 6 ACM S INF COMP C, P355, DOI DOI 10.1145/1966913.1966959
   Huang ZH, 2015, Arxiv, DOI arXiv:1508.01991
   Jozefowicz R, 2015, PR MACH LEARN RES, V37, P2342
   Katsadouros Evangelos, 2022, PCI '22: Proceedings of the 26th Pan-Hellenic Conference on Informatics, P38, DOI 10.1145/3575879.3575964
   Kim S, 2017, P IEEE S SECUR PRIV, P595, DOI 10.1109/SP.2017.62
   Kim S, 2018, COMPUT SECUR, V77, P720, DOI 10.1016/j.cose.2018.02.007
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Krasner H., 2021, The Cost of Poor Software Quality in the US: A 2020 Report
   Lea C, 2016, LECT NOTES COMPUT SC, V9915, P47, DOI 10.1007/978-3-319-49409-8_7
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2821, DOI 10.1109/TDSC.2021.3076142
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, Arxiv, DOI arXiv:1801.01681
   Li Z, 2016, ANN COMPUT SECURITY, P201, DOI 10.1145/2991079.2991102
   Liang YJ, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON INTELLIGENCE AND SECURITY INFORMATICS (ISI), P74, DOI [10.1109/ISI.2019.8823362, 10.1109/isi.2019.8823362]
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Lin GJ, 2020, LECT NOTES COMPUT SC, V11999, P219, DOI 10.1007/978-3-030-41579-2_13
   Lin WH, 2020, LECT NOTE DATA ENG, V41, P173, DOI 10.1007/978-3-030-34986-8_12
   Liu Z, 2021, INT EL DEVICES MEET, DOI 10.1109/IEDM19574.2021.9720635
   Luo WJ, 2016, ADV NEUR IN, V29
   Ma H, 2021, COMPUT MATH METHOD M, V2021, DOI 10.1155/2021/6627939
   Manaswi N.K., 2018, Deep Learning with Applications Using Python, P31, DOI [10.1007/978-1-4842-3516-42, DOI 10.1007/978-1-4842-3516-4_2]
   McGraw G, 2004, IEEE SECUR PRIV, V2, P80, DOI 10.1109/MSECP.2004.1281254
   Miikkulainen R, 2019, ARTIFICIAL INTELLIGENCE IN THE AGE OF NEURAL NETWORKS AND BRAIN COMPUTING, P293, DOI 10.1016/B978-0-12-815480-9.00015-3
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, DOI 10.48550/ARXIV.1301.3781]
   Mnih V, 2014, ADV NEUR IN, V27
   NELDER JA, 1972, J R STAT SOC SER A-G, V135, P370, DOI 10.2307/2344614
   Nussbaum-Thom M, 2016, INTERSPEECH, P390, DOI 10.21437/Interspeech.2016-212
   Pelletier C, 2019, REMOTE SENS-BASEL, V11, DOI 10.3390/rs11050523
   Pendleton M, 2017, ACM COMPUT SURV, V49, DOI 10.1145/3005714
   Peng YF, 2019, INT J COMPUT INTELL, V18, DOI 10.1142/S1469026819500214
   Pham Nam H., 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE'10, (New York, NY, USA), P447
   Platt JC, 2000, ADV NEUR IN, P61
   Pooja S, 2022, IEEE ACCESS, V10, P75637, DOI 10.1109/ACCESS.2022.3191115
   Qian Peng, 2023, WWW '23: Proceedings of the ACM Web Conference 2023, P2220, DOI 10.1145/3543507.3583367
   Razavian AS, 2014, IEEE COMPUT SOC CONF, P512, DOI 10.1109/CVPRW.2014.131
   Ross I., 1996, Journal of Computational and Graphical Statistics, V5, P299, DOI [10.2307/1390807, DOI 10.1080/10618600.1996.10474713, 10.1080/10618600.1996.10474713]
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Sahin SE, 2022, INFORM SOFTWARE TECH, V145, DOI 10.1016/j.infsof.2022.106822
   Salehinejad H, 2018, Arxiv, DOI [arXiv:1801.01078, DOI 10.48550/ARXIV.1801.01078]
   Semasaba AOA, 2020, IET SOFTW, V14, P654, DOI 10.1049/iet-sen.2020.0084
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Sullivan Gail M, 2012, J Grad Med Educ, V4, P279, DOI 10.4300/JGME-D-12-00156.1
   Szegedy C, 2017, AAAI CONF ARTIF INTE, P4278
   Tan ZX, 2018, AAAI CONF ARTIF INTE, P4929
   Tasnim N, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11062675
   THOMPSON K, 1968, COMMUN ACM, V11, P419, DOI 10.1145/363347.363387
   Vaswani A, 2017, ADV NEUR IN, V30
   Voita E, 2019, Arxiv, DOI arXiv:1905.09418
   Wang W, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON INTELLIGENCE AND SECURITY INFORMATICS (ISI), P43, DOI 10.1109/ISI.2017.8004872
   Wartschinski L, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106809
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Wu YM, 2022, PROC INT CONF SOFTW, P2365, DOI 10.1145/3510003.3510229
   Xu XJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P363, DOI 10.1145/3133956.3134018
   Ye T, 2016, IEEE INT CONF SOFTW, P91, DOI 10.1109/ICST.2016.21
   Zhang B, 2020, FUTURE GENER COMP SY, V110, P708, DOI 10.1016/j.future.2019.09.025
   Zhou X, 2017, PROC INT CONF ANTI, P54, DOI 10.1109/ICASID.2017.8285743
   Zhou Y., 2019, Proceedings of the Advances in Neural Information Processing Systems, V32, P1
NR 81
TC 1
Z9 1
U1 4
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2024
VL 171
AR 107453
DI 10.1016/j.infsof.2024.107453
EA APR 2024
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RL2R7
UT WOS:001227760100001
DA 2024-08-05
ER

PT J
AU Martinelli, S
   Lopes, L
   Zaina, L
AF Martinelli, Suellen
   Lopes, Larissa
   Zaina, Luciana
TI UX Research practices related to Long-Term UX: A Systematic Literature
   Review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic Literature Review; User eXperience; UX Research; Long -Term
   UX; Established company; Software startup
ID SOFTWARE-DEVELOPMENT ENVIRONMENTS; USER EXPERIENCE
AB Context: The software industry has sought to apply User eXperience (UX) practices that can help maintain a sustainable business. UX practices make it possible to conduct research and make evaluations with users through the application of methods and techniques. But few studies in the literature discuss UX Research practices with Long -Term UX. Objective: The objective of this paper is to identify in the literature what UX Research practices are employed by the software industry and their relationship with Long -Term UX. Methods: We conducted a Systematic Literature Review with string applied in search engines, besides selection criteria and quality assessment applied in the papers. We selected 45 papers that were submitted for the qualitative analysis carried out with coding techniques. Results: 38 UX Research practices were identified and classified between formal and informal practices. We also identified 52 UX methods, techniques, and tools that are used for these UX Research practices. Our findings show that 15 out of 38 practices are related to Long -Term UX. Conclusion: We drew up 14 guidelines for conducting UX Research in the software industry, which includes goals, UX methods, and the means of putting them into practice.
C1 [Martinelli, Suellen; Zaina, Luciana] Fed Univ Sao Carlos UFSCar, Rod Joao Leme Santos km 110,SP 264, Sorocaba, SP, Brazil.
   [Lopes, Larissa] Arcotech Technol Solut, Rua Augusta 2840, Sao Paulo, SP, Brazil.
C3 Universidade Federal de Sao Carlos
RP Martinelli, S (corresponding author), Fed Univ Sao Carlos UFSCar, Rod Joao Leme Santos km 110,SP 264, Sorocaba, SP, Brazil.
EM suellen.martinelli@estudante.ufscar.br; lzaina@ufscar.br
FU Sao Paulo Research Foundation (FAPESP) [2020/11441-1, 2020/00615-9];
   Conselho Nacional de Desenvolvimento Cientifico e Tecnologico
   (CNPq-Brazil) [309497/2022-1]
FX We thank the support of grants #2020/11441-1 and #2020/00615-9, S &
   atilde;o Paulo Research Foundation (FAPESP) , and grant 309497/2022-1,
   Conselho Nacional de Desenvolvimento Cientifico e Tecnologico
   (CNPq-Brazil) .
CR Alhadreti O, 2020, INT J ADV COMPUT SC, V11, P168
   Au I., 2008, CHI 08 EXTENDED ABST, P3681, DOI [10.1145/1358628, DOI 10.1145/1358628]
   Balboni K., 2022, User Interviews
   Bargas-Avila JA, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2689
   Biduski D, 2020, COMPUT HUM BEHAV, V104, DOI 10.1016/j.chb.2019.106169
   Cajander Å, 2013, LECT NOTES COMPUT SC, V8119, P762
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Farrell Susan., 2017, UX RES CHEAT SHEET
   Fleiss JL, 2013, Statistical methods for rates and proportions, DOI DOI 10.1002/0471445428
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Giardino C, 2016, IEEE T SOFTWARE ENG, V42, P585, DOI 10.1109/TSE.2015.2509970
   Gibbs G. R., 2007, ANAL QUALITATIVE DAT, V703, P38, DOI [DOI 10.4135/9781849208574, 10.4135/9781849208574]
   Gray CM, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P4044, DOI 10.1145/2858036.2858410
   Guerino GC, 2022, ADV HUM-COMPUT INTER, V2022, DOI 10.1155/2022/9701739
   Hassenzahl M, 2006, BEHAV INFORM TECHNOL, V25, P91, DOI 10.1080/01449290500330331
   Hassenzahl M., 2003, Mensch & Computer 2003: Interaktion in Bewegung, P187, DOI [DOI 10.1007/978-3-322-80058-9_19, 10.1007/978-3-322-80058-9_19, DOI 10.1007/978-3-322-80058-919]
   Hassenzahl M., 2018, Funology 2, P17
   Hokkanen L., 2016, Lecture Notes in Business Information Processing, P66, DOI [10.1007/978-3-319-33515-5_6, DOI 10.1007/978]
   Hokkanen L, 2015, PROCEEDINGS OF THE 20TH EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (EUROPLOP 2015), DOI 10.1145/2855321.2855373
   Hokkanen L, 2015, LECT NOTES BUS INF P, V212, P81, DOI 10.1007/978-3-319-18612-2_7
   Horton M, 2019, PROCEEDINGS OF ACM INTERACTION DESIGN AND CHILDREN (IDC 2019), P51, DOI 10.1145/3311927.3323128
   I.D. Foundation, 2021, UX Research
   Jurca G, 2014, 2014 AGILE CONFERENCE (AGILE), P24, DOI 10.1109/AGILE.2014.17
   Karapanos E., 2010, Proceedings of the 28th of the international conference extended abstracts on Human factors in computing systems, P4075, DOI DOI 10.1145/1753846.1754105
   Karapanos E, 2012, INT J HUM-COMPUT ST, V70, P849, DOI 10.1016/j.ijhcs.2012.06.004
   Kashfi P, 2019, J SYST SOFTWARE, V154, P37, DOI 10.1016/j.jss.2019.03.066
   Kashfi P, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.130
   Kashfi P, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P59, DOI 10.1109/SEAA.2016.14
   Kieffer S, 2019, HUCAPP: PROCEEDINGS OF THE 14TH INTERNATIONAL JOINT CONFERENCE ON COMPUTER VISION, IMAGING AND COMPUTER GRAPHICS THEORY AND APPLICATIONS - VOL 2: HUCAPP, P74, DOI 10.5220/0007693600740085
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering, VVolume 2, DOI [10.1145/1134285.1134500, DOI 10.1145/1134285.1134500]
   Klotins E, 2021, IEEE T SOFTWARE ENG, V47, P498, DOI 10.1109/TSE.2019.2900213
   Krout Kelly, 2020, MuC'20: Proceedings of the Conference on Mensch und Computer, P53, DOI 10.1145/3404983.3405587
   Kujala S., 2013, CHI 13 EXTENDED ABST, P559
   Kujala S, 2011, INTERACT COMPUT, V23, P473, DOI 10.1016/j.intcom.2011.06.005
   Kujala Sari., 2015, Proceedings of the 19th International Academic Mindtrek Conference on - AcademicMindTrek'15, P167, DOI [DOI 10.1145/2818187.2818271, 10.1145/2818187.2818271]
   Lallemand C, 2015, COMPUT HUM BEHAV, V43, P35, DOI 10.1016/j.chb.2014.10.048
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Law ELC, 2014, INT J HUM-COMPUT ST, V72, P526, DOI 10.1016/j.ijhcs.2013.09.006
   Majrashi K, 2018, LECT NOTES COMPUT SC, V10911, P58, DOI 10.1007/978-3-319-92141-9_5
   Marti P, 2016, ACSIS-ANN COMPUT SCI, V8, P1647, DOI 10.15439/2016F302
   Meingast M., 2013, P HUMAN FACTORS ERGO, P1002, DOI [10.1177/1541931213571224, DOI 10.1177/1541931213571224]
   Norman D., 2020, DEFINITION USER EXPE
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Pazitka K., 2019, The UX Research Methods Every Designer Needs To Know
   Rivero L., 2017, P 16 BRAZ S HUM FACT, P1, DOI DOI 10.1145/3160504.3160512
   Rosala Maria., 2019, User Experience Careers: What a Career in UX Looks Like Today, V2nd
   Roto V., 2011, DAGST SEM DEM US EXP, P12, DOI DOI 10.4230/DAGSEMPROC.10373.1
   Saad J, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106688
   Salah D., 2014, P 18 INT C EV ASS SO, P1, DOI 10.1145/2601248.2601276
   Silveira SAM, 2021, LECT NOTES BUS INF P, V419, P19, DOI 10.1007/978-3-030-78098-2_2
   Süner-Pla-Cerdà S, 2021, LECT NOTES COMPUT SC, V12779, P579, DOI 10.1007/978-3-030-78221-4_40
   Tullis T., 2013, Interactive Technologies, Vsecond, DOI [10.1016/C2011-0-00016-9, DOI 10.1016/C2011-0-00016-9]
   Unterkalmsteiner M., 2016, e-Inform. Softw. Eng. J., V10, DOI [10.5277/eInf160105, DOI 10.5277/EINF160105]
   Varsaluoma J, 2014, PROCEEDINGS OF THE NORDICHI'14: THE 8TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION: FUN, FAST, FOUNDATIONAL, P79, DOI 10.1145/2639189.2641218
   Vermeeren A.P., 2010, P 6 NORD C HUM COMP, P521, DOI [DOI 10.1145/1868914.1868973, 10.1145/1868914.1868973]
   Vukovac DP, 2019, ADV INTELL SYST, V777, P440, DOI 10.1007/978-3-319-94706-8_48
   Zarour M, 2017, COGENT ENG, V4, DOI 10.1080/23311916.2017.1421006
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.62, 10.1109/APSEC.2016.031]
NR 58
TC 1
Z9 1
U1 2
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2024
VL 170
AR 107431
DI 10.1016/j.infsof.2024.107431
EA MAR 2024
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PT3Q1
UT WOS:001216298900001
DA 2024-08-05
ER

PT J
AU Bai, TT
   Huang, S
   Huang, YF
   Wang, XY
   Xia, CY
   Qu, YB
   Yang, Z
AF Bai, Tongtong
   Huang, Song
   Huang, Yifan
   Wang, Xingya
   Xia, Chunyan
   Qu, Yubin
   Yang, Zhen
TI CriticalFuzz: A critical neuron coverage-guided fuzz testing framework
   for neural networks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Critical neurons; Fuzz testing; Critical neuron coverage; Deep neural
   network
AB Context: Deep neural networks (DNN) have been widely deployed in safety -critical domains, such as autonomous cars and healthcare, where error behaviors can lead to serious accidents, testing DNN is extremely important. Neuron coverage -guided fuzz testing (NCFT) has become an effective whitebox testing approach for testing DNN, which iteratively generates new test cases with the guidance of neuron coverage to explore different logics of DNN, and has found numerous defects. However, existing NCFT approaches ignore that the role of neurons is distinct for the final output of DNN. Given an input, only a fraction of neurons determines the final output of the DNN. These neurons hold the essential logic of the DNN. Objective: To ensure the quality of DNN and improve testing efficiency, NCFT should first cover neurons containing major logic of DNN. Method: In this paper, we propose the critical neurons that hold essential logic of DNN. In order to prioritize the detection of potential defects of critical neurons, we propose a fuzz testing framework, named CriticalFuzz, which mainly contains the energy -based test case generation and the critical neuron coverage criteria. The energy -based test case generation has the capability to produce test cases that are more likely to cover critical neurons and involves energy -based seed selection, power schedule, and seed mutation. The critical neuron coverage as a mechanism for providing feedback to guide the CriticalFuzz in prioritizing the coverage of critical neurons. To evaluate the significance of critical neurons and the performance of CriticalFuzz, we conducted experiments on popular DNNs and datasets. Results: The experiment results show that (1) the critical neurons have a 100% impact on the output of models, while the non -critical neurons have a lesser effect; (2) CriticalFuzz is effective in achieving 100% coverage of critical neurons and covering 10 classes of critical neurons, outperforming both DeepHunter and TensorFuzz. (3) CriticalFuzz exhibits exceptional error detection capabilities, successfully identifying thousands of errors across 10 diverse error classes within DNN. Conclusion: The critical neurons defined in this paper hold more significant logic of DNN than non -critical neurons. CriticalFuzz can preferentially cover critical neurons, thereby improving the efficiency of the NCFT process. Additionally, CriticalFuzz is capable of identifying a greater number of errors, thus enhancing the reliability and effectiveness of the NCFT.
C1 [Bai, Tongtong; Huang, Song; Wang, Xingya; Xia, Chunyan; Qu, Yubin; Yang, Zhen] Army Engn Univ PLA, Coll Command & Control Engn, Nanjing, Jiangsu, Peoples R China.
   [Huang, Yifan] Nanyang Technol Univ, Singapore, Singapore.
   [Wang, Xingya] Nanjing Tech Univ, Coll Comp & Informat Engn, Coll Artificial Intelligence, Nanjing, Jiangsu, Peoples R China.
   [Wang, Xingya] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Qu, Yubin] Jiangsu Coll Engn & Technol, Sch Informat Engn, Nantong, Jiangsu, Peoples R China.
C3 Army Engineering University of PLA; Nanyang Technological University;
   Nanjing Tech University; Nanjing University
RP Huang, S (corresponding author), Army Engn Univ PLA, Coll Command & Control Engn, Nanjing, Jiangsu, Peoples R China.
EM btt070619@163.com; huangsong@aeu.edu.cn; yifan005@e.ntu.edu.so;
   xingyawang@outlook.com; xiachunyan@mdjnu.edu.cn; yubinqu@icloud.com;
   yangzhen@aeu.edu.cn
RI yang, zhen/JCO-7759-2023
OI yang, zhen/0009-0002-5594-4546
FU Open Project Program of the State Key Laboratory for Novel Software
   Technology (Nanjing University) [KFKT2022B10]; Nantong Science and
   Technology Project [JC2023070]
FX We would like to thank anonymous reviewers for their constructive
   comments. This research was funded by the Open Project Program of the
   State Key Laboratory for Novel Software Technology (Nanjing University)
   (KFKT2022B10) and the Nantong Science and Technology Project (No.
   JC2023070) .
CR Abbas A, 2021, APPL INTELL, V51, P854, DOI 10.1007/s10489-020-01829-7
   Böhme M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2329, DOI 10.1145/3133956.3134020
   Browne CB, 2012, IEEE T COMP INTEL AI, V4, P1, DOI 10.1109/TCIAIG.2012.2186810
   Chen TY, 2020, Arxiv, DOI arXiv:2002.12543
   Esteva A, 2021, NPJ DIGIT MED, V4, DOI 10.1038/s41746-020-00376-2
   Gopinath D, 2018, Arxiv, DOI arXiv:1807.10439
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Harel-Canada F, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P851, DOI 10.1145/3368089.3409754
   Hayhurst Kelly J., 2001, A practical tutorial on modified condition/decision coverage
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Huang X, 2018, LECT NOTES COMPUT SC, V11207, P179, DOI 10.1007/978-3-030-01219-9_11
   Isaac-Medina BKS, 2021, IEEE INT CONF COMP V, P1223, DOI 10.1109/ICCVW54120.2021.00142
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Krizhevsky N, 2014, The cifar-10 dataset
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   LeCun Y., 1998, The MNIST Database of Handwritten Digits
   Li ZN, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P89, DOI 10.1109/ICSE-NIER.2019.00031
   Li ZW, 2022, IEEE T NEUR NET LEAR, V33, P6999, DOI 10.1109/TNNLS.2021.3084827
   Li Zhong, 2021, PMLR
   Liu MY, 2017, ADV NEUR IN, V30
   Luu Quang-Hung, 2022, arXiv
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P614, DOI [10.1109/saner.2019.8668044, 10.1109/SANER.2019.8668044]
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Muja M, 2014, IEEE T PATTERN ANAL, V36, P2227, DOI 10.1109/TPAMI.2014.2321376
   Nguyen A, 2016, Arxiv, DOI arXiv:1602.03616
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Odena A, 2019, PR MACH LEARN RES, V97
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Rechenberg I., 1978, Simulationsmethoden in der Medizin und Biologie, P83
   Sekhon J, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P85, DOI 10.1109/ICSE-NIER.2019.00030
   Sen Koushik, 2005, Proc. ESEC/FSE, DOI 10.1145/1081706.1081750
   Seokhyun Lee, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P165, DOI 10.1145/3395363.3397346
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Sun YC, 2019, Arxiv, DOI arXiv:1803.04792
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Tay Y, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3530811
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Xie XF, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3490489
   Xie XF, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5772
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Xun Xu, 2020, 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). Proceedings, P13703, DOI 10.1109/CVPR42600.2020.01372
   Ye AS, 2022, INT J INTELL SYST, V37, P11966, DOI 10.1002/int.23072
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang ZY, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106701
   Zhou BL, 2018, Arxiv, DOI [arXiv:1806.02891, 10.48550/arXiv.1806.02891]
   Zhou HS, 2020, PROC INT CONF SOFTW, P347, DOI 10.1145/3377811.3380422
NR 47
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2024
VL 172
AR 107476
DI 10.1016/j.infsof.2024.107476
EA APR 2024
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SQ1Y5
UT WOS:001235836200001
DA 2024-08-05
ER

PT J
AU Pontillo, V
   Palomba, F
   Ferrucci, F
AF Pontillo, Valeria
   Palomba, Fabio
   Ferrucci, Filomena
TI Test Code Flakiness in Mobile Apps: The Developer's Perspective
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Test Code Flakiness; Software Testing; Mobile Apps Development
ID REVIEWS; SMELLS
AB Context: Test flakiness arises when test cases have a non-deterministic, intermittent behavior that leads them to either pass or fail when run against the same code. While researchers have been contributing to the detection, classification, and removal of flaky tests with several empirical studies and automated techniques, little is known about how the problem of test flakiness arises in mobile applications. Objective: We point out a lack of knowledge on: (1) The prominence and harmfulness of the problem; (2) The most frequent root causes inducing flakiness; and (3) The strategies applied by practitioners to deal with it in practice. An improved understanding of these matters may lead the software engineering research community to assess the need for tailoring existing instruments to the mobile context or for brand-new approaches that focus on the peculiarities identified. Methods: We address this gap of knowledge by means of an empirical study into the mobile developer's perception of test flakiness. We first perform a systematic grey literature review to elicit how developers discuss and deal with the problem of test flakiness in the wild. Then, we complement the systematic review through a survey study that involves 130 mobile developers and that aims at analyzing their experience on the matter. Results: The results of the grey literature review indicate that developers are often concerned with flakiness connected to user interface elements. In addition, our survey study reveals that flaky tests are perceived as critical by mobile developers, who pointed out major production code- and source code design-related root causes of flakiness, other than the long-term effects of recurrent flaky tests. Furthermore, our study lets the diagnosing and fixing processes currently adopted by developers and their limitations emerge. Conclusion: We conclude by distilling lessons learned, implications, and future research directions.
C1 [Pontillo, Valeria; Palomba, Fabio; Ferrucci, Filomena] Univ Salerno, Dept Comp Sci, Software Engn SeSa Lab, Fisciano, Italy.
   [Pontillo, Valeria] Vrije Univ Brussel, Software Languages Lab, Brussels, Belgium.
C3 University of Salerno; Vrije Universiteit Brussel
RP Pontillo, V (corresponding author), Univ Salerno, Dept Comp Sci, Software Engn SeSa Lab, Fisciano, Italy.
EM valeria.pontillo@vub.be; fpalomba@unisa.it; fferrucci@unisa.it
OI Palomba, Fabio/0000-0001-9337-5116; FERRUCCI,
   Filomena/0000-0002-0975-8972; Pontillo, Valeria/0000-0001-6012-9947
CR Abdellatif M, 2020, AUTOMAT SOFTW ENG, V27, P187, DOI 10.1007/s10515-020-00272-9
   Ahmad A, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1791
   Alrubaye H, 2020, LECT NOTES COMPUT SC, V12541, P245, DOI 10.1007/978-3-030-64694-3_15
   Alshammari A, 2021, PROC INT CONF SOFTW, P1572, DOI 10.1109/ICSE43902.2021.00140
   Andrews D., 2007, Conducting research on the internet:: Online survey design, development and implementation guidelines
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Bakker C, 2014, J CLEAN PROD, V69, P10, DOI 10.1016/j.jclepro.2014.01.028
   Barboni Morena, 2021, Quality of Information and Communications Technology, P29
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Belkhir A, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P66, DOI 10.1109/MOBILESoft.2019.00020
   Bell J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P433, DOI 10.1145/3180155.3180164
   Bell J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P770, DOI 10.1145/2786805.2786823
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   Beller M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P559, DOI 10.1109/ICSE.2015.193
   Benzies KM, 2006, WORLDV EVID-BASED NU, V3, P55, DOI 10.1111/j.1741-6787.2006.00051.x
   Bielova N, 2009, J LOGIC ALGEBR PROGR, V78, P340, DOI 10.1016/j.jlap.2009.02.013
   Camara Bruno, 2021, SAST'21: Brazilian Symposium on Systematic and Automated Software Testing, P46, DOI 10.1145/3482909.3482916
   Cavanagh S, 1997, Nurse Res, V4, P5, DOI 10.7748/nr.4.3.5.s2
   Thorve S, 2018, PROC IEEE INT CONF S, P534, DOI 10.1109/ICSME.2018.00062
   Cordella M, 2021, J CLEAN PROD, V286, DOI 10.1016/j.jclepro.2020.125388
   Cordy M, 2022, PROC INT CONF SOFTW, P982, DOI 10.1145/3510003.3510194
   Di Nucci D, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P103, DOI 10.1109/SANER.2017.7884613
   Di Sorbo A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09978-0
   Dong Z, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P367, DOI 10.1145/3468264.3468584
   Ebert F., 2022, INT WORKSHOP RECRUIT
   Eck M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P830, DOI 10.1145/3338906.3338945
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Fatima S, 2023, IEEE T SOFTWARE ENG, V49, P1912, DOI 10.1109/TSE.2022.3201209
   Fazzini M, 2017, IEEE INT CONF AUTOM, P308, DOI 10.1109/ASE.2017.8115644
   Ferrer J, 2013, INFORM SOFTWARE TECH, V55, P2125, DOI 10.1016/j.infsof.2013.07.007
   Fowler M., 2018, Refactoring: improving the design of existing code
   Fowler M., 2011, ERADICATING NONDETER
   Francese Rita, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P133, DOI 10.1109/MOBILESoft.2017.33
   Gambi A, 2018, IEEE INT CONF SOFTW, P1, DOI 10.1109/ICST.2018.00011
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Greca R, 2023, INT WORKSH AUTOMAT, P163, DOI 10.1109/AST58925.2023.00020
   Gruber M, 2022, IEEE INT CONF SOFTW, P82, DOI 10.1109/ICST53961.2022.00020
   Gruber M, 2021, IEEE INT CONF SOFTW, P148, DOI 10.1109/ICST49551.2021.00026
   Gyori Alex., 2015, Proceedings of the 2015 International Symposium on Software Testing and Analysis, P223
   Habchi S., 2021, arXiv
   Habchi S, 2022, PROC IEEE INT CONF S, P352, DOI 10.1109/ICSME55016.2022.00039
   Habchi S, 2022, IEEE INT CONF SOFTW, P244, DOI 10.1109/ICST53961.2022.00034
   Haben G, 2021, IEEE WORK CONF MIN S, P219, DOI 10.1109/MSR52588.2021.00034
   Hall T., 2001, Empirical Software Engineering, V6, P305, DOI 10.1023/A:1011922615502
   Hashemi N, 2022, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSME55016.2022.00011
   Heckman J.J., 2010, Microeconometrics. The New Palgrave Economics Collection, DOI DOI 10.1057/9780230280816_29
   Holl K, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P245, DOI 10.1109/SEAA.2016.11
   Hunt KJ, 2013, BMC MED RES METHODOL, V13, DOI 10.1186/1471-2288-13-3
   Iadarola G, 2019, 2019 SIXTH INTERNATIONAL CONFERENCE ON INTERNET OF THINGS: SYSTEMS, MANAGEMENT AND SECURITY (IOTSMS), P331, DOI 10.1109/iotsms48152.2019.8939172
   Jabangwe R, 2018, J SYST SOFTWARE, V145, P98, DOI 10.1016/j.jss.2018.08.028
   Jin N., 2012, ACM SIGCOMM WORKSHOP, P7, DOI DOI 10.1145/2342468.2342471
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Kim DJ, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09969-1
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Klayman J., 1995, Psychology of Learning and Motivation, V32, P385, DOI DOI 10.1016/S0079-7421(08)60315-1
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kotarba M, 2017, FOUND MANAGE, V9, P123, DOI 10.1515/fman-2017-0010
   Kumara I, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106593
   Lam W, 2020, PROC INT CONF SOFTW, P1471, DOI 10.1145/3377811.3381749
   Lam W, 2020, PROC INT SYMP SOFTW, P403, DOI 10.1109/ISSRE5003.2020.00045
   Lam W, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428270
   Lam W, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P101, DOI 10.1145/3293882.3330570
   Lam W, 2019, IEEE INT CONF SOFTW, P312, DOI 10.1109/ICST.2019.00038
   Lampel J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1381, DOI 10.1145/3468264.3473931
   Li CP, 2023, PROCEEDINGS OF THE 32ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2023, P627, DOI 10.1145/3597926.3598083
   Li CP, 2022, PROC INT CONF SOFTW, P1881, DOI 10.1145/3510003.3510173
   Linares-Vasquez M., 2014, P 22 INT C PROGR COM, P232
   Linares-Vásquez M, 2015, PROC IEEE INT CONF S, P352, DOI 10.1109/ICSM.2015.7332486
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Melski E., 2020, 6 tips for writing robust, maintainable unit tests
   Memon AM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1479, DOI 10.1109/ICSE.2013.6606750
   Micco John, 2017, The State of Continuous Integration Testing @Google
   Morán J, 2019, WEBIST: PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS AND TECHNOLOGIES, P454, DOI 10.5220/0008559004540461
   Morán J, 2020, J WEB ENG, V19, P267, DOI 10.13052/jwe1540-9589.1927
   Morin KH, 2013, J NURS EDUC, V52, P547, DOI 10.3928/01484834-20130920-10
   Nachar N, 2008, TUTOR QUANT METHODS, V4, P13, DOI 10.20982/tqmp.04.1.p013
   Nayebi F., 2012, 2012 25 IEEE CANADIA, P1
   Nayebi M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P552, DOI 10.1109/SANER.2016.116
   Nemoto T., 2014, JALT 2013 conference proceedings, P1
   Oumaziz MA, 2017, LECT NOTES COMPUT SC, V10601, P614, DOI 10.1007/978-3-319-69035-3_45
   Palomba F, 2018, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSME.2018.00040
   Palomba F, 2018, J SYST SOFTWARE, V137, P143, DOI 10.1016/j.jss.2017.11.043
   Parry O, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10307-w
   Parry O, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3476105
   Parry O, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P253, DOI [10.1145/3510457.3513037, 10.1109/ICSE-SEIP55303.2022.9793965]
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Pecorelli F, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10059-5
   Peruma A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1650, DOI 10.1145/3368089.3417921
   Pinto G, 2020, IEEE WORK CONF MIN S, P492, DOI 10.1145/3379597.3387482
   Pontillo V., 2022, Test code flakiness in mobile apps: The developer's perspective, DOI [10.6084/m9.figshare.24183279, DOI 10.6084/M9.FIGSHARE.24183279]
   Pontillo V, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10227-1
   Pontillo V, 2021, MALTESQUE '21: PROCEEDINGS OF THE 5TH INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVOLUTION, P19, DOI 10.1145/3472674.3473981
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Rehman MHU, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1371, DOI 10.1145/3468264.3473930
   Reid Brittany, 2022, arXiv
   Romano A, 2021, PROC INT CONF SOFTW, P1585, DOI 10.1109/ICSE43902.2021.00141
   Sakshaug JW., 2016, J Survey Stat Method, V4, P382, DOI [10.1093/jssam/smw020, DOI 10.1093/JSSAM/SMW020]
   Salza P, 2020, EMPIR SOFTW ENG, V25, P2341, DOI 10.1007/s10664-019-09754-1
   Sarro F, 2018, INT REQUIR ENG CONF, P76, DOI 10.1109/RE.2018.00018
   Shi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P112, DOI 10.1145/3293882.3330568
   Shi A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P545, DOI 10.1145/3338906.3338925
   Silva D, 2020, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME46990.2020.00037
   Spadini D, 2019, PROC INT CONF SOFTW, P1061, DOI 10.1109/ICSE.2019.00110
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Subramanian S.V.V., 2020, IEEE Trans. Softw. Eng.
   Terragni V, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P69, DOI 10.1145/3377816.3381742
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Vahabzadeh A, 2015, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSM.2015.7332456
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Verdecchia R, 2021, IEEE ACCESS, V9, P76119, DOI 10.1109/ACCESS.2021.3082424
   Wang RX, 2022, PROC IEEE ACM INT C, P120, DOI [10.1109/ICSE-Companion55297.2022.9793801, 10.1145/3510454.3516846]
   Wasserman A.I., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research, P397, DOI DOI 10.1145/1882362.1882443
   Wei AJ, 2022, PROC INT CONF SOFTW, P1730, DOI 10.1145/3510003.3510170
   Wessel M, 2022, IEEE WORK CONF MIN S, P724, DOI 10.1145/3524842.3528533
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wu ZM, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376324
   Zhang H, 2020, PROC INT CONF SOFTW, P1422, DOI 10.1145/3377811.3380336
   Zhang Jack, 2013, P 2013 INT WORKSHOP, P1
   Zheng W, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P639, DOI 10.1109/SANER50967.2021.00081
   Ziftci C, 2020, PROC IEEE INT CONF S, P736, DOI 10.1109/ICSME46990.2020.00083
   Zolfaghari B, 2021, SOFTWARE PRACT EXPER, V51, P851, DOI 10.1002/spe.2929
NR 125
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2024
VL 168
AR 107394
DI 10.1016/j.infsof.2023.107394
EA JAN 2024
PG 27
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HF2T8
UT WOS:001158020300001
OA hybrid
DA 2024-08-05
ER

PT J
AU Gafni, R
   Aviv, I
   Kantsepolsky, B
   Sherman, S
   Rika, H
   Itzkovich, Y
   Barger, A
AF Gafni, Ruti
   Aviv, Itzhak
   Kantsepolsky, Boris
   Sherman, Sofia
   Rika, Havana
   Itzkovich, Yariv
   Barger, Artem
TI Objectivity by design: The impact of AI-driven approach on employees'
   soft skills evaluation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Employees analytics; Soft skills assessment; Data Science; Artificial
   intelligence; Machine learning
ID CULTURAL-DIFFERENCES; PERCEPTION; KNOWLEDGE; QUALITY
AB Engineers' team collaboration skills are among software development's most important success factors. Existing Artificial Intelligence practices for the engineers' soft skills assessment mainly rely on evaluations of subjective data gathered through surveys, interviews, or observations. As a result, the insights gained by these methods are biased because of the subjective data people report. To overcome the challenge of subjectivity, we offer a novel objectivity-by-design approach for continuous AI-driven team collaboration skills analytics. The method analyzes the data from workstreams gathered from data repositories like Jira. Based on the study results, we conclude that this approach enables a continuous assessment of employees' team collaboration skills, provides more accurate insights, eliminates subjective biases, and helps uncover trends and deficits on individual and team levels. Understanding and recognizing employees' strengths and weaknesses can foster an organizational culture of growth and development. An improved organizational climate is expected to result in work satisfaction, engagement, and motivation, thus positively impacting employees, businesses, and society.
C1 [Gafni, Ruti; Aviv, Itzhak; Kantsepolsky, Boris; Sherman, Sofia; Rika, Havana; Itzkovich, Yariv; Barger, Artem] Acad Coll Tel Aviv Yaffo, Tel Aviv Yaffo, Israel.
   [Itzkovich, Yariv] Kinneret Coll Sea Galilee, Zemach, Israel.
   [Aviv, Itzhak] Acad Coll Tel Aviv Yaffo, Rabenu Yeruham 2, IL-4265934 Tel Aviv, Israel.
RP Aviv, I (corresponding author), Acad Coll Tel Aviv Yaffo, Rabenu Yeruham 2, IL-4265934 Tel Aviv, Israel.
EM itzhakav@mta.ac.il
RI Itzkovich, Yariv/HMP-6637-2023; Aviv, Itzhak/AAM-8160-2021
OI Itzkovich, Yariv/0000-0002-3296-6518; Aviv, Itzhak/0000-0003-3065-8957;
   Gafni, Ruti/0000-0002-7120-2115
CR Aasheim CL, 2009, J COMPUT INFORM SYST, V49, P48
   Abdi H, 2010, WIRES COMPUT STAT, V2, P433, DOI 10.1002/wics.101
   Achchab Said, 2022, Advances in Deep Learning, Artificial Intelligence and Robotics: Proceedings of the 2nd International Conference on Deep Learning, Artificial Intelligence and Robotics (ICDLAIR) 2020. Lecture Notes in Networks and Systems (249), P203, DOI 10.1007/978-3-030-85365-5_20
   Acuña ST, 2006, IEEE SOFTWARE, V23, P94, DOI 10.1109/MS.2006.47
   Adler NJ, 2018, ANNU REV ORGAN PSYCH, V5, P307, DOI 10.1146/annurev-orgpsych-032117-104528
   [Anonymous], 2020, The future of jobs report 2020
   Arman G, 2012, EUR J WORK ORGAN PSY, V21, P657, DOI 10.1080/1359432X.2012.662488
   Arora M, 2021, 2021 INTERNATIONAL CONFERENCE ON DECISION AID SCIENCES AND APPLICATION (DASA), DOI 10.1109/DASA53625.2021.9682325
   Aviv I., 2021, 2021 5 INT C INTELLI, P1
   Chatterjee S, 2022, INT J MANPOWER, V43, P52, DOI 10.1108/IJM-02-2021-0087
   Chowdhury S, 2023, HUM RESOUR MANAGE R, V33, DOI 10.1016/j.hrmr.2022.100899
   Christensen EL, 2022, 2022 IEEE/ACM JOINT 16TH INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES AND 17TH ACM/IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICSSP/ICGSE 2022), P93, DOI 10.1145/3529320.3529331
   Cimatti B, 2016, INT J QUAL RES, V10, P97, DOI 10.18421/IJQR10.01-05
   de Stefano V., 2022, Osgoode Legal Studies Res. Paper Forthcom, DOI [10.2861/305539, DOI 10.2861/305539]
   Deebom I., 2022, Internat. J. Modern Innovat. Knowl., V2, P88
   Dekker DM, 2008, INT J INTERCULT REL, V32, P441, DOI 10.1016/j.ijintrel.2008.06.003
   Denzin N. K., 2011, The Sage Handbook of Qualitative Research, DOI DOI 10.1017/CBO9781107415324.004
   Dowell NMM, 2020, J LEARN ANAL, V7, P38, DOI 10.18608/jla.2020.71.4
   Dowell NMM, 2019, BEHAV RES METHODS, V51, P1007, DOI 10.3758/s13428-018-1102-z
   Du X, 2022, INT J EDUC TECHNOL H, V19, DOI 10.1186/s41239-022-00356-4
   EC, 2021, Laying Down Harmonised Rules on Artificial Intelligence (Artificial Intelligence Act) and Amending Certain Union Legislative Acts
   Evangelopoulos NE, 2013, WIRES COGN SCI, V4, P683, DOI 10.1002/wcs.1254
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Feraco T, 2023, EUR J PSYCHOL EDUC, V38, P109, DOI 10.1007/s10212-022-00601-4
   Gafni R., 2014, Online J. Appl. Knowl. Manage. (OJAKM), V2, P1
   Galster M, 2022, INT SYMP EMP SOFTWAR, P272, DOI 10.1145/3544902.3546247
   Gao QQ, 2022, THINK SKILLS CREAT, V45, DOI 10.1016/j.tsc.2022.101097
   Garousi V, 2020, IEEE SOFTWARE, V37, P68, DOI 10.1109/MS.2018.2880823
   Geri N, 2017, J GLOB OPER STRATEG, V10, P90, DOI 10.1108/JGOSS-05-2016-0018
   Giermindl LM, 2022, EUR J INFORM SYST, V31, P410, DOI 10.1080/0960085X.2021.1927213
   Gockel Blessing E., 2022, Internet J. Allied Health Sci. Pract., V20, P12
   Gomes V, 2022, SUSTAINABILITY-BASEL, V14, DOI 10.3390/su14127355
   Goulart VG, 2022, IND HIGHER EDUC, V36, P118, DOI 10.1177/09504222211029796
   Hadzhikolev Emil, 2022, ICT Innovations 2021. Digital Transformation: 13th International Conference, ICT Innovations 2021, Revised Selected Papers. Communications in Computer and Information Science (1521), P13, DOI 10.1007/978-3-031-04206-5_2
   Hamilton RH, 2022, EMPLOY RESPONSIB RIG, V34, P19, DOI 10.1007/s10672-021-09377-z
   Havrlant L, 2017, INT J GEN SYST, V46, P27, DOI 10.1080/03081079.2017.1291635
   Hirose M, 2023, J MIX METHOD RES, V17, P12, DOI 10.1177/15586898221086346
   Ho HR, 2022, HEALTH SOC CARE COMM, V30, pE2702, DOI 10.1111/hsc.13713
   Hooda S., 2023, Agile Software Development: Trends, Challenges and Applications
   Hung SW, 2023, INFORM MANAGE-AMSTER, V60, DOI 10.1016/j.im.2023.103777
   Hunkenschroer AL, 2022, J BUS ETHICS, V178, P977, DOI 10.1007/s10551-022-05049-6
   Isufaj Ralvi, 2022, Journal of Air Transportation, P71, DOI 10.2514/1.D0296
   Jadhav D., 2023, Agile Software Develop, P161
   Jain Tanvi, 2022, Proceedings of Second Doctoral Symposium on Computational Intelligence: DoSCI 2021. Advances in Intelligent Systems and Computing (1374), P393, DOI 10.1007/978-981-16-3346-1_32
   Jelonek D., 2020, C QUALITY PRODUCTION, V2, P107
   Jones K, 2018, J COMPUT INFORM SYST, V58, P214, DOI 10.1080/08874417.2016.1229144
   Kortum F., 2022, Supporting the understanding of team dynamics in agile software development through computer-aided sprint feedback
   Lagioia F., 2023, The impact of the general data protection regulation (GDPR) oN ARTIFICIAL INTELLIGence
   Leavy S., 2020, BIAS SOCIAL ASPECTS, P12, DOI [DOI 10.1007/978-3-030-52485-2_2, 10.1007/978-3-030-52485-2_2]
   Ledet E., 2020, How to be great at people analytics
   Lin JJ, 2022, CONCURR COMP-PRACT E, V34, DOI 10.1002/cpe.7395
   Lindsjorn Y, 2016, J SYST SOFTWARE, V122, P274, DOI 10.1016/j.jss.2016.09.028
   Liu TX, 2022, COMPUT EDUC, V182, DOI 10.1016/j.compedu.2022.104462
   Malik A, 2023, HUM RESOUR MANAGE-US, V62, P97, DOI 10.1002/hrm.22133
   Matturro G, 2019, J UNIVERS COMPUT SCI, V25, P16
   Mayer AS, 2020, MIS Q EXEC, V19, P239, DOI 10.17705/2msqe.00036
   McCartney S, 2022, J ORGAN EFF-PEOPLE P, V9, P281, DOI 10.1108/JOEPP-01-2021-0013
   Minbaeva DB, 2018, HUM RESOUR MANAGE-US, V57, P701, DOI 10.1002/hrm.21848
   Ortu M, 2015, P 11 INT C PREDICTIV, P1, DOI DOI 10.1145/2810146.2810147
   Ouyang F, 2022, J EDUC COMPUT RES, V60, P599, DOI 10.1177/07356331211047784
   Pamplona Berón Leidy Esperanza, 2022, Rev.fac.ing.univ. Antioquia, P152, DOI 10.17533/udea.redin.20210532
   Pinto HR, 2023, SMART INNOV SYST TEC, V320, P165, DOI 10.1007/978-981-19-6585-2_15
   Rika H., 2022, IEEE WORLD C APPL IN
   Rika H, 2022, BIG DATA COGN COMPUT, V6, DOI 10.3390/bdcc6040135
   Santos RED, 2022, PROC INT CONF SOFTW, P25, DOI 10.1145/3510003.3510105
   Schwartz R., 2022, NIST special publication, V1270, P1, DOI [10.6028/NIST.SP.1270, DOI 10.6028/NIST.SP.1270]
   Sherman S., 2022, Issues Informat. Syst., V23, DOI [10.48009/2_iis_2022_102, DOI 10.48009/2_IIS_2022_102]
   Song QY, 2022, SCI REP-UK, V12, DOI 10.1038/s41598-021-04239-y
   Steinley D, 2006, BRIT J MATH STAT PSY, V59, P1, DOI 10.1348/000711005X48266
   Stevens M., 2016, P AUSTRALASIAN COMPU
   Strode D, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10115-0
   Styron K., 2023, Business Manage, Res, Applicat, V2, P1
   Sun C, 2022, COMPUT HUM BEHAV, V128, DOI 10.1016/j.chb.2021.107120
   Sykes O., 2023, International Planning Studies: An Introduction, P85
   Tang HT, 2022, DISTANCE EDUC, V43, P290, DOI 10.1080/01587919.2022.2064824
   Tursunbayeva A, 2022, PERS REV, V51, P900, DOI 10.1108/PR-12-2019-0680
   Volkov A, 2022, EDUC SCI, V12, DOI 10.3390/educsci12050335
   Yuan JL, 2019, FRONT PSYCHOL, V10, DOI 10.3389/fpsyg.2019.00369
   Zhang S, 2022, ZDM-MATH EDUC, V54, P287, DOI 10.1007/s11858-022-01335-9
   Zhang S, 2022, COMPUT EDUC, V183, DOI 10.1016/j.compedu.2022.104485
   Zhou WA, 2023, ECON INQ, V61, P342, DOI 10.1111/ecin.13122
NR 81
TC 0
Z9 0
U1 6
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2024
VL 170
AR 107430
DI 10.1016/j.infsof.2024.107430
EA MAR 2024
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OU7U8
UT WOS:001209868000001
DA 2024-08-05
ER

PT J
AU Guimaraes, G
   Costa, I
   Perkusich, M
   Mendes, E
   Santos, D
   Almeida, H
   Perkusich, A
AF Guimaraes, Gleyser
   Costa, Icaro
   Perkusich, Mirko
   Mendes, Emilia
   Santos, Danilo
   Almeida, Hyggo
   Perkusich, Angelo
TI Investigating the relationship between personalities and agile team
   climate: A replicated study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Personality traits; Team climate; Correlation; Regression; Agile
   software development; Replication
ID SOFTWARE-DEVELOPMENT; QUALITY; TRAITS; SATISFACTION; PERFORMANCE;
   CONTEXT; MODEL
AB Context: A study in 2020 (S1) explored the relationship between personality traits and team climate perceptions of software professionals working in agile teams. S1 surveyed 43 software professionals from a large telecom company in Sweden and found that a person's ability to get along with team members (Agreeableness) influences significantly and positively the perceived level of team climate. Further, they observed that personality traits accounted for less than 15 % of the variance in team climate. Objective: The study described herein replicates S1 using data gathered from 148 software professionals from an industrial partner in Brazil. Method: We used the same research methods as S1. We employed a survey to gather the personality and climate data, which was later analyzed using correlation and regression analyses. The former aimed to measure the level of association between personality traits and climate and the latter to estimate team climate factors using personality traits as predictors. Results: The results for the correlation analyses showed statistically significant and positive associations between two personality traits - Agreeableness and Conscientiousness, and all five team climate factors. There was also a significant and positive association between Openness and Team Vision. Our results corroborate those from S1, with respect to two personality traits - Openness and Agreeableness; however, in S1, Openness was significantly and positively associated with Support for Innovation (not Team Vision). In regard to Agreeableness, in S1 it was also significantly and positively associated with perceived team climate. Furthermore, our regression models also support S1's findings - personality traits accounted for less than 15 % of the variance in team climate. Conclusion: Despite variances in location, sample size, and operational domain, our study confirmed S1 ' s results on the limited influence of personality traits. Agreeableness and Openness were significant predictors for team climate, although the predictive factors differed. These discrepancies highlight the necessity for further research, incorporating larger samples and additional predictor variables, to better comprehend the intricate relationship between personality traits and team climate across diverse cultural and professional settings.
C1 [Guimaraes, Gleyser; Santos, Danilo; Almeida, Hyggo; Perkusich, Angelo] Univ Fed Campina Grande, Campina Grande, Brazil.
   [Mendes, Emilia] Blekinge Inst Technol, Karlskrona, Sweden.
   [Costa, Icaro; Perkusich, Mirko; Santos, Danilo; Almeida, Hyggo; Perkusich, Angelo] VIRTUS Res Dev & Innovat Ctr, Intelligent Software Engn Grp, Campina Grande, Brazil.
C3 Universidade Federal de Campina Grande; Blekinge Institute Technology
RP Perkusich, M (corresponding author), VIRTUS Res Dev & Innovat Ctr, Intelligent Software Engn Grp, Campina Grande, Brazil.
EM mirko@virtus.ufcg.edu.br
RI Perkusich, Angelo/I-2447-2013; Perkusich, Angelo/O-1203-2018
OI Perkusich, Angelo/0000-0002-7377-1258; 
CR Acuña ST, 2008, EMPIR SOFTW ENG, V13, P401, DOI 10.1007/s10664-008-9074-8
   Acuña ST, 2015, INFORM SOFTWARE TECH, V57, P141, DOI 10.1016/j.infsof.2014.09.002
   Amin A, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106405
   Anderson N., 1996, EUR J WORK ORGAN PSY, V5, P53, DOI DOI 10.1080/13594329608414840
   Anderson Neil., 1999, Team climate inventory : starter set
   Anderson NR, 1998, J ORGAN BEHAV, V19, P235, DOI 10.1002/(SICI)1099-1379(199805)19:3<235::AID-JOB837>3.0.CO;2-C
   Barry B, 1997, J APPL PSYCHOL, V82, P62, DOI 10.1037/0021-9010.82.1.62
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Berraies S, 2023, J KNOWL MANAG, V27, P842, DOI 10.1108/JKM-09-2021-0720
   Bezerra RMM, 2015, INT SYMP EMP SOFTWAR, P132, DOI 10.1109/ESEM.2015.7321213
   Borsa Juliane Callegaro, 2012, Paidéia (Ribeirão Preto), V22, P423
   Briand L, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.3571562
   Bujang M.A., 2016, WORLD J SOC SCI RES, V3, P37, DOI DOI 10.22158/WJSSR.V3N1P37
   Burch G.S.J., 2004, Journal of Managerial Psychology, V19, P406
   Burch GSJ, 2008, INT REV IND ORGAN PS, V23, P261
   Carver J.C., 2010, 1 INT WORKSHOP REPLI, P1
   Cohen J., 1988, Statistical power analysis for the behavioral sciences
   Costa P.T., 1992, Revised NEO Personality Inventory (NEO-PI-R) and NEO Five-Factor Inventory (NEO-FFI) manual
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Cunha F., 2023, 2023 INT C SOFTW TEL
   Donnellan MB, 2006, PSYCHOL ASSESSMENT, V18, P192, DOI 10.1037/1040-3590.18.2.192
   Dutra E, 2020, PROCEEDINGS OF THE 19TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY, SBOS 2020, DOI 10.1145/3439961.3439968
   Dutra E, 2020, IET SOFTW, V14, P861, DOI 10.1049/iet-sen.2020.0048
   Fay D., 2004, European Journal of Work and Organizational Psychology, V13, P241, DOI [10.1080/13594320444000083, DOI 10.1080/13594320444000083]
   Feldt R, 2010, INFORM SOFTWARE TECH, V52, P611, DOI 10.1016/j.infsof.2010.01.001
   Field A., 2005, Discovering statistics using SAS, V2nd
   Francese R, 2021, LECT NOTES COMPUT SC, V13126, P167, DOI 10.1007/978-3-030-91452-3_11
   Freire A, 2022, INT J SOFTW ENG KNOW, V32, P645, DOI 10.1142/S0218194022500176
   Freire A, 2018, INFORM SOFTWARE TECH, V100, P119, DOI 10.1016/j.infsof.2018.04.004
   Ganesh MP, 2013, ASIAN ACAD MANAG J, V18, P55
   Goldberg LR, 2006, J RES PERS, V40, P84, DOI 10.1016/j.jrp.2005.08.007
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Gren L, 2017, J SYST SOFTWARE, V124, P104, DOI 10.1016/j.jss.2016.11.024
   Guimaraes G., 2023, Investigating the relationship between personalities and agile team climate: a replicated study
   Javed I., 2023, IEEE Access, P11
   Johnson JA, 2014, J RES PERS, V51, P78, DOI 10.1016/j.jrp.2014.05.003
   Kosti MV, 2016, EMPIR SOFTW ENG, V21, P1509, DOI 10.1007/s10664-015-9395-3
   Lindsjorn Y, 2016, J SYST SOFTWARE, V122, P274, DOI 10.1016/j.jss.2016.09.028
   Loewen P., 2004, The Learning Organization, V11, P260, DOI [10.1108/09696470410533012, DOI 10.1108/09696470410533012]
   Marsicano G, 2020, EMPIR SOFTW ENG, V25, P3928, DOI 10.1007/s10664-020-09860-5
   Matthews Gerald., 2009, Personality Traits
   MCCRAE RR, 1992, J PERS, V60, P175, DOI 10.1111/j.1467-6494.1992.tb00970.x
   Melo CD, 2013, INFORM SOFTWARE TECH, V55, P412, DOI 10.1016/j.infsof.2012.09.004
   Miller J, 2005, INFORM SOFTWARE TECH, V47, P233, DOI 10.1016/j.infsof.2004.08.005
   Molleman E, 2004, SMALL GR RES, V35, P515, DOI 10.1177/1046496404264361
   Murukannaiah PK, 2017, INT REQUIR ENG CONF, P512, DOI 10.1109/RE.2017.74
   Natividade J. C., 2015, Psico (PUCRS), V46, P79, DOI [10.15448/1980-8623.2015.1.16901, DOI 10.15448/1980-8623.2015.1.16901]
   Ospina R, 2019, FRONT APPL MATH STAT, V5, DOI 10.3389/fams.2019.00043
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Razali N.M., 2011, J Stat Model Anal, V2, P21, DOI DOI 10.1515/BILE-2015-0008
   Riley RD, 2019, STAT MED, V38, P1276, DOI 10.1002/sim.7992
   Russo D, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10106-1
   Salleh N, 2014, EMPIR SOFTW ENG, V19, P714, DOI 10.1007/s10664-012-9238-4
   Salleh N, 2009, INT SYMP EMP SOFTWAR, P214, DOI 10.1109/ESEM.2009.5315997
   Sánchez-Gordón M, 2019, INFORM SOFTWARE TECH, V115, P23, DOI 10.1016/j.infsof.2019.08.002
   Shepperd M, 2018, INFORM SOFTWARE TECH, V99, P120, DOI 10.1016/j.infsof.2018.01.006
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Soomro AB, 2015, 2015 9TH MALAYSIAN SOFTWARE ENGINEERING CONFERENCE (MYSEC2015), P259, DOI 10.1109/MySEC.2015.7475230
   Soomro AB, 2016, INFORM SOFTWARE TECH, V73, P52, DOI 10.1016/j.infsof.2016.01.006
   Soto C.J., 2016, Encyclopedia of adulthood and aging, V2, P506, DOI DOI 10.1002/9781118521373.WBEAA014
   Strode D, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10115-0
   Sumner M, 2010, SIGMIS CPR '10: PROCEEDINGS OF THE 2010 ACM SIGMIS COMPUTER PERSONNEL RESEARCH CONFERENCE, P34
   Vishnubhotla SD, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106335
   Vishnubhotla SD, 2018, PROCEEDINGS OF 2018 7TH INTERNATIONAL CONFERENCE ON SOFTWARE AND COMPUTER APPLICATIONS (ICSCA 2018), P10, DOI 10.1145/3185089.3185096
   Weidmann R, 2017, J RES PERS, V69, P102, DOI 10.1016/j.jrp.2016.06.001
   Yang QF, 2019, J CHEM INF MODEL, V59, P4602, DOI 10.1021/acs.jcim.9b00214
   Yilmaz M, 2017, INFORM SOFTWARE TECH, V86, P101, DOI 10.1016/j.infsof.2017.01.005
NR 67
TC 0
Z9 0
U1 3
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2024
VL 169
AR 107407
DI 10.1016/j.infsof.2024.107407
EA FEB 2024
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LB3M6
UT WOS:001184278400001
DA 2024-08-05
ER

PT J
AU Saroar, SG
   Ahmed, W
   Onagh, E
   Nayebi, M
AF Saroar, SK. Golam
   Ahmed, Waseefa
   Onagh, Elmira
   Nayebi, Maleknaz
TI GitHub marketplace for automation and innovation in software production
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Platform-mediated; GitHub marketplace; Automation;
   GitHub actions; Production
AB Context: GitHub, renowned for facilitating collaborative code version control and software production in software teams, expanded its services in 2017 by introducing GitHub Marketplace. This online platform hosts automation tools to assist developers with the production of their GitHub-hosted projects, and it has become a valuable source of information on the tools used in the Open Source Software (OSS) community. Objective: In this exploratory study, we introduce GitHub Marketplace as a software marketplace by exploring the Characteristics, Features, and Policies of the platform comprehensively, identifying common themes in production automation. Further, we explore popular tools among practitioners and researchers and highlight disparities in the approach to these tools between industry and academia. Method: We adopted the conceptual framework of software app stores from previous studies and used that to examine 8,318 automated production tools (440 Apps and 7,878 Actions) across 32 categories on GitHub Marketplace. We explored and described the policies of this marketplace as a unique platform where developers share production tools for the use of other developers. Furthermore, we conducted a systematic mapping of 515 research papers published from 2000 to 2021 and compared open-source academic production tools with those available in the marketplace. Results: We found that although some of the automation topics in literature are widely used in practice, they have yet to align with the state-of-practice for automated production. We discovered that practitioners often use automation tools for tasks like "Continuous Integration"and "Utilities", while researchers tend to focus more on "Code Quality"and "Testing". Conclusion: Our study illuminates the landscape of open-source tools for automation production. We also explored the disparities between industry trends and researchers' priorities. Recognizing these distinctions can empower researchers to build on existing work and guide practitioners in selecting tools that meet their specific needs. Bridging this gap between industry and academia helps with further innovation in the field and ensures that research remains pertinent to the evolving challenges in software production.
C1 [Saroar, SK. Golam; Ahmed, Waseefa; Onagh, Elmira; Nayebi, Maleknaz] York Univ, EXINES Lab, Toronto, ON, Canada.
C3 York University - Canada
RP Nayebi, M (corresponding author), York Univ, EXINES Lab, Toronto, ON, Canada.
EM saroar@yorku.ca; waseefa@yorku.ca; eonagh@yorku.ca; mnayebi@yorku.ca
FU NSERC [RGPIN-2019-05697]
FX This research is supported by NSERC Discovery Grant RGPIN-2019-05697.
CR Al-Subaihin AA, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962600
   Al-Subaihin AA, 2021, IEEE T SOFTWARE ENG, V47, P300, DOI 10.1109/TSE.2019.2891715
   [Anonymous], 2024, Google scholar top venues in software systems
   [Anonymous], 2024, GitHub marketplace-game CI category
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cosentino V, 2017, IEEE ACCESS, V5, P7173, DOI 10.1109/ACCESS.2017.2682323
   Cusumano M. A., 2019, The business of platforms: Strategy in the age of digital competition, innovation, and power, V320
   Decan A, 2022, PROC IEEE INT CONF S, P235, DOI 10.1109/ICSME55016.2022.00029
   Derave Thomas, 2021, POEM WS 2021, V3031, P15
   Devanbu P, 2018, IEEE SOFTWARE, V35, P72, DOI 10.1109/MS.2018.4321246
   Evans D., 2011, Platform Economics: Essays on Multi-Sided Businesses
   Floetgen Rob, 2022, B2B app store governance in software platform ecosystems: dimensions and types
   Franch X, 2017, INT REQUIR ENG CONF, P382, DOI 10.1109/RE.2017.17
   Franco-Bedoya O, 2017, INFORM SOFTWARE TECH, V91, P160, DOI 10.1016/j.infsof.2017.07.007
   GitHub, 2024, Writing a listing description for your app
   GitHub, 2024, About actions
   GitHub, 2024, About apps
   GitHub, 2024, Saving repositories with stars-exploring projects on GitHub
   GitHub, 2024, About billing for GitHub actions-included storage and minutes
   GitHub, 2024, Comparing GitHub actions to GitHub apps
   GitHub, 2024, GitHub marketplace overview
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hyrynsalmi S., 2012, Jansen, Slinger, P59
   Hyrynsalmi S, 2016, J SYST SOFTWARE, V111, P119, DOI 10.1016/j.jss.2015.08.053
   Jansen S, 2013, LECT NOTES BUS INF P, V150, P195
   Jazayeri B, 2016, LECT NOTES COMPUT SC, V9936, P301, DOI 10.1007/978-3-319-46295-0_19
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Kruger Jacob, 2017, OSS, P60
   Lenarduzzi V, 2020, EUROMICRO CONF PROC, P437, DOI 10.1109/SEAA51224.2020.00076
   Li Jingyue, 2019, P EV ASS SOFTW ENG
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Mehrotra R, 2019, RECSYS 2019: 13TH ACM CONFERENCE ON RECOMMENDER SYSTEMS, P580, DOI 10.1145/3298689.3346952
   Messerschmitt DG, 2004, IEEE SOFTWARE, V21, P62, DOI 10.1109/MS.2004.1293074
   Munir H, 2018, EMPIR SOFTW ENG, V23, P186, DOI 10.1007/s10664-017-9511-7
   Munir H, 2016, EMPIR SOFTW ENG, V21, P684, DOI 10.1007/s10664-015-9380-x
   Nayebi M, 2017, INT SYMP EMP SOFTWAR, P324, DOI 10.1109/ESEM.2017.46
   Nayebi M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P552, DOI 10.1109/SANER.2016.116
   Nayebi M, 2015, 2015 30TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOP (ASEW), P18, DOI 10.1109/ASEW.2015.28
   Nayebi M, 2014, LECT NOTES BUS INF P, V182, P273
   Nayebi Maleknaz, 2016, P 4 INT WORKSH REL E, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Ruiz IJM, 2016, IEEE SOFTWARE, V33, P86, DOI 10.1109/MS.2015.56
   Saroar SG, 2023, Arxiv, DOI arXiv:2303.04084
   Scrapy, 2024, Scrapy-an open source and collaborative web crawling framework
   Selenium, 2024, Selenium-web browser automation
   SerpApi, 2024, SerpApi-google scholar API
   Sheskin DJ., 2003, Handbook of parametric and nonparametric statistical procedures
   Shrikanth NC, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09957-5
   SMITH B., 2005, OPEN IS FUTURE EC SO, P461
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Vasilescu Bogdan, 2013, Social Informatics. 5th International Conference, SocInfo 2013. Proceedings: LNCS 8238, P391, DOI 10.1007/978-3-319-03260-3_34
   West J., 2006, OPEN INNOVATION RES, P82
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Zhu H., 2012, Proceedings of the 21st ACM international conference on Information and knowledge management, P1617
NR 56
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2024
VL 175
AR 107522
DI 10.1016/j.infsof.2024.107522
PG 30
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZH3S5
UT WOS:001274372500001
DA 2024-08-05
ER

PT J
AU Mosquera, D
   Ruiz, M
   Pastor, O
   Spielberger, J
AF Mosquera, David
   Ruiz, Marcela
   Pastor, Oscar
   Spielberger, Juergen
TI Understanding the landscape of software modelling assistants for MDSE
   tools: A systematic mapping
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Modelling assistance; Model -driven development; Systematic mapping;
   State of the practice; Low code; No -code
ID CONSISTENCY
AB Context: Model Driven Software Engineering (MDSE) and low-code/no-code software development tools promise to increase quality and productivity by modelling instead of coding software. One of the major advantages of modelling software is the increased possibility of involving diverse stakeholders since it removes the barrier of being IT experts to actively participate in software production processes. From an academic and industry point of view, the main question remains: What has been proposed to assist humans in software modelling tasks? Objective: In this paper, we systematically elucidate the state of the art in assistants for software modelling and their use in MDSE and low-code/no-code tools. Method: We conducted a systematic mapping to review the state of the art and answer the following research questions: i) how is software modelling assisted? ii) what goals and limitations do existing modelling assistance proposals report? iii) which evaluation metrics and target users do existing modelling assistance proposals consider? For this purpose, we selected 58 proposals from 3.176 screened records and reviewed 17 MDSE and low-code/no-code tools from main market players published by the Gartner Magic Quadrant. Result: We clustered existing proposals regarding their modelling assistance strategies, goals, limitations, evaluation metrics, and target users, both in research and practice. Conclusions: We found that both academic and industry proposals recognise the value of assisting software modelling. However, documentation about MDSE assistants' limitations, evaluation metrics, and target users is scarce or non-existent. With the advent of artificial intelligence, we expect more assistants for MDSE and lowcode/no-code software development will emerge, making imperative the need for well-founded frameworks for designing modelling assistants focused on addressing target users' needs and advancing the state of the art.
C1 [Mosquera, David; Ruiz, Marcela; Spielberger, Juergen] ZHAW Zurich Univ Appl Sci, Gertrudstr 15, CH-8400 Winterthur, Switzerland.
   [Pastor, Oscar] Univ Politecn Valencia, PROS VRAIN Valencian Res Inst Artificial Intellige, Cami Vera S-N, Valencia 46022, Spain.
C3 Zurich University of Applied Sciences; Universitat Politecnica de
   Valencia
RP Mosquera, D (corresponding author), ZHAW Zurich Univ Appl Sci, Gertrudstr 15, CH-8400 Winterthur, Switzerland.
EM mosq@zhaw.ch
RI ; Pastor Lopez, Oscar/S-4216-2016
OI Mosquera, David/0000-0002-0552-7878; Pastor Lopez,
   Oscar/0000-0002-1320-8471
FU ZHAW Institute for Applied Information Technology (InIT); Innosuisse
   Flagship SHIFT project; ZHAW School of Engineering
FX This research was fully supported by the ZHAW Institute for Applied
   Information Technology (InIT) , the Innosuisse Flagship SHIFT project,
   and the ZHAW School of Engineering.
CR Abade Andre, 2015, 17th International Conference on Enterprise Information Systems (ICEIS 2015). Proceedings, P177
   Adhikari B, 2024, SOFTW SYST MODEL, V23, P29, DOI 10.1007/s10270-023-01093-6
   Agt-Rickauer H., 2019, Commun. Comput. Inf. Sci., P134, DOI [10.1007/978-3-030-11030-7_7, DOI 10.1007/978-3-030-11030-7_7]
   Agt-Rickauer H, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P71, DOI 10.5220/0006555700710082
   Akiki P.A., 2013, Proceedings of the 5th ACM SIGCHI Symposium on Engineering Interactive Computing Systems, P139, DOI DOI 10.1145/2494603.2480332
   Alibaba, YiDA: low-code development platform
   Almasri N, 2022, IEEE T SOFTWARE ENG, V48, P3833, DOI 10.1109/TSE.2021.3106589
   Almonte L, 2022, SOFTW SYST MODEL, V21, P249, DOI 10.1007/s10270-021-00905-x
   [Anonymous], Kintone: kintone: rapid Application Development
   [Anonymous], Zoho: zoho Creator
   [Anonymous], 2020, Gartner Magic Quadrant
   Appian, appian platform
   Babaei M, 2023, SOFTW SYST MODEL, V22, P1565, DOI 10.1007/s10270-023-01086-5
   Belur J, 2021, SOCIOL METHOD RES, V50, P837, DOI 10.1177/0049124118799372
   Ben Fraj I, 2021, P INT COMP SOFTW APP, P1483, DOI 10.1109/COMPSAC51774.2021.00220
   Boubekeur Younes., P 23 ACMIEEE INT C M, DOI DOI 10.1145/3417990.3418742
   Bürger J, 2015, INT J SOFTW TOOLS TE, V17, P267, DOI 10.1007/s10009-014-0364-8
   Burgueño L, 2021, LECT NOTES COMPUT SC, V12751, P91, DOI 10.1007/978-3-030-79382-1_6
   Cámara J, 2023, SOFTW SYST MODEL, V22, P781, DOI 10.1007/s10270-023-01105-5
   Chavez HM, 2016, IEEE T SOFTWARE ENG, V42, P322, DOI 10.1109/TSE.2015.2488645
   creatio, Creatio: creatio ONE platform
   Czech G, 2018, EUROMICRO CONF PROC, P137, DOI 10.1109/SEAA.2018.00031
   da Silva MAA, 2010, LECT NOTES COMPUT SC, V6051, P348, DOI 10.1007/978-3-642-13094-6_28
   Dam HK, 2011, AUTON AGENT MULTI-AG, V23, P384, DOI 10.1007/s10458-010-9163-0
   Dam KH, 2008, LECT NOTES COMPUT SC, V4951, P132
   Daniel G, 2024, SCI COMPUT PROGRAM, V232, DOI 10.1016/j.scico.2023.103032
   de Fombelle G, 2006, LECT NOTES COMPUT SC, V4066, P101
   di Rocco J., 2017, EXE 2017, P1
   Di Rocco J, 2022, PROCEEDINGS OF THE 25TH INTERNATIONAL ACM/IEEE CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, MODELS 2022, P154, DOI 10.1145/3550355.3552459
   Di Sipio C, 2023, SOFTW SYST MODEL, V22, P1427, DOI 10.1007/s10270-023-01102-8
   Domingo A, 2020, LECT NOTES COMPUT SC, V12127, P353, DOI 10.1007/978-3-030-49435-3_22
   eclipse, Eclipse: eclipse modelling framework
   Elaasar M., 2019, P COMM COMP INF SCI, P236, DOI [10.1007/978-3-030-11030-7_11, DOI 10.1007/978-3-030-11030-7_11]
   Engels G., 2002, INT WORKSH PRINC SOF, P129, DOI [10.1145/512035.512066, DOI 10.1145/512035.512066]
   Floch J, 2010, J SYST SOFTWARE, V83, P1759, DOI 10.1016/j.jss.2010.04.075
   Franzago M, 2018, IEEE T SOFTWARE ENG, V44, P1146, DOI 10.1109/TSE.2017.2755039
   Fuhrmann H, 2010, LECT NOTES COMPUT SC, V6394, P196
   Getir S., 2014, P MOD EV WORKSH ME 2, P12
   Gogolla M, 2018, COMPUT LANG SYST STR, V54, P474, DOI 10.1016/j.cl.2017.10.001
   Goldkuhl G., 1998, IEE Proceedings-Software, V145, P113, DOI 10.1049/ip-sen:19982197
   Gómez-Gutiérrez JA, 2022, LECT NOTES BUS INF P, V450, P267, DOI 10.1007/978-3-031-07475-2_18
   Hadaytullah, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P687, DOI 10.1109/ICWS.2009.92
   He C, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P180, DOI [10.1109/REW.2016.041, 10.1109/REW.2016.9]
   Hennig S, 2011, LECT NOTES COMPUT SC, V6948, P610, DOI 10.1007/978-3-642-23765-2_41
   Huawei, huawei Astro Zero Platform
   Ilic D., 2006, P 2 INT S LEV APPL F, P425, DOI [10.1109/ISoLA.2006.40, DOI 10.1109/ISOLA.2006.40]
   Iung A, 2020, EMPIR SOFTW ENG, V25, P4205, DOI 10.1007/s10664-020-09872-1
   Ivkovic I, 2004, PROC IEEE INT CONF S, P252, DOI 10.1109/ICSM.2004.1357809
   Kehrer T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P163, DOI 10.1109/ASE.2011.6100050
   Kehrer T, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P638, DOI 10.1109/ICSM.2012.6405342
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering, VVolume 2, DOI [10.1145/1134285.1134500, DOI 10.1145/1134285.1134500]
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lutfi M, 2023, SYSTEMS-BASEL, V11, DOI 10.3390/systems11040189
   Magalhaes AP, 2020, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS (ICEIS), VOL 2, P80, DOI 10.5220/0009380100800089
   Mendix, mendix Platform
   Michaux J., 2011, P 2011 ACM S APPL CO, P1470, DOI DOI 10.1145/1982185.1982500
   Microsoft, microsoft Power Apps
   Moody D.L., 2003, ECIS 2003 P, P79
   Segura AM, 2019, SCI COMPUT PROGRAM, V180, P71, DOI 10.1016/j.scico.2019.05.003
   Mosquera D, 2022, LECT NOTES BUS INF P, V446, P458, DOI 10.1007/978-3-031-05760-1_27
   Mussbacher G., 2020, P 23 ACM IEEE INT C, P1, DOI [10.1145/3417990.3421396, DOI 10.1145/3417990.3421396]
   Mussbacher G, 2020, SOFTW SYST MODEL, V19, P1045, DOI 10.1007/s10270-020-00814-5
   Newgen, newgenONE Low Code Digital Transformation Platform
   Oberweis A., 2016, P MOD 2016 KARLSR GE, P205
   Ohrndorf M, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3419017
   Ohrndorf M, 2018, PROC IEEE ACM INT C, P105, DOI 10.1145/3183440.3183498
   Oliveira R., 2017, P MOD DRIV ENG VER V, P1
   Oracle, oracle APEX
   Ormeno Yeshica Isela, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P672, DOI 10.1007/978-3-642-38709-8_43
   OutSystems, outSystems low-code platform
   Panach JI, 2015, INFORM SOFTWARE TECH, V62, P164, DOI 10.1016/j.infsof.2015.02.012
   Paz A, 2021, IEEE T SOFTWARE ENG, V47, P2713, DOI 10.1109/TSE.2020.2966994
   Pega, pega Systems
   Perez Francisca, 2011, End-User Development. Proceedings Third International Symposium, IS-EUD 2011, P258, DOI 10.1007/978-3-642-21530-8_23
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pourali P, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P183, DOI 10.1109/MODELS.2019.000-3
   Quickbase, quickbase non-code platform
   Retool, retool platform
   Ruiz M., 2018, TraceME: A Traceability-Based Method for Conceptual Model Evolution, DOI [10.1007/978-3-319-89716-5, DOI 10.1007/978-3-319-89716-5]
   Saini R, 2021, 24TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2021), P596, DOI 10.1109/MODELS-C53483.2021.00090
   Saini R, 2022, SOFTW SYST MODEL, V21, P1015, DOI 10.1007/s10270-021-00942-6
   Saini R, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P714, DOI 10.1109/MODELS-C.2019.00108
   Sajjad R, 2016, 2016 SIXTH INTERNATIONAL CONFERENCE ON INNOVATIVE COMPUTING TECHNOLOGY (INTECH), P30, DOI 10.1109/INTECH.2016.7845070
   Salemi S, 2018, J PHYS CONF SER, V933, DOI 10.1088/1742-6596/933/1/012008
   Salesforce, salesforce platform
   Savary-Leblanc M, 2023, SOFTWARE PRACT EXPER, V53, P856, DOI 10.1002/spe.3170
   Savary-Leblanc M, 2021, 24TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2021), P631, DOI 10.1109/MODELS-C53483.2021.00097
   Savary-Leblanc M, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P648, DOI 10.1109/MODELS-C.2019.00099
   Schöttle M, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P286, DOI 10.1109/MODELS.2015.7338259
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   ServiceNow, serviceNow platform
   Shen WW, 2009, IEEE T SOFTWARE ENG, V35, P515, DOI 10.1109/TSE.2009.26
   Sousa K, 2011, BUS PROCESS MANAG J, V17, P748, DOI 10.1108/14637151111166178
   Steimann F, 2013, LECT NOTES COMPUT SC, V8107, P18, DOI 10.1007/978-3-642-41533-3_2
   Stoitsev T, 2008, LECT NOTES COMPUT SC, V5240, P84, DOI 10.1007/978-3-540-85758-7_9
   Szabo C, 2013, IEEE AUS SOFT ENGR, P127, DOI 10.1109/ASWEC.2013.24
   unqork, Unqork: unqork platform
   Van Gorp P, 2003, LECT NOTES COMPUT SC, V2863, P144
   Wang CW, 2009, ASIA PAC SOFWR ENG, P414, DOI 10.1109/APSEC.2009.58
   Wohlin C., 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Wright Jevon M., 2010, Proceedings of the 21st Australian Software Engineering Conference (ASWEC 2010), P45, DOI 10.1109/ASWEC.2010.17
   Zander S, 2016, KEOD: PROCEEDINGS OF THE 8TH INTERNATIONAL JOINT CONFERENCE ON KNOWLEDGE DISCOVERY, KNOWLEDGE ENGINEERING AND KNOWLEDGE MANAGEMENT - VOL. 2, P192, DOI 10.5220/0006086201920198
NR 102
TC 0
Z9 0
U1 3
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2024
VL 173
AR 107492
DI 10.1016/j.infsof.2024.107492
EA MAY 2024
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UI3B4
UT WOS:001247377200001
OA hybrid
DA 2024-08-05
ER

PT J
AU Chueca, J
   Cetina, C
   Pastor, O
   Font, J
AF Chueca, Jorge
   Cetina, Carlos
   Pastor, Oscar
   Font, Jaime
TI Search-based co-creation of software models: The case of particle
   systems for video games
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Game software engineering; Search-based software engineering;
   Model-driven engineering; Co-creation
AB Context: The video game industry is one of the fastest -growing industries in the world. However, the creation of content is the bottleneck of the industry nowadays. Objective: In this paper, we propose a new approach for co -creating content by means of combining an evolutionary algorithm Map -Elites, and software models. Our approach involves generating a large number of software models and selecting the best ones based on a fitness function. This fitness function is guided by the human, who chooses which content fits their interests best. Method: We evaluated this approach in the domain of Particle Systems (PS). PS are a popular type of content used to create visual effects such as explosions, fire, smoke, or rain. Our evaluation also involves industry experts of different roles in the video game development process. Using our approach, they were tasked to create PS for their games. Then, they compared the generated models with handmade ones. Results: Our results show that practitioners chose the generated models four out of five times over handmade ones as a better fit for their projects. Furthermore, models created with our approach by non -experts in five minutes are similar in quality to the ones hand -made by an expert in 15 min. Conclusion: In conclusion, using human artistic taste to guide the algorithm renders positive results in creative tasks such as content generation for video games. With minor adjustments, the generated content can be game -ready, accelerating development.
C1 [Chueca, Jorge; Cetina, Carlos; Font, Jaime] Univ San Jorge, SVIT Res Grp, Zaragoza, Spain.
   [Chueca, Jorge; Pastor, Oscar] Univ Politecn Valencia, PROS Res Ctr, Valencia, Spain.
   [Cetina, Carlos] Univ London, London, England.
C3 Universidad San Jorge; Universitat Politecnica de Valencia; University
   of London
RP Chueca, J (corresponding author), Univ San Jorge, SVIT Res Grp, Zaragoza, Spain.
EM jchueca@usj.es
RI Pastor Lopez, Oscar/S-4216-2016; Cetina, Carlos/P-8682-2017
OI Pastor Lopez, Oscar/0000-0002-1320-8471; Chueca,
   Jorge/0000-0002-0766-071X; Cetina, Carlos/0000-0001-8542-5515
FU Iniciando Lineas de Producto Software Mediante Busquedas Interactivas
   Dirigidas por Modelos [PID2021-128695OB-I00]; Centro para el Desarrollo
   Tecnologico y la Innovacion (CDTI) [SAV-20221011]; Spanish Ministry of
   Science and Innovation under the Excellence Network AI4Software
   [S0520D]; Gobierno de Aragon (Spain);  [Red2022-134647]
FX This work has been partially supported by the following: Iniciando
   Lineas de Producto Software Mediante Busquedas Interactivas Dirigidas
   por Modelos (PID2021-128695OB-I00) ; Centro para el Desarrollo
   Tecnologico y la Innovacion (CDTI) (SAV-20221011) ; by the Spanish
   Ministry of Science and Innovation under the Excellence Network
   AI4Software (Red2022-134647-T) ; and in part by the Gobierno de Aragon
   (Spain) (Research Group S0520D) .
CR Alvo M., 2014, Statistical Methods for Ranking Data, V1341
   Ampatzoglou A, 2010, INFORM SOFTWARE TECH, V52, P888, DOI 10.1016/j.infsof.2010.05.004
   [Anonymous], 2019, The global developer population
   [Anonymous], 2023, Material editor reference, unreal engine 4.27 documentation
   Bavota Gabriele, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P75, DOI 10.1007/978-3-642-33119-0_7
   Blasco D, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110804
   Casamayor R, 2022, PROCEEDINGS OF THE 25TH INTERNATIONAL ACM/IEEE CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, MODELS 2022, P356, DOI 10.1145/3550355.3552440
   Charity M, 2024, IEEE T GAMES, V16, P75, DOI 10.1109/TG.2022.3223527
   Charity M, 2020, IEEE CONF COMPU INTE, P542, DOI 10.1109/CoG47356.2020.9231807
   Floreano D., 2008, Bio-Inspired Artificial Intelligence: Theories, Methods, and Technologies
   Font J, 2021, SOFTW SYST MODEL, V20, P1653, DOI 10.1007/s10270-021-00870-5
   Gallotta R, 2022, Arxiv, DOI arXiv:2210.13839
   Games E., 1998, Unreal engine: The most powerful real-time 3D creation tool
   Hall M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P472, DOI 10.1109/ICSM.2012.6405309
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Hastings EJ, 2009, IEEE T EVOLUT COMPUT, V13, P418, DOI 10.1109/TEVC.2008.2004261
   Hastings EJ, 2009, IEEE T COMP INTEL AI, V1, P245, DOI 10.1109/TCIAIG.2009.2038365
   Kent S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P286
   Kessentini W., 2020, P 23 ACM IEEE INT C, P68, DOI DOI 10.1145/3239372.3239375
   Kessentini W, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P101, DOI 10.1145/3239372.3239375
   Kontio J., 2008, Guide to advanced empirical software engineering, P93, DOI [DOI 10.1007/978-1-84800-044-5_4, 10.1007/978-1-84800-044-54]
   Krueger RA., 2002, Designing and conducting focus group interviews, V18
   Lai G, 2022, IEEE T GAMES, V14, P543, DOI 10.1109/TG.2022.3176215
   McAdam N., 2023, Cyberpunk 2077: 9 years of development, 8 days of hell
   Mouret JB, 2015, Arxiv, DOI arXiv:1504.04909
   O.M.G. (OMG), 2013, Meta object facility (MOF) version 2.4.1
   Pérez F, 2022, IEEE T SOFTWARE ENG, V48, P4553, DOI 10.1109/TSE.2021.3121253
   REEVES WT, 1983, ACM T GRAPHIC, V2, P91, DOI [10.1145/357318.357320, 10.1145/964967.801167]
   SHADER GRAPH, 2023, unity features
   Steinberg D., 2009, EMF: Eclipse Modeling Framework, V2nd
   Tan J, 2009, SCI CHINA SER F, V52, P723, DOI 10.1007/s11432-009-0091-z
   Tufano R, 2022, PROC INT CONF SOFTW, P2303, DOI 10.1145/3510003.3510625
   U. Technologies, 2005, Unity real-time development platform | 3D, 2D VR & AR engine
   van der Burg J., 2023, Building an advanced particle system
   Williams JR, 2011, LECT NOTES COMPUT SC, V6956, P112, DOI 10.1007/978-3-642-23716-4_13
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Zhang BQ, 2017, 2017 16TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE (ICIS 2017), P595
   Zhu M, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3365000
NR 38
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2024
VL 171
AR 107466
DI 10.1016/j.infsof.2024.107466
EA APR 2024
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RN8N8
UT WOS:001228435700001
DA 2024-08-05
ER

PT J
AU Eisenberg, M
   Sahay, A
   Di Ruscio, D
   Iovino, L
   Wimmer, M
   Pierantonio, A
AF Eisenberg, Martin
   Sahay, Apurvanand
   Di Ruscio, Davide
   Iovino, Ludovico
   Wimmer, Manuel
   Pierantonio, Alfonso
TI Multi-objective model transformation chain exploration with MOMoT
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model-driven optimization; Transformation chain; Multi-objective graph
   traversal; Model repository
AB Context: The increasing complexity of modern systems leads to an increasing amount of artifacts that are used along the model-based software and systems development lifecycle. This also includes model transformations, which serve for mapping models between representations, e.g., for verification and validation purposes. Objectives: Model repositories manage this variety of artifacts and promote reusability, but should also enable the bundling of compatible artifacts. Therefore, model transformations should be reused and arranged into transformation chains to support more complex transformation scenarios. The resulting transformation should correspond to the user's interest in terms of quality criteria such as model coverage, transformation coverage, and number of transformation steps, thus assembling such chains becomes a multi -objective problem. Methods: A novel multi -objective approach for exploring possible transformation chains residing in model repositories is presented. MOMoT, a model-driven optimization framework, is leveraged to explore the transformation space spanned by the repository. For demonstration, three differently populated repositories are considered. Results: We have extended MOMoT with an exhaustive, multi -objective search that explores the entire model transformation space defined by graph transformation rules, allowing all possible transformation chains to be considered as solution. Accordingly, the optimal solutions were identified in the demonstration cases with negligible computation time. Conclusion: The approach assists modelers when there are multiple chains for transforming an input model to a specified output model to consider. Our evaluation shows that the approach elicits all legitimate transformation chains, thus enabling the modelers to consider trade-offs in view of multiple criteria selection.
C1 [Eisenberg, Martin; Wimmer, Manuel] Johannes Kepler Univ Linz, CDL MINT, Linz, Austria.
   [Sahay, Apurvanand] Amrita Vishwa Vidyapeetham, Amrita Sch Comp, Bengaluru, India.
   [Sahay, Apurvanand; Di Ruscio, Davide; Pierantonio, Alfonso] Univ Aquila, Laquila, Italy.
   [Iovino, Ludovico] Gran Sasso Sci Inst, Laquila, Italy.
C3 Johannes Kepler University Linz; Amrita Vishwa Vidyapeetham; Amrita
   Vishwa Vidyapeetham Bengaluru; University of L'Aquila; Gran Sasso
   Science Institute (GSSI)
RP Eisenberg, M (corresponding author), Johannes Kepler Univ Linz, CDL MINT, Linz, Austria.
EM eisenberg.martin@jku.at; a_sahay@blr.amrita.edu;
   davide.diruscio@univaq.it; ludovico.iovino@gssi.it;
   manuel.wimmer@jku.at; alfonso.pierantonio@univaq.it
OI Sahay, Apurvanand/0000-0003-3695-8598
FU Lowcomote Training Network; European Union's Horizon 2020 Research and
   Innovation Programme under the Marie Sklodowska-Curie [813884]; Austrian
   Federal Ministry for Digital and Economic Affairs; National Foundation
   for Research, Technology and Development
FX This research is partially supported by the Lowcomote Training Network,
   which has received funding from the European Union's Horizon 2020
   Research and Innovation Programme under the Marie Sklodowska-Curie grant
   agreement n degrees 813884, and by the Austrian Federal Ministry for
   Digital and Economic Affairs and the National Foundation for Research,
   Technology and Development (CDG) .
CR Abdeen H., 2014, INT C AUTOMATED SOFT, P289, DOI [DOI 10.1145/2642937.2643005, 10.1145/2642937.2643005]
   Agresti A., 2013, CATEGORICAL DATA ANA, V3rd, DOI DOI 10.1002/0471249688
   Ali Q.u.a., 2020, COMP P 23 ACM IEEE I, P1
   Alvarez C., 2013, P WORKSH ACADEMICS T, P1
   [Anonymous], XML Metadata Interchange (XMI)
   Aranega Vincent, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P562, DOI 10.1007/978-3-642-33666-9_36
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Basciani F., 2014, 2 INT WORKSH MOD DRI, V1242, P66
   Basciani F., 2015, CLOUDMDE MODELS, P37
   Basciani F, 2020, IEEE T SOFTWARE ENG, V46, P251, DOI 10.1109/TSE.2018.2846223
   Basciani F, 2014, LECT NOTES COMPUT SC, V8767, P602, DOI 10.1007/978-3-319-11653-2_37
   Bastarrica M.C., 2014, P 6 INT WORKSH MOD S, P31
   Bauer E, 2011, LECT NOTES COMPUT SC, V6705, P3, DOI 10.1007/978-3-642-21952-8_3
   Bill R, 2019, SOFTW SYST MODEL, V18, P1017, DOI 10.1007/s10270-017-0644-3
   Bokler Fritz, 2017, Evolutionary Multi-Criterion Optimization. 9th International Conference, EMO 2017. Proceedings: LNCS 10173, P77, DOI 10.1007/978-3-319-54157-0_6
   Boussaïd I, 2017, AUTOMAT SOFTW ENG, V24, P233, DOI 10.1007/s10515-017-0215-4
   Brambilla M., 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00751ED2V01Y201701SWE004]
   Burdusel A, 2021, SOFTW SYST MODEL, V20, P1857, DOI 10.1007/s10270-021-00914-w
   Burdusel A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P106, DOI 10.1109/MODELS.2019.00-10
   Burdusel A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P189, DOI 10.1109/MODELS-C.2019.00032
   Burdusel A, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P12, DOI 10.1145/3270112.3270130
   Chugh T., 2023, ManyCriteria Optimization and Decision Analysis: State-of-the-Art, Present Challenges, and Future Perspectives, P241
   Darcy DP, 2005, IEEE T SOFTWARE ENG, V31, P982, DOI 10.1109/TSE.2005.130
   Denil J, 2014, LECT NOTES COMPUT SC, V8769, P80, DOI 10.1007/978-3-319-11743-0_6
   Di Rocco J, 2020, SOFTW SYST MODEL, V19, P401, DOI 10.1007/s10270-019-00748-7
   Di Rocco J, 2018, LECT NOTES COMPUT SC, V10888, P110, DOI 10.1007/978-3-319-93317-7_5
   Eclipse, ATL Transformations
   Efftinge S, 2013, ACM SIGPLAN NOTICES, V48, P112, DOI 10.1145/2480361.2371419
   Eisenberg M, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P82, DOI 10.1109/MODELS50736.2021.00017
   Ellson J, 2002, LECT NOTES COMPUT SC, V2265, P483
   Ergin H., 2013, ACM SE C
   Fleck M, 2017, IEEE T SOFTWARE ENG, V43, P1009, DOI 10.1109/TSE.2017.2654255
   Fleck M, 2016, COMPANION PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON MODULARITY (MODULARITY COMPANION'16), P190, DOI 10.1145/2892664.2892698
   France R, 2007, LECT NOTES COMPUT SC, V4364, P311
   github, Static Analysis built-on-the-top of Epsilon
   Github, PyEcore: A pythonic implementation of the eclipse modeling framework
   Hagberg A. A., 2008, EXPLORING NETWORK ST, P11, DOI DOI 10.1016/J.JELECTROCARD.2010.09.003
   Hegedüs A, 2015, AUTOMAT SOFTW ENG, V22, P399, DOI 10.1007/s10515-014-0163-1
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   John S, 2023, SOFTW SYST MODEL, V22, P1281, DOI 10.1007/s10270-022-01078-x
   John S, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.3.a6
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kuester JM, 2009, LECT NOTES COMPUT SC, V5795, P733, DOI 10.1007/978-3-642-04425-0_60
   Lucio Levi, 2013, SDL 2013: Model-Driven Dependability Engineering. 16th International SDL Forum. Proceedings: LNCS 7916, P182, DOI 10.1007/978-3-642-38911-5_11
   Lúcio L, 2016, SOFTW SYST MODEL, V15, P647, DOI 10.1007/s10270-014-0429-x
   McQuillan J.A., 2009, P 1 INT WORKSH MOD T
   Mkaouer MW, 2014, ADV COMPUT, V92, P161, DOI 10.1016/B978-0-12-420232-0.00004-0
   Mohagheghi P, 2009, LECT NOTES COMPUT SC, V5421, P54, DOI 10.1007/978-3-642-01648-6_6
   Purshouse RC, 2003, LECT NOTES COMPUT SC, V2632, P16
   Rivera J.E., 2009, Proc. MtATL, P34
   Selim G.M., 2012, Proceedings of the First Workshop on the Analysis of Model Transformations, P21
   Serafini P, 1987, Recent Advances and Historical Development of Vector Optimization, P222, DOI [DOI 10.1007/978-3-642-46618-2_15, 10.1007/978-3-642-46618-2_15]
   Syriani E., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P929, DOI 10.1109/ICST.2012.198
   Troya J, 2018, J SYST SOFTWARE, V136, P188, DOI 10.1016/j.jss.2017.05.043
   von Pilgrim J, 2008, LECT NOTES COMPUT SC, V5095, P17, DOI 10.1007/978-3-540-69100-6_2
   Yie A, 2012, SOFTW SYST MODEL, V11, P55, DOI 10.1007/s10270-010-0179-3
   Zschaler S, 2016, LECT NOTES COMPUT SC, V9946, P317, DOI 10.1007/978-3-319-50230-4_24
NR 58
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2024
VL 174
AR 107500
DI 10.1016/j.infsof.2024.107500
EA JUN 2024
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WI8H8
UT WOS:001254328900001
OA hybrid
DA 2024-08-05
ER

PT J
AU Mustafa, EI
   Osman, R
AF Mustafa, Emtinan I.
   Osman, Rasha
TI A random forest model for early-stage software effort estimation for the
   SEERA dataset
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software effort and duration estimation; Random forest; Early-stage; The
   SEERA dataset; Technically constrained environments; SMOGN
ID COST-ESTIMATION; PROJECT EFFORT; PREDICTION; SYSTEMS
AB Context: Publicly available software cost estimation datasets are outdated and may not represent current industrial environments. Thus most research has concentrated on the development and evaluation of estimation models with limited evidence of their applicability to industrial practice. Moreover, these datasets and models may not be applicable in (under-represented) technically and economically constrained environments such as the software development environment in Sudan. Objective: This paper aims to develop a machine learning model that is suitable for the Sudanese software industry. To demonstrate the suitability of our approach, we evaluate our model using the publicly available SEERA (Software enginEERing in SudAn) dataset, which is a software cost estimation dataset from organizations in Sudan. Method: We demonstrated the suitability of the SEERA dataset for effort estimation by comparing the attributes that had a high correlation with actual effort and actual duration to the cost factors identified by (Sudanese) experts. In addition, we developed an early-stage Random Forest model to estimate project effort and duration from the SEERA dataset. Early-stage estimation is in-line with current Sudanese industrial practice. We investigated the impact of oversampling, feature selection, heterogeneity and local environmental factors on model accuracy. Results: Our experimental results showed that the Random Forest model with oversampling and feature selection provided accurate estimates that were better than random guessing (standardized accuracy > 70 %). Our results were similar to accuracies reported in the literature. In addition, we demonstrated that our random forest model provided estimations that were more accurate than (Sudanese) expert judgement. Conclusion: This study has demonstrated the feasibility of our random forest model for early-stage effort and duration estimation for Sudanese software projects. The results demonstrate the importance of representative models and datasets for non-traditional technical environments. Further research is required to investigate the impact of local environmental factors on software cost estimation.
C1 [Mustafa, Emtinan I.; Osman, Rasha] Univ Khartoum, Fac Math Sci & Informat, Khartoum, Sudan.
C3 University of Khartoum
RP Osman, R (corresponding author), Univ Khartoum, Fac Math Sci & Informat, Khartoum, Sudan.
EM rosman@ieee.org
RI Osman, Rasha/KQV-0095-2024
OI Osman, Rasha/0000-0002-1112-1284
CR Abdelali Z, 2019, PROCEDIA COMPUT SCI, V148, P343, DOI 10.1016/j.procs.2019.01.042
   Alamdy S., 2017, J. Engin Comp. Sci.. Sudan Uni. Press, V8, P5
   Alamdy S, 2017, P INT COMP SOFTW APP, P743, DOI 10.1109/COMPSAC.2017.218
   [Anonymous], 2021, Anaconda
   [Anonymous], 2016, The promise repository of empirical software engineering data. north carolina state university, department of computer science
   Azzeh M, 2021, SCI COMPUT PROGRAM, V204, DOI 10.1016/j.scico.2020.102596
   Azzeh M, 2016, APPL SOFT COMPUT, V49, P981, DOI 10.1016/j.asoc.2016.05.008
   Bakir A, 2010, SOFTWARE QUAL J, V18, P57, DOI 10.1007/s11219-009-9081-z
   Bardsiri VK, 2014, EMPIR SOFTW ENG, V19, P857, DOI 10.1007/s10664-013-9241-4
   Baskeles B, 2007, 2007 22ND INTERNATIONAL SYMPOSIUM ON COMPUTER AND INFORMATION SCIENCES, P208
   Bibi S, 2006, INT FED INFO PROC, V204, P533
   Bosu MF, 2019, ACM J DATA INF QUAL, V11, DOI 10.1145/3328746
   Bosu MF, 2013, IEEE AUS SOFT ENGR, P97, DOI 10.1109/ASWEC.2013.21
   Branco P., 2017, P 1 INT WORKSH LEARN, P36
   Branco P, 2016, Arxiv, DOI [arXiv:1604.08079, DOI 10.48550/ARXIV.1604.08079, 10.48550/arXiv.1604.08079]
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Center for Software Engineering University of Southern California, 1995, COCOMO II model definition manual
   Dejaeger K, 2012, IEEE T SOFTWARE ENG, V38, P375, DOI 10.1109/TSE.2011.55
   Matsubara PGF, 2022, J SYST SOFTWARE, V185, DOI 10.1016/j.jss.2021.111148
   Hosni M, 2018, SOFT COMPUT, V22, P5977, DOI 10.1007/s00500-017-2945-4
   Huang JL, 2015, INFORM SOFTWARE TECH, V67, P108, DOI 10.1016/j.infsof.2015.07.004
   Idri A, 2016, J SYST SOFTWARE, V118, P151, DOI 10.1016/j.jss.2016.05.016
   Idri A, 2015, INFORM SOFTWARE TECH, V58, P206, DOI 10.1016/j.infsof.2014.07.013
   ISBSG Limited, 2012, Zenodo, DOI 10.5281/zenodo.268485
   James G, 2013, SPRINGER TEXTS STAT, V103, P1, DOI 10.1007/978-1-4614-7138-7_1
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   KITCHENHAM BA, 1992, INFORM SOFTWARE TECH, V34, P211, DOI 10.1016/0950-5849(92)90077-3
   Kocaguneli Ekrem, 2009, Zenodo, DOI 10.5281/zenodo.268433
   Kocaguneli E, 2013, IEEE T SOFTWARE ENG, V39, P1040, DOI 10.1109/TSE.2012.88
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Kuhn M., 2019, Feature Engineering and Selection: A Practical Approach for PredictiveModels, DOI DOI 10.1201/9781315108230
   Kumar PS, 2020, COMPUT SCI REV, V38, DOI 10.1016/j.cosrev.2020.100288
   Laqrichi S, 2015, IFAC PAPERSONLINE, V48, P954, DOI 10.1016/j.ifacol.2015.06.206
   Lopez-Martin C, 2011, APPL SOFT COMPUT, V11, P724, DOI 10.1016/j.asoc.2009.12.034
   Mair C., 2005, WORKSHOP PREDICTOR M, P1, DOI [10.1145/1083165.1083166, DOI 10.1145/1083165.1083166]
   Mendes E, 2005, J SYST SOFTWARE, V77, P157, DOI 10.1016/j.jss.2004.08.034
   Mendes E., 2014, 18 INT C EVALUATION, P1, DOI [10.1145/2601248.2601284, DOI 10.1145/2601248.2601284]
   Mensah S, 2018, INFORM SOFTWARE TECH, V94, P1, DOI 10.1016/j.infsof.2017.09.010
   Menzies T, 2017, EMPIR SOFTW ENG, V22, P2658, DOI 10.1007/s10664-016-9472-2
   Minku LL, 2013, INFORM SOFTWARE TECH, V55, P1512, DOI 10.1016/j.infsof.2012.09.012
   Mustafa E., 2019, J. Engin Comp. Sci.. Sudan Uni. Press, V20, P2
   Mustafa E., 2024, Software cost estimation in the Sudanese software industry
   Mustafa EI, 2020, PROCEEDINGS OF THE 16TH ACM INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, PROMISE 2020, P61, DOI 10.1145/3416508.3417119
   Mustafa Emtinan I, 2020, Zenodo, DOI 10.5281/ZENODO.4066438
   Mustafa EI, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P623, DOI 10.1109/QRS-C.2018.00108
   Nassif A. B., 2012, Proceedings of the 2012 13th ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel & Distributed Computing (SNPD 2012), P589, DOI 10.1109/SNPD.2012.40
   Nassif AB, 2013, J SYST SOFTWARE, V86, P144, DOI 10.1016/j.jss.2012.07.050
   de Carvalho HDP, 2021, IEEE ACCESS, V9, P92676, DOI 10.1109/ACCESS.2021.3091313
   Phannachitta P, 2020, INFORM SOFTWARE TECH, V125, DOI 10.1016/j.infsof.2020.106330
   Pospieszny P, 2018, J SYST SOFTWARE, V137, P184, DOI 10.1016/j.jss.2017.11.066
   Probst P, 2019, WIRES DATA MIN KNOWL, V9, DOI 10.1002/widm.1301
   Rankovic N, 2021, IEEE ACCESS, V9, P26926, DOI 10.1109/ACCESS.2021.3057807
   Sarro F, 2022, IEEE T SOFTWARE ENG, V48, P1868, DOI 10.1109/TSE.2020.3040793
   Satapathy SM, 2016, IET SOFTW, V10, P10, DOI 10.1049/iet-sen.2014.0122
   scikit-learn.org, 2021, RandomForestRegressor
   Scorneti Erwan, 2017, ESAIM: Proceedings and Surveys, V60, P144, DOI 10.1051/proc/201760144
   Sehra SK, 2017, INFORM SOFTWARE TECH, V91, P1, DOI 10.1016/j.infsof.2017.06.002
   Shah MA, 2020, IEEE ACCESS, V8, P58402, DOI 10.1109/ACCESS.2020.2980236
   Shahpar Z., 2021, J. AI and Data Mining, V9, P329, DOI [10.22044/jadm.2021.10119.2152, DOI 10.22044/JADM.2021.10119.2152]
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Tawosi V, 2022, IEEE T SOFTWARE ENG, V48, P3185, DOI 10.1109/TSE.2021.3083360
   Torgo L, 2013, LECT NOTES ARTIF INT, V8154, P378, DOI 10.1007/978-3-642-40669-0_33
   Usman M, 2018, INFORM SOFTWARE TECH, V99, P21, DOI 10.1016/j.infsof.2018.02.009
   Villalobos-Arias L, 2020, PROCEEDINGS OF THE 16TH ACM INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, PROMISE 2020, P31, DOI 10.1145/3416508.3417121
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   Whigham PA, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2738037
   Zare F, 2016, APPL SOFT COMPUT, V49, P968, DOI 10.1016/j.asoc.2016.08.004
NR 69
TC 2
Z9 2
U1 4
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2024
VL 169
AR 107413
DI 10.1016/j.infsof.2024.107413
EA FEB 2024
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LC9V1
UT WOS:001184707000001
DA 2024-08-05
ER

PT J
AU Li, T
   Zhang, XR
   Wang, YD
   Zhou, QX
   Wang, YT
   Dong, FQ
AF Li, Tong
   Zhang, Xinran
   Wang, Yunduo
   Zhou, Qixiang
   Wang, Yiting
   Dong, Fangqi
TI Machine learning for requirements engineering (ML4RE): A systematic
   literature review complemented by practitioners' voices from Stack
   Overflow
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Requirements engineering; Machine learning; Systematic literature review
ID MULTI-VOCAL LITERATURE; GREY LITERATURE; SOFTWARE
AB Context: The research of machine learning for requirements engineering (ML4RE) has attracted more and more attention from researchers and practitioners. Although pioneering research has shown the potential of using ML techniques to improve RE practices, there lacks a systematic and comprehensive literature review in academia that integrates an industrial perspective. Specifically, none of the reviews available in ML4RE have considered the grey literature, which is primarily from practitioner origin and is more reflective of the real issues and challenges faced in practice. Objective: In this paper, we conduct a systematic survey of academic publications in ML4RE and complement it with the practitioners' voices from Stack Overflow to complete a comprehensive literature review. Our research objective is to provide a comprehensive view of the current research progress in ML4RE, present the main questions and challenges faced in RE practice, understand the gap between research and practice, and provide our insights into how the RE academic domain can pragmatically develop in the future. Method: We systematically investigated 207 academic papers on ML4RE from 2010 to 2022, along with 375 questions related to RE practices on Stack Overflow and their corresponding answers. Our analysis encompassed their trends, focused RE activities and tasks, employed solutions, and associated data. Finally, we conducted a joint analysis, contrasting the outcomes of both parts. Results: Based on the statistical results from collected literature, we summarize an academic roadmap and analyse the disparities, offering research recommendations. Our suggestions include the development of intelligent question-answering assistants employing large language models, the integration of machine learning into industrial tools, and the promotion of collaboration between academia and industry. Conclusion: This study contributes by providing a holistic view of ML4RE, delineating disparities between research and practice, and proposing pragmatic suggestions to bridge the academia-industry gap.
C1 [Li, Tong] Beijing Univ Technol, Fac Informat Technol, Beijing, Peoples R China.
   Beihang Univ, Sch Software, Beijing, Peoples R China.
C3 Beijing University of Technology; Beihang University
RP Li, T (corresponding author), Beijing Univ Technol, Fac Informat Technol, Beijing, Peoples R China.
EM litong@bjut.edu.cn; zhangxinran028@gmail.com; wangyunduo@buaa.edu.cn;
   qixiang.zho@gmail.com; wangyiting.official@gmail.com; dfq902@gmail.com
OI Zhou, Qixiang/0000-0001-6632-8277; zhang, xinran/0000-0002-0949-7995
FU National Natural Science Foundation of China [62162051, 61902010];
   Project of Beijing Municipal Education Commission, China
   [KM202110005025]
FX This work is partially supported by the National Natural Science
   Foundation of China (No. 62162051, 61902010) , the Project of Beijing
   Municipal Education Commission, China (No. KM202110005025) . We
   sincerely thank Shen Chen, Tianyu Wang, Shiqi Wang, and Chunji Cui for
   their valuable comments and preliminary exploration of this topic.
CR Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Alrumaih H, 2018, 2018 21ST SAUDI COMPUTER SOCIETY NATIONAL COMPUTER CONFERENCE (NCC)
   Alves I, 2023, IEEE T ENG MANAGE, DOI 10.1109/TEM.2023.3287759
   Amaro R, 2023, IEEE T SOFTWARE ENG, V49, P883, DOI 10.1109/TSE.2022.3166626
   Basili V.R., 1992, SOFTWARE MODELING ME
   Bhandari R, 2019, 2019 19TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND ITS APPLICATIONS (ICCSA 2019), P140, DOI 10.1109/ICCSA.2019.00013
   Cheligeer C, 2022, AI EDAM, V36, DOI 10.1017/S0890060422000166
   ELMORE RF, 1991, REV EDUC RES, V61, P293
   Felderer M, 2020, LECT NOTES BUS INF P, V371, P3, DOI 10.1007/978-3-030-35510-4_1
   Garousi V, 2020, EMPIR SOFTW ENG, V25, P1687, DOI 10.1007/s10664-020-09803-0
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Garousi V, 2017, INFORM SOFTWARE TECH, V85, P16, DOI 10.1016/j.infsof.2017.01.001
   Garousi V, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916008
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Heiland L, 2023, Arxiv, DOI arXiv:2303.13173
   Horkoff J, 2019, REQUIR ENG, V24, P133, DOI 10.1007/s00766-017-0280-z
   Iqbal T, 2018, ASIA PAC SOFWR ENG, P11, DOI 10.1109/APSEC.2018.00015
   Kadebu Prudence, 2018, 2018 3rd International Conference on Contemporary Computing and Informatics (IC3I), P129, DOI 10.1109/IC3I44769.2018.9007263
   Kamei Fernando Kenji, 2019, ACM SIGSOFT Software Engineering Notes, V44, DOI 10.1145/3356773.3356797
   Khelifa A., 2018, LPKM, P1
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Li X., 2023, P INT C SOFTW ENG KN, P566, DOI [10.18293/SEKE2023-135, DOI 10.18293/SEKE2023-135]
   Lim Sachiko, 2021, SN Computer Science, V2, P1
   Pérez-Verdejo JM, 2020, 2020 8TH EDITION OF THE INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2020), P21, DOI 10.1109/CONISOFT50191.2020.00014
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Myrbakken H, 2017, COMM COM INF SC, V770, P17, DOI 10.1007/978-3-319-67383-7_2
   de França BBN, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P53, DOI 10.1145/2973839.2973845
   Petersen K., 2008, P 12 INT C EVALUATIO, P68, DOI DOI 10.14236/EWIC/EASE2008.8
   Prates L, 2019, LECT NOTES BUS INF P, V359, P77, DOI 10.1007/978-3-030-29608-7_7
   Rainer A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2197
   Raulamo-Jurvanen P., 2017, P 21 INT C EVALUATIO, P21
   Recupito G., 2022, 2022 48 EUR SOFTW EN, P06, DOI [DOI 10.1109/SEAA56994.2022.00021, https://doi.org/10.1109/SEAA56994.2022.00021]
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   S.R. Department, 2023, Number of available applications in the Google Play Store from December 2009 to June 2023
   Sampada G. C., 2020, 2020 Sixth International Conference on Parallel, Distributed and Grid Computing (PDGC), P215, DOI 10.1109/PDGC50313.2020.9315741
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Tripathi N, 2018, J SYST SOFTWARE, V146, P130, DOI 10.1016/j.jss.2018.08.059
   Xu C, 2023, IET SOFTW, V17, P405, DOI 10.1049/sfw2.12082
   Zamani K, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P116, DOI 10.1109/REW53955.2021.00023
   Zhao L, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3444689
NR 41
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2024
VL 172
AR 107477
DI 10.1016/j.infsof.2024.107477
EA MAY 2024
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TI0N7
UT WOS:001240520100001
OA hybrid
DA 2024-08-05
ER

PT J
AU Yasin, A
   Fatima, R
   Zheng, JB
   Afzal, W
   Raza, S
AF Yasin, Affan
   Fatima, Rubia
   Zheng, Jiangbin
   Afzal, Wasif
   Raza, Shahid
TI Can serious gaming tactics bolster spear-phishing and phishing
   resilience? : Securing the human hacking in Information Security
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Human factor in security; Phishing attack; Scam; Education; Serious
   game; Information security
ID GAME; DESIGN; FRAMEWORK; DECEPTION; EDUCATION; INTERNET
AB Context: In the digital age, there is a notable increase in fraudulent activities perpetrated by social engineers who exploit individuals' limited knowledge of digital devices. These actors strategically manipulate human psychology, targeting IT devices to gain unauthorized access to sensitive data. Objectives: Our study is centered around two distinct objectives to be accomplished through the utilization of a serious game: (i) The primary objective entails delivering training and educational content to participants with a focus on phishing attacks; (ii) The secondary objective aims to heighten participants' awareness regarding the perils associated with divulging excessive information online. Methodology: To address these objectives, we have employed the following techniques and methods: (i) A comprehensive literature review was conducted to establish foundational knowledge in areas such as social engineering, game design, learning principles, human interaction, and game-based learning; (ii) We meticulously aligned the game design with the philosophical concept of social engineering attacks; (iii) We devised and crafted an advanced hybrid version of the game, incorporating the use of QR codes to generate game card data; (iv) We conducted an empirical evaluation encompassing surveys, observations, discussions, and URL assessments to assess the effectiveness of the proposed hybrid game version. Results: Quantitative data and qualitative observations suggest the "PhishDefend Quest" game successfully improved players' comprehension of phishing threats and how to detect them through an interactive learning experience. The results highlight the potential of serious games to educate people about social engineering risks. Conclusion: Through the evaluation, we can readily arrive at the following conclusions: (i) Game-based learning proves to be a viable approach for educating participants about phishing awareness and the associated risks tied to the unnecessary disclosure of sensitive information online; (ii) Furthermore, game-based learning serves as an effective means of disseminating awareness among participants and players concerning prevalent phishing attacks.
C1 [Yasin, Affan; Zheng, Jiangbin] Northwestern Polytech Univ, Sch Software, Xian 710072, Shaanxi, Peoples R China.
   [Fatima, Rubia] Emerson Univ, Dept Comp Sci, Multan, Pakistan.
   [Afzal, Wasif; Raza, Shahid] Malardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.
   [Raza, Shahid] RISE Res Inst Sweden, Stockholm, Sweden.
C3 Northwestern Polytechnical University; Malardalen University; RISE
   Research Institutes of Sweden
RP Afzal, W (corresponding author), Malardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.
EM affan.yasin@outlook.com; rubiafatima91@hotmail.com; zhengjb@nwpu.edu.cn;
   wasif.afzal@mdu.se; shahid.raza@ri.se
RI ; Afzal, Wasif/C-8028-2013
OI Yasin, Affan/0000-0002-0166-2239; Afzal, Wasif/0000-0003-0611-2655
FU European Union [883054]
FX This paper is partially supported by the European Union's Horizon 2020
   research and innovation programme under grant agreement No. 883054
   (EU-HYBNET) .
CR Aleroud A, 2017, COMPUT SECUR, V68, P160, DOI 10.1016/j.cose.2017.04.006
   Alt D, 2023, COMPUT EDUC, V200, DOI 10.1016/j.compedu.2023.104806
   Arachchilage N. A. G., 2011, 2011 International Conference on Information Society (i-Society), P485
   Arachchilage NAG, 2016, COMPUT HUM BEHAV, V60, P185, DOI 10.1016/j.chb.2016.02.065
   Arachchilage NAG, 2013, COMPUT HUM BEHAV, V29, P706, DOI 10.1016/j.chb.2012.12.018
   Bada M, 2019, INF COMPUT SECUR, V27, P393, DOI 10.1108/ICS-07-2018-0080
   Baral Gitanjali, 2019, 2019 Cybersecurity and Cyberforensics Conference (CCC). Proceedings, P102, DOI 10.1109/CCC.2019.000-1
   Baslyman M, 2016, PROCEEDINGS OF THE 2016 APWG SYMPOSIUM ON ELECTRONIC CRIME RESEARCH (ECRIME), P91
   Beckers K, 2016, INT REQUIR ENG CONF, P16, DOI 10.1109/RE.2016.39
   Bergholz A, 2010, J COMPUT SECUR, V18, P7, DOI 10.3233/JCS-2010-0371
   Beuran R, 2018, COMPUT SECUR, V78, P43, DOI 10.1016/j.cose.2018.06.001
   Bostrom G., 2006, P 2006 INT WORKSH SO, P11
   Bullee JW, 2017, INF COMPUT SECUR, V25, P593, DOI 10.1108/ICS-03-2017-0009
   Buller DB, 1996, COMMUN THEOR, V6, P203, DOI 10.1111/j.1468-2885.1996.tb00127.x
   Chang CC, 2017, COMPUT HUM BEHAV, V71, P218, DOI 10.1016/j.chb.2017.01.031
   Che-Ching Yang, 2012, 2012 IEEE 12th International Conference on Advanced Learning Technologies (ICALT), P121, DOI 10.1109/ICALT.2012.174
   Chen CM, 2023, COMPUT EDUC, V205, DOI 10.1016/j.compedu.2023.104899
   Chun Che Fung, 2008, Second IEEE International Conference on Digital Ecosystems and Technologies (IEEE DEST 2008), P375, DOI 10.1109/DEST.2008.4635145
   Cone BD, 2007, COMPUT SECUR, V26, P63, DOI 10.1016/j.cose.2006.10.005
   De Kimpe L, 2018, TELEMAT INFORM, V35, P1277, DOI 10.1016/j.tele.2018.02.009
   Dunwell I., 2011, Proceedings of the 2011 Third International Conference on Intelligent Networking and Collaborative Systems (INCoS 2011), P830, DOI 10.1109/INCoS.2011.58
   Dykman C.A., 2008, Journal of Information Systems Education, V19, P157
   Fatima R, 2023, INFORM SOFTWARE TECH, V161, DOI 10.1016/j.infsof.2023.107251
   Fatima R, 2022, IEEE I C SQRS-C, P756, DOI 10.1109/QRS-C57518.2022.00120
   Fatima R, 2019, J COMPUT SECUR, V27, P581, DOI 10.3233/JCS-181253
   Flores WR, 2016, COMPUT SECUR, V59, P26, DOI 10.1016/j.cose.2016.01.004
   Freese M, 2016, PROC EUR CONF GAME, P835
   Giannakas F, 2015, PROCEEDINGS OF 2015 INTERNATIONAL CONFERENCE ON INTERACTIVE MOBILE COMMUNICATION TECHNOLOGIES AND LEARNING (IMCL), P54, DOI 10.1109/IMCTL.2015.7359553
   Gulec U., 2017, CEUR Workshop Proceedings, V1980, P171
   Ha khan M., 2022, IET Conference Proceedings, V2022, P105, DOI 10.1049/icp.2022.2049
   Haley CB, 2008, IEEE T SOFTWARE ENG, V34, P133, DOI 10.1109/TSE.2007.70754
   Hamari J, 2016, COMPUT HUM BEHAV, V54, P170, DOI 10.1016/j.chb.2015.07.045
   Heartfield R, 2016, IEEE ACCESS, V4, DOI 10.1109/ACCESS.2016.2616285
   Hellaoui H, 2017, COMPUT NETW, V127, P173, DOI 10.1016/j.comnet.2017.08.006
   Hendrix M, 2016, INT J SERIOUS GAMES, V3, P53, DOI 10.17083/ijsg.v3i1.107
   Host'ovecky M, 2017, ADV INTELL SYST, V574, P341, DOI 10.1007/978-3-319-57264-2_35
   Junger M, 2017, COMPUT HUM BEHAV, V66, P75, DOI 10.1016/j.chb.2016.09.012
   Khan MA, 2022, EDUC INF TECHNOL, V27, P5153, DOI 10.1007/s10639-021-10807-6
   Ki-Aries D, 2017, COMPUT SECUR, V70, P663, DOI 10.1016/j.cose.2017.08.001
   Kirlappos I, 2012, IEEE SECUR PRIV, V10, P24, DOI 10.1109/MSP.2011.179
   Kumar P, 2009, COMBUST EXPLO SHOCK+, V45, P1, DOI 10.1007/s10573-009-0001-0
   Laakso NL, 2021, COMPUT EDUC, V174, DOI 10.1016/j.compedu.2021.104308
   Li T, 2023, IET INFORM SECUR, V17, P703, DOI 10.1049/ise2.12125
   Liang HG, 2010, J ASSOC INF SYST, V11, P394
   Marett LK, 2004, GROUP DECIS NEGOT, V13, P29, DOI 10.1023/B:GRUP.0000011943.73672.9b
   Micallef N, 2017, MIL COMM INF SYST CO
   Mouton F, 2016, COMPUT SECUR, V59, P186, DOI 10.1016/j.cose.2016.03.004
   Nielsen L., 2013, Human-Computer Interaction Series, V15, DOI [10.1007/978-1-4471-4084-9, DOI 10.1007/978-1-4471-4084-9]
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Pollini A, 2022, COGN TECHNOL WORK, V24, P371, DOI 10.1007/s10111-021-00683-y
   Qian MH, 2016, COMPUT HUM BEHAV, V63, P50, DOI 10.1016/j.chb.2016.05.023
   Raman R, 2014, 2014 INTERNATIONAL CONFERENCE ON GREEN COMPUTING COMMUNICATION AND ELECTRICAL ENGINEERING (ICGCCEE)
   Roepke R., 2019, CSEDU, P58
   Sheng S., 2007, P 3 S US PRIV SEC, P88, DOI DOI 10.1145/1280680.1280692
   Shian-Shyong Tseng, 2011, 2011 International Conference on Electrical and Control Engineering, P6390, DOI 10.1109/ICECENG.2011.6056921
   Siadati H, 2017, COMPUT SECUR, V65, P14, DOI 10.1016/j.cose.2016.09.009
   Silic M, 2020, J MANAGE INFORM SYST, V37, P129, DOI 10.1080/07421222.2019.1705512
   Tetri P, 2013, BEHAV INFORM TECHNOL, V32, P1014, DOI 10.1080/0144929X.2013.763860
   van Steen T, 2021, CYBERPSYCH BEH SOC N, V24, P593, DOI 10.1089/cyber.2020.0526
   Vogeler Claudia, 2018, Proceedings of the 17th European Conference on e-Learning ECEL 2018, P592
   Weanquoi P., 2018, J. Cybersecur. Educ. Res. Pract., V2018, P2
   Wen ZA, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300338
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Workman MD, 2022, IEEE T EDUC, V65, P40, DOI 10.1109/TE.2021.3086025
   Xenos M, 2017, IEEE GLOB ENG EDUC C, P1078, DOI 10.1109/EDUCON.2017.7942982
   Xiong WJ, 2019, COMPUT SECUR, V84, P53, DOI 10.1016/j.cose.2019.03.010
   Yaqoob I, 2017, COMPUT NETW, V129, P444, DOI 10.1016/j.comnet.2017.09.003
   Yasin A, 2018, INFORM SOFTWARE TECH, V95, P179, DOI 10.1016/j.infsof.2017.12.002
   Zhao R, 2017, COMPUT SECUR, V70, P634, DOI 10.1016/j.cose.2017.08.008
NR 69
TC 1
Z9 1
U1 3
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2024
VL 170
AR 107426
DI 10.1016/j.infsof.2024.107426
EA MAR 2024
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QY4I9
UT WOS:001224413000001
OA hybrid
DA 2024-08-05
ER

PT J
AU Roca, I
   Pastor, O
   Cetina, C
   Arcega, L
AF Roca, Isis
   Pastor, Oscar
   Cetina, Carlos
   Arcega, Lorena
TI Co-evolving scenarios and simulated players to locate bugs that arise
   from the interaction of software models of video games
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bug localization; Model interaction; Game software engineering; Search
   -based software engineering; Model -driven engineering
ID ALGORITHMS; TESTS
AB Context: Game Software Engineering (GSE) is a field that focuses on developing and maintaining the software part of video games. A key component of video game development is the utilization of game engines, with many engines using software models to capture various aspects of the game. Objective: A challenge that GSE faces is the localization of bugs, mainly when working with large and intricated software models. Additionally, the interaction between software models (i.e. bosses, enemies, or environmental elements) during gameplay is often a significant source of bugs. In response to this challenge, we propose a co-evolution approach for bug localization in the software models of video games, called CoEBA. Methods: The CoEBA approach leverages Search-Based Software Engineering (SBSE) techniques to locate bugs in software models while considering their interactions. We conducted an evaluation in which we applied our approach to a commercial video game, Kromaia. We compared our approach with a state-of-the-art baseline approach that relied on the bug localization approach used by Kromaia's developers and a random search used as a sanity check. Results: Our co-evolution approach outperforms the baseline approach in precision, recall, and F-measure. In addition, to provide evidence of the significance of our results, we conducted a statistical analysis. that shows significant differences in precision and recall values. Conclusion: The proposed approach, CoEBA, which considers the interaction between software models, can identify and locate bugs that other bug localization approaches may have overlooked.
C1 [Roca, Isis; Cetina, Carlos; Arcega, Lorena] Univ San Jorge, SVIT Res Grp, Zaragoza, Spain.
   [Roca, Isis; Pastor, Oscar] Univ Politecn Valencia, PROS Res Ctr, Valencia, Spain.
C3 Universidad San Jorge; Universitat Politecnica de Valencia
RP Roca, I (corresponding author), Univ San Jorge, SVIT Res Grp, Zaragoza, Spain.
EM iroca@usj.es; opastor@pros.upv.es; ccetina@usj.es; larcega@usj.es
RI Pastor Lopez, Oscar/S-4216-2016; Cetina, Carlos/P-8682-2017
OI Pastor Lopez, Oscar/0000-0002-1320-8471; Cetina,
   Carlos/0000-0001-8542-5515; ROCA, ISIS/0000-0002-6232-812X; Arcega,
   Lorena/0000-0002-2464-8894
FU Spanish Ministry of Science and Innovation under the Excellence Network
   AI4Software [Red2022- 134647-T]; Ministry of Economy and Competitiveness
   (MINECO) through the Spanish National R+D+i Plan; ERDF funds under the
   Project VARIATIVA [PID2021- 28695OBI00]; Gobierno de Aragon (Spain)
   [S05_20D]
FX This work was supported in part by the Spanish Ministry of Science and
   Innovation under the Excellence Network AI4Software (Red2022- 134647-T)
   , in part by the Ministry of Economy and Competitiveness (MINECO)
   through the Spanish National R+D+i Plan and ERDF funds under the Project
   VARIATIVA under Grant PID2021- 28695OBI00, and in part by the Gobierno
   de Aragon (Spain) (Research Group S05_20D) .
CR Affenzeller M, 2009, NUMER INSIGHT, P1, DOI 10.1201/9781420011326
   Albaghajati A, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111261
   Ampatzoglou A, 2010, INFORM SOFTWARE TECH, V52, P888, DOI 10.1016/j.infsof.2010.05.004
   Arcega L, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3472616
   Arcega L, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P90, DOI 10.1145/3239372.3239392
   Arcega L, 2019, SOFTW SYST MODEL, V18, P3551, DOI 10.1007/s10270-019-00727-y
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Ariyurek S, 2021, IEEE T GAMES, V13, P50, DOI 10.1109/TG.2019.2947597
   Ariyurek S, 2020, IEEE CONF COMPU INTE, P25, DOI 10.1109/CoG47356.2020.9231670
   Barros Mrciode Oliveira., 2011, RELATE DIA, V5
   Blasco D, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110804
   Boussaa Mohamed, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P50, DOI 10.1007/978-3-642-39742-4_6
   Cardona AB, 2013, 2013 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P1403
   Casamayor R, 2022, PROCEEDINGS OF THE 25TH INTERNATIONAL ACM/IEEE CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, MODELS 2022, P356, DOI 10.1145/3550355.3552440
   Cohen J., 1992, Current Directions in Psychological Science, V1, P98, DOI DOI 10.1111/1467-8721.EP10768783
   Conover WJ, 1999, PRACTICAL NONPARAMET
   Crytek, 2002, CRYENGINE | the complete solution for next generation game development by crytek
   Elfeky EZ, 2021, IEEE ACCESS, V9, P136647, DOI 10.1109/ACCESS.2021.3115768
   Games E., 1998, Unreal engine: The most powerful real-time 3D creation tool
   García S, 2010, INFORM SCIENCES, V180, P2044, DOI 10.1016/j.ins.2009.12.010
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Ishibuchi H, 2006, IEEE C EVOL COMPUTAT, P1128
   Khorram Faezeh, 2022, SLE 2022: Proceedings of the 15th ACM SIGPLAN International Conference on Software Language Engineering, P235, DOI 10.1145/3567512.3567532
   Antonio LM, 2018, IEEE T EVOLUT COMPUT, V22, P851, DOI 10.1109/TEVC.2017.2767023
   Panichella A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P314, DOI 10.1109/SANER.2016.97
   Pascarella L, 2018, IEEE WORK CONF MIN S, P392, DOI [10.1145/3196398.3196423, 10.1145/3196398.3196418]
   Pfau J, 2017, EXTENDED ABSTRACTS PUBLICATION OF THE ANNUAL SYMPOSIUM ON COMPUTER-HUMAN INTERACTION IN PLAY (CHI PLAY'17 EXTENDED ABSTRACTS), P153, DOI 10.1145/3130859.3131439
   Politowski C, 2022, 2022 IEEE/ACM 6TH INTERNATIONAL WORKSHOP ON GAMES AND SOFTWARE ENGINEERING (GAS 2022), P37, DOI 10.1145/3524494.3527627
   Shirzadehha-Jimahmood S, 2022, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON AUTOMATING TEST CASE DESIGN, SELECTION AND EVALUATION, A-TEST 2022, P45, DOI 10.1145/3548659.3561309
   U. Technologies, 2005, Unity real-time development platform | 3D, 2D VR & AR engine
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Zhu M, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3365000
NR 34
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2024
VL 169
AR 107412
DI 10.1016/j.infsof.2024.107412
EA FEB 2024
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KO4I2
UT WOS:001180890200001
OA hybrid
DA 2024-08-05
ER

PT J
AU Ferrao, SER
   Silva, GRS
   Canedo, ED
   Mendes, FF
AF Ferrao, Sammara Ellen Renner
   Silva, Geovana Ramos Sousa
   Canedo, Edna Dias
   Mendes, Fabiana Freitas
TI Towards a taxonomy of privacy requirements based on the LGPD and ISO/IEC
   29100
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Privacy requirements elicitation; Taxonomy; LGPD; ISO/IEC2900;
   Compliance
ID TROPOS
AB Context: Ensuring compliance with current data privacy legislation poses a significant challenge for software development teams, demanding adaptations to processes in order to align with legal requirements. bjective: This study proposes a comprehensive taxonomy of privacy requirements, drawing from the Brazilian General Data Protection Law (LGPD) and ISO/IEC 29100. The aim is to assist software development teams in navigating the complexities of legal compliance. Method: To define the research gap, we conducted a systematic literature review (SLR) initially, identifying existing taxonomies of privacy requirements. Subsequently, we applied the Goal-Based Requirements Analysis Method (GBRAM) to extract privacy requirements from LGPD and ISO/IEC 29000. Finally, we implemented the proposed taxonomy in the privacy policies of Brazil's three largest banks. Results: The taxonomy comprises 129 requirements, categorized into 10 distinct groups across 5 contexts. In applying the taxonomy to ISO/IEC 29100, analysis of 63 statements for GDPR+ISO/IEC 29100 yielded 33 requirements, whereas for LGPD+ISO/IEC 29100, 58 statements resulted in 57 requirements. Application of the taxonomy revealed adherence percentages ranging from 40% to 71% concerning the evaluated solutions. Conclusions: The outcomes strongly suggest that major corporations are yet to achieve full LGPD compliance. We posit that the proposed taxonomy offers a valuable industry tool for validating LGPD compliance within implemented systems, as exemplified by our successful use case with Brazilian banks.
C1 [Ferrao, Sammara Ellen Renner; Canedo, Edna Dias] Univ Brasilia UnB, Technol Coll, Elect Engn Dept ENE, POB 4466, Brasilia, DF, Brazil.
   [Silva, Geovana Ramos Sousa; Canedo, Edna Dias; Mendes, Fabiana Freitas] Univ Brasilia UnB, Dept Comp Sci, Brasilia, DF, Brazil.
C3 Universidade de Brasilia; Universidade de Brasilia
RP Canedo, ED (corresponding author), Univ Brasilia UnB, Technol Coll, Elect Engn Dept ENE, POB 4466, Brasilia, DF, Brazil.; Canedo, ED (corresponding author), Univ Brasilia UnB, Dept Comp Sci, Brasilia, DF, Brazil.
EM ednacanedo@unb.br
RI Canedo, Edna Dias/AGR-0318-2022; Canedo, Edna Dias/D-5674-2015
OI Canedo, Edna Dias/0000-0002-2159-339X; Canedo, Edna
   Dias/0000-0002-2159-339X; Silva, Geovana/0000-0002-0304-0804; Mendes,
   Fabiana/0000-0002-1724-2044
FU Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior - Brasil
   (CAPES) [001]
FX This study was financed in part by the Coordenacao de Aperfeicoamento de
   Pessoal de Nivel Superior - Brasil (CAPES) - Finance Code 001.
CR Abdelmaboud A, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21175718
   Aberkane AJ, 2021, IEEE ACCESS, V9, P66542, DOI 10.1109/ACCESS.2021.3076921
   Ahmed AIA, 2019, IEEE ACCESS, V7, P155472, DOI 10.1109/ACCESS.2019.2948027
   Alhirabi N, 2021, ACM T INTERNET THING, V2, DOI 10.1145/3437537
   Alqassem I, 2014, IN C IND ENG ENG MAN, P1244, DOI 10.1109/IEEM.2014.7058837
   Ameller D., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P41, DOI 10.1109/RE.2012.6345838
   ANPD, 2021, ANPD esta apurando no caso do vazamento de dados de mais de 220 milhoes de pessoas
   ANPPD, 2021, Portal das violacoes-LGPD
   Ansari MTJ, 2021, ARAB J SCI ENG, V46, P8287, DOI 10.1007/s13369-021-05476-z
   Anthonysamy P, 2017, PROC INT CONF SOFTW, P13, DOI 10.1109/ICSE-SEIS.2017.3
   Antón AI, 2004, REQUIR ENG, V9, P169, DOI 10.1007/s00766-003-0183-z
   Anton AI, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P136, DOI 10.1109/ICRE.1996.491438
   Antón AI, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P23, DOI 10.1109/ICRE.2002.1048502
   Ayala-Rivera V, 2018, INT REQUIR ENG CONF, P136, DOI 10.1109/RE.2018.00023
   Azad Sasha, 2021, Proceedings of the ACM on Human-Computer Interaction, V5, DOI 10.1145/3474672
   Barker K, 2009, LECT NOTES COMPUT SC, V5588, P42, DOI 10.1007/978-3-642-02843-4_7
   Behutiye W, 2017, LECT NOTES COMPUT SC, V10611, P515, DOI 10.1007/978-3-319-69926-4_41
   Belani H., 2012, 2012 First International Workshop on Usability and Accessibility Focused Requirements Engineering (UsARE), P36, DOI 10.1109/UsARE.2012.6226789
   Bhatia J, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2907942
   Bolchini D, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P127
   Borg A., 2003, P 3 C SOFTWARE ENG R, P8
   Brito F, 2017, Jornadas De Atualizacao Em Informatica, P40
   Calderon M, 2007, Rev. Avances en Sistemas e Inform., V4, P44
   Canedo ED, 2022, REQUIR ENG, V27, P545, DOI 10.1007/s00766-022-00391-7
   Canedo ED, 2020, ENTROPY-SWITZ, V22, DOI 10.3390/e22040429
   Cao L, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.1
   Castro J, 2002, INFORM SYST, V27, P365, DOI 10.1016/S0306-4379(02)00012-1
   Central B., 2020, Resolucao conjunta, P24
   Chang JL, 2009, ICEBE 2009: IEEE INTERNATIONAL CONFERENCE ON E-BUSINESS ENGINEERING, PROCEEDINGS, P417, DOI 10.1109/ICEBE.2009.65
   Cheikhi L., 2006, 2006 IEEE International Symposium on Industrial Electronics, P3246, DOI 10.1109/ISIE.2006.296137
   Chen B., 2013, P INT C INFORM ENG A, P633
   Christel M.G., 1992, Issues in requirements elicitation
   Christian T, 2010, Tech. Rep. CMU/SEI-2010-TN-027
   da Republica P., 2014, Lei n 12.965, marco civil da internet
   De Lucia Andrea, 2010, Journal of Emerging Technologies in Web Intelligence, V2, P212, DOI 10.4304/jetwi.2.3.212-220
   Directive E.U, 1995, Offic. J. EC, V23, P31
   E. Parliament C.o. European Union, 2016, General data protection regulation (GDPR), P88
   EBC, 2021, Sites e aplicativo do Ministerio da Saude sofrem ataque cibernetico
   EBC, 2021, Procon de SP notifica empresas de telefonia sobre vazamentos de dados
   Eckhardt J, 2016, PROC INT CONF SOFTW, P832, DOI 10.1145/2884781.2884788
   European Commission, 2021, Guidelines on the application and setting of administrative fines
   Exame, 2021, Maiores bancos-maiores e melhores
   Ferrao Sammara Ellen Renner, 2023, Zenodo, DOI 10.5281/ZENODO.6590218
   Ferrao SER, 2021, INFORMATION, V12, DOI 10.3390/info12040168
   Finkelstein M., 2020, Revista de Direito Brasileira, V23, P284
   Firesmith D., 2004, J OBJECT TECHNOLOGY, V3, P61, DOI DOI 10.5381/JOT.2004.3.1.C6
   Firesmith D.G, 2003, P 11 INT IEEE C REQU, V3, P507
   Gharib M, 2016, INT REQUIR ENG CONF, P256, DOI 10.1109/RE.2016.13
   Glaser B. G., 1967, The Discovery of Grounded Theory: Strategies for Qualitative Research
   Sotelo KIG, 2018, IFAC PAPERSONLINE, V51, P1573, DOI 10.1016/j.ifacol.2018.08.272
   Gordieiev O., 2020, Int. J. Comput., V19, P656, DOI [10.47839/ijc.19.4.2001, DOI 10.47839/IJC.19.4.2001]
   Guzmán L, 2017, LECT NOTES COMPUT SC, V10153, P167, DOI 10.1007/978-3-319-54045-0_12
   Hadar I, 2018, EMPIR SOFTW ENG, V23, P259, DOI 10.1007/s10664-017-9517-1
   Hernandez U. I., 2010, 2010 Fifth International Conference on Digital Information Management (ICDIM 2010), P367, DOI 10.1109/ICDIM.2010.5664661
   ISO/IEC, 2011, ISO/IEC 29100:2011 information technology-security techniques-Privacy framework
   Jrjens J., 2010, Secure Systems Development with UML
   Kalloniatis C, 2008, REQUIR ENG, V13, P241, DOI 10.1007/s00766-008-0067-3
   Kanwal T, 2021, CLUSTER COMPUT, V24, P293, DOI 10.1007/s10586-020-03106-1
   Kaspary A, 2021, O Verbo Na Linguagem JuriDica: Acepcoes E Regimes
   Kitchenham B., 2007, GUIDELINES PERFORMIN, P1, DOI DOI 10.1145/1134285.1134500
   La Rjaibi N, 2015, PROCEDIA COMPUT SCI, V62, P213, DOI 10.1016/j.procs.2015.08.442
   Lauenroth K, 2017, INT REQUIR ENG CONF, P273, DOI 10.1109/RE.2017.57
   Lehnert S., 2011, PROC 12 INT WORKSHOP, P41, DOI DOI 10.1145/2024445.2024454
   MacRuairi Ronan, 2008, 2008 Second International Conference on Sensor Technologies and Applications (SENSORCOMM), P209, DOI 10.1109/SENSORCOMM.2008.73
   Maia Peixoto M., 2021, Ph.D. thesis, P41
   Marques B., 2021, ANAIS WER21 WORKSHOP, P1
   Massey Aaron K., 2008, 2008 Requirements Engineering and Law. RELAW'08, P1, DOI 10.1109/RELAW.2008.1
   Mead N.R., 2005, Software Engineering for Secure Systems (SESS), P1, DOI 10.1145/1082983.1083214
   Meis R, 2017, INFORMATION, V8, DOI 10.3390/info8010030
   Meis R, 2016, LECT NOTES COMPUT SC, V9830, P79, DOI 10.1007/978-3-319-44341-6_6
   Meis R, 2015, LECT NOTES COMPUT SC, V9264, P195, DOI 10.1007/978-3-319-22906-5_15
   Mouratidis H, 2007, INT J SOFTW ENG KNOW, V17, P285, DOI 10.1142/S0218194007003240
   N.C. da Republica, 2018, NARTIONAL C, P1
   Nickerson RC, 2013, EUR J INFORM SYST, V22, P336, DOI 10.1057/ejis.2012.26
   Pacheco C, 2018, IET SOFTW, V12, P365, DOI 10.1049/iet-sen.2017.0144
   Paech B, 2004, P 10 INT WORKING C R, P14
   Parker D.B, 1998, Computer Security Handbook, P512
   Peixoto M., 2020, CEUR WORKSHOP P, V2584, P6
   Rzepka W. E., 1989, Proceedings of the Twenty-Second Annual Hawaii International Conference on System Sciences. Vol.II: Software Track (IEEE Cat. No.89TH0243-6), P339, DOI 10.1109/HICSS.1989.48010
   Sangaroonsilp P, 2023, INFORM SOFTWARE TECH, V157, DOI 10.1016/j.infsof.2023.107162
   Schreiber A, 2020, Data Protection in the Internet, P45, DOI [10.1007/978-3-030-28049-9_2, DOI 10.1007/978-3-030-28049-9_2]
   Shaikh MA, 2001, IEMC'01: CHANGE MANAGEMENT AND THE NEW INDUSTRIAL REVOLUTION, PROCEEDINGS, P317, DOI 10.1109/IEMC.2001.960550
   Siegfried N, 2022, J ENTERP INF MANAG, V35, P1454, DOI 10.1108/JEIM-06-2018-0140
   Skinner G., 2006, Information Management & Computer Security, V14, P382, DOI 10.1108/09685220610690835
   Svensson RB, 2009, LECT NOTES COMPUT SC, V5512, P218, DOI 10.1007/978-3-642-02050-6_19
   Tang Y, 2021, ACM T COMPUT EDUC, V21, DOI 10.1145/3458038
   Tikkinen-Piri C, 2018, COMPUT LAW SECUR REV, V34, P134, DOI 10.1016/j.clsr.2017.05.015
   UNCTAD, 2020, Data protection and privacy legislation worldwide
   Webster I., 2005, WER, V5, P112
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Zafar F, 2020, ELECTRONICS-SWITZ, V9, DOI 10.3390/electronics9111776
   Zannone N., 2007, Ph.D. thesis
NR 92
TC 0
Z9 0
U1 4
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2024
VL 168
AR 107396
DI 10.1016/j.infsof.2024.107396
EA JAN 2024
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IE2U4
UT WOS:001164593600001
DA 2024-08-05
ER

PT J
AU Menzies, T
AF Menzies, Tim
TI A brief note, with thanks, on the contributions of Guenther Ruhe
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE In memoriam
AB Someone once told me that the best we can hope for as academics is to be a footnote in some as -yet -unwritten textbook. Guenther Ruhe's footnote will surely be very large.
C1 [Menzies, Tim] North Carolina State Univ, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Menzies, T (corresponding author), North Carolina State Univ, Raleigh, NC 27695 USA.
EM timm@ieee.org
OI Menzies, Tim/0000-0002-5040-3196
NR 0
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2024
VL 173
AR 107486
DI 10.1016/j.infsof.2024.107486
EA MAY 2024
PG 1
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UL6G5
UT WOS:001248247400001
DA 2024-08-05
ER

PT J
AU Nguyen, TT
   Vo, HD
AF Nguyen, Thu-Trang
   Vo, Hieu Dinh
TI Context-based statement-level vulnerability localization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Vulnerable statement; Vulnerability detection; Vulnerability
   localization; Context representation; COSTA
ID SOFTWARE
AB Context: The number of attacks exploring software vulnerabilities has dramatically increased, which has caused various severe damages. Thus, early and accurately detecting vulnerabilities becomes essential to guarantee software quality and prevent the systems from malicious attacks. Multiple automated vulnerability detection approaches have been proposed and obtained promising results. However, most studies detect vulnerabilities at a coarse -grained, i.e., file or method level. Thus, developers still have to spend significant investigation efforts on localizing vulnerable statements. Objective: In this paper, we introduce COSTA, a novel context -based approach to localize vulnerable statements. Method: In particular, given a vulnerable function, COSTA identifies vulnerable statements based on their suspiciousness scores. Specifically, the suspiciousness of each statement is measured according to its semantics captured by four contexts, including operation context, dependence context, surrounding context, and vulnerability type. Results: Our experimental results on a large vulnerability dataset show that COSTA outperforms the stateof-the-art approaches up to 96% in F1 -score and 167% in Accuracy. COSTA also surpasses these approaches up to two times in Top -1 Accuracy. Especially, COSTA obtains about 80% at Top -3 Recall. In other words, developers can find about 80% of the vulnerable statements by investigating only three first -ranked statements in each function. Conclusion: COSTA effectively addresses the challenge of statement -level vulnerability localization by leveraging multiple contextual features. Our experimental results show that COSTA outperforms existing state-ofthe-art approaches. With the ability to accurately and efficiently identify vulnerable statements, developers can better allocate their investigation efforts, reduce the risk of potential security threats, and ensure software quality and security in real -world applications.
C1 [Nguyen, Thu-Trang; Vo, Hieu Dinh] VNU Univ Engn & Technol, Fac Informat Technol, Hanoi, Vietnam.
C3 Vietnam National University Hanoi
RP Vo, HD (corresponding author), VNU Univ Engn & Technol, Fac Informat Technol, Hanoi, Vietnam.
EM trang.nguyen@vnu.edu.vn; hieuvd@vnu.edu.vn
OI Vo, Hieu/0000-0002-9407-1971
FU Development Foundation of Vietnam National University, Hanoi; 
   [VNU.2021.NCS.09]
FX Nguyen Thu Trang, ID VNU.2021.NCS.09, thanks The Development Foundation
   of Vietnam National University, Hanoi for sponsoring this research.
CR American Information Technology Laboratory, National Vulnerability Database
   [Anonymous], Microsoft exchange flaw: Attacks surge after code published
   [Anonymous], 2010, P 19 INT S SOFTW TES, DOI [10.1145/1831708.1831723, DOI 10.1145/1831708.1831723]
   [Anonymous], CODESONAR
   [Anonymous], FLAWFINDER
   [Anonymous], UNDERSTANDING IMPACT
   Cao SC, 2021, INFORM SOFTWARE TECH, V136, DOI 10.1016/j.infsof.2021.106576
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Chang RY, 2008, IEEE T SOFTWARE ENG, V34, P579, DOI 10.1109/TSE.2008.24
   ClangAnalyzer, About us
   Covidence, about us
   CVE Details, About us
   Ding YRB, 2022, EUR CON SFTWR MTNCE, P959, DOI 10.1109/SANER53432.2022.00114
   Ding ZS, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10118-5
   Du XN, 2019, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2019.00024
   Fan JH, 2020, IEEE WORK CONF MIN S, P508, DOI 10.1145/3379597.3387501
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Fu M, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P935, DOI 10.1145/3540250.3549098
   Fu M, 2022, IEEE WORK CONF MIN S, P608, DOI 10.1145/3524842.3528452
   Hanam Q., 2014, P 11 WORK C MIN SOFT, P152
   Hanif H, 2021, J NETW COMPUT APPL, V179, DOI 10.1016/j.jnca.2021.103009
   Hin D, 2022, IEEE WORK CONF MIN S, P596, DOI 10.1145/3524842.3527949
   Hu YT, 2023, PROCEEDINGS OF THE 32ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2023, P1407, DOI 10.1145/3597926.3598145
   James G, 2013, SPRINGER TEXTS STAT, V103, P1, DOI 10.1007/978-1-4614-7138-7_1
   Jang-Jaccard J, 2014, J COMPUT SYST SCI, V80, P973, DOI 10.1016/j.jcss.2014.02.005
   Joulin A, 2016, Arxiv, DOI arXiv:1612.03651
   Kanade A, 2020, PR MACH LEARN RES, V119
   Ngo KT, 2021, ASIA PAC SOFWR ENG, P327, DOI 10.1109/APSEC53868.2021.00040
   Koc U, 2017, MAPL'17: PROCEEDINGS OF THE 1ST ACM SIGPLAN INTERNATIONAL WORKSHOP ON MACHINE LEARNING AND PROGRAMMING LANGUAGES, P35, DOI 10.1145/3088525.3088675
   Lee S, 2019, IEEE INT CONF SOFTW, P391, DOI 10.1109/ICST.2019.00048
   Li Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P292, DOI 10.1145/3468264.3468597
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, Arxiv, DOI arXiv:1801.01681
   Lin GJ, 2021, IEEE T DEPEND SECURE, V18, P2469, DOI 10.1109/TDSC.2019.2954088
   Mikolov T., 2013, Efficient estimation of word representations in vector space
   Muntean P, 2021, IEEE T SOFTWARE ENG, V47, P2225, DOI 10.1109/TSE.2019.2946148
   Ni C, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P672, DOI 10.1145/3540250.3549165
   Okun V., 2013, NIST Special Publication, V500, P297, DOI DOI 10.6028/NIST.SP.500-297
   Parnin C., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis ISSTA, P199
   Pennington J., 2014, GLOVE GLOBAL VECTORS, DOI DOI 10.3115/V1/D14-1162
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Thu Trang Nguyen, 2019, 2019 IEEE/ACM Joint 7th International Workshop on Conducting Empirical Studies in Industry (CESI) and 6th International Workshop on Software Engineering Research and Industrial Practice (SER&IP). Proceedings, P41, DOI 10.1109/CESSER-IP.2019.00015
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Zheng YH, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P111, DOI 10.1109/ICSE-SEIP52600.2021.00020
   Zhou YQ, 2019, ADV NEUR IN, V32
   Zhu TQ, 2020, FUTURE GENER COMP SY, V108, P1297, DOI 10.1016/j.future.2018.04.016
   Zou DQ, 2021, IEEE T DEPEND SECURE, V18, P2224, DOI 10.1109/TDSC.2019.2942930
NR 49
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2024
VL 169
AR 107406
DI 10.1016/j.infsof.2024.107406
EA FEB 2024
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JX8Z2
UT WOS:001176563400001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Mao, CY
   Chen, JF
   Yi, XR
   Wen, LL
AF Mao, Chengying
   Chen, Jifu
   Yi, Xiaorong
   Wen, Linlin
TI An empirical study on metamorphic testing for recommender systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Recommender system; Reliability; Metamorphic testing; Metamorphic
   relation; Test oracle problem
AB Context: Recommender systems are widely used in various fields because they can provide decision -making guidance to users facing an overwhelming set of choices. In previous studies, the accuracy of recommendations has been the focus and has significantly improved. However, the quality issues of these systems have been overlooked. In practical applications, the reliability of recommender systems plays an important role in their acceptance by users. Objective: This paper aims to develop a solution for performing metamorphic testing on recommender systems, and then to evaluate their reliability based on the test results. Methods: A metamorphic testing framework for recommender systems is first proposed to effectively alleviate the difficulty of the test oracle (i.e., the construction of the expected output of a program). Meanwhile, a set of specific metamorphic relations for recommender systems is also designed, and an empirical analysis is conducted using three open -source recommender libraries: LibRec, PREA, and Surprise. Results: The effectiveness of the proposed metamorphic testing solution is confirmed through the experiments, and the comparison analysis of the designed metamorphic relations and the three recommender libraries is also conducted, yielding the rankings of both the metamorphic relations and the program libraries, respectively. Conclusion: The study suggests that metamorphic testing is effective in automatically revealing the reliability problems in recommender systems, without requiring test oracles.
C1 [Mao, Chengying; Chen, Jifu; Yi, Xiaorong; Wen, Linlin] Jiangxi Univ Finance & Econ, Sch Software & IoT Engn, Nanchang 330013, Peoples R China.
C3 Jiangxi University of Finance & Economics
RP Mao, CY (corresponding author), Jiangxi Univ Finance & Econ, Sch Software & IoT Engn, Nanchang 330013, Peoples R China.
EM maochy@yeah.net; chenjifu1989@sina.com; 757927904@qq.com;
   wenll97@foxmail.com
FU National Natural Science Foundation of China [62172195]; Science
   Foundation of Jiangxi Educational Committee, China [GJJ180276]
FX <B>Acknowledgments</B> The authors would like to thank the anonymous
   reviewers for their insightful comments and Prof. Tsong Yueh Chen of
   Swinburne University of Technology in Australia for his valuable
   suggestions and comments on improving this paper. This work was
   supported in part by the National Natural Science Foundation of China
   (Grant No. 62172195) , the Science Foundation of Jiangxi Educational
   Committee, China (Grant No. GJJ180276) .
CR Adomavicius G, 2012, ACM T INFORM SYST, V30, DOI 10.1145/2382438.2382442
   Aggarwal C. C., 2016, Neighborhood-Based Collaborative Filtering, P29, DOI [DOI 10.1007/978-3-319-29659-3_2, 10.1007/978-3-319-29659-3_2]
   Arrieta A, 2022, 2022 IEEE/ACM 7TH INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2022), P42, DOI 10.1145/3524846.3527335
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bawden D, 2009, J INF SCI, V35, P180, DOI 10.1177/0165551508095781
   Ben Braiek H, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110542
   Bobadilla J, 2013, KNOWL-BASED SYST, V46, P109, DOI 10.1016/j.knosys.2013.03.012
   Bobadilla J, 2018, INFORM SCIENCES, V442, P145, DOI 10.1016/j.ins.2018.02.030
   Castells P, 2022, AI MAG, V43, P225, DOI 10.1002/aaai.12051
   Castells Pablo, 2022, Recommender systems handbook, P603, DOI DOI 10.1007/978-1-0716-2197-4_16
   Champiri ZD, 2019, KNOWL INF SYST, V61, P1147, DOI 10.1007/s10115-018-1324-5
   Chen CLP, 2014, INFORM SCIENCES, V275, P314, DOI 10.1016/j.ins.2014.01.015
   Chen L, 2021, T EMERG TELECOMMUN T, V32, DOI 10.1002/ett.3872
   Chen M., 2017, INT J PERFORMABILITY, V13, DOI [DOI 10.23940/IJPE.17.08.P7.12461256, 10.23940/ijpe.17.08.p7.12461256]
   Chen T.Y., 1998, Metamorphic testing: a new approach for generating next test cases
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chengying Mao, 2020, 2020 7th International Conference on Dependable Systems and Their Applications (DSA), P331, DOI 10.1109/DSA51864.2020.00060
   Chia PJ, 2022, COMPANION PROCEEDINGS OF THE WEB CONFERENCE 2022, WWW 2022 COMPANION, P99, DOI 10.1145/3487553.3524215
   Christakopoulou K, 2019, RECSYS 2019: 13TH ACM CONFERENCE ON RECOMMENDER SYSTEMS, P322, DOI 10.1145/3298689.3347031
   Coba L, 2022, IEEE COMPUT INTELL M, V17, P46, DOI 10.1109/MCI.2021.3129958
   Cosley D., 2002, Proceedings of the Twenty-eighth International Conference on Very Large Data Bases, P35
   Deldjoo Y, 2020, PROCEEDINGS OF THE 43RD INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '20), P951, DOI 10.1145/3397271.3401046
   Ding JH, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2017), P28, DOI 10.1109/MET.2017.2
   Felderer M., 2019, Security and Quality in Cyber-Physical Systems Engineering: With Forewords, P129
   Felfernig A, 2019, J INTELL INF SYST, V52, P285, DOI 10.1007/s10844-018-0530-7
   Fink G., 1997, Software Engineering Notes, V22, P74, DOI 10.1145/263244.263267
   Fontes Afonso, 2021, TORACLE 2021: Proceedings of the 1st International Workshop on Test Oracles, DOI 10.1145/3472675.3473974
   Godwin Marshall, 2003, BMC Med Res Methodol, V3, P28, DOI 10.1186/1471-2288-3-28
   Gunawardana A, 2009, J MACH LEARN RES, V10, P2935
   Guo G, 2015, PROC 23 C USER MODEL, P1
   Guo G, 2018, Recommender Systems Progress: Methods and Techniques, P249
   Herlocker J, 2002, INFORM RETRIEVAL, V5, P287, DOI 10.1023/A:1020443909834
   Herlocker JL, 2004, ACM T INFORM SYST, V22, P5, DOI 10.1145/963770.963772
   Hu YF, 2008, IEEE DATA MINING, P263, DOI 10.1109/ICDM.2008.22
   Hug N, 2020, J. Open Source Softw., V5, P1
   Jahangirova G, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P444, DOI 10.1145/3092703.3098235
   Jeunen O, 2019, RECSYS 2019: 13TH ACM CONFERENCE ON RECOMMENDER SYSTEMS, P596, DOI 10.1145/3298689.3347069
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jiang MY, 2022, INFORM SOFTWARE TECH, V150, DOI 10.1016/j.infsof.2022.106966
   Kanstrén T, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P589, DOI 10.1109/QRS-C.2017.107
   Khojamli H, 2021, EXPERT SYST APPL, V185, DOI 10.1016/j.eswa.2021.115482
   Knijnenburg B. P., 2015, Recommender systems handbook, P309, DOI [10.1007/978-1-4899-7637-69, DOI 10.1007/978-1-4899-7637-69, 10.1007/978-0-387-85820-3, DOI 10.1007/978-1-4899-7637-6_9]
   Koren Y, 2009, COMPUTER, V42, P30, DOI 10.1109/MC.2009.263
   Lee DD, 1999, NATURE, V401, P788, DOI 10.1038/44565
   Lee J, 2012, J MACH LEARN RES, V13, P2699
   Lee N, 2014, COMPUT SCI INF SYST, V11, P241, DOI 10.2298/CSIS130226006L
   Li B, 2016, ADV NEUR IN, V29
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Lu J, 2015, DECIS SUPPORT SYST, V74, P12, DOI 10.1016/j.dss.2015.03.008
   Manès VJM, 2021, IEEE T SOFTWARE ENG, V47, P2312, DOI 10.1109/TSE.2019.2946563
   Manouselis N, 2007, WORLD WIDE WEB, V10, P415, DOI 10.1007/s11280-007-0019-8
   Mehta B., 2008, Proceedings of the 31st annual international ACM SIGIR conference on Research and development in information retrieval, P75, DOI DOI 10.1145/1390334.1390350
   Melville P., 2017, Encyclopedia of Machine Learning and Data Mining, P1056, DOI [10.1007/978-1-4899-7687-1_964, DOI 10.1007/978-1-4899-7687-1_964]
   Mnih Andriy, 2007, ADV NEURAL INFORM PR, V20
   Mobasher B, 2007, ACM T INTERNET TECHN, V7, DOI 10.1145/1278366.1278372
   Najmani K., 2022, PROC 2022 INT C INTE, P1
   OMahony M., 2004, ACM T INTERNET TECHN, V4, P344, DOI [DOI 10.1145/1031114.1031116, 10.1145/1031114.1031116]
   Patel K, 2018, SOFTWARE QUAL J, V26, P1373, DOI 10.1007/s11219-017-9392-4
   Pezzè M, 2014, ADV COMPUT, V95, P1, DOI 10.1016/B978-0-12-800160-8.00001-2
   Pimenidis E, 2019, J INF SCI, V45, P387, DOI 10.1177/0165551518792213
   Polatidis N, 2022, LECT NOTES ARTIF INT, V13757, P623, DOI 10.1007/978-3-031-21743-2_50
   Pramod D, 2023, DATA TECHNOL APPL, V57, P32, DOI 10.1108/DTA-02-2022-0083
   Resnick P., 1994, Transcending Boundaries, CSCW '94. Proceedings of the Conference on Computer Supported Cooperative Work, P175, DOI 10.1145/192844.192905
   RODGERS JL, 1988, AM STAT, V42, P59, DOI 10.2307/2685263
   Salahirad A, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111518
   Sangwan RS, 2022, COMPUTER, V55, P101, DOI 10.1109/MC.2021.3132710
   Schroder G, 2012, JOINT PROC 2011 WORK, V811, P78
   Seca D, 2021, arXiv
   Segura S, 2020, IEEE SOFTWARE, V37, P46, DOI 10.1109/MS.2018.2875968
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Shriver D, 2019, AAAI CONF ARTIF INTE, P4934
   Tao C., 2016, PROC 28 INT C SOFTWA, P375
   Tsimpourlas F, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1521, DOI 10.1145/3412841.3442027
   Wang S., 2023, ACM Trans Intell Syst Technol, DOI [10.1145/3627826, DOI 10.1145/3627826]
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   Wong CL, 2021, 15TH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS 2021), P567, DOI 10.1145/3460231.3474608
   Wu ZW, 2022, NEURAL COMPUT APPL, V34, P3097, DOI 10.1007/s00521-021-06573-8
   Pham XH, 2013, LECT NOTES ARTIF INT, V8083, P72
   Yao SR, 2017, ADV NEUR IN, V30
   Zangerle E, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3556536
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang SA, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3285029
NR 83
TC 0
Z9 0
U1 4
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2024
VL 169
AR 107410
DI 10.1016/j.infsof.2024.107410
EA JAN 2024
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JV2N3
UT WOS:001175873000001
DA 2024-08-05
ER

PT J
AU Borges, GG
   de Souza, RCG
AF Borges, Giovana Giardini
   de Souza, Rogeria Cristiane Gratao
TI Skills development for software engineers: Systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Soft skills; Software engineer; Project-based learning; Systematic
   literature review
ID EDUCATION; EMPLOYABILITY
AB Context: A good software professional must have technical and non-technical skills, that is, hard and soft skills, to deal with the diverse challenges they will encounter throughout their career. To make this possible, such professional must develop these abilities from the undergraduate. Objective: This research aims to identify the necessary soft skills for future Software Engineers and the teaching methodologies that contribute to developing such skills from the undergraduate, keeping the students motivated. In addition, this study proposes a framework to help educators conduct a teaching-learning process that includes hard and soft skills during the undergraduate of future Software Engineers. Methodology: A Systematic Literature Review was performed on six databases, resulting in 56 selected articles identifying the soft skills and the teaching methodologies desired to train Software Engineers. These were the base for the proposed framework. Results: We proposed a grouping of soft skills found in the literature totaling 33 soft skills. Furthermore, since were found, in the literature, definitions for only 23, this study also defined the other ten soft skills addressed. Regarding the most used and indicated methodologies for developing soft skills in undergraduate students, it was possible to organize them by the principal and auxiliary methodologies. Finally, a framework was proposed to assist in the development of hard and soft skills in undergraduate students, focused on Software Engineering, the FraSSD - Framework for Soft Skills Development. Conclusion: The proposed framework can contribute to educators' critical thinking about applying the most effective teaching methodologies for developing hard and soft skills in an undergraduate class, improving the teaching-learning process. This study also evidences the most relevant soft skills for Software Engineers, encouraging the constant search to improve their soft skills aligned with their hard skills since graduation.
C1 [Borges, Giovana Giardini; de Souza, Rogeria Cristiane Gratao] Sao Paulo State Univ UNESP, Physiol, Sao Jose Do Rio Preto, SP, Brazil.
C3 Universidade Estadual Paulista
RP Borges, GG (corresponding author), Sao Paulo State Univ UNESP, Physiol, Sao Jose Do Rio Preto, SP, Brazil.
EM giovana.giardini@unesp.br
OI Giardini Borges, Giovana/0000-0002-5857-8724
CR Ahmed F, 2012, IT PROF, V14, P44, DOI 10.1109/MITP.2012.7
   Al Mulhim EN, 2020, INT J EMERG TECHNOL, V15, P157, DOI 10.3991/ijet.v15i10.12913
   Alves I, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: JOINT TRACK ON SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-JSEET 2021), P144, DOI 10.1109/ICSE-SEET52601.2021.00024
   Andersson C, 2018, IEEE GLOB ENG EDUC C, P191, DOI 10.1109/EDUCON.2018.8363227
   Angeli Lorenzo, 2020, SIGCSE '20: Proceedings of the 51st Technical Symposium on Computer Science Education, P1255, DOI 10.1145/3328778.3366910
   Assyne N, 2022, J SYST SOFTWARE, V185, DOI 10.1016/j.jss.2021.111183
   Barros FLF, 2018, PROC FRONT EDUC CONF
   Brito IS, 2020, IEEE GLOB ENG EDUC C, P1614, DOI [10.1109/EDUCON45650.2020.9125297, 10.1109/educon45650.2020.9125297]
   Byrne ZS, 2020, RES SCI EDUC, V50, P1417, DOI 10.1007/s11165-018-9738-3
   Caeiro-Rodríguez M, 2021, IEEE ACCESS, V9, P29222, DOI 10.1109/ACCESS.2021.3059516
   Capretz LF, 2017, INFORM SOFTWARE TECH, V92, P92, DOI 10.1016/j.infsof.2017.07.011
   Carter L, 2011, SIGCSE 11: PROCEEDINGS OF THE 42ND ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P517
   Castro Ronney, 2017, AN 13 S BRAS SIST IN, P535
   Bastarrica MC, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING TRACK (ICSE-SEET 2017), P137, DOI 10.1109/ICSE-SEET.2017.15
   Chen CH, 2019, EDUC RES REV-NETH, V26, P71, DOI 10.1016/j.edurev.2018.11.001
   Davis J, 2019, SIGCSE '19: PROCEEDINGS OF THE 50TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P29, DOI 10.1145/3287324.3287508
   Deep S, 2019, HIGH EDUC SKILL WORK, V9, P662, DOI 10.1108/HESWBL-07-2018-0072
   Felizardo K.R., 2017, Revisao Sistematica Da Literatura Em Engenharia De software: Teoria e Pratica
   Fernandes F.G., 2020, Rev. Temas em Educ., V29
   Fioravanti M.L., 2020, P 2020 IEEE FRONT ED, P1
   Freitas A., 2018, P 2018 3 INT C PORT, P1
   Galster M, 2018, PROC INT CONF SOFTW, P5, DOI 10.1145/3183377.3183384
   Garcia I, 2020, COMPUT APPL ENG EDUC, V28, P1327, DOI 10.1002/cae.22304
   Garousi V, 2019, J SYST SOFTWARE, V156, P65, DOI 10.1016/j.jss.2019.06.044
   Giacaman N, 2018, J PARALLEL DISTR COM, V118, P247, DOI 10.1016/j.jpdc.2018.02.028
   Gonzalez-Morales D., 2011, Proceedings of Global Engineering Education Conference, 2011, P630
   Groeneveld W, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P1, DOI 10.1109/ICSE-SEIS52602.2021.00009
   Hazzan O, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: JOINT TRACK ON SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-JSEET 2021), P105, DOI 10.1109/ICSE-SEET52601.2021.00020
   Huffman C.L., 2019, J. Appl. Learn. High. Educ., P41
   Ibrahim Noraini, 2014, 2014 8th Malaysian Software Engineering Conference (MySEC), P359, DOI 10.1109/MySec.2014.6986044
   Jayden K, 2020, CONF SOFTW ENG EDUC, P36, DOI 10.1109/cseet49119.2020.9206201
   Khodeir LM, 2020, AIN SHAMS ENG J, V11, P811, DOI 10.1016/j.asej.2019.11.006
   Kokotsaki D, 2016, IMPROV SCH, V19, P267, DOI 10.1177/1365480216659733
   Konings D, 2020, PR IEEE INT CONF TEA, P157, DOI [10.1109/tale48869.2020.9368493, 10.1109/TALE48869.2020.9368493]
   Kulkarni S., 2020, PROCEDIA COMPUTER SC, V172, P559, DOI [10.1016/j.procs.2020.05.068, DOI 10.1016/J.PROCS.2020.05.068]
   Kuppuswamy Ramesh, 2020, Procedia CIRP, V91, P565, DOI 10.1016/j.procir.2020.02.215
   Lyz N., 2020, P 2020 5 INT C INF T, P1
   Magano J, 2021, IEEE REV IBEROAM TEC, V16, P45, DOI 10.1109/RITA.2021.3052496
   Matteson ML, 2016, PORTAL-LIBR ACAD, V16, P71, DOI 10.1353/pla.2016.0009
   Matturro G, 2019, J UNIVERS COMPUT SCI, V25, P16
   Maxim BR, 2019, PROC FRONT EDUC CONF, DOI 10.1109/fie43999.2019.9028644
   Maxim BR, 2017, PROC FRONT EDUC CONF
   Milczarski Piotr, 2021, SIGCSE '21: Proceedings of the 52nd ACM Technical Symposium on Computer Science Education, P583, DOI 10.1145/3408877.3432522
   Nicola S, 2018, INT CONF PORTUG SOC
   Panthalookaran V, 2018, IEEE GLOB ENG EDUC C, P931, DOI 10.1109/EDUCON.2018.8363330
   Pawar R., 2020, Procedia Comput. Sci., V172, P314
   Pérez B, 2020, SIGCSE 2020: PROCEEDINGS OF THE 51ST ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P309, DOI 10.1145/3328778.3366891
   Pinto FD, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P299, DOI 10.1145/3131151.3131186
   Ramos CS, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P289, DOI 10.1145/3266237.3266253
   Rhodes A, 2018, HORIZON, V26, P79, DOI 10.1108/OTH-08-2017-0072
   Ribeiro AL, 2018, PROC FRONT EDUC CONF
   Cukierman UR, 2014, 2014 INTERNATIONAL CONFERENCE ON INTERACTIVE COLLABORATIVE LEARNING (ICL), P237, DOI 10.1109/ICL.2014.7017776
   Souza MRD, 2018, INFORM SOFTWARE TECH, V95, P201, DOI 10.1016/j.infsof.2017.09.014
   Stray V, 2022, SOFTWARE QUAL J, V30, P455, DOI 10.1007/s11219-021-09561-2
   Taylor E., 2019, P 2019 3 INT C ED E, P140
   Valero MD, 2020, HIGH EDUC PEDAGOG, V5, P247, DOI 10.1080/23752696.2020.1816846
   van Laar E, 2017, COMPUT HUM BEHAV, V72, P577, DOI 10.1016/j.chb.2017.03.010
   Younis AA, 2021, J PARALLEL DISTR COM, V158, P151, DOI 10.1016/j.jpdc.2021.07.015
   Younis AA, 2019, IEEE SYM PARA DISTR, P304, DOI 10.1109/IPDPSW.2019.00059
   Zheng G., 2015, Proceedings of the 16th Annual Conference on Information Technology Education, P109, DOI [DOI 10.1145/2808006.2808041, 10.1145/2808006.2808041]
   Zmeev D.O., 2020, P 2020 IEEE 32 C SOF, P1
NR 61
TC 0
Z9 0
U1 14
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2024
VL 168
AR 107395
DI 10.1016/j.infsof.2023.107395
EA JAN 2024
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HF2X3
UT WOS:001158023800001
DA 2024-08-05
ER

PT J
AU Tan, JJ
   Wang, D
   Sun, JY
   Liu, ZX
   Li, XR
   Feng, Y
AF Tan, Jiajun
   Wang, Dong
   Sun, Jingyu
   Liu, Zixi
   Li, Xiaoruo
   Feng, Yang
TI Towards assessing the quality of knowledge graphs via differential
   testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Knowledge graph embedding; Differential testing; Quality evaluation
AB Knowledge graphs (KG) can aggregate data and make information resources easier to calculate and understand. With tremendous advancements in knowledge graphs, they have been incorporated into plenty of software systems to assist various tasks. However, while KGs determine the performance of downstream software systems, their quality is often measured by the accuracy of test data. Considering the limitation of accessible high-quality test data, an automated quality assessment technique could fundamentally improve the testing efficiency of KG-driven software systems and save plenty of manual labeling resources. In this paper, we propose an automated approach to quantify the quality of KGs via differential testing. It first constructs multiple Knowledge Graph Embedding Models (KGEM) and conducts head prediction tasks on models. Then, it can produce a differential score that reflects the quality of KGs by comparing the proximity of output results. To validate the effectiveness of this approach, we experiment with four open-sourced knowledge graphs. The experiment results show that our approach is capable of accurately evaluating the quality of KGs and producing reliable results on different datasets. Moreover, we compared our method with existing methods and achieved certain advantages. The potential usefulness of our approach sheds light on the development of various KG-driven software systems.
C1 [Tan, Jiajun; Sun, Jingyu; Liu, Zixi; Feng, Yang] Nanjing Univ, Nanjing, Peoples R China.
   [Wang, Dong; Li, Xiaoruo] Henan Univ, Kaifeng, Henan, Peoples R China.
C3 Nanjing University; Henan University
RP Feng, Y (corresponding author), Nanjing Univ, Nanjing, Peoples R China.; Wang, D (corresponding author), Henan Univ, Kaifeng, Henan, Peoples R China.
EM jjtan@smail.nju.edu.cn; juliawdd@henu.edu.cn;
   MF21320132@smail.nju.edu.cn; zxliu@smail.nju.edu.cn;
   juliawdd@henu.edu.cn; fengyang@nju.edu.cn
FU National Natural Science Foundation of China [62372225]
FX We would like to thank anonymous reviewers for their insight-ful and
   constructive comments. This project was partially funded by the National
   Natural Science Foundation of China under Grant Nos. 62372225.
CR Akoglu H, 2018, TURK J EMERG MED, V18, P91, DOI 10.1016/j.tjem.2018.08.001
   Ali M, 2021, J MACH LEARN RES, V22
   Asyrofi MH, 2020, PROC IEEE INT CONF S, P640, DOI 10.1109/ICSME46990.2020.00066
   Bao QM, 2020, PROCEEDINGS OF THE AUSTRALASIAN COMPUTER SCIENCE WEEK MULTICONFERENCE (ACSW 2020)
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bordes A., 2013, Advances in Neural Information Processing Systems, V26
   Cao ZS, 2022, AAAI CONF ARTIF INTE, P5521
   Chen CC, 2024, INT J MACH LEARN CYB, V15, P3513, DOI 10.1007/s13042-024-02106-6
   Chen C, 2023, ADV ENG INFORM, V55, DOI 10.1016/j.aei.2023.101900
   Chen XJ, 2020, EXPERT SYST APPL, V141, DOI 10.1016/j.eswa.2019.112948
   Chen Y., 2022, CLIN TRANSLATIONAL D, V2, pe29, DOI DOI 10.1002/CTD2.29
   Chen Z, 2020, IEEE ACCESS, V8, P192435, DOI 10.1109/ACCESS.2020.3030076
   Dai YF, 2020, ELECTRONICS-SWITZ, V9, DOI 10.3390/electronics9050750
   Dettmers T, 2018, AAAI CONF ARTIF INTE, P1811
   DIACONIS P, 1977, J ROY STAT SOC B MET, V39, P262, DOI 10.1111/j.2517-6161.1977.tb01624.x
   Dorsch R., 2023, P 2 INT WORKSH SEM I
   FIELLER EC, 1957, BIOMETRIKA, V44, P470, DOI 10.1093/biomet/44.3-4.470
   Gao JY, 2019, Arxiv, DOI arXiv:1907.09657
   Gao M, 2023, IEEE T KNOWL DATA EN, V35, P10281, DOI 10.1109/TKDE.2023.3251897
   Gulzar MA, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P71, DOI 10.1109/ICSE-SEIP.2019.00016
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Hoffart J, 2013, ARTIF INTELL, V194, P28, DOI 10.1016/j.artint.2012.06.001
   Pham HV, 2019, PROC INT CONF SOFTW, P1027, DOI 10.1109/ICSE.2019.00107
   Isaku E, 2024, Arxiv, DOI arXiv:2404.03664
   Kemp Charles, 2006, P NAT C ART INT, P381, DOI DOI 10.1145/1837026.1837061
   Khokhlov I, 2020, 2020 IEEE 6TH WORLD FORUM ON INTERNET OF THINGS (WF-IOT)
   Kim J., 2015, NLP DBPEDIA ISWC, P68
   Lehmann J., 2012, INT SEM WEB C, P312
   LENAT DB, 1995, COMMUN ACM, V38, P33, DOI 10.1145/219717.219745
   Li S., 2024, P IEEE ACM 46 INT C, P1
   Liu JC, 2024, ACM T INTEL SYST TEC, V15, DOI 10.1145/3635273
   [刘峤 Liu Qiao], 2016, [计算机研究与发展, Journal of Computer Research and Development], V53, P582
   Marchesin S., Efficient and Reliable Estimation of Knowledge Graph Accuracy
   McKeeman William M., 1998, Digit. Tech. J., V10, P100
   Miller E., 1998, D-lib Mag.
   MILLER G. A., 1998, WordNet: An electronic lexical database
   Mitchell T, 2015, AAAI CONF ARTIF INTE, P2302
   Ni P, 2024, INFORM SYST FRONT, V26, P137, DOI 10.1007/s10796-022-10295-0
   Nickel M., 2011, ICML, P809
   Nickel M, 2016, AAAI CONF ARTIF INTE, P1955
   Ojha P., 2017, P 2017 C EMP METH NA, P1741
   Paulheim H., 2012, Proceedings of the 2nd international conference on web intelligence, mining and semantics, P31
   Paulheim H, 2017, SEMANT WEB, V8, P489, DOI 10.3233/SW-160218
   Paulheim H, 2013, LECT NOTES COMPUT SC, V8218, P510, DOI 10.1007/978-3-642-41335-3_32
   Peifeng L., 2024, IEEE Trans. Ind. Inform.
   Petsios T, 2017, P IEEE S SECUR PRIV, P615, DOI 10.1109/SP.2017.27
   Qi YF, 2022, PROCEEDINGS OF THE 28TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, KDD 2022, P1368, DOI 10.1145/3534678.3539233
   Safavi T, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P8328
   Schlichtkrull A, 2022, Form Comp Aid Design, V3, P369, DOI 10.34727/2022/isbn.978-3-85448-053-2_44
   Shujun Huang, 2020, Journal of Physics: Conference Series, V1621, DOI 10.1088/1742-6596/1621/1/012010
   Siorpaes K, 2008, IEEE INTELL SYST, V23, P50, DOI 10.1109/MIS.2008.45
   Socher R., 2013, Advances in neural information processing systems, V26, P926
   Sotiropoulos T, 2021, PROC INT CONF SOFTW, P1535, DOI 10.1109/ICSE43902.2021.00137
   Suchanek Fabian M., 2007, WWW, DOI DOI 10.1145/1242572.1242667
   Toutanova D., 2015, P 3 WORKSH CONT VECT, P57, DOI [10.18653/V1/W15-4007, DOI 10.18653/V1/W15-4007]
   Waitelonis J, 2011, INTERACT TECHNOL SMA, V8, P236, DOI 10.1108/17415651111189478
   Wang Q, 2017, IEEE T KNOWL DATA EN, V29, P2724, DOI 10.1109/TKDE.2017.2754499
   Wang Z, 2014, AAAI CONF ARTIF INTE, P1112
   Webber W, 2010, ACM T INFORM SYST, V28, DOI 10.1145/1852102.1852106
   Wienand Dominik, 2014, The Semantic Web: Trends and Challenges. 11th International Conference (ESWC 2014). Proceedings: LNCS 8465, P504, DOI 10.1007/978-3-319-07443-6_34
   Xue BC, 2023, IEEE T KNOWL DATA EN, V35, P4969, DOI 10.1109/TKDE.2022.3150080
   Yang B., 2014, arXiv
   Yang J., 2022, P 29 INT C COMP LING, P2011
   Yang YH, 2023, PROCEEDINGS OF THE 29TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, KDD 2023, P3046, DOI 10.1145/3580305.3599400
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang S, 2019, ADV NEUR IN, V32
   Zhang XF, 2021, IEEE T RELIAB, V70, P1671, DOI 10.1109/TR.2021.3107165
   Zhao X., 2021, IEEE Trans. Neural Netw. Learn. Syst.
NR 68
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2024
VL 174
AR 107521
DI 10.1016/j.infsof.2024.107521
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YW9Q9
UT WOS:001271644700001
DA 2024-08-05
ER

PT J
AU Cheng, JX
   Chen, YZ
   Cao, YZ
   Wang, HP
AF Cheng, Jianxin
   Chen, Yizhou
   Cao, Yongzhi
   Wang, Hanpin
TI A vulnerability detection framework by focusing on critical execution
   paths
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Vulnerability detection; Software security; Code representation; Control
   flow graph; Deep learning
AB Context: Vulnerability detection is critical to ensure software security, and detecting vulnerabilities in smart contract code is currently gaining massive attention. Existing deep learning -based vulnerability detection methods represent the code as a code structure graph and eliminate vulnerability -irrelevant nodes. Then, they learn vulnerability -related code features from the simplified graph for vulnerability detection. However, this simplified graph struggles to represent relatively complete structural information of code, which may affect the performance of existing vulnerability detection methods. Objective: In this paper, we present a novel V ulnerability D etection framework based on C ritical E xecution P aths (VDCEP), which aims to improve smart contract vulnerability detection. Method: Firstly, given a code structure graph, we deconstruct it into multiple execution paths that reflect rich structural information of code. To reduce irrelevant code information, a path selection strategy is employed to identify critical execution paths that may contain vulnerable code information. Secondly, a feature extraction module is adopted to learn feature representations of critical paths. Finally, we feed all path feature representations into a classifier for vulnerability detection. Also, the feature weights of paths are provided to measure their importance in vulnerability detection. Results: We evaluate VDCEP on a large dataset with four types of smart contract vulnerabilities. Results show that VDCEP outperforms 14 representative vulnerability detection methods by 5.34%-60.88% in F1 -score. The ablation studies analyze the effects of our path selection strategy and feature extraction module on VDCEP. Moreover, VDCEP still outperforms ChatGPT by 34.46% in F1 -score. Conclusion: Compared to existing vulnerability detection methods, VDCEP is more effective in detecting smart contract vulnerabilities by utilizing critical execution paths. Besides, we can provide interpretable details about vulnerability detection by analyzing the path feature weights.
C1 [Cheng, Jianxin; Chen, Yizhou; Cao, Yongzhi; Wang, Hanpin] Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing, Peoples R China.
   [Cheng, Jianxin; Chen, Yizhou; Cao, Yongzhi; Wang, Hanpin] Peking Univ, Sch Comp Sci, Beijing, Peoples R China.
   [Cao, Yongzhi] Zhongguancun Lab, Beijing, Peoples R China.
   [Wang, Hanpin] Guangzhou Univ, Sch Comp Sci & Cyber Engn, Guangzhou, Peoples R China.
C3 Peking University; Peking University; Zhongguancun Laboratory; Guangzhou
   University
RP Cheng, JX (corresponding author), Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing, Peoples R China.; Cheng, JX (corresponding author), Peking Univ, Sch Comp Sci, Beijing, Peoples R China.
EM jianxin@stu.pku.edu.cn
FU National Key R&D Program of China [2021YFF1201102]; National Natural
   Science Foundation of China [62172016, 61932001]
FX <B>Acknowledgments</B> This work was supported by the National Key R&D
   Program of China under Grant 2021YFF1201102 and the National Natural
   Science Foundation of China under Grants 62172016 and 61932001.
CR Breidenbach M., 2017, A framework for bug hunting on the ethereum blockchain
   Cao SC, 2021, INFORM SOFTWARE TECH, V136, DOI 10.1016/j.infsof.2021.106576
   Chang YP, 2024, ACM T INTEL SYST TEC, V15, DOI 10.1145/3641289
   Chen M, 2020, PR MACH LEARN RES, V119
   Chu HT, 2023, INFORM SOFTWARE TECH, V159, DOI 10.1016/j.infsof.2023.107221
   Dong YK, 2023, INFORM SOFTWARE TECH, V158, DOI 10.1016/j.infsof.2023.107168
   Durieux T, 2020, PROC INT CONF SOFTW, P530, DOI 10.1145/3377811.3380364
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   Fu ML, 2019, IEEE ACCESS, V7, P147327, DOI 10.1109/ACCESS.2019.2947146
   Fu M, 2022, IEEE WORK CONF MIN S, P608, DOI 10.1145/3524842.3528452
   Huang JJ, 2021, IEEE T INF FOREN SEC, V16, P2144, DOI 10.1109/TIFS.2021.3050051
   Ji SY, 2023, INFORM SOFTWARE TECH, V159, DOI 10.1016/j.infsof.2023.107213
   Jie WQ, 2023, INFORM SCIENCES, V636, DOI 10.1016/j.ins.2023.03.132
   Tann WJW, 2019, Arxiv, DOI arXiv:1811.06632
   Liao ZQ, 2023, PROCEEDINGS OF THE 32ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2023, P980, DOI 10.1145/3597926.3598111
   Liao ZQ, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P752, DOI 10.1145/3533767.3534222
   Liu Z., 2021, P 30 INT JOINT C ART, P2751
   Lomio F, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111283
   Mamede C, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3559534
   Nguyen TD, 2020, PROC INT CONF SOFTW, P778, DOI 10.1145/3377811.3380334
   Nie X, 2023, PROCEEDINGS OF THE 32ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2023, P52, DOI 10.1145/3597926.3598037
   Qian Peng, 2023, WWW '23: Proceedings of the ACM Web Conference 2023, P2220, DOI 10.1145/3543507.3583367
   Romero A., 2018, INT C LEARN REPR, P2920, DOI DOI 10.48550/ARXIV.1710.10903
   Chakravarthy SRS, 2021, INT J IMAG SYST TECH, V31, P1861, DOI 10.1002/ima.22570
   Shen Y., 2023, INT C BLOCKCH TRUSTW, P45
   Shi CC, 2023, INFORM SOFTWARE TECH, V153, DOI 10.1016/j.infsof.2022.107065
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Torres CF, 2021, 2021 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P 2021), P103, DOI 10.1109/EuroSP51992.2021.00018
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Wang MK, 2023, J SYST SOFTWARE, V202, DOI 10.1016/j.jss.2023.111706
   Wen XC, 2023, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE56229.2023.00144
   Wen XC, 2023, PROC INT CONF SOFTW, P2275, DOI 10.1109/ICSE48619.2023.00191
   Wu HJ, 2021, PROC INT SYMP SOFTW, P378, DOI 10.1109/ISSRE52982.2021.00047
   Xia M, 2021, IEEE T IND INFORM, V17, P7050, DOI 10.1109/TII.2021.3056867
   Yang Z, 2023, ACM T SOFTW ENG METH, V32, DOI [10.1145/3534117, 10.11686/cyxb2022405]
   Yang Z, 2021, INT C PROGRAM COMPRE, P1, DOI 10.1109/ICPC52881.2021.00010
   Yu L, 2020, P INT COMP SOFTW APP, P768, DOI 10.1109/COMPSAC48688.2020.0-167
   Yu XX, 2021, IEEE IJCNN, DOI 10.1109/IJCNN52387.2021.9534324
   Zhang Fengji, 2022, Information and Software Technology, DOI 10.1016/j.infsof.2022.106922
   Zhang JL, 2022, LECT NOTES COMPUT SC, V13285, P66, DOI 10.1007/978-3-031-16815-4_5
   Zhang JW, 2023, IEEE T SOFTWARE ENG, V49, P4196, DOI 10.1109/TSE.2023.3286586
   Zhao J., 2020, INT C MACHINE LEARNI, P11365
   Zhu HJ, 2023, PROC INT SYMP SOFTW, P568, DOI 10.1109/ISSRE59848.2023.00024
   Zhuang Y, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3283
   Zou DQ, 2021, IEEE T DEPEND SECURE, V18, P2224, DOI 10.1109/TDSC.2019.2942930
NR 46
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2024
VL 174
AR 107517
DI 10.1016/j.infsof.2024.107517
EA JUN 2024
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XG8E4
UT WOS:001260613900001
DA 2024-08-05
ER

PT J
AU Cury, O
   Avelino, G
   Neto, PS
   Valente, MT
   Britto, R
AF Cury, Otavio
   Avelino, Guilherme
   Neto, Pedro Santos
   Valente, Marco Tulio
   Britto, Ricardo
TI Source code expert identification: Models and application
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Source code expertise; Machine learning; Truck Factor
AB Context: Identifying source code expertise is useful in several situations. Activities like bug fixing and helping newcomers are best performed by knowledgeable developers. Some studies have proposed repository -mining techniques to identify source code experts. However, there is a gap in understanding which variables are most related to code knowledge and how they can be used for identifying expertise. Objective: This study explores models of expertise identification and how these models can be used to improve a Truck Factor algorithm. Methods: First, we built an oracle with the knowledge of developers from software projects. Then, we use this oracle to analyze the correlation between measures from the development history and source code knowledge. We investigate the use of linear and machine -learning models to identify file experts. Finally, we use the proposed models to improve a Truck Factor algorithm and analyze their performance using data from public and private repositories. Results: First Authorship and Recency of Modification have the highest positive and negative correlations with source code knowledge, respectively. Machine learning classifiers outperformed the linear techniques ( F -Score = 71% to 73%) in the largest analyzed dataset, but this advantage is unclear in the smallest one. The Truck Factor algorithm using the proposed models could handle developers missed by the previous expertise model with the best average F -Score of 74%. It was perceived as more accurate in computing the Truck Factor of an industrial project. Conclusion: If we analyze F -Score , the studied models have similar performance. However, machine learning classifiers get higher Precision while linear models obtained the highest Recall . Therefore, choosing the best technique depends on the user's tolerance to false positives and negatives. Additionally, the proposed models significantly improved the accuracy of a Truck Factor algorithm, affirming their effectiveness in precisely identifying the key developers within software projects.
C1 [Cury, Otavio; Avelino, Guilherme; Neto, Pedro Santos] Univ Fed Piaui, Teresina, PI, Brazil.
   [Valente, Marco Tulio] Univ Fed Minas Gerais, Belo Horizonte, MG, Brazil.
   [Britto, Ricardo] Blekinge Inst Technol, Karlskrona, Blekinge, Sweden.
   [Britto, Ricardo] Ericsson, Karlskrona, Blekinge, Sweden.
C3 Universidade Federal do Piaui; Universidade Federal de Minas Gerais;
   Blekinge Institute Technology; Ericsson
RP Cury, O (corresponding author), Univ Fed Piaui, Teresina, PI, Brazil.
EM otaviocury@ufpi.edu.br
OI Cury, Otavio/0000-0001-6972-2982; Santos Neto, Pedro/0000-0002-1554-8445
FU CNPq [403512/2021-2]
FX We would like to thank the developers (Ericsson, Maida Health, and Open
   Source projects) who took their time to answer the survey and provided
   essential information to our investigation. Additionally, we also thank
   CNPq (grant 403512/2021-2) for supporting this work.
CR Akter S., 2021, Ph.D. thesis
   Almarimi N, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1560, DOI 10.1145/3468264.3473121
   [Anonymous], 2007, 4 INT WORKSHOP MININ
   Asthana S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P937, DOI 10.1145/3338906.3340449
   Avelino G, 2019, INT SYMP EMP SOFTWAR, P328, DOI 10.1109/esem.2019.8870181
   Avelino G, 2019, IEEE SOFTWARE, V36, P34, DOI 10.1109/MS.2018.185140155
   Avelino G, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Avelino Guilherme, 2017, IFIP INT C OPEN SOUR, P151, DOI DOI 10.1007/978-3-319-57735-7_15
   Bird C, 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Calefato F, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10012-6
   Canfora G., 2012, P ACM SIGSOFT 20 INT, P44, DOI DOI 10.1145/2393596.2393647
   Canfora Gerardo, 2007, 4 INT WORKSHOP MININ, P14
   Chouchen M, 2021, APPL SOFT COMPUT, V100, DOI 10.1016/j.asoc.2020.106908
   Chyung SY., 2017, Performance Improvement, V56, P15, DOI [10.1002/pfi.21727, DOI 10.1002/PFI.21727]
   Constantinou E, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P63, DOI 10.1109/SEAA.2016.18
   Cosentino V, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P499, DOI 10.1109/SANER.2015.7081864
   Cury O, 2022, INT SYMP EMP SOFTWAR, P125, DOI 10.1145/3544902.3546243
   da Silva JR, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P409, DOI 10.1109/SANER.2015.7081851
   Alves FVD, 2015, PROCEEDINGS OF THE 17TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY (SBQS), P41, DOI 10.1145/3275245.3275250
   Ferreira Fabio, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P447, DOI 10.1145/3422392.3422433
   Ferreira M, 2017, INT C PROGRAM COMPRE, P207, DOI 10.1109/ICPC.2017.35
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Fritz T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2512207
   Hannebauer C, 2016, IEEE INT CONF AUTOM, P99, DOI 10.1145/2970276.2970306
   Haratian V, 2023, PROCEEDINGS OF THE 31ST ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2023, P1926, DOI 10.1145/3611643.3613877
   Hattori L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P235, DOI 10.1145/1810295.1810339
   Hosmer DW, 2013, WILEY SER PROBAB ST, P89
   Hossen K., 2014, Proceedings of the 22nd international conference on program comprehension (icpc 2014) (p, P130
   Ibiapina I.M.S., 2017, SIMP BRASILEIRO QUAL
   Jabrayilzade E., 2022, arXiv
   Kagdi H, 2012, J SOFTW-EVOL PROC, V24, P3, DOI 10.1002/smr.530
   Kagdi H, 2009, INT C PROGRAM COMPRE, P273, DOI 10.1109/ICPC.2009.5090056
   Kagdi H, 2008, PROC IEEE INT CONF S, P157, DOI 10.1109/ICSM.2008.4658064
   Karlsson A., Driving development resilience: Analyzing truck factors across proprietary and open-source projects
   Krüger J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P764, DOI 10.1145/3180155.3180215
   Linaker J., 2015, Guidelines for Conducting Surveys in Software Engineering
   Lira W.A.L., 2016, Master's thesis
   Lucas EM, 2020, IEEE ACCESS, V8, P218702, DOI 10.1109/ACCESS.2020.3042429
   Meek C, 2002, J MACH LEARN RES, V2, P397, DOI 10.1162/153244302760200678
   Montandon Joao Eduardo, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P276, DOI 10.1109/MSR.2019.00054
   Monteiro E., 2020, P 14 ACMIEEE INT S E, P1
   Navarro G, 2001, ACM COMPUT SURV, V33, P31, DOI 10.1145/375360.375365
   Oliveira J, 2019, SBQS: PROCEEDINGS OF THE 18TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY, P49, DOI 10.1145/3364641.3364648
   Overholser BR, 2008, NUTR CLIN PRACT, V23, P76, DOI 10.1177/011542650802300176
   Peterson LE, 2009, Scholarpedia, V4, P1883, DOI DOI 10.4249/SCHOLARPEDIA.1883
   Pfeiffer RH, 2021, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR52588.2021.00017
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Rajlich V., 2014, Proceedings of the Conference on the Future of Software Engineering, P133
   Ralph P, 2020, Arxiv, DOI arXiv:2005.01127
   Rigby PC, 2016, PROC INT CONF SOFTW, P1006, DOI 10.1145/2884781.2884851
   Sajedi-Badashian A, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2250
   Schober P, 2018, ANESTH ANALG, V126, P1763, DOI 10.1213/ANE.0000000000002864
   Sülün E, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106455
   Sülün E, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P66, DOI 10.1145/3345629.3345637
   Sun XB, 2017, J SYST SOFTWARE, V134, P355, DOI 10.1016/j.jss.2017.09.021
   Weston J., 1998, Tech. rep.
NR 57
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2024
VL 170
AR 107445
DI 10.1016/j.infsof.2024.107445
EA MAR 2024
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QX2V4
UT WOS:001224111200001
DA 2024-08-05
ER

PT J
AU Natarajan, T
   Pichai, S
AF Natarajan, Thamizhiniyan
   Pichai, Shanmugavadivu
TI Behaviour-driven development and metrics framework for enhanced agile
   practices in scrum teams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile methodologies; Scrum teams; Behaviour -driven development; Metrics
   framework; Action research; Collaboration; Communication; Software
   quality; Performance evaluation
AB Context: Agile methodologies highlight collaborative efforts among software engineering groups for iterative, high -quality product delivery within short timeframes. However, Scrum teams face persistent challenges in achieving these objectives, stemming from difficulties in seamless collaboration and effective communication among various roles, such as developers and testers. To address these issues, Scrum teams are increasingly adopting Behaviour -Driven Development (BDD), a testing technique fostering collaboration and shared understanding through test scenarios. Objectives: This research investigates the adoption of BDD practices in Scrum teams and the formulation of a metrics framework tailored for optimizing Scrum practices and product quality. Methods: Employing action research, this study extends over two and half years, actively engaging Scrum team members and stakeholders to encompass their collaborative contributions, insights, and perspectives. It commences with defining a metrics framework through exploration within agile teams to measure and evaluate Scrum team performance. Subsequently, the focus shifts to implementing BDD practices systematically, employing training sessions, workshops, and iterative refinements. Results: The results of the study emphasize the substantial role of Behaviour -Driven Development (BDD) in improving collaboration, communication, and the comprehension of requirements within the Scrum team. Concurrently, the tailored metrics framework bolsters quality assurance practices, enhancing software quality and customer satisfaction. BDD adoption expedites automation and product delivery, while the metrics framework enables informed decision -making. Conclusions: Combining BDD practices with a custom metrics framework offers a holistic strategy for addressing Scrum challenges. Enhanced collaboration, communication, and requirements comprehension, resulting from BDD, synergize with the metrics framework to elevate Scrum teams ' performance, software quality, and customer value. This research underlines the importance of adopting BDD as a testing methodology to achieve these improvements in Scrum teams.
C1 [Natarajan, Thamizhiniyan; Pichai, Shanmugavadivu] Gandhigram Rural Inst, Dept Comp Sci & Applicat, Chinnalapatti, Tamil Nadu, India.
C3 Gandhigram Rural Institute
RP Pichai, S (corresponding author), Gandhigram Rural Inst, Dept Comp Sci & Applicat, Chinnalapatti, Tamil Nadu, India.
EM p.shanmugavadivu@ruraluniv.ac.in
CR Almeida Fernando, 2021, International Journal of Agile Systems and Management, V14, P205, DOI 10.1504/IJASM.2021.118061
   [Anonymous], Behaviour-driven development, " Behaviour-driven development-cucumber documentation
   [Anonymous], 2006, Introducing B.D.D
   Antinyan V, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916001
   Beck K, 2001, IEEE SOFTWARE, V18, P87, DOI 10.1109/52.951502
   Beck K., 2007, Manifesto for Agile Software Development
   Bjarnason E, 2016, INFORM SOFTWARE TECH, V77, P61, DOI 10.1016/j.infsof.2016.03.008
   Bünder H, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1742, DOI 10.1145/3297280.3297450
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Downey S, 2013, P ANN HICSS, P4870, DOI 10.1109/HICSS.2013.471
   Evans E., 2004, Domain-Driven Design: Tackling Complexity in the Heart of Software
   Huttermann M, 2012, Agile Alm
   Irshad M, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110944
   Itkonen J., 2005, ICAM 2005 INT C AG H, P27
   Kerzner H., 2013, Project management: A systems Approach to planning, scheduling, and Controlling 11E With Project Mgmt Case Studies 4e Set, V4
   Ktata O, 2010, PROCEEDINGS OF THE THIRD C* CONFERENCE ON COMPUTER SCIENCE AND SOFTWARE ENGINEERING 2010 (C3S2E '10), P101, DOI 10.1145/1822327.1822341
   Kupiainen E, 2015, INFORM SOFTWARE TECH, V62, P143, DOI 10.1016/j.infsof.2015.02.005
   Mahnic V, 2012, ELEKTRON ELEKTROTECH, V18, P73, DOI 10.5755/j01.eee.18.8.2630
   Mahnic V, 2007, ELEKTROTEH VESTN, V74, P241
   Nascimento N., 2020, P IEEE ACM 42 INT C
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Oza N., 2012, UK Acad. Info. Syst. Conf. Proc., V38
   Padmini KVJ, 2015, 2015 MORATUWA ENGINEERING RESEARCH CONFERENCE (MERCON), P312, DOI 10.1109/MERCon.2015.7112365
   Pereira L, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234167
   Puleio M, 2006, AGILE 2006, Proceedings, P305, DOI 10.1109/AGILE.2006.34
   Scandaroli A, 2019, INT CONF GLOBAL SOFT, P105, DOI 10.1109/ICGSE.2019.00030
   Schwaber K., 2002, Series in agile software development, V1
   Smart J., 2015, BDD in Action: Behavior-Driven Development for the whole software lifecycle
   Solís C, 2011, EUROMICRO CONF PROC, P383, DOI 10.1109/SEAA.2011.76
   Staron M., 2020, Action Research in Software Engineering
   Strode D, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10115-0
   Tu HL, 2009, 2009 INTERNATIONAL FORUM ON COMPUTER SCIENCE-TECHNOLOGY AND APPLICATIONS, VOL 1, PROCEEDINGS, P131, DOI 10.1109/IFCSTA.2009.39
   Yang A.Z.H., 2019, 2019 IEEE ACM 16 INT
NR 33
TC 0
Z9 0
U1 5
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2024
VL 170
AR 107435
DI 10.1016/j.infsof.2024.107435
EA MAR 2024
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QF1G0
UT WOS:001219365700001
DA 2024-08-05
ER

PT J
AU Maier, R
   Schlattl, A
   Guess, T
   Mottok, J
AF Maier, Robert
   Schlattl, Andreas
   Guess, Thomas
   Mottok, Juergen
TI CausalOps - Towards an industrial lifecycle for causal probabilistic
   graphical models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Causal engineering; Model lifecycle; MLOps; Causal graphical models
ID BOUNDARY OBJECTS; KNOWLEDGE; INFERENCE; NETWORK
AB Context: Causal probabilistic graph-based models have gained widespread utility, enabling the modeling of cause-and-effect relationships across diverse domains. With their rising adoption in new areas, such as safety analysis of complex systems, software engineering, and machine learning, the need for an integrated lifecycle framework akin to DevOps and MLOps has emerged. Currently, such a reference for organizations interested in employing causal engineering is missing. This lack of guidance hinders the incorporation and maturation of causal methods in the context of real-life applications. Objective: This work contextualizes causal model usage across different stages and stakeholders and outlines a holistic view of creating and maintaining them within the process landscape of an organization. Methods: A novel lifecycle framework for causal model development and application called CausalOps is proposed. By defining key entities, dependencies, and intermediate artifacts generated during causal engineering, a consistent vocabulary and workflow model to guide organizations in adopting causal methods are established. Results: Based on the early adoption of the discussed methodology to a real-life problem within the automotive domain, an experience report underlining the practicability and challenges of the proposed approach is discussed. Conclusion: It is concluded that besides current technical advancements in various aspects of causal engineering, an overarching lifecycle framework that integrates these methods into organizational practices is missing. Although diverse skills from adjacent disciplines are widely available, guidance on how to transfer these assets into causality-driven practices still need to be addressed in the published literature. CausalOps' aim is to set a baseline for the adoption of causal methods in practical applications within interested organizations and the causality community.
C1 [Maier, Robert; Mottok, Juergen] OTH Regensburg, Software Engn Lab Safe & Secure Syst LaS3, Regensburg, Germany.
   [Schlattl, Andreas; Guess, Thomas] Efs TechHub GmbH, Res & Dev, Gaimersheim, Germany.
RP Maier, R (corresponding author), OTH Regensburg, Software Engn Lab Safe & Secure Syst LaS3, Regensburg, Germany.
EM robert.maier@othr.de; Andreas.Schlattl@efs-techhub.com;
   Thomas.Guess@efs-techhub.com; juergen.mottok@othr.de
OI Maier, Robert/0000-0002-4196-3263
FU Bavarian State Ministry of Economic Affairs, Regional Development and
   Energy' (STMWI) [DIK0173/03]
FX This work is partially supported by the 'Bavarian State Ministry of
   Economic Affairs, Regional Development and Energy' (STMWI) through the
   granting of the funding project HolmeS<SUP>3</SUP> (FKZ: DIK0173/03) .
CR Abraham R., 2013, Paper 120
   Akbar MA, 2022, INFORM SOFTWARE TECH, V147, DOI 10.1016/j.infsof.2022.106894
   Alnafessah A, 2021, IEEE ACCESS, V9, P44476, DOI 10.1109/ACCESS.2021.3064867
   Amaro R, 2023, IEEE T SOFTWARE ENG, V49, P883, DOI 10.1109/TSE.2022.3166626
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   [Anonymous], 2013, ISO/TC 204 Intelligent transport systems, Intelligent Transport Systems-Forward Vehicle Collision Mitigation Systems-Operation, Performance, and Verification Requirements
   [Anonymous], 2017, ISO/TC 184/SC 4
   Bareinboim E., 2022, Probabilistic and Causal Inference: The Works of Judea Pearl, Vfirst, P507, DOI [10.1145/3501714.3501743, DOI 10.1145/3501714.3501743]
   Basili V.R., 2002, Encyclopedia of Software Eng, DOI [10.1002/0471028959.sof110, DOI 10.1002/0471028959.SOF110]
   Basili V.R., 1985, QUANTITATIVE EVALUAT
   Bengio Y., 2020, INT C LEARN REPR
   Bind MA, 2019, ANNU REV PUBL HEALTH, V40, P23, DOI 10.1146/annurev-publhealth-040218-044048
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI [10.1109/2.59, 10.1145/12944.12948]
   Brodersen KH, 2015, ANN APPL STAT, V9, P247, DOI 10.1214/14-AOAS788
   Cai B., 2020, Bayesian Networks for Reliability Engineering, DOI DOI 10.1007/978-981-13-6516-4
   Carlile PR, 2004, ORGAN SCI, V15, P555, DOI 10.1287/orsc.1040.0094
   Carlile PR, 2002, ORGAN SCI, V13, P442, DOI 10.1287/orsc.13.4.442.2953
   Clark AG, 2024, ACM T SOFTW ENG METH, V33, DOI 10.1145/3607184
   Costa SD, 2021, APPL ONTOL, V16, P421, DOI 10.3233/AO-210255
   DALKEY N, 1963, MANAGE SCI, V9, P458, DOI 10.1287/mnsc.9.3.458
   Dawid AP., 2010, JMLR P, V6, P59
   Ebert C, 2016, IEEE SOFTWARE, V33, P94, DOI 10.1109/MS.2016.68
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Geiger D., 1990, Uncertainty in Artificial Intelligence. Ed. by, V9, P3, DOI 10.1016/B978-0-444-88650-7.50006-8
   Geiger D., 1990, Machine Intelligence and Pattern Recognition, V10, P139
   Gläser J, 2009, RES METHODS SER, P117
   Glymour C, 2019, FRONT GENET, V10, DOI 10.3389/fgene.2019.00524
   Grünbaum D, 2023, J CAUSAL INFERENCE, V11, DOI 10.1515/jci-2022-0060
   Haakman M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09993-1
   Hernan M., 2023, Causal inference
   Heyn H.-M., 2022, 2022 IEEE ACM 1 INT, P43, DOI DOI 10.1145/3522664.3528615
   Honkanen T., 2022, Hum. Factors Bus. Manag. Soc, V56, P137, DOI [10.54941/ahfe1002261, DOI 10.54941/AHFE1002261]
   Hünermund P, 2023, ECONOMET J, DOI 10.1093/ectj/utad008
   Hummer W, 2019, INT CONF CLOUD ENG, P113, DOI 10.1109/IC2E.2019.00025
   Hund L, 2020, RELIAB ENG SYST SAFE, V195, DOI 10.1016/j.ress.2019.106678
   Jabbari R, 2016, PROCEEDINGS OF THE XP2016 SCIENTIFIC WORKSHOPS, DOI 10.1145/2962695.2962707
   Jackson P., 1999, Introduction to expert systems, Vthird
   Kirchhof M., 2020, Failure Analysis in Lithium-Ion Battery Production with FMEA-Based Large-Scale Bayesian Network, DOI DOI 10.20944/PREPRINTS202012.0312.V1
   Kitson NK, 2023, ARTIF INTELL REV, V56, P8721, DOI 10.1007/s10462-022-10351-w
   Koller D., 2009, PROBABILISTIC GRAPHI
   Kolltveit AB, 2022, 2022 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR RESPONSIBLE ARTIFICIAL INTELLIGENCE (SE4RAI 2022), P1, DOI 10.1145/3526073.3527584
   Koopmann T., 2022, arXiv, DOI DOI 10.48550/ARXIV.2210.15375
   Korb K.B., 2010, Bayesian artificial intelligence, DOI 10.1201/b10391
   Kreuzberger D, 2023, IEEE ACCESS, V11, P31866, DOI 10.1109/ACCESS.2023.3262138
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   MAHAJAN V, 1976, J MARKETING RES, V13, P317, DOI 10.2307/3150755
   Maier R, 2024, IEEE T INTELL TRANSP, V25, P1815, DOI 10.1109/TITS.2023.3317475
   Maier R, 2022, LECT NOTES COMPUT SC, V13525, P116, DOI 10.1007/978-3-031-15842-1_9
   Mboweni Tsakani, 2022, 2022 INT C EL COMP E, DOI [10.1109/ICECET55527.2022.9872968, DOI 10.1109/ICECET55527.2022.9872968]
   Mitchell M, 2019, FAT*'19: PROCEEDINGS OF THE 2019 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P220, DOI 10.1145/3287560.3287596
   Neapolitan R., 2003, Learning Bayesian Networks, DOI DOI 10.1145/1327942.1327961
   Neurohr C, 2021, IEEE ACCESS, V9, P18016, DOI 10.1109/ACCESS.2021.3053159
   Nielsen T., 2013, Information Science and Statistics
   Nyberg EP, 2022, RISK ANAL, V42, P1155, DOI 10.1111/risa.13759
   Pearl J., 1994, Uncertainty in Artificial Intelligence. Proceedings of the Tenth Conference (1994), P454
   Pearl J., 2009, Causality: Models, Reasoning, and Inference, V2, DOI DOI 10.1017/CBO9780511803161
   Pearl J, 2019, COMMUN ACM, V62, P54, DOI 10.1145/3241036
   Peters J, 2017, ADAPT COMPUT MACH LE
   Petersen ML, 2014, EPIDEMIOLOGY, V25, P418, DOI 10.1097/EDE.0000000000000078
   Podgurski A, 2020, PROC IEEE INT CONF S, P382, DOI 10.1109/ICSME46990.2020.00044
   Quinn T, 2018, TLS-TIMES LIT SUPPL, P31
   Richardson T.S., 2013, Single world intervention graphs (swigs): A unification of the counterfactual and graphical approaches to causality
   Robins JM, 2000, EPIDEMIOLOGY, V11, P550, DOI 10.1097/00001648-200009000-00011
   Saibene A, 2021, EXPERT SYST APPL, V177, DOI 10.1016/j.eswa.2021.114900
   Schölkopf B, 2021, P IEEE, V109, P612, DOI 10.1109/JPROC.2021.3058954
   Scholkopf B., 2022, Probabilistic and Causal Inference: The Works of Judea Pearl, Vfirst, P765, DOI 10.1145/3501714.3501755
   Schumacker R. E., 1996, BEGINNERS GUIDE STRU, DOI DOI 10.4324/9781410610904
   Schwaber K., 2001, Agile Software Development with Scrum, VInternational
   Siebert J, 2023, INFORM SOFTWARE TECH, V159, DOI 10.1016/j.infsof.2023.107198
   Software and Systems Engineering Standards Committee of the IEEE Computer Society, 2022, Standard ISO 32675:2022-08
   Spirtes P., 1993, of Lecture Notes in Statistics, DOI DOI 10.1007/978-1-4612-2748-9
   STAR SL, 1989, SOC STUD SCI, V19, P387, DOI 10.1177/030631289019003001
   Star SL, 2015, INFRASTRUCT SER, P243
   Subramanya R, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app12199851
   Testi M, 2022, IEEE ACCESS, V10, P63606, DOI 10.1109/ACCESS.2022.3181730
   Tian J, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P574
   Verma T, 1990, P 6 ANN C UNC ART IN, P255, DOI DOI 10.5555/647233.719736
   Vowels MJ, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3527154
   Washington A, 2019, SAFETY SCI, V118, P654, DOI 10.1016/j.ssci.2019.04.040
   Wognum Nel, 2019, International Journal of Agile Systems and Management, V12, P58
   Wohlrab R, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2166
   Xia KV, 2021, Arxiv, DOI [arXiv:2107.00793, 10.48550/arxiv.2107.00793, DOI 10.48550/ARXIV.2107.00793]
   Xu J., 2022, arXiv, DOI [10.48550/ARXIV.2201.09617,2201.09617, DOI 10.48550/ARXIV.2201.09617,2201.09617]
   Yao L., 2023, Machine Learning for Causal Inference, P23, DOI 10.1007/978-3-031-35051-13
   Yao LY, 2021, ACM T KNOWL DISCOV D, V15, DOI 10.1145/3444944
   Zhang J, 2008, MIND MACH, V18, P239, DOI 10.1007/s11023-008-9096-4
   Zhu QX, 2017, IND ENG CHEM RES, V56, P14282, DOI 10.1021/acs.iecr.7b02700
NR 87
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2024
VL 174
AR 107520
DI 10.1016/j.infsof.2024.107520
EA JUL 2024
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XZ5F8
UT WOS:001265507800001
OA Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Ahmed, SS
   Wang, SW
   Tian, Y
   Chen, TH
   Zhang, HX
AF Ahmed, Shahla Shaan
   Wang, Shaowei
   Tian, Yuan
   Chen, Tse-Hsun (Peter)
   Zhang, Haoxiang
TI Studying and recommending information highlighting in Stack Overflow
   answers
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Stack overflow; Information highlighting; Named entity recognition; Deep
   learning
ID DEVELOPERS
AB Context: Navigating the knowledge of Stack Overflow (SO) remains challenging. To make the posts vivid to users, SO allows users to write and edit posts with Markdown or HTML so that users can leverage various formatting styles (e.g., bold, italic, and code) to highlight the important information. Nonetheless, there have been limited studies on the highlighted information. Objective: We carried out the first large-scale exploratory study on the information highlighted in SO answers in our recent study. To extend our previous study, we develop approaches to automatically recommend highlighted content with formatting styles using neural network architectures initially designed for the Named Entity Recognition task. Method: In this paper, we studied 31,169,429 answers of Stack Overflow. For training recommendation models, we choose CNN -based and BERT -based models for each type of formatting (i.e., Bold, Italic, Code, and Heading) using the information highlighting dataset we collected from SO answers. Results: Our models achieve a precision ranging from 0.50 to 0.72 for different formatting types. It is easier to build a model to recommend Code than other types. Models for text formatting types (i.e., Heading, Bold, and Italic) suffer low recall. Our analysis of failure cases indicates that the majority of the failure cases are due to missing identification. One explanation is that the models are easy to learn the frequent highlighted words while struggling to learn less frequent words (i.g., long -tail knowledge). Conclusion: Our findings suggest that it is possible to develop recommendation models for highlighting information for answers with different formatting styles on Stack Overflow.
C1 [Ahmed, Shahla Shaan; Wang, Shaowei] Univ Manitoba, Dept Comp Sci, Winnipeg, MB, Canada.
   [Tian, Yuan] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Chen, Tse-Hsun (Peter)] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
C3 University of Manitoba; Queens University - Canada; Concordia University
   - Canada
RP Wang, SW (corresponding author), Univ Manitoba, Dept Comp Sci, Winnipeg, MB, Canada.
EM ahmeds27@myumanitoba.ca; shaowei.wang@umanitoba.ca; y.tian@queensu.ca;
   peterc@encs.concordia.ca; haoxiang.zhang@acm.org
OI Chen, Tse-Hsun/0000-0003-4027-0905; Tian, Yuan/0000-0002-2208-3893
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
   through the Discovery Grants Program [RGPIN-2021-03354]
FX We acknowledge the support of the Natural Sciences and Engineering
   Research Council of Canada (NSERC) through the Discovery Grants Program
   (Grant ID: RGPIN-2021-03354) for funding this research.
CR Ahmed SS, 2022, PROC IEEE INT CONF S, P369, DOI 10.1109/ICSME55016.2022.00041
   Alrashedy K, 2020, J SYST SOFTWARE, V162, DOI 10.1016/j.jss.2019.110505
   [Anonymous], 2024, Google query suggestion
   [Anonymous], 2024, Edit a question or answer
   Beelders TR, 2016, J EYE MOVEMENT RES, V9
   Brown T. B., 2020, P 34 INT C NEURAL IN, P1
   Chiu JP., 2016, T ASS COMPUTATIONAL, V4, P357, DOI [DOI 10.1162/TACLA00104, 10.1162/tacl_a_00104, DOI 10.1162/TACL_A_00104]
   Devlin J., 2019, Pre-training of deep bidirectional transformers for language understanding
   Escobar R, 2022, IEEE INT WORK VIS SO, P167, DOI 10.1109/VISSOFT55257.2022.00026
   Esuli A, 2010, LECT NOTES COMPUT SC, V6360, P100, DOI 10.1007/978-3-642-15998-5_12
   Face H., 2023, BERT
   Gottipati S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P323, DOI 10.1109/ASE.2011.6100069
   Hakala K., 2019, P 5 WORKSH BIONLP OP, P56, DOI DOI 10.18653/V1/D19-5709
   Hannebauer C, 2018, EMPIR SOFTW ENG, V23, P2795, DOI 10.1007/s10664-017-9579-0
   He JD, 2022, INT C PROGRAM COMPRE, P1, DOI 10.1145/3524610.3527897
   Jehangir B., 2023, Nat Lang Process J, V3, DOI DOI 10.1016/J.NLP.2023.100017
   Jiang R., 2016, P 6 NAMED ENTITY WOR, P21, DOI DOI 10.18653/V1/W16-2703
   Kandpal N, 2023, Arxiv, DOI [arXiv:2211.08411, 10.48550/arXiv.2211.08411]
   Le Guillarme N, 2022, METHODS ECOL EVOL, V13, P625, DOI 10.1111/2041-210X.13778
   Li HW, 2018, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2018.00028
   Li J., 2016, Proceedings of the 31st Annual ACM Symposium on Applied Computing, P1127
   Li J, 2019, WORLD WIDE WEB, V22, P1699, DOI 10.1007/s11280-018-0621-y
   Maity Suman Kalyan, 2019, Advances in Information Retrieval. 41st European Conference on IR Research, ECIR 2019. Proceedings: Lecture Notes in Computer Science (LNCS 11438), P125, DOI 10.1007/978-3-030-15719-7_16
   Mireshghallah F, 2022, Arxiv, DOI arXiv:2205.12506
   Nadeau D, 2007, LINGUIST INVESTIG, V30, P3
   Nadi S, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P229, DOI [10.1109/SANER48275.2020.9054828, 10.1109/saner48275.2020.9054828]
   Nguyen A.T., 2015, 3 AAAI C HUM COMP CR
   Palma ME, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P269, DOI 10.1145/3540250.3549109
   Qiao L, 2020, NEUROCOMPUTING, V385, P100, DOI 10.1016/j.neucom.2019.11.067
   Raffel C, 2020, J MACH LEARN RES, V21
   Ragkhitwetsagul C, 2021, IEEE T SOFTWARE ENG, V47, P560, DOI 10.1109/TSE.2019.2900307
   Ramrez J., 2019, Proceedings of the AAAI Conference on Human Computation and Crowdsourcing, P144, DOI [10.1609/hcomp.v7i1.5268, DOI 10.1609/HCOMP.V7I1.5268]
   Rekha V.S., 2014, P 2014 INT C INT ADV
   Ren XX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P151, DOI 10.1109/ASE.2019.00024
   S. Overflow, 2022, Markdown help
   Sarkar A., 2015, PPIG, P8
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Souza F, 2020, Arxiv, DOI [arXiv:1909.10649, DOI 10.48550/ARXIV.1909.10649]
   SPACY, 2023, Linguistic features
   StackExchange, 2023, How do I format my posts using Markdown or HTML?
   Strobelt H, 2016, IEEE T VIS COMPUT GR, V22, P489, DOI 10.1109/TVCG.2015.2467759
   Tanabe L, 2005, BMC BIOINFORMATICS, V6, DOI 10.1186/1471-2105-6-S1-S3
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Viera AJ, 2005, FAM MED, V37, P360
   Wang H., 2019, P 2019 4 INT C MATH, P146
   Wang LT, 2019, SCI CHINA INFORM SCI, V62, DOI 10.1007/s11432-018-9848-2
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P800, DOI 10.1007/s10664-017-9533-1
   Wilson S, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16), P133, DOI 10.1145/2872427.2883035
   Wu JH, 2003, INFORM MANAGE-AMSTER, V40, P617, DOI 10.1016/S0378-7206(02)00091-5
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Yang X, 2023, PROC INT CONF SOFTW, P2287, DOI 10.1109/ICSE48619.2023.00192
   Ye Deheng., 2016, Proceedings of the 31st Annual ACM Symposium on Applied Computing, P1378
   Yin H, 2019, IEEE WORLD CONGR SER, P358, DOI 10.1109/SERVICES.2019.00102
   Yuan Chang, 2021, 2021 IEEE International Conference on Data Science and Computer Application (ICDSCA), P294, DOI 10.1109/ICDSCA53499.2021.9650256
   Zhang HX, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3434279
   Zhang HX, 2021, IEEE T SOFTWARE ENG, V47, P850, DOI 10.1109/TSE.2019.2906315
   Zhang Y, 2023, Arxiv, DOI [arXiv:2110.04596, DOI 10.48550/ARXIV.2110.04596]
   Zhu QL, 2018, BIOINFORMATICS, V34, P1547, DOI 10.1093/bioinformatics/btx815
NR 58
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2024
VL 172
AR 107478
DI 10.1016/j.infsof.2024.107478
EA MAY 2024
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TI7M7
UT WOS:001240701400001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Nousias, N
   Tsakalidis, G
   Vergidis, K
AF Nousias, Nikolaos
   Tsakalidis, George
   Vergidis, Kostas
TI Not yet another BPM lifecycle: A synthesis of existing approaches using
   BPMN
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Business process management; Bpm lifecycle; Business process model and
   notation; Bpmn; Systematic literature review; Design Science Methodology
ID BUSINESS PROCESS MANAGEMENT; DESIGN SCIENCE RESEARCH
AB Context: Business Process Management (BPM) is considered an important management approach that encompasses a set of methods for managing the business processes of an organization. To maximize the benefits of BPM, scholars have conceptualized its steps in schematic diagrams with interrelated phases called BPM lifecycles. As this approach has been established, the phenomenon of perpetual proposition of BPM lifecycles has been observed in relevant literature. This practice obscures what should be relatively straightforward: a consensus among researchers and practitioners regarding the steps that a business process should flow through during its lifecycle. Objective: The aim of this work is to investigate the existing BPM lifecycle models proposed in literature, identify convergences and variations in these models, analyze their core components and locate common patterns that will enable the synthesis of a BPM lifecycle that is conceptualized with Business Process Model and Notation (BPMN), the community de -facto business process modeling notation. Method: To formalize the research problem and develop the design of a solution, the Design Science Research Process (DSRP) model was adopted. To investigate the perpetual proposition of BPM lifecycles in literature, the authors conducted a Systematic Literature Review (SLR). On whether recurring patterns can emerge from the BPM lifecycles, a normalization process was introduced to homogenize the data and four metrics were used to evaluate the results. The emerging patterns were assembled into a graph that formed the basis for proposing a synthetic BPM lifecycle. Results: The outcome of the paper is three -fold: First, the identification of four major inefficiencies of existing BPM lifecycles, namely varying granularity, inconsistent nomenclature, subjective polysemy, and lack of formal conceptualization approaches. Also, a standardized definition of the inclusive steps that exist in the lifecycles by clustering the existing ones in a conceptually systematic manner. Finally, a synthetic BPM lifecycle is conceptualized that systematizes the existing concepts and their interrelations based on a formalized BPMN model in two levels of granularity: a basic version that illustrates the functional and control -flow aspects of the BPM lifecycle and an enhanced version incorporating additionally the resource and data perspectives. Conclusion: This paper proposes a BPMN-based conceptualization of the BPM lifecycle that can facilitate the management of business processes by providing enhanced clarity, improved resource management, and predefined error handling in a BPM initiative. By systematizing the control -flow, data, and resource perspective of the BPM lifecycle, stakeholders can gain a clear understanding of the sequence of steps, the interrelated data flows, and the distribution of work.
C1 [Nousias, Nikolaos; Tsakalidis, George; Vergidis, Kostas] Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
C3 University of Macedonia
RP Vergidis, K (corresponding author), Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
EM kvergidis@uom.edu.gr
RI Tsakalidis, George/N-5001-2018; Vergidis, Kostas/A-8642-2015
OI Tsakalidis, George/0000-0002-0889-7946; Vergidis,
   Kostas/0000-0002-2755-499X
CR Aagesen G, 2015, Handbook on business process management 1: introduction, methods, and information systems, P219, DOI [DOI 10.1007/978-3-642-45100-310, 10.1007/978-3-642-45100-3_10, DOI 10.1007/978-3-642-45100-3_10]
   Afflerbach P, 2017, INFORM SYST FRONT, V19, P1101, DOI 10.1007/s10796-016-9715-1
   Allani O, 2016, PROCEDIA COMPUT SCI, V100, P1064, DOI 10.1016/j.procs.2016.09.282
   [Anonymous], 2000, Polysemy: Theoretical and computational approaches
   Association of Business Process Management Professionals, 2009, Guide to the business process management common body of knowledge (ABPMP BPM CBOK®, V2
   Association of Business Process Management Professionals, 2013, Guide to the business process management common body of knowledge (ABPMP BPM CBOK®, V3
   Ayech HB, 2021, PROCEDIA COMPUT SCI, V181, P852, DOI 10.1016/j.procs.2021.01.239
   Brocke JV, 2014, BUS PROCESS MANAG J, V20, P530, DOI 10.1108/BPMJ-06-2013-0074
   Burlton R, 2010, INT HANDB INFORM SYS, P5, DOI 10.1007/978-3-642-01982-1_1
   Cardoso E, 2013, Proceed. 6th Ph. D. Retreat HPI Res. School Service-Oriented Syst. Eng., V76, P11
   Chinosi M, 2012, COMPUT STAND INTER, V34, P124, DOI 10.1016/j.csi.2011.06.002
   Conforti R, 2011, LECT NOTES COMPUT SC, V7044, P100, DOI 10.1007/978-3-642-25109-2_8
   de Pádua SID, 2014, BUS PROCESS MANAG J, V20, P247, DOI 10.1108/BPMJ-03-2013-0039
   Danilova KB, 2019, BUS PROCESS MANAG J, V25, P1377, DOI 10.1108/BPMJ-05-2017-0123
   de Morais RM, 2014, BUS PROCESS MANAG J, V20, P412, DOI 10.1108/BPMJ-03-2013-0035
   Decker G, 2007, LECT NOTES COMPUT SC, V4714, P305
   Deng Q, 2018, PAC ASIA J ASSOC INF, V10, P1, DOI 10.17705/1PAIS.10101
   Castro BKD, 2019, BUS PROCESS MANAG J, V26, P239, DOI 10.1108/BPMJ-09-2018-0272
   Do Nascimento AR, 2019, BUS PROCESS MANAG J, V26, P312, DOI 10.1108/BPMJ-11-2017-0317
   Dumas M., 2013, Fundamentals of Business Process Management, DOI DOI 10.1007/978-3-642-33143-5
   Hallerbach A, 2008, ICEIS 2008: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL ISAS-2, P154
   Houy C, 2010, BUS PROCESS MANAG J, V16, P619, DOI 10.1108/14637151011065946
   Hrabal M, 2021, BUS PROCESS MANAG J, V27, P275, DOI 10.1108/BPMJ-04-2020-0161
   Hutchison D., 2010, Impact of Granularity on Adjustment Behavior in Adaptive Reuse of Business Process Models, V6336, P112, DOI [10.1007/978-3-642-1 5618-2_10, DOI 10.1007/978-3-642-15618-2_10]
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Kitchenham B., 2007, GUIDELINES PERFORMIN, V1, P57
   Lamghari Z, 2018, 2018 INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS AND COMPUTER VISION (ISCV2018)
   Lohmann P, 2015, LECT NOTES COMPUT SC, V9253, P317, DOI 10.1007/978-3-319-23063-4_22
   Lübbecke P, 2015, P ANN HICSS, P866, DOI 10.1109/HICSS.2015.109
   Mahendrawathi ER, 2019, BUS PROCESS MANAG J, V25, P825, DOI 10.1108/BPMJ-08-2016-0160
   Mendling J, 2008, LECT NOTES BUS INF P, V6, P1
   Montazemi AR, 2015, INFORM MANAGE-AMSTER, V52, P210, DOI 10.1016/j.im.2014.11.002
   Nahm AY., 2002, Journal of Applied Statistics, V1, P114, DOI [10.22237/jmasm/1020255360, DOI 10.22237/JMASM/1020255360]
   Netjes M., 2006, Supporting the BPM life-cycle with FileNet
   Neumann S., 2003, Process Management: A Guide For the Design of Business Processes, P233, DOI [10.1007/978-3-540-24798-2_9, DOI 10.1007/978-3-540-24798-2_9]
   Nousias N., 2023, Operational Research in the Era of Digital Transformation and Business Analytics, P125, DOI [10.1007/978-3-031-24294-6_13, DOI 10.1007/978-3-031-24294-6_13]
   Okoli C., 2010, Sprouts: Working Papers on Information Systems, DOI [10.2139/ssrn.1954824, DOI 10.2139/SSRN.1954824]
   Paré G, 2015, INFORM MANAGE-AMSTER, V52, P183, DOI 10.1016/j.im.2014.08.008
   Pavlicek J., 2017, Enterprise and Organizational Modeling and Simulation, P134, DOI [10.1007/978-3-319-68185-610, DOI 10.1007/978-3-319-68185-610]
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Pereira VR, 2019, BUS PROCESS MANAG J, V25, P1564, DOI 10.1108/BPMJ-07-2018-0184
   Pourshahid A, 2007, 2008 INTERNATIONAL MCETECH CONFERENCE ON E-TECHNOLOGIES, PROCEEDINGS, P3, DOI 10.1109/MCETECH.2008.30
   Rabhi L, 2019, PROCEDIA COMPUT SCI, V155, P599, DOI 10.1016/j.procs.2019.08.084
   Stroppi LJR, 2015, INFORM SOFTWARE TECH, V59, P86, DOI 10.1016/j.infsof.2014.10.006
   Ramos-Merino M, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9112322
   Ruzevicius J., 2012, Issues of Business and Law, V4, P69, DOI DOI 10.5200/IBL.2012.07
   Seethamraju R, 2012, BUS PROCESS MANAG J, V18, P532, DOI 10.1108/14637151211232696
   Stroppi L.J.R., 2011, C IB SOFTW ENG
   Szelagowski M., 2018, Communication Papers of the 2018 Federated Conference on Computer Science and Information Systems, V17, P205, DOI [DOI 10.15439/2018F46, 10.15439/2018F46]
   Tsakalidis George, 2020, International Journal of Business Process Integration and Management, V10, P148, DOI 10.1504/IJBPIM.2020.117151
   Tsakalidis George, 2019, Decision Support Systems IX: Main Developments and Future Trends. 5th International Conference on Decision Support System Technology (EmC-ICDSST 2019). Proceedings. Lecture Notes in Business Information Processing (LNBIP 348), P70, DOI 10.1007/978-3-030-18819-1_6
   Utz W., 2020, 2020 AM C INF SYST A
   Van der Aalst W. M. P., 2013, BUSINESS PROCESS MAN, V2013, DOI DOI 10.1155/2013/507984
   van der Aalst W, 2012, LECT NOTES BUS INF P, V99, P169
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van der Aalst WMP, 2003, LECT NOTES COMPUT SC, V2678, P1
   Vargas C.S., 2021, Industrial Engineering and Operations Management, P489, DOI [10.1007/978-3-030-78570- 3_37, DOI 10.1007/978-3-030-78570-3_37]
   vom Brocke J, 2021, BUS INFORM SYST ENG+, V63, P533, DOI 10.1007/s12599-021-00685-0
   Von Rosing M., 2014, The Complete Business Process Handbook: Body of Knowledge from Process Modeling to BPM, V1, Issue January, DOI 10.1016/B978-0-12-799959-3.00021-5
   Weber B, 2009, COMPUT SCI-RES DEV, V23, P47, DOI [10.1007/S00450-009-0069-5, 10.1007/s00450-009-0069-5]
   Wetzstein B., 2007, Semantic business process management: a lifecycle based requirements analysis
   Wolfswinkel JF, 2013, EUR J INFORM SYST, V22, P45, DOI 10.1057/ejis.2011.51
   Xiao Y, 2019, J PLAN EDUC RES, V39, P93, DOI 10.1177/0739456X17723971
   Zellner G, 2011, BUS PROCESS MANAG J, V17, P203, DOI 10.1108/14637151111122329
   Zelt S, 2019, BUS PROCESS MANAG J, V25, P1291, DOI 10.1108/BPMJ-05-2018-0129
   Zuhaira B, 2021, BUS PROCESS MANAG J, V27, P145, DOI 10.1108/BPMJ-06-2018-0168
   zur Muehlen Michael., 2004, WORKFLOW BASED PROCE
NR 67
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2024
VL 171
AR 107471
DI 10.1016/j.infsof.2024.107471
EA APR 2024
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RU5R1
UT WOS:001230191200001
DA 2024-08-05
ER

PT J
AU Feng, ZX
   Kimura, K
   Trinkenreich, B
   Sarma, A
   Steinmacher, I
AF Feng, Zixuan
   Kimura, Katie
   Trinkenreich, Bianca
   Sarma, Anita
   Steinmacher, Igor
TI Guiding the way: A systematic literature review on mentoring practices
   in open source software projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mentoring; Open source; Literature review
ID BARRIERS; INCLUSION; NEWCOMERS; BEHAVIOR
AB Context: Mentoring in Open Source Software (OSS) is important to its project's growth and sustainability. Mentoring allows contributors to improve their technical skills and learn about the protocols and cultural norms of the project. However, mentoring has its challenges: mentors sometimes feel unappreciated, and mentees may have mismatched interests or lack interpersonal skills. Existing research has investigated the different challenges of mentoring in different OSS contexts, but we lack a holistic understanding. Objective: A comprehensive understanding of the current practices and challenges of mentoring in OSS is needed to implement appropriate strategies to facilitate mentoring. Method: This study presents a systematic literature review investigating how literature has characterized mentoring practices in OSS, including their challenges and the strategies to mitigate them. We retrieved 232 studies from four digital libraries. Out of these, 21 were primary studies. Using this, we performed backward and author snowballing, adding another 27 studies. We conducted a completeness check by reviewing the references of the 4 most relevant primary studies, which resulted in us adding 1 additional study. We then conducted a full-text review and evaluated the studies using a set of criteria; as a result, 10 papers were excluded. We then employed an open-coding approach to analyze, aggregate, and synthesize the selected studies. Results: We reviewed 39 studies to investigate the different facets of mentoring in OSS, encompassing motivations, goals, channels, and contributor dynamics. We then identified 13 challenges associated with mentoring in OSS, which fall into three categories: social, process, and technical. We also present a quick-reference strategy catalog to map these strategies to challenges for mitigation. Conclusions: Our study serves as a guideline for researchers and practitioners about mentoring challenges and potential strategies to mitigate these challenges.
C1 [Feng, Zixuan; Kimura, Katie; Trinkenreich, Bianca; Sarma, Anita] Oregon State Univ, Sch Elect Engn & Comp Sci, Corvallis, OR 97331 USA.
   [Steinmacher, Igor] No Arizona Univ, Sch Informat Comp & Cyber Syst, Flagstaff, AZ 86011 USA.
C3 Oregon State University; Northern Arizona University
RP Feng, ZX (corresponding author), Oregon State Univ, Sch Elect Engn & Comp Sci, Corvallis, OR 97331 USA.
EM fengzi@oregonstate.edu; kimuraka@oregonstate.edu;
   bianca.trinkenreich@oregonstate.edu; Anita.Sarma@oregonstate.edu;
   Igor.Steinmacher@nau.edu
RI ; Steinmacher, Igor/H-2709-2012
OI Sarma, Anita/0000-0002-1859-1692; Steinmacher, Igor/0000-0002-0612-5790
FU National Science Foundation, United States [1901031, 2303043]
FX This work was supported by the National Science Foundation, United
   States under Grant No. 1901031 and 2303043.
CR Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   Ambreen T, 2018, REQUIR ENG, V23, P63, DOI 10.1007/s00766-016-0258-2
   Andreasen M.S., 2006, Inf. Technol. Control, V35
   Balali S, 2020, PROCEEDINGS OF THE 16TH INTERNATIONAL SYMPOSIUM ON OPEN COLLABORATION (OPENSYM), DOI 10.1145/3412569.3412571
   Balali S, 2018, COMPUT SUPP COOP W J, V27, P679, DOI 10.1007/s10606-018-9310-8
   Bosu A, 2019, INT SYMP EMP SOFTWAR, P295
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Brashear TG, 2006, J PERS SELL SALES M, V26, P7, DOI 10.2753/PSS0885-3134260101
   Bynum Y.P., 2015, Education, V136, P69
   Canfora G., 2012, P ACM SIGSOFT 20 INT, P44, DOI DOI 10.1145/2393596.2393647
   Carillo K, 2017, J STRATEGIC INF SYST, V26, P322, DOI 10.1016/j.jsis.2017.03.001
   Castro Llanos John Wilmar, 2012, Product-Focused Software Process Improvement. Proceedings 13th International Conference (PROFES 2012), P131, DOI 10.1007/978-3-642-31063-8_11
   Cereceda O, 2020, FACETS, V5, P289, DOI 10.1139/facets-2019-0020
   Ciampaglia GL, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P734, DOI 10.1145/2675133.2675181
   Cole G., 2015, Dev. Learn. Organ.: Int. J.
   Costa C, 2021, IEEE T SOFTWARE ENG, V47, P1198, DOI 10.1109/TSE.2019.2917191
   Courant P., 2006, SOFTWARE COLLABORATI
   de O Luna Alexandre J. H., 2014, International Journal of Computer Science & Information Technology, V6, P121, DOI 10.5121/ijcsit.2014.6510
   Ding W, 2014, IEEE INT C ENG COMP, P136, DOI 10.1109/ICECCS.2014.26
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Eng E., 1996, Linux J., P2
   ERICSSON KA, 1993, PSYCHOL REV, V100, P363, DOI 10.1037/0033-295X.100.3.363
   Fagerholm F, 2014, P 8 ACM IEEE INT S E, P1
   Fagerholm F, 2014, IEEE SOFTWARE, V31, P54, DOI 10.1109/MS.2014.107
   Fagerholm F, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING WORKSHOPS (ICGSEW 2013), P5, DOI 10.1109/ICGSEW.2013.8
   Feng ZX, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P797, DOI 10.1145/3540250.3549167
   Forman J.H., 2007, Qualitative content analysis. Empirical methods for bioethics: a primer
   Foundjem A, 2021, PROC INT CONF SOFTW, P1033, DOI 10.1109/ICSE43902.2021.00097
   Garcia P, 2021, IEEE STCBP RESPECT CONFERENCE: 2021 RESEARCH ON EQUITY AND SUSTAINED PARTICIPATION IN ENGINEERING, COMPUTING, AND TECHNOLOGY (RESPECT), P33, DOI 10.1109/RESPECT51740.2021.9620669
   Garrison DR, 2006, The Internet and Higher Education, V9, P1
   Gerosa M, 2021, PROC INT CONF SOFTW, P1046, DOI 10.1109/ICSE43902.2021.00098
   Glaser BG, 2016, GROUNDED THEORY REV, V15, P108
   Google, 2022, Google summer of code
   Guinea AS, 2016, J SYST SOFTWARE, V118, P251, DOI 10.1016/j.jss.2016.05.024
   Guizani M., PROC ACM HUM COMPUT, V5
   Gunawardena S.D., 2022, Destructive criticism in software code review impacts inclusion
   Gurbuz HG, 2018, SOFTWARE QUAL J, V26, P1327, DOI 10.1007/s11219-017-9386-2
   Hannebauer C., 2017, Proceedings of the 13th International Symposium on Open Collaboration, P1
   Hannebauer C, 2016, PROCEEDINGS OF THE 12TH INTERNATIONAL SYMPOSIUM ON OPEN COLLABORATION (OPENSYM), DOI 10.1145/2957792.2957793
   Hannebauer Christoph., 2014, Proceedings of the 1st International Workshop on CrowdSourcing in Software Engineering, CSI-SE 2014, P11
   Hirao T, 2022, IEEE T SOFTWARE ENG, V48, P69, DOI 10.1109/TSE.2020.2977907
   Inzer L.D., 2005, Journal of Leadership Education, V4, P31, DOI [DOI 10.12806/V4/I1/TF2, 10.12806/V4/I1/TF2]
   de Marlangeon SK, 2012, REV ESP LINGUIST APL, V25, P69
   Khan AW, 2021, IEEE ACCESS, V9, P107309, DOI 10.1109/ACCESS.2021.3100287
   Kissau SP, 2015, FOREIGN LANG ANN, V48, P143, DOI 10.1111/flan.12121
   Kitchenham B., 2004, PROCEDURES PERFORMIN, DOI DOI 10.5144/0256-4947.2017.79
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kram K.E., 1988, Mentoring at work: Developing relationships in organizational life
   Kumar Shreya., 2014, Proceedings of the 7th International Workshop on Cooperative and Human Aspects of Software Engineering, P111
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   Linux, 2022, Diversity Inclusivity-Linux Foundation
   Mäenpää H, 2016, LECT NOTES COMPUT SC, V10027, P102, DOI 10.1007/978-3-319-49094-6_7
   Mendez C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1004, DOI 10.1145/3180155.3180241
   Paul R, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P26, DOI [10.1109/SANER.2019.8667987, 10.1109/saner.2019.8667987]
   Penoyer S., 2018, Issues Inf. Syst., V19
   Petersen K., 2008, P 12 INT C EVALUATIO, P68, DOI DOI 10.14236/EWIC/EASE2008.8
   Pon-Barry H, 2017, COMPUT SCI EDUC, V27, P54, DOI 10.1080/08993408.2017.1333270
   Prana G.A.A., 2021, IEEE Trans. Softw. Eng.
   Qiu HS, 2019, PROC INT CONF SOFTW, P688, DOI 10.1109/ICSE.2019.00078
   Ragins BR, 1999, J APPL PSYCHOL, V84, P529, DOI 10.1037/0021-9010.84.4.529
   Ramakrishnan A, 2014, J WOMENS HEALTH, V23, P927, DOI 10.1089/jwh.2014.4736
   Rehman I, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10163-0
   Riehle D, 2015, COMPUTER, V48, P51, DOI 10.1109/MC.2015.132
   Santos I, 2022, EUR CON SFTWR MTNCE, P174, DOI 10.1109/SANER53432.2022.00032
   Sarker J, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3583562
   Sarma A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P932, DOI 10.1145/2950290.2983984
   Schilling A., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P3446, DOI 10.1109/HICSS.2012.644
   Schilling A., 2012, P 50 ANN C COMP PEOP, P79
   Schlesselman J.J., 1982, Case-control studies: design, conduct, analysis, V2
   Shim H.S., 2007, J. STEM Teach. Educ., V44, P4
   Shuaibu BM, 2015, ARTIF INTELL REV, V43, P259, DOI 10.1007/s10462-012-9375-6
   Silva FS, 2015, INFORM SOFTWARE TECH, V58, P20, DOI 10.1016/j.infsof.2014.09.012
   Silva J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P421, DOI 10.1145/3368089.3409724
   Silva JO, 2020, J SYST SOFTWARE, V162, DOI 10.1016/j.jss.2019.110487
   Silva JO, 2017, PROC IEEE INT CONF S, P69, DOI 10.1109/ICSME.2017.81
   Singh V, 2012, PROCEEDINGS OF THE 17TH ACM INTERNATIONAL CONFERENCE ON SUPPORTING GROUP WORK, P65
   Spencer R., 2007, The Blackwell handbook of mentoring: A multiple perspectives approach, P97
   Stanik C, 2018, PROC IEEE INT CONF S, P172, DOI 10.1109/ICSME.2018.00027
   Steinmacher I., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P63, DOI 10.1109/RSSE.2012.6233413
   Steinmacher I, 2021, J INTERNET SERV APPL, V12, DOI 10.1186/s13174-021-00140-z
   Steinmacher I, 2019, COMPUT SUPP COOP W J, V28, P247, DOI 10.1007/s10606-018-9335-z
   Steinmacher I, 2019, IEEE SOFTWARE, V36, P41, DOI 10.1109/MS.2018.110162131
   Steinmacher I, 2016, PROC INT CONF SOFTW, P273, DOI 10.1145/2884781.2884806
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Steinmacher I, 2015, 2015 29TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P160, DOI 10.1109/SBES.2015.10
   Steinmacher I, 2015, P ANN HICSS, P5299, DOI 10.1109/HICSS.2015.624
   Steinmacher I, 2015, INFORM SOFTWARE TECH, V59, P67, DOI 10.1016/j.infsof.2014.11.001
   Steinmacher I, 2014, IFIP ADV INF COMM TE, V427, P153
   Steinmacher I, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P51, DOI 10.1109/SBES.2014.9
   Supplementary Spreadsheet, 2023, Online spreadsheet
   Tan X, 2023, IEEE T SOFTWARE ENG, V49, P3106, DOI 10.1109/TSE.2023.3242415
   Tan X, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P398, DOI 10.1145/3368089.3409746
   The Apache Software Foundation, 2020, Mentoring Programme
   Trainer E.H., 2014, P 18 INT C SUPP GROU, P111, DOI DOI 10.1145/2660398.2660420
   Trinkenreich Bianca, 2020, Proceedings of the ACM on Human-Computer Interaction, V4, DOI 10.1145/3415251
   Trinkenreich B, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3510460
   Wohlin C., 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.62, 10.1109/APSEC.2016.031]
NR 101
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2024
VL 171
AR 107470
DI 10.1016/j.infsof.2024.107470
EA APR 2024
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SO4C5
UT WOS:001235370100001
DA 2024-08-05
ER

PT J
AU Nie, YG
   Chen, YL
   Jiang, YJ
   Wu, HY
   Yin, BB
   Cai, KY
AF Nie, Yuge
   Chen, Yulei
   Jiang, Yujia
   Wu, Huayao
   Yin, Beibei
   Cai, Kai -Yuan
TI A method of multidimensional software aging prediction based on ensemble
   learning: A case of Android OS
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software aging prediction; Machine learning; Ensemble learning; Android
   OS; S-ADA (Software as an autonomous,; dependable and affordable system)
ID PRACTICE GUIDE; RELIABILITY; CLASSIFICATION; REJUVENATION
AB Context: Software aging refers to the phenomenon of performance degradation, increasing failure rate, or system crash due to resource consumption and error accumulation in software systems running for a long time. It has become the key factor affecting software systems' sustainability. Due to its complex formation reasons, precisely predicting the aging state in actual execution is hard but crucial for enabling proactive measures before a catastrophic situation. Machine learning (ML) has been employed on this issue. Objective: However, previous ML-based prediction methods are single-threaded in the whole process, posing challenges in delivering the desired performance facing diverse user scenarios. To alleviate this problem, we propose a multidimensional software aging prediction method based on ensemble learning (MSAP). Method: In the framework of MSAP, five dimensions, including datasets, labeling metrics, labeling thresholds, algorithms, and model decisions, are extracted and diversified according to aging characteristics and application situations. Results: Plenty of experiments have been conducted on Android devices from three distinct vendors. When subjected to identical workloads, MSAP demonstrates comparable performance to most unidimensional models. While under varied workloads, MSAP outperforms unidimensional models whose performance drops dramatically, demonstrating enhanced adaptability and predictive accuracy. Conclusion: MSAP shows exceptional stability while concurrently upholding outstanding prediction precision across a spectrum of user scenarios. It has better generalization characteristics and application prospects.
C1 [Nie, Yuge; Chen, Yulei; Yin, Beibei; Cai, Kai -Yuan] Beihang Univ, Sch Automat Sci & Elect Engn, Beijing 100191, Peoples R China.
   [Jiang, Yujia; Wu, Huayao] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
   [Jiang, Yujia; Wu, Huayao] Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210023, Peoples R China.
C3 Beihang University; Nanjing University; Nanjing University
RP Yin, BB (corresponding author), Beihang Univ, Sch Automat Sci & Elect Engn, Beijing 100191, Peoples R China.
EM yinbeibei@buaa.edu.cn
OI Chen, Yulei/0009-0007-0447-0682; Nie, Yuge/0009-0004-3760-6273
FU National Key R&D Program of China [2021YFB1600601]
FX This work is supported by the National Key R & D Program of China under
   Grant 2021YFB1600601.
CR Alonso J, 2013, PERFORM EVALUATION, V70, P231, DOI 10.1016/j.peva.2012.09.002
   Alonso J, 2010, I C DEPEND SYS NETWO, P507, DOI 10.1109/DSN.2010.5544275
   Alonso J, 2009, ICAS: 2009 FIFTH INTERNATIONAL CONFERENCE ON AUTONOMIC AND AUTONOMOUS SYSTEMS, P264, DOI 10.1109/ICAS.2009.56
   Alvarez E., 2015, To keep a boeing dreamliner flying, reboot once every 248 days
   Andrade E, 2019, IEEE INT SYMP SOFTW, P204, DOI 10.1109/ISSREW.2019.00073
   Andrzejak A, 2008, IEEE IFIP NETW OPER, P25, DOI 10.1109/NOMS.2008.4575113
   Cai KY, 2008, INFORM SOFTWARE TECH, V50, P1232, DOI 10.1016/j.infsof.2007.12.001
   Cai KY, 2007, J SYST SOFTWARE, V80, P1328, DOI 10.1016/j.jss.2006.11.008
   Cai KY, 2021, I C DEPEND SYS NETWO, P17, DOI 10.1109/DSN-S52858.2021.00019
   Cai KY, 2006, J COMPUT SCI TECH-CH, V21, P697, DOI 10.1007/s11390-006-0697-1
   Cai KY, 2004, ELEVENTH ANNUAL INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P77
   Cai KY, 2001, J SYST SOFTWARE, V58, P47, DOI 10.1016/S0164-1212(01)00027-9
   Cai KY, 2000, INFORM SCIENCES, V126, P137, DOI 10.1016/S0020-0255(00)00018-9
   Chen Yulei, 2023, 2023 IEEE 23rd International Conference on Software Quality, Reliability, and Security (QRS), P428, DOI 10.1109/QRS60937.2023.00049
   Cotroneo D, 2022, J SYST SOFTWARE, V186, DOI 10.1016/j.jss.2021.111181
   Cotroneo D, 2020, EMPIR SOFTW ENG, V25, P3357, DOI 10.1007/s10664-020-09838-3
   Cotroneo D, 2016, PROC INT SYMP SOFTW, P478, DOI 10.1109/ISSRE.2016.25
   Cotroneo D, 2013, PROC INT SYMP SOFTW, P178, DOI 10.1109/ISSRE.2013.6698917
   Dohi T, 2001, 2001 PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P87, DOI 10.1109/PRDC.2001.992684
   Dong XB, 2020, FRONT COMPUT SCI-CHI, V14, P241, DOI 10.1007/s11704-019-8208-z
   Du XT, 2022, IEEE T RELIAB, V71, P1540, DOI 10.1109/TR.2021.3110096
   Garg S, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P180, DOI 10.1109/ISSRE.1995.497656
   Google, 2021, Application exerciser monkey | Android developers
   Groombridge D., 2023, Gartner Top 10 Strategic Technology Trends for 2023
   Grottke M., 2008, 2008 IEEE INT C SOFT, P1
   Grottke M, 2006, IEEE T RELIAB, V55, P411, DOI 10.1109/TR.2006.879609
   Hayashi Toshiaki, 2014, International Journal of Adaptive, Resilient and Autonomic Systems, V5, P40, DOI 10.4018/ijaras.2014040103
   Hoffmann GA, 2007, IEEE T RELIAB, V56, P615, DOI 10.1109/TR.2007.909764
   HUANG YN, 1995, DIG PAP INT SYMP FAU, P381, DOI 10.1109/FTCS.1995.466961
   Hung YH, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11156832
   Huo SY, 2018, PROCEEDINGS OF 2018 TENTH INTERNATIONAL CONFERENCE ON ADVANCED COMPUTATIONAL INTELLIGENCE (ICACI), P741, DOI 10.1109/ICACI.2018.8377553
   Jia K, 2022, PROC INT SYMP SOFTW, P435, DOI 10.1109/ISSRE55969.2022.00049
   Jia YF, 2008, INT CONF QUAL SOFTW, P241, DOI 10.1109/QSIC.2008.54
   Ju C, 2018, J APPL STAT, V45, P2800, DOI 10.1080/02664763.2018.1441383
   Kang M, 2018, EXPERT SYST APPL, V94, P218, DOI 10.1016/j.eswa.2017.07.019
   Koutras Vasilis P., 2020, 2020 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW), P321, DOI 10.1109/ISSREW51248.2020.00092
   Liang DC, 2021, INFORM SCIENCES, V547, P271, DOI 10.1016/j.ins.2020.08.051
   Loddo A, 2022, COMPUT BIOL MED, V141, DOI 10.1016/j.compbiomed.2021.105032
   Lv JP, 2014, J SYST SOFTWARE, V97, P192, DOI 10.1016/j.jss.2014.08.004
   Ma Y, 2012, ENSEMBLE MACHINE LEARNING: METHODS AND APPLICATIONS, P1, DOI 10.1007/978-1-4419-9326-7
   Magalhaes J.P., 2010, 2010 IEEE 2 INT WORK, P1
   Miranda L, 2022, IEEE INT SYMP SOFTW, P146, DOI 10.1109/ISSREW55968.2022.00061
   Müller D, 2022, IEEE ACCESS, V10, P66467, DOI 10.1109/ACCESS.2022.3182399
   Musa J. D., 1992, Proceedings. Third International Symposium on Software Reliability Engineering (Cat. No.92TH0486-1), P140, DOI 10.1109/ISSRE.1992.285850
   NanoReview, 2023, Smartphone Processors Ranking List
   Pasupulety U, 2019, 2019 IEEE SECOND INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND KNOWLEDGE ENGINEERING (AIKE), P215, DOI 10.1109/AIKE.2019.00045
   Qiao Y, 2019, IEEE T RELIAB, V68, P633, DOI 10.1109/TR.2018.2881306
   Qiao Y, 2018, IEEE INT SYMP SOFTW, P271, DOI [10.1109/1SSREW.2018.00018, 10.1109/ISSREW.2018.00018]
   Qin FY, 2017, IEEE PAC RIM INT SYM, P135, DOI 10.1109/PRDC.2017.27
   Romagnoli R, 2023, IEEE T EMERG TOP COM, V11, P594, DOI 10.1109/TETC.2023.3267899
   Tan XY, 2021, IEEE INT C S Q R S, P759, DOI 10.1109/QRS54544.2021.00085
   Tripathi D, 2022, WIRELESS PERS COMMUN, V123, P785, DOI 10.1007/s11277-021-09158-9
   Vaidyanathan K, 2005, IEEE T DEPEND SECURE, V2, P124, DOI 10.1109/TDSC.2005.15
   Wang G, 2014, DECIS SUPPORT SYST, V57, P77, DOI 10.1016/j.dss.2013.08.002
   Weng CS, 2017, IEEE INT SYMP SOFTW, P273, DOI 10.1109/ISSREW.2017.50
   Wu XX, 2020, SOFTWARE QUAL J, V28, P195, DOI 10.1007/s11219-019-09481-2
   Xiang JW, 2018, IEEE INT SYMP SOFTW, P293, DOI [10.1109/1SSREW.2018.00021, 10.1109/ISSREW.2018.00021]
   Xu J, 2014, 2014 IEEE WORKSHOP ON ELECTRONICS, COMPUTER AND APPLICATIONS, P782, DOI 10.1109/IWECA.2014.6845739
   Yakhchi M, 2015, J SYST ENG ELECTRON, V26, P407, DOI 10.1109/JSEE.2015.00047
   Yaman M.A., 2021, Procedia Comput. Sci., V194, P202, DOI [10.1016/j.procs.2021.10.074, DOI 10.1016/J.PROCS.2021.10.074]
   Yan YQ, 2016, CHINA COMMUN, V13, P225, DOI 10.1109/CC.2016.7513217
   Yang HJ, 2017, J SYST SOFTWARE, V124, P169, DOI 10.1016/j.jss.2016.08.095
   Yang PY, 2010, CURR BIOINFORM, V5, P296, DOI 10.2174/157489310794072508
   Yue J., 2020, 2020 WORLD C COMPUTI, P1
   Zhao J., 2010, 2010 IEEE 2 INT WORK, P1
   Zhong Y, 2020, COMPUT NETW, V169, DOI 10.1016/j.comnet.2019.107049
NR 66
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2024
VL 170
AR 107422
DI 10.1016/j.infsof.2024.107422
EA MAR 2024
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OB4U0
UT WOS:001204795000001
DA 2024-08-05
ER

PT J
AU Pornprasit, C
   Tantithamthavorn, C
AF Pornprasit, Chanathip
   Tantithamthavorn, Chakkrit
TI Fine-tuning and prompt engineering for large language models-based code
   review automation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Modern code review; Code review automation; Large language models;
   GPT-3.5; Few-shot learning; Persona
AB Context: The rapid evolution of Large Language Models (LLMs) has sparked significant interest in leveraging their capabilities for automating code review processes. Prior studies often focus on developing LLMs for code review automation, yet require expensive resources, which is infeasible for organizations with limited budgets and resources. Thus, fine-tuning and prompt engineering are the two common approaches to leveraging LLMs for code review automation. Objective: We aim to investigate the performance of LLMs-based code review automation based on two contexts, i.e., when LLMs are leveraged by fine-tuning and prompting. Fine-tuning involves training the model on a specific code review dataset, while prompting involves providing explicit instructions to guide the model's generation process without requiring a specific code review dataset. Methods: We leverage model fine-tuning and inference techniques (i.e., zero-shot learning, few-shot learning and persona) on LLMs-based code review automation. In total, we investigate 12 variations of two LLMs-based code review automation (i.e., GPT-3.5 and Magicoder), and compare them with the Guo et al.'s approach and three existing code review automation approaches (i.e., CodeReviewer, TufanoT5 and D-ACT). Results: The fine-tuning of GPT 3.5 with zero-shot learning helps GPT-3.5 to achieve 73.17%-74.23% higher EM than the Guo et al.'s approach. In addition, when GPT-3.5 is not fine-tuned, GPT-3.5 with few-shot learning achieves 46.38%-659.09% higher EM than GPT-3.5 with zero-shot learning. Conclusions: Based on our results, we recommend that (1) LLMs for code review automation should be finetuned to achieve the highest performance.; and (2) when data is not sufficient for model fine-tuning (e.g., a cold-start problem), few-shot learning without a persona should be used for LLMs for code review automation. Our findings contribute valuable insights into the practical recommendations and trade-offs associated with deploying LLMs for code review automation.
C1 [Pornprasit, Chanathip; Tantithamthavorn, Chakkrit] Monash Univ, Melbourne, Australia.
C3 Monash University
RP Tantithamthavorn, C (corresponding author), Monash Univ, Melbourne, Australia.
EM chanathip.pornprasit@monash.edu; chakkrit@monash.edu
FU Australian Re-search Council's Discovery Early Career Researcher Award
   (DECRA) [DE200100941]
FX Chakkrit Tantithamthavorn was supported by the Australian Re-search
   Council's Discovery Early Career Researcher Award (DECRA) funding scheme
   (DE200100941) .
CR Brown T., 2020, ADV NEURAL INFORM PR, V33, P1877, DOI DOI 10.48550/ARXIV.2005.14165
   Chen M., 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   Chowdhery A, 2023, J MACH LEARN RES, V24
   Dilhara M, 2024, Arxiv, DOI arXiv:2402.07138
   Gao SZ, 2023, IEEE INT CONF AUTOM, P761, DOI 10.1109/ASE56229.2023.00109
   Gao Shuzheng, 2023, P ASE
   Geng Mingyang, Large language models are few-shot summarizers: Multi-intent comment generation via in-context learning
   github, About Us
   Guo Q, 2023, Arxiv, DOI arXiv:2309.08221
   Hossain SB, 2024, Arxiv, DOI arXiv:2404.11595
   Jiang ZH, 2024, Arxiv, DOI arXiv:2310.01796
   Kang S, 2023, PROC INT CONF SOFTW, P2312, DOI 10.1109/ICSE48619.2023.00194
   Kim S, 2023, Arxiv, DOI arXiv:2305.14045
   Li RY, 2023, Arxiv, DOI arXiv:2305.06161
   Li ZY, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1035, DOI 10.1145/3540250.3549081
   Liu JC, 2021, Arxiv, DOI arXiv:2101.06804
   Liu SY, 2024, Arxiv, DOI arXiv:2402.09353
   Lu JY, 2023, PROC INT SYMP SOFTW, P647, DOI 10.1109/ISSRE59848.2023.00026
   MacLeod L, 2018, IEEE SOFTWARE, V35, P34, DOI 10.1109/MS.2017.265100500
   Misu MRH, 2024, Arxiv, DOI arXiv:2402.00247
   OBrien David, 2024, P ICSE, P1
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Pornprasit C, 2023, Soft Anal Evol Reeng, P296, DOI 10.1109/SANER56733.2023.00036
   Ren S, 2020, Arxiv, DOI [arXiv:2009.10297, 10.48550/arXiv.2009.10297]
   Rigby P. C., 2013, P ESEC FSE, P202, DOI DOI 10.1145/2491411.2491444
   Robertson Stephen, 2009, Foundations and Trends in Information Retrieval, V3, P333, DOI 10.1561/1500000019
   Roziere B, 2024, Arxiv, DOI arXiv:2308.12950
   Thongtanunam P, 2022, PROC INT CONF SOFTW, P237, DOI 10.1145/3510003.3510067
   Touvron H, 2023, Arxiv, DOI [arXiv:2307.09288, DOI 10.48550/ARXIV.2307.09288]
   Touvron H, 2023, Arxiv, DOI [arXiv:2302.13971, DOI 10.48550/ARXIV.2302.13971]
   Tufan Rosalia, 2021, P ICSE, P1479
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Tufano R, 2022, PROC INT CONF SOFTW, P2291, DOI 10.1145/3510003.3510621
   Vaswani A., 2017, Advances in neural information processing systems, P5998
   Wang X., 2022, arXiv
   Wang Yue, 2021, 2021 C EMPIRICAL MET, P8696
   Wei J., 2021, arXiv
   Wei J., 2022, Advances in Neural Information Processing Systems, V35, P24824, DOI DOI 10.48550/ARXIV.2201.11903
   Wei J, 2023, Arxiv, DOI arXiv:2303.03846
   Wei YX, 2024, Arxiv, DOI arXiv:2312.02120
   White J, 2023, Arxiv, DOI [arXiv:2302.11382, DOI 10.48550/ARXIV.2302.11382, 10.48550/arXiv.2302.11382]
   Xu Junjielong, 2023, arXiv
   Yuan ZQ, 2023, Arxiv, DOI arXiv:2308.01240
   Zhou X, 2023, Arxiv, DOI arXiv:2303.07221
NR 44
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2024
VL 175
AR 107523
DI 10.1016/j.infsof.2024.107523
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZG8I5
UT WOS:001274231600001
DA 2024-08-05
ER

PT J
AU Yang, QX
   Yu, DJ
   Chen, X
   Xu, YH
   Yan, WL
   Hu, B
AF Yang, Quanxin
   Yu, Dongjin
   Chen, Xin
   Xu, Yihang
   Yan, Wangliang
   Hu, Bin
TI Feature envy detection based on cross-graph local semantics matching
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Feature envy; Code smells; Code refactoring; Cross-graph matching;
   Software maintenance
AB Context: As a typical code smell, feature envy occurs when a method exhibits excessive reliance and usage on specific functionalities of another class, which can lead to issues with the maintainability and extensibility of the code. As such, detecting and avoiding feature envy is critical for software development. Previous research on detecting feature envy has demonstrated significant advantages of deep learning-based approaches over static code analysis tools. However, current deep learning-based approaches still suffer from two limitations: (1) They focus on the functional or overall semantics of the code, which ignores the opportunities for local code semantics matching, making it challenging to identify some more complex cases; (2) Existing feature envy datasets are collected or synthesized using static code analysis tools, which limits feature envy cases to fixed rules and makes it challenging to cover other complex cases in real projects. Objective: We are motivated to propose a Siamese graph neural network based on code local semantics matching and collect feature envy refactoring cases from real projects for experimental evaluation. Method: To address the first issue, we propose a cross-graph local semantics matching network, which aims to simulate human intuition or experience to detect feature envy by analyzing the local semantics matching between code graphs. To address the second one, we manually review and collect commits for refactoring feature envy cases on GitHub. Then, we refer to image data augmentation technology to construct two datasets for identifying feature envy and recommending Move Method refactorings, respectively. Results: Extensive experiments show that our approach outperforms state-of-the-art baselines regarding both tasks' comprehensive metrics, F1-score and AUC. Conclusion: The experimental results indicate that the proposed Siamese graph neural network based on code local semantics matching is effective. In addition, the provided data augmentation algorithms can significantly improve model performance.
C1 [Yang, Quanxin; Yu, Dongjin; Chen, Xin; Xu, Yihang; Yan, Wangliang; Hu, Bin] Hangzhou Dianzi Univ, Coll Comp Sci & Technol, Hangzhou 310018, Zhejiang, Peoples R China.
C3 Hangzhou Dianzi University
RP Yu, DJ (corresponding author), Hangzhou Dianzi Univ, Coll Comp Sci & Technol, Hangzhou 310018, Zhejiang, Peoples R China.
EM yudj@hdu.edu.cn
FU National Natural Sci-ence Foundation of China [62372145]; Key Research
   and Development Program of Zhejiang Province [2023C03200]
FX <B>Acknowledgments</B> This work was supported in part by the National
   Natural Sci-ence Foundation of China under Grant 62372145, in part by
   the Key Research and Development Program of Zhejiang Province (No.
   2023C03200) . The authors gratefully acknowledge all the participants in
   the evaluation process for their help.
CR AlOmar EA, 2019, 2019 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON REFACTORING (IWOR 2019), P51, DOI 10.1109/IWoR.2019.00017
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bobkov D, 2018, IEEE ROBOT AUTOM LET, V3, P865, DOI 10.1109/LRA.2018.2792681
   Chen WK, 2018, P INT COMP SOFTW APP, P14, DOI 10.1109/COMPSAC.2018.10196
   Cui D, 2022, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSME55016.2022.00033
   Dipongkor AK, 2018, 2018 JOINT 7TH INTERNATIONAL CONFERENCE ON INFORMATICS, ELECTRONICS & VISION (ICIEV) AND 2018 2ND INTERNATIONAL CONFERENCE ON IMAGING, VISION & PATTERN RECOGNITION (ICIVPR), P76, DOI 10.1109/ICIEV.2018.8641069
   Fokaefs Marios, 2007, 2007 IEEE International Conference on Software Maintenance, P519, DOI 10.1109/ICSM.2007.4362679
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   Guo XL, 2019, 11TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2019), DOI 10.1145/3361242.3361257
   Kipf T.N., 2017, INT C LEARN REPR, P1
   Kiss A, 2018, PROC IEEE INT CONF S, P544, DOI 10.1109/ICSME.2018.00064
   Kurbatova Z., 2020, ICSEW 20, P315, DOI [10.1145/3387940.3392191, DOI 10.1145/3387940.3392191]
   Li YJ, 2019, Arxiv, DOI arXiv:1904.12787
   Ling X, 2023, IEEE T NEUR NET LEAR, V34, P799, DOI 10.1109/TNNLS.2021.3102234
   Liu H, 2018, IEEE INT CONF AUTOM, P385, DOI 10.1145/3238147.3238166
   Liu H, 2021, IEEE T SOFTWARE ENG, V47, P1811, DOI 10.1109/TSE.2019.2936376
   Mi Q, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10319-6
   Nongpong K, 2015, INT CONF KNOWL SMART, P7, DOI 10.1109/KST.2015.7051460
   Oliveto R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P820, DOI 10.1145/1985793.1985913
   Rahman M.M., 2017, 2017 IEEE INT C IM V, P1, DOI 10.1109/ICIVPR.2017.7890876
   Schuster M, 1997, IEEE T SIGNAL PROCES, V45, P2673, DOI 10.1109/78.650093
   Sharma T, 2021, IEEE WORK CONF MIN S, P590, DOI 10.1109/MSR52588.2021.00080
   Sharma T, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BRINGING ARCHITECTURAL DESIGN THINKING INTO DEVELOPERS DAILY ACTIVITIES (BRIDGE), P1, DOI [10.1145/2896935.2896938, 10.1109/Bridge.2016.009]
   Simon F., 1999, DISTANCE BASED COHES
   Sonnleithner Lisa, 2022, 2022 48th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P346, DOI 10.1109/SEAA56994.2022.00061
   Sousa BL, 2017, INT C PROGRAM COMPRE, P360, DOI 10.1109/ICPC.2017.8
   Terra R, 2018, J SYST SOFTWARE, V138, P19, DOI 10.1016/j.jss.2017.11.073
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Ujihara N, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P482, DOI 10.1109/SANER.2017.7884658
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang DX, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1225, DOI 10.1145/2939672.2939753
   Wang HZ, 2020, IEEE INT SYMP PARAL, P448, DOI 10.1109/ISPA-BDCloud-SocialCom-SustainCom51426.2020.00082
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/saner48275.2020.9054857, 10.1109/SANER48275.2020.9054857]
   Xiao D, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10098-y
   Yin X, 2021, P INT COMP SOFTW APP, P942, DOI 10.1109/COMPSAC51774.2021.00127
   Yu DJ, 2022, PROC INT SYMP SOFTW, P458, DOI 10.1109/ISSRE55969.2022.00051
   Zhang Minnan, 2022, 2022 9th International Conference on Dependable Systems and Their Applications (DSA), P215, DOI 10.1109/DSA56465.2022.00037
NR 39
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2024
VL 174
AR 107515
DI 10.1016/j.infsof.2024.107515
EA JUL 2024
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XZ1I0
UT WOS:001265406000001
DA 2024-08-05
ER

PT J
AU Gil, SJ
   Capel, MI
   Olea, G
AF Gil, Samuel Jimenez
   Capel, Manuel I.
   Olea, Gabriel
TI Automatic test cases generation from formal contracts
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Automatic test cases generation; Software testing; Formal methods;
   Software verification
AB Context: Software verification for critical systems is facing an unprecedented cost increase due to the large amount of software packed in multicore platforms generally. A substantial amount of the verification efforts are dedicated to testing. Spark/Ada is a language often employed in safety -critical systems due to its high reliability. Formal contracts are often inserted in Spark's program specification to be used by a static theorem prover that checks whether the specification conforms with the implementation. However, this static analysis has its limitations as certain bugs can only be spotted through software testing. Objective: The main goal of our work is to use these formal contracts in Spark as input for a test oracle - whose method we describe - to generate test cases. Subsequent objectives consist of a) arguing about the traceability to comply with safety -critical software standards such as DO -178C for civil avionics and b) embracing the best -established software testing methods for these systems. Method: Our test generation method reads Spark formal contracts and applies Equivalence Class Partitioning with Boundary Analysis as a software testing method generating traceable test cases. Results: The evaluation, which uses an array of open -source examples of Spark contracts, shows a high level of passed test cases and statement coverage. The results are also compared against a random test generator. Conclusion: The proposed method is very effective at achieving a high number of passed test cases and coverage. We make the case that the effort to create formal specifications for Spark can be used both for proof and (automatic) testing. Lastly, we noticed that some formal contracts are more suitable than others for our test generation.
C1 [Gil, Samuel Jimenez] SatixFy Space Syst UK, Trident Unit 2, Styal Rd, Manchester M22 5XB, England.
   [Capel, Manuel I.; Olea, Gabriel] Univ Granada, Dept Software Engn, ETSIIT, Granada 18071, Spain.
C3 University of Granada
RP Capel, MI (corresponding author), Univ Granada, Dept Software Engn, ETSIIT, Granada 18071, Spain.
EM Samuel.Gil@satixfy.com; manuelcapel@ugr.es; gabrieloo@correo.ugr.es
RI Capel Tunon, Manuel Isidoro/C-2435-2012
OI Capel Tunon, Manuel Isidoro/0000-0003-2449-4394
CR alire.ada, ABOUT US
   [Anonymous], 2019, IEEE Trans. Softw. Eng.
   [Anonymous], 2011, DO-178c
   [Anonymous], 2009, ECSS-E-ST-40C
   [Anonymous], 2018, ISO26262
   Bai Jia-Ju, 2016, Testing error handling code in device drivers using characteristic fault injection
   Barnes John, 2012, The Proven Approach to High Integrity Software
   Brown Stephen, 2021, Essentials of Software Testing
   Butcher Paul, 2021, AdaCore Whitepaper
   Cajica Roman Jaramillo, 2021, Automatic generation of test cases from formal specifications using mutation testing
   Claessen K, 2000, ACM SIGPLAN NOTICES, V35, P268, DOI 10.1145/357766.351266
   Comar Cyrille, 2012, Open-Do
   de la Cruz Raul, 2022, MASTECS multicore timing analysis on an avionics vehicle management computer
   Fedchin Aleksandr, 2023, A toolkit for automated testing of dafny
   gcc.gnu, ABOUT US
   Gil Samuel Jimenez, 2020, Ph.D. thesis
   github, About Us
   Godefroid P., 2008, P NDSS INT SOC
   Godefroid P, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P258
   Godefroid Patrice, 2012, IARCS ANN C FDN SOFT
   Henzinger TA, 2002, ACM SIGPLAN NOTICES, V37, P58, DOI 10.1145/565816.503279
   Hollander M., 2014, Nonparametric statistical methods, Vthird
   Holzer Andreas, 2008, COMPUTER AIDED VERIF
   Kaner Cem., 2002, LESSONS LEARNED SOFT
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kudrjavets G., 2006, Assessing the relationship between software assertions and faults: An empirical investigation
   McCormick JohnW., 2015, BUILDING HIGH INTEGR
   National Aeronautics and Space Administration (NASA), About us
   rapitasystems, About us
   Rierson Leanna, 2013, Developing Safety-Critical Software: A Practical Guide for Aviation Software and DO-178C Compliance
   Rustan K, 2023, Program Proofs
   Shen J.J., 2019, Princ. Pract.
   Sun Y., 2017, CORR, DOI DOI 10.1002/EP.10350
   Tracey Nigel James, 2002, Ph.D. thesis
   Weidman Georgia, 2018, Penetration testing: A hands-on introduction to hacking
NR 35
TC 0
Z9 0
U1 3
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2024
VL 172
AR 107467
DI 10.1016/j.infsof.2024.107467
EA APR 2024
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SM9M9
UT WOS:001234988300001
OA hybrid
DA 2024-08-05
ER

PT J
AU Tang, MD
   Xie, FF
   Lian, SX
   Mai, JJ
   Li, SY
AF Tang, Mingdong
   Xie, Fenfang
   Lian, Sixian
   Mai, Jiajin
   Li, Shuangyin
TI Mashup-oriented API recommendation via pre-trained heterogeneous
   information networks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mashup; API recommendation; Pre-trained technology; Meta-path; Attention
   mechanism
ID SERVICE RECOMMENDATION
AB Combining different Web APIs to create Mashups has become very popular nowadays. Choosing suitable ones from massive Web APIs is of vital importance for efficient Mashup creations. A number of Mashup-oriented API recommendation methods have been proposed to address this issue, but they have limitations in their ability to exploit the rich attributes and connection data of Web APIs, which impedes their performance. By modeling the API -related data as a heterogeneous information network and using pre -training technology, this paper proposes an accurate API recommendation method, named PHRec. In this method, the meta paths of APIs in the heterogeneous information network are exploited to obtain their context semantics; the method adopts an attention mechanism. Extensive experiments have been conducted with a real Web API dataset to evaluate the proposed method. The experimental results demonstrate that it significantly outperforms the state-of-the-art methods in the Web API recommendation task.
C1 [Tang, Mingdong; Xie, Fenfang; Lian, Sixian; Mai, Jiajin] Guangdong Univ Foreign Studies, Sch Informat Sci & Technol, Guangzhou 510006, Guangdong, Peoples R China.
   [Xie, Fenfang] Sun Yat Sen Univ, Sch Comp Sci & Engn, Guangzhou 510006, Guangdong, Peoples R China.
   [Li, Shuangyin] South China Normal Univ, Sch Comp Sci, Guangzhou 510631, Guangdong, Peoples R China.
C3 Guangdong University of Foreign Studies; Sun Yat Sen University; South
   China Normal University
RP Li, SY (corresponding author), South China Normal Univ, Sch Comp Sci, Guangzhou 510631, Guangdong, Peoples R China.
EM shuangyinli@scnu.edu.cn
FU National Natural Science Foundation of China [61976061, 62006083,
   62102461]
FX This work was supported by National Natural Science Foundation of China
   under grant No. 61976061, No. 62006083 and No. 62102461. Shuangyin Li is
   the corresponding author.
CR Adeleye O, 2020, PROCEEDINGS OF THE AUSTRALASIAN COMPUTER SCIENCE WEEK MULTICONFERENCE (ACSW 2020), DOI 10.1145/3373017.3373035
   [Anonymous], 2012, ARXIV
   Bahdanau D, 2016, Arxiv, DOI arXiv:1409.0473
   Bai B, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC), P124, DOI 10.1109/SCC.2017.23
   Buqing Cao, 2013, 2013 IEEE 20th International Conference on Web Services (ICWS), P99, DOI 10.1109/ICWS.2013.23
   Cao BQ, 2017, INFORM SOFTWARE TECH, V90, P40, DOI 10.1016/j.infsof.2017.05.001
   Cappiello C, 2010, IEEE INTERNET COMPUT, V14, P14, DOI 10.1109/MIC.2010.60
   Chen HX, 2021, WSDM '21: PROCEEDINGS OF THE 14TH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P1056, DOI 10.1145/3437963.3441762
   Chune Li, 2013, 2013 IEEE International Conference on Services Computing (SCC), P49, DOI 10.1109/SCC.2013.107
   Cremonesi P., 2010, Proceedings of the Fourth ACM Conference on Recommender Systems, RecSys'10, DOI DOI 10.1145/1864708.1864721
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dong YX, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P135, DOI 10.1145/3097983.3098036
   Fu TY, 2017, CIKM'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1797, DOI 10.1145/3132847.3132953
   Glorot X., 2010, Proceedings of Machine Learning Research, P249
   Gong WW, 2022, PROCEEDINGS OF THE 45TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '22), P395, DOI 10.1145/3477495.3531962
   He KM, 2015, IEEE I CONF COMP VIS, P1026, DOI 10.1109/ICCV.2015.123
   He Q, 2017, IEEE T SOFTWARE ENG, V43, P658, DOI 10.1109/TSE.2016.2624293
   He XN, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P173, DOI 10.1145/3038912.3052569
   Kwapong BA, 2019, IEEE WORLD CONGR SER, P115, DOI 10.1109/SERVICES.2019.00039
   Li XY, 2022, J SUPERCOMPUT, V78, P12621, DOI 10.1007/s11227-022-04369-8
   Lian SX, 2022, CONNECT SCI, V34, P124, DOI 10.1080/09540091.2021.1974819
   Liang TT, 2016, LECT NOTES COMPUT SC, V9936, P371, DOI 10.1007/978-3-319-46295-0_23
   Maas A.L., 2013, ICML WORK DEEP LEARN, V28
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, DOI 10.48550/ARXIV.1301.3781]
   Qi L, 2020, INT J PHYTOREMEDIAT, V22, P227, DOI 10.1080/15226514.2019.1658704
   Shi C, 2019, IEEE T KNOWL DATA EN, V31, P357, DOI 10.1109/TKDE.2018.2833443
   Shi M, 2020, ACM T WEB, V14, DOI 10.1145/3386041
   Shi M, 2019, IEEE T PARALL DISTR, V30, P1077, DOI 10.1109/TPDS.2018.2877363
   Sunt YZ, 2011, PROC VLDB ENDOW, V4, P992
   Tang MD, 2016, IEEE T NETW SERV MAN, V13, P126, DOI 10.1109/TNSM.2016.2517097
   Tapia B, 2012, P INT C CHIL COMPUT, P83, DOI 10.1109/SCCC.2011.12
   Tieleman Tijmen, 2012, COURSERA Neural Networks Mach. Learn, V17
   Wan Y, 2016, LECT NOTES ARTIF INT, V9651, P436, DOI 10.1007/978-3-319-31753-3_35
   Wang X, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P950, DOI 10.1145/3292500.3330989
   Wang X, 2020, AAAI CONF ARTIF INTE, V34, P6275
   Wang XD, 2019, SIGBIOMED WORKSHOP ON BIOMEDICAL NATURAL LANGUAGE PROCESSING (BIONLP 2019), P165, DOI 10.1145/3331184.3331267
   Wang XJ, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2051, DOI 10.1145/3097983.3098096
   Wenxing Xu, 2013, 2013 IEEE 20th International Conference on Web Services (ICWS), P107, DOI 10.1109/ICWS.2013.24
   Xiang Jiayan, 2023, 2023 26th International Conference on Computer Supported Cooperative Work in Design (CSCWD), P1926, DOI 10.1109/CSCWD57460.2023.10152817
   Xiao G, 2023, Infor Reuse and Inte, P179, DOI 10.1109/IRI58017.2023.00037
   Xiao Y, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, ICWS 2021, P135, DOI 10.1109/ICWS53863.2021.00029
   Xie F, 2019, EXPERT SYST APPL, V123, P178, DOI 10.1016/j.eswa.2019.01.025
   Xie FF, 2021, KNOWL-BASED SYST, V211, DOI 10.1016/j.knosys.2020.106524
   Xie FF, 2019, IEEE ACCESS, V7, P16155, DOI 10.1109/ACCESS.2019.2894822
   Yao L, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P217, DOI 10.1109/ICWS.2015.38
   Yu Changyong, 2023, 2023 26th International Conference on Computer Supported Cooperative Work in Design (CSCWD), P261, DOI 10.1109/CSCWD57460.2023.10152634
   Yu J, 2008, IEEE INTERNET COMPUT, V12, P44, DOI 10.1109/MIC.2008.114
   Yu L, 2019, IEEE WORLD CONGR SER, P135, DOI 10.1109/SERVICES.2019.00037
   Zhang CX, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P793, DOI 10.1145/3292500.3330961
   Zhang SA, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3285029
   Zhong Y, 2018, IEEE T AUTOM SCI ENG, V15, P468, DOI 10.1109/TASE.2016.2624310
NR 51
TC 0
Z9 0
U1 4
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2024
VL 169
AR 107428
DI 10.1016/j.infsof.2024.107428
EA FEB 2024
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QO1O2
UT WOS:001221723900001
DA 2024-08-05
ER

PT J
AU Liu, CY
   Chen, X
   Li, XW
   Xue, YX
AF Liu, Chongyang
   Chen, Xiang
   Li, Xiangwei
   Xue, Yinxing
TI Making vulnerability prediction more practical: Prediction,
   categorization, and localization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Deep learning; Pre-trained language model; Semantic analysis;
   Vulnerability detection
AB Context: Due to the prevalence of software vulnerabilities, vulnerability detection becomes a fundamental problem in system security. Objective: To solve this problem, academics and industries have made great efforts to propose deep-learningbased (DL -based) approaches but these attempts have three main limitations: (1) perform poorly on real -world projects (e.g., Accuracy below 74.33% and F1 below 73.55%); (2) perform poorly in catching vulnerable patterns due to incomplete code representations; (3) mostly perform coarse-grained function-level prediction and lack interpretability analysis. Methods: In this paper, we propose Vm.PCL , a BLSTM and CodeBERT based approach, which makes the first attempt to perform vulnerability prediction, categorization, and localization automatically within a framework. To alleviate the above-mentioned limitations, our Vm.PCL considers multi -dimension (i.e., text -based, sequencebased, and graph-based) representations to catch latent vulnerable patterns and multi -model training to learn high -level semantics. Results: Through experiments on four real -world datasets containing 114+ CWE (Common Weakness Enumeration) types spanning from 2005 to 2022, we find that our Vm.PCL outperforms the baselines by (1) 13.51% similar to 60.64% and 14.34% similar to 180.23% on Accuracy, and F1 respectively on vulnerability prediction; (2) 10.32% similar to 46.79%, and 10.71% similar to 127.80% on Accuracy, and macro -F1 respectively on vulnerability categorization; (3) 9.23% similar to 36.54% on Top -10 Accuracy on vulnerability localization. Conclusion: These results indicate that our Vm.PCL is considerably more accurate, effective, fine-grained, and practical than previous studies. Besides, our further analyses show that Vm.PCL is indeed capable of capturing all vulnerability lines, and the result of line -level vulnerability localization is consistent with the functionlevel vulnerability prediction as the increase of predicted lines. Thus making Vm.PCL more interpretable than previous studies. Our additional investigation also shows that Vm.PCL effectively detects the Most Dangerous 25 CWEs in 2022, which is instructive for security researchers.
C1 [Liu, Chongyang; Li, Xiangwei; Xue, Yinxing] Univ Sci & Technol China, Sch Comp Sci & Technol, Hefei, Peoples R China.
   [Chen, Xiang] Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
C3 Chinese Academy of Sciences; University of Science & Technology of
   China, CAS; Nantong University
RP Xue, YX (corresponding author), Univ Sci & Technol China, Sch Comp Sci & Technol, Hefei, Peoples R China.; Chen, X (corresponding author), Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
EM lcyyy@mail.ustc.edu.cn; xchencs@ntu.edu.cn; lixw20@mail.ustc.edu.cn;
   yxxue@ustc.edu.cn
OI chen, xiang/0000-0002-1180-3891; , liu/0000-0002-6031-762X
FU Anhui Provincial Department of Science and Technology [202103a05020009];
   National Natural Science Foundation of China [61972373]; Basic Research
   Program of Jiangsu Province [BK20201192]
FX Xiang Chen and Yinxing Xue have contributed equally to this work and
   they are co-corresponding authors. This work is supported in part by the
   Anhui Provincial Department of Science and Technology under Grant
   202103a05020009, in part by the National Natural Science Foundation of
   China under Grant 61972373, in part by the Basic Research Program of
   Jiangsu Province under Grant BK20201192.
CR Alon U., 2018, arXiv
   Ancona M, 2018, Arxiv, DOI [arXiv:1711.06104, 10.48550/arxiv.1711.06104]
   Phan AV, 2017, PROC INT C TOOLS ART, P45, DOI 10.1109/ICTAI.2017.00019
   [Anonymous], 2014, Int. J. Comput. Linguist. Appl.
   [Anonymous], 2006, Common weakness enumeration
   [Anonymous], 2022, 2022 CWE Top 25 Most Dangerous Software Weaknesses
   Booth H., 2013, The national vulnerability database
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Cheng X, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3436877
   Cho KYHY, 2014, Arxiv, DOI [arXiv:1406.1078, 10.48550/arXiv.1406.1078]
   Cppcheck, about Us
   cve.mitre, Common Vulnerabilities and Exposure
   Fan FL, 2021, IEEE T RADIAT PLASMA, V5, P741, DOI 10.1109/TRPMS.2021.3066428
   Fan JH, 2020, IEEE WORK CONF MIN S, P508, DOI 10.1145/3379597.3387501
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Fu M, 2022, IEEE WORK CONF MIN S, P608, DOI 10.1145/3524842.3528452
   Gage P., 1994, C Users J, V12, P23, DOI DOI 10.5555/177910.177914
   Ghaffarian SM, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092566
   github, GitHub Advisory Database
   Graves A, 2005, NEURAL NETWORKS, V18, P602, DOI 10.1016/j.neunet.2005.06.042
   Hin D, 2022, IEEE WORK CONF MIN S, P596, DOI 10.1145/3524842.3527949
   Dam HK, 2021, IEEE T SOFTWARE ENG, V47, P67, DOI 10.1109/TSE.2018.2881961
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Lawrence S, 1997, IEEE T NEURAL NETWOR, V8, P98, DOI 10.1109/72.554195
   Li Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P292, DOI 10.1145/3468264.3468597
   Li YJ, 2017, Arxiv, DOI arXiv:1511.05493
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, Arxiv, DOI arXiv:1801.01681
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Lin GJ, 2021, IEEE T DEPEND SECURE, V18, P2469, DOI 10.1109/TDSC.2019.2954088
   Lin GJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2539, DOI 10.1145/3133956.3138840
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Lundberg SM, 2017, ADV NEUR IN, V30
   N. I. of Standards and Technology, 2018, Software assurance reference dataset
   Nguyen TG, 2023, IEEE T SOFTWARE ENG, V49, P4035, DOI 10.1109/TSE.2023.3281275
   Perozzi B, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P701, DOI 10.1145/2623330.2623732
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Sennrich R, 2016, Arxiv, DOI [arXiv:1508.07909, DOI 10.48550/ARXIV.1508.07909]
   Shrikumar A, 2017, PR MACH LEARN RES, V70
   Simonyan K, 2014, Arxiv, DOI [arXiv:1312.6034, DOI 10.48550/ARXIV.1312.6034]
   Sundararajan M, 2017, PR MACH LEARN RES, V70
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Thapa C, 2022, PROCEEDINGS OF THE 38TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, ACSAC 2022, P481, DOI 10.1145/3564625.3567985
   Nguyen TG, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1726, DOI 10.1145/3540250.3558936
   Veličkovic P, 2018, Arxiv, DOI arXiv:1710.10903
   Wang DX, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1225, DOI 10.1145/2939672.2939753
   Wang PC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/3180155.3180179
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Word2vec, 2018, About us
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Ying Rex, 2019, Adv Neural Inf Process Syst, V32, P9240
   Zhang Y, 2021, IEEE T EM TOP COMP I, V5, P726, DOI 10.1109/TETCI.2021.3100641
   Zhou JY, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P705, DOI 10.1109/ASE51524.2021.9678720
   Zhou YQ, 2019, ADV NEUR IN, V32
   Zou DQ, 2021, IEEE T DEPEND SECURE, V18, P2224, DOI 10.1109/TDSC.2019.2942930
NR 55
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2024
VL 171
AR 107458
DI 10.1016/j.infsof.2024.107458
EA APR 2024
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QK3C4
UT WOS:001220718500001
DA 2024-08-05
ER

PT J
AU Lin, CT
   Huang, SJ
AF Lin, Ching-Te
   Huang, Sun-Jen
TI Technical risk model of machine learning based software project
   development - A multinational empirical study using modified Delphi-AHP
   method
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technical risk assessment; Machine learning; Software project
   development; Modified Delphi; AHP
ID DE-IDENTIFICATION; CHALLENGES; MANAGEMENT; FRAMEWORK; TOOL
AB Context: The development of machine learning (ML) based software projects has increased significantly over the past decade, introducing new technical risks that rarely or never appear in traditional software development projects. Objective: This research aims to identify and prioritize the technical risk factors that may lead to the failure of MLbased software development projects. Method: First, a literature review was conducted to compile a preliminary list of technical risk factors for MLbased software project development. Then, two rounds of the modified Delphi process were conducted with 17 ML experts to review and verify the completeness and appropriateness of the preliminary technical risk factors. A hierarchy of five technical risk categories with 22 technical risk factors was concluded for the analytic hierarchy process (AHP). Then, three rounds of online AHP questionnaires were administered. The consistency ratio (CR) was used to check the respondents' answers, and the quartile deviation (QD) was applied to assess the consensus on all 96 questions. Finally, we prioritized the technical risk categories and associated technical risk factors. Results: We found that "data availability and quality" ranked as the top technical risk category in terms of severity, probability, and impact rankings of the five technical risk categories. Furthermore, all four technical risk factors within this category also occupied the top four positions of impact ranking. Conclusion: The research results highlight the crucial role of the four data availability and quality risk factors for the failure of ML-based software project development. The proposed technical risk model of ML-based software project development with the identified severity and probability priorities may provide practitioners and research community with a clear overview, highlighting areas demanding priority attention to effectively mitigate project failure risks. These findings have broader implications for improving the success rates of MLbased software projects across various domains.
C1 [Lin, Ching-Te; Huang, Sun-Jen] Natl Taiwan Univ Sci & Technol, Dept Informat Management, 43 Sect 4,Keelung Rd, Taipei City 106335, Taiwan.
C3 National Taiwan University of Science & Technology
RP Huang, SJ (corresponding author), Natl Taiwan Univ Sci & Technol, Dept Informat Management, 43 Sect 4,Keelung Rd, Taipei City 106335, Taiwan.
EM huangsj@mail.ntust.edu.tw
OI Lin, Ching-te/0009-0003-0460-5576
CR Ab LatifR., 2017, ED MED J, V9, P89, DOI [DOI 10.21315/EIMJ2017, 10.21315/eimj2017.9.3.10]
   Addison T, 2003, INT J INFORM MANAGE, V23, P25, DOI 10.1016/S0268-4012(02)00066-X
   Agbese M, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P224, DOI 10.1109/REW53955.2021.00042
   ALTER S, 1978, SLOAN MANAGE REV, V20, P23
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   Arpteg A, 2018, EUROMICRO CONF PROC, P50, DOI 10.1109/SEAA.2018.00018
   Ashmore R, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3453444
   Baier Lucas, 2019, ECIS, V1
   Beecham S, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110823
   Belani H., 2019, IEEE 27 INT REQ ENG
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Bosch J., 2018, SIBW, P177
   Bozic Nayak B., 2021, INT C WEB SERV, P63
   Brown T. B., 2020, P 34 INT C NEURAL IN, P1
   D'souza R., 2018, Int J Innovat Sci Res Technol, V3, P366
   Day J., 2005, Electron J Business Res Methods, V3, P103, DOI DOI 10.12691/AJCEA-2-2-4
   Dey S, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110941
   Eykholt K, 2018, PROC CVPR IEEE, P1625, DOI 10.1109/CVPR.2018.00175
   Fischer L, 2021, MACH LEARN KNOW EXTR, V3, P56, DOI 10.3390/make3010004
   Foidl H, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P13, DOI 10.1145/3340482.3342743
   Fong SF, 2013, PROCD SOC BEHV, V103, P299, DOI 10.1016/j.sbspro.2013.10.338
   Garbin C, 2020, MULTIMED TOOLS APPL, V79, P12777, DOI 10.1007/s11042-019-08453-9
   Gartner, GARTN IT S XPO 2020
   Giray G, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111031
   Gordon T.J., 1994, FUTURES RES METHODOL
   Higuera R.P., 1996, Software Risk Management, P5
   Hintze M, 2018, INT DATA PRIV LAW, V8, P86, DOI 10.1093/idpl/ipx020
   Huang SJ, 2008, INFORM MANAGE-AMSTER, V45, P175, DOI 10.1016/j.im.2008.02.001
   Husain O., 50 Biggest GDPR Fines and Penalties
   Hutter F, 2019, SPRING SER CHALLENGE, P1, DOI 10.1007/978-3-030-05318-5
   Jacobsson A, 2016, FUTURE GENER COMP SY, V56, P719, DOI 10.1016/j.future.2015.09.003
   Keil M, 1998, COMMUN ACM, V41, P76, DOI 10.1145/287831.287843
   Kozlowski A, 2021, METHODSX, V8, DOI 10.1016/j.mex.2021.101393
   Kumeno F, 2019, INTELL DECIS TECHNOL, V13, P463, DOI 10.3233/IDT-190160
   Lewis Grace A., 2021, 2021 IEEE/ACM 1st Workshop on AI Engineering - Software Engineering for AI (WAIN), P133, DOI 10.1109/WAIN52551.2021.00028
   Lwakatare LE, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106368
   Lwakatare LE, 2019, LECT NOTES BUS INF P, V355, P227, DOI 10.1007/978-3-030-19034-7_14
   Mainali K., 2021, DATA ANALYTICS 2021
   Martínez-Fernández S, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3487043
   Mourao E, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2020.106294
   Murphy KP, 2012, MACHINE LEARNING: A PROBABILISTIC PERSPECTIVE, P1
   Nascimento E., 2020, arXiv
   Okoli C, 2004, INFORM MANAGE-AMSTER, V42, P15, DOI 10.1016/j.im.2003.11.002
   Paleyes A, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3533378
   Polyzotis N, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1723, DOI 10.1145/3035918.3054782
   Raj A, 2019, EUROMICRO CONF PROC, P140, DOI 10.1109/SEAA.2019.00030
   Ramos Alarabiat I., 2019, Electron. J. Bus. Res. Methods, V17, P1
   Ranawana Romesh, 2021, 2021 5 SLAAI INT C A, P1
   Ribaric S, 2016, SIGNAL PROCESS-IMAGE, V47, P131, DOI 10.1016/j.image.2016.05.020
   Saaty TL, 2003, MATH COMPUT MODEL, V38, P233, DOI 10.1016/S0895-7177(03)00216-4
   SAATY TL, 1983, IEEE T ENG MANAGE, V30, P140, DOI 10.1109/TEM.1983.6448606
   Santhanam P., 2020, Engineering Dependable and Secure Machine Learning Systems, P1
   Schwartz Oscar, 2019, IEEe Spectr, V11
   Sculley D, 2015, ADV NEUR IN, V28
   Serban Alex, 2020, P ACM IEEE INT S EMP, P1, DOI 10.1145/3382494.3410681
   Song F, 2021, IEEE T IND INFORM, V17, P6916, DOI 10.1109/TII.2020.3029766
   Studer S, 2021, MACH LEARN KNOW EXTR, V3, P392, DOI 10.3390/make3020020
   Tjoa E, 2021, IEEE T NEUR NET LEAR, V32, P4793, DOI 10.1109/TNNLS.2020.3027314
   Torrecilla-Salinas CJ, 2019, INFORM TECHNOL MANAG, V20, P9, DOI 10.1007/s10799-018-0290-7
   Tramèr F, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P601
   Wallace L, 2004, INFORM MANAGE-AMSTER, V42, P115, DOI 10.1016/j.im.2003.12.007
   Wallace L, 2004, COMMUN ACM, V47, P68, DOI 10.1145/975817.975819
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1857, DOI 10.1109/TSE.2019.2937083
   Wasserman A.I., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research, P397, DOI DOI 10.1145/1882362.1882443
   Wiggers Kyle, 2019, IDC: For 1 in 4 companies, half of all AI projects fail
   Wohlin C., 2014, P 18 INT C EV ASS SO, P1, DOI [DOI 10.1145/2601248.2601268, 10.1145/2601248.2601268]
   Yoshioka Ishikawa N., 2019, P JOINT 7 INT WORKSH, P00009, DOI [10.1109/CESSER-IP.2019, DOI 10.1109/CESSER-IP.2019]
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
NR 68
TC 0
Z9 0
U1 5
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2024
VL 171
DI 10.1016/j.infsof.2024.107449
EA APR 2024
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QL3J3
UT WOS:001220986600001
DA 2024-08-05
ER

PT J
AU Khoshnevis, S
   Ardestani, O
AF Khoshnevis, Sedigheh
   Ardestani, Omid
TI Search-based approaches to optimizing software product line
   architectures: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software product line architecture; Search-based software engineering;
   Search-based software architecture; Systematic literature review
AB Context: Software product line architecture (PLA) plays an important role in developing software product lines (SPLs) and other configurable systems. Search-based (SB) approaches can optimize the design of PLAs according to a given set of metrics as fitness functions. Although this area has been explored by researchers, there is a lack of synthesis of search-based PLA (SBPLA) research. A comprehensive review would offer valuable insights into previous contributions and identify areas for further research. Objective: The objective of this work is to identify and summarize quality-assessed peer-reviewed studies on search-based PLA design from the aspects of the research scope, problems, contributions, evaluation, and open issues. Methods: We conducted a systematic literature review based on Kitchenham's methodology. Based on a predefined search protocol we identified related studies limited to the ones published between 2000 and 2022 in journals and conference proceedings. Results: Out of 686 initial search results, 34 papers were finally selected after a set of deep search, and criteria application activities. We provided a taxonomy of optimization problems in SBPLA and found that PLA remodularization and refactoring were the two categories most emphasized by the researchers. We also provided several other categorizations regarding contributions, research design, open issues, and other subjects of interest. Conclusions: The interest in SBPLA design has been growing since 2014. PLA cloning and re-engineering problems have never been addressed in the literature. Performing subjective evaluation with the participation of experts from the industry will be profitable, as a complementary method to objective experimental evaluation, and therefore carrying out quanti-qualitative research.
C1 [Khoshnevis, Sedigheh; Ardestani, Omid] Islamic Azad Univ, Dept Comp Engn, Shahr E Qods Branch, Tehran, Iran.
C3 Islamic Azad University
RP Khoshnevis, S (corresponding author), Islamic Azad Univ, Dept Comp Engn, Shahr E Qods Branch, Tehran, Iran.
EM Sedigheh.Khoshnevis@iau.ac.ir
CR Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Charters S., 2007, GUIDELINES PERFORMIN
   Clements P., 2002, Software Product Lines: Practices and Patterns, V59
   Contieri AC, 2011, LECT NOTES COMPUT SC, V6903, P130, DOI 10.1007/978-3-642-23798-0_13
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Donegan P.M., 2007, SBCARS, P3
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   Fischer S, 2014, PROC IEEE INT CONF S, P391, DOI 10.1109/ICSME.2014.61
   Gamma E., 1993, ECOOP '93 - Object-Oriented Programming. 7th European Conference Proceedings, P406
   Garcia A., 2005, AOSD 05, P3
   Garcia A, 2008, COMMUN ACM, V51, P75, DOI 10.1145/1342327.1342341
   Gomaa H, 2011, SOFTWARE MODELING AND DESIGN: UML, USE CASES, PATTERNS, AND SOFTWARE ARCHITECTURES, P1, DOI 10.1017/CBO9780511779183
   Gomaa H., 2004, Designing Software Product Lines with UML: From Use Cases to PatternBased Software Architectures
   Harman M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P5, DOI 10.1145/2648511.2648513
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Kapferer S, 2019, Service Decomposition as a Series of Architectural Refactorings
   Khoshnevis S, 2023, FRONT COMPUT SCI-CHI, V17, DOI 10.1007/s11704-022-1390-4
   Kitchenham B., 2004, KEELE U, VVolume 33, P1
   Kitchenham B. e. a., 2007, Technical report EBSE-2007-01, DOI DOI 10.1145/1134285.1134500
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham Barbara Ann, 2015, Evidencebased software engineering and systematic reviews, V4
   Knieke C, 2022, ELECTRONICS-SWITZ, V11, DOI 10.3390/electronics11121860
   Lima C, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P13, DOI 10.1145/2973839.2973842
   Linsbauer Lukas., 2013, P 17 INT SOFTW PROD, P131
   Lopez-Herrejon R.E., 2014, arXiv
   Lopez-Herrejon RE, 2015, INFORM SOFTWARE TECH, V61, P33, DOI 10.1016/j.infsof.2015.01.008
   Madrigar T.T., 2021, J. Softw. Eng. Res. Dev., V9, P1
   Mariani T, 2016, J SYST SOFTWARE, V115, P157, DOI 10.1016/j.jss.2016.01.039
   Marimuthu C, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P143, DOI 10.1145/3106195.3106212
   Murugesupillai E., 2011, P 15 INT SOFTW PROD, V2, P11
   Neto JC, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P178, DOI 10.5220/0006363201780189
   Ochoa L, 2018, J SYST SOFTWARE, V144, P511, DOI 10.1016/j.jss.2018.07.054
   Pawlak R., 2002, P AOM UML WORKSH AOS
   Pohl K., 2005, Software product line engineering: foundations, principles and techniques, DOI [DOI 10.1007/3-540-28901-1, 10.1007/3-540-28901-1]
   Riquelme N, 2015, PROC LAT AM COMPUT C, P286, DOI 10.1109/clei.2015.7360024
   Sinkala ZT, 2018, ECSA 2018: PROCEEDINGS OF THE 12TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE: COMPANION PROCEEDINGS, DOI 10.1145/3241403.3241454
   Tang LJ, 2010, SERV ORIENTED COMPUT, V4, P81, DOI 10.1007/s11761-010-0059-2
   Wägemann T, 2019, LECT NOTES COMPUT SC, V11681, P126, DOI 10.1007/978-3-030-29983-5_9
   Wagemann T., 2018, Modellierung, V2018
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Ziadi T, 2012, EUR CON SFTWR MTNCE, P417, DOI 10.1109/CSMR.2012.52
NR 44
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2024
VL 170
AR 107446
DI 10.1016/j.infsof.2024.107446
EA MAR 2024
PG 27
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QF9E2
UT WOS:001219573300001
DA 2024-08-05
ER

PT J
AU Kartal, Y
   Akdeniz, EK
   Özkan, K
AF Kartal, Yusuf
   Akdeniz, E. Kaan
   Ozkan, Kemal
TI Automating modern code review processes with code similarity measurement
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Modern code review; Vectorization; Code similarity; Information
   retrieval
AB Context: Modern code review is a critical component in software development processes, as it ensures security, detects errors early and improves code quality. However, manual reviews can be time-consuming and unreliable. Automated code review can address these issues. Although deep -learning methods have been used to recommend code review comments, they are expensive to train and employ. Instead, information retrieval (IR) -based methods for automatic code review are showing promising results in efficiency, effectiveness, and flexibility. Objective: Our main objective is to determine the optimal combination of the vectorization method and similarity to measure what gives the best results in an automatic code review, thereby improving the performance of IR -based methods. Method: Specifically, we investigate different vectorization methods (Word2Vec, Doc2Vec, Code2Vec, and Transformer) that differ from previous research (TF-IDF and Bag -of -Words), and similarity measures (Cosine, Euclidean, and Manhattan) to capture the semantic similarities between code texts. We evaluate the performance of these methods using standard metrics, such as Blue, Meteor, and Rouge -L, and include the run-time of the models in our results. Results: Our results demonstrate that the Transformer model outperforms the state-of-the-art method in all standard metrics and similarity measurements, achieving a 19.1% improvement in providing exact matches and a 6.2% improvement in recommending reviews closer to human reviews. Conclusion: Our findings suggest that the Transformer model is a highly effective and efficient approach for recommending code review comments that closely resemble those written by humans, providing valuable insight for developing more efficient and effective automated code review systems.
C1 [Kartal, Yusuf; Ozkan, Kemal] Eskisehir Osmangazi Univ, Comp Engn, Eskisehir, Turkiye.
   [Akdeniz, E. Kaan] Izmir Inst Technol, Comp Engn, Izmir, Turkiye.
C3 Eskisehir Osmangazi University; Izmir Institute of Technology
RP Kartal, Y (corresponding author), Eskisehir Osmangazi Univ, Comp Engn, Eskisehir, Turkiye.
EM ykartal@ogu.edu.tr
CR Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alsuhaibani M, 2018, PLOS ONE, V13, DOI 10.1371/journal.pone.0193094
   [Anonymous], 2013, Advances in Neural Information Processing Systems
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Banerjee S., 2005, ACL WORKSH INTR EXTR, P65
   Barki H., 1993, Journal of Management Information Systems, V10, P203
   Baum T, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P74, DOI 10.1109/QRS.2016.19
   Chen ZM, 2019, Arxiv, DOI arXiv:1904.03061
   Chess B, 2004, IEEE SECUR PRIV, V2, P76, DOI 10.1109/MSP.2004.111
   Cunha Atacilio, 2021, SBES '21: Brazilian Symposium on Software Engineering, P269, DOI 10.1145/3474624.3477063
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Guo DY, 2022, Arxiv, DOI arXiv:2203.03850
   Gupta Anshul, 2018, P 24 ACM SIGKDD INT
   Hasan Masum, 2021, arXiv
   Hong Y, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P507, DOI 10.1145/3540250.3549119
   Kanade A, 2020, PR MACH LEARN RES, V119
   Karmakar A, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1332, DOI 10.1109/ASE51524.2021.9678927
   Kim Hee Wan, 2020, The International Journal of Advanced Smart Convergence, V9, P59, DOI 10.7236/IJASC.2020.9.3.59
   Li LW, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1009, DOI 10.1145/3540250.3549099
   Li ZY, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1035, DOI 10.1145/3540250.3549081
   Lin C.-Y., 2004, ANN M ASS COMP LING, P74
   Lu JY, 2023, PROC INT SYMP SOFTW, P647, DOI 10.1109/ISSRE59848.2023.00026
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Nazir Sumaira, 2020, ICSIM '20: Proceedings of the 3rd International Conference on Software Engineering and Information Management, P210, DOI 10.1145/3378936.3378954
   Niu CG, 2022, PROC INT CONF SOFTW, P2006, DOI 10.1145/3510003.3510096
   Pantiuchina J, 2018, INT C PROGRAM COMPRE, P312, DOI 10.1145/3196321.3196365
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Ragkhitwetsagul C, 2016, PROC IEEE INT CONF S, P626, DOI 10.1109/ICSME.2016.18
   Rehurek R., 2011, Gensim-python framework for vector space modelling, V3
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Sarker J, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3583562
   Shuvo O, 2023, PROC IEEE INT CONF S, P194, DOI 10.1109/ICSME58846.2023.00029
   Singh D, 2017, S VIS LANG HUM CEN C, P101, DOI 10.1109/VLHCC.2017.8103456
   Siow JK, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P284, DOI [10.1109/SANER48275.2020.9054794, 10.1109/saner48275.2020.9054794]
   Thongtanunam P, 2022, PROC INT CONF SOFTW, P237, DOI 10.1145/3510003.3510067
   Thunes C., 2022, javalang: Pure python java parser and tools
   Tufano R, 2024, IEEE T SOFTWARE ENG, V50, P338, DOI 10.1109/TSE.2023.3348172
   Tufano R, 2021, PROC INT CONF SOFTW, P163, DOI 10.1109/ICSE43902.2021.00027
   Tufano Rosalia, 2022, arXiv
   Wolf T, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING: SYSTEM DEMONSTRATIONS, P38
   Yadav S, 2016, INT CONF ADV COMPU, P78, DOI 10.1109/IACC.2016.25
NR 42
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2024
VL 173
AR 107490
DI 10.1016/j.infsof.2024.107490
EA MAY 2024
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UA4U0
UT WOS:001245336700001
DA 2024-08-05
ER

PT J
AU Rahman, HU
   Silva, ARD
   Alzayed, A
   Raza, M
AF Rahman, Hanif Ur
   Silva, Alberto Rodrigues da
   Alzayed, Asaad
   Raza, Mushtaq
TI A Systematic Literature Review on Software Maintenance Offshoring
   Decisions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Factors; Decision making; Offshoring; Outsourcing; Software maintenance;
   Systematic literature review
ID SUCCESS FACTORS; SERVICES
AB Context: Over the last decades, the rapid expansion of the internet has prompted an increasing number of organizations that have taken their work global and have outsourced their information technology (IT) activities to specialized suppliers. The longest part of the software life cycle includes software maintenance, which consumes 60-70% of the total IT budget. Therefore, organizations have adopted offshoring strategies to reduce maintenance costs and free up resources to focus on their core competencies. Offshore outsourcing decision -making involves technical, social, and other influencing factors; however, there is a limited understanding of the key factors associated with offshoring software maintenance within the global software development context. Objective: This work presents the factors that have influenced the decision -making process of offshoring software maintenance. Further, this research sheds light on decision -making by identifying the models, frameworks, and software tools used within this context. Method: A systematic literature review is conducted, delving into the factors related to the decision -making and analyzing the models, frameworks and tools supporting offshoring software maintenance. Results: This study identifies the top 10 key factors concerning the decision -making process, namely human communication, cost reduction, organizational and employee maturity, project management practices, IT infrastructure support, language constraints, knowledge -based support, changes in requirements, legal issues and cultural diversity. In addition, the models, frameworks, and tools used in the decision -making process of software maintenance are analyzed, and research gaps are identified. Conclusion: The findings reveal that the software industry lacks effective and efficient models tailored explicitly for software offshoring within the global software development landscape. Overall, this study provides valuable insights into the decision -making dynamics of software maintenance offshoring by identifying key factors and research gaps that can pave the way for developing more effective decision support systems.
C1 [Rahman, Hanif Ur; Raza, Mushtaq] Abdul Wali Khan Univ Mardan, Dept Comp Sci, Mardan 23200, Pakistan.
   [Silva, Alberto Rodrigues da] Univ Lisbon, INESC ID, Inst Super Tecn, P-1000029 Lisbon, Portugal.
   [Alzayed, Asaad] Publ Author Appl Educ & Training PAAET, Comp Sci & Informat Syst Dept, Kuwait 13092, Kuwait.
C3 Universidade de Lisboa; INESC-ID; Public Authority for Applied Education
   & Training (PAAET) - Kuwait
RP Rahman, HU (corresponding author), Abdul Wali Khan Univ Mardan, Dept Comp Sci, Mardan 23200, Pakistan.
RI Rahman, Hanif Ur/GLN-8093-2022
OI Rahman, Hanif Ur/0000-0001-6012-6199
CR Ahmed R. E., 2004, Canadian Conference on Electrical and Computer Engineering 2004 (IEEE Cat. No.04CH37513), P129, DOI 10.1109/CCECE.2004.1344973
   Ahmed RE, 2006, COMPUT ELECTR ENG, V32, P449, DOI 10.1016/j.compeleceng.2006.01.023
   Akbar MA, 2019, J COMPUT LANG, V51, P112, DOI 10.1016/j.cola.2018.12.005
   Ali S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10044-y
   Ali S, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2243
   Anwar R, 2019, IEEE ACCESS, V7, P24231, DOI 10.1109/ACCESS.2019.2895690
   Ashraf A, 2018, COMPUT SCI REV, V28, P118, DOI 10.1016/j.cosrev.2018.02.003
   Assaf S, 2011, PROP MANAG, V29, P195, DOI 10.1108/02637471111122471
   Babar MA, 2007, J SYST SOFTWARE, V80, P1438, DOI [10.1016/j.jss.2006.12.038, 10.1016/j.jss.2006.10.038]
   Bhatt P., 2006, ACM SIGSOFT Software Engineering Notes, V31, P1
   Bhatt P., 2004, ACM SIGSOFT Software Engineering Notes, V29, P1, DOI DOI 10.1145/1022494.1022513
   Bhatt P, 2006, J SOFTW MAINT EVOL-R, V18, P385, DOI 10.1002/smr.339
   Bhatt P, 2006, ASPEC 2006: 13th Asia-Pacific Software Engineering Conference, Proceedings, P301
   Carmel E, 2005, J GLOB INF MANAG, V13, P33, DOI 10.4018/jgim.2005070103
   Carmel E., 2005, Offshoring Information Technology: Sourcing and Outsourcing to a Global Workforce
   Chauhan R., 2011, Pre-ICIS 2011, P85
   Christiansen HM, 2007, LECT NOTES COMPUT SC, V4716, P19
   Dou YJ, 2010, INT J PROD RES, V48, P567, DOI 10.1080/00207540903175145
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Khan AA, 2016, IET SOFTW, V10, P125, DOI 10.1049/iet-sen.2015.0038
   Khan HU, 2024, J SOFTW-EVOL PROC, V36, DOI 10.1002/smr.2485
   Khan Rafiq A., 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P487, DOI 10.1145/3383219.3383290
   Khan SU, 2011, INFORM SOFTWARE TECH, V53, P693, DOI 10.1016/j.infsof.2010.08.003
   Khattak KN, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app12157851
   Khosravizadeh O, 2022, BMC HEALTH SERV RES, V22, DOI 10.1186/s12913-022-07509-1
   Kitchenham B., 2004, PROCEDURES PERFORMIN, DOI DOI 10.5144/0256-4947.2017.79
   Kitchenham B., 2007, GUIDELINES PERFORMIN, V1, P57
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham Barbara Ann, 2015, Evidencebased software engineering and systematic reviews, V4
   Krancher O., 2012, 33 INT C INF SYST OR
   Krancher O, 2015, P ANN HICSS, P4406, DOI 10.1109/HICSS.2015.528
   Lacity MC, 2016, J INF TECHNOL-UK, V31, P269, DOI 10.1057/jit.2016.2
   Lacity MC, 2010, J INF TECHNOL-UK, V25, P395, DOI 10.1057/jit.2010.21
   Lahiri S, 2022, J BUS RES, V139, P1303, DOI 10.1016/j.jbusres.2021.10.061
   Lascano N, 2010, LECT NOTES BUS INF P, V54, P87
   Lee D., 2011, Proceedings of the 3rd International Conference on Human Computer Interaction, P29
   Mäkiö J, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P329, DOI 10.1007/978-3-642-10294-3_16
   Moher D, 2015, SYST REV-LONDON, V4, DOI [10.1186/2046-4053-4-1, 10.1371/journal.pmed.1000097, 10.1136/bmj.i4086, 10.1016/j.ijsu.2010.02.007, 10.1136/bmj.b2535, 10.1016/j.ijsu.2010.07.299, 10.1136/bmj.b2700]
   Murthy DNP, 2015, RELIAB ENG SYST SAFE, V142, P100, DOI 10.1016/j.ress.2015.05.002
   Okoli C., 2010, Sprouts: Working Papers on Information Systems, DOI [10.2139/ssrn.1954824, DOI 10.2139/SSRN.1954824]
   Oshri I., 2008, Outsourcing global services
   Polo M., 2003, Journal of Software Maintenance and Evolution Research and Practice, V15, P375, DOI 10.1002/smr.288
   Rao BS, 2005, FIFTH INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY - PROCEEDINGS, P944, DOI 10.1109/CIT.2005.114
   Robillard PN, 2007, CAN CON EL COMP EN, P682
   Shameem M, 2017, 2017 24TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE WORKSHOPS (APSECW), P17, DOI 10.1109/APSECW.2017.22
   Silva TAC, 2023, INFORMATION, V14, DOI 10.3390/info14030169
   Smuts H., 2010, Proceedings of the 2010 Annual Research Conference of the South African Institute of Computer Scientists and Information Technologists (SAICSIT '10), P304
   Solli-Sæther H, 2015, J COMPUT INFORM SYST, V55, P88, DOI 10.1080/08874417.2015.11645760
   Sulayman M, 2009, COMM COM INF SC, V59, P1
   Vallon R, 2018, INFORM SOFTWARE TECH, V96, P161, DOI 10.1016/j.infsof.2017.12.004
   Whitaker J, 2010, J MANAGE INFORM SYST, V27, P11, DOI 10.2753/MIS0742-1222270302
   Xu P, 2013, J GLOB INF TECH MAN, V16, P58, DOI 10.1080/1097198X.2013.10845630
   Yang M, 2020, COMPLEXITY, V2020, DOI 10.1155/2020/2836064
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 54
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2024
VL 172
AR 107475
DI 10.1016/j.infsof.2024.107475
EA MAY 2024
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SV9J7
UT WOS:001237339800001
DA 2024-08-05
ER

PT J
AU Foalem, PL
   Khomh, F
   Li, H
AF Foalem, Patrick Loic
   Khomh, Foutse
   Li, Heng
TI Studying logging practice in machine learning-based applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Logging practices; ML -based applications; Mining software repositories;
   Source code analysis
AB Context: Logging is a common practice in traditional software development. There have been multiple studies on the characteristics of logging in traditional software systems such as C/C++, Java, and Android applications. However, logging practices in Machine Learning -based (ML -based) applications are still not well understood. The size and complexity of data and models used in ML -based applications present unique challenges for logging. Objective: In this paper, we aim to bridge this knowledge gap and provide insight into the logging practices in ML -based applications, making the first attempt to characterize current logging practices within a large number of open -source ML -based applications. Method: We conducted an empirical study on 502 open -source ML applications to understand their logging practices, combining quantitative and qualitative analyses and a survey involving 31 practitioners. Results: Our quantitative analysis reveals that logging in ML applications is less common than in traditional software, with info and warn log levels being popular. Top ML -specific logging libraries include MLflow, Tensorboard, Neptune, and W&B. Qualitatively, logging is used for data and model management, especially in model training. Our survey reinforces the importance of logging in experiment tracking, complementing our qualitative findings. Conclusion: Our research carries significant implications. It reveals distinctive ML logging practices compared to traditional software. We have highlighted the prevalence of general-purpose logging libraries in ML code, indicating a potential gap in awareness regarding ML -specific logging tools. This insight benefits researchers and developers aiming to enhance ML project reproducibility and sets the stage for exploring ML -specific logging tools' impact on machine learning system quality and trustworthiness.
C1 [Foalem, Patrick Loic; Khomh, Foutse; Li, Heng] Polytech Montreal, Dept Comp & Software Engn, Montreal, PQ H3T 1J4, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Foalem, PL (corresponding author), Polytech Montreal, Dept Comp & Software Engn, Montreal, PQ H3T 1J4, Canada.
EM patrick-loic.foalem@polymtl.ca; foutse.khomh@polymtl.ca;
   heng.li@polymtl.ca
OI Li, Heng/0000-0001-5441-6763
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
   [CRDPJ 537462-18]; Consortium for Research and Innovation in Aerospace
   in Qubec (CRIAQ); Thales Canada inc; Bombardier inc.; Bell Textron
   Canada Limited; CAE inc
FX This work is supported by the DEEL project CRDPJ 537462-18 funded by the
   Natural Sciences and Engineering Research Council of Canada (NSERC) and
   the Consortium for Research and Innovation in Aerospace in Quebec
   (CRIAQ) , together with its industrial partners Thales Canada inc, Bell
   Textron Canada Limited, CAE inc and Bombardier inc.
CR Alpaydin E., 2021, Machine learning
   Altexsoft, 2023, About us
   Alves Marco, 2021, SBES '21: Brazilian Symposium on Software Engineering, P16, DOI 10.1145/3474624.3474631
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   [Anonymous], 2023, Logging and debugging in machine learning
   [Anonymous], 2023, Replication package
   [Anonymous], 2023, What is a metadata store for machine learning
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   Chen BY, 2017, EMPIR SOFTW ENG, V22, P330, DOI 10.1007/s10664-016-9429-5
   D'Souza AR, 2016, IEEE INT WORK C SO, P51, DOI 10.1109/SCAM.2016.22
   Dilhara M, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3453478
   Ding ZS, 2022, EUR CON SFTWR MTNCE, P349, DOI 10.1109/SANER53432.2022.00051
   Hamidi A, 2021, IEEE INT WORK C SO, P58, DOI 10.1109/SCAM52516.2021.00016
   IBM, 2023, About us
   Ivankova NV, 2006, FIELD METHOD, V18, P3, DOI 10.1177/1525822X05282260
   Kernighan B. W., 1999, The Practice of Programming, V1st
   Kitchenham B. A., 2008, Guide to Advanced Empirical Software Engineering, P63, DOI DOI 10.1007/978-1-84800-044-5_3
   Li H, 2017, EMPIR SOFTW ENG, V22, P1684, DOI 10.1007/s10664-016-9456-2
   Li ZH, 2020, IEEE INT CONF AUTOM, P361, DOI 10.1145/3324884.3416636
   Maalej W., 2011, Proceedings of the 2011 IEEE 9th International Conference on Dependable, Autonomic and Secure Computing (DASC 2011), P864, DOI 10.1109/DASC.2011.146
   Majidi F, 2022, PROC IEEE INT CONF S, P59, DOI 10.1109/ICSME55016.2022.00014
   Mastropaolo A, 2022, Arxiv, DOI arXiv:2201.04837
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nagaraj K., 2012, P 9 USENIX C NETW SY, P26
   Openja Moses, 2022, EASE 2022: The International Conference on Evaluation and Assessment in Software Engineering 2022, P190, DOI 10.1145/3530019.3530039
   Oraclize, 2023, ABOUT US
   Whylogs, 2023, About us
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yamane T., 1967, Statistics; An Introductory Analysis, V2nd ed., DOI DOI 10.2307/139661
   Yang T., 2016, CS224D FALL 2016
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Zeng Y, 2019, EMPIR SOFTW ENG, V24, P3394, DOI 10.1007/s10664-019-09687-9
   Zhang HN, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10139-0
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
NR 34
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2024
VL 170
AR 107450
DI 10.1016/j.infsof.2024.107450
EA MAR 2024
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PQ2S0
UT WOS:001215488000001
OA Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Liu, A
   Lefever, J
   Han, Y
   Cai, YF
AF Liu, Alan
   Lefever, Jason
   Han, Yi
   Cai, Yuanfang
TI Prevalence and severity of design anti-patterns in open source
   programs-A large-scale study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software design; Anti-pattern; Technical debt; Software evolution;
   Software maintenance
ID CODE-SMELLS; SOFTWARE; IMPACT
AB Context: Design anti -patterns can be symptoms of problems that lead to long-term maintenance difficulty. How should development teams prioritize their treatment? Which ones are more severe and deserve more attention? Does the impact of anti -patterns and general maintenance efforts differ with different programming languages? Objective: In this study, we assess the prevalence and severity of anti -patterns in different programming languages and the impact of dynamic typing in Python, as well as the impact scopes of prevalent anti -patterns that manifest the violation of design principles. Method: We conducted a large-scale study of anti -patterns using 1717 open -source projects written in Java, C/C++, and Python. For the 288 Python projects, we extracted both explicit and dynamic dependencies and compared how the detected anti -patterns and maintenance costs changed. Finally, we removed anti -patterns involving five or fewer files to assess the impact of trivial anti -patterns. Results: The results reveal that 99.55% of these projects contain anti -patterns. Modularity Violation - frequent co -changes among seemingly unrelated files - is most prevalent (detected in 83.54% of all projects) and costly (incurred 61.55% of maintenance effort on average). Unstable Interface and Crossing, caused by influential but unstable files, although not as prevalent, tend to incur severe maintenance costs. Duck typing in Python incurs more anti -patterns, and the churn spent on Python files multiplies that of C/C++ and Java files. Several prevalent anti -patterns have a large portion of trivial instances, meaning that these common symptoms are usually not harmful. Conclusion: Implicit and visible dependencies are the most expensive to maintain, and dynamic typing in Python exacerbates the issue. Influential but unstable files need to be monitored and rectified early to prevent the accumulation of high maintenance costs. The violations of design principles are widespread, but many are not high -maintenance.
C1 [Liu, Alan] Germantown Acad, Ft Washington, PA 19034 USA.
   [Lefever, Jason; Cai, Yuanfang] Drexel Univ, Philadelphia, PA USA.
   [Han, Yi] Xi An Jiao Tong Univ, Xian, Peoples R China.
C3 Drexel University; Xi'an Jiaotong University
RP Liu, A (corresponding author), Germantown Acad, Ft Washington, PA 19034 USA.
EM alanl200511@gmail.com
FU United States National Science Foundation [2236824, 2232720, 2213764]
FX This research was supported by the United States National Science
   Foundation grants 2236824, 2232720, and 2213764.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   [Anonymous], 2013, S. SonarSource, Sonarqube
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Asmare MB, 2020, IEEE WORK CONF MIN S, P327, DOI 10.1145/3379597.3387467
   Baldwin CY, 2000, DESIGN RULES, V1
   Barabási AL, 2007, IEEE CONTR SYST MAG, V27, P33, DOI 10.1109/MCS.2007.384127
   Cai YF, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P53, DOI 10.1109/TechDebt.2019.00015
   Carvalho SG, 2019, EMPIR SOFTW ENG, V24, P3546, DOI 10.1007/s10664-019-09768-9
   Cervantes H., 2020, INT C TECHN DEBT TEC
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Designingbuildings, About us
   Le D, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P807, DOI 10.1145/2889160.2889260
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Fontana F.A., 2020, Speaker, An Architectural Smell Evaluation in an Industrial Context
   Fontana FA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P282, DOI 10.1109/ICSAW.2017.16
   Fontana FA, 2016, PROC IEEE INT CONF S, P433, DOI 10.1109/ICSME.2016.33
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   Garcia J, 2009, LECT NOTES COMPUT SC, V5581, P146, DOI 10.1007/978-3-642-02351-4_10
   Garcia J, 2009, EUR CON SFTWR MTNCE, P255, DOI 10.1109/CSMR.2009.59
   github, Multi-language code dependency analysis tool
   Gobet F, 2004, MEMORY, V12, P732, DOI 10.1080/09658210344000530
   Higo Y, 2004, LECT NOTES COMPUT SC, V3009, P220
   Jin WX, 2023, IEEE T SOFTWARE ENG, V49, P1064, DOI 10.1109/TSE.2022.3171288
   Jin WX, 2020, IEEE INT CONF AUTOM, P758, DOI 10.1145/3324884.3416619
   Johannes D, 2019, SOFTWARE QUAL J, V27, P1271, DOI 10.1007/s11219-019-09442-9
   Karus S, 2012, EUR CON SFTWR MTNCE, P203, DOI 10.1109/CSMR.2012.29
   Kazman R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P179, DOI 10.1109/ICSE.2015.146
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Lefever J, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P121, DOI 10.1109/ICSE-SEIP52600.2021.00021
   Lippert M., 2006, Refactoring in large software projects: performing complex restructurings successfully
   Liu A., 2024, Prevalence and Severity of Design AntiPatterns in Open Source Programs-A Large-Scale Study, DOI [10.5281/zenodo.10472153, DOI 10.5281/ZENODO.10472153]
   Mäntylä M, 2003, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSM.2003.1235447
   Martini A, 2018, LECT NOTES COMPUT SC, V11048, P320, DOI 10.1007/978-3-030-00761-4_21
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Mo R, 2015, P 12 WORK IEEE IFIP
   Mo R, 2021, IEEE T SOFTWARE ENG, V47, P1008, DOI 10.1109/TSE.2019.2910856
   Mo R, 2018, IEEE INT CONF AUTOM, P779, DOI 10.1145/3238147.3240467
   Moha N, 2008, LECT NOTES COMPUT SC, V4961, P276, DOI 10.1007/978-3-540-78743-3_20
   Nayebi M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P171, DOI 10.1109/ICSE-SEIP.2019.00026
   Nord R. L., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P91, DOI 10.1109/WICSA-ECSA.212.17
   Palomba F, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P482, DOI 10.1145/3180155.3182532
   Palomba F, 2018, INFORM SOFTWARE TECH, V99, P1, DOI 10.1016/j.infsof.2018.02.004
   PARNAS DL, 1979, IEEE T SOFTWARE ENG, V5, P128, DOI 10.1109/TSE.1979.234169
   Sas D, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10132-7
   Schwanke R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P891, DOI 10.1109/ICSE.2013.6606638
   Sharma T, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BRINGING ARCHITECTURAL DESIGN THINKING INTO DEVELOPERS DAILY ACTIVITIES (BRIDGE), P1, DOI [10.1145/2896935.2896938, 10.1109/Bridge.2016.009]
   Shihab E, 2013, INFORM SOFTWARE TECH, V55, P1981, DOI 10.1016/j.infsof.2013.06.002
   Structure101, about us
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   undergroundperiodismo, About us
   van Oort B, 2021, Arxiv, DOI arXiv:2103.04146
   Wu WS, 2018, LECT NOTES COMPUT SC, V11048, P303, DOI 10.1007/978-3-030-00761-4_20
   Xiao L, 2022, IEEE T SOFTWARE ENG, V48, P3686, DOI 10.1109/TSE.2021.3102221
   Xiao L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P967, DOI 10.1145/2568225.2568241
   Yamashita A, 2015, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSM.2015.7332458
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
NR 58
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2024
VL 170
AR 107429
DI 10.1016/j.infsof.2024.107429
EA MAR 2024
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QP8A3
UT WOS:001222153300001
DA 2024-08-05
ER

PT J
AU da Roza, EA
   Lima, JAD
   Vergilio, SR
AF da Roza, Enrique A.
   Lima, Jackson A. do Prado
   Vergilio, Silvia R.
TI On the use of contextual information for machine learning based test
   case prioritization in continuous integration development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Regression testing; Continuous integration; Reinforcement learning
AB Context: In most software organizations, Continuous Integration (CI) is a common practice usually subject to some budgets. Consequently, prioritizing test cases to be executed in the CI cycle is fundamental. The idea is first to execute test cases with higher failure-proneness to provide rapid feedback and decrease costs. To perform this task approaches in the literature adopt failure history and Machine Learning (ML) . However, in addition to the failure history, it is also important to consider information from the CI context of the organizations and the application domain. Objective: For this end, we introduce a contextual information approach for ML algorithms. Such an approach considers information from the testing activity that can be easily collected, such as test case execution time, size, and complexity. We implement the approach by introducing two contextual versions of the algorithms: Multi-Armed Bandit (MAB) and Random Forest (RF). Method: Six systems are used to compare both contextual algorithms and to evaluate their performance regarding their corresponding non-contextual versions, considering three different budgets. Results: Contextual algorithms perform better when indicators related to test time reduction are considered, as the contextual information they use is related to execution time. Regarding NAPFD and APFDc, the non-contextual algorithms have better general performance, but both contextual versions obtain competitive results. Conclusions: The contextual versions implemented can capture the desired context information in the prioritization without negatively impacting their performance regarding fault-detection.
C1 [da Roza, Enrique A.; Lima, Jackson A. do Prado; Vergilio, Silvia R.] Fed Univ Parana UFPR, Ctr Politecn, Comp Sci Dept, Rua Cel Francisco H St 100,CP 19081, BR-81531980 Curitiba, Brazil.
RP da Roza, EA (corresponding author), Fed Univ Parana UFPR, Ctr Politecn, Comp Sci Dept, Rua Cel Francisco H St 100,CP 19081, BR-81531980 Curitiba, Brazil.
EM enriqueaugroza@gmail.com; japlima@inf.ufpr.br; silvia@inf.ufpr.br
FU CAPES; CNPq [310034/2022-1]
FX This research is supported by Brazilian funding agencies CAPES and CNPq
   (Grant 310034/2022-1) .
CR Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bagherzadeh M, 2022, IEEE T SOFTWARE ENG, V48, P2836, DOI 10.1109/TSE.2021.3070549
   Bajaj A, 2019, IEEE ACCESS, V7, P126355, DOI 10.1109/ACCESS.2019.2938260
   Bertolino A, 2020, PROC INT CONF SOFTW, P1, DOI 10.1145/3377811.3380369
   Bnaya Z., 2013, P WORKSH 27 AAAI C A, P8
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Busjaeger B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P975, DOI 10.1145/2950290.2983954
   Colanzi TE, 2019, LECT NOTES COMPUT SC, V11664, P42, DOI 10.1007/978-3-030-27455-9_4
   da Roza EA, 2022, EUR CON SFTWR MTNCE, P196, DOI 10.1109/SANER53432.2022.00034
   Dietterich T. G., 2002, Structural, Syntactic, and Statistical Pattern Recognition. Joint IAPR International Workshops SSPR 2002 and SPR 2002 (Lecture Notes in Computer Science Vol. 2396), P15
   Do H, 2010, IEEE T SOFTWARE ENG, V36, P593, DOI 10.1109/TSE.2010.58
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Geurts P, 2006, MACH LEARN, V63, P3, DOI 10.1007/s10994-006-6226-1
   Gonçalves R, 2018, IEEE C EVOL COMPUTAT, P997, DOI 10.1109/CEC.2018.8477930
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Gutowski N, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1647, DOI 10.1145/3297280.3297440
   Haghighatkhah A, 2018, J SYST SOFTWARE, V146, P80, DOI 10.1016/j.jss.2018.08.061
   Jung-Hyun Kwon, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P19, DOI 10.1109/APSEC.2014.12
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Kuleshov V., 2000, J MACH LEARN RES, V1, P1, DOI DOI 10.48550/ARXIV.1402.6028
   Li L., 2010, P 19 INT C WORLD WID, P661, DOI [10.1145/1772690.1772758, DOI 10.1145/1772690.1772758]
   Li Lihong, 2011, P 4 ACM INT C WEB SE, P297, DOI [DOI 10.1145/1935826.1935878, 10.1145/1935826.1935878]
   Lima JAP, 2022, IEEE T SOFTWARE ENG, V48, P453, DOI 10.1109/TSE.2020.2992428
   Liu WL, 2007, INT C COMP AID DES C, P252
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Marijan D, 2023, SOFTWARE QUAL J, V31, P1415, DOI 10.1007/s11219-023-09646-0
   Marijan D, 2019, SOFTWARE PRACT EXPER, V49, P192, DOI 10.1002/spe.2661
   Marijan D, 2017, IEEE INT CONF SOFTW, P524, DOI 10.1109/ICST.2017.60
   Marijan D, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P157, DOI 10.1109/QRS.2015.31
   Marijan D, 2013, PROC IEEE INT CONF S, P540, DOI 10.1109/ICSM.2013.91
   Lima JAP, 2020, PROCEEDINGS OF THE 5TH BRAZILIAN SYMPOSIUM ON SYSTEMATIC AND AUTOMATED SOFTWARE TESTING, SAST 2020, P21, DOI 10.1145/3425174.3425210
   Lima JAP, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106268
   Robbins H., 1985, Herbert Robbins Selected Papers, P169
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Roza E.A., 2023, Supplementary material-on the use of contextual information for machine learning based test case prioritization in continuous integration development
   Shankar R., 2023, Int. J. Innov. Sci. Res. Technol., V8, P3223, DOI [10.5281/zenodo.7949614, DOI 10.5281/ZENODO.7949614]
   Sharifi F, 2018, IEEE INT CONF SOFTW, P309, DOI 10.1109/ICST.2018.00038
   Spieker H, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P12, DOI 10.1145/3092703.3092709
   Tipping ME, 1999, J R STAT SOC B, V61, P611, DOI 10.1111/1467-9868.00196
   Walcott K.R., 2006, P 2006 INT S SOFTW T, P1
   Wohlin C., 2000, EXPT SOFTWARE ENG IN, DOI DOI 10.1007/978-1-4615-4625-2
   Xiao L., 2018, IJET, Int. J. Eng. Technol., V7, P332, DOI [10.14419/ijet.v7i2.28.13207, DOI 10.14419/IJET.V7I2.28.13207]
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhou L, 2016, Arxiv, DOI arXiv:1508.03326
NR 44
TC 0
Z9 0
U1 3
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2024
VL 171
AR 107444
DI 10.1016/j.infsof.2024.107444
EA APR 2024
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SK2P3
UT WOS:001234284600001
DA 2024-08-05
ER

PT J
AU Taneja, A
   Rani, S
   Alharbi, M
   Zohaib, M
AF Taneja, Ashu
   Rani, Shalli
   Alharbi, Meshal
   Zohaib, Muhammad
TI Quantum aided efficient resource control for connected support in IRS
   assisted networks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Quantum; Sum rate; AP-IRS pair; IoT; User-clustering; NOMA
ID RECONFIGURABLE INTELLIGENT SURFACES; NOMA; DESIGN; OPTIMIZATION;
   DOWNLINK; SYSTEMS; ENERGY
AB Context: To achieve the vision of all connected world with uninterrupted communication support, 6G technology plays an important role. But the scarce radio spectrum and limited network resources is the main challenge in delivering its promised performance. Objectives: This paper presents an IRS -aided cell free NOMA network model that aims to provide uniform network coverage. The future 6G technology envisions for serving billions of interconnected devices with seamless communication support, data handling capabilities and computational accuracy. But the scarcity of network resources is the main limitation. Thus, the need is to design quantum enabled intelligent and dynamic networks capable of offering extended network capabilities. Proposed work is on intelligent network framework that provides uniform network coverage through efficient resource management for a 6G enabled expanded IoT network. Methods: To enable efficient resource management, a quantum enabled resource control algorithm is proposed that creates user clusters and associates each AP -IRS pair to each cluster. Each AP transmits the superimposed signals of its intended cluster against all the user clusters as in conventional NOMA system. The nodes in each cluster have been assigned unique pilots so as to avoid intracluster interference. The use of IRS enables desired NOMA beamforming such that the effect of unfavourable wireless environment is mitigated. Results: The performance of the IRS -aided cell -free NOMA network is evaluated for average sum rate with different AP transmit power, cluster sizes, IRS reflecting elements and IRS phase shifts. It is shown that at transmit power per AP of 30dBm, the average sum rate of the system improves by 7.52% with the proposed algorithm using equal power allocation scheme. Further, the comparative performance analysis of three different communication systems is carried out to validate the proposed communication model. Conclusion: It is observed that with more number of users per cluster, the average sum rate of the system initially increases for small cluster sizes and then it becomes constant for large cluster sizes. The proposed clustering method outperforms the random clustering approach achieving sum rate of 12.9 bits/s/Hz with N =300 and M = 8. The comparison of different communication scenarios reveals that the maximum sum rate of 12.2 bits/s/Hz is achieved with the proposed model incorporating proposed clustering mechanism. Further, the energy efficiency analysis suggests that energy efficiency improves with N and P c with proposed clustering approach. The use case scenarios for the integration of quantum computing with IRS technology are also presented.
C1 [Taneja, Ashu; Rani, Shalli] Chitkara Univ, Inst Engn & Technol, Punjab, India.
   [Alharbi, Meshal] Prince Sattam Bin Abdulaziz Univ, Coll Comp Engn & Sci, Dept Comp Sci, Al Kharj 11942, Saudi Arabia.
   [Zohaib, Muhammad] LUT Univ, Dept Software Engn, Lappeenranta, Finland.
C3 Chitkara University, Punjab; Prince Sattam Bin Abdulaziz University;
   Lappeenranta-Lahti University of Technology LUT
RP Rani, S (corresponding author), Chitkara Univ, Inst Engn & Technol, Punjab, India.
EM ashu.taneja@chitkara.edu.in; shalli.rani@chitkara.edu.in;
   Mg.alharbi@psau.edu.sa; Muhammad.zohaib@lut.fi
OI Rani, Shalli/0000-0002-8474-9435
CR Björnson E, 2019, DIGIT SIGNAL PROCESS, V94, P3, DOI 10.1016/j.dsp.2019.06.007
   Björnson E, 2017, FOUND TRENDS SIGNAL, V11, P154, DOI 10.1561/2000000093
   Chen JC, 2022, IEEE WIREL COMMUN LE, V11, P801, DOI 10.1109/LWC.2022.3146129
   Cheng YY, 2021, IEEE T WIREL COMMUN, V20, P3988, DOI 10.1109/TWC.2021.3054841
   Choi J, 2019, I C INF COMM TECH CO, P138, DOI 10.1109/ictc46691.2019.8939749
   Chopra G., 2023, 2023 INT C EM SMART, P1, DOI [10.1109/ESCI56872.2023.10099902, DOI 10.1109/ESCI56872.2023.10099902]
   Demir ÖT, 2020, FOUND TRENDS SIGNAL, V14, P162, DOI 10.1561/2000000109
   Di Renzo M, 2020, IEEE J SEL AREA COMM, V38, P2450, DOI 10.1109/JSAC.2020.3007211
   Ding ZG, 2020, IEEE COMMUN LETT, V24, P1119, DOI 10.1109/LCOMM.2020.2974196
   Gong CH, 2022, IEEE T VEH TECHNOL, V71, P2761, DOI 10.1109/TVT.2021.3129075
   Ngo HQ, 2018, IEEE T GREEN COMMUN, V2, P25, DOI 10.1109/TGCN.2017.2770215
   Huang CW, 2020, IEEE WIREL COMMUN, V27, P118, DOI 10.1109/MWC.001.1900534
   Ide N, 2020, INT SYM INF THEOR AP, P91
   Ihsan A, 2022, IEEE T INTELL TRANSP, V23, P10721, DOI 10.1109/TITS.2021.3095437
   Kim M, 2021, IEEE NETWORK, V35, P8, DOI 10.1109/MNET.012.2000770
   Kurasawa K, 2021, IEEE WIREL COMMUN LE, V10, P1682, DOI 10.1109/LWC.2021.3077311
   Li F, 2020, IEEE OPEN J COMM SOC, V1, P1632, DOI 10.1109/OJCOMS.2020.3031449
   Li YQ, 2021, IEEE T COMMUN, V69, P664, DOI 10.1109/TCOMM.2020.3032695
   Li ZD, 2022, IEEE WIREL COMMUN LE, V11, P53, DOI 10.1109/LWC.2021.3120284
   Liu YW, 2022, IEEE WIREL COMMUN, V29, P169, DOI 10.1109/MWC.102.2100363
   Liu YW, 2022, IEEE J SEL AREA COMM, V40, P1037, DOI 10.1109/JSAC.2022.3145234
   Mu XD, 2021, IEEE J SEL AREA COMM, V39, P3051, DOI 10.1109/JSAC.2021.3088679
   Mu XD, 2020, IEEE T WIREL COMMUN, V19, P6884, DOI 10.1109/TWC.2020.3006915
   Nekovee M., 2022, 2022 14 INT C COMMUN, P1, DOI [10.1109/COMSNETS53615.2022.9668541, DOI 10.1109/COMSNETS53615.2022.9668541]
   Ohyama T, 2023, IEEE T EMERG TOP COM, V11, P950, DOI 10.1109/TETC.2023.3292355
   Ohyama T, 2023, IEEE T EMERG TOP COM, V11, P18, DOI 10.1109/TETC.2022.3161542
   Ohyama T, 2022, IEEE T EMERG TOP COM, V10, P1633, DOI 10.1109/TETC.2021.3115107
   Osorio DPM, 2022, IEEE OPEN J COMM SOC, V3, P82, DOI 10.1109/OJCOMS.2022.3143098
   Otsuka T, 2021, 3RD INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE IN INFORMATION AND COMMUNICATION (IEEE ICAIIC 2021), P1, DOI 10.1109/ICAIIC51459.2021.9415221
   Peng MG, 2016, IEEE COMMUN SURV TUT, V18, P2282, DOI 10.1109/COMST.2016.2548658
   Qiu JH, 2020, IEEE ACCESS, V8, P56214, DOI 10.1109/ACCESS.2020.2981967
   Saluja D, 2022, IEEE T INTELL TRANSP, V23, P430, DOI 10.1109/TITS.2020.3011890
   Taneja A, 2022, EXPERT SYST APPL, V190, DOI 10.1016/j.eswa.2021.116106
   Thapliyal H, 2017, 2017 3RD IEEE INTERNATIONAL SYMPOSIUM ON NANOELECTRONIC AND INFORMATION SYSTEMS (INIS), P123, DOI 10.1109/iNIS.2017.34
   Vaezi M, 2022, IEEE COMMUN SURV TUT, V24, P1117, DOI 10.1109/COMST.2022.3151028
   Van Chien T, 2022, IEEE T WIREL COMMUN, V21, P5106, DOI 10.1109/TWC.2021.3136925
   Wei XH, 2021, IEEE COMMUN LETT, V25, P1398, DOI 10.1109/LCOMM.2021.3052822
   Wu QQ, 2021, IEEE WIREL COMMUN LE, V10, P1493, DOI 10.1109/LWC.2021.3072502
   Wu QQ, 2021, IEEE T COMMUN, V69, P3313, DOI 10.1109/TCOMM.2021.3051897
   Wu QQ, 2019, IEEE T WIREL COMMUN, V18, P5394, DOI 10.1109/TWC.2019.2936025
   Zappone A, 2021, IEEE T WIREL COMMUN, V20, P126, DOI 10.1109/TWC.2020.3023578
   Zhang YT, 2021, IEEE T COGN COMMUN, V7, P412, DOI 10.1109/TCCN.2021.3058683
   Zhang YT, 2021, IEEE WIREL COMMUN LE, V10, P775, DOI 10.1109/LWC.2020.3043132
   Zheng BX, 2020, IEEE COMMUN LETT, V24, P753, DOI 10.1109/LCOMM.2020.2969870
   Zheng BX, 2020, IEEE WIREL COMMUN LE, V9, P518, DOI 10.1109/LWC.2019.2961357
   Zhi KD, 2022, IEEE T COMMUN, V70, P3558, DOI 10.1109/TCOMM.2022.3162580
   Zhou T, 2021, IEEE ACCESS, V9, P3828, DOI 10.1109/ACCESS.2020.3047450
   Zhu QN, 2022, IEEE T COMMUN, V70, P2870, DOI 10.1109/TCOMM.2022.3155147
NR 48
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2024
VL 171
AR 107455
DI 10.1016/j.infsof.2024.107455
EA APR 2024
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RE3M4
UT WOS:001225953600001
DA 2024-08-05
ER

PT J
AU Ahmadisakha, S
   Andrikopoulos, V
AF Ahmadisakha, Sahar
   Andrikopoulos, Vasilios
TI Architecting for sustainability of and in the cloud: A systematic
   literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Cloud computing; Sustainability; Survey; Software architecture
ID QUALITY REQUIREMENTS; SOFTWARE
AB Context: The interest in the intersection between cloud computing and sustainability is naturally growing as the popularity of the former makes it in many cases the default model for delivering software functionalities to end users. Furthermore, software architecture offers a fundamental route to address sustainability, with the recent shift towards recognizing sustainability as a software quality. Objective: Approaching the intersection between sustainability and cloud computing from the perspective of the study of software architectures, in this work we aim to collect the data necessary for us to understand the relation between these two areas as reflected in the literature. Given the lack of suitable surveys for this purpose in this paper we report on our review of the relevant literature, designed to address the question of how architectural solutions specifically for the cloud are addressing sustainability. Methods: Following the steps prescribed by a well-known method for this purpose on running a systematic literature review, we answer our defined research questions using both (qualitative) analysis and synthesis of data. Results: As a result of the review process, we are able to identify 10 solution types, 8 recurring design decisions, 11 involved architectural entities, and 17 distinct perceptions of the cloud with respect to sustainability. The adoption of reusable architectural tactics and patterns has been observed to be less prevalent than anticipated. Furthermore, certain fundamental characteristics of cloud computing, including multi-tenancy, on-demand resource provisioning, and the pay-as-you-go model, have been identified across diverse cloud perceptions. Conclusion: Our findings point to the need for more systematic work required on developing architectural solutions specifically for cloud computing incorporating sustainability goals. We also suggest that achieving sustainability through cloud in software architecture may be feasible. Furthermore, we identify a persistent threat to further secondary studies on the same topic due to improper use of terms.
C1 [Ahmadisakha, Sahar; Andrikopoulos, Vasilios] Univ Groningen, Groningen, Netherlands.
C3 University of Groningen
RP Ahmadisakha, S (corresponding author), Univ Groningen, Groningen, Netherlands.
EM s.ahmadisakha@rug.nl; v.andrikopoulos@rug.nl
RI Andrikopoulos, Vasilios/IVH-6273-2023
OI Andrikopoulos, Vasilios/0000-0001-7937-0247; Ahmadisakha,
   Sahar/0000-0002-1485-4512
FU Open Competition Domain Science [OCENW.M20.243]; Dutch Research Council
   (NWO)
FX <STRONG>This work is partly funded by the project SustainableCloud
   (project number OCENW.M20.243) of the research program Open Competition
   Domain Science by the Dutch Research Council (NWO). </STRONG>
CR Aldossary M, 2021, COMPUT SYST SCI ENG, V36, P353, DOI 10.32604/csse.2021.014974
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   Andrikopoulos Vasilios, 2022, 2022 48th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P426, DOI 10.1109/SEAA56994.2022.00073
   Andrikopoulos V., 2021, NEXT GEN DIGITAL SER, P35
   [Anonymous], 2014, ISO/IEC:17788
   Azadi M, 2023, INT J PROD RES, V61, P4196, DOI 10.1080/00207543.2021.1959666
   Bass L., 2003, Software architecture in practice
   Berl A, 2010, COMPUT J, V53, P1045, DOI 10.1093/comjnl/bxp080
   Calero C., 2013, arXiv
   Capilla R, 2012, REQUIR ENG, V17, P255, DOI 10.1007/s00766-011-0137-9
   Changchit C, 2018, J COMPUT INFORM SYST, V58, P1, DOI 10.1080/08874417.2016.1180651
   Chauhan M.A., 2017, Requir. Eng. Service Cloud Comput., P181
   Chauhan MA, 2017, SOFTWARE PRACT EXPER, V47, P599, DOI 10.1002/spe.2409
   Condori-Fernandez N, 2020, SUSTAINABILITY-BASEL, V12, DOI 10.3390/su12041682
   Condori-Fernandez N, 2018, J SYST SOFTWARE, V137, P289, DOI 10.1016/j.jss.2017.12.005
   Crnkovic I., 2011, SOFTWARE ARCHITECTUR, V6903
   Ferrer AJ, 2012, FUTURE GENER COMP SY, V28, P66, DOI 10.1016/j.future.2011.05.022
   Gill SS, 2019, J SYST SOFTWARE, V155, P104, DOI 10.1016/j.jss.2019.05.025
   Gill SS, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3241038
   Goniwada S.R., 2022, Cloud Native Architecture and Design: A Handbook for Modern Day Architecture and Design with Enterprise-Grade Examples, P127
   Gray DE., 2009, DOING RES REAL WORLD, V2nd
   Hameed A, 2016, COMPUTING, V98, P751, DOI 10.1007/s00607-014-0407-8
   Harms R., 2010, Microsoft whitepaper, P157
   Ingeno J., 2018, Software Architect's Handbook Become a Successful Software Architect by Implementing Effective Architecture Concepts
   iso, 2011, ISO/IEC 25010, ISO/ IEC 25010: 2011
   ITU-T SG13, 2014, Information technology-cloud computing-reference architecture)., P3502
   Jamshidi P, 2013, IEEE T CLOUD COMPUT, V1, P142, DOI 10.1109/TCC.2013.10
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering, VVolume 2, DOI [10.1145/1134285.1134500, DOI 10.1145/1134285.1134500]
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Koziolek H., 2011, Proceedings of the joint ACM SIGSOFT conference-QoSA and ACM SIGSOFT symposium-ISARCS on Quality of software architectures-QoSA and architecting critical systems-ISARCS-QoSA-ISARCS'11, QoSA-ISARCS'11, page, P3
   Kratzke N, 2017, J SYST SOFTWARE, V126, P1, DOI 10.1016/j.jss.2017.01.001
   Kumar SaurabhGarg., 2012, Harnessing Green IT: Principles and Practices, P315, DOI DOI 10.1002/9781118305393.CH16
   Lago P, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P61, DOI 10.1109/ICSE-SEIS.2019.00015
   Lago P, 2015, COMMUN ACM, V58, P70, DOI 10.1145/2714560
   Li YK, 2023, IEEE T SOFTWARE ENG, V49, P2545, DOI 10.1109/TSE.2022.3224378
   Liu F., 2011, NIST special publication, V500, P1, DOI DOI 10.6028/NIST.SP.500-292
   Masanet E., 2013, The energy efficiency potential of cloud-based software: A U.S. Case Study
   Mell P, 2010, COMMUN ACM, V53, P50
   Paradis C., 2021, P 54 HAW INT C SYST
   Penzenstadler B., 2012, Sustainability in Software Engineering: A Systematic Literature Review
   Procaccianti Giuseppe, 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P41, DOI 10.1109/WICSA.2014.30
   Procaccianti G., 2013, ENVIROINFO, P291
   Procaccianti G, 2015, SUSTAIN COMPUT-INFOR, V7, P2, DOI 10.1016/j.suscom.2014.11.004
   Shull F., 2007, Guide to advanced empirical software engineering
   Sommerville Ian, 2020, Engineering software products, V355
   Stol Klaas-Jan, 2020, Contemporary Empirical Methods in Software Engineering, P27
   Venters CC, 2023, INFORM SOFTWARE TECH, V164, DOI 10.1016/j.infsof.2023.107316
   Venters CC, 2018, J SYST SOFTWARE, V138, P174, DOI 10.1016/j.jss.2017.12.026
   Verdecchia R, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P11, DOI 10.1145/3194164.3194176
   Volpato T, 2019, 13TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2019), VOL 2, P245, DOI 10.1145/3344948.3344979
   Vos S, 2022, 2022 INTERNATIONAL CONFERENCE ON ICT FOR SUSTAINABILITY (ICT4S 2022), P77, DOI 10.1109/ICT4S55073.2022.00019
NR 53
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2024
VL 171
AR 107459
DI 10.1016/j.infsof.2024.107459
EA APR 2024
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RD1T9
UT WOS:001225648900001
OA hybrid
DA 2024-08-05
ER

PT J
AU Nogueira, AF
   Zenha-Rela, M
AF Nogueira, Ana Filipa
   Zenha-Rela, Mario
TI Process mining software engineering practices: A case study for
   deployment pipelines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE ci/cd; DevOps; Process mining; Temporal profiling; Continuous
   improvement; Software engineering
AB Context: In mature software development organizations the ci/cd pipeline is the only route to deploy software into production. While the workflow of this process seems straightforward, the reality is different since exceptions and deviations are the norm in actual industry practice. In this context, Process Mining appears as a promising technique to uncover deviations and check compliance with standardized DevOps processes, and highlight bottlenecks and potential improvement areas. Objective: This paper presents a case study designed to assess the potential of using Process Mining techniques to provide visibility into the deployment pipeline. Method: This research uses raw event data extracted from the continuous practices toolchain, which is then used to compute a comprehensive set of DevOps-specific metrics, thus supporting objective monitoring of the quality and efficiency of the deployment workflow. The study focuses on different development units in the Engineering team, each working in a distinct business context but sharing standard practices. Results: We verified that even though there are standards for the deployment pipelines, each team's workflow denotes local variations with unique points for improvement that are highly coupled to their business unit context. We observed that each team's pipeline has different temporal profiles that reflect their context and work practices. Additionally, we identified a set of deployment pipeline metrics focusing on process compliance, efficiency, and deployment stability. Conclusion: The main contributions of this paper include (1) the description of an actual application of Process Mining to the deployment pipeline of a highly complex e -commerce platform, (2) how this approach provided an objective understanding of the efficiency and quality of the development workflow, (3) how this processcentric view, combined with domain -specific DevOps metrics, supports continuous practices, and (4) how Developers can analyse their workflows by applying Process Mining while using standard tools like GitLab and PM4Py.
C1 [Nogueira, Ana Filipa; Zenha-Rela, Mario] Univ Coimbra, Ctr Informat & Syst, Dept Informat Engn, Coimbra, Portugal.
C3 Universidade de Coimbra
RP Nogueira, AF (corresponding author), Univ Coimbra, Ctr Informat & Syst, Dept Informat Engn, Coimbra, Portugal.
EM afnog@dei.uc.pt; mzrela@dei.uc.pt
CR Adel M., 2016, Int. J. Adv. Comput. Sci. Appl., V7, DOI [10.14569/IJACSA.2016.070239, DOI 10.14569/IJACSA.2016.070239]
   Adriansyah A, 2011, IEEE INT ENTERP DIST, P55, DOI 10.1109/EDOC.2011.12
   Alizadeh M, 2018, COMPUT SECUR, V73, P172, DOI 10.1016/j.cose.2017.10.010
   [Anonymous], 2012, P ACM S APPL COMP SA, DOI DOI 10.1145/2245276.2232051
   Ardila JPC, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2440
   Ardimento P, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP 2019), P84, DOI 10.1109/ICSSP.2019.00020
   Astromskis S, 2014, INT J SOFTW ENG KNOW, V24, P1255, DOI 10.1142/S0218194014400117
   Bala S, 2018, LECT NOTES BUS INF P, V319, P432, DOI 10.1007/978-3-319-94214-8_34
   Caldeira J, 2016, PROCEEDINGS 2016 10TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P254, DOI [10.1109/QUATIC.2016.061, 10.1109/QUATIC.2016.51]
   DevOps Institute, 2023, 9 ways to describe DevOps to someone who is not in tech
   Erdem S., 2018, INT C SOFTW PROC IMP, DOI DOI 10.1007/978-3-030-00623-5_20
   Farley D., 2021, Continuous Delivery Pipelines: How to Build Better Software Faster
   Forsgren Nicole., 2018, ACCELERATE SCI LEAN, V1st
   Fowler M., 2020, Patterns for managing source code branches
   Garcia CD, 2019, EXPERT SYST APPL, V133, P260, DOI 10.1016/j.eswa.2019.05.003
   Urrea-Contreras SJ, 2021, 2021 MEXICAN INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE (ENC 2021), DOI 10.1109/ENC53357.2021.9534824
   Keith B., 2017, INT C SOFTW PROC IMP, V5, P47
   Marques R, 2018, CONF BUS INFORM, P109, DOI 10.1109/CBI.2018.00021
   Nogueira A.F., 2023, Zenodo, DOI [10.5281/zenodo.8169380, DOI 10.5281/ZENODO.8169380]
   Nogueira A.F., 2021, SN Comput. Sci., V2, P448, DOI [10.1007/s42979-021-00830-2, DOI 10.1007/S42979-021-00830-2]
   Poncin W, 2011, EUR CON SFTWR MTNCE, P5, DOI 10.1109/CSMR.2011.5
   Rubin V.A., 2014, INT S EMPIRICAL SOFT, DOI [10.1145/2652524.2652583, DOI 10.1145/2652524.2652583]
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Santos RMS, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1657, DOI 10.1145/2695664.2696046
   Saylam R., 2014, Lecture Notes in Engineering and Computer Science, V1, P407
   Sebu ML, 2015, 2015 IEEE 10TH JUBILEE INTERNATIONAL SYMPOSIUM ON APPLIED COMPUTATIONAL INTELLIGENCE AND INFORMATICS (SACI), P437, DOI 10.1109/SACI.2015.7208243
   Smith S., 2020, Measuring Continuous Delivery: The What, Why, and how of Measuring Continuous Delivery
   Stertz F., 2020, CoRR, V7262
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van Dongen BF, 2005, LECT NOTES COMPUT SC, V3536, P444
   Vavpotic D, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2438
   Weijters A.J.M.M., 2006, Technische Universiteit Eindhoven
   Yang S, 2018, J BIOMED INFORM, V85, P155, DOI 10.1016/j.jbi.2018.07.022
NR 33
TC 0
Z9 0
U1 7
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2024
VL 168
AR 107392
DI 10.1016/j.infsof.2023.107392
EA JAN 2024
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GW9Q9
UT WOS:001155832600001
OA hybrid
DA 2024-08-05
ER

PT J
AU Chen, XR
   Usman, M
   Badampudi, D
AF Chen, Xingru
   Usman, Muhammad
   Badampudi, Deepika
TI Understanding and evaluating software reuse costs and benefits from
   industrial cases-A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software reuse; Software reuse costs; Software reuse benefits;
   Systematic literature review
ID QUALITY; PRODUCTIVITY; FRAMEWORK
AB Context: Software reuse costs and benefits have been investigated in several primary studies, which have been aggregated in multiple secondary studies as well. However, existing secondary studies on software reuse have not critically appraised the evidence in primary studies. Moreover, there has been relatively less focus on how software reuse costs and benefits were measured in the primary studies, and the aggregated evidence focuses more on software reuse benefits than reuse costs. Objective: This study aims to cover the gaps mentioned in the context above by synthesizing and critically appraising the evidence reported on software reuse costs and benefits from industrial cases. Method: We used a systematic literature review (SLR) to conduct this study. The results of this SLR are based on a final set of 30 primary studies. Results: We identified nine software reuse benefits and six software reuse costs, in which better quality and improved productivity were investigated the most. The primary studies mostly used defect -based and development time -based metrics to measure reuse benefits and costs. Regarding the reuse practices, the results show that software product lines, verbatim reuse, and systematic reuse were the top investigated ones, contributing to more reuse benefits. The quality assessment of the primary studies showed that most of them are either of low (20%) or moderate (67%) quality. Conclusion: Based on the number and quality of the studies, we conclude that the strength of evidence for better quality and improved productivity as reuse benefits is high. There is a need to conduct more high quality studies to investigate, not only other reuse costs and benefits, but also how relatively new reuse -related practices, such as InnerSource and microservices architecture, impact software reuse.
C1 [Chen, Xingru; Usman, Muhammad; Badampudi, Deepika] Blekinge Inst Technol, Dept Software Engn, Blekinge, Sweden.
C3 Blekinge Institute Technology
RP Chen, XR (corresponding author), Blekinge Inst Technol, Dept Software Engn, Blekinge, Sweden.
EM xingru.chen@bth.se; muhammad.usman@bth.se; deepika.badampudi@bth.se
OI Chen, Xingru/0000-0003-1181-9049
FU Knowledge Foundation, Sweden through the OSIR project at Blekinge
   Institute of Technology, Sweden [20190081]
FX This research is supported by the Knowledge Foundation, Sweden through
   the OSIR project (reference number 20190081) at Blekinge Institute of
   Technology, Sweden.
CR Agresti W., 2010, J. Softw. Eng. Appl., V1, P48
   Ampatzoglou A., 2020, Contemporary empirical methods in software engineering, P415
   [Anonymous], 2003, COMMISSION RECOMMEND
   Baldassarre MT, 2005, PROC IEEE INT CONF S, P283
   Barros-Justo JL, 2019, COMPUT STAND INTER, V66, DOI 10.1016/j.csi.2019.04.011
   Barros-Justo JL, 2019, COMPUT STAND INTER, V61, P137, DOI 10.1016/j.csi.2018.06.005
   Barros-Justo JL, 2018, INFORM SOFTWARE TECH, V103, P1, DOI 10.1016/j.infsof.2018.06.003
   Beyer HJ, 2008, LECT NOTES COMPUT SC, V5030, P1, DOI 10.1007/978-3-540-68073-4_1
   Bombonatti D, 2017, SOFTWARE PRACT EXPER, V47, P943, DOI 10.1002/spe.2416
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Chen XR, 2022, E-INFORMATICA, V16, DOI 10.37190/e-Inf220110
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Deniz B, 2014, LECT NOTES COMPUT SC, V8583, P508, DOI 10.1007/978-3-319-09156-3_36
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Flemström D, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P317, DOI 10.1109/SEAA.2015.46
   Frakes W, 1996, ACM COMPUT SURV, V28, P415, DOI 10.1145/234528.234531
   Frakes WB, 2001, J SYST SOFTWARE, V57, P99, DOI 10.1016/S0164-1212(00)00121-7
   Goldin L, 2015, REQUIR ENG, V20, P23, DOI 10.1007/s00766-013-0182-7
   Gouigoux JP, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P62, DOI 10.1109/ICSAW.2017.35
   Gupta A, 2009, EMPIR SOFTW ENG, V14, P227, DOI 10.1007/s10664-008-9081-9
   HENRY E, 1995, IEEE SOFTWARE, V12, P47, DOI 10.1109/52.406756
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham Barbara Ann, 2015, Evidencebased software engineering and systematic reviews, V4
   Kodama R, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P254, DOI 10.1145/2648511.2648540
   Kolb R, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P172
   Krüger J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P432, DOI 10.1145/3368089.3409684
   LIM WC, 1994, IEEE SOFTWARE, V11, P23, DOI 10.1109/52.311048
   Lindman J., 2010, Open source technology changes intra-organizational systems development-a tale of two companies
   Mäkitalo N, 2020, COMPUTING, V102, P2385, DOI 10.1007/s00607-020-00833-6
   Mao FG, 2016, 2016 17TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P425, DOI 10.1109/SNPD.2016.7515935
   Marimuthu C, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P143, DOI 10.1145/3106195.3106212
   Mihale-Wilson C, 2022, BUS INFORM SYST ENG+, V64, P223, DOI 10.1007/s12599-021-00706-y
   Mohagheghi P, 2004, PROC INT CONF SOFTW, P282, DOI 10.1109/ICSE.2004.1317450
   Mohagheghi P, 2007, EMPIR SOFTW ENG, V12, P471, DOI 10.1007/s10664-007-9040-x
   Mohagheghi P, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363104
   Morad S, 2005, IEEE INTERNATIONAL CONFERENCE ON SOFTWARE - SCIENCE, TECHNOLOGY AND ENGINEERING, PROCEEDINGS, P110, DOI 10.1109/SWSTE.2005.11
   Morisio M, 2002, IEEE T SOFTWARE ENG, V28, P876, DOI 10.1109/TSE.2002.1033227
   Otsuka J., 2011, P 15 INT SOFTW PROD, V2, P1
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Powell A., 1998, Software Process Improvement and Practice, V4, P173, DOI 10.1002/(SICI)1099-1670(199809)4:3<173::AID-SPIP101>3.0.CO;2-3
   Public Health Resource Unit, 2008, Critical appraisal skills programme, V2008
   Quilty G., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P251, DOI 10.1109/SPLC.2011.30
   Rodgers M., 2009, Evaluation, V15, P49, DOI DOI 10.1177/1356389008097871
   Rothenberger MA, 1999, DECISION SCI, V30, P1131, DOI 10.1111/j.1540-5915.1999.tb00921.x
   Schreiber A., 2014, P INT S OP COLL, P1
   Selby RW, 2005, IEEE T SOFTWARE ENG, V31, P495, DOI 10.1109/TSE.2005.69
   Sellier D, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P54, DOI 10.1109/SPLINE.2007.14
   Slyngstad O.P.N., 2006, P 2006 ACM IEEE INT, P242
   Succi G, 2001, IEEE T SOFTWARE ENG, V27, P473, DOI 10.1109/32.922717
   Sun HY, 2015, TOTAL QUAL MANAG BUS, V26, P1188, DOI 10.1080/14783363.2014.920179
   Thomas WM, 1997, J SYST SOFTWARE, V38, P211, DOI 10.1016/S0164-1212(96)00152-5
   Tomer A, 2004, IEEE T SOFTWARE ENG, V30, P601, DOI 10.1109/TSE.2004.50
   Waileung Ha, 2012, 2012 IEEE 6th International Conference on Management of Innovation & Technology (ICMIT 2012), P394, DOI 10.1109/ICMIT.2012.6225838
   Wang YY, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09910-y
   Wohlin C., 2014, P 18 INT C EV ASS SO, P1, DOI [DOI 10.1145/2601248.2601268, 10.1145/2601248.2601268]
   Younoussi Siham, 2015, Journal of Theoretical and Applied Information Technology, V76, P64
   Zhang WS, 2005, LECT NOTES COMPUT SC, V3714, P57
NR 58
TC 0
Z9 0
U1 3
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2024
VL 171
AR 107451
DI 10.1016/j.infsof.2024.107451
EA MAR 2024
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QT8U0
UT WOS:001223219600001
OA Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Petersen, K
AF Petersen, Kai
TI Case study identification with GPT-4 and implications for mapping
   studies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic mapping studies; Data extraction; Case study; GPT-4
AB Context: Rainer and Wohlin showed that case studies are not well understood by reviewers and authors and thus they say that a given research is a case study when it is not. Objective: Rainer and Wohlin proposed a smell indicator (inspired by code smells) to identify case studies based on the frequency of occurrences of words, which performed better than human classifiers. With the emergence of ChatGPT, we evaluate ChatGPT to assess its performance in accurately identifying case studies. We also reflect on the results' implications for mapping studies, specifically data extraction. Method: We used ChatGPT with the model GPT-4 to identify case studies and compared the result with the smell indicator for precision, recall, and accuracy. Results: GPT-4 and the smell indicator perform similarly, with GPT-4 performing slightly better in some instances and the smell indicator (SI) in others. The advantage of GPT-4 is that it is based on the definition of case studies and provides traceability on how it reaches its conclusions. Conclusion: As GPT-4 performed well on the task and provides traceability, we should use and, with that, evaluate it on data extraction tasks, supporting us as authors.
C1 [Petersen, Kai] Blekinge Inst Technol, Valhallavagen 1, S-37141 Karlskrona, Sweden.
   [Petersen, Kai] Flensburg Univ Appl Sci FUAS, Kanzleistr 91-93, D-24943 Flensburg, Germany.
C3 Blekinge Institute Technology
RP Petersen, K (corresponding author), Blekinge Inst Technol, Valhallavagen 1, S-37141 Karlskrona, Sweden.
EM kai.petersen@hs-flensburg.de
CR Petersen K., 2008, P 12 INT C EVALUATIO, P68, DOI DOI 10.14236/EWIC/EASE2008.8
   Rainer Austen, 2023, Inf. Softw. Technol
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Wohlin C, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2021.106514
   Yin Robert K., 2009, CASE STUDY RES
NR 5
TC 0
Z9 0
U1 6
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2024
VL 171
AR 107452
DI 10.1016/j.infsof.2024.107452
EA MAR 2024
PG 3
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OD7R1
UT WOS:001205391500001
OA hybrid
DA 2024-08-05
ER

PT J
AU Shen, X
   Yao, XJ
   Gong, DW
   Tu, HJ
AF Shen, Xin
   Yao, Xiangjuan
   Gong, Dunwei
   Tu, Huijie
TI Multi-objective optimization and integrated indicator-driven two-stage
   project recommendation in time-dependent software ecosystem
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software ecosystem; Time-dependence; Project recommendation;
   Multi-objective optimization; Integrated indicator
ID ALGORITHM; SYSTEMS; MODEL
AB Context: Time -dependent software ecosystem is a complex system, where there are many projects and developers. Recommending projects to developers in a time -dependent software ecosystem can improve their quality and development speeds. However, the time -dependence of projects and developers results in an increased difficulty of project recommendation. Objective: To better recommend projects to developers in a time -dependent software ecosystem, we propose a method of multi -objective optimization and integrated indicator -driven two -stage project recommendation, which is fulfilled according to the change of developer communities and their projects. Method: According to the change of developer communities and their projects, a method of multi -objective optimization and integrated indicator -driven two -stage project recommendation is fulfilled. In the first stage, a constrained multi -objective optimization model for project recommendation to developer communities is established, and an improved NSGA-II algorithm is adopted to solve this model, with the purpose of obtaining the recommended projects to a developer community. For the second stage, an integrated indicator for project recommendation to developers is built to determine the developers of a project. Results: The proposed method is applied to project recommendation for nine time -dependent software ecosystems in GitHub, and compared with six state-of-the-art ones. The experimental results show that our method has significant advantages in recommendation accuracy and efficiency. Conclusion: According to the experimental results, we conclude that the proposed method can timely and accurately recommend projects to developers in a time -dependent software ecosystem, which reduces the difficulty of solving the problem of project recommendation.
C1 [Shen, Xin] Yancheng Inst Technol, Sch Informat Engn, Yancheng 224051, Peoples R China.
   [Yao, Xiangjuan; Tu, Huijie] China Univ Min & Technol, Sch Math, Xuzhou 221116, Peoples R China.
   [Gong, Dunwei] Qingdao Univ Sci & Technol, Coll Automat & Elect Engn, Qingdao 266061, Peoples R China.
C3 Yancheng Institute of Technology; China University of Mining &
   Technology; Qingdao University of Science & Technology
RP Gong, DW (corresponding author), Qingdao Univ Sci & Technol, Coll Automat & Elect Engn, Qingdao 266061, Peoples R China.
EM shenxinpassion@163.com; yaoxj@cumt.edu.cn; dwgong@vip.163.com;
   tb19080008b4@cumt.edu.cn
RI Gong, Dunwei/HDO-3693-2022
FU National Key Research and De-velopment Program of China
   [2018YFB100380201]; National Natural Science Foundation of China
   [62373357]
FX <B>Acknowledgments</B> This work was supported by the National Key
   Research and De-velopment Program of China (No. 2018YFB100380201) and
   National Natural Science Foundation of China (No. 62373357) .
CR Avelino G., 2019, IEEE Softw., V1, P5401
   Bana R, 2018, INT CONF CONTEMP, P166
   Burke R, 2002, USER MODEL USER-ADAP, V12, P331, DOI 10.1023/A:1021240730564
   Cai XJ, 2020, EXPERT SYST APPL, V159, DOI 10.1016/j.eswa.2020.113648
   Cai XJ, 2020, INFORM SCIENCES, V537, P148, DOI 10.1016/j.ins.2020.05.067
   Chen YL, 2021, INFORM PROCESS MANAG, V58, DOI 10.1016/j.ipm.2021.102531
   Chouchen M, 2021, APPL SOFT COMPUT, V100, DOI 10.1016/j.asoc.2020.106908
   Cui ZH, 2021, INFORM SCIENCES, V579, P1, DOI 10.1016/j.ins.2021.07.077
   Darban ZZ, 2022, EXPERT SYST APPL, V200, DOI 10.1016/j.eswa.2022.116850
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Folino F, 2014, IEEE T KNOWL DATA EN, V26, P1838, DOI 10.1109/TKDE.2013.131
   Franco-Bedoya O, 2017, INFORM SOFTWARE TECH, V91, P160, DOI 10.1016/j.infsof.2017.07.007
   Ghenai C, 2020, RENEW ENERG, V146, P580, DOI 10.1016/j.renene.2019.06.157
   Hou TT, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106451
   Jain A, 2020, EXPERT SYST APPL, V139, DOI 10.1016/j.eswa.2019.112857
   Jiang J, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106394
   Kersuliene V, 2010, J BUS ECON MANAG, V11, P243, DOI 10.3846/jbem.2010.12
   Kim D, 2019, INFORM SCIENCES, V477, P15, DOI 10.1016/j.ins.2018.10.006
   Liao ZF, 2020, SOFT COMPUT, V24, P5683, DOI 10.1007/s00500-019-04217-7
   Lungu MirceaF., 2009, Reverse Engineering Software Ecosystems
   Marlow J., 2013, P 2023 C COMP SUPP C, P117, DOI [10.1145/2441776.2441792, DOI 10.1145/2441776.2441792]
   Mu YS, 2018, INFORM SCIENCES, V435, P40, DOI 10.1016/j.ins.2017.12.059
   Pamucar D, 2021, EXPERT SYST APPL, V175, DOI 10.1016/j.eswa.2021.114862
   Qiaona Hong, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P323, DOI 10.1109/ICSM.2011.6080799
   Rani P, 2021, EXPERT SYST APPL, V182, DOI 10.1016/j.eswa.2021.115267
   Resnick P., 1994, Transcending Boundaries, CSCW '94. Proceedings of the Conference on Computer Supported Cooperative Work, P175, DOI 10.1145/192844.192905
   Sarwar B., 2001, Proceedings of the 10th internationalConference on World Wide Web (Hong Kong, Hong Kong, May 01-05, P285, DOI DOI 10.1145/371920.372071
   Schall D, 2014, INFORM SOFTWARE TECH, V56, P1543, DOI 10.1016/j.infsof.2013.12.003
   Shen X, 2023, CHINESE J ELECTRON, V32, P39, DOI 10.23919/cje.2021.00.276
   Shen X, 2022, KNOWL-BASED SYST, V252, DOI 10.1016/j.knosys.2022.109404
   Sun X., 2010, PROC C AIAA AVIATION, P1
   Sun XB, 2018, SCI CHINA INFORM SCI, V61, DOI 10.1007/s11432-017-9419-x
   Sun XB, 2017, J SYST SOFTWARE, V134, P355, DOI 10.1016/j.jss.2017.09.021
   Wang SF, 2020, INFORM SCIENCES, V513, P614, DOI 10.1016/j.ins.2019.11.028
   Wang SF, 2016, KNOWL-BASED SYST, V104, P145, DOI 10.1016/j.knosys.2016.04.018
   Wang SM, 2023, INFORM SOFTWARE TECH, V163, DOI 10.1016/j.infsof.2023.107283
   Wu B, 2020, INFORM SCIENCES, V541, P185, DOI 10.1016/j.ins.2020.06.046
   Wu ML, 2014, EXPERT SYST APPL, V41, P2754, DOI 10.1016/j.eswa.2013.10.008
   Ying HC, 2016, 2016 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON CROWDSOURCING IN SOFTWARE ENGINEERING (CSI-SE), P29, DOI [10.1109/CSI-SE.2016.013, 10.1145/2897659.2897660]
   Yong XK, 2022, ENERG CONVERS MANAGE, V260, DOI 10.1016/j.enconman.2022.115608
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
   Zhang GF, 2017, IEEE T RELIAB, V66, P1193, DOI 10.1109/TR.2017.2738660
   Zhang L, 2020, IEEE T BIG DATA, V8, P1141, DOI 10.1109/TBDATA.2020.2993446
   Zhang XY, 2020, IEEE T CYBERNETICS, V50, P703, DOI 10.1109/TCYB.2018.2871673
   Zhang Y, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P13, DOI 10.1109/SANER.2017.7884605
   Zhao HK, 2022, IEEE T EVOLUT COMPUT, V26, P28, DOI 10.1109/TEVC.2021.3091615
   Zheng Y, 2022, NEUROCOMPUTING, V474, P141, DOI 10.1016/j.neucom.2021.11.041
   Zöller N, 2020, TECHNOL FORECAST SOC, V161, DOI 10.1016/j.techfore.2020.120291
NR 48
TC 0
Z9 0
U1 3
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2024
VL 170
AR 107433
DI 10.1016/j.infsof.2024.107433
EA MAR 2024
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NR3A2
UT WOS:001202128900001
DA 2024-08-05
ER

PT J
AU Marquez, G
   Pacheco, M
   Astudillo, H
   Taramasco, C
   Calvo, E
AF Marquez, Gaston
   Pacheco, Michelle
   Astudillo, Hernan
   Taramasco, Carla
   Calvo, Esteban
TI Inclusion of individuals with autism spectrum disorder in Software
   Engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Autism spectrum disorders; Systematic multivocal mapping study; Software
   engineering
ID COMPUTATIONAL THINKING; ADOLESCENTS; GUIDELINES; ABILITIES; SKILLS
AB Context: Software Engineering is dedicated to the systematic and efficient development of software, which necessitates the active participation of all team members and a recognition of their unique skills and abilities, including those with autism spectrum disorders (ASD). The inclusion of individuals with ASD presents new perspectives, yet there is a lack of systematic evidence regarding the primary obstacles and potential benefits associated with their inclusion. Objective: This paper aims to identify, characterize, and describe barriers, facilitators, and methodological proposals described by the community to include individuals with ASD in the discipline of Software Engineering. Methods: We conducted a comprehensive systematic multivocal mapping study to evaluate the existing evidence on the inclusion of individuals with ASD in Software Engineering. Results: We obtained 34 primary studies from which we identified the main facilitators of motivation to learn new skills, attention to detail, and the ability to report and visualize patterns. In contrast, the main barriers detected were communication, a lack of neurodivergent computational thinking, and sensory integration. Additionally, we identified and classified four categories of proposals that allowed the inclusion of individuals with ASD: (i) using virtual reality, (ii) creating more inclusive workspaces, (iii) encouraging neurodivergent computational thinking, and (iv) improving social skills. Conclusions: This study identifies the principal elements that ought to be taken into consideration when allocating tasks and roles to individuals with ASD in software development.
C1 [Marquez, Gaston] Univ Bio Bio, Dept Ciencias Comp & Tecnol Informac, Ave Andres Bello 720, Chillan 3780000, Nuble, Chile.
   [Pacheco, Michelle; Astudillo, Hernan; Taramasco, Carla] Inst Tecnol Innovac Salud & Bienestar, Calle 1 Oriente 1180, Vina Del Mar 2520000, Valparaiso, Chile.
   [Astudillo, Hernan] Univ Tecn Feder Santa Maria, Dept Informat, Ave Espana 1680, Valparaiso 2340000, Chile.
   [Taramasco, Carla; Calvo, Esteban] Nucleo Milenio Sociomed, Santiago 8320000, Chile.
   [Calvo, Esteban] Univ Mayor, Escuela Psicol, Fac Ciencias Sociales & Artes, Ctr Invest Soc & Salud, Manuel Montt 367, Santiago 8320000, Chile.
C3 Universidad del Bio-Bio; Universidad Tecnica Federico Santa Maria;
   Universidad Mayor
RP Marquez, G (corresponding author), Univ Bio Bio, Dept Ciencias Comp & Tecnol Informac, Ave Andres Bello 720, Chillan 3780000, Nuble, Chile.
EM gmarquez@ubiobio.cl
RI Astudillo, Hernan/B-7521-2012
OI Astudillo, Hernan/0000-0002-6487-5813; Marquez,
   Gaston/0000-0003-0167-5969
FU Millennium Nucleus on Sociomedicine, Chile [ANID-MILENIO-NCS2021_013]
FX We wish to thank the Millennium Nucleus on Sociomedicine, Chile
   (ANID-MILENIO-NCS2021_013) for supporting this study.
CR Ahmed F, 2015, Arxiv, DOI arXiv:1507.06873
   Alzahrani M, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2022), P102, DOI [10.1109/ICSE-SEIS55304.2022.9794013, 10.1145/3510458.3513007]
   American Psychiatric Association DSMTF and American Psychiatric Association and others, 2013, Diagnostic and Statistical Manual of Mental Disorders: DSM-5., V5
   Annabi H., 2017, It's not just about attention to details: Redefining the talents autistic software developers bring to software development
   Atwood J, 2006, Software developers and Asperger's syndrome
   Baron-Cohen S, 2009, ANN NY ACAD SCI, V1156, P68, DOI 10.1111/j.1749-6632.2009.04467.x
   Begel A, 2020, 22ND INTERNATIONAL ACM SIGACCESS CONFERENCE ON COMPUTERS AND ACCESSIBILITY (ASSETS '20), DOI 10.1145/3373625.3418305
   Bell C.C., 1994, Diagnostic and statistical manual of mental disorders, V272, P828, DOI [DOI 10.1001/JAMA.1994.03520100096046, 10.1001/jama.1994.03520100096046]
   Braun V, 2012, Thematic analysis, V2, P57, DOI [10.1037/13620-004, DOI 10.1037/13620-004]
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI 10.1191/1478088706qp063oa
   Cardoso -Pereira I., 2023, IEEE Softw.
   Carroll C, 2015, RES SYNTH METHODS, V6, P149, DOI 10.1002/jrsm.1128
   Bandres SC, 2023, EDUC INF TECHNOL, V28, P9285, DOI 10.1007/s10639-022-10990-0
   Costello E, 2021, COMM COM INF SC, V1442, P349, DOI 10.1007/978-3-030-85521-5_23
   Creed C, 2024, UNIVERSAL ACCESS INF, V23, P59, DOI 10.1007/s10209-023-00969-0
   Cunningham Z, 2023, Navigating neurodiversity: How can software developers support their mental health in the workplace?
   Das Maitraye, 2021, Proceedings of the ACM on Human-Computer Interaction, V5, DOI 10.1145/3449282
   De Villiers J, 2006, MIDWEST STUD PHILOS, V31, P292
   Duncan AW, 2015, AUTISM, V19, P64, DOI 10.1177/1362361313510068
   Eiselt K, 2018, PROC FRONT EDUC CONF
   el Kaliouby R, 2006, ANN NY ACAD SCI, V1093, P228, DOI 10.1196/annals.1382.016
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Giannelis M., 2022, The benefits of autism in the technology industry
   Gillin P, 2021, In autistic people, tech firms find long-overlooked talent trove
   Glaser N, 2022, VIRTUAL REAL-LONDON, V26, P1705, DOI 10.1007/s10055-022-00661-3
   Goff-Dupont S, 2018, Can the future of tech include autism spectrum disorder?
   Jacobs B, 2017, Software firms are actively seeking 'neurodiverse' employees
   Joseph R.M., 2011, Neuropsychol. Autism., V281, P294
   Krause M, 2021, PROCEEDINGS OF THE 27TH BRAZILIAN SYMPOSIUM ON MULTIMEDIA AND THE WEB (WEBMEDIA '21), P45, DOI 10.1145/3470482.3479616
   Kuhrmann M, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.62
   Libguides, 2023, Systematic reviews: Step 6: Assess quality of included studies.
   Loiacono ET, 2013, UNIVERSAL ACCESS INF, V12, P115, DOI 10.1007/s10209-011-0269-1
   Lord C, 2018, LANCET, V392, P508, DOI 10.1016/S0140-6736(18)31129-2
   Lowy R, 2023, PROCEEDINGS OF THE 2023 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2023), DOI 10.1145/3544548.3581399
   Marques AB, 2022, UNIVERSAL ACCESS INF, V21, P587, DOI 10.1007/s10209-021-00794-3
   Morris MR, 2015, ASSETS'15: PROCEEDINGS OF THE 17TH INTERNATIONAL ACM SIGACCESS CONFERENCE ON COMPUTERS & ACCESSIBILITY, P173, DOI 10.1145/2700648.2809841
   Moster M, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET 2022), P50, DOI 10.1109/ICSE-SEET55299.2022.9794268
   Munoz R, 2018, IEEE ACCESS, V6, P63880, DOI 10.1109/ACCESS.2018.2877417
   Petersen K., 2008, P 12 INT C EVALUATIO, P68, DOI DOI 10.14236/EWIC/EASE2008.8
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pisano G, 2017, Neurodiversity as a competitive advantage
   Pressman R.S., 2005, Software Engineering: A Practitioner's Approach
   Rizvi N., 2021, AMCIS
   Rutten A, 2003, J VISUAL COMP ANIMAT, V14, P233, DOI 10.1002/vis.320
   Sahu A, 2022, Hiring autistic workers: 4 companies embracing neurodiversity in tech
   Salehi P, 2021, Neurodiversity and the software design dilemma
   Scharfstein LA, 2011, J ABNORM CHILD PSYCH, V39, P865, DOI 10.1007/s10802-011-9498-2
   Schneider E, 2020, Optimizing yourself: Neurodiversity in tech
   Stancic J. Z., 2011, 2011 Proceedings of 34th International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO 20111), P236
   Stuurman Sylvia, 2019, P 8 COMP SCI ED RES, P15
   Tang J., 2021, P ACM HUMAN COMPUTER, V5, P1, DOI DOI 10.1145/3449104
   Tomczak MT, 2021, J DISABIL POLICY STU, V31, P195, DOI 10.1177/1044207320919945
   Totaljobs.com, 2023, The benefits of neurodiversity in tech companies
   Tunk N, 2023, CURR PSYCHOL, V42, P30665, DOI 10.1007/s12144-021-02660-0
   University of Washington, 2022, How do neurodiverse and neurotypical software engineers differ in the workplace?
   Weaver B, 2019, Tales of the autistic developer-The 10x engineer
   Wei X, 2013, J AUTISM DEV DISORD, V43, P1539, DOI 10.1007/s10803-012-1700-z
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wing JM, 2008, PHILOS T R SOC A, V366, P3717, DOI 10.1098/rsta.2008.0118
   WING L, 1979, J AUTISM DEV DISORD, V9, P11, DOI 10.1007/BF01531288
   Wohlgenannt I, 2020, BUS INFORM SYST ENG+, V62, P455, DOI 10.1007/s12599-020-00658-9
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Zhao H, 2019, SUSTAINABILITY-BASEL, V11, DOI 10.3390/su11174717
NR 63
TC 1
Z9 1
U1 2
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2024
VL 170
AR 107434
DI 10.1016/j.infsof.2024.107434
EA MAR 2024
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QA0V7
UT WOS:001218052200001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Zhang, MX
   Liu, HX
   Song, SN
   Chen, CY
   Huang, P
   Zhao, J
AF Zhang, Mengxi
   Liu, Huaxiao
   Song, Shenning
   Chen, Chunyang
   Huang, Pei
   Zhao, Jian
TI Are your apps accessible? A GCN-based accessibility checker for low
   vision users
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE GUI; Accessibility; Graph convolutional neural networks; Low vision
   users
AB Context: Accessibility issues (e.g., small size and narrow interval) in mobile applications (apps) lead to obstacles for billions of low vision users in interacting with Graphical User Interfaces (GUIs). Although GUI accessibility scanning tools exist, most of them perform rule-based check relying on complex GUI hierarchies. This might make them detect invisible redundant information, cannot handle small deviations, omit similar components, and is hard to extend. Objective: In this paper, we propose a novel approach, named ALVIN (Accessibility Checker for Low Vision), which represents the GUI as a graph and adopts the Graph Convolutional Neural Networks (GCN) to label inaccessible components. Method: ALVIN removes invisible views to prevent detecting redundancy and uses annotations from low vision users to handle small deviations. Also, the GCN model could consider the relations between GUI components, connecting similar components and reducing the possibility of omission. ALVIN only requires users to annotate the relevant dataset when detecting new kinds of issues. Results: Our experiments on 48 apps demonstrate the effectiveness of ALVIN, with precision of 83.5%, recall of 78.9%, and F1-score of 81.2%, outperforming baseline methods. In RQ2, the usefulness is verified through 20 issues submitted to open-source apps. The RQ3 also illustrates the GCN model is better than other models. Conclusion: To summarize, our proposed approach can effectively detect accessibility issues in GUIs for low vision users, thereby guiding developers in fixing them efficiently.
C1 [Zhang, Mengxi; Liu, Huaxiao; Song, Shenning] Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Jilin, Peoples R China.
   [Zhang, Mengxi; Liu, Huaxiao; Song, Shenning] Jilin Univ, Key Lab Symbol Computat & Knowledge Engn, Minist Educ, Changchun 130012, Jilin, Peoples R China.
   [Chen, Chunyang] Tech Univ Munich, Dept Comp Sci, D-85354 Heilbronn, Germany.
   [Huang, Pei] Stanford Univ, Dept Comp Sci, Stanford, CA 94305 USA.
   [Zhao, Jian] Changchun Univ, Coll Comp Sci, Changchun 130012, Jilin, Peoples R China.
C3 Jilin University; Jilin University; Technical University of Munich;
   Stanford University; Changchun University
RP Liu, HX (corresponding author), Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Jilin, Peoples R China.
EM zmx19@mails.jlu.edu.cn; liuhuaxiao@jlu.edu.cn;
   songsz22@mails.jlu.edu.cn; chun-yang.chen@tum.de; huangpei@stanford.edu;
   zhaojian@ccu.edu.cn
OI zhang, mengxi/0000-0003-4380-794X; liu, huaxiao/0000-0002-8151-1413
FU Fundamental Research Funds for the Central Universities, JLU
   [2022-JCXK-16]; National Natural Science Foundation of China (NSFC)
   [62102160]; Jilin Provincial Natural Science Foundation [20230101070JC]
FX The work is funded by "the Fundamental Research Funds for the Central
   Universities, JLU, 2022-JCXK-16", "the National Natural Science
   Foundation of China (NSFC) No. 62102160", and supported by "Jilin
   Provincial Natural Science Foundation, 20230101070JC".
CR Alshayban A, 2020, PROC INT CONF SOFTW, P1323, DOI 10.1145/3377811.3380392
   [Anonymous], 2022, Accessibility service
   [Anonymous], 2020, Automated accessibility test tool
   [Anonymous], 2021, Blindness and vision impairment
   [Anonymous], 2022, Number of available applications in the apple store
   [Anonymous], 2016, Accessibility requirements for people with low vision
   [Anonymous], 2019, Airtest IDE
   [Anonymous], 2016, Accessibility scanner
   [Anonymous], 2022, The supporting data and code, DOI [10.5281/zenodo.11933637, DOI 10.5281/ZENODO.11933637]
   AppCrawler, 2016, About us
   Araujo de Oliveira Gabriela Amaral, 2016, P 15 BRAZ S HUM FACT
   Bajammal M, 2021, PROC INT CONF SOFTW, P1610, DOI 10.1109/ICSE43902.2021.00143
   Bigham JP, 2010, ASSETS 2010: PROCEEDINGS OF THE 12TH INTERNATIONAL ACM SIGACCESS CONFERENCE ON COMPUTERS AND ACCESSIBILITY, P35
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Çaylak O, 2020, MACH LEARN-SCI TECHN, V1, DOI 10.1088/2632-2153/aba048
   Chen JS, 2020, PROC INT CONF SOFTW, P322, DOI 10.1145/3377811.3380327
   Chen Liuqing, 2024, IEEE ACM 46 INT C SO, P1
   Chen Sen, 2021, IEEE Trans. Softw. Eng.
   Eler MM, 2018, IEEE INT CONF SOFTW, P116, DOI 10.1109/ICST.2018.00021
   Guo K, 2022, IEEE T INTELL TRANSP, V23, P1009, DOI 10.1109/TITS.2020.3019497
   Hao S, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P204, DOI 10.1145/2594368.2594390
   Hara K., 2013, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P631, DOI 10.1145/2470654.2470744
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   He KM, 2015, PROC CVPR IEEE, P5353, DOI 10.1109/CVPR.2015.7299173
   Hu Fenyu, 2019, INT JOINT C ART INT, P630
   Jaramillo-Alcázar A, 2018, ADV INTELL SYST, V721, P552, DOI 10.1007/978-3-319-73450-7_52
   Kane SK, 2009, ASSETS'09: PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGACCESS CONFERENCE ON COMPUTERS AND ACCESSIBILITY, P115
   Kapoor Amol, 2018, IEEE C UNC ART INT
   Kipf Thomas, 2016, 2016 IEEE ACM INT C
   Kittaneh F, 2003, ARCH MATH, V81, P601, DOI 10.1007/s00013-003-0525-6
   Kline Richard L., 1995, INT C HUM FACT COMP
   Kocsis Peter, 2022, ADV NEUR IN, V35, P1896
   LeCun Y, 2010, IEEE INT SYMP CIRC S, P253, DOI 10.1109/ISCAS.2010.5537907
   Levin K, 2013, 2013 IEEE WORKSHOP ON AUTOMATIC SPEECH RECOGNITION AND UNDERSTANDING (ASRU), P410, DOI 10.1109/ASRU.2013.6707765
   Li C, 2022, PROC INT CONF SOFTW, P1793, DOI 10.1145/3510003.3510056
   Liu Z, 2023, IEEE T SOFTWARE ENG, V49, P403, DOI 10.1109/TSE.2022.3150876
   Liu Z, 2020, IEEE INT CONF AUTOM, P398, DOI 10.1145/3324884.3416547
   Long YH, 2020, SCI CHINA INFORM SCI, V63, DOI 10.1007/s11432-019-2860-3
   Ma GH, 2023, PROCEEDINGS OF THE THIRTY-SECOND INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, IJCAI 2023, P4037
   Mack K, 2021, CHI '21: PROCEEDINGS OF THE 2021 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3411764.3445412
   Mehralian F, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P107, DOI 10.1145/3468264.3468604
   Park Kyudong, 2014, Toward accessible mobile application design: developing mobile application accessibility guidelines for people with visual impairment
   Rodrigues A, 2020, INT J HUM-COMPUT INT, V36, P1605, DOI 10.1080/10447318.2020.1768672
   Romero A., 2018, INT C LEARN REPR, P2920, DOI DOI 10.48550/ARXIV.1710.10903
   Ross AS, 2020, ACM T ACCESS COMPUT, V13, DOI 10.1145/3348797
   Ross AS, 2018, ASSETS'18: PROCEEDINGS OF THE 20TH INTERNATIONAL ACM SIGACCESS CONFERENCE ON COMPUTERS AND ACCESSIBILITY, P119, DOI 10.1145/3234695.3236364
   Salehnamadi Navid, 2021, CHI '21: Proceedings of the 2021 CHI Conference on Human Factors in Computing Systems, DOI 10.1145/3411764.3445455
   Silva C, 2018, PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON SOFTWARE DEVELOPMENT AND TECHNOLOGIES FOR ENHANCING ACCESSIBILITY AND FIGHTING INFO-EXCLUSION (DSAI 2018), P286, DOI 10.1145/3218585.3218673
   Steinwart Ingo, 2008, Support Vector Machines, DOI DOI 10.1007/978-0-387-77242-4
   Tomlinson Brianna J., 2016, P 18 INT C HUM COMP
   UIAutomator, 2020, About us
   Vaswani A, 2023, Arxiv, DOI arXiv:1706.03762
   Wang Mingkai, 2020, IEEE AAAI 2020 IEEE
   Wei LL, 2016, IEEE INT CONF AUTOM, P226, DOI 10.1145/2970276.2970312
   Wu Zhanghao, 2022, Neural Information Processing Systems
   Xiao XS, 2019, PROC INT CONF SOFTW, P257, DOI 10.1109/ICSE.2019.00041
   Xie ML, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P332, DOI 10.1145/3540250.3549138
   Xu TL, 2020, LANCET PUBLIC HEALTH, V5, pE682, DOI 10.1016/S2468-2667(20)30254-1
   Yan SG, 2019, ACM T ACCESS COMPUT, V12, DOI 10.1145/3300176
   Yan Shunguo, 2016, IBM strengthens mobile app accessibility and usability
   Zhang LL, 2023, IEEE T KNOWL DATA EN, V35, P6085, DOI 10.1109/TKDE.2022.3176880
   Zhang MX, 2024, IEEE T SOFTWARE ENG, V50, P173, DOI 10.1109/TSE.2023.3337421
   Zhang XY, 2021, CHI '21: PROCEEDINGS OF THE 2021 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3411764.3445186
   Zhang XY, 2018, UIST 2018: PROCEEDINGS OF THE 31ST ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P609, DOI 10.1145/3242587.3242616
   Zhang XY, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P6024, DOI 10.1145/3025453.3025846
   Zhang ZQ, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P805, DOI 10.1145/3533767.3543292
NR 66
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2024
VL 174
AR 107518
DI 10.1016/j.infsof.2024.107518
EA JUN 2024
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YE3X8
UT WOS:001266781600001
DA 2024-08-05
ER

PT J
AU Rainer, A
   Wohlin, C
AF Rainer, Austen
   Wohlin, Claes
TI Reporting case studies in systematic literature studies-An evidential
   problem
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic mapping study; Systematic review; Systematic literature
   review; Case study; Credible evidence
ID SOFTWARE; REQUIREMENTS; INDUSTRY
AB Context: The term and label, "case study", is not used consistently by authors of primary studies in software engineering research. It is not clear whether this problem also occurs for systematic literature studies (SLSs). Objective: To investigate the extent to which SLSs in/correctly use the term and label, "case study", when classifying primary studies. Methods: We systematically collect two sub-samples (2010-2021 & 2022) comprising a total of eleven SLSs and 79 primary studies. We examine the designs of these SLSs, and then analyse whether the SLS authors and the primary-study authors correctly label the respective primary study as a "case study". Results: 76% of the 79 primary studies are misclassified by SLSs (with the two sub-samples having 60% and 81% misclassification, respectively). For 39% of the 79 studies, the SLSs propagate a mislabelling by the original authors, whilst for 37%, the SLSs introduce a new mislabel, thus making the problem worse. SLSs rarely present explicit definitions for "case study"and when they do, the definition is not consistent with established definitions. Conclusions: SLSs are both propagating and exacerbating the problem of the mislabelling of primary studies as "case studies", rather than - as we should expect of SLSs - correcting the labelling of primary studies, and thus improving the body of credible evidence. Propagating and exacerbating mislabelling undermines the credibility of evidence in terms of its quantity, quality and relevance to both practice and research.
C1 [Rainer, Austen] Queens Univ Belfast, 18 Malone Rd,Comp Sci Bldg, Belfast BT9 5BN, North Ireland.
   [Wohlin, Claes] Blekinge Inst Technol, SE-37179 Karlskrona, Sweden.
C3 Queens University Belfast; Blekinge Institute Technology
RP Wohlin, C (corresponding author), Blekinge Inst Technol, SE-37179 Karlskrona, Sweden.
EM claes.wohlin@bth.se
CR Amna AR, 2022, INFORM SOFTWARE TECH, V145, DOI 10.1016/j.infsof.2022.106824
   Ampatzoglou A, 2010, INFORM SOFTWARE TECH, V52, P888, DOI 10.1016/j.infsof.2010.05.004
   Ayala C, 2022, IEEE T SOFTWARE ENG, V48, P4229, DOI 10.1109/TSE.2021.3113558
   Badampudi Deepika, 2015, P 19 INT C EV ASS SO, P1, DOI DOI 10.1145/2745802.2745818
   Bailey John, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P482
   Bakar NH, 2015, J SYST SOFTWARE, V106, P132, DOI 10.1016/j.jss.2015.05.006
   BAKER C, 1992, J ADV NURS, V17, P1355, DOI 10.1111/j.1365-2648.1992.tb01859.x
   Barros-Justo JL, 2018, INFORM SOFTWARE TECH, V103, P1, DOI 10.1016/j.infsof.2018.06.003
   Basili V, 2018, IEEE SOFTWARE, V35, P44, DOI 10.1109/MS.2018.290110216
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Berg V, 2018, J SYST SOFTWARE, V144, P255, DOI 10.1016/j.jss.2018.06.043
   Bissi W, 2016, INFORM SOFTWARE TECH, V74, P45, DOI 10.1016/j.infsof.2016.02.004
   Brereton Pearl., 2008, Proceedings of the 12th International Conference on Evaluation and Assessment in Software Engineering, P41
   Budgen D, 2018, INFORM SOFTWARE TECH, V94, P234, DOI 10.1016/j.infsof.2017.10.012
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Dieste O, 2009, EMPIR SOFTW ENG, V14, P513, DOI 10.1007/s10664-008-9091-7
   Dissanayake N, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106771
   Easterbrook S., 2008, Guide to Advanced Empirical Software Eng, P285, DOI [10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-5_11]
   Elberzhager F, 2012, INFORM SOFTWARE TECH, V54, P1092, DOI 10.1016/j.infsof.2012.04.007
   Chacón-Luna AE, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106389
   Garousi V, 2016, COMPUT SCI REV, V19, P56, DOI 10.1016/j.cosrev.2015.12.002
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Haslam N, 2016, PSYCHOL INQ, V27, P1, DOI 10.1080/1047840X.2016.1082418
   Host Martin, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P479
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham Barbara Ann, 2015, Evidencebased software engineering and systematic reviews, V4
   Kroll J, 2018, INFORM SOFTWARE TECH, V93, P30, DOI 10.1016/j.infsof.2017.08.011
   Li ZY, 2013, INFORM SOFTWARE TECH, V55, P777, DOI 10.1016/j.infsof.2012.11.005
   Melo SM, 2019, INFORM SOFTWARE TECH, V105, P226, DOI 10.1016/j.infsof.2018.08.017
   Mourao E, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2020.106294
   Petersen K., 2008, P 12 INT C EVALUATIO, P68, DOI DOI 10.14236/EWIC/EASE2008.8
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Rainer A, 2023, INFORM SOFTWARE TECH, V161, DOI 10.1016/j.infsof.2023.107252
   Robson C., 2002, REAL WORLD RES
   Robson C., 2017, Small-Scale Evaluation: Principles and Practice
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   Runeson P., 2012, Case Study Research in Software Engineering: Guidelines and Examples
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Tofan D, 2014, INFORM SOFTWARE TECH, V56, P850, DOI 10.1016/j.infsof.2014.03.009
   Uludag Ö, 2022, J SYST SOFTWARE, V194, DOI 10.1016/j.jss.2022.111473
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   Verner JM, 2009, INT CONF RES CHAL, P313, DOI 10.1109/RCIS.2009.5089295
   Wedyan F, 2020, IET SOFTW, V14, P1, DOI 10.1049/iet-sen.2018.5446
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C., 2012, EXPT SOFTWARE ENG
   Wohlin C., 2014, P 8 ACM IEEE INT S E, V46, P1, DOI [10.1145/2652524.2652559, DOI 10.1145/2652524.2652559]
   Wohlin C., 2014, P 18 INT C EV ASS SO, DOI DOI 10.1145/2601248.2601268
   Wohlin C, 2022, J SYST SOFTWARE, V192, DOI 10.1016/j.jss.2022.111395
   Wohlin C, 2021, INFORM SOFTWARE TECH, V134, DOI 10.1016/j.infsof.2021.106555
   Wohlin C, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2021.106514
   Wohlin C, 2015, EMPIR SOFTW ENG, V20, P1427, DOI 10.1007/s10664-014-9319-7
   Yin R.K., 2018, Case study research and applications: Design and methods, V6th ed.
   Yin R. K., 2003, Case study research: Design and methods
   Yin R. K., 2009, CASE STUDY RES DESIG, V5, DOI DOI 10.1097/FCH.0B013E31822DDA9E
   Zannier C., 2006, 28th International Conference on Software Engineering Proceedings, P341, DOI 10.1145/1134285.1134333
NR 58
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2024
VL 174
AR 107501
DI 10.1016/j.infsof.2024.107501
EA JUN 2024
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WA9J4
UT WOS:001252262000001
OA hybrid
DA 2024-08-05
ER

PT J
AU Börstler, J
   bin Ali, N
   Petersen, K
   Engström, E
AF Borstler, Jurgen
   bin Ali, Nauman
   Petersen, Kai
   Engstrom, Emelie
TI Acceptance behavior theories and models in software engineering - A
   mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Acceptance behavior; Technology adoption; Theory use in software
   engineering; TAM; TPB; TRA; Fitness; Innovation diffusion
ID TASK-TECHNOLOGY FIT; USER ACCEPTANCE; INFORMATION-TECHNOLOGY
AB Context: The adoption or acceptance of new technologies or ways of working in software development activities is a recurrent topic in the software engineering literature. The topic has, therefore, been empirically investigated extensively. It is, however, unclear which theoretical frames of reference are used in this research to explain acceptance behaviors. Objective: In this study, we explore how major theories and models of acceptance behavior have been used in the software engineering literature to empirically investigate acceptance behavior. Method: We conduct a systematic mapping study of empirical studies using acceptance behavior theories in software engineering. Results: We identified 47 primary studies covering 56 theory uses. The theories were categorized into six groups. Technology acceptance models (TAM and its extensions) were used in 29 of the 47 primary studies, innovation theories in 10, and the theories of planned behavior/ reasoned action (TPB/TRA) in six. All other theories were used in at most two of the primary studies. The usage and operationalization of the theories were, in many cases, inconsistent with the underlying theories. Furthermore, we identified 77 constructs used by these studies of which many lack clear definitions. Conclusions: Our results show that software engineering researchers are aware of some of the leading theories and models of acceptance behavior, which indicates an attempt to have more theoretical foundations. However, we identified issues related to theory usage that make it difficult to aggregate and synthesize results across studies. We propose mitigation actions that encourage the consistent use of theories and emphasize the measurement of key constructs.
C1 [Borstler, Jurgen; bin Ali, Nauman; Petersen, Kai] Blekinge Inst Technol, Karlskrona, Sweden.
   [Petersen, Kai] Univ Appl Sci, Flensburg, Germany.
   [Engstrom, Emelie] Lund Univ, Lund, Sweden.
C3 Blekinge Institute Technology; Lund University
RP Börstler, J (corresponding author), Blekinge Inst Technol, Karlskrona, Sweden.
EM jurgen.borstler@bth.se
RI Engström, Emelie/AAG-7808-2019; Ali, Nauman bin/J-4293-2015
OI Engström, Emelie/0000-0001-6736-9425; Ali, Nauman
   bin/0000-0001-7266-5632
FU ELLIIT; Strategic Research Area within IT and Mobile Communications,
   Sweden - Swedish Government; Knowledge Foundation in Sweden [20220235]
FX This work has been supported by ELLIIT; the Strategic Research Area
   within IT and Mobile Communications, Sweden, funded by the Swedish
   Government. The work has also been supported by a research grant for the
   GIST project, Sweden (reference number 20220235) from the Knowledge
   Foundation in Sweden.
CR AJZEN I, 1991, ORGAN BEHAV HUM DEC, V50, P179, DOI 10.1016/0749-5978(91)90020-T
   Ajzen I., 1980, UNDERSTANDING ATTITU, DOI DOI 10.1007/978-3-642-69746-3_2
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   Archambault É, 2011, PRO INT CONF SCI INF, P66
   BANDURA A, 1977, PSYCHOL REV, V84, P191, DOI 10.1037/0033-295X.84.2.191
   Bandura A., 2009, HDB PRINCIPLES ORG B, P179, DOI DOI 10.1002/9781119206422.CH10
   bin Ali N, 2022, E-INFORMATICA, V16, DOI 10.37190/e-Inf220106
   bin Ali N, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962631
   Bin Ali N, 2014, J SYST SOFTWARE, V97, P65, DOI 10.1016/j.jss.2014.06.059
   Börstler J, 2023, J SYST SOFTWARE, V198, DOI 10.1016/j.jss.2022.111592
   Davis F.D., 1985, A technology acceptance model for empirically testing new end-user information systems: Theory and results, DOI DOI 10.1126/SCIENCE.146.3652.1648
   DAVIS FD, 1989, MANAGE SCI, V35, P982, DOI 10.1287/mnsc.35.8.982
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Dishaw MT, 1999, INFORM MANAGE-AMSTER, V36, P9, DOI 10.1016/S0378-7206(98)00101-3
   Engström E, 2020, EMPIR SOFTW ENG, V25, P2630, DOI 10.1007/s10664-020-09818-7
   Fetscherin M, 2008, J ELECTRON COMMER RE, V9, P231
   Fishbein M, 2011, PREDICTING AND CHANGING BEHAVIOR: THE REASONED ACTION APPROACH, P1
   GOODHUE DL, 1995, MIS QUART, V19, P213, DOI 10.2307/249689
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Hagger M.S., 2020, The handbook of behavior change, DOI DOI 10.1017/9781108677318
   Ioannidis JPA, 2020, PLOS BIOL, V18, DOI 10.1371/journal.pbio.3000918
   ISO/IEC/IEEE, 2017, ISO/IEC/IEEE 24765:2017(E)
   Johnson P., 2012, IEEE Software, V29, P94, DOI 10.1109/MS.2012.127
   Karanatsiou D, 2019, J SYST SOFTWARE, V147, P246, DOI 10.1016/j.jss.2018.10.029
   Kitchenham B., 2016, Evidence-Based Software Engineering and Systematic Reviews
   Kotti Z, 2023, IEEE T SOFTWARE ENG, V49, P2020, DOI 10.1109/TSE.2022.3208210
   Lavallée M, 2012, PROC INT CONF SOFTW, P113, DOI 10.1109/ICSE.2012.6227201
   Lorey T, 2022, PROC INT CONF SOFTW, P1994, DOI 10.1145/3510003.3510076
   Marangunic N, 2015, UNIVERSAL ACCESS INF, V14, P81, DOI 10.1007/s10209-014-0348-1
   Marijan D, 2021, INFORM SOFTWARE TECH, V132, DOI 10.1016/j.infsof.2020.106473
   Moody D.L., 2003, ECIS 2003 P, P79
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   Niazi M, 2015, J SOFTW-EVOL PROC, V27, P700, DOI 10.1002/smr.1704
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Rogers E.M., 1962, Diffusion of innovations, DOI DOI 10.1016/J.ENPOL.2017.03.064
   Sandberg AB, 2011, IEEE SOFTWARE, V28, P74, DOI 10.1109/MS.2011.49
   Schmid K, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P359, DOI 10.1145/3463274.3463360
   Sjoberg DIK, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P29
   Tamilmani K, 2021, INFORM SYST FRONT, V23, P987, DOI 10.1007/s10796-020-10007-6
   Tiefenbeck Verena, 2016, P 26 DIGIT WORKSH, P17
   Tran Huynh Khanh Vi, 2022, e -Inform. Softw. Eng. J., V16
   Turner M, 2010, INFORM SOFTWARE TECH, V52, P463, DOI 10.1016/j.infsof.2009.11.005
   Valente Aline, 2022, P 52 IEEE FRONT ED C, P1
   Venkatesh V, 2000, MANAGE SCI, V46, P186, DOI 10.1287/mnsc.46.2.186.11926
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Venkatesh V, 2008, DECISION SCI, V39, P273, DOI 10.1111/j.1540-5915.2008.00192.x
   Venkatesh V, 2012, MIS QUART, V36, P157
   Wallace BC, 2012, P 2 ACM SIGHIT INT H, P819, DOI [DOI 10.1145/2110363.2110464, 10.1145/2110363.2110464]
   Wu JM, 2012, EUR J INFORM SYST, V21, P680, DOI 10.1057/ejis.2012.15
NR 49
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2024
VL 172
AR 107469
DI 10.1016/j.infsof.2024.107469
EA APR 2024
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SH8T8
UT WOS:001233663200001
OA hybrid
DA 2024-08-05
ER

PT J
AU Arvanitou, EM
   Gagoutis, D
   Ampatzoglou, A
   Mittas, N
   Deligiannis, I
   Chatzigeorgiou, A
AF Arvanitou, Elvira-Maria
   Gagoutis, Dimitrios
   Ampatzoglou, Apostolos
   Mittas, Nikolaos
   Deligiannis, Ignatios
   Chatzigeorgiou, Alexander
TI What does matter in the success of a decentralized application? From
   idea to development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
AB Context: With the rise of blockchain, various applications are running in a decentralized manner, covering the needs of various end -users. Decentralized Applications (DApps) are becoming popular in numerous application domains, ranging from finance to games, and from Non -Fungible Tokens to security mechanisms. The success of a DApp, from a financial perspective, can be perceived as the market fragment that it captures, and the volume of transactions it generates. Objective: The goal of this study is to investigate the factors that are important for safeguarding (as much as possible) the financial success of a Decentralized Application. In this study, we focus on four management factors that could influence financial success: the context of the DApp (e.g., focusing on finance, games, entertainment), the intensity of development activities (e.g., number of: commits, forks, or branches of the repository), the size of the development team and the existence of project documentation. Method: We performed a case study on 122 DApps that were available through an open repository of smart contracts, namely State-of-the-DApps. By mining the repository, we recorded two metrics that capture the financial success of the application (number of users and volume of transactions) and explored their relation to the aforementioned factors. Results: The findings of the study suggest that the intensity of development activities is the most important factor for its financial success. Similarly, the context (i.e., the application domain) of the decentralized application is also a key -factor since it influences the number of users that the DApp will reach. Conclusions: Based on the findings, we suggest businesses that want to enter the market of decentralized applications to balance properly between technical and business parameters. For an application to be successful, it requires both an intensive development process, but also a careful consideration of the application domain.
C1 [Arvanitou, Elvira-Maria; Ampatzoglou, Apostolos; Chatzigeorgiou, Alexander] Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
   [Gagoutis, Dimitrios; Deligiannis, Ignatios] Int Hellen Univ, Dept Informat & Elect Engn, Thessaloniki, Greece.
   [Mittas, Nikolaos] Int Hellen Univ, Sch Sci, Dept Chem, Hephaestus Lab, Kavala 65404, Greece.
C3 University of Macedonia; International Hellenic University;
   International Hellenic University
RP Ampatzoglou, A (corresponding author), Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
EM apostolos.ampatzoglou@gmail.com
OI Chatzigeorgiou, Alexander/0000-0002-5381-8418
CR Cui W., 2021, P 5 INT C MAN ENG SO
   Field A., 2005, Discovering statistics using SAS, V2nd
   Runeson P., 2012, Case Study Research in Software Engineering: Guidelines and Examples
   Spencer D., 2009, CARD SORTING DESIGNI
   Tukey J.W., 1977, Exploratory data analysis, V2
   Wu KD, 2021, SOFTWARE PRACT EXPER, V51, P2033, DOI 10.1002/spe.2751
   Xie C, 2017, IEEE T IND INFORM, V13, P3338, DOI 10.1109/TII.2017.2723501
   Zheng ZB, 2018, INT J WEB GRID SERV, V14, P352, DOI 10.1504/IJWGS.2018.095647
NR 8
TC 0
Z9 0
U1 3
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2024
VL 169
AR 107414
DI 10.1016/j.infsof.2024.107414
EA FEB 2024
PG 5
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KX5L0
UT WOS:001183276800001
DA 2024-08-05
ER

PT J
AU Quiñones, D
   Ojeda, C
   Herrera, RF
   Rojas, LF
AF Quinones, Daniela
   Ojeda, Claudia
   Herrera, Rodrigo F.
   Rojas, Luis Felipe
TI UXH-GEDAPP: A set of user experience heuristics for evaluating
   generative design applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Generative design; Use experience; Heuristic evaluation; User experience
   heuristics
ID USABILITY HEURISTICS
AB Context: Traditional building and infrastructure design methodologies are inflexible and inefficient, leading to high costs and environmental damage. Generative design, with an algorithm that provides multiple options, could be a potential solution. The challenge is creating an intuitive, user-friendly application that optimizes engineers' time, reducing manual iterations and lead to a good user experience (UX). A method for evaluating the UX is heuristic evaluation, in which heuristics are used to inspect a software product. Objective: Since generative design applications have specific features, generic heuristics may not detect all problems related to UX. This article presents a novel set of 9 heuristics to evaluate UX in generative design applications: UXH-GEDAPP. This set is focused on evaluating both UX attributes and specific features of generative design applications. Method: A formal methodology was used to develop the heuristics, through 7 stages: exploratory, descriptive, correlational, selection, specification, validation, and refinement. We performed 3 iterations and validated UXHGEDAPP in 2 iterations through: heuristic evaluation, expert judgment, and user test. Since the methodology can be applied iteratively, we validated and refined the set to improve the proposal. Results: The results obtained in the validation stage indicate that UXH-GEDAPP is useful and more effective than generic heuristics when evaluating generative design applications. UXH-GEDAPP allows to detect specific usability/UX problems as well as more severe problems related to generative design applications. Furthermore, evaluators made fewer errors associating the detected problems with the proposed heuristics, compared to generic sets. Conclusion: UXH-GEDAPP is a new set of heuristics that encourages the creation and use of generative design applications with good UX. It can detect usability/UX problems and help correct them, as well as guide the development of new generative design applications for a pleasant and intuitive user experience.
C1 [Quinones, Daniela; Ojeda, Claudia; Rojas, Luis Felipe] Pontificia Univ Catolica Valparaiso, Fac Ingn, Escuela Ingn Informat, Valparaiso, Chile.
   [Herrera, Rodrigo F.] Pontificia Univ Catolica Valparaiso, Fac Engn, Sch Civil Engn, Valparaiso, Chile.
C3 Pontificia Universidad Catolica de Valparaiso; Pontificia Universidad
   Catolica de Valparaiso
RP Quiñones, D (corresponding author), Pontificia Univ Catolica Valparaiso, Fac Ingn, Escuela Ingn Informat, Valparaiso, Chile.
EM daniela.quinones@pucv.cl
FU ANID BECAS/DOC- TORADO NACIONAL, Chile [21211272]
FX The authors would like to thank all the participants (experts, users,
   evaluators, and researchers) who were involved in the experiments for
   this study. Luis Felipe Rojas is supported by Grant ANID BECAS/DOC-
   TORADO NACIONAL, Chile, No. 21211272.
CR 99designs Team, 2021, The 7 principles of UX design-And how to use them-99designs
   Abdallah H., 2019, CREAT CONSTR C, P692, DOI [10.3311/CCC2019-095, DOI 10.3311/CCC2019-095]
   Abrishami S, 2014, J INF TECHNOL CONSTR, V19, P350
   [Anonymous], 2018, Standard ISO 9241-11:2018
   Autodesk, 2023, What is Generative Design | Tools Software | Autodesk
   Bohnacker H., 2012, Generative Design: Visualise, Program, and Create With Processing
   Cavieres A., 2007, Rev. Arquit., V13, P39, DOI [10.5354/0719-5427.2007.28201, DOI 10.5354/0719-5427.2007.28201]
   Cayola L, 2018, INFORM SOFTWARE TECH, V97, P163, DOI 10.1016/j.infsof.2018.01.010
   Diaz G, 2021, REV ING CONSTR, V36, P29
   Diaz G, 2020, Dimensionamiento De Muros De Contencion Con Diseno Generativo
   Díaz G, 2021, MATHEMATICS-BASEL, V9, DOI 10.3390/math9161918
   Experience Research Society, 2023, UX evaluation methods
   Gatica R., 2010, Diseno Generativo
   GerhardtPowals J, 1996, INT J HUM-COMPUT INT, V8, P189, DOI 10.1080/10447319609526147
   Henríquez D, 2022, BUILDINGS-BASEL, V12, DOI 10.3390/buildings12101579
   Hermawati S, 2016, APPL ERGON, V56, P34, DOI 10.1016/j.apergo.2015.11.016
   Hezarjaribi Niloofar, 2018, IEEE J Biomed Health Inform, V22, P252, DOI 10.1109/JBHI.2017.2709333
   ISO, 2019, ISO 9241-210: 2010
   Johan R, 2019, Building intelligence through generative design Structural analysis and optimisation informed by material performance
   Lajas Beneitez R., 2019, Diseno, automatizacion y modelizacion de una nave prefabricada mediante metodologia BIM
   Lewis C, 1982, Method in Cognitive Interface Design
   Ma W, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21165439
   McKnight M., 2017, KnE Engineering, V2, P176, DOI DOI 10.18502/KEG.V2I2.612
   Morville P., 2004, Facets of the user experience
   Muñoz-La Rivera F, 2019, ADV CIV ENG, V2019, DOI 10.1155/2019/8452461
   Nielsen J., 2000, ALERTBOX CURRENT ISS
   Nielsen J., 1994, Usability inspection methods, DOI [10.1145/259963.260531, DOI 10.1145/259963.260531]
   Nielsen J., 2012, MANY TEST USERS USAB
   Nielsen J., 2012, Usability 101: Introduction to usability Internet
   Nielsen J, 2023, How to Conduct a Heuristic Evaluation
   Nielsen Jakob, 2005, 10 Usability Heuristics for User Interface Design
   Pribeanu Costin, 2017, Informatica Economica, V21, P31, DOI 10.12948/issn14531305/21.3.2017.03
   Quiñones D, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10186547
   Quiñones D, 2019, COMPUT STAND INTER, V66, DOI 10.1016/j.csi.2019.04.004
   Quiñones D, 2018, COMPUT STAND INTER, V59, P109, DOI 10.1016/j.csi.2018.03.002
   Quiñones D, 2017, COMPUT STAND INTER, V53, P89, DOI 10.1016/j.csi.2017.03.009
   Shneiderman Ben., 1997, DESIGNING USER INTER
   Souza E., 2020, Como impacta el Diseno Generativo en la arquitectura? | ArchDaily en Espanol
   Tafraout S, 2019, AUTOMAT CONSTR, V106, DOI 10.1016/j.autcon.2019.102901
   Velasco Perez R., 2015, Estudio De La Aplicacion Del Diseno Generativo Al Diseno Conceptual Arquitectonico
NR 40
TC 0
Z9 0
U1 4
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2024
VL 168
AR 107408
DI 10.1016/j.infsof.2024.107408
EA JAN 2024
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JE8G2
UT WOS:001171573000001
DA 2024-08-05
ER

PT J
AU Liu, WS
   Yue, Y
   Chen, X
   Gu, Q
   Zhao, PZ
   Liu, XJ
   Zhao, JJ
AF Liu, Wangshu
   Yue, Ye
   Chen, Xiang
   Gu, Qing
   Zhao, Pengzhan
   Liu, Xuejun
   Zhao, Jianjun
TI SeDPGK: Semi-supervised software defect prediction with graph
   representation learning and knowledge distillation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Semi-supervised defect prediction; Graph representation learning;
   Knowledge distillation; Graph neural network
AB Context: Constructing an effective defect prediction model relies on a substantial number of labeled program modules. Unfortunately, program module labeling is often time-consuming and error -prone. Semi -supervised software defect prediction (SSDP) can alleviate this issue by incorporating some labeled modules and the remaining unlabeled modules from the same project. Objective: However, previous SSDP methods ignore the significant influence of dependencies between software modules. The potential of knowledge distillation in leveraging labeled instances to guide the learning process and effectively utilizing information from unlabeled instances to improve SSDP performance has not been fully investigated. Method: We propose a novel approach SeDPGK. Specifically, to exploit the graph -structured knowledge, we first construct the program dependence graph to extract control and data dependencies among modules. Then we use graph neural networks (GNNs) to learn the graph representation of the module relationships and encode with the statement semantics of abstract syntax tree and traditional static features for diversity. Second, we integrate multiple GNNs jointly trained as teacher models to ensemble various styles of graph -based networks and generate trustworthy labels for unlabeled modules. Further, to preserve the teacher model's sufficient structure and semantic knowledge, we adopt a trainable label propagation and multi -layer perception as the student model and mitigate the differences between the teacher and student models using two widespread knowledge distillation functions. Results: We conducted our experiments on 17 real -world projects. The experimental results show that SeDPGK outperforms semi -supervised baselines with an average improvement of 16.9% for PD, 42.5% for FAR, and 8.9% for AUC, respectively. Moreover, the performance improvement is consistently significant across multiple statistical tests. Conclusion: The effectiveness of SeDPGK comes from the aggregation of the different GNNs with heterogeneity. Moreover, the graph structure and semantic features hidden behind the source code play a crucial role in the distillation framework.
C1 [Liu, Wangshu; Yue, Ye; Liu, Xuejun] Nanjing Tech Univ, Sch Comp Sci & Technol, Nanjing, Peoples R China.
   [Liu, Wangshu; Chen, Xiang; Gu, Qing] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Chen, Xiang] Nantong Univ, Sch Informat Sci & Technol, Nanjing, Peoples R China.
   [Liu, Wangshu; Zhao, Pengzhan; Zhao, Jianjun] Kyushu Univ, Fac Informat Sci & Elect Engn, Fukuoka, Japan.
C3 Nanjing Tech University; Nanjing University; Nantong University; Kyushu
   University
RP Liu, WS (corresponding author), Nanjing Tech Univ, Sch Comp Sci & Technol, Nanjing, Peoples R China.
EM liuws0707@gmail.com
OI chen, xiang/0000-0002-1180-3891
FU National Natural Science Foundation of China [61972192]; Natural Science
   Foundation of Jiangsu Province [BK20180695]; Open Project of State Key
   Laboratory for Novel Software Technology at Nanjing University
   [KFKT2024B11, KFKT2024B21]; Chunhui Project of Ministry of Education of
   the People's Republic of China [HZKY20220138]
FX The authors would like to thank the anonymous reviewers for their
   insightful comments and suggestions. This work is supported in part by
   the National Natural Science Foundation of China (Grants No. 61972192) ,
   the Natural Science Foundation of Jiangsu Province (Grants No.
   BK20180695), the Open Project of State Key Laboratory for Novel Software
   Technology at Nanjing University (Grants No. KFKT2024B11, KFKT2024B21) ,
   and Chunhui Project of Ministry of Education of the People's Republic of
   China (No. HZKY20220138).
CR Arshad A, 2018, IEEE ACCESS, V6, P25675, DOI 10.1109/ACCESS.2018.2835304
   Bahdanau D, 2016, Arxiv, DOI arXiv:1409.0473
   Catal C, 2014, J INTELL SYST, V23, P75, DOI 10.1515/jisys-2013-0030
   Chebotar Y, 2016, INTERSPEECH, P3439, DOI 10.21437/Interspeech.2016-1190
   Chen DY, 2019, IEEE ACCESS, V7, P184832, DOI 10.1109/ACCESS.2019.2961129
   Chen X, 2023, J SYST SOFTWARE, V206, DOI 10.1016/j.jss.2023.111853
   Chen X, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106441
   Chen X, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2234
   Cohen J., 1988, Statistical power analysis for the behavioral sciences
   Dong Y., 2023, P 2023 SIAM INT C DA
   FAIRLEY RE, 1978, COMPUTER, V11, P14, DOI 10.1109/C-M.1978.218132
   Garipov T, 2018, ADV NEUR IN, V31
   Gu XZ, 2022, IEEE INT CON DIS, P133, DOI 10.1109/ICDCSW56584.2022.00034
   Hinton G., 2015, NEURIPS DEEP LEARN R, P9
   Huang ZH, 2022, INT J INTELL SYST, V37, P5902, DOI 10.1002/int.22819
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Khatri Y, 2022, INFORM SOFTWARE TECH, V150, DOI 10.1016/j.infsof.2022.106980
   Kim T., 2021, P 30 INT JOINT C ART, P2628, DOI [DOI 10.24963/IJCAI, DOI 10.24963/IJCAI.2021/362]
   Kuang L, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-022-00341-1
   Leistner C, 2009, IEEE I CONF COMP VIS, P506, DOI 10.1109/ICCV.2009.5459198
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   Li WW, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106364
   Li W, 2022, ALGORITHMS, V15, DOI 10.3390/a15010025
   Li XY, 2021, ATMOSPHERE-BASEL, V12, DOI 10.3390/atmos12020134
   Li Z., 2023, P 37 AAAI C ART INT
   Liu WS, 2021, ASIA PAC SOFWR ENG, P369, DOI 10.1109/APSEC53868.2021.00044
   Lu HH, 2012, IEEE INT CONF AUTOM, P314, DOI 10.1145/2351676.2351734
   Ma WWY, 2016, INFORM SOFTWARE TECH, V69, P50, DOI 10.1016/j.infsof.2015.09.001
   Majumder S, 2024, EMPIR SOFTW ENG, V29, DOI 10.1007/s10664-023-10418-4
   Manning C.D., 2008, Introduction to information retrieval
   Melacci S, 2011, J MACH LEARN RES, V12, P1149
   Meng FQ, 2021, KSII T INTERNET INF, V15, P4028, DOI 10.3837/tiis.2021.11.009
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Özakinci R, 2018, J SYST SOFTWARE, V144, P216, DOI 10.1016/j.jss.2018.06.025
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Ryu D, 2017, SOFTWARE QUAL J, V25, P235, DOI 10.1007/s11219-015-9287-1
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Scientific Toolworks, 2022, Understand's Python API on java reference kinds
   Shippey T, 2019, INFORM SOFTWARE TECH, V106, P142, DOI 10.1016/j.infsof.2018.10.001
   Sun Y, 2021, INT J SOFTW ENG KNOW, V31, P889, DOI 10.1142/S0218194021500273
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tran L., 2020, P WORKSH UNC ROB DEE
   Tu H, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P394, DOI 10.1109/ASE51524.2021.9678617
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Wang AL, 2021, IEEE ACCESS, V9, P29530, DOI 10.1109/ACCESS.2021.3058886
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19, DOI [10.1145/1370788.1370794, DOI 10.1145/1370788.1370794.50A.E.C]
   Wilcoxon F., 1992, Breakthroughs in statistics: methodology and distribution, P196, DOI [DOI 10.2307/3001968, 10.1093/jee/39.2.269, DOI 10.1093/JEE/39.2.269, DOI 10.1007/978-1-4612-4380-916]
   Wu F, 2018, IEEE T RELIAB, V67, P581, DOI 10.1109/TR.2018.2804922
   Yang C, 2021, PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2021 (WWW 2021), P1227, DOI 10.1145/3442381.3450068
   Yang YD, 2020, PROC CVPR IEEE, P7072, DOI 10.1109/CVPR42600.2020.00710
   Yu X, 2024, INFORM SOFTWARE TECH, V165, DOI 10.1016/j.infsof.2023.107250
   Zeng C, 2021, PROC INT SYMP SOFTW, P69, DOI 10.1109/ISSRE52982.2021.00020
   Zhang F., 2014, P 11 WORK C MIN SOFT, P182
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhang ZW, 2018, IET SOFTW, V12, P527, DOI 10.1049/iet-sen.2017.0198
   Zhang ZW, 2017, AUTOMAT SOFTW ENG, V24, P47, DOI 10.1007/s10515-016-0194-x
   Zhou CY, 2022, INFORM SOFTWARE TECH, V152, DOI 10.1016/j.infsof.2022.107057
   Zhou ZH, 2005, IEEE T KNOWL DATA EN, V17, P1529, DOI 10.1109/TKDE.2005.186
   Zhuang WY, 2022, KNOWL-BASED SYST, V248, DOI 10.1016/j.knosys.2022.108852
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 64
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2024
VL 174
AR 107510
DI 10.1016/j.infsof.2024.107510
EA JUN 2024
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XJ4C6
UT WOS:001261293600001
DA 2024-08-05
ER

PT J
AU Barros, L
   Tam, C
   Varajao, J
AF Barros, Leonor
   Tam, Carlos
   Varajao, Joao
TI Agile software development projects-Unveiling the human-related critical
   success factors
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile methodologies; Agile projects; Software development; Critical
   success factors; People factors; Psychological safety
ID PSYCHOLOGICAL SAFETY; PERFORMANCE; WORK; CAPABILITIES; TECHNOLOGY;
   VARIANCE; FUTURE
AB Context: Investment in information technology is associated with better business performance when its implementation is successful, but it has high costs in case of failure, especially for large software development projects, which typically have the highest failure rates. Agile methodologies emerged with the expectation of reducing the risk of software development project failure. Objective: This research aims to answer the following question: What are the human-related critical success factors for agile software development projects to succeed? The research model comprises four explanatory variables (team capability, customer involvement, psychological safety, and team autonomy) and one dependent variable (success of agile software development projects). Method: A questionnaire-based survey was carried out, resulting in 177 valid responses. A Partial Least Squares (PLS) analysis was performed to test the theoretical model. Results: The findings indicate that team capability and customer involvement have the strongest effects on the success of agile software development projects. The results also show that psychological safety is a significant indirect success factor and that team autonomy appears to have a competing dynamic with psychological safety on the other two factors. Conclusion: To the best of our knowledge, this is the first study to examine the direct impact of psychological safety and its indirect effect, mediated by team capability and customer involvement, on the success of agile software development projects. The mediation, moderation, and direct effects are studied, offering theoretical and practical insights.
C1 [Barros, Leonor; Tam, Carlos] Univ Nova Lisboa, NOVA Informat Management Sch NOVA IMS, Campus Campolide, P-1070312 Lisbon, Portugal.
   [Varajao, Joao] Univ Minho, Dept Informat Syst, Ctr ALGORITMI, Sch Engn, Campus Azurem,Alameda Univ, P-4804533 Guimaraes, Portugal.
C3 Universidade Nova de Lisboa; Universidade do Minho
RP Tam, C (corresponding author), Univ Nova Lisboa, NOVA Informat Management Sch NOVA IMS, Campus Campolide, P-1070312 Lisbon, Portugal.
EM carlosvai@novaims.unl.pt
RI ; Varajao, Joao/I-9439-2012
OI Tam, Carlos/0000-0002-4930-9979; Varajao, Joao/0000-0002-4303-3908
FU National funds through FCT (Fundacao para a Ciencia e a Tecnologia)
   [UIDB/04152/2020]
FX This work was supported by national funds through FCT (Fundacao para a
   Ciencia e a Tecnologia), under the project - UIDB/04152/2020 - Centro de
   Investigacao em Gestao de Informacao (MagIC)/NOVA IMS
CR Ahmad I, 2023, EUR J INNOV MANAG, V26, P755, DOI 10.1108/EJIM-11-2020-0464
   Alami A, 2022, INFORM SOFTWARE TECH, V150, DOI 10.1016/j.infsof.2022.106959
   Altuwaijri FS, 2022, J SYST SOFTWARE, V190, DOI 10.1016/j.jss.2022.111347
   Armbrust O., 2011, P INT C SOFTW ENG, P237, DOI [10.1145/1987875.1987920, DOI 10.1145/1987875.1987920]
   Arviansyah, 2015, IJISPM-INT J INF SYS, V3, P25, DOI 10.12821/ijispm030302
   Atkinson R., 1999, INT J PROJECT MANAGE, V17, P337, DOI [10.1016/S0263-7863(98)00069-6, DOI 10.1016/S0263-7863(98)00069-6]
   Bass L., 2015, DevOps: A software architect's perspective.
   Benitez J, 2018, INFORM MANAGE-AMSTER, V55, P120, DOI 10.1016/j.im.2017.08.002
   Bernerth JB, 2016, PERS PSYCHOL, V69, P229, DOI 10.1111/peps.12103
   Boehm B, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.129
   Bureau of Economic Analysis, 2022, Table 5.3.5. Private Fixed Investment by Type
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Christian M.R., 2022, SmartPLS 4
   Daneva M, 2013, J SYST SOFTWARE, V86, P1333, DOI 10.1016/j.jss.2012.12.046
   DANIEL DR, 1961, HARVARD BUS REV, V39, P111
   DE WIT A., 1988, INT J PROJ MANAG, V6, P164, DOI [https://doi.org/10.1016/0263-7863(88)90043-9, DOI 10.1016/0263-7863(88)90043-9]
   Dedrick J, 2003, ACM COMPUT SURV, V35, P1, DOI 10.1145/641865.641866
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dingsoyr T, 2018, EMPIR SOFTW ENG, V23, P490, DOI 10.1007/s10664-017-9524-2
   Dosi G., 2000, The Nature and Dynamics of Organizational Capabilities, DOI [10.1093/0199248540.001.0001, DOI 10.1093/0199248540.001.0001]
   Duhigg C., 2016, The New York Times, V26, P2016
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Edison H, 2022, IEEE T SOFTWARE ENG, V48, P2709, DOI 10.1109/TSE.2021.3069039
   Edmondson A, 1999, ADMIN SCI QUART, V44, P350, DOI 10.2307/2666999
   Edmondson A., 2012, Teaming: How Organizations Learn, Innovate, and Compete in the
   Edmondson A.C., 2004, Journal of Applied Behavioral Science, V40, P66
   Edmondson AC, 2014, ANNU REV ORGAN PSYCH, V1, P23, DOI 10.1146/annurev-orgpsych-031413-091305
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   Fowler M., 2001, Software Development, V9, P28
   Frazier ML, 2017, PERS PSYCHOL, V70, P113, DOI 10.1111/peps.12183
   Gemino A, 2021, PROJ MANAG J, V52, P161, DOI 10.1177/8756972820973082
   Gotz O., 2010, Handbook of Partial Least Squares: Concepts, Methods and Applications, DOI [10.1007/978-3-540-32827-830, DOI 10.1007/978-3-540-32827-8_30]
   Gupta SK, 2019, COMPUT IND ENG, V127, P274, DOI 10.1016/j.cie.2018.12.002
   Haas MR, 2006, MANAGE SCI, V52, P1170, DOI 10.1287/mnsc.1060.0530
   Hair J. F., 2009, Multivariate data analysis
   Hennel P, 2021, PROJ MANAG J, V52, P11, DOI 10.1177/8756972820933057
   Henriksen A., 2017, Journal of Modern Project Management, P62, DOI DOI 10.19255/JMPM01306
   Henseler J, 2015, J ACAD MARKET SCI, V43, P115, DOI 10.1007/s11747-014-0403-8
   Humble Jez, 2010, Continuous Delivery: Reliable software releases through Build, Test and Deployment Automation
   Johnson RE, 2011, J APPL PSYCHOL, V96, P744, DOI 10.1037/a0021504
   Khan J, 2020, INT J MANAG PROJ BUS, V13, P1077, DOI 10.1108/IJMPB-10-2019-0267
   Kim S, 2020, FRONT PSYCHOL, V11, DOI 10.3389/fpsyg.2020.01581
   Koch I, 2018, PSYCHOL BULL, V144, P557, DOI 10.1037/bul0000144
   Kuhrmann M, 2022, IEEE T SOFTWARE ENG, V48, P3523, DOI 10.1109/TSE.2021.3099532
   Langfred CW, 2005, J MANAGE, V31, P513, DOI 10.1177/0149206304272190
   Lindell MK, 2001, J APPL PSYCHOL, V86, P114, DOI 10.1037//0021-9010.86.1.114
   Lwakatare LE, 2019, INFORM SOFTWARE TECH, V114, P217, DOI 10.1016/j.infsof.2019.06.010
   Malik M, 2021, INT J PROJ MANAG, V39, P10, DOI 10.1016/j.ijproman.2020.09.002
   Misra SC, 2009, J SYST SOFTWARE, V82, P1869, DOI 10.1016/j.jss.2009.05.052
   Parsons T., 2019, MacadamianMay 17
   Peeters T, 2022, TEAM PERFORM MANAG, V28, P61, DOI 10.1108/TPM-07-2021-0049
   Pereira J, 2022, INFORM SYST MANAGE, V39, P138, DOI 10.1080/10580530.2021.1887982
   Podsakoff PM, 2003, J APPL PSYCHOL, V88, P879, DOI 10.1037/0021-9010.88.5.879
   Pollack J, 2018, INT J MANAG PROJ BUS, V11, P527, DOI 10.1108/IJMPB-09-2017-0107
   Radhakrishnan A, 2022, EUR MANAG J, V40, P758, DOI 10.1016/j.emj.2021.09.011
   ROCKART JF, 1979, HARVARD BUS REV, V57, P81
   Schoemaker PJH, 2018, CALIF MANAGE REV, V61, P15, DOI 10.1177/0008125618790246
   Serrador P, 2015, INT J PROJ MANAG, V33, P1040, DOI 10.1016/j.ijproman.2015.01.006
   Shameem M, 2017, 2017 24TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE WORKSHOPS (APSECW), P17, DOI 10.1109/APSECW.2017.22
   Stankovic D, 2013, J SYST SOFTWARE, V86, P1663, DOI 10.1016/j.jss.2013.02.027
   Strode D, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10115-0
   Tam C, 2020, INT J PROJ MANAG, V38, P165, DOI 10.1016/j.ijproman.2020.02.001
   Trigo A, 2022, COGENT ENG, V9, DOI 10.1080/23311916.2022.2083474
   Tsoy M, 2021, INFORM SYST MANAGE, V38, P324, DOI 10.1080/10580530.2020.1818899
   Uludag Ö, 2022, J SYST SOFTWARE, V194, DOI 10.1016/j.jss.2022.111473
   Van den Broeck A, 2021, ORGAN PSYCHOL REV, V11, P240, DOI 10.1177/20413866211006173
   van Kelle E, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P77, DOI 10.1109/CHASE.2015.24
   Varajao J, 2022, HELIYON, V8, DOI 10.1016/j.heliyon.2022.e11977
   Varajao J, 2022, INT J PROJ MANAG, V40, P481, DOI 10.1016/j.ijproman.2022.04.002
   Zhang XM, 2010, ACAD MANAGE J, V53, P107, DOI 10.5465/AMJ.2010.48037118
NR 70
TC 2
Z9 2
U1 6
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2024
VL 170
AR 107432
DI 10.1016/j.infsof.2024.107432
EA MAR 2024
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QE3D9
UT WOS:001219154500001
OA hybrid
DA 2024-08-05
ER

PT J
AU Gershfeld, I
   Sturm, A
AF Gershfeld, Itzhak
   Sturm, Arnon
TI Evaluating the effectiveness of a security flaws prevention tool
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Static code analysis; Secure software development; CVE; Software bugs;
   Controlled experiment; Security flaws detection
AB Context: Securing code is crucial for all software stakeholders. Nevertheless, state-of-the-art tools are imperfect and tend to miss critical errors, resulting in zero-day vulnerabilities. Thus, there is a need for alternatives to mitigate such issues. Objective: We aim to facilitate an effective identification mechanism of security flaws in the early stages of development. Method: Following our analysis of the root causes of vulnerabilities and examining existing code analyzers, we devise a new Rule-Based Security Flaws Prevention (RbSFP) tool. The tool is based on a set of allow-list rules and consists of the following stages: (1) AST creation based on the source code and marking critical code areas; (2) Context-based code analysis that further validates the code; (3) Results' normalization to suggest alerts and warnings. To evaluate the RbSFP tool, we utilized two complementary evaluations. The first refers to the tool's ability to detect security flaws compared to competing tools by executing them on open -source projects. The second refers to evaluating the tool's usability and efficiency via a controlled experiment. Results: We found that the outcomes were of better quality when using the RbSFP tool, and the differences were statistically significant. Thus, utilizing the new approach and tool has a significant impact as it can eliminate root causes for security flaws at the early stages of development. Conclusion: Using an allow-list-based approach can reduce security flaws in the code. However, further analysis and evaluation are needed to provide a more comprehensive solution.
C1 [Gershfeld, Itzhak; Sturm, Arnon] Ben Gurion Univ Negev, Software & Informat Syst Engn Dept, Beer Sheva, Israel.
C3 Ben Gurion University
RP Sturm, A (corresponding author), Ben Gurion Univ Negev, Software & Informat Syst Engn Dept, Beer Sheva, Israel.
EM gershitz@post.bgu.ac.il; sturm@bgu.ac.il
RI STURM, ARNON/F-1510-2012
OI STURM, ARNON/0000-0002-4021-7752
CR Ballman Aaron, 2013, The SEI CERT C++ coding standard
   C+ MISRA, 2008, 2008 Guidelines for the use of the C++ language in critical systems
   Christopher Ciera Nicole, 2006, Anal. Pag, P1
   clang.llvm, 2021, Clang-tidy-extra clang tools 13 documentation
   Cousot P, 2005, LECT NOTES COMPUT SC, V3444, P21
   Cppcheck team, 2021, Cppcheck-a tool for static C/C++ code analysis
   CppDepend, 2021, C/C++ static analysis and code quality tool
   cppreference, 2021, C++ reference
   cvedetails, 2021, Vulnerability distribution of CVE security vulnerabilities by types
   CWE Content Team, 2019, CWE-CWE-1200: Weaknesses in the 2019 CWE top 25 most dangerous software errors (4.4)
   de Moor O, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P3, DOI 10.1109/SCAM.2007.31
   Deutsch Alain, 2003, ACM SIGADA 2003 C
   Duffy Edward B., 2014, P 52 ANN ACM SE C
   Fan G, 2019, PROC INT CONF SOFTW, P72, DOI 10.1109/ICSE.2019.00025
   Fatima A, 2018, INT BHURBAN C APPL S, P465
   fbinfer, 2023, Infer static analyzer
   Gao FJ, 2016, 8TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2016), P81, DOI 10.1145/2993717.2993724
   Howard M, 2004, IEEE SECUR PRIV, V2, P63, DOI 10.1109/MSP.2004.95
   Jamil Ameerah Muhsinah, 2020, SAC '20: Proceedings of the 35th Annual ACM Symposium on Applied Computing, P1566, DOI 10.1145/3341105.3373922
   Karpov Andrey, 2017, Yes, PVS-studio can detect memory leaks
   Kremenek T., 2008, Finding software bugs with the clang static analyzer
   Larus JB, 2004, IEEE SOFTWARE, V21, P92, DOI 10.1109/MS.2004.1293079
   Luo P, 2020, COMPUT SECUR, V89, DOI 10.1016/j.cose.2019.101616
   Mahmood R, 2018, Arxiv, DOI arXiv:1805.09040
   Miller Edward., 1981, Tutorial, software testing validation techniques
   NVD-statistics, 2021, About us
   Program Verification Systems, 2006, PVS-studio is a static analyzer on guard of code quality, security (SAST), and code safety
   Puchkov FM, 2005, PROGRAM COMPUT SOFT+, V31, P179, DOI 10.1007/s11086-005-0030-8
   Le QL, 2022, P ACM PROGRAM LANG, V6, DOI 10.1145/3527325
   Schordan M, 2006, J UNIVERS COMPUT SCI, V12, P849
   Scovetta Michael, 2008, Yasca
   Seacord R, 2006, IEEE SECUR PRIV, V4, P74, DOI 10.1109/MSP.2006.22
   Secure Software Inc, 2001, Rough auditing tool for security
   vera team, 2013, GitHub-vera
   Viega J, 2000, 16TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P257, DOI 10.1109/ACSAC.2000.898880
   Wagner D., 2000, NDSS, P2000
   Wheeler David A., 1999, Secure programming for linux and unix HOWTO
   Wheeler David A., 2009, FlawFinder
   Xu LL, 2020, CYBERSECURITY, V3, DOI 10.1186/s42400-020-00058-2
NR 39
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2024
VL 170
AR 107427
DI 10.1016/j.infsof.2024.107427
EA MAR 2024
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NR0S9
UT WOS:001202069600001
DA 2024-08-05
ER

PT J
AU Tripathi, N
   Hietala, H
   Xu, YQ
   Liyanage, R
AF Tripathi, Nirnaya
   Hietala, Heidi
   Xu, Yueqiang
   Liyanage, Reshani
TI Stakeholders collaborations, challenges and emerging concepts in digital
   twin ecosystems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Digital twin; Digital twin ecosystem; Stakeholders; Systematic
   literature review; Empirical study; Definition; Software development
ID ROLES
AB Context: Digital twin (DT) ecosystems are rapidly evolving, connecting many stakeholders, such as manufacturers, customers, and application platform providers. These ecosystems require collaboration and interaction between diverse actors to create value. This study delves into the collaboration of such stakeholders within DT-focused ecosystems. Objective: This research aims to understand stakeholder collaboration within DT ecosystems, identify potential challenges, and provide insights for managing these stakeholders. It also seeks to define the DT ecosystem and its implications for both research and practice. Method: A systematic literature review was conducted, supplemented by empirical evidence gathered from interviews with DT experts who were knowledgeable about the DT ecosystem. The study also analyzed DT systems, stakeholder roles, and the challenges with ecosystem-focused DT development. Results: The study identified various stakeholders and their roles in adding value to a DT ecosystem. It highlighted the benefits of stakeholder collaboration, such as knowledge gain during DT system development. The research also revealed the technical and non-technical challenges encountered in ecosystem-focused DTs, emphasizing the importance of standardization as a solution. A new definition of the DT ecosystem was proposed, emphasizing its data-driven nature, interconnected DTs, stakeholder value creation, and technology enablement. Conclusion: Stakeholder collaboration is pivotal in DT ecosystems, with each actor playing a distinct role. Addressing challenges, especially through standardization (OPC UA and ISO 23247), can lead to more efficient and coherent DT ecosystems. The insights provided by this study can guide industries in designing, developing, and maintaining their DT ecosystems, ensuring value creation and stakeholder satisfaction. Future research avenues that emphasize the importance of understanding the challenges involved and deploy appropriate solutions were suggested.
C1 [Tripathi, Nirnaya; Hietala, Heidi; Xu, Yueqiang; Liyanage, Reshani] Univ Oulu, Res Unit M3S, Oulu 90014, Finland.
C3 University of Oulu
RP Tripathi, N (corresponding author), Univ Oulu, Res Unit M3S, Oulu 90014, Finland.
EM nirnaya.tripathi@oulu.fi
OI Tripathi, Nirnaya/0000-0001-8506-1176
FU Oxilate project; Business Finland
FX This research was supported by the Oxilate project, Business Finland. We
   thank Tero Paeivaerinta, Finland for the support.
CR Aheleroff S, 2021, ADV ENG INFORM, V47, DOI 10.1016/j.aei.2020.101225
   Armengaud E, 2017, COMM COM INF SC, V748, P334, DOI 10.1007/978-3-319-64218-5_28
   Augustine P, 2020, ADV COMPUT, V117, P79, DOI 10.1016/bs.adcom.2019.10.008
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dhanabalan T., 2018, Int. J. Mech. Eng. Technol, V9, P835
   Durao LFC, 2018, PRODUCT LIFECYCLE MA, V15, P204, DOI [DOI 10.1007/978-3-030-01614-219, DOI 10.1007/978-3-030-01614-2_19]
   Ekman P, 2016, IND MARKET MANAG, V56, P51, DOI 10.1016/j.indmarman.2016.03.002
   El Saddik A., 2019, IEEE COMSOC MMTC Commun. Front, V14, P39
   Ezhilarasu CM, 2019, IEEE SYS MAN CYBERN, P1484, DOI 10.1109/SMC.2019.8914244
   Gackstetter David, 2021, Smart Rural Areas data infrastructure (SRADI)-An information logistics framework for digital agriculture based on open standards, V41
   Grieves M, 2017, Transdisciplinary Perspectives on Complex Systems: New Findings and Approaches, P85, DOI [10.1007/978-3-319-38756-7_4, DOI 10.1007/978-3-319-38756-7_4, 10.1007/978-3-319-38756-74, DOI 10.1007/978-3-319-38756-74]
   Hyre A, 2022, MANUF LETT, V31, P20, DOI 10.1016/j.mfglet.2021.12.004
   Iansiti M, 2004, HARVARD BUS REV, V82, P68
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Javaid M, 2021, Cognit Robot, V1, P58, DOI [DOI 10.1016/J.COGR.2021.06.001, 10.1016/j.cogr.2021.06.001]
   Kanak A, 2019, IEEE SYS MAN CYBERN, P3512, DOI 10.1109/SMC.2019.8914304
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering, VVolume 2, DOI [10.1145/1134285.1134500, DOI 10.1145/1134285.1134500]
   Kritzinger W, 2018, IFAC PAPERSONLINE, V51, P1016, DOI 10.1016/j.ifacol.2018.08.474
   Lee J, 2019, PROCESS SAF ENVIRON, V132, P325, DOI 10.1016/j.psep.2019.10.021
   Liyanage Reshani, 2022, SOFTWARE BUSINESS, P19
   Lu YQ, 2020, ROBOT CIM-INT MANUF, V61, DOI 10.1016/j.rcim.2019.101837
   Minerva R, 2020, P IEEE, V108, P1785, DOI 10.1109/JPROC.2020.2998530
   Niu XJ, 2021, ADV ENG INFORM, V50, DOI 10.1016/j.aei.2021.101422
   Otto Boris, 2022, Designing Data Spaces: The Ecosystem Approach to Competitive Advantage, P3
   Pantelidakis M, 2022, INT J ADV MANUF TECH, V120, P6547, DOI 10.1007/s00170-022-09164-6
   Pedersen AN, 2021, WATER-SUI, V13, DOI 10.3390/w13050592
   Putz B, 2021, INFORM PROCESS MANAG, V58, DOI 10.1016/j.ipm.2020.102425
   Rosen R, 2019, IFAC PAPERSONLINE, V52, P265, DOI 10.1016/j.ifacol.2019.11.685
   Rosen R, 2015, IFAC PAPERSONLINE, V48, P567, DOI 10.1016/j.ifacol.2015.06.141
   Semeraro C, 2021, COMPUT IND, V130, DOI 10.1016/j.compind.2021.103469
   Silva HD, 2021, IFAC PAPERSONLINE, V54, P761, DOI 10.1016/j.ifacol.2021.08.088
   Singh Sumit, 2021, Procedia CIRP, V96, P163
   Solheim AB, 2020, IFIP ADV INF COMM TE, V592, P417, DOI 10.1007/978-3-030-57997-5_48
   Song JaeSeung, 2023, The Digital Twin, P497
   Tsujimoto M, 2018, TECHNOL FORECAST SOC, V136, P49, DOI 10.1016/j.techfore.2017.06.032
   Wang T., 2020, ANN C PHM SOC, V12, P8, DOI DOI 10.36001/PHMCONF.2020.V12I1.1261
   Xiufeng Yan, 2021, Journal of Physics: Conference Series, V1748, DOI 10.1088/1742-6596/1748/5/052037
   Yin R. K., 2009, CASE STUDY RES DESIG, V5, DOI DOI 10.1097/FCH.0B013E31822DDA9E
   Yueqiang Xu, 2019, BIG DATA SECURITY, P51
   Zhou Y., 2015, P 19 INT C EV ASS SO, P1
NR 40
TC 0
Z9 0
U1 3
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2024
VL 169
AR 107424
DI 10.1016/j.infsof.2024.107424
EA FEB 2024
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LQ1Z1
UT WOS:001188189300001
OA hybrid
DA 2024-08-05
ER

PT J
AU Meliá, S
   Reyes, R
   Cachero, C
AF Melia, Santiago
   Reyes, Raymari
   Cachero, Cristina
TI The impact of personality and self-efficacy on domain modeling
   productivity in graphical and textual notations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Human factors; Model productivity; Personality; Self-efficacy; Domain
   modelling; Empirical software engineering; Model-driven engineering;
   Domain-driven design
ID SOFTWARE-DEVELOPMENT; JOB-PERFORMANCE; DIMENSIONS; SKILLS
AB Context: Software development is a complex and human -intensive activity, where human factors can have a significant impact on productivity and quality of results. To address the complexity of software, domain modeling has gained much importance, mainly due to software methodologies such as Model -Driven Engineering and Domain -Driven Design. In particular, domain modeling is an essential task that allows developers to understand and effectively represent the problem domain. However, domain modeling productivity can be affected by several human factors, including developers ' personality and self -efficacy. Objective: The study aims to explore the influence of human factors, specifically developers ' personality and selfefficacy, on domain modeling productivity in graphical and textual notations. Method: An empirical controlled study was conducted with 134 third -year computer science students from the University of Alicante, guided by the definition of a theoretical model based on previous studies. The participants were tasked with creating domain models in both graphical and textual notations. The order in which the notations were used was randomized, and the participants were given different system specifications to model. After modeling, 98 participants completed questionnaires assessing their personality, self -efficacy, and notation satisfaction. The design and evaluation of the experiment employed the Goal, Question, and Metrics framework. Data analysis was performed using a stepwise selection method to select the most appropriate regression model. Results: The study indicates that personality and self -efficacy have a significant impact on the performance of junior domain model developers. Specifically, it was discovered that while neuroticism had a negative impact on efficiency in both notations, developers ' ability belief and use of graphical notation had a positive influence on effectiveness and efficiency in creating domain models. Conclusions: These findings highlight the importance of considering human factors and notation choice in software development. Developers ' personality and self -efficacy emerge as critical considerations for enhancing both productivity and quality in domain modeling.
C1 [Melia, Santiago; Reyes, Raymari; Cachero, Cristina] Univ Alicante, Dept Lenguajes & Sistemas informat, San Vicente Del Raspeig 03690, Spain.
C3 Universitat d'Alacant
RP Meliá, S (corresponding author), Univ Alicante, Dept Lenguajes & Sistemas informat, San Vicente Del Raspeig 03690, Spain.
EM santi@dlsi.ua.es
RI Melia, Santiago/N-4002-2017
OI Melia, Santiago/0000-0003-3782-6626
FU Spanish Ministry of Science and Innovation [PID2019-111196RB-I00];
   Eramus +Programme of the European Union
   [609785-EPP-1-2019-1-ES-EPPKA2-CBHE-JP]; SKOPS project
   [2020-1-DE01-KA226HE-005772]
FX * This work was supported by Spanish Ministry of Science and Innovation
   under contract PID2019-111196RB-I00 (Access@IoT) , and was also
   partially funded by the Eramus +Programme of the European Union through
   the EduTech project (609785-EPP-1-2019-1-ES-EPPKA2-CBHE-JP) and the
   SKOPS project (Ref 2020-1-DE01-KA226HE-005772) .
CR Abrahao S, 2015, LECT NOTES COMPUT SC, V9459, pXIV
   Ahmed F, 2012, IT PROF, V14, P44, DOI 10.1109/MITP.2012.7
   Anantharaman RN, 2017, INT J HUM CAP INF TE, V8, P45, DOI 10.4018/IJHCITP.2017040103
   Atkinson R. C., 1968, The psychology of learning and motivation, V1st, P89, DOI [10.1016/S0079-7421(08)60422-3, DOI 10.1016/S0079-7421(08)60422-3]
   Bandura A., 1977, COGNITIVE THERAPY RE, V1, P287, DOI DOI 10.1007/BF01663995
   BARRICK MR, 1991, PERS PSYCHOL, V44, P1, DOI 10.1111/j.1744-6570.1991.tb00688.x
   Bezivin J., 2023, J. Softw. Evol. Process, V35, pe2307
   Cachero C, 2019, INFORM SOFTWARE TECH, V108, P78, DOI 10.1016/j.infsof.2018.12.005
   Capretz LF, 2003, INT J HUM-COMPUT ST, V58, P207, DOI 10.1016/S1071-5819(02)00137-4
   Cattell R.B., 2011, 16PF-5, Cuestionario Factorial De Personalidad
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cohen J., 1988, Statistical power analysis for the behavioral sciences
   Cook TD., 1979, QUASIEXPERIMENTATION
   Delgado-Rodríguez N, 2018, J WORK ORGAN PSYCHOL, V34, P63, DOI 10.5093/jwop2018a8
   Draper N.R., 1998, APPL REGRESSION ANAL
   Eccles J, 2011, INT J BEHAV DEV, V35, P195, DOI 10.1177/0165025411398185
   Evans E., 2011, DOMAIN DRIVEN DESIGN
   Evans E., 2023, Domain-driven Design Distilled
   Eysenck H.J., 1994, The Big Five or giant three: Criteria for a paradigm
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   Fernández BR, 2014, J PHYS ACT HEALTH, V11, P1573, DOI 10.1123/jpah.2013-0175
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Guveyi E, 2020, LECT NOTES COMPUT SC, V12252, P918, DOI 10.1007/978-3-030-58811-3_65
   Hair J. F., 2009, Multivariate data analysis
   Hiranrat Chamikorn., 2021, Journal of Information Systems Education, V32, P40
   John O. P., 2008, HDB PERSONALITY THEO, P114, DOI DOI 10.1016/S0191-8869(97)81000-8
   Judge TA, 2001, J APPL PSYCHOL, V86, P80, DOI 10.1037/0021-9010.86.1.80
   Jung CG, 2017, ROUT CLASSIC, P1
   Kampenes VB, 2009, INFORM SOFTWARE TECH, V51, P71, DOI 10.1016/j.infsof.2008.04.006
   Kent S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P286
   KOSSLYN SM, 1977, COGNITIVE PSYCHOL, V9, P52, DOI 10.1016/0010-0285(77)90004-4
   Krahn H, 2008, LECT NOTES BUS INF P, V11, P297
   Li Liu, 2015, International Journal of Agile Systems and Management, V8, P39, DOI 10.1504/IJASM.2015.068605
   Lubinski D, 2004, J PERS SOC PSYCHOL, V86, P96, DOI 10.1037/0022-3514.86.1.96
   McGregor J., 2023, Software Modeling: What to Model and Why, DOI [10.58012/z36b-7g89, DOI 10.58012/Z36B-7G89]
   Melia S., Experimental Package
   Meliá S, 2016, SOFTWARE QUAL J, V24, P709, DOI 10.1007/s11219-015-9299-x
   Meliá S, 2010, IEEE INTERNET COMPUT, V14, P24, DOI 10.1109/MIC.2010.63
   Ribeiro DM, 2021, Arxiv, DOI arXiv:2110.12241
   Moody D. L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P485, DOI 10.1145/1810295.1810442
   Perry D. E., 2000, EMPIRICAL STUDIES SO, P345, DOI [10.1145/336512.336586, DOI 10.1145/336512.336586]
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Pirzadeh L., 2010, Human Factors in Software Development: A Systematic Literature Review
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   Sanders M.S., 1997, Human Factors in Engineering and Design, V6th
   Storrle H., 2014, The role of visual modeling and model transformations in business- driven development,
   Toala G, 2018, LECT NOTES COMPUT SC, V10845, P3, DOI 10.1007/978-3-319-91662-0_1
   Toala-Sánchez G, 2018, IBER CONF INF SYST
   Wagner S., 2019, Rethinking Productivity in Software Engineering, P29, DOI DOI 10.1007/978-1-4842-4221-64
   Whitley KN, 1997, J VISUAL LANG COMPUT, V8, P109, DOI 10.1006/jvlc.1996.0030
NR 50
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2024
VL 173
AR 107491
DI 10.1016/j.infsof.2024.107491
EA MAY 2024
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UA3X5
UT WOS:001245314200001
OA hybrid
DA 2024-08-05
ER

PT J
AU Qi, XF
   Zhu, TA
   Li, YH
AF Qi, Xiaofang
   Zhu, Tiangang
   Li, Yanhui
TI Coverage-enhanced fault diagnosis for Deep Learning programs: A
   learning-based approach with hybrid metrics
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Deep Learning; Coverage; Metrics; Fault diagnosis
ID RANDOM FOREST; PREDICTION; KNN
AB Context: Given the data-driven paradigm inherent to Deep Learning (DL), it is inevitable that DL software will exhibit incorrect behavior in real-world applications. DL programs have been identified as a primary source of DL faults. To tackle this, researchers have devised a unique framework that approaches fault diagnosis as a learning task, which leverages runtime data as metrics to construct predictive models, enabling effective fault diagnosis. Object: In this paper, we aim to propose new metrics, especially from the coverage view, to enhance the performance of fault diagnosis models. Method: We combine coverage criteria and statistical operators to propose 80 coverage metrics, which summarize the trend of coverage values in the model training procedure. We construct hybrid prediction models by combining our new coverage metrics and existing runtime metrics under four widely used classifiers. Results: To examine whether adding our new coverage metrics performs well in DL program fault diagnosis, we conduct our experiments on six widely used datasets under four indicators (i.e., accuracy, F1 score, AUC, and MCC). Through the experiments, we observe that (a) coverage metrics are not redundant with respect to the original runtime metrics, and (b) adding extra coverage metrics can significantly enhance the performance of fault diagnosis models. Conclusions: Our study shows that our proposed coverage metrics are helpful in constructing effective fault diagnosis models for DL programs.
C1 [Qi, Xiaofang; Zhu, Tiangang] Southeast Univ, Sch Comp Sci & Engn, Nanjing, Peoples R China.
   [Li, Yanhui] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
C3 Southeast University - China; Nanjing University
RP Li, YH (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
EM yanhuili@nju.edu.cn
FU National Natural Science Foundation of China [61972082, 62172202];
   National Key R&D Program of China [2021YFB3401200]
FX This work is supported by the National Natural Science Foundation of
   China under Grant No. 61972082 and 62172202, and the National Key R&D
   Program of China under Grant No. 2021YFB3401200.
CR Aggarwal A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P625, DOI 10.1145/3338906.3338937
   ALTMAN NS, 1992, AM STAT, V46, P175, DOI 10.2307/2685209
   Azhagusundari B., 2013, INT J INNOVATIVE TEC, V2, P18, DOI DOI 10.1371/JOURNAL.PONE.0166017
   Basu Samyadeep, 2020, P MACHINE LEARNING R, V119
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   BENGIO Y, 1994, IEEE T NEURAL NETWOR, V5, P157, DOI 10.1109/72.279181
   Bhatt C, 2021, MULTIMEDIA SYST, V27, P599, DOI 10.1007/s00530-020-00694-1
   Biswas S, 2022, Arxiv, DOI arXiv:2212.06140
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Cao JL, 2022, PROC INT CONF SOFTW, P573, DOI 10.1145/3510003.3510099
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   daviddlewis, 2020, About us
   Duan RJ, 2020, PROC CVPR IEEE, P997, DOI 10.1109/CVPR42600.2020.00108
   Dubey SK., 2012, ACM SIGSOFT Softw. Eng. Notes, V37, P1, DOI [10.1145/2347696.2347703, DOI 10.1145/2347696.2347703]
   Elish MO, 2014, ARTIF INTELL REV, V42, P695, DOI 10.1007/s10462-012-9348-9
   Eniser HF, 2019, LECT NOTES COMPUT SC, V11424, P171, DOI 10.1007/978-3-030-16722-6_10
   Gao X, 2020, PROC INT CONF SOFTW, P1147, DOI 10.1145/3377811.3380415
   Ghorbani A, 2019, PR MACH LEARN RES, V97
   Goyal R, 2014, IERI PROC, V6, P15, DOI 10.1016/j.ieri.2014.03.004
   gregstanleyandassociates.com, 2024, A guide to fault detection and diagnosis
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   He PJ, 2020, PROC INT CONF SOFTW, P961, DOI 10.1145/3377811.3380339
   Henriksen P, 2022, 37TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1031, DOI 10.1145/3477314.3507059
   Hu Q., Aries: Efficient Testing of Deep Neural Networks via Labeling-Free Accuracy Estimation.
   Goodfellow IJ, 2015, Arxiv, DOI [arXiv:1412.6572, DOI 10.48550/ARXIV.1412.6572]
   Jackson E.J., s Guide to Principal Components
   Jia RX, 2019, PR MACH LEARN RES, V89
   Karlas B., 2022, arXiv
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Koh PW, 2019, ADV NEUR IN, V32
   Koh PW, 2017, PR MACH LEARN RES, V70
   Kolen J., 2001, A field guide to dynamical recurrent neural networks, DOI 10.1109/9780470544037.ch14
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Krizhevsky N., 2022, The CIFAR- 10 dataset
   Kurakin A., 2018, Artificial Intelligence Safety and Security, P99, DOI DOI 10.1201/9781351251389-8
   Larochelle H, 2009, J MACH LEARN RES, V10, P1
   LeCun Y., 1998, The MNIST Database of Handwritten Digits
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Li J, 2017, ENVIRON MODELL SOFTW, V97, P112, DOI 10.1016/j.envsoft.2017.07.016
   Li LY, 2023, Arxiv, DOI [arXiv:2302.06086, 10.48550/arXiv.2302.06086, DOI 10.48550/ARXIV.2302.06086]
   Li YH, 2022, PROC INT CONF SOFTW, P2215, DOI 10.1145/3510003.3510091
   Lu L, 2020, Arxiv, DOI arXiv:1903.06733
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P614, DOI [10.1109/saner.2019.8668044, 10.1109/SANER.2019.8668044]
   Ma SQ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P175, DOI 10.1145/3236024.3236082
   Maas A., 2011, Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies, P142
   Mamat WMFW, 2008, INTERNATIONAL SYMPOSIUM OF INFORMATION TECHNOLOGY 2008, VOLS 1-4, PROCEEDINGS, P871
   Masetic Z, 2016, COMPUT METH PROG BIO, V130, P54, DOI 10.1016/j.cmpb.2016.03.020
   Meng LH, 2021, PROC INT CONF SOFTW, P385, DOI 10.1109/ICSE43902.2021.00045
   Monjezi V, 2023, Arxiv, DOI [arXiv:2304.04199, 10.48550/arXiv.2304.04199]
   Moosavi-Dezfooli SM, 2016, PROC CVPR IEEE, P2574, DOI 10.1109/CVPR.2016.282
   Mosavi A, 2020, LECT NOTE NETW SYST, V101, P202, DOI 10.1007/978-3-030-36841-8_20
   Murthy SK, 1998, DATA MIN KNOWL DISC, V2, P345, DOI 10.1023/A:1009744630224
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   NELDER JA, 1972, J R STAT SOC SER A-G, V135, P370, DOI 10.2307/2344614
   Nikanjam A, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3470006
   Odena A, 2019, PR MACH LEARN RES, V97
   Pascanu R., 2013, ICML, P1310, DOI DOI 10.1007/S12088-011-0245-8
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Rauschmayr N., P MACH LEARN SYST 20
   Romano J., 2006, ANN M FLOR ASS I RES, DOI DOI 10.1017/CBO9781107415324.004
   Schoop Eldon, 2021, CHI '21: Proceedings of the 2021 CHI Conference on Human Factors in Computing Systems, DOI 10.1145/3411764.3445538
   Seokhyun Lee, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P165, DOI 10.1145/3395363.3397346
   Shang WQ, 2007, EXPERT SYST APPL, V33, P1, DOI 10.1016/j.eswa.2006.04.001
   Shaowei C., 2013, Comput. Eng. Appl.
   Shen EJ, 2020, IEEE INT CONF AUTOM, P410, DOI 10.1145/3324884.3416621
   Silver D, 2017, NATURE, V550, P354, DOI 10.1038/nature24270
   Sklearn, 2020, make blobs dataset
   Sklearn, 2020, make circles dataset
   Sohn J, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3563210
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Sun B, 2022, PROC INT CONF SOFTW, P338, DOI 10.1145/3510003.3510080
   Sun YC, 2019, Arxiv, DOI arXiv:1803.04792
   Sun YC, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P111, DOI 10.1109/ICSE-Companion.2019.00051
   Sze V, 2017, P IEEE, V105, P2295, DOI 10.1109/JPROC.2017.2761740
   Tang JX, 2016, IEEE T NEUR NET LEAR, V27, P809, DOI 10.1109/TNNLS.2015.2424995
   Thongtanunam P, 2021, IEEE T SOFTWARE ENG, V47, P2698, DOI 10.1109/TSE.2020.2964660
   Tokui S, 2022, EUR CON SFTWR MTNCE, P1111, DOI 10.1109/SANER53432.2022.00128
   Usman M, 2021, LECT NOTES COMPUT SC, V12759, P3, DOI 10.1007/978-3-030-81685-8_1
   Wang G, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3559561
   Wang J, 2023, PROCEEDINGS OF THE 32ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2023, P601, DOI 10.1145/3597926.3598081
   [王赞 Wang Zan], 2020, [软件学报, Journal of Software], V31, P1255
   Wardat M, 2022, PROC INT CONF SOFTW, P561, DOI 10.1145/3510003.3510071
   Wardat M, 2021, PROC INT CONF SOFTW, P251, DOI 10.1109/ICSE43902.2021.00034
   Wicker M, 2018, LECT NOTES COMPUT SC, V10805, P408, DOI 10.1007/978-3-319-89960-2_22
   Xiang SX, 2019, IEEE CONF VIS ANAL, P57, DOI [10.1109/vast47406.2019.8986943, 10.1109/VAST47406.2019.8986943]
   Xie XF, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3490489
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Xu B, 2015, Arxiv, DOI arXiv:1505.00853
   Yan M, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P627, DOI 10.1145/3468264.3468612
   Yan SA, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P775, DOI 10.1145/3368089.3409671
   Yang Feng, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P177, DOI 10.1145/3395363.3397357
   Yang YM, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3505243
   Yin F, 2023, Arxiv, DOI [arXiv:2301.00364, 10.48550/arXiv.2301.00364, DOI 10.48550/ARXIV.2301.00364]
   Yu BX, 2023, Arxiv, DOI [arXiv:2306.02228, 10.48550/arXiv.2306.02228, DOI 10.48550/ARXIV.2306.02228]
   Yu J, 2019, IEEE INT C COMPUT, P16, DOI 10.1109/CSE/EUC.2019.00013
   Yuan Y., 2021, ARXIV
   Zhang H, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P376, DOI 10.1109/ASE.2019.00043
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang PX, 2020, PROC INT CONF SOFTW, P949, DOI 10.1145/3377811.3380331
   Zhang XY, 2021, PROC INT CONF SOFTW, P359, DOI 10.1109/ICSE43902.2021.00043
   Zhang XZ, 2018, AAAI CONF ARTIF INTE, P4482
   Zheng HB, 2022, PROC INT CONF SOFTW, P1519, DOI 10.1145/3510003.3510123
   Zhou HS, 2020, PROC INT CONF SOFTW, P347, DOI 10.1145/3377811.3380422
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 108
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2024
VL 173
AR 107488
DI 10.1016/j.infsof.2024.107488
EA MAY 2024
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UB0L7
UT WOS:001245484400001
DA 2024-08-05
ER

PT J
AU Mohan, A
   Jayaraman, S
   Jayaraman, B
AF Mohan, Aswathy
   Jayaraman, Swaminathan
   Jayaraman, Bharat
TI A declarative approach to detecting design patterns from Java execution
   traces and source code
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Augmented call tree; Declarative specification; Design pattern
   detection; Execution trace; Gang-of-Four patterns; Java; JIVE;
   Object-oriented software; SQL query; Structure and behavior
ID INSTANCES; RECOVERY
AB Design patterns are invaluable for software engineers because they help obtain well -structured and reusable object -oriented software components and contribute towards ease of software comprehension, maintenance, and modification. However, identifying design patterns from an inspection of the source code is not easy because, in most cases, there are no syntactic cues that signal their presence. This topic has therefore elicited considerable interest in the field. The novel aspect of our work is that we propose a set of primitives using which we can declaratively specify design patterns based on a combination of static and dynamic information. Our experimental work is carried out in the context of Java: static information is extracted from Java source code, and dynamic information from an execution trace of a program. Each declarative pattern specification is automatically translated into an SQL query which retrieves all instances of the design pattern present in the program. We illustrate our approach with the well-known Gang -of -Four design patterns and the approach extends to other such design patterns. The experimental results show the efficacy of our approach for representative programs for all GoF patterns in addition to more extensive case studies, JHotDraw, Junit, and QuickUML.
C1 [Mohan, Aswathy; Jayaraman, Swaminathan; Jayaraman, Bharat] Amrita Vishwa Vidyapeetham, Amrita Sch Comp, Dept Comp Sci & Engn, Amritapuri 690525, India.
   [Jayaraman, Bharat] Univ Buffalo, Buffalo, NY 14260 USA.
C3 Amrita Vishwa Vidyapeetham; Amrita Vishwa Vidyapeetham Amritapuri; State
   University of New York (SUNY) System; State University of New York
   (SUNY) Buffalo
RP Jayaraman, S (corresponding author), Amrita Vishwa Vidyapeetham, Amrita Sch Comp, Dept Comp Sci & Engn, Amritapuri 690525, India.
EM swaminathanj@am.amrita.edu
CR Alhusain S, 2013, 2013 13TH UK WORKSHOP ON COMPUTATIONAL INTELLIGENCE (UKCI), P244, DOI 10.1109/UKCI.2013.6651312
   Alnusair A., 2013, P 28 ANN ACM S APPL, P1062
   Antoniol G, 2001, J SYST SOFTWARE, V59, P181, DOI 10.1016/S0164-1212(01)00061-9
   Bayley I, 2007, SEFM 2007: FIFTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P25, DOI 10.1109/SEFM.2007.43
   Beck K., 2001, ABOUT US
   Bernardi ML, 2014, J SOFTW-EVOL PROC, V26, P1233, DOI 10.1002/smr.1674
   Billard EA, 2004, IEEE T SYST MAN CY B, V34, P1933, DOI 10.1109/TSMCB.2004.828192
   Brewer MB, 2014, HANDBOOK OF RESEARCH METHODS IN SOCIAL AND PERSONALITY PSYCHOLOGY, SECOND EDITION, P11
   Costagliola G, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P102, DOI 10.1109/CSMR.2005.23
   Crahen E., 2002, ANN ACM SIGPLAN C OB, P62
   CZYZ J.K., 2007, Proceedings of the 2007 OOPSLA Workshop on Eclipse Technology Exchange (Montreal, Quebec, Canada, October 21 - 21, P31, DOI DOI 10.1145/1328279.1328286
   Davis L, 2004, IEEE T SYST MAN CY B, V34, P222, DOI 10.1109/TSMCB.2003.811862
   De Lucia A, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3176643
   De Lucia A, 2015, PROC IEEE INT CONF S, P327, DOI 10.1109/ICSM.2015.7332480
   De Lucia A, 2010, EUR CON SFTWR MTNCE, P176, DOI 10.1109/CSMR.2010.16
   De Lucia A, 2009, J SYST SOFTWARE, V82, P1177, DOI 10.1016/j.jss.2009.02.012
   Eden AH, 1997, AUTOMATED SOFTWARE ENGINEERING, 12TH IEEE INTERNATIONAL CONFERENCE, PROCEEDINGS, P143, DOI 10.1109/ASE.1997.632834
   Fontana FA, 2011, J SYST SOFTWARE, V84, P2334, DOI 10.1016/j.jss.2011.07.006
   Gamma E., 2011, JHotDraw as open-source project
   Gamma E., 1995, DESIGN PATTERNS ELEM
   Gasparis E., 2007, Design Pattern Formalization Techniques, P357
   Graves AR, 2000, IEEE T SYST MAN CY A, V30, P36, DOI 10.1109/3468.823479
   Gueheneuc Y.-G., 2007, P EUROPLOP FOCUS GRO, P1
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Heuzeroth D, 2003, PROG COMPREHEN, P94
   Jayaraman S, 2017, SOFTWARE PRACT EXPER, V47, P163, DOI 10.1002/spe.2411
   Jevitha KP, 2021, SOFTWARE PRACT EXPER, V51, P409, DOI 10.1002/spe.2910
   Kaczor O, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P173
   Kaczor O, 2010, INFORM SOFTWARE TECH, V52, P152, DOI 10.1016/j.infsof.2009.08.006
   Karippara K., 2020, INT C COMM EL SYS, P430, DOI [10.1109/ICCES48766.2020.9138091, DOI 10.1109/ICCES48766.2020.9138091]
   Keller R. K., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P226, DOI 10.1109/ICSE.1999.841012
   Khwaja S, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2926966
   Khwaja S, 2013, SOFTWARE PRACT EXPER, V43, P747, DOI 10.1002/spe.1122
   Lea D., 2000, Concurrent Programming in Java
   Mayvan BB, 2017, KNOWL-BASED SYST, V120, P211, DOI 10.1016/j.knosys.2017.01.007
   Ng JKY, 2010, J SOFTW MAINT EVOL-R, V22, P597, DOI 10.1002/smr.421
   Philippow I., 2005, Software System Model, V4, P55
   Porras GC, 2010, EMPIR SOFTW ENG, V15, P493, DOI 10.1007/s10664-009-9125-9
   Prabhakar NP, 2017, ADV INTELL SYST, V517, P73, DOI 10.1007/978-981-10-3174-8_7
   Prechelt L, 2002, IEEE T SOFTWARE ENG, V28, P595, DOI 10.1109/TSE.2002.1010061
   Rasool G., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P243, DOI 10.1109/ASE.2011.6100060
   Rasool G, 2014, ARAB J SCI ENG, V39, P8851, DOI 10.1007/s13369-014-1449-0
   Rasool G, 2010, ADV ENG SOFTW, V41, P519, DOI 10.1016/j.advengsoft.2009.10.014
   Riaz M, 2015, INFORM SOFTWARE TECH, V65, P14, DOI 10.1016/j.infsof.2015.04.002
   Saravanan G., 2022, P EMERG RESER COMPU, P803
   Shi N, 2006, IEEE INT CONF AUTOM, P123
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Wang L., 2012, INT WORKSH EV ASS SO, P49
   Yu DJ, 2018, J SYST SOFTWARE, V142, P35, DOI 10.1016/j.jss.2018.04.015
   Yu DJ, 2013, P INT COMP SOFTW APP, P579, DOI 10.1109/COMPSAC.2013.92
   Zanoni M, 2015, J SYST SOFTWARE, V103, P102, DOI 10.1016/j.jss.2015.01.037
   Ziarek L, 2016, LECT NOTES COMPUT SC, V10012, P493, DOI 10.1007/978-3-319-46982-9_33
NR 52
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2024
VL 171
AR 107457
DI 10.1016/j.infsof.2024.107457
EA APR 2024
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QJ7Z2
UT WOS:001220585100001
DA 2024-08-05
ER

PT J
AU Akbar, MA
   Khan, AA
   Hyrynsalmi, S
AF Akbar, Muhammad Azeem
   Khan, Arif Ali
   Hyrynsalmi, Sami
TI Role of quantum computing in shaping the future of 6 G technology
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE 6 G technology; Quantum computing; Challenges; Opportunities
ID CRYPTOGRAPHY; CHALLENGES; SECURITY
AB Context: The emergence of 6 G technology heralds a groundbreaking era in digital connectivity, envisaging universal and seamless links. To address the intricate computational and security requirements of this revolution, the integration of quantum computing (QC) into these networks is perceived as a promising solution. Objective: The objective this study presents a comprehensive investigation into the potential roles and implications of QC within the context of 6 G technology. Methodology: To address the objectives of this study, firstly, we have conducted literature survey to identify the key applications of using QC in 6 G technology. Secondly, we performed interview study with industry experts to identify the best practices related to the key application of QC in 6 G technology. Results: Our study unfolds in two distinct stages: firstly, we identify 15 key applications of QC in 6 G technology and segmented into 4 core areas. Secondly, the literature findings were empirically validated by conducting interview study and identified 49 best practices related to one of the identified key applications of QC in 6 G technology. Conclusion: The outcomes of this research lay a solid foundation for understanding both the pivotal applications of QC in 6 G technology and the effective practices for its implementation, thus providing valuable insights to both academics and industry practitioners.
C1 [Akbar, Muhammad Azeem; Hyrynsalmi, Sami] LUT Univ, Software Engn Dept, Lahti 15100, Finland.
   [Khan, Arif Ali] Univ Oulu, Empir Software Engn Res Unit M3S, Oulu, Finland.
C3 University of Oulu
RP Akbar, MA (corresponding author), LUT Univ, Software Engn Dept, Lahti 15100, Finland.
EM azeem.akbar@ymail.com
RI Hyrynsalmi, Sami/U-6315-2017
OI Hyrynsalmi, Sami/0000-0002-5073-3750
CR Abidin S, 2022, MATER TODAY-PROC, V51, P508, DOI 10.1016/j.matpr.2021.05.593
   Adil M, 2023, Arxiv, DOI arXiv:2305.16473
   Adnan MH, 2022, FUTURE INTERNET, V14, DOI 10.3390/fi14030073
   Adolph S., 2008, Conference of the Center for Advanced Studies on Collaborative Research CASCON, P166, DOI [10.1145/1463788.1463806, DOI 10.1145/1463788.1463806]
   Ahmed F, 2021, 2021 IEEE 32ND ANNUAL INTERNATIONAL SYMPOSIUM ON PERSONAL, INDOOR AND MOBILE RADIO COMMUNICATIONS (PIMRC), DOI 10.1109/PIMRC50174.2021.9569339
   Akbar MA, 2020, IEEE ACCESS, V8, P203070, DOI 10.1109/ACCESS.2020.3035829
   Akbar MA, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2292
   Akbar MA, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2275
   Akyildiz IF, 2020, IEEE ACCESS, V8, P133995, DOI 10.1109/ACCESS.2020.3010896
   Al-Mohammed HA, 2021, IEEE INT CONF COMM, DOI 10.1109/ICCWorkshops50388.2021.9473793
   Allan G., 2003, ELECT J BUSINESS RES, V2, P1
   Alsabah M, 2021, IEEE ACCESS, V9, P148191, DOI 10.1109/ACCESS.2021.3124812
   Alsharif MH, 2020, SYMMETRY-BASEL, V12, DOI 10.3390/sym12040676
   Awschalom D, 2021, PRX QUANTUM, V2, DOI 10.1103/PRXQuantum.2.017002
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI 10.1191/1478088706qp063oa
   Cabrera J.A., 2021, Shaping Future 6G Networks: Needs, Impacts and Technologies, P271
   Cao Y, 2022, IEEE COMMUN SURV TUT, V24, P839, DOI 10.1109/COMST.2022.3144219
   Chamola V, 2021, COMPUT COMMUN, V176, P99, DOI 10.1016/j.comcom.2021.05.019
   Csaba G, 2017, PHYS LETT A, V381, P1471, DOI 10.1016/j.physleta.2017.02.042
   Das S., 2022, P EUR WIR 2022 27 EU, P1
   De Alwis C., 2022, Towards 6G: Key Technological Directions
   Dogra A, 2021, IEEE ACCESS, V9, P67512, DOI 10.1109/ACCESS.2020.3031234
   Dong YL, 2021, PHYS REV A, V103, DOI 10.1103/PhysRevA.103.042419
   Duong TQ, 2022, IEEE OPEN J VEH TECH, V3, P375, DOI 10.1109/OJVT.2022.3202876
   Duong TQ, 2022, IEEE OPEN J COMM SOC, V3, P1347, DOI 10.1109/OJCOMS.2022.3195219
   Ganesan S, 2020, BIOSENS BIOELECTRON, V151, DOI 10.1016/j.bios.2019.111967
   Glaser B. G., 1967, The Discovery of Grounded Theory: Strategies for Qualitative Research
   Gradoni G., 2021, Smart radio environments
   Gui G, 2020, IEEE WIREL COMMUN, V27, P126, DOI 10.1109/MWC.001.1900516
   Gui RJ, 2012, TALANTA, V94, P295, DOI 10.1016/j.talanta.2012.03.043
   Hoda R., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P285, DOI DOI 10.1145/1806799.1806843
   Hoda R, 2012, EMPIR SOFTW ENG, V17, P609, DOI 10.1007/s10664-011-9161-0
   Kamruzzaman MM, 2022, ENERGIES, V15, DOI 10.3390/en15155608
   Khan LU, 2020, IEEE ACCESS, V8, P147029, DOI 10.1109/ACCESS.2020.3015289
   Kim M, 2021, IEEE NETWORK, V35, P8, DOI 10.1109/MNET.012.2000770
   Kozlowski W., 2020, IEEE Commun. Stand. Mag., V4, P4
   Kumar A, 2024, Arxiv, DOI arXiv:2303.11753
   Lee B.H., 2021, P QUANT TECHN DRIV C, P30
   Lele A., 2021, Quantum Technologies and Military Strategy
   Liu RQ, 2022, IET QUANTUM COMMUN, V3, P151, DOI 10.1049/qtc2.12044
   Madampe K, 2022, IEEE T SOFTWARE ENG, V48, P3737, DOI 10.1109/TSE.2021.3104732
   Mahmoud HHH, 2021, T EMERG TELECOMMUN T, V32, DOI 10.1002/ett.4233
   Masood Z, 2022, IEEE T SOFTWARE ENG, V48, P1579, DOI 10.1109/TSE.2020.3025317
   Nande SS, 2023, AEROSP CONF PROC, DOI 10.1109/AERO55745.2023.10115619
   Nande SS, 2023, COMPUT NETW, V229, DOI 10.1016/j.comnet.2023.109772
   Nawaz SJ, 2019, IEEE ACCESS, V7, P46317, DOI 10.1109/ACCESS.2019.2909490
   Niazi M, 2015, ARAB J SCI ENG, V40, P845, DOI 10.1007/s13369-015-1586-0
   Niazi M, 2012, J SOFTW-EVOL PROC, V24, P877, DOI 10.1002/smr.543
   Ohyama T, 2023, IEEE T EMERG TOP COM, V11, P18, DOI 10.1109/TETC.2022.3161542
   Okey OD, 2022, SUSTAINABILITY-BASEL, V14, DOI 10.3390/su142315901
   Polymeni S, 2023, ELECTRONICS-SWITZ, V12, DOI 10.3390/electronics12122651
   Prateek K, 2023, TELECOMMUN SYST, V82, P315, DOI 10.1007/s11235-022-00979-y
   Prateek K, 2022, SECUR COMMUN NETW, V2022, DOI 10.1155/2022/4280617
   Rafi S, 2022, INT SYMP EMP SOFTWAR, P301, DOI 10.1145/3544902.3546635
   Robinson OC, 2014, QUAL RES PSYCHOL, V11, P25, DOI 10.1080/14780887.2013.801543
   Salathé Y, 2018, PHYS REV APPL, V9, DOI 10.1103/PhysRevApplied.9.034011
   Schwartz ML, 2021, 2021 SYSTEMS OF SIGNAL SYNCHRONIZATION, GENERATING AND PROCESSING IN TELECOMMUNICATIONS (SYNCHROINFO), DOI 10.1109/SYNCHROINFO51390.2021.9488351
   Shabbir M, 2022, J KING SAUD UNIV-COM, V34, P1468, DOI 10.1016/j.jksuci.2022.02.017
   Shahraki Amin, 2021, arXiv
   Shameem M, 2020, IET SOFTW, V14, P389, DOI 10.1049/iet-sen.2019.0196
   Shenoy K.G., 2021, 6G Mobile Wireless Networks, P419
   Siriwardhana Y, 2021, EUR CONF NETW COMMUN, P616, DOI [10.1109/EUCNC/6GSUMMIT51104.2021.9482503, 10.1109/EuCNC/6GSummit51104.2021.9482503]
   Soldani D., 2021, J. Telecommun. Digit. Econ., V9, P58
   Stipcevic M., 2011, 2011 Proceedings of 34th International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO 20111), P1474
   Stipcevic M, 2012, PROC SPIE, V8375, DOI 10.1117/12.919920
   Suriya M., 2022, Int. J. Intell. Netw, V3, P197, DOI [10.1016/j.ijin.2022.11.004, DOI 10.1016/J.IJIN.2022.11.004]
   Tychola KA, 2023, ELECTRONICS-SWITZ, V12, DOI 10.3390/electronics12112379
   Vista F., 2021, P IEEE GLOB WORKSH G, P1
   Wang CG, 2022, IEEE WIREL COMMUN, V29, P58, DOI 10.1109/MWC.006.00340
   Wohlin C., 2014, P 18 INT C EV ASS SO, P1, DOI [DOI 10.1145/2601248.2601268, 10.1145/2601248.2601268]
   Zaman F, 2023, IEEE WIREL COMMUN, V30, P22, DOI 10.1109/MWC.003.2200382
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.62, 10.1109/APSEC.2016.031]
NR 72
TC 1
Z9 1
U1 3
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2024
VL 170
AR 107454
DI 10.1016/j.infsof.2024.107454
EA MAR 2024
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QS8Z4
UT WOS:001222964200001
OA hybrid
DA 2024-08-05
ER

PT J
AU Esposito, M
   Falessi, D
AF Esposito, Matteo
   Falessi, Davide
TI VALIDATE: A deep dive into vulnerability prediction datasets
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Security; Replicability; Vulnerability; Machine learning; Repository;
   Dataset
ID SOFTWARE; REPRODUCIBILITY; REPOSITORIES; METRICS; IMPACT
AB Context: Vulnerabilities are an essential issue today, as they cause economic damage to the industry and endanger our daily life by threatening critical national security infrastructures. Vulnerability prediction supports software engineers in preventing the use of vulnerabilities by malicious attackers, thus improving the security and reliability of software. Datasets are vital to vulnerability prediction studies, as machine learning models require a dataset. Dataset creation is time-consuming, error-prone, and difficult to validate. Objectives: This study aims to characterise the datasets of prediction studies in terms of availability and features. Moreover, to support researchers in finding and sharing datasets, we provide the first VulnerAbiLty predIction DatAseT rEpository ( VALIDATE ). Methods: We perform a systematic literature review of the datasets of vulnerability prediction studies. Results: Our results show that out of 50 primary studies, only 22 studies (i.e., 38%) provide a reachable dataset. Of these 22 studies, only one study provides a dataset in a stable repository. Conclusions: Our repository of 31 datasets, 22 reachable plus nine datasets provided by authors via email, supports researchers in finding datasets of interest, hence avoiding reinventing the wheel; this translates into less effort, more reliability, and more reproducibility in dataset creation and use.
C1 [Esposito, Matteo; Falessi, Davide] Univ Roma Tor Vergata, Via Politecn 1, I-00132 Rome, Lazio, Italy.
   [Esposito, Matteo] Multitel Srl, Via Modigliani 27, I-70014 Puglia, Italy.
C3 University of Rome Tor Vergata
RP Esposito, M (corresponding author), Univ Roma Tor Vergata, Via Politecn 1, I-00132 Rome, Lazio, Italy.
EM m.esposito@ing.uniroma2.it; falessi@ing.uniroma2.it
RI Esposito, Matteo/GYU-7560-2022
OI Esposito, Matteo/0000-0002-8451-3668; Falessi,
   Davide/0000-0002-6340-0058
FU Universita degli Studi di Roma Tor Vergata within the CRUI-CARE
   Agreement
FX Open access funding provided by Universita degli Studi di Roma Tor
   Vergata within the CRUI-CARE Agreement.
CR Abdalkareem R, 2021, IEEE T SOFTWARE ENG, V47, P2740, DOI 10.1109/TSE.2020.2967380
   Aggarwal KK, 2007, J OBJECT TECHNOL, V6, P127, DOI 10.5381/jot.2007.6.10.a5
   AHA DW, 1991, MACH LEARN, V6, P37, DOI 10.1007/BF00153759
   Ahluwalia A., 2020, CoRR abs/2003. 14376
   Albahar MA, 2020, IEEE ACCESS, V8, P14999, DOI 10.1109/ACCESS.2020.2965726
   Alelyani S, 2011, PROC INT C TOOLS ART, P970, DOI 10.1109/ICTAI.2011.167
   Almeida VAF, 2017, IEEE INTERNET COMPUT, V21, P68, DOI 10.1109/MIC.2017.23
   ALTMAN DG, 1994, BRIT MED J, V308, P1552, DOI 10.1136/bmj.308.6943.1552
   Alves H, 2016, LAT-AM SYMP DEP COMP, P151, DOI 10.1109/LADC.2016.32
   Alves H, 2016, 2016 12TH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC 2016), P37, DOI 10.1109/EDCC.2016.34
   Amann S., 2014, Lecture Notes in Computer Science, V8987, P121, DOI [10.1007/978-3-319--28406-4_5, DOI 10.1007/978-3-319--28406-4_5]
   [Anonymous], 1901, US C
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Ayala C, 2022, IEEE T SOFTWARE ENG, V48, P4229, DOI 10.1109/TSE.2021.3113558
   Bachmann A., 2010, P FAST SOFTW ENCR WO, P97
   Basili V.R., 1994, Encycl. Softw. Eng.
   Bavota G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P1, DOI 10.1109/SANER.2016.47
   Bayley S., 2018, CoRR abs/1801.07194
   Beauvisage T, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P575
   Bhandari G, 2021, PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE '21), P30, DOI 10.1145/3475960.3475985
   Black PE, 2018, J RES NATL INST STAN, V123, DOI [10.6028/jres.123.005, 10.6028/123.005]
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Carver JC, 2014, EMPIR SOFTW ENG, V19, P267, DOI 10.1007/s10664-013-9290-8
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Charalabidis Yannis, 2020, ICEGOV 2020: Proceedings of the 13th International Conference on Theory and Practice of Electronic Governance, P214, DOI 10.1145/3428502.3428532
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Cheikhi L, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P17, DOI 10.1109/IWSM-Mensura.2013.13
   Cheirdari F, 2018, IEEE INT CONF BIG DA, P4782, DOI 10.1109/BigData.2018.8622456
   Chen X, 2020, IEEE T RELIAB, V69, P70, DOI 10.1109/TR.2019.2924932
   Cheng X, 2019, IEEE INT C ENG COMP, P41, DOI 10.1109/ICECCS.2019.00012
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Croft R, 2023, IEEE T SOFTWARE ENG, V49, P1044, DOI 10.1109/TSE.2022.3171202
   Cruz M, 2020, IEEE ACCESS, V8, P26773, DOI 10.1109/ACCESS.2019.2952191
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   D. community, 2001, Drupal-open source cms
   D. Science, 2011, Figshare
   Dalla Palma S, 2022, IEEE T SOFTWARE ENG, V48, P2086, DOI 10.1109/TSE.2021.3051492
   Dann A, 2022, IEEE T SOFTWARE ENG, V48, P3613, DOI 10.1109/TSE.2021.3101739
   de Magalhaes CVC, 2015, INFORM SOFTWARE TECH, V64, P76, DOI 10.1016/j.infsof.2015.02.001
   Dougiamas M., 2002, Moodle-open -source learning platform
   Dror R., 2017, Transactions of the Association for Computational Linguistics, V5, P471, DOI 10.1162/tacla00074
   Drummond D.C., 2009, Proceedings of the Evaluation Methods for Machine Learning Workshop 26th International Conference for Machine Learning, P1
   Durelli VHS, 2019, IEEE T RELIAB, V68, P1189, DOI 10.1109/TR.2019.2892517
   Eilers D., 2017, P INT C INF SYST TRA
   Esposito Matteo, 2023, Zenodo, DOI 10.5281/ZENODO.10135002
   Esposito Matteo, 2023, 2023 IEEE 23 INT WOR, P265, DOI 10.1109/SCAM59687.2023.00037
   Esposito Matteo, 2023, 2023 IEEE 23 INT WOR, P277, DOI 10.1109/SCAM59687
   European Organization For Nuclear Research, 2013, OpenAIRE, DOI [10.25495/7GXK-RD71, DOI 10.25495/7GXK-RD71]
   Falessi D, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10261-z
   Falessi D, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3467895
   Falessi D, 2020, EMPIR SOFTW ENG, V25, P4805, DOI 10.1007/s10664-020-09868-x
   Falessi D, 2020, IEEE T SOFTWARE ENG, V46, P420, DOI 10.1109/TSE.2018.2861735
   Falessi D, 2019, IEEE SOFTWARE, V36, P48, DOI 10.1109/MS.2018.2874620
   Fan JH, 2020, IEEE WORK CONF MIN S, P508, DOI 10.1145/3379597.3387501
   Fang Y, 2019, PLOS ONE, V14, DOI 10.1371/journal.pone.0225196
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Felizardo KR, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962630
   Frank E, 2005, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, P1305, DOI 10.1007/0-387-25465-X_62
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Gamma E., 1993, ECOOP '93 - Object-Oriented Programming. 7th European Conference Proceedings, P406
   Giray G, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111031
   GiulianoAntoniol KamelAyari, 2018, P 28 ANN INT C COMP, P2
   Gkortzis A, 2018, IEEE WORK CONF MIN S, P18, DOI 10.1145/3196398.3196454
   González-Barahona JM, 2012, EMPIR SOFTW ENG, V17, P75, DOI 10.1007/s10664-011-9181-9
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hanif H, 2021, J NETW COMPUT APPL, V179, DOI 10.1016/j.jnca.2021.103009
   Hassan AE, 2005, IEEE T SOFTWARE ENG, V31, P426, DOI 10.1109/TSE.2005.70
   Henderson A.R., 1997, Evidence-Based Medicine-How to Practice and Teach EBM, DOI [10.1093/clinchem/43.10.2014, DOI 10.1093/CLINCHEM/43.10.2014]
   Herzig K, 2016, EMPIR SOFTW ENG, V21, P303, DOI 10.1007/s10664-015-9376-6
   Ibrahim A., 2019, I C COMP SYST APPLIC, P1, DOI [10.1109/AICCSA47632.2019.9035265, DOI 10.1109/aiccsa47632.2019.9035265]
   Jabeen G, 2022, APPL INTELL, V52, P17614, DOI 10.1007/s10489-022-03350-5
   Jang-Jaccard J, 2014, J COMPUT SYST SCI, V80, P973, DOI 10.1016/j.jcss.2014.02.005
   Jiarpakdee J, 2020, EMPIR SOFTW ENG, V25, P3590, DOI 10.1007/s10664-020-09848-1
   Jimenez M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P695, DOI 10.1145/3338906.3338941
   Junwei Liang, 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P126, DOI 10.1109/IWSM-MENSURA.2011.33
   Juristo Natalia, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), DOI 10.1109/ESEM.2013.64
   Kapoor S., 2022, arXiv, DOI DOI 10.48550/ARXIV.2207.07048
   Kapur R, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3485819
   Karlis D., 2007, correspondence analysis in practice
   Kekül H, 2021, J INF SECUR APPL, V63, DOI 10.1016/j.jisa.2021.103028
   Khan MA, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3485767
   Khan S, 2023, ACM T PRIV SECUR, V26, DOI 10.1145/3546068
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kitchenham B., 2004, Keele University Technical Report TR/SE-0401
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Lewowski T, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106783
   Li RH, 2019, IEEE ACCESS, V7, P80079, DOI 10.1109/ACCESS.2019.2923227
   Li YC, 2021, ENERGY REP, V7, P8176, DOI 10.1016/j.egyr.2021.08.126
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Liem C.C.S., 2020, CoRR abs/2012. 08387
   Lin GJ, 2021, IEEE T DEPEND SECURE, V18, P2469, DOI 10.1109/TDSC.2019.2954088
   Lin GJ, 2018, IEEE T IND INFORM, V14, P3289, DOI 10.1109/TII.2018.2821768
   Liu C, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3477535
   Liu SG, 2020, IEEE T FUZZY SYST, V28, P1329, DOI 10.1109/TFUZZ.2019.2958558
   Liu SG, 2020, IEEE T IND INFORM, V16, P2154, DOI 10.1109/TII.2019.2942800
   Livshits V.B., 2005, ESEC SIGSOFT FSE, P296, DOI DOI 10.1145/1081706.1081754
   Lyu YZ, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3488269
   M. GitHub Inc, 2007, Github
   Mann David G., 1999, P1
   Martin Bob, 2011, Common Weakness Emunaration, V1
   Martínez-Fernández S, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3487043
   Mashkoor A, 2022, COMPUTER, V55, P24, DOI 10.1109/MC.2022.3144805
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Medeiros N, 2017, PROC INT SYMP SOFTW, P216, DOI 10.1109/ISSRE.2017.11
   Meiliana, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON CYBERNETICS AND COMPUTATIONAL INTELLIGENCE (CYBERNETICSCOM), P19, DOI 10.1109/CYBERNETICSCOM.2017.8311708
   MIT, 1958, About us
   Mitropoulos Dimitris, 2014, 2014 Third International Workshop on Building Analysis Datasets and Gathering Experience Returns for Security (BADGERS). Proceedings, P69, DOI 10.1109/BADGERS.2014.8
   Moran K, 2020, IEEE T SOFTWARE ENG, V46, P196, DOI 10.1109/TSE.2018.2844788
   Morrison P., 2015, P 2015 S BOOTCAMP SC, p4:1, DOI 10.1145/2746194.2746198
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Neil L, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON INTELLIGENCE AND SECURITY INFORMATICS (ISI), P7, DOI 10.1109/ISI.2018.8587375
   Neto Amadeu Anderlin, 2019, ACM SIGSOFT Software Engineering Notes, V44, DOI 10.1145/3356773.3356796
   Nikitopoulos G, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1565, DOI 10.1145/3468264.3473122
   Ning GJ, 2021, CYBERNET SYST, V52, P419, DOI 10.1080/01969722.2020.1871229
   Nong Y, 2023, IEEE T SOFTWARE ENG, V49, P1983, DOI 10.1109/TSE.2022.3207149
   Oreski D, 2017, APPL SOFT COMPUT, V52, P109, DOI 10.1016/j.asoc.2016.12.023
   Oser P, 2022, ACM T PRIV SECUR, V25, DOI 10.1145/3510360
   Pan RQ, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10066-6
   Partenza G, 2021, P INT COMP SOFTW APP, P1475, DOI 10.1109/COMPSAC51774.2021.00219
   Pascarella L, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110493
   Pickerill P, 2020, EMPIR SOFTW ENG, V25, P2897, DOI 10.1007/s10664-020-09825-8
   Ponta Serena Elisa, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P383, DOI 10.1109/MSR.2019.00064
   Pornprasit C, 2023, IEEE T SOFTWARE ENG, V49, P84, DOI 10.1109/TSE.2022.3144348
   Powers D.M.W., 2020, CoRR abs/2010.16061
   Rahimi S, 2013, IEEE T RELIAB, V62, P395, DOI 10.1109/TR.2013.2257052
   Rajbahadur G.K., 2022, arXiv
   Rehman S., 2009, SIGSOFT Softw. Eng. Notes, V34, P1, DOI [10.1145/1640162.1640171, DOI 10.1145/1640162.1640171]
   Reis S., 2021, arXiv
   Robles Gregorio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P171, DOI 10.1109/MSR.2010.5463348
   Rodriguez AD, 2021, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSME52107.2021.00014
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Roscher R, 2020, IEEE ACCESS, V8, P42200, DOI 10.1109/ACCESS.2020.2976199
   Russo ER, 2019, J SYST SOFTWARE, V156, P84, DOI 10.1016/j.jss.2019.06.001
   Ryan C., 2000, Automatic re -engineering of software using genetic programming, DOI [10.1007/978-1-4615-4631-3, DOI 10.1007/978-1-4615-4631-3]
   Saccente N, 2019, 2019 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2019), P114, DOI 10.1109/ASEW.2019.00040
   Sas C., 2021, arXiv
   Sayyad Shirabad J., 2005, School of Information Technology and Engineering, University of Ottawa, Canada
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   SCHWANKE RW, 1994, MACH LEARN, V15, P137, DOI 10.1007/BF00993275
   Shar LK, 2015, IEEE T DEPEND SECURE, V12, P688, DOI 10.1109/TDSC.2014.2373377
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Sim J, 2005, PHYS THER, V85, P257
   Smith A., 2014, Improving github for science | the github blog
   STROUSTRUP B, 1987, LECT NOTES COMPUT SC, V276, P51
   Stuckman J, 2017, IEEE T RELIAB, V66, P17, DOI 10.1109/TR.2016.2630503
   T.M. Foundation, 1998, Mozilla labs
   T. phpMyAdmin Project, 1998, Phpmyadmin
   Tang YM, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P27, DOI 10.1109/QRS.2015.15
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Tassey G., 2002, EC IMPACTS INADEQUAT
   Telang R, 2007, IEEE T SOFTWARE ENG, V33, P544, DOI 10.1109/TSE.2007.1015
   Ten CW, 2010, IEEE T SYST MAN CY A, V40, P853, DOI 10.1109/TSMCA.2010.2048028
   Thornton C, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P847, DOI 10.1145/2487575.2487629
   Le THM, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P717, DOI 10.1109/ASE51524.2021.9678622
   Nguyen T, 2020, LECT NOTES ARTIF INT, V12085, P164, DOI 10.1007/978-3-030-47436-2_13
   Nguyen V, 2020, LECT NOTES ARTIF INT, V12084, P699, DOI 10.1007/978-3-030-47426-3_54
   Vandecruys O, 2008, J SYST SOFTWARE, V81, P823, DOI 10.1016/j.jss.2007.07.034
   Vandehei B, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3433928
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1857, DOI 10.1109/TSE.2019.2937083
   Wang H., 2011, FLAIRS Conference
   Wang HT, 2021, IEEE T INF FOREN SEC, V16, P1943, DOI 10.1109/TIFS.2020.3044773
   Widyasari R, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1556, DOI 10.1145/3368089.3417943
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Williams CC, 2005, IEEE T SOFTWARE ENG, V31, P466, DOI 10.1109/TSE.2005.63
   Witten IH, 2011, MOR KAUF D, P1
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wohlin C., 2014, P 18 INT C EV ASS SO, P1, DOI [DOI 10.1145/2601248.2601268, 10.1145/2601248.2601268]
   Wong W.E., 2020, IEEE Trans. Reliab., V69
   Wu XX, 2020, J SYST SOFTWARE, V160, DOI 10.1016/j.jss.2019.110456
   Yang YM, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3505243
   Yang YM, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3503509
   YERUSHALMY J, 1947, PUBLIC HEALTH REP, V62, P1432, DOI 10.2307/4586294
   Yoo Y, 2010, MIS QUART, V34, P213
   Yu Z, 2021, IEEE T SOFTWARE ENG, V47, P2401, DOI 10.1109/TSE.2019.2949275
   Zagane M, 2020, IEEE ACCESS, V8, P74562, DOI 10.1109/ACCESS.2020.2988557
   Zhang D, 2003, SOFTWARE QUAL J, V11, P87, DOI 10.1023/A:1023760326768
   Zhang D., 2005, Series on Software Engineering and Knowledge Engineering
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhang MY, 2019, IEEE T INF FOREN SEC, V14, P2315, DOI 10.1109/TIFS.2019.2895963
   Zhang Y, 2015, IEEE INT C ENG COMP, P40, DOI 10.1109/ICECCS.2015.15
   Zhao KS, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106652
   Zheng W, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110659
   Zhou YQ, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3468854
   Zhu YH, 2023, NEURAL COMPUT APPL, V35, P1279, DOI 10.1007/s00521-022-08046-y
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
   Zou CW, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3494516
   Zou DQ, 2021, IEEE T DEPEND SECURE, V18, P2224, DOI 10.1109/TDSC.2019.2942930
NR 193
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2024
VL 170
AR 107448
DI 10.1016/j.infsof.2024.107448
EA MAR 2024
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UT4Z6
UT WOS:001250309600001
OA hybrid
DA 2024-08-05
ER

PT J
AU Carruthers, JA
   Diaz-Pace, JA
   Irrazábal, E
AF Carruthers, Juan Andres
   Diaz-Pace, Jorge Andres
   Irrazabal, Emanuel
TI A longitudinal study on the temporal validity of software samples
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software samples; Temporal validity; Longitudinal study; Sample
   evolution
ID MULTIPLE COMPARISONS; GITHUB; QUALITY
AB Context: In Empirical Software Engineering, it is crucial to work with representative samples that reflect the current state of the software industry. An important consideration, especially in rapidly changing fields like software development, is that if we use a sample collected years ago, it should continue to represent the same population in the present day to produce generalizable results. However, it is seldom the case in which a software sample built several years ago accurately depicts the current state of the development industry. Nevertheless, many recent studies rely on rather old datasets (seven or more years of age) to conduct their investigations. Objective: To analyze the evolution of a population of open -source projects, determine the likelihood of detecting significant differences over time, and study the activity history of the projects. Method: We performed a longitudinal study with 72 snapshots of quality projects from Github, covering the period between July 1st 2017 and June 1st 2023. We recorded monthly values of seven repository metrics (contributors, commits, closed pull -requests, merged pull -requests, closed issues, number of stars and forks), encompassing data from a total of 1991 repositories. Results: We observed significant changes in all the metrics evaluated, with most cases showing negligible to small effect sizes. Notably, merged pull -requests registered medium effect sizes. The evolution was not equal in all the metrics, however, after five years it was unlikely that a sample of projects remained representative for any of the analyzed metrics, showing probabilities below 25%. Conclusion: Although the temporal validity of a sample depends on the specific data being studied, employing datasets created several years ago does not appear to be a sound strategy if the aim is to produce results that can be extrapolated to the current state of the population.
C1 [Carruthers, Juan Andres; Irrazabal, Emanuel] UNNE, Software Qual Res Grp, FaCENA, Corrientes, Argentina.
   [Diaz-Pace, Jorge Andres] UNICEN, ISISTAN, CONICET, Buenos Aires, Argentina.
C3 Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET)
RP Carruthers, JA (corresponding author), UNNE, Software Qual Res Grp, FaCENA, Corrientes, Argentina.
EM jacarruthers@exa.unne.edu.ar
OI Diaz-Pace, Jorge Andres/0000-0002-1765-7872; Carruthers, Juan
   Andres/0009-0003-8229-1779
FU National Council on Scientific and Technical Research (CONICET)
   [RESOL-2021-154-APN-DIR#CONICET]; National University of the North-East
   (SCyT-UNNE) [21F001]
FX This work was supported by the National Council on Scientific and
   Technical Research (CONICET) under a PhD Fellowship
   (RESOL-2021-154-APN-DIR#CONICET) and the National University of the
   North-East (SCyT-UNNE) under grant 21F001. It is a part of the research
   conducted under the Computer Science Doctorate Program at UNNE, UNaM,
   and UTN.
CR Afric P, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110641
   Ait A, 2022, IEEE WORK CONF MIN S, P365, DOI 10.1145/3524842.3527941
   Alazba A, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106648
   AlOmar EA, 2019, INT SYMP EMP SOFTWAR, P42
   Carruthers JA, 2022, COMPUT SIST, V26, P1459, DOI [10.13053/cys-26-4-3981, 10.13053/CyS-26-4-3981]
   Baltes S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10072-8
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1275, DOI 10.1007/s10664-014-9325-9
   Bavota G, 2013, PROC IEEE INT CONF S, P280, DOI 10.1109/ICSM.2013.39
   Bettenburg Nicolas, 2008, Proc. European Software Engineering Conference and Symposium on the Foundations of Software Engineering (ESEC/FSE), P308, DOI [10.1145/1453101.1453146, DOI 10.1145/1453101.1453146]
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Boucher A, 2018, INFORM SOFTWARE TECH, V96, P38, DOI 10.1016/j.infsof.2017.11.005
   Caneill M, 2017, EMPIR SOFTW ENG, V22, P1405, DOI 10.1007/s10664-016-9461-5
   Carruthers J.A., 2022, 2022 48 EUROMICRO C, P442, DOI [10.1109/SEAA56994.2022.00075, DOI 10.1109/SEAA56994.2022.00075]
   Chengalur-Smith I, 2010, J ASSOC INF SYST, V11, P657
   Coelho J, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106274
   Coelho J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P186, DOI 10.1145/3106237.3106246
   Coelho R, 2017, EMPIR SOFTW ENG, V22, P1264, DOI 10.1007/s10664-016-9443-7
   Cosentino V, 2017, IEEE ACCESS, V5, P7173, DOI 10.1109/ACCESS.2017.2682323
   Cosentino V, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P137, DOI [10.1109/MSR.2016.023, 10.1145/2901739.2901776]
   Cox David Roxbee, 2018, Analysis of survival data, DOI DOI 10.1201/9781315137438
   Crowston K, 2007, INFORM SOFTWARE TECH, V49, P564, DOI 10.1016/j.infsof.2007.02.004
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   DUNN OJ, 1964, TECHNOMETRICS, V6, P241, DOI 10.2307/1266041
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Fowler M., 2018, Refactoring: improving the design of existing code
   Gezici B, 2019, INFORM SOFTWARE TECH, V112, P178, DOI 10.1016/j.infsof.2019.04.002
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Grammel L., 2010, Hum. Aspect. Softw. Eng., P1, DOI [10.1145/1938595.1938601, DOI 10.1145/1938595.1938601]
   Hassouneh Y, 2021, IEEE ACCESS, V9, P14239, DOI 10.1109/ACCESS.2021.3052149
   Hatton L, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1847
   Hess M, 2004, ANN M AM ED RES ASS
   Iannone E, 2023, IEEE T SOFTWARE ENG, V49, P44, DOI 10.1109/TSE.2022.3140868
   Jarczyk O, 2014, LECT NOTES COMPUT SC, V8851, P80, DOI 10.1007/978-3-319-13734-6_6
   Jureczko M., 2010, P 6 INT C PREDICTIVE, P1, DOI DOI 10.1145/1868328.1868342
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   Kermansaravi ZA, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09900-0
   Kikas R, 2017, IEEE WORK CONF MIN S, P102, DOI 10.1109/MSR.2017.55
   Kim DJ, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09969-1
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Laaber C, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09996-y
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Lenarduzzi V, 2023, J SYST SOFTWARE, V198, DOI 10.1016/j.jss.2022.111575
   Lewowski T, 2020, STUD COMPUT INTELL, V851, P1, DOI 10.1007/978-3-030-26574-8_1
   Lima LP, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09983-3
   Macho C, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09926-4
   Molnar A.-J., 2020, P 14 ACM IEEE INT S, P1, DOI DOI 10.1145/3382494.3410673
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Munger K, 2019, SOC MEDIA SOC, V5, DOI 10.1177/2056305119859294
   Ni C, 2022, IEEE T SOFTWARE ENG, V48, P786, DOI 10.1109/TSE.2020.3001739
   Prana GAA, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09959-3
   Rousseau G, 2020, EMPIR SOFTW ENG, V25, P2930, DOI 10.1007/s10664-020-09828-5
   Scholtes I, 2016, EMPIR SOFTW ENG, V21, P642, DOI 10.1007/s10664-015-9406-4
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.2307/2333709
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Singh J. K., 2003, Artificial breeding and reproduction management in buffaloes: compendium of the lectures delivered in the Indian Council of Agricultural Research, Summer School, Central Institute for Research on Buffaloes, Sirsa Road, Hisar, Haryana, India, 10-30 June 2003, P127
   Sousa BL, 2022, IEEE WORK CONF MIN S, P702, DOI 10.1145/3524842.3528492
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Trautsch A, 2020, EMPIR SOFTW ENG, V25, P5137, DOI 10.1007/s10664-020-09880-1
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Whitehead J, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P1, DOI 10.1007/978-3-642-10294-3_1
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wu R, 2011, SIGSOFT FSE, P15, DOI DOI 10.1145/2025113.2025120
   Xia TP, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10171-0
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
NR 71
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2024
VL 168
AR 107404
DI 10.1016/j.infsof.2024.107404
EA JAN 2024
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HW0U1
UT WOS:001162435100001
DA 2024-08-05
ER

PT J
AU Botros, JS
   Al-Qora'n, LF
   Ahmad, AA
AF Botros, Joseph S.
   Al-Qora'n, Lamis F.
   Ahmad, Amro Al-Said
TI Towards antifragility of cloud systems: An adaptive chaos driven
   framework
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Antifragility; Resilience; Chaos engineering; Self-adaptive software;
   Resilience testing; Cloud computing
ID OBSERVABILITY
AB Context: Unlike resilience, antifragility describes systems that get stronger rather than weaker under stress and chaos. Antifragile systems have the capacity to overcome stressors and come out stronger, whereas resilient systems are focused on their capacity to return to their previous state following a failure. As technology environments become increasingly complex, there is a great need for developing software systems that can benefit from failures while continuously improving. Most applications nowadays operate in cloud environments. Thus, with this increasing adoption of Cloud-Native Systems they require antifragility due to their distributed nature. Objective: The paper proposes UNFRAGILE framework, which facilitates the transformation of existing systems into antifragile systems. The framework employs chaos engineering to introduce failures incrementally and assess the system's response under such perturbation and improves the quality of system response by removing fragilities and introducing adaptive fault tolerance strategies. Method: The UNFRAGILE framework's feasibility has been validated by applying it to a cloud-native using a realworld architecture to enhance its antifragility towards long outbound service latencies. The empirical investigation of fragility is undertaken, and the results show how chaos affects application performance metrics and causes disturbances in them. To deal with chaotic network latency, an adaptation phase is put into effect. Results: The findings indicate that the steady stage's behaviour is like the antifragile stage's behaviour. This suggests that the system could self-stabilise during the chaos without the need to define a static configuration after determining from the context of the environment that the dependent system was experiencing difficulties. Conclusion: Overall, this paper contributes to ongoing efforts to develop antifragile software capable of adapting to the rapidly changing complex environment. Overall, the research provides an operational framework for engineering software systems that learn and improve through exposure to failures rather than just surviving them.
C1 [Botros, Joseph S.; Al-Qora'n, Lamis F.] Philadelphia Univ, Fac Informat Technol, Dept Software Engn, Amman, Jordan.
   [Ahmad, Amro Al-Said] Keele Univ, Sch Comp Sci & Math, Keele, Staffs, England.
C3 Philadelphia University Jordan; Keele University
RP Ahmad, AA (corresponding author), Keele Univ, CR35,Colin Reeves Bldg, Keele ST5 5BG, Staffs, England.
EM a.m.al-said.ahmad@keele.ac.uk
OI Al-Said Ahmad, Amro/0000-0003-1144-3053
FU Researcher Development Frame-work award, Keele University
   [CSRDF22-23-1AA]
FX This work was supported by the Researcher Development Frame-work award
   [No. CSRDF22-23-1AA], Keele University, for Dr Al -Said Ahmad.
CR Abid A, 2014, PROCEDIA COMPUT SCI, V32, P850, DOI 10.1016/j.procs.2014.05.501
   Ahmad AAS, 2022, J CLOUD COMPUT-ADV S, V11, DOI 10.1186/s13677-021-00277-z
   Allspaw J, 2012, COMMUN ACM, V55, P48, DOI [10.1145/2347736.2347751, 10.1145/2347738.2347751]
   Anderson D., What is APM? Application performance monitoring in a cloud-native world
   [Anonymous], 2024, Grafana
   [Anonymous], 2022, Camunda
   [Anonymous], 2024, Shopify
   [Anonymous], 2024, NBomber
   [Anonymous], 2019, The Polly Project
   [Anonymous], 2024, Google
   B.C.I. KOSTENKO, 2023, Antifragile Microservice Systems
   Botros J., 2023, Defragile
   Brogi A, 2022, COMPUTING, V104, P809, DOI 10.1007/s00607-021-00977-z
   C. [Cloud N. C. Foundation], Envoy, take the wheel: real-time adaptive circuit breaking-Tony Allen, Lyft
   Choi J, 2018, J COMPUT INFORM SYST, V58, P325, DOI 10.1080/08874417.2016.1261377
   Dodder R., 2000, ESD 83, P14
   Dykstra T., 2024, Background tasks with hosted services in ASP.NET Core
   Flower Z., 5 benefits of APM for businesses
   Gan Y, 2022, IEEE MICRO, V42, P27, DOI 10.1109/MM.2022.3169445
   Gannon D, 2017, IEEE CLOUD COMPUT, V4, P16, DOI 10.1109/MCC.2017.4250939
   Grassi V., 2024, J. Syst. Softw., V213, DOI [10.1016/j.jss.2024.112051, DOI 10.1016/J.JSS.2024.112051]
   Grassi V, 2023, Software Architectur, P121, DOI 10.1109/ICSA-C57050.2023.00036
   Hillson D., 2023, Continuity & Resilience Review, DOI [10.1108/CRR-10-2022-0026, DOI 10.1108/CRR-10-2022-0026]
   Hole K.J., 2016, Anti-fragile ICT Systems, DOI [10.1007/978-3-319-30070-2, DOI 10.1007/978-3-319-30070-2]
   Hole KJ, 2022, COMPUTING, V104, P73, DOI 10.1007/s00607-020-00895-6
   Jones KH, 2014, PROCEDIA COMPUT SCI, V32, P870, DOI 10.1016/j.procs.2014.05.504
   Kalbarczyk ZT, 1999, IEEE T PARALL DISTR, V10, P560, DOI 10.1109/71.774907
   Keating C, 2013, QUANT FINANC, V13, P1693, DOI 10.1080/14697688.2013.830860
   Kleiman D., Adaptive concurrency control for mixed analytical workloads
   Kratzke N, 2022, FUTURE INTERNET, V14, DOI 10.3390/fi14100274
   Kratzke N, 2017, J SYST SOFTWARE, V126, P1, DOI 10.1016/j.jss.2017.01.001
   Kumar V., Handling overload with concurrency control and load shedding-part 2
   LITTLE JDC, 1961, OPER RES, V9, P383, DOI 10.1287/opre.9.3.383
   Liu GZ, 2020, COMPANION OF THE 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS-C 2020), P629, DOI [10.1109/QRS-051114.2020.00107, 10.1109/QRS-C51114.2020.00107]
   Liu JS, 2022, IEEE T PARALL DISTR, V33, P3349, DOI 10.1109/TPDS.2022.3151512
   Liu L, 2016, IEEE T SERV COMPUT, V9, P661, DOI 10.1109/TSC.2016.2602898
   Ma C., Failure mitigation for microservices: an intro to aperture
   Meiklejohn CS, 2021, PROCEEDINGS OF THE 2021 ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC '21), P388, DOI 10.1145/3472883.3487005
   Monperrus M., 2017, ACM INT C PROCEEDING, P1, DOI DOI 10.1145/3079368.3079412
   Monperrus M, 2015, Arxiv, DOI arXiv:1502.00821
   Naqvi MA, 2022, 2022 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND SELF-ORGANIZING SYSTEMS (ACSOS 2022), P1, DOI 10.1109/ACSOS55765.2022.00018
   Netflix, 2023, Netflix concurrency limits
   Netflix Technology Blog, Performance under load
   Nguyen Q.-M., Gitaly adaptive concurrency limit
   Pierce T, 2021, PROC SPIE, V11753, DOI 10.1117/12.2584986
   prometheus, Prometheus
   Rai R., Automatic instrumentation of containerized.NET applications with OpenTelemetry
   Rosenthal C., 2020, Chaos engineering: system resiliency in practice
   Rossi B., 2023, Antifragile microservice systems, supervisor's review
   Russo D, 2017, PROCEDIA COMPUT SCI, V109, P929, DOI 10.1016/j.procs.2017.05.426
   Russo D, 2016, PROCEDIA COMPUT SCI, V83, P982, DOI 10.1016/j.procs.2016.04.196
   Scholl B., 2019, Cloud native: using containers, functions, and data to build next-generation applications
   Shahid MA, 2021, COMPUT SCI REV, V40, DOI 10.1016/j.cosrev.2021.100398
   Simonsson J, 2021, FUTURE GENER COMP SY, V122, P117, DOI 10.1016/j.future.2021.04.001
   Subedi D, 2013, COMPET REV, V23, P296, DOI 10.1108/10595421311319852
   Taleb N., 2011, A map and simple heuristic to detect fragility, antifragility, and model error, DOI DOI 10.2139/SSRN.1864633
   Tawfeeg TM, 2022, IEEE ACCESS, V10, P71853, DOI 10.1109/ACCESS.2022.3188645
   Tolk A., 2013, INT ANN C AM SOC ENG, P118
   Welsh T, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3388922
   Yanacek D., Amazon Web Services
   Zoghi P, 2016, ACM T AUTON ADAP SYS, V10, DOI 10.1145/2822896
NR 61
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2024
VL 174
AR 107519
DI 10.1016/j.infsof.2024.107519
EA JUN 2024
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XK2W7
UT WOS:001261523700001
OA hybrid
DA 2024-08-05
ER

PT J
AU Vacheret, R
   Pérez, F
   Ziadia, T
   Hillah, L
AF Vacheret, Romain
   Perez, Francisca
   Ziadia, Tewfik
   Hillah, Lom
TI Boosting fault localization of statements by combining topic modeling
   and Ochiai
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Fault localization; Topic modeling; Information retrieval fault
   localization; Spectrum-based fault localization
ID BUG LOCALIZATION; SOFTWARE; RANKING
AB Context: Reducing the cost of maintenance tasks by fixing bugs automatically is the cornerstone of Automated Program Repair (APR). To do this, automated Fault Localization (FL) is essential. Two families of FL techniques are Spectrum -based Fault Localization (SBFL) and Information Retrieval Fault Localization (IRFL). In SBFL, the coverage information and execution results of test cases are utilized. Ochiai is one of the most effective and used SBFL strategies. In IRFL, the bug report information is utilized as well as the identifier names and comments in source code files. Latent Dirichlet Allocation (LDA) is a generative statistical model and one of the most popular topic modeling methods. However, LDA has been used at the method level of granularity as IRFL technique, whereas most existing APR tools are focused on the statement level. Objective: This paper presents our approach that combines topic modeling and Ochiai to boost FL at the statement level. Method: We evaluate our approach considering five different projects in Defects4J benchmark. We report the performance of our approach in terms of hit@k and MRR. To study the impact on the results, we compare our approach against five baselines: two SBFL approaches (Ochiai and Dstar), two IRFL approaches (LDA and Blues), and one hybrid approach (SBIR). In addition, we compare the number of bugs that are found by our approach with the baselines. Results: Our approach significantly outperforms the baselines in all metrics. Especially, when hit@1, hit@3 and hit@5 are compared. Also, our approach locates more bugs than Ochiai and Blues. Conclusion: The results of our approach indicate that the integration of topic modeling with Ochiai boosts FL. This uncovers the potential of topic modeling for FL at statement level, which is valuable for the APR community.
C1 [Vacheret, Romain; Ziadia, Tewfik] Sorbonne Univ, LIP6, CNRS, Campus Pierre & Marie Curie 4 Pl Jussieu, F-75005 Paris, France.
   [Perez, Francisca] Univ San Jorge, SVIT Res Grp, Autovia A-23 Zaragoza Huesca Km 299, Zaragoza 50830, Spain.
   [Hillah, Lom] NewCo Partners, La Grande Arche-Paroi Nord 1, F-92044 Paris, France.
C3 Centre National de la Recherche Scientifique (CNRS); Sorbonne
   Universite; Universidad San Jorge
RP Vacheret, R (corresponding author), Sorbonne Univ, LIP6, CNRS, Campus Pierre & Marie Curie 4 Pl Jussieu, F-75005 Paris, France.
EM romain.vacheret@lip6.fr; mfperez@usj.es; tewfik.ziadi@lip6.fr;
   lom.hillah@newco-partners.com
FU Ministry of Economy and Competitiveness (MINECO) through the Spanish
   National R +D +i Plan; ERDF funds under the Project VARIATIVA
   [PID2021-128695OB-I00]; Gobierno de Aragon (Spain) [S05_20D]
FX This work was supported in part by the Ministry of Economy and
   Competitiveness (MINECO) through the Spanish National R +D +i Plan and
   ERDF funds under the Project VARIATIVA under Grant PID2021-128695OB-I00
   and in part by the Gobierno de Aragon (Spain) (Research Group S05_20D).
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Almhana R, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106474
   Almhana R, 2016, IEEE INT CONF AUTOM, P286, DOI 10.1145/2970276.2970344
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Barros Mrciode Oliveira., 2011, RELATE DIA, V5
   Biggers LR, 2014, EMPIR SOFTW ENG, V19, P465, DOI 10.1007/s10664-012-9224-x
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Borda J.d., 1781, Hist. l'Acad. R. Sci.
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Christou S., 2015, Cobertura
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Hill E, 2009, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2009.5070524
   Hoffmann M.R., 2009, Jacoco
   Jelodar H, 2019, MULTIMED TOOLS APPL, V78, P15169, DOI 10.1007/s11042-018-6894-4
   Jones J.A., 2005, Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering, P273
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Khatiwada S, 2020, INT C PROGRAM COMPRE, P252, DOI 10.1145/3387904.3389280
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Koyuncu A, 2019, Arxiv, DOI arXiv:1902.02703
   Koyuncu A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P314, DOI 10.1145/3338906.3338935
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Le TDB, 2015, EMPIR SOFTW ENG, V20, P1237, DOI 10.1007/s10664-014-9349-1
   Li Z, 2020, P INT COMP SOFTW APP, P991, DOI 10.1109/COMPSAC48688.2020.0-142
   Linstead E., 2007, Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering, P461
   Liu K, 2019, IEEE INT CONF SOFTW, P102, DOI 10.1109/ICST.2019.00020
   Liu K, 2018, PROC IEEE INT CONF S, P275, DOI 10.1109/ICSME.2018.00037
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Mahmoud A, 2015, REQUIR ENG, V20, P281, DOI 10.1007/s00766-013-0199-y
   Maskeri G., 2008, ISEC 08, P113, DOI DOI 10.1145/1342211.1342234
   Moreno L, 2014, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME.2014.37
   Motwani M, 2023, PROC INT CONF SOFTW, P1225, DOI 10.1109/ICSE48619.2023.00109
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Parnin C., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis ISSTA, P199
   Pearson S., 2016, Tech. Rep. UWCSE-16-08-03
   Pérez F, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106676
   Poshyvanyk D, 2006, INT C PROGRAM COMPRE, P137, DOI 10.1109/ICPC.2006.17
   Rahman MM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P621, DOI 10.1145/3236024.3236065
   Rahman S, 2016, ENASE: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL SOFTWARE APPROACHES TO SOFTWARE ENGINEERING, P303, DOI 10.5220/0005896403030309
   Ribeiro HL, 2018, IEEE INT CONF SOFTW, P404, DOI 10.1109/ICST.2018.00048
   Robertson SE, 2000, INFORM PROCESS MANAG, V36, P95, DOI 10.1016/S0306-4573(99)00046-1
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Silva A, 2023, Arxiv, DOI arXiv:2111.12513
   Sisman B, 2013, IEEE WORK CONF MIN S, P309, DOI 10.1109/MSR.2013.6624044
   Steimann F., 2013, P 2013 INT S SOFTW T, P314
   Strohman T., 2005, P INT C INT AN, V2, P2
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang Q, 2015, P 2015 INT S SOFTW T, P1
   Wang SW, 2016, J SOFTW-EVOL PROC, V28, P921, DOI 10.1002/smr.1801
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Wong S.M., 1985, P 8 ANN INT ACM SIGI, P18
   Wong W. Eric, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P42
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Xuan-Hieu P., 2008, Jgibblda
   Yang DH, 2018, LECT NOTES COMPUT SC, V11293, P33, DOI 10.1007/978-3-030-04272-1_3
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Ye X, 2016, IEEE T SOFTWARE ENG, V42, P379, DOI 10.1109/TSE.2015.2479232
   Youm KC, 2015, ASIA PAC SOFWR ENG, P190, DOI 10.1109/APSEC.2015.23
   Yuan Y, 2020, IEEE T SOFTWARE ENG, V46, P1040, DOI 10.1109/TSE.2018.2874648
   Zhang W, 2019, INFORM SOFTWARE TECH, V110, P121, DOI 10.1016/j.infsof.2019.03.001
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 69
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2024
VL 173
AR 107499
DI 10.1016/j.infsof.2024.107499
EA MAY 2024
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UM2W6
UT WOS:001248422400001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Mak, CH
   Cheung, SC
AF Mak, Ching Hang
   Cheung, Shing-Chi
TI Automatic build repair for test cases using incompatible Java versions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Maintenance engineering; Java; Tools; Software engineering
ID TOOL
AB Context: Bug bisection is a common technique used to identify a revision that introduces a bug or indirectly fixes a bug, and often involves executing multiple revisions of a project to determine whether the bug is present within the revision. However, many legacy revisions often cannot be successfully compiled due to changes in the programming language or tools used in the compilation process, adding complexity and preventing automation in the bisection process. Objective: In this paper, we introduce an approach to repair test cases of Java projects by performing dependency minimization. Our approach aims to remove classes and methods that are not required for the execution of one or more test cases. Unlike existing state-of-the-art techniques, our approach performs minimization at source-level, which allows compile-time errors to be fixed. Methods: A standalone Java tool implementing our technique was developed, and we evaluated our technique using subjects from Defects4J retargeted against Java 8 and 17. Results: Our evaluation showed that a majority of subjects can be repaired solely by performing minimization, including replicating the test results of the original version. Furthermore, our technique is also shown to achieve accurate minimized results, while only adding a small overhead to the bisection process. Conclusion: Our proposed technique is shown to be effective for repairing build failures with minimal overhead, making it suitable for use in automated bug bisection. Our tool can also be adapted for use cases such as bug corpus creation and refactoring.
C1 [Mak, Ching Hang; Cheung, Shing-Chi] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
C3 Hong Kong University of Science & Technology
RP Mak, CH (corresponding author), Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
EM chmakac@connect.ust.hk; scc@cse.ust.hk
FU Hong Kong RGC/GRF [16207120]
FX This research is partially supported by the Hong Kong RGC/GRF grant
   number 16207120.
CR Baqais AAB, 2020, SOFTWARE QUAL J, V28, P459, DOI 10.1007/s11219-019-09477-y
   Barowski LA, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P309, DOI 10.1109/WCRE.2002.1173088
   Cathcart-Rake EJ, 2021, SUPPORT CARE CANCER, V29, P6253, DOI 10.1007/s00520-021-06190-0
   Chhatbar D, 2020, LECT NOTES ARTIF INT, V12163, P106, DOI 10.1007/978-3-030-52237-7_9
   Durieux T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P302, DOI 10.1145/3338906.3338911
   Hassan F, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1078, DOI 10.1145/3180155.3180181
   Hassan F, 2017, INT SYMP EMP SOFTWAR, P38, DOI 10.1109/ESEM.2017.11
   Heo K, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P380, DOI 10.1145/3243734.3243838
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Kalhauge CG, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P556, DOI 10.1145/3338906.3338956
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Macho C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P106, DOI 10.1109/SANER.2018.8330201
   Malecha G, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1504, DOI 10.1145/2695664.2695751
   Mesbah A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P925, DOI 10.1145/3338906.3340455
   Nanthaamornphong A, 2015, 2015 7TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY AND ELECTRICAL ENGINEERING (ICITEE), P6, DOI 10.1109/ICITEED.2015.7408903
   Ness B, 1997, P INT COMP SOFTW APP, P616, DOI 10.1109/CMPSAC.1997.625082
   New Relic Inc, 2022, 2022 State of the Java ecosystem
   Pinzger M, 2008, INT C PROGRAM COMPRE, P252, DOI 10.1109/ICPC.2008.23
   Plumbr, 2017, Java version and vendor data analyzed: 2017 edition
   Qian CX, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1733
   Regehr J, 2012, ACM SIGPLAN NOTICES, V47, P335, DOI 10.1145/2345156.2254104
   Saha RK, 2018, IEEE WORK CONF MIN S, P10, DOI 10.1145/3196398.3196473
   Sharif H, 2018, IEEE INT CONF AUTOM, P329, DOI 10.1145/3238147.3238160
   Smaragdakis Y, 2015, LECT NOTES COMPUT SC, V9458, P485, DOI 10.1007/978-3-319-26529-2_26
   Sun CN, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P361, DOI 10.1145/3180155.3180236
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1838
   Vassallo C, 2018, INT C PROGRAM COMPRE, P41, DOI 10.1145/3196321.3196350
   Xie T., 2007, Proceedings of the Second International Workshop on Automation of Software Test, AST '07, P5
   Xin Q, 2020, IEEE INT CONF AUTOM, P224, DOI 10.1145/3324884.3416644
   Zhang C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P176, DOI 10.1145/3338906.3338917
   Zhong H, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10304-z
   Zhong H, 2021, Arxiv, DOI arXiv:2105.02389
   Zhong H, 2017, IEEE INT CONF AUTOM, P671, DOI 10.1109/ASE.2017.8115677
NR 33
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2024
VL 172
AR 107473
DI 10.1016/j.infsof.2024.107473
EA MAY 2024
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TE6J4
UT WOS:001239622100001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Pentangelo, V
   Di Dario, D
   Lambiase, S
   Ferrucci, F
   Gravino, C
   Palomba, F
AF Pentangelo, Viviana
   Di Dario, Dario
   Lambiase, Stefano
   Ferrucci, Filomena
   Gravino, Carmine
   Palomba, Fabio
TI SENEM: A software engineering-enabled educational metaverse
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Metaverse engineering; Virtual learning environments; Human-centered
   studies; Software engineering in practice
ID LIFE
AB Context: The term metaverse refers to a persistent, virtual, three-dimensional environment where individuals may communicate, engage, and collaborate. One of the most multifaceted and challenging use cases of the metaverse is education, where educators and learners may require multiple technical, social, psychological, and interaction instruments to accomplish their learning objectives. While the characteristics of the metaverse might nicely fit the problem's needs, our research points out a noticeable lack of knowledge into (1) the specific requirements that an educational metaverse should actually fulfill to let educators and learners successfully interact towards their objectives and (2) how to design an appropriate educational metaverse for both educators and learners. Objective: In this paper, we aim to bridge this knowledge gap by proposing SENEM , a novel software engineering -enabled educational metaverse. We first elicit a set of functional requirements that an educational metaverse should fulfill. Method: In this respect, we conduct a literature survey to extract the currently available knowledge on the matter discussed by the research community, and afterward, we assess and complement such knowledge through semi -structured interviews with educators and learners. Upon completing the requirements elicitation stage, we then build our prototype implementation of SENEM , a metaverse that makes available to educators and learners the features identified in the previous stage. Finally, we evaluate the tool in terms of learnability, efficiency, and satisfaction through a Rapid Iterative Testing and Evaluation research approach, leading us to the iterative refinement of our prototype. Results: Through our survey strategy, we extracted nine requirements that guided the tool development that the study participants positively evaluated. Conclusion: Our study reveals that the target audience appreciates the elicited design strategy. Our work has the potential to form a solid contribution that other researchers can use as a basis for further improvements.
C1 [Pentangelo, Viviana; Di Dario, Dario; Lambiase, Stefano; Ferrucci, Filomena; Gravino, Carmine; Palomba, Fabio] Univ Salerno, Dept Comp Sci, Software Engn SeSa Lab, Salerno, Italy.
C3 University of Salerno
RP Pentangelo, V (corresponding author), Via Giovanni Paolo II 132, Fisciano, SA, Italy.
EM vpentangelo@unisa.it; ddidario@unisa.it; slambiase@unisa.it;
   fferrucci@unisa.it; gravino@unisa.it; fpalomba@unisa.it
RI Lambiase, Stefano/AHC-0909-2022
OI Lambiase, Stefano/0000-0002-9933-6203; FERRUCCI,
   Filomena/0000-0002-0975-8972; Pentangelo, Viviana/0009-0003-1425-9398
FX The authors would like to thank the Editor and anonymous Review-ers for
   their insightful comments on our paper. The authors would like to thank
   the participants who contributed to SENEM evaluation and requirements
   assessment.
CR August SE, 2016, IEEE T LEARN TECHNOL, V9, P18, DOI 10.1109/TLT.2015.2419253
   Aydogan Hakan, 2022, International Journal of Electrical Engineering Education, V59, P266, DOI 10.1177/0020720919856249
   Bali S., 2018, Journal of Physics: Conference Series, V1108, P012094, DOI [DOI 10.1088/1742-6596/1108/1/012094, 10.1088/1742-6596/1108/1/012094]
   Baltes S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10072-8
   Basilaia G., 2020, Pedagogical Research, V5, P1, DOI [10.29333/pr/7937, DOI 10.29333/PR/7937]
   Bilotti U, 2023, IEEE ICCE, DOI 10.1109/ICCE56470.2023.10043465
   Brooke J., 1996, USABILITY EVALUATION, P189, DOI DOI 10.1201/9781498710411-35
   Cavanagh S, 1997, Nurse Res, V4, P5, DOI 10.7748/nr.4.3.5.s2
   Constantine L.L., 1999, Software for Use: A Practical Guide to the Models and Methods of Usage-Centered Design
   De Lucia A, 2009, COMPUT EDUC, V52, P220, DOI 10.1016/j.compedu.2008.08.001
   Deng Q, 2022, FRONT PSYCHOL, V13, DOI 10.3389/fpsyg.2022.767925
   Dionisio JDN, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2480741.2480751
   Dörr JB, 2023, 2023 INTERNATIONAL CONFERENCE ON INTELLIGENT METAVERSE TECHNOLOGIES & APPLICATIONS, IMETA, P63, DOI 10.1109/iMETA59369.2023.10294573
   Duan HH, 2021, PROCEEDINGS OF THE 29TH ACM INTERNATIONAL CONFERENCE ON MULTIMEDIA, MM 2021, P153, DOI 10.1145/3474085.3479238
   Fernandes Filipe, 2022, 2022 IEEE Smartworld, Ubiquitous Intelligence & Computing, Scalable Computing & Communications, Digital Twin, Privacy Computing, Metaverse, Autonomous & Trusted Vehicles (SmartWorld/UIC/ScalCom/DigitalTwin/PriComp/Meta), P2413, DOI 10.1109/SmartWorld-UIC-ATC-ScalCom-DigitalTwin-PriComp-Metaverse56740.2022.00338
   Fernandes FA, 2022, PRESENCE-VIRTUAL AUG, V31, P107, DOI 10.1162/pres_a_00371
   Fernandes FA, 2023, IEEE T LEARN TECHNOL, V16, P736, DOI 10.1109/TLT.2023.3242553
   Flanigan T.S., 2008, P SURVEY RES METHODS, P4136
   Hair JF, 2007, EDUC TRAIN, V49, P336, DOI 10.1108/et.2007.49.4.336.2
   Hove SE, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P201
   Jimenez C, 2016, COMPUT COLOMB CONF
   Jovanovic A, 2022, ELECTRONICS-SWITZ, V11, DOI 10.3390/electronics11030317
   Kitchenham B. e. a., 2007, Technical report EBSE-2007-01, DOI DOI 10.1145/1134285.1134500
   Klement M, 2017, COMPUT EDUC, V105, P31, DOI 10.1016/j.compedu.2016.11.006
   Lee L H., 2021, PREPRINT
   Lu J, 2022, ETR&D-EDUC TECH RES, V70, P1951, DOI 10.1007/s11423-022-10152-6
   Medlock M.C., 2005, Cost-Justifying Usability, P489, DOI [DOI 10.1016/B978-012095811-5/50017-1, 10.1016/B978-012095811-5/50017-1]
   Medlock Michael C., 2018, Games User Res., P203
   López GAM, 2022, XV INTERNATIONAL CONFERENCE OF TECHNOLOGY, LEARNING AND TEACHING OF ELECTRONICS (TAEE 2022), DOI 10.1109/TAEE54169.2022.9840630
   Mystakidis S., 2022, ENCYCLOPEDIA, V2, P486, DOI [https://doi.org/10.3390/encyclopedia2010031, 10.3390/encyclopedia2010031, DOI 10.3390/ENCYCLOPEDIA2010031]
   Ng Peter H. F., 2022, Blended Learning: Engaging Students in the New Normal Era: 15th International Conference, ICBL 2022, Proceedings. Lecture Notes in Computer Science (13357), P74, DOI 10.1007/978-3-031-08939-8_7
   NIELSEN J, 1992, COMPUTER, V25, P12, DOI 10.1109/2.121503
   Nuseibeh B., 2000, Proceedings of the Conference on the Future of Software Engineering, P35, DOI DOI 10.1145/336512.336523
   O'Donoghue J, 2001, BRIT J EDUC TECHNOL, V32, P511, DOI 10.1111/1467-8535.00221
   Park SM, 2022, IEEE ACCESS, V10, P4209, DOI 10.1109/ACCESS.2021.3140175
   Pentangelo V., 2023, A novel software engineering-enabled educational metaverse
   Pokhrel S., 2021, Higher Education for the Future, V8, P133, DOI [DOI 10.1177/2347631120983481, https://doi.org/10.1177/2347631120983481]
   Ritterbusch G.D., 2023, Defining the metaverse: A systematic literature review
   Roy R, 2023, IEEE ACCESS, V11, P57717, DOI 10.1109/ACCESS.2023.3283273
   Schaf F.M., 2012, 2012 IEEE GLOB ENG E, P1
   Shen TY, 2023, IEEE T SYST MAN CY-S, V53, P3501, DOI 10.1109/TSMC.2022.3228270
   Sin Z. P., 2023, IEEE Transactions on Learning Technologies
   Song Y., 2023, IEEE Trans. Learn. Technol.
   Stephenson N., 1992, Snow crash
   Zhang XL, 2022, FRONT PSYCHOL, V13, DOI 10.3389/fpsyg.2022.1016300
NR 45
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2024
VL 174
AR 107512
DI 10.1016/j.infsof.2024.107512
EA JUN 2024
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WS6T4
UT WOS:001256909200001
OA hybrid
DA 2024-08-05
ER

PT J
AU Xiao, W
   Hou, ZZ
   Wang, T
   Zhou, CX
   Pan, C
AF Xiao, Wei
   Hou, Zhengzhang
   Wang, Tao
   Zhou, Chengxian
   Pan, Chao
TI MSGVUL: Multi-semantic integration vulnerability detection based on
   relational graph convolutional neural networks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Vulnerability detection; Code representation; Program slicing; Graph
   convolutional neural networks
AB Software security has drawn extensive attention as software projects have grown increasingly large and complex. Since the traditional manual or equipment vulnerability detection technology cannot meet today's software development needs, there is a recognized need to create more effective techniques to address security issues. Although various vulnerability detection systems have been proposed, most are based only on serialization or graph representation, to inadequate effect. We propose a system, MSGVUL, that provides superior vulnerability detection using a new multi-semantic approach. MSGVUL uses versatile and efficient code slicing employing a search algorithm based on sensitive data and functions and innovatively constructs an SSVEC model to fully integrate the semantic and structural information into the code. We also developed a novel BAG model, made up of BAP and PAG frameworks, that enables the hierarchical extraction of code vulnerability representations from the graph and sequence levels. The MSGVUL model is evaluated on slice-level and function-level vulnerability datasets, and the results demonstrate that the MSGVUL method outperforms other state-of-the-art methods.
C1 [Xiao, Wei; Wang, Tao; Zhou, Chengxian; Pan, Chao] Changchun Univ Technol, Sch Comp Sci & Engn, Changchun 130012, Jilin, Peoples R China.
   [Hou, Zhengzhang] Jilin Univ, Coll Software, Changchun 130012, Jilin, Peoples R China.
C3 Changchun University of Technology; Jilin University
RP Pan, C (corresponding author), Changchun Univ Technol, Sch Comp Sci & Engn, Changchun 130012, Jilin, Peoples R China.
EM kerwinpc@ccut.edu.cn
FU Education Department of Jilin Province [JJKH20220691KJ]
FX This research was funded by the Education Department of Jilin Province
   (JJKH20220691KJ) . During the creation of this manuscript, LetPub (
   www.letpub.com ) provided language support. We are really appreciative
   to the anonymous reviewers for their helpful suggestions and comments.
CR [Anonymous], 2021, SARD: A software assurance reference dataset
   [Anonymous], 2021, Nvd: National vulnerability database
   Backes M, 2009, P IEEE S SECUR PRIV, P141, DOI 10.1109/SP.2009.18
   Bojanowski Piotr, 2017, T ASSOC COMPUT LING, V5, P135, DOI [10.48550/arXiv.1607.04606, DOI 10.1162/TACLA00051]
   Bosu A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P257, DOI 10.1145/2635868.2635880
   Cheng X, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P519, DOI 10.1145/3533767.3534371
   Cheng X, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3436877
   Godefroid Patrice, 2008, NDSS, P151
   Grieco G, 2016, CODASPY'16: PROCEEDINGS OF THE SIXTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY, P85, DOI 10.1145/2857705.2857720
   Grover A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P855, DOI 10.1145/2939672.2939754
   Joern, 2019, About us
   Kim S, 2017, P IEEE S SECUR PRIV, P595, DOI 10.1109/SP.2017.62
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, Arxiv, DOI arXiv:1801.01681
   Li Z, 2016, ANN COMPUT SECURITY, P201, DOI 10.1145/2991079.2991102
   Li Zhou, 2021, 2021 IEEE Sixth International Conference on Data Science in Cyberspace (DSC), P381, DOI 10.1109/DSC53577.2021.00060
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P1, DOI DOI 10.48550/ARXIV.1310.4546
   Moshtari S., 2016, P 31 ANN ACM S APPL, P1415, DOI DOI 10.1145/2851613.2851777
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Pistoia M, 2007, IBM SYST J, V46, P265, DOI 10.1147/sj.462.0265
   Schlichtkrull M, 2018, LECT NOTES COMPUT SC, V10843, P593, DOI 10.1007/978-3-319-93417-4_38
   Shankar U, 2001, USENIX ASSOCIATION PROCEEDINGS OF THE 10TH USENIX SECURITY SYMPOSIUM, P201
   Shar LK, 2015, IEEE T DEPEND SECURE, V12, P688, DOI 10.1109/TDSC.2014.2373377
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Sui YL, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428301
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Wu F, 2017, PROCEEDINGS OF 2017 3RD IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND COMMUNICATIONS (ICCC), P1298, DOI 10.1109/CompComm.2017.8322752
   Yamaguchi F., 2013, ACM SIGSAC C COMPUT, P499
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Younis A, 2016, CODASPY'16: PROCEEDINGS OF THE SIXTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY, P97, DOI 10.1145/2857705.2857750
   Zheng WN, 2021, PROC INT SYMP SOFTW, P457, DOI 10.1109/ISSRE52982.2021.00054
   Zhou Y., 2019, Advances in Neural Information Processing Systems, P32
   Zhuang Y., 2021, arXiv
NR 34
TC 0
Z9 0
U1 4
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2024
VL 170
AR 107442
DI 10.1016/j.infsof.2024.107442
EA MAR 2024
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PT1Z1
UT WOS:001216255800001
OA hybrid
DA 2024-08-05
ER

PT J
AU Naveed, H
   Arora, C
   Khalajzadeh, H
   Grundy, J
   Haggag, O
AF Naveed, Hira
   Arora, Chetan
   Khalajzadeh, Hourieh
   Grundy, John
   Haggag, Omar
TI Model driven engineering for machine learning components: A systematic
   literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Model driven engineering; Software engineering; Artificial intelligence;
   Machine learning; Systematic literature review
ID MDE
AB Context: Machine Learning (ML) has become widely adopted as a component in many modern software applications. Due to the large volumes of data available, organizations want to increasingly leverage their data to extract meaningful insights and enhance business profitability. ML components enable predictive capabilities, anomaly detection, recommendation, accurate image and text processing, and informed decisionmaking. However, developing systems with ML components is not trivial; it requires time, effort, knowledge, and expertise in ML, data processing, and software engineering. There have been several studies on the use of model-driven engineering (MDE) techniques to address these challenges when developing traditional software and cyber-physical systems. Recently, there has been a growing interest in applying MDE for systems with ML components. Objective: The goal of this study is to further explore the promising intersection of MDE with ML (MDE4ML) through a systematic literature review (SLR). Through this SLR, we wanted to analyze existing studies, including their motivations, MDE solutions, evaluation techniques, key benefits and limitations. Method: Our SLR is conducted following the well-established guidelines by Kitchenham. We started by devising a protocol and systematically searching seven databases, which resulted in 3934 papers. After iterative filtering, we selected 46 highly relevant primary studies for data extraction, synthesis, and reporting. Results: We analyzed selected studies with respect to several areas of interest and identified the following: (1) the key motivations behind using MDE4ML; (2) a variety of MDE solutions applied, such as modeling languages, model transformations, tool support, targeted ML aspects, contributions and more; (3) the evaluation techniques and metrics used; and (4) the limitations and directions for future work. We also discuss the gaps in existing literature and provide recommendations for future research. Conclusion: This SLR highlights current trends, gaps and future research directions in the field of MDE4ML, benefiting both researchers and practitioners.
C1 [Naveed, Hira; Arora, Chetan; Grundy, John; Haggag, Omar] Monash Univ, Clayton, Vic, Australia.
   [Khalajzadeh, Hourieh] Deakin Univ, Burwood, Vic, Australia.
C3 Monash University; Deakin University
RP Naveed, H (corresponding author), Monash Univ, Clayton, Vic, Australia.
EM hira.naveed@monash.edu; chetan.arora@monash.edu;
   hourieh.khalajzadeh@deakin.edu.au; john.grundy@monash.edu;
   omar.haggag@monash.edu
RI Khalajzadeh, Hourieh/AAR-6188-2020; Grundy, John/I-6681-2012
OI Khalajzadeh, Hourieh/0000-0001-9958-0102; Grundy,
   John/0000-0003-4928-7076; Naveed, Hira/0000-0002-0045-4577; Arora,
   Chetan/0000-0003-1466-7386
FU Faculty of IT PhD scholarship; ARC Laureate Fellowship [FL190100035];
   ARC Discovery Project [DP200100020]
FX Naveed is supported by a Faculty of IT PhD scholarship. Grundy is
   supported by ARC Laureate Fellowship FL190100035. This work has been
   partially supported by ARC Discovery Project DP200100020.
CR Ahmad K, 2023, INFORM SOFTWARE TECH, V158, DOI 10.1016/j.infsof.2023.107176
   Almonte L, 2022, SOFTW SYST MODEL, V21, P249, DOI 10.1007/s10270-021-00905-x
   Arora C, 2023, Arxiv, DOI arXiv:2310.13976
   Atouani Abdallah, 2021, GPCE 2021: Proceedings of the 20th ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences, P55, DOI 10.1145/3486609.3487199
   Barzdins P, 2022, BALT J MOD COMPUT, V10, P17, DOI 10.22364/bjmc.2022.10.1.02
   Baumann N, 2022, ACM/IEEE 25TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, MODELS 2022 COMPANION, P359, DOI 10.1145/3550356.3561568
   Benni B, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P605, DOI 10.1109/MODELS-C.2019.00092
   Bhattacharjee A, 2019, IEEE INT CONF BIG DA, P1607, DOI 10.1109/BigData47090.2019.9006518
   Brambilla Marco., 2017, Model-Driven Software Engineering in Practice, VSecond
   Braun M L., 2018, Implementing Reproducible Research, P343
   Bucchiarone A, 2020, SOFTW SYST MODEL, V19, P5, DOI 10.1007/s10270-019-00773-6
   Cabot J., 2020, P 23 ACM IEEE INT C, P1, DOI 10.1145/3417990.3420210
   Ciccozzi F, 2019, SOFTW SYST MODEL, V18, P2313, DOI 10.1007/s10270-018-0675-4
   Duong H.-T., 2021, Computational Social Networks, V8, P1, DOI [DOI 10.1186/S40649-020-00080-X, 10.1186/s40649-020-00080-x]
   Eriksson H.E., 2003, UML 2 TOOLKIT
   Galway L, 2008, ARTIF INTELL REV, V29, P123, DOI 10.1007/s10462-009-9112-y
   Gatto N, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P196, DOI 10.1109/MODELS-C.2019.00033
   Geron A., 2022, Hands-on Machine Learning with Scikit-Learn, Keras, and TensorFlow
   Ghassemi Marzyeh, 2020, AMIA Jt Summits Transl Sci Proc, V2020, P191
   Gil Y, 2021, ACM T INTERACT INTEL, V11, DOI 10.1145/3453172
   Giner-Miguelez J, 2023, J COMPUT LANG, V76, DOI 10.1016/j.cola.2023.101209
   Goodell JW, 2021, J BEHAV EXP FINANC, V32, DOI 10.1016/j.jbef.2021.100577
   Hidellaarachchi D, 2022, IEEE T SOFTWARE ENG, V48, P2105, DOI 10.1109/TSE.2021.3051898
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   Jahic B, 2023, INFORMATION, V14, DOI 10.3390/info14040213
   Kelly S., 2008, Domain-Specific Modeling-Enabling Full Code Generation
   Khalajzadeh H, 2020, J COMPUT LANG, V58, DOI 10.1016/j.cola.2020.100964
   Khomh F, 2018, IEEE SOFTWARE, V35, P81, DOI 10.1109/MS.2018.3571224
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Korani ZM, 2023, SENSORS-BASEL, V23, DOI 10.3390/s23031458
   Koseler K, 2019, MODELSWARD: PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, 2019, P13, DOI 10.5220/0007245800130024
   Kourouklidis P, 2021, 24TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2021), P162, DOI 10.1109/MODELS-C53483.2021.00028
   Kuwajima H, 2020, MACH LEARN, V109, P1103, DOI 10.1007/s10994-020-05872-w
   Lee I, 2020, BUS HORIZONS, V63, P157, DOI 10.1016/j.bushor.2019.10.005
   Li LY, 2022, LECT NOTES COMPUT SC, V13518, P338, DOI 10.1007/978-3-031-21707-4_25
   Lwakatare LE, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106368
   Lwakatare LE, 2019, LECT NOTES BUS INF P, V355, P227, DOI 10.1007/978-3-030-19034-7_14
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Mohagheghi P, 2009, LECT NOTES COMPUT SC, V5421, P54, DOI 10.1007/978-3-642-01648-6_6
   Moin A, 2022, 2022 IEEE 46TH ANNUAL COMPUTERS, SOFTWARE, AND APPLICATIONS CONFERENCE (COMPSAC 2022), P884, DOI 10.1109/COMPSAC54236.2022.00140
   Moin A, 2022, SOFTW SYST MODEL, V21, P987, DOI 10.1007/s10270-021-00967-x
   Mueller J.P., 2021, Machine learning for dummies
   Mussbacher G, 2014, LECT NOTES COMPUT SC, V8767, P183, DOI 10.1007/978-3-319-11653-2_12
   Nigenda D, 2022, PROCEEDINGS OF THE 28TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, KDD 2022, P3671, DOI 10.1145/3534678.3539145
   OMG, Model Driven Architecture (MDA)
   OMG, OMG Standards Development Organization
   PETERSON JL, 1977, COMPUT SURV, V9, P223, DOI 10.1145/356698.356702
   Portugal I, 2016, Arxiv, DOI arXiv:1602.07637
   Portugal I, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SCIENCE, TECHNOLOGY AND ENGINEERING (SWSTE 2016), P108, DOI 10.1109/SWSTE.2016.23
   Rackspace, 2023, AI/ML Report: AI/ML adoption surges despite challenges
   Rädler S, 2024, Arxiv, DOI arXiv:2307.04599
   Ralph P, 2021, Arxiv, DOI arXiv:2010.03525
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Samuel A.L., 1959, The Technology Review, V62, P42
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Shamsujjoha M, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106693
   Volter M., 2013, MODEL DRIVEN SOFTWAR
   Wagner F., 2006, MODELING SOFTWARE FI
   Wirth R., 2000, Proceedings of the Fourth International Conference on the Practical Application of Knowledge Discovery and Data Mining, P29
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wohlin C., 2014, P 18 INT C EV ASS SO, DOI DOI 10.1145/2601248.2601268
   Yohannis A, 2022, PROCEEDINGS OF THE 25TH INTERNATIONAL ACM/IEEE CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, MODELS 2022, P143, DOI 10.1145/3550355.3552401
   Zafar M.N., 2017, P 2017 INT C CLOUD B, P1
   Zantalis F, 2019, FUTURE INTERNET, V11, DOI 10.3390/fi11040094
   Zhang D, 2003, SOFTWARE QUAL J, V11, P87, DOI 10.1023/A:1023760326768
   Zhu Liming., 2022, Humanity Driven AI: Productivity, Well-being, Sustainability and Partnership, P15, DOI [10.1007/978-3-030-72188-6_2, DOI 10.1007/978-3-030-72188-6_2]
NR 67
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2024
VL 169
AR 107423
DI 10.1016/j.infsof.2024.107423
EA FEB 2024
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LP4L7
UT WOS:001187991800001
OA Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Hu, J
   Lei, Y
AF Hu, Jian
   Lei, Yan
TI A deep semantics-aware data augmentation method for fault localization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Imbalanced data; Fault localization; Semantics-aware; Data augmentation
ID CLONING
AB Context: Fault localization (FL) techniques are employed to identify the relationship between program statements and failures by analyzing runtime information. They rely on the statistics of input data to explore the underlying correlation rooted in it. Consequently, the quality of input data is of utmost importance for FL. However, in practice, passing tests significantly outnumber failing tests regarding a fault. This leads to a class imbalance challenge that can adversely affect the effectiveness of FL. Objective: To tackle the issue of imbalanced data in fault localization, we propose PRAM: a deeP semanticawaRe dAta augmentation Method to improve the effectiveness of FL methods. Method: PRAM utilizes program dependencies to enhance the semantic context, thus showing how a failure is caused. Then, PRAM employs mixup method to synthesize new failing test samples by merging two real failing test cases with a random ratio to balance the input data. Finally, PRAM feeds the balanced data consisting of synthesized failing test cases and original test cases to FL techniques. To evaluate the effectiveness of PRAM, we conducted large-scale experiments on 330 versions of nine large-sized real programs for six state -of -the -art FL methods, two data optimization methods and two data augmentation methods. Results: Our experimental results show that PRAM outperforms in most cases for Top-K metrics and reduces the number of checked statements from 40.38% to 80.04% compared with the original FL methods. Furthermore, PRAM reduces the checked statements from 16.92% to 56.98% for data optimization methods and from 12.48% to 26.82% for data augmentation methods. Conclusion: The experimental results show that PRAM is not only more effective than the original FL methods but also more effective than two representative data optimization methods and two data augmentation methods, which indicates that PRAM is a universal effective data augmentation method for various FL methods.
C1 [Hu, Jian; Lei, Yan] Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
C3 Chongqing University
RP Hu, J (corresponding author), Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
EM jianhu@cqu.edu.cn; yanlei@cqu.edu.cn
FU National Key Research and Development Project of China [2020YFB171
   1900]; National Natural Science Foundation of China [61902421]
FX This work is partially supported by the National Key Research and
   Development Project of China (No. 2020YFB171 1900) and the National
   Natural Science Foundation of China (No. 61902421) .
CR Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   Chen MY, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P595, DOI 10.1109/DSN.2002.1029005
   Cheng Gong, 2012, Proceedings of the 2012 IEEE 36th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW), P470, DOI 10.1109/COMPSACW.2012.89
   COLLOFELLO JS, 1989, J SYST SOFTWARE, V9, P191, DOI 10.1016/0164-1212(89)90039-3
   Dallmeier V, 2005, LECT NOTES COMPUT SC, V3586, P528
   Debroy V., 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P13, DOI 10.1109/QSIC.2010.80
   Duda R.O., 2000, Pattern Classification and Scene Analysis
   Gao YC, 2013, INT CONF QUAL SOFTW, P288, DOI 10.1109/QSIC.2013.23
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Gu JX, 2018, PATTERN RECOGN, V77, P354, DOI 10.1016/j.patcog.2017.10.013
   Hao D., 2005, IEEE INT C AUT SOFTW, P291
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hinton G.E., 2013, UCI machine learning repository
   Hinton GE, 2006, NEURAL COMPUT, V18, P1527, DOI 10.1162/neco.2006.18.7.1527
   Hu J, 2023, INFORM SOFTWARE TECH, V157, DOI 10.1016/j.infsof.2023.107148
   Huang G, 2017, PROC CVPR IEEE, P2261, DOI 10.1109/CVPR.2017.243
   Jones JA, 2004, PROC INT CONF SOFTW, P54, DOI 10.1109/ICSE.2004.1317420
   Kochhar P. S., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P165
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Le T.-D. B., 2016, P 25 INT S SOFT TEST, P177
   Le TDB, 2013, PROC IEEE INT CONF S, P380, DOI 10.1109/ICSM.2013.52
   Lei Y, 2023, INT C PROGRAM COMPRE, P304, DOI 10.1109/ICPC58990.2023.00045
   Lei Y, 2022, IEEE T RELIAB, V71, P264, DOI 10.1109/TR.2022.3140453
   Lei Y, 2018, IET SOFTW, V12, P190, DOI 10.1049/iet-sen.2017.0026
   Lei Y, 2012, P INT COMP SOFTW APP, P1, DOI 10.1109/COMPSAC.2012.9
   Lei Y, 2012, IEICE T INF SYST, VE95D, P2247, DOI 10.1587/transinf.E95.D.2247
   Li X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P169, DOI 10.1145/3293882.3330574
   Li X, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133916
   Li XY, 2020, IEEE INT CONF SOFTW, P28, DOI 10.1109/ICST46399.2020.00014
   Li Y, 2021, PROC INT CONF SOFTW, P661, DOI 10.1109/ICSE43902.2021.00067
   Martinez M, 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037.2948705
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Papadakis M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P691, DOI 10.1109/ICST.2012.159
   Russakovsky O, 2015, INT J COMPUT VISION, V115, P211, DOI 10.1007/s11263-015-0816-y
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Tse T.H., 2014, Comput. Rev., V55, P92
   Wang HF, 2020, IEEE ACCESS, V8, P124297, DOI 10.1109/ACCESS.2020.3004145
   Warden P., About Us
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wong WE, 2012, IEEE T RELIAB, V61, P149, DOI 10.1109/TR.2011.2172031
   Wong WE, 2009, INT J SOFTW ENG KNOW, V19, P573, DOI 10.1142/S021819400900426X
   Xiaoyuan Xie, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P224, DOI 10.1007/978-3-642-39742-4_17
   Xie H, 2022, PROC INT CONF SOFTW, P48, DOI 10.1145/3510003.3510136
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xu B., 2005, ACM SIGSOFT Software Engineering Notes, V30, P1, DOI DOI 10.1145/1050849.1050865
   Xu XF, 2011, INT J SOFTW ENG KNOW, V21, P803, DOI 10.1142/S0218194011005505
   Yilmaz C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P81, DOI 10.1145/1368088.1368100
   Yoo S., 2014, No pot of gold at the end of program spectrum rainbow: Greatest risk evaluation formula does not exist
   Zhang CY, 2021, COMMUN ACM, V64, P107, DOI 10.1145/3446776
   Zhang H., 2018, INT C LEARNING REPRE
   Zhang L, 2017, J SYST SOFTWARE, V129, P35, DOI 10.1016/j.jss.2017.04.017
   Zhang Mengshi, 2017, P 26 ACM SIGS INT S, P261, DOI DOI 10.1145/3092703.3092731
   ZHANG X., 2005, AADEBUG 05 P INT S A, P33
   Zhang XY, 2007, EMPIR SOFTW ENG, V12, P143, DOI 10.1007/s10664-006-9007-3
   Zhang Z, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3576043
   Zhang Z, 2022, PROC IEEE INT CONF S, P199, DOI 10.1109/ICSME55016.2022.00026
   Zhang Z, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106486
   Zhang Z, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2312
   Zhang Z, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P445, DOI [10.1109/SANER.2019.8668002, 10.1109/saner.2019.8668002]
   Zhang Z, 2017, IEICE T INF SYST, VE100D, P3027, DOI 10.1587/transinf.2017EDL8143
   Zheng W, 2016, MATH PROBL ENG, V2016, DOI 10.1155/2016/1820454
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 65
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2024
VL 168
AR 107409
DI 10.1016/j.infsof.2024.107409
EA JAN 2024
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JN7Y8
UT WOS:001173925100001
DA 2024-08-05
ER

EF